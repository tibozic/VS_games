/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SCREEN_ASTEROIDSVIEWBASE_HPP
#define SCREEN_ASTEROIDSVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/screen_asteroids_screen/screen_asteroidsPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/ScalableImage.hpp>
#include <touchgfx/widgets/canvas/Shape.hpp>
#include <touchgfx/widgets/canvas/PainterRGB565.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/ButtonWithIcon.hpp>
#include <touchgfx/widgets/TextArea.hpp>

class screen_asteroidsViewBase : public touchgfx::View<screen_asteroidsPresenter>
{
public:
    screen_asteroidsViewBase();
    virtual ~screen_asteroidsViewBase();
    virtual void setupScreen();
    virtual void afterTransition();

    /*
     * Virtual Action Handlers
     */
    virtual void resume_asteroids_task()
    {
        // Override and implement this function in screen_asteroids
    }
    virtual void suspend_asteroids_task()
    {
        // Override and implement this function in screen_asteroids
    }
    virtual void start_asteroids_game()
    {
        // Override and implement this function in screen_asteroids
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Box bg_grey;
    touchgfx::ScalableImage icon_rock;
    touchgfx::Shape<3> icon_ship;
    touchgfx::PainterRGB565 icon_shipPainter;
    touchgfx::TextAreaWithOneWildcard lbl_score;
    touchgfx::Container container_health;
    touchgfx::ScalableImage icon_heart1;
    touchgfx::ScalableImage icon_heart2;
    touchgfx::ScalableImage icon_heart3;
    touchgfx::Container container_controls;
    touchgfx::ButtonWithIcon btn_right;
    touchgfx::ButtonWithIcon btn_down;
    touchgfx::ButtonWithIcon btn_left;
    touchgfx::ButtonWithIcon btn_up;
    touchgfx::ButtonWithIcon btn_shoot;
    touchgfx::Box bullet;
    touchgfx::Container container_game_over;
    touchgfx::Box bg_light_grey;
    touchgfx::ButtonWithIcon btn_retry;
    touchgfx::ButtonWithIcon btn_back;
    touchgfx::TextArea lbl_over;
    touchgfx::Box cover_red;

    /*
     * Wildcard Buffers
     */
    static const uint16_t LBL_SCORE_SIZE = 6;
    touchgfx::Unicode::UnicodeChar lbl_scoreBuffer[LBL_SCORE_SIZE];

private:

    /*
     * Canvas Buffer Size
     */
    static const uint32_t CANVAS_BUFFER_SIZE = 7200;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];

    /*
     * Callback Declarations
     */
    touchgfx::Callback<screen_asteroidsViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // SCREEN_ASTEROIDSVIEWBASE_HPP
