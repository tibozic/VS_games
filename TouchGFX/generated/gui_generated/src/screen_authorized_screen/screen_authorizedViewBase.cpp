/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen_authorized_screen/screen_authorizedViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

screen_authorizedViewBase::screen_authorizedViewBase() :
    flexButtonCallback(this, &screen_authorizedViewBase::flexButtonCallbackHandler)
{
    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    btn_next.setBoxWithBorderPosition(0, 0, 480, 272);
    btn_next.setBorderSize(5);
    btn_next.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    btn_next.setAction(flexButtonCallback);
    btn_next.setPosition(0, 0, 480, 272);
    add(btn_next);

    bg_blue.setPosition(0, 0, 480, 272);
    bg_blue.setColor(touchgfx::Color::getColorFromRGB(62, 83, 173));
    add(bg_blue);

    container_user_data.setPosition(89, 63, 301, 146);
    bg_white.setPosition(0, 0, 300, 146);
    bg_white.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    container_user_data.add(bg_white);

    icon_person.setBitmap(touchgfx::Bitmap(BITMAP_PERSON_ICON_ID));
    icon_person.setPosition(15, 33, 80, 80);
    icon_person.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    container_user_data.add(icon_person);

    lbl_name.setXY(106, 33);
    lbl_name.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    lbl_name.setLinespacing(0);
    Unicode::snprintf(lbl_nameBuffer, LBL_NAME_SIZE, "%s", touchgfx::TypedText(T_USER_NAME).getText());
    lbl_name.setWildcard(lbl_nameBuffer);
    lbl_name.resizeToCurrentText();
    lbl_name.setTypedText(touchgfx::TypedText(T___SINGLEUSE_XBZ0));
    container_user_data.add(lbl_name);

    lbl_tag.setXY(105, 89);
    lbl_tag.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    lbl_tag.setLinespacing(0);
    Unicode::snprintf(lbl_tagBuffer, LBL_TAG_SIZE, "%s", touchgfx::TypedText(T_USER_TAG_ID).getText());
    lbl_tag.setWildcard(lbl_tagBuffer);
    lbl_tag.resizeToCurrentText();
    lbl_tag.setTypedText(touchgfx::TypedText(T___SINGLEUSE_YUQU));
    container_user_data.add(lbl_tag);

    add(container_user_data);
}

screen_authorizedViewBase::~screen_authorizedViewBase()
{

}

void screen_authorizedViewBase::setupScreen()
{

}

void screen_authorizedViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &btn_next)
    {
        //next_screen
        //When btn_next clicked change screen to screen_game_select
        //Go to screen_game_select with screen transition towards East
        application().gotoscreen_game_selectScreenSlideTransitionEast();
    }
}
