/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen_asteroids_screen/screen_asteroidsViewBase.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

screen_asteroidsViewBase::screen_asteroidsViewBase() :
    buttonCallback(this, &screen_asteroidsViewBase::buttonCallbackHandler)
{
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
    
    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    bg_grey.setPosition(0, 0, 480, 272);
    bg_grey.setColor(touchgfx::Color::getColorFromRGB(51, 51, 51));
    add(bg_grey);

    icon_rock.setBitmap(touchgfx::Bitmap(BITMAP_ASTEROIDS_ROCK_ID));
    icon_rock.setPosition(285, 79, 34, 29);
    icon_rock.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    icon_rock.setVisible(false);
    add(icon_rock);

    icon_ship.setPosition(225, 227, 30, 30);
    icon_ship.setOrigin(0.0f, 0.0f);
    icon_ship.setScale(1.0f, 1.0f);
    icon_ship.setAngle(0.0f);
    icon_shipPainter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    icon_ship.setPainter(icon_shipPainter);
    const touchgfx::AbstractShape::ShapePoint<float> icon_shipPoints[3] = { { 15.0f, 0.0f }, { 30.0f, 30.0f }, { 0.0f, 30.0f } };
    icon_ship.setShape(icon_shipPoints);
    add(icon_ship);

    lbl_score.setXY(338, 3);
    lbl_score.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    lbl_score.setLinespacing(0);
    Unicode::snprintf(lbl_scoreBuffer, LBL_SCORE_SIZE, "%s", touchgfx::TypedText(T_SCORE_VALUE).getText());
    lbl_score.setWildcard(lbl_scoreBuffer);
    lbl_score.resizeToCurrentText();
    lbl_score.setTypedText(touchgfx::TypedText(T___SINGLEUSE_W1MR));
    add(lbl_score);

    container_health.setPosition(233, 4, 92, 20);
    icon_heart1.setBitmap(touchgfx::Bitmap(BITMAP_HEART_ICON_ID));
    icon_heart1.setPosition(72, 1, 20, 20);
    icon_heart1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    container_health.add(icon_heart1);

    icon_heart2.setBitmap(touchgfx::Bitmap(BITMAP_HEART_ICON_ID));
    icon_heart2.setPosition(49, 1, 20, 20);
    icon_heart2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    container_health.add(icon_heart2);

    icon_heart3.setBitmap(touchgfx::Bitmap(BITMAP_HEART_ICON_ID));
    icon_heart3.setPosition(26, 1, 20, 20);
    icon_heart3.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    container_health.add(icon_heart3);

    add(container_health);

    container_controls.setPosition(15, 158, 451, 108);
    btn_right.setXY(415, 36);
    btn_right.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_RIGHT_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_RIGHT_50_50_E8F6FB_SVG_ID));
    btn_right.setIconXY(-7, -7);
    container_controls.add(btn_right);

    btn_down.setXY(379, 72);
    btn_down.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_DOWN_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_DOWN_50_50_E8F6FB_SVG_ID));
    btn_down.setIconXY(-6, -6);
    container_controls.add(btn_down);

    btn_left.setXY(343, 36);
    btn_left.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_LEFT_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_LEFT_50_50_E8F6FB_SVG_ID));
    btn_left.setIconXY(-7, -7);
    container_controls.add(btn_left);

    btn_up.setXY(379, 0);
    btn_up.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_UP_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_UP_50_50_E8F6FB_SVG_ID));
    btn_up.setIconXY(-6, -6);
    container_controls.add(btn_up);

    btn_shoot.setXY(0, 36);
    btn_shoot.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_MAPS_LOCAL_FIRE_DEPARTMENT_30_30_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_MAPS_LOCAL_FIRE_DEPARTMENT_30_30_E8F6FB_SVG_ID));
    btn_shoot.setIconXY(2, 2);
    container_controls.add(btn_shoot);

    add(container_controls);

    bullet.setPosition(238, 219, 4, 4);
    bullet.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    bullet.setVisible(false);
    add(bullet);

    container_game_over.setPosition(0, 0, 480, 272);
    container_game_over.setVisible(false);
    bg_light_grey.setPosition(93, 73, 295, 126);
    bg_light_grey.setColor(touchgfx::Color::getColorFromRGB(130, 130, 130));
    container_game_over.add(bg_light_grey);

    btn_retry.setXY(274, 137);
    btn_retry.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_ACTION_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_CACHED_40_40_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_CACHED_40_40_E8F6FB_SVG_ID));
    btn_retry.setIconXY(-1, -1);
    btn_retry.setAction(buttonCallback);
    container_game_over.add(btn_retry);

    btn_back.setXY(171, 137);
    btn_back.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_ACTION_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_ARROW_BACK_40_40_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_ARROW_BACK_40_40_E8F6FB_SVG_ID));
    btn_back.setIconXY(-1, -1);
    btn_back.setAction(buttonCallback);
    container_game_over.add(btn_back);

    lbl_over.setXY(130, 80);
    lbl_over.setColor(touchgfx::Color::getColorFromRGB(133, 23, 23));
    lbl_over.setLinespacing(0);
    lbl_over.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DW7K));
    container_game_over.add(lbl_over);

    add(container_game_over);

    cover_red.setPosition(0, 0, 480, 272);
    cover_red.setColor(touchgfx::Color::getColorFromRGB(133, 19, 19));
    cover_red.setAlpha(78);
    cover_red.setVisible(false);
    add(cover_red);
}

screen_asteroidsViewBase::~screen_asteroidsViewBase()
{
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void screen_asteroidsViewBase::setupScreen()
{

}

void screen_asteroidsViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &btn_back)
    {
        //suspend_asteroid_task
        //When btn_back clicked call virtual function
        //Call suspend_asteroids_task
        suspend_asteroids_task();
    
        //interaction_transition_to_home
        //When suspend_asteroid_task completed change screen to screen_game_select
        //Go to screen_game_select with screen transition towards West
        application().gotoscreen_game_selectScreenSlideTransitionWest();
    }
    if (&src == &btn_retry)
    {
        //interaction_restart
        //When btn_retry clicked call virtual function
        //Call start_asteroids_game
        start_asteroids_game();
    }
}

void screen_asteroidsViewBase::afterTransition()
{
    //interaction_resume_asteroids_task
    //When screen transition ends call virtual function
    //Call resume_asteroids_task
    resume_asteroids_task();

    //interaction_start_asteroids_game
    //When screen transition ends call virtual function
    //Call start_asteroids_game
    start_asteroids_game();
}
