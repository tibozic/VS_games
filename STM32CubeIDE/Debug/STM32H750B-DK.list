
STM32H750B-DK.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .bootloader   0000227c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .isr_vector   00000298  90000000  90000000  00020000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .text         0002ae94  900002a0  900002a0  000202a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       000039ec  9002b134  9002b134  0004b134  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000658  9002eb20  9002eb20  0004eb20  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .ARM.extab    00000000  9002f178  9002f178  000d718c  2**0
                  CONTENTS
  6 .ARM          00000008  9002f178  9002f178  0004f178  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .preinit_array 00000000  9002f180  9002f180  000d718c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  8 .init_array   00000018  9002f180  9002f180  0004f180  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .fini_array   00000008  9002f198  9002f198  0004f198  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .data         00000154  24000000  9002f1a0  00050000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 11 .bss          000241b0  24000158  9002f2f4  00050158  2**3
                  ALLOC
 12 ._user_heap_stack 00002000  24024308  9002f2f4  00054308  2**0
                  ALLOC
 13 .ARM.attributes 0000002e  00000000  00000000  000d718c  2**0
                  CONTENTS, READONLY
 14 FontFlashSection 00015818  90200000  90200000  00060000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 15 TextFlashSection 00000064  90215818  90215818  00075818  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 ExtFlashSection 00061910  9021587c  9021587c  0007587c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 17 TouchGFX_Framebuffer 000bf400  d0000000  d0000000  000e0000  2**2
                  ALLOC
 18 Video_RGB_Buffer 00043800  d00bf400  d00bf400  000e0000  2**2
                  ALLOC
 19 .comment      000000c2  00000000  00000000  000d71ba  2**0
                  CONTENTS, READONLY
 20 .debug_line   0008497d  00000000  00000000  000d727c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000005f  00000000  00000000  0015bbf9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_info   0010f252  00000000  00000000  0015bc58  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_abbrev 00019722  00000000  00000000  0026aeaa  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_aranges 000039f0  00000000  00000000  002845d0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_str    001ad686  00000000  00000000  00287fc0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_rnglists 00008b2c  00000000  00000000  00435646  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_macro  0004c064  00000000  00000000  0043e172  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 28 .debug_frame  0000bef0  00000000  00000000  0048a1d8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 29 .debug_loclists 0003fec8  00000000  00000000  004960c8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

900002a0 <__do_global_dtors_aux>:
900002a0:	b510      	push	{r4, lr}
900002a2:	4c05      	ldr	r4, [pc, #20]	; (900002b8 <__do_global_dtors_aux+0x18>)
900002a4:	7823      	ldrb	r3, [r4, #0]
900002a6:	b933      	cbnz	r3, 900002b6 <__do_global_dtors_aux+0x16>
900002a8:	4b04      	ldr	r3, [pc, #16]	; (900002bc <__do_global_dtors_aux+0x1c>)
900002aa:	b113      	cbz	r3, 900002b2 <__do_global_dtors_aux+0x12>
900002ac:	4804      	ldr	r0, [pc, #16]	; (900002c0 <__do_global_dtors_aux+0x20>)
900002ae:	f3af 8000 	nop.w
900002b2:	2301      	movs	r3, #1
900002b4:	7023      	strb	r3, [r4, #0]
900002b6:	bd10      	pop	{r4, pc}
900002b8:	24000158 	.word	0x24000158
900002bc:	00000000 	.word	0x00000000
900002c0:	9002b11c 	.word	0x9002b11c

900002c4 <frame_dummy>:
900002c4:	b508      	push	{r3, lr}
900002c6:	4b03      	ldr	r3, [pc, #12]	; (900002d4 <frame_dummy+0x10>)
900002c8:	b11b      	cbz	r3, 900002d2 <frame_dummy+0xe>
900002ca:	4903      	ldr	r1, [pc, #12]	; (900002d8 <frame_dummy+0x14>)
900002cc:	4803      	ldr	r0, [pc, #12]	; (900002dc <frame_dummy+0x18>)
900002ce:	f3af 8000 	nop.w
900002d2:	bd08      	pop	{r3, pc}
900002d4:	00000000 	.word	0x00000000
900002d8:	2400015c 	.word	0x2400015c
900002dc:	9002b11c 	.word	0x9002b11c

900002e0 <strlen>:
900002e0:	4603      	mov	r3, r0
900002e2:	f813 2b01 	ldrb.w	r2, [r3], #1
900002e6:	2a00      	cmp	r2, #0
900002e8:	d1fb      	bne.n	900002e2 <strlen+0x2>
900002ea:	1a18      	subs	r0, r3, r0
900002ec:	3801      	subs	r0, #1
900002ee:	4770      	bx	lr

900002f0 <memchr>:
900002f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
900002f4:	2a10      	cmp	r2, #16
900002f6:	db2b      	blt.n	90000350 <memchr+0x60>
900002f8:	f010 0f07 	tst.w	r0, #7
900002fc:	d008      	beq.n	90000310 <memchr+0x20>
900002fe:	f810 3b01 	ldrb.w	r3, [r0], #1
90000302:	3a01      	subs	r2, #1
90000304:	428b      	cmp	r3, r1
90000306:	d02d      	beq.n	90000364 <memchr+0x74>
90000308:	f010 0f07 	tst.w	r0, #7
9000030c:	b342      	cbz	r2, 90000360 <memchr+0x70>
9000030e:	d1f6      	bne.n	900002fe <memchr+0xe>
90000310:	b4f0      	push	{r4, r5, r6, r7}
90000312:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
90000316:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
9000031a:	f022 0407 	bic.w	r4, r2, #7
9000031e:	f07f 0700 	mvns.w	r7, #0
90000322:	2300      	movs	r3, #0
90000324:	e8f0 5602 	ldrd	r5, r6, [r0], #8
90000328:	3c08      	subs	r4, #8
9000032a:	ea85 0501 	eor.w	r5, r5, r1
9000032e:	ea86 0601 	eor.w	r6, r6, r1
90000332:	fa85 f547 	uadd8	r5, r5, r7
90000336:	faa3 f587 	sel	r5, r3, r7
9000033a:	fa86 f647 	uadd8	r6, r6, r7
9000033e:	faa5 f687 	sel	r6, r5, r7
90000342:	b98e      	cbnz	r6, 90000368 <memchr+0x78>
90000344:	d1ee      	bne.n	90000324 <memchr+0x34>
90000346:	bcf0      	pop	{r4, r5, r6, r7}
90000348:	f001 01ff 	and.w	r1, r1, #255	; 0xff
9000034c:	f002 0207 	and.w	r2, r2, #7
90000350:	b132      	cbz	r2, 90000360 <memchr+0x70>
90000352:	f810 3b01 	ldrb.w	r3, [r0], #1
90000356:	3a01      	subs	r2, #1
90000358:	ea83 0301 	eor.w	r3, r3, r1
9000035c:	b113      	cbz	r3, 90000364 <memchr+0x74>
9000035e:	d1f8      	bne.n	90000352 <memchr+0x62>
90000360:	2000      	movs	r0, #0
90000362:	4770      	bx	lr
90000364:	3801      	subs	r0, #1
90000366:	4770      	bx	lr
90000368:	2d00      	cmp	r5, #0
9000036a:	bf06      	itte	eq
9000036c:	4635      	moveq	r5, r6
9000036e:	3803      	subeq	r0, #3
90000370:	3807      	subne	r0, #7
90000372:	f015 0f01 	tst.w	r5, #1
90000376:	d107      	bne.n	90000388 <memchr+0x98>
90000378:	3001      	adds	r0, #1
9000037a:	f415 7f80 	tst.w	r5, #256	; 0x100
9000037e:	bf02      	ittt	eq
90000380:	3001      	addeq	r0, #1
90000382:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
90000386:	3001      	addeq	r0, #1
90000388:	bcf0      	pop	{r4, r5, r6, r7}
9000038a:	3801      	subs	r0, #1
9000038c:	4770      	bx	lr
9000038e:	bf00      	nop

90000390 <__aeabi_uldivmod>:
90000390:	b953      	cbnz	r3, 900003a8 <__aeabi_uldivmod+0x18>
90000392:	b94a      	cbnz	r2, 900003a8 <__aeabi_uldivmod+0x18>
90000394:	2900      	cmp	r1, #0
90000396:	bf08      	it	eq
90000398:	2800      	cmpeq	r0, #0
9000039a:	bf1c      	itt	ne
9000039c:	f04f 31ff 	movne.w	r1, #4294967295
900003a0:	f04f 30ff 	movne.w	r0, #4294967295
900003a4:	f000 b970 	b.w	90000688 <__aeabi_idiv0>
900003a8:	f1ad 0c08 	sub.w	ip, sp, #8
900003ac:	e96d ce04 	strd	ip, lr, [sp, #-16]!
900003b0:	f000 f806 	bl	900003c0 <__udivmoddi4>
900003b4:	f8dd e004 	ldr.w	lr, [sp, #4]
900003b8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
900003bc:	b004      	add	sp, #16
900003be:	4770      	bx	lr

900003c0 <__udivmoddi4>:
900003c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900003c4:	9e08      	ldr	r6, [sp, #32]
900003c6:	460d      	mov	r5, r1
900003c8:	4604      	mov	r4, r0
900003ca:	460f      	mov	r7, r1
900003cc:	2b00      	cmp	r3, #0
900003ce:	d14a      	bne.n	90000466 <__udivmoddi4+0xa6>
900003d0:	428a      	cmp	r2, r1
900003d2:	4694      	mov	ip, r2
900003d4:	d965      	bls.n	900004a2 <__udivmoddi4+0xe2>
900003d6:	fab2 f382 	clz	r3, r2
900003da:	b143      	cbz	r3, 900003ee <__udivmoddi4+0x2e>
900003dc:	fa02 fc03 	lsl.w	ip, r2, r3
900003e0:	f1c3 0220 	rsb	r2, r3, #32
900003e4:	409f      	lsls	r7, r3
900003e6:	fa20 f202 	lsr.w	r2, r0, r2
900003ea:	4317      	orrs	r7, r2
900003ec:	409c      	lsls	r4, r3
900003ee:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
900003f2:	fa1f f58c 	uxth.w	r5, ip
900003f6:	fbb7 f1fe 	udiv	r1, r7, lr
900003fa:	0c22      	lsrs	r2, r4, #16
900003fc:	fb0e 7711 	mls	r7, lr, r1, r7
90000400:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
90000404:	fb01 f005 	mul.w	r0, r1, r5
90000408:	4290      	cmp	r0, r2
9000040a:	d90a      	bls.n	90000422 <__udivmoddi4+0x62>
9000040c:	eb1c 0202 	adds.w	r2, ip, r2
90000410:	f101 37ff 	add.w	r7, r1, #4294967295
90000414:	f080 811c 	bcs.w	90000650 <__udivmoddi4+0x290>
90000418:	4290      	cmp	r0, r2
9000041a:	f240 8119 	bls.w	90000650 <__udivmoddi4+0x290>
9000041e:	3902      	subs	r1, #2
90000420:	4462      	add	r2, ip
90000422:	1a12      	subs	r2, r2, r0
90000424:	b2a4      	uxth	r4, r4
90000426:	fbb2 f0fe 	udiv	r0, r2, lr
9000042a:	fb0e 2210 	mls	r2, lr, r0, r2
9000042e:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
90000432:	fb00 f505 	mul.w	r5, r0, r5
90000436:	42a5      	cmp	r5, r4
90000438:	d90a      	bls.n	90000450 <__udivmoddi4+0x90>
9000043a:	eb1c 0404 	adds.w	r4, ip, r4
9000043e:	f100 32ff 	add.w	r2, r0, #4294967295
90000442:	f080 8107 	bcs.w	90000654 <__udivmoddi4+0x294>
90000446:	42a5      	cmp	r5, r4
90000448:	f240 8104 	bls.w	90000654 <__udivmoddi4+0x294>
9000044c:	4464      	add	r4, ip
9000044e:	3802      	subs	r0, #2
90000450:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
90000454:	1b64      	subs	r4, r4, r5
90000456:	2100      	movs	r1, #0
90000458:	b11e      	cbz	r6, 90000462 <__udivmoddi4+0xa2>
9000045a:	40dc      	lsrs	r4, r3
9000045c:	2300      	movs	r3, #0
9000045e:	e9c6 4300 	strd	r4, r3, [r6]
90000462:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90000466:	428b      	cmp	r3, r1
90000468:	d908      	bls.n	9000047c <__udivmoddi4+0xbc>
9000046a:	2e00      	cmp	r6, #0
9000046c:	f000 80ed 	beq.w	9000064a <__udivmoddi4+0x28a>
90000470:	2100      	movs	r1, #0
90000472:	e9c6 0500 	strd	r0, r5, [r6]
90000476:	4608      	mov	r0, r1
90000478:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9000047c:	fab3 f183 	clz	r1, r3
90000480:	2900      	cmp	r1, #0
90000482:	d149      	bne.n	90000518 <__udivmoddi4+0x158>
90000484:	42ab      	cmp	r3, r5
90000486:	d302      	bcc.n	9000048e <__udivmoddi4+0xce>
90000488:	4282      	cmp	r2, r0
9000048a:	f200 80f8 	bhi.w	9000067e <__udivmoddi4+0x2be>
9000048e:	1a84      	subs	r4, r0, r2
90000490:	eb65 0203 	sbc.w	r2, r5, r3
90000494:	2001      	movs	r0, #1
90000496:	4617      	mov	r7, r2
90000498:	2e00      	cmp	r6, #0
9000049a:	d0e2      	beq.n	90000462 <__udivmoddi4+0xa2>
9000049c:	e9c6 4700 	strd	r4, r7, [r6]
900004a0:	e7df      	b.n	90000462 <__udivmoddi4+0xa2>
900004a2:	b902      	cbnz	r2, 900004a6 <__udivmoddi4+0xe6>
900004a4:	deff      	udf	#255	; 0xff
900004a6:	fab2 f382 	clz	r3, r2
900004aa:	2b00      	cmp	r3, #0
900004ac:	f040 8090 	bne.w	900005d0 <__udivmoddi4+0x210>
900004b0:	1a8a      	subs	r2, r1, r2
900004b2:	ea4f 471c 	mov.w	r7, ip, lsr #16
900004b6:	fa1f fe8c 	uxth.w	lr, ip
900004ba:	2101      	movs	r1, #1
900004bc:	fbb2 f5f7 	udiv	r5, r2, r7
900004c0:	fb07 2015 	mls	r0, r7, r5, r2
900004c4:	0c22      	lsrs	r2, r4, #16
900004c6:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
900004ca:	fb0e f005 	mul.w	r0, lr, r5
900004ce:	4290      	cmp	r0, r2
900004d0:	d908      	bls.n	900004e4 <__udivmoddi4+0x124>
900004d2:	eb1c 0202 	adds.w	r2, ip, r2
900004d6:	f105 38ff 	add.w	r8, r5, #4294967295
900004da:	d202      	bcs.n	900004e2 <__udivmoddi4+0x122>
900004dc:	4290      	cmp	r0, r2
900004de:	f200 80cb 	bhi.w	90000678 <__udivmoddi4+0x2b8>
900004e2:	4645      	mov	r5, r8
900004e4:	1a12      	subs	r2, r2, r0
900004e6:	b2a4      	uxth	r4, r4
900004e8:	fbb2 f0f7 	udiv	r0, r2, r7
900004ec:	fb07 2210 	mls	r2, r7, r0, r2
900004f0:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
900004f4:	fb0e fe00 	mul.w	lr, lr, r0
900004f8:	45a6      	cmp	lr, r4
900004fa:	d908      	bls.n	9000050e <__udivmoddi4+0x14e>
900004fc:	eb1c 0404 	adds.w	r4, ip, r4
90000500:	f100 32ff 	add.w	r2, r0, #4294967295
90000504:	d202      	bcs.n	9000050c <__udivmoddi4+0x14c>
90000506:	45a6      	cmp	lr, r4
90000508:	f200 80bb 	bhi.w	90000682 <__udivmoddi4+0x2c2>
9000050c:	4610      	mov	r0, r2
9000050e:	eba4 040e 	sub.w	r4, r4, lr
90000512:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
90000516:	e79f      	b.n	90000458 <__udivmoddi4+0x98>
90000518:	f1c1 0720 	rsb	r7, r1, #32
9000051c:	408b      	lsls	r3, r1
9000051e:	fa22 fc07 	lsr.w	ip, r2, r7
90000522:	ea4c 0c03 	orr.w	ip, ip, r3
90000526:	fa05 f401 	lsl.w	r4, r5, r1
9000052a:	fa20 f307 	lsr.w	r3, r0, r7
9000052e:	40fd      	lsrs	r5, r7
90000530:	ea4f 491c 	mov.w	r9, ip, lsr #16
90000534:	4323      	orrs	r3, r4
90000536:	fbb5 f8f9 	udiv	r8, r5, r9
9000053a:	fa1f fe8c 	uxth.w	lr, ip
9000053e:	fb09 5518 	mls	r5, r9, r8, r5
90000542:	0c1c      	lsrs	r4, r3, #16
90000544:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
90000548:	fb08 f50e 	mul.w	r5, r8, lr
9000054c:	42a5      	cmp	r5, r4
9000054e:	fa02 f201 	lsl.w	r2, r2, r1
90000552:	fa00 f001 	lsl.w	r0, r0, r1
90000556:	d90b      	bls.n	90000570 <__udivmoddi4+0x1b0>
90000558:	eb1c 0404 	adds.w	r4, ip, r4
9000055c:	f108 3aff 	add.w	sl, r8, #4294967295
90000560:	f080 8088 	bcs.w	90000674 <__udivmoddi4+0x2b4>
90000564:	42a5      	cmp	r5, r4
90000566:	f240 8085 	bls.w	90000674 <__udivmoddi4+0x2b4>
9000056a:	f1a8 0802 	sub.w	r8, r8, #2
9000056e:	4464      	add	r4, ip
90000570:	1b64      	subs	r4, r4, r5
90000572:	b29d      	uxth	r5, r3
90000574:	fbb4 f3f9 	udiv	r3, r4, r9
90000578:	fb09 4413 	mls	r4, r9, r3, r4
9000057c:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
90000580:	fb03 fe0e 	mul.w	lr, r3, lr
90000584:	45a6      	cmp	lr, r4
90000586:	d908      	bls.n	9000059a <__udivmoddi4+0x1da>
90000588:	eb1c 0404 	adds.w	r4, ip, r4
9000058c:	f103 35ff 	add.w	r5, r3, #4294967295
90000590:	d26c      	bcs.n	9000066c <__udivmoddi4+0x2ac>
90000592:	45a6      	cmp	lr, r4
90000594:	d96a      	bls.n	9000066c <__udivmoddi4+0x2ac>
90000596:	3b02      	subs	r3, #2
90000598:	4464      	add	r4, ip
9000059a:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
9000059e:	fba3 9502 	umull	r9, r5, r3, r2
900005a2:	eba4 040e 	sub.w	r4, r4, lr
900005a6:	42ac      	cmp	r4, r5
900005a8:	46c8      	mov	r8, r9
900005aa:	46ae      	mov	lr, r5
900005ac:	d356      	bcc.n	9000065c <__udivmoddi4+0x29c>
900005ae:	d053      	beq.n	90000658 <__udivmoddi4+0x298>
900005b0:	b156      	cbz	r6, 900005c8 <__udivmoddi4+0x208>
900005b2:	ebb0 0208 	subs.w	r2, r0, r8
900005b6:	eb64 040e 	sbc.w	r4, r4, lr
900005ba:	fa04 f707 	lsl.w	r7, r4, r7
900005be:	40ca      	lsrs	r2, r1
900005c0:	40cc      	lsrs	r4, r1
900005c2:	4317      	orrs	r7, r2
900005c4:	e9c6 7400 	strd	r7, r4, [r6]
900005c8:	4618      	mov	r0, r3
900005ca:	2100      	movs	r1, #0
900005cc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
900005d0:	f1c3 0120 	rsb	r1, r3, #32
900005d4:	fa02 fc03 	lsl.w	ip, r2, r3
900005d8:	fa20 f201 	lsr.w	r2, r0, r1
900005dc:	fa25 f101 	lsr.w	r1, r5, r1
900005e0:	409d      	lsls	r5, r3
900005e2:	432a      	orrs	r2, r5
900005e4:	ea4f 471c 	mov.w	r7, ip, lsr #16
900005e8:	fa1f fe8c 	uxth.w	lr, ip
900005ec:	fbb1 f0f7 	udiv	r0, r1, r7
900005f0:	fb07 1510 	mls	r5, r7, r0, r1
900005f4:	0c11      	lsrs	r1, r2, #16
900005f6:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
900005fa:	fb00 f50e 	mul.w	r5, r0, lr
900005fe:	428d      	cmp	r5, r1
90000600:	fa04 f403 	lsl.w	r4, r4, r3
90000604:	d908      	bls.n	90000618 <__udivmoddi4+0x258>
90000606:	eb1c 0101 	adds.w	r1, ip, r1
9000060a:	f100 38ff 	add.w	r8, r0, #4294967295
9000060e:	d22f      	bcs.n	90000670 <__udivmoddi4+0x2b0>
90000610:	428d      	cmp	r5, r1
90000612:	d92d      	bls.n	90000670 <__udivmoddi4+0x2b0>
90000614:	3802      	subs	r0, #2
90000616:	4461      	add	r1, ip
90000618:	1b49      	subs	r1, r1, r5
9000061a:	b292      	uxth	r2, r2
9000061c:	fbb1 f5f7 	udiv	r5, r1, r7
90000620:	fb07 1115 	mls	r1, r7, r5, r1
90000624:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
90000628:	fb05 f10e 	mul.w	r1, r5, lr
9000062c:	4291      	cmp	r1, r2
9000062e:	d908      	bls.n	90000642 <__udivmoddi4+0x282>
90000630:	eb1c 0202 	adds.w	r2, ip, r2
90000634:	f105 38ff 	add.w	r8, r5, #4294967295
90000638:	d216      	bcs.n	90000668 <__udivmoddi4+0x2a8>
9000063a:	4291      	cmp	r1, r2
9000063c:	d914      	bls.n	90000668 <__udivmoddi4+0x2a8>
9000063e:	3d02      	subs	r5, #2
90000640:	4462      	add	r2, ip
90000642:	1a52      	subs	r2, r2, r1
90000644:	ea45 4100 	orr.w	r1, r5, r0, lsl #16
90000648:	e738      	b.n	900004bc <__udivmoddi4+0xfc>
9000064a:	4631      	mov	r1, r6
9000064c:	4630      	mov	r0, r6
9000064e:	e708      	b.n	90000462 <__udivmoddi4+0xa2>
90000650:	4639      	mov	r1, r7
90000652:	e6e6      	b.n	90000422 <__udivmoddi4+0x62>
90000654:	4610      	mov	r0, r2
90000656:	e6fb      	b.n	90000450 <__udivmoddi4+0x90>
90000658:	4548      	cmp	r0, r9
9000065a:	d2a9      	bcs.n	900005b0 <__udivmoddi4+0x1f0>
9000065c:	ebb9 0802 	subs.w	r8, r9, r2
90000660:	eb65 0e0c 	sbc.w	lr, r5, ip
90000664:	3b01      	subs	r3, #1
90000666:	e7a3      	b.n	900005b0 <__udivmoddi4+0x1f0>
90000668:	4645      	mov	r5, r8
9000066a:	e7ea      	b.n	90000642 <__udivmoddi4+0x282>
9000066c:	462b      	mov	r3, r5
9000066e:	e794      	b.n	9000059a <__udivmoddi4+0x1da>
90000670:	4640      	mov	r0, r8
90000672:	e7d1      	b.n	90000618 <__udivmoddi4+0x258>
90000674:	46d0      	mov	r8, sl
90000676:	e77b      	b.n	90000570 <__udivmoddi4+0x1b0>
90000678:	3d02      	subs	r5, #2
9000067a:	4462      	add	r2, ip
9000067c:	e732      	b.n	900004e4 <__udivmoddi4+0x124>
9000067e:	4608      	mov	r0, r1
90000680:	e70a      	b.n	90000498 <__udivmoddi4+0xd8>
90000682:	4464      	add	r4, ip
90000684:	3802      	subs	r0, #2
90000686:	e742      	b.n	9000050e <__udivmoddi4+0x14e>

90000688 <__aeabi_idiv0>:
90000688:	4770      	bx	lr
9000068a:	bf00      	nop

9000068c <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack      /* set stack pointer */
9000068c:	f8df d034 	ldr.w	sp, [pc, #52]	; 900006c4 <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
90000690:	2100      	movs	r1, #0
  b  LoopCopyDataInit
90000692:	e003      	b.n	9000069c <LoopCopyDataInit>

90000694 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
90000694:	4b0c      	ldr	r3, [pc, #48]	; (900006c8 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
90000696:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
90000698:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
9000069a:	3104      	adds	r1, #4

9000069c <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
9000069c:	480b      	ldr	r0, [pc, #44]	; (900006cc <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
9000069e:	4b0c      	ldr	r3, [pc, #48]	; (900006d0 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
900006a0:	1842      	adds	r2, r0, r1
  cmp  r2, r3
900006a2:	429a      	cmp	r2, r3
  bcc  CopyDataInit
900006a4:	d3f6      	bcc.n	90000694 <CopyDataInit>
  ldr  r2, =_sbss
900006a6:	4a0b      	ldr	r2, [pc, #44]	; (900006d4 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
900006a8:	e002      	b.n	900006b0 <LoopFillZerobss>

900006aa <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
900006aa:	2300      	movs	r3, #0
  str  r3, [r2], #4
900006ac:	f842 3b04 	str.w	r3, [r2], #4

900006b0 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
900006b0:	4b09      	ldr	r3, [pc, #36]	; (900006d8 <LoopFillZerobss+0x28>)
  cmp  r2, r3
900006b2:	429a      	cmp	r2, r3
  bcc  FillZerobss
900006b4:	d3f9      	bcc.n	900006aa <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
900006b6:	f009 fc79 	bl	90009fac <SystemInit>
/* Call static constructors */
    bl __libc_init_array
900006ba:	f029 fe91 	bl	9002a3e0 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
900006be:	f004 fb79 	bl	90004db4 <main>
  bx  lr    
900006c2:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
900006c4:	24080000 	.word	0x24080000
  ldr  r3, =_sidata
900006c8:	9002f1a0 	.word	0x9002f1a0
  ldr  r0, =_sdata
900006cc:	24000000 	.word	0x24000000
  ldr  r3, =_edata
900006d0:	24000154 	.word	0x24000154
  ldr  r2, =_sbss
900006d4:	24000158 	.word	0x24000158
  ldr  r3, = _ebss
900006d8:	24024308 	.word	0x24024308

900006dc <ADC3_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
900006dc:	e7fe      	b.n	900006dc <ADC3_IRQHandler>
	...

900006e0 <MX_LIBJPEG_Init>:
  */

  /* USER CODE BEGIN 3 */
  /* USER CODE END 3 */

}
900006e0:	4770      	bx	lr
900006e2:	bf00      	nop

900006e4 <MFRC522_Init>:
/**
  * @brief MFRC522 initialization function
  * @param None
  * @retval None
  */
void MFRC522_Init(void) {
900006e4:	b510      	push	{r4, lr}

void __MFRC522_Write(uint8_t reg_addr, uint8_t value) {

	uint8_t rcv;

	__MFRC522_NSS_Low()
900006e6:	2200      	movs	r2, #0
void MFRC522_Init(void) {
900006e8:	b084      	sub	sp, #16
	__MFRC522_NSS_Low()
900006ea:	2108      	movs	r1, #8
900006ec:	48b6      	ldr	r0, [pc, #728]	; (900009c8 <MFRC522_Init+0x2e4>)
900006ee:	f00a f965 	bl	9000a9bc <HAL_GPIO_WritePin>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
900006f2:	210a      	movs	r1, #10
	uint8_t txArr[]= {send};
900006f4:	2202      	movs	r2, #2
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
900006f6:	2301      	movs	r3, #1
900006f8:	9100      	str	r1, [sp, #0]
900006fa:	a903      	add	r1, sp, #12
	uint8_t txArr[]= {send};
900006fc:	f88d 200c 	strb.w	r2, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000700:	f10d 020f 	add.w	r2, sp, #15
90000704:	48b1      	ldr	r0, [pc, #708]	; (900009cc <MFRC522_Init+0x2e8>)
90000706:	f00e fdc1 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(Convert_Write_Reg(reg_addr), &rcv, sizeof(rcv)) != HAL_OK) {
9000070a:	2800      	cmp	r0, #0
9000070c:	f040 8158 	bne.w	900009c0 <MFRC522_Init+0x2dc>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000710:	210a      	movs	r1, #10
	uint8_t txArr[]= {send};
90000712:	220f      	movs	r2, #15
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000714:	2301      	movs	r3, #1
90000716:	48ad      	ldr	r0, [pc, #692]	; (900009cc <MFRC522_Init+0x2e8>)
90000718:	9100      	str	r1, [sp, #0]
9000071a:	a903      	add	r1, sp, #12
	uint8_t txArr[]= {send};
9000071c:	f88d 200c 	strb.w	r2, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000720:	446a      	add	r2, sp
90000722:	f00e fdb3 	bl	9000f28c <HAL_SPI_TransmitReceive>
		Error_Handler();
	}
	if (__SPI_Write_Receive(value, &rcv, sizeof(rcv)) != HAL_OK) {
90000726:	2800      	cmp	r0, #0
90000728:	f040 81d1 	bne.w	90000ace <MFRC522_Init+0x3ea>
		Error_Handler();
	}
	__MFRC522_NSS_High()
9000072c:	2201      	movs	r2, #1
9000072e:	2108      	movs	r1, #8
90000730:	48a5      	ldr	r0, [pc, #660]	; (900009c8 <MFRC522_Init+0x2e4>)
90000732:	f00a f943 	bl	9000a9bc <HAL_GPIO_WritePin>
	__MFRC522_NSS_Low()
90000736:	2200      	movs	r2, #0
90000738:	2108      	movs	r1, #8
9000073a:	48a3      	ldr	r0, [pc, #652]	; (900009c8 <MFRC522_Init+0x2e4>)
9000073c:	f00a f93e 	bl	9000a9bc <HAL_GPIO_WritePin>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000740:	210a      	movs	r1, #10
	uint8_t txArr[]= {send};
90000742:	2254      	movs	r2, #84	; 0x54
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000744:	2301      	movs	r3, #1
90000746:	9100      	str	r1, [sp, #0]
90000748:	a903      	add	r1, sp, #12
	uint8_t txArr[]= {send};
9000074a:	f88d 200c 	strb.w	r2, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
9000074e:	f10d 020f 	add.w	r2, sp, #15
90000752:	489e      	ldr	r0, [pc, #632]	; (900009cc <MFRC522_Init+0x2e8>)
90000754:	f00e fd9a 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(Convert_Write_Reg(reg_addr), &rcv, sizeof(rcv)) != HAL_OK) {
90000758:	2800      	cmp	r0, #0
9000075a:	f040 81b5 	bne.w	90000ac8 <MFRC522_Init+0x3e4>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
9000075e:	210a      	movs	r1, #10
	uint8_t txArr[]= {send};
90000760:	228d      	movs	r2, #141	; 0x8d
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000762:	2301      	movs	r3, #1
90000764:	4899      	ldr	r0, [pc, #612]	; (900009cc <MFRC522_Init+0x2e8>)
90000766:	9100      	str	r1, [sp, #0]
90000768:	a903      	add	r1, sp, #12
	uint8_t txArr[]= {send};
9000076a:	f88d 200c 	strb.w	r2, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
9000076e:	f10d 020f 	add.w	r2, sp, #15
90000772:	f00e fd8b 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(value, &rcv, sizeof(rcv)) != HAL_OK) {
90000776:	2800      	cmp	r0, #0
90000778:	f040 81a3 	bne.w	90000ac2 <MFRC522_Init+0x3de>
	__MFRC522_NSS_High()
9000077c:	2201      	movs	r2, #1
9000077e:	2108      	movs	r1, #8
90000780:	4891      	ldr	r0, [pc, #580]	; (900009c8 <MFRC522_Init+0x2e4>)
90000782:	f00a f91b 	bl	9000a9bc <HAL_GPIO_WritePin>
	__MFRC522_NSS_Low()
90000786:	2200      	movs	r2, #0
90000788:	2108      	movs	r1, #8
9000078a:	488f      	ldr	r0, [pc, #572]	; (900009c8 <MFRC522_Init+0x2e4>)
9000078c:	f00a f916 	bl	9000a9bc <HAL_GPIO_WritePin>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000790:	210a      	movs	r1, #10
	uint8_t txArr[]= {send};
90000792:	2256      	movs	r2, #86	; 0x56
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000794:	2301      	movs	r3, #1
90000796:	9100      	str	r1, [sp, #0]
90000798:	a903      	add	r1, sp, #12
	uint8_t txArr[]= {send};
9000079a:	f88d 200c 	strb.w	r2, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
9000079e:	f10d 020f 	add.w	r2, sp, #15
900007a2:	488a      	ldr	r0, [pc, #552]	; (900009cc <MFRC522_Init+0x2e8>)
900007a4:	f00e fd72 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(Convert_Write_Reg(reg_addr), &rcv, sizeof(rcv)) != HAL_OK) {
900007a8:	2800      	cmp	r0, #0
900007aa:	f040 8187 	bne.w	90000abc <MFRC522_Init+0x3d8>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
900007ae:	210a      	movs	r1, #10
	uint8_t txArr[]= {send};
900007b0:	223e      	movs	r2, #62	; 0x3e
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
900007b2:	2301      	movs	r3, #1
900007b4:	4885      	ldr	r0, [pc, #532]	; (900009cc <MFRC522_Init+0x2e8>)
900007b6:	9100      	str	r1, [sp, #0]
900007b8:	a903      	add	r1, sp, #12
	uint8_t txArr[]= {send};
900007ba:	f88d 200c 	strb.w	r2, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
900007be:	f10d 020f 	add.w	r2, sp, #15
900007c2:	f00e fd63 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(value, &rcv, sizeof(rcv)) != HAL_OK) {
900007c6:	2800      	cmp	r0, #0
900007c8:	f040 8175 	bne.w	90000ab6 <MFRC522_Init+0x3d2>
	__MFRC522_NSS_High()
900007cc:	2201      	movs	r2, #1
900007ce:	2108      	movs	r1, #8
900007d0:	487d      	ldr	r0, [pc, #500]	; (900009c8 <MFRC522_Init+0x2e4>)
900007d2:	f00a f8f3 	bl	9000a9bc <HAL_GPIO_WritePin>
	__MFRC522_NSS_Low()
900007d6:	2200      	movs	r2, #0
900007d8:	2108      	movs	r1, #8
900007da:	487b      	ldr	r0, [pc, #492]	; (900009c8 <MFRC522_Init+0x2e4>)
900007dc:	f00a f8ee 	bl	9000a9bc <HAL_GPIO_WritePin>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
900007e0:	210a      	movs	r1, #10
	uint8_t txArr[]= {send};
900007e2:	225a      	movs	r2, #90	; 0x5a
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
900007e4:	2301      	movs	r3, #1
900007e6:	9100      	str	r1, [sp, #0]
900007e8:	a903      	add	r1, sp, #12
	uint8_t txArr[]= {send};
900007ea:	f88d 200c 	strb.w	r2, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
900007ee:	f10d 020f 	add.w	r2, sp, #15
900007f2:	4876      	ldr	r0, [pc, #472]	; (900009cc <MFRC522_Init+0x2e8>)
900007f4:	f00e fd4a 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(Convert_Write_Reg(reg_addr), &rcv, sizeof(rcv)) != HAL_OK) {
900007f8:	2800      	cmp	r0, #0
900007fa:	f040 8159 	bne.w	90000ab0 <MFRC522_Init+0x3cc>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
900007fe:	210a      	movs	r1, #10
	uint8_t txArr[]= {send};
90000800:	221e      	movs	r2, #30
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000802:	2301      	movs	r3, #1
90000804:	4871      	ldr	r0, [pc, #452]	; (900009cc <MFRC522_Init+0x2e8>)
90000806:	9100      	str	r1, [sp, #0]
90000808:	a903      	add	r1, sp, #12
	uint8_t txArr[]= {send};
9000080a:	f88d 200c 	strb.w	r2, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
9000080e:	f10d 020f 	add.w	r2, sp, #15
90000812:	f00e fd3b 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(value, &rcv, sizeof(rcv)) != HAL_OK) {
90000816:	2800      	cmp	r0, #0
90000818:	f040 8147 	bne.w	90000aaa <MFRC522_Init+0x3c6>
	__MFRC522_NSS_High()
9000081c:	2201      	movs	r2, #1
9000081e:	2108      	movs	r1, #8
90000820:	4869      	ldr	r0, [pc, #420]	; (900009c8 <MFRC522_Init+0x2e4>)
90000822:	f00a f8cb 	bl	9000a9bc <HAL_GPIO_WritePin>
	__MFRC522_NSS_Low()
90000826:	2200      	movs	r2, #0
90000828:	2108      	movs	r1, #8
9000082a:	4867      	ldr	r0, [pc, #412]	; (900009c8 <MFRC522_Init+0x2e4>)
9000082c:	f00a f8c6 	bl	9000a9bc <HAL_GPIO_WritePin>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000830:	210a      	movs	r1, #10
	uint8_t txArr[]= {send};
90000832:	2258      	movs	r2, #88	; 0x58
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000834:	2301      	movs	r3, #1
90000836:	9100      	str	r1, [sp, #0]
90000838:	a903      	add	r1, sp, #12
	uint8_t txArr[]= {send};
9000083a:	f88d 200c 	strb.w	r2, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
9000083e:	f10d 020f 	add.w	r2, sp, #15
90000842:	4862      	ldr	r0, [pc, #392]	; (900009cc <MFRC522_Init+0x2e8>)
90000844:	f00e fd22 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(Convert_Write_Reg(reg_addr), &rcv, sizeof(rcv)) != HAL_OK) {
90000848:	2800      	cmp	r0, #0
9000084a:	f040 812b 	bne.w	90000aa4 <MFRC522_Init+0x3c0>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
9000084e:	210a      	movs	r1, #10
	uint8_t txArr[]= {send};
90000850:	2200      	movs	r2, #0
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000852:	2301      	movs	r3, #1
90000854:	485d      	ldr	r0, [pc, #372]	; (900009cc <MFRC522_Init+0x2e8>)
90000856:	9100      	str	r1, [sp, #0]
90000858:	a903      	add	r1, sp, #12
	uint8_t txArr[]= {send};
9000085a:	f88d 200c 	strb.w	r2, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
9000085e:	f10d 020f 	add.w	r2, sp, #15
90000862:	f00e fd13 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(value, &rcv, sizeof(rcv)) != HAL_OK) {
90000866:	2800      	cmp	r0, #0
90000868:	f040 8119 	bne.w	90000a9e <MFRC522_Init+0x3ba>
	__MFRC522_NSS_High()
9000086c:	2201      	movs	r2, #1
9000086e:	2108      	movs	r1, #8
90000870:	4855      	ldr	r0, [pc, #340]	; (900009c8 <MFRC522_Init+0x2e4>)
90000872:	f00a f8a3 	bl	9000a9bc <HAL_GPIO_WritePin>
	__MFRC522_NSS_Low()
90000876:	2200      	movs	r2, #0
90000878:	2108      	movs	r1, #8
9000087a:	4853      	ldr	r0, [pc, #332]	; (900009c8 <MFRC522_Init+0x2e4>)
9000087c:	f00a f89e 	bl	9000a9bc <HAL_GPIO_WritePin>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000880:	210a      	movs	r1, #10
	uint8_t txArr[]= {send};
90000882:	224c      	movs	r2, #76	; 0x4c
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000884:	2301      	movs	r3, #1
90000886:	9100      	str	r1, [sp, #0]
90000888:	a903      	add	r1, sp, #12
	uint8_t txArr[]= {send};
9000088a:	f88d 200c 	strb.w	r2, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
9000088e:	f10d 020f 	add.w	r2, sp, #15
90000892:	484e      	ldr	r0, [pc, #312]	; (900009cc <MFRC522_Init+0x2e8>)
90000894:	f00e fcfa 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(Convert_Write_Reg(reg_addr), &rcv, sizeof(rcv)) != HAL_OK) {
90000898:	2800      	cmp	r0, #0
9000089a:	f040 80fd 	bne.w	90000a98 <MFRC522_Init+0x3b4>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
9000089e:	210a      	movs	r1, #10
	uint8_t txArr[]= {send};
900008a0:	2270      	movs	r2, #112	; 0x70
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
900008a2:	2301      	movs	r3, #1
900008a4:	4849      	ldr	r0, [pc, #292]	; (900009cc <MFRC522_Init+0x2e8>)
900008a6:	9100      	str	r1, [sp, #0]
900008a8:	a903      	add	r1, sp, #12
	uint8_t txArr[]= {send};
900008aa:	f88d 200c 	strb.w	r2, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
900008ae:	f10d 020f 	add.w	r2, sp, #15
900008b2:	f00e fceb 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(value, &rcv, sizeof(rcv)) != HAL_OK) {
900008b6:	2800      	cmp	r0, #0
900008b8:	f040 80eb 	bne.w	90000a92 <MFRC522_Init+0x3ae>
	__MFRC522_NSS_High()
900008bc:	2201      	movs	r2, #1
900008be:	2108      	movs	r1, #8
900008c0:	4841      	ldr	r0, [pc, #260]	; (900009c8 <MFRC522_Init+0x2e4>)
900008c2:	f00a f87b 	bl	9000a9bc <HAL_GPIO_WritePin>
	__MFRC522_NSS_Low()
900008c6:	2200      	movs	r2, #0
900008c8:	2108      	movs	r1, #8
900008ca:	483f      	ldr	r0, [pc, #252]	; (900009c8 <MFRC522_Init+0x2e4>)
900008cc:	f00a f876 	bl	9000a9bc <HAL_GPIO_WritePin>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
900008d0:	210a      	movs	r1, #10
	uint8_t txArr[]= {send};
900008d2:	222a      	movs	r2, #42	; 0x2a
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
900008d4:	2301      	movs	r3, #1
900008d6:	9100      	str	r1, [sp, #0]
900008d8:	a903      	add	r1, sp, #12
	uint8_t txArr[]= {send};
900008da:	f88d 200c 	strb.w	r2, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
900008de:	f10d 020f 	add.w	r2, sp, #15
900008e2:	483a      	ldr	r0, [pc, #232]	; (900009cc <MFRC522_Init+0x2e8>)
900008e4:	f00e fcd2 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(Convert_Write_Reg(reg_addr), &rcv, sizeof(rcv)) != HAL_OK) {
900008e8:	2800      	cmp	r0, #0
900008ea:	f040 80cf 	bne.w	90000a8c <MFRC522_Init+0x3a8>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
900008ee:	210a      	movs	r1, #10
	uint8_t txArr[]= {send};
900008f0:	2240      	movs	r2, #64	; 0x40
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
900008f2:	2301      	movs	r3, #1
900008f4:	4835      	ldr	r0, [pc, #212]	; (900009cc <MFRC522_Init+0x2e8>)
900008f6:	9100      	str	r1, [sp, #0]
900008f8:	a903      	add	r1, sp, #12
	uint8_t txArr[]= {send};
900008fa:	f88d 200c 	strb.w	r2, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
900008fe:	f10d 020f 	add.w	r2, sp, #15
90000902:	f00e fcc3 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(value, &rcv, sizeof(rcv)) != HAL_OK) {
90000906:	2800      	cmp	r0, #0
90000908:	f040 80bd 	bne.w	90000a86 <MFRC522_Init+0x3a2>
	__MFRC522_NSS_High()
9000090c:	2201      	movs	r2, #1
9000090e:	2108      	movs	r1, #8
90000910:	482d      	ldr	r0, [pc, #180]	; (900009c8 <MFRC522_Init+0x2e4>)
90000912:	f00a f853 	bl	9000a9bc <HAL_GPIO_WritePin>
	__MFRC522_NSS_Low()
90000916:	2200      	movs	r2, #0
90000918:	2108      	movs	r1, #8
9000091a:	482b      	ldr	r0, [pc, #172]	; (900009c8 <MFRC522_Init+0x2e4>)
9000091c:	f00a f84e 	bl	9000a9bc <HAL_GPIO_WritePin>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000920:	210a      	movs	r1, #10
	uint8_t txArr[]= {send};
90000922:	2222      	movs	r2, #34	; 0x22
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000924:	2301      	movs	r3, #1
90000926:	9100      	str	r1, [sp, #0]
90000928:	a903      	add	r1, sp, #12
	uint8_t txArr[]= {send};
9000092a:	f88d 200c 	strb.w	r2, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
9000092e:	f10d 020f 	add.w	r2, sp, #15
90000932:	4826      	ldr	r0, [pc, #152]	; (900009cc <MFRC522_Init+0x2e8>)
90000934:	f00e fcaa 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(Convert_Write_Reg(reg_addr), &rcv, sizeof(rcv)) != HAL_OK) {
90000938:	2800      	cmp	r0, #0
9000093a:	f040 80a1 	bne.w	90000a80 <MFRC522_Init+0x39c>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
9000093e:	210a      	movs	r1, #10
	uint8_t txArr[]= {send};
90000940:	223d      	movs	r2, #61	; 0x3d
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000942:	2301      	movs	r3, #1
90000944:	4821      	ldr	r0, [pc, #132]	; (900009cc <MFRC522_Init+0x2e8>)
90000946:	9100      	str	r1, [sp, #0]
90000948:	a903      	add	r1, sp, #12
	uint8_t txArr[]= {send};
9000094a:	f88d 200c 	strb.w	r2, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
9000094e:	f10d 020f 	add.w	r2, sp, #15
90000952:	f00e fc9b 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(value, &rcv, sizeof(rcv)) != HAL_OK) {
90000956:	2800      	cmp	r0, #0
90000958:	f040 808f 	bne.w	90000a7a <MFRC522_Init+0x396>
	__MFRC522_NSS_High()
9000095c:	2201      	movs	r2, #1
9000095e:	2108      	movs	r1, #8
90000960:	4819      	ldr	r0, [pc, #100]	; (900009c8 <MFRC522_Init+0x2e4>)
90000962:	f00a f82b 	bl	9000a9bc <HAL_GPIO_WritePin>

uint8_t __MFRC522_Read(uint8_t reg_addr) {

	uint8_t rcv;

	__MFRC522_NSS_Low()
90000966:	2200      	movs	r2, #0
90000968:	2108      	movs	r1, #8
9000096a:	4817      	ldr	r0, [pc, #92]	; (900009c8 <MFRC522_Init+0x2e4>)
9000096c:	f00a f826 	bl	9000a9bc <HAL_GPIO_WritePin>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000970:	210a      	movs	r1, #10
	uint8_t txArr[]= {send};
90000972:	22a8      	movs	r2, #168	; 0xa8
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000974:	2301      	movs	r3, #1
90000976:	9100      	str	r1, [sp, #0]
90000978:	a903      	add	r1, sp, #12
	uint8_t txArr[]= {send};
9000097a:	f88d 200c 	strb.w	r2, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
9000097e:	f10d 020f 	add.w	r2, sp, #15
90000982:	4812      	ldr	r0, [pc, #72]	; (900009cc <MFRC522_Init+0x2e8>)
90000984:	f00e fc82 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(Convert_Read_Reg(reg_addr), &rcv, sizeof(rcv)) != HAL_OK) {
90000988:	2800      	cmp	r0, #0
9000098a:	d173      	bne.n	90000a74 <MFRC522_Init+0x390>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
9000098c:	210a      	movs	r1, #10
	uint8_t txArr[]= {send};
9000098e:	2200      	movs	r2, #0
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000990:	2301      	movs	r3, #1
90000992:	480e      	ldr	r0, [pc, #56]	; (900009cc <MFRC522_Init+0x2e8>)
90000994:	9100      	str	r1, [sp, #0]
90000996:	a903      	add	r1, sp, #12
	uint8_t txArr[]= {send};
90000998:	f88d 200c 	strb.w	r2, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
9000099c:	f10d 020f 	add.w	r2, sp, #15
900009a0:	f00e fc74 	bl	9000f28c <HAL_SPI_TransmitReceive>
		Error_Handler();
	}
	if (__SPI_Write_Receive(DUMMY, &rcv, sizeof(rcv)) != HAL_OK) {
900009a4:	2800      	cmp	r0, #0
900009a6:	d162      	bne.n	90000a6e <MFRC522_Init+0x38a>
		Error_Handler();
	}
	__MFRC522_NSS_High()
900009a8:	2201      	movs	r2, #1
900009aa:	2108      	movs	r1, #8
900009ac:	4806      	ldr	r0, [pc, #24]	; (900009c8 <MFRC522_Init+0x2e4>)
900009ae:	f00a f805 	bl	9000a9bc <HAL_GPIO_WritePin>

	return rcv;
900009b2:	f89d 200f 	ldrb.w	r2, [sp, #15]
	if (!((rcv = __MFRC522_Read(REG_TX_CONTROL)) & 0x03)) { // check if rcv is NOT 0x03 = 0011
900009b6:	f012 0203 	ands.w	r2, r2, #3
900009ba:	d009      	beq.n	900009d0 <MFRC522_Init+0x2ec>
}
900009bc:	b004      	add	sp, #16
900009be:	bd10      	pop	{r4, pc}
		Error_Handler();
900009c0:	f004 fd2c 	bl	9000541c <Error_Handler>
900009c4:	e6a4      	b.n	90000710 <MFRC522_Init+0x2c>
900009c6:	bf00      	nop
900009c8:	58021000 	.word	0x58021000
900009cc:	24009490 	.word	0x24009490
	__MFRC522_NSS_Low()
900009d0:	2108      	movs	r1, #8
900009d2:	4846      	ldr	r0, [pc, #280]	; (90000aec <MFRC522_Init+0x408>)
900009d4:	f009 fff2 	bl	9000a9bc <HAL_GPIO_WritePin>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
900009d8:	210a      	movs	r1, #10
	uint8_t txArr[]= {send};
900009da:	22a8      	movs	r2, #168	; 0xa8
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
900009dc:	2301      	movs	r3, #1
900009de:	9100      	str	r1, [sp, #0]
900009e0:	a903      	add	r1, sp, #12
	uint8_t txArr[]= {send};
900009e2:	f88d 200c 	strb.w	r2, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
900009e6:	f10d 020f 	add.w	r2, sp, #15
900009ea:	4841      	ldr	r0, [pc, #260]	; (90000af0 <MFRC522_Init+0x40c>)
900009ec:	f00e fc4e 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(Convert_Read_Reg(reg_addr), &rcv, sizeof(rcv)) != HAL_OK) {
900009f0:	2800      	cmp	r0, #0
900009f2:	d16f      	bne.n	90000ad4 <MFRC522_Init+0x3f0>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
900009f4:	210a      	movs	r1, #10
	uint8_t txArr[]= {send};
900009f6:	2200      	movs	r2, #0
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
900009f8:	2301      	movs	r3, #1
900009fa:	483d      	ldr	r0, [pc, #244]	; (90000af0 <MFRC522_Init+0x40c>)
900009fc:	9100      	str	r1, [sp, #0]
900009fe:	a903      	add	r1, sp, #12
	uint8_t txArr[]= {send};
90000a00:	f88d 200c 	strb.w	r2, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000a04:	f10d 020f 	add.w	r2, sp, #15
90000a08:	f00e fc40 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(DUMMY, &rcv, sizeof(rcv)) != HAL_OK) {
90000a0c:	2800      	cmp	r0, #0
90000a0e:	d16a      	bne.n	90000ae6 <MFRC522_Init+0x402>
	__MFRC522_NSS_High()
90000a10:	2201      	movs	r2, #1
90000a12:	2108      	movs	r1, #8
90000a14:	4835      	ldr	r0, [pc, #212]	; (90000aec <MFRC522_Init+0x408>)
90000a16:	f009 ffd1 	bl	9000a9bc <HAL_GPIO_WritePin>
	__MFRC522_NSS_Low()
90000a1a:	2200      	movs	r2, #0
90000a1c:	2108      	movs	r1, #8
90000a1e:	4833      	ldr	r0, [pc, #204]	; (90000aec <MFRC522_Init+0x408>)
	return rcv;
90000a20:	f89d 400f 	ldrb.w	r4, [sp, #15]
	__MFRC522_NSS_Low()
90000a24:	f009 ffca 	bl	9000a9bc <HAL_GPIO_WritePin>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000a28:	230a      	movs	r3, #10
	uint8_t txArr[]= {send};
90000a2a:	2228      	movs	r2, #40	; 0x28
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000a2c:	a903      	add	r1, sp, #12
90000a2e:	4830      	ldr	r0, [pc, #192]	; (90000af0 <MFRC522_Init+0x40c>)
90000a30:	9300      	str	r3, [sp, #0]
90000a32:	2301      	movs	r3, #1
	uint8_t txArr[]= {send};
90000a34:	f88d 200c 	strb.w	r2, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000a38:	f10d 020f 	add.w	r2, sp, #15
		Set_Bits(REG_TX_CONTROL, 0x03)
90000a3c:	f044 0403 	orr.w	r4, r4, #3
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000a40:	f00e fc24 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(Convert_Write_Reg(reg_addr), &rcv, sizeof(rcv)) != HAL_OK) {
90000a44:	2800      	cmp	r0, #0
90000a46:	d14b      	bne.n	90000ae0 <MFRC522_Init+0x3fc>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000a48:	200a      	movs	r0, #10
90000a4a:	2301      	movs	r3, #1
90000a4c:	f10d 020f 	add.w	r2, sp, #15
90000a50:	a903      	add	r1, sp, #12
90000a52:	9000      	str	r0, [sp, #0]
90000a54:	4826      	ldr	r0, [pc, #152]	; (90000af0 <MFRC522_Init+0x40c>)
	uint8_t txArr[]= {send};
90000a56:	f88d 400c 	strb.w	r4, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000a5a:	f00e fc17 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(value, &rcv, sizeof(rcv)) != HAL_OK) {
90000a5e:	bbe0      	cbnz	r0, 90000ada <MFRC522_Init+0x3f6>
	__MFRC522_NSS_High()
90000a60:	2201      	movs	r2, #1
90000a62:	2108      	movs	r1, #8
90000a64:	4821      	ldr	r0, [pc, #132]	; (90000aec <MFRC522_Init+0x408>)
90000a66:	f009 ffa9 	bl	9000a9bc <HAL_GPIO_WritePin>
}
90000a6a:	b004      	add	sp, #16
90000a6c:	bd10      	pop	{r4, pc}
		Error_Handler();
90000a6e:	f004 fcd5 	bl	9000541c <Error_Handler>
90000a72:	e799      	b.n	900009a8 <MFRC522_Init+0x2c4>
		Error_Handler();
90000a74:	f004 fcd2 	bl	9000541c <Error_Handler>
90000a78:	e788      	b.n	9000098c <MFRC522_Init+0x2a8>
		Error_Handler();
90000a7a:	f004 fccf 	bl	9000541c <Error_Handler>
90000a7e:	e76d      	b.n	9000095c <MFRC522_Init+0x278>
		Error_Handler();
90000a80:	f004 fccc 	bl	9000541c <Error_Handler>
90000a84:	e75b      	b.n	9000093e <MFRC522_Init+0x25a>
		Error_Handler();
90000a86:	f004 fcc9 	bl	9000541c <Error_Handler>
90000a8a:	e73f      	b.n	9000090c <MFRC522_Init+0x228>
		Error_Handler();
90000a8c:	f004 fcc6 	bl	9000541c <Error_Handler>
90000a90:	e72d      	b.n	900008ee <MFRC522_Init+0x20a>
		Error_Handler();
90000a92:	f004 fcc3 	bl	9000541c <Error_Handler>
90000a96:	e711      	b.n	900008bc <MFRC522_Init+0x1d8>
		Error_Handler();
90000a98:	f004 fcc0 	bl	9000541c <Error_Handler>
90000a9c:	e6ff      	b.n	9000089e <MFRC522_Init+0x1ba>
		Error_Handler();
90000a9e:	f004 fcbd 	bl	9000541c <Error_Handler>
90000aa2:	e6e3      	b.n	9000086c <MFRC522_Init+0x188>
		Error_Handler();
90000aa4:	f004 fcba 	bl	9000541c <Error_Handler>
90000aa8:	e6d1      	b.n	9000084e <MFRC522_Init+0x16a>
		Error_Handler();
90000aaa:	f004 fcb7 	bl	9000541c <Error_Handler>
90000aae:	e6b5      	b.n	9000081c <MFRC522_Init+0x138>
		Error_Handler();
90000ab0:	f004 fcb4 	bl	9000541c <Error_Handler>
90000ab4:	e6a3      	b.n	900007fe <MFRC522_Init+0x11a>
		Error_Handler();
90000ab6:	f004 fcb1 	bl	9000541c <Error_Handler>
90000aba:	e687      	b.n	900007cc <MFRC522_Init+0xe8>
		Error_Handler();
90000abc:	f004 fcae 	bl	9000541c <Error_Handler>
90000ac0:	e675      	b.n	900007ae <MFRC522_Init+0xca>
		Error_Handler();
90000ac2:	f004 fcab 	bl	9000541c <Error_Handler>
90000ac6:	e659      	b.n	9000077c <MFRC522_Init+0x98>
		Error_Handler();
90000ac8:	f004 fca8 	bl	9000541c <Error_Handler>
90000acc:	e647      	b.n	9000075e <MFRC522_Init+0x7a>
		Error_Handler();
90000ace:	f004 fca5 	bl	9000541c <Error_Handler>
90000ad2:	e62b      	b.n	9000072c <MFRC522_Init+0x48>
		Error_Handler();
90000ad4:	f004 fca2 	bl	9000541c <Error_Handler>
90000ad8:	e78c      	b.n	900009f4 <MFRC522_Init+0x310>
		Error_Handler();
90000ada:	f004 fc9f 	bl	9000541c <Error_Handler>
90000ade:	e7bf      	b.n	90000a60 <MFRC522_Init+0x37c>
		Error_Handler();
90000ae0:	f004 fc9c 	bl	9000541c <Error_Handler>
90000ae4:	e7b0      	b.n	90000a48 <MFRC522_Init+0x364>
		Error_Handler();
90000ae6:	f004 fc99 	bl	9000541c <Error_Handler>
90000aea:	e791      	b.n	90000a10 <MFRC522_Init+0x32c>
90000aec:	58021000 	.word	0x58021000
90000af0:	24009490 	.word	0x24009490

90000af4 <MFRC522_Cmp>:
	for (int i = 0; i<size; i++) {
90000af4:	b162      	cbz	r2, 90000b10 <MFRC522_Cmp+0x1c>
90000af6:	3901      	subs	r1, #1
90000af8:	4402      	add	r2, r0
90000afa:	e001      	b.n	90000b00 <MFRC522_Cmp+0xc>
90000afc:	4290      	cmp	r0, r2
90000afe:	d007      	beq.n	90000b10 <MFRC522_Cmp+0x1c>
		if (myID[i] != cmp[i]) {
90000b00:	f810 3b01 	ldrb.w	r3, [r0], #1
90000b04:	f811 cf01 	ldrb.w	ip, [r1, #1]!
90000b08:	459c      	cmp	ip, r3
90000b0a:	d0f7      	beq.n	90000afc <MFRC522_Cmp+0x8>
			return MFRC522_ERR;
90000b0c:	2001      	movs	r0, #1
}
90000b0e:	4770      	bx	lr
	return MFRC522_OK;
90000b10:	2000      	movs	r0, #0
90000b12:	4770      	bx	lr

90000b14 <MFRC522_Print_Terminal>:
void MFRC522_Print_Terminal(uint8_t *myID) {
90000b14:	b5f0      	push	{r4, r5, r6, r7, lr}
90000b16:	4606      	mov	r6, r0
90000b18:	b08f      	sub	sp, #60	; 0x3c
	char buffer[50] = {0};
90000b1a:	2100      	movs	r1, #0
		sprintf(&buffer[strlen(buffer)], "%u ", myID[i]);
90000b1c:	4f14      	ldr	r7, [pc, #80]	; (90000b70 <MFRC522_Print_Terminal+0x5c>)
90000b1e:	1e75      	subs	r5, r6, #1
90000b20:	ac01      	add	r4, sp, #4
90000b22:	3603      	adds	r6, #3
	char buffer[50] = {0};
90000b24:	222e      	movs	r2, #46	; 0x2e
90000b26:	a802      	add	r0, sp, #8
90000b28:	9101      	str	r1, [sp, #4]
90000b2a:	f029 fb9f 	bl	9002a26c <memset>
		sprintf(&buffer[strlen(buffer)], "%u ", myID[i]);
90000b2e:	4620      	mov	r0, r4
90000b30:	f7ff fbd6 	bl	900002e0 <strlen>
90000b34:	f815 2f01 	ldrb.w	r2, [r5, #1]!
90000b38:	4639      	mov	r1, r7
90000b3a:	4420      	add	r0, r4
90000b3c:	f029 fa9e 	bl	9002a07c <siprintf>
	for (int i = 0; i<4; i++) {
90000b40:	42b5      	cmp	r5, r6
90000b42:	d1f4      	bne.n	90000b2e <MFRC522_Print_Terminal+0x1a>
	strcat(buffer, "\r\n");
90000b44:	4620      	mov	r0, r4
90000b46:	f7ff fbcb 	bl	900002e0 <strlen>
90000b4a:	4b0a      	ldr	r3, [pc, #40]	; (90000b74 <MFRC522_Print_Terminal+0x60>)
90000b4c:	1825      	adds	r5, r4, r0
	if (HAL_UART_Transmit(&huart3, (const uint8_t *) buffer, 50, 10) != HAL_OK) {
90000b4e:	4621      	mov	r1, r4
	strcat(buffer, "\r\n");
90000b50:	881a      	ldrh	r2, [r3, #0]
90000b52:	789e      	ldrb	r6, [r3, #2]
	if (HAL_UART_Transmit(&huart3, (const uint8_t *) buffer, 50, 10) != HAL_OK) {
90000b54:	230a      	movs	r3, #10
	strcat(buffer, "\r\n");
90000b56:	5222      	strh	r2, [r4, r0]
	if (HAL_UART_Transmit(&huart3, (const uint8_t *) buffer, 50, 10) != HAL_OK) {
90000b58:	2232      	movs	r2, #50	; 0x32
90000b5a:	4807      	ldr	r0, [pc, #28]	; (90000b78 <MFRC522_Print_Terminal+0x64>)
	strcat(buffer, "\r\n");
90000b5c:	70ae      	strb	r6, [r5, #2]
	if (HAL_UART_Transmit(&huart3, (const uint8_t *) buffer, 50, 10) != HAL_OK) {
90000b5e:	f00e fec3 	bl	9000f8e8 <HAL_UART_Transmit>
90000b62:	b908      	cbnz	r0, 90000b68 <MFRC522_Print_Terminal+0x54>
}
90000b64:	b00f      	add	sp, #60	; 0x3c
90000b66:	bdf0      	pop	{r4, r5, r6, r7, pc}
		Error_Handler();
90000b68:	f004 fc58 	bl	9000541c <Error_Handler>
}
90000b6c:	b00f      	add	sp, #60	; 0x3c
90000b6e:	bdf0      	pop	{r4, r5, r6, r7, pc}
90000b70:	9002b174 	.word	0x9002b174
90000b74:	9002b178 	.word	0x9002b178
90000b78:	24009518 	.word	0x24009518

90000b7c <__MFRC522_Req>:
enum MFRC522_Status __MFRC522_Req(uint8_t command, uint8_t *myID) {
90000b7c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
	__MFRC522_NSS_Low()
90000b80:	2200      	movs	r2, #0
enum MFRC522_Status __MFRC522_Req(uint8_t command, uint8_t *myID) {
90000b82:	b084      	sub	sp, #16
90000b84:	4604      	mov	r4, r0
90000b86:	4688      	mov	r8, r1
	__MFRC522_NSS_Low()
90000b88:	48c9      	ldr	r0, [pc, #804]	; (90000eb0 <__MFRC522_Req+0x334>)
90000b8a:	2108      	movs	r1, #8
90000b8c:	f009 ff16 	bl	9000a9bc <HAL_GPIO_WritePin>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000b90:	220a      	movs	r2, #10
	uint8_t txArr[]= {send};
90000b92:	231a      	movs	r3, #26
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000b94:	a903      	add	r1, sp, #12
90000b96:	9200      	str	r2, [sp, #0]
90000b98:	f10d 020f 	add.w	r2, sp, #15
	uint8_t txArr[]= {send};
90000b9c:	f88d 300c 	strb.w	r3, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000ba0:	2301      	movs	r3, #1
90000ba2:	48c4      	ldr	r0, [pc, #784]	; (90000eb4 <__MFRC522_Req+0x338>)
90000ba4:	f00e fb72 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(Convert_Write_Reg(reg_addr), &rcv, sizeof(rcv)) != HAL_OK) {
90000ba8:	2800      	cmp	r0, #0
90000baa:	f040 824c 	bne.w	90001046 <__MFRC522_Req+0x4ca>
	uint8_t txArr[]= {send};
90000bae:	2307      	movs	r3, #7
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000bb0:	f10d 020f 	add.w	r2, sp, #15
90000bb4:	a903      	add	r1, sp, #12
90000bb6:	48bf      	ldr	r0, [pc, #764]	; (90000eb4 <__MFRC522_Req+0x338>)
	uint8_t txArr[]= {send};
90000bb8:	f88d 300c 	strb.w	r3, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000bbc:	230a      	movs	r3, #10
90000bbe:	9300      	str	r3, [sp, #0]
90000bc0:	2301      	movs	r3, #1
90000bc2:	f00e fb63 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(value, &rcv, sizeof(rcv)) != HAL_OK) {
90000bc6:	2800      	cmp	r0, #0
90000bc8:	f040 8352 	bne.w	90001270 <__MFRC522_Req+0x6f4>
	__MFRC522_NSS_High()
90000bcc:	2201      	movs	r2, #1
90000bce:	2108      	movs	r1, #8
90000bd0:	48b7      	ldr	r0, [pc, #732]	; (90000eb0 <__MFRC522_Req+0x334>)
90000bd2:	f009 fef3 	bl	9000a9bc <HAL_GPIO_WritePin>
	__MFRC522_NSS_Low()
90000bd6:	2200      	movs	r2, #0
90000bd8:	2108      	movs	r1, #8
90000bda:	48b5      	ldr	r0, [pc, #724]	; (90000eb0 <__MFRC522_Req+0x334>)
	myID[0] = command;
90000bdc:	f888 4000 	strb.w	r4, [r8]
	__MFRC522_NSS_Low()
90000be0:	f009 feec 	bl	9000a9bc <HAL_GPIO_WritePin>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000be4:	230a      	movs	r3, #10
	uint8_t txArr[]= {send};
90000be6:	2204      	movs	r2, #4
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000be8:	a903      	add	r1, sp, #12
90000bea:	9300      	str	r3, [sp, #0]
90000bec:	2301      	movs	r3, #1
	uint8_t txArr[]= {send};
90000bee:	f88d 200c 	strb.w	r2, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000bf2:	f10d 020f 	add.w	r2, sp, #15
90000bf6:	48af      	ldr	r0, [pc, #700]	; (90000eb4 <__MFRC522_Req+0x338>)
90000bf8:	f00e fb48 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(Convert_Write_Reg(reg_addr), &rcv, sizeof(rcv)) != HAL_OK) {
90000bfc:	2800      	cmp	r0, #0
90000bfe:	f040 8334 	bne.w	9000126a <__MFRC522_Req+0x6ee>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000c02:	230a      	movs	r3, #10
	uint8_t txArr[]= {send};
90000c04:	22f7      	movs	r2, #247	; 0xf7
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000c06:	a903      	add	r1, sp, #12
90000c08:	48aa      	ldr	r0, [pc, #680]	; (90000eb4 <__MFRC522_Req+0x338>)
90000c0a:	9300      	str	r3, [sp, #0]
90000c0c:	2301      	movs	r3, #1
	uint8_t txArr[]= {send};
90000c0e:	f88d 200c 	strb.w	r2, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000c12:	f10d 020f 	add.w	r2, sp, #15
90000c16:	f00e fb39 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(value, &rcv, sizeof(rcv)) != HAL_OK) {
90000c1a:	2800      	cmp	r0, #0
90000c1c:	f040 8322 	bne.w	90001264 <__MFRC522_Req+0x6e8>
	__MFRC522_NSS_High()
90000c20:	2201      	movs	r2, #1
90000c22:	2108      	movs	r1, #8
90000c24:	48a2      	ldr	r0, [pc, #648]	; (90000eb0 <__MFRC522_Req+0x334>)
90000c26:	f009 fec9 	bl	9000a9bc <HAL_GPIO_WritePin>
	__MFRC522_NSS_Low()
90000c2a:	2200      	movs	r2, #0
90000c2c:	2108      	movs	r1, #8
90000c2e:	48a0      	ldr	r0, [pc, #640]	; (90000eb0 <__MFRC522_Req+0x334>)
90000c30:	f009 fec4 	bl	9000a9bc <HAL_GPIO_WritePin>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000c34:	230a      	movs	r3, #10
	uint8_t txArr[]= {send};
90000c36:	2288      	movs	r2, #136	; 0x88
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000c38:	a903      	add	r1, sp, #12
90000c3a:	9300      	str	r3, [sp, #0]
90000c3c:	2301      	movs	r3, #1
	uint8_t txArr[]= {send};
90000c3e:	f88d 200c 	strb.w	r2, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000c42:	f10d 020f 	add.w	r2, sp, #15
90000c46:	489b      	ldr	r0, [pc, #620]	; (90000eb4 <__MFRC522_Req+0x338>)
90000c48:	f00e fb20 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(Convert_Read_Reg(reg_addr), &rcv, sizeof(rcv)) != HAL_OK) {
90000c4c:	2800      	cmp	r0, #0
90000c4e:	f040 8306 	bne.w	9000125e <__MFRC522_Req+0x6e2>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000c52:	230a      	movs	r3, #10
	uint8_t txArr[]= {send};
90000c54:	2200      	movs	r2, #0
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000c56:	a903      	add	r1, sp, #12
90000c58:	4896      	ldr	r0, [pc, #600]	; (90000eb4 <__MFRC522_Req+0x338>)
90000c5a:	9300      	str	r3, [sp, #0]
90000c5c:	2301      	movs	r3, #1
	uint8_t txArr[]= {send};
90000c5e:	f88d 200c 	strb.w	r2, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000c62:	f10d 020f 	add.w	r2, sp, #15
90000c66:	f00e fb11 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(DUMMY, &rcv, sizeof(rcv)) != HAL_OK) {
90000c6a:	2800      	cmp	r0, #0
90000c6c:	f040 82f4 	bne.w	90001258 <__MFRC522_Req+0x6dc>
	__MFRC522_NSS_High()
90000c70:	2201      	movs	r2, #1
90000c72:	2108      	movs	r1, #8
90000c74:	488e      	ldr	r0, [pc, #568]	; (90000eb0 <__MFRC522_Req+0x334>)
90000c76:	f009 fea1 	bl	9000a9bc <HAL_GPIO_WritePin>
	__MFRC522_NSS_Low()
90000c7a:	2200      	movs	r2, #0
90000c7c:	2108      	movs	r1, #8
90000c7e:	488c      	ldr	r0, [pc, #560]	; (90000eb0 <__MFRC522_Req+0x334>)
	return rcv;
90000c80:	f89d 400f 	ldrb.w	r4, [sp, #15]
	__MFRC522_NSS_Low()
90000c84:	f009 fe9a 	bl	9000a9bc <HAL_GPIO_WritePin>
	uint8_t txArr[]= {send};
90000c88:	2308      	movs	r3, #8
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000c8a:	f10d 020f 	add.w	r2, sp, #15
90000c8e:	a903      	add	r1, sp, #12
90000c90:	4888      	ldr	r0, [pc, #544]	; (90000eb4 <__MFRC522_Req+0x338>)
	uint8_t txArr[]= {send};
90000c92:	f88d 300c 	strb.w	r3, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000c96:	230a      	movs	r3, #10
	Clear_Bits(REG_IRQ_BITS, 0x80)
90000c98:	f004 047f 	and.w	r4, r4, #127	; 0x7f
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000c9c:	9300      	str	r3, [sp, #0]
90000c9e:	2301      	movs	r3, #1
90000ca0:	f00e faf4 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(Convert_Write_Reg(reg_addr), &rcv, sizeof(rcv)) != HAL_OK) {
90000ca4:	2800      	cmp	r0, #0
90000ca6:	f040 82d4 	bne.w	90001252 <__MFRC522_Req+0x6d6>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000caa:	230a      	movs	r3, #10
90000cac:	f10d 020f 	add.w	r2, sp, #15
90000cb0:	a903      	add	r1, sp, #12
90000cb2:	4880      	ldr	r0, [pc, #512]	; (90000eb4 <__MFRC522_Req+0x338>)
90000cb4:	9300      	str	r3, [sp, #0]
90000cb6:	2301      	movs	r3, #1
	uint8_t txArr[]= {send};
90000cb8:	f88d 400c 	strb.w	r4, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000cbc:	f00e fae6 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(value, &rcv, sizeof(rcv)) != HAL_OK) {
90000cc0:	2800      	cmp	r0, #0
90000cc2:	f040 82c3 	bne.w	9000124c <__MFRC522_Req+0x6d0>
	__MFRC522_NSS_High()
90000cc6:	2201      	movs	r2, #1
90000cc8:	2108      	movs	r1, #8
90000cca:	4879      	ldr	r0, [pc, #484]	; (90000eb0 <__MFRC522_Req+0x334>)
90000ccc:	f009 fe76 	bl	9000a9bc <HAL_GPIO_WritePin>
	__MFRC522_NSS_Low()
90000cd0:	2200      	movs	r2, #0
90000cd2:	2108      	movs	r1, #8
90000cd4:	4876      	ldr	r0, [pc, #472]	; (90000eb0 <__MFRC522_Req+0x334>)
90000cd6:	f009 fe71 	bl	9000a9bc <HAL_GPIO_WritePin>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000cda:	230a      	movs	r3, #10
	uint8_t txArr[]= {send};
90000cdc:	2294      	movs	r2, #148	; 0x94
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000cde:	a903      	add	r1, sp, #12
90000ce0:	9300      	str	r3, [sp, #0]
90000ce2:	2301      	movs	r3, #1
	uint8_t txArr[]= {send};
90000ce4:	f88d 200c 	strb.w	r2, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000ce8:	f10d 020f 	add.w	r2, sp, #15
90000cec:	4871      	ldr	r0, [pc, #452]	; (90000eb4 <__MFRC522_Req+0x338>)
90000cee:	f00e facd 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(Convert_Read_Reg(reg_addr), &rcv, sizeof(rcv)) != HAL_OK) {
90000cf2:	2800      	cmp	r0, #0
90000cf4:	f040 82a7 	bne.w	90001246 <__MFRC522_Req+0x6ca>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000cf8:	230a      	movs	r3, #10
	uint8_t txArr[]= {send};
90000cfa:	2200      	movs	r2, #0
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000cfc:	a903      	add	r1, sp, #12
90000cfe:	486d      	ldr	r0, [pc, #436]	; (90000eb4 <__MFRC522_Req+0x338>)
90000d00:	9300      	str	r3, [sp, #0]
90000d02:	2301      	movs	r3, #1
	uint8_t txArr[]= {send};
90000d04:	f88d 200c 	strb.w	r2, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000d08:	f10d 020f 	add.w	r2, sp, #15
90000d0c:	f00e fabe 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(DUMMY, &rcv, sizeof(rcv)) != HAL_OK) {
90000d10:	2800      	cmp	r0, #0
90000d12:	f040 8295 	bne.w	90001240 <__MFRC522_Req+0x6c4>
	__MFRC522_NSS_High()
90000d16:	2201      	movs	r2, #1
90000d18:	2108      	movs	r1, #8
90000d1a:	4865      	ldr	r0, [pc, #404]	; (90000eb0 <__MFRC522_Req+0x334>)
90000d1c:	f009 fe4e 	bl	9000a9bc <HAL_GPIO_WritePin>
	__MFRC522_NSS_Low()
90000d20:	2200      	movs	r2, #0
90000d22:	2108      	movs	r1, #8
90000d24:	4862      	ldr	r0, [pc, #392]	; (90000eb0 <__MFRC522_Req+0x334>)
	return rcv;
90000d26:	f89d 400f 	ldrb.w	r4, [sp, #15]
	__MFRC522_NSS_Low()
90000d2a:	f009 fe47 	bl	9000a9bc <HAL_GPIO_WritePin>
	uint8_t txArr[]= {send};
90000d2e:	2314      	movs	r3, #20
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000d30:	f10d 020f 	add.w	r2, sp, #15
90000d34:	a903      	add	r1, sp, #12
90000d36:	485f      	ldr	r0, [pc, #380]	; (90000eb4 <__MFRC522_Req+0x338>)
	uint8_t txArr[]= {send};
90000d38:	f88d 300c 	strb.w	r3, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000d3c:	230a      	movs	r3, #10
	Set_Bits(REG_FIFO_LEVEL, 0x80)
90000d3e:	f044 0480 	orr.w	r4, r4, #128	; 0x80
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000d42:	9300      	str	r3, [sp, #0]
90000d44:	2301      	movs	r3, #1
90000d46:	f00e faa1 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(Convert_Write_Reg(reg_addr), &rcv, sizeof(rcv)) != HAL_OK) {
90000d4a:	2800      	cmp	r0, #0
90000d4c:	f040 8275 	bne.w	9000123a <__MFRC522_Req+0x6be>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000d50:	230a      	movs	r3, #10
90000d52:	f10d 020f 	add.w	r2, sp, #15
90000d56:	a903      	add	r1, sp, #12
90000d58:	4856      	ldr	r0, [pc, #344]	; (90000eb4 <__MFRC522_Req+0x338>)
90000d5a:	9300      	str	r3, [sp, #0]
90000d5c:	2301      	movs	r3, #1
	uint8_t txArr[]= {send};
90000d5e:	f88d 400c 	strb.w	r4, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000d62:	f00e fa93 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(value, &rcv, sizeof(rcv)) != HAL_OK) {
90000d66:	2800      	cmp	r0, #0
90000d68:	f040 8264 	bne.w	90001234 <__MFRC522_Req+0x6b8>
	__MFRC522_NSS_High()
90000d6c:	2201      	movs	r2, #1
90000d6e:	2108      	movs	r1, #8
90000d70:	484f      	ldr	r0, [pc, #316]	; (90000eb0 <__MFRC522_Req+0x334>)
90000d72:	f009 fe23 	bl	9000a9bc <HAL_GPIO_WritePin>
	__MFRC522_NSS_Low()
90000d76:	2200      	movs	r2, #0
90000d78:	2108      	movs	r1, #8
90000d7a:	484d      	ldr	r0, [pc, #308]	; (90000eb0 <__MFRC522_Req+0x334>)
90000d7c:	f009 fe1e 	bl	9000a9bc <HAL_GPIO_WritePin>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000d80:	230a      	movs	r3, #10
	uint8_t txArr[]= {send};
90000d82:	2202      	movs	r2, #2
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000d84:	a903      	add	r1, sp, #12
90000d86:	9300      	str	r3, [sp, #0]
90000d88:	2301      	movs	r3, #1
	uint8_t txArr[]= {send};
90000d8a:	f88d 200c 	strb.w	r2, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000d8e:	f10d 020f 	add.w	r2, sp, #15
90000d92:	4848      	ldr	r0, [pc, #288]	; (90000eb4 <__MFRC522_Req+0x338>)
90000d94:	f00e fa7a 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(Convert_Write_Reg(reg_addr), &rcv, sizeof(rcv)) != HAL_OK) {
90000d98:	2800      	cmp	r0, #0
90000d9a:	f040 8248 	bne.w	9000122e <__MFRC522_Req+0x6b2>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000d9e:	230a      	movs	r3, #10
	uint8_t txArr[]= {send};
90000da0:	2200      	movs	r2, #0
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000da2:	a903      	add	r1, sp, #12
90000da4:	4843      	ldr	r0, [pc, #268]	; (90000eb4 <__MFRC522_Req+0x338>)
90000da6:	9300      	str	r3, [sp, #0]
90000da8:	2301      	movs	r3, #1
	uint8_t txArr[]= {send};
90000daa:	f88d 200c 	strb.w	r2, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000dae:	f10d 020f 	add.w	r2, sp, #15
90000db2:	f00e fa6b 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(value, &rcv, sizeof(rcv)) != HAL_OK) {
90000db6:	2800      	cmp	r0, #0
90000db8:	f040 8236 	bne.w	90001228 <__MFRC522_Req+0x6ac>
	__MFRC522_NSS_High()
90000dbc:	2201      	movs	r2, #1
90000dbe:	2108      	movs	r1, #8
90000dc0:	483b      	ldr	r0, [pc, #236]	; (90000eb0 <__MFRC522_Req+0x334>)
90000dc2:	f009 fdfb 	bl	9000a9bc <HAL_GPIO_WritePin>
	__MFRC522_NSS_Low()
90000dc6:	2200      	movs	r2, #0
90000dc8:	2108      	movs	r1, #8
90000dca:	4839      	ldr	r0, [pc, #228]	; (90000eb0 <__MFRC522_Req+0x334>)
		__MFRC522_Write(REG_FIFO_DATA, input[wait]);
90000dcc:	f898 5000 	ldrb.w	r5, [r8]
	__MFRC522_NSS_Low()
90000dd0:	f009 fdf4 	bl	9000a9bc <HAL_GPIO_WritePin>
	uint8_t txArr[]= {send};
90000dd4:	2312      	movs	r3, #18
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000dd6:	f10d 020f 	add.w	r2, sp, #15
90000dda:	a903      	add	r1, sp, #12
90000ddc:	4835      	ldr	r0, [pc, #212]	; (90000eb4 <__MFRC522_Req+0x338>)
	uint8_t txArr[]= {send};
90000dde:	f88d 300c 	strb.w	r3, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000de2:	230a      	movs	r3, #10
90000de4:	9300      	str	r3, [sp, #0]
90000de6:	2301      	movs	r3, #1
90000de8:	f00e fa50 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(Convert_Write_Reg(reg_addr), &rcv, sizeof(rcv)) != HAL_OK) {
90000dec:	b108      	cbz	r0, 90000df2 <__MFRC522_Req+0x276>
		Error_Handler();
90000dee:	f004 fb15 	bl	9000541c <Error_Handler>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000df2:	240a      	movs	r4, #10
90000df4:	2301      	movs	r3, #1
90000df6:	f10d 020f 	add.w	r2, sp, #15
90000dfa:	a903      	add	r1, sp, #12
90000dfc:	482d      	ldr	r0, [pc, #180]	; (90000eb4 <__MFRC522_Req+0x338>)
90000dfe:	9400      	str	r4, [sp, #0]
	uint8_t txArr[]= {send};
90000e00:	f88d 500c 	strb.w	r5, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000e04:	f00e fa42 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(value, &rcv, sizeof(rcv)) != HAL_OK) {
90000e08:	2800      	cmp	r0, #0
90000e0a:	f040 80c1 	bne.w	90000f90 <__MFRC522_Req+0x414>
	__MFRC522_NSS_High()
90000e0e:	2201      	movs	r2, #1
90000e10:	2108      	movs	r1, #8
90000e12:	4827      	ldr	r0, [pc, #156]	; (90000eb0 <__MFRC522_Req+0x334>)
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000e14:	250a      	movs	r5, #10
	__MFRC522_NSS_High()
90000e16:	f009 fdd1 	bl	9000a9bc <HAL_GPIO_WritePin>
	uint8_t txArr[]= {send};
90000e1a:	2402      	movs	r4, #2
	__MFRC522_NSS_Low()
90000e1c:	2200      	movs	r2, #0
90000e1e:	2108      	movs	r1, #8
90000e20:	4823      	ldr	r0, [pc, #140]	; (90000eb0 <__MFRC522_Req+0x334>)
90000e22:	f009 fdcb 	bl	9000a9bc <HAL_GPIO_WritePin>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000e26:	2301      	movs	r3, #1
90000e28:	f10d 020f 	add.w	r2, sp, #15
90000e2c:	a903      	add	r1, sp, #12
90000e2e:	4821      	ldr	r0, [pc, #132]	; (90000eb4 <__MFRC522_Req+0x338>)
90000e30:	9500      	str	r5, [sp, #0]
	uint8_t txArr[]= {send};
90000e32:	f88d 400c 	strb.w	r4, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000e36:	f00e fa29 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(Convert_Write_Reg(reg_addr), &rcv, sizeof(rcv)) != HAL_OK) {
90000e3a:	2800      	cmp	r0, #0
90000e3c:	f040 81f1 	bne.w	90001222 <__MFRC522_Req+0x6a6>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000e40:	230a      	movs	r3, #10
	uint8_t txArr[]= {send};
90000e42:	220c      	movs	r2, #12
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000e44:	a903      	add	r1, sp, #12
90000e46:	481b      	ldr	r0, [pc, #108]	; (90000eb4 <__MFRC522_Req+0x338>)
90000e48:	9300      	str	r3, [sp, #0]
90000e4a:	2301      	movs	r3, #1
	uint8_t txArr[]= {send};
90000e4c:	f88d 200c 	strb.w	r2, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000e50:	f10d 020f 	add.w	r2, sp, #15
90000e54:	f00e fa1a 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(value, &rcv, sizeof(rcv)) != HAL_OK) {
90000e58:	2800      	cmp	r0, #0
90000e5a:	f040 81df 	bne.w	9000121c <__MFRC522_Req+0x6a0>
	__MFRC522_NSS_High()
90000e5e:	2201      	movs	r2, #1
90000e60:	2108      	movs	r1, #8
90000e62:	4813      	ldr	r0, [pc, #76]	; (90000eb0 <__MFRC522_Req+0x334>)
90000e64:	f009 fdaa 	bl	9000a9bc <HAL_GPIO_WritePin>
	__MFRC522_NSS_Low()
90000e68:	2200      	movs	r2, #0
90000e6a:	2108      	movs	r1, #8
90000e6c:	4810      	ldr	r0, [pc, #64]	; (90000eb0 <__MFRC522_Req+0x334>)
90000e6e:	f009 fda5 	bl	9000a9bc <HAL_GPIO_WritePin>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000e72:	230a      	movs	r3, #10
	uint8_t txArr[]= {send};
90000e74:	229a      	movs	r2, #154	; 0x9a
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000e76:	a903      	add	r1, sp, #12
90000e78:	9300      	str	r3, [sp, #0]
90000e7a:	2301      	movs	r3, #1
	uint8_t txArr[]= {send};
90000e7c:	f88d 200c 	strb.w	r2, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000e80:	f10d 020f 	add.w	r2, sp, #15
90000e84:	480b      	ldr	r0, [pc, #44]	; (90000eb4 <__MFRC522_Req+0x338>)
90000e86:	f00e fa01 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(Convert_Read_Reg(reg_addr), &rcv, sizeof(rcv)) != HAL_OK) {
90000e8a:	2800      	cmp	r0, #0
90000e8c:	f040 81c3 	bne.w	90001216 <__MFRC522_Req+0x69a>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000e90:	230a      	movs	r3, #10
	uint8_t txArr[]= {send};
90000e92:	2200      	movs	r2, #0
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000e94:	a903      	add	r1, sp, #12
90000e96:	4807      	ldr	r0, [pc, #28]	; (90000eb4 <__MFRC522_Req+0x338>)
90000e98:	9300      	str	r3, [sp, #0]
90000e9a:	2301      	movs	r3, #1
	uint8_t txArr[]= {send};
90000e9c:	f88d 200c 	strb.w	r2, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000ea0:	f10d 020f 	add.w	r2, sp, #15
90000ea4:	f00e f9f2 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(DUMMY, &rcv, sizeof(rcv)) != HAL_OK) {
90000ea8:	2800      	cmp	r0, #0
90000eaa:	f040 81b1 	bne.w	90001210 <__MFRC522_Req+0x694>
90000eae:	e003      	b.n	90000eb8 <__MFRC522_Req+0x33c>
90000eb0:	58021000 	.word	0x58021000
90000eb4:	24009490 	.word	0x24009490
	__MFRC522_NSS_High()
90000eb8:	2201      	movs	r2, #1
90000eba:	2108      	movs	r1, #8
90000ebc:	4863      	ldr	r0, [pc, #396]	; (9000104c <__MFRC522_Req+0x4d0>)
90000ebe:	f009 fd7d 	bl	9000a9bc <HAL_GPIO_WritePin>
	__MFRC522_NSS_Low()
90000ec2:	2200      	movs	r2, #0
90000ec4:	2108      	movs	r1, #8
90000ec6:	4861      	ldr	r0, [pc, #388]	; (9000104c <__MFRC522_Req+0x4d0>)
	return rcv;
90000ec8:	f89d 400f 	ldrb.w	r4, [sp, #15]
	__MFRC522_NSS_Low()
90000ecc:	f009 fd76 	bl	9000a9bc <HAL_GPIO_WritePin>
	uint8_t txArr[]= {send};
90000ed0:	231a      	movs	r3, #26
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000ed2:	f10d 020f 	add.w	r2, sp, #15
90000ed6:	a903      	add	r1, sp, #12
90000ed8:	485d      	ldr	r0, [pc, #372]	; (90001050 <__MFRC522_Req+0x4d4>)
	uint8_t txArr[]= {send};
90000eda:	f88d 300c 	strb.w	r3, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000ede:	230a      	movs	r3, #10
		Set_Bits(REG_BIT_FRAMING, 0x80)
90000ee0:	f044 0480 	orr.w	r4, r4, #128	; 0x80
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000ee4:	9300      	str	r3, [sp, #0]
90000ee6:	2301      	movs	r3, #1
90000ee8:	f00e f9d0 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(Convert_Write_Reg(reg_addr), &rcv, sizeof(rcv)) != HAL_OK) {
90000eec:	2800      	cmp	r0, #0
90000eee:	f040 818c 	bne.w	9000120a <__MFRC522_Req+0x68e>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000ef2:	230a      	movs	r3, #10
90000ef4:	f10d 020f 	add.w	r2, sp, #15
90000ef8:	a903      	add	r1, sp, #12
90000efa:	4855      	ldr	r0, [pc, #340]	; (90001050 <__MFRC522_Req+0x4d4>)
90000efc:	9300      	str	r3, [sp, #0]
90000efe:	2301      	movs	r3, #1
	uint8_t txArr[]= {send};
90000f00:	f88d 400c 	strb.w	r4, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000f04:	f00e f9c2 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(value, &rcv, sizeof(rcv)) != HAL_OK) {
90000f08:	2800      	cmp	r0, #0
90000f0a:	f040 817b 	bne.w	90001204 <__MFRC522_Req+0x688>
	__MFRC522_NSS_Low()
90000f0e:	4f4f      	ldr	r7, [pc, #316]	; (9000104c <__MFRC522_Req+0x4d0>)
	__MFRC522_NSS_High()
90000f10:	2201      	movs	r2, #1
90000f12:	2108      	movs	r1, #8
90000f14:	f44f 64fa 	mov.w	r4, #2000	; 0x7d0
90000f18:	4638      	mov	r0, r7
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000f1a:	4e4d      	ldr	r6, [pc, #308]	; (90001050 <__MFRC522_Req+0x4d4>)
	__MFRC522_NSS_High()
90000f1c:	f009 fd4e 	bl	9000a9bc <HAL_GPIO_WritePin>
90000f20:	e01b      	b.n	90000f5a <__MFRC522_Req+0x3de>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000f22:	f04f 0c0a 	mov.w	ip, #10
	uint8_t txArr[]= {send};
90000f26:	2500      	movs	r5, #0
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000f28:	2301      	movs	r3, #1
90000f2a:	f10d 020f 	add.w	r2, sp, #15
90000f2e:	a903      	add	r1, sp, #12
90000f30:	4630      	mov	r0, r6
90000f32:	f8cd c000 	str.w	ip, [sp]
	uint8_t txArr[]= {send};
90000f36:	f88d 500c 	strb.w	r5, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000f3a:	f00e f9a7 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(DUMMY, &rcv, sizeof(rcv)) != HAL_OK) {
90000f3e:	bb20      	cbnz	r0, 90000f8a <__MFRC522_Req+0x40e>
		wait--;
90000f40:	3c01      	subs	r4, #1
	__MFRC522_NSS_High()
90000f42:	2201      	movs	r2, #1
90000f44:	2108      	movs	r1, #8
90000f46:	4638      	mov	r0, r7
		wait--;
90000f48:	b2a4      	uxth	r4, r4
	__MFRC522_NSS_High()
90000f4a:	f009 fd37 	bl	9000a9bc <HAL_GPIO_WritePin>
	return rcv;
90000f4e:	f89d 500f 	ldrb.w	r5, [sp, #15]
	} while ((wait != 0) && !(value & 0x01) && !(value & waitIrq));
90000f52:	b304      	cbz	r4, 90000f96 <__MFRC522_Req+0x41a>
90000f54:	f015 0f31 	tst.w	r5, #49	; 0x31
90000f58:	d11d      	bne.n	90000f96 <__MFRC522_Req+0x41a>
	__MFRC522_NSS_Low()
90000f5a:	2200      	movs	r2, #0
90000f5c:	2108      	movs	r1, #8
90000f5e:	4638      	mov	r0, r7
	uint8_t txArr[]= {send};
90000f60:	2588      	movs	r5, #136	; 0x88
	__MFRC522_NSS_Low()
90000f62:	f009 fd2b 	bl	9000a9bc <HAL_GPIO_WritePin>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000f66:	f04f 0c0a 	mov.w	ip, #10
90000f6a:	2301      	movs	r3, #1
90000f6c:	f10d 020f 	add.w	r2, sp, #15
90000f70:	a903      	add	r1, sp, #12
90000f72:	4630      	mov	r0, r6
90000f74:	f8cd c000 	str.w	ip, [sp]
	uint8_t txArr[]= {send};
90000f78:	f88d 500c 	strb.w	r5, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000f7c:	f00e f986 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(Convert_Read_Reg(reg_addr), &rcv, sizeof(rcv)) != HAL_OK) {
90000f80:	2800      	cmp	r0, #0
90000f82:	d0ce      	beq.n	90000f22 <__MFRC522_Req+0x3a6>
		Error_Handler();
90000f84:	f004 fa4a 	bl	9000541c <Error_Handler>
90000f88:	e7cb      	b.n	90000f22 <__MFRC522_Req+0x3a6>
		Error_Handler();
90000f8a:	f004 fa47 	bl	9000541c <Error_Handler>
90000f8e:	e7d7      	b.n	90000f40 <__MFRC522_Req+0x3c4>
		Error_Handler();
90000f90:	f004 fa44 	bl	9000541c <Error_Handler>
90000f94:	e73b      	b.n	90000e0e <__MFRC522_Req+0x292>
	__MFRC522_NSS_Low()
90000f96:	2200      	movs	r2, #0
90000f98:	2108      	movs	r1, #8
90000f9a:	482c      	ldr	r0, [pc, #176]	; (9000104c <__MFRC522_Req+0x4d0>)
90000f9c:	f009 fd0e 	bl	9000a9bc <HAL_GPIO_WritePin>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000fa0:	230a      	movs	r3, #10
90000fa2:	f10d 020f 	add.w	r2, sp, #15
90000fa6:	a903      	add	r1, sp, #12
90000fa8:	9300      	str	r3, [sp, #0]
	uint8_t txArr[]= {send};
90000faa:	239a      	movs	r3, #154	; 0x9a
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000fac:	4828      	ldr	r0, [pc, #160]	; (90001050 <__MFRC522_Req+0x4d4>)
	uint8_t txArr[]= {send};
90000fae:	f88d 300c 	strb.w	r3, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000fb2:	2301      	movs	r3, #1
90000fb4:	f00e f96a 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(Convert_Read_Reg(reg_addr), &rcv, sizeof(rcv)) != HAL_OK) {
90000fb8:	2800      	cmp	r0, #0
90000fba:	f040 8120 	bne.w	900011fe <__MFRC522_Req+0x682>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000fbe:	230a      	movs	r3, #10
90000fc0:	f10d 020f 	add.w	r2, sp, #15
90000fc4:	a903      	add	r1, sp, #12
90000fc6:	4822      	ldr	r0, [pc, #136]	; (90001050 <__MFRC522_Req+0x4d4>)
90000fc8:	9300      	str	r3, [sp, #0]
	uint8_t txArr[]= {send};
90000fca:	2300      	movs	r3, #0
90000fcc:	f88d 300c 	strb.w	r3, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000fd0:	2301      	movs	r3, #1
90000fd2:	f00e f95b 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(DUMMY, &rcv, sizeof(rcv)) != HAL_OK) {
90000fd6:	2800      	cmp	r0, #0
90000fd8:	f040 810e 	bne.w	900011f8 <__MFRC522_Req+0x67c>
	__MFRC522_NSS_High()
90000fdc:	2201      	movs	r2, #1
90000fde:	2108      	movs	r1, #8
90000fe0:	481a      	ldr	r0, [pc, #104]	; (9000104c <__MFRC522_Req+0x4d0>)
90000fe2:	f009 fceb 	bl	9000a9bc <HAL_GPIO_WritePin>
	__MFRC522_NSS_Low()
90000fe6:	2200      	movs	r2, #0
90000fe8:	2108      	movs	r1, #8
90000fea:	4818      	ldr	r0, [pc, #96]	; (9000104c <__MFRC522_Req+0x4d0>)
	return rcv;
90000fec:	f89d 600f 	ldrb.w	r6, [sp, #15]
	__MFRC522_NSS_Low()
90000ff0:	f009 fce4 	bl	9000a9bc <HAL_GPIO_WritePin>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90000ff4:	230a      	movs	r3, #10
90000ff6:	f10d 020f 	add.w	r2, sp, #15
90000ffa:	a903      	add	r1, sp, #12
90000ffc:	4814      	ldr	r0, [pc, #80]	; (90001050 <__MFRC522_Req+0x4d4>)
90000ffe:	9300      	str	r3, [sp, #0]
	uint8_t txArr[]= {send};
90001000:	231a      	movs	r3, #26
	Clear_Bits(REG_BIT_FRAMING, 0x80)
90001002:	f006 067f 	and.w	r6, r6, #127	; 0x7f
	uint8_t txArr[]= {send};
90001006:	f88d 300c 	strb.w	r3, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
9000100a:	2301      	movs	r3, #1
9000100c:	f00e f93e 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(Convert_Write_Reg(reg_addr), &rcv, sizeof(rcv)) != HAL_OK) {
90001010:	2800      	cmp	r0, #0
90001012:	f040 80ee 	bne.w	900011f2 <__MFRC522_Req+0x676>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001016:	230a      	movs	r3, #10
90001018:	f10d 020f 	add.w	r2, sp, #15
9000101c:	a903      	add	r1, sp, #12
9000101e:	480c      	ldr	r0, [pc, #48]	; (90001050 <__MFRC522_Req+0x4d4>)
90001020:	9300      	str	r3, [sp, #0]
90001022:	2301      	movs	r3, #1
	uint8_t txArr[]= {send};
90001024:	f88d 600c 	strb.w	r6, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001028:	f00e f930 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(value, &rcv, sizeof(rcv)) != HAL_OK) {
9000102c:	2800      	cmp	r0, #0
9000102e:	f040 80dd 	bne.w	900011ec <__MFRC522_Req+0x670>
	__MFRC522_NSS_High()
90001032:	2201      	movs	r2, #1
90001034:	2108      	movs	r1, #8
90001036:	4805      	ldr	r0, [pc, #20]	; (9000104c <__MFRC522_Req+0x4d0>)
90001038:	f009 fcc0 	bl	9000a9bc <HAL_GPIO_WritePin>
	if (wait != 0) {
9000103c:	b954      	cbnz	r4, 90001054 <__MFRC522_Req+0x4d8>
		status = MFRC522_ERR;
9000103e:	2001      	movs	r0, #1
}
90001040:	b004      	add	sp, #16
90001042:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		Error_Handler();
90001046:	f004 f9e9 	bl	9000541c <Error_Handler>
9000104a:	e5b0      	b.n	90000bae <__MFRC522_Req+0x32>
9000104c:	58021000 	.word	0x58021000
90001050:	24009490 	.word	0x24009490
	__MFRC522_NSS_Low()
90001054:	2200      	movs	r2, #0
90001056:	2108      	movs	r1, #8
90001058:	489a      	ldr	r0, [pc, #616]	; (900012c4 <__MFRC522_Req+0x748>)
9000105a:	f009 fcaf 	bl	9000a9bc <HAL_GPIO_WritePin>
	uint8_t txArr[]= {send};
9000105e:	238c      	movs	r3, #140	; 0x8c
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001060:	f10d 020f 	add.w	r2, sp, #15
90001064:	a903      	add	r1, sp, #12
	uint8_t txArr[]= {send};
90001066:	f88d 300c 	strb.w	r3, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
9000106a:	230a      	movs	r3, #10
9000106c:	4896      	ldr	r0, [pc, #600]	; (900012c8 <__MFRC522_Req+0x74c>)
9000106e:	9300      	str	r3, [sp, #0]
90001070:	2301      	movs	r3, #1
90001072:	f00e f90b 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(Convert_Read_Reg(reg_addr), &rcv, sizeof(rcv)) != HAL_OK) {
90001076:	2800      	cmp	r0, #0
90001078:	f040 8112 	bne.w	900012a0 <__MFRC522_Req+0x724>
	uint8_t txArr[]= {send};
9000107c:	2300      	movs	r3, #0
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
9000107e:	f10d 020f 	add.w	r2, sp, #15
90001082:	a903      	add	r1, sp, #12
90001084:	4890      	ldr	r0, [pc, #576]	; (900012c8 <__MFRC522_Req+0x74c>)
	uint8_t txArr[]= {send};
90001086:	f88d 300c 	strb.w	r3, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
9000108a:	230a      	movs	r3, #10
9000108c:	9300      	str	r3, [sp, #0]
9000108e:	2301      	movs	r3, #1
90001090:	f00e f8fc 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(DUMMY, &rcv, sizeof(rcv)) != HAL_OK) {
90001094:	2800      	cmp	r0, #0
90001096:	f040 8100 	bne.w	9000129a <__MFRC522_Req+0x71e>
	__MFRC522_NSS_High()
9000109a:	2201      	movs	r2, #1
9000109c:	2108      	movs	r1, #8
9000109e:	4889      	ldr	r0, [pc, #548]	; (900012c4 <__MFRC522_Req+0x748>)
900010a0:	f009 fc8c 	bl	9000a9bc <HAL_GPIO_WritePin>
	return rcv;
900010a4:	f89d 200f 	ldrb.w	r2, [sp, #15]
		if (!(__MFRC522_Read(REG_ERROR) & 0x1B)) {
900010a8:	f012 021b 	ands.w	r2, r2, #27
900010ac:	d1c7      	bne.n	9000103e <__MFRC522_Req+0x4c2>
	__MFRC522_NSS_Low()
900010ae:	2108      	movs	r1, #8
900010b0:	4884      	ldr	r0, [pc, #528]	; (900012c4 <__MFRC522_Req+0x748>)
900010b2:	f009 fc83 	bl	9000a9bc <HAL_GPIO_WritePin>
	uint8_t txArr[]= {send};
900010b6:	2394      	movs	r3, #148	; 0x94
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
900010b8:	f10d 020f 	add.w	r2, sp, #15
900010bc:	a903      	add	r1, sp, #12
	uint8_t txArr[]= {send};
900010be:	f88d 300c 	strb.w	r3, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
900010c2:	230a      	movs	r3, #10
900010c4:	4880      	ldr	r0, [pc, #512]	; (900012c8 <__MFRC522_Req+0x74c>)
900010c6:	9300      	str	r3, [sp, #0]
900010c8:	2301      	movs	r3, #1
900010ca:	f00e f8df 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(Convert_Read_Reg(reg_addr), &rcv, sizeof(rcv)) != HAL_OK) {
900010ce:	2800      	cmp	r0, #0
900010d0:	f040 80f4 	bne.w	900012bc <__MFRC522_Req+0x740>
	uint8_t txArr[]= {send};
900010d4:	2300      	movs	r3, #0
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
900010d6:	f10d 020f 	add.w	r2, sp, #15
900010da:	a903      	add	r1, sp, #12
900010dc:	487a      	ldr	r0, [pc, #488]	; (900012c8 <__MFRC522_Req+0x74c>)
	uint8_t txArr[]= {send};
900010de:	f88d 300c 	strb.w	r3, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
900010e2:	230a      	movs	r3, #10
900010e4:	9300      	str	r3, [sp, #0]
900010e6:	2301      	movs	r3, #1
900010e8:	f00e f8d0 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(DUMMY, &rcv, sizeof(rcv)) != HAL_OK) {
900010ec:	2800      	cmp	r0, #0
900010ee:	f040 80e2 	bne.w	900012b6 <__MFRC522_Req+0x73a>
	__MFRC522_NSS_High()
900010f2:	2201      	movs	r2, #1
900010f4:	2108      	movs	r1, #8
900010f6:	4873      	ldr	r0, [pc, #460]	; (900012c4 <__MFRC522_Req+0x748>)
900010f8:	f009 fc60 	bl	9000a9bc <HAL_GPIO_WritePin>
	__MFRC522_NSS_Low()
900010fc:	2200      	movs	r2, #0
900010fe:	2108      	movs	r1, #8
90001100:	4870      	ldr	r0, [pc, #448]	; (900012c4 <__MFRC522_Req+0x748>)
	return rcv;
90001102:	f89d 400f 	ldrb.w	r4, [sp, #15]
	__MFRC522_NSS_Low()
90001106:	f009 fc59 	bl	9000a9bc <HAL_GPIO_WritePin>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
9000110a:	230a      	movs	r3, #10
9000110c:	f10d 020f 	add.w	r2, sp, #15
90001110:	a903      	add	r1, sp, #12
90001112:	486d      	ldr	r0, [pc, #436]	; (900012c8 <__MFRC522_Req+0x74c>)
90001114:	9300      	str	r3, [sp, #0]
	uint8_t txArr[]= {send};
90001116:	2398      	movs	r3, #152	; 0x98
90001118:	f88d 300c 	strb.w	r3, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
9000111c:	2301      	movs	r3, #1
9000111e:	f00e f8b5 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(Convert_Read_Reg(reg_addr), &rcv, sizeof(rcv)) != HAL_OK) {
90001122:	2800      	cmp	r0, #0
90001124:	f040 80c4 	bne.w	900012b0 <__MFRC522_Req+0x734>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001128:	230a      	movs	r3, #10
9000112a:	f10d 020f 	add.w	r2, sp, #15
9000112e:	a903      	add	r1, sp, #12
90001130:	4865      	ldr	r0, [pc, #404]	; (900012c8 <__MFRC522_Req+0x74c>)
90001132:	9300      	str	r3, [sp, #0]
	uint8_t txArr[]= {send};
90001134:	2300      	movs	r3, #0
90001136:	f88d 300c 	strb.w	r3, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
9000113a:	2301      	movs	r3, #1
9000113c:	f00e f8a6 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(DUMMY, &rcv, sizeof(rcv)) != HAL_OK) {
90001140:	2800      	cmp	r0, #0
90001142:	f040 80b2 	bne.w	900012aa <__MFRC522_Req+0x72e>
	__MFRC522_NSS_High()
90001146:	2201      	movs	r2, #1
90001148:	2108      	movs	r1, #8
9000114a:	485e      	ldr	r0, [pc, #376]	; (900012c4 <__MFRC522_Req+0x748>)
9000114c:	f009 fc36 	bl	9000a9bc <HAL_GPIO_WritePin>
	return rcv;
90001150:	f89d 300f 	ldrb.w	r3, [sp, #15]
				if (lastBits) {
90001154:	f013 0307 	ands.w	r3, r3, #7
90001158:	f000 80a5 	beq.w	900012a6 <__MFRC522_Req+0x72a>
					*outputLength = (value - 1) * 8 + lastBits;
9000115c:	1e62      	subs	r2, r4, #1
9000115e:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
90001162:	b29f      	uxth	r7, r3
				for (wait = 0; wait < value; wait++) {
90001164:	2c10      	cmp	r4, #16
	__MFRC522_NSS_Low()
90001166:	f04f 0a00 	mov.w	sl, #0
9000116a:	f8df 9158 	ldr.w	r9, [pc, #344]	; 900012c4 <__MFRC522_Req+0x748>
				for (wait = 0; wait < value; wait++) {
9000116e:	bf28      	it	cs
90001170:	2410      	movcs	r4, #16
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001172:	4e55      	ldr	r6, [pc, #340]	; (900012c8 <__MFRC522_Req+0x74c>)
				for (wait = 0; wait < value; wait++) {
90001174:	2c01      	cmp	r4, #1
90001176:	bf38      	it	cc
90001178:	2401      	movcc	r4, #1
9000117a:	3c01      	subs	r4, #1
9000117c:	fa18 f484 	uxtah	r4, r8, r4
90001180:	f108 38ff 	add.w	r8, r8, #4294967295
	__MFRC522_NSS_Low()
90001184:	2200      	movs	r2, #0
90001186:	2108      	movs	r1, #8
90001188:	4648      	mov	r0, r9
9000118a:	f009 fc17 	bl	9000a9bc <HAL_GPIO_WritePin>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
9000118e:	230a      	movs	r3, #10
	uint8_t txArr[]= {send};
90001190:	2292      	movs	r2, #146	; 0x92
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001192:	a903      	add	r1, sp, #12
90001194:	9300      	str	r3, [sp, #0]
90001196:	4630      	mov	r0, r6
	uint8_t txArr[]= {send};
90001198:	f88d 200c 	strb.w	r2, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
9000119c:	2301      	movs	r3, #1
9000119e:	f10d 020f 	add.w	r2, sp, #15
900011a2:	f00e f873 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(Convert_Read_Reg(reg_addr), &rcv, sizeof(rcv)) != HAL_OK) {
900011a6:	2800      	cmp	r0, #0
900011a8:	d174      	bne.n	90001294 <__MFRC522_Req+0x718>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
900011aa:	220a      	movs	r2, #10
900011ac:	2301      	movs	r3, #1
900011ae:	a903      	add	r1, sp, #12
900011b0:	4630      	mov	r0, r6
900011b2:	9200      	str	r2, [sp, #0]
900011b4:	f10d 020f 	add.w	r2, sp, #15
	uint8_t txArr[]= {send};
900011b8:	f88d a00c 	strb.w	sl, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
900011bc:	f00e f866 	bl	9000f28c <HAL_SPI_TransmitReceive>
	__MFRC522_NSS_High()
900011c0:	2201      	movs	r2, #1
	if (__SPI_Write_Receive(DUMMY, &rcv, sizeof(rcv)) != HAL_OK) {
900011c2:	2800      	cmp	r0, #0
900011c4:	d157      	bne.n	90001276 <__MFRC522_Req+0x6fa>
	__MFRC522_NSS_High()
900011c6:	2108      	movs	r1, #8
900011c8:	4648      	mov	r0, r9
900011ca:	f009 fbf7 	bl	9000a9bc <HAL_GPIO_WritePin>
	return rcv;
900011ce:	f89d 300f 	ldrb.w	r3, [sp, #15]
					output[wait] = __MFRC522_Read(REG_FIFO_DATA);
900011d2:	f808 3f01 	strb.w	r3, [r8, #1]!
				for (wait = 0; wait < value; wait++) {
900011d6:	4544      	cmp	r4, r8
900011d8:	d1d4      	bne.n	90001184 <__MFRC522_Req+0x608>
	if (((status = __MFRC522_Compute(CMD_TRANSCEIVE, myID, 1, myID, &rcv)) != MFRC522_OK ) || (rcv != 0x10)) {
900011da:	f005 0001 	and.w	r0, r5, #1
900011de:	2f10      	cmp	r7, #16
900011e0:	bf18      	it	ne
900011e2:	f040 0001 	orrne.w	r0, r0, #1
}
900011e6:	b004      	add	sp, #16
900011e8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		Error_Handler();
900011ec:	f004 f916 	bl	9000541c <Error_Handler>
900011f0:	e71f      	b.n	90001032 <__MFRC522_Req+0x4b6>
		Error_Handler();
900011f2:	f004 f913 	bl	9000541c <Error_Handler>
900011f6:	e70e      	b.n	90001016 <__MFRC522_Req+0x49a>
		Error_Handler();
900011f8:	f004 f910 	bl	9000541c <Error_Handler>
900011fc:	e6ee      	b.n	90000fdc <__MFRC522_Req+0x460>
		Error_Handler();
900011fe:	f004 f90d 	bl	9000541c <Error_Handler>
90001202:	e6dc      	b.n	90000fbe <__MFRC522_Req+0x442>
		Error_Handler();
90001204:	f004 f90a 	bl	9000541c <Error_Handler>
90001208:	e681      	b.n	90000f0e <__MFRC522_Req+0x392>
		Error_Handler();
9000120a:	f004 f907 	bl	9000541c <Error_Handler>
9000120e:	e670      	b.n	90000ef2 <__MFRC522_Req+0x376>
		Error_Handler();
90001210:	f004 f904 	bl	9000541c <Error_Handler>
90001214:	e650      	b.n	90000eb8 <__MFRC522_Req+0x33c>
		Error_Handler();
90001216:	f004 f901 	bl	9000541c <Error_Handler>
9000121a:	e639      	b.n	90000e90 <__MFRC522_Req+0x314>
		Error_Handler();
9000121c:	f004 f8fe 	bl	9000541c <Error_Handler>
90001220:	e61d      	b.n	90000e5e <__MFRC522_Req+0x2e2>
		Error_Handler();
90001222:	f004 f8fb 	bl	9000541c <Error_Handler>
90001226:	e60b      	b.n	90000e40 <__MFRC522_Req+0x2c4>
		Error_Handler();
90001228:	f004 f8f8 	bl	9000541c <Error_Handler>
9000122c:	e5c6      	b.n	90000dbc <__MFRC522_Req+0x240>
		Error_Handler();
9000122e:	f004 f8f5 	bl	9000541c <Error_Handler>
90001232:	e5b4      	b.n	90000d9e <__MFRC522_Req+0x222>
		Error_Handler();
90001234:	f004 f8f2 	bl	9000541c <Error_Handler>
90001238:	e598      	b.n	90000d6c <__MFRC522_Req+0x1f0>
		Error_Handler();
9000123a:	f004 f8ef 	bl	9000541c <Error_Handler>
9000123e:	e587      	b.n	90000d50 <__MFRC522_Req+0x1d4>
		Error_Handler();
90001240:	f004 f8ec 	bl	9000541c <Error_Handler>
90001244:	e567      	b.n	90000d16 <__MFRC522_Req+0x19a>
		Error_Handler();
90001246:	f004 f8e9 	bl	9000541c <Error_Handler>
9000124a:	e555      	b.n	90000cf8 <__MFRC522_Req+0x17c>
		Error_Handler();
9000124c:	f004 f8e6 	bl	9000541c <Error_Handler>
90001250:	e539      	b.n	90000cc6 <__MFRC522_Req+0x14a>
		Error_Handler();
90001252:	f004 f8e3 	bl	9000541c <Error_Handler>
90001256:	e528      	b.n	90000caa <__MFRC522_Req+0x12e>
		Error_Handler();
90001258:	f004 f8e0 	bl	9000541c <Error_Handler>
9000125c:	e508      	b.n	90000c70 <__MFRC522_Req+0xf4>
		Error_Handler();
9000125e:	f004 f8dd 	bl	9000541c <Error_Handler>
90001262:	e4f6      	b.n	90000c52 <__MFRC522_Req+0xd6>
		Error_Handler();
90001264:	f004 f8da 	bl	9000541c <Error_Handler>
90001268:	e4da      	b.n	90000c20 <__MFRC522_Req+0xa4>
		Error_Handler();
9000126a:	f004 f8d7 	bl	9000541c <Error_Handler>
9000126e:	e4c8      	b.n	90000c02 <__MFRC522_Req+0x86>
		Error_Handler();
90001270:	f004 f8d4 	bl	9000541c <Error_Handler>
90001274:	e4aa      	b.n	90000bcc <__MFRC522_Req+0x50>
		Error_Handler();
90001276:	f004 f8d1 	bl	9000541c <Error_Handler>
	__MFRC522_NSS_High()
9000127a:	2201      	movs	r2, #1
9000127c:	2108      	movs	r1, #8
9000127e:	4648      	mov	r0, r9
90001280:	f009 fb9c 	bl	9000a9bc <HAL_GPIO_WritePin>
	return rcv;
90001284:	f89d 300f 	ldrb.w	r3, [sp, #15]
					output[wait] = __MFRC522_Read(REG_FIFO_DATA);
90001288:	f808 3f01 	strb.w	r3, [r8, #1]!
				for (wait = 0; wait < value; wait++) {
9000128c:	45a0      	cmp	r8, r4
9000128e:	f47f af79 	bne.w	90001184 <__MFRC522_Req+0x608>
90001292:	e7a2      	b.n	900011da <__MFRC522_Req+0x65e>
		Error_Handler();
90001294:	f004 f8c2 	bl	9000541c <Error_Handler>
90001298:	e787      	b.n	900011aa <__MFRC522_Req+0x62e>
		Error_Handler();
9000129a:	f004 f8bf 	bl	9000541c <Error_Handler>
9000129e:	e6fc      	b.n	9000109a <__MFRC522_Req+0x51e>
		Error_Handler();
900012a0:	f004 f8bc 	bl	9000541c <Error_Handler>
900012a4:	e6ea      	b.n	9000107c <__MFRC522_Req+0x500>
					*outputLength = value * 8;
900012a6:	00e7      	lsls	r7, r4, #3
900012a8:	e75c      	b.n	90001164 <__MFRC522_Req+0x5e8>
		Error_Handler();
900012aa:	f004 f8b7 	bl	9000541c <Error_Handler>
900012ae:	e74a      	b.n	90001146 <__MFRC522_Req+0x5ca>
		Error_Handler();
900012b0:	f004 f8b4 	bl	9000541c <Error_Handler>
900012b4:	e738      	b.n	90001128 <__MFRC522_Req+0x5ac>
		Error_Handler();
900012b6:	f004 f8b1 	bl	9000541c <Error_Handler>
900012ba:	e71a      	b.n	900010f2 <__MFRC522_Req+0x576>
		Error_Handler();
900012bc:	f004 f8ae 	bl	9000541c <Error_Handler>
900012c0:	e708      	b.n	900010d4 <__MFRC522_Req+0x558>
900012c2:	bf00      	nop
900012c4:	58021000 	.word	0x58021000
900012c8:	24009490 	.word	0x24009490

900012cc <__MFRC522_Col>:
enum MFRC522_Status __MFRC522_Col(uint8_t *number) {
900012cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	__MFRC522_NSS_Low()
900012d0:	2200      	movs	r2, #0
enum MFRC522_Status __MFRC522_Col(uint8_t *number) {
900012d2:	b085      	sub	sp, #20
	__MFRC522_NSS_Low()
900012d4:	2108      	movs	r1, #8
enum MFRC522_Status __MFRC522_Col(uint8_t *number) {
900012d6:	4680      	mov	r8, r0
	__MFRC522_NSS_Low()
900012d8:	48a9      	ldr	r0, [pc, #676]	; (90001580 <__MFRC522_Col+0x2b4>)
900012da:	f009 fb6f 	bl	9000a9bc <HAL_GPIO_WritePin>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
900012de:	230a      	movs	r3, #10
	uint8_t txArr[]= {send};
900012e0:	221a      	movs	r2, #26
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
900012e2:	a903      	add	r1, sp, #12
900012e4:	9300      	str	r3, [sp, #0]
900012e6:	2301      	movs	r3, #1
	uint8_t txArr[]= {send};
900012e8:	f88d 200c 	strb.w	r2, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
900012ec:	f10d 020f 	add.w	r2, sp, #15
900012f0:	48a4      	ldr	r0, [pc, #656]	; (90001584 <__MFRC522_Col+0x2b8>)
900012f2:	f00d ffcb 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(Convert_Write_Reg(reg_addr), &rcv, sizeof(rcv)) != HAL_OK) {
900012f6:	2800      	cmp	r0, #0
900012f8:	f040 8261 	bne.w	900017be <__MFRC522_Col+0x4f2>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
900012fc:	230a      	movs	r3, #10
	uint8_t txArr[]= {send};
900012fe:	2200      	movs	r2, #0
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001300:	a903      	add	r1, sp, #12
90001302:	48a0      	ldr	r0, [pc, #640]	; (90001584 <__MFRC522_Col+0x2b8>)
90001304:	9300      	str	r3, [sp, #0]
90001306:	2301      	movs	r3, #1
	uint8_t txArr[]= {send};
90001308:	f88d 200c 	strb.w	r2, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
9000130c:	f10d 020f 	add.w	r2, sp, #15
90001310:	f00d ffbc 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(value, &rcv, sizeof(rcv)) != HAL_OK) {
90001314:	2800      	cmp	r0, #0
90001316:	f040 8357 	bne.w	900019c8 <__MFRC522_Col+0x6fc>
	__MFRC522_NSS_High()
9000131a:	2201      	movs	r2, #1
9000131c:	2108      	movs	r1, #8
9000131e:	4898      	ldr	r0, [pc, #608]	; (90001580 <__MFRC522_Col+0x2b4>)
90001320:	f009 fb4c 	bl	9000a9bc <HAL_GPIO_WritePin>
	number[0] = CMD_PICC_ANTICOLL;
90001324:	f242 0393 	movw	r3, #8339	; 0x2093
	__MFRC522_NSS_Low()
90001328:	2200      	movs	r2, #0
9000132a:	2108      	movs	r1, #8
9000132c:	4894      	ldr	r0, [pc, #592]	; (90001580 <__MFRC522_Col+0x2b4>)
	number[0] = CMD_PICC_ANTICOLL;
9000132e:	f8a8 3000 	strh.w	r3, [r8]
	__MFRC522_NSS_Low()
90001332:	f009 fb43 	bl	9000a9bc <HAL_GPIO_WritePin>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001336:	230a      	movs	r3, #10
	uint8_t txArr[]= {send};
90001338:	2204      	movs	r2, #4
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
9000133a:	a903      	add	r1, sp, #12
9000133c:	9300      	str	r3, [sp, #0]
9000133e:	2301      	movs	r3, #1
	uint8_t txArr[]= {send};
90001340:	f88d 200c 	strb.w	r2, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001344:	f10d 020f 	add.w	r2, sp, #15
90001348:	488e      	ldr	r0, [pc, #568]	; (90001584 <__MFRC522_Col+0x2b8>)
9000134a:	f00d ff9f 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(Convert_Write_Reg(reg_addr), &rcv, sizeof(rcv)) != HAL_OK) {
9000134e:	2800      	cmp	r0, #0
90001350:	f040 8337 	bne.w	900019c2 <__MFRC522_Col+0x6f6>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001354:	230a      	movs	r3, #10
	uint8_t txArr[]= {send};
90001356:	22f7      	movs	r2, #247	; 0xf7
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001358:	a903      	add	r1, sp, #12
9000135a:	488a      	ldr	r0, [pc, #552]	; (90001584 <__MFRC522_Col+0x2b8>)
9000135c:	9300      	str	r3, [sp, #0]
9000135e:	2301      	movs	r3, #1
	uint8_t txArr[]= {send};
90001360:	f88d 200c 	strb.w	r2, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001364:	f10d 020f 	add.w	r2, sp, #15
90001368:	f00d ff90 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(value, &rcv, sizeof(rcv)) != HAL_OK) {
9000136c:	2800      	cmp	r0, #0
9000136e:	f040 8325 	bne.w	900019bc <__MFRC522_Col+0x6f0>
	__MFRC522_NSS_High()
90001372:	2201      	movs	r2, #1
90001374:	2108      	movs	r1, #8
90001376:	4882      	ldr	r0, [pc, #520]	; (90001580 <__MFRC522_Col+0x2b4>)
90001378:	f009 fb20 	bl	9000a9bc <HAL_GPIO_WritePin>
	__MFRC522_NSS_Low()
9000137c:	2200      	movs	r2, #0
9000137e:	2108      	movs	r1, #8
90001380:	487f      	ldr	r0, [pc, #508]	; (90001580 <__MFRC522_Col+0x2b4>)
90001382:	f009 fb1b 	bl	9000a9bc <HAL_GPIO_WritePin>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001386:	230a      	movs	r3, #10
	uint8_t txArr[]= {send};
90001388:	2288      	movs	r2, #136	; 0x88
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
9000138a:	a903      	add	r1, sp, #12
9000138c:	9300      	str	r3, [sp, #0]
9000138e:	2301      	movs	r3, #1
	uint8_t txArr[]= {send};
90001390:	f88d 200c 	strb.w	r2, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001394:	f10d 020f 	add.w	r2, sp, #15
90001398:	487a      	ldr	r0, [pc, #488]	; (90001584 <__MFRC522_Col+0x2b8>)
9000139a:	f00d ff77 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(Convert_Read_Reg(reg_addr), &rcv, sizeof(rcv)) != HAL_OK) {
9000139e:	2800      	cmp	r0, #0
900013a0:	f040 8309 	bne.w	900019b6 <__MFRC522_Col+0x6ea>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
900013a4:	230a      	movs	r3, #10
	uint8_t txArr[]= {send};
900013a6:	2200      	movs	r2, #0
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
900013a8:	a903      	add	r1, sp, #12
900013aa:	4876      	ldr	r0, [pc, #472]	; (90001584 <__MFRC522_Col+0x2b8>)
900013ac:	9300      	str	r3, [sp, #0]
900013ae:	2301      	movs	r3, #1
	uint8_t txArr[]= {send};
900013b0:	f88d 200c 	strb.w	r2, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
900013b4:	f10d 020f 	add.w	r2, sp, #15
900013b8:	f00d ff68 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(DUMMY, &rcv, sizeof(rcv)) != HAL_OK) {
900013bc:	2800      	cmp	r0, #0
900013be:	f040 82f7 	bne.w	900019b0 <__MFRC522_Col+0x6e4>
	__MFRC522_NSS_High()
900013c2:	2201      	movs	r2, #1
900013c4:	2108      	movs	r1, #8
900013c6:	486e      	ldr	r0, [pc, #440]	; (90001580 <__MFRC522_Col+0x2b4>)
900013c8:	f009 faf8 	bl	9000a9bc <HAL_GPIO_WritePin>
	__MFRC522_NSS_Low()
900013cc:	2200      	movs	r2, #0
900013ce:	2108      	movs	r1, #8
900013d0:	486b      	ldr	r0, [pc, #428]	; (90001580 <__MFRC522_Col+0x2b4>)
	return rcv;
900013d2:	f89d 400f 	ldrb.w	r4, [sp, #15]
	__MFRC522_NSS_Low()
900013d6:	f009 faf1 	bl	9000a9bc <HAL_GPIO_WritePin>
	uint8_t txArr[]= {send};
900013da:	2308      	movs	r3, #8
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
900013dc:	f10d 020f 	add.w	r2, sp, #15
900013e0:	a903      	add	r1, sp, #12
900013e2:	4868      	ldr	r0, [pc, #416]	; (90001584 <__MFRC522_Col+0x2b8>)
	uint8_t txArr[]= {send};
900013e4:	f88d 300c 	strb.w	r3, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
900013e8:	230a      	movs	r3, #10
	Clear_Bits(REG_IRQ_BITS, 0x80)
900013ea:	f004 047f 	and.w	r4, r4, #127	; 0x7f
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
900013ee:	9300      	str	r3, [sp, #0]
900013f0:	2301      	movs	r3, #1
900013f2:	f00d ff4b 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(Convert_Write_Reg(reg_addr), &rcv, sizeof(rcv)) != HAL_OK) {
900013f6:	2800      	cmp	r0, #0
900013f8:	f040 82d7 	bne.w	900019aa <__MFRC522_Col+0x6de>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
900013fc:	230a      	movs	r3, #10
900013fe:	f10d 020f 	add.w	r2, sp, #15
90001402:	a903      	add	r1, sp, #12
90001404:	485f      	ldr	r0, [pc, #380]	; (90001584 <__MFRC522_Col+0x2b8>)
90001406:	9300      	str	r3, [sp, #0]
90001408:	2301      	movs	r3, #1
	uint8_t txArr[]= {send};
9000140a:	f88d 400c 	strb.w	r4, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
9000140e:	f00d ff3d 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(value, &rcv, sizeof(rcv)) != HAL_OK) {
90001412:	2800      	cmp	r0, #0
90001414:	f040 82c6 	bne.w	900019a4 <__MFRC522_Col+0x6d8>
	__MFRC522_NSS_High()
90001418:	2201      	movs	r2, #1
9000141a:	2108      	movs	r1, #8
9000141c:	4858      	ldr	r0, [pc, #352]	; (90001580 <__MFRC522_Col+0x2b4>)
9000141e:	f009 facd 	bl	9000a9bc <HAL_GPIO_WritePin>
	__MFRC522_NSS_Low()
90001422:	2200      	movs	r2, #0
90001424:	2108      	movs	r1, #8
90001426:	4856      	ldr	r0, [pc, #344]	; (90001580 <__MFRC522_Col+0x2b4>)
90001428:	f009 fac8 	bl	9000a9bc <HAL_GPIO_WritePin>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
9000142c:	230a      	movs	r3, #10
	uint8_t txArr[]= {send};
9000142e:	2294      	movs	r2, #148	; 0x94
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001430:	a903      	add	r1, sp, #12
90001432:	9300      	str	r3, [sp, #0]
90001434:	2301      	movs	r3, #1
	uint8_t txArr[]= {send};
90001436:	f88d 200c 	strb.w	r2, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
9000143a:	f10d 020f 	add.w	r2, sp, #15
9000143e:	4851      	ldr	r0, [pc, #324]	; (90001584 <__MFRC522_Col+0x2b8>)
90001440:	f00d ff24 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(Convert_Read_Reg(reg_addr), &rcv, sizeof(rcv)) != HAL_OK) {
90001444:	2800      	cmp	r0, #0
90001446:	f040 82aa 	bne.w	9000199e <__MFRC522_Col+0x6d2>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
9000144a:	230a      	movs	r3, #10
	uint8_t txArr[]= {send};
9000144c:	2200      	movs	r2, #0
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
9000144e:	a903      	add	r1, sp, #12
90001450:	484c      	ldr	r0, [pc, #304]	; (90001584 <__MFRC522_Col+0x2b8>)
90001452:	9300      	str	r3, [sp, #0]
90001454:	2301      	movs	r3, #1
	uint8_t txArr[]= {send};
90001456:	f88d 200c 	strb.w	r2, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
9000145a:	f10d 020f 	add.w	r2, sp, #15
9000145e:	f00d ff15 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(DUMMY, &rcv, sizeof(rcv)) != HAL_OK) {
90001462:	2800      	cmp	r0, #0
90001464:	f040 8298 	bne.w	90001998 <__MFRC522_Col+0x6cc>
	__MFRC522_NSS_High()
90001468:	2201      	movs	r2, #1
9000146a:	2108      	movs	r1, #8
9000146c:	4844      	ldr	r0, [pc, #272]	; (90001580 <__MFRC522_Col+0x2b4>)
9000146e:	f009 faa5 	bl	9000a9bc <HAL_GPIO_WritePin>
	__MFRC522_NSS_Low()
90001472:	2200      	movs	r2, #0
90001474:	2108      	movs	r1, #8
90001476:	4842      	ldr	r0, [pc, #264]	; (90001580 <__MFRC522_Col+0x2b4>)
	return rcv;
90001478:	f89d 400f 	ldrb.w	r4, [sp, #15]
	__MFRC522_NSS_Low()
9000147c:	f009 fa9e 	bl	9000a9bc <HAL_GPIO_WritePin>
	uint8_t txArr[]= {send};
90001480:	2314      	movs	r3, #20
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001482:	f10d 020f 	add.w	r2, sp, #15
90001486:	a903      	add	r1, sp, #12
90001488:	483e      	ldr	r0, [pc, #248]	; (90001584 <__MFRC522_Col+0x2b8>)
	uint8_t txArr[]= {send};
9000148a:	f88d 300c 	strb.w	r3, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
9000148e:	230a      	movs	r3, #10
	Set_Bits(REG_FIFO_LEVEL, 0x80)
90001490:	f044 0480 	orr.w	r4, r4, #128	; 0x80
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001494:	9300      	str	r3, [sp, #0]
90001496:	2301      	movs	r3, #1
90001498:	f00d fef8 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(Convert_Write_Reg(reg_addr), &rcv, sizeof(rcv)) != HAL_OK) {
9000149c:	2800      	cmp	r0, #0
9000149e:	f040 8278 	bne.w	90001992 <__MFRC522_Col+0x6c6>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
900014a2:	230a      	movs	r3, #10
900014a4:	f10d 020f 	add.w	r2, sp, #15
900014a8:	a903      	add	r1, sp, #12
900014aa:	4836      	ldr	r0, [pc, #216]	; (90001584 <__MFRC522_Col+0x2b8>)
900014ac:	9300      	str	r3, [sp, #0]
900014ae:	2301      	movs	r3, #1
	uint8_t txArr[]= {send};
900014b0:	f88d 400c 	strb.w	r4, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
900014b4:	f00d feea 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(value, &rcv, sizeof(rcv)) != HAL_OK) {
900014b8:	2800      	cmp	r0, #0
900014ba:	f040 8267 	bne.w	9000198c <__MFRC522_Col+0x6c0>
	__MFRC522_NSS_High()
900014be:	2201      	movs	r2, #1
900014c0:	2108      	movs	r1, #8
900014c2:	482f      	ldr	r0, [pc, #188]	; (90001580 <__MFRC522_Col+0x2b4>)
900014c4:	f009 fa7a 	bl	9000a9bc <HAL_GPIO_WritePin>
	__MFRC522_NSS_Low()
900014c8:	2200      	movs	r2, #0
900014ca:	2108      	movs	r1, #8
900014cc:	482c      	ldr	r0, [pc, #176]	; (90001580 <__MFRC522_Col+0x2b4>)
900014ce:	f009 fa75 	bl	9000a9bc <HAL_GPIO_WritePin>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
900014d2:	230a      	movs	r3, #10
	uint8_t txArr[]= {send};
900014d4:	2202      	movs	r2, #2
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
900014d6:	a903      	add	r1, sp, #12
900014d8:	9300      	str	r3, [sp, #0]
900014da:	2301      	movs	r3, #1
	uint8_t txArr[]= {send};
900014dc:	f88d 200c 	strb.w	r2, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
900014e0:	f10d 020f 	add.w	r2, sp, #15
900014e4:	4827      	ldr	r0, [pc, #156]	; (90001584 <__MFRC522_Col+0x2b8>)
900014e6:	f00d fed1 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(Convert_Write_Reg(reg_addr), &rcv, sizeof(rcv)) != HAL_OK) {
900014ea:	2800      	cmp	r0, #0
900014ec:	f040 824b 	bne.w	90001986 <__MFRC522_Col+0x6ba>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
900014f0:	230a      	movs	r3, #10
	uint8_t txArr[]= {send};
900014f2:	2200      	movs	r2, #0
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
900014f4:	a903      	add	r1, sp, #12
900014f6:	4823      	ldr	r0, [pc, #140]	; (90001584 <__MFRC522_Col+0x2b8>)
900014f8:	9300      	str	r3, [sp, #0]
900014fa:	2301      	movs	r3, #1
	uint8_t txArr[]= {send};
900014fc:	f88d 200c 	strb.w	r2, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001500:	f10d 020f 	add.w	r2, sp, #15
90001504:	f00d fec2 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(value, &rcv, sizeof(rcv)) != HAL_OK) {
90001508:	2800      	cmp	r0, #0
9000150a:	f040 8239 	bne.w	90001980 <__MFRC522_Col+0x6b4>
	__MFRC522_NSS_Low()
9000150e:	4d1c      	ldr	r5, [pc, #112]	; (90001580 <__MFRC522_Col+0x2b4>)
90001510:	f108 39ff 	add.w	r9, r8, #4294967295
	__MFRC522_NSS_High()
90001514:	2201      	movs	r2, #1
90001516:	2108      	movs	r1, #8
90001518:	4628      	mov	r0, r5
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
9000151a:	270a      	movs	r7, #10
9000151c:	4e19      	ldr	r6, [pc, #100]	; (90001584 <__MFRC522_Col+0x2b8>)
9000151e:	464c      	mov	r4, r9
	__MFRC522_NSS_High()
90001520:	f009 fa4c 	bl	9000a9bc <HAL_GPIO_WritePin>
	__MFRC522_NSS_Low()
90001524:	4628      	mov	r0, r5
90001526:	2200      	movs	r2, #0
90001528:	2108      	movs	r1, #8
		__MFRC522_Write(REG_FIFO_DATA, input[wait]);
9000152a:	f894 b001 	ldrb.w	fp, [r4, #1]
	__MFRC522_NSS_Low()
9000152e:	f009 fa45 	bl	9000a9bc <HAL_GPIO_WritePin>
	uint8_t txArr[]= {send};
90001532:	f04f 0c12 	mov.w	ip, #18
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001536:	f10d 020f 	add.w	r2, sp, #15
9000153a:	a903      	add	r1, sp, #12
9000153c:	2301      	movs	r3, #1
9000153e:	4630      	mov	r0, r6
90001540:	9700      	str	r7, [sp, #0]
		__MFRC522_Write(REG_FIFO_DATA, input[wait]);
90001542:	f104 0a01 	add.w	sl, r4, #1
	uint8_t txArr[]= {send};
90001546:	f88d c00c 	strb.w	ip, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
9000154a:	f00d fe9f 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(Convert_Write_Reg(reg_addr), &rcv, sizeof(rcv)) != HAL_OK) {
9000154e:	2800      	cmp	r0, #0
90001550:	f040 80da 	bne.w	90001708 <__MFRC522_Col+0x43c>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001554:	2301      	movs	r3, #1
90001556:	f10d 020f 	add.w	r2, sp, #15
9000155a:	a903      	add	r1, sp, #12
9000155c:	4630      	mov	r0, r6
9000155e:	9700      	str	r7, [sp, #0]
	uint8_t txArr[]= {send};
90001560:	f88d b00c 	strb.w	fp, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001564:	f00d fe92 	bl	9000f28c <HAL_SPI_TransmitReceive>
90001568:	4603      	mov	r3, r0
	__MFRC522_NSS_High()
9000156a:	2201      	movs	r2, #1
9000156c:	2108      	movs	r1, #8
9000156e:	4628      	mov	r0, r5
	if (__SPI_Write_Receive(value, &rcv, sizeof(rcv)) != HAL_OK) {
90001570:	b953      	cbnz	r3, 90001588 <__MFRC522_Col+0x2bc>
	__MFRC522_NSS_High()
90001572:	f009 fa23 	bl	9000a9bc <HAL_GPIO_WritePin>
	while (wait < inputLength) {
90001576:	4544      	cmp	r4, r8
90001578:	d00f      	beq.n	9000159a <__MFRC522_Col+0x2ce>
enum MFRC522_Status __MFRC522_Col(uint8_t *number) {
9000157a:	4654      	mov	r4, sl
9000157c:	e7d2      	b.n	90001524 <__MFRC522_Col+0x258>
9000157e:	bf00      	nop
90001580:	58021000 	.word	0x58021000
90001584:	24009490 	.word	0x24009490
		Error_Handler();
90001588:	f003 ff48 	bl	9000541c <Error_Handler>
	__MFRC522_NSS_High()
9000158c:	2201      	movs	r2, #1
9000158e:	2108      	movs	r1, #8
90001590:	4628      	mov	r0, r5
90001592:	f009 fa13 	bl	9000a9bc <HAL_GPIO_WritePin>
	while (wait < inputLength) {
90001596:	4544      	cmp	r4, r8
90001598:	d1ef      	bne.n	9000157a <__MFRC522_Col+0x2ae>
	__MFRC522_NSS_Low()
9000159a:	2200      	movs	r2, #0
9000159c:	2108      	movs	r1, #8
9000159e:	4889      	ldr	r0, [pc, #548]	; (900017c4 <__MFRC522_Col+0x4f8>)
900015a0:	f009 fa0c 	bl	9000a9bc <HAL_GPIO_WritePin>
	uint8_t txArr[]= {send};
900015a4:	2302      	movs	r3, #2
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
900015a6:	f10d 020f 	add.w	r2, sp, #15
900015aa:	a903      	add	r1, sp, #12
	uint8_t txArr[]= {send};
900015ac:	f88d 300c 	strb.w	r3, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
900015b0:	230a      	movs	r3, #10
900015b2:	4885      	ldr	r0, [pc, #532]	; (900017c8 <__MFRC522_Col+0x4fc>)
900015b4:	9300      	str	r3, [sp, #0]
900015b6:	2301      	movs	r3, #1
900015b8:	f00d fe68 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(Convert_Write_Reg(reg_addr), &rcv, sizeof(rcv)) != HAL_OK) {
900015bc:	2800      	cmp	r0, #0
900015be:	f040 81dc 	bne.w	9000197a <__MFRC522_Col+0x6ae>
	uint8_t txArr[]= {send};
900015c2:	230c      	movs	r3, #12
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
900015c4:	f10d 020f 	add.w	r2, sp, #15
900015c8:	a903      	add	r1, sp, #12
900015ca:	487f      	ldr	r0, [pc, #508]	; (900017c8 <__MFRC522_Col+0x4fc>)
	uint8_t txArr[]= {send};
900015cc:	f88d 300c 	strb.w	r3, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
900015d0:	230a      	movs	r3, #10
900015d2:	9300      	str	r3, [sp, #0]
900015d4:	2301      	movs	r3, #1
900015d6:	f00d fe59 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(value, &rcv, sizeof(rcv)) != HAL_OK) {
900015da:	2800      	cmp	r0, #0
900015dc:	f040 81ca 	bne.w	90001974 <__MFRC522_Col+0x6a8>
	__MFRC522_NSS_High()
900015e0:	2201      	movs	r2, #1
900015e2:	2108      	movs	r1, #8
900015e4:	4877      	ldr	r0, [pc, #476]	; (900017c4 <__MFRC522_Col+0x4f8>)
900015e6:	f009 f9e9 	bl	9000a9bc <HAL_GPIO_WritePin>
	__MFRC522_NSS_Low()
900015ea:	2200      	movs	r2, #0
900015ec:	2108      	movs	r1, #8
900015ee:	4875      	ldr	r0, [pc, #468]	; (900017c4 <__MFRC522_Col+0x4f8>)
900015f0:	f009 f9e4 	bl	9000a9bc <HAL_GPIO_WritePin>
	uint8_t txArr[]= {send};
900015f4:	239a      	movs	r3, #154	; 0x9a
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
900015f6:	f10d 020f 	add.w	r2, sp, #15
900015fa:	a903      	add	r1, sp, #12
	uint8_t txArr[]= {send};
900015fc:	f88d 300c 	strb.w	r3, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001600:	230a      	movs	r3, #10
90001602:	4871      	ldr	r0, [pc, #452]	; (900017c8 <__MFRC522_Col+0x4fc>)
90001604:	9300      	str	r3, [sp, #0]
90001606:	2301      	movs	r3, #1
90001608:	f00d fe40 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(Convert_Read_Reg(reg_addr), &rcv, sizeof(rcv)) != HAL_OK) {
9000160c:	2800      	cmp	r0, #0
9000160e:	f040 81ae 	bne.w	9000196e <__MFRC522_Col+0x6a2>
	uint8_t txArr[]= {send};
90001612:	2300      	movs	r3, #0
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001614:	f10d 020f 	add.w	r2, sp, #15
90001618:	a903      	add	r1, sp, #12
9000161a:	486b      	ldr	r0, [pc, #428]	; (900017c8 <__MFRC522_Col+0x4fc>)
	uint8_t txArr[]= {send};
9000161c:	f88d 300c 	strb.w	r3, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001620:	230a      	movs	r3, #10
90001622:	9300      	str	r3, [sp, #0]
90001624:	2301      	movs	r3, #1
90001626:	f00d fe31 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(DUMMY, &rcv, sizeof(rcv)) != HAL_OK) {
9000162a:	2800      	cmp	r0, #0
9000162c:	f040 819c 	bne.w	90001968 <__MFRC522_Col+0x69c>
	__MFRC522_NSS_High()
90001630:	2201      	movs	r2, #1
90001632:	2108      	movs	r1, #8
90001634:	4863      	ldr	r0, [pc, #396]	; (900017c4 <__MFRC522_Col+0x4f8>)
90001636:	f009 f9c1 	bl	9000a9bc <HAL_GPIO_WritePin>
	__MFRC522_NSS_Low()
9000163a:	2200      	movs	r2, #0
9000163c:	2108      	movs	r1, #8
9000163e:	4861      	ldr	r0, [pc, #388]	; (900017c4 <__MFRC522_Col+0x4f8>)
	return rcv;
90001640:	f89d 400f 	ldrb.w	r4, [sp, #15]
	__MFRC522_NSS_Low()
90001644:	f009 f9ba 	bl	9000a9bc <HAL_GPIO_WritePin>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001648:	230a      	movs	r3, #10
9000164a:	f10d 020f 	add.w	r2, sp, #15
9000164e:	a903      	add	r1, sp, #12
90001650:	485d      	ldr	r0, [pc, #372]	; (900017c8 <__MFRC522_Col+0x4fc>)
90001652:	9300      	str	r3, [sp, #0]
	uint8_t txArr[]= {send};
90001654:	231a      	movs	r3, #26
		Set_Bits(REG_BIT_FRAMING, 0x80)
90001656:	f044 0480 	orr.w	r4, r4, #128	; 0x80
	uint8_t txArr[]= {send};
9000165a:	f88d 300c 	strb.w	r3, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
9000165e:	2301      	movs	r3, #1
90001660:	f00d fe14 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(Convert_Write_Reg(reg_addr), &rcv, sizeof(rcv)) != HAL_OK) {
90001664:	2800      	cmp	r0, #0
90001666:	f040 817c 	bne.w	90001962 <__MFRC522_Col+0x696>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
9000166a:	230a      	movs	r3, #10
9000166c:	f10d 020f 	add.w	r2, sp, #15
90001670:	a903      	add	r1, sp, #12
90001672:	4855      	ldr	r0, [pc, #340]	; (900017c8 <__MFRC522_Col+0x4fc>)
90001674:	9300      	str	r3, [sp, #0]
90001676:	2301      	movs	r3, #1
	uint8_t txArr[]= {send};
90001678:	f88d 400c 	strb.w	r4, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
9000167c:	f00d fe06 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(value, &rcv, sizeof(rcv)) != HAL_OK) {
90001680:	2800      	cmp	r0, #0
90001682:	f040 816b 	bne.w	9000195c <__MFRC522_Col+0x690>
	__MFRC522_NSS_Low()
90001686:	4f4f      	ldr	r7, [pc, #316]	; (900017c4 <__MFRC522_Col+0x4f8>)
	__MFRC522_NSS_High()
90001688:	2201      	movs	r2, #1
9000168a:	2108      	movs	r1, #8
9000168c:	f44f 64fa 	mov.w	r4, #2000	; 0x7d0
90001690:	4638      	mov	r0, r7
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001692:	4e4d      	ldr	r6, [pc, #308]	; (900017c8 <__MFRC522_Col+0x4fc>)
	__MFRC522_NSS_High()
90001694:	f009 f992 	bl	9000a9bc <HAL_GPIO_WritePin>
90001698:	e01b      	b.n	900016d2 <__MFRC522_Col+0x406>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
9000169a:	f04f 0c0a 	mov.w	ip, #10
	uint8_t txArr[]= {send};
9000169e:	2500      	movs	r5, #0
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
900016a0:	2301      	movs	r3, #1
900016a2:	f10d 020f 	add.w	r2, sp, #15
900016a6:	a903      	add	r1, sp, #12
900016a8:	4630      	mov	r0, r6
900016aa:	f8cd c000 	str.w	ip, [sp]
	uint8_t txArr[]= {send};
900016ae:	f88d 500c 	strb.w	r5, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
900016b2:	f00d fdeb 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(DUMMY, &rcv, sizeof(rcv)) != HAL_OK) {
900016b6:	bb20      	cbnz	r0, 90001702 <__MFRC522_Col+0x436>
		wait--;
900016b8:	3c01      	subs	r4, #1
	__MFRC522_NSS_High()
900016ba:	2201      	movs	r2, #1
900016bc:	2108      	movs	r1, #8
900016be:	4638      	mov	r0, r7
		wait--;
900016c0:	b2a4      	uxth	r4, r4
	__MFRC522_NSS_High()
900016c2:	f009 f97b 	bl	9000a9bc <HAL_GPIO_WritePin>
	return rcv;
900016c6:	f89d 500f 	ldrb.w	r5, [sp, #15]
	} while ((wait != 0) && !(value & 0x01) && !(value & waitIrq));
900016ca:	b304      	cbz	r4, 9000170e <__MFRC522_Col+0x442>
900016cc:	f015 0f31 	tst.w	r5, #49	; 0x31
900016d0:	d11d      	bne.n	9000170e <__MFRC522_Col+0x442>
	__MFRC522_NSS_Low()
900016d2:	2200      	movs	r2, #0
900016d4:	2108      	movs	r1, #8
900016d6:	4638      	mov	r0, r7
	uint8_t txArr[]= {send};
900016d8:	2588      	movs	r5, #136	; 0x88
	__MFRC522_NSS_Low()
900016da:	f009 f96f 	bl	9000a9bc <HAL_GPIO_WritePin>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
900016de:	f04f 0c0a 	mov.w	ip, #10
900016e2:	2301      	movs	r3, #1
900016e4:	f10d 020f 	add.w	r2, sp, #15
900016e8:	a903      	add	r1, sp, #12
900016ea:	4630      	mov	r0, r6
900016ec:	f8cd c000 	str.w	ip, [sp]
	uint8_t txArr[]= {send};
900016f0:	f88d 500c 	strb.w	r5, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
900016f4:	f00d fdca 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(Convert_Read_Reg(reg_addr), &rcv, sizeof(rcv)) != HAL_OK) {
900016f8:	2800      	cmp	r0, #0
900016fa:	d0ce      	beq.n	9000169a <__MFRC522_Col+0x3ce>
		Error_Handler();
900016fc:	f003 fe8e 	bl	9000541c <Error_Handler>
90001700:	e7cb      	b.n	9000169a <__MFRC522_Col+0x3ce>
		Error_Handler();
90001702:	f003 fe8b 	bl	9000541c <Error_Handler>
90001706:	e7d7      	b.n	900016b8 <__MFRC522_Col+0x3ec>
		Error_Handler();
90001708:	f003 fe88 	bl	9000541c <Error_Handler>
9000170c:	e722      	b.n	90001554 <__MFRC522_Col+0x288>
	__MFRC522_NSS_Low()
9000170e:	2200      	movs	r2, #0
90001710:	2108      	movs	r1, #8
90001712:	482c      	ldr	r0, [pc, #176]	; (900017c4 <__MFRC522_Col+0x4f8>)
90001714:	f009 f952 	bl	9000a9bc <HAL_GPIO_WritePin>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001718:	230a      	movs	r3, #10
9000171a:	f10d 020f 	add.w	r2, sp, #15
9000171e:	a903      	add	r1, sp, #12
90001720:	9300      	str	r3, [sp, #0]
	uint8_t txArr[]= {send};
90001722:	239a      	movs	r3, #154	; 0x9a
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001724:	4828      	ldr	r0, [pc, #160]	; (900017c8 <__MFRC522_Col+0x4fc>)
	uint8_t txArr[]= {send};
90001726:	f88d 300c 	strb.w	r3, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
9000172a:	2301      	movs	r3, #1
9000172c:	f00d fdae 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(Convert_Read_Reg(reg_addr), &rcv, sizeof(rcv)) != HAL_OK) {
90001730:	2800      	cmp	r0, #0
90001732:	f040 8110 	bne.w	90001956 <__MFRC522_Col+0x68a>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001736:	230a      	movs	r3, #10
90001738:	f10d 020f 	add.w	r2, sp, #15
9000173c:	a903      	add	r1, sp, #12
9000173e:	4822      	ldr	r0, [pc, #136]	; (900017c8 <__MFRC522_Col+0x4fc>)
90001740:	9300      	str	r3, [sp, #0]
	uint8_t txArr[]= {send};
90001742:	2300      	movs	r3, #0
90001744:	f88d 300c 	strb.w	r3, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001748:	2301      	movs	r3, #1
9000174a:	f00d fd9f 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(DUMMY, &rcv, sizeof(rcv)) != HAL_OK) {
9000174e:	2800      	cmp	r0, #0
90001750:	f040 80fe 	bne.w	90001950 <__MFRC522_Col+0x684>
	__MFRC522_NSS_High()
90001754:	2201      	movs	r2, #1
90001756:	2108      	movs	r1, #8
90001758:	481a      	ldr	r0, [pc, #104]	; (900017c4 <__MFRC522_Col+0x4f8>)
9000175a:	f009 f92f 	bl	9000a9bc <HAL_GPIO_WritePin>
	__MFRC522_NSS_Low()
9000175e:	2200      	movs	r2, #0
90001760:	2108      	movs	r1, #8
90001762:	4818      	ldr	r0, [pc, #96]	; (900017c4 <__MFRC522_Col+0x4f8>)
	return rcv;
90001764:	f89d 600f 	ldrb.w	r6, [sp, #15]
	__MFRC522_NSS_Low()
90001768:	f009 f928 	bl	9000a9bc <HAL_GPIO_WritePin>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
9000176c:	230a      	movs	r3, #10
9000176e:	f10d 020f 	add.w	r2, sp, #15
90001772:	a903      	add	r1, sp, #12
90001774:	4814      	ldr	r0, [pc, #80]	; (900017c8 <__MFRC522_Col+0x4fc>)
90001776:	9300      	str	r3, [sp, #0]
	uint8_t txArr[]= {send};
90001778:	231a      	movs	r3, #26
	Clear_Bits(REG_BIT_FRAMING, 0x80)
9000177a:	f006 067f 	and.w	r6, r6, #127	; 0x7f
	uint8_t txArr[]= {send};
9000177e:	f88d 300c 	strb.w	r3, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001782:	2301      	movs	r3, #1
90001784:	f00d fd82 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(Convert_Write_Reg(reg_addr), &rcv, sizeof(rcv)) != HAL_OK) {
90001788:	2800      	cmp	r0, #0
9000178a:	f040 80de 	bne.w	9000194a <__MFRC522_Col+0x67e>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
9000178e:	230a      	movs	r3, #10
90001790:	f10d 020f 	add.w	r2, sp, #15
90001794:	a903      	add	r1, sp, #12
90001796:	480c      	ldr	r0, [pc, #48]	; (900017c8 <__MFRC522_Col+0x4fc>)
90001798:	9300      	str	r3, [sp, #0]
9000179a:	2301      	movs	r3, #1
	uint8_t txArr[]= {send};
9000179c:	f88d 600c 	strb.w	r6, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
900017a0:	f00d fd74 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(value, &rcv, sizeof(rcv)) != HAL_OK) {
900017a4:	2800      	cmp	r0, #0
900017a6:	f040 80cd 	bne.w	90001944 <__MFRC522_Col+0x678>
	__MFRC522_NSS_High()
900017aa:	2201      	movs	r2, #1
900017ac:	2108      	movs	r1, #8
900017ae:	4805      	ldr	r0, [pc, #20]	; (900017c4 <__MFRC522_Col+0x4f8>)
900017b0:	f009 f904 	bl	9000a9bc <HAL_GPIO_WritePin>
	if (wait != 0) {
900017b4:	b954      	cbnz	r4, 900017cc <__MFRC522_Col+0x500>
	enum MFRC522_Status status = MFRC522_ERR; // assume error
900017b6:	2001      	movs	r0, #1
}
900017b8:	b005      	add	sp, #20
900017ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
		Error_Handler();
900017be:	f003 fe2d 	bl	9000541c <Error_Handler>
900017c2:	e59b      	b.n	900012fc <__MFRC522_Col+0x30>
900017c4:	58021000 	.word	0x58021000
900017c8:	24009490 	.word	0x24009490
	__MFRC522_NSS_Low()
900017cc:	2200      	movs	r2, #0
900017ce:	2108      	movs	r1, #8
900017d0:	4895      	ldr	r0, [pc, #596]	; (90001a28 <__MFRC522_Col+0x75c>)
900017d2:	f009 f8f3 	bl	9000a9bc <HAL_GPIO_WritePin>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
900017d6:	230a      	movs	r3, #10
900017d8:	f10d 020f 	add.w	r2, sp, #15
900017dc:	a903      	add	r1, sp, #12
900017de:	9300      	str	r3, [sp, #0]
	uint8_t txArr[]= {send};
900017e0:	238c      	movs	r3, #140	; 0x8c
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
900017e2:	4892      	ldr	r0, [pc, #584]	; (90001a2c <__MFRC522_Col+0x760>)
	uint8_t txArr[]= {send};
900017e4:	f88d 300c 	strb.w	r3, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
900017e8:	2301      	movs	r3, #1
900017ea:	f00d fd4f 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(Convert_Read_Reg(reg_addr), &rcv, sizeof(rcv)) != HAL_OK) {
900017ee:	2800      	cmp	r0, #0
900017f0:	f040 810a 	bne.w	90001a08 <__MFRC522_Col+0x73c>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
900017f4:	230a      	movs	r3, #10
900017f6:	f10d 020f 	add.w	r2, sp, #15
900017fa:	a903      	add	r1, sp, #12
900017fc:	488b      	ldr	r0, [pc, #556]	; (90001a2c <__MFRC522_Col+0x760>)
900017fe:	9300      	str	r3, [sp, #0]
	uint8_t txArr[]= {send};
90001800:	2300      	movs	r3, #0
90001802:	f88d 300c 	strb.w	r3, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001806:	2301      	movs	r3, #1
90001808:	f00d fd40 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(DUMMY, &rcv, sizeof(rcv)) != HAL_OK) {
9000180c:	2800      	cmp	r0, #0
9000180e:	f040 80f8 	bne.w	90001a02 <__MFRC522_Col+0x736>
	__MFRC522_NSS_High()
90001812:	2201      	movs	r2, #1
90001814:	2108      	movs	r1, #8
90001816:	4884      	ldr	r0, [pc, #528]	; (90001a28 <__MFRC522_Col+0x75c>)
90001818:	f009 f8d0 	bl	9000a9bc <HAL_GPIO_WritePin>
	return rcv;
9000181c:	f89d 200f 	ldrb.w	r2, [sp, #15]
		if (!(__MFRC522_Read(REG_ERROR) & 0x1B)) {
90001820:	f012 021b 	ands.w	r2, r2, #27
90001824:	d1c7      	bne.n	900017b6 <__MFRC522_Col+0x4ea>
	__MFRC522_NSS_Low()
90001826:	2108      	movs	r1, #8
90001828:	487f      	ldr	r0, [pc, #508]	; (90001a28 <__MFRC522_Col+0x75c>)
9000182a:	f009 f8c7 	bl	9000a9bc <HAL_GPIO_WritePin>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
9000182e:	230a      	movs	r3, #10
90001830:	f10d 020f 	add.w	r2, sp, #15
90001834:	a903      	add	r1, sp, #12
90001836:	9300      	str	r3, [sp, #0]
	uint8_t txArr[]= {send};
90001838:	2394      	movs	r3, #148	; 0x94
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
9000183a:	487c      	ldr	r0, [pc, #496]	; (90001a2c <__MFRC522_Col+0x760>)
9000183c:	f005 0501 	and.w	r5, r5, #1
	uint8_t txArr[]= {send};
90001840:	f88d 300c 	strb.w	r3, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001844:	2301      	movs	r3, #1
90001846:	f00d fd21 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(Convert_Read_Reg(reg_addr), &rcv, sizeof(rcv)) != HAL_OK) {
9000184a:	2800      	cmp	r0, #0
9000184c:	f040 80e8 	bne.w	90001a20 <__MFRC522_Col+0x754>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001850:	230a      	movs	r3, #10
90001852:	f10d 020f 	add.w	r2, sp, #15
90001856:	a903      	add	r1, sp, #12
90001858:	4874      	ldr	r0, [pc, #464]	; (90001a2c <__MFRC522_Col+0x760>)
9000185a:	9300      	str	r3, [sp, #0]
	uint8_t txArr[]= {send};
9000185c:	2300      	movs	r3, #0
9000185e:	f88d 300c 	strb.w	r3, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001862:	2301      	movs	r3, #1
90001864:	f00d fd12 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(DUMMY, &rcv, sizeof(rcv)) != HAL_OK) {
90001868:	2800      	cmp	r0, #0
9000186a:	f040 80d6 	bne.w	90001a1a <__MFRC522_Col+0x74e>
	__MFRC522_NSS_High()
9000186e:	2201      	movs	r2, #1
90001870:	2108      	movs	r1, #8
90001872:	486d      	ldr	r0, [pc, #436]	; (90001a28 <__MFRC522_Col+0x75c>)
90001874:	f009 f8a2 	bl	9000a9bc <HAL_GPIO_WritePin>
	__MFRC522_NSS_Low()
90001878:	2200      	movs	r2, #0
9000187a:	2108      	movs	r1, #8
9000187c:	486a      	ldr	r0, [pc, #424]	; (90001a28 <__MFRC522_Col+0x75c>)
	return rcv;
9000187e:	f89d 400f 	ldrb.w	r4, [sp, #15]
	__MFRC522_NSS_Low()
90001882:	f009 f89b 	bl	9000a9bc <HAL_GPIO_WritePin>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001886:	230a      	movs	r3, #10
90001888:	f10d 020f 	add.w	r2, sp, #15
9000188c:	a903      	add	r1, sp, #12
9000188e:	4867      	ldr	r0, [pc, #412]	; (90001a2c <__MFRC522_Col+0x760>)
90001890:	9300      	str	r3, [sp, #0]
	uint8_t txArr[]= {send};
90001892:	2398      	movs	r3, #152	; 0x98
90001894:	f88d 300c 	strb.w	r3, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001898:	2301      	movs	r3, #1
9000189a:	f00d fcf7 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(Convert_Read_Reg(reg_addr), &rcv, sizeof(rcv)) != HAL_OK) {
9000189e:	2800      	cmp	r0, #0
900018a0:	f040 80b8 	bne.w	90001a14 <__MFRC522_Col+0x748>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
900018a4:	230a      	movs	r3, #10
900018a6:	f10d 020f 	add.w	r2, sp, #15
900018aa:	a903      	add	r1, sp, #12
900018ac:	485f      	ldr	r0, [pc, #380]	; (90001a2c <__MFRC522_Col+0x760>)
900018ae:	9300      	str	r3, [sp, #0]
	uint8_t txArr[]= {send};
900018b0:	2300      	movs	r3, #0
900018b2:	f88d 300c 	strb.w	r3, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
900018b6:	2301      	movs	r3, #1
900018b8:	f00d fce8 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(DUMMY, &rcv, sizeof(rcv)) != HAL_OK) {
900018bc:	2800      	cmp	r0, #0
900018be:	f040 80a6 	bne.w	90001a0e <__MFRC522_Col+0x742>
	__MFRC522_NSS_High()
900018c2:	2201      	movs	r2, #1
900018c4:	2108      	movs	r1, #8
900018c6:	4858      	ldr	r0, [pc, #352]	; (90001a28 <__MFRC522_Col+0x75c>)
	__MFRC522_NSS_Low()
900018c8:	f04f 0a00 	mov.w	sl, #0
	__MFRC522_NSS_High()
900018cc:	f009 f876 	bl	9000a9bc <HAL_GPIO_WritePin>
				for (wait = 0; wait < value; wait++) {
900018d0:	2c10      	cmp	r4, #16
	__MFRC522_NSS_Low()
900018d2:	4e55      	ldr	r6, [pc, #340]	; (90001a28 <__MFRC522_Col+0x75c>)
				for (wait = 0; wait < value; wait++) {
900018d4:	bf28      	it	cs
900018d6:	2410      	movcs	r4, #16
900018d8:	2c01      	cmp	r4, #1
900018da:	bf38      	it	cc
900018dc:	2401      	movcc	r4, #1
900018de:	1e67      	subs	r7, r4, #1
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
900018e0:	4c52      	ldr	r4, [pc, #328]	; (90001a2c <__MFRC522_Col+0x760>)
900018e2:	fa18 f787 	uxtah	r7, r8, r7
900018e6:	e017      	b.n	90001918 <__MFRC522_Col+0x64c>
900018e8:	220a      	movs	r2, #10
900018ea:	2301      	movs	r3, #1
900018ec:	a903      	add	r1, sp, #12
900018ee:	4620      	mov	r0, r4
900018f0:	9200      	str	r2, [sp, #0]
900018f2:	f10d 020f 	add.w	r2, sp, #15
	uint8_t txArr[]= {send};
900018f6:	f88d a00c 	strb.w	sl, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
900018fa:	f00d fcc7 	bl	9000f28c <HAL_SPI_TransmitReceive>
	__MFRC522_NSS_High()
900018fe:	2201      	movs	r2, #1
	if (__SPI_Write_Receive(DUMMY, &rcv, sizeof(rcv)) != HAL_OK) {
90001900:	2800      	cmp	r0, #0
90001902:	d164      	bne.n	900019ce <__MFRC522_Col+0x702>
	__MFRC522_NSS_High()
90001904:	2108      	movs	r1, #8
90001906:	4630      	mov	r0, r6
90001908:	f009 f858 	bl	9000a9bc <HAL_GPIO_WritePin>
	return rcv;
9000190c:	f89d 300f 	ldrb.w	r3, [sp, #15]
					output[wait] = __MFRC522_Read(REG_FIFO_DATA);
90001910:	f809 3f01 	strb.w	r3, [r9, #1]!
				for (wait = 0; wait < value; wait++) {
90001914:	45b9      	cmp	r9, r7
90001916:	d05e      	beq.n	900019d6 <__MFRC522_Col+0x70a>
	__MFRC522_NSS_Low()
90001918:	2200      	movs	r2, #0
9000191a:	2108      	movs	r1, #8
9000191c:	4630      	mov	r0, r6
9000191e:	f009 f84d 	bl	9000a9bc <HAL_GPIO_WritePin>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001922:	230a      	movs	r3, #10
	uint8_t txArr[]= {send};
90001924:	2292      	movs	r2, #146	; 0x92
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001926:	a903      	add	r1, sp, #12
90001928:	9300      	str	r3, [sp, #0]
9000192a:	4620      	mov	r0, r4
	uint8_t txArr[]= {send};
9000192c:	f88d 200c 	strb.w	r2, [sp, #12]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001930:	2301      	movs	r3, #1
90001932:	f10d 020f 	add.w	r2, sp, #15
90001936:	f00d fca9 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(Convert_Read_Reg(reg_addr), &rcv, sizeof(rcv)) != HAL_OK) {
9000193a:	2800      	cmp	r0, #0
9000193c:	d0d4      	beq.n	900018e8 <__MFRC522_Col+0x61c>
		Error_Handler();
9000193e:	f003 fd6d 	bl	9000541c <Error_Handler>
90001942:	e7d1      	b.n	900018e8 <__MFRC522_Col+0x61c>
		Error_Handler();
90001944:	f003 fd6a 	bl	9000541c <Error_Handler>
90001948:	e72f      	b.n	900017aa <__MFRC522_Col+0x4de>
		Error_Handler();
9000194a:	f003 fd67 	bl	9000541c <Error_Handler>
9000194e:	e71e      	b.n	9000178e <__MFRC522_Col+0x4c2>
		Error_Handler();
90001950:	f003 fd64 	bl	9000541c <Error_Handler>
90001954:	e6fe      	b.n	90001754 <__MFRC522_Col+0x488>
		Error_Handler();
90001956:	f003 fd61 	bl	9000541c <Error_Handler>
9000195a:	e6ec      	b.n	90001736 <__MFRC522_Col+0x46a>
		Error_Handler();
9000195c:	f003 fd5e 	bl	9000541c <Error_Handler>
90001960:	e691      	b.n	90001686 <__MFRC522_Col+0x3ba>
		Error_Handler();
90001962:	f003 fd5b 	bl	9000541c <Error_Handler>
90001966:	e680      	b.n	9000166a <__MFRC522_Col+0x39e>
		Error_Handler();
90001968:	f003 fd58 	bl	9000541c <Error_Handler>
9000196c:	e660      	b.n	90001630 <__MFRC522_Col+0x364>
		Error_Handler();
9000196e:	f003 fd55 	bl	9000541c <Error_Handler>
90001972:	e64e      	b.n	90001612 <__MFRC522_Col+0x346>
		Error_Handler();
90001974:	f003 fd52 	bl	9000541c <Error_Handler>
90001978:	e632      	b.n	900015e0 <__MFRC522_Col+0x314>
		Error_Handler();
9000197a:	f003 fd4f 	bl	9000541c <Error_Handler>
9000197e:	e620      	b.n	900015c2 <__MFRC522_Col+0x2f6>
		Error_Handler();
90001980:	f003 fd4c 	bl	9000541c <Error_Handler>
90001984:	e5c3      	b.n	9000150e <__MFRC522_Col+0x242>
		Error_Handler();
90001986:	f003 fd49 	bl	9000541c <Error_Handler>
9000198a:	e5b1      	b.n	900014f0 <__MFRC522_Col+0x224>
		Error_Handler();
9000198c:	f003 fd46 	bl	9000541c <Error_Handler>
90001990:	e595      	b.n	900014be <__MFRC522_Col+0x1f2>
		Error_Handler();
90001992:	f003 fd43 	bl	9000541c <Error_Handler>
90001996:	e584      	b.n	900014a2 <__MFRC522_Col+0x1d6>
		Error_Handler();
90001998:	f003 fd40 	bl	9000541c <Error_Handler>
9000199c:	e564      	b.n	90001468 <__MFRC522_Col+0x19c>
		Error_Handler();
9000199e:	f003 fd3d 	bl	9000541c <Error_Handler>
900019a2:	e552      	b.n	9000144a <__MFRC522_Col+0x17e>
		Error_Handler();
900019a4:	f003 fd3a 	bl	9000541c <Error_Handler>
900019a8:	e536      	b.n	90001418 <__MFRC522_Col+0x14c>
		Error_Handler();
900019aa:	f003 fd37 	bl	9000541c <Error_Handler>
900019ae:	e525      	b.n	900013fc <__MFRC522_Col+0x130>
		Error_Handler();
900019b0:	f003 fd34 	bl	9000541c <Error_Handler>
900019b4:	e505      	b.n	900013c2 <__MFRC522_Col+0xf6>
		Error_Handler();
900019b6:	f003 fd31 	bl	9000541c <Error_Handler>
900019ba:	e4f3      	b.n	900013a4 <__MFRC522_Col+0xd8>
		Error_Handler();
900019bc:	f003 fd2e 	bl	9000541c <Error_Handler>
900019c0:	e4d7      	b.n	90001372 <__MFRC522_Col+0xa6>
		Error_Handler();
900019c2:	f003 fd2b 	bl	9000541c <Error_Handler>
900019c6:	e4c5      	b.n	90001354 <__MFRC522_Col+0x88>
		Error_Handler();
900019c8:	f003 fd28 	bl	9000541c <Error_Handler>
900019cc:	e4a5      	b.n	9000131a <__MFRC522_Col+0x4e>
		Error_Handler();
900019ce:	f003 fd25 	bl	9000541c <Error_Handler>
	__MFRC522_NSS_High()
900019d2:	2201      	movs	r2, #1
900019d4:	e796      	b.n	90001904 <__MFRC522_Col+0x638>
	if ((status = __MFRC522_Compute(CMD_TRANSCEIVE, number, 2, number, &dataSize)) == MFRC522_OK) {
900019d6:	2d00      	cmp	r5, #0
900019d8:	f47f aeed 	bne.w	900017b6 <__MFRC522_Col+0x4ea>
			serNumCheck ^= number[i];
900019dc:	f898 0001 	ldrb.w	r0, [r8, #1]
900019e0:	f898 3002 	ldrb.w	r3, [r8, #2]
900019e4:	f898 1000 	ldrb.w	r1, [r8]
900019e8:	4043      	eors	r3, r0
900019ea:	f898 2003 	ldrb.w	r2, [r8, #3]
		if (serNumCheck != number[i]) {
900019ee:	f898 0004 	ldrb.w	r0, [r8, #4]
			serNumCheck ^= number[i];
900019f2:	404b      	eors	r3, r1
		if (serNumCheck != number[i]) {
900019f4:	4053      	eors	r3, r2
			status = MFRC522_ERR;
900019f6:	1ac0      	subs	r0, r0, r3
900019f8:	bf18      	it	ne
900019fa:	2001      	movne	r0, #1
}
900019fc:	b005      	add	sp, #20
900019fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
		Error_Handler();
90001a02:	f003 fd0b 	bl	9000541c <Error_Handler>
90001a06:	e704      	b.n	90001812 <__MFRC522_Col+0x546>
		Error_Handler();
90001a08:	f003 fd08 	bl	9000541c <Error_Handler>
90001a0c:	e6f2      	b.n	900017f4 <__MFRC522_Col+0x528>
		Error_Handler();
90001a0e:	f003 fd05 	bl	9000541c <Error_Handler>
90001a12:	e756      	b.n	900018c2 <__MFRC522_Col+0x5f6>
		Error_Handler();
90001a14:	f003 fd02 	bl	9000541c <Error_Handler>
90001a18:	e744      	b.n	900018a4 <__MFRC522_Col+0x5d8>
		Error_Handler();
90001a1a:	f003 fcff 	bl	9000541c <Error_Handler>
90001a1e:	e726      	b.n	9000186e <__MFRC522_Col+0x5a2>
		Error_Handler();
90001a20:	f003 fcfc 	bl	9000541c <Error_Handler>
90001a24:	e714      	b.n	90001850 <__MFRC522_Col+0x584>
90001a26:	bf00      	nop
90001a28:	58021000 	.word	0x58021000
90001a2c:	24009490 	.word	0x24009490

90001a30 <__MFRC522_Stop>:
void __MFRC522_Stop(void) {
90001a30:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
	uint8_t crcBuffer[CRC_BUFFER_SIZE] = {0};
90001a34:	2200      	movs	r2, #0
void __MFRC522_Stop(void) {
90001a36:	b084      	sub	sp, #16
	crcBuffer[0] = CMD_PICC_HALT;
90001a38:	2350      	movs	r3, #80	; 0x50
	__MFRC522_NSS_Low()
90001a3a:	2108      	movs	r1, #8
90001a3c:	48a6      	ldr	r0, [pc, #664]	; (90001cd8 <__MFRC522_Stop+0x2a8>)
	uint8_t crcBuffer[CRC_BUFFER_SIZE] = {0};
90001a3e:	9203      	str	r2, [sp, #12]
	crcBuffer[0] = CMD_PICC_HALT;
90001a40:	f88d 300c 	strb.w	r3, [sp, #12]
	__MFRC522_NSS_Low()
90001a44:	f008 ffba 	bl	9000a9bc <HAL_GPIO_WritePin>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001a48:	210a      	movs	r1, #10
	uint8_t txArr[]= {send};
90001a4a:	228a      	movs	r2, #138	; 0x8a
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001a4c:	2301      	movs	r3, #1
90001a4e:	48a3      	ldr	r0, [pc, #652]	; (90001cdc <__MFRC522_Stop+0x2ac>)
90001a50:	9100      	str	r1, [sp, #0]
90001a52:	a902      	add	r1, sp, #8
	uint8_t txArr[]= {send};
90001a54:	f88d 2008 	strb.w	r2, [sp, #8]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001a58:	f10d 020b 	add.w	r2, sp, #11
90001a5c:	f00d fc16 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(Convert_Read_Reg(reg_addr), &rcv, sizeof(rcv)) != HAL_OK) {
90001a60:	2800      	cmp	r0, #0
90001a62:	f040 83e4 	bne.w	9000222e <__MFRC522_Stop+0x7fe>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001a66:	210a      	movs	r1, #10
	uint8_t txArr[]= {send};
90001a68:	2200      	movs	r2, #0
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001a6a:	2301      	movs	r3, #1
90001a6c:	489b      	ldr	r0, [pc, #620]	; (90001cdc <__MFRC522_Stop+0x2ac>)
90001a6e:	9100      	str	r1, [sp, #0]
90001a70:	a902      	add	r1, sp, #8
	uint8_t txArr[]= {send};
90001a72:	f88d 2008 	strb.w	r2, [sp, #8]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001a76:	f10d 020b 	add.w	r2, sp, #11
90001a7a:	f00d fc07 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(DUMMY, &rcv, sizeof(rcv)) != HAL_OK) {
90001a7e:	2800      	cmp	r0, #0
90001a80:	f040 850d 	bne.w	9000249e <__MFRC522_Stop+0xa6e>
	__MFRC522_NSS_High()
90001a84:	2201      	movs	r2, #1
90001a86:	2108      	movs	r1, #8
90001a88:	4893      	ldr	r0, [pc, #588]	; (90001cd8 <__MFRC522_Stop+0x2a8>)
90001a8a:	f008 ff97 	bl	9000a9bc <HAL_GPIO_WritePin>
	__MFRC522_NSS_Low()
90001a8e:	2200      	movs	r2, #0
90001a90:	2108      	movs	r1, #8
90001a92:	4891      	ldr	r0, [pc, #580]	; (90001cd8 <__MFRC522_Stop+0x2a8>)
	return rcv;
90001a94:	f89d 400b 	ldrb.w	r4, [sp, #11]
	__MFRC522_NSS_Low()
90001a98:	f008 ff90 	bl	9000a9bc <HAL_GPIO_WritePin>
	uint8_t txArr[]= {send};
90001a9c:	220a      	movs	r2, #10
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001a9e:	2301      	movs	r3, #1
90001aa0:	a902      	add	r1, sp, #8
90001aa2:	488e      	ldr	r0, [pc, #568]	; (90001cdc <__MFRC522_Stop+0x2ac>)
90001aa4:	9200      	str	r2, [sp, #0]
	Clear_Bits(REG_IRQ_BITS2, 0x04)
90001aa6:	f004 04fb 	and.w	r4, r4, #251	; 0xfb
	uint8_t txArr[]= {send};
90001aaa:	f88d 2008 	strb.w	r2, [sp, #8]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001aae:	f10d 020b 	add.w	r2, sp, #11
90001ab2:	f00d fbeb 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(Convert_Write_Reg(reg_addr), &rcv, sizeof(rcv)) != HAL_OK) {
90001ab6:	2800      	cmp	r0, #0
90001ab8:	f040 84ed 	bne.w	90002496 <__MFRC522_Stop+0xa66>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001abc:	220a      	movs	r2, #10
90001abe:	2301      	movs	r3, #1
90001ac0:	a902      	add	r1, sp, #8
90001ac2:	4886      	ldr	r0, [pc, #536]	; (90001cdc <__MFRC522_Stop+0x2ac>)
90001ac4:	9200      	str	r2, [sp, #0]
90001ac6:	f10d 020b 	add.w	r2, sp, #11
	uint8_t txArr[]= {send};
90001aca:	f88d 4008 	strb.w	r4, [sp, #8]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001ace:	f00d fbdd 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(value, &rcv, sizeof(rcv)) != HAL_OK) {
90001ad2:	2800      	cmp	r0, #0
90001ad4:	f040 84db 	bne.w	9000248e <__MFRC522_Stop+0xa5e>
	__MFRC522_NSS_High()
90001ad8:	2201      	movs	r2, #1
90001ada:	2108      	movs	r1, #8
90001adc:	487e      	ldr	r0, [pc, #504]	; (90001cd8 <__MFRC522_Stop+0x2a8>)
90001ade:	f008 ff6d 	bl	9000a9bc <HAL_GPIO_WritePin>
	__MFRC522_NSS_Low()
90001ae2:	2200      	movs	r2, #0
90001ae4:	2108      	movs	r1, #8
90001ae6:	487c      	ldr	r0, [pc, #496]	; (90001cd8 <__MFRC522_Stop+0x2a8>)
90001ae8:	f008 ff68 	bl	9000a9bc <HAL_GPIO_WritePin>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001aec:	210a      	movs	r1, #10
	uint8_t txArr[]= {send};
90001aee:	2294      	movs	r2, #148	; 0x94
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001af0:	2301      	movs	r3, #1
90001af2:	9100      	str	r1, [sp, #0]
90001af4:	a902      	add	r1, sp, #8
	uint8_t txArr[]= {send};
90001af6:	f88d 2008 	strb.w	r2, [sp, #8]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001afa:	f10d 020b 	add.w	r2, sp, #11
90001afe:	4877      	ldr	r0, [pc, #476]	; (90001cdc <__MFRC522_Stop+0x2ac>)
90001b00:	f00d fbc4 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(Convert_Read_Reg(reg_addr), &rcv, sizeof(rcv)) != HAL_OK) {
90001b04:	2800      	cmp	r0, #0
90001b06:	f040 84be 	bne.w	90002486 <__MFRC522_Stop+0xa56>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001b0a:	210a      	movs	r1, #10
	uint8_t txArr[]= {send};
90001b0c:	2200      	movs	r2, #0
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001b0e:	2301      	movs	r3, #1
90001b10:	4872      	ldr	r0, [pc, #456]	; (90001cdc <__MFRC522_Stop+0x2ac>)
90001b12:	9100      	str	r1, [sp, #0]
90001b14:	a902      	add	r1, sp, #8
	uint8_t txArr[]= {send};
90001b16:	f88d 2008 	strb.w	r2, [sp, #8]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001b1a:	f10d 020b 	add.w	r2, sp, #11
90001b1e:	f00d fbb5 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(DUMMY, &rcv, sizeof(rcv)) != HAL_OK) {
90001b22:	2800      	cmp	r0, #0
90001b24:	f040 84ab 	bne.w	9000247e <__MFRC522_Stop+0xa4e>
	__MFRC522_NSS_High()
90001b28:	2201      	movs	r2, #1
90001b2a:	2108      	movs	r1, #8
90001b2c:	486a      	ldr	r0, [pc, #424]	; (90001cd8 <__MFRC522_Stop+0x2a8>)
90001b2e:	f008 ff45 	bl	9000a9bc <HAL_GPIO_WritePin>
	__MFRC522_NSS_Low()
90001b32:	2200      	movs	r2, #0
90001b34:	2108      	movs	r1, #8
90001b36:	4868      	ldr	r0, [pc, #416]	; (90001cd8 <__MFRC522_Stop+0x2a8>)
	return rcv;
90001b38:	f89d 400b 	ldrb.w	r4, [sp, #11]
	__MFRC522_NSS_Low()
90001b3c:	f008 ff3e 	bl	9000a9bc <HAL_GPIO_WritePin>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001b40:	230a      	movs	r3, #10
	uint8_t txArr[]= {send};
90001b42:	2214      	movs	r2, #20
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001b44:	a902      	add	r1, sp, #8
90001b46:	4865      	ldr	r0, [pc, #404]	; (90001cdc <__MFRC522_Stop+0x2ac>)
90001b48:	9300      	str	r3, [sp, #0]
90001b4a:	2301      	movs	r3, #1
	uint8_t txArr[]= {send};
90001b4c:	f88d 2008 	strb.w	r2, [sp, #8]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001b50:	f10d 020b 	add.w	r2, sp, #11
	Set_Bits(REG_FIFO_LEVEL, 0x80)
90001b54:	f044 0480 	orr.w	r4, r4, #128	; 0x80
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001b58:	f00d fb98 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(Convert_Write_Reg(reg_addr), &rcv, sizeof(rcv)) != HAL_OK) {
90001b5c:	2800      	cmp	r0, #0
90001b5e:	f040 848a 	bne.w	90002476 <__MFRC522_Stop+0xa46>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001b62:	220a      	movs	r2, #10
90001b64:	2301      	movs	r3, #1
90001b66:	a902      	add	r1, sp, #8
90001b68:	485c      	ldr	r0, [pc, #368]	; (90001cdc <__MFRC522_Stop+0x2ac>)
90001b6a:	9200      	str	r2, [sp, #0]
90001b6c:	f10d 020b 	add.w	r2, sp, #11
	uint8_t txArr[]= {send};
90001b70:	f88d 4008 	strb.w	r4, [sp, #8]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001b74:	f00d fb8a 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(value, &rcv, sizeof(rcv)) != HAL_OK) {
90001b78:	2800      	cmp	r0, #0
90001b7a:	f040 8478 	bne.w	9000246e <__MFRC522_Stop+0xa3e>
	__MFRC522_NSS_High()
90001b7e:	af03      	add	r7, sp, #12
90001b80:	f10d 0a0e 	add.w	sl, sp, #14
	__MFRC522_NSS_Low()
90001b84:	4d54      	ldr	r5, [pc, #336]	; (90001cd8 <__MFRC522_Stop+0x2a8>)
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001b86:	f04f 080a 	mov.w	r8, #10
90001b8a:	463c      	mov	r4, r7
90001b8c:	4e53      	ldr	r6, [pc, #332]	; (90001cdc <__MFRC522_Stop+0x2ac>)
	__MFRC522_NSS_High()
90001b8e:	2201      	movs	r2, #1
90001b90:	2108      	movs	r1, #8
90001b92:	4851      	ldr	r0, [pc, #324]	; (90001cd8 <__MFRC522_Stop+0x2a8>)
90001b94:	f008 ff12 	bl	9000a9bc <HAL_GPIO_WritePin>
	__MFRC522_NSS_Low()
90001b98:	2200      	movs	r2, #0
90001b9a:	2108      	movs	r1, #8
90001b9c:	4628      	mov	r0, r5
		__MFRC522_Write(REG_FIFO_DATA, input[wait]);
90001b9e:	f814 9b01 	ldrb.w	r9, [r4], #1
	__MFRC522_NSS_Low()
90001ba2:	f008 ff0b 	bl	9000a9bc <HAL_GPIO_WritePin>
	uint8_t txArr[]= {send};
90001ba6:	f04f 0c12 	mov.w	ip, #18
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001baa:	2301      	movs	r3, #1
90001bac:	f10d 020b 	add.w	r2, sp, #11
90001bb0:	a902      	add	r1, sp, #8
90001bb2:	4630      	mov	r0, r6
90001bb4:	f8cd 8000 	str.w	r8, [sp]
	uint8_t txArr[]= {send};
90001bb8:	f88d c008 	strb.w	ip, [sp, #8]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001bbc:	f00d fb66 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(Convert_Write_Reg(reg_addr), &rcv, sizeof(rcv)) != HAL_OK) {
90001bc0:	2800      	cmp	r0, #0
90001bc2:	f040 8085 	bne.w	90001cd0 <__MFRC522_Stop+0x2a0>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001bc6:	2301      	movs	r3, #1
90001bc8:	f10d 020b 	add.w	r2, sp, #11
90001bcc:	a902      	add	r1, sp, #8
90001bce:	4630      	mov	r0, r6
90001bd0:	f8cd 8000 	str.w	r8, [sp]
	uint8_t txArr[]= {send};
90001bd4:	f88d 9008 	strb.w	r9, [sp, #8]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001bd8:	f00d fb58 	bl	9000f28c <HAL_SPI_TransmitReceive>
90001bdc:	4603      	mov	r3, r0
	__MFRC522_NSS_High()
90001bde:	2201      	movs	r2, #1
90001be0:	2108      	movs	r1, #8
90001be2:	4628      	mov	r0, r5
	if (__SPI_Write_Receive(value, &rcv, sizeof(rcv)) != HAL_OK) {
90001be4:	2b00      	cmp	r3, #0
90001be6:	d168      	bne.n	90001cba <__MFRC522_Stop+0x28a>
	__MFRC522_NSS_High()
90001be8:	f008 fee8 	bl	9000a9bc <HAL_GPIO_WritePin>
	while (wait < lenght) {
90001bec:	4554      	cmp	r4, sl
90001bee:	d1d3      	bne.n	90001b98 <__MFRC522_Stop+0x168>
	__MFRC522_NSS_Low()
90001bf0:	2200      	movs	r2, #0
90001bf2:	2108      	movs	r1, #8
90001bf4:	4838      	ldr	r0, [pc, #224]	; (90001cd8 <__MFRC522_Stop+0x2a8>)
90001bf6:	f008 fee1 	bl	9000a9bc <HAL_GPIO_WritePin>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001bfa:	230a      	movs	r3, #10
	uint8_t txArr[]= {send};
90001bfc:	2202      	movs	r2, #2
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001bfe:	a902      	add	r1, sp, #8
90001c00:	9300      	str	r3, [sp, #0]
90001c02:	2301      	movs	r3, #1
	uint8_t txArr[]= {send};
90001c04:	f88d 2008 	strb.w	r2, [sp, #8]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001c08:	f10d 020b 	add.w	r2, sp, #11
90001c0c:	4833      	ldr	r0, [pc, #204]	; (90001cdc <__MFRC522_Stop+0x2ac>)
90001c0e:	f00d fb3d 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(Convert_Write_Reg(reg_addr), &rcv, sizeof(rcv)) != HAL_OK) {
90001c12:	2800      	cmp	r0, #0
90001c14:	f040 8427 	bne.w	90002466 <__MFRC522_Stop+0xa36>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001c18:	230a      	movs	r3, #10
	uint8_t txArr[]= {send};
90001c1a:	2203      	movs	r2, #3
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001c1c:	a902      	add	r1, sp, #8
90001c1e:	482f      	ldr	r0, [pc, #188]	; (90001cdc <__MFRC522_Stop+0x2ac>)
90001c20:	9300      	str	r3, [sp, #0]
90001c22:	2301      	movs	r3, #1
	uint8_t txArr[]= {send};
90001c24:	f88d 2008 	strb.w	r2, [sp, #8]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001c28:	f10d 020b 	add.w	r2, sp, #11
90001c2c:	f00d fb2e 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(value, &rcv, sizeof(rcv)) != HAL_OK) {
90001c30:	2800      	cmp	r0, #0
90001c32:	f040 8414 	bne.w	9000245e <__MFRC522_Stop+0xa2e>
	__MFRC522_NSS_Low()
90001c36:	4e28      	ldr	r6, [pc, #160]	; (90001cd8 <__MFRC522_Stop+0x2a8>)
	__MFRC522_NSS_High()
90001c38:	2201      	movs	r2, #1
90001c3a:	2108      	movs	r1, #8
}
90001c3c:	24ff      	movs	r4, #255	; 0xff
	__MFRC522_NSS_High()
90001c3e:	4630      	mov	r0, r6
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001c40:	4d26      	ldr	r5, [pc, #152]	; (90001cdc <__MFRC522_Stop+0x2ac>)
	__MFRC522_NSS_High()
90001c42:	f008 febb 	bl	9000a9bc <HAL_GPIO_WritePin>
}
90001c46:	e01c      	b.n	90001c82 <__MFRC522_Stop+0x252>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001c48:	f04f 0e0a 	mov.w	lr, #10
	uint8_t txArr[]= {send};
90001c4c:	f04f 0c00 	mov.w	ip, #0
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001c50:	2301      	movs	r3, #1
90001c52:	f10d 020b 	add.w	r2, sp, #11
90001c56:	a902      	add	r1, sp, #8
90001c58:	4628      	mov	r0, r5
90001c5a:	f8cd e000 	str.w	lr, [sp]
	uint8_t txArr[]= {send};
90001c5e:	f88d c008 	strb.w	ip, [sp, #8]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001c62:	f00d fb13 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(DUMMY, &rcv, sizeof(rcv)) != HAL_OK) {
90001c66:	bb28      	cbnz	r0, 90001cb4 <__MFRC522_Stop+0x284>
	__MFRC522_NSS_High()
90001c68:	2201      	movs	r2, #1
90001c6a:	2108      	movs	r1, #8
90001c6c:	4630      	mov	r0, r6
90001c6e:	f008 fea5 	bl	9000a9bc <HAL_GPIO_WritePin>
	} while((wait != 0) && !(value & 0x04));
90001c72:	1e63      	subs	r3, r4, #1
	return rcv;
90001c74:	f89d 200b 	ldrb.w	r2, [sp, #11]
	} while((wait != 0) && !(value & 0x04));
90001c78:	f013 04ff 	ands.w	r4, r3, #255	; 0xff
90001c7c:	d030      	beq.n	90001ce0 <__MFRC522_Stop+0x2b0>
90001c7e:	0753      	lsls	r3, r2, #29
90001c80:	d42e      	bmi.n	90001ce0 <__MFRC522_Stop+0x2b0>
	__MFRC522_NSS_Low()
90001c82:	2200      	movs	r2, #0
90001c84:	2108      	movs	r1, #8
90001c86:	4630      	mov	r0, r6
90001c88:	f008 fe98 	bl	9000a9bc <HAL_GPIO_WritePin>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001c8c:	f04f 0e0a 	mov.w	lr, #10
	uint8_t txArr[]= {send};
90001c90:	f04f 0c8a 	mov.w	ip, #138	; 0x8a
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001c94:	2301      	movs	r3, #1
90001c96:	f10d 020b 	add.w	r2, sp, #11
90001c9a:	a902      	add	r1, sp, #8
90001c9c:	4628      	mov	r0, r5
90001c9e:	f8cd e000 	str.w	lr, [sp]
	uint8_t txArr[]= {send};
90001ca2:	f88d c008 	strb.w	ip, [sp, #8]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001ca6:	f00d faf1 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(Convert_Read_Reg(reg_addr), &rcv, sizeof(rcv)) != HAL_OK) {
90001caa:	2800      	cmp	r0, #0
90001cac:	d0cc      	beq.n	90001c48 <__MFRC522_Stop+0x218>
		Error_Handler();
90001cae:	f003 fbb5 	bl	9000541c <Error_Handler>
90001cb2:	e7c9      	b.n	90001c48 <__MFRC522_Stop+0x218>
		Error_Handler();
90001cb4:	f003 fbb2 	bl	9000541c <Error_Handler>
90001cb8:	e7d6      	b.n	90001c68 <__MFRC522_Stop+0x238>
		Error_Handler();
90001cba:	f003 fbaf 	bl	9000541c <Error_Handler>
	__MFRC522_NSS_High()
90001cbe:	2201      	movs	r2, #1
90001cc0:	2108      	movs	r1, #8
90001cc2:	4628      	mov	r0, r5
90001cc4:	f008 fe7a 	bl	9000a9bc <HAL_GPIO_WritePin>
	while (wait < lenght) {
90001cc8:	4554      	cmp	r4, sl
90001cca:	f47f af65 	bne.w	90001b98 <__MFRC522_Stop+0x168>
90001cce:	e78f      	b.n	90001bf0 <__MFRC522_Stop+0x1c0>
		Error_Handler();
90001cd0:	f003 fba4 	bl	9000541c <Error_Handler>
90001cd4:	e777      	b.n	90001bc6 <__MFRC522_Stop+0x196>
90001cd6:	bf00      	nop
90001cd8:	58021000 	.word	0x58021000
90001cdc:	24009490 	.word	0x24009490
	__MFRC522_NSS_Low()
90001ce0:	2200      	movs	r2, #0
90001ce2:	2108      	movs	r1, #8
90001ce4:	48ce      	ldr	r0, [pc, #824]	; (90002020 <__MFRC522_Stop+0x5f0>)
90001ce6:	f008 fe69 	bl	9000a9bc <HAL_GPIO_WritePin>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001cea:	230a      	movs	r3, #10
	uint8_t txArr[]= {send};
90001cec:	22c4      	movs	r2, #196	; 0xc4
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001cee:	a902      	add	r1, sp, #8
90001cf0:	9300      	str	r3, [sp, #0]
90001cf2:	2301      	movs	r3, #1
	uint8_t txArr[]= {send};
90001cf4:	f88d 2008 	strb.w	r2, [sp, #8]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001cf8:	f10d 020b 	add.w	r2, sp, #11
90001cfc:	48c9      	ldr	r0, [pc, #804]	; (90002024 <__MFRC522_Stop+0x5f4>)
90001cfe:	f00d fac5 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(Convert_Read_Reg(reg_addr), &rcv, sizeof(rcv)) != HAL_OK) {
90001d02:	2800      	cmp	r0, #0
90001d04:	f040 83a8 	bne.w	90002458 <__MFRC522_Stop+0xa28>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001d08:	230a      	movs	r3, #10
	uint8_t txArr[]= {send};
90001d0a:	2200      	movs	r2, #0
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001d0c:	a902      	add	r1, sp, #8
90001d0e:	48c5      	ldr	r0, [pc, #788]	; (90002024 <__MFRC522_Stop+0x5f4>)
90001d10:	9300      	str	r3, [sp, #0]
90001d12:	2301      	movs	r3, #1
	uint8_t txArr[]= {send};
90001d14:	f88d 2008 	strb.w	r2, [sp, #8]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001d18:	f10d 020b 	add.w	r2, sp, #11
90001d1c:	f00d fab6 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(DUMMY, &rcv, sizeof(rcv)) != HAL_OK) {
90001d20:	2800      	cmp	r0, #0
90001d22:	f040 8396 	bne.w	90002452 <__MFRC522_Stop+0xa22>
	__MFRC522_NSS_High()
90001d26:	2201      	movs	r2, #1
90001d28:	2108      	movs	r1, #8
90001d2a:	48bd      	ldr	r0, [pc, #756]	; (90002020 <__MFRC522_Stop+0x5f0>)
90001d2c:	f008 fe46 	bl	9000a9bc <HAL_GPIO_WritePin>
	return rcv;
90001d30:	f89d 300b 	ldrb.w	r3, [sp, #11]
	__MFRC522_NSS_Low()
90001d34:	2200      	movs	r2, #0
90001d36:	2108      	movs	r1, #8
90001d38:	48b9      	ldr	r0, [pc, #740]	; (90002020 <__MFRC522_Stop+0x5f0>)
	output[0] = __MFRC522_Read(REG_CRC_RESULT2);
90001d3a:	f88d 300e 	strb.w	r3, [sp, #14]
	__MFRC522_NSS_Low()
90001d3e:	f008 fe3d 	bl	9000a9bc <HAL_GPIO_WritePin>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001d42:	230a      	movs	r3, #10
	uint8_t txArr[]= {send};
90001d44:	22c2      	movs	r2, #194	; 0xc2
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001d46:	a902      	add	r1, sp, #8
90001d48:	48b6      	ldr	r0, [pc, #728]	; (90002024 <__MFRC522_Stop+0x5f4>)
90001d4a:	9300      	str	r3, [sp, #0]
90001d4c:	2301      	movs	r3, #1
	uint8_t txArr[]= {send};
90001d4e:	f88d 2008 	strb.w	r2, [sp, #8]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001d52:	f10d 020b 	add.w	r2, sp, #11
90001d56:	f00d fa99 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(Convert_Read_Reg(reg_addr), &rcv, sizeof(rcv)) != HAL_OK) {
90001d5a:	2800      	cmp	r0, #0
90001d5c:	f040 8376 	bne.w	9000244c <__MFRC522_Stop+0xa1c>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001d60:	230a      	movs	r3, #10
	uint8_t txArr[]= {send};
90001d62:	2200      	movs	r2, #0
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001d64:	a902      	add	r1, sp, #8
90001d66:	48af      	ldr	r0, [pc, #700]	; (90002024 <__MFRC522_Stop+0x5f4>)
90001d68:	9300      	str	r3, [sp, #0]
90001d6a:	2301      	movs	r3, #1
	uint8_t txArr[]= {send};
90001d6c:	f88d 2008 	strb.w	r2, [sp, #8]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001d70:	f10d 020b 	add.w	r2, sp, #11
90001d74:	f00d fa8a 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(DUMMY, &rcv, sizeof(rcv)) != HAL_OK) {
90001d78:	2800      	cmp	r0, #0
90001d7a:	f040 8364 	bne.w	90002446 <__MFRC522_Stop+0xa16>
	__MFRC522_NSS_High()
90001d7e:	2201      	movs	r2, #1
90001d80:	2108      	movs	r1, #8
90001d82:	48a7      	ldr	r0, [pc, #668]	; (90002020 <__MFRC522_Stop+0x5f0>)
90001d84:	f008 fe1a 	bl	9000a9bc <HAL_GPIO_WritePin>
	return rcv;
90001d88:	f89d 300b 	ldrb.w	r3, [sp, #11]
	__MFRC522_NSS_Low()
90001d8c:	2200      	movs	r2, #0
90001d8e:	2108      	movs	r1, #8
90001d90:	48a3      	ldr	r0, [pc, #652]	; (90002020 <__MFRC522_Stop+0x5f0>)
	output[1] = __MFRC522_Read(REG_CRC_RESULT1);
90001d92:	f88d 300f 	strb.w	r3, [sp, #15]
	__MFRC522_NSS_Low()
90001d96:	f008 fe11 	bl	9000a9bc <HAL_GPIO_WritePin>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001d9a:	230a      	movs	r3, #10
	uint8_t txArr[]= {send};
90001d9c:	2204      	movs	r2, #4
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001d9e:	a902      	add	r1, sp, #8
90001da0:	48a0      	ldr	r0, [pc, #640]	; (90002024 <__MFRC522_Stop+0x5f4>)
90001da2:	9300      	str	r3, [sp, #0]
90001da4:	2301      	movs	r3, #1
	uint8_t txArr[]= {send};
90001da6:	f88d 2008 	strb.w	r2, [sp, #8]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001daa:	f10d 020b 	add.w	r2, sp, #11
90001dae:	f00d fa6d 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(Convert_Write_Reg(reg_addr), &rcv, sizeof(rcv)) != HAL_OK) {
90001db2:	2800      	cmp	r0, #0
90001db4:	f040 8344 	bne.w	90002440 <__MFRC522_Stop+0xa10>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001db8:	230a      	movs	r3, #10
	uint8_t txArr[]= {send};
90001dba:	22f7      	movs	r2, #247	; 0xf7
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001dbc:	a902      	add	r1, sp, #8
90001dbe:	4899      	ldr	r0, [pc, #612]	; (90002024 <__MFRC522_Stop+0x5f4>)
90001dc0:	9300      	str	r3, [sp, #0]
90001dc2:	2301      	movs	r3, #1
	uint8_t txArr[]= {send};
90001dc4:	f88d 2008 	strb.w	r2, [sp, #8]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001dc8:	f10d 020b 	add.w	r2, sp, #11
90001dcc:	f00d fa5e 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(value, &rcv, sizeof(rcv)) != HAL_OK) {
90001dd0:	2800      	cmp	r0, #0
90001dd2:	f040 8332 	bne.w	9000243a <__MFRC522_Stop+0xa0a>
	__MFRC522_NSS_High()
90001dd6:	2201      	movs	r2, #1
90001dd8:	2108      	movs	r1, #8
90001dda:	4891      	ldr	r0, [pc, #580]	; (90002020 <__MFRC522_Stop+0x5f0>)
90001ddc:	f008 fdee 	bl	9000a9bc <HAL_GPIO_WritePin>
	__MFRC522_NSS_Low()
90001de0:	2200      	movs	r2, #0
90001de2:	2108      	movs	r1, #8
90001de4:	488e      	ldr	r0, [pc, #568]	; (90002020 <__MFRC522_Stop+0x5f0>)
90001de6:	f008 fde9 	bl	9000a9bc <HAL_GPIO_WritePin>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001dea:	230a      	movs	r3, #10
	uint8_t txArr[]= {send};
90001dec:	2288      	movs	r2, #136	; 0x88
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001dee:	a902      	add	r1, sp, #8
90001df0:	9300      	str	r3, [sp, #0]
90001df2:	2301      	movs	r3, #1
	uint8_t txArr[]= {send};
90001df4:	f88d 2008 	strb.w	r2, [sp, #8]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001df8:	f10d 020b 	add.w	r2, sp, #11
90001dfc:	4889      	ldr	r0, [pc, #548]	; (90002024 <__MFRC522_Stop+0x5f4>)
90001dfe:	f00d fa45 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(Convert_Read_Reg(reg_addr), &rcv, sizeof(rcv)) != HAL_OK) {
90001e02:	2800      	cmp	r0, #0
90001e04:	f040 8316 	bne.w	90002434 <__MFRC522_Stop+0xa04>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001e08:	230a      	movs	r3, #10
	uint8_t txArr[]= {send};
90001e0a:	2200      	movs	r2, #0
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001e0c:	a902      	add	r1, sp, #8
90001e0e:	4885      	ldr	r0, [pc, #532]	; (90002024 <__MFRC522_Stop+0x5f4>)
90001e10:	9300      	str	r3, [sp, #0]
90001e12:	2301      	movs	r3, #1
	uint8_t txArr[]= {send};
90001e14:	f88d 2008 	strb.w	r2, [sp, #8]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001e18:	f10d 020b 	add.w	r2, sp, #11
90001e1c:	f00d fa36 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(DUMMY, &rcv, sizeof(rcv)) != HAL_OK) {
90001e20:	2800      	cmp	r0, #0
90001e22:	f040 8304 	bne.w	9000242e <__MFRC522_Stop+0x9fe>
	__MFRC522_NSS_High()
90001e26:	2201      	movs	r2, #1
90001e28:	2108      	movs	r1, #8
90001e2a:	487d      	ldr	r0, [pc, #500]	; (90002020 <__MFRC522_Stop+0x5f0>)
90001e2c:	f008 fdc6 	bl	9000a9bc <HAL_GPIO_WritePin>
	__MFRC522_NSS_Low()
90001e30:	2200      	movs	r2, #0
90001e32:	2108      	movs	r1, #8
90001e34:	487a      	ldr	r0, [pc, #488]	; (90002020 <__MFRC522_Stop+0x5f0>)
	return rcv;
90001e36:	f89d 400b 	ldrb.w	r4, [sp, #11]
	__MFRC522_NSS_Low()
90001e3a:	f008 fdbf 	bl	9000a9bc <HAL_GPIO_WritePin>
	uint8_t txArr[]= {send};
90001e3e:	2308      	movs	r3, #8
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001e40:	f10d 020b 	add.w	r2, sp, #11
90001e44:	a902      	add	r1, sp, #8
90001e46:	4877      	ldr	r0, [pc, #476]	; (90002024 <__MFRC522_Stop+0x5f4>)
	uint8_t txArr[]= {send};
90001e48:	f88d 3008 	strb.w	r3, [sp, #8]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001e4c:	230a      	movs	r3, #10
	Clear_Bits(REG_IRQ_BITS, 0x80)
90001e4e:	f004 047f 	and.w	r4, r4, #127	; 0x7f
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001e52:	9300      	str	r3, [sp, #0]
90001e54:	2301      	movs	r3, #1
90001e56:	f00d fa19 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(Convert_Write_Reg(reg_addr), &rcv, sizeof(rcv)) != HAL_OK) {
90001e5a:	2800      	cmp	r0, #0
90001e5c:	f040 82e4 	bne.w	90002428 <__MFRC522_Stop+0x9f8>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001e60:	230a      	movs	r3, #10
90001e62:	f10d 020b 	add.w	r2, sp, #11
90001e66:	a902      	add	r1, sp, #8
90001e68:	486e      	ldr	r0, [pc, #440]	; (90002024 <__MFRC522_Stop+0x5f4>)
90001e6a:	9300      	str	r3, [sp, #0]
90001e6c:	2301      	movs	r3, #1
	uint8_t txArr[]= {send};
90001e6e:	f88d 4008 	strb.w	r4, [sp, #8]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001e72:	f00d fa0b 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(value, &rcv, sizeof(rcv)) != HAL_OK) {
90001e76:	2800      	cmp	r0, #0
90001e78:	f040 82d3 	bne.w	90002422 <__MFRC522_Stop+0x9f2>
	__MFRC522_NSS_High()
90001e7c:	2201      	movs	r2, #1
90001e7e:	2108      	movs	r1, #8
90001e80:	4867      	ldr	r0, [pc, #412]	; (90002020 <__MFRC522_Stop+0x5f0>)
90001e82:	f008 fd9b 	bl	9000a9bc <HAL_GPIO_WritePin>
	__MFRC522_NSS_Low()
90001e86:	2200      	movs	r2, #0
90001e88:	2108      	movs	r1, #8
90001e8a:	4865      	ldr	r0, [pc, #404]	; (90002020 <__MFRC522_Stop+0x5f0>)
90001e8c:	f008 fd96 	bl	9000a9bc <HAL_GPIO_WritePin>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001e90:	230a      	movs	r3, #10
	uint8_t txArr[]= {send};
90001e92:	2294      	movs	r2, #148	; 0x94
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001e94:	a902      	add	r1, sp, #8
90001e96:	9300      	str	r3, [sp, #0]
90001e98:	2301      	movs	r3, #1
	uint8_t txArr[]= {send};
90001e9a:	f88d 2008 	strb.w	r2, [sp, #8]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001e9e:	f10d 020b 	add.w	r2, sp, #11
90001ea2:	4860      	ldr	r0, [pc, #384]	; (90002024 <__MFRC522_Stop+0x5f4>)
90001ea4:	f00d f9f2 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(Convert_Read_Reg(reg_addr), &rcv, sizeof(rcv)) != HAL_OK) {
90001ea8:	2800      	cmp	r0, #0
90001eaa:	f040 82b7 	bne.w	9000241c <__MFRC522_Stop+0x9ec>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001eae:	230a      	movs	r3, #10
	uint8_t txArr[]= {send};
90001eb0:	2200      	movs	r2, #0
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001eb2:	a902      	add	r1, sp, #8
90001eb4:	485b      	ldr	r0, [pc, #364]	; (90002024 <__MFRC522_Stop+0x5f4>)
90001eb6:	9300      	str	r3, [sp, #0]
90001eb8:	2301      	movs	r3, #1
	uint8_t txArr[]= {send};
90001eba:	f88d 2008 	strb.w	r2, [sp, #8]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001ebe:	f10d 020b 	add.w	r2, sp, #11
90001ec2:	f00d f9e3 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(DUMMY, &rcv, sizeof(rcv)) != HAL_OK) {
90001ec6:	2800      	cmp	r0, #0
90001ec8:	f040 82a5 	bne.w	90002416 <__MFRC522_Stop+0x9e6>
	__MFRC522_NSS_High()
90001ecc:	2201      	movs	r2, #1
90001ece:	2108      	movs	r1, #8
90001ed0:	4853      	ldr	r0, [pc, #332]	; (90002020 <__MFRC522_Stop+0x5f0>)
90001ed2:	f008 fd73 	bl	9000a9bc <HAL_GPIO_WritePin>
	__MFRC522_NSS_Low()
90001ed6:	2200      	movs	r2, #0
90001ed8:	2108      	movs	r1, #8
90001eda:	4851      	ldr	r0, [pc, #324]	; (90002020 <__MFRC522_Stop+0x5f0>)
	return rcv;
90001edc:	f89d 400b 	ldrb.w	r4, [sp, #11]
	__MFRC522_NSS_Low()
90001ee0:	f008 fd6c 	bl	9000a9bc <HAL_GPIO_WritePin>
	uint8_t txArr[]= {send};
90001ee4:	2314      	movs	r3, #20
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001ee6:	f10d 020b 	add.w	r2, sp, #11
90001eea:	a902      	add	r1, sp, #8
90001eec:	484d      	ldr	r0, [pc, #308]	; (90002024 <__MFRC522_Stop+0x5f4>)
	uint8_t txArr[]= {send};
90001eee:	f88d 3008 	strb.w	r3, [sp, #8]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001ef2:	230a      	movs	r3, #10
	Set_Bits(REG_FIFO_LEVEL, 0x80)
90001ef4:	f044 0480 	orr.w	r4, r4, #128	; 0x80
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001ef8:	9300      	str	r3, [sp, #0]
90001efa:	2301      	movs	r3, #1
90001efc:	f00d f9c6 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(Convert_Write_Reg(reg_addr), &rcv, sizeof(rcv)) != HAL_OK) {
90001f00:	2800      	cmp	r0, #0
90001f02:	f040 8285 	bne.w	90002410 <__MFRC522_Stop+0x9e0>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001f06:	230a      	movs	r3, #10
90001f08:	f10d 020b 	add.w	r2, sp, #11
90001f0c:	a902      	add	r1, sp, #8
90001f0e:	4845      	ldr	r0, [pc, #276]	; (90002024 <__MFRC522_Stop+0x5f4>)
90001f10:	9300      	str	r3, [sp, #0]
90001f12:	2301      	movs	r3, #1
	uint8_t txArr[]= {send};
90001f14:	f88d 4008 	strb.w	r4, [sp, #8]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001f18:	f00d f9b8 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(value, &rcv, sizeof(rcv)) != HAL_OK) {
90001f1c:	2800      	cmp	r0, #0
90001f1e:	f040 8274 	bne.w	9000240a <__MFRC522_Stop+0x9da>
	__MFRC522_NSS_High()
90001f22:	2201      	movs	r2, #1
90001f24:	2108      	movs	r1, #8
90001f26:	483e      	ldr	r0, [pc, #248]	; (90002020 <__MFRC522_Stop+0x5f0>)
90001f28:	f008 fd48 	bl	9000a9bc <HAL_GPIO_WritePin>
	__MFRC522_NSS_Low()
90001f2c:	2200      	movs	r2, #0
90001f2e:	2108      	movs	r1, #8
90001f30:	483b      	ldr	r0, [pc, #236]	; (90002020 <__MFRC522_Stop+0x5f0>)
90001f32:	f008 fd43 	bl	9000a9bc <HAL_GPIO_WritePin>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001f36:	230a      	movs	r3, #10
	uint8_t txArr[]= {send};
90001f38:	2202      	movs	r2, #2
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001f3a:	a902      	add	r1, sp, #8
90001f3c:	9300      	str	r3, [sp, #0]
90001f3e:	2301      	movs	r3, #1
	uint8_t txArr[]= {send};
90001f40:	f88d 2008 	strb.w	r2, [sp, #8]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001f44:	f10d 020b 	add.w	r2, sp, #11
90001f48:	4836      	ldr	r0, [pc, #216]	; (90002024 <__MFRC522_Stop+0x5f4>)
90001f4a:	f00d f99f 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(Convert_Write_Reg(reg_addr), &rcv, sizeof(rcv)) != HAL_OK) {
90001f4e:	2800      	cmp	r0, #0
90001f50:	f040 8258 	bne.w	90002404 <__MFRC522_Stop+0x9d4>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001f54:	230a      	movs	r3, #10
	uint8_t txArr[]= {send};
90001f56:	2200      	movs	r2, #0
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001f58:	a902      	add	r1, sp, #8
90001f5a:	4832      	ldr	r0, [pc, #200]	; (90002024 <__MFRC522_Stop+0x5f4>)
90001f5c:	9300      	str	r3, [sp, #0]
90001f5e:	2301      	movs	r3, #1
	uint8_t txArr[]= {send};
90001f60:	f88d 2008 	strb.w	r2, [sp, #8]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001f64:	f10d 020b 	add.w	r2, sp, #11
90001f68:	f00d f990 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(value, &rcv, sizeof(rcv)) != HAL_OK) {
90001f6c:	2800      	cmp	r0, #0
90001f6e:	f040 8246 	bne.w	900023fe <__MFRC522_Stop+0x9ce>
	__MFRC522_NSS_Low()
90001f72:	4d2b      	ldr	r5, [pc, #172]	; (90002020 <__MFRC522_Stop+0x5f0>)
	__MFRC522_NSS_High()
90001f74:	2201      	movs	r2, #1
90001f76:	2108      	movs	r1, #8
90001f78:	f107 0a04 	add.w	sl, r7, #4
90001f7c:	4628      	mov	r0, r5
90001f7e:	463c      	mov	r4, r7
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001f80:	f04f 080a 	mov.w	r8, #10
90001f84:	4e27      	ldr	r6, [pc, #156]	; (90002024 <__MFRC522_Stop+0x5f4>)
	__MFRC522_NSS_High()
90001f86:	f008 fd19 	bl	9000a9bc <HAL_GPIO_WritePin>
	__MFRC522_NSS_Low()
90001f8a:	2200      	movs	r2, #0
90001f8c:	2108      	movs	r1, #8
90001f8e:	4628      	mov	r0, r5
		__MFRC522_Write(REG_FIFO_DATA, input[wait]);
90001f90:	f814 9b01 	ldrb.w	r9, [r4], #1
	__MFRC522_NSS_Low()
90001f94:	f008 fd12 	bl	9000a9bc <HAL_GPIO_WritePin>
	uint8_t txArr[]= {send};
90001f98:	f04f 0c12 	mov.w	ip, #18
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001f9c:	2301      	movs	r3, #1
90001f9e:	f10d 020b 	add.w	r2, sp, #11
90001fa2:	a902      	add	r1, sp, #8
90001fa4:	4630      	mov	r0, r6
90001fa6:	f8cd 8000 	str.w	r8, [sp]
	uint8_t txArr[]= {send};
90001faa:	f88d c008 	strb.w	ip, [sp, #8]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001fae:	f00d f96d 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(Convert_Write_Reg(reg_addr), &rcv, sizeof(rcv)) != HAL_OK) {
90001fb2:	2800      	cmp	r0, #0
90001fb4:	f040 80e1 	bne.w	9000217a <__MFRC522_Stop+0x74a>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001fb8:	2301      	movs	r3, #1
90001fba:	f10d 020b 	add.w	r2, sp, #11
90001fbe:	a902      	add	r1, sp, #8
90001fc0:	4630      	mov	r0, r6
90001fc2:	f8cd 8000 	str.w	r8, [sp]
	uint8_t txArr[]= {send};
90001fc6:	f88d 9008 	strb.w	r9, [sp, #8]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001fca:	f00d f95f 	bl	9000f28c <HAL_SPI_TransmitReceive>
90001fce:	4603      	mov	r3, r0
	__MFRC522_NSS_High()
90001fd0:	2201      	movs	r2, #1
90001fd2:	2108      	movs	r1, #8
90001fd4:	4628      	mov	r0, r5
	if (__SPI_Write_Receive(value, &rcv, sizeof(rcv)) != HAL_OK) {
90001fd6:	2b00      	cmp	r3, #0
90001fd8:	f040 80c4 	bne.w	90002164 <__MFRC522_Stop+0x734>
	__MFRC522_NSS_High()
90001fdc:	f008 fcee 	bl	9000a9bc <HAL_GPIO_WritePin>
	while (wait < inputLength) {
90001fe0:	4554      	cmp	r4, sl
90001fe2:	d1d2      	bne.n	90001f8a <__MFRC522_Stop+0x55a>
	__MFRC522_NSS_Low()
90001fe4:	2200      	movs	r2, #0
90001fe6:	2108      	movs	r1, #8
90001fe8:	480d      	ldr	r0, [pc, #52]	; (90002020 <__MFRC522_Stop+0x5f0>)
90001fea:	f008 fce7 	bl	9000a9bc <HAL_GPIO_WritePin>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001fee:	230a      	movs	r3, #10
	uint8_t txArr[]= {send};
90001ff0:	2202      	movs	r2, #2
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001ff2:	a902      	add	r1, sp, #8
90001ff4:	9300      	str	r3, [sp, #0]
90001ff6:	2301      	movs	r3, #1
	uint8_t txArr[]= {send};
90001ff8:	f88d 2008 	strb.w	r2, [sp, #8]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90001ffc:	f10d 020b 	add.w	r2, sp, #11
90002000:	4808      	ldr	r0, [pc, #32]	; (90002024 <__MFRC522_Stop+0x5f4>)
90002002:	f00d f943 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(Convert_Write_Reg(reg_addr), &rcv, sizeof(rcv)) != HAL_OK) {
90002006:	2800      	cmp	r0, #0
90002008:	f040 81f6 	bne.w	900023f8 <__MFRC522_Stop+0x9c8>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
9000200c:	230a      	movs	r3, #10
	uint8_t txArr[]= {send};
9000200e:	220c      	movs	r2, #12
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90002010:	a902      	add	r1, sp, #8
90002012:	4804      	ldr	r0, [pc, #16]	; (90002024 <__MFRC522_Stop+0x5f4>)
90002014:	9300      	str	r3, [sp, #0]
90002016:	2301      	movs	r3, #1
	uint8_t txArr[]= {send};
90002018:	f88d 2008 	strb.w	r2, [sp, #8]
9000201c:	e004      	b.n	90002028 <__MFRC522_Stop+0x5f8>
9000201e:	bf00      	nop
90002020:	58021000 	.word	0x58021000
90002024:	24009490 	.word	0x24009490
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90002028:	f10d 020b 	add.w	r2, sp, #11
9000202c:	f00d f92e 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(value, &rcv, sizeof(rcv)) != HAL_OK) {
90002030:	2800      	cmp	r0, #0
90002032:	f040 81de 	bne.w	900023f2 <__MFRC522_Stop+0x9c2>
	__MFRC522_NSS_High()
90002036:	2201      	movs	r2, #1
90002038:	2108      	movs	r1, #8
9000203a:	48c7      	ldr	r0, [pc, #796]	; (90002358 <__MFRC522_Stop+0x928>)
9000203c:	f008 fcbe 	bl	9000a9bc <HAL_GPIO_WritePin>
	__MFRC522_NSS_Low()
90002040:	2200      	movs	r2, #0
90002042:	2108      	movs	r1, #8
90002044:	48c4      	ldr	r0, [pc, #784]	; (90002358 <__MFRC522_Stop+0x928>)
90002046:	f008 fcb9 	bl	9000a9bc <HAL_GPIO_WritePin>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
9000204a:	230a      	movs	r3, #10
	uint8_t txArr[]= {send};
9000204c:	229a      	movs	r2, #154	; 0x9a
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
9000204e:	a902      	add	r1, sp, #8
90002050:	9300      	str	r3, [sp, #0]
90002052:	2301      	movs	r3, #1
	uint8_t txArr[]= {send};
90002054:	f88d 2008 	strb.w	r2, [sp, #8]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90002058:	f10d 020b 	add.w	r2, sp, #11
9000205c:	48bf      	ldr	r0, [pc, #764]	; (9000235c <__MFRC522_Stop+0x92c>)
9000205e:	f00d f915 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(Convert_Read_Reg(reg_addr), &rcv, sizeof(rcv)) != HAL_OK) {
90002062:	2800      	cmp	r0, #0
90002064:	f040 81c2 	bne.w	900023ec <__MFRC522_Stop+0x9bc>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90002068:	230a      	movs	r3, #10
	uint8_t txArr[]= {send};
9000206a:	2200      	movs	r2, #0
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
9000206c:	a902      	add	r1, sp, #8
9000206e:	48bb      	ldr	r0, [pc, #748]	; (9000235c <__MFRC522_Stop+0x92c>)
90002070:	9300      	str	r3, [sp, #0]
90002072:	2301      	movs	r3, #1
	uint8_t txArr[]= {send};
90002074:	f88d 2008 	strb.w	r2, [sp, #8]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90002078:	f10d 020b 	add.w	r2, sp, #11
9000207c:	f00d f906 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(DUMMY, &rcv, sizeof(rcv)) != HAL_OK) {
90002080:	2800      	cmp	r0, #0
90002082:	f040 81b0 	bne.w	900023e6 <__MFRC522_Stop+0x9b6>
	__MFRC522_NSS_High()
90002086:	2201      	movs	r2, #1
90002088:	2108      	movs	r1, #8
9000208a:	48b3      	ldr	r0, [pc, #716]	; (90002358 <__MFRC522_Stop+0x928>)
9000208c:	f008 fc96 	bl	9000a9bc <HAL_GPIO_WritePin>
	__MFRC522_NSS_Low()
90002090:	2200      	movs	r2, #0
90002092:	2108      	movs	r1, #8
90002094:	48b0      	ldr	r0, [pc, #704]	; (90002358 <__MFRC522_Stop+0x928>)
	return rcv;
90002096:	f89d 400b 	ldrb.w	r4, [sp, #11]
	__MFRC522_NSS_Low()
9000209a:	f008 fc8f 	bl	9000a9bc <HAL_GPIO_WritePin>
	uint8_t txArr[]= {send};
9000209e:	231a      	movs	r3, #26
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
900020a0:	f10d 020b 	add.w	r2, sp, #11
900020a4:	a902      	add	r1, sp, #8
900020a6:	48ad      	ldr	r0, [pc, #692]	; (9000235c <__MFRC522_Stop+0x92c>)
	uint8_t txArr[]= {send};
900020a8:	f88d 3008 	strb.w	r3, [sp, #8]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
900020ac:	230a      	movs	r3, #10
		Set_Bits(REG_BIT_FRAMING, 0x80)
900020ae:	f044 0480 	orr.w	r4, r4, #128	; 0x80
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
900020b2:	9300      	str	r3, [sp, #0]
900020b4:	2301      	movs	r3, #1
900020b6:	f00d f8e9 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(Convert_Write_Reg(reg_addr), &rcv, sizeof(rcv)) != HAL_OK) {
900020ba:	2800      	cmp	r0, #0
900020bc:	f040 8190 	bne.w	900023e0 <__MFRC522_Stop+0x9b0>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
900020c0:	230a      	movs	r3, #10
900020c2:	f10d 020b 	add.w	r2, sp, #11
900020c6:	a902      	add	r1, sp, #8
900020c8:	48a4      	ldr	r0, [pc, #656]	; (9000235c <__MFRC522_Stop+0x92c>)
900020ca:	9300      	str	r3, [sp, #0]
900020cc:	2301      	movs	r3, #1
	uint8_t txArr[]= {send};
900020ce:	f88d 4008 	strb.w	r4, [sp, #8]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
900020d2:	f00d f8db 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(value, &rcv, sizeof(rcv)) != HAL_OK) {
900020d6:	2800      	cmp	r0, #0
900020d8:	f040 817f 	bne.w	900023da <__MFRC522_Stop+0x9aa>
	__MFRC522_NSS_Low()
900020dc:	4e9e      	ldr	r6, [pc, #632]	; (90002358 <__MFRC522_Stop+0x928>)
	__MFRC522_NSS_High()
900020de:	2201      	movs	r2, #1
900020e0:	2108      	movs	r1, #8
900020e2:	f44f 64fa 	mov.w	r4, #2000	; 0x7d0
900020e6:	4630      	mov	r0, r6
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
900020e8:	4d9c      	ldr	r5, [pc, #624]	; (9000235c <__MFRC522_Stop+0x92c>)
	__MFRC522_NSS_High()
900020ea:	f008 fc67 	bl	9000a9bc <HAL_GPIO_WritePin>
900020ee:	e00d      	b.n	9000210c <__MFRC522_Stop+0x6dc>
		wait--;
900020f0:	3c01      	subs	r4, #1
	__MFRC522_NSS_High()
900020f2:	2201      	movs	r2, #1
900020f4:	2108      	movs	r1, #8
900020f6:	4630      	mov	r0, r6
		wait--;
900020f8:	b2a4      	uxth	r4, r4
	__MFRC522_NSS_High()
900020fa:	f008 fc5f 	bl	9000a9bc <HAL_GPIO_WritePin>
	return rcv;
900020fe:	f89d 300b 	ldrb.w	r3, [sp, #11]
	} while ((wait != 0) && !(value & 0x01) && !(value & waitIrq));
90002102:	2c00      	cmp	r4, #0
90002104:	d03c      	beq.n	90002180 <__MFRC522_Stop+0x750>
90002106:	f013 0f31 	tst.w	r3, #49	; 0x31
9000210a:	d139      	bne.n	90002180 <__MFRC522_Stop+0x750>
	__MFRC522_NSS_Low()
9000210c:	2200      	movs	r2, #0
9000210e:	2108      	movs	r1, #8
90002110:	4630      	mov	r0, r6
90002112:	f008 fc53 	bl	9000a9bc <HAL_GPIO_WritePin>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90002116:	f04f 0e0a 	mov.w	lr, #10
	uint8_t txArr[]= {send};
9000211a:	f04f 0c88 	mov.w	ip, #136	; 0x88
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
9000211e:	2301      	movs	r3, #1
90002120:	f10d 020b 	add.w	r2, sp, #11
90002124:	a902      	add	r1, sp, #8
90002126:	4628      	mov	r0, r5
90002128:	f8cd e000 	str.w	lr, [sp]
	uint8_t txArr[]= {send};
9000212c:	f88d c008 	strb.w	ip, [sp, #8]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90002130:	f00d f8ac 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(Convert_Read_Reg(reg_addr), &rcv, sizeof(rcv)) != HAL_OK) {
90002134:	b998      	cbnz	r0, 9000215e <__MFRC522_Stop+0x72e>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90002136:	f04f 0e0a 	mov.w	lr, #10
	uint8_t txArr[]= {send};
9000213a:	f04f 0c00 	mov.w	ip, #0
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
9000213e:	2301      	movs	r3, #1
90002140:	f10d 020b 	add.w	r2, sp, #11
90002144:	a902      	add	r1, sp, #8
90002146:	4628      	mov	r0, r5
90002148:	f8cd e000 	str.w	lr, [sp]
	uint8_t txArr[]= {send};
9000214c:	f88d c008 	strb.w	ip, [sp, #8]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90002150:	f00d f89c 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(DUMMY, &rcv, sizeof(rcv)) != HAL_OK) {
90002154:	2800      	cmp	r0, #0
90002156:	d0cb      	beq.n	900020f0 <__MFRC522_Stop+0x6c0>
		Error_Handler();
90002158:	f003 f960 	bl	9000541c <Error_Handler>
9000215c:	e7c8      	b.n	900020f0 <__MFRC522_Stop+0x6c0>
		Error_Handler();
9000215e:	f003 f95d 	bl	9000541c <Error_Handler>
90002162:	e7e8      	b.n	90002136 <__MFRC522_Stop+0x706>
		Error_Handler();
90002164:	f003 f95a 	bl	9000541c <Error_Handler>
	__MFRC522_NSS_High()
90002168:	2201      	movs	r2, #1
9000216a:	2108      	movs	r1, #8
9000216c:	4628      	mov	r0, r5
9000216e:	f008 fc25 	bl	9000a9bc <HAL_GPIO_WritePin>
	while (wait < inputLength) {
90002172:	4554      	cmp	r4, sl
90002174:	f47f af09 	bne.w	90001f8a <__MFRC522_Stop+0x55a>
90002178:	e734      	b.n	90001fe4 <__MFRC522_Stop+0x5b4>
		Error_Handler();
9000217a:	f003 f94f 	bl	9000541c <Error_Handler>
9000217e:	e71b      	b.n	90001fb8 <__MFRC522_Stop+0x588>
	__MFRC522_NSS_Low()
90002180:	2200      	movs	r2, #0
90002182:	2108      	movs	r1, #8
90002184:	4874      	ldr	r0, [pc, #464]	; (90002358 <__MFRC522_Stop+0x928>)
90002186:	f008 fc19 	bl	9000a9bc <HAL_GPIO_WritePin>
	uint8_t txArr[]= {send};
9000218a:	239a      	movs	r3, #154	; 0x9a
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
9000218c:	f10d 020b 	add.w	r2, sp, #11
90002190:	a902      	add	r1, sp, #8
	uint8_t txArr[]= {send};
90002192:	f88d 3008 	strb.w	r3, [sp, #8]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90002196:	230a      	movs	r3, #10
90002198:	4870      	ldr	r0, [pc, #448]	; (9000235c <__MFRC522_Stop+0x92c>)
9000219a:	9300      	str	r3, [sp, #0]
9000219c:	2301      	movs	r3, #1
9000219e:	f00d f875 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(Convert_Read_Reg(reg_addr), &rcv, sizeof(rcv)) != HAL_OK) {
900021a2:	2800      	cmp	r0, #0
900021a4:	f040 8116 	bne.w	900023d4 <__MFRC522_Stop+0x9a4>
	uint8_t txArr[]= {send};
900021a8:	2300      	movs	r3, #0
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
900021aa:	f10d 020b 	add.w	r2, sp, #11
900021ae:	a902      	add	r1, sp, #8
900021b0:	486a      	ldr	r0, [pc, #424]	; (9000235c <__MFRC522_Stop+0x92c>)
	uint8_t txArr[]= {send};
900021b2:	f88d 3008 	strb.w	r3, [sp, #8]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
900021b6:	230a      	movs	r3, #10
900021b8:	9300      	str	r3, [sp, #0]
900021ba:	2301      	movs	r3, #1
900021bc:	f00d f866 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(DUMMY, &rcv, sizeof(rcv)) != HAL_OK) {
900021c0:	2800      	cmp	r0, #0
900021c2:	f040 8104 	bne.w	900023ce <__MFRC522_Stop+0x99e>
	__MFRC522_NSS_High()
900021c6:	2201      	movs	r2, #1
900021c8:	2108      	movs	r1, #8
900021ca:	4863      	ldr	r0, [pc, #396]	; (90002358 <__MFRC522_Stop+0x928>)
900021cc:	f008 fbf6 	bl	9000a9bc <HAL_GPIO_WritePin>
	__MFRC522_NSS_Low()
900021d0:	2200      	movs	r2, #0
900021d2:	2108      	movs	r1, #8
900021d4:	4860      	ldr	r0, [pc, #384]	; (90002358 <__MFRC522_Stop+0x928>)
	return rcv;
900021d6:	f89d 500b 	ldrb.w	r5, [sp, #11]
	__MFRC522_NSS_Low()
900021da:	f008 fbef 	bl	9000a9bc <HAL_GPIO_WritePin>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
900021de:	230a      	movs	r3, #10
900021e0:	f10d 020b 	add.w	r2, sp, #11
900021e4:	a902      	add	r1, sp, #8
900021e6:	485d      	ldr	r0, [pc, #372]	; (9000235c <__MFRC522_Stop+0x92c>)
900021e8:	9300      	str	r3, [sp, #0]
	uint8_t txArr[]= {send};
900021ea:	231a      	movs	r3, #26
	Clear_Bits(REG_BIT_FRAMING, 0x80)
900021ec:	f005 057f 	and.w	r5, r5, #127	; 0x7f
	uint8_t txArr[]= {send};
900021f0:	f88d 3008 	strb.w	r3, [sp, #8]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
900021f4:	2301      	movs	r3, #1
900021f6:	f00d f849 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(Convert_Write_Reg(reg_addr), &rcv, sizeof(rcv)) != HAL_OK) {
900021fa:	2800      	cmp	r0, #0
900021fc:	f040 80e4 	bne.w	900023c8 <__MFRC522_Stop+0x998>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90002200:	230a      	movs	r3, #10
90002202:	f10d 020b 	add.w	r2, sp, #11
90002206:	a902      	add	r1, sp, #8
90002208:	4854      	ldr	r0, [pc, #336]	; (9000235c <__MFRC522_Stop+0x92c>)
9000220a:	9300      	str	r3, [sp, #0]
9000220c:	2301      	movs	r3, #1
	uint8_t txArr[]= {send};
9000220e:	f88d 5008 	strb.w	r5, [sp, #8]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90002212:	f00d f83b 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(value, &rcv, sizeof(rcv)) != HAL_OK) {
90002216:	2800      	cmp	r0, #0
90002218:	f040 80d3 	bne.w	900023c2 <__MFRC522_Stop+0x992>
	__MFRC522_NSS_High()
9000221c:	2201      	movs	r2, #1
9000221e:	2108      	movs	r1, #8
90002220:	484d      	ldr	r0, [pc, #308]	; (90002358 <__MFRC522_Stop+0x928>)
90002222:	f008 fbcb 	bl	9000a9bc <HAL_GPIO_WritePin>
	if (wait != 0) {
90002226:	b92c      	cbnz	r4, 90002234 <__MFRC522_Stop+0x804>
}
90002228:	b004      	add	sp, #16
9000222a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		Error_Handler();
9000222e:	f003 f8f5 	bl	9000541c <Error_Handler>
90002232:	e418      	b.n	90001a66 <__MFRC522_Stop+0x36>
	__MFRC522_NSS_Low()
90002234:	2200      	movs	r2, #0
90002236:	2108      	movs	r1, #8
90002238:	4847      	ldr	r0, [pc, #284]	; (90002358 <__MFRC522_Stop+0x928>)
9000223a:	f008 fbbf 	bl	9000a9bc <HAL_GPIO_WritePin>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
9000223e:	230a      	movs	r3, #10
	uint8_t txArr[]= {send};
90002240:	228c      	movs	r2, #140	; 0x8c
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90002242:	a902      	add	r1, sp, #8
90002244:	9300      	str	r3, [sp, #0]
90002246:	2301      	movs	r3, #1
	uint8_t txArr[]= {send};
90002248:	f88d 2008 	strb.w	r2, [sp, #8]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
9000224c:	f10d 020b 	add.w	r2, sp, #11
90002250:	4842      	ldr	r0, [pc, #264]	; (9000235c <__MFRC522_Stop+0x92c>)
90002252:	f00d f81b 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(Convert_Read_Reg(reg_addr), &rcv, sizeof(rcv)) != HAL_OK) {
90002256:	2800      	cmp	r0, #0
90002258:	f040 8137 	bne.w	900024ca <__MFRC522_Stop+0xa9a>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
9000225c:	230a      	movs	r3, #10
	uint8_t txArr[]= {send};
9000225e:	2200      	movs	r2, #0
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90002260:	a902      	add	r1, sp, #8
90002262:	483e      	ldr	r0, [pc, #248]	; (9000235c <__MFRC522_Stop+0x92c>)
90002264:	9300      	str	r3, [sp, #0]
90002266:	2301      	movs	r3, #1
	uint8_t txArr[]= {send};
90002268:	f88d 2008 	strb.w	r2, [sp, #8]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
9000226c:	f10d 020b 	add.w	r2, sp, #11
90002270:	f00d f80c 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(DUMMY, &rcv, sizeof(rcv)) != HAL_OK) {
90002274:	2800      	cmp	r0, #0
90002276:	f040 8125 	bne.w	900024c4 <__MFRC522_Stop+0xa94>
	__MFRC522_NSS_High()
9000227a:	2201      	movs	r2, #1
9000227c:	2108      	movs	r1, #8
9000227e:	4836      	ldr	r0, [pc, #216]	; (90002358 <__MFRC522_Stop+0x928>)
90002280:	f008 fb9c 	bl	9000a9bc <HAL_GPIO_WritePin>
	return rcv;
90002284:	f89d 200b 	ldrb.w	r2, [sp, #11]
		if (!(__MFRC522_Read(REG_ERROR) & 0x1B)) {
90002288:	f012 021b 	ands.w	r2, r2, #27
9000228c:	d1cc      	bne.n	90002228 <__MFRC522_Stop+0x7f8>
	__MFRC522_NSS_Low()
9000228e:	2108      	movs	r1, #8
90002290:	4831      	ldr	r0, [pc, #196]	; (90002358 <__MFRC522_Stop+0x928>)
90002292:	f008 fb93 	bl	9000a9bc <HAL_GPIO_WritePin>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90002296:	230a      	movs	r3, #10
	uint8_t txArr[]= {send};
90002298:	2294      	movs	r2, #148	; 0x94
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
9000229a:	a902      	add	r1, sp, #8
9000229c:	9300      	str	r3, [sp, #0]
9000229e:	2301      	movs	r3, #1
	uint8_t txArr[]= {send};
900022a0:	f88d 2008 	strb.w	r2, [sp, #8]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
900022a4:	f10d 020b 	add.w	r2, sp, #11
900022a8:	482c      	ldr	r0, [pc, #176]	; (9000235c <__MFRC522_Stop+0x92c>)
900022aa:	f00c ffef 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(Convert_Read_Reg(reg_addr), &rcv, sizeof(rcv)) != HAL_OK) {
900022ae:	2800      	cmp	r0, #0
900022b0:	f040 8117 	bne.w	900024e2 <__MFRC522_Stop+0xab2>
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
900022b4:	230a      	movs	r3, #10
	uint8_t txArr[]= {send};
900022b6:	2200      	movs	r2, #0
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
900022b8:	a902      	add	r1, sp, #8
900022ba:	4828      	ldr	r0, [pc, #160]	; (9000235c <__MFRC522_Stop+0x92c>)
900022bc:	9300      	str	r3, [sp, #0]
900022be:	2301      	movs	r3, #1
	uint8_t txArr[]= {send};
900022c0:	f88d 2008 	strb.w	r2, [sp, #8]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
900022c4:	f10d 020b 	add.w	r2, sp, #11
900022c8:	f00c ffe0 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(DUMMY, &rcv, sizeof(rcv)) != HAL_OK) {
900022cc:	2800      	cmp	r0, #0
900022ce:	f040 8102 	bne.w	900024d6 <__MFRC522_Stop+0xaa6>
	__MFRC522_NSS_High()
900022d2:	2201      	movs	r2, #1
900022d4:	2108      	movs	r1, #8
900022d6:	4820      	ldr	r0, [pc, #128]	; (90002358 <__MFRC522_Stop+0x928>)
900022d8:	f008 fb70 	bl	9000a9bc <HAL_GPIO_WritePin>
	__MFRC522_NSS_Low()
900022dc:	2200      	movs	r2, #0
900022de:	2108      	movs	r1, #8
900022e0:	481d      	ldr	r0, [pc, #116]	; (90002358 <__MFRC522_Stop+0x928>)
	return rcv;
900022e2:	f89d 800b 	ldrb.w	r8, [sp, #11]
	__MFRC522_NSS_Low()
900022e6:	f008 fb69 	bl	9000a9bc <HAL_GPIO_WritePin>
	uint8_t txArr[]= {send};
900022ea:	2398      	movs	r3, #152	; 0x98
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
900022ec:	f10d 020b 	add.w	r2, sp, #11
900022f0:	a902      	add	r1, sp, #8
900022f2:	481a      	ldr	r0, [pc, #104]	; (9000235c <__MFRC522_Stop+0x92c>)
	uint8_t txArr[]= {send};
900022f4:	f88d 3008 	strb.w	r3, [sp, #8]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
900022f8:	230a      	movs	r3, #10
900022fa:	9300      	str	r3, [sp, #0]
900022fc:	2301      	movs	r3, #1
900022fe:	f00c ffc5 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(Convert_Read_Reg(reg_addr), &rcv, sizeof(rcv)) != HAL_OK) {
90002302:	2800      	cmp	r0, #0
90002304:	f040 80e4 	bne.w	900024d0 <__MFRC522_Stop+0xaa0>
	uint8_t txArr[]= {send};
90002308:	2300      	movs	r3, #0
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
9000230a:	f10d 020b 	add.w	r2, sp, #11
9000230e:	a902      	add	r1, sp, #8
90002310:	4812      	ldr	r0, [pc, #72]	; (9000235c <__MFRC522_Stop+0x92c>)
	uint8_t txArr[]= {send};
90002312:	f88d 3008 	strb.w	r3, [sp, #8]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90002316:	230a      	movs	r3, #10
90002318:	9300      	str	r3, [sp, #0]
9000231a:	2301      	movs	r3, #1
9000231c:	f00c ffb6 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(DUMMY, &rcv, sizeof(rcv)) != HAL_OK) {
90002320:	2800      	cmp	r0, #0
90002322:	f040 80db 	bne.w	900024dc <__MFRC522_Stop+0xaac>
	__MFRC522_NSS_High()
90002326:	2201      	movs	r2, #1
90002328:	2108      	movs	r1, #8
9000232a:	480b      	ldr	r0, [pc, #44]	; (90002358 <__MFRC522_Stop+0x928>)
9000232c:	1c7c      	adds	r4, r7, #1
9000232e:	f008 fb45 	bl	9000a9bc <HAL_GPIO_WritePin>
				for (wait = 0; wait < value; wait++) {
90002332:	f1b8 0f10 	cmp.w	r8, #16
	__MFRC522_NSS_Low()
90002336:	f04f 0900 	mov.w	r9, #0
9000233a:	4e07      	ldr	r6, [pc, #28]	; (90002358 <__MFRC522_Stop+0x928>)
				for (wait = 0; wait < value; wait++) {
9000233c:	bf28      	it	cs
9000233e:	f04f 0810 	movcs.w	r8, #16
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90002342:	4d06      	ldr	r5, [pc, #24]	; (9000235c <__MFRC522_Stop+0x92c>)
				for (wait = 0; wait < value; wait++) {
90002344:	f1b8 0f01 	cmp.w	r8, #1
90002348:	bf38      	it	cc
9000234a:	f04f 0801 	movcc.w	r8, #1
9000234e:	f108 38ff 	add.w	r8, r8, #4294967295
90002352:	fa14 f888 	uxtah	r8, r4, r8
90002356:	e01e      	b.n	90002396 <__MFRC522_Stop+0x966>
90002358:	58021000 	.word	0x58021000
9000235c:	24009490 	.word	0x24009490
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90002360:	230a      	movs	r3, #10
90002362:	f10d 020b 	add.w	r2, sp, #11
90002366:	a902      	add	r1, sp, #8
90002368:	4628      	mov	r0, r5
9000236a:	9300      	str	r3, [sp, #0]
9000236c:	2301      	movs	r3, #1
	uint8_t txArr[]= {send};
9000236e:	f88d 9008 	strb.w	r9, [sp, #8]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
90002372:	f00c ff8b 	bl	9000f28c <HAL_SPI_TransmitReceive>
	__MFRC522_NSS_High()
90002376:	2201      	movs	r2, #1
	if (__SPI_Write_Receive(DUMMY, &rcv, sizeof(rcv)) != HAL_OK) {
90002378:	2800      	cmp	r0, #0
9000237a:	f040 8094 	bne.w	900024a6 <__MFRC522_Stop+0xa76>
	__MFRC522_NSS_High()
9000237e:	2108      	movs	r1, #8
90002380:	4630      	mov	r0, r6
90002382:	f008 fb1b 	bl	9000a9bc <HAL_GPIO_WritePin>
	return rcv;
90002386:	f89d 300b 	ldrb.w	r3, [sp, #11]
				for (wait = 0; wait < value; wait++) {
9000238a:	45a0      	cmp	r8, r4
					output[wait] = __MFRC522_Read(REG_FIFO_DATA);
9000238c:	703b      	strb	r3, [r7, #0]
9000238e:	4627      	mov	r7, r4
				for (wait = 0; wait < value; wait++) {
90002390:	f43f af4a 	beq.w	90002228 <__MFRC522_Stop+0x7f8>
90002394:	3401      	adds	r4, #1
	__MFRC522_NSS_Low()
90002396:	4630      	mov	r0, r6
90002398:	2200      	movs	r2, #0
9000239a:	2108      	movs	r1, #8
9000239c:	f008 fb0e 	bl	9000a9bc <HAL_GPIO_WritePin>
	uint8_t txArr[]= {send};
900023a0:	2392      	movs	r3, #146	; 0x92
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
900023a2:	f10d 020b 	add.w	r2, sp, #11
900023a6:	a902      	add	r1, sp, #8
	uint8_t txArr[]= {send};
900023a8:	f88d 3008 	strb.w	r3, [sp, #8]
	return HAL_SPI_TransmitReceive(&hspi2, txArr, receive, size, 10);
900023ac:	230a      	movs	r3, #10
900023ae:	4628      	mov	r0, r5
900023b0:	9300      	str	r3, [sp, #0]
900023b2:	2301      	movs	r3, #1
900023b4:	f00c ff6a 	bl	9000f28c <HAL_SPI_TransmitReceive>
	if (__SPI_Write_Receive(Convert_Read_Reg(reg_addr), &rcv, sizeof(rcv)) != HAL_OK) {
900023b8:	2800      	cmp	r0, #0
900023ba:	d0d1      	beq.n	90002360 <__MFRC522_Stop+0x930>
		Error_Handler();
900023bc:	f003 f82e 	bl	9000541c <Error_Handler>
900023c0:	e7ce      	b.n	90002360 <__MFRC522_Stop+0x930>
		Error_Handler();
900023c2:	f003 f82b 	bl	9000541c <Error_Handler>
900023c6:	e729      	b.n	9000221c <__MFRC522_Stop+0x7ec>
		Error_Handler();
900023c8:	f003 f828 	bl	9000541c <Error_Handler>
900023cc:	e718      	b.n	90002200 <__MFRC522_Stop+0x7d0>
		Error_Handler();
900023ce:	f003 f825 	bl	9000541c <Error_Handler>
900023d2:	e6f8      	b.n	900021c6 <__MFRC522_Stop+0x796>
		Error_Handler();
900023d4:	f003 f822 	bl	9000541c <Error_Handler>
900023d8:	e6e6      	b.n	900021a8 <__MFRC522_Stop+0x778>
		Error_Handler();
900023da:	f003 f81f 	bl	9000541c <Error_Handler>
900023de:	e67d      	b.n	900020dc <__MFRC522_Stop+0x6ac>
		Error_Handler();
900023e0:	f003 f81c 	bl	9000541c <Error_Handler>
900023e4:	e66c      	b.n	900020c0 <__MFRC522_Stop+0x690>
		Error_Handler();
900023e6:	f003 f819 	bl	9000541c <Error_Handler>
900023ea:	e64c      	b.n	90002086 <__MFRC522_Stop+0x656>
		Error_Handler();
900023ec:	f003 f816 	bl	9000541c <Error_Handler>
900023f0:	e63a      	b.n	90002068 <__MFRC522_Stop+0x638>
		Error_Handler();
900023f2:	f003 f813 	bl	9000541c <Error_Handler>
900023f6:	e61e      	b.n	90002036 <__MFRC522_Stop+0x606>
		Error_Handler();
900023f8:	f003 f810 	bl	9000541c <Error_Handler>
900023fc:	e606      	b.n	9000200c <__MFRC522_Stop+0x5dc>
		Error_Handler();
900023fe:	f003 f80d 	bl	9000541c <Error_Handler>
90002402:	e5b6      	b.n	90001f72 <__MFRC522_Stop+0x542>
		Error_Handler();
90002404:	f003 f80a 	bl	9000541c <Error_Handler>
90002408:	e5a4      	b.n	90001f54 <__MFRC522_Stop+0x524>
		Error_Handler();
9000240a:	f003 f807 	bl	9000541c <Error_Handler>
9000240e:	e588      	b.n	90001f22 <__MFRC522_Stop+0x4f2>
		Error_Handler();
90002410:	f003 f804 	bl	9000541c <Error_Handler>
90002414:	e577      	b.n	90001f06 <__MFRC522_Stop+0x4d6>
		Error_Handler();
90002416:	f003 f801 	bl	9000541c <Error_Handler>
9000241a:	e557      	b.n	90001ecc <__MFRC522_Stop+0x49c>
		Error_Handler();
9000241c:	f002 fffe 	bl	9000541c <Error_Handler>
90002420:	e545      	b.n	90001eae <__MFRC522_Stop+0x47e>
		Error_Handler();
90002422:	f002 fffb 	bl	9000541c <Error_Handler>
90002426:	e529      	b.n	90001e7c <__MFRC522_Stop+0x44c>
		Error_Handler();
90002428:	f002 fff8 	bl	9000541c <Error_Handler>
9000242c:	e518      	b.n	90001e60 <__MFRC522_Stop+0x430>
		Error_Handler();
9000242e:	f002 fff5 	bl	9000541c <Error_Handler>
90002432:	e4f8      	b.n	90001e26 <__MFRC522_Stop+0x3f6>
		Error_Handler();
90002434:	f002 fff2 	bl	9000541c <Error_Handler>
90002438:	e4e6      	b.n	90001e08 <__MFRC522_Stop+0x3d8>
		Error_Handler();
9000243a:	f002 ffef 	bl	9000541c <Error_Handler>
9000243e:	e4ca      	b.n	90001dd6 <__MFRC522_Stop+0x3a6>
		Error_Handler();
90002440:	f002 ffec 	bl	9000541c <Error_Handler>
90002444:	e4b8      	b.n	90001db8 <__MFRC522_Stop+0x388>
		Error_Handler();
90002446:	f002 ffe9 	bl	9000541c <Error_Handler>
9000244a:	e498      	b.n	90001d7e <__MFRC522_Stop+0x34e>
		Error_Handler();
9000244c:	f002 ffe6 	bl	9000541c <Error_Handler>
90002450:	e486      	b.n	90001d60 <__MFRC522_Stop+0x330>
		Error_Handler();
90002452:	f002 ffe3 	bl	9000541c <Error_Handler>
90002456:	e466      	b.n	90001d26 <__MFRC522_Stop+0x2f6>
		Error_Handler();
90002458:	f002 ffe0 	bl	9000541c <Error_Handler>
9000245c:	e454      	b.n	90001d08 <__MFRC522_Stop+0x2d8>
		Error_Handler();
9000245e:	f002 ffdd 	bl	9000541c <Error_Handler>
90002462:	f7ff bbe8 	b.w	90001c36 <__MFRC522_Stop+0x206>
		Error_Handler();
90002466:	f002 ffd9 	bl	9000541c <Error_Handler>
9000246a:	f7ff bbd5 	b.w	90001c18 <__MFRC522_Stop+0x1e8>
		Error_Handler();
9000246e:	f002 ffd5 	bl	9000541c <Error_Handler>
90002472:	f7ff bb84 	b.w	90001b7e <__MFRC522_Stop+0x14e>
		Error_Handler();
90002476:	f002 ffd1 	bl	9000541c <Error_Handler>
9000247a:	f7ff bb72 	b.w	90001b62 <__MFRC522_Stop+0x132>
		Error_Handler();
9000247e:	f002 ffcd 	bl	9000541c <Error_Handler>
90002482:	f7ff bb51 	b.w	90001b28 <__MFRC522_Stop+0xf8>
		Error_Handler();
90002486:	f002 ffc9 	bl	9000541c <Error_Handler>
9000248a:	f7ff bb3e 	b.w	90001b0a <__MFRC522_Stop+0xda>
		Error_Handler();
9000248e:	f002 ffc5 	bl	9000541c <Error_Handler>
90002492:	f7ff bb21 	b.w	90001ad8 <__MFRC522_Stop+0xa8>
		Error_Handler();
90002496:	f002 ffc1 	bl	9000541c <Error_Handler>
9000249a:	f7ff bb0f 	b.w	90001abc <__MFRC522_Stop+0x8c>
		Error_Handler();
9000249e:	f002 ffbd 	bl	9000541c <Error_Handler>
900024a2:	f7ff baef 	b.w	90001a84 <__MFRC522_Stop+0x54>
900024a6:	f002 ffb9 	bl	9000541c <Error_Handler>
	__MFRC522_NSS_High()
900024aa:	2201      	movs	r2, #1
900024ac:	2108      	movs	r1, #8
900024ae:	4630      	mov	r0, r6
900024b0:	f008 fa84 	bl	9000a9bc <HAL_GPIO_WritePin>
	return rcv;
900024b4:	f89d 300b 	ldrb.w	r3, [sp, #11]
				for (wait = 0; wait < value; wait++) {
900024b8:	4544      	cmp	r4, r8
					output[wait] = __MFRC522_Read(REG_FIFO_DATA);
900024ba:	703b      	strb	r3, [r7, #0]
900024bc:	4627      	mov	r7, r4
				for (wait = 0; wait < value; wait++) {
900024be:	f47f af69 	bne.w	90002394 <__MFRC522_Stop+0x964>
900024c2:	e6b1      	b.n	90002228 <__MFRC522_Stop+0x7f8>
		Error_Handler();
900024c4:	f002 ffaa 	bl	9000541c <Error_Handler>
900024c8:	e6d7      	b.n	9000227a <__MFRC522_Stop+0x84a>
		Error_Handler();
900024ca:	f002 ffa7 	bl	9000541c <Error_Handler>
900024ce:	e6c5      	b.n	9000225c <__MFRC522_Stop+0x82c>
900024d0:	f002 ffa4 	bl	9000541c <Error_Handler>
900024d4:	e718      	b.n	90002308 <__MFRC522_Stop+0x8d8>
		Error_Handler();
900024d6:	f002 ffa1 	bl	9000541c <Error_Handler>
900024da:	e6fa      	b.n	900022d2 <__MFRC522_Stop+0x8a2>
900024dc:	f002 ff9e 	bl	9000541c <Error_Handler>
900024e0:	e721      	b.n	90002326 <__MFRC522_Stop+0x8f6>
		Error_Handler();
900024e2:	f002 ff9b 	bl	9000541c <Error_Handler>
900024e6:	e6e5      	b.n	900022b4 <__MFRC522_Stop+0x884>

900024e8 <MFRC522_Auth>:
enum MFRC522_Status MFRC522_Auth(uint8_t *myID) {
900024e8:	b538      	push	{r3, r4, r5, lr}
900024ea:	4605      	mov	r5, r0
	if ((status = __MFRC522_Req(CMD_PICC_REQIDL, myID)) == MFRC522_OK) {
900024ec:	2026      	movs	r0, #38	; 0x26
900024ee:	4629      	mov	r1, r5
900024f0:	f7fe fb44 	bl	90000b7c <__MFRC522_Req>
900024f4:	b120      	cbz	r0, 90002500 <MFRC522_Auth+0x18>
900024f6:	4604      	mov	r4, r0
	__MFRC522_Stop();
900024f8:	f7ff fa9a 	bl	90001a30 <__MFRC522_Stop>
}
900024fc:	4620      	mov	r0, r4
900024fe:	bd38      	pop	{r3, r4, r5, pc}
		status = __MFRC522_Col(myID);
90002500:	4628      	mov	r0, r5
90002502:	f7fe fee3 	bl	900012cc <__MFRC522_Col>
90002506:	4604      	mov	r4, r0
	__MFRC522_Stop();
90002508:	f7ff fa92 	bl	90001a30 <__MFRC522_Stop>
}
9000250c:	4620      	mov	r0, r4
9000250e:	bd38      	pop	{r3, r4, r5, pc}

90002510 <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
90002510:	4770      	bx	lr
90002512:	bf00      	nop

90002514 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
90002514:	b508      	push	{r3, lr}
    // Calling forward to touchgfx_init in C++ domain
    touchgfx_components_init();
90002516:	f001 ff87 	bl	90004428 <touchgfx_components_init>
    touchgfx_init();
}
9000251a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    touchgfx_init();
9000251e:	f001 bf07 	b.w	90004330 <touchgfx_init>
90002522:	bf00      	nop

90002524 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void* argument)
{
    // Calling forward to touchgfx_taskEntry in C++ domain
    touchgfx_taskEntry();
90002524:	f001 bf82 	b.w	9000442c <touchgfx_taskEntry>

90002528 <_ZN8touchgfx18MCUInstrumentation13getCCConsumedEv>:
     *
     * @return clock cycles.
     */
    virtual uint32_t getCCConsumed()
    {
        return cc_consumed;
90002528:	6840      	ldr	r0, [r0, #4]
    }
9000252a:	4770      	bx	lr

9000252c <_ZN8touchgfx18MCUInstrumentation13setCCConsumedEm>:
     *
     * @param  val number of clock cycles.
     */
    virtual void setCCConsumed(uint32_t val)
    {
        cc_consumed = val;
9000252c:	6041      	str	r1, [r0, #4]
    }
9000252e:	4770      	bx	lr

90002530 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>:
    //                                    Embedded Trace Macrocell (ETM)
    //                                    Trace Port Interface Unit (TPIU).
    //                                    This enables control of power usage unless tracing is required. The application can enable this, for ITM use, or use by a debugger.

    // Enable Debug Exception and Monitor Control Register
    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
90002530:	f04f 20e0 	mov.w	r0, #3758153728	; 0xe000e000
    // Enable Lock Access Register
    *((volatile unsigned int*)0xE0001FB0) |= 0xC5ACCE55;
90002534:	4b08      	ldr	r3, [pc, #32]	; (90002558 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x28>)
90002536:	4a09      	ldr	r2, [pc, #36]	; (9000255c <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x2c>)
    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
90002538:	f8d0 1dfc 	ldr.w	r1, [r0, #3580]	; 0xdfc
9000253c:	f041 7180 	orr.w	r1, r1, #16777216	; 0x1000000
90002540:	f8c0 1dfc 	str.w	r1, [r0, #3580]	; 0xdfc
    *((volatile unsigned int*)0xE0001FB0) |= 0xC5ACCE55;
90002544:	f8d3 1fb0 	ldr.w	r1, [r3, #4016]	; 0xfb0
90002548:	430a      	orrs	r2, r1
9000254a:	f8c3 2fb0 	str.w	r2, [r3, #4016]	; 0xfb0
    // Enable Data Watchpoint and Trace Control Register
    *((volatile unsigned int*)0xE0001000) |= 1;
9000254e:	681a      	ldr	r2, [r3, #0]
90002550:	f042 0201 	orr.w	r2, r2, #1
90002554:	601a      	str	r2, [r3, #0]
}
90002556:	4770      	bx	lr
90002558:	e0001000 	.word	0xe0001000
9000255c:	c5acce55 	.word	0xc5acce55

90002560 <_ZN8touchgfx25CortexMMCUInstrumentation12getElapsedUSEjjj>:

//Board specific clockfrequency
unsigned int CortexMMCUInstrumentation::getElapsedUS(unsigned int start, unsigned int now, unsigned int clockfrequency)
{
    return ((now - start) + (clockfrequency / 2)) / clockfrequency;
90002560:	1a51      	subs	r1, r2, r1
90002562:	eb01 0153 	add.w	r1, r1, r3, lsr #1
}
90002566:	fbb1 f0f3 	udiv	r0, r1, r3
9000256a:	4770      	bx	lr

9000256c <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv>:

unsigned int CortexMMCUInstrumentation::getCPUCycles()
{
    return *((volatile unsigned int*)0xE0001004);
9000256c:	4b01      	ldr	r3, [pc, #4]	; (90002574 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv+0x8>)
9000256e:	6858      	ldr	r0, [r3, #4]
}
90002570:	4770      	bx	lr
90002572:	bf00      	nop
90002574:	e0001000 	.word	0xe0001000

90002578 <_ZN8touchgfx25CortexMMCUInstrumentationD1Ev>:
 *        Interface for instrumenting Cortex-M processors to measure MCU load via measured CPU
 *        cycles.
 *
 * @sa MCUInstrumentation
 */
class CortexMMCUInstrumentation : public MCUInstrumentation
90002578:	4770      	bx	lr
9000257a:	bf00      	nop

9000257c <_ZN8touchgfx25CortexMMCUInstrumentationD0Ev>:
9000257c:	b510      	push	{r4, lr}
9000257e:	4604      	mov	r4, r0
90002580:	210c      	movs	r1, #12
90002582:	f027 fb4c 	bl	90029c1e <_ZdlPvj>
90002586:	4620      	mov	r0, r4
90002588:	bd10      	pop	{r4, pc}
9000258a:	bf00      	nop

9000258c <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb>:

void CortexMMCUInstrumentation::setMCUActive(bool active)
{
    if (active) //idle task sched out
    {
        uint32_t cc_temp = getCPUCycles() - cc_in;
9000258c:	6803      	ldr	r3, [r0, #0]
9000258e:	4a0c      	ldr	r2, [pc, #48]	; (900025c0 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x34>)
90002590:	691b      	ldr	r3, [r3, #16]
{
90002592:	b510      	push	{r4, lr}
90002594:	4604      	mov	r4, r0
    if (active) //idle task sched out
90002596:	b149      	cbz	r1, 900025ac <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x20>
        uint32_t cc_temp = getCPUCycles() - cc_in;
90002598:	4293      	cmp	r3, r2
9000259a:	d10d      	bne.n	900025b8 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x2c>
    return *((volatile unsigned int*)0xE0001004);
9000259c:	4b09      	ldr	r3, [pc, #36]	; (900025c4 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x38>)
9000259e:	6858      	ldr	r0, [r3, #4]
        uint32_t cc_temp = getCPUCycles() - cc_in;
900025a0:	68a2      	ldr	r2, [r4, #8]
        cc_consumed += cc_temp;
900025a2:	6863      	ldr	r3, [r4, #4]
900025a4:	1a9b      	subs	r3, r3, r2
900025a6:	4403      	add	r3, r0
900025a8:	6063      	str	r3, [r4, #4]
    }
    else //idle task sched in
    {
        cc_in = getCPUCycles();
    }
}
900025aa:	bd10      	pop	{r4, pc}
        cc_in = getCPUCycles();
900025ac:	4293      	cmp	r3, r2
900025ae:	d105      	bne.n	900025bc <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x30>
    return *((volatile unsigned int*)0xE0001004);
900025b0:	4b04      	ldr	r3, [pc, #16]	; (900025c4 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x38>)
900025b2:	6858      	ldr	r0, [r3, #4]
        cc_in = getCPUCycles();
900025b4:	60a0      	str	r0, [r4, #8]
}
900025b6:	bd10      	pop	{r4, pc}
        uint32_t cc_temp = getCPUCycles() - cc_in;
900025b8:	4798      	blx	r3
900025ba:	e7f1      	b.n	900025a0 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x14>
        cc_in = getCPUCycles();
900025bc:	4798      	blx	r3
900025be:	e7f9      	b.n	900025b4 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x28>
900025c0:	9000256d 	.word	0x9000256d
900025c4:	e0001000 	.word	0xe0001000

900025c8 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
900025c8:	4770      	bx	lr
900025ca:	bf00      	nop
900025cc:	0000      	movs	r0, r0
	...

900025d0 <_ZN20STM32TouchController4initEv>:

#include <STM32TouchController.hpp>
#include "stm32h750b_discovery_ts.h"

void STM32TouchController::init()
{
900025d0:	b500      	push	{lr}
900025d2:	b085      	sub	sp, #20
     *
     */
    TS_Init_t hTS;
    hTS.Orientation = TS_SWAP_XY;
    hTS.Accuracy = 0;
    hTS.Width = 480;
900025d4:	2208      	movs	r2, #8
900025d6:	2300      	movs	r3, #0
    hTS.Height = 272;
    BSP_TS_Init(0, &hTS);
900025d8:	2000      	movs	r0, #0
900025da:	4669      	mov	r1, sp
    hTS.Width = 480;
900025dc:	ed9f 7b06 	vldr	d7, [pc, #24]	; 900025f8 <_ZN20STM32TouchController4initEv+0x28>
900025e0:	e9cd 2302 	strd	r2, r3, [sp, #8]
900025e4:	ed8d 7b00 	vstr	d7, [sp]
    BSP_TS_Init(0, &hTS);
900025e8:	f007 fbee 	bl	90009dc8 <BSP_TS_Init>
}
900025ec:	b005      	add	sp, #20
900025ee:	f85d fb04 	ldr.w	pc, [sp], #4
900025f2:	bf00      	nop
900025f4:	f3af 8000 	nop.w
900025f8:	000001e0 	.word	0x000001e0
900025fc:	00000110 	.word	0x00000110

90002600 <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
90002600:	b530      	push	{r4, r5, lr}
90002602:	b085      	sub	sp, #20
     *
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */
    TS_State_t  TS_State = { 0 };
90002604:	2000      	movs	r0, #0
{
90002606:	460d      	mov	r5, r1
90002608:	4614      	mov	r4, r2
    BSP_TS_GetState(0, &TS_State);
9000260a:	a901      	add	r1, sp, #4
    TS_State_t  TS_State = { 0 };
9000260c:	9001      	str	r0, [sp, #4]
9000260e:	e9cd 0002 	strd	r0, r0, [sp, #8]
    BSP_TS_GetState(0, &TS_State);
90002612:	f007 fc67 	bl	90009ee4 <BSP_TS_GetState>
    if (TS_State.TouchDetected)
90002616:	9801      	ldr	r0, [sp, #4]
90002618:	b120      	cbz	r0, 90002624 <_ZN20STM32TouchController11sampleTouchERlS0_+0x24>
    {
        x = TS_State.TouchX;
        y = TS_State.TouchY;
        return true;
9000261a:	2001      	movs	r0, #1
        y = TS_State.TouchY;
9000261c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
        x = TS_State.TouchX;
90002620:	602a      	str	r2, [r5, #0]
        y = TS_State.TouchY;
90002622:	6023      	str	r3, [r4, #0]
    }

    return false;
}
90002624:	b005      	add	sp, #20
90002626:	bd30      	pop	{r4, r5, pc}

90002628 <_ZN20STM32TouchControllerD0Ev>:
90002628:	b510      	push	{r4, lr}
9000262a:	4604      	mov	r4, r0
9000262c:	2104      	movs	r1, #4
9000262e:	f027 faf6 	bl	90029c1e <_ZdlPvj>
90002632:	4620      	mov	r0, r4
90002634:	bd10      	pop	{r4, pc}
90002636:	bf00      	nop

90002638 <_ZN8touchgfx4GPIO4initEv>:
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
90002638:	2108      	movs	r1, #8
9000263a:	4810      	ldr	r0, [pc, #64]	; (9000267c <_ZN8touchgfx4GPIO4initEv+0x44>)
{
9000263c:	b508      	push	{r3, lr}
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
9000263e:	f008 f9b7 	bl	9000a9b0 <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
90002642:	2801      	cmp	r0, #1
90002644:	d101      	bne.n	9000264a <_ZN8touchgfx4GPIO4initEv+0x12>
            GPIO_InvertedLevels[id] = 1;
90002646:	4b0e      	ldr	r3, [pc, #56]	; (90002680 <_ZN8touchgfx4GPIO4initEv+0x48>)
90002648:	6018      	str	r0, [r3, #0]
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
9000264a:	2180      	movs	r1, #128	; 0x80
9000264c:	480d      	ldr	r0, [pc, #52]	; (90002684 <_ZN8touchgfx4GPIO4initEv+0x4c>)
9000264e:	f008 f9af 	bl	9000a9b0 <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
90002652:	2801      	cmp	r0, #1
90002654:	d101      	bne.n	9000265a <_ZN8touchgfx4GPIO4initEv+0x22>
            GPIO_InvertedLevels[id] = 1;
90002656:	4b0a      	ldr	r3, [pc, #40]	; (90002680 <_ZN8touchgfx4GPIO4initEv+0x48>)
90002658:	6058      	str	r0, [r3, #4]
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
9000265a:	2140      	movs	r1, #64	; 0x40
9000265c:	4809      	ldr	r0, [pc, #36]	; (90002684 <_ZN8touchgfx4GPIO4initEv+0x4c>)
9000265e:	f008 f9a7 	bl	9000a9b0 <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
90002662:	2801      	cmp	r0, #1
90002664:	d101      	bne.n	9000266a <_ZN8touchgfx4GPIO4initEv+0x32>
            GPIO_InvertedLevels[id] = 1;
90002666:	4b06      	ldr	r3, [pc, #24]	; (90002680 <_ZN8touchgfx4GPIO4initEv+0x48>)
90002668:	6098      	str	r0, [r3, #8]
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
9000266a:	2140      	movs	r1, #64	; 0x40
9000266c:	4806      	ldr	r0, [pc, #24]	; (90002688 <_ZN8touchgfx4GPIO4initEv+0x50>)
9000266e:	f008 f99f 	bl	9000a9b0 <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
90002672:	2801      	cmp	r0, #1
90002674:	d101      	bne.n	9000267a <_ZN8touchgfx4GPIO4initEv+0x42>
            GPIO_InvertedLevels[id] = 1;
90002676:	4b02      	ldr	r3, [pc, #8]	; (90002680 <_ZN8touchgfx4GPIO4initEv+0x48>)
90002678:	60d8      	str	r0, [r3, #12]
}
9000267a:	bd08      	pop	{r3, pc}
9000267c:	58021800 	.word	0x58021800
90002680:	24000174 	.word	0x24000174
90002684:	58020400 	.word	0x58020400
90002688:	58020000 	.word	0x58020000

9000268c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
    switch (id)
9000268c:	2803      	cmp	r0, #3
9000268e:	d827      	bhi.n	900026e0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x54>
90002690:	e8df f000 	tbb	[pc, r0]
90002694:	020b141d 	.word	0x020b141d
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
90002698:	4b12      	ldr	r3, [pc, #72]	; (900026e4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
9000269a:	2140      	movs	r1, #64	; 0x40
9000269c:	4812      	ldr	r0, [pc, #72]	; (900026e8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x5c>)
9000269e:	68da      	ldr	r2, [r3, #12]
900026a0:	fab2 f282 	clz	r2, r2
900026a4:	0952      	lsrs	r2, r2, #5
900026a6:	f008 b989 	b.w	9000a9bc <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
900026aa:	4b0e      	ldr	r3, [pc, #56]	; (900026e4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
900026ac:	2140      	movs	r1, #64	; 0x40
900026ae:	480f      	ldr	r0, [pc, #60]	; (900026ec <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x60>)
900026b0:	689a      	ldr	r2, [r3, #8]
900026b2:	fab2 f282 	clz	r2, r2
900026b6:	0952      	lsrs	r2, r2, #5
900026b8:	f008 b980 	b.w	9000a9bc <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
900026bc:	4b09      	ldr	r3, [pc, #36]	; (900026e4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
900026be:	2180      	movs	r1, #128	; 0x80
900026c0:	480a      	ldr	r0, [pc, #40]	; (900026ec <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x60>)
900026c2:	685a      	ldr	r2, [r3, #4]
900026c4:	fab2 f282 	clz	r2, r2
900026c8:	0952      	lsrs	r2, r2, #5
900026ca:	f008 b977 	b.w	9000a9bc <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
900026ce:	4b05      	ldr	r3, [pc, #20]	; (900026e4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
900026d0:	2108      	movs	r1, #8
900026d2:	4807      	ldr	r0, [pc, #28]	; (900026f0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x64>)
900026d4:	681a      	ldr	r2, [r3, #0]
900026d6:	fab2 f282 	clz	r2, r2
900026da:	0952      	lsrs	r2, r2, #5
900026dc:	f008 b96e 	b.w	9000a9bc <HAL_GPIO_WritePin>
}
900026e0:	4770      	bx	lr
900026e2:	bf00      	nop
900026e4:	24000174 	.word	0x24000174
900026e8:	58020000 	.word	0x58020000
900026ec:	58020400 	.word	0x58020400
900026f0:	58021800 	.word	0x58021800

900026f4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
    switch (id)
900026f4:	2803      	cmp	r0, #3
900026f6:	d827      	bhi.n	90002748 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x54>
900026f8:	e8df f000 	tbb	[pc, r0]
900026fc:	020b141d 	.word	0x020b141d
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
90002700:	4b12      	ldr	r3, [pc, #72]	; (9000274c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
90002702:	2140      	movs	r1, #64	; 0x40
90002704:	4812      	ldr	r0, [pc, #72]	; (90002750 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x5c>)
90002706:	68da      	ldr	r2, [r3, #12]
90002708:	3a00      	subs	r2, #0
9000270a:	bf18      	it	ne
9000270c:	2201      	movne	r2, #1
9000270e:	f008 b955 	b.w	9000a9bc <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
90002712:	4b0e      	ldr	r3, [pc, #56]	; (9000274c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
90002714:	2140      	movs	r1, #64	; 0x40
90002716:	480f      	ldr	r0, [pc, #60]	; (90002754 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x60>)
90002718:	689a      	ldr	r2, [r3, #8]
9000271a:	3a00      	subs	r2, #0
9000271c:	bf18      	it	ne
9000271e:	2201      	movne	r2, #1
90002720:	f008 b94c 	b.w	9000a9bc <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
90002724:	4b09      	ldr	r3, [pc, #36]	; (9000274c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
90002726:	2180      	movs	r1, #128	; 0x80
90002728:	480a      	ldr	r0, [pc, #40]	; (90002754 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x60>)
9000272a:	685a      	ldr	r2, [r3, #4]
9000272c:	3a00      	subs	r2, #0
9000272e:	bf18      	it	ne
90002730:	2201      	movne	r2, #1
90002732:	f008 b943 	b.w	9000a9bc <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
90002736:	4b05      	ldr	r3, [pc, #20]	; (9000274c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
90002738:	2108      	movs	r1, #8
9000273a:	4807      	ldr	r0, [pc, #28]	; (90002758 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x64>)
9000273c:	681a      	ldr	r2, [r3, #0]
9000273e:	3a00      	subs	r2, #0
90002740:	bf18      	it	ne
90002742:	2201      	movne	r2, #1
90002744:	f008 b93a 	b.w	9000a9bc <HAL_GPIO_WritePin>
}
90002748:	4770      	bx	lr
9000274a:	bf00      	nop
9000274c:	24000174 	.word	0x24000174
90002750:	58020000 	.word	0x58020000
90002754:	58020400 	.word	0x58020400
90002758:	58021800 	.word	0x58021800

9000275c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
    switch (id)
9000275c:	2803      	cmp	r0, #3
9000275e:	d813      	bhi.n	90002788 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x2c>
90002760:	e8df f000 	tbb	[pc, r0]
90002764:	02060a0e 	.word	0x02060a0e
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
90002768:	2140      	movs	r1, #64	; 0x40
9000276a:	4808      	ldr	r0, [pc, #32]	; (9000278c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x30>)
9000276c:	f008 b92a 	b.w	9000a9c4 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
90002770:	2140      	movs	r1, #64	; 0x40
90002772:	4807      	ldr	r0, [pc, #28]	; (90002790 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x34>)
90002774:	f008 b926 	b.w	9000a9c4 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
90002778:	2180      	movs	r1, #128	; 0x80
9000277a:	4805      	ldr	r0, [pc, #20]	; (90002790 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x34>)
9000277c:	f008 b922 	b.w	9000a9c4 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
90002780:	2108      	movs	r1, #8
90002782:	4804      	ldr	r0, [pc, #16]	; (90002794 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x38>)
90002784:	f008 b91e 	b.w	9000a9c4 <HAL_GPIO_TogglePin>
}
90002788:	4770      	bx	lr
9000278a:	bf00      	nop
9000278c:	58020000 	.word	0x58020000
90002790:	58020400 	.word	0x58020400
90002794:	58021800 	.word	0x58021800

90002798 <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType()
    {
        return DMA_TYPE_GENERIC;
    }
90002798:	2000      	movs	r0, #0
9000279a:	4770      	bx	lr

9000279c <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
9000279c:	2301      	movs	r3, #1
        requestedOrientation = orientation;
9000279e:	f880 1078 	strb.w	r1, [r0, #120]	; 0x78
        displayOrientationChangeRequested = true;
900027a2:	f880 3079 	strb.w	r3, [r0, #121]	; 0x79
    }
900027a6:	4770      	bx	lr

900027a8 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
900027a8:	2000      	movs	r0, #0
900027aa:	4770      	bx	lr

900027ac <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
900027ac:	1e0a      	subs	r2, r1, #0
900027ae:	4b03      	ldr	r3, [pc, #12]	; (900027bc <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
900027b0:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
900027b2:	bf18      	it	ne
900027b4:	2201      	movne	r2, #1
900027b6:	701a      	strb	r2, [r3, #0]
    }
900027b8:	4770      	bx	lr
900027ba:	bf00      	nop
900027bc:	240236cb 	.word	0x240236cb

900027c0 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
900027c0:	2000      	movs	r0, #0
900027c2:	4770      	bx	lr

900027c4 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
900027c4:	6b83      	ldr	r3, [r0, #56]	; 0x38
    virtual void taskDelay(uint16_t ms)
900027c6:	4608      	mov	r0, r1
        if (taskDelayFunc)
900027c8:	b103      	cbz	r3, 900027cc <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
900027ca:	4718      	bx	r3
        }
    }
900027cc:	4770      	bx	lr
900027ce:	bf00      	nop

900027d0 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
900027d0:	f64f 70ff 	movw	r0, #65535	; 0xffff
900027d4:	4770      	bx	lr
900027d6:	bf00      	nop

900027d8 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
900027d8:	4770      	bx	lr
900027da:	bf00      	nop

900027dc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
900027dc:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
900027de:	4b09      	ldr	r3, [pc, #36]	; (90002804 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
900027e0:	881b      	ldrh	r3, [r3, #0]
900027e2:	428b      	cmp	r3, r1
900027e4:	d808      	bhi.n	900027f8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1c>
900027e6:	4b08      	ldr	r3, [pc, #32]	; (90002808 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
900027e8:	881b      	ldrh	r3, [r3, #0]
900027ea:	4293      	cmp	r3, r2
900027ec:	d804      	bhi.n	900027f8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1c>
        FRAME_BUFFER_WIDTH = width;
900027ee:	4807      	ldr	r0, [pc, #28]	; (9000280c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
        FRAME_BUFFER_HEIGHT = height;
900027f0:	4b07      	ldr	r3, [pc, #28]	; (90002810 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
        FRAME_BUFFER_WIDTH = width;
900027f2:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = height;
900027f4:	801a      	strh	r2, [r3, #0]
    }
900027f6:	bd08      	pop	{r3, pc}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
900027f8:	4b06      	ldr	r3, [pc, #24]	; (90002814 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
900027fa:	219e      	movs	r1, #158	; 0x9e
900027fc:	4a06      	ldr	r2, [pc, #24]	; (90002818 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
900027fe:	4807      	ldr	r0, [pc, #28]	; (9000281c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
90002800:	f027 fa3c 	bl	90029c7c <__assert_func>
90002804:	240236c0 	.word	0x240236c0
90002808:	240236c2 	.word	0x240236c2
9000280c:	240236c6 	.word	0x240236c6
90002810:	240236c8 	.word	0x240236c8
90002814:	9002b1bc 	.word	0x9002b1bc
90002818:	9002b220 	.word	0x9002b220
9000281c:	9002b264 	.word	0x9002b264

90002820 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
90002820:	b510      	push	{r4, lr}
90002822:	4604      	mov	r4, r0
        swapFrameBuffers();
90002824:	f012 f84c 	bl	900148c0 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
90002828:	6823      	ldr	r3, [r4, #0]
9000282a:	4620      	mov	r0, r4
9000282c:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
90002830:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
90002834:	4718      	bx	r3
90002836:	bf00      	nop

90002838 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
90002838:	f001 bef0 	b.w	9000461c <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

9000283c <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
9000283c:	f001 bef4 	b.w	90004628 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

90002840 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
 * @param rect The area of the screen that has been drawn, expressed in absolute coordinates.
 *
 * @see flushFrameBuffer().
 */
void TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
90002840:	b510      	push	{r4, lr}
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
90002842:	f001 ffdd 	bl	90004800 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>
  #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
    uint32_t ccsidr;
    uint32_t sets;
    uint32_t ways;

    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
90002846:	4812      	ldr	r0, [pc, #72]	; (90002890 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x50>)
90002848:	2300      	movs	r3, #0
9000284a:	f8c0 3084 	str.w	r3, [r0, #132]	; 0x84
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
9000284e:	f3bf 8f4f 	dsb	sy
    __DSB();

    ccsidr = SCB->CCSIDR;
90002852:	f8d0 3080 	ldr.w	r3, [r0, #128]	; 0x80
                                            /* clean & invalidate D-Cache */
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
    do {
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
      do {
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90002856:	f643 74e0 	movw	r4, #16352	; 0x3fe0
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
9000285a:	f3c3 3c4e 	ubfx	ip, r3, #13, #15
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
9000285e:	f3c3 0ec9 	ubfx	lr, r3, #3, #10
90002862:	ea4f 1c4c 	mov.w	ip, ip, lsl #5
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90002866:	ea0c 0104 	and.w	r1, ip, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
9000286a:	4673      	mov	r3, lr
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
9000286c:	ea41 7283 	orr.w	r2, r1, r3, lsl #30
                       ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
        #if defined ( __CC_ARM )
          __schedule_barrier();
        #endif
      } while (ways-- != 0U);
90002870:	3b01      	subs	r3, #1
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90002872:	f8c0 2274 	str.w	r2, [r0, #628]	; 0x274
      } while (ways-- != 0U);
90002876:	1c5a      	adds	r2, r3, #1
90002878:	d1f8      	bne.n	9000286c <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x2c>
    } while(sets-- != 0U);
9000287a:	f1ac 0c20 	sub.w	ip, ip, #32
9000287e:	f11c 0f20 	cmn.w	ip, #32
90002882:	d1f0      	bne.n	90002866 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x26>
90002884:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90002888:	f3bf 8f6f 	isb	sy
    // If the framebuffer is placed in Write Through cached memory (e.g. SRAM) then we need
    // to flush the Dcache to make sure framebuffer is correct in RAM. That's done
    // using SCB_CleanInvalidateDCache().

    SCB_CleanInvalidateDCache();
}
9000288c:	bd10      	pop	{r4, pc}
9000288e:	bf00      	nop
90002890:	e000ed00 	.word	0xe000ed00

90002894 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
90002894:	f001 be9e 	b.w	900045d4 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

90002898 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
90002898:	f002 b8b0 	b.w	900049fc <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

9000289c <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
9000289c:	f002 b89a 	b.w	900049d4 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

900028a0 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
900028a0:	f001 bea2 	b.w	900045e8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

900028a4 <_ZN20TouchGFXGeneratedHAL17unlockFrameBufferEv>:
     * @brief Unlocks the framebuffer.
     *
     * This specialization is marks DMA2D as un-reserved by the framwork.
     * @see HAL::unlockFrameBuffer
     */
    virtual void unlockFrameBuffer()
900028a4:	b510      	push	{r4, lr}
900028a6:	4604      	mov	r4, r0
    {
        HAL::unlockFrameBuffer();
900028a8:	f011 fb86 	bl	90013fb8 <_ZN8touchgfx3HAL17unlockFrameBufferEv>
        dma.start();
900028ac:	6860      	ldr	r0, [r4, #4]
900028ae:	6803      	ldr	r3, [r0, #0]
    }
900028b0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        dma.start();
900028b4:	691b      	ldr	r3, [r3, #16]
900028b6:	4718      	bx	r3

900028b8 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
        HAL::flushFrameBuffer();
900028b8:	f011 ba54 	b.w	90013d64 <_ZN8touchgfx3HAL16flushFrameBufferEv>

900028bc <_ZN11TouchGFXHALD0Ev>:
900028bc:	b510      	push	{r4, lr}
900028be:	4604      	mov	r4, r0
900028c0:	2188      	movs	r1, #136	; 0x88
900028c2:	f027 f9ac 	bl	90029c1e <_ZdlPvj>
900028c6:	4620      	mov	r0, r4
900028c8:	bd10      	pop	{r4, pc}
900028ca:	bf00      	nop

900028cc <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
900028cc:	f890 307a 	ldrb.w	r3, [r0, #122]	; 0x7a
900028d0:	b11b      	cbz	r3, 900028da <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
900028d2:	6840      	ldr	r0, [r0, #4]
900028d4:	6803      	ldr	r3, [r0, #0]
900028d6:	681b      	ldr	r3, [r3, #0]
900028d8:	4718      	bx	r3
    }
900028da:	4618      	mov	r0, r3
900028dc:	4770      	bx	lr
900028de:	bf00      	nop

900028e0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void noTouch();

    /** Perform the actual display orientation change. */
    virtual void performDisplayOrientationChange()
    {
        if (requestedOrientation != nativeDisplayOrientation)
900028e0:	f890 2078 	ldrb.w	r2, [r0, #120]	; 0x78
900028e4:	f890 3034 	ldrb.w	r3, [r0, #52]	; 0x34
900028e8:	429a      	cmp	r2, r3
        {
            if (DISPLAY_ROTATION == rotate0)
900028ea:	4b0b      	ldr	r3, [pc, #44]	; (90002918 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x38>)
900028ec:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
900028ee:	d00b      	beq.n	90002908 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x28>
            if (DISPLAY_ROTATION == rotate0)
900028f0:	b94a      	cbnz	r2, 90002906 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            {
                const uint16_t tmp = DISPLAY_HEIGHT;
900028f2:	4a0a      	ldr	r2, [pc, #40]	; (9000291c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
                DISPLAY_WIDTH = tmp;
                DISPLAY_ROTATION = rotate90;
900028f4:	f04f 0c01 	mov.w	ip, #1
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
900028f8:	4909      	ldr	r1, [pc, #36]	; (90002920 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            }
        }
        else if (DISPLAY_ROTATION != rotate0)
        {
            const uint16_t tmp = DISPLAY_HEIGHT;
900028fa:	8810      	ldrh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
            DISPLAY_WIDTH = tmp;
            DISPLAY_ROTATION = rotate0;
900028fc:	f883 c000 	strb.w	ip, [r3]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
90002900:	880b      	ldrh	r3, [r1, #0]
            DISPLAY_WIDTH = tmp;
90002902:	8008      	strh	r0, [r1, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
90002904:	8013      	strh	r3, [r2, #0]
        }
    }
90002906:	4770      	bx	lr
        else if (DISPLAY_ROTATION != rotate0)
90002908:	2a00      	cmp	r2, #0
9000290a:	d0fc      	beq.n	90002906 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            const uint16_t tmp = DISPLAY_HEIGHT;
9000290c:	4a03      	ldr	r2, [pc, #12]	; (9000291c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
            DISPLAY_ROTATION = rotate0;
9000290e:	f04f 0c00 	mov.w	ip, #0
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
90002912:	4903      	ldr	r1, [pc, #12]	; (90002920 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
90002914:	e7f1      	b.n	900028fa <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x1a>
90002916:	bf00      	nop
90002918:	240236c4 	.word	0x240236c4
9000291c:	240236c2 	.word	0x240236c2
90002920:	240236c0 	.word	0x240236c0

90002924 <_ZN8touchgfx3HAL10getDMATypeEv>:
        return dma.getDMAType();
90002924:	6840      	ldr	r0, [r0, #4]
90002926:	4a04      	ldr	r2, [pc, #16]	; (90002938 <_ZN8touchgfx3HAL10getDMATypeEv+0x14>)
90002928:	6803      	ldr	r3, [r0, #0]
9000292a:	699b      	ldr	r3, [r3, #24]
9000292c:	4293      	cmp	r3, r2
9000292e:	d101      	bne.n	90002934 <_ZN8touchgfx3HAL10getDMATypeEv+0x10>
    }
90002930:	2000      	movs	r0, #0
90002932:	4770      	bx	lr
        return dma.getDMAType();
90002934:	4718      	bx	r3
90002936:	bf00      	nop
90002938:	90002799 	.word	0x90002799

9000293c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
        assert(frameBuffer != 0 && "A framebuffer address must be set");
9000293c:	b1a9      	cbz	r1, 9000296a <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x2e>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
9000293e:	6402      	str	r2, [r0, #64]	; 0x40
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
90002940:	3a00      	subs	r2, #0
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
90002942:	63c1      	str	r1, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
90002944:	bf18      	it	ne
90002946:	2201      	movne	r2, #1
90002948:	490c      	ldr	r1, [pc, #48]	; (9000297c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x40>)
9000294a:	700a      	strb	r2, [r1, #0]
        setAnimationStorage(animationStorage);
9000294c:	6802      	ldr	r2, [r0, #0]
9000294e:	490c      	ldr	r1, [pc, #48]	; (90002980 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x44>)
90002950:	f8d2 208c 	ldr.w	r2, [r2, #140]	; 0x8c
90002954:	428a      	cmp	r2, r1
90002956:	d106      	bne.n	90002966 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x2a>
        USE_ANIMATION_STORAGE = animationStorage != 0;
90002958:	1e19      	subs	r1, r3, #0
9000295a:	4a0a      	ldr	r2, [pc, #40]	; (90002984 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x48>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
9000295c:	6443      	str	r3, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
9000295e:	bf18      	it	ne
90002960:	2101      	movne	r1, #1
90002962:	7011      	strb	r1, [r2, #0]
90002964:	4770      	bx	lr
        setAnimationStorage(animationStorage);
90002966:	4619      	mov	r1, r3
90002968:	4710      	bx	r2
        assert(frameBuffer != 0 && "A framebuffer address must be set");
9000296a:	4b07      	ldr	r3, [pc, #28]	; (90002988 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x4c>)
9000296c:	f240 21d2 	movw	r1, #722	; 0x2d2
90002970:	4a06      	ldr	r2, [pc, #24]	; (9000298c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x50>)
90002972:	4807      	ldr	r0, [pc, #28]	; (90002990 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x54>)
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
90002974:	b510      	push	{r4, lr}
        assert(frameBuffer != 0 && "A framebuffer address must be set");
90002976:	f027 f981 	bl	90029c7c <__assert_func>
9000297a:	bf00      	nop
9000297c:	240236ca 	.word	0x240236ca
90002980:	900027ad 	.word	0x900027ad
90002984:	240236cb 	.word	0x240236cb
90002988:	9002b2ac 	.word	0x9002b2ac
9000298c:	9002b2e4 	.word	0x9002b2e4
90002990:	9002b264 	.word	0x9002b264

90002994 <_ZN11TouchGFXHAL9taskEntryEv>:
{
90002994:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
90002996:	6803      	ldr	r3, [r0, #0]
{
90002998:	4604      	mov	r4, r0
9000299a:	4d17      	ldr	r5, [pc, #92]	; (900029f8 <_ZN11TouchGFXHAL9taskEntryEv+0x64>)
    enableLCDControllerInterrupt();
9000299c:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
900029a0:	4798      	blx	r3
    enableInterrupts();
900029a2:	6823      	ldr	r3, [r4, #0]
900029a4:	4620      	mov	r0, r4
900029a6:	6f9b      	ldr	r3, [r3, #120]	; 0x78
900029a8:	4798      	blx	r3
    OSWrappers::waitForVSync();
900029aa:	f001 f8e3 	bl	90003b74 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
900029ae:	6823      	ldr	r3, [r4, #0]
900029b0:	4620      	mov	r0, r4
900029b2:	6f1b      	ldr	r3, [r3, #112]	; 0x70
900029b4:	4798      	blx	r3
    HAL_GPIO_WritePin(LCD_RESET_GPIO_Port, LCD_RESET_Pin, GPIO_PIN_SET);
900029b6:	2201      	movs	r2, #1
900029b8:	2104      	movs	r1, #4
900029ba:	4810      	ldr	r0, [pc, #64]	; (900029fc <_ZN11TouchGFXHAL9taskEntryEv+0x68>)
900029bc:	f007 fffe 	bl	9000a9bc <HAL_GPIO_WritePin>
    HAL_GPIO_WritePin(LCD_DE_GPIO_Port, LCD_DE_Pin, GPIO_PIN_SET);
900029c0:	2201      	movs	r2, #1
900029c2:	2180      	movs	r1, #128	; 0x80
900029c4:	480e      	ldr	r0, [pc, #56]	; (90002a00 <_ZN11TouchGFXHAL9taskEntryEv+0x6c>)
900029c6:	f007 fff9 	bl	9000a9bc <HAL_GPIO_WritePin>
    HAL_GPIO_WritePin(LCD_BL_CTRL_GPIO_Port, LCD_BL_CTRL_Pin, GPIO_PIN_SET);
900029ca:	2201      	movs	r2, #1
900029cc:	480d      	ldr	r0, [pc, #52]	; (90002a04 <_ZN11TouchGFXHAL9taskEntryEv+0x70>)
900029ce:	4611      	mov	r1, r2
900029d0:	f007 fff4 	bl	9000a9bc <HAL_GPIO_WritePin>
        OSWrappers::waitForVSync();
900029d4:	f001 f8ce 	bl	90003b74 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
900029d8:	6823      	ldr	r3, [r4, #0]
        swapFrameBuffers();
900029da:	4620      	mov	r0, r4
900029dc:	6f1b      	ldr	r3, [r3, #112]	; 0x70
900029de:	42ab      	cmp	r3, r5
900029e0:	d107      	bne.n	900029f2 <_ZN11TouchGFXHAL9taskEntryEv+0x5e>
900029e2:	f011 ff6d 	bl	900148c0 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
900029e6:	6823      	ldr	r3, [r4, #0]
900029e8:	4620      	mov	r0, r4
900029ea:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
900029ee:	4798      	blx	r3
    }
900029f0:	e7f0      	b.n	900029d4 <_ZN11TouchGFXHAL9taskEntryEv+0x40>
900029f2:	4798      	blx	r3
900029f4:	e7ee      	b.n	900029d4 <_ZN11TouchGFXHAL9taskEntryEv+0x40>
900029f6:	bf00      	nop
900029f8:	90002821 	.word	0x90002821
900029fc:	58020000 	.word	0x58020000
90002a00:	58020c00 	.word	0x58020c00
90002a04:	58022800 	.word	0x58022800

90002a08 <_ZN11TouchGFXHAL10initializeEv>:
{
90002a08:	b538      	push	{r3, r4, r5, lr}
90002a0a:	4604      	mov	r4, r0
    TouchGFXGeneratedHAL::initialize();
90002a0c:	f002 f800 	bl	90004a10 <_ZN20TouchGFXGeneratedHAL10initializeEv>
    setFrameBufferStartAddresses((void*)frameBuffer0, (void*)frameBuffer1, (void*)animationBuffer);
90002a10:	4817      	ldr	r0, [pc, #92]	; (90002a70 <_ZN11TouchGFXHAL10initializeEv+0x68>)
90002a12:	6823      	ldr	r3, [r4, #0]
90002a14:	6be1      	ldr	r1, [r4, #60]	; 0x3c
90002a16:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
90002a1a:	6c22      	ldr	r2, [r4, #64]	; 0x40
90002a1c:	4285      	cmp	r5, r0
90002a1e:	d119      	bne.n	90002a54 <_ZN11TouchGFXHAL10initializeEv+0x4c>
        assert(frameBuffer != 0 && "A framebuffer address must be set");
90002a20:	b1f9      	cbz	r1, 90002a62 <_ZN11TouchGFXHAL10initializeEv+0x5a>
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
90002a22:	3a00      	subs	r2, #0
90002a24:	4913      	ldr	r1, [pc, #76]	; (90002a74 <_ZN11TouchGFXHAL10initializeEv+0x6c>)
        setAnimationStorage(animationStorage);
90002a26:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
90002a2a:	bf18      	it	ne
90002a2c:	2201      	movne	r2, #1
90002a2e:	4812      	ldr	r0, [pc, #72]	; (90002a78 <_ZN11TouchGFXHAL10initializeEv+0x70>)
90002a30:	428b      	cmp	r3, r1
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90002a32:	4912      	ldr	r1, [pc, #72]	; (90002a7c <_ZN11TouchGFXHAL10initializeEv+0x74>)
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
90002a34:	7002      	strb	r2, [r0, #0]
        setAnimationStorage(animationStorage);
90002a36:	d111      	bne.n	90002a5c <_ZN11TouchGFXHAL10initializeEv+0x54>
        USE_ANIMATION_STORAGE = animationStorage != 0;
90002a38:	4b11      	ldr	r3, [pc, #68]	; (90002a80 <_ZN11TouchGFXHAL10initializeEv+0x78>)
90002a3a:	2201      	movs	r2, #1
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90002a3c:	6461      	str	r1, [r4, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
90002a3e:	701a      	strb	r2, [r3, #0]
    instrumentation.init();
90002a40:	f104 057c 	add.w	r5, r4, #124	; 0x7c
90002a44:	4628      	mov	r0, r5
90002a46:	f7ff fd73 	bl	90002530 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>
        updateMCULoad = enabled;
90002a4a:	2301      	movs	r3, #1
        mcuInstrumentation = mcuInstr;
90002a4c:	6125      	str	r5, [r4, #16]
        updateMCULoad = enabled;
90002a4e:	f884 3070 	strb.w	r3, [r4, #112]	; 0x70
}
90002a52:	bd38      	pop	{r3, r4, r5, pc}
    setFrameBufferStartAddresses((void*)frameBuffer0, (void*)frameBuffer1, (void*)animationBuffer);
90002a54:	4b09      	ldr	r3, [pc, #36]	; (90002a7c <_ZN11TouchGFXHAL10initializeEv+0x74>)
90002a56:	4620      	mov	r0, r4
90002a58:	47a8      	blx	r5
90002a5a:	e7f1      	b.n	90002a40 <_ZN11TouchGFXHAL10initializeEv+0x38>
        setAnimationStorage(animationStorage);
90002a5c:	4620      	mov	r0, r4
90002a5e:	4798      	blx	r3
90002a60:	e7ee      	b.n	90002a40 <_ZN11TouchGFXHAL10initializeEv+0x38>
        assert(frameBuffer != 0 && "A framebuffer address must be set");
90002a62:	4b08      	ldr	r3, [pc, #32]	; (90002a84 <_ZN11TouchGFXHAL10initializeEv+0x7c>)
90002a64:	f240 21d2 	movw	r1, #722	; 0x2d2
90002a68:	4a07      	ldr	r2, [pc, #28]	; (90002a88 <_ZN11TouchGFXHAL10initializeEv+0x80>)
90002a6a:	4808      	ldr	r0, [pc, #32]	; (90002a8c <_ZN11TouchGFXHAL10initializeEv+0x84>)
90002a6c:	f027 f906 	bl	90029c7c <__assert_func>
90002a70:	9000293d 	.word	0x9000293d
90002a74:	900027ad 	.word	0x900027ad
90002a78:	240236ca 	.word	0x240236ca
90002a7c:	d0000000 	.word	0xd0000000
90002a80:	240236cb 	.word	0x240236cb
90002a84:	9002b2ac 	.word	0x9002b2ac
90002a88:	9002b2e4 	.word	0x9002b2e4
90002a8c:	9002b264 	.word	0x9002b264

90002a90 <IdleTaskHook>:
}

extern "C"
{
    portBASE_TYPE IdleTaskHook(void* p)
    {
90002a90:	b508      	push	{r3, lr}
        return instance;
90002a92:	4b07      	ldr	r3, [pc, #28]	; (90002ab0 <IdleTaskHook+0x20>)
        if ((int)p) //idle task sched out
90002a94:	b128      	cbz	r0, 90002aa2 <IdleTaskHook+0x12>
        {
            touchgfx::HAL::getInstance()->setMCUActive(true);
90002a96:	6818      	ldr	r0, [r3, #0]
90002a98:	2101      	movs	r1, #1
90002a9a:	f011 ff2b 	bl	900148f4 <_ZN8touchgfx3HAL12setMCUActiveEb>
        else //idle task sched in
        {
            touchgfx::HAL::getInstance()->setMCUActive(false);
        }
        return pdTRUE;
    }
90002a9e:	2001      	movs	r0, #1
90002aa0:	bd08      	pop	{r3, pc}
            touchgfx::HAL::getInstance()->setMCUActive(false);
90002aa2:	4601      	mov	r1, r0
90002aa4:	6818      	ldr	r0, [r3, #0]
90002aa6:	f011 ff25 	bl	900148f4 <_ZN8touchgfx3HAL12setMCUActiveEb>
    }
90002aaa:	2001      	movs	r0, #1
90002aac:	bd08      	pop	{r3, pc}
90002aae:	bf00      	nop
90002ab0:	240236cc 	.word	0x240236cc

90002ab4 <_ZNK20HardwareMJPEGDecoder21getCurrentFrameNumberEv>:
    virtual bool decodeThumbnail(uint32_t frameno, uint8_t* buffer, uint16_t width, uint16_t height);
    virtual void gotoFrame(uint32_t frameno);
    virtual uint32_t getCurrentFrameNumber() const
    {
        return frameNumber;
    }
90002ab4:	6940      	ldr	r0, [r0, #20]
90002ab6:	4770      	bx	lr

90002ab8 <_ZN20HardwareMJPEGDecoder12getLastErrorEv>:
    }

    virtual AVIErrors getLastError()
    {
        return lastError;
    }
90002ab8:	f890 0040 	ldrb.w	r0, [r0, #64]	; 0x40
90002abc:	4770      	bx	lr
90002abe:	bf00      	nop

90002ac0 <_ZN20HardwareMJPEGDecoder8hasVideoEv>:
    readVideoHeader();
}

bool HardwareMJPEGDecoder::hasVideo()
{
    return (reader != 0) || (movieData != 0);
90002ac0:	6b03      	ldr	r3, [r0, #48]	; 0x30
90002ac2:	b10b      	cbz	r3, 90002ac8 <_ZN20HardwareMJPEGDecoder8hasVideoEv+0x8>
90002ac4:	2001      	movs	r0, #1
}
90002ac6:	4770      	bx	lr
    return (reader != 0) || (movieData != 0);
90002ac8:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
90002aca:	3800      	subs	r0, #0
90002acc:	bf18      	it	ne
90002ace:	2001      	movne	r0, #1
90002ad0:	4770      	bx	lr
90002ad2:	bf00      	nop

90002ad4 <_ZN20HardwareMJPEGDecoder17getNumberOfFramesEv>:
}

uint32_t HardwareMJPEGDecoder::getNumberOfFrames()
{
    return videoInfo.number_of_frames;
}
90002ad4:	6880      	ldr	r0, [r0, #8]
90002ad6:	4770      	bx	lr

90002ad8 <_ZN20HardwareMJPEGDecoder14setRepeatVideoEb>:

void HardwareMJPEGDecoder::setRepeatVideo(bool repeat)
{

}
90002ad8:	4770      	bx	lr
90002ada:	bf00      	nop

90002adc <_ZN20HardwareMJPEGDecoder12getVideoInfoEPN8touchgfx16VideoInformationE>:

void HardwareMJPEGDecoder::getVideoInfo(touchgfx::VideoInformation* data)
{
    *data = videoInfo;
90002adc:	3004      	adds	r0, #4
{
90002ade:	468c      	mov	ip, r1
    *data = videoInfo;
90002ae0:	c80f      	ldmia	r0, {r0, r1, r2, r3}
90002ae2:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
}
90002ae6:	4770      	bx	lr

90002ae8 <_ZN20HardwareMJPEGDecoderD1Ev>:
class HardwareMJPEGDecoder : public MJPEGDecoder
90002ae8:	4770      	bx	lr
90002aea:	bf00      	nop

90002aec <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt>:
{
90002aec:	b508      	push	{r3, lr}
    assert(0);
90002aee:	4a03      	ldr	r2, [pc, #12]	; (90002afc <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x10>)
90002af0:	f240 11c5 	movw	r1, #453	; 0x1c5
90002af4:	4b02      	ldr	r3, [pc, #8]	; (90002b00 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x14>)
90002af6:	4803      	ldr	r0, [pc, #12]	; (90002b04 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x18>)
90002af8:	f027 f8c0 	bl	90029c7c <__assert_func>
90002afc:	9002b410 	.word	0x9002b410
90002b00:	9002b40c 	.word	0x9002b40c
90002b04:	9002b46c 	.word	0x9002b46c

90002b08 <_ZN20HardwareMJPEGDecoderD0Ev>:
90002b08:	b510      	push	{r4, lr}
90002b0a:	4604      	mov	r4, r0
90002b0c:	2148      	movs	r1, #72	; 0x48
90002b0e:	f027 f886 	bl	90029c1e <_ZdlPvj>
90002b12:	4620      	mov	r0, r4
90002b14:	bd10      	pop	{r4, pc}
90002b16:	bf00      	nop

90002b18 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0>:
void HardwareMJPEGDecoder::decodeMJPEGFrame(const uint8_t* const mjpgdata, const uint32_t length, uint8_t* outputBuffer, uint16_t bufferWidth, uint16_t bufferHeight, uint32_t bufferStride)
90002b18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
        JPEG_ConvertorParams.bytes_pr_pixel = 2;
90002b1c:	4d4a      	ldr	r5, [pc, #296]	; (90002c48 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x130>)
void HardwareMJPEGDecoder::decodeMJPEGFrame(const uint8_t* const mjpgdata, const uint32_t length, uint8_t* outputBuffer, uint16_t bufferWidth, uint16_t bufferHeight, uint32_t bufferStride)
90002b1e:	4683      	mov	fp, r0
90002b20:	461c      	mov	r4, r3
        JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
90002b22:	68c0      	ldr	r0, [r0, #12]
        JPEG_ConvertorParams.bytes_pr_pixel = 2;
90002b24:	2302      	movs	r3, #2
void HardwareMJPEGDecoder::decodeMJPEGFrame(const uint8_t* const mjpgdata, const uint32_t length, uint8_t* outputBuffer, uint16_t bufferWidth, uint16_t bufferHeight, uint32_t bufferStride)
90002b26:	b083      	sub	sp, #12
     * @retval None
     */
    uint32_t JPEG_Decode_DMA(JPEG_HandleTypeDef* hjpeg, uint8_t* input, uint32_t chunkSizeIn /* length */, uint8_t* output)
    {
        FrameBufferAddress = output;
        JPEG_output_is_paused = 0;
90002b28:	4f48      	ldr	r7, [pc, #288]	; (90002c4c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x134>)
        JPEG_ConvertorParams.bytes_pr_pixel = 2;
90002b2a:	612b      	str	r3, [r5, #16]
        if ((JPEG_ConvertorParams.WidthExtend % 16) != 0)
90002b2c:	0703      	lsls	r3, r0, #28
        JPEG_ConvertorParams.ScaledWidth = 480 * JPEG_ConvertorParams.bytes_pr_pixel;
90002b2e:	f44f 7370 	mov.w	r3, #960	; 0x3c0
        MCU_BlockIndex = 0;

        /* Init buffers */
        for (uint32_t i = 0; i < NB_OUTPUT_DATA_BUFFERS; ++i)
        {
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90002b32:	4e47      	ldr	r6, [pc, #284]	; (90002c50 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x138>)
            JPEG_ConvertorParams.WidthExtend += 16 - (JPEG_ConvertorParams.WidthExtend % 16);
90002b34:	bf18      	it	ne
90002b36:	f020 000f 	bicne.w	r0, r0, #15
        JPEG_OUT_Write_BufferIndex = 0;
90002b3a:	f8df a140 	ldr.w	sl, [pc, #320]	; 90002c7c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x164>
        JPEG_ConvertorParams.ScaledWidth = 480 * JPEG_ConvertorParams.bytes_pr_pixel;
90002b3e:	606b      	str	r3, [r5, #4]
            JPEG_ConvertorParams.WidthExtend += 16 - (JPEG_ConvertorParams.WidthExtend % 16);
90002b40:	bf18      	it	ne
90002b42:	3010      	addne	r0, #16
        JPEG_ConvertorParams.LastLineHeight = (videoInfo.frame_height % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
90002b44:	f8db 3010 	ldr.w	r3, [fp, #16]
        DMA2D_reference = dma;
90002b48:	f8df 8134 	ldr.w	r8, [pc, #308]	; 90002c80 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x168>
            JPEG_ConvertorParams.WidthExtend += 16 - (JPEG_ConvertorParams.WidthExtend % 16);
90002b4c:	6028      	str	r0, [r5, #0]
        JPEG_ConvertorParams.MCU_pr_line = JPEG_ConvertorParams.WidthExtend / MCU_WIDTH_PIXELS;
90002b4e:	0900      	lsrs	r0, r0, #4
        JPEG_ConvertorParams.LastLineHeight = (videoInfo.frame_height % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
90002b50:	f013 030f 	ands.w	r3, r3, #15
90002b54:	f8df 912c 	ldr.w	r9, [pc, #300]	; 90002c84 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x16c>
        JPEG_ConvertorParams.MCU_pr_line = JPEG_ConvertorParams.WidthExtend / MCU_WIDTH_PIXELS;
90002b58:	60e8      	str	r0, [r5, #12]
            Jpeg_OUT_BufferTab[i].DataBufferSize = 0;
            Jpeg_OUT_BufferTab[i].MCU_index = 0;
        }

        /* Do not return from this function until done with decoding all chunks. */
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90002b5a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
        JPEG_ConvertorParams.LastLineHeight = (videoInfo.frame_height % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
90002b5e:	bf18      	it	ne
90002b60:	f1c3 0310 	rsbne	r3, r3, #16
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90002b64:	01c0      	lsls	r0, r0, #7
        JPEG_ConvertorParams.LastLineHeight = (videoInfo.frame_height % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
90002b66:	60ab      	str	r3, [r5, #8]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90002b68:	9000      	str	r0, [sp, #0]
        JPEG_output_is_paused = 0;
90002b6a:	2000      	movs	r0, #0
        JPEG_OUT_Read_BufferIndex = 0;
90002b6c:	4b39      	ldr	r3, [pc, #228]	; (90002c54 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x13c>)
        FrameBufferAddress = output;
90002b6e:	4d3a      	ldr	r5, [pc, #232]	; (90002c58 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x140>)
        JPEG_output_is_paused = 0;
90002b70:	6038      	str	r0, [r7, #0]
        FrameBufferAddress = output;
90002b72:	602c      	str	r4, [r5, #0]
        JPEG_OUT_Read_BufferIndex = 0;
90002b74:	6018      	str	r0, [r3, #0]
        JPEG_InputImageIndex = 0;
90002b76:	4c39      	ldr	r4, [pc, #228]	; (90002c5c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x144>)
        MCU_BlockIndex = 0;
90002b78:	4b39      	ldr	r3, [pc, #228]	; (90002c60 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x148>)
        JPEG_OUT_Write_BufferIndex = 0;
90002b7a:	f8ca 0000 	str.w	r0, [sl]
        JPEG_InputImageIndex = 0;
90002b7e:	6020      	str	r0, [r4, #0]
        MCU_BlockIndex = 0;
90002b80:	6018      	str	r0, [r3, #0]
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90002b82:	7030      	strb	r0, [r6, #0]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90002b84:	f8da 3000 	ldr.w	r3, [sl]
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90002b88:	7430      	strb	r0, [r6, #16]
        JPEG_InputImageAddress = (uint32_t)input;
90002b8a:	4836      	ldr	r0, [pc, #216]	; (90002c64 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x14c>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90002b8c:	eb06 1303 	add.w	r3, r6, r3, lsl #4
90002b90:	4d35      	ldr	r5, [pc, #212]	; (90002c68 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x150>)
        JPEG_InputImageAddress = (uint32_t)input;
90002b92:	6001      	str	r1, [r0, #0]
        JPEG_InputImageSize_Bytes = chunkSizeIn;
90002b94:	4835      	ldr	r0, [pc, #212]	; (90002c6c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x154>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90002b96:	685b      	ldr	r3, [r3, #4]
        JPEG_InputImageSize_Bytes = chunkSizeIn;
90002b98:	6002      	str	r2, [r0, #0]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90002b9a:	f44f 4250 	mov.w	r2, #53248	; 0xd000
90002b9e:	4834      	ldr	r0, [pc, #208]	; (90002c70 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x158>)
90002ba0:	4c34      	ldr	r4, [pc, #208]	; (90002c74 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x15c>)
            Jpeg_OUT_BufferTab[i].DataBufferSize = 0;
90002ba2:	ed9f 7b27 	vldr	d7, [pc, #156]	; 90002c40 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x128>
90002ba6:	ed86 7b02 	vstr	d7, [r6, #8]
90002baa:	ed86 7b06 	vstr	d7, [r6, #24]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90002bae:	f009 f835 	bl	9000bc1c <HAL_JPEG_Decode_DMA>
        DMA2D_reference = dma;
90002bb2:	f8db 3044 	ldr.w	r3, [fp, #68]	; 0x44
90002bb6:	f8c8 3000 	str.w	r3, [r8]
 * @retval 1 : if JPEG processing has finished, 0 : if JPEG processing still ongoing
 */
uint32_t JPEG_OutputHandler(JPEG_HandleTypeDef* hjpeg)
{
    /* Decode frame complete */
    if (Jpeg_HWDecodingEnd && DMA2D_CopyBufferEnd)
90002bba:	682b      	ldr	r3, [r5, #0]
90002bbc:	b113      	cbz	r3, 90002bc4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xac>
90002bbe:	f8d9 3000 	ldr.w	r3, [r9]
90002bc2:	bb63      	cbnz	r3, 90002c1e <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x106>
    {
        return 1;
    }

    /* Try to start DMA2D video transfer if next buffer if full */
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90002bc4:	f8d8 0000 	ldr.w	r0, [r8]
90002bc8:	7a03      	ldrb	r3, [r0, #8]
90002bca:	b92b      	cbnz	r3, 90002bd8 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xc0>
90002bcc:	4b21      	ldr	r3, [pc, #132]	; (90002c54 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x13c>)
90002bce:	681b      	ldr	r3, [r3, #0]
90002bd0:	011b      	lsls	r3, r3, #4
90002bd2:	5cf3      	ldrb	r3, [r6, r3]
90002bd4:	2b01      	cmp	r3, #1
90002bd6:	d024      	beq.n	90002c22 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x10a>
    {
        DMA2D_reference->start();
    }

    /* Start JPEG IP if paused and next buffer is empty */
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90002bd8:	683b      	ldr	r3, [r7, #0]
90002bda:	2b01      	cmp	r3, #1
90002bdc:	d106      	bne.n	90002bec <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xd4>
90002bde:	f8da 3000 	ldr.w	r3, [sl]
90002be2:	011b      	lsls	r3, r3, #4
90002be4:	5cf3      	ldrb	r3, [r6, r3]
90002be6:	b90b      	cbnz	r3, 90002bec <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xd4>
90002be8:	682b      	ldr	r3, [r5, #0]
90002bea:	b313      	cbz	r3, 90002c32 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x11a>
    {
        JPEG_output_is_paused = 0;
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
    }

    return 2;
90002bec:	2302      	movs	r3, #2
            JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90002bee:	6023      	str	r3, [r4, #0]
            if (JpegProcessing_End == 2)
90002bf0:	6823      	ldr	r3, [r4, #0]
90002bf2:	2b02      	cmp	r3, #2
90002bf4:	d009      	beq.n	90002c0a <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xf2>
        } while (JpegProcessing_End != 1);
90002bf6:	6823      	ldr	r3, [r4, #0]
90002bf8:	2b01      	cmp	r3, #1
90002bfa:	d1de      	bne.n	90002bba <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xa2>
        Jpeg_HWDecodingEnd = 0;
90002bfc:	2300      	movs	r3, #0
90002bfe:	602b      	str	r3, [r5, #0]
        DMA2D_CopyBufferEnd = 0;
90002c00:	f8c9 3000 	str.w	r3, [r9]
}
90002c04:	b003      	add	sp, #12
90002c06:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
                SEM_WAIT(semDecodingDone);
90002c0a:	4b1b      	ldr	r3, [pc, #108]	; (90002c78 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x160>)
90002c0c:	f04f 31ff 	mov.w	r1, #4294967295
90002c10:	6818      	ldr	r0, [r3, #0]
90002c12:	f00d fedb 	bl	900109cc <osSemaphoreAcquire>
        } while (JpegProcessing_End != 1);
90002c16:	6823      	ldr	r3, [r4, #0]
90002c18:	2b01      	cmp	r3, #1
90002c1a:	d1ce      	bne.n	90002bba <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xa2>
90002c1c:	e7ee      	b.n	90002bfc <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xe4>
        return 1;
90002c1e:	2301      	movs	r3, #1
90002c20:	e7e5      	b.n	90002bee <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xd6>
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90002c22:	f8d9 3000 	ldr.w	r3, [r9]
90002c26:	2b00      	cmp	r3, #0
90002c28:	d1d6      	bne.n	90002bd8 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xc0>
        DMA2D_reference->start();
90002c2a:	6803      	ldr	r3, [r0, #0]
90002c2c:	691b      	ldr	r3, [r3, #16]
90002c2e:	4798      	blx	r3
90002c30:	e7d2      	b.n	90002bd8 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xc0>
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90002c32:	2102      	movs	r1, #2
90002c34:	480e      	ldr	r0, [pc, #56]	; (90002c70 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x158>)
        JPEG_output_is_paused = 0;
90002c36:	603b      	str	r3, [r7, #0]
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90002c38:	f009 f938 	bl	9000beac <HAL_JPEG_Resume>
90002c3c:	2302      	movs	r3, #2
90002c3e:	e7d6      	b.n	90002bee <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xd6>
	...
90002c48:	24005b90 	.word	0x24005b90
90002c4c:	24005bbc 	.word	0x24005bbc
90002c50:	24000008 	.word	0x24000008
90002c54:	24000188 	.word	0x24000188
90002c58:	24005bac 	.word	0x24005bac
90002c5c:	24005bb8 	.word	0x24005bb8
90002c60:	2400018c 	.word	0x2400018c
90002c64:	24005bc0 	.word	0x24005bc0
90002c68:	24005bb4 	.word	0x24005bb4
90002c6c:	24005bc4 	.word	0x24005bc4
90002c70:	24009284 	.word	0x24009284
90002c74:	24005bb0 	.word	0x24005bb0
90002c78:	24005bcc 	.word	0x24005bcc
90002c7c:	24005bc8 	.word	0x24005bc8
90002c80:	24005ba8 	.word	0x24005ba8
90002c84:	24000184 	.word	0x24000184

90002c88 <_ZN20HardwareMJPEGDecoder9gotoFrameEm>:
{
90002c88:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    if (frameNumber > getNumberOfFrames())
90002c8a:	6803      	ldr	r3, [r0, #0]
90002c8c:	2901      	cmp	r1, #1
90002c8e:	4e2f      	ldr	r6, [pc, #188]	; (90002d4c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xc4>)
{
90002c90:	4604      	mov	r4, r0
    if (frameNumber > getNumberOfFrames())
90002c92:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90002c94:	bf38      	it	cc
90002c96:	2101      	movcc	r1, #1
90002c98:	42b3      	cmp	r3, r6
90002c9a:	460d      	mov	r5, r1
90002c9c:	d142      	bne.n	90002d24 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x9c>
    return videoInfo.number_of_frames;
90002c9e:	6883      	ldr	r3, [r0, #8]
    if (frameNumber > getNumberOfFrames())
90002ca0:	4299      	cmp	r1, r3
90002ca2:	d82a      	bhi.n	90002cfa <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x72>
    uint32_t offset = indexOffset + 8 + (frameNumber - 1) * 16;
90002ca4:	1e6b      	subs	r3, r5, #1
90002ca6:	69e2      	ldr	r2, [r4, #28]
    if (reader != 0)
90002ca8:	6b20      	ldr	r0, [r4, #48]	; 0x30
    uint32_t offset = indexOffset + 8 + (frameNumber - 1) * 16;
90002caa:	eb02 1703 	add.w	r7, r2, r3, lsl #4
    if (reader != 0)
90002cae:	b350      	cbz	r0, 90002d06 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x7e>
        if (length > aviBufferLength)
90002cb0:	6ba3      	ldr	r3, [r4, #56]	; 0x38
90002cb2:	2b0f      	cmp	r3, #15
90002cb4:	d941      	bls.n	90002d3a <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xb2>
        reader->seek(offset);
90002cb6:	6803      	ldr	r3, [r0, #0]
    uint32_t offset = indexOffset + 8 + (frameNumber - 1) * 16;
90002cb8:	f107 0608 	add.w	r6, r7, #8
        reader->seek(offset);
90002cbc:	68db      	ldr	r3, [r3, #12]
90002cbe:	4631      	mov	r1, r6
90002cc0:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90002cc2:	6b20      	ldr	r0, [r4, #48]	; 0x30
90002cc4:	2210      	movs	r2, #16
90002cc6:	6b61      	ldr	r1, [r4, #52]	; 0x34
90002cc8:	6803      	ldr	r3, [r0, #0]
90002cca:	691b      	ldr	r3, [r3, #16]
90002ccc:	4798      	blx	r3
90002cce:	b1b0      	cbz	r0, 90002cfe <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x76>
    if (reader != 0)
90002cd0:	6b23      	ldr	r3, [r4, #48]	; 0x30
        aviBufferStartOffset = offset;
90002cd2:	63e6      	str	r6, [r4, #60]	; 0x3c
    if (reader != 0)
90002cd4:	b1bb      	cbz	r3, 90002d06 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x7e>
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90002cd6:	6b62      	ldr	r2, [r4, #52]	; 0x34
90002cd8:	7a93      	ldrb	r3, [r2, #10]
90002cda:	7a51      	ldrb	r1, [r2, #9]
90002cdc:	041b      	lsls	r3, r3, #16
90002cde:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
90002ce2:	7a11      	ldrb	r1, [r2, #8]
90002ce4:	7ad2      	ldrb	r2, [r2, #11]
90002ce6:	430b      	orrs	r3, r1
90002ce8:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
90002cec:	6a22      	ldr	r2, [r4, #32]
    this->frameNumber = frameNumber;
90002cee:	6165      	str	r5, [r4, #20]
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
90002cf0:	3a04      	subs	r2, #4
90002cf2:	441a      	add	r2, r3
90002cf4:	61a2      	str	r2, [r4, #24]
}
90002cf6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    return videoInfo.number_of_frames;
90002cf8:	68a3      	ldr	r3, [r4, #8]
{
90002cfa:	461d      	mov	r5, r3
90002cfc:	e7d2      	b.n	90002ca4 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x1c>
            lastError = AVI_ERROR_EOF_REACHED;
90002cfe:	230d      	movs	r3, #13
90002d00:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
90002d04:	e7e4      	b.n	90002cd0 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x48>
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
90002d06:	f107 0310 	add.w	r3, r7, #16
        volatile const uint8_t* const d = movieData + offset;
90002d0a:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
90002d0c:	18d1      	adds	r1, r2, r3
        val |= d[0];
90002d0e:	5cd2      	ldrb	r2, [r2, r3]
        val |= d[1] << 8;
90002d10:	7848      	ldrb	r0, [r1, #1]
        val |= d[2] << 16;
90002d12:	788b      	ldrb	r3, [r1, #2]
        val |= d[3] << 24;
90002d14:	78c9      	ldrb	r1, [r1, #3]
        val |= d[2] << 16;
90002d16:	041b      	lsls	r3, r3, #16
        val |= d[3] << 24;
90002d18:	ea42 6201 	orr.w	r2, r2, r1, lsl #24
90002d1c:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
90002d20:	4313      	orrs	r3, r2
        return val;
90002d22:	e7e3      	b.n	90002cec <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x64>
    if (frameNumber > getNumberOfFrames())
90002d24:	4798      	blx	r3
90002d26:	4285      	cmp	r5, r0
90002d28:	d9bc      	bls.n	90002ca4 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x1c>
        frameNumber = getNumberOfFrames();
90002d2a:	6823      	ldr	r3, [r4, #0]
90002d2c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90002d2e:	42b3      	cmp	r3, r6
90002d30:	d0e2      	beq.n	90002cf8 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x70>
90002d32:	4620      	mov	r0, r4
90002d34:	4798      	blx	r3
90002d36:	4605      	mov	r5, r0
90002d38:	e7b4      	b.n	90002ca4 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x1c>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90002d3a:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90002d3c:	4b04      	ldr	r3, [pc, #16]	; (90002d50 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xc8>)
90002d3e:	4a05      	ldr	r2, [pc, #20]	; (90002d54 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xcc>)
90002d40:	219f      	movs	r1, #159	; 0x9f
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90002d42:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
            assert(!"Buffer to small");
90002d46:	4804      	ldr	r0, [pc, #16]	; (90002d58 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xd0>)
90002d48:	f026 ff98 	bl	90029c7c <__assert_func>
90002d4c:	90002ad5 	.word	0x90002ad5
90002d50:	9002b4bc 	.word	0x9002b4bc
90002d54:	9002b4d0 	.word	0x9002b4d0
90002d58:	9002b46c 	.word	0x9002b46c
90002d5c:	00000000 	.word	0x00000000

90002d60 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm>:
{
90002d60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90002d64:	4604      	mov	r4, r0
    if (reader != 0)
90002d66:	6b00      	ldr	r0, [r0, #48]	; 0x30
{
90002d68:	b083      	sub	sp, #12
90002d6a:	4615      	mov	r5, r2
    readData(currentMovieOffset, 8);
90002d6c:	69a6      	ldr	r6, [r4, #24]
    if (reader != 0)
90002d6e:	2800      	cmp	r0, #0
90002d70:	f000 80ad 	beq.w	90002ece <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x16e>
        if (length > aviBufferLength)
90002d74:	6ba3      	ldr	r3, [r4, #56]	; 0x38
90002d76:	2b07      	cmp	r3, #7
90002d78:	f240 80b9 	bls.w	90002eee <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x18e>
        reader->seek(offset);
90002d7c:	6803      	ldr	r3, [r0, #0]
90002d7e:	4631      	mov	r1, r6
90002d80:	68db      	ldr	r3, [r3, #12]
90002d82:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90002d84:	6b20      	ldr	r0, [r4, #48]	; 0x30
90002d86:	2208      	movs	r2, #8
90002d88:	6b61      	ldr	r1, [r4, #52]	; 0x34
90002d8a:	6803      	ldr	r3, [r0, #0]
90002d8c:	691b      	ldr	r3, [r3, #16]
90002d8e:	4798      	blx	r3
90002d90:	2800      	cmp	r0, #0
90002d92:	f000 8091 	beq.w	90002eb8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x158>
    const uint32_t length = getU32(currentMovieOffset + 4);
90002d96:	69a7      	ldr	r7, [r4, #24]
    if (reader != 0)
90002d98:	6b20      	ldr	r0, [r4, #48]	; 0x30
    const uint32_t length = getU32(currentMovieOffset + 4);
90002d9a:	1d3b      	adds	r3, r7, #4
        aviBufferStartOffset = offset;
90002d9c:	63e6      	str	r6, [r4, #60]	; 0x3c
    if (reader != 0)
90002d9e:	2800      	cmp	r0, #0
90002da0:	f000 80ae 	beq.w	90002f00 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1a0>
        const uint32_t index = offset - aviBufferStartOffset;
90002da4:	1b9b      	subs	r3, r3, r6
    const uint8_t* mjpgdata = readData(currentMovieOffset + 8, length);
90002da6:	3708      	adds	r7, #8
        if (length > aviBufferLength)
90002da8:	e9d4 620d 	ldrd	r6, r2, [r4, #52]	; 0x34
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90002dac:	18f1      	adds	r1, r6, r3
90002dae:	5cf3      	ldrb	r3, [r6, r3]
90002db0:	788e      	ldrb	r6, [r1, #2]
90002db2:	f891 c001 	ldrb.w	ip, [r1, #1]
90002db6:	0436      	lsls	r6, r6, #16
90002db8:	ea46 260c 	orr.w	r6, r6, ip, lsl #8
90002dbc:	431e      	orrs	r6, r3
90002dbe:	78cb      	ldrb	r3, [r1, #3]
90002dc0:	ea46 6603 	orr.w	r6, r6, r3, lsl #24
        if (length > aviBufferLength)
90002dc4:	42b2      	cmp	r2, r6
90002dc6:	f0c0 8092 	bcc.w	90002eee <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x18e>
        reader->seek(offset);
90002dca:	6803      	ldr	r3, [r0, #0]
90002dcc:	4639      	mov	r1, r7
90002dce:	68db      	ldr	r3, [r3, #12]
90002dd0:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90002dd2:	6b20      	ldr	r0, [r4, #48]	; 0x30
90002dd4:	4632      	mov	r2, r6
90002dd6:	6b61      	ldr	r1, [r4, #52]	; 0x34
90002dd8:	6803      	ldr	r3, [r0, #0]
90002dda:	691b      	ldr	r3, [r3, #16]
90002ddc:	4798      	blx	r3
90002dde:	b910      	cbnz	r0, 90002de6 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x86>
            lastError = AVI_ERROR_EOF_REACHED;
90002de0:	230d      	movs	r3, #13
90002de2:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
        return aviBuffer;
90002de6:	6b61      	ldr	r1, [r4, #52]	; 0x34
        aviBufferStartOffset = offset;
90002de8:	63e7      	str	r7, [r4, #60]	; 0x3c
    if (frameBuffer) /* only decode if buffers are assigned. */
90002dea:	2d00      	cmp	r5, #0
90002dec:	d058      	beq.n	90002ea0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x140>
        FrameBufferAddress = output;
90002dee:	4b48      	ldr	r3, [pc, #288]	; (90002f10 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1b0>)
        JPEG_output_is_paused = 0;
90002df0:	2200      	movs	r2, #0
90002df2:	4f48      	ldr	r7, [pc, #288]	; (90002f14 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1b4>)
        FrameBufferAddress = output;
90002df4:	601d      	str	r5, [r3, #0]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90002df6:	4b48      	ldr	r3, [pc, #288]	; (90002f18 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1b8>)
        JPEG_output_is_paused = 0;
90002df8:	603a      	str	r2, [r7, #0]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90002dfa:	68db      	ldr	r3, [r3, #12]
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90002dfc:	4d47      	ldr	r5, [pc, #284]	; (90002f1c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1bc>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90002dfe:	eb03 0343 	add.w	r3, r3, r3, lsl #1
        JPEG_OUT_Write_BufferIndex = 0;
90002e02:	f8df a144 	ldr.w	sl, [pc, #324]	; 90002f48 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1e8>
        JPEG_OUT_Read_BufferIndex = 0;
90002e06:	f8df b144 	ldr.w	fp, [pc, #324]	; 90002f4c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1ec>
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90002e0a:	01db      	lsls	r3, r3, #7
        JPEG_InputImageIndex = 0;
90002e0c:	4844      	ldr	r0, [pc, #272]	; (90002f20 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1c0>)
        JPEG_OUT_Read_BufferIndex = 0;
90002e0e:	f8cb 2000 	str.w	r2, [fp]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90002e12:	9300      	str	r3, [sp, #0]
        MCU_BlockIndex = 0;
90002e14:	4b43      	ldr	r3, [pc, #268]	; (90002f24 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1c4>)
        JPEG_OUT_Write_BufferIndex = 0;
90002e16:	f8ca 2000 	str.w	r2, [sl]
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90002e1a:	702a      	strb	r2, [r5, #0]
        MCU_BlockIndex = 0;
90002e1c:	601a      	str	r2, [r3, #0]
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90002e1e:	742a      	strb	r2, [r5, #16]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90002e20:	f8da 3000 	ldr.w	r3, [sl]
        JPEG_InputImageIndex = 0;
90002e24:	6002      	str	r2, [r0, #0]
        JPEG_InputImageAddress = (uint32_t)input;
90002e26:	4a40      	ldr	r2, [pc, #256]	; (90002f28 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1c8>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90002e28:	eb05 1303 	add.w	r3, r5, r3, lsl #4
90002e2c:	483f      	ldr	r0, [pc, #252]	; (90002f2c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1cc>)
        JPEG_InputImageAddress = (uint32_t)input;
90002e2e:	6011      	str	r1, [r2, #0]
        JPEG_InputImageSize_Bytes = chunkSizeIn;
90002e30:	4a3f      	ldr	r2, [pc, #252]	; (90002f30 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1d0>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90002e32:	685b      	ldr	r3, [r3, #4]
        JPEG_InputImageSize_Bytes = chunkSizeIn;
90002e34:	6016      	str	r6, [r2, #0]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90002e36:	f44f 4250 	mov.w	r2, #53248	; 0xd000
90002e3a:	4e3e      	ldr	r6, [pc, #248]	; (90002f34 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1d4>)
90002e3c:	4c3e      	ldr	r4, [pc, #248]	; (90002f38 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1d8>)
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90002e3e:	f8df 8110 	ldr.w	r8, [pc, #272]	; 90002f50 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1f0>
90002e42:	f8df 9110 	ldr.w	r9, [pc, #272]	; 90002f54 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1f4>
            Jpeg_OUT_BufferTab[i].DataBufferSize = 0;
90002e46:	ed9f 7b30 	vldr	d7, [pc, #192]	; 90002f08 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1a8>
90002e4a:	ed85 7b02 	vstr	d7, [r5, #8]
90002e4e:	ed85 7b06 	vstr	d7, [r5, #24]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90002e52:	f008 fee3 	bl	9000bc1c <HAL_JPEG_Decode_DMA>
        return 0;
90002e56:	e017      	b.n	90002e88 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x128>
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90002e58:	f8d8 0000 	ldr.w	r0, [r8]
90002e5c:	7a03      	ldrb	r3, [r0, #8]
90002e5e:	b92b      	cbnz	r3, 90002e6c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x10c>
90002e60:	f8db 3000 	ldr.w	r3, [fp]
90002e64:	011b      	lsls	r3, r3, #4
90002e66:	5ceb      	ldrb	r3, [r5, r3]
90002e68:	2b01      	cmp	r3, #1
90002e6a:	d01d      	beq.n	90002ea8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x148>
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90002e6c:	683b      	ldr	r3, [r7, #0]
90002e6e:	2b01      	cmp	r3, #1
90002e70:	d106      	bne.n	90002e80 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x120>
90002e72:	f8da 3000 	ldr.w	r3, [sl]
90002e76:	011b      	lsls	r3, r3, #4
90002e78:	5ceb      	ldrb	r3, [r5, r3]
90002e7a:	b90b      	cbnz	r3, 90002e80 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x120>
90002e7c:	6833      	ldr	r3, [r6, #0]
90002e7e:	b1fb      	cbz	r3, 90002ec0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x160>
    return 2;
90002e80:	2302      	movs	r3, #2
            JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90002e82:	6023      	str	r3, [r4, #0]
        } while (JpegProcessing_End == 0);
90002e84:	6823      	ldr	r3, [r4, #0]
90002e86:	b95b      	cbnz	r3, 90002ea0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x140>
    if (Jpeg_HWDecodingEnd && DMA2D_CopyBufferEnd)
90002e88:	6833      	ldr	r3, [r6, #0]
90002e8a:	2b00      	cmp	r3, #0
90002e8c:	d0e4      	beq.n	90002e58 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0xf8>
90002e8e:	f8d9 3000 	ldr.w	r3, [r9]
90002e92:	2b00      	cmp	r3, #0
90002e94:	d0e0      	beq.n	90002e58 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0xf8>
        return 1;
90002e96:	2301      	movs	r3, #1
            JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90002e98:	6023      	str	r3, [r4, #0]
        } while (JpegProcessing_End == 0);
90002e9a:	6823      	ldr	r3, [r4, #0]
90002e9c:	2b00      	cmp	r3, #0
90002e9e:	d0f3      	beq.n	90002e88 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x128>
}
90002ea0:	2001      	movs	r0, #1
90002ea2:	b003      	add	sp, #12
90002ea4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90002ea8:	f8d9 3000 	ldr.w	r3, [r9]
90002eac:	2b00      	cmp	r3, #0
90002eae:	d1dd      	bne.n	90002e6c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x10c>
        DMA2D_reference->start();
90002eb0:	6803      	ldr	r3, [r0, #0]
90002eb2:	691b      	ldr	r3, [r3, #16]
90002eb4:	4798      	blx	r3
90002eb6:	e7d9      	b.n	90002e6c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x10c>
            lastError = AVI_ERROR_EOF_REACHED;
90002eb8:	230d      	movs	r3, #13
90002eba:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
90002ebe:	e76a      	b.n	90002d96 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x36>
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90002ec0:	2102      	movs	r1, #2
90002ec2:	481a      	ldr	r0, [pc, #104]	; (90002f2c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1cc>)
        JPEG_output_is_paused = 0;
90002ec4:	603b      	str	r3, [r7, #0]
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90002ec6:	f008 fff1 	bl	9000beac <HAL_JPEG_Resume>
90002eca:	2302      	movs	r3, #2
90002ecc:	e7d9      	b.n	90002e82 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x122>
    const uint32_t length = getU32(currentMovieOffset + 4);
90002ece:	1d33      	adds	r3, r6, #4
    if (reader != 0)
90002ed0:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
    const uint8_t* mjpgdata = readData(currentMovieOffset + 8, length);
90002ed2:	3608      	adds	r6, #8
        volatile const uint8_t* const d = movieData + offset;
90002ed4:	18ca      	adds	r2, r1, r3
        val |= d[0];
90002ed6:	5ccb      	ldrb	r3, [r1, r3]
    return movieData + offset;
90002ed8:	4431      	add	r1, r6
        val |= d[1] << 8;
90002eda:	7850      	ldrb	r0, [r2, #1]
        val |= d[2] << 16;
90002edc:	7896      	ldrb	r6, [r2, #2]
        val |= d[3] << 24;
90002ede:	78d2      	ldrb	r2, [r2, #3]
        val |= d[2] << 16;
90002ee0:	0436      	lsls	r6, r6, #16
        val |= d[3] << 24;
90002ee2:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
90002ee6:	ea46 2600 	orr.w	r6, r6, r0, lsl #8
90002eea:	431e      	orrs	r6, r3
    return movieData + offset;
90002eec:	e77d      	b.n	90002dea <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x8a>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90002eee:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90002ef0:	4b12      	ldr	r3, [pc, #72]	; (90002f3c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1dc>)
90002ef2:	4a13      	ldr	r2, [pc, #76]	; (90002f40 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1e0>)
90002ef4:	219f      	movs	r1, #159	; 0x9f
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90002ef6:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
            assert(!"Buffer to small");
90002efa:	4812      	ldr	r0, [pc, #72]	; (90002f44 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1e4>)
90002efc:	f026 febe 	bl	90029c7c <__assert_func>
    const uint32_t length = getU32(currentMovieOffset + 4);
90002f00:	463e      	mov	r6, r7
90002f02:	e7e5      	b.n	90002ed0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x170>
90002f04:	f3af 8000 	nop.w
	...
90002f10:	24005bac 	.word	0x24005bac
90002f14:	24005bbc 	.word	0x24005bbc
90002f18:	24005b90 	.word	0x24005b90
90002f1c:	24000008 	.word	0x24000008
90002f20:	24005bb8 	.word	0x24005bb8
90002f24:	2400018c 	.word	0x2400018c
90002f28:	24005bc0 	.word	0x24005bc0
90002f2c:	24009284 	.word	0x24009284
90002f30:	24005bc4 	.word	0x24005bc4
90002f34:	24005bb4 	.word	0x24005bb4
90002f38:	24005bb0 	.word	0x24005bb0
90002f3c:	9002b4bc 	.word	0x9002b4bc
90002f40:	9002b4d0 	.word	0x9002b4d0
90002f44:	9002b46c 	.word	0x9002b46c
90002f48:	24005bc8 	.word	0x24005bc8
90002f4c:	24000188 	.word	0x24000188
90002f50:	24005ba8 	.word	0x24005ba8
90002f54:	24000184 	.word	0x24000184

90002f58 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv>:
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90002f58:	6943      	ldr	r3, [r0, #20]
{
90002f5a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90002f5e:	2b00      	cmp	r3, #0
90002f60:	f000 80c0 	beq.w	900030e4 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x18c>
    readData(currentMovieOffset, 8);
90002f64:	4605      	mov	r5, r0
    if (reader != 0)
90002f66:	6b00      	ldr	r0, [r0, #48]	; 0x30
    readData(currentMovieOffset, 8);
90002f68:	69ac      	ldr	r4, [r5, #24]
    if (reader != 0)
90002f6a:	2800      	cmp	r0, #0
90002f6c:	f000 80a0 	beq.w	900030b0 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x158>
        if (length > aviBufferLength)
90002f70:	6bab      	ldr	r3, [r5, #56]	; 0x38
90002f72:	2b07      	cmp	r3, #7
90002f74:	f240 80ab 	bls.w	900030ce <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x176>
        reader->seek(offset);
90002f78:	6803      	ldr	r3, [r0, #0]
90002f7a:	4621      	mov	r1, r4
90002f7c:	68db      	ldr	r3, [r3, #12]
90002f7e:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90002f80:	6b28      	ldr	r0, [r5, #48]	; 0x30
90002f82:	2208      	movs	r2, #8
90002f84:	6b69      	ldr	r1, [r5, #52]	; 0x34
90002f86:	6803      	ldr	r3, [r0, #0]
90002f88:	691b      	ldr	r3, [r3, #16]
90002f8a:	4798      	blx	r3
90002f8c:	2800      	cmp	r0, #0
90002f8e:	f000 808b 	beq.w	900030a8 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x150>
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90002f92:	69ab      	ldr	r3, [r5, #24]
    if (reader != 0)
90002f94:	6b28      	ldr	r0, [r5, #48]	; 0x30
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90002f96:	1d1a      	adds	r2, r3, #4
        aviBufferStartOffset = offset;
90002f98:	63ec      	str	r4, [r5, #60]	; 0x3c
    if (reader != 0)
90002f9a:	2800      	cmp	r0, #0
90002f9c:	f000 808a 	beq.w	900030b4 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x15c>
        const uint32_t index = offset - aviBufferStartOffset;
90002fa0:	1b12      	subs	r2, r2, r4
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90002fa2:	6b6c      	ldr	r4, [r5, #52]	; 0x34
90002fa4:	18a1      	adds	r1, r4, r2
90002fa6:	5ca2      	ldrb	r2, [r4, r2]
90002fa8:	788c      	ldrb	r4, [r1, #2]
90002faa:	784e      	ldrb	r6, [r1, #1]
90002fac:	0424      	lsls	r4, r4, #16
90002fae:	ea44 2406 	orr.w	r4, r4, r6, lsl #8
90002fb2:	4314      	orrs	r4, r2
90002fb4:	78ca      	ldrb	r2, [r1, #3]
90002fb6:	ea44 6402 	orr.w	r4, r4, r2, lsl #24
            lastError = AVI_ERROR_EOF_REACHED;
90002fba:	270d      	movs	r7, #13
        if (streamNo == STREAM0 && chunkType == TYPEDC)
90002fbc:	f243 0630 	movw	r6, #12336	; 0x3030
90002fc0:	e03a      	b.n	90003038 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0xe0>
        if (length > aviBufferLength)
90002fc2:	6bab      	ldr	r3, [r5, #56]	; 0x38
90002fc4:	2b07      	cmp	r3, #7
90002fc6:	f240 8082 	bls.w	900030ce <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x176>
        reader->seek(offset);
90002fca:	6803      	ldr	r3, [r0, #0]
90002fcc:	4621      	mov	r1, r4
90002fce:	68db      	ldr	r3, [r3, #12]
90002fd0:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90002fd2:	6b28      	ldr	r0, [r5, #48]	; 0x30
90002fd4:	2208      	movs	r2, #8
90002fd6:	6b69      	ldr	r1, [r5, #52]	; 0x34
90002fd8:	6803      	ldr	r3, [r0, #0]
90002fda:	691b      	ldr	r3, [r3, #16]
90002fdc:	4798      	blx	r3
90002fde:	b908      	cbnz	r0, 90002fe4 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x8c>
            lastError = AVI_ERROR_EOF_REACHED;
90002fe0:	f885 7040 	strb.w	r7, [r5, #64]	; 0x40
    if (reader != 0)
90002fe4:	6b28      	ldr	r0, [r5, #48]	; 0x30
        uint32_t streamNo  = getU16(currentMovieOffset);
90002fe6:	69ab      	ldr	r3, [r5, #24]
        aviBufferStartOffset = offset;
90002fe8:	63ec      	str	r4, [r5, #60]	; 0x3c
    if (reader != 0)
90002fea:	2800      	cmp	r0, #0
90002fec:	d078      	beq.n	900030e0 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x188>
        const uint32_t index = offset - aviBufferStartOffset;
90002fee:	1b1b      	subs	r3, r3, r4
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90002ff0:	6b69      	ldr	r1, [r5, #52]	; 0x34
90002ff2:	18ca      	adds	r2, r1, r3
90002ff4:	5ccb      	ldrb	r3, [r1, r3]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90002ff6:	7994      	ldrb	r4, [r2, #6]
90002ff8:	f892 a005 	ldrb.w	sl, [r2, #5]
90002ffc:	0424      	lsls	r4, r4, #16
90002ffe:	f892 c004 	ldrb.w	ip, [r2, #4]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90003002:	f892 9001 	ldrb.w	r9, [r2, #1]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90003006:	ea44 240a 	orr.w	r4, r4, sl, lsl #8
9000300a:	79d1      	ldrb	r1, [r2, #7]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
9000300c:	f892 8003 	ldrb.w	r8, [r2, #3]
90003010:	ea43 2309 	orr.w	r3, r3, r9, lsl #8
90003014:	f892 e002 	ldrb.w	lr, [r2, #2]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90003018:	ea44 040c 	orr.w	r4, r4, ip
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
9000301c:	ea4e 2208 	orr.w	r2, lr, r8, lsl #8
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90003020:	ea44 6401 	orr.w	r4, r4, r1, lsl #24
        if (streamNo == STREAM0 && chunkType == TYPEDC)
90003024:	f246 3164 	movw	r1, #25444	; 0x6364
90003028:	42b3      	cmp	r3, r6
9000302a:	bf08      	it	eq
9000302c:	428a      	cmpeq	r2, r1
9000302e:	bf0c      	ite	eq
90003030:	2301      	moveq	r3, #1
90003032:	2300      	movne	r3, #0
90003034:	d035      	beq.n	900030a2 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x14a>
    while (currentMovieOffset + 8 + chunkSize < movieLength)
90003036:	69ab      	ldr	r3, [r5, #24]
90003038:	441c      	add	r4, r3
9000303a:	6aab      	ldr	r3, [r5, #40]	; 0x28
9000303c:	f104 0208 	add.w	r2, r4, #8
90003040:	429a      	cmp	r2, r3
90003042:	d229      	bcs.n	90003098 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x140>
        frameNumber++;
90003044:	696b      	ldr	r3, [r5, #20]
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90003046:	3409      	adds	r4, #9
        frameNumber++;
90003048:	3301      	adds	r3, #1
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
9000304a:	f024 0401 	bic.w	r4, r4, #1
9000304e:	e9c5 3405 	strd	r3, r4, [r5, #20]
    if (reader != 0)
90003052:	2800      	cmp	r0, #0
90003054:	d1b5      	bne.n	90002fc2 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x6a>
        volatile const uint8_t* const d = movieData + offset;
90003056:	6ae9      	ldr	r1, [r5, #44]	; 0x2c
        chunkSize = getU32(currentMovieOffset + 4);
90003058:	f104 0e04 	add.w	lr, r4, #4
        uint32_t chunkType = getU16(currentMovieOffset + 2);
9000305c:	1ca2      	adds	r2, r4, #2
        volatile const uint8_t* const d = movieData + offset;
9000305e:	eb01 0c04 	add.w	ip, r1, r4
        val |= d[0];
90003062:	5d0b      	ldrb	r3, [r1, r4]
        val |= d[1] << 8;
90003064:	f89c 4001 	ldrb.w	r4, [ip, #1]
        volatile const uint8_t* const d = movieData + offset;
90003068:	eb01 0c0e 	add.w	ip, r1, lr
        val |= d[1] << 8;
9000306c:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
        volatile const uint8_t* const d = movieData + offset;
90003070:	188c      	adds	r4, r1, r2
        val |= d[0];
90003072:	5c8a      	ldrb	r2, [r1, r2]
        val |= d[1] << 8;
90003074:	7864      	ldrb	r4, [r4, #1]
        val |= d[0];
90003076:	f811 100e 	ldrb.w	r1, [r1, lr]
        val |= d[1] << 8;
9000307a:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
        val |= d[1] << 8;
9000307e:	f89c e001 	ldrb.w	lr, [ip, #1]
        val |= d[2] << 16;
90003082:	f89c 4002 	ldrb.w	r4, [ip, #2]
        val |= d[3] << 24;
90003086:	f89c c003 	ldrb.w	ip, [ip, #3]
        val |= d[2] << 16;
9000308a:	0424      	lsls	r4, r4, #16
        val |= d[3] << 24;
9000308c:	ea41 610c 	orr.w	r1, r1, ip, lsl #24
90003090:	ea44 240e 	orr.w	r4, r4, lr, lsl #8
90003094:	430c      	orrs	r4, r1
        return val;
90003096:	e7c5      	b.n	90003024 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0xcc>
    frameNumber = 1;
90003098:	2101      	movs	r1, #1
    currentMovieOffset = firstFrameOffset; /* start over */
9000309a:	6a2a      	ldr	r2, [r5, #32]
    return false;
9000309c:	2300      	movs	r3, #0
    currentMovieOffset = firstFrameOffset; /* start over */
9000309e:	e9c5 1205 	strd	r1, r2, [r5, #20]
}
900030a2:	4618      	mov	r0, r3
900030a4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
            lastError = AVI_ERROR_EOF_REACHED;
900030a8:	230d      	movs	r3, #13
900030aa:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
900030ae:	e770      	b.n	90002f92 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x3a>
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
900030b0:	1d22      	adds	r2, r4, #4
900030b2:	4623      	mov	r3, r4
        volatile const uint8_t* const d = movieData + offset;
900030b4:	6aec      	ldr	r4, [r5, #44]	; 0x2c
900030b6:	18a1      	adds	r1, r4, r2
        val |= d[0];
900030b8:	5ca2      	ldrb	r2, [r4, r2]
        val |= d[1] << 8;
900030ba:	784e      	ldrb	r6, [r1, #1]
        val |= d[2] << 16;
900030bc:	788c      	ldrb	r4, [r1, #2]
        val |= d[3] << 24;
900030be:	78c9      	ldrb	r1, [r1, #3]
        val |= d[2] << 16;
900030c0:	0424      	lsls	r4, r4, #16
        val |= d[3] << 24;
900030c2:	ea42 6201 	orr.w	r2, r2, r1, lsl #24
900030c6:	ea44 2406 	orr.w	r4, r4, r6, lsl #8
900030ca:	4314      	orrs	r4, r2
        return val;
900030cc:	e775      	b.n	90002fba <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x62>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
900030ce:	2009      	movs	r0, #9
            assert(!"Buffer to small");
900030d0:	4b07      	ldr	r3, [pc, #28]	; (900030f0 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x198>)
900030d2:	4a08      	ldr	r2, [pc, #32]	; (900030f4 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x19c>)
900030d4:	219f      	movs	r1, #159	; 0x9f
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
900030d6:	f885 0040 	strb.w	r0, [r5, #64]	; 0x40
            assert(!"Buffer to small");
900030da:	4807      	ldr	r0, [pc, #28]	; (900030f8 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1a0>)
900030dc:	f026 fdce 	bl	90029c7c <__assert_func>
        uint32_t streamNo  = getU16(currentMovieOffset);
900030e0:	461c      	mov	r4, r3
900030e2:	e7b8      	b.n	90003056 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0xfe>
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
900030e4:	4b05      	ldr	r3, [pc, #20]	; (900030fc <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1a4>)
900030e6:	21e5      	movs	r1, #229	; 0xe5
900030e8:	4a05      	ldr	r2, [pc, #20]	; (90003100 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1a8>)
900030ea:	4803      	ldr	r0, [pc, #12]	; (900030f8 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1a0>)
900030ec:	f026 fdc6 	bl	90029c7c <__assert_func>
900030f0:	9002b4bc 	.word	0x9002b4bc
900030f4:	9002b4d0 	.word	0x9002b4d0
900030f8:	9002b46c 	.word	0x9002b46c
900030fc:	9002b514 	.word	0x9002b514
90003100:	9002b560 	.word	0x9002b560

90003104 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm>:
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90003104:	6943      	ldr	r3, [r0, #20]
{
90003106:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
9000310a:	2b00      	cmp	r3, #0
9000310c:	f000 80ad 	beq.w	9000326a <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x166>
    readData(currentMovieOffset, 8);
90003110:	4604      	mov	r4, r0
    if (reader != 0)
90003112:	6b00      	ldr	r0, [r0, #48]	; 0x30
90003114:	460e      	mov	r6, r1
    readData(currentMovieOffset, 8);
90003116:	69a5      	ldr	r5, [r4, #24]
    if (reader != 0)
90003118:	2800      	cmp	r0, #0
9000311a:	d05f      	beq.n	900031dc <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xd8>
        if (length > aviBufferLength)
9000311c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
9000311e:	2b07      	cmp	r3, #7
90003120:	f240 80a9 	bls.w	90003276 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x172>
        reader->seek(offset);
90003124:	6803      	ldr	r3, [r0, #0]
90003126:	4629      	mov	r1, r5
90003128:	68db      	ldr	r3, [r3, #12]
9000312a:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
9000312c:	6b20      	ldr	r0, [r4, #48]	; 0x30
9000312e:	2208      	movs	r2, #8
90003130:	6b61      	ldr	r1, [r4, #52]	; 0x34
90003132:	6803      	ldr	r3, [r0, #0]
90003134:	691b      	ldr	r3, [r3, #16]
90003136:	4798      	blx	r3
90003138:	2800      	cmp	r0, #0
9000313a:	d04a      	beq.n	900031d2 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xce>
    if (reader != 0)
9000313c:	6b20      	ldr	r0, [r4, #48]	; 0x30
    uint32_t streamNo  = getU16(currentMovieOffset);
9000313e:	69a1      	ldr	r1, [r4, #24]
        aviBufferStartOffset = offset;
90003140:	63e5      	str	r5, [r4, #60]	; 0x3c
    if (reader != 0)
90003142:	2800      	cmp	r0, #0
90003144:	d049      	beq.n	900031da <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xd6>
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90003146:	f101 0c04 	add.w	ip, r1, #4
    uint32_t chunkType = getU16(currentMovieOffset + 2);
9000314a:	1c8a      	adds	r2, r1, #2
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
9000314c:	6b63      	ldr	r3, [r4, #52]	; 0x34
        const uint32_t index = offset - aviBufferStartOffset;
9000314e:	ebac 0c05 	sub.w	ip, ip, r5
        const uint32_t index = offset - aviBufferStartOffset;
90003152:	1b52      	subs	r2, r2, r5
90003154:	1b4d      	subs	r5, r1, r5
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90003156:	eb03 070c 	add.w	r7, r3, ip
9000315a:	f813 e00c 	ldrb.w	lr, [r3, ip]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
9000315e:	eb03 0805 	add.w	r8, r3, r5
90003162:	f813 c005 	ldrb.w	ip, [r3, r5]
90003166:	f898 5001 	ldrb.w	r5, [r8, #1]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
9000316a:	f897 8001 	ldrb.w	r8, [r7, #1]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
9000316e:	ea4c 2c05 	orr.w	ip, ip, r5, lsl #8
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90003172:	78bd      	ldrb	r5, [r7, #2]
90003174:	78ff      	ldrb	r7, [r7, #3]
90003176:	042d      	lsls	r5, r5, #16
90003178:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
9000317c:	ea45 050e 	orr.w	r5, r5, lr
90003180:	ea45 6507 	orr.w	r5, r5, r7, lsl #24
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90003184:	189f      	adds	r7, r3, r2
90003186:	5c9b      	ldrb	r3, [r3, r2]
90003188:	787a      	ldrb	r2, [r7, #1]
9000318a:	ea43 2702 	orr.w	r7, r3, r2, lsl #8
    if (currentMovieOffset + 8 + chunkSize < movieLength)
9000318e:	194a      	adds	r2, r1, r5
90003190:	6aa3      	ldr	r3, [r4, #40]	; 0x28
90003192:	f102 0e08 	add.w	lr, r2, #8
90003196:	459e      	cmp	lr, r3
90003198:	d214      	bcs.n	900031c4 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xc0>
        if (streamNo == STREAM0 && chunkType == TYPEDC && chunkSize > 0)
9000319a:	f243 0330 	movw	r3, #12336	; 0x3030
9000319e:	459c      	cmp	ip, r3
900031a0:	d139      	bne.n	90003216 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x112>
900031a2:	f246 3364 	movw	r3, #25444	; 0x6364
900031a6:	429f      	cmp	r7, r3
900031a8:	d135      	bne.n	90003216 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x112>
900031aa:	2d00      	cmp	r5, #0
900031ac:	d137      	bne.n	9000321e <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x11a>
            currentMovieOffset += 8;
900031ae:	4672      	mov	r2, lr
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
900031b0:	3201      	adds	r2, #1
        if (currentMovieOffset == lastFrameEnd)
900031b2:	6a63      	ldr	r3, [r4, #36]	; 0x24
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
900031b4:	f022 0201 	bic.w	r2, r2, #1
        if (currentMovieOffset == lastFrameEnd)
900031b8:	429a      	cmp	r2, r3
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
900031ba:	61a2      	str	r2, [r4, #24]
        if (currentMovieOffset == lastFrameEnd)
900031bc:	d002      	beq.n	900031c4 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xc0>
900031be:	2001      	movs	r0, #1
}
900031c0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        frameNumber = 1;
900031c4:	2201      	movs	r2, #1
        currentMovieOffset = firstFrameOffset; /* start over */
900031c6:	6a23      	ldr	r3, [r4, #32]
900031c8:	2000      	movs	r0, #0
900031ca:	e9c4 2305 	strd	r2, r3, [r4, #20]
}
900031ce:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
            lastError = AVI_ERROR_EOF_REACHED;
900031d2:	230d      	movs	r3, #13
900031d4:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
900031d8:	e7b0      	b.n	9000313c <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x38>
    uint32_t streamNo  = getU16(currentMovieOffset);
900031da:	460d      	mov	r5, r1
        volatile const uint8_t* const d = movieData + offset;
900031dc:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    uint32_t chunkType = getU16(currentMovieOffset + 2);
900031de:	1caf      	adds	r7, r5, #2
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
900031e0:	1d2a      	adds	r2, r5, #4
        volatile const uint8_t* const d = movieData + offset;
900031e2:	1959      	adds	r1, r3, r5
        val |= d[0];
900031e4:	f813 c005 	ldrb.w	ip, [r3, r5]
        volatile const uint8_t* const d = movieData + offset;
900031e8:	1898      	adds	r0, r3, r2
        val |= d[1] << 8;
900031ea:	7849      	ldrb	r1, [r1, #1]
900031ec:	ea4c 2c01 	orr.w	ip, ip, r1, lsl #8
        val |= d[3] << 24;
900031f0:	4629      	mov	r1, r5
        volatile const uint8_t* const d = movieData + offset;
900031f2:	19dd      	adds	r5, r3, r7
        val |= d[0];
900031f4:	5ddf      	ldrb	r7, [r3, r7]
        val |= d[1] << 8;
900031f6:	786d      	ldrb	r5, [r5, #1]
        val |= d[0];
900031f8:	5c9a      	ldrb	r2, [r3, r2]
        val |= d[1] << 8;
900031fa:	ea47 2705 	orr.w	r7, r7, r5, lsl #8
        val |= d[1] << 8;
900031fe:	f890 e001 	ldrb.w	lr, [r0, #1]
        val |= d[2] << 16;
90003202:	7885      	ldrb	r5, [r0, #2]
        val |= d[3] << 24;
90003204:	78c3      	ldrb	r3, [r0, #3]
90003206:	2000      	movs	r0, #0
        val |= d[2] << 16;
90003208:	042d      	lsls	r5, r5, #16
        val |= d[3] << 24;
9000320a:	ea42 6303 	orr.w	r3, r2, r3, lsl #24
9000320e:	ea45 250e 	orr.w	r5, r5, lr, lsl #8
90003212:	431d      	orrs	r5, r3
        return val;
90003214:	e7bb      	b.n	9000318e <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x8a>
        currentMovieOffset += chunkSize;
90003216:	61a2      	str	r2, [r4, #24]
        if (chunkSize == 0) /* Empty frame - Skip */
90003218:	2d00      	cmp	r5, #0
9000321a:	d1c9      	bne.n	900031b0 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xac>
9000321c:	e7c7      	b.n	900031ae <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xaa>
            currentMovieOffset += 8;
9000321e:	f101 0708 	add.w	r7, r1, #8
90003222:	61a7      	str	r7, [r4, #24]
    if (reader != 0)
90003224:	b1f0      	cbz	r0, 90003264 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x160>
        if (length > aviBufferLength)
90003226:	6ba3      	ldr	r3, [r4, #56]	; 0x38
90003228:	429d      	cmp	r5, r3
9000322a:	d824      	bhi.n	90003276 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x172>
        reader->seek(offset);
9000322c:	6803      	ldr	r3, [r0, #0]
9000322e:	4639      	mov	r1, r7
90003230:	68db      	ldr	r3, [r3, #12]
90003232:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90003234:	6b20      	ldr	r0, [r4, #48]	; 0x30
90003236:	462a      	mov	r2, r5
90003238:	6b61      	ldr	r1, [r4, #52]	; 0x34
9000323a:	6803      	ldr	r3, [r0, #0]
9000323c:	691b      	ldr	r3, [r3, #16]
9000323e:	4798      	blx	r3
90003240:	b910      	cbnz	r0, 90003248 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x144>
            lastError = AVI_ERROR_EOF_REACHED;
90003242:	230d      	movs	r3, #13
90003244:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
        return aviBuffer;
90003248:	6b61      	ldr	r1, [r4, #52]	; 0x34
        aviBufferStartOffset = offset;
9000324a:	63e7      	str	r7, [r4, #60]	; 0x3c
    if (outputBuffer) /* only decode if buffers are assigned. */
9000324c:	b126      	cbz	r6, 90003258 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x154>
9000324e:	4633      	mov	r3, r6
90003250:	462a      	mov	r2, r5
90003252:	4620      	mov	r0, r4
90003254:	f7ff fc60 	bl	90002b18 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0>
        currentMovieOffset += chunkSize;
90003258:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
            frameNumber++;
9000325c:	3301      	adds	r3, #1
        currentMovieOffset += chunkSize;
9000325e:	442a      	add	r2, r5
            frameNumber++;
90003260:	6163      	str	r3, [r4, #20]
        if (chunkSize == 0) /* Empty frame - Skip */
90003262:	e7a5      	b.n	900031b0 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xac>
    return movieData + offset;
90003264:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
90003266:	4439      	add	r1, r7
90003268:	e7f0      	b.n	9000324c <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x148>
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
9000326a:	4b07      	ldr	r3, [pc, #28]	; (90003288 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x184>)
9000326c:	21b1      	movs	r1, #177	; 0xb1
9000326e:	4a07      	ldr	r2, [pc, #28]	; (9000328c <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x188>)
90003270:	4807      	ldr	r0, [pc, #28]	; (90003290 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x18c>)
90003272:	f026 fd03 	bl	90029c7c <__assert_func>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90003276:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90003278:	4b06      	ldr	r3, [pc, #24]	; (90003294 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x190>)
9000327a:	4a07      	ldr	r2, [pc, #28]	; (90003298 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x194>)
9000327c:	219f      	movs	r1, #159	; 0x9f
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
9000327e:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
            assert(!"Buffer to small");
90003282:	4803      	ldr	r0, [pc, #12]	; (90003290 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x18c>)
90003284:	f026 fcfa 	bl	90029c7c <__assert_func>
90003288:	9002b514 	.word	0x9002b514
9000328c:	9002b594 	.word	0x9002b594
90003290:	9002b46c 	.word	0x9002b46c
90003294:	9002b4bc 	.word	0x9002b4bc
90003298:	9002b4d0 	.word	0x9002b4d0

9000329c <_ZN20HardwareMJPEGDecoderC1Ev>:
HardwareMJPEGDecoder::HardwareMJPEGDecoder()
9000329c:	b510      	push	{r4, lr}
    : frameNumber(0), currentMovieOffset(0), indexOffset(0), firstFrameOffset(0), lastFrameEnd(0), movieLength(0), movieData(0),
9000329e:	2200      	movs	r2, #0
HardwareMJPEGDecoder::HardwareMJPEGDecoder()
900032a0:	4604      	mov	r4, r0
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
900032a2:	4b0e      	ldr	r3, [pc, #56]	; (900032dc <_ZN20HardwareMJPEGDecoderC1Ev+0x40>)
    semDecodingDone = SEM_CREATE();
900032a4:	2001      	movs	r0, #1
900032a6:	4611      	mov	r1, r2
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
900032a8:	63e2      	str	r2, [r4, #60]	; 0x3c
900032aa:	6023      	str	r3, [r4, #0]
900032ac:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
    : frameNumber(0), currentMovieOffset(0), indexOffset(0), firstFrameOffset(0), lastFrameEnd(0), movieLength(0), movieData(0),
900032b0:	e9c4 2205 	strd	r2, r2, [r4, #20]
900032b4:	e9c4 2207 	strd	r2, r2, [r4, #28]
900032b8:	e9c4 2209 	strd	r2, r2, [r4, #36]	; 0x24
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
900032bc:	e9c4 220b 	strd	r2, r2, [r4, #44]	; 0x2c
900032c0:	e9c4 220d 	strd	r2, r2, [r4, #52]	; 0x34
    videoInfo.frame_width = 0;
900032c4:	e9c4 2203 	strd	r2, r2, [r4, #12]
    videoInfo.number_of_frames = 0;
900032c8:	e9c4 2201 	strd	r2, r2, [r4, #4]
    semDecodingDone = SEM_CREATE();
900032cc:	f00d fb2e 	bl	9001092c <osSemaphoreNew>
900032d0:	4b03      	ldr	r3, [pc, #12]	; (900032e0 <_ZN20HardwareMJPEGDecoderC1Ev+0x44>)
900032d2:	4602      	mov	r2, r0
}
900032d4:	4620      	mov	r0, r4
    semDecodingDone = SEM_CREATE();
900032d6:	601a      	str	r2, [r3, #0]
}
900032d8:	bd10      	pop	{r4, pc}
900032da:	bf00      	nop
900032dc:	9002b6b8 	.word	0x9002b6b8
900032e0:	24005bcc 	.word	0x24005bcc

900032e4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>:
{
900032e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    currentMovieOffset = 0;
900032e8:	2100      	movs	r1, #0
    if (reader != 0)
900032ea:	6b06      	ldr	r6, [r0, #48]	; 0x30
{
900032ec:	b083      	sub	sp, #12
900032ee:	4605      	mov	r5, r0
    currentMovieOffset = 0;
900032f0:	6181      	str	r1, [r0, #24]
    lastError = AVI_NO_ERROR;
900032f2:	f880 1040 	strb.w	r1, [r0, #64]	; 0x40
    if (reader != 0)
900032f6:	2e00      	cmp	r6, #0
900032f8:	f000 81b4 	beq.w	90003664 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x380>
        if (length > aviBufferLength)
900032fc:	6b83      	ldr	r3, [r0, #56]	; 0x38
900032fe:	2b47      	cmp	r3, #71	; 0x47
90003300:	f240 8265 	bls.w	900037ce <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4ea>
        reader->seek(offset);
90003304:	6833      	ldr	r3, [r6, #0]
90003306:	4630      	mov	r0, r6
90003308:	68db      	ldr	r3, [r3, #12]
9000330a:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
9000330c:	6b28      	ldr	r0, [r5, #48]	; 0x30
9000330e:	2248      	movs	r2, #72	; 0x48
90003310:	6b69      	ldr	r1, [r5, #52]	; 0x34
90003312:	6803      	ldr	r3, [r0, #0]
90003314:	691b      	ldr	r3, [r3, #16]
90003316:	4798      	blx	r3
90003318:	2800      	cmp	r0, #0
9000331a:	f000 80ce 	beq.w	900034ba <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1d6>
        aviBufferStartOffset = offset;
9000331e:	2300      	movs	r3, #0
    if (reader != 0)
90003320:	6b2e      	ldr	r6, [r5, #48]	; 0x30
    if (compare(currentMovieOffset, "RIFF", 4))
90003322:	69af      	ldr	r7, [r5, #24]
    if (reader != 0)
90003324:	46b1      	mov	r9, r6
        aviBufferStartOffset = offset;
90003326:	63eb      	str	r3, [r5, #60]	; 0x3c
    if (reader != 0)
90003328:	2e00      	cmp	r6, #0
9000332a:	f000 819c 	beq.w	90003666 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x382>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
9000332e:	f8d5 a034 	ldr.w	sl, [r5, #52]	; 0x34
    return strncmp(src, str, num);
90003332:	2204      	movs	r2, #4
90003334:	49c3      	ldr	r1, [pc, #780]	; (90003644 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x360>)
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90003336:	eb0a 0b07 	add.w	fp, sl, r7
    return strncmp(src, str, num);
9000333a:	4658      	mov	r0, fp
9000333c:	f026 ff9e 	bl	9002a27c <strncmp>
    if (compare(currentMovieOffset, "RIFF", 4))
90003340:	2800      	cmp	r0, #0
90003342:	f040 824d 	bne.w	900037e0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4fc>
    currentMovieOffset += 8;
90003346:	f107 0008 	add.w	r0, r7, #8
    return strncmp(src, str, num);
9000334a:	2204      	movs	r2, #4
9000334c:	49be      	ldr	r1, [pc, #760]	; (90003648 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x364>)
    currentMovieOffset += 8;
9000334e:	61a8      	str	r0, [r5, #24]
    return strncmp(src, str, num);
90003350:	4450      	add	r0, sl
90003352:	f026 ff93 	bl	9002a27c <strncmp>
    if (compare(currentMovieOffset, "AVI ", 4))
90003356:	2800      	cmp	r0, #0
90003358:	f040 825d 	bne.w	90003816 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x532>
    currentMovieOffset += 4;
9000335c:	f107 080c 	add.w	r8, r7, #12
    return strncmp(src, str, num);
90003360:	2204      	movs	r2, #4
90003362:	49ba      	ldr	r1, [pc, #744]	; (9000364c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x368>)
90003364:	eb0a 0008 	add.w	r0, sl, r8
    currentMovieOffset += 4;
90003368:	f8c5 8018 	str.w	r8, [r5, #24]
    return strncmp(src, str, num);
9000336c:	f026 ff86 	bl	9002a27c <strncmp>
    if (compare(currentMovieOffset, "LIST", 4))
90003370:	9001      	str	r0, [sp, #4]
90003372:	2800      	cmp	r0, #0
90003374:	f040 8245 	bne.w	90003802 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x51e>
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90003378:	f89b 4012 	ldrb.w	r4, [fp, #18]
9000337c:	f89b 2011 	ldrb.w	r2, [fp, #17]
90003380:	0424      	lsls	r4, r4, #16
90003382:	f89b 3013 	ldrb.w	r3, [fp, #19]
90003386:	ea44 2402 	orr.w	r4, r4, r2, lsl #8
9000338a:	f89b 2010 	ldrb.w	r2, [fp, #16]
9000338e:	4314      	orrs	r4, r2
    assert(aviListSize);
90003390:	ea54 6403 	orrs.w	r4, r4, r3, lsl #24
90003394:	f000 822e 	beq.w	900037f4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x510>
    uint32_t offset =  currentMovieOffset + 8;
90003398:	f107 0014 	add.w	r0, r7, #20
    return strncmp(src, str, num);
9000339c:	2204      	movs	r2, #4
9000339e:	49ac      	ldr	r1, [pc, #688]	; (90003650 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x36c>)
900033a0:	4450      	add	r0, sl
900033a2:	f026 ff6b 	bl	9002a27c <strncmp>
    if (compare(offset, "hdrl", 4))
900033a6:	2800      	cmp	r0, #0
900033a8:	f000 808b 	beq.w	900034c2 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1de>
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
900033ac:	2306      	movs	r3, #6
        foundFrame = false;
900033ae:	f8dd b004 	ldr.w	fp, [sp, #4]
    offset += 4;
900033b2:	f107 0018 	add.w	r0, r7, #24
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
900033b6:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
900033ba:	4450      	add	r0, sl
    return strncmp(src, str, num);
900033bc:	2204      	movs	r2, #4
900033be:	49a5      	ldr	r1, [pc, #660]	; (90003654 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x370>)
900033c0:	f026 ff5c 	bl	9002a27c <strncmp>
    if (compare(offset, "avih", 4))
900033c4:	2800      	cmp	r0, #0
900033c6:	f000 808f 	beq.w	900034e8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x204>
        lastError = AVI_ERROR_AVI_AVIH_NOT_FOUND;
900033ca:	2307      	movs	r3, #7
900033cc:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
    uint32_t listOffset = aviListOffset + aviListSize + 8;
900033d0:	4444      	add	r4, r8
900033d2:	3408      	adds	r4, #8
    if (reader != 0)
900033d4:	f1b9 0f00 	cmp.w	r9, #0
900033d8:	d015      	beq.n	90003406 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x122>
        if (length > aviBufferLength)
900033da:	6bab      	ldr	r3, [r5, #56]	; 0x38
900033dc:	2b0b      	cmp	r3, #11
900033de:	f240 81f6 	bls.w	900037ce <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4ea>
        reader->seek(offset);
900033e2:	f8d9 3000 	ldr.w	r3, [r9]
900033e6:	4621      	mov	r1, r4
900033e8:	4648      	mov	r0, r9
900033ea:	68db      	ldr	r3, [r3, #12]
900033ec:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
900033ee:	6b28      	ldr	r0, [r5, #48]	; 0x30
900033f0:	220c      	movs	r2, #12
900033f2:	6b69      	ldr	r1, [r5, #52]	; 0x34
900033f4:	6803      	ldr	r3, [r0, #0]
900033f6:	691b      	ldr	r3, [r3, #16]
900033f8:	4798      	blx	r3
900033fa:	b910      	cbnz	r0, 90003402 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x11e>
            lastError = AVI_ERROR_EOF_REACHED;
900033fc:	230d      	movs	r3, #13
900033fe:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
        aviBufferStartOffset = offset;
90003402:	6b2e      	ldr	r6, [r5, #48]	; 0x30
90003404:	63ec      	str	r4, [r5, #60]	; 0x3c
        return aviBuffer;
90003406:	f895 9040 	ldrb.w	r9, [r5, #64]	; 0x40
    return strncmp(src, str, num);
9000340a:	4f93      	ldr	r7, [pc, #588]	; (90003658 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x374>)
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
9000340c:	f104 0808 	add.w	r8, r4, #8
    if (reader != 0)
90003410:	2e00      	cmp	r6, #0
90003412:	d041      	beq.n	90003498 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1b4>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90003414:	6beb      	ldr	r3, [r5, #60]	; 0x3c
    return strncmp(src, str, num);
90003416:	2204      	movs	r2, #4
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90003418:	6b68      	ldr	r0, [r5, #52]	; 0x34
    return strncmp(src, str, num);
9000341a:	4639      	mov	r1, r7
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
9000341c:	eba8 0303 	sub.w	r3, r8, r3
90003420:	4418      	add	r0, r3
    return strncmp(src, str, num);
90003422:	f026 ff2b 	bl	9002a27c <strncmp>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90003426:	2800      	cmp	r0, #0
90003428:	d03e      	beq.n	900034a8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1c4>
9000342a:	f1b9 0f00 	cmp.w	r9, #0
9000342e:	d13e      	bne.n	900034ae <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1ca>
90003430:	6aab      	ldr	r3, [r5, #40]	; 0x28
90003432:	42a3      	cmp	r3, r4
90003434:	f240 80b1 	bls.w	9000359a <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x2b6>
        const uint32_t listSize = getU32(listOffset + 4) + 8;
90003438:	3404      	adds	r4, #4
    if (reader != 0)
9000343a:	2e00      	cmp	r6, #0
9000343c:	d046      	beq.n	900034cc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1e8>
        const uint32_t index = offset - aviBufferStartOffset;
9000343e:	6bea      	ldr	r2, [r5, #60]	; 0x3c
        if (length > aviBufferLength)
90003440:	e9d5 130d 	ldrd	r1, r3, [r5, #52]	; 0x34
        const uint32_t index = offset - aviBufferStartOffset;
90003444:	1aa4      	subs	r4, r4, r2
        if (length > aviBufferLength)
90003446:	2b0b      	cmp	r3, #11
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90003448:	eb01 0204 	add.w	r2, r1, r4
9000344c:	5d09      	ldrb	r1, [r1, r4]
9000344e:	7894      	ldrb	r4, [r2, #2]
90003450:	7850      	ldrb	r0, [r2, #1]
90003452:	ea4f 4404 	mov.w	r4, r4, lsl #16
90003456:	78d2      	ldrb	r2, [r2, #3]
90003458:	ea44 2400 	orr.w	r4, r4, r0, lsl #8
9000345c:	ea44 0401 	orr.w	r4, r4, r1
90003460:	ea44 6402 	orr.w	r4, r4, r2, lsl #24
        listOffset += listSize;
90003464:	4444      	add	r4, r8
        if (length > aviBufferLength)
90003466:	f240 81b2 	bls.w	900037ce <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4ea>
        reader->seek(offset);
9000346a:	6833      	ldr	r3, [r6, #0]
9000346c:	4621      	mov	r1, r4
9000346e:	4630      	mov	r0, r6
90003470:	68db      	ldr	r3, [r3, #12]
90003472:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90003474:	6b28      	ldr	r0, [r5, #48]	; 0x30
90003476:	220c      	movs	r2, #12
90003478:	6b69      	ldr	r1, [r5, #52]	; 0x34
9000347a:	6803      	ldr	r3, [r0, #0]
9000347c:	691b      	ldr	r3, [r3, #16]
9000347e:	4798      	blx	r3
90003480:	b910      	cbnz	r0, 90003488 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1a4>
            lastError = AVI_ERROR_EOF_REACHED;
90003482:	230d      	movs	r3, #13
90003484:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
        aviBufferStartOffset = offset;
90003488:	6b2e      	ldr	r6, [r5, #48]	; 0x30
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
9000348a:	f104 0808 	add.w	r8, r4, #8
9000348e:	f895 9040 	ldrb.w	r9, [r5, #64]	; 0x40
        aviBufferStartOffset = offset;
90003492:	63ec      	str	r4, [r5, #60]	; 0x3c
    if (reader != 0)
90003494:	2e00      	cmp	r6, #0
90003496:	d1bd      	bne.n	90003414 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x130>
        src = (const char*)movieData + offset;
90003498:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
    return strncmp(src, str, num);
9000349a:	2204      	movs	r2, #4
9000349c:	4639      	mov	r1, r7
        src = (const char*)movieData + offset;
9000349e:	4440      	add	r0, r8
    return strncmp(src, str, num);
900034a0:	f026 feec 	bl	9002a27c <strncmp>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
900034a4:	2800      	cmp	r0, #0
900034a6:	d1c0      	bne.n	9000342a <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x146>
    if (lastError != AVI_NO_ERROR)
900034a8:	f1b9 0f00 	cmp.w	r9, #0
900034ac:	d075      	beq.n	9000359a <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x2b6>
        lastError = AVI_ERROR_MOVI_NOT_FOUND;
900034ae:	230a      	movs	r3, #10
900034b0:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
}
900034b4:	b003      	add	sp, #12
900034b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
            lastError = AVI_ERROR_EOF_REACHED;
900034ba:	230d      	movs	r3, #13
900034bc:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
900034c0:	e72d      	b.n	9000331e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x3a>
    offset += 4;
900034c2:	f107 0018 	add.w	r0, r7, #24
    bool foundFrame = true;
900034c6:	f04f 0b01 	mov.w	fp, #1
900034ca:	e776      	b.n	900033ba <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xd6>
        volatile const uint8_t* const d = movieData + offset;
900034cc:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
900034ce:	191a      	adds	r2, r3, r4
        val |= d[0];
900034d0:	5d1b      	ldrb	r3, [r3, r4]
        val |= d[1] << 8;
900034d2:	7851      	ldrb	r1, [r2, #1]
        val |= d[2] << 16;
900034d4:	7894      	ldrb	r4, [r2, #2]
        val |= d[3] << 24;
900034d6:	78d2      	ldrb	r2, [r2, #3]
        val |= d[2] << 16;
900034d8:	0424      	lsls	r4, r4, #16
        val |= d[3] << 24;
900034da:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
900034de:	ea44 2401 	orr.w	r4, r4, r1, lsl #8
900034e2:	431c      	orrs	r4, r3
        listOffset += listSize;
900034e4:	4444      	add	r4, r8
    return movieData + offset;
900034e6:	e791      	b.n	9000340c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x128>
    if (foundFrame)
900034e8:	f1bb 0f00 	cmp.w	fp, #0
900034ec:	f43f af70 	beq.w	900033d0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xec>
        offset += 8; /* skip fourcc and cb in AVIMAINHEADER */
900034f0:	f107 0120 	add.w	r1, r7, #32
    if (reader != 0)
900034f4:	f1b9 0f00 	cmp.w	r9, #0
900034f8:	f000 8125 	beq.w	90003746 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x462>
        const uint32_t index = offset - aviBufferStartOffset;
900034fc:	6beb      	ldr	r3, [r5, #60]	; 0x3c
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900034fe:	6b6a      	ldr	r2, [r5, #52]	; 0x34
        const uint32_t index = offset - aviBufferStartOffset;
90003500:	1ac9      	subs	r1, r1, r3
90003502:	f1c3 0030 	rsb	r0, r3, #48	; 0x30
        videoInfo.ms_between_frames = getU32(offset) / 1000;
90003506:	f8df c158 	ldr.w	ip, [pc, #344]	; 90003660 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x37c>
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
9000350a:	f812 a001 	ldrb.w	sl, [r2, r1]
9000350e:	eb02 0e01 	add.w	lr, r2, r1
        const uint32_t index = offset - aviBufferStartOffset;
90003512:	f1c3 0140 	rsb	r1, r3, #64	; 0x40
90003516:	f1c3 0344 	rsb	r3, r3, #68	; 0x44
9000351a:	4438      	add	r0, r7
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
9000351c:	f89e b001 	ldrb.w	fp, [lr, #1]
        const uint32_t index = offset - aviBufferStartOffset;
90003520:	4439      	add	r1, r7
90003522:	441f      	add	r7, r3
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90003524:	f89e 3002 	ldrb.w	r3, [lr, #2]
90003528:	f89e e003 	ldrb.w	lr, [lr, #3]
9000352c:	041b      	lsls	r3, r3, #16
9000352e:	ea43 230b 	orr.w	r3, r3, fp, lsl #8
90003532:	ea43 030a 	orr.w	r3, r3, sl
90003536:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
        videoInfo.ms_between_frames = getU32(offset) / 1000;
9000353a:	fbac c303 	umull	ip, r3, ip, r3
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
9000353e:	eb02 0c00 	add.w	ip, r2, r0
        videoInfo.ms_between_frames = getU32(offset) / 1000;
90003542:	099b      	lsrs	r3, r3, #6
90003544:	606b      	str	r3, [r5, #4]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90003546:	f89c 3002 	ldrb.w	r3, [ip, #2]
9000354a:	f89c a001 	ldrb.w	sl, [ip, #1]
9000354e:	041b      	lsls	r3, r3, #16
90003550:	f812 e000 	ldrb.w	lr, [r2, r0]
90003554:	f89c c003 	ldrb.w	ip, [ip, #3]
90003558:	1850      	adds	r0, r2, r1
9000355a:	ea43 230a 	orr.w	r3, r3, sl, lsl #8
9000355e:	ea43 030e 	orr.w	r3, r3, lr
90003562:	ea43 630c 	orr.w	r3, r3, ip, lsl #24
        videoInfo.number_of_frames = getU32(offset + 16);
90003566:	60ab      	str	r3, [r5, #8]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90003568:	7883      	ldrb	r3, [r0, #2]
9000356a:	f890 c001 	ldrb.w	ip, [r0, #1]
9000356e:	041b      	lsls	r3, r3, #16
90003570:	5c51      	ldrb	r1, [r2, r1]
90003572:	ea43 230c 	orr.w	r3, r3, ip, lsl #8
90003576:	430b      	orrs	r3, r1
90003578:	78c1      	ldrb	r1, [r0, #3]
9000357a:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
9000357e:	19d1      	adds	r1, r2, r7
        videoInfo.frame_width = getU32(offset + 32);
90003580:	60eb      	str	r3, [r5, #12]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90003582:	788b      	ldrb	r3, [r1, #2]
90003584:	7848      	ldrb	r0, [r1, #1]
90003586:	041b      	lsls	r3, r3, #16
90003588:	5dd2      	ldrb	r2, [r2, r7]
9000358a:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
9000358e:	4313      	orrs	r3, r2
90003590:	78ca      	ldrb	r2, [r1, #3]
90003592:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
        videoInfo.frame_height = getU32(offset + 36);
90003596:	612b      	str	r3, [r5, #16]
90003598:	e71a      	b.n	900033d0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xec>
    currentMovieOffset = listOffset + 8 + 4; /* skip LIST and 'movi' */
9000359a:	f104 030c 	add.w	r3, r4, #12
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
9000359e:	3404      	adds	r4, #4
    currentMovieOffset = listOffset + 8 + 4; /* skip LIST and 'movi' */
900035a0:	61ab      	str	r3, [r5, #24]
    if (reader != 0)
900035a2:	2e00      	cmp	r6, #0
900035a4:	f000 80b4 	beq.w	90003710 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x42c>
        const uint32_t index = offset - aviBufferStartOffset;
900035a8:	6beb      	ldr	r3, [r5, #60]	; 0x3c
900035aa:	1ae4      	subs	r4, r4, r3
        if (length > aviBufferLength)
900035ac:	e9d5 120d 	ldrd	r1, r2, [r5, #52]	; 0x34
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900035b0:	f104 0c02 	add.w	ip, r4, #2
900035b4:	1c67      	adds	r7, r4, #1
900035b6:	f811 e004 	ldrb.w	lr, [r1, r4]
900035ba:	1ce0      	adds	r0, r4, #3
900035bc:	f811 300c 	ldrb.w	r3, [r1, ip]
        if (length > aviBufferLength)
900035c0:	2a03      	cmp	r2, #3
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900035c2:	f811 9007 	ldrb.w	r9, [r1, r7]
900035c6:	ea4f 4303 	mov.w	r3, r3, lsl #16
900035ca:	ea43 2309 	orr.w	r3, r3, r9, lsl #8
900035ce:	ea43 030e 	orr.w	r3, r3, lr
900035d2:	f811 e000 	ldrb.w	lr, [r1, r0]
900035d6:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
900035da:	4443      	add	r3, r8
900035dc:	626b      	str	r3, [r5, #36]	; 0x24
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900035de:	f811 300c 	ldrb.w	r3, [r1, ip]
900035e2:	f811 c007 	ldrb.w	ip, [r1, r7]
900035e6:	5d0f      	ldrb	r7, [r1, r4]
900035e8:	ea4f 4403 	mov.w	r4, r3, lsl #16
900035ec:	5c09      	ldrb	r1, [r1, r0]
900035ee:	ea44 240c 	orr.w	r4, r4, ip, lsl #8
900035f2:	ea44 0407 	orr.w	r4, r4, r7
900035f6:	ea44 6401 	orr.w	r4, r4, r1, lsl #24
    listOffset += listSize;
900035fa:	4444      	add	r4, r8
        if (length > aviBufferLength)
900035fc:	f240 80e7 	bls.w	900037ce <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4ea>
        reader->seek(offset);
90003600:	6833      	ldr	r3, [r6, #0]
90003602:	4621      	mov	r1, r4
90003604:	4630      	mov	r0, r6
90003606:	68db      	ldr	r3, [r3, #12]
90003608:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
9000360a:	6b28      	ldr	r0, [r5, #48]	; 0x30
9000360c:	2204      	movs	r2, #4
9000360e:	6b69      	ldr	r1, [r5, #52]	; 0x34
90003610:	6803      	ldr	r3, [r0, #0]
90003612:	691b      	ldr	r3, [r3, #16]
90003614:	4798      	blx	r3
90003616:	2800      	cmp	r0, #0
90003618:	d06a      	beq.n	900036f0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x40c>
    if (reader != 0)
9000361a:	6b2b      	ldr	r3, [r5, #48]	; 0x30
        aviBufferStartOffset = offset;
9000361c:	63ec      	str	r4, [r5, #60]	; 0x3c
    if (reader != 0)
9000361e:	2b00      	cmp	r3, #0
90003620:	f000 8103 	beq.w	9000382a <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x546>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90003624:	6b68      	ldr	r0, [r5, #52]	; 0x34
    return strncmp(src, str, num);
90003626:	2204      	movs	r2, #4
90003628:	490c      	ldr	r1, [pc, #48]	; (9000365c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x378>)
9000362a:	f026 fe27 	bl	9002a27c <strncmp>
    if (!compare(listOffset, "idx1", 4))
9000362e:	2800      	cmp	r0, #0
90003630:	d168      	bne.n	90003704 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x420>
    frameNumber = 1; /* next frame number is 1 */
90003632:	2201      	movs	r2, #1
    firstFrameOffset = currentMovieOffset;
90003634:	69ab      	ldr	r3, [r5, #24]
        indexOffset = listOffset;
90003636:	61ec      	str	r4, [r5, #28]
    frameNumber = 1; /* next frame number is 1 */
90003638:	616a      	str	r2, [r5, #20]
    firstFrameOffset = currentMovieOffset;
9000363a:	622b      	str	r3, [r5, #32]
}
9000363c:	b003      	add	sp, #12
9000363e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90003642:	bf00      	nop
90003644:	9002b5f0 	.word	0x9002b5f0
90003648:	9002b6a8 	.word	0x9002b6a8
9000364c:	9002b6a0 	.word	0x9002b6a0
90003650:	9002b698 	.word	0x9002b698
90003654:	9002b680 	.word	0x9002b680
90003658:	9002b688 	.word	0x9002b688
9000365c:	9002b690 	.word	0x9002b690
90003660:	10624dd3 	.word	0x10624dd3
    if (compare(currentMovieOffset, "RIFF", 4))
90003664:	4637      	mov	r7, r6
        src = (const char*)movieData + offset;
90003666:	f8d5 902c 	ldr.w	r9, [r5, #44]	; 0x2c
    return strncmp(src, str, num);
9000366a:	2204      	movs	r2, #4
9000366c:	4970      	ldr	r1, [pc, #448]	; (90003830 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x54c>)
9000366e:	eb09 0007 	add.w	r0, r9, r7
90003672:	f026 fe03 	bl	9002a27c <strncmp>
    if (compare(currentMovieOffset, "RIFF", 4))
90003676:	2800      	cmp	r0, #0
90003678:	f040 80b2 	bne.w	900037e0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4fc>
    currentMovieOffset += 8;
9000367c:	f107 0008 	add.w	r0, r7, #8
    return strncmp(src, str, num);
90003680:	2204      	movs	r2, #4
90003682:	496c      	ldr	r1, [pc, #432]	; (90003834 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x550>)
    currentMovieOffset += 8;
90003684:	61a8      	str	r0, [r5, #24]
    return strncmp(src, str, num);
90003686:	4448      	add	r0, r9
90003688:	f026 fdf8 	bl	9002a27c <strncmp>
    if (compare(currentMovieOffset, "AVI ", 4))
9000368c:	2800      	cmp	r0, #0
9000368e:	f040 80c2 	bne.w	90003816 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x532>
    currentMovieOffset += 4;
90003692:	f107 080c 	add.w	r8, r7, #12
    return strncmp(src, str, num);
90003696:	2204      	movs	r2, #4
90003698:	4967      	ldr	r1, [pc, #412]	; (90003838 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x554>)
9000369a:	eb09 0008 	add.w	r0, r9, r8
    currentMovieOffset += 4;
9000369e:	f8c5 8018 	str.w	r8, [r5, #24]
    return strncmp(src, str, num);
900036a2:	f026 fdeb 	bl	9002a27c <strncmp>
    if (compare(currentMovieOffset, "LIST", 4))
900036a6:	4683      	mov	fp, r0
900036a8:	2800      	cmp	r0, #0
900036aa:	f040 80aa 	bne.w	90003802 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x51e>
    const uint32_t aviListSize = getU32(currentMovieOffset + 4);
900036ae:	f107 0310 	add.w	r3, r7, #16
        volatile const uint8_t* const d = movieData + offset;
900036b2:	eb09 0203 	add.w	r2, r9, r3
        val |= d[0];
900036b6:	f819 3003 	ldrb.w	r3, [r9, r3]
        val |= d[1] << 8;
900036ba:	7851      	ldrb	r1, [r2, #1]
        val |= d[2] << 16;
900036bc:	7894      	ldrb	r4, [r2, #2]
        val |= d[3] << 24;
900036be:	78d2      	ldrb	r2, [r2, #3]
        val |= d[2] << 16;
900036c0:	0424      	lsls	r4, r4, #16
        val |= d[3] << 24;
900036c2:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
900036c6:	ea44 2401 	orr.w	r4, r4, r1, lsl #8
    assert(aviListSize);
900036ca:	431c      	orrs	r4, r3
900036cc:	f000 8092 	beq.w	900037f4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x510>
    uint32_t offset =  currentMovieOffset + 8;
900036d0:	f107 0014 	add.w	r0, r7, #20
    return strncmp(src, str, num);
900036d4:	2204      	movs	r2, #4
900036d6:	4959      	ldr	r1, [pc, #356]	; (9000383c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x558>)
900036d8:	4448      	add	r0, r9
900036da:	f026 fdcf 	bl	9002a27c <strncmp>
    if (compare(offset, "hdrl", 4))
900036de:	b958      	cbnz	r0, 900036f8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x414>
    offset += 4;
900036e0:	f107 0018 	add.w	r0, r7, #24
    bool foundFrame = true;
900036e4:	f04f 0b01 	mov.w	fp, #1
        src = (const char*)movieData + offset;
900036e8:	4448      	add	r0, r9
900036ea:	f04f 0900 	mov.w	r9, #0
900036ee:	e665      	b.n	900033bc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xd8>
            lastError = AVI_ERROR_EOF_REACHED;
900036f0:	230d      	movs	r3, #13
900036f2:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
900036f6:	e790      	b.n	9000361a <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x336>
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
900036f8:	2306      	movs	r3, #6
    offset += 4;
900036fa:	f107 0018 	add.w	r0, r7, #24
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
900036fe:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
    if (reader != 0)
90003702:	e7f1      	b.n	900036e8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x404>
        lastError = AVI_ERROR_IDX1_NOT_FOUND;
90003704:	230b      	movs	r3, #11
90003706:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
}
9000370a:	b003      	add	sp, #12
9000370c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90003710:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
        volatile const uint8_t* const d = movieData + offset;
90003712:	1902      	adds	r2, r0, r4
        val |= d[0];
90003714:	5d01      	ldrb	r1, [r0, r4]
        val |= d[1] << 8;
90003716:	7856      	ldrb	r6, [r2, #1]
        val |= d[2] << 16;
90003718:	7893      	ldrb	r3, [r2, #2]
9000371a:	041b      	lsls	r3, r3, #16
        val |= d[3] << 24;
9000371c:	ea43 2306 	orr.w	r3, r3, r6, lsl #8
90003720:	78d6      	ldrb	r6, [r2, #3]
90003722:	ea41 6106 	orr.w	r1, r1, r6, lsl #24
90003726:	430b      	orrs	r3, r1
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
90003728:	4443      	add	r3, r8
9000372a:	626b      	str	r3, [r5, #36]	; 0x24
        val |= d[0];
9000372c:	5d03      	ldrb	r3, [r0, r4]
        val |= d[1] << 8;
9000372e:	7851      	ldrb	r1, [r2, #1]
        val |= d[2] << 16;
90003730:	7894      	ldrb	r4, [r2, #2]
        val |= d[3] << 24;
90003732:	78d2      	ldrb	r2, [r2, #3]
        val |= d[2] << 16;
90003734:	0424      	lsls	r4, r4, #16
        val |= d[3] << 24;
90003736:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
9000373a:	ea44 2401 	orr.w	r4, r4, r1, lsl #8
9000373e:	431c      	orrs	r4, r3
    listOffset += listSize;
90003740:	4444      	add	r4, r8
        src = (const char*)movieData + offset;
90003742:	4420      	add	r0, r4
90003744:	e76f      	b.n	90003626 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x342>
90003746:	6aea      	ldr	r2, [r5, #44]	; 0x2c
        videoInfo.number_of_frames = getU32(offset + 16);
90003748:	f107 0e30 	add.w	lr, r7, #48	; 0x30
        videoInfo.frame_width = getU32(offset + 32);
9000374c:	f107 0c40 	add.w	ip, r7, #64	; 0x40
        videoInfo.frame_height = getU32(offset + 36);
90003750:	3744      	adds	r7, #68	; 0x44
        volatile const uint8_t* const d = movieData + offset;
90003752:	1850      	adds	r0, r2, r1
        val |= d[0];
90003754:	f812 b001 	ldrb.w	fp, [r2, r1]
        volatile const uint8_t* const d = movieData + offset;
90003758:	eb02 010e 	add.w	r1, r2, lr
        val |= d[1] << 8;
9000375c:	f890 a001 	ldrb.w	sl, [r0, #1]
        val |= d[2] << 16;
90003760:	7883      	ldrb	r3, [r0, #2]
        val |= d[3] << 24;
90003762:	78c0      	ldrb	r0, [r0, #3]
        val |= d[2] << 16;
90003764:	041b      	lsls	r3, r3, #16
        val |= d[3] << 24;
90003766:	ea4b 6000 	orr.w	r0, fp, r0, lsl #24
9000376a:	ea43 230a 	orr.w	r3, r3, sl, lsl #8
9000376e:	4303      	orrs	r3, r0
        videoInfo.ms_between_frames = getU32(offset) / 1000;
90003770:	4833      	ldr	r0, [pc, #204]	; (90003840 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x55c>)
90003772:	fba0 0303 	umull	r0, r3, r0, r3
90003776:	099b      	lsrs	r3, r3, #6
90003778:	606b      	str	r3, [r5, #4]
        val |= d[0];
9000377a:	f812 000e 	ldrb.w	r0, [r2, lr]
        val |= d[1] << 8;
9000377e:	f891 e001 	ldrb.w	lr, [r1, #1]
        val |= d[2] << 16;
90003782:	788b      	ldrb	r3, [r1, #2]
        val |= d[3] << 24;
90003784:	78c9      	ldrb	r1, [r1, #3]
        val |= d[2] << 16;
90003786:	041b      	lsls	r3, r3, #16
        val |= d[3] << 24;
90003788:	ea40 6101 	orr.w	r1, r0, r1, lsl #24
9000378c:	ea43 230e 	orr.w	r3, r3, lr, lsl #8
        volatile const uint8_t* const d = movieData + offset;
90003790:	eb02 0e0c 	add.w	lr, r2, ip
        val |= d[3] << 24;
90003794:	430b      	orrs	r3, r1
        volatile const uint8_t* const d = movieData + offset;
90003796:	19d1      	adds	r1, r2, r7
        videoInfo.number_of_frames = getU32(offset + 16);
90003798:	60ab      	str	r3, [r5, #8]
        val |= d[0];
9000379a:	f812 000c 	ldrb.w	r0, [r2, ip]
        val |= d[1] << 8;
9000379e:	f89e c001 	ldrb.w	ip, [lr, #1]
        val |= d[2] << 16;
900037a2:	f89e 3002 	ldrb.w	r3, [lr, #2]
        val |= d[3] << 24;
900037a6:	f89e e003 	ldrb.w	lr, [lr, #3]
        val |= d[2] << 16;
900037aa:	041b      	lsls	r3, r3, #16
        val |= d[3] << 24;
900037ac:	ea40 600e 	orr.w	r0, r0, lr, lsl #24
900037b0:	ea43 230c 	orr.w	r3, r3, ip, lsl #8
900037b4:	4303      	orrs	r3, r0
        videoInfo.frame_width = getU32(offset + 32);
900037b6:	60eb      	str	r3, [r5, #12]
        val |= d[0];
900037b8:	5dd2      	ldrb	r2, [r2, r7]
        val |= d[1] << 8;
900037ba:	7848      	ldrb	r0, [r1, #1]
        val |= d[2] << 16;
900037bc:	788b      	ldrb	r3, [r1, #2]
        val |= d[3] << 24;
900037be:	78c9      	ldrb	r1, [r1, #3]
        val |= d[2] << 16;
900037c0:	041b      	lsls	r3, r3, #16
        val |= d[3] << 24;
900037c2:	ea42 6201 	orr.w	r2, r2, r1, lsl #24
900037c6:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
900037ca:	4313      	orrs	r3, r2
        return val;
900037cc:	e6e3      	b.n	90003596 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x2b2>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
900037ce:	2009      	movs	r0, #9
            assert(!"Buffer to small");
900037d0:	4b1c      	ldr	r3, [pc, #112]	; (90003844 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x560>)
900037d2:	4a1d      	ldr	r2, [pc, #116]	; (90003848 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x564>)
900037d4:	219f      	movs	r1, #159	; 0x9f
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
900037d6:	f885 0040 	strb.w	r0, [r5, #64]	; 0x40
            assert(!"Buffer to small");
900037da:	481c      	ldr	r0, [pc, #112]	; (9000384c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x568>)
900037dc:	f026 fa4e 	bl	90029c7c <__assert_func>
        lastError = AVI_ERROR_NOT_RIFF;
900037e0:	2003      	movs	r0, #3
        assert(!"RIFF header not found");
900037e2:	4b1b      	ldr	r3, [pc, #108]	; (90003850 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x56c>)
900037e4:	4a1b      	ldr	r2, [pc, #108]	; (90003854 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x570>)
900037e6:	f240 112d 	movw	r1, #301	; 0x12d
        lastError = AVI_ERROR_NOT_RIFF;
900037ea:	f885 0040 	strb.w	r0, [r5, #64]	; 0x40
        assert(!"RIFF header not found");
900037ee:	4817      	ldr	r0, [pc, #92]	; (9000384c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x568>)
900037f0:	f026 fa44 	bl	90029c7c <__assert_func>
    assert(aviListSize);
900037f4:	4b18      	ldr	r3, [pc, #96]	; (90003858 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x574>)
900037f6:	f44f 71a1 	mov.w	r1, #322	; 0x142
900037fa:	4a16      	ldr	r2, [pc, #88]	; (90003854 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x570>)
900037fc:	4813      	ldr	r0, [pc, #76]	; (9000384c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x568>)
900037fe:	f026 fa3d 	bl	90029c7c <__assert_func>
        lastError = AVI_ERROR_AVI_LIST_NOT_FOUND;
90003802:	2005      	movs	r0, #5
        assert(!"AVI LIST not found");
90003804:	4b15      	ldr	r3, [pc, #84]	; (9000385c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x578>)
90003806:	4a13      	ldr	r2, [pc, #76]	; (90003854 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x570>)
90003808:	f44f 719e 	mov.w	r1, #316	; 0x13c
        lastError = AVI_ERROR_AVI_LIST_NOT_FOUND;
9000380c:	f885 0040 	strb.w	r0, [r5, #64]	; 0x40
        assert(!"AVI LIST not found");
90003810:	480e      	ldr	r0, [pc, #56]	; (9000384c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x568>)
90003812:	f026 fa33 	bl	90029c7c <__assert_func>
        lastError = AVI_ERROR_AVI_HEADER_NOT_FOUND;
90003816:	2004      	movs	r0, #4
        assert(!"AVI header not found");
90003818:	4b11      	ldr	r3, [pc, #68]	; (90003860 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x57c>)
9000381a:	4a0e      	ldr	r2, [pc, #56]	; (90003854 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x570>)
9000381c:	f240 1135 	movw	r1, #309	; 0x135
        lastError = AVI_ERROR_AVI_HEADER_NOT_FOUND;
90003820:	f885 0040 	strb.w	r0, [r5, #64]	; 0x40
        assert(!"AVI header not found");
90003824:	4809      	ldr	r0, [pc, #36]	; (9000384c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x568>)
90003826:	f026 fa29 	bl	90029c7c <__assert_func>
        src = (const char*)movieData + offset;
9000382a:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
9000382c:	4420      	add	r0, r4
9000382e:	e6fa      	b.n	90003626 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x342>
90003830:	9002b5f0 	.word	0x9002b5f0
90003834:	9002b6a8 	.word	0x9002b6a8
90003838:	9002b6a0 	.word	0x9002b6a0
9000383c:	9002b698 	.word	0x9002b698
90003840:	10624dd3 	.word	0x10624dd3
90003844:	9002b4bc 	.word	0x9002b4bc
90003848:	9002b4d0 	.word	0x9002b4d0
9000384c:	9002b46c 	.word	0x9002b46c
90003850:	9002b5f8 	.word	0x9002b5f8
90003854:	9002b614 	.word	0x9002b614
90003858:	9002b674 	.word	0x9002b674
9000385c:	9002b65c 	.word	0x9002b65c
90003860:	9002b644 	.word	0x9002b644

90003864 <_ZN20HardwareMJPEGDecoder12setVideoDataEPKhm>:
{
90003864:	b410      	push	{r4}
    reader = 0; /* not using reader */
90003866:	2400      	movs	r4, #0
    movieLength = length;
90003868:	e9c0 210a 	strd	r2, r1, [r0, #40]	; 0x28
    reader = 0; /* not using reader */
9000386c:	6304      	str	r4, [r0, #48]	; 0x30
}
9000386e:	f85d 4b04 	ldr.w	r4, [sp], #4
    readVideoHeader();
90003872:	f7ff bd37 	b.w	900032e4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>
90003876:	bf00      	nop

90003878 <_ZN20HardwareMJPEGDecoder12setVideoDataERN8touchgfx15VideoDataReaderE>:
{
90003878:	b510      	push	{r4, lr}
    movieLength = reader.getDataLength();
9000387a:	680b      	ldr	r3, [r1, #0]
{
9000387c:	4604      	mov	r4, r0
    movieData = 0;
9000387e:	2200      	movs	r2, #0
    movieLength = reader.getDataLength();
90003880:	4608      	mov	r0, r1
90003882:	689b      	ldr	r3, [r3, #8]
    movieData = 0;
90003884:	e9c4 210b 	strd	r2, r1, [r4, #44]	; 0x2c
    movieLength = reader.getDataLength();
90003888:	4798      	blx	r3
9000388a:	4603      	mov	r3, r0
    readVideoHeader();
9000388c:	4620      	mov	r0, r4
    movieLength = reader.getDataLength();
9000388e:	62a3      	str	r3, [r4, #40]	; 0x28
}
90003890:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    readVideoHeader();
90003894:	f7ff bd26 	b.w	900032e4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>

90003898 <HAL_JPEG_InfoReadyCallback>:
        if (pInfo->ChromaSubsampling == JPEG_420_SUBSAMPLING)
90003898:	684b      	ldr	r3, [r1, #4]
9000389a:	2b01      	cmp	r3, #1
9000389c:	d015      	beq.n	900038ca <HAL_JPEG_InfoReadyCallback+0x32>
            if (pInfo->ChromaSubsampling == JPEG_422_SUBSAMPLING)
9000389e:	2b02      	cmp	r3, #2
900038a0:	d00b      	beq.n	900038ba <HAL_JPEG_InfoReadyCallback+0x22>
            if (pInfo->ChromaSubsampling == JPEG_444_SUBSAMPLING)
900038a2:	b94b      	cbnz	r3, 900038b8 <HAL_JPEG_InfoReadyCallback+0x20>
                if ((pInfo->ImageWidth % 8) != 0)
900038a4:	68cb      	ldr	r3, [r1, #12]
900038a6:	0758      	lsls	r0, r3, #29
900038a8:	d124      	bne.n	900038f4 <HAL_JPEG_InfoReadyCallback+0x5c>
                if ((pInfo->ImageHeight % 8) != 0)
900038aa:	688b      	ldr	r3, [r1, #8]
900038ac:	075a      	lsls	r2, r3, #29
900038ae:	d003      	beq.n	900038b8 <HAL_JPEG_InfoReadyCallback+0x20>
                    pInfo->ImageHeight += (8 - (pInfo->ImageHeight % 8));
900038b0:	f023 0307 	bic.w	r3, r3, #7
900038b4:	3308      	adds	r3, #8
900038b6:	608b      	str	r3, [r1, #8]
    }
900038b8:	4770      	bx	lr
                if ((pInfo->ImageWidth % 16) != 0)
900038ba:	68cb      	ldr	r3, [r1, #12]
900038bc:	071a      	lsls	r2, r3, #28
900038be:	d0f4      	beq.n	900038aa <HAL_JPEG_InfoReadyCallback+0x12>
                    pInfo->ImageWidth += (16 - (pInfo->ImageWidth % 16));
900038c0:	f023 030f 	bic.w	r3, r3, #15
900038c4:	3310      	adds	r3, #16
900038c6:	60cb      	str	r3, [r1, #12]
900038c8:	e7ef      	b.n	900038aa <HAL_JPEG_InfoReadyCallback+0x12>
            if ((pInfo->ImageWidth % 16) != 0)
900038ca:	68cb      	ldr	r3, [r1, #12]
900038cc:	071a      	lsls	r2, r3, #28
900038ce:	d003      	beq.n	900038d8 <HAL_JPEG_InfoReadyCallback+0x40>
                pInfo->ImageWidth += (16 - (pInfo->ImageWidth % 16));
900038d0:	f023 030f 	bic.w	r3, r3, #15
900038d4:	3310      	adds	r3, #16
900038d6:	60cb      	str	r3, [r1, #12]
            if ((pInfo->ImageHeight % 16) != 0)
900038d8:	688a      	ldr	r2, [r1, #8]
900038da:	0710      	lsls	r0, r2, #28
900038dc:	d003      	beq.n	900038e6 <HAL_JPEG_InfoReadyCallback+0x4e>
                pInfo->ImageHeight += (16 - (pInfo->ImageHeight % 16));
900038de:	f022 020f 	bic.w	r2, r2, #15
900038e2:	3210      	adds	r2, #16
900038e4:	608a      	str	r2, [r1, #8]
            hMCU = (pInfo->ImageWidth / MCU_WIDTH_PIXELS);
900038e6:	091b      	lsrs	r3, r3, #4
            MCU_TotalNb = (hMCU * vMCU);
900038e8:	4905      	ldr	r1, [pc, #20]	; (90003900 <HAL_JPEG_InfoReadyCallback+0x68>)
            vMCU = (pInfo->ImageHeight / MCU_HEIGHT_PIXELS);
900038ea:	0912      	lsrs	r2, r2, #4
            MCU_TotalNb = (hMCU * vMCU);
900038ec:	fb02 f303 	mul.w	r3, r2, r3
900038f0:	600b      	str	r3, [r1, #0]
900038f2:	4770      	bx	lr
                    pInfo->ImageWidth += (8 - (pInfo->ImageWidth % 8));
900038f4:	f023 0307 	bic.w	r3, r3, #7
900038f8:	3308      	adds	r3, #8
900038fa:	60cb      	str	r3, [r1, #12]
900038fc:	e7d5      	b.n	900038aa <HAL_JPEG_InfoReadyCallback+0x12>
900038fe:	bf00      	nop
90003900:	24005ba4 	.word	0x24005ba4

90003904 <HAL_JPEG_GetDataCallback>:
    {
90003904:	b410      	push	{r4}
        JPEG_InputImageIndex += NbDecodedData;
90003906:	4c0c      	ldr	r4, [pc, #48]	; (90003938 <HAL_JPEG_GetDataCallback+0x34>)
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
90003908:	4a0c      	ldr	r2, [pc, #48]	; (9000393c <HAL_JPEG_GetDataCallback+0x38>)
        JPEG_InputImageIndex += NbDecodedData;
9000390a:	6823      	ldr	r3, [r4, #0]
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
9000390c:	6812      	ldr	r2, [r2, #0]
        JPEG_InputImageIndex += NbDecodedData;
9000390e:	440b      	add	r3, r1
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
90003910:	4293      	cmp	r3, r2
        JPEG_InputImageIndex += NbDecodedData;
90003912:	6023      	str	r3, [r4, #0]
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
90003914:	d302      	bcc.n	9000391c <HAL_JPEG_GetDataCallback+0x18>
    }
90003916:	f85d 4b04 	ldr.w	r4, [sp], #4
9000391a:	4770      	bx	lr
            uint32_t inDataLength = JPEG_InputImageSize_Bytes - JPEG_InputImageIndex;
9000391c:	1ad2      	subs	r2, r2, r3
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
9000391e:	4b08      	ldr	r3, [pc, #32]	; (90003940 <HAL_JPEG_GetDataCallback+0x3c>)
90003920:	681c      	ldr	r4, [r3, #0]
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
90003922:	f5b2 4f50 	cmp.w	r2, #53248	; 0xd000
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
90003926:	4421      	add	r1, r4
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
90003928:	bf28      	it	cs
9000392a:	f44f 4250 	movcs.w	r2, #53248	; 0xd000
    }
9000392e:	f85d 4b04 	ldr.w	r4, [sp], #4
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
90003932:	6019      	str	r1, [r3, #0]
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
90003934:	f008 b9ec 	b.w	9000bd10 <HAL_JPEG_ConfigInputBuffer>
90003938:	24005bb8 	.word	0x24005bb8
9000393c:	24005bc4 	.word	0x24005bc4
90003940:	24005bc0 	.word	0x24005bc0

90003944 <HAL_JPEG_DataReadyCallback>:
    {
90003944:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
90003946:	4c22      	ldr	r4, [pc, #136]	; (900039d0 <HAL_JPEG_DataReadyCallback+0x8c>)
    {
90003948:	4606      	mov	r6, r0
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
9000394a:	4d22      	ldr	r5, [pc, #136]	; (900039d4 <HAL_JPEG_DataReadyCallback+0x90>)
9000394c:	6823      	ldr	r3, [r4, #0]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
9000394e:	6820      	ldr	r0, [r4, #0]
        const uint32_t MCU = MCU_BlockIndex;
90003950:	4921      	ldr	r1, [pc, #132]	; (900039d8 <HAL_JPEG_DataReadyCallback+0x94>)
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
90003952:	011b      	lsls	r3, r3, #4
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
90003954:	eb05 1000 	add.w	r0, r5, r0, lsl #4
        MCU_BlockIndex += JPEG_ConvertorParams.MCU_pr_line;
90003958:	4f20      	ldr	r7, [pc, #128]	; (900039dc <HAL_JPEG_DataReadyCallback+0x98>)
        const uint32_t MCU = MCU_BlockIndex;
9000395a:	f8d1 c000 	ldr.w	ip, [r1]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
9000395e:	6082      	str	r2, [r0, #8]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].MCU_index = MCU;
90003960:	6820      	ldr	r0, [r4, #0]
        MCU_BlockIndex += JPEG_ConvertorParams.MCU_pr_line;
90003962:	68fa      	ldr	r2, [r7, #12]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].MCU_index = MCU;
90003964:	eb05 1000 	add.w	r0, r5, r0, lsl #4
90003968:	f8c0 c00c 	str.w	ip, [r0, #12]
        MCU_BlockIndex += JPEG_ConvertorParams.MCU_pr_line;
9000396c:	6808      	ldr	r0, [r1, #0]
9000396e:	4410      	add	r0, r2
90003970:	6008      	str	r0, [r1, #0]
        JPEG_OUT_Write_BufferIndex++;
90003972:	6821      	ldr	r1, [r4, #0]
90003974:	3101      	adds	r1, #1
90003976:	6021      	str	r1, [r4, #0]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
90003978:	2101      	movs	r1, #1
9000397a:	54e9      	strb	r1, [r5, r3]
        if (JPEG_OUT_Write_BufferIndex >= NB_OUTPUT_DATA_BUFFERS)
9000397c:	6823      	ldr	r3, [r4, #0]
9000397e:	428b      	cmp	r3, r1
90003980:	d901      	bls.n	90003986 <HAL_JPEG_DataReadyCallback+0x42>
            JPEG_OUT_Write_BufferIndex = 0;
90003982:	2300      	movs	r3, #0
90003984:	6023      	str	r3, [r4, #0]
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State != JPEG_BUFFER_EMPTY)
90003986:	6823      	ldr	r3, [r4, #0]
90003988:	011b      	lsls	r3, r3, #4
9000398a:	5ceb      	ldrb	r3, [r5, r3]
9000398c:	b983      	cbnz	r3, 900039b0 <HAL_JPEG_DataReadyCallback+0x6c>
        HAL_JPEG_ConfigOutputBuffer(hjpeg, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
9000398e:	6823      	ldr	r3, [r4, #0]
90003990:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90003994:	4630      	mov	r0, r6
90003996:	eb05 1503 	add.w	r5, r5, r3, lsl #4
9000399a:	01d2      	lsls	r2, r2, #7
9000399c:	6869      	ldr	r1, [r5, #4]
9000399e:	f008 f9bb 	bl	9000bd18 <HAL_JPEG_ConfigOutputBuffer>
        if (!DMA2D_reference->isDMARunning() && !DMA2D_reference->getReserved())
900039a2:	4b0f      	ldr	r3, [pc, #60]	; (900039e0 <HAL_JPEG_DataReadyCallback+0x9c>)
900039a4:	681b      	ldr	r3, [r3, #0]
900039a6:	7a1a      	ldrb	r2, [r3, #8]
900039a8:	b90a      	cbnz	r2, 900039ae <HAL_JPEG_DataReadyCallback+0x6a>
        return isReserved;
900039aa:	7a9b      	ldrb	r3, [r3, #10]
900039ac:	b14b      	cbz	r3, 900039c2 <HAL_JPEG_DataReadyCallback+0x7e>
    }
900039ae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
            HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
900039b0:	2102      	movs	r1, #2
900039b2:	4630      	mov	r0, r6
900039b4:	f008 f974 	bl	9000bca0 <HAL_JPEG_Pause>
            JPEG_output_is_paused = 1;
900039b8:	4b0a      	ldr	r3, [pc, #40]	; (900039e4 <HAL_JPEG_DataReadyCallback+0xa0>)
900039ba:	2101      	movs	r1, #1
        HAL_JPEG_ConfigOutputBuffer(hjpeg, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
900039bc:	68fa      	ldr	r2, [r7, #12]
            JPEG_output_is_paused = 1;
900039be:	6019      	str	r1, [r3, #0]
900039c0:	e7e5      	b.n	9000398e <HAL_JPEG_DataReadyCallback+0x4a>
            SEM_POST(semDecodingDone);
900039c2:	4b09      	ldr	r3, [pc, #36]	; (900039e8 <HAL_JPEG_DataReadyCallback+0xa4>)
900039c4:	6818      	ldr	r0, [r3, #0]
    }
900039c6:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
            SEM_POST(semDecodingDone);
900039ca:	f00d b833 	b.w	90010a34 <osSemaphoreRelease>
900039ce:	bf00      	nop
900039d0:	24005bc8 	.word	0x24005bc8
900039d4:	24000008 	.word	0x24000008
900039d8:	2400018c 	.word	0x2400018c
900039dc:	24005b90 	.word	0x24005b90
900039e0:	24005ba8 	.word	0x24005ba8
900039e4:	24005bbc 	.word	0x24005bbc
900039e8:	24005bcc 	.word	0x24005bcc

900039ec <HAL_JPEG_ErrorCallback>:
  __ASM volatile ("cpsid i" : : : "memory");
900039ec:	b672      	cpsid	i
        while (1)
900039ee:	e7fe      	b.n	900039ee <HAL_JPEG_ErrorCallback+0x2>

900039f0 <HAL_JPEG_DecodeCpltCallback>:
        Jpeg_HWDecodingEnd = 1;
900039f0:	4b01      	ldr	r3, [pc, #4]	; (900039f8 <HAL_JPEG_DecodeCpltCallback+0x8>)
900039f2:	2201      	movs	r2, #1
900039f4:	601a      	str	r2, [r3, #0]
    }
900039f6:	4770      	bx	lr
900039f8:	24005bb4 	.word	0x24005bb4

900039fc <DMA2D_CopyBuffer>:
 * @brief  Configures external DMA2D job to copy YCbCr data to RGB buffer(s)
 * @param job: External job reference
 * @retval None
 */
void DMA2D_CopyBuffer(JPEG_Data_BufferTypeDef& job)
{
900039fc:	b570      	push	{r4, r5, r6, lr}
    uint32_t xRef, yRef, refline;

    yRef = ((job.MCU_index * MCU_WIDTH_PIXELS) / JPEG_ConvertorParams.WidthExtend) * MCU_WIDTH_PIXELS;
900039fe:	491c      	ldr	r1, [pc, #112]	; (90003a70 <DMA2D_CopyBuffer+0x74>)
    xRef = ((job.MCU_index * MCU_WIDTH_PIXELS) % JPEG_ConvertorParams.WidthExtend);

    refline = (JPEG_ConvertorParams.ScaledWidth) * yRef + (JPEG_ConvertorParams.bytes_pr_pixel * xRef);

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90003a00:	2302      	movs	r3, #2
    yRef = ((job.MCU_index * MCU_WIDTH_PIXELS) / JPEG_ConvertorParams.WidthExtend) * MCU_WIDTH_PIXELS;
90003a02:	68c5      	ldr	r5, [r0, #12]
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90003a04:	4c1b      	ldr	r4, [pc, #108]	; (90003a74 <DMA2D_CopyBuffer+0x78>)
    yRef = ((job.MCU_index * MCU_WIDTH_PIXELS) / JPEG_ConvertorParams.WidthExtend) * MCU_WIDTH_PIXELS;
90003a06:	680a      	ldr	r2, [r1, #0]
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90003a08:	6363      	str	r3, [r4, #52]	; 0x34
    yRef = ((job.MCU_index * MCU_WIDTH_PIXELS) / JPEG_ConvertorParams.WidthExtend) * MCU_WIDTH_PIXELS;
90003a0a:	012b      	lsls	r3, r5, #4

    /* Configure DMA2D data size */
    if (job.MCU_index >= (MCU_TotalNb - JPEG_ConvertorParams.MCU_pr_line))  /*  Last line of frame */
90003a0c:	4e1a      	ldr	r6, [pc, #104]	; (90003a78 <DMA2D_CopyBuffer+0x7c>)
    yRef = ((job.MCU_index * MCU_WIDTH_PIXELS) / JPEG_ConvertorParams.WidthExtend) * MCU_WIDTH_PIXELS;
90003a0e:	fbb3 fcf2 	udiv	ip, r3, r2
    xRef = ((job.MCU_index * MCU_WIDTH_PIXELS) % JPEG_ConvertorParams.WidthExtend);
90003a12:	fb02 321c 	mls	r2, r2, ip, r3
    refline = (JPEG_ConvertorParams.ScaledWidth) * yRef + (JPEG_ConvertorParams.bytes_pr_pixel * xRef);
90003a16:	684b      	ldr	r3, [r1, #4]
    if (job.MCU_index >= (MCU_TotalNb - JPEG_ConvertorParams.MCU_pr_line))  /*  Last line of frame */
90003a18:	6836      	ldr	r6, [r6, #0]
    refline = (JPEG_ConvertorParams.ScaledWidth) * yRef + (JPEG_ConvertorParams.bytes_pr_pixel * xRef);
90003a1a:	fb03 fc0c 	mul.w	ip, r3, ip
    if (job.MCU_index >= (MCU_TotalNb - JPEG_ConvertorParams.MCU_pr_line))  /*  Last line of frame */
90003a1e:	68cb      	ldr	r3, [r1, #12]
90003a20:	eba6 0e03 	sub.w	lr, r6, r3
    refline = (JPEG_ConvertorParams.ScaledWidth) * yRef + (JPEG_ConvertorParams.bytes_pr_pixel * xRef);
90003a24:	690e      	ldr	r6, [r1, #16]
90003a26:	ea4f 1c0c 	mov.w	ip, ip, lsl #4
    if (job.MCU_index >= (MCU_TotalNb - JPEG_ConvertorParams.MCU_pr_line))  /*  Last line of frame */
90003a2a:	4575      	cmp	r5, lr
    refline = (JPEG_ConvertorParams.ScaledWidth) * yRef + (JPEG_ConvertorParams.bytes_pr_pixel * xRef);
90003a2c:	fb06 f202 	mul.w	r2, r6, r2
    if (job.MCU_index >= (MCU_TotalNb - JPEG_ConvertorParams.MCU_pr_line))  /*  Last line of frame */
90003a30:	d318      	bcc.n	90003a64 <DMA2D_CopyBuffer+0x68>
    {
        WRITE_REG(DMA2D->NLR, (MCU_HEIGHT_PIXELS - JPEG_ConvertorParams.LastLineHeight | ((MCU_WIDTH_PIXELS * JPEG_ConvertorParams.MCU_pr_line) << DMA2D_NLR_PL_Pos)));
90003a32:	6889      	ldr	r1, [r1, #8]
90003a34:	f1c1 0110 	rsb	r1, r1, #16
90003a38:	ea41 5103 	orr.w	r1, r1, r3, lsl #20
90003a3c:	6461      	str	r1, [r4, #68]	; 0x44
    {
        WRITE_REG(DMA2D->NLR, (MCU_HEIGHT_PIXELS | ((MCU_WIDTH_PIXELS * JPEG_ConvertorParams.MCU_pr_line) << DMA2D_NLR_PL_Pos)));
    }

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, (reinterpret_cast<uint32_t>(FrameBufferAddress) + refline));
90003a3e:	490f      	ldr	r1, [pc, #60]	; (90003a7c <DMA2D_CopyBuffer+0x80>)

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, 480 - (MCU_WIDTH_PIXELS * JPEG_ConvertorParams.MCU_pr_line));
90003a40:	f1c3 031e 	rsb	r3, r3, #30

    /* DMA2D FGPFCCR register configuration */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer));
90003a44:	6840      	ldr	r0, [r0, #4]
    WRITE_REG(DMA2D->FGOR, 0);
90003a46:	2400      	movs	r4, #0
    WRITE_REG(DMA2D->OMAR, (reinterpret_cast<uint32_t>(FrameBufferAddress) + refline));
90003a48:	6809      	ldr	r1, [r1, #0]
    WRITE_REG(DMA2D->OOR, 480 - (MCU_WIDTH_PIXELS * JPEG_ConvertorParams.MCU_pr_line));
90003a4a:	011b      	lsls	r3, r3, #4
    WRITE_REG(DMA2D->OMAR, (reinterpret_cast<uint32_t>(FrameBufferAddress) + refline));
90003a4c:	4411      	add	r1, r2
90003a4e:	4a09      	ldr	r2, [pc, #36]	; (90003a74 <DMA2D_CopyBuffer+0x78>)
90003a50:	4461      	add	r1, ip
90003a52:	63d1      	str	r1, [r2, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, 480 - (MCU_WIDTH_PIXELS * JPEG_ConvertorParams.MCU_pr_line));
90003a54:	6413      	str	r3, [r2, #64]	; 0x40
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
90003a56:	490a      	ldr	r1, [pc, #40]	; (90003a80 <DMA2D_CopyBuffer+0x84>)

    /* Configure DMA2D contol register */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
90003a58:	4b0a      	ldr	r3, [pc, #40]	; (90003a84 <DMA2D_CopyBuffer+0x88>)
    WRITE_REG(DMA2D->FGOR, 0);
90003a5a:	6114      	str	r4, [r2, #16]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
90003a5c:	61d1      	str	r1, [r2, #28]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer));
90003a5e:	60d0      	str	r0, [r2, #12]
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
90003a60:	6013      	str	r3, [r2, #0]
}
90003a62:	bd70      	pop	{r4, r5, r6, pc}
        WRITE_REG(DMA2D->NLR, (MCU_HEIGHT_PIXELS | ((MCU_WIDTH_PIXELS * JPEG_ConvertorParams.MCU_pr_line) << DMA2D_NLR_PL_Pos)));
90003a64:	0519      	lsls	r1, r3, #20
90003a66:	f041 0110 	orr.w	r1, r1, #16
90003a6a:	6461      	str	r1, [r4, #68]	; 0x44
90003a6c:	e7e7      	b.n	90003a3e <DMA2D_CopyBuffer+0x42>
90003a6e:	bf00      	nop
90003a70:	24005b90 	.word	0x24005b90
90003a74:	52001000 	.word	0x52001000
90003a78:	24005ba4 	.word	0x24005ba4
90003a7c:	24005bac 	.word	0x24005bac
90003a80:	ff09000b 	.word	0xff09000b
90003a84:	00010201 	.word	0x00010201

90003a88 <DMA2D_ExternalJobCompleted>:
void DMA2D_ExternalJobCompleted(JPEG_Data_BufferTypeDef& job)
{
    job.State = JPEG_BUFFER_EMPTY;
    job.DataBufferSize = 0;

    JPEG_OUT_Read_BufferIndex++;
90003a88:	4b0c      	ldr	r3, [pc, #48]	; (90003abc <DMA2D_ExternalJobCompleted+0x34>)
    job.State = JPEG_BUFFER_EMPTY;
90003a8a:	2100      	movs	r1, #0
90003a8c:	7001      	strb	r1, [r0, #0]
    JPEG_OUT_Read_BufferIndex++;
90003a8e:	681a      	ldr	r2, [r3, #0]
    job.DataBufferSize = 0;
90003a90:	6081      	str	r1, [r0, #8]
    JPEG_OUT_Read_BufferIndex++;
90003a92:	3201      	adds	r2, #1
90003a94:	601a      	str	r2, [r3, #0]
    if (JPEG_OUT_Read_BufferIndex >= NB_OUTPUT_DATA_BUFFERS)
90003a96:	681a      	ldr	r2, [r3, #0]
90003a98:	2a01      	cmp	r2, #1
90003a9a:	d900      	bls.n	90003a9e <DMA2D_ExternalJobCompleted+0x16>
    {
        JPEG_OUT_Read_BufferIndex = 0;
90003a9c:	6019      	str	r1, [r3, #0]
    }

    /* Check if last line */
    if (job.MCU_index >= (MCU_TotalNb - JPEG_ConvertorParams.MCU_pr_line))
90003a9e:	4b08      	ldr	r3, [pc, #32]	; (90003ac0 <DMA2D_ExternalJobCompleted+0x38>)
90003aa0:	4908      	ldr	r1, [pc, #32]	; (90003ac4 <DMA2D_ExternalJobCompleted+0x3c>)
90003aa2:	681b      	ldr	r3, [r3, #0]
90003aa4:	68c9      	ldr	r1, [r1, #12]
90003aa6:	68c2      	ldr	r2, [r0, #12]
90003aa8:	1a5b      	subs	r3, r3, r1
90003aaa:	429a      	cmp	r2, r3
90003aac:	d302      	bcc.n	90003ab4 <DMA2D_ExternalJobCompleted+0x2c>
    {
        DMA2D_CopyBufferEnd = 1;
90003aae:	4b06      	ldr	r3, [pc, #24]	; (90003ac8 <DMA2D_ExternalJobCompleted+0x40>)
90003ab0:	2201      	movs	r2, #1
90003ab2:	601a      	str	r2, [r3, #0]
    }

    /* Signal decoder thread to wake up and continue decoding */
    SEM_POST(semDecodingDone);
90003ab4:	4b05      	ldr	r3, [pc, #20]	; (90003acc <DMA2D_ExternalJobCompleted+0x44>)
90003ab6:	6818      	ldr	r0, [r3, #0]
90003ab8:	f00c bfbc 	b.w	90010a34 <osSemaphoreRelease>
90003abc:	24000188 	.word	0x24000188
90003ac0:	24005ba4 	.word	0x24005ba4
90003ac4:	24005b90 	.word	0x24005b90
90003ac8:	24000184 	.word	0x24000184
90003acc:	24005bcc 	.word	0x24005bcc

90003ad0 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
90003ad0:	2101      	movs	r1, #1
90003ad2:	2200      	movs	r2, #0
{
90003ad4:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
90003ad6:	4608      	mov	r0, r1
90003ad8:	f00c ff28 	bl	9001092c <osSemaphoreNew>
90003adc:	4b0b      	ldr	r3, [pc, #44]	; (90003b0c <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
90003ade:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
90003ae0:	b140      	cbz	r0, 90003af4 <_ZN8touchgfx10OSWrappers10initializeEv+0x24>

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
90003ae2:	2200      	movs	r2, #0
90003ae4:	2104      	movs	r1, #4
90003ae6:	2001      	movs	r0, #1
90003ae8:	f00c ffda 	bl	90010aa0 <osMessageQueueNew>
90003aec:	4b08      	ldr	r3, [pc, #32]	; (90003b10 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
90003aee:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
90003af0:	b130      	cbz	r0, 90003b00 <_ZN8touchgfx10OSWrappers10initializeEv+0x30>
}
90003af2:	bd08      	pop	{r3, pc}
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
90003af4:	4b07      	ldr	r3, [pc, #28]	; (90003b14 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
90003af6:	2128      	movs	r1, #40	; 0x28
90003af8:	4a07      	ldr	r2, [pc, #28]	; (90003b18 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
90003afa:	4808      	ldr	r0, [pc, #32]	; (90003b1c <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
90003afc:	f026 f8be 	bl	90029c7c <__assert_func>
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
90003b00:	4b07      	ldr	r3, [pc, #28]	; (90003b20 <_ZN8touchgfx10OSWrappers10initializeEv+0x50>)
90003b02:	212c      	movs	r1, #44	; 0x2c
90003b04:	4a04      	ldr	r2, [pc, #16]	; (90003b18 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
90003b06:	4805      	ldr	r0, [pc, #20]	; (90003b1c <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
90003b08:	f026 f8b8 	bl	90029c7c <__assert_func>
90003b0c:	24005bd4 	.word	0x24005bd4
90003b10:	24005bd0 	.word	0x24005bd0
90003b14:	9002b6f4 	.word	0x9002b6f4
90003b18:	9002b740 	.word	0x9002b740
90003b1c:	9002b770 	.word	0x9002b770
90003b20:	9002b7b8 	.word	0x9002b7b8

90003b24 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
90003b24:	4b02      	ldr	r3, [pc, #8]	; (90003b30 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
90003b26:	f04f 31ff 	mov.w	r1, #4294967295
90003b2a:	6818      	ldr	r0, [r3, #0]
90003b2c:	f00c bf4e 	b.w	900109cc <osSemaphoreAcquire>
90003b30:	24005bd4 	.word	0x24005bd4

90003b34 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
90003b34:	4b01      	ldr	r3, [pc, #4]	; (90003b3c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
90003b36:	6818      	ldr	r0, [r3, #0]
90003b38:	f00c bf7c 	b.w	90010a34 <osSemaphoreRelease>
90003b3c:	24005bd4 	.word	0x24005bd4

90003b40 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
90003b40:	4b02      	ldr	r3, [pc, #8]	; (90003b4c <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
90003b42:	2100      	movs	r1, #0
90003b44:	6818      	ldr	r0, [r3, #0]
90003b46:	f00c bf41 	b.w	900109cc <osSemaphoreAcquire>
90003b4a:	bf00      	nop
90003b4c:	24005bd4 	.word	0x24005bd4

90003b50 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
90003b50:	4b01      	ldr	r3, [pc, #4]	; (90003b58 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x8>)
90003b52:	6818      	ldr	r0, [r3, #0]
90003b54:	f00c bf6e 	b.w	90010a34 <osSemaphoreRelease>
90003b58:	24005bd4 	.word	0x24005bd4

90003b5c <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
90003b5c:	4803      	ldr	r0, [pc, #12]	; (90003b6c <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
90003b5e:	2300      	movs	r3, #0
90003b60:	4903      	ldr	r1, [pc, #12]	; (90003b70 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
90003b62:	461a      	mov	r2, r3
90003b64:	6800      	ldr	r0, [r0, #0]
90003b66:	f00c bfd9 	b.w	90010b1c <osMessageQueuePut>
90003b6a:	bf00      	nop
90003b6c:	24005bd0 	.word	0x24005bd0
90003b70:	24000028 	.word	0x24000028

90003b74 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
90003b74:	b510      	push	{r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
90003b76:	2300      	movs	r3, #0
{
90003b78:	b082      	sub	sp, #8
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
90003b7a:	4c07      	ldr	r4, [pc, #28]	; (90003b98 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
90003b7c:	461a      	mov	r2, r3
90003b7e:	a901      	add	r1, sp, #4
90003b80:	6820      	ldr	r0, [r4, #0]
90003b82:	f00d f80d 	bl	90010ba0 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
90003b86:	f04f 33ff 	mov.w	r3, #4294967295
90003b8a:	2200      	movs	r2, #0
90003b8c:	a901      	add	r1, sp, #4
90003b8e:	6820      	ldr	r0, [r4, #0]
90003b90:	f00d f806 	bl	90010ba0 <osMessageQueueGet>
}
90003b94:	b002      	add	sp, #8
90003b96:	bd10      	pop	{r4, pc}
90003b98:	24005bd0 	.word	0x24005bd0

90003b9c <_ZN8touchgfx13DMA_Interface5flushEv>:
        waitForFrameBufferSemaphore();
90003b9c:	6803      	ldr	r3, [r0, #0]
90003b9e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90003ba0:	4718      	bx	r3
90003ba2:	bf00      	nop

90003ba4 <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
90003ba4:	2001      	movs	r0, #1
90003ba6:	4770      	bx	lr

90003ba8 <_ZN8STM32DMAD1Ev>:
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false), mutexIsRunning(0)
{
    mutexIsRunning = MUTEX_CREATE();
}

STM32DMA::~STM32DMA()
90003ba8:	4905      	ldr	r1, [pc, #20]	; (90003bc0 <_ZN8STM32DMAD1Ev+0x18>)
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90003baa:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
90003bae:	4b05      	ldr	r3, [pc, #20]	; (90003bc4 <_ZN8STM32DMAD1Ev+0x1c>)
90003bb0:	6001      	str	r1, [r0, #0]
90003bb2:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
90003bb6:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90003bba:	f3bf 8f6f 	isb	sy
{
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}
90003bbe:	4770      	bx	lr
90003bc0:	9002b958 	.word	0x9002b958
90003bc4:	e000e100 	.word	0xe000e100

90003bc8 <_ZN8STM32DMA10initializeEv>:

void STM32DMA::initialize()
{
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
90003bc8:	4b0f      	ldr	r3, [pc, #60]	; (90003c08 <_ZN8STM32DMA10initializeEv+0x40>)
{
90003bca:	b082      	sub	sp, #8
    __HAL_RCC_DMA2D_FORCE_RESET();
    __HAL_RCC_DMA2D_RELEASE_RESET();

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
90003bcc:	490f      	ldr	r1, [pc, #60]	; (90003c0c <_ZN8STM32DMA10initializeEv+0x44>)
    __HAL_RCC_DMA2D_CLK_ENABLE();
90003bce:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
90003bd2:	480f      	ldr	r0, [pc, #60]	; (90003c10 <_ZN8STM32DMA10initializeEv+0x48>)
    __HAL_RCC_DMA2D_CLK_ENABLE();
90003bd4:	f042 0210 	orr.w	r2, r2, #16
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
90003bd8:	6208      	str	r0, [r1, #32]
    __HAL_RCC_DMA2D_CLK_ENABLE();
90003bda:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
90003bde:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
90003be2:	f002 0210 	and.w	r2, r2, #16
90003be6:	9201      	str	r2, [sp, #4]
90003be8:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
90003bea:	6fda      	ldr	r2, [r3, #124]	; 0x7c
90003bec:	f042 0210 	orr.w	r2, r2, #16
90003bf0:	67da      	str	r2, [r3, #124]	; 0x7c
    __HAL_RCC_DMA2D_RELEASE_RESET();
90003bf2:	6fda      	ldr	r2, [r3, #124]	; 0x7c
90003bf4:	f022 0210 	bic.w	r2, r2, #16
90003bf8:	67da      	str	r2, [r3, #124]	; 0x7c
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90003bfa:	4b06      	ldr	r3, [pc, #24]	; (90003c14 <_ZN8STM32DMA10initializeEv+0x4c>)
90003bfc:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
90003c00:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
90003c02:	b002      	add	sp, #8
90003c04:	4770      	bx	lr
90003c06:	bf00      	nop
90003c08:	58024400 	.word	0x58024400
90003c0c:	2400921c 	.word	0x2400921c
90003c10:	90003ff9 	.word	0x90003ff9
90003c14:	e000e100 	.word	0xe000e100

90003c18 <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
90003c18:	f240 30ef 	movw	r0, #1007	; 0x3ef
90003c1c:	4770      	bx	lr
90003c1e:	bf00      	nop

90003c20 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
90003c20:	4909      	ldr	r1, [pc, #36]	; (90003c48 <_ZN8STM32DMAD0Ev+0x28>)
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90003c22:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
90003c26:	4b09      	ldr	r3, [pc, #36]	; (90003c4c <_ZN8STM32DMAD0Ev+0x2c>)
90003c28:	b510      	push	{r4, lr}
90003c2a:	6001      	str	r1, [r0, #0]
90003c2c:	4604      	mov	r4, r0
90003c2e:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
90003c32:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90003c36:	f3bf 8f6f 	isb	sy
}
90003c3a:	f640 51a8 	movw	r1, #3496	; 0xda8
90003c3e:	f025 ffee 	bl	90029c1e <_ZdlPvj>
90003c42:	4620      	mov	r0, r4
90003c44:	bd10      	pop	{r4, pc}
90003c46:	bf00      	nop
90003c48:	9002b958 	.word	0x9002b958
90003c4c:	e000e100 	.word	0xe000e100

90003c50 <_ZN8STM32DMA5startEv>:
                execute();
            }
        }
    }

    virtual void start()
90003c50:	b510      	push	{r4, lr}
90003c52:	4604      	mov	r4, r0
    {
        MUTEX_LOCK(mutexIsRunning);
90003c54:	f04f 31ff 	mov.w	r1, #4294967295
90003c58:	f8d0 0da4 	ldr.w	r0, [r0, #3492]	; 0xda4
90003c5c:	f00c fe20 	bl	900108a0 <osMutexAcquire>
        if (!queue.isEmpty() && isAllowed && !isRunning)
90003c60:	6860      	ldr	r0, [r4, #4]
90003c62:	6803      	ldr	r3, [r0, #0]
90003c64:	681b      	ldr	r3, [r3, #0]
90003c66:	4798      	blx	r3
90003c68:	b978      	cbnz	r0, 90003c8a <_ZN8STM32DMA5startEv+0x3a>
90003c6a:	7a63      	ldrb	r3, [r4, #9]
90003c6c:	b16b      	cbz	r3, 90003c8a <_ZN8STM32DMA5startEv+0x3a>
90003c6e:	7a23      	ldrb	r3, [r4, #8]
90003c70:	bb0b      	cbnz	r3, 90003cb6 <_ZN8STM32DMA5startEv+0x66>
        {
            started_by_external_job = false;
            execute();
90003c72:	6822      	ldr	r2, [r4, #0]
90003c74:	4620      	mov	r0, r4
            started_by_external_job = false;
90003c76:	f884 3da0 	strb.w	r3, [r4, #3488]	; 0xda0
            execute();
90003c7a:	6a53      	ldr	r3, [r2, #36]	; 0x24
90003c7c:	4798      	blx	r3
        else if ((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && !isRunning && !isReserved)
        {
            started_by_external_job = true;
            externalJobExecute();
        }
        MUTEX_UNLOCK(mutexIsRunning);
90003c7e:	f8d4 0da4 	ldr.w	r0, [r4, #3492]	; 0xda4
    }
90003c82:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        MUTEX_UNLOCK(mutexIsRunning);
90003c86:	f00c be2f 	b.w	900108e8 <osMutexRelease>
        else if ((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && !isRunning && !isReserved)
90003c8a:	490f      	ldr	r1, [pc, #60]	; (90003cc8 <_ZN8STM32DMA5startEv+0x78>)
90003c8c:	4a0f      	ldr	r2, [pc, #60]	; (90003ccc <_ZN8STM32DMA5startEv+0x7c>)
90003c8e:	680b      	ldr	r3, [r1, #0]
90003c90:	011b      	lsls	r3, r3, #4
90003c92:	5cd3      	ldrb	r3, [r2, r3]
90003c94:	2b01      	cmp	r3, #1
90003c96:	d1f2      	bne.n	90003c7e <_ZN8STM32DMA5startEv+0x2e>
90003c98:	7a20      	ldrb	r0, [r4, #8]
90003c9a:	2800      	cmp	r0, #0
90003c9c:	d1ef      	bne.n	90003c7e <_ZN8STM32DMA5startEv+0x2e>
90003c9e:	7aa0      	ldrb	r0, [r4, #10]
90003ca0:	2800      	cmp	r0, #0
90003ca2:	d1ec      	bne.n	90003c7e <_ZN8STM32DMA5startEv+0x2e>
     * @param None
     */
    void externalJobExecute()
    {
        isRunning = true;
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90003ca4:	6808      	ldr	r0, [r1, #0]
            started_by_external_job = true;
90003ca6:	f884 3da0 	strb.w	r3, [r4, #3488]	; 0xda0
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90003caa:	eb02 1000 	add.w	r0, r2, r0, lsl #4
        isRunning = true;
90003cae:	7223      	strb	r3, [r4, #8]
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90003cb0:	f7ff fea4 	bl	900039fc <DMA2D_CopyBuffer>
    }
90003cb4:	e7e3      	b.n	90003c7e <_ZN8STM32DMA5startEv+0x2e>
        else if ((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && !isRunning && !isReserved)
90003cb6:	4b04      	ldr	r3, [pc, #16]	; (90003cc8 <_ZN8STM32DMA5startEv+0x78>)
        MUTEX_UNLOCK(mutexIsRunning);
90003cb8:	f8d4 0da4 	ldr.w	r0, [r4, #3492]	; 0xda4
        else if ((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && !isRunning && !isReserved)
90003cbc:	681b      	ldr	r3, [r3, #0]
    }
90003cbe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        MUTEX_UNLOCK(mutexIsRunning);
90003cc2:	f00c be11 	b.w	900108e8 <osMutexRelease>
90003cc6:	bf00      	nop
90003cc8:	24000188 	.word	0x24000188
90003ccc:	24000008 	.word	0x24000008

90003cd0 <_ZN8STM32DMA18signalDMAInterruptEv>:
        if (!started_by_external_job)
90003cd0:	f890 3da0 	ldrb.w	r3, [r0, #3488]	; 0xda0
    virtual void signalDMAInterrupt()
90003cd4:	b510      	push	{r4, lr}
90003cd6:	4604      	mov	r4, r0
        if (!started_by_external_job)
90003cd8:	b953      	cbnz	r3, 90003cf0 <_ZN8STM32DMA18signalDMAInterruptEv+0x20>
            executeCompleted();
90003cda:	6803      	ldr	r3, [r0, #0]
90003cdc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90003cde:	4798      	blx	r3
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL && !DMA2D_CopyBufferEnd && !isRunning && !isReserved)
90003ce0:	491c      	ldr	r1, [pc, #112]	; (90003d54 <_ZN8STM32DMA18signalDMAInterruptEv+0x84>)
90003ce2:	4a1d      	ldr	r2, [pc, #116]	; (90003d58 <_ZN8STM32DMA18signalDMAInterruptEv+0x88>)
90003ce4:	680b      	ldr	r3, [r1, #0]
90003ce6:	011b      	lsls	r3, r3, #4
90003ce8:	5cd3      	ldrb	r3, [r2, r3]
90003cea:	2b01      	cmp	r3, #1
90003cec:	d014      	beq.n	90003d18 <_ZN8STM32DMA18signalDMAInterruptEv+0x48>
    }
90003cee:	bd10      	pop	{r4, pc}
        if (isRunning)
90003cf0:	7a03      	ldrb	r3, [r0, #8]
90003cf2:	bb2b      	cbnz	r3, 90003d40 <_ZN8STM32DMA18signalDMAInterruptEv+0x70>
            if (!queue.isEmpty() && isAllowed)
90003cf4:	6860      	ldr	r0, [r4, #4]
90003cf6:	6803      	ldr	r3, [r0, #0]
90003cf8:	681b      	ldr	r3, [r3, #0]
90003cfa:	4798      	blx	r3
90003cfc:	4603      	mov	r3, r0
90003cfe:	2800      	cmp	r0, #0
90003d00:	d1f5      	bne.n	90003cee <_ZN8STM32DMA18signalDMAInterruptEv+0x1e>
90003d02:	7a62      	ldrb	r2, [r4, #9]
90003d04:	2a00      	cmp	r2, #0
90003d06:	d0f2      	beq.n	90003cee <_ZN8STM32DMA18signalDMAInterruptEv+0x1e>
                execute();
90003d08:	6822      	ldr	r2, [r4, #0]
90003d0a:	4620      	mov	r0, r4
                started_by_external_job = false;
90003d0c:	f884 3da0 	strb.w	r3, [r4, #3488]	; 0xda0
                execute();
90003d10:	6a53      	ldr	r3, [r2, #36]	; 0x24
    }
90003d12:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
                execute();
90003d16:	4718      	bx	r3
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL && !DMA2D_CopyBufferEnd && !isRunning && !isReserved)
90003d18:	4810      	ldr	r0, [pc, #64]	; (90003d5c <_ZN8STM32DMA18signalDMAInterruptEv+0x8c>)
90003d1a:	6800      	ldr	r0, [r0, #0]
90003d1c:	2800      	cmp	r0, #0
90003d1e:	d1e6      	bne.n	90003cee <_ZN8STM32DMA18signalDMAInterruptEv+0x1e>
90003d20:	7a20      	ldrb	r0, [r4, #8]
90003d22:	2800      	cmp	r0, #0
90003d24:	d1e3      	bne.n	90003cee <_ZN8STM32DMA18signalDMAInterruptEv+0x1e>
90003d26:	7aa0      	ldrb	r0, [r4, #10]
90003d28:	2800      	cmp	r0, #0
90003d2a:	d1e0      	bne.n	90003cee <_ZN8STM32DMA18signalDMAInterruptEv+0x1e>
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90003d2c:	6808      	ldr	r0, [r1, #0]
                started_by_external_job = true;
90003d2e:	f884 3da0 	strb.w	r3, [r4, #3488]	; 0xda0
        isRunning = true;
90003d32:	7223      	strb	r3, [r4, #8]
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90003d34:	eb02 1000 	add.w	r0, r2, r0, lsl #4
    }
90003d38:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90003d3c:	f7ff be5e 	b.w	900039fc <DMA2D_CopyBuffer>
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90003d40:	4904      	ldr	r1, [pc, #16]	; (90003d54 <_ZN8STM32DMA18signalDMAInterruptEv+0x84>)
            isRunning = false;
90003d42:	2200      	movs	r2, #0
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90003d44:	4b04      	ldr	r3, [pc, #16]	; (90003d58 <_ZN8STM32DMA18signalDMAInterruptEv+0x88>)
90003d46:	6808      	ldr	r0, [r1, #0]
            isRunning = false;
90003d48:	7222      	strb	r2, [r4, #8]
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90003d4a:	eb03 1000 	add.w	r0, r3, r0, lsl #4
90003d4e:	f7ff fe9b 	bl	90003a88 <DMA2D_ExternalJobCompleted>
90003d52:	e7cf      	b.n	90003cf4 <_ZN8STM32DMA18signalDMAInterruptEv+0x24>
90003d54:	24000188 	.word	0x24000188
90003d58:	24000008 	.word	0x24000008
90003d5c:	24000184 	.word	0x24000184

90003d60 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
90003d60:	b538      	push	{r3, r4, r5, lr}
    switch (format)
90003d62:	7f8b      	ldrb	r3, [r1, #30]
90003d64:	2b0a      	cmp	r3, #10
90003d66:	d83e      	bhi.n	90003de6 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x86>
90003d68:	e8df f003 	tbb	[pc, r3]
90003d6c:	3d2a063b 	.word	0x3d2a063b
90003d70:	063d3d3d 	.word	0x063d3d3d
90003d74:	0606      	.short	0x0606
90003d76:	06          	.byte	0x06
90003d77:	00          	.byte	0x00
90003d78:	2401      	movs	r4, #1

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90003d7a:	f8b1 c014 	ldrh.w	ip, [r1, #20]
90003d7e:	8ac8      	ldrh	r0, [r1, #22]

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90003d80:	8b4a      	ldrh	r2, [r1, #26]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
90003d82:	4b1c      	ldr	r3, [pc, #112]	; (90003df4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x94>)
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90003d84:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90003d88:	eba2 020c 	sub.w	r2, r2, ip
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
90003d8c:	635c      	str	r4, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90003d8e:	6458      	str	r0, [r3, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90003d90:	6908      	ldr	r0, [r1, #16]
90003d92:	63d8      	str	r0, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90003d94:	641a      	str	r2, [r3, #64]	; 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
90003d96:	680d      	ldr	r5, [r1, #0]
90003d98:	2d08      	cmp	r5, #8
90003d9a:	d013      	beq.n	90003dc4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x64>
    {
        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, 0);
90003d9c:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
90003d9e:	61dc      	str	r4, [r3, #28]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
90003da0:	4c15      	ldr	r4, [pc, #84]	; (90003df8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x98>)
        WRITE_REG(DMA2D->FGOR, 0);
90003da2:	611a      	str	r2, [r3, #16]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
90003da4:	68c9      	ldr	r1, [r1, #12]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
90003da6:	0a0a      	lsrs	r2, r1, #8
90003da8:	0948      	lsrs	r0, r1, #5
90003daa:	f3c1 01c4 	ubfx	r1, r1, #3, #5
90003dae:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
90003db2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90003db6:	4302      	orrs	r2, r0
90003db8:	430a      	orrs	r2, r1
90003dba:	639a      	str	r2, [r3, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
90003dbc:	601c      	str	r4, [r3, #0]
    }
}
90003dbe:	bd38      	pop	{r3, r4, r5, pc}
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
90003dc0:	2400      	movs	r4, #0
90003dc2:	e7da      	b.n	90003d7a <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1a>
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
90003dc4:	619a      	str	r2, [r3, #24]
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
90003dc6:	611a      	str	r2, [r3, #16]
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90003dc8:	625c      	str	r4, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
90003dca:	4a0c      	ldr	r2, [pc, #48]	; (90003dfc <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x9c>)
90003dcc:	7f0c      	ldrb	r4, [r1, #28]
90003dce:	ea42 6204 	orr.w	r2, r2, r4, lsl #24
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
90003dd2:	4c0b      	ldr	r4, [pc, #44]	; (90003e00 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa0>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
90003dd4:	61da      	str	r2, [r3, #28]
90003dd6:	68ca      	ldr	r2, [r1, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
90003dd8:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90003dda:	6158      	str	r0, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90003ddc:	60d8      	str	r0, [r3, #12]
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
90003dde:	601c      	str	r4, [r3, #0]
}
90003de0:	bd38      	pop	{r3, r4, r5, pc}
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
90003de2:	2402      	movs	r4, #2
90003de4:	e7c9      	b.n	90003d7a <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1a>
        assert(0 && "Unsupported Format!");
90003de6:	4b07      	ldr	r3, [pc, #28]	; (90003e04 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa4>)
90003de8:	2187      	movs	r1, #135	; 0x87
90003dea:	4a07      	ldr	r2, [pc, #28]	; (90003e08 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa8>)
90003dec:	4807      	ldr	r0, [pc, #28]	; (90003e0c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xac>)
90003dee:	f025 ff45 	bl	90029c7c <__assert_func>
90003df2:	bf00      	nop
90003df4:	52001000 	.word	0x52001000
90003df8:	00030201 	.word	0x00030201
90003dfc:	00010009 	.word	0x00010009
90003e00:	00020201 	.word	0x00020201
90003e04:	9002b7fc 	.word	0x9002b7fc
90003e08:	9002b818 	.word	0x9002b818
90003e0c:	9002b864 	.word	0x9002b864

90003e10 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
{
90003e10:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
90003e12:	f891 e01d 	ldrb.w	lr, [r1, #29]
    switch (format)
90003e16:	f1be 0f0b 	cmp.w	lr, #11
90003e1a:	f200 80c1 	bhi.w	90003fa0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x190>
90003e1e:	e8df f01e 	tbh	[pc, lr, lsl #1]
90003e22:	0063      	.short	0x0063
90003e24:	004c0065 	.word	0x004c0065
90003e28:	00bf00bf 	.word	0x00bf00bf
90003e2c:	00bf00bf 	.word	0x00bf00bf
90003e30:	000c000c 	.word	0x000c000c
90003e34:	000c000c 	.word	0x000c000c
90003e38:	000c      	.short	0x000c
        dma2dColorMode = DMA2D_INPUT_L8;
90003e3a:	2505      	movs	r5, #5
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
90003e3c:	f891 c01e 	ldrb.w	ip, [r1, #30]
    switch (format)
90003e40:	f1bc 0f0b 	cmp.w	ip, #11
90003e44:	f200 80ac 	bhi.w	90003fa0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x190>
90003e48:	e8df f00c 	tbb	[pc, ip]
90003e4c:	aa0e4b52 	.word	0xaa0e4b52
90003e50:	06aaaaaa 	.word	0x06aaaaaa
90003e54:	06060606 	.word	0x06060606
    switch (format)
90003e58:	f1ac 0307 	sub.w	r3, ip, #7
90003e5c:	2b03      	cmp	r3, #3
90003e5e:	f200 80a5 	bhi.w	90003fac <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x19c>
90003e62:	2605      	movs	r6, #5
90003e64:	2701      	movs	r7, #1
90003e66:	e001      	b.n	90003e6c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x5c>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
90003e68:	2600      	movs	r6, #0
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
90003e6a:	4637      	mov	r7, r6
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90003e6c:	8a8b      	ldrh	r3, [r1, #20]
90003e6e:	8b4a      	ldrh	r2, [r1, #26]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
90003e70:	8b0c      	ldrh	r4, [r1, #24]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90003e72:	8ac8      	ldrh	r0, [r1, #22]
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90003e74:	1ad2      	subs	r2, r2, r3
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
90003e76:	1ae4      	subs	r4, r4, r3
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90003e78:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90003e7c:	4b52      	ldr	r3, [pc, #328]	; (90003fc8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b8>)
90003e7e:	641a      	str	r2, [r3, #64]	; 0x40
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
90003e80:	619a      	str	r2, [r3, #24]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
90003e82:	611c      	str	r4, [r3, #16]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
90003e84:	684a      	ldr	r2, [r1, #4]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
90003e86:	635f      	str	r7, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90003e88:	6458      	str	r0, [r3, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90003e8a:	6908      	ldr	r0, [r1, #16]
90003e8c:	63d8      	str	r0, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
90003e8e:	60da      	str	r2, [r3, #12]
    switch (blitOp.operation)
90003e90:	680a      	ldr	r2, [r1, #0]
90003e92:	2a80      	cmp	r2, #128	; 0x80
90003e94:	d03b      	beq.n	90003f0e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfe>
90003e96:	d812      	bhi.n	90003ebe <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xae>
90003e98:	2a20      	cmp	r2, #32
90003e9a:	d02c      	beq.n	90003ef6 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe6>
90003e9c:	2a40      	cmp	r2, #64	; 0x40
90003e9e:	d02a      	beq.n	90003ef6 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe6>
90003ea0:	2a04      	cmp	r2, #4
90003ea2:	d169      	bne.n	90003f78 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x168>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90003ea4:	7f0a      	ldrb	r2, [r1, #28]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90003ea6:	4949      	ldr	r1, [pc, #292]	; (90003fcc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1bc>)
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90003ea8:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
90003eac:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
90003eb0:	61da      	str	r2, [r3, #28]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90003eb2:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90003eb4:	6158      	str	r0, [r3, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90003eb6:	6019      	str	r1, [r3, #0]
}
90003eb8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
90003eba:	2500      	movs	r5, #0
90003ebc:	e7be      	b.n	90003e3c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2c>
    switch (blitOp.operation)
90003ebe:	f5b2 7f80 	cmp.w	r2, #256	; 0x100
90003ec2:	d067      	beq.n	90003f94 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x184>
90003ec4:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
90003ec8:	d156      	bne.n	90003f78 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x168>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90003eca:	7f0c      	ldrb	r4, [r1, #28]
90003ecc:	4a40      	ldr	r2, [pc, #256]	; (90003fd0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c0>)
90003ece:	ea42 6204 	orr.w	r2, r2, r4, lsl #24
90003ed2:	61da      	str	r2, [r3, #28]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90003ed4:	4a3d      	ldr	r2, [pc, #244]	; (90003fcc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1bc>)
90003ed6:	68c9      	ldr	r1, [r1, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
90003ed8:	6219      	str	r1, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90003eda:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90003edc:	6158      	str	r0, [r3, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90003ede:	601a      	str	r2, [r3, #0]
}
90003ee0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    switch (format)
90003ee2:	2601      	movs	r6, #1
90003ee4:	4637      	mov	r7, r6
90003ee6:	e7c1      	b.n	90003e6c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x5c>
90003ee8:	2502      	movs	r5, #2
90003eea:	e7a7      	b.n	90003e3c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2c>
        dma2dColorMode = DMA2D_INPUT_RGB888;
90003eec:	2501      	movs	r5, #1
90003eee:	e7a5      	b.n	90003e3c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2c>
        dma2dColorMode = DMA2D_INPUT_RGB565;
90003ef0:	2602      	movs	r6, #2
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
90003ef2:	4637      	mov	r7, r6
90003ef4:	e7ba      	b.n	90003e6c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x5c>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90003ef6:	7f0b      	ldrb	r3, [r1, #28]
90003ef8:	4a33      	ldr	r2, [pc, #204]	; (90003fc8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b8>)
90003efa:	ea45 6303 	orr.w	r3, r5, r3, lsl #24
90003efe:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
90003f02:	61d3      	str	r3, [r2, #28]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90003f04:	4b31      	ldr	r3, [pc, #196]	; (90003fcc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1bc>)
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90003f06:	6256      	str	r6, [r2, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90003f08:	6150      	str	r0, [r2, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90003f0a:	6013      	str	r3, [r2, #0]
}
90003f0c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
90003f0e:	688a      	ldr	r2, [r1, #8]
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
90003f10:	1d14      	adds	r4, r2, #4
90003f12:	62dc      	str	r4, [r3, #44]	; 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90003f14:	7f0c      	ldrb	r4, [r1, #28]
            switch ((Bitmap::ClutFormat)palette->format)
90003f16:	7811      	ldrb	r1, [r2, #0]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90003f18:	ea45 6504 	orr.w	r5, r5, r4, lsl #24
90003f1c:	f445 3500 	orr.w	r5, r5, #131072	; 0x20000
90003f20:	61dd      	str	r5, [r3, #28]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90003f22:	625e      	str	r6, [r3, #36]	; 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90003f24:	6158      	str	r0, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
90003f26:	b9b1      	cbnz	r1, 90003f56 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x146>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
90003f28:	8851      	ldrh	r1, [r2, #2]
            bool blend = true;
90003f2a:	2401      	movs	r4, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
90003f2c:	69d8      	ldr	r0, [r3, #28]
90003f2e:	4a29      	ldr	r2, [pc, #164]	; (90003fd4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c4>)
90003f30:	3901      	subs	r1, #1
90003f32:	4002      	ands	r2, r0
90003f34:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
90003f38:	61da      	str	r2, [r3, #28]
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
90003f3a:	4a23      	ldr	r2, [pc, #140]	; (90003fc8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b8>)
90003f3c:	69d3      	ldr	r3, [r2, #28]
90003f3e:	f043 0320 	orr.w	r3, r3, #32
90003f42:	61d3      	str	r3, [r2, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
90003f44:	69d3      	ldr	r3, [r2, #28]
90003f46:	069b      	lsls	r3, r3, #26
90003f48:	d4fc      	bmi.n	90003f44 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x134>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
90003f4a:	2310      	movs	r3, #16
90003f4c:	6093      	str	r3, [r2, #8]
            if (blend)
90003f4e:	b324      	cbz	r4, 90003f9a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18a>
                WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90003f50:	4b1e      	ldr	r3, [pc, #120]	; (90003fcc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1bc>)
90003f52:	6013      	str	r3, [r2, #0]
}
90003f54:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90003f56:	2901      	cmp	r1, #1
90003f58:	d12e      	bne.n	90003fb8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a8>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
90003f5a:	8851      	ldrh	r1, [r2, #2]
                if (blitOp.alpha == 255)
90003f5c:	3cff      	subs	r4, #255	; 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
90003f5e:	69d8      	ldr	r0, [r3, #28]
90003f60:	4a1c      	ldr	r2, [pc, #112]	; (90003fd4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c4>)
90003f62:	f101 31ff 	add.w	r1, r1, #4294967295
                if (blitOp.alpha == 255)
90003f66:	bf18      	it	ne
90003f68:	2401      	movne	r4, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
90003f6a:	4002      	ands	r2, r0
90003f6c:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
90003f70:	f042 0210 	orr.w	r2, r2, #16
90003f74:	61da      	str	r2, [r3, #28]
                break;
90003f76:	e7e0      	b.n	90003f3a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x12a>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90003f78:	7f0a      	ldrb	r2, [r1, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
90003f7a:	45e6      	cmp	lr, ip
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90003f7c:	4b12      	ldr	r3, [pc, #72]	; (90003fc8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b8>)
90003f7e:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
90003f82:	bf14      	ite	ne
90003f84:	4a14      	ldrne	r2, [pc, #80]	; (90003fd8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c8>)
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
90003f86:	f240 2201 	movweq	r2, #513	; 0x201
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90003f8a:	f445 3500 	orr.w	r5, r5, #131072	; 0x20000
90003f8e:	61dd      	str	r5, [r3, #28]
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
90003f90:	601a      	str	r2, [r3, #0]
}
90003f92:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90003f94:	7f0c      	ldrb	r4, [r1, #28]
90003f96:	4a11      	ldr	r2, [pc, #68]	; (90003fdc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1cc>)
90003f98:	e799      	b.n	90003ece <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xbe>
                WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
90003f9a:	4b0f      	ldr	r3, [pc, #60]	; (90003fd8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c8>)
90003f9c:	6013      	str	r3, [r2, #0]
}
90003f9e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        assert(0 && "Unsupported Format!");
90003fa0:	4b0f      	ldr	r3, [pc, #60]	; (90003fe0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1d0>)
90003fa2:	2166      	movs	r1, #102	; 0x66
90003fa4:	4a0f      	ldr	r2, [pc, #60]	; (90003fe4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1d4>)
90003fa6:	4810      	ldr	r0, [pc, #64]	; (90003fe8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1d8>)
90003fa8:	f025 fe68 	bl	90029c7c <__assert_func>
        assert(0 && "Unsupported Format!");
90003fac:	4b0c      	ldr	r3, [pc, #48]	; (90003fe0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1d0>)
90003fae:	2187      	movs	r1, #135	; 0x87
90003fb0:	4a0e      	ldr	r2, [pc, #56]	; (90003fec <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1dc>)
90003fb2:	480d      	ldr	r0, [pc, #52]	; (90003fe8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1d8>)
90003fb4:	f025 fe62 	bl	90029c7c <__assert_func>
                assert(0 && "Unsupported format");
90003fb8:	4b0d      	ldr	r3, [pc, #52]	; (90003ff0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1e0>)
90003fba:	f240 1111 	movw	r1, #273	; 0x111
90003fbe:	4a0d      	ldr	r2, [pc, #52]	; (90003ff4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1e4>)
90003fc0:	4809      	ldr	r0, [pc, #36]	; (90003fe8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1d8>)
90003fc2:	f025 fe5b 	bl	90029c7c <__assert_func>
90003fc6:	bf00      	nop
90003fc8:	52001000 	.word	0x52001000
90003fcc:	00020201 	.word	0x00020201
90003fd0:	00020009 	.word	0x00020009
90003fd4:	ffff00ef 	.word	0xffff00ef
90003fd8:	00010201 	.word	0x00010201
90003fdc:	0002000a 	.word	0x0002000a
90003fe0:	9002b7fc 	.word	0x9002b7fc
90003fe4:	9002b8a8 	.word	0x9002b8a8
90003fe8:	9002b864 	.word	0x9002b864
90003fec:	9002b818 	.word	0x9002b818
90003ff0:	9002b8f4 	.word	0x9002b8f4
90003ff4:	9002b910 	.word	0x9002b910

90003ff8 <DMA2D_XferCpltCallback>:
        dma.signalDMAInterrupt();
90003ff8:	4b25      	ldr	r3, [pc, #148]	; (90004090 <DMA2D_XferCpltCallback+0x98>)
90003ffa:	4926      	ldr	r1, [pc, #152]	; (90004094 <DMA2D_XferCpltCallback+0x9c>)
90003ffc:	681b      	ldr	r3, [r3, #0]
    {
90003ffe:	b510      	push	{r4, lr}
90004000:	685c      	ldr	r4, [r3, #4]
90004002:	6823      	ldr	r3, [r4, #0]
90004004:	695a      	ldr	r2, [r3, #20]
90004006:	428a      	cmp	r2, r1
90004008:	d120      	bne.n	9000404c <DMA2D_XferCpltCallback+0x54>
        if (!started_by_external_job)
9000400a:	f894 2da0 	ldrb.w	r2, [r4, #3488]	; 0xda0
9000400e:	b192      	cbz	r2, 90004036 <DMA2D_XferCpltCallback+0x3e>
        if (isRunning)
90004010:	7a23      	ldrb	r3, [r4, #8]
90004012:	2b00      	cmp	r3, #0
90004014:	d132      	bne.n	9000407c <DMA2D_XferCpltCallback+0x84>
            if (!queue.isEmpty() && isAllowed)
90004016:	6860      	ldr	r0, [r4, #4]
90004018:	6803      	ldr	r3, [r0, #0]
9000401a:	681b      	ldr	r3, [r3, #0]
9000401c:	4798      	blx	r3
9000401e:	4603      	mov	r3, r0
90004020:	b998      	cbnz	r0, 9000404a <DMA2D_XferCpltCallback+0x52>
90004022:	7a62      	ldrb	r2, [r4, #9]
90004024:	b18a      	cbz	r2, 9000404a <DMA2D_XferCpltCallback+0x52>
                execute();
90004026:	6822      	ldr	r2, [r4, #0]
90004028:	4620      	mov	r0, r4
                started_by_external_job = false;
9000402a:	f884 3da0 	strb.w	r3, [r4, #3488]	; 0xda0
                execute();
9000402e:	6a53      	ldr	r3, [r2, #36]	; 0x24
    }
90004030:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90004034:	4718      	bx	r3
            executeCompleted();
90004036:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90004038:	4620      	mov	r0, r4
9000403a:	4798      	blx	r3
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL && !DMA2D_CopyBufferEnd && !isRunning && !isReserved)
9000403c:	4916      	ldr	r1, [pc, #88]	; (90004098 <DMA2D_XferCpltCallback+0xa0>)
9000403e:	4a17      	ldr	r2, [pc, #92]	; (9000409c <DMA2D_XferCpltCallback+0xa4>)
90004040:	680b      	ldr	r3, [r1, #0]
90004042:	011b      	lsls	r3, r3, #4
90004044:	5cd3      	ldrb	r3, [r2, r3]
90004046:	2b01      	cmp	r3, #1
90004048:	d004      	beq.n	90004054 <DMA2D_XferCpltCallback+0x5c>
9000404a:	bd10      	pop	{r4, pc}
9000404c:	4620      	mov	r0, r4
9000404e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90004052:	4710      	bx	r2
90004054:	4812      	ldr	r0, [pc, #72]	; (900040a0 <DMA2D_XferCpltCallback+0xa8>)
90004056:	6800      	ldr	r0, [r0, #0]
90004058:	2800      	cmp	r0, #0
9000405a:	d1f6      	bne.n	9000404a <DMA2D_XferCpltCallback+0x52>
9000405c:	7a20      	ldrb	r0, [r4, #8]
9000405e:	2800      	cmp	r0, #0
90004060:	d1f3      	bne.n	9000404a <DMA2D_XferCpltCallback+0x52>
90004062:	7aa0      	ldrb	r0, [r4, #10]
90004064:	2800      	cmp	r0, #0
90004066:	d1f0      	bne.n	9000404a <DMA2D_XferCpltCallback+0x52>
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90004068:	6808      	ldr	r0, [r1, #0]
                started_by_external_job = true;
9000406a:	f884 3da0 	strb.w	r3, [r4, #3488]	; 0xda0
        isRunning = true;
9000406e:	7223      	strb	r3, [r4, #8]
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90004070:	eb02 1000 	add.w	r0, r2, r0, lsl #4
90004074:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90004078:	f7ff bcc0 	b.w	900039fc <DMA2D_CopyBuffer>
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
9000407c:	4906      	ldr	r1, [pc, #24]	; (90004098 <DMA2D_XferCpltCallback+0xa0>)
            isRunning = false;
9000407e:	2200      	movs	r2, #0
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90004080:	4b06      	ldr	r3, [pc, #24]	; (9000409c <DMA2D_XferCpltCallback+0xa4>)
90004082:	6808      	ldr	r0, [r1, #0]
            isRunning = false;
90004084:	7222      	strb	r2, [r4, #8]
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90004086:	eb03 1000 	add.w	r0, r3, r0, lsl #4
9000408a:	f7ff fcfd 	bl	90003a88 <DMA2D_ExternalJobCompleted>
9000408e:	e7c2      	b.n	90004016 <DMA2D_XferCpltCallback+0x1e>
90004090:	240236cc 	.word	0x240236cc
90004094:	90003cd1 	.word	0x90003cd1
90004098:	24000188 	.word	0x24000188
9000409c:	24000008 	.word	0x24000008
900040a0:	24000184 	.word	0x24000184

900040a4 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
900040a4:	b570      	push	{r4, r5, r6, lr}
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false), mutexIsRunning(0)
900040a6:	4b10      	ldr	r3, [pc, #64]	; (900040e8 <_ZN8STM32DMAC1Ev+0x44>)
STM32DMA::STM32DMA()
900040a8:	4606      	mov	r6, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false), mutexIsRunning(0)
900040aa:	4604      	mov	r4, r0
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
900040ac:	2500      	movs	r5, #0
900040ae:	300c      	adds	r0, #12
900040b0:	2260      	movs	r2, #96	; 0x60
900040b2:	7235      	strb	r5, [r6, #8]
900040b4:	7275      	strb	r5, [r6, #9]
900040b6:	6070      	str	r0, [r6, #4]
900040b8:	f844 3b20 	str.w	r3, [r4], #32
900040bc:	4621      	mov	r1, r4
900040be:	f010 fd5d 	bl	90014b7c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
900040c2:	4621      	mov	r1, r4
900040c4:	f506 635a 	add.w	r3, r6, #3488	; 0xda0
        : color(0)
900040c8:	60cd      	str	r5, [r1, #12]
900040ca:	3124      	adds	r1, #36	; 0x24
900040cc:	428b      	cmp	r3, r1
900040ce:	d1fb      	bne.n	900040c8 <_ZN8STM32DMAC1Ev+0x24>
900040d0:	f886 5da0 	strb.w	r5, [r6, #3488]	; 0xda0
    mutexIsRunning = MUTEX_CREATE();
900040d4:	2000      	movs	r0, #0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false), mutexIsRunning(0)
900040d6:	f8c6 5da4 	str.w	r5, [r6, #3492]	; 0xda4
    mutexIsRunning = MUTEX_CREATE();
900040da:	f00c fba1 	bl	90010820 <osMutexNew>
900040de:	4603      	mov	r3, r0
}
900040e0:	4630      	mov	r0, r6
    mutexIsRunning = MUTEX_CREATE();
900040e2:	f8c6 3da4 	str.w	r3, [r6, #3492]	; 0xda4
}
900040e6:	bd70      	pop	{r4, r5, r6, pc}
900040e8:	9002b958 	.word	0x9002b958

900040ec <_ZN8touchgfx5paint8tearDownEv>:
 * @brief Waits until previous DMA drawing operation has finished
 */
void tearDown()
{
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
900040ec:	4a03      	ldr	r2, [pc, #12]	; (900040fc <_ZN8touchgfx5paint8tearDownEv+0x10>)
900040ee:	6813      	ldr	r3, [r2, #0]
900040f0:	07db      	lsls	r3, r3, #31
900040f2:	d4fc      	bmi.n	900040ee <_ZN8touchgfx5paint8tearDownEv+0x2>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
900040f4:	2323      	movs	r3, #35	; 0x23
900040f6:	6093      	str	r3, [r2, #8]
}
900040f8:	4770      	bx	lr
900040fa:	bf00      	nop
900040fc:	52001000 	.word	0x52001000

90004100 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
 *
 * @brief Renders Canvas Widget chunks using DMA.
 * This functions will not generate an interrupt, and will not affect the DMA queue.
 */
void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
90004100:	b430      	push	{r4, r5}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
90004102:	4c11      	ldr	r4, [pc, #68]	; (90004148 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x48>)
90004104:	6825      	ldr	r5, [r4, #0]
90004106:	07ed      	lsls	r5, r5, #31
90004108:	d4fc      	bmi.n	90004104 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
9000410a:	2523      	movs	r5, #35	; 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
9000410c:	0409      	lsls	r1, r1, #16

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    if (alpha < 0xFF)
9000410e:	2bff      	cmp	r3, #255	; 0xff
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
90004110:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90004112:	f041 0101 	orr.w	r1, r1, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90004116:	f04f 0502 	mov.w	r5, #2
9000411a:	6365      	str	r5, [r4, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
9000411c:	6461      	str	r1, [r4, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
9000411e:	63e0      	str	r0, [r4, #60]	; 0x3c
    if (alpha < 0xFF)
90004120:	d00b      	beq.n	9000413a <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x3a>
    {
        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
90004122:	490a      	ldr	r1, [pc, #40]	; (9000414c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4c>)
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90004124:	6265      	str	r5, [r4, #36]	; 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
90004126:	ea41 6303 	orr.w	r3, r1, r3, lsl #24

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
9000412a:	4909      	ldr	r1, [pc, #36]	; (90004150 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x50>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
9000412c:	61e3      	str	r3, [r4, #28]
        WRITE_REG(DMA2D->FGCOLR, color);
9000412e:	6222      	str	r2, [r4, #32]
        WRITE_REG(DMA2D->BGMAR, (uint32_t)ptr);
90004130:	6160      	str	r0, [r4, #20]
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);
90004132:	60e0      	str	r0, [r4, #12]
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
90004134:	6021      	str	r1, [r4, #0]
        WRITE_REG(DMA2D->OCOLR, color565);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
    }
}
90004136:	bc30      	pop	{r4, r5}
90004138:	4770      	bx	lr
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
9000413a:	61e5      	str	r5, [r4, #28]
        WRITE_REG(DMA2D->OCOLR, color565);
9000413c:	9a02      	ldr	r2, [sp, #8]
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
9000413e:	4b05      	ldr	r3, [pc, #20]	; (90004154 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x54>)
        WRITE_REG(DMA2D->OCOLR, color565);
90004140:	63a2      	str	r2, [r4, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
90004142:	6023      	str	r3, [r4, #0]
}
90004144:	bc30      	pop	{r4, r5}
90004146:	4770      	bx	lr
90004148:	52001000 	.word	0x52001000
9000414c:	00010009 	.word	0x00010009
90004150:	00020001 	.word	0x00020001
90004154:	00030001 	.word	0x00030001

90004158 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
90004158:	2001      	movs	r0, #1
9000415a:	4770      	bx	lr

9000415c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
9000415c:	2040      	movs	r0, #64	; 0x40
9000415e:	4770      	bx	lr

90004160 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
90004160:	eb00 1081 	add.w	r0, r0, r1, lsl #6
    }
90004164:	3008      	adds	r0, #8
90004166:	4770      	bx	lr

90004168 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
90004168:	eb00 1081 	add.w	r0, r0, r1, lsl #6
    }
9000416c:	3008      	adds	r0, #8
9000416e:	4770      	bx	lr

90004170 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI20screen_asteroidsViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
90004170:	2001      	movs	r0, #1
90004172:	4770      	bx	lr

90004174 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20screen_asteroidsViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
90004174:	f242 40c4 	movw	r0, #9412	; 0x24c4
90004178:	4770      	bx	lr
9000417a:	bf00      	nop

9000417c <_ZN8touchgfx9PartitionINS_4meta8TypeListI20screen_asteroidsViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
9000417c:	f242 43c4 	movw	r3, #9412	; 0x24c4
90004180:	fb03 0001 	mla	r0, r3, r1, r0
    }
90004184:	3008      	adds	r0, #8
90004186:	4770      	bx	lr

90004188 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI20screen_asteroidsViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90004188:	f242 43c4 	movw	r3, #9412	; 0x24c4
9000418c:	fb03 0001 	mla	r0, r3, r1, r0
    }
90004190:	3008      	adds	r0, #8
90004192:	4770      	bx	lr

90004194 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI25screen_asteroidsPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
90004194:	2001      	movs	r0, #1
90004196:	4770      	bx	lr

90004198 <_ZN8touchgfx9PartitionINS_4meta8TypeListI25screen_asteroidsPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
90004198:	2020      	movs	r0, #32
9000419a:	4770      	bx	lr

9000419c <_ZN8touchgfx9PartitionINS_4meta8TypeListI25screen_asteroidsPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
9000419c:	eb00 1041 	add.w	r0, r0, r1, lsl #5
    }
900041a0:	3008      	adds	r0, #8
900041a2:	4770      	bx	lr

900041a4 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI25screen_asteroidsPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
900041a4:	eb00 1041 	add.w	r0, r0, r1, lsl #5
    }
900041a8:	3008      	adds	r0, #8
900041aa:	4770      	bx	lr

900041ac <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoscreen_game_selectScreenNoTransition();
900041ac:	4608      	mov	r0, r1
900041ae:	f002 ba9d 	b.w	900066ec <_ZN23FrontendApplicationBase40gotoscreen_game_selectScreenNoTransitionEv>
900041b2:	bf00      	nop

900041b4 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
900041b4:	4b03      	ldr	r3, [pc, #12]	; (900041c4 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
900041b6:	b510      	push	{r4, lr}
900041b8:	4604      	mov	r4, r0
900041ba:	6003      	str	r3, [r0, #0]
900041bc:	f00f fb2b 	bl	90013816 <_ZN8touchgfx17AbstractPartitionD1Ev>
900041c0:	4620      	mov	r0, r4
900041c2:	bd10      	pop	{r4, pc}
900041c4:	9002ba10 	.word	0x9002ba10

900041c8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
900041c8:	4b05      	ldr	r3, [pc, #20]	; (900041e0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED0Ev+0x18>)
900041ca:	b510      	push	{r4, lr}
900041cc:	4604      	mov	r4, r0
900041ce:	6003      	str	r3, [r0, #0]
900041d0:	f00f fb21 	bl	90013816 <_ZN8touchgfx17AbstractPartitionD1Ev>
900041d4:	2148      	movs	r1, #72	; 0x48
900041d6:	4620      	mov	r0, r4
900041d8:	f025 fd21 	bl	90029c1e <_ZdlPvj>
900041dc:	4620      	mov	r0, r4
900041de:	bd10      	pop	{r4, pc}
900041e0:	9002ba10 	.word	0x9002ba10

900041e4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20screen_asteroidsViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
900041e4:	4b03      	ldr	r3, [pc, #12]	; (900041f4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20screen_asteroidsViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
900041e6:	b510      	push	{r4, lr}
900041e8:	4604      	mov	r4, r0
900041ea:	6003      	str	r3, [r0, #0]
900041ec:	f00f fb13 	bl	90013816 <_ZN8touchgfx17AbstractPartitionD1Ev>
900041f0:	4620      	mov	r0, r4
900041f2:	bd10      	pop	{r4, pc}
900041f4:	9002b9dc 	.word	0x9002b9dc

900041f8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20screen_asteroidsViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
900041f8:	4b06      	ldr	r3, [pc, #24]	; (90004214 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20screen_asteroidsViewNS2_INS1_3NilES4_EEEELt1EED0Ev+0x1c>)
900041fa:	b510      	push	{r4, lr}
900041fc:	4604      	mov	r4, r0
900041fe:	6003      	str	r3, [r0, #0]
90004200:	f00f fb09 	bl	90013816 <_ZN8touchgfx17AbstractPartitionD1Ev>
90004204:	f242 41cc 	movw	r1, #9420	; 0x24cc
90004208:	4620      	mov	r0, r4
9000420a:	f025 fd08 	bl	90029c1e <_ZdlPvj>
9000420e:	4620      	mov	r0, r4
90004210:	bd10      	pop	{r4, pc}
90004212:	bf00      	nop
90004214:	9002b9dc 	.word	0x9002b9dc

90004218 <_ZN8touchgfx9PartitionINS_4meta8TypeListI25screen_asteroidsPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
90004218:	4b03      	ldr	r3, [pc, #12]	; (90004228 <_ZN8touchgfx9PartitionINS_4meta8TypeListI25screen_asteroidsPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
9000421a:	b510      	push	{r4, lr}
9000421c:	4604      	mov	r4, r0
9000421e:	6003      	str	r3, [r0, #0]
90004220:	f00f faf9 	bl	90013816 <_ZN8touchgfx17AbstractPartitionD1Ev>
90004224:	4620      	mov	r0, r4
90004226:	bd10      	pop	{r4, pc}
90004228:	9002b9a8 	.word	0x9002b9a8

9000422c <_ZN8touchgfx9PartitionINS_4meta8TypeListI25screen_asteroidsPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
9000422c:	4b05      	ldr	r3, [pc, #20]	; (90004244 <_ZN8touchgfx9PartitionINS_4meta8TypeListI25screen_asteroidsPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev+0x18>)
9000422e:	b510      	push	{r4, lr}
90004230:	4604      	mov	r4, r0
90004232:	6003      	str	r3, [r0, #0]
90004234:	f00f faef 	bl	90013816 <_ZN8touchgfx17AbstractPartitionD1Ev>
90004238:	2128      	movs	r1, #40	; 0x28
9000423a:	4620      	mov	r0, r4
9000423c:	f025 fcef 	bl	90029c1e <_ZdlPvj>
90004240:	4620      	mov	r0, r4
90004242:	bd10      	pop	{r4, pc}
90004244:	9002b9a8 	.word	0x9002b9a8

90004248 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
90004248:	b510      	push	{r4, lr}
9000424a:	4604      	mov	r4, r0
9000424c:	490c      	ldr	r1, [pc, #48]	; (90004280 <_ZN12FrontendHeapD1Ev+0x38>)
9000424e:	4a0d      	ldr	r2, [pc, #52]	; (90004284 <_ZN12FrontendHeapD1Ev+0x3c>)
90004250:	f242 5008 	movw	r0, #9480	; 0x2508
90004254:	f504 5300 	add.w	r3, r4, #8192	; 0x2000
90004258:	6021      	str	r1, [r4, #0]
9000425a:	4420      	add	r0, r4
9000425c:	f8c3 2508 	str.w	r2, [r3, #1288]	; 0x508
90004260:	f00f fad9 	bl	90013816 <_ZN8touchgfx17AbstractPartitionD1Ev>
90004264:	4620      	mov	r0, r4
90004266:	4b08      	ldr	r3, [pc, #32]	; (90004288 <_ZN12FrontendHeapD1Ev+0x40>)
90004268:	f840 3f3c 	str.w	r3, [r0, #60]!
9000426c:	f00f fad3 	bl	90013816 <_ZN8touchgfx17AbstractPartitionD1Ev>
90004270:	4620      	mov	r0, r4
90004272:	4b06      	ldr	r3, [pc, #24]	; (9000428c <_ZN12FrontendHeapD1Ev+0x44>)
90004274:	f840 3f14 	str.w	r3, [r0, #20]!
90004278:	f00f facd 	bl	90013816 <_ZN8touchgfx17AbstractPartitionD1Ev>
9000427c:	4620      	mov	r0, r4
9000427e:	bd10      	pop	{r4, pc}
90004280:	9002ba44 	.word	0x9002ba44
90004284:	9002ba10 	.word	0x9002ba10
90004288:	9002b9dc 	.word	0x9002b9dc
9000428c:	9002b9a8 	.word	0x9002b9a8

90004290 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
90004290:	b510      	push	{r4, lr}
class FrontendHeap : public FrontendHeapBase
90004292:	4c0c      	ldr	r4, [pc, #48]	; (900042c4 <__tcf_0+0x34>)
90004294:	4a0c      	ldr	r2, [pc, #48]	; (900042c8 <__tcf_0+0x38>)
90004296:	f504 5300 	add.w	r3, r4, #8192	; 0x2000
9000429a:	490c      	ldr	r1, [pc, #48]	; (900042cc <__tcf_0+0x3c>)
9000429c:	480c      	ldr	r0, [pc, #48]	; (900042d0 <__tcf_0+0x40>)
9000429e:	f8c3 2508 	str.w	r2, [r3, #1288]	; 0x508
900042a2:	6021      	str	r1, [r4, #0]
900042a4:	f00f fab7 	bl	90013816 <_ZN8touchgfx17AbstractPartitionD1Ev>
900042a8:	4620      	mov	r0, r4
900042aa:	4b0a      	ldr	r3, [pc, #40]	; (900042d4 <__tcf_0+0x44>)
900042ac:	f840 3f3c 	str.w	r3, [r0, #60]!
900042b0:	f00f fab1 	bl	90013816 <_ZN8touchgfx17AbstractPartitionD1Ev>
900042b4:	4620      	mov	r0, r4
900042b6:	4b08      	ldr	r3, [pc, #32]	; (900042d8 <__tcf_0+0x48>)
        static FrontendHeap instance;
900042b8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900042bc:	f840 3f14 	str.w	r3, [r0, #20]!
900042c0:	f00f baa9 	b.w	90013816 <_ZN8touchgfx17AbstractPartitionD1Ev>
900042c4:	24005bdc 	.word	0x24005bdc
900042c8:	9002ba10 	.word	0x9002ba10
900042cc:	9002ba44 	.word	0x9002ba44
900042d0:	240080e4 	.word	0x240080e4
900042d4:	9002b9dc 	.word	0x9002b9dc
900042d8:	9002b9a8 	.word	0x9002b9a8

900042dc <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
900042dc:	b510      	push	{r4, lr}
900042de:	4604      	mov	r4, r0
900042e0:	4a0f      	ldr	r2, [pc, #60]	; (90004320 <_ZN12FrontendHeapD0Ev+0x44>)
900042e2:	4910      	ldr	r1, [pc, #64]	; (90004324 <_ZN12FrontendHeapD0Ev+0x48>)
900042e4:	f242 5008 	movw	r0, #9480	; 0x2508
900042e8:	f504 5300 	add.w	r3, r4, #8192	; 0x2000
900042ec:	6021      	str	r1, [r4, #0]
900042ee:	4420      	add	r0, r4
900042f0:	f8c3 2508 	str.w	r2, [r3, #1288]	; 0x508
900042f4:	f00f fa8f 	bl	90013816 <_ZN8touchgfx17AbstractPartitionD1Ev>
900042f8:	4620      	mov	r0, r4
900042fa:	4b0b      	ldr	r3, [pc, #44]	; (90004328 <_ZN12FrontendHeapD0Ev+0x4c>)
900042fc:	f840 3f3c 	str.w	r3, [r0, #60]!
90004300:	f00f fa89 	bl	90013816 <_ZN8touchgfx17AbstractPartitionD1Ev>
90004304:	4b09      	ldr	r3, [pc, #36]	; (9000432c <_ZN12FrontendHeapD0Ev+0x50>)
90004306:	4620      	mov	r0, r4
90004308:	f840 3f14 	str.w	r3, [r0, #20]!
9000430c:	f00f fa83 	bl	90013816 <_ZN8touchgfx17AbstractPartitionD1Ev>
90004310:	4620      	mov	r0, r4
90004312:	f242 61b0 	movw	r1, #9904	; 0x26b0
90004316:	f025 fc82 	bl	90029c1e <_ZdlPvj>
9000431a:	4620      	mov	r0, r4
9000431c:	bd10      	pop	{r4, pc}
9000431e:	bf00      	nop
90004320:	9002ba10 	.word	0x9002ba10
90004324:	9002ba44 	.word	0x9002ba44
90004328:	9002b9dc 	.word	0x9002b9dc
9000432c:	9002b9a8 	.word	0x9002b9a8

90004330 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 480, 272);

void touchgfx_init()
{
90004330:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90004334:	b082      	sub	sp, #8
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
90004336:	2400      	movs	r4, #0
90004338:	f001 fc68 	bl	90005c0c <_ZN14BitmapDatabase11getInstanceEv>
9000433c:	4605      	mov	r5, r0
9000433e:	f001 fc69 	bl	90005c14 <_ZN14BitmapDatabase15getInstanceSizeEv>
90004342:	4623      	mov	r3, r4
90004344:	4601      	mov	r1, r0
90004346:	4622      	mov	r2, r4
90004348:	4628      	mov	r0, r5
9000434a:	9400      	str	r4, [sp, #0]
9000434c:	f017 fc46 	bl	9001bbdc <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
90004350:	4b29      	ldr	r3, [pc, #164]	; (900043f8 <touchgfx_init+0xc8>)
90004352:	4a2a      	ldr	r2, [pc, #168]	; (900043fc <touchgfx_init+0xcc>)
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
90004354:	4620      	mov	r0, r4
        static FrontendHeap instance;
90004356:	4c2a      	ldr	r4, [pc, #168]	; (90004400 <touchgfx_init+0xd0>)
90004358:	601a      	str	r2, [r3, #0]
9000435a:	f002 fb97 	bl	90006a8c <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
9000435e:	4829      	ldr	r0, [pc, #164]	; (90004404 <touchgfx_init+0xd4>)
90004360:	f017 fba4 	bl	9001baac <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
90004364:	6823      	ldr	r3, [r4, #0]
90004366:	f3bf 8f5b 	dmb	ish
9000436a:	07db      	lsls	r3, r3, #31
9000436c:	d505      	bpl.n	9000437a <touchgfx_init+0x4a>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
9000436e:	4826      	ldr	r0, [pc, #152]	; (90004408 <touchgfx_init+0xd8>)
}
90004370:	b002      	add	sp, #8
90004372:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
90004376:	f7fe bb47 	b.w	90002a08 <_ZN11TouchGFXHAL10initializeEv>
9000437a:	4620      	mov	r0, r4
9000437c:	f025 fc51 	bl	90029c22 <__cxa_guard_acquire>
90004380:	2800      	cmp	r0, #0
90004382:	d0f4      	beq.n	9000436e <touchgfx_init+0x3e>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
90004384:	4d21      	ldr	r5, [pc, #132]	; (9000440c <touchgfx_init+0xdc>)
          screenStorage(scr),
          transitionStorage(tra),
90004386:	4f22      	ldr	r7, [pc, #136]	; (90004410 <touchgfx_init+0xe0>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
90004388:	4b22      	ldr	r3, [pc, #136]	; (90004414 <touchgfx_init+0xe4>)
        : presenterStorage(pres),
9000438a:	f105 0014 	add.w	r0, r5, #20
          frontendApplication(app)
9000438e:	f107 064c 	add.w	r6, r7, #76	; 0x4c
          screenStorage(scr),
90004392:	f105 083c 	add.w	r8, r5, #60	; 0x3c
90004396:	602b      	str	r3, [r5, #0]
          transitionStorage(tra),
90004398:	60ef      	str	r7, [r5, #12]
        : presenterStorage(pres),
9000439a:	6068      	str	r0, [r5, #4]
          frontendApplication(app)
9000439c:	612e      	str	r6, [r5, #16]
          screenStorage(scr),
9000439e:	f8c5 8008 	str.w	r8, [r5, #8]
900043a2:	f00f fa39 	bl	90013818 <_ZN8touchgfx17AbstractPartitionC1Ev>
900043a6:	4b1c      	ldr	r3, [pc, #112]	; (90004418 <touchgfx_init+0xe8>)
900043a8:	4640      	mov	r0, r8
900043aa:	616b      	str	r3, [r5, #20]
900043ac:	f00f fa34 	bl	90013818 <_ZN8touchgfx17AbstractPartitionC1Ev>
900043b0:	4b1a      	ldr	r3, [pc, #104]	; (9000441c <touchgfx_init+0xec>)
900043b2:	4638      	mov	r0, r7
900043b4:	63eb      	str	r3, [r5, #60]	; 0x3c
900043b6:	f00f fa2f 	bl	90013818 <_ZN8touchgfx17AbstractPartitionC1Ev>
900043ba:	f505 5300 	add.w	r3, r5, #8192	; 0x2000
900043be:	4a18      	ldr	r2, [pc, #96]	; (90004420 <touchgfx_init+0xf0>)
900043c0:	f503 60aa 	add.w	r0, r3, #1360	; 0x550
900043c4:	f8c3 2508 	str.w	r2, [r3, #1288]	; 0x508
900043c8:	f003 fc8e 	bl	90007ce8 <_ZN5ModelC1Ev>
900043cc:	462a      	mov	r2, r5
900043ce:	f107 0148 	add.w	r1, r7, #72	; 0x48
900043d2:	4630      	mov	r0, r6
900043d4:	f003 fc6e 	bl	90007cb4 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
900043d8:	4630      	mov	r0, r6
900043da:	f002 f987 	bl	900066ec <_ZN23FrontendApplicationBase40gotoscreen_game_selectScreenNoTransitionEv>
        static FrontendHeap instance;
900043de:	4811      	ldr	r0, [pc, #68]	; (90004424 <touchgfx_init+0xf4>)
900043e0:	f025 fc6a 	bl	90029cb8 <atexit>
900043e4:	4620      	mov	r0, r4
900043e6:	f025 fc28 	bl	90029c3a <__cxa_guard_release>
900043ea:	4807      	ldr	r0, [pc, #28]	; (90004408 <touchgfx_init+0xd8>)
}
900043ec:	b002      	add	sp, #8
900043ee:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
900043f2:	f7fe bb09 	b.w	90002a08 <_ZN11TouchGFXHAL10initializeEv>
900043f6:	bf00      	nop
900043f8:	24023730 	.word	0x24023730
900043fc:	240090c0 	.word	0x240090c0
90004400:	24005bd8 	.word	0x24005bd8
90004404:	2400002c 	.word	0x2400002c
90004408:	24009038 	.word	0x24009038
9000440c:	24005bdc 	.word	0x24005bdc
90004410:	240080e4 	.word	0x240080e4
90004414:	9002ba44 	.word	0x9002ba44
90004418:	9002b9a8 	.word	0x9002b9a8
9000441c:	9002b9dc 	.word	0x9002b9dc
90004420:	9002ba10 	.word	0x9002ba10
90004424:	90004291 	.word	0x90004291

90004428 <touchgfx_components_init>:

void touchgfx_components_init()
{
}
90004428:	4770      	bx	lr
9000442a:	bf00      	nop

9000442c <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
9000442c:	4801      	ldr	r0, [pc, #4]	; (90004434 <touchgfx_taskEntry+0x8>)
9000442e:	f7fe bab1 	b.w	90002994 <_ZN11TouchGFXHAL9taskEntryEv>
90004432:	bf00      	nop
90004434:	24009038 	.word	0x24009038

90004438 <_GLOBAL__sub_I_touchgfx_init>:
}
90004438:	b570      	push	{r4, r5, r6, lr}
{
public:

    STM32TouchController() {}
9000443a:	4b25      	ldr	r3, [pc, #148]	; (900044d0 <_GLOBAL__sub_I_touchgfx_init+0x98>)
9000443c:	4c25      	ldr	r4, [pc, #148]	; (900044d4 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
static STM32DMA dma;
9000443e:	4e26      	ldr	r6, [pc, #152]	; (900044d8 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
static LCD16bpp display;
90004440:	4d26      	ldr	r5, [pc, #152]	; (900044dc <_GLOBAL__sub_I_touchgfx_init+0xa4>)
90004442:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
90004444:	4630      	mov	r0, r6
90004446:	f7ff fe2d 	bl	900040a4 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
9000444a:	4628      	mov	r0, r5
9000444c:	f01b fe9e 	bl	9002018c <_ZN8touchgfx8LCD16bppC1Ev>
        : dma(dmaInterface),
90004450:	4b23      	ldr	r3, [pc, #140]	; (900044e0 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
          mcuInstrumentation(0),
90004452:	2200      	movs	r2, #0
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
90004454:	f44f 70f0 	mov.w	r0, #480	; 0x1e0
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
90004458:	f44f 7188 	mov.w	r1, #272	; 0x110
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
9000445c:	62da      	str	r2, [r3, #44]	; 0x2c
9000445e:	861a      	strh	r2, [r3, #48]	; 0x30
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
90004460:	655a      	str	r2, [r3, #84]	; 0x54
          useAuxiliaryLCD(false),
90004462:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
          lastY(0),
90004466:	665a      	str	r2, [r3, #100]	; 0x64
          vSyncCompensationEnabled(false),
90004468:	66da      	str	r2, [r3, #108]	; 0x6c
          updateMCULoad(0),
9000446a:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
          mcuInstrumentation(0),
9000446e:	e9c3 4203 	strd	r4, r2, [r3, #12]
          touchSampleRate(1),
90004472:	4c1c      	ldr	r4, [pc, #112]	; (900044e4 <_GLOBAL__sub_I_touchgfx_init+0xac>)
90004474:	669c      	str	r4, [r3, #104]	; 0x68
        instance = this;
90004476:	4c1c      	ldr	r4, [pc, #112]	; (900044e8 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
90004478:	6023      	str	r3, [r4, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
9000447a:	4c1c      	ldr	r4, [pc, #112]	; (900044ec <_GLOBAL__sub_I_touchgfx_init+0xb4>)
9000447c:	8020      	strh	r0, [r4, #0]
9000447e:	4c1c      	ldr	r4, [pc, #112]	; (900044f0 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
90004480:	8020      	strh	r0, [r4, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
90004482:	4c1c      	ldr	r4, [pc, #112]	; (900044f4 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
90004484:	481c      	ldr	r0, [pc, #112]	; (900044f8 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
90004486:	8021      	strh	r1, [r4, #0]
90004488:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
9000448a:	4c1c      	ldr	r4, [pc, #112]	; (900044fc <_GLOBAL__sub_I_touchgfx_init+0xc4>)
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
9000448c:	491c      	ldr	r1, [pc, #112]	; (90004500 <_GLOBAL__sub_I_touchgfx_init+0xc8>)
          requestedOrientation(ORIENTATION_LANDSCAPE),
9000448e:	481d      	ldr	r0, [pc, #116]	; (90004504 <_GLOBAL__sub_I_touchgfx_init+0xcc>)
          lcdRef(display),
90004490:	e9c3 6501 	strd	r6, r5, [r3, #4]
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
90004494:	f44f 7580 	mov.w	r5, #256	; 0x100
          frameBufferAllocator(0),
90004498:	e9c3 2205 	strd	r2, r2, [r3, #20]
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
9000449c:	649d      	str	r5, [r3, #72]	; 0x48
            : startX(0),
9000449e:	e9c3 2207 	strd	r2, r2, [r3, #28]
        : drag(), listener(0), dragThresholdValue(0)
900044a2:	e9c3 2209 	strd	r2, r2, [r3, #36]	; 0x24
          frameBuffer0(0),
900044a6:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
          frameBuffer2(0),
900044aa:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
900044ae:	e9c3 2213 	strd	r2, r2, [r3, #76]	; 0x4c
          lastX(0),
900044b2:	e9c3 2217 	strd	r2, r2, [r3, #92]	; 0x5c
        DISPLAY_ROTATION = rotate0;
900044b6:	7022      	strb	r2, [r4, #0]
900044b8:	6019      	str	r1, [r3, #0]
900044ba:	4913      	ldr	r1, [pc, #76]	; (90004508 <_GLOBAL__sub_I_touchgfx_init+0xd0>)
        : cc_consumed(0),
900044bc:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
900044c0:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
          cc_in(0)
900044c4:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
900044c8:	67d9      	str	r1, [r3, #124]	; 0x7c
          requestedOrientation(ORIENTATION_LANDSCAPE),
900044ca:	e9c3 201d 	strd	r2, r0, [r3, #116]	; 0x74
}
900044ce:	bd70      	pop	{r4, r5, r6, pc}
900044d0:	9002b1ac 	.word	0x9002b1ac
900044d4:	2400828c 	.word	0x2400828c
900044d8:	24008290 	.word	0x24008290
900044dc:	240090c4 	.word	0x240090c4
900044e0:	24009038 	.word	0x24009038
900044e4:	01000001 	.word	0x01000001
900044e8:	240236cc 	.word	0x240236cc
900044ec:	240236c0 	.word	0x240236c0
900044f0:	240236c6 	.word	0x240236c6
900044f4:	240236c2 	.word	0x240236c2
900044f8:	240236c8 	.word	0x240236c8
900044fc:	240236c4 	.word	0x240236c4
90004500:	9002b33c 	.word	0x9002b33c
90004504:	01010000 	.word	0x01010000
90004508:	9002b184 	.word	0x9002b184

9000450c <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
9000450c:	4801      	ldr	r0, [pc, #4]	; (90004514 <_GLOBAL__sub_D_touchgfx_init+0x8>)
9000450e:	f7ff bb4b 	b.w	90003ba8 <_ZN8STM32DMAD1Ev>
90004512:	bf00      	nop
90004514:	24008290 	.word	0x24008290

90004518 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
     * drawn by the widget.
     */
    virtual void invalidateContent() const
    {
        // Consider checking if *this is in the draw chain
        if (visible)
90004518:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
9000451c:	b112      	cbz	r2, 90004524 <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
        {
            invalidate();
9000451e:	6803      	ldr	r3, [r0, #0]
90004520:	695b      	ldr	r3, [r3, #20]
90004522:	4718      	bx	r3
        }
    }
90004524:	4770      	bx	lr
90004526:	bf00      	nop

90004528 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
90004528:	2000      	movs	r0, #0
9000452a:	4770      	bx	lr

9000452c <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
9000452c:	8081      	strh	r1, [r0, #4]
    }
9000452e:	4770      	bx	lr

90004530 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
90004530:	80c1      	strh	r1, [r0, #6]
    }
90004532:	4770      	bx	lr

90004534 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
90004534:	8101      	strh	r1, [r0, #8]
    }
90004536:	4770      	bx	lr

90004538 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
90004538:	8141      	strh	r1, [r0, #10]
    }
9000453a:	4770      	bx	lr

9000453c <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
9000453c:	4770      	bx	lr
9000453e:	bf00      	nop

90004540 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
90004540:	4770      	bx	lr
90004542:	bf00      	nop

90004544 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
90004544:	4770      	bx	lr
90004546:	bf00      	nop

90004548 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
90004548:	4770      	bx	lr
9000454a:	bf00      	nop

9000454c <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
9000454c:	4770      	bx	lr
9000454e:	bf00      	nop

90004550 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
    {
        moveRelative(x - rect.x, y - rect.y);
90004550:	f8b0 c006 	ldrh.w	ip, [r0, #6]
90004554:	6803      	ldr	r3, [r0, #0]
90004556:	eba2 020c 	sub.w	r2, r2, ip
9000455a:	f8b0 c004 	ldrh.w	ip, [r0, #4]
9000455e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
90004560:	eba1 010c 	sub.w	r1, r1, ip
90004564:	b212      	sxth	r2, r2
90004566:	b209      	sxth	r1, r1
90004568:	4718      	bx	r3
9000456a:	bf00      	nop

9000456c <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
9000456c:	6813      	ldr	r3, [r2, #0]
        cachedVisibleRect.x = UNCACHED_INDICATOR;
9000456e:	f64f 7cff 	movw	ip, #65535	; 0xffff
        cachedAbsX = UNCACHED_INDICATOR;
90004572:	f04f 31ff 	mov.w	r1, #4294967295
        cachedVisibleRect.x = UNCACHED_INDICATOR;
90004576:	f8a0 c00c 	strh.w	ip, [r0, #12]
        nextDrawChainElement = *nextPreviousElement;
9000457a:	e9c0 3107 	strd	r3, r1, [r0, #28]
        *nextPreviousElement = this;
9000457e:	6010      	str	r0, [r2, #0]
    }
90004580:	4770      	bx	lr
90004582:	bf00      	nop

90004584 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
90004584:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
90004588:	b11a      	cbz	r2, 90004592 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
9000458a:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
9000458e:	b102      	cbz	r2, 90004592 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
90004590:	6018      	str	r0, [r3, #0]
        }
    }
90004592:	4770      	bx	lr

90004594 <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
90004594:	2000      	movs	r0, #0
90004596:	4770      	bx	lr

90004598 <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @return True if the painter is ready to paint, false otherwise.
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
90004598:	4603      	mov	r3, r0
    {
        widgetWidth = widgetRect.width;
9000459a:	888a      	ldrh	r2, [r1, #4]
        return true;
    }
9000459c:	2001      	movs	r0, #1
        widgetWidth = widgetRect.width;
9000459e:	809a      	strh	r2, [r3, #4]
    }
900045a0:	4770      	bx	lr
900045a2:	bf00      	nop

900045a4 <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
900045a4:	4770      	bx	lr
900045a6:	bf00      	nop

900045a8 <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
900045a8:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
    }
900045ac:	4770      	bx	lr
900045ae:	bf00      	nop

900045b0 <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
900045b0:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
900045b4:	4770      	bx	lr
900045b6:	bf00      	nop

900045b8 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
900045b8:	f04f 0c00 	mov.w	ip, #0
        return rect.width;
900045bc:	688a      	ldr	r2, [r1, #8]
900045be:	f8c0 c000 	str.w	ip, [r0]
900045c2:	6042      	str	r2, [r0, #4]
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
900045c4:	4770      	bx	lr
900045c6:	bf00      	nop

900045c8 <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
900045c8:	2200      	movs	r2, #0
900045ca:	6002      	str	r2, [r0, #0]
900045cc:	6042      	str	r2, [r0, #4]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
900045ce:	4770      	bx	lr

900045d0 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
    }

    virtual Bitmap::BitmapFormat framebufferFormat() const
    {
        return Bitmap::RGB565;
    }
900045d0:	2000      	movs	r0, #0
900045d2:	4770      	bx	lr

900045d4 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
900045d4:	4b03      	ldr	r3, [pc, #12]	; (900045e4 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
900045d6:	2290      	movs	r2, #144	; 0x90
900045d8:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
900045dc:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
900045e0:	4770      	bx	lr
900045e2:	bf00      	nop
900045e4:	e000e100 	.word	0xe000e100

900045e8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
900045e8:	4a09      	ldr	r2, [pc, #36]	; (90004610 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
900045ea:	490a      	ldr	r1, [pc, #40]	; (90004614 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
900045ec:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
900045ee:	480a      	ldr	r0, [pc, #40]	; (90004618 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
900045f0:	f3c3 030a 	ubfx	r3, r3, #0, #11
900045f4:	3b01      	subs	r3, #1
900045f6:	b29b      	uxth	r3, r3
900045f8:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
900045fa:	6911      	ldr	r1, [r2, #16]
900045fc:	f3c1 010a 	ubfx	r1, r1, #0, #11
90004600:	3901      	subs	r1, #1
90004602:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
90004604:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
90004606:	6b53      	ldr	r3, [r2, #52]	; 0x34
90004608:	f043 0301 	orr.w	r3, r3, #1
9000460c:	6353      	str	r3, [r2, #52]	; 0x34
}
9000460e:	4770      	bx	lr
90004610:	50001000 	.word	0x50001000
90004614:	24009196 	.word	0x24009196
90004618:	24009194 	.word	0x24009194

9000461c <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    dma.start();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
9000461c:	4b01      	ldr	r3, [pc, #4]	; (90004624 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
9000461e:	f8d3 00ac 	ldr.w	r0, [r3, #172]	; 0xac
}
90004622:	4770      	bx	lr
90004624:	50001000 	.word	0x50001000

90004628 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
90004628:	4b02      	ldr	r3, [pc, #8]	; (90004634 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
9000462a:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
9000462c:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
90004630:	625a      	str	r2, [r3, #36]	; 0x24
}
90004632:	4770      	bx	lr
90004634:	50001000 	.word	0x50001000

90004638 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setRGBBufferEPhj>:

    virtual void setRGBBuffer(uint8_t* buffer, size_t sizeOfBuffer)
    {
        // Running in UI thread / main

        bufferRGB = buffer;
90004638:	e9c0 120c 	strd	r1, r2, [r0, #48]	; 0x30
        topBufferRGB = bufferRGB;
9000463c:	6381      	str	r1, [r0, #56]	; 0x38
        sizeBufferRGB = sizeOfBuffer;
    }
9000463e:	4770      	bx	lr

90004640 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EED1Ev>:
class DedicatedBufferController : public touchgfx::VideoController
90004640:	4770      	bx	lr
90004642:	bf00      	nop

90004644 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE>:
        mjpegDecoders[handle]->setVideoData(reader);
90004644:	eb00 0081 	add.w	r0, r0, r1, lsl #2
90004648:	4611      	mov	r1, r2
9000464a:	6840      	ldr	r0, [r0, #4]
9000464c:	6803      	ldr	r3, [r0, #0]
9000464e:	68db      	ldr	r3, [r3, #12]
90004650:	4718      	bx	r3
90004652:	bf00      	nop

90004654 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE29setVideoFrameRateCompensationEb>:
        return stream.isPlaying;
    }

    virtual void setVideoFrameRateCompensation(bool allow)
    {
        allowSkipFrames = allow;
90004654:	f880 103c 	strb.w	r1, [r0, #60]	; 0x3c
    }
90004658:	4770      	bx	lr
9000465a:	bf00      	nop

9000465c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EED0Ev>:
class DedicatedBufferController : public touchgfx::VideoController
9000465c:	b510      	push	{r4, lr}
9000465e:	4604      	mov	r4, r0
90004660:	2148      	movs	r1, #72	; 0x48
90004662:	f025 fadc 	bl	90029c1e <_ZdlPvj>
90004666:	4620      	mov	r0, r4
90004668:	bd10      	pop	{r4, pc}
9000466a:	bf00      	nop

9000466c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm>:
        assert(handle < no_streams);
9000466c:	b911      	cbnz	r1, 90004674 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x8>
    }
9000466e:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
90004672:	4770      	bx	lr
    virtual bool getIsPlaying(const Handle handle)
90004674:	b508      	push	{r3, lr}
        assert(handle < no_streams);
90004676:	4a03      	ldr	r2, [pc, #12]	; (90004684 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x18>)
90004678:	f44f 71b8 	mov.w	r1, #368	; 0x170
9000467c:	4b02      	ldr	r3, [pc, #8]	; (90004688 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x1c>)
9000467e:	4803      	ldr	r0, [pc, #12]	; (9000468c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x20>)
90004680:	f025 fafc 	bl	90029c7c <__assert_func>
90004684:	9002ba64 	.word	0x9002ba64
90004688:	9002ba50 	.word	0x9002ba50
9000468c:	9002bbf0 	.word	0x9002bbf0

90004690 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE>:
        assert(handle < no_streams);
90004690:	b921      	cbnz	r1, 9000469c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0xc>
        mjpegDecoders[handle]->getVideoInfo(data);
90004692:	6840      	ldr	r0, [r0, #4]
90004694:	4611      	mov	r1, r2
90004696:	6803      	ldr	r3, [r0, #0]
90004698:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9000469a:	4718      	bx	r3
        assert(handle < no_streams);
9000469c:	4b03      	ldr	r3, [pc, #12]	; (900046ac <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x1c>)
9000469e:	f44f 71b5 	mov.w	r1, #362	; 0x16a
900046a2:	4a03      	ldr	r2, [pc, #12]	; (900046b0 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x20>)
900046a4:	4803      	ldr	r0, [pc, #12]	; (900046b4 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x24>)
    virtual void getVideoInformation(const Handle handle, touchgfx::VideoInformation* data)
900046a6:	b510      	push	{r4, lr}
        assert(handle < no_streams);
900046a8:	f025 fae8 	bl	90029c7c <__assert_func>
900046ac:	9002ba50 	.word	0x9002ba50
900046b0:	9002bc34 	.word	0x9002bc34
900046b4:	9002bbf0 	.word	0x9002bbf0

900046b8 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm>:
        assert(handle < no_streams);
900046b8:	b909      	cbnz	r1, 900046be <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x6>
    }
900046ba:	68c0      	ldr	r0, [r0, #12]
900046bc:	4770      	bx	lr
    virtual uint32_t getCurrentFrameNumber(const Handle handle)
900046be:	b508      	push	{r3, lr}
        assert(handle < no_streams);
900046c0:	4a02      	ldr	r2, [pc, #8]	; (900046cc <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x14>)
900046c2:	2179      	movs	r1, #121	; 0x79
900046c4:	4b02      	ldr	r3, [pc, #8]	; (900046d0 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x18>)
900046c6:	4803      	ldr	r0, [pc, #12]	; (900046d4 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x1c>)
900046c8:	f025 fad8 	bl	90029c7c <__assert_func>
900046cc:	9002bde4 	.word	0x9002bde4
900046d0:	9002ba50 	.word	0x9002ba50
900046d4:	9002bbf0 	.word	0x9002bbf0

900046d8 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm>:
    virtual void setVideoData(const Handle handle, const uint8_t* movie, const uint32_t length)
900046d8:	b510      	push	{r4, lr}
        assert(handle < no_streams);
900046da:	460c      	mov	r4, r1
900046dc:	b949      	cbnz	r1, 900046f2 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x1a>
900046de:	4611      	mov	r1, r2
900046e0:	461a      	mov	r2, r3
        mjpegDecoders[handle]->setVideoData(movie, length);
900046e2:	6843      	ldr	r3, [r0, #4]
        stream.frameNumber = 0;
900046e4:	60c4      	str	r4, [r0, #12]
        mjpegDecoders[handle]->setVideoData(movie, length);
900046e6:	681c      	ldr	r4, [r3, #0]
900046e8:	4618      	mov	r0, r3
900046ea:	68a3      	ldr	r3, [r4, #8]
    }
900046ec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        mjpegDecoders[handle]->setVideoData(movie, length);
900046f0:	4718      	bx	r3
        assert(handle < no_streams);
900046f2:	4b03      	ldr	r3, [pc, #12]	; (90004700 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x28>)
900046f4:	2190      	movs	r1, #144	; 0x90
900046f6:	4a03      	ldr	r2, [pc, #12]	; (90004704 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x2c>)
900046f8:	4803      	ldr	r0, [pc, #12]	; (90004708 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x30>)
900046fa:	f025 fabf 	bl	90029c7c <__assert_func>
900046fe:	bf00      	nop
90004700:	9002ba50 	.word	0x9002ba50
90004704:	9002bf98 	.word	0x9002bf98
90004708:	9002bbf0 	.word	0x9002bbf0

9000470c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm>:
        assert(handle < no_streams);
9000470c:	b921      	cbnz	r1, 90004718 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0xc>
        stream.tickCount = 0;
9000470e:	e9c0 1104 	strd	r1, r1, [r0, #16]
        stream.frame_rate_video = video_frames;
90004712:	e9c0 3206 	strd	r3, r2, [r0, #24]
90004716:	4770      	bx	lr
    virtual void setFrameRate(const Handle handle, uint32_t ui_frames, uint32_t video_frames)
90004718:	b508      	push	{r3, lr}
        assert(handle < no_streams);
9000471a:	4a03      	ldr	r2, [pc, #12]	; (90004728 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x1c>)
9000471c:	2182      	movs	r1, #130	; 0x82
9000471e:	4b03      	ldr	r3, [pc, #12]	; (9000472c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x20>)
90004720:	4803      	ldr	r0, [pc, #12]	; (90004730 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x24>)
90004722:	f025 faab 	bl	90029c7c <__assert_func>
90004726:	bf00      	nop
90004728:	9002c174 	.word	0x9002c174
9000472c:	9002ba50 	.word	0x9002ba50
90004730:	9002bbf0 	.word	0x9002bbf0

90004734 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
90004734:	f00f bb52 	b.w	90013ddc <_ZN8touchgfx3HAL10beginFrameEv>

90004738 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE>:
        if (firstDrawThisFrame)
90004738:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
9000473c:	b903      	cbnz	r3, 90004740 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x8>
9000473e:	4770      	bx	lr
    virtual void draw(const Handle handle, const touchgfx::Rect& invalidatedArea, const touchgfx::VideoWidget& widget)
90004740:	b510      	push	{r4, lr}
            MUTEX_LOCK(mutexBuffers);
90004742:	f04f 31ff 	mov.w	r1, #4294967295
90004746:	4604      	mov	r4, r0
90004748:	6c40      	ldr	r0, [r0, #68]	; 0x44
9000474a:	f00c f8a9 	bl	900108a0 <osMutexAcquire>
            firstDrawThisFrame = false;
9000474e:	f44f 7380 	mov.w	r3, #256	; 0x100
90004752:	f8a4 303d 	strh.w	r3, [r4, #61]	; 0x3d
    }
90004756:	bd10      	pop	{r4, pc}

90004758 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21unregisterVideoWidgetEm>:
    virtual void unregisterVideoWidget(const Handle handle)
90004758:	b538      	push	{r3, r4, r5, lr}
9000475a:	460c      	mov	r4, r1
9000475c:	4605      	mov	r5, r0
        MUTEX_LOCK(mutexBuffers);
9000475e:	f04f 31ff 	mov.w	r1, #4294967295
90004762:	6c40      	ldr	r0, [r0, #68]	; 0x44
        streams[handle].isActive = false;
90004764:	eb04 04c4 	add.w	r4, r4, r4, lsl #3
        MUTEX_LOCK(mutexBuffers);
90004768:	f00c f89a 	bl	900108a0 <osMutexAcquire>
        MUTEX_UNLOCK(mutexBuffers);
9000476c:	6c68      	ldr	r0, [r5, #68]	; 0x44
9000476e:	f00c f8bb 	bl	900108e8 <osMutexRelease>
        streams[handle].isActive = false;
90004772:	2300      	movs	r3, #0
90004774:	eb05 0484 	add.w	r4, r5, r4, lsl #2
90004778:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
        if (oneIsActive == false)
9000477c:	f895 3028 	ldrb.w	r3, [r5, #40]	; 0x28
90004780:	b90b      	cbnz	r3, 90004786 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21unregisterVideoWidgetEm+0x2e>
            topBufferRGB = bufferRGB;
90004782:	6b2b      	ldr	r3, [r5, #48]	; 0x30
90004784:	63ab      	str	r3, [r5, #56]	; 0x38
    }
90004786:	bd38      	pop	{r3, r4, r5, pc}

90004788 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
{
90004788:	b570      	push	{r4, r5, r6, lr}
            if (stream.isPlaying || stream.isShowingOneFrame)
9000478a:	4c1c      	ldr	r4, [pc, #112]	; (900047fc <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x74>)
9000478c:	4605      	mov	r5, r0
    HAL::endFrame();
9000478e:	f00f fb31 	bl	90013df4 <_ZN8touchgfx3HAL8endFrameEv>
90004792:	f894 3029 	ldrb.w	r3, [r4, #41]	; 0x29
90004796:	b98b      	cbnz	r3, 900047bc <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x34>
90004798:	f894 302a 	ldrb.w	r3, [r4, #42]	; 0x2a
9000479c:	b973      	cbnz	r3, 900047bc <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x34>
        firstDrawThisFrame = true;
9000479e:	2301      	movs	r3, #1
        SEM_POST(semDecode);
900047a0:	6c20      	ldr	r0, [r4, #64]	; 0x40
        firstDrawThisFrame = true;
900047a2:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        SEM_POST(semDecode);
900047a6:	f00c f945 	bl	90010a34 <osSemaphoreRelease>
        if (uiHasMutex)
900047aa:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
900047ae:	b9f3      	cbnz	r3, 900047ee <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x66>
    dma.start();
900047b0:	6868      	ldr	r0, [r5, #4]
900047b2:	6803      	ldr	r3, [r0, #0]
}
900047b4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    dma.start();
900047b8:	691b      	ldr	r3, [r3, #16]
900047ba:	4718      	bx	r3
    bool decodeForNextTick(Stream& stream)
    {
        // Running in UI thread

        // Compare tickCount/frameCount to frame_rate_ticks/frame_rate_video
        if ((stream.tickCount * stream.frame_rate_video) >= (stream.frame_rate_ticks * stream.frameCount))
900047bc:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
900047c0:	69e1      	ldr	r1, [r4, #28]
900047c2:	6922      	ldr	r2, [r4, #16]
900047c4:	fb00 f303 	mul.w	r3, r0, r3
900047c8:	fb01 f202 	mul.w	r2, r1, r2
900047cc:	4293      	cmp	r3, r2
900047ce:	d3e6      	bcc.n	9000479e <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x16>
        {
            if (allowSkipFrames)
900047d0:	f894 003c 	ldrb.w	r0, [r4, #60]	; 0x3c
900047d4:	b138      	cbz	r0, 900047e6 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x5e>
            {
                stream.skip_frames = (stream.tickCount * stream.frame_rate_video - stream.frame_rate_ticks * stream.frameCount) / stream.frame_rate_ticks;
900047d6:	1a9b      	subs	r3, r3, r2
900047d8:	fbb3 f2f1 	udiv	r2, r3, r1
                if (stream.skip_frames > 0)
900047dc:	4299      	cmp	r1, r3
                {
                    stream.skip_frames--;
900047de:	bf98      	it	ls
900047e0:	f102 32ff 	addls.w	r2, r2, #4294967295
900047e4:	6262      	str	r2, [r4, #36]	; 0x24
                    stream.doDecode = true;
900047e6:	2301      	movs	r3, #1
900047e8:	f884 302e 	strb.w	r3, [r4, #46]	; 0x2e
        for (uint32_t i = 0; i < no_streams; i++)
900047ec:	e7d7      	b.n	9000479e <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x16>
            MUTEX_UNLOCK(mutexBuffers);
900047ee:	6c60      	ldr	r0, [r4, #68]	; 0x44
900047f0:	f00c f87a 	bl	900108e8 <osMutexRelease>
            uiHasMutex = false;
900047f4:	2300      	movs	r3, #0
900047f6:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
900047fa:	e7d9      	b.n	900047b0 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x28>
900047fc:	2400914c 	.word	0x2400914c

90004800 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
90004800:	f00f bab6 	b.w	90013d70 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

90004804 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
90004804:	f00f bc17 	b.w	90014036 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

90004808 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv>:
{
    // If the framebuffer is placed in Write Through cached memory (e.g. SRAM) then
    // the DCache must be flushed prior to DMA2D accessing it. That's done
    // using the function SCB_CleanInvalidateDCache(). Remember to enable "CPU Cache" in the
    // "System Core" settings for "Cortex M7" in CubeMX in order for this function call to work.
    if (SCB->CCR & SCB_CCR_DC_Msk)
90004808:	4814      	ldr	r0, [pc, #80]	; (9000485c <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x54>)
9000480a:	6943      	ldr	r3, [r0, #20]
9000480c:	03d9      	lsls	r1, r3, #15
9000480e:	d523      	bpl.n	90004858 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x50>
    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
90004810:	2300      	movs	r3, #0
{
90004812:	b510      	push	{r4, lr}
90004814:	f8c0 3084 	str.w	r3, [r0, #132]	; 0x84
  __ASM volatile ("dsb 0xF":::"memory");
90004818:	f3bf 8f4f 	dsb	sy
    ccsidr = SCB->CCSIDR;
9000481c:	f8d0 3080 	ldr.w	r3, [r0, #128]	; 0x80
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90004820:	f643 74e0 	movw	r4, #16352	; 0x3fe0
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
90004824:	f3c3 3c4e 	ubfx	ip, r3, #13, #15
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90004828:	f3c3 0ec9 	ubfx	lr, r3, #3, #10
9000482c:	ea4f 1c4c 	mov.w	ip, ip, lsl #5
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90004830:	ea0c 0104 	and.w	r1, ip, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90004834:	4673      	mov	r3, lr
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90004836:	ea41 7283 	orr.w	r2, r1, r3, lsl #30
      } while (ways-- != 0U);
9000483a:	3b01      	subs	r3, #1
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
9000483c:	f8c0 2274 	str.w	r2, [r0, #628]	; 0x274
      } while (ways-- != 0U);
90004840:	1c5a      	adds	r2, r3, #1
90004842:	d1f8      	bne.n	90004836 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x2e>
    } while(sets-- != 0U);
90004844:	f1ac 0c20 	sub.w	ip, ip, #32
90004848:	f11c 0f20 	cmn.w	ip, #32
9000484c:	d1f0      	bne.n	90004830 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x28>
9000484e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90004852:	f3bf 8f6f 	isb	sy
    {
        SCB_CleanInvalidateDCache();
    }
}
90004856:	bd10      	pop	{r4, pc}
90004858:	4770      	bx	lr
9000485a:	bf00      	nop
9000485c:	e000ed00 	.word	0xe000ed00

90004860 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm>:
    virtual void setCommand(const Handle handle, Command cmd, uint32_t param)
90004860:	b510      	push	{r4, lr}
        assert(handle < no_streams);
90004862:	2900      	cmp	r1, #0
90004864:	d133      	bne.n	900048ce <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x6e>
90004866:	4604      	mov	r4, r0
        switch (cmd)
90004868:	2a05      	cmp	r2, #5
9000486a:	d809      	bhi.n	90004880 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x20>
9000486c:	e8df f002 	tbb	[pc, r2]
90004870:	27221e0f 	.word	0x27221e0f
90004874:	0903      	.short	0x0903
            stream.isPlaying = false;
90004876:	2200      	movs	r2, #0
            stream.seek_to_frame = 1;
90004878:	2301      	movs	r3, #1
            stream.isPlaying = false;
9000487a:	f880 2029 	strb.w	r2, [r0, #41]	; 0x29
            stream.seek_to_frame = 1;
9000487e:	6203      	str	r3, [r0, #32]
    }
90004880:	bd10      	pop	{r4, pc}
            stream.repeat = (param > 0);
90004882:	3b00      	subs	r3, #0
90004884:	bf18      	it	ne
90004886:	2301      	movne	r3, #1
90004888:	f880 302d 	strb.w	r3, [r0, #45]	; 0x2d
    }
9000488c:	bd10      	pop	{r4, pc}
            if (mjpegDecoders[handle]->hasVideo())
9000488e:	6840      	ldr	r0, [r0, #4]
90004890:	6803      	ldr	r3, [r0, #0]
90004892:	691b      	ldr	r3, [r3, #16]
90004894:	4798      	blx	r3
90004896:	2800      	cmp	r0, #0
90004898:	d0f2      	beq.n	90004880 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x20>
                stream.isPlaying = true;
9000489a:	2201      	movs	r2, #1
                stream.frameCount = 0;
9000489c:	2300      	movs	r3, #0
                stream.isPlaying = true;
9000489e:	f884 2029 	strb.w	r2, [r4, #41]	; 0x29
                stream.hasMoreFrames = true; // Assume more frames, lowered on end
900048a2:	f884 202c 	strb.w	r2, [r4, #44]	; 0x2c
                stream.tickCount = 0;
900048a6:	e9c4 3304 	strd	r3, r3, [r4, #16]
    }
900048aa:	bd10      	pop	{r4, pc}
            stream.isPlaying = false;
900048ac:	2300      	movs	r3, #0
900048ae:	f880 3029 	strb.w	r3, [r0, #41]	; 0x29
    }
900048b2:	bd10      	pop	{r4, pc}
            stream.frameCount = 0;
900048b4:	2200      	movs	r2, #0
            stream.seek_to_frame = param;
900048b6:	6203      	str	r3, [r0, #32]
            stream.tickCount = 0;
900048b8:	e9c0 2204 	strd	r2, r2, [r0, #16]
    }
900048bc:	bd10      	pop	{r4, pc}
            stream.frameCount = 0;
900048be:	2200      	movs	r2, #0
            stream.isShowingOneFrame = true;
900048c0:	2101      	movs	r1, #1
            stream.seek_to_frame = param;
900048c2:	6203      	str	r3, [r0, #32]
            stream.isShowingOneFrame = true;
900048c4:	f880 102a 	strb.w	r1, [r0, #42]	; 0x2a
            stream.tickCount = 0;
900048c8:	e9c0 2204 	strd	r2, r2, [r0, #16]
    }
900048cc:	bd10      	pop	{r4, pc}
        assert(handle < no_streams);
900048ce:	4b03      	ldr	r3, [pc, #12]	; (900048dc <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x7c>)
900048d0:	21a2      	movs	r1, #162	; 0xa2
900048d2:	4a03      	ldr	r2, [pc, #12]	; (900048e0 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x80>)
900048d4:	4803      	ldr	r0, [pc, #12]	; (900048e4 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x84>)
900048d6:	f025 f9d1 	bl	90029c7c <__assert_func>
900048da:	bf00      	nop
900048dc:	9002ba50 	.word	0x9002ba50
900048e0:	9002c330 	.word	0x9002c330
900048e4:	9002bbf0 	.word	0x9002bbf0

900048e8 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE>:
    virtual bool updateFrame(const Handle handle, touchgfx::VideoWidget& widget)
900048e8:	b510      	push	{r4, lr}
        assert(handle < no_streams);
900048ea:	bb39      	cbnz	r1, 9000493c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x54>
        if (stream.isPlaying)
900048ec:	f890 3029 	ldrb.w	r3, [r0, #41]	; 0x29
900048f0:	4604      	mov	r4, r0
900048f2:	b923      	cbnz	r3, 900048fe <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x16>
        if (stream.doInvalidateOnNextTick)
900048f4:	f894 302b 	ldrb.w	r3, [r4, #43]	; 0x2b
900048f8:	b963      	cbnz	r3, 90004914 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x2c>
        return true;
900048fa:	2001      	movs	r0, #1
    }
900048fc:	bd10      	pop	{r4, pc}
        return vSyncForFrame;
900048fe:	4912      	ldr	r1, [pc, #72]	; (90004948 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x60>)
            stream.tickCount += HAL::getInstance()->getLCDRefreshCount();
90004900:	6943      	ldr	r3, [r0, #20]
90004902:	6809      	ldr	r1, [r1, #0]
90004904:	f891 106b 	ldrb.w	r1, [r1, #107]	; 0x6b
90004908:	440b      	add	r3, r1
9000490a:	6143      	str	r3, [r0, #20]
        if (stream.doInvalidateOnNextTick)
9000490c:	f894 302b 	ldrb.w	r3, [r4, #43]	; 0x2b
90004910:	2b00      	cmp	r3, #0
90004912:	d0f2      	beq.n	900048fa <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x12>
     *
     * @param [in] videoBuffer Video buffer.
     */
    void setVideoBuffer(uint8_t* const videoBuffer)
    {
        buffer = videoBuffer;
90004914:	68a1      	ldr	r1, [r4, #8]
            widget.invalidate();
90004916:	4610      	mov	r0, r2
90004918:	6813      	ldr	r3, [r2, #0]
9000491a:	695b      	ldr	r3, [r3, #20]
9000491c:	6311      	str	r1, [r2, #48]	; 0x30
9000491e:	4798      	blx	r3
            stream.doInvalidateOnNextTick = false;
90004920:	2300      	movs	r3, #0
            if (!stream.hasMoreFrames && !stream.repeat)
90004922:	f894 002c 	ldrb.w	r0, [r4, #44]	; 0x2c
            stream.doInvalidateOnNextTick = false;
90004926:	f884 302b 	strb.w	r3, [r4, #43]	; 0x2b
            if (!stream.hasMoreFrames && !stream.repeat)
9000492a:	2800      	cmp	r0, #0
9000492c:	d1e5      	bne.n	900048fa <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x12>
9000492e:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
90004932:	2b00      	cmp	r3, #0
90004934:	d1e2      	bne.n	900048fc <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x14>
                stream.isPlaying = false;
90004936:	f884 0029 	strb.w	r0, [r4, #41]	; 0x29
    }
9000493a:	bd10      	pop	{r4, pc}
        assert(handle < no_streams);
9000493c:	4b03      	ldr	r3, [pc, #12]	; (9000494c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x64>)
9000493e:	21d0      	movs	r1, #208	; 0xd0
90004940:	4a03      	ldr	r2, [pc, #12]	; (90004950 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x68>)
90004942:	4804      	ldr	r0, [pc, #16]	; (90004954 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x6c>)
90004944:	f025 f99a 	bl	90029c7c <__assert_func>
90004948:	240236cc 	.word	0x240236cc
9000494c:	9002ba50 	.word	0x9002ba50
90004950:	9002c504 	.word	0x9002c504
90004954:	9002bbf0 	.word	0x9002bbf0

90004958 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE>:
    {
        // Running in UI thread

        for (uint32_t i = 0; i < no_streams; i++)
        {
            if (streams[i].isActive == false)
90004958:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
    virtual Handle registerVideoWidget(touchgfx::VideoWidget& widget)
9000495c:	b570      	push	{r4, r5, r6, lr}
            if (streams[i].isActive == false)
9000495e:	b9fb      	cbnz	r3, 900049a0 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x48>
            {
                // Reset stream parameters
                streams[i] = Stream();
90004960:	2201      	movs	r2, #1
        if (topBufferRGB + sizeOfOneDecodeBuffer > (bufferRGB + sizeBufferRGB))
90004962:	6b85      	ldr	r5, [r0, #56]	; 0x38
                streams[i] = Stream();
90004964:	60c3      	str	r3, [r0, #12]
90004966:	f8a0 202d 	strh.w	r2, [r0, #45]	; 0x2d
        if (topBufferRGB + sizeOfOneDecodeBuffer > (bufferRGB + sizeBufferRGB))
9000496a:	f505 2487 	add.w	r4, r5, #276480	; 0x43800
        streams[handle].isActive = true;
9000496e:	f880 2028 	strb.w	r2, [r0, #40]	; 0x28
                streams[i] = Stream();
90004972:	6103      	str	r3, [r0, #16]
90004974:	6143      	str	r3, [r0, #20]
90004976:	6183      	str	r3, [r0, #24]
90004978:	61c3      	str	r3, [r0, #28]
9000497a:	6203      	str	r3, [r0, #32]
9000497c:	6243      	str	r3, [r0, #36]	; 0x24
9000497e:	f8c0 3029 	str.w	r3, [r0, #41]	; 0x29
        if (topBufferRGB + sizeOfOneDecodeBuffer > (bufferRGB + sizeBufferRGB))
90004982:	e9d0 260c 	ldrd	r2, r6, [r0, #48]	; 0x30
90004986:	4432      	add	r2, r6
90004988:	4294      	cmp	r4, r2
9000498a:	d810      	bhi.n	900049ae <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x56>
     * @param height Height of the videoBuffer in pixels
     */
    void setVideoBufferFormat(Bitmap::BitmapFormat bufferFormat, int16_t width, int16_t height)
    {
        format = bufferFormat;
        bufferWidth = width;
9000498c:	4a0b      	ldr	r2, [pc, #44]	; (900049bc <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x64>)
        decodeBuffers[handle] = (uint32_t*)topBufferRGB;
9000498e:	6085      	str	r5, [r0, #8]
        topBufferRGB += sizeOfOneDecodeBuffer;
90004990:	6384      	str	r4, [r0, #56]	; 0x38
    }
90004992:	4618      	mov	r0, r3
        format = bufferFormat;
90004994:	f881 3034 	strb.w	r3, [r1, #52]	; 0x34
        bufferWidth = width;
90004998:	f8c1 2036 	str.w	r2, [r1, #54]	; 0x36
        buffer = videoBuffer;
9000499c:	630b      	str	r3, [r1, #48]	; 0x30
9000499e:	bd70      	pop	{r4, r5, r6, pc}

                return static_cast<VideoController::Handle>(i);
            }
        }

        assert(0 && "Unable to find free video stream handle!");
900049a0:	4b07      	ldr	r3, [pc, #28]	; (900049c0 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x68>)
900049a2:	f240 11c5 	movw	r1, #453	; 0x1c5
900049a6:	4a07      	ldr	r2, [pc, #28]	; (900049c4 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x6c>)
900049a8:	4807      	ldr	r0, [pc, #28]	; (900049c8 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x70>)
900049aa:	f025 f967 	bl	90029c7c <__assert_func>
            assert(0 && "registerVideoWidget: Unable to allocate RGB buffer!");
900049ae:	4b07      	ldr	r3, [pc, #28]	; (900049cc <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x74>)
900049b0:	2152      	movs	r1, #82	; 0x52
900049b2:	4a07      	ldr	r2, [pc, #28]	; (900049d0 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x78>)
900049b4:	4804      	ldr	r0, [pc, #16]	; (900049c8 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x70>)
900049b6:	f025 f961 	bl	90029c7c <__assert_func>
900049ba:	bf00      	nop
900049bc:	012001e0 	.word	0x012001e0
900049c0:	9002c6a4 	.word	0x9002c6a4
900049c4:	9002c6d4 	.word	0x9002c6d4
900049c8:	9002bbf0 	.word	0x9002bbf0
900049cc:	9002c85c 	.word	0x9002c85c
900049d0:	9002c898 	.word	0x9002c898

900049d4 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
900049d4:	4b08      	ldr	r3, [pc, #32]	; (900049f8 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
900049d6:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
900049da:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
900049de:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
900049e2:	f3bf 8f6f 	isb	sy
900049e6:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
900049ea:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
900049ee:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
900049f2:	f3bf 8f6f 	isb	sy
}
900049f6:	4770      	bx	lr
900049f8:	e000e100 	.word	0xe000e100

900049fc <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
900049fc:	4b03      	ldr	r3, [pc, #12]	; (90004a0c <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
900049fe:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
90004a02:	609a      	str	r2, [r3, #8]
90004a04:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
90004a08:	609a      	str	r2, [r3, #8]
}
90004a0a:	4770      	bx	lr
90004a0c:	e000e100 	.word	0xe000e100

90004a10 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
90004a10:	b538      	push	{r3, r4, r5, lr}
90004a12:	4604      	mov	r4, r0
    HAL::initialize();
90004a14:	f00f f9fb 	bl	90013e0e <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
90004a18:	6823      	ldr	r3, [r4, #0]
90004a1a:	6e5d      	ldr	r5, [r3, #100]	; 0x64
90004a1c:	f013 ffb2 	bl	90018984 <_ZN8touchgfx11Application11getInstanceEv>
90004a20:	4601      	mov	r1, r0
90004a22:	4620      	mov	r0, r4
90004a24:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
90004a26:	6823      	ldr	r3, [r4, #0]
90004a28:	4a16      	ldr	r2, [pc, #88]	; (90004a84 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x74>)
90004a2a:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
90004a2e:	4295      	cmp	r5, r2
90004a30:	d11c      	bne.n	90004a6c <_ZN20TouchGFXGeneratedHAL10initializeEv+0x5c>
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
90004a32:	4a15      	ldr	r2, [pc, #84]	; (90004a88 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x78>)
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
90004a34:	2501      	movs	r5, #1
        setAnimationStorage(animationStorage);
90004a36:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
90004a3a:	f502 317f 	add.w	r1, r2, #261120	; 0x3fc00
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
90004a3e:	4813      	ldr	r0, [pc, #76]	; (90004a8c <_ZN20TouchGFXGeneratedHAL10initializeEv+0x7c>)
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
90004a40:	e9c4 210f 	strd	r2, r1, [r4, #60]	; 0x3c
        setAnimationStorage(animationStorage);
90004a44:	4a12      	ldr	r2, [pc, #72]	; (90004a90 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x80>)
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
90004a46:	7005      	strb	r5, [r0, #0]
90004a48:	4293      	cmp	r3, r2
90004a4a:	d116      	bne.n	90004a7a <_ZN20TouchGFXGeneratedHAL10initializeEv+0x6a>
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90004a4c:	2300      	movs	r3, #0
        USE_ANIMATION_STORAGE = animationStorage != 0;
90004a4e:	4a11      	ldr	r2, [pc, #68]	; (90004a94 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x84>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90004a50:	6463      	str	r3, [r4, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
90004a52:	7013      	strb	r3, [r2, #0]
    void addDMA(touchgfx::DMA_Interface& dma)
    {
        this->dma = &dma;
90004a54:	6864      	ldr	r4, [r4, #4]
        sizeBufferRGB = sizeOfBuffer;
90004a56:	f44f 2087 	mov.w	r0, #276480	; 0x43800
        mjpegDecoders[index] = &decoder;
90004a5a:	4b0f      	ldr	r3, [pc, #60]	; (90004a98 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x88>)
90004a5c:	490f      	ldr	r1, [pc, #60]	; (90004a9c <_ZN20TouchGFXGeneratedHAL10initializeEv+0x8c>)
        bufferRGB = buffer;
90004a5e:	4a10      	ldr	r2, [pc, #64]	; (90004aa0 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x90>)
90004a60:	644c      	str	r4, [r1, #68]	; 0x44
        mjpegDecoders[index] = &decoder;
90004a62:	6059      	str	r1, [r3, #4]
        bufferRGB = buffer;
90004a64:	631a      	str	r2, [r3, #48]	; 0x30
        sizeBufferRGB = sizeOfBuffer;
90004a66:	e9c3 020d 	strd	r0, r2, [r3, #52]	; 0x34
}
90004a6a:	bd38      	pop	{r3, r4, r5, pc}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
90004a6c:	4a0d      	ldr	r2, [pc, #52]	; (90004aa4 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x94>)
90004a6e:	2300      	movs	r3, #0
90004a70:	4620      	mov	r0, r4
90004a72:	f5a2 317f 	sub.w	r1, r2, #261120	; 0x3fc00
90004a76:	47a8      	blx	r5
90004a78:	e7ec      	b.n	90004a54 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x44>
        setAnimationStorage(animationStorage);
90004a7a:	2100      	movs	r1, #0
90004a7c:	4620      	mov	r0, r4
90004a7e:	4798      	blx	r3
90004a80:	e7e8      	b.n	90004a54 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x44>
90004a82:	bf00      	nop
90004a84:	9000293d 	.word	0x9000293d
90004a88:	d003fc00 	.word	0xd003fc00
90004a8c:	240236ca 	.word	0x240236ca
90004a90:	900027ad 	.word	0x900027ad
90004a94:	240236cb 	.word	0x240236cb
90004a98:	2400914c 	.word	0x2400914c
90004a9c:	24009198 	.word	0x24009198
90004aa0:	d00bf400 	.word	0xd00bf400
90004aa4:	d007f800 	.word	0xd007f800

90004aa8 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
90004aa8:	b510      	push	{r4, lr}
        return instance;
90004aaa:	4c14      	ldr	r4, [pc, #80]	; (90004afc <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
90004aac:	6823      	ldr	r3, [r4, #0]
90004aae:	b323      	cbz	r3, 90004afa <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
90004ab0:	4b13      	ldr	r3, [pc, #76]	; (90004b00 <HAL_LTDC_LineEventCallback+0x58>)
90004ab2:	4a14      	ldr	r2, [pc, #80]	; (90004b04 <HAL_LTDC_LineEventCallback+0x5c>)
90004ab4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
90004ab6:	8811      	ldrh	r1, [r2, #0]
90004ab8:	428b      	cmp	r3, r1
90004aba:	d00a      	beq.n	90004ad2 <HAL_LTDC_LineEventCallback+0x2a>
            GPIO::set(GPIO::VSYNC_FREQ);
        }
        else
        {
            //exiting active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
90004abc:	f008 f94a 	bl	9000cd54 <HAL_LTDC_ProgramLineEvent>
90004ac0:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
90004ac2:	6803      	ldr	r3, [r0, #0]
90004ac4:	6a1b      	ldr	r3, [r3, #32]
90004ac6:	4798      	blx	r3

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
90004ac8:	2000      	movs	r0, #0
        }
    }
90004aca:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
90004ace:	f7fd be11 	b.w	900026f4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
90004ad2:	4b0d      	ldr	r3, [pc, #52]	; (90004b08 <HAL_LTDC_LineEventCallback+0x60>)
90004ad4:	8819      	ldrh	r1, [r3, #0]
90004ad6:	f008 f93d 	bl	9000cd54 <HAL_LTDC_ProgramLineEvent>
        return instance;
90004ada:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
90004adc:	f892 306a 	ldrb.w	r3, [r2, #106]	; 0x6a
90004ae0:	3301      	adds	r3, #1
90004ae2:	f882 306a 	strb.w	r3, [r2, #106]	; 0x6a
            OSWrappers::signalVSync();
90004ae6:	f7ff f839 	bl	90003b5c <_ZN8touchgfx10OSWrappers11signalVSyncEv>
            HAL::getInstance()->swapFrameBuffers();
90004aea:	6820      	ldr	r0, [r4, #0]
90004aec:	f00f fee8 	bl	900148c0 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            GPIO::set(GPIO::VSYNC_FREQ);
90004af0:	2000      	movs	r0, #0
    }
90004af2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
90004af6:	f7fd bdc9 	b.w	9000268c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
    }
90004afa:	bd10      	pop	{r4, pc}
90004afc:	240236cc 	.word	0x240236cc
90004b00:	50001000 	.word	0x50001000
90004b04:	24009196 	.word	0x24009196
90004b08:	24009194 	.word	0x24009194

90004b0c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv>:
    void decoderTaskEntry()
90004b0c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90004b10:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 90004bcc <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0xc0>
90004b14:	b083      	sub	sp, #12
                    stream.doInvalidateOnNextTick = true;
90004b16:	2601      	movs	r6, #1
                    stream.hasMoreFrames = decoder->decodeNextFrame((uint8_t*)decodeBuffers[i], width, height, stride);
90004b18:	f44f 7770 	mov.w	r7, #960	; 0x3c0
    void decoderTaskEntry()
90004b1c:	4604      	mov	r4, r0
90004b1e:	e024      	b.n	90004b6a <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x5e>
                        decoder->gotoFrame(stream.seek_to_frame);
90004b20:	682b      	ldr	r3, [r5, #0]
90004b22:	4628      	mov	r0, r5
90004b24:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90004b26:	4798      	blx	r3
                        stream.seek_to_frame = 0;
90004b28:	2300      	movs	r3, #0
90004b2a:	6223      	str	r3, [r4, #32]
                    stream.hasMoreFrames = decoder->decodeNextFrame((uint8_t*)decodeBuffers[i], width, height, stride);
90004b2c:	6829      	ldr	r1, [r5, #0]
90004b2e:	f44f 7390 	mov.w	r3, #288	; 0x120
90004b32:	9700      	str	r7, [sp, #0]
90004b34:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
90004b38:	f8d1 9014 	ldr.w	r9, [r1, #20]
90004b3c:	4628      	mov	r0, r5
90004b3e:	68a1      	ldr	r1, [r4, #8]
90004b40:	47c8      	blx	r9
                    stream.frameCount++;
90004b42:	6923      	ldr	r3, [r4, #16]
                    stream.hasMoreFrames = decoder->decodeNextFrame((uint8_t*)decodeBuffers[i], width, height, stride);
90004b44:	f884 002c 	strb.w	r0, [r4, #44]	; 0x2c
                    stream.frameCount++;
90004b48:	3301      	adds	r3, #1
90004b4a:	6123      	str	r3, [r4, #16]
                    if (stream.hasMoreFrames)
90004b4c:	2800      	cmp	r0, #0
90004b4e:	d033      	beq.n	90004bb8 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0xac>
                        stream.frameNumber = decoder->getCurrentFrameNumber() - 1; // Points to frame after this
90004b50:	682b      	ldr	r3, [r5, #0]
90004b52:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90004b54:	4543      	cmp	r3, r8
90004b56:	d131      	bne.n	90004bbc <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0xb0>
        return frameNumber;
90004b58:	6968      	ldr	r0, [r5, #20]
90004b5a:	3801      	subs	r0, #1
                    stream.doDecode = false;
90004b5c:	2200      	movs	r2, #0
                        stream.frameNumber = decoder->getCurrentFrameNumber() - 1; // Points to frame after this
90004b5e:	60e0      	str	r0, [r4, #12]
                    stream.doDecode = false;
90004b60:	f884 202e 	strb.w	r2, [r4, #46]	; 0x2e
            MUTEX_UNLOCK(mutexBuffers);
90004b64:	6c60      	ldr	r0, [r4, #68]	; 0x44
90004b66:	f00b febf 	bl	900108e8 <osMutexRelease>
            SEM_WAIT(semDecode);
90004b6a:	f04f 31ff 	mov.w	r1, #4294967295
90004b6e:	6c20      	ldr	r0, [r4, #64]	; 0x40
90004b70:	f00b ff2c 	bl	900109cc <osSemaphoreAcquire>
            MUTEX_LOCK(mutexBuffers);
90004b74:	f04f 31ff 	mov.w	r1, #4294967295
90004b78:	6c60      	ldr	r0, [r4, #68]	; 0x44
90004b7a:	f00b fe91 	bl	900108a0 <osMutexAcquire>
                if (stream.doDecode)
90004b7e:	f894 302e 	ldrb.w	r3, [r4, #46]	; 0x2e
90004b82:	2b00      	cmp	r3, #0
90004b84:	d0ee      	beq.n	90004b64 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x58>
                    if (stream.seek_to_frame > 0)
90004b86:	6a21      	ldr	r1, [r4, #32]
                    MJPEGDecoder* const decoder = mjpegDecoders[i];
90004b88:	6865      	ldr	r5, [r4, #4]
                    stream.doInvalidateOnNextTick = true;
90004b8a:	f884 602b 	strb.w	r6, [r4, #43]	; 0x2b
                    if (stream.seek_to_frame > 0)
90004b8e:	2900      	cmp	r1, #0
90004b90:	d1c6      	bne.n	90004b20 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x14>
                        if (stream.skip_frames > 0)
90004b92:	6a63      	ldr	r3, [r4, #36]	; 0x24
90004b94:	2b00      	cmp	r3, #0
90004b96:	d0c9      	beq.n	90004b2c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x20>
                            decoder->gotoFrame(decoder->getCurrentFrameNumber() + stream.skip_frames);
90004b98:	682a      	ldr	r2, [r5, #0]
90004b9a:	e9d2 9109 	ldrd	r9, r1, [r2, #36]	; 0x24
90004b9e:	4541      	cmp	r1, r8
90004ba0:	d10f      	bne.n	90004bc2 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0xb6>
90004ba2:	6968      	ldr	r0, [r5, #20]
90004ba4:	18c1      	adds	r1, r0, r3
90004ba6:	4628      	mov	r0, r5
90004ba8:	47c8      	blx	r9
                            stream.frameCount += stream.skip_frames;
90004baa:	6923      	ldr	r3, [r4, #16]
90004bac:	6a61      	ldr	r1, [r4, #36]	; 0x24
                            stream.skip_frames = 0;
90004bae:	2200      	movs	r2, #0
                            stream.frameCount += stream.skip_frames;
90004bb0:	440b      	add	r3, r1
                            stream.skip_frames = 0;
90004bb2:	6262      	str	r2, [r4, #36]	; 0x24
                            stream.frameCount += stream.skip_frames;
90004bb4:	6123      	str	r3, [r4, #16]
90004bb6:	e7b9      	b.n	90004b2c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x20>
90004bb8:	2001      	movs	r0, #1
90004bba:	e7cf      	b.n	90004b5c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x50>
                        stream.frameNumber = decoder->getCurrentFrameNumber() - 1; // Points to frame after this
90004bbc:	4628      	mov	r0, r5
90004bbe:	4798      	blx	r3
90004bc0:	e7cb      	b.n	90004b5a <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x4e>
                            decoder->gotoFrame(decoder->getCurrentFrameNumber() + stream.skip_frames);
90004bc2:	4628      	mov	r0, r5
90004bc4:	4788      	blx	r1
90004bc6:	6a63      	ldr	r3, [r4, #36]	; 0x24
90004bc8:	e7ec      	b.n	90004ba4 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x98>
90004bca:	bf00      	nop
90004bcc:	90002ab5 	.word	0x90002ab5

90004bd0 <videoTaskFunc>:
    videoController.decoderTaskEntry();
90004bd0:	4801      	ldr	r0, [pc, #4]	; (90004bd8 <videoTaskFunc+0x8>)
{
90004bd2:	b508      	push	{r3, lr}
    videoController.decoderTaskEntry();
90004bd4:	f7ff ff9a 	bl	90004b0c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv>
90004bd8:	2400914c 	.word	0x2400914c

90004bdc <_GLOBAL__sub_I_mjpegdecoder1>:
}
90004bdc:	b538      	push	{r3, r4, r5, lr}
HardwareMJPEGDecoder mjpegdecoder1;
90004bde:	4815      	ldr	r0, [pc, #84]	; (90004c34 <_GLOBAL__sub_I_mjpegdecoder1+0x58>)
        Stream() : frameNumber(0), frameCount(0), tickCount(0), frame_rate_video(0), frame_rate_ticks(0),
90004be0:	2500      	movs	r5, #0
90004be2:	f7fe fb5b 	bl	9000329c <_ZN20HardwareMJPEGDecoderC1Ev>
          allowSkipFrames(false), firstDrawThisFrame(true), uiHasMutex(false), semDecode(0), mutexBuffers(0)
90004be6:	4c14      	ldr	r4, [pc, #80]	; (90004c38 <_GLOBAL__sub_I_mjpegdecoder1+0x5c>)
90004be8:	4914      	ldr	r1, [pc, #80]	; (90004c3c <_GLOBAL__sub_I_mjpegdecoder1+0x60>)
            doInvalidateOnNextTick(false), hasMoreFrames(false), repeat(true), doDecode(false) {}
90004bea:	f44f 7380 	mov.w	r3, #256	; 0x100
        semDecode = SEM_CREATE(); // Binary semaphore
90004bee:	462a      	mov	r2, r5
90004bf0:	2001      	movs	r0, #1
          allowSkipFrames(false), firstDrawThisFrame(true), uiHasMutex(false), semDecode(0), mutexBuffers(0)
90004bf2:	6021      	str	r1, [r4, #0]
        semDecode = SEM_CREATE(); // Binary semaphore
90004bf4:	4629      	mov	r1, r5
            doInvalidateOnNextTick(false), hasMoreFrames(false), repeat(true), doDecode(false) {}
90004bf6:	85a3      	strh	r3, [r4, #44]	; 0x2c
          allowSkipFrames(false), firstDrawThisFrame(true), uiHasMutex(false), semDecode(0), mutexBuffers(0)
90004bf8:	87a3      	strh	r3, [r4, #60]	; 0x3c
        Stream() : frameNumber(0), frameCount(0), tickCount(0), frame_rate_video(0), frame_rate_ticks(0),
90004bfa:	60e5      	str	r5, [r4, #12]
            isActive(false), isPlaying(false), isShowingOneFrame(false),
90004bfc:	62a5      	str	r5, [r4, #40]	; 0x28
            doInvalidateOnNextTick(false), hasMoreFrames(false), repeat(true), doDecode(false) {}
90004bfe:	f884 502e 	strb.w	r5, [r4, #46]	; 0x2e
        : VideoController(), bufferRGB(0), sizeBufferRGB(0), topBufferRGB(0),
90004c02:	63a5      	str	r5, [r4, #56]	; 0x38
          allowSkipFrames(false), firstDrawThisFrame(true), uiHasMutex(false), semDecode(0), mutexBuffers(0)
90004c04:	f884 503e 	strb.w	r5, [r4, #62]	; 0x3e
        Stream() : frameNumber(0), frameCount(0), tickCount(0), frame_rate_video(0), frame_rate_ticks(0),
90004c08:	e9c4 5504 	strd	r5, r5, [r4, #16]
90004c0c:	e9c4 5506 	strd	r5, r5, [r4, #24]
            seek_to_frame(0), skip_frames(0),
90004c10:	e9c4 5508 	strd	r5, r5, [r4, #32]
        : VideoController(), bufferRGB(0), sizeBufferRGB(0), topBufferRGB(0),
90004c14:	e9c4 550c 	strd	r5, r5, [r4, #48]	; 0x30
          allowSkipFrames(false), firstDrawThisFrame(true), uiHasMutex(false), semDecode(0), mutexBuffers(0)
90004c18:	e9c4 5510 	strd	r5, r5, [r4, #64]	; 0x40
90004c1c:	e9c4 5501 	strd	r5, r5, [r4, #4]
        semDecode = SEM_CREATE(); // Binary semaphore
90004c20:	f00b fe84 	bl	9001092c <osSemaphoreNew>
90004c24:	4603      	mov	r3, r0
        mutexBuffers = MUTEX_CREATE();
90004c26:	4628      	mov	r0, r5
        semDecode = SEM_CREATE(); // Binary semaphore
90004c28:	6423      	str	r3, [r4, #64]	; 0x40
        mutexBuffers = MUTEX_CREATE();
90004c2a:	f00b fdf9 	bl	90010820 <osMutexNew>
90004c2e:	6460      	str	r0, [r4, #68]	; 0x44
}
90004c30:	bd38      	pop	{r3, r4, r5, pc}
90004c32:	bf00      	nop
90004c34:	24009198 	.word	0x24009198
90004c38:	2400914c 	.word	0x2400914c
90004c3c:	9002ca64 	.word	0x9002ca64

90004c40 <vApplicationIdleHook>:
   vTaskDelete() API function (as this demo application does) then it is also
   important that vApplicationIdleHook() is permitted to return to its calling
   function, because it is the responsibility of the idle task to clean up
   memory allocated by the kernel to any task that has since been deleted. */
  
  vTaskSetApplicationTaskTag(NULL, IdleTaskHook);
90004c40:	4901      	ldr	r1, [pc, #4]	; (90004c48 <vApplicationIdleHook+0x8>)
90004c42:	2000      	movs	r0, #0
90004c44:	f00e b8bc 	b.w	90012dc0 <vTaskSetApplicationTaskTag>
90004c48:	90002a91 	.word	0x90002a91

90004c4c <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
90004c4c:	b508      	push	{r3, lr}
  for(;;)
  {
	  check_suspend_asteroids_task();
	  check_resume_asteroids_task();

	  osDelay(100);
90004c4e:	2064      	movs	r0, #100	; 0x64
90004c50:	f00b fdd8 	bl	90010804 <osDelay>
  for(;;)
90004c54:	e7fb      	b.n	90004c4e <StartDefaultTask+0x2>
90004c56:	bf00      	nop

90004c58 <bullet_timer_task_function>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_bullet_timer_task_function */
void bullet_timer_task_function(void *argument)
{
90004c58:	4d09      	ldr	r5, [pc, #36]	; (90004c80 <bullet_timer_task_function+0x28>)
90004c5a:	4e0a      	ldr	r6, [pc, #40]	; (90004c84 <bullet_timer_task_function+0x2c>)
90004c5c:	b508      	push	{r3, lr}
  /* USER CODE BEGIN bullet_timer_task_function */
  /* Infinite loop */

  for(;;)
  {
	  if( osSemaphoreGetCount(bullet_timer_started_semaphoreHandle) == 0 ) {
90004c5e:	6828      	ldr	r0, [r5, #0]
90004c60:	f00b ff14 	bl	90010a8c <osSemaphoreGetCount>
90004c64:	4604      	mov	r4, r0
90004c66:	2800      	cmp	r0, #0
90004c68:	d1f9      	bne.n	90004c5e <bullet_timer_task_function+0x6>
		  osDelay(100);
90004c6a:	2064      	movs	r0, #100	; 0x64
90004c6c:	f00b fdca 	bl	90010804 <osDelay>
		  osSemaphoreRelease(bullet_timer_started_semaphoreHandle);
90004c70:	6828      	ldr	r0, [r5, #0]
90004c72:	f00b fedf 	bl	90010a34 <osSemaphoreRelease>
		  osSemaphoreAcquire(bullet_timer_ended_semaphoreHandle, 0U);
90004c76:	4621      	mov	r1, r4
90004c78:	6830      	ldr	r0, [r6, #0]
90004c7a:	f00b fea7 	bl	900109cc <osSemaphoreAcquire>
90004c7e:	e7ee      	b.n	90004c5e <bullet_timer_task_function+0x6>
90004c80:	240091ec 	.word	0x240091ec
90004c84:	240091e8 	.word	0x240091e8

90004c88 <invincibility_timer_task_function>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_invincibility_timer_task_function */
void invincibility_timer_task_function(void *argument)
{
90004c88:	4d0a      	ldr	r5, [pc, #40]	; (90004cb4 <invincibility_timer_task_function+0x2c>)
90004c8a:	4e0b      	ldr	r6, [pc, #44]	; (90004cb8 <invincibility_timer_task_function+0x30>)
90004c8c:	b508      	push	{r3, lr}
  /* USER CODE BEGIN invincibility_timer_task_function */
  /* Infinite loop */
  for(;;)
  {
	  if( osSemaphoreGetCount(invincibility_timer_started_semaphoreHandle) == 0 ) {
90004c8e:	6828      	ldr	r0, [r5, #0]
90004c90:	f00b fefc 	bl	90010a8c <osSemaphoreGetCount>
90004c94:	4604      	mov	r4, r0
90004c96:	2800      	cmp	r0, #0
90004c98:	d1f9      	bne.n	90004c8e <invincibility_timer_task_function+0x6>
		  osDelay(1000);
90004c9a:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
90004c9e:	f00b fdb1 	bl	90010804 <osDelay>
		  osSemaphoreRelease(invincibility_timer_started_semaphoreHandle);
90004ca2:	6828      	ldr	r0, [r5, #0]
90004ca4:	f00b fec6 	bl	90010a34 <osSemaphoreRelease>
		  osSemaphoreAcquire(invincibility_timer_ended_semaphoreHandle, 0U);
90004ca8:	4621      	mov	r1, r4
90004caa:	6830      	ldr	r0, [r6, #0]
90004cac:	f00b fe8e 	bl	900109cc <osSemaphoreAcquire>
90004cb0:	e7ed      	b.n	90004c8e <invincibility_timer_task_function+0x6>
90004cb2:	bf00      	nop
90004cb4:	240095b4 	.word	0x240095b4
90004cb8:	240095b0 	.word	0x240095b0

90004cbc <MFRC_Ch_fun>:
void MFRC_Ch_fun(void *argument)
{
  /* USER CODE BEGIN MFRC_Ch_fun */

#ifdef RFID_DISABLE
	osThreadSuspend(MFRC_ChHandle);
90004cbc:	4b0f      	ldr	r3, [pc, #60]	; (90004cfc <MFRC_Ch_fun+0x40>)
{
90004cbe:	b500      	push	{lr}
	osThreadSuspend(MFRC_ChHandle);
90004cc0:	6818      	ldr	r0, [r3, #0]
{
90004cc2:	b085      	sub	sp, #20
	osThreadSuspend(MFRC_ChHandle);
90004cc4:	f00b fd8e 	bl	900107e4 <osThreadSuspend>
#endif

	int ok = 0;
		uint8_t myID[5];
		uint8_t cmp[] = {145, 221, 185, 27};
90004cc8:	4b0d      	ldr	r3, [pc, #52]	; (90004d00 <MFRC_Ch_fun+0x44>)
90004cca:	9301      	str	r3, [sp, #4]
		MFRC522_Init();
90004ccc:	f7fb fd0a 	bl	900006e4 <MFRC522_Init>
  /* Infinite loop */
  for(;;)
  {
	  if (MFRC522_Auth(myID) == MFRC522_OK) {
90004cd0:	a802      	add	r0, sp, #8
90004cd2:	f7fd fc09 	bl	900024e8 <MFRC522_Auth>
	  		  if (MFRC522_Cmp(myID, cmp, 4) == MFRC522_OK) {
90004cd6:	2204      	movs	r2, #4
	  if (MFRC522_Auth(myID) == MFRC522_OK) {
90004cd8:	4603      	mov	r3, r0
	  		  if (MFRC522_Cmp(myID, cmp, 4) == MFRC522_OK) {
90004cda:	a802      	add	r0, sp, #8
90004cdc:	eb0d 0102 	add.w	r1, sp, r2
	  if (MFRC522_Auth(myID) == MFRC522_OK) {
90004ce0:	b933      	cbnz	r3, 90004cf0 <MFRC_Ch_fun+0x34>
	  		  if (MFRC522_Cmp(myID, cmp, 4) == MFRC522_OK) {
90004ce2:	f7fb ff07 	bl	90000af4 <MFRC522_Cmp>
90004ce6:	4603      	mov	r3, r0
	  			  ok = 1;
	  			  MFRC522_Print_Terminal(myID);
90004ce8:	a802      	add	r0, sp, #8
	  		  if (MFRC522_Cmp(myID, cmp, 4) == MFRC522_OK) {
90004cea:	b90b      	cbnz	r3, 90004cf0 <MFRC_Ch_fun+0x34>
	  			  MFRC522_Print_Terminal(myID);
90004cec:	f7fb ff12 	bl	90000b14 <MFRC522_Print_Terminal>
	  		  }
	  		  // MFRC522_Print_Terminal(myID);
	  	  }
	  	  osDelay(900);
90004cf0:	f44f 7061 	mov.w	r0, #900	; 0x384
90004cf4:	f00b fd86 	bl	90010804 <osDelay>
	  if (MFRC522_Auth(myID) == MFRC522_OK) {
90004cf8:	e7ea      	b.n	90004cd0 <MFRC_Ch_fun+0x14>
90004cfa:	bf00      	nop
90004cfc:	240091e4 	.word	0x240091e4
90004d00:	1bb9dd91 	.word	0x1bb9dd91

90004d04 <SystemClock_Config>:
{
90004d04:	b570      	push	{r4, r5, r6, lr}
90004d06:	b09e      	sub	sp, #120	; 0x78
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
90004d08:	224c      	movs	r2, #76	; 0x4c
90004d0a:	2100      	movs	r1, #0
90004d0c:	a80a      	add	r0, sp, #40	; 0x28
90004d0e:	f025 faad 	bl	9002a26c <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
90004d12:	2220      	movs	r2, #32
90004d14:	2100      	movs	r1, #0
90004d16:	a802      	add	r0, sp, #8
90004d18:	f025 faa8 	bl	9002a26c <memset>
  HAL_PWREx_ConfigSupply(PWR_LDO_SUPPLY);
90004d1c:	2002      	movs	r0, #2
90004d1e:	f008 fa57 	bl	9000d1d0 <HAL_PWREx_ConfigSupply>
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
90004d22:	4b22      	ldr	r3, [pc, #136]	; (90004dac <SystemClock_Config+0xa8>)
90004d24:	2100      	movs	r1, #0
90004d26:	4a22      	ldr	r2, [pc, #136]	; (90004db0 <SystemClock_Config+0xac>)
90004d28:	9101      	str	r1, [sp, #4]
90004d2a:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
90004d2c:	f021 0101 	bic.w	r1, r1, #1
90004d30:	62d9      	str	r1, [r3, #44]	; 0x2c
90004d32:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90004d34:	f003 0301 	and.w	r3, r3, #1
90004d38:	9301      	str	r3, [sp, #4]
90004d3a:	6993      	ldr	r3, [r2, #24]
90004d3c:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
90004d40:	6193      	str	r3, [r2, #24]
90004d42:	6993      	ldr	r3, [r2, #24]
90004d44:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
90004d48:	9301      	str	r3, [sp, #4]
90004d4a:	9b01      	ldr	r3, [sp, #4]
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
90004d4c:	6993      	ldr	r3, [r2, #24]
90004d4e:	0499      	lsls	r1, r3, #18
90004d50:	d5fc      	bpl.n	90004d4c <SystemClock_Config+0x48>
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
90004d52:	2201      	movs	r2, #1
90004d54:	f44f 3380 	mov.w	r3, #65536	; 0x10000
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
90004d58:	2402      	movs	r4, #2
  RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_2;
90004d5a:	2608      	movs	r6, #8
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
90004d5c:	2500      	movs	r5, #0
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
90004d5e:	a80a      	add	r0, sp, #40	; 0x28
  RCC_OscInitStruct.PLL.PLLP = 2;
90004d60:	9417      	str	r4, [sp, #92]	; 0x5c
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
90004d62:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
  RCC_OscInitStruct.PLL.PLLN = 160;
90004d66:	2205      	movs	r2, #5
90004d68:	23a0      	movs	r3, #160	; 0xa0
90004d6a:	e9cd 2315 	strd	r2, r3, [sp, #84]	; 0x54
  RCC_OscInitStruct.PLL.PLLQ = 4;
90004d6e:	2304      	movs	r3, #4
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
90004d70:	e9cd 4413 	strd	r4, r4, [sp, #76]	; 0x4c
  RCC_OscInitStruct.PLL.PLLQ = 4;
90004d74:	9318      	str	r3, [sp, #96]	; 0x60
  RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_2;
90004d76:	e9cd 4619 	strd	r4, r6, [sp, #100]	; 0x64
  RCC_OscInitStruct.PLL.PLLFRACN = 0;
90004d7a:	e9cd 551b 	strd	r5, r5, [sp, #108]	; 0x6c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
90004d7e:	f008 facf 	bl	9000d320 <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
90004d82:	2340      	movs	r3, #64	; 0x40
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
90004d84:	223f      	movs	r2, #63	; 0x3f
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
90004d86:	4621      	mov	r1, r4
  RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
90004d88:	9307      	str	r3, [sp, #28]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
90004d8a:	eb0d 0006 	add.w	r0, sp, r6
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
90004d8e:	9202      	str	r2, [sp, #8]
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
90004d90:	2203      	movs	r2, #3
  RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
90004d92:	9309      	str	r3, [sp, #36]	; 0x24
  RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
90004d94:	9504      	str	r5, [sp, #16]
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
90004d96:	9203      	str	r2, [sp, #12]
  RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
90004d98:	e9cd 6305 	strd	r6, r3, [sp, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
90004d9c:	f44f 6380 	mov.w	r3, #1024	; 0x400
90004da0:	9308      	str	r3, [sp, #32]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
90004da2:	f008 fe51 	bl	9000da48 <HAL_RCC_ClockConfig>
}
90004da6:	b01e      	add	sp, #120	; 0x78
90004da8:	bd70      	pop	{r4, r5, r6, pc}
90004daa:	bf00      	nop
90004dac:	58000400 	.word	0x58000400
90004db0:	58024800 	.word	0x58024800

90004db4 <main>:
{
90004db4:	b580      	push	{r7, lr}

/* MPU Configuration */

void MPU_Config(void)
{
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
90004db6:	2400      	movs	r4, #0
{
90004db8:	b098      	sub	sp, #96	; 0x60
  /* Disables the MPU */
  HAL_MPU_Disable();

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
90004dba:	2501      	movs	r5, #1

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER1;
  MPU_InitStruct.BaseAddress = 0x90000000;
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
90004dbc:	271b      	movs	r7, #27

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
  MPU_InitStruct.Size = MPU_REGION_SIZE_128MB;
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
90004dbe:	2603      	movs	r6, #3
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
90004dc0:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
90004dc4:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  HAL_MPU_Disable();
90004dc8:	f005 f9ea 	bl	9000a1a0 <HAL_MPU_Disable>
  MPU_InitStruct.BaseAddress = 0x24000000;
90004dcc:	f04f 5310 	mov.w	r3, #603979776	; 0x24000000
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
90004dd0:	49d3      	ldr	r1, [pc, #844]	; (90005120 <main+0x36c>)
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90004dd2:	a80b      	add	r0, sp, #44	; 0x2c
  MPU_InitStruct.BaseAddress = 0x24000000;
90004dd4:	930c      	str	r3, [sp, #48]	; 0x30
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
90004dd6:	4bd3      	ldr	r3, [pc, #844]	; (90005124 <main+0x370>)
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
90004dd8:	f8ad 502c 	strh.w	r5, [sp, #44]	; 0x2c
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
90004ddc:	e9cd 130d 	strd	r1, r3, [sp, #52]	; 0x34
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90004de0:	f005 f9fc 	bl	9000a1dc <HAL_MPU_ConfigRegion>
  MPU_InitStruct.BaseAddress = 0x90000000;
90004de4:	f04f 4310 	mov.w	r3, #2415919104	; 0x90000000
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90004de8:	a80b      	add	r0, sp, #44	; 0x2c
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
90004dea:	f88d 4037 	strb.w	r4, [sp, #55]	; 0x37
  MPU_InitStruct.BaseAddress = 0x90000000;
90004dee:	930c      	str	r3, [sp, #48]	; 0x30
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
90004df0:	f8ad 403a 	strh.w	r4, [sp, #58]	; 0x3a
  MPU_InitStruct.Number = MPU_REGION_NUMBER1;
90004df4:	f88d 502d 	strb.w	r5, [sp, #45]	; 0x2d
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
90004df8:	f88d 7034 	strb.w	r7, [sp, #52]	; 0x34
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90004dfc:	f005 f9ee 	bl	9000a1dc <HAL_MPU_ConfigRegion>
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
90004e00:	2302      	movs	r3, #2
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_ENABLE;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
  MPU_InitStruct.IsBufferable = MPU_ACCESS_BUFFERABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90004e02:	a80b      	add	r0, sp, #44	; 0x2c
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
90004e04:	f8ad 6037 	strh.w	r6, [sp, #55]	; 0x37
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
90004e08:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
  MPU_InitStruct.Size = MPU_REGION_SIZE_128MB;
90004e0c:	231a      	movs	r3, #26
90004e0e:	f88d 3034 	strb.w	r3, [sp, #52]	; 0x34
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
90004e12:	f240 1301 	movw	r3, #257	; 0x101
90004e16:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90004e1a:	f005 f9df 	bl	9000a1dc <HAL_MPU_ConfigRegion>
  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER3;
  MPU_InitStruct.BaseAddress = 0xD0000000;
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
90004e1e:	f44f 7380 	mov.w	r3, #256	; 0x100
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_DISABLE;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
  MPU_InitStruct.IsBufferable = MPU_ACCESS_NOT_BUFFERABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90004e22:	a80b      	add	r0, sp, #44	; 0x2c
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
90004e24:	f8ad 403a 	strh.w	r4, [sp, #58]	; 0x3a

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER4;
90004e28:	2404      	movs	r4, #4
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
90004e2a:	f8ad 3037 	strh.w	r3, [sp, #55]	; 0x37
  MPU_InitStruct.BaseAddress = 0xD0000000;
90004e2e:	f04f 4350 	mov.w	r3, #3489660928	; 0xd0000000
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
90004e32:	f88d 7034 	strb.w	r7, [sp, #52]	; 0x34
  MPU_InitStruct.BaseAddress = 0xD0000000;
90004e36:	930c      	str	r3, [sp, #48]	; 0x30
  MPU_InitStruct.Number = MPU_REGION_NUMBER3;
90004e38:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90004e3c:	f005 f9ce 	bl	9000a1dc <HAL_MPU_ConfigRegion>
  MPU_InitStruct.Size = MPU_REGION_SIZE_32MB;
90004e40:	2318      	movs	r3, #24
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90004e42:	a80b      	add	r0, sp, #44	; 0x2c
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
90004e44:	f88d 6037 	strb.w	r6, [sp, #55]	; 0x37
  MPU_InitStruct.Size = MPU_REGION_SIZE_32MB;
90004e48:	f88d 3034 	strb.w	r3, [sp, #52]	; 0x34
  MPU_InitStruct.Number = MPU_REGION_NUMBER4;
90004e4c:	f88d 402d 	strb.w	r4, [sp, #45]	; 0x2d
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
90004e50:	f88d 503a 	strb.w	r5, [sp, #58]	; 0x3a
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90004e54:	f005 f9c2 	bl	9000a1dc <HAL_MPU_ConfigRegion>
  /* Enables the MPU */
  HAL_MPU_Enable(MPU_PRIVILEGED_DEFAULT);
90004e58:	4620      	mov	r0, r4
90004e5a:	f005 f9af 	bl	9000a1bc <HAL_MPU_Enable>
    if (SCB->CCR & SCB_CCR_IC_Msk) return;  /* return if ICache is already enabled */
90004e5e:	4ab2      	ldr	r2, [pc, #712]	; (90005128 <main+0x374>)
90004e60:	6953      	ldr	r3, [r2, #20]
90004e62:	f413 3300 	ands.w	r3, r3, #131072	; 0x20000
90004e66:	d111      	bne.n	90004e8c <main+0xd8>
  __ASM volatile ("dsb 0xF":::"memory");
90004e68:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90004e6c:	f3bf 8f6f 	isb	sy
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
90004e70:	f8c2 3250 	str.w	r3, [r2, #592]	; 0x250
  __ASM volatile ("dsb 0xF":::"memory");
90004e74:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90004e78:	f3bf 8f6f 	isb	sy
    SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
90004e7c:	6953      	ldr	r3, [r2, #20]
90004e7e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
90004e82:	6153      	str	r3, [r2, #20]
  __ASM volatile ("dsb 0xF":::"memory");
90004e84:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90004e88:	f3bf 8f6f 	isb	sy
    if (SCB->CCR & SCB_CCR_DC_Msk) return;  /* return if DCache is already enabled */
90004e8c:	48a6      	ldr	r0, [pc, #664]	; (90005128 <main+0x374>)
90004e8e:	6943      	ldr	r3, [r0, #20]
90004e90:	f413 3380 	ands.w	r3, r3, #65536	; 0x10000
90004e94:	d124      	bne.n	90004ee0 <main+0x12c>
    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
90004e96:	f8c0 3084 	str.w	r3, [r0, #132]	; 0x84
  __ASM volatile ("dsb 0xF":::"memory");
90004e9a:	f3bf 8f4f 	dsb	sy
    ccsidr = SCB->CCSIDR;
90004e9e:	f8d0 5080 	ldr.w	r5, [r0, #128]	; 0x80
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90004ea2:	f643 76e0 	movw	r6, #16352	; 0x3fe0
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
90004ea6:	f3c5 344e 	ubfx	r4, r5, #13, #15
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90004eaa:	f3c5 05c9 	ubfx	r5, r5, #3, #10
90004eae:	0164      	lsls	r4, r4, #5
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90004eb0:	ea04 0106 	and.w	r1, r4, r6
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90004eb4:	462b      	mov	r3, r5
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90004eb6:	ea41 7283 	orr.w	r2, r1, r3, lsl #30
      } while (ways-- != 0U);
90004eba:	3b01      	subs	r3, #1
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90004ebc:	f8c0 2260 	str.w	r2, [r0, #608]	; 0x260
      } while (ways-- != 0U);
90004ec0:	1c5a      	adds	r2, r3, #1
90004ec2:	d1f8      	bne.n	90004eb6 <main+0x102>
    } while(sets-- != 0U);
90004ec4:	3c20      	subs	r4, #32
90004ec6:	f114 0f20 	cmn.w	r4, #32
90004eca:	d1f1      	bne.n	90004eb0 <main+0xfc>
90004ecc:	f3bf 8f4f 	dsb	sy
    SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
90004ed0:	6943      	ldr	r3, [r0, #20]
90004ed2:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
90004ed6:	6143      	str	r3, [r0, #20]
90004ed8:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90004edc:	f3bf 8f6f 	isb	sy
  HAL_Init();
90004ee0:	f005 f8a6 	bl	9000a030 <HAL_Init>
  SystemClock_Config();
90004ee4:	f7ff ff0e 	bl	90004d04 <SystemClock_Config>
  __ASM volatile ("cpsie i" : : : "memory");
90004ee8:	b662      	cpsie	i
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90004eea:	2400      	movs	r4, #0
  __HAL_RCC_GPIOK_CLK_ENABLE();
90004eec:	4d8f      	ldr	r5, [pc, #572]	; (9000512c <main+0x378>)
  HAL_GPIO_WritePin(GPIOB, FRAME_RATE_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
90004eee:	21c0      	movs	r1, #192	; 0xc0
90004ef0:	488f      	ldr	r0, [pc, #572]	; (90005130 <main+0x37c>)
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90004ef2:	940f      	str	r4, [sp, #60]	; 0x3c
  HAL_GPIO_WritePin(GPIOB, FRAME_RATE_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
90004ef4:	4622      	mov	r2, r4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90004ef6:	2601      	movs	r6, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90004ef8:	f04f 0903 	mov.w	r9, #3
  GPIO_InitStruct.Pin = GPIO_PIN_3;
90004efc:	2708      	movs	r7, #8
  GPIO_InitStruct.Pin = LCD_RESET_Pin;
90004efe:	f04f 0804 	mov.w	r8, #4
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
90004f02:	f04f 0a05 	mov.w	sl, #5
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90004f06:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
90004f0a:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  __HAL_RCC_GPIOK_CLK_ENABLE();
90004f0e:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90004f12:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
90004f16:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90004f1a:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90004f1e:	f403 6380 	and.w	r3, r3, #1024	; 0x400
90004f22:	9301      	str	r3, [sp, #4]
90004f24:	9b01      	ldr	r3, [sp, #4]
  __HAL_RCC_GPIOG_CLK_ENABLE();
90004f26:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90004f2a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
90004f2e:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90004f32:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90004f36:	f003 0340 	and.w	r3, r3, #64	; 0x40
90004f3a:	9302      	str	r3, [sp, #8]
90004f3c:	9b02      	ldr	r3, [sp, #8]
  __HAL_RCC_GPIOI_CLK_ENABLE();
90004f3e:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90004f42:	f443 7380 	orr.w	r3, r3, #256	; 0x100
90004f46:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90004f4a:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90004f4e:	f403 7380 	and.w	r3, r3, #256	; 0x100
90004f52:	9303      	str	r3, [sp, #12]
90004f54:	9b03      	ldr	r3, [sp, #12]
  __HAL_RCC_GPIOE_CLK_ENABLE();
90004f56:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90004f5a:	f043 0310 	orr.w	r3, r3, #16
90004f5e:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90004f62:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90004f66:	f003 0310 	and.w	r3, r3, #16
90004f6a:	9304      	str	r3, [sp, #16]
90004f6c:	9b04      	ldr	r3, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
90004f6e:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90004f72:	f043 0302 	orr.w	r3, r3, #2
90004f76:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90004f7a:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90004f7e:	f003 0302 	and.w	r3, r3, #2
90004f82:	9305      	str	r3, [sp, #20]
90004f84:	9b05      	ldr	r3, [sp, #20]
  __HAL_RCC_GPIOJ_CLK_ENABLE();
90004f86:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90004f8a:	f443 7300 	orr.w	r3, r3, #512	; 0x200
90004f8e:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90004f92:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90004f96:	f403 7300 	and.w	r3, r3, #512	; 0x200
90004f9a:	9306      	str	r3, [sp, #24]
90004f9c:	9b06      	ldr	r3, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
90004f9e:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90004fa2:	f043 0308 	orr.w	r3, r3, #8
90004fa6:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90004faa:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90004fae:	f003 0308 	and.w	r3, r3, #8
90004fb2:	9307      	str	r3, [sp, #28]
90004fb4:	9b07      	ldr	r3, [sp, #28]
  __HAL_RCC_GPIOF_CLK_ENABLE();
90004fb6:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90004fba:	f043 0320 	orr.w	r3, r3, #32
90004fbe:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90004fc2:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90004fc6:	f003 0320 	and.w	r3, r3, #32
90004fca:	9308      	str	r3, [sp, #32]
90004fcc:	9b08      	ldr	r3, [sp, #32]
  __HAL_RCC_GPIOH_CLK_ENABLE();
90004fce:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90004fd2:	f043 0380 	orr.w	r3, r3, #128	; 0x80
90004fd6:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90004fda:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90004fde:	f003 0380 	and.w	r3, r3, #128	; 0x80
90004fe2:	9309      	str	r3, [sp, #36]	; 0x24
90004fe4:	9b09      	ldr	r3, [sp, #36]	; 0x24
  __HAL_RCC_GPIOA_CLK_ENABLE();
90004fe6:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90004fea:	f043 0301 	orr.w	r3, r3, #1
90004fee:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90004ff2:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90004ff6:	f003 0301 	and.w	r3, r3, #1
90004ffa:	930a      	str	r3, [sp, #40]	; 0x28
90004ffc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  HAL_GPIO_WritePin(GPIOB, FRAME_RATE_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
90004ffe:	f005 fcdd 	bl	9000a9bc <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, LCD_DE_Pin|GPIO_PIN_13, GPIO_PIN_RESET);
90005002:	4622      	mov	r2, r4
90005004:	f44f 5102 	mov.w	r1, #8320	; 0x2080
90005008:	484a      	ldr	r0, [pc, #296]	; (90005134 <main+0x380>)
9000500a:	f005 fcd7 	bl	9000a9bc <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_3, GPIO_PIN_RESET);
9000500e:	4622      	mov	r2, r4
90005010:	2108      	movs	r1, #8
90005012:	4849      	ldr	r0, [pc, #292]	; (90005138 <main+0x384>)
90005014:	f005 fcd2 	bl	9000a9bc <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LED_RED_GPIO_Port, LED_RED_Pin, GPIO_PIN_SET);
90005018:	f44f 5100 	mov.w	r1, #8192	; 0x2000
9000501c:	4847      	ldr	r0, [pc, #284]	; (9000513c <main+0x388>)
9000501e:	2201      	movs	r2, #1
90005020:	f005 fccc 	bl	9000a9bc <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
90005024:	4622      	mov	r2, r4
90005026:	2108      	movs	r1, #8
90005028:	4845      	ldr	r0, [pc, #276]	; (90005140 <main+0x38c>)
9000502a:	f005 fcc7 	bl	9000a9bc <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LCD_BL_CTRL_GPIO_Port, LCD_BL_CTRL_Pin, GPIO_PIN_SET);
9000502e:	2201      	movs	r2, #1
90005030:	4844      	ldr	r0, [pc, #272]	; (90005144 <main+0x390>)
90005032:	4611      	mov	r1, r2
90005034:	f005 fcc2 	bl	9000a9bc <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOA, LCD_RESET_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
90005038:	4622      	mov	r2, r4
9000503a:	2144      	movs	r1, #68	; 0x44
9000503c:	4842      	ldr	r0, [pc, #264]	; (90005148 <main+0x394>)
9000503e:	f005 fcbd 	bl	9000a9bc <HAL_GPIO_WritePin>
  GPIO_InitStruct.Pin = FRAME_RATE_Pin|RENDER_TIME_Pin;
90005042:	23c0      	movs	r3, #192	; 0xc0
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
90005044:	a90b      	add	r1, sp, #44	; 0x2c
90005046:	483a      	ldr	r0, [pc, #232]	; (90005130 <main+0x37c>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90005048:	e9cd 360b 	strd	r3, r6, [sp, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
9000504c:	e9cd 490d 	strd	r4, r9, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
90005050:	f005 fab4 	bl	9000a5bc <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = LCD_DE_Pin|GPIO_PIN_13;
90005054:	f44f 5302 	mov.w	r3, #8320	; 0x2080
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
90005058:	a90b      	add	r1, sp, #44	; 0x2c
9000505a:	4836      	ldr	r0, [pc, #216]	; (90005134 <main+0x380>)
  GPIO_InitStruct.Pin = LCD_DE_Pin|GPIO_PIN_13;
9000505c:	930b      	str	r3, [sp, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
9000505e:	940e      	str	r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90005060:	e9cd 640c 	strd	r6, r4, [sp, #48]	; 0x30
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
90005064:	f005 faaa 	bl	9000a5bc <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
90005068:	a90b      	add	r1, sp, #44	; 0x2c
9000506a:	4833      	ldr	r0, [pc, #204]	; (90005138 <main+0x384>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
9000506c:	e9cd 760b 	strd	r7, r6, [sp, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
90005070:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
90005074:	f005 faa2 	bl	9000a5bc <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = LED_RED_Pin;
90005078:	f44f 5300 	mov.w	r3, #8192	; 0x2000
  HAL_GPIO_Init(LED_RED_GPIO_Port, &GPIO_InitStruct);
9000507c:	a90b      	add	r1, sp, #44	; 0x2c
9000507e:	482f      	ldr	r0, [pc, #188]	; (9000513c <main+0x388>)
  GPIO_InitStruct.Pin = LED_RED_Pin;
90005080:	930b      	str	r3, [sp, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
90005082:	940e      	str	r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90005084:	e9cd 640c 	strd	r6, r4, [sp, #48]	; 0x30
  HAL_GPIO_Init(LED_RED_GPIO_Port, &GPIO_InitStruct);
90005088:	f005 fa98 	bl	9000a5bc <HAL_GPIO_Init>
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
9000508c:	a90b      	add	r1, sp, #44	; 0x2c
9000508e:	482c      	ldr	r0, [pc, #176]	; (90005140 <main+0x38c>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90005090:	e9cd 760b 	strd	r7, r6, [sp, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90005094:	e9cd 490d 	strd	r4, r9, [sp, #52]	; 0x34
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
90005098:	f005 fa90 	bl	9000a5bc <HAL_GPIO_Init>
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
9000509c:	a90b      	add	r1, sp, #44	; 0x2c
9000509e:	4829      	ldr	r0, [pc, #164]	; (90005144 <main+0x390>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
900050a0:	e9cd 660b 	strd	r6, r6, [sp, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
900050a4:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
900050a8:	f005 fa88 	bl	9000a5bc <HAL_GPIO_Init>
  HAL_GPIO_Init(LCD_RESET_GPIO_Port, &GPIO_InitStruct);
900050ac:	a90b      	add	r1, sp, #44	; 0x2c
900050ae:	4826      	ldr	r0, [pc, #152]	; (90005148 <main+0x394>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
900050b0:	e9cd 860b 	strd	r8, r6, [sp, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
900050b4:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  HAL_GPIO_Init(LCD_RESET_GPIO_Port, &GPIO_InitStruct);
900050b8:	f005 fa80 	bl	9000a5bc <HAL_GPIO_Init>
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
900050bc:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
  GPIO_InitStruct.Pin = MCU_ACTIVE_Pin;
900050c0:	f04f 0940 	mov.w	r9, #64	; 0x40
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
900050c4:	a90b      	add	r1, sp, #44	; 0x2c
900050c6:	4820      	ldr	r0, [pc, #128]	; (90005148 <main+0x394>)
  GPIO_InitStruct.Pin = MCU_ACTIVE_Pin;
900050c8:	f8cd 902c 	str.w	r9, [sp, #44]	; 0x2c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
900050cc:	e9cd 640c 	strd	r6, r4, [sp, #48]	; 0x30
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
900050d0:	f005 fa74 	bl	9000a5bc <HAL_GPIO_Init>
  __HAL_RCC_MDMA_CLK_ENABLE();
900050d4:	f8d5 30d4 	ldr.w	r3, [r5, #212]	; 0xd4
  HAL_NVIC_SetPriority(MDMA_IRQn, 5, 0);
900050d8:	4622      	mov	r2, r4
900050da:	2105      	movs	r1, #5
  __HAL_RCC_MDMA_CLK_ENABLE();
900050dc:	4333      	orrs	r3, r6
  HAL_NVIC_SetPriority(MDMA_IRQn, 5, 0);
900050de:	207a      	movs	r0, #122	; 0x7a
  __HAL_RCC_MDMA_CLK_ENABLE();
900050e0:	f8c5 30d4 	str.w	r3, [r5, #212]	; 0xd4
900050e4:	f8d5 30d4 	ldr.w	r3, [r5, #212]	; 0xd4
  hltdc.Instance = LTDC;
900050e8:	4d18      	ldr	r5, [pc, #96]	; (9000514c <main+0x398>)
  __HAL_RCC_MDMA_CLK_ENABLE();
900050ea:	4033      	ands	r3, r6
900050ec:	9300      	str	r3, [sp, #0]
900050ee:	9b00      	ldr	r3, [sp, #0]
  HAL_NVIC_SetPriority(MDMA_IRQn, 5, 0);
900050f0:	f004 fff8 	bl	9000a0e4 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(MDMA_IRQn);
900050f4:	207a      	movs	r0, #122	; 0x7a
900050f6:	f005 f833 	bl	9000a160 <HAL_NVIC_EnableIRQ>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
900050fa:	2234      	movs	r2, #52	; 0x34
900050fc:	4621      	mov	r1, r4
900050fe:	a80b      	add	r0, sp, #44	; 0x2c
90005100:	f025 f8b4 	bl	9002a26c <memset>
  hltdc.Instance = LTDC;
90005104:	4b12      	ldr	r3, [pc, #72]	; (90005150 <main+0x39c>)
  hltdc.Init.AccumulatedVBP = 11;
90005106:	202a      	movs	r0, #42	; 0x2a
  hltdc.Init.VerticalSync = 8;
90005108:	61af      	str	r7, [r5, #24]
  hltdc.Instance = LTDC;
9000510a:	602b      	str	r3, [r5, #0]
  hltdc.Init.HorizontalSync = 39;
9000510c:	2327      	movs	r3, #39	; 0x27
  hltdc.Init.AccumulatedActiveH = 283;
9000510e:	f240 270a 	movw	r7, #522	; 0x20a
  hltdc.Init.TotalHeigh = 285;
90005112:	f44f 7c04 	mov.w	ip, #528	; 0x210
  hltdc.Init.HorizontalSync = 39;
90005116:	616b      	str	r3, [r5, #20]
  hltdc.Init.AccumulatedVBP = 11;
90005118:	230b      	movs	r3, #11
  hltdc.Init.Backcolor.Blue = 0;
9000511a:	86ac      	strh	r4, [r5, #52]	; 0x34
9000511c:	e01a      	b.n	90005154 <main+0x3a0>
9000511e:	bf00      	nop
90005120:	03000012 	.word	0x03000012
90005124:	01010001 	.word	0x01010001
90005128:	e000ed00 	.word	0xe000ed00
9000512c:	58024400 	.word	0x58024400
90005130:	58020400 	.word	0x58020400
90005134:	58020c00 	.word	0x58020c00
90005138:	58021000 	.word	0x58021000
9000513c:	58022000 	.word	0x58022000
90005140:	58021800 	.word	0x58021800
90005144:	58022800 	.word	0x58022800
90005148:	58020000 	.word	0x58020000
9000514c:	240092dc 	.word	0x240092dc
90005150:	50001000 	.word	0x50001000
  hltdc.Init.Backcolor.Red = 0;
90005154:	f885 4036 	strb.w	r4, [r5, #54]	; 0x36
  hltdc.Init.AccumulatedVBP = 11;
90005158:	e9c5 0307 	strd	r0, r3, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 283;
9000515c:	f240 131b 	movw	r3, #283	; 0x11b
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
90005160:	4628      	mov	r0, r5
  hltdc.Init.AccumulatedActiveH = 283;
90005162:	e9c5 7309 	strd	r7, r3, [r5, #36]	; 0x24
  hltdc.Init.TotalHeigh = 285;
90005166:	f240 131d 	movw	r3, #285	; 0x11d
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
9000516a:	2702      	movs	r7, #2
  hltdc.Init.TotalHeigh = 285;
9000516c:	e9c5 c30b 	strd	ip, r3, [r5, #44]	; 0x2c
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
90005170:	e9c5 4401 	strd	r4, r4, [r5, #4]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
90005174:	e9c5 4403 	strd	r4, r4, [r5, #12]
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
90005178:	f007 fc46 	bl	9000ca08 <HAL_LTDC_Init>
  pLayerCfg.WindowX1 = 480;
9000517c:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
90005180:	4622      	mov	r2, r4
90005182:	a90b      	add	r1, sp, #44	; 0x2c
  pLayerCfg.WindowX1 = 480;
90005184:	930c      	str	r3, [sp, #48]	; 0x30
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
90005186:	4628      	mov	r0, r5
  pLayerCfg.ImageWidth = 480;
90005188:	9315      	str	r3, [sp, #84]	; 0x54
  pLayerCfg.WindowY1 = 272;
9000518a:	f44f 7388 	mov.w	r3, #272	; 0x110
  hdma2d.Instance = DMA2D;
9000518e:	4d79      	ldr	r5, [pc, #484]	; (90005374 <main+0x5c0>)
  pLayerCfg.WindowY1 = 272;
90005190:	930e      	str	r3, [sp, #56]	; 0x38
  pLayerCfg.ImageHeight = 272;
90005192:	9316      	str	r3, [sp, #88]	; 0x58
  pLayerCfg.Alpha = 255;
90005194:	23ff      	movs	r3, #255	; 0xff
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
90005196:	970f      	str	r7, [sp, #60]	; 0x3c
  pLayerCfg.Alpha = 255;
90005198:	9310      	str	r3, [sp, #64]	; 0x40
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
9000519a:	f44f 6380 	mov.w	r3, #1024	; 0x400
  pLayerCfg.WindowX0 = 0;
9000519e:	940b      	str	r4, [sp, #44]	; 0x2c
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
900051a0:	9312      	str	r3, [sp, #72]	; 0x48
  pLayerCfg.WindowY0 = 0;
900051a2:	940d      	str	r4, [sp, #52]	; 0x34
  pLayerCfg.Alpha0 = 0;
900051a4:	9411      	str	r4, [sp, #68]	; 0x44
  pLayerCfg.FBStartAdress = 0;
900051a6:	9414      	str	r4, [sp, #80]	; 0x50
  pLayerCfg.Backcolor.Blue = 0;
900051a8:	f8ad 405c 	strh.w	r4, [sp, #92]	; 0x5c
  pLayerCfg.Backcolor.Red = 0;
900051ac:	f88d 405e 	strb.w	r4, [sp, #94]	; 0x5e
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
900051b0:	f8cd a04c 	str.w	sl, [sp, #76]	; 0x4c
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
900051b4:	f007 fcfc 	bl	9000cbb0 <HAL_LTDC_ConfigLayer>
  hdma2d.Instance = DMA2D;
900051b8:	4b6f      	ldr	r3, [pc, #444]	; (90005378 <main+0x5c4>)
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
900051ba:	4628      	mov	r0, r5
  hdma2d.LayerCfg[1].ChromaSubSampling = DMA2D_NO_CSS;
900051bc:	65ec      	str	r4, [r5, #92]	; 0x5c
  hdma2d.Instance = DMA2D;
900051be:	602b      	str	r3, [r5, #0]
  hdma2d.Init.OutputOffset = 0;
900051c0:	60ec      	str	r4, [r5, #12]
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
900051c2:	e9c5 4711 	strd	r4, r7, [r5, #68]	; 0x44
  hdma2d.LayerCfg[1].InputAlpha = 0;
900051c6:	e9c5 4413 	strd	r4, r4, [r5, #76]	; 0x4c
  hdma2d.LayerCfg[1].RedBlueSwap = DMA2D_RB_REGULAR;
900051ca:	e9c5 4415 	strd	r4, r4, [r5, #84]	; 0x54
  hdma2d.Init.ColorMode = DMA2D_OUTPUT_RGB565;
900051ce:	e9c5 4701 	strd	r4, r7, [r5, #4]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
900051d2:	f005 f8ab 	bl	9000a32c <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
900051d6:	4631      	mov	r1, r6
900051d8:	4628      	mov	r0, r5
  huart3.Instance = USART3;
900051da:	4d68      	ldr	r5, [pc, #416]	; (9000537c <main+0x5c8>)
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
900051dc:	f005 f97e 	bl	9000a4dc <HAL_DMA2D_ConfigLayer>
  hsdram2.Instance = FMC_SDRAM_DEVICE;
900051e0:	4867      	ldr	r0, [pc, #412]	; (90005380 <main+0x5cc>)
  hsdram2.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
900051e2:	f44f 73c0 	mov.w	r3, #384	; 0x180
  SdramTiming.LoadToActiveDelay = 2;
900051e6:	970b      	str	r7, [sp, #44]	; 0x2c
  if (HAL_SDRAM_Init(&hsdram2, &SdramTiming) != HAL_OK)
900051e8:	a90b      	add	r1, sp, #44	; 0x2c
  SdramTiming.WriteRecoveryTime = 5;
900051ea:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
  SdramTiming.SelfRefreshTime = 4;
900051ee:	f8cd 8034 	str.w	r8, [sp, #52]	; 0x34
  hsdram2.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
900051f2:	f8c0 800c 	str.w	r8, [r0, #12]
  hsdram2.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
900051f6:	f8c0 9014 	str.w	r9, [r0, #20]
  hsdram2.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_0;
900051fa:	6284      	str	r4, [r0, #40]	; 0x28
  hsdram2.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
900051fc:	e9c0 3406 	strd	r3, r4, [r0, #24]
  hsdram2.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
90005200:	f44f 6300 	mov.w	r3, #2048	; 0x800
90005204:	6203      	str	r3, [r0, #32]
  hsdram2.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
90005206:	f44f 5380 	mov.w	r3, #4096	; 0x1000
9000520a:	6243      	str	r3, [r0, #36]	; 0x24
  hsdram2.Instance = FMC_SDRAM_DEVICE;
9000520c:	f103 43a4 	add.w	r3, r3, #1375731712	; 0x52000000
90005210:	f503 5345 	add.w	r3, r3, #12608	; 0x3140
  SdramTiming.RCDDelay = 2;
90005214:	e9cd 7710 	strd	r7, r7, [sp, #64]	; 0x40
  hsdram2.Instance = FMC_SDRAM_DEVICE;
90005218:	6003      	str	r3, [r0, #0]
  SdramTiming.ExitSelfRefreshDelay = 7;
9000521a:	2707      	movs	r7, #7
  hsdram2.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
9000521c:	2310      	movs	r3, #16
  SdramTiming.ExitSelfRefreshDelay = 7;
9000521e:	970c      	str	r7, [sp, #48]	; 0x30
  hsdram2.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
90005220:	6103      	str	r3, [r0, #16]
  SdramTiming.RowCycleDelay = 7;
90005222:	970e      	str	r7, [sp, #56]	; 0x38
  hsdram2.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
90005224:	e9c0 6401 	strd	r6, r4, [r0, #4]
  if (HAL_SDRAM_Init(&hsdram2, &SdramTiming) != HAL_OK)
90005228:	f009 fe90 	bl	9000ef4c <HAL_SDRAM_Init>
  BSP_SDRAM_DeInit(0);
9000522c:	4620      	mov	r0, r4
9000522e:	f004 fc91 	bl	90009b54 <BSP_SDRAM_DeInit>
  if(BSP_SDRAM_Init(0) != BSP_ERROR_NONE)
90005232:	4620      	mov	r0, r4
90005234:	f004 fcd8 	bl	90009be8 <BSP_SDRAM_Init>
  MX_LIBJPEG_Init();
90005238:	f7fb fa52 	bl	900006e0 <MX_LIBJPEG_Init>
  hjpeg.Instance = JPEG;
9000523c:	4b51      	ldr	r3, [pc, #324]	; (90005384 <main+0x5d0>)
9000523e:	4852      	ldr	r0, [pc, #328]	; (90005388 <main+0x5d4>)
90005240:	6003      	str	r3, [r0, #0]
  if (HAL_JPEG_Init(&hjpeg) != HAL_OK)
90005242:	f006 fbb5 	bl	9000b9b0 <HAL_JPEG_Init>
  hcrc.Instance = CRC;
90005246:	4851      	ldr	r0, [pc, #324]	; (9000538c <main+0x5d8>)
90005248:	4b51      	ldr	r3, [pc, #324]	; (90005390 <main+0x5dc>)
  hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
9000524a:	8084      	strh	r4, [r0, #4]
  hcrc.Instance = CRC;
9000524c:	6003      	str	r3, [r0, #0]
  hcrc.Init.InputDataInversionMode = CRC_INPUTDATA_INVERSION_NONE;
9000524e:	6144      	str	r4, [r0, #20]
  hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
90005250:	6184      	str	r4, [r0, #24]
  hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
90005252:	6206      	str	r6, [r0, #32]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
90005254:	f004 fff4 	bl	9000a240 <HAL_CRC_Init>
  huart3.Instance = USART3;
90005258:	4b4e      	ldr	r3, [pc, #312]	; (90005394 <main+0x5e0>)
  if (HAL_UART_Init(&huart3) != HAL_OK)
9000525a:	4628      	mov	r0, r5
  huart3.Init.Parity = UART_PARITY_NONE;
9000525c:	612c      	str	r4, [r5, #16]
  huart3.Instance = USART3;
9000525e:	602b      	str	r3, [r5, #0]
  huart3.Init.BaudRate = 115200;
90005260:	f44f 33e1 	mov.w	r3, #115200	; 0x1c200
  huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
90005264:	61ac      	str	r4, [r5, #24]
  huart3.Init.BaudRate = 115200;
90005266:	606b      	str	r3, [r5, #4]
  huart3.Init.Mode = UART_MODE_TX_RX;
90005268:	230c      	movs	r3, #12
  huart3.Init.StopBits = UART_STOPBITS_1;
9000526a:	e9c5 4402 	strd	r4, r4, [r5, #8]
  huart3.Init.Mode = UART_MODE_TX_RX;
9000526e:	616b      	str	r3, [r5, #20]
  huart3.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
90005270:	e9c5 4407 	strd	r4, r4, [r5, #28]
  huart3.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
90005274:	e9c5 4409 	strd	r4, r4, [r5, #36]	; 0x24
  if (HAL_UART_Init(&huart3) != HAL_OK)
90005278:	f00b f894 	bl	900103a4 <HAL_UART_Init>
  if (HAL_UARTEx_SetTxFifoThreshold(&huart3, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
9000527c:	4621      	mov	r1, r4
9000527e:	4628      	mov	r0, r5
90005280:	f00b f8e2 	bl	90010448 <HAL_UARTEx_SetTxFifoThreshold>
  if (HAL_UARTEx_SetRxFifoThreshold(&huart3, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
90005284:	4621      	mov	r1, r4
90005286:	4628      	mov	r0, r5
90005288:	f00b f920 	bl	900104cc <HAL_UARTEx_SetRxFifoThreshold>
  if (HAL_UARTEx_DisableFifoMode(&huart3) != HAL_OK)
9000528c:	4628      	mov	r0, r5
9000528e:	f00b f8bd 	bl	9001040c <HAL_UARTEx_DisableFifoMode>
  hspi2.Instance = SPI2;
90005292:	4841      	ldr	r0, [pc, #260]	; (90005398 <main+0x5e4>)
90005294:	4a41      	ldr	r2, [pc, #260]	; (9000539c <main+0x5e8>)
  hspi2.Init.NSS = SPI_NSS_SOFT;
90005296:	f04f 6380 	mov.w	r3, #67108864	; 0x4000000
  hspi2.Instance = SPI2;
9000529a:	6002      	str	r2, [r0, #0]
  hspi2.Init.Mode = SPI_MODE_MASTER;
9000529c:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  hspi2.Init.NSS = SPI_NSS_SOFT;
900052a0:	6183      	str	r3, [r0, #24]
  hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_32;
900052a2:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
  hspi2.Init.Mode = SPI_MODE_MASTER;
900052a6:	6042      	str	r2, [r0, #4]
  hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_32;
900052a8:	61c3      	str	r3, [r0, #28]
  hspi2.Init.NSSPolarity = SPI_NSS_POLARITY_LOW;
900052aa:	e9c0 340d 	strd	r3, r4, [r0, #52]	; 0x34
  hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
900052ae:	e9c0 4702 	strd	r4, r7, [r0, #8]
  hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
900052b2:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
900052b6:	e9c0 4408 	strd	r4, r4, [r0, #32]
  hspi2.Init.CRCPolynomial = 0x0;
900052ba:	e9c0 440a 	strd	r4, r4, [r0, #40]	; 0x28
  hspi2.Init.TxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
900052be:	e9c0 440f 	strd	r4, r4, [r0, #60]	; 0x3c
  hspi2.Init.MasterSSIdleness = SPI_MASTER_SS_IDLENESS_00CYCLE;
900052c2:	e9c0 4411 	strd	r4, r4, [r0, #68]	; 0x44
  hspi2.Init.MasterReceiverAutoSusp = SPI_MASTER_RX_AUTOSUSP_DISABLE;
900052c6:	e9c0 4413 	strd	r4, r4, [r0, #76]	; 0x4c
  hspi2.Init.IOSwap = SPI_IO_SWAP_DISABLE;
900052ca:	e9c0 4415 	strd	r4, r4, [r0, #84]	; 0x54
  if (HAL_SPI_Init(&hspi2) != HAL_OK)
900052ce:	f009 ff09 	bl	9000f0e4 <HAL_SPI_Init>
  MX_TouchGFX_Init();
900052d2:	f7fd f91f 	bl	90002514 <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
900052d6:	f7fd f91b 	bl	90002510 <MX_TouchGFX_PreOSInit>
  osKernelInitialize();
900052da:	f00b fa0d 	bl	900106f8 <osKernelInitialize>
  bullet_timer_started_semaphoreHandle = osSemaphoreNew(1, 0, &bullet_timer_started_semaphore_attributes);
900052de:	4a30      	ldr	r2, [pc, #192]	; (900053a0 <main+0x5ec>)
900052e0:	4621      	mov	r1, r4
900052e2:	4630      	mov	r0, r6
900052e4:	f00b fb22 	bl	9001092c <osSemaphoreNew>
900052e8:	4b2e      	ldr	r3, [pc, #184]	; (900053a4 <main+0x5f0>)
  bullet_timer_ended_semaphoreHandle = osSemaphoreNew(1, 0, &bullet_timer_ended_semaphore_attributes);
900052ea:	4a2f      	ldr	r2, [pc, #188]	; (900053a8 <main+0x5f4>)
900052ec:	4621      	mov	r1, r4
  bullet_timer_started_semaphoreHandle = osSemaphoreNew(1, 0, &bullet_timer_started_semaphore_attributes);
900052ee:	6018      	str	r0, [r3, #0]
  bullet_timer_ended_semaphoreHandle = osSemaphoreNew(1, 0, &bullet_timer_ended_semaphore_attributes);
900052f0:	4630      	mov	r0, r6
900052f2:	f00b fb1b 	bl	9001092c <osSemaphoreNew>
900052f6:	4b2d      	ldr	r3, [pc, #180]	; (900053ac <main+0x5f8>)
  invincibility_timer_started_semaphoreHandle = osSemaphoreNew(1, 0, &invincibility_timer_started_semaphore_attributes);
900052f8:	4a2d      	ldr	r2, [pc, #180]	; (900053b0 <main+0x5fc>)
900052fa:	4621      	mov	r1, r4
  bullet_timer_ended_semaphoreHandle = osSemaphoreNew(1, 0, &bullet_timer_ended_semaphore_attributes);
900052fc:	6018      	str	r0, [r3, #0]
  invincibility_timer_started_semaphoreHandle = osSemaphoreNew(1, 0, &invincibility_timer_started_semaphore_attributes);
900052fe:	4630      	mov	r0, r6
90005300:	f00b fb14 	bl	9001092c <osSemaphoreNew>
90005304:	4b2b      	ldr	r3, [pc, #172]	; (900053b4 <main+0x600>)
90005306:	4601      	mov	r1, r0
  invincibility_timer_ended_semaphoreHandle = osSemaphoreNew(1, 0, &invincibility_timer_ended_semaphore_attributes);
90005308:	4a2b      	ldr	r2, [pc, #172]	; (900053b8 <main+0x604>)
9000530a:	4630      	mov	r0, r6
  invincibility_timer_started_semaphoreHandle = osSemaphoreNew(1, 0, &invincibility_timer_started_semaphore_attributes);
9000530c:	6019      	str	r1, [r3, #0]
  invincibility_timer_ended_semaphoreHandle = osSemaphoreNew(1, 0, &invincibility_timer_ended_semaphore_attributes);
9000530e:	4621      	mov	r1, r4
90005310:	f00b fb0c 	bl	9001092c <osSemaphoreNew>
90005314:	4b29      	ldr	r3, [pc, #164]	; (900053bc <main+0x608>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
90005316:	4a2a      	ldr	r2, [pc, #168]	; (900053c0 <main+0x60c>)
90005318:	4621      	mov	r1, r4
  invincibility_timer_ended_semaphoreHandle = osSemaphoreNew(1, 0, &invincibility_timer_ended_semaphore_attributes);
9000531a:	6018      	str	r0, [r3, #0]
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
9000531c:	4829      	ldr	r0, [pc, #164]	; (900053c4 <main+0x610>)
9000531e:	f00b fa17 	bl	90010750 <osThreadNew>
90005322:	4b29      	ldr	r3, [pc, #164]	; (900053c8 <main+0x614>)
  GUITaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUITask_attributes);
90005324:	4a29      	ldr	r2, [pc, #164]	; (900053cc <main+0x618>)
90005326:	4621      	mov	r1, r4
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
90005328:	6018      	str	r0, [r3, #0]
  GUITaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUITask_attributes);
9000532a:	4829      	ldr	r0, [pc, #164]	; (900053d0 <main+0x61c>)
9000532c:	f00b fa10 	bl	90010750 <osThreadNew>
90005330:	4b28      	ldr	r3, [pc, #160]	; (900053d4 <main+0x620>)
  videoTaskHandle = osThreadNew(videoTaskFunc, NULL, &videoTask_attributes);
90005332:	4a29      	ldr	r2, [pc, #164]	; (900053d8 <main+0x624>)
90005334:	4621      	mov	r1, r4
  GUITaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUITask_attributes);
90005336:	6018      	str	r0, [r3, #0]
  videoTaskHandle = osThreadNew(videoTaskFunc, NULL, &videoTask_attributes);
90005338:	4828      	ldr	r0, [pc, #160]	; (900053dc <main+0x628>)
9000533a:	f00b fa09 	bl	90010750 <osThreadNew>
9000533e:	4b28      	ldr	r3, [pc, #160]	; (900053e0 <main+0x62c>)
  bullet_timer_taHandle = osThreadNew(bullet_timer_task_function, NULL, &bullet_timer_ta_attributes);
90005340:	4a28      	ldr	r2, [pc, #160]	; (900053e4 <main+0x630>)
90005342:	4621      	mov	r1, r4
  videoTaskHandle = osThreadNew(videoTaskFunc, NULL, &videoTask_attributes);
90005344:	6018      	str	r0, [r3, #0]
  bullet_timer_taHandle = osThreadNew(bullet_timer_task_function, NULL, &bullet_timer_ta_attributes);
90005346:	4828      	ldr	r0, [pc, #160]	; (900053e8 <main+0x634>)
90005348:	f00b fa02 	bl	90010750 <osThreadNew>
9000534c:	4b27      	ldr	r3, [pc, #156]	; (900053ec <main+0x638>)
  invincibility_tHandle = osThreadNew(invincibility_timer_task_function, NULL, &invincibility_t_attributes);
9000534e:	4a28      	ldr	r2, [pc, #160]	; (900053f0 <main+0x63c>)
90005350:	4621      	mov	r1, r4
  bullet_timer_taHandle = osThreadNew(bullet_timer_task_function, NULL, &bullet_timer_ta_attributes);
90005352:	6018      	str	r0, [r3, #0]
  invincibility_tHandle = osThreadNew(invincibility_timer_task_function, NULL, &invincibility_t_attributes);
90005354:	4827      	ldr	r0, [pc, #156]	; (900053f4 <main+0x640>)
90005356:	f00b f9fb 	bl	90010750 <osThreadNew>
9000535a:	4b27      	ldr	r3, [pc, #156]	; (900053f8 <main+0x644>)
9000535c:	4605      	mov	r5, r0
  MFRC_ChHandle = osThreadNew(MFRC_Ch_fun, NULL, &MFRC_Ch_attributes);
9000535e:	4a27      	ldr	r2, [pc, #156]	; (900053fc <main+0x648>)
90005360:	4621      	mov	r1, r4
90005362:	4827      	ldr	r0, [pc, #156]	; (90005400 <main+0x64c>)
  invincibility_tHandle = osThreadNew(invincibility_timer_task_function, NULL, &invincibility_t_attributes);
90005364:	601d      	str	r5, [r3, #0]
  MFRC_ChHandle = osThreadNew(MFRC_Ch_fun, NULL, &MFRC_Ch_attributes);
90005366:	f00b f9f3 	bl	90010750 <osThreadNew>
9000536a:	4b26      	ldr	r3, [pc, #152]	; (90005404 <main+0x650>)
9000536c:	6018      	str	r0, [r3, #0]
  osKernelStart();
9000536e:	f00b f9d5 	bl	9001071c <osKernelStart>
  while (1)
90005372:	e7fe      	b.n	90005372 <main+0x5be>
90005374:	2400921c 	.word	0x2400921c
90005378:	52001000 	.word	0x52001000
9000537c:	24009518 	.word	0x24009518
90005380:	2400945c 	.word	0x2400945c
90005384:	52003000 	.word	0x52003000
90005388:	24009284 	.word	0x24009284
9000538c:	240091f8 	.word	0x240091f8
90005390:	58024c00 	.word	0x58024c00
90005394:	40004800 	.word	0x40004800
90005398:	24009490 	.word	0x24009490
9000539c:	40003800 	.word	0x40003800
900053a0:	9002cbcc 	.word	0x9002cbcc
900053a4:	240091ec 	.word	0x240091ec
900053a8:	9002cbbc 	.word	0x9002cbbc
900053ac:	240091e8 	.word	0x240091e8
900053b0:	9002cc58 	.word	0x9002cc58
900053b4:	240095b4 	.word	0x240095b4
900053b8:	9002cc48 	.word	0x9002cc48
900053bc:	240095b0 	.word	0x240095b0
900053c0:	9002cc00 	.word	0x9002cc00
900053c4:	90004c4d 	.word	0x90004c4d
900053c8:	240091f4 	.word	0x240091f4
900053cc:	9002cb74 	.word	0x9002cb74
900053d0:	90002525 	.word	0x90002525
900053d4:	240091e0 	.word	0x240091e0
900053d8:	9002cc68 	.word	0x9002cc68
900053dc:	90004bd1 	.word	0x90004bd1
900053e0:	240095b8 	.word	0x240095b8
900053e4:	9002cbdc 	.word	0x9002cbdc
900053e8:	90004c59 	.word	0x90004c59
900053ec:	240091f0 	.word	0x240091f0
900053f0:	9002cc24 	.word	0x9002cc24
900053f4:	90004c89 	.word	0x90004c89
900053f8:	240095ac 	.word	0x240095ac
900053fc:	9002cb98 	.word	0x9002cb98
90005400:	90004cbd 	.word	0x90004cbd
90005404:	240091e4 	.word	0x240091e4

90005408 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
90005408:	4b03      	ldr	r3, [pc, #12]	; (90005418 <HAL_TIM_PeriodElapsedCallback+0x10>)
9000540a:	6802      	ldr	r2, [r0, #0]
9000540c:	429a      	cmp	r2, r3
9000540e:	d000      	beq.n	90005412 <HAL_TIM_PeriodElapsedCallback+0xa>
    HAL_IncTick();
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
90005410:	4770      	bx	lr
    HAL_IncTick();
90005412:	f004 be3d 	b.w	9000a090 <HAL_IncTick>
90005416:	bf00      	nop
90005418:	40001000 	.word	0x40001000

9000541c <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
9000541c:	4770      	bx	lr
9000541e:	bf00      	nop

90005420 <HAL_MspInit>:
{
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
90005420:	4b0b      	ldr	r3, [pc, #44]	; (90005450 <HAL_MspInit+0x30>)

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
90005422:	2200      	movs	r2, #0
90005424:	210f      	movs	r1, #15
90005426:	f06f 0001 	mvn.w	r0, #1
{
9000542a:	b410      	push	{r4}
  __HAL_RCC_SYSCFG_CLK_ENABLE();
9000542c:	f8d3 40f4 	ldr.w	r4, [r3, #244]	; 0xf4
{
90005430:	b083      	sub	sp, #12
  __HAL_RCC_SYSCFG_CLK_ENABLE();
90005432:	f044 0402 	orr.w	r4, r4, #2
90005436:	f8c3 40f4 	str.w	r4, [r3, #244]	; 0xf4
9000543a:	f8d3 30f4 	ldr.w	r3, [r3, #244]	; 0xf4
9000543e:	f003 0302 	and.w	r3, r3, #2
90005442:	9301      	str	r3, [sp, #4]
90005444:	9b01      	ldr	r3, [sp, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
90005446:	b003      	add	sp, #12
90005448:	f85d 4b04 	ldr.w	r4, [sp], #4
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
9000544c:	f004 be4a 	b.w	9000a0e4 <HAL_NVIC_SetPriority>
90005450:	58024400 	.word	0x58024400

90005454 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
90005454:	4b0a      	ldr	r3, [pc, #40]	; (90005480 <HAL_CRC_MspInit+0x2c>)
90005456:	6802      	ldr	r2, [r0, #0]
90005458:	429a      	cmp	r2, r3
9000545a:	d000      	beq.n	9000545e <HAL_CRC_MspInit+0xa>
9000545c:	4770      	bx	lr
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
9000545e:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
{
90005462:	b082      	sub	sp, #8
    __HAL_RCC_CRC_CLK_ENABLE();
90005464:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90005468:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
9000546c:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
90005470:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
90005474:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
90005478:	9301      	str	r3, [sp, #4]
9000547a:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
9000547c:	b002      	add	sp, #8
9000547e:	4770      	bx	lr
90005480:	58024c00 	.word	0x58024c00

90005484 <HAL_DMA2D_MspInit>:
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
  if(hdma2d->Instance==DMA2D)
90005484:	4b0f      	ldr	r3, [pc, #60]	; (900054c4 <HAL_DMA2D_MspInit+0x40>)
90005486:	6802      	ldr	r2, [r0, #0]
90005488:	429a      	cmp	r2, r3
9000548a:	d000      	beq.n	9000548e <HAL_DMA2D_MspInit+0xa>
9000548c:	4770      	bx	lr
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
9000548e:	4b0e      	ldr	r3, [pc, #56]	; (900054c8 <HAL_DMA2D_MspInit+0x44>)
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
90005490:	205a      	movs	r0, #90	; 0x5a
90005492:	2200      	movs	r2, #0
90005494:	2105      	movs	r1, #5
{
90005496:	b510      	push	{r4, lr}
    __HAL_RCC_DMA2D_CLK_ENABLE();
90005498:	f8d3 40d4 	ldr.w	r4, [r3, #212]	; 0xd4
{
9000549c:	b082      	sub	sp, #8
    __HAL_RCC_DMA2D_CLK_ENABLE();
9000549e:	f044 0410 	orr.w	r4, r4, #16
900054a2:	f8c3 40d4 	str.w	r4, [r3, #212]	; 0xd4
900054a6:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
900054aa:	f003 0310 	and.w	r3, r3, #16
900054ae:	9301      	str	r3, [sp, #4]
900054b0:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
900054b2:	f004 fe17 	bl	9000a0e4 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
900054b6:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
900054b8:	b002      	add	sp, #8
900054ba:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
900054be:	f004 be4f 	b.w	9000a160 <HAL_NVIC_EnableIRQ>
900054c2:	bf00      	nop
900054c4:	52001000 	.word	0x52001000
900054c8:	58024400 	.word	0x58024400

900054cc <HAL_JPEG_MspInit>:
* @param hjpeg: JPEG handle pointer
* @retval None
*/
void HAL_JPEG_MspInit(JPEG_HandleTypeDef* hjpeg)
{
  if(hjpeg->Instance==JPEG)
900054cc:	4b3f      	ldr	r3, [pc, #252]	; (900055cc <HAL_JPEG_MspInit+0x100>)
900054ce:	6802      	ldr	r2, [r0, #0]
900054d0:	429a      	cmp	r2, r3
900054d2:	d000      	beq.n	900054d6 <HAL_JPEG_MspInit+0xa>
900054d4:	4770      	bx	lr
{
900054d6:	b570      	push	{r4, r5, r6, lr}
  /* USER CODE BEGIN JPEG_MspInit 0 */
	 hmdma_jpeg_infifo_th.Init.Request = MDMA_REQUEST_JPEG_INFIFO_TH;
	 hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
  /* USER CODE END JPEG_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_JPEG_CLK_ENABLE();
900054d8:	4b3d      	ldr	r3, [pc, #244]	; (900055d0 <HAL_JPEG_MspInit+0x104>)
	 hmdma_jpeg_infifo_th.Init.Request = MDMA_REQUEST_JPEG_INFIFO_TH;
900054da:	2211      	movs	r2, #17
900054dc:	4e3d      	ldr	r6, [pc, #244]	; (900055d4 <HAL_JPEG_MspInit+0x108>)
{
900054de:	b082      	sub	sp, #8
	 hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
900054e0:	4d3d      	ldr	r5, [pc, #244]	; (900055d8 <HAL_JPEG_MspInit+0x10c>)
900054e2:	4604      	mov	r4, r0
	 hmdma_jpeg_infifo_th.Init.Request = MDMA_REQUEST_JPEG_INFIFO_TH;
900054e4:	6072      	str	r2, [r6, #4]
    hmdma_jpeg_infifo_th.Init.BufferTransferLength = 32;
    hmdma_jpeg_infifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
    hmdma_jpeg_infifo_th.Init.DestBurst = MDMA_DEST_BURST_16BEATS;
    hmdma_jpeg_infifo_th.Init.SourceBlockAddressOffset = 0;
    hmdma_jpeg_infifo_th.Init.DestBlockAddressOffset = 0;
    if (HAL_MDMA_Init(&hmdma_jpeg_infifo_th) != HAL_OK)
900054e6:	4630      	mov	r0, r6
    __HAL_RCC_JPEG_CLK_ENABLE();
900054e8:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
    hmdma_jpeg_infifo_th.Instance = MDMA_Channel7;
900054ec:	493b      	ldr	r1, [pc, #236]	; (900055dc <HAL_JPEG_MspInit+0x110>)
    __HAL_RCC_JPEG_CLK_ENABLE();
900054ee:	f042 0220 	orr.w	r2, r2, #32
900054f2:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
    hmdma_jpeg_infifo_th.Init.Priority = MDMA_PRIORITY_HIGH;
900054f6:	2280      	movs	r2, #128	; 0x80
    __HAL_RCC_JPEG_CLK_ENABLE();
900054f8:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
    hmdma_jpeg_infifo_th.Init.DestDataSize = MDMA_DEST_DATASIZE_WORD;
900054fc:	6232      	str	r2, [r6, #32]
    __HAL_RCC_JPEG_CLK_ENABLE();
900054fe:	f003 0320 	and.w	r3, r3, #32
    hmdma_jpeg_infifo_th.Instance = MDMA_Channel7;
90005502:	6031      	str	r1, [r6, #0]
    __HAL_RCC_JPEG_CLK_ENABLE();
90005504:	9301      	str	r3, [sp, #4]
    hmdma_jpeg_infifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
90005506:	2300      	movs	r3, #0
    __HAL_RCC_JPEG_CLK_ENABLE();
90005508:	9901      	ldr	r1, [sp, #4]
    hmdma_jpeg_infifo_th.Init.Endianness = MDMA_LITTLE_ENDIANNESS_PRESERVE;
9000550a:	6133      	str	r3, [r6, #16]
    hmdma_jpeg_infifo_th.Init.Priority = MDMA_PRIORITY_HIGH;
9000550c:	e9c6 3202 	strd	r3, r2, [r6, #8]
    hmdma_jpeg_infifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
90005510:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
90005514:	6272      	str	r2, [r6, #36]	; 0x24
    hmdma_jpeg_infifo_th.Init.BufferTransferLength = 32;
90005516:	2220      	movs	r2, #32
    hmdma_jpeg_infifo_th.Init.SourceDataSize = MDMA_SRC_DATASIZE_BYTE;
90005518:	e9c6 3306 	strd	r3, r3, [r6, #24]
    hmdma_jpeg_infifo_th.Init.DestBlockAddressOffset = 0;
9000551c:	e9c6 330d 	strd	r3, r3, [r6, #52]	; 0x34
    hmdma_jpeg_infifo_th.Init.BufferTransferLength = 32;
90005520:	62b2      	str	r2, [r6, #40]	; 0x28
    hmdma_jpeg_infifo_th.Init.DestBurst = MDMA_DEST_BURST_16BEATS;
90005522:	f44f 3300 	mov.w	r3, #131072	; 0x20000
90005526:	f44f 42a0 	mov.w	r2, #20480	; 0x5000
9000552a:	e9c6 230b 	strd	r2, r3, [r6, #44]	; 0x2c
	 hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
9000552e:	2313      	movs	r3, #19
90005530:	606b      	str	r3, [r5, #4]
    hmdma_jpeg_infifo_th.Init.SourceInc = MDMA_SRC_INC_BYTE;
90005532:	2302      	movs	r3, #2
90005534:	6173      	str	r3, [r6, #20]
    if (HAL_MDMA_Init(&hmdma_jpeg_infifo_th) != HAL_OK)
90005536:	f007 fc2f 	bl	9000cd98 <HAL_MDMA_Init>
9000553a:	2800      	cmp	r0, #0
9000553c:	d13a      	bne.n	900055b4 <HAL_JPEG_MspInit+0xe8>
    {
      Error_Handler();
    }

    if (HAL_MDMA_ConfigPostRequestMask(&hmdma_jpeg_infifo_th, 0, 0) != HAL_OK)
9000553e:	2200      	movs	r2, #0
90005540:	4824      	ldr	r0, [pc, #144]	; (900055d4 <HAL_JPEG_MspInit+0x108>)
90005542:	4611      	mov	r1, r2
90005544:	f007 fcc6 	bl	9000ced4 <HAL_MDMA_ConfigPostRequestMask>
90005548:	2800      	cmp	r0, #0
9000554a:	d13c      	bne.n	900055c6 <HAL_JPEG_MspInit+0xfa>
    hmdma_jpeg_outfifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
    hmdma_jpeg_outfifo_th.Init.Priority = MDMA_PRIORITY_VERY_HIGH;
    hmdma_jpeg_outfifo_th.Init.Endianness = MDMA_LITTLE_ENDIANNESS_PRESERVE;
    hmdma_jpeg_outfifo_th.Init.SourceInc = MDMA_SRC_INC_DISABLE;
    hmdma_jpeg_outfifo_th.Init.DestinationInc = MDMA_DEST_INC_BYTE;
    hmdma_jpeg_outfifo_th.Init.SourceDataSize = MDMA_SRC_DATASIZE_WORD;
9000554c:	2220      	movs	r2, #32
    hmdma_jpeg_outfifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
9000554e:	2300      	movs	r3, #0
    __HAL_LINKDMA(hjpeg,hdmain,hmdma_jpeg_infifo_th);
90005550:	6326      	str	r6, [r4, #48]	; 0x30
    hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
90005552:	2013      	movs	r0, #19
    hmdma_jpeg_outfifo_th.Init.SourceDataSize = MDMA_SRC_DATASIZE_WORD;
90005554:	61ea      	str	r2, [r5, #28]
    hmdma_jpeg_outfifo_th.Init.DestDataSize = MDMA_DEST_DATASIZE_BYTE;
    hmdma_jpeg_outfifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
    hmdma_jpeg_outfifo_th.Init.BufferTransferLength = 32;
90005556:	62aa      	str	r2, [r5, #40]	; 0x28
    hmdma_jpeg_outfifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
    hmdma_jpeg_outfifo_th.Init.DestBurst = MDMA_DEST_BURST_32BEATS;
90005558:	f44f 3220 	mov.w	r2, #163840	; 0x28000
    hmdma_jpeg_outfifo_th.Instance = MDMA_Channel6;
9000555c:	4920      	ldr	r1, [pc, #128]	; (900055e0 <HAL_JPEG_MspInit+0x114>)
    hmdma_jpeg_outfifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
9000555e:	60ab      	str	r3, [r5, #8]
    hmdma_jpeg_outfifo_th.Init.DestDataSize = MDMA_DEST_DATASIZE_BYTE;
90005560:	622b      	str	r3, [r5, #32]
    hmdma_jpeg_outfifo_th.Init.SourceBlockAddressOffset = 0;
    hmdma_jpeg_outfifo_th.Init.DestBlockAddressOffset = 0;
90005562:	63ab      	str	r3, [r5, #56]	; 0x38
    __HAL_LINKDMA(hjpeg,hdmain,hmdma_jpeg_infifo_th);
90005564:	6434      	str	r4, [r6, #64]	; 0x40
    hmdma_jpeg_outfifo_th.Init.DestBurst = MDMA_DEST_BURST_32BEATS;
90005566:	e9c5 230c 	strd	r2, r3, [r5, #48]	; 0x30
    hmdma_jpeg_outfifo_th.Init.SourceInc = MDMA_SRC_INC_DISABLE;
9000556a:	e9c5 3304 	strd	r3, r3, [r5, #16]
    hmdma_jpeg_outfifo_th.Init.DestinationInc = MDMA_DEST_INC_BYTE;
9000556e:	2308      	movs	r3, #8
    hmdma_jpeg_outfifo_th.Init.Priority = MDMA_PRIORITY_VERY_HIGH;
90005570:	22c0      	movs	r2, #192	; 0xc0
    hmdma_jpeg_outfifo_th.Instance = MDMA_Channel6;
90005572:	e9c5 1000 	strd	r1, r0, [r5]
    hmdma_jpeg_outfifo_th.Init.DestinationInc = MDMA_DEST_INC_BYTE;
90005576:	61ab      	str	r3, [r5, #24]
    hmdma_jpeg_outfifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
90005578:	f44f 41a0 	mov.w	r1, #20480	; 0x5000
    hmdma_jpeg_outfifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
9000557c:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
    if (HAL_MDMA_Init(&hmdma_jpeg_outfifo_th) != HAL_OK)
90005580:	4815      	ldr	r0, [pc, #84]	; (900055d8 <HAL_JPEG_MspInit+0x10c>)
    hmdma_jpeg_outfifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
90005582:	62e9      	str	r1, [r5, #44]	; 0x2c
    hmdma_jpeg_outfifo_th.Init.Priority = MDMA_PRIORITY_VERY_HIGH;
90005584:	60ea      	str	r2, [r5, #12]
    hmdma_jpeg_outfifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
90005586:	626b      	str	r3, [r5, #36]	; 0x24
    if (HAL_MDMA_Init(&hmdma_jpeg_outfifo_th) != HAL_OK)
90005588:	f007 fc06 	bl	9000cd98 <HAL_MDMA_Init>
9000558c:	b9c0      	cbnz	r0, 900055c0 <HAL_JPEG_MspInit+0xf4>
    {
      Error_Handler();
    }

    if (HAL_MDMA_ConfigPostRequestMask(&hmdma_jpeg_outfifo_th, 0, 0) != HAL_OK)
9000558e:	2200      	movs	r2, #0
90005590:	4811      	ldr	r0, [pc, #68]	; (900055d8 <HAL_JPEG_MspInit+0x10c>)
90005592:	4611      	mov	r1, r2
90005594:	f007 fc9e 	bl	9000ced4 <HAL_MDMA_ConfigPostRequestMask>
90005598:	b978      	cbnz	r0, 900055ba <HAL_JPEG_MspInit+0xee>
    {
      Error_Handler();
    }

    __HAL_LINKDMA(hjpeg,hdmaout,hmdma_jpeg_outfifo_th);
9000559a:	6365      	str	r5, [r4, #52]	; 0x34

    /* JPEG interrupt Init */
    HAL_NVIC_SetPriority(JPEG_IRQn, 5, 0);
9000559c:	2079      	movs	r0, #121	; 0x79
9000559e:	2200      	movs	r2, #0
900055a0:	2105      	movs	r1, #5
    __HAL_LINKDMA(hjpeg,hdmaout,hmdma_jpeg_outfifo_th);
900055a2:	642c      	str	r4, [r5, #64]	; 0x40
    HAL_NVIC_SetPriority(JPEG_IRQn, 5, 0);
900055a4:	f004 fd9e 	bl	9000a0e4 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(JPEG_IRQn);
900055a8:	2079      	movs	r0, #121	; 0x79
  /* USER CODE BEGIN JPEG_MspInit 1 */

  /* USER CODE END JPEG_MspInit 1 */
  }

}
900055aa:	b002      	add	sp, #8
900055ac:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    HAL_NVIC_EnableIRQ(JPEG_IRQn);
900055b0:	f004 bdd6 	b.w	9000a160 <HAL_NVIC_EnableIRQ>
      Error_Handler();
900055b4:	f7ff ff32 	bl	9000541c <Error_Handler>
900055b8:	e7c1      	b.n	9000553e <HAL_JPEG_MspInit+0x72>
      Error_Handler();
900055ba:	f7ff ff2f 	bl	9000541c <Error_Handler>
900055be:	e7ec      	b.n	9000559a <HAL_JPEG_MspInit+0xce>
      Error_Handler();
900055c0:	f7ff ff2c 	bl	9000541c <Error_Handler>
900055c4:	e7e3      	b.n	9000558e <HAL_JPEG_MspInit+0xc2>
      Error_Handler();
900055c6:	f7ff ff29 	bl	9000541c <Error_Handler>
900055ca:	e7bf      	b.n	9000554c <HAL_JPEG_MspInit+0x80>
900055cc:	52003000 	.word	0x52003000
900055d0:	58024400 	.word	0x58024400
900055d4:	24009384 	.word	0x24009384
900055d8:	240093f0 	.word	0x240093f0
900055dc:	52000200 	.word	0x52000200
900055e0:	520001c0 	.word	0x520001c0

900055e4 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
900055e4:	b570      	push	{r4, r5, r6, lr}
900055e6:	b0ba      	sub	sp, #232	; 0xe8
  GPIO_InitTypeDef GPIO_InitStruct = {0};
900055e8:	2100      	movs	r1, #0
{
900055ea:	4604      	mov	r4, r0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
900055ec:	22c0      	movs	r2, #192	; 0xc0
900055ee:	a80a      	add	r0, sp, #40	; 0x28
  GPIO_InitTypeDef GPIO_InitStruct = {0};
900055f0:	9109      	str	r1, [sp, #36]	; 0x24
900055f2:	e9cd 1105 	strd	r1, r1, [sp, #20]
900055f6:	e9cd 1107 	strd	r1, r1, [sp, #28]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
900055fa:	f024 fe37 	bl	9002a26c <memset>
  if(hltdc->Instance==LTDC)
900055fe:	4b4a      	ldr	r3, [pc, #296]	; (90005728 <HAL_LTDC_MspInit+0x144>)
90005600:	6822      	ldr	r2, [r4, #0]
90005602:	429a      	cmp	r2, r3
90005604:	d001      	beq.n	9000560a <HAL_LTDC_MspInit+0x26>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
90005606:	b03a      	add	sp, #232	; 0xe8
90005608:	bd70      	pop	{r4, r5, r6, pc}
    PeriphClkInitStruct.PLL3.PLL3P = 2;
9000560a:	2302      	movs	r3, #2
    PeriphClkInitStruct.PLL3.PLL3M = 5;
9000560c:	2205      	movs	r2, #5
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
9000560e:	f04f 5400 	mov.w	r4, #536870912	; 0x20000000
90005612:	2500      	movs	r5, #0
    PeriphClkInitStruct.PLL3.PLL3N = 160;
90005614:	21a0      	movs	r1, #160	; 0xa0
    PeriphClkInitStruct.PLL3.PLL3P = 2;
90005616:	9316      	str	r3, [sp, #88]	; 0x58
    PeriphClkInitStruct.PLL3.PLL3M = 5;
90005618:	9214      	str	r2, [sp, #80]	; 0x50
    PeriphClkInitStruct.PLL3.PLL3R = 83;
9000561a:	2253      	movs	r2, #83	; 0x53
    PeriphClkInitStruct.PLL3.PLL3Q = 2;
9000561c:	9317      	str	r3, [sp, #92]	; 0x5c
    PeriphClkInitStruct.PLL3.PLL3R = 83;
9000561e:	f44f 6300 	mov.w	r3, #2048	; 0x800
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
90005622:	a80a      	add	r0, sp, #40	; 0x28
    PeriphClkInitStruct.PLL3.PLL3N = 160;
90005624:	9115      	str	r1, [sp, #84]	; 0x54
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
90005626:	e9cd 450a 	strd	r4, r5, [sp, #40]	; 0x28
    PeriphClkInitStruct.PLL3.PLL3R = 83;
9000562a:	e9cd 2318 	strd	r2, r3, [sp, #96]	; 0x60
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
9000562e:	f008 fd23 	bl	9000e078 <HAL_RCCEx_PeriphCLKConfig>
90005632:	2800      	cmp	r0, #0
90005634:	d174      	bne.n	90005720 <HAL_LTDC_MspInit+0x13c>
    __HAL_RCC_LTDC_CLK_ENABLE();
90005636:	4b3d      	ldr	r3, [pc, #244]	; (9000572c <HAL_LTDC_MspInit+0x148>)
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
90005638:	2402      	movs	r4, #2
    GPIO_InitStruct.Pull = GPIO_NOPULL;
9000563a:	2500      	movs	r5, #0
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
9000563c:	260e      	movs	r6, #14
    __HAL_RCC_LTDC_CLK_ENABLE();
9000563e:	f8d3 20e4 	ldr.w	r2, [r3, #228]	; 0xe4
    HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
90005642:	a905      	add	r1, sp, #20
90005644:	483a      	ldr	r0, [pc, #232]	; (90005730 <HAL_LTDC_MspInit+0x14c>)
    __HAL_RCC_LTDC_CLK_ENABLE();
90005646:	f042 0208 	orr.w	r2, r2, #8
9000564a:	f8c3 20e4 	str.w	r2, [r3, #228]	; 0xe4
9000564e:	f8d3 20e4 	ldr.w	r2, [r3, #228]	; 0xe4
90005652:	f002 0208 	and.w	r2, r2, #8
90005656:	9200      	str	r2, [sp, #0]
90005658:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOK_CLK_ENABLE();
9000565a:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
9000565e:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
90005662:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
90005666:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
9000566a:	f402 6280 	and.w	r2, r2, #1024	; 0x400
9000566e:	9201      	str	r2, [sp, #4]
90005670:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOI_CLK_ENABLE();
90005672:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90005676:	f442 7280 	orr.w	r2, r2, #256	; 0x100
9000567a:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
9000567e:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90005682:	f402 7280 	and.w	r2, r2, #256	; 0x100
90005686:	9202      	str	r2, [sp, #8]
90005688:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOJ_CLK_ENABLE();
9000568a:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
9000568e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
90005692:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
90005696:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
9000569a:	f402 7200 	and.w	r2, r2, #512	; 0x200
9000569e:	9203      	str	r2, [sp, #12]
900056a0:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOH_CLK_ENABLE();
900056a2:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
900056a6:	f042 0280 	orr.w	r2, r2, #128	; 0x80
900056aa:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
900056ae:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
900056b2:	9408      	str	r4, [sp, #32]
    __HAL_RCC_GPIOH_CLK_ENABLE();
900056b4:	f003 0380 	and.w	r3, r3, #128	; 0x80
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
900056b8:	9609      	str	r6, [sp, #36]	; 0x24
    __HAL_RCC_GPIOH_CLK_ENABLE();
900056ba:	9304      	str	r3, [sp, #16]
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_3
900056bc:	23fc      	movs	r3, #252	; 0xfc
    __HAL_RCC_GPIOH_CLK_ENABLE();
900056be:	9a04      	ldr	r2, [sp, #16]
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_3
900056c0:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
900056c2:	e9cd 4506 	strd	r4, r5, [sp, #24]
    HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
900056c6:	f004 ff79 	bl	9000a5bc <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_9|GPIO_PIN_12
900056ca:	f24d 2303 	movw	r3, #53763	; 0xd203
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
900056ce:	a905      	add	r1, sp, #20
900056d0:	4818      	ldr	r0, [pc, #96]	; (90005734 <HAL_LTDC_MspInit+0x150>)
    GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_9|GPIO_PIN_12
900056d2:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
900056d4:	e9cd 4506 	strd	r4, r5, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
900056d8:	e9cd 4608 	strd	r4, r6, [sp, #32]
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
900056dc:	f004 ff6e 	bl	9000a5bc <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_14|GPIO_PIN_12|GPIO_PIN_13
900056e0:	f64f 73fb 	movw	r3, #65531	; 0xfffb
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
900056e4:	a905      	add	r1, sp, #20
900056e6:	4814      	ldr	r0, [pc, #80]	; (90005738 <HAL_LTDC_MspInit+0x154>)
    GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_14|GPIO_PIN_12|GPIO_PIN_13
900056e8:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
900056ea:	e9cd 4506 	strd	r4, r5, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
900056ee:	e9cd 4608 	strd	r4, r6, [sp, #32]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
900056f2:	f004 ff63 	bl	9000a5bc <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_9;
900056f6:	f44f 7300 	mov.w	r3, #512	; 0x200
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
900056fa:	a905      	add	r1, sp, #20
900056fc:	480f      	ldr	r0, [pc, #60]	; (9000573c <HAL_LTDC_MspInit+0x158>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
900056fe:	9609      	str	r6, [sp, #36]	; 0x24
    GPIO_InitStruct.Pin = GPIO_PIN_9;
90005700:	e9cd 3405 	strd	r3, r4, [sp, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
90005704:	e9cd 5407 	strd	r5, r4, [sp, #28]
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
90005708:	f004 ff58 	bl	9000a5bc <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
9000570c:	462a      	mov	r2, r5
9000570e:	2105      	movs	r1, #5
90005710:	2058      	movs	r0, #88	; 0x58
90005712:	f004 fce7 	bl	9000a0e4 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
90005716:	2058      	movs	r0, #88	; 0x58
90005718:	f004 fd22 	bl	9000a160 <HAL_NVIC_EnableIRQ>
}
9000571c:	b03a      	add	sp, #232	; 0xe8
9000571e:	bd70      	pop	{r4, r5, r6, pc}
      Error_Handler();
90005720:	f7ff fe7c 	bl	9000541c <Error_Handler>
90005724:	e787      	b.n	90005636 <HAL_LTDC_MspInit+0x52>
90005726:	bf00      	nop
90005728:	50001000 	.word	0x50001000
9000572c:	58024400 	.word	0x58024400
90005730:	58022800 	.word	0x58022800
90005734:	58022000 	.word	0x58022000
90005738:	58022400 	.word	0x58022400
9000573c:	58021c00 	.word	0x58021c00

90005740 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
90005740:	b5d0      	push	{r4, r6, r7, lr}
90005742:	b0ba      	sub	sp, #232	; 0xe8
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90005744:	2100      	movs	r1, #0
{
90005746:	4604      	mov	r4, r0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
90005748:	22c0      	movs	r2, #192	; 0xc0
9000574a:	a80a      	add	r0, sp, #40	; 0x28
  GPIO_InitTypeDef GPIO_InitStruct = {0};
9000574c:	9108      	str	r1, [sp, #32]
9000574e:	e9cd 1104 	strd	r1, r1, [sp, #16]
90005752:	e9cd 1106 	strd	r1, r1, [sp, #24]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
90005756:	f024 fd89 	bl	9002a26c <memset>
  if(hspi->Instance==SPI2)
9000575a:	4b35      	ldr	r3, [pc, #212]	; (90005830 <HAL_SPI_MspInit+0xf0>)
9000575c:	6822      	ldr	r2, [r4, #0]
9000575e:	429a      	cmp	r2, r3
90005760:	d001      	beq.n	90005766 <HAL_SPI_MspInit+0x26>
  /* USER CODE BEGIN SPI2_MspInit 1 */

  /* USER CODE END SPI2_MspInit 1 */
  }

}
90005762:	b03a      	add	sp, #232	; 0xe8
90005764:	bdd0      	pop	{r4, r6, r7, pc}
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_SPI2;
90005766:	f44f 5280 	mov.w	r2, #4096	; 0x1000
9000576a:	2300      	movs	r3, #0
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
9000576c:	a80a      	add	r0, sp, #40	; 0x28
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_SPI2;
9000576e:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
90005772:	f008 fc81 	bl	9000e078 <HAL_RCCEx_PeriphCLKConfig>
90005776:	2800      	cmp	r0, #0
90005778:	d157      	bne.n	9000582a <HAL_SPI_MspInit+0xea>
    __HAL_RCC_SPI2_CLK_ENABLE();
9000577a:	4b2e      	ldr	r3, [pc, #184]	; (90005834 <HAL_SPI_MspInit+0xf4>)
    GPIO_InitStruct.Pin = GPIO_PIN_3;
9000577c:	2008      	movs	r0, #8
9000577e:	2102      	movs	r1, #2
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
90005780:	2405      	movs	r4, #5
    __HAL_RCC_SPI2_CLK_ENABLE();
90005782:	f8d3 20e8 	ldr.w	r2, [r3, #232]	; 0xe8
    GPIO_InitStruct.Pin = GPIO_PIN_3;
90005786:	2600      	movs	r6, #0
90005788:	2700      	movs	r7, #0
    __HAL_RCC_SPI2_CLK_ENABLE();
9000578a:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
9000578e:	f8c3 20e8 	str.w	r2, [r3, #232]	; 0xe8
90005792:	f8d3 20e8 	ldr.w	r2, [r3, #232]	; 0xe8
90005796:	f402 4280 	and.w	r2, r2, #16384	; 0x4000
9000579a:	9200      	str	r2, [sp, #0]
9000579c:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOD_CLK_ENABLE();
9000579e:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
900057a2:	f042 0208 	orr.w	r2, r2, #8
900057a6:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
900057aa:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
900057ae:	f002 0208 	and.w	r2, r2, #8
900057b2:	9201      	str	r2, [sp, #4]
900057b4:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOI_CLK_ENABLE();
900057b6:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
900057ba:	f442 7280 	orr.w	r2, r2, #256	; 0x100
900057be:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
900057c2:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
900057c6:	f402 7280 	and.w	r2, r2, #256	; 0x100
900057ca:	9202      	str	r2, [sp, #8]
900057cc:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOB_CLK_ENABLE();
900057ce:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
900057d2:	f042 0202 	orr.w	r2, r2, #2
900057d6:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
900057da:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
900057de:	9408      	str	r4, [sp, #32]
    __HAL_RCC_GPIOB_CLK_ENABLE();
900057e0:	f003 0302 	and.w	r3, r3, #2
    GPIO_InitStruct.Pin = GPIO_PIN_3;
900057e4:	e9cd 0104 	strd	r0, r1, [sp, #16]
    __HAL_RCC_GPIOB_CLK_ENABLE();
900057e8:	9303      	str	r3, [sp, #12]
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
900057ea:	a904      	add	r1, sp, #16
900057ec:	4812      	ldr	r0, [pc, #72]	; (90005838 <HAL_SPI_MspInit+0xf8>)
    __HAL_RCC_GPIOB_CLK_ENABLE();
900057ee:	9b03      	ldr	r3, [sp, #12]
    GPIO_InitStruct.Pin = GPIO_PIN_3;
900057f0:	e9cd 6706 	strd	r6, r7, [sp, #24]
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
900057f4:	f004 fee2 	bl	9000a5bc <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_2;
900057f8:	2204      	movs	r2, #4
900057fa:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
900057fc:	a904      	add	r1, sp, #16
900057fe:	480f      	ldr	r0, [pc, #60]	; (9000583c <HAL_SPI_MspInit+0xfc>)
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
90005800:	9408      	str	r4, [sp, #32]
    GPIO_InitStruct.Pin = GPIO_PIN_2;
90005802:	e9cd 2304 	strd	r2, r3, [sp, #16]
90005806:	e9cd 6706 	strd	r6, r7, [sp, #24]
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
9000580a:	f004 fed7 	bl	9000a5bc <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_15;
9000580e:	f44f 4200 	mov.w	r2, #32768	; 0x8000
90005812:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
90005814:	a904      	add	r1, sp, #16
90005816:	480a      	ldr	r0, [pc, #40]	; (90005840 <HAL_SPI_MspInit+0x100>)
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
90005818:	9408      	str	r4, [sp, #32]
    GPIO_InitStruct.Pin = GPIO_PIN_15;
9000581a:	e9cd 6706 	strd	r6, r7, [sp, #24]
9000581e:	e9cd 2304 	strd	r2, r3, [sp, #16]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
90005822:	f004 fecb 	bl	9000a5bc <HAL_GPIO_Init>
}
90005826:	b03a      	add	sp, #232	; 0xe8
90005828:	bdd0      	pop	{r4, r6, r7, pc}
      Error_Handler();
9000582a:	f7ff fdf7 	bl	9000541c <Error_Handler>
9000582e:	e7a4      	b.n	9000577a <HAL_SPI_MspInit+0x3a>
90005830:	40003800 	.word	0x40003800
90005834:	58024400 	.word	0x58024400
90005838:	58020c00 	.word	0x58020c00
9000583c:	58022000 	.word	0x58022000
90005840:	58020400 	.word	0x58020400
90005844:	00000000 	.word	0x00000000

90005848 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
90005848:	b510      	push	{r4, lr}
9000584a:	b0b8      	sub	sp, #224	; 0xe0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
9000584c:	2100      	movs	r1, #0
{
9000584e:	4604      	mov	r4, r0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
90005850:	22c0      	movs	r2, #192	; 0xc0
90005852:	a808      	add	r0, sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90005854:	9106      	str	r1, [sp, #24]
90005856:	e9cd 1102 	strd	r1, r1, [sp, #8]
9000585a:	e9cd 1104 	strd	r1, r1, [sp, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
9000585e:	f024 fd05 	bl	9002a26c <memset>
  if(huart->Instance==USART3)
90005862:	4b21      	ldr	r3, [pc, #132]	; (900058e8 <HAL_UART_MspInit+0xa0>)
90005864:	6822      	ldr	r2, [r4, #0]
90005866:	429a      	cmp	r2, r3
90005868:	d001      	beq.n	9000586e <HAL_UART_MspInit+0x26>
  /* USER CODE BEGIN USART3_MspInit 1 */

  /* USER CODE END USART3_MspInit 1 */
  }

}
9000586a:	b038      	add	sp, #224	; 0xe0
9000586c:	bd10      	pop	{r4, pc}
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_USART3;
9000586e:	2202      	movs	r2, #2
90005870:	2300      	movs	r3, #0
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
90005872:	a808      	add	r0, sp, #32
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_USART3;
90005874:	e9cd 2308 	strd	r2, r3, [sp, #32]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
90005878:	f008 fbfe 	bl	9000e078 <HAL_RCCEx_PeriphCLKConfig>
9000587c:	bb40      	cbnz	r0, 900058d0 <HAL_UART_MspInit+0x88>
    __HAL_RCC_USART3_CLK_ENABLE();
9000587e:	4b1b      	ldr	r3, [pc, #108]	; (900058ec <HAL_UART_MspInit+0xa4>)
    GPIO_InitStruct.Alternate = GPIO_AF7_USART3;
90005880:	2407      	movs	r4, #7
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
90005882:	a902      	add	r1, sp, #8
90005884:	481a      	ldr	r0, [pc, #104]	; (900058f0 <HAL_UART_MspInit+0xa8>)
    __HAL_RCC_USART3_CLK_ENABLE();
90005886:	f8d3 20e8 	ldr.w	r2, [r3, #232]	; 0xe8
9000588a:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
9000588e:	f8c3 20e8 	str.w	r2, [r3, #232]	; 0xe8
90005892:	f8d3 20e8 	ldr.w	r2, [r3, #232]	; 0xe8
90005896:	f402 2280 	and.w	r2, r2, #262144	; 0x40000
9000589a:	9200      	str	r2, [sp, #0]
9000589c:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOB_CLK_ENABLE();
9000589e:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
900058a2:	f042 0202 	orr.w	r2, r2, #2
900058a6:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
900058aa:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
    GPIO_InitStruct.Alternate = GPIO_AF7_USART3;
900058ae:	9406      	str	r4, [sp, #24]
    __HAL_RCC_GPIOB_CLK_ENABLE();
900058b0:	f003 0302 	and.w	r3, r3, #2
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11;
900058b4:	ed9f 7b08 	vldr	d7, [pc, #32]	; 900058d8 <HAL_UART_MspInit+0x90>
    __HAL_RCC_GPIOB_CLK_ENABLE();
900058b8:	9301      	str	r3, [sp, #4]
900058ba:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11;
900058bc:	ed8d 7b02 	vstr	d7, [sp, #8]
900058c0:	ed9f 7b07 	vldr	d7, [pc, #28]	; 900058e0 <HAL_UART_MspInit+0x98>
900058c4:	ed8d 7b04 	vstr	d7, [sp, #16]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
900058c8:	f004 fe78 	bl	9000a5bc <HAL_GPIO_Init>
}
900058cc:	b038      	add	sp, #224	; 0xe0
900058ce:	bd10      	pop	{r4, pc}
      Error_Handler();
900058d0:	f7ff fda4 	bl	9000541c <Error_Handler>
900058d4:	e7d3      	b.n	9000587e <HAL_UART_MspInit+0x36>
900058d6:	bf00      	nop
900058d8:	00000c00 	.word	0x00000c00
900058dc:	00000002 	.word	0x00000002
	...
900058e8:	40004800 	.word	0x40004800
900058ec:	58024400 	.word	0x58024400
900058f0:	58020400 	.word	0x58020400

900058f4 <HAL_SDRAM_MspInit>:
static void HAL_FMC_MspInit(void){
  /* USER CODE BEGIN FMC_MspInit 0 */

  /* USER CODE END FMC_MspInit 0 */
  GPIO_InitTypeDef GPIO_InitStruct ={0};
  if (FMC_Initialized) {
900058f4:	4836      	ldr	r0, [pc, #216]	; (900059d0 <HAL_SDRAM_MspInit+0xdc>)
  GPIO_InitTypeDef GPIO_InitStruct ={0};
900058f6:	2300      	movs	r3, #0
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
900058f8:	b5d0      	push	{r4, r6, r7, lr}
  if (FMC_Initialized) {
900058fa:	6801      	ldr	r1, [r0, #0]
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
900058fc:	b0b8      	sub	sp, #224	; 0xe0
  GPIO_InitTypeDef GPIO_InitStruct ={0};
900058fe:	e9cd 3302 	strd	r3, r3, [sp, #8]
90005902:	e9cd 3304 	strd	r3, r3, [sp, #16]
90005906:	9306      	str	r3, [sp, #24]
  if (FMC_Initialized) {
90005908:	b109      	cbz	r1, 9000590e <HAL_SDRAM_MspInit+0x1a>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
9000590a:	b038      	add	sp, #224	; 0xe0
9000590c:	bdd0      	pop	{r4, r6, r7, pc}
  FMC_Initialized = 1;
9000590e:	2301      	movs	r3, #1
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
90005910:	22b8      	movs	r2, #184	; 0xb8
  FMC_Initialized = 1;
90005912:	6003      	str	r3, [r0, #0]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
90005914:	a80a      	add	r0, sp, #40	; 0x28
90005916:	f024 fca9 	bl	9002a26c <memset>
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_FMC;
9000591a:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
9000591e:	2300      	movs	r3, #0
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
90005920:	a808      	add	r0, sp, #32
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_FMC;
90005922:	e9cd 2308 	strd	r2, r3, [sp, #32]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
90005926:	f008 fba7 	bl	9000e078 <HAL_RCCEx_PeriphCLKConfig>
9000592a:	2800      	cmp	r0, #0
9000592c:	d14c      	bne.n	900059c8 <HAL_SDRAM_MspInit+0xd4>
  __HAL_RCC_FMC_CLK_ENABLE();
9000592e:	4b29      	ldr	r3, [pc, #164]	; (900059d4 <HAL_SDRAM_MspInit+0xe0>)
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
90005930:	f64f 7083 	movw	r0, #65411	; 0xff83
90005934:	2102      	movs	r1, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
90005936:	240c      	movs	r4, #12
  __HAL_RCC_FMC_CLK_ENABLE();
90005938:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
9000593c:	2600      	movs	r6, #0
9000593e:	2703      	movs	r7, #3
  __HAL_RCC_FMC_CLK_ENABLE();
90005940:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
90005944:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
90005948:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
9000594c:	9406      	str	r4, [sp, #24]
  __HAL_RCC_FMC_CLK_ENABLE();
9000594e:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
90005952:	e9cd 0102 	strd	r0, r1, [sp, #8]
  __HAL_RCC_FMC_CLK_ENABLE();
90005956:	9301      	str	r3, [sp, #4]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
90005958:	a902      	add	r1, sp, #8
9000595a:	481f      	ldr	r0, [pc, #124]	; (900059d8 <HAL_SDRAM_MspInit+0xe4>)
  __HAL_RCC_FMC_CLK_ENABLE();
9000595c:	9b01      	ldr	r3, [sp, #4]
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
9000595e:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
90005962:	f004 fe2b 	bl	9000a5bc <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
90005966:	f248 1233 	movw	r2, #33075	; 0x8133
9000596a:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
9000596c:	a902      	add	r1, sp, #8
9000596e:	481b      	ldr	r0, [pc, #108]	; (900059dc <HAL_SDRAM_MspInit+0xe8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
90005970:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
90005972:	e9cd 2302 	strd	r2, r3, [sp, #8]
90005976:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
9000597a:	f004 fe1f 	bl	9000a5bc <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
9000597e:	f24c 7203 	movw	r2, #50947	; 0xc703
90005982:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
90005984:	a902      	add	r1, sp, #8
90005986:	4816      	ldr	r0, [pc, #88]	; (900059e0 <HAL_SDRAM_MspInit+0xec>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
90005988:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
9000598a:	e9cd 2302 	strd	r2, r3, [sp, #8]
9000598e:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
90005992:	f004 fe13 	bl	9000a5bc <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
90005996:	f64f 023f 	movw	r2, #63551	; 0xf83f
9000599a:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
9000599c:	a902      	add	r1, sp, #8
9000599e:	4811      	ldr	r0, [pc, #68]	; (900059e4 <HAL_SDRAM_MspInit+0xf0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
900059a0:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
900059a2:	e9cd 2302 	strd	r2, r3, [sp, #8]
900059a6:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
900059aa:	f004 fe07 	bl	9000a5bc <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
900059ae:	22e0      	movs	r2, #224	; 0xe0
900059b0:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
900059b2:	a902      	add	r1, sp, #8
900059b4:	480c      	ldr	r0, [pc, #48]	; (900059e8 <HAL_SDRAM_MspInit+0xf4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
900059b6:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
900059b8:	e9cd 6704 	strd	r6, r7, [sp, #16]
900059bc:	e9cd 2302 	strd	r2, r3, [sp, #8]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
900059c0:	f004 fdfc 	bl	9000a5bc <HAL_GPIO_Init>
}
900059c4:	b038      	add	sp, #224	; 0xe0
900059c6:	bdd0      	pop	{r4, r6, r7, pc}
      Error_Handler();
900059c8:	f7ff fd28 	bl	9000541c <Error_Handler>
900059cc:	e7af      	b.n	9000592e <HAL_SDRAM_MspInit+0x3a>
900059ce:	bf00      	nop
900059d0:	240095c0 	.word	0x240095c0
900059d4:	58024400 	.word	0x58024400
900059d8:	58021000 	.word	0x58021000
900059dc:	58021800 	.word	0x58021800
900059e0:	58020c00 	.word	0x58020c00
900059e4:	58021400 	.word	0x58021400
900059e8:	58021c00 	.word	0x58021c00

900059ec <HAL_SDRAM_MspDeInit>:

static void HAL_FMC_MspDeInit(void){
  /* USER CODE BEGIN FMC_MspDeInit 0 */

  /* USER CODE END FMC_MspDeInit 0 */
  if (FMC_DeInitialized) {
900059ec:	4b13      	ldr	r3, [pc, #76]	; (90005a3c <HAL_SDRAM_MspDeInit+0x50>)
900059ee:	681a      	ldr	r2, [r3, #0]
900059f0:	b102      	cbz	r2, 900059f4 <HAL_SDRAM_MspDeInit+0x8>
900059f2:	4770      	bx	lr
  /* USER CODE BEGIN FMC_MspDeInit 1 */

  /* USER CODE END FMC_MspDeInit 1 */
}

void HAL_SDRAM_MspDeInit(SDRAM_HandleTypeDef* hsdram){
900059f4:	b510      	push	{r4, lr}
  __HAL_RCC_FMC_CLK_DISABLE();
900059f6:	4a12      	ldr	r2, [pc, #72]	; (90005a40 <HAL_SDRAM_MspDeInit+0x54>)
  FMC_DeInitialized = 1;
900059f8:	2401      	movs	r4, #1
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
900059fa:	f64f 7183 	movw	r1, #65411	; 0xff83
900059fe:	4811      	ldr	r0, [pc, #68]	; (90005a44 <HAL_SDRAM_MspDeInit+0x58>)
  FMC_DeInitialized = 1;
90005a00:	601c      	str	r4, [r3, #0]
  __HAL_RCC_FMC_CLK_DISABLE();
90005a02:	f8d2 30d4 	ldr.w	r3, [r2, #212]	; 0xd4
90005a06:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
90005a0a:	f8c2 30d4 	str.w	r3, [r2, #212]	; 0xd4
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
90005a0e:	f004 ff07 	bl	9000a820 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOG, GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
90005a12:	f248 1133 	movw	r1, #33075	; 0x8133
90005a16:	480c      	ldr	r0, [pc, #48]	; (90005a48 <HAL_SDRAM_MspDeInit+0x5c>)
90005a18:	f004 ff02 	bl	9000a820 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOD, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
90005a1c:	f24c 7103 	movw	r1, #50947	; 0xc703
90005a20:	480a      	ldr	r0, [pc, #40]	; (90005a4c <HAL_SDRAM_MspDeInit+0x60>)
90005a22:	f004 fefd 	bl	9000a820 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOF, GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
90005a26:	f64f 013f 	movw	r1, #63551	; 0xf83f
90005a2a:	4809      	ldr	r0, [pc, #36]	; (90005a50 <HAL_SDRAM_MspDeInit+0x64>)
90005a2c:	f004 fef8 	bl	9000a820 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7);
90005a30:	21e0      	movs	r1, #224	; 0xe0
90005a32:	4808      	ldr	r0, [pc, #32]	; (90005a54 <HAL_SDRAM_MspDeInit+0x68>)
  /* USER CODE END SDRAM_MspDeInit 0 */
  HAL_FMC_MspDeInit();
  /* USER CODE BEGIN SDRAM_MspDeInit 1 */

  /* USER CODE END SDRAM_MspDeInit 1 */
}
90005a34:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7);
90005a38:	f004 bef2 	b.w	9000a820 <HAL_GPIO_DeInit>
90005a3c:	240095bc 	.word	0x240095bc
90005a40:	58024400 	.word	0x58024400
90005a44:	58021000 	.word	0x58021000
90005a48:	58021800 	.word	0x58021800
90005a4c:	58020c00 	.word	0x58020c00
90005a50:	58021400 	.word	0x58021400
90005a54:	58021c00 	.word	0x58021c00

90005a58 <HAL_InitTick>:
  uint32_t              uwTimclock, uwAPB1Prescaler;

  uint32_t              uwPrescalerValue;
  uint32_t              pFLatency;
/*Configure the TIM6 IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
90005a58:	280f      	cmp	r0, #15
90005a5a:	d901      	bls.n	90005a60 <HAL_InitTick+0x8>
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
    uwTickPrio = TickPriority;
    }
  else
  {
    return HAL_ERROR;
90005a5c:	2001      	movs	r0, #1
    return HAL_TIM_Base_Start_IT(&htim6);
  }

  /* Return function status */
  return HAL_ERROR;
}
90005a5e:	4770      	bx	lr
{
90005a60:	b530      	push	{r4, r5, lr}
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0U);
90005a62:	4601      	mov	r1, r0
{
90005a64:	b08b      	sub	sp, #44	; 0x2c
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0U);
90005a66:	2200      	movs	r2, #0
90005a68:	4604      	mov	r4, r0
90005a6a:	2036      	movs	r0, #54	; 0x36
90005a6c:	f004 fb3a 	bl	9000a0e4 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
90005a70:	2036      	movs	r0, #54	; 0x36
90005a72:	f004 fb75 	bl	9000a160 <HAL_NVIC_EnableIRQ>
  __HAL_RCC_TIM6_CLK_ENABLE();
90005a76:	4b1a      	ldr	r3, [pc, #104]	; (90005ae0 <HAL_InitTick+0x88>)
    uwTickPrio = TickPriority;
90005a78:	4a1a      	ldr	r2, [pc, #104]	; (90005ae4 <HAL_InitTick+0x8c>)
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
90005a7a:	4669      	mov	r1, sp
90005a7c:	a802      	add	r0, sp, #8
    uwTickPrio = TickPriority;
90005a7e:	6014      	str	r4, [r2, #0]
  __HAL_RCC_TIM6_CLK_ENABLE();
90005a80:	f8d3 20e8 	ldr.w	r2, [r3, #232]	; 0xe8
90005a84:	f042 0210 	orr.w	r2, r2, #16
90005a88:	f8c3 20e8 	str.w	r2, [r3, #232]	; 0xe8
90005a8c:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
90005a90:	f003 0310 	and.w	r3, r3, #16
90005a94:	9301      	str	r3, [sp, #4]
90005a96:	9b01      	ldr	r3, [sp, #4]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
90005a98:	f008 f9ce 	bl	9000de38 <HAL_RCC_GetClockConfig>
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
90005a9c:	9b07      	ldr	r3, [sp, #28]
90005a9e:	b9bb      	cbnz	r3, 90005ad0 <HAL_InitTick+0x78>
    uwTimclock = HAL_RCC_GetPCLK1Freq();
90005aa0:	f008 f93a 	bl	9000dd18 <HAL_RCC_GetPCLK1Freq>
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
90005aa4:	4b10      	ldr	r3, [pc, #64]	; (90005ae8 <HAL_InitTick+0x90>)
  htim6.Init.ClockDivision = 0;
90005aa6:	2200      	movs	r2, #0
  htim6.Instance = TIM6;
90005aa8:	4c10      	ldr	r4, [pc, #64]	; (90005aec <HAL_InitTick+0x94>)
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
90005aaa:	fba3 1300 	umull	r1, r3, r3, r0
  htim6.Instance = TIM6;
90005aae:	4d10      	ldr	r5, [pc, #64]	; (90005af0 <HAL_InitTick+0x98>)
  htim6.Init.Period = (1000000U / 1000U) - 1U;
90005ab0:	f240 31e7 	movw	r1, #999	; 0x3e7
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
90005ab4:	4620      	mov	r0, r4
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
90005ab6:	0c9b      	lsrs	r3, r3, #18
  htim6.Instance = TIM6;
90005ab8:	6025      	str	r5, [r4, #0]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
90005aba:	60a2      	str	r2, [r4, #8]
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
90005abc:	3b01      	subs	r3, #1
  htim6.Init.Period = (1000000U / 1000U) - 1U;
90005abe:	e9c4 1203 	strd	r1, r2, [r4, #12]
  htim6.Init.Prescaler = uwPrescalerValue;
90005ac2:	6063      	str	r3, [r4, #4]
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
90005ac4:	f009 fd38 	bl	9000f538 <HAL_TIM_Base_Init>
90005ac8:	b130      	cbz	r0, 90005ad8 <HAL_InitTick+0x80>
    return HAL_ERROR;
90005aca:	2001      	movs	r0, #1
}
90005acc:	b00b      	add	sp, #44	; 0x2c
90005ace:	bd30      	pop	{r4, r5, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
90005ad0:	f008 f922 	bl	9000dd18 <HAL_RCC_GetPCLK1Freq>
90005ad4:	0040      	lsls	r0, r0, #1
90005ad6:	e7e5      	b.n	90005aa4 <HAL_InitTick+0x4c>
    return HAL_TIM_Base_Start_IT(&htim6);
90005ad8:	4620      	mov	r0, r4
90005ada:	f009 fde3 	bl	9000f6a4 <HAL_TIM_Base_Start_IT>
90005ade:	e7f5      	b.n	90005acc <HAL_InitTick+0x74>
90005ae0:	58024400 	.word	0x58024400
90005ae4:	2400006c 	.word	0x2400006c
90005ae8:	431bde83 	.word	0x431bde83
90005aec:	240095c4 	.word	0x240095c4
90005af0:	40001000 	.word	0x40001000

90005af4 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
90005af4:	4770      	bx	lr
90005af6:	bf00      	nop

90005af8 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
90005af8:	e7fe      	b.n	90005af8 <HardFault_Handler>
90005afa:	bf00      	nop

90005afc <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
90005afc:	e7fe      	b.n	90005afc <MemManage_Handler>
90005afe:	bf00      	nop

90005b00 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
90005b00:	e7fe      	b.n	90005b00 <BusFault_Handler>
90005b02:	bf00      	nop

90005b04 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
90005b04:	e7fe      	b.n	90005b04 <UsageFault_Handler>
90005b06:	bf00      	nop

90005b08 <DebugMon_Handler>:
90005b08:	4770      	bx	lr
90005b0a:	bf00      	nop

90005b0c <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
90005b0c:	4801      	ldr	r0, [pc, #4]	; (90005b14 <TIM6_DAC_IRQHandler+0x8>)
90005b0e:	f009 be2d 	b.w	9000f76c <HAL_TIM_IRQHandler>
90005b12:	bf00      	nop
90005b14:	240095c4 	.word	0x240095c4

90005b18 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
90005b18:	4801      	ldr	r0, [pc, #4]	; (90005b20 <LTDC_IRQHandler+0x8>)
90005b1a:	f006 bfe7 	b.w	9000caec <HAL_LTDC_IRQHandler>
90005b1e:	bf00      	nop
90005b20:	240092dc 	.word	0x240092dc

90005b24 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
90005b24:	4801      	ldr	r0, [pc, #4]	; (90005b2c <DMA2D_IRQHandler+0x8>)
90005b26:	f004 bc45 	b.w	9000a3b4 <HAL_DMA2D_IRQHandler>
90005b2a:	bf00      	nop
90005b2c:	2400921c 	.word	0x2400921c

90005b30 <JPEG_IRQHandler>:
void JPEG_IRQHandler(void)
{
  /* USER CODE BEGIN JPEG_IRQn 0 */

  /* USER CODE END JPEG_IRQn 0 */
  HAL_JPEG_IRQHandler(&hjpeg);
90005b30:	4801      	ldr	r0, [pc, #4]	; (90005b38 <JPEG_IRQHandler+0x8>)
90005b32:	f006 bec7 	b.w	9000c8c4 <HAL_JPEG_IRQHandler>
90005b36:	bf00      	nop
90005b38:	24009284 	.word	0x24009284

90005b3c <MDMA_IRQHandler>:
void MDMA_IRQHandler(void)
{
  /* USER CODE BEGIN MDMA_IRQn 0 */

  /* USER CODE END MDMA_IRQn 0 */
  HAL_MDMA_IRQHandler(&hmdma_jpeg_outfifo_th);
90005b3c:	4804      	ldr	r0, [pc, #16]	; (90005b50 <MDMA_IRQHandler+0x14>)
{
90005b3e:	b508      	push	{r3, lr}
  HAL_MDMA_IRQHandler(&hmdma_jpeg_outfifo_th);
90005b40:	f007 fa88 	bl	9000d054 <HAL_MDMA_IRQHandler>
  HAL_MDMA_IRQHandler(&hmdma_jpeg_infifo_th);
90005b44:	4803      	ldr	r0, [pc, #12]	; (90005b54 <MDMA_IRQHandler+0x18>)
  /* USER CODE BEGIN MDMA_IRQn 1 */

  /* USER CODE END MDMA_IRQn 1 */
}
90005b46:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_MDMA_IRQHandler(&hmdma_jpeg_infifo_th);
90005b4a:	f007 ba83 	b.w	9000d054 <HAL_MDMA_IRQHandler>
90005b4e:	bf00      	nop
90005b50:	240093f0 	.word	0x240093f0
90005b54:	24009384 	.word	0x24009384

90005b58 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
90005b58:	2001      	movs	r0, #1
90005b5a:	4770      	bx	lr

90005b5c <_kill>:

int _kill(int pid, int sig)
{
90005b5c:	b508      	push	{r3, lr}
	errno = EINVAL;
90005b5e:	f024 fc39 	bl	9002a3d4 <__errno>
90005b62:	2216      	movs	r2, #22
90005b64:	4603      	mov	r3, r0
	return -1;
}
90005b66:	f04f 30ff 	mov.w	r0, #4294967295
	errno = EINVAL;
90005b6a:	601a      	str	r2, [r3, #0]
}
90005b6c:	bd08      	pop	{r3, pc}
90005b6e:	bf00      	nop

90005b70 <_exit>:

void _exit (int status)
{
90005b70:	b508      	push	{r3, lr}
	errno = EINVAL;
90005b72:	f024 fc2f 	bl	9002a3d4 <__errno>
90005b76:	2316      	movs	r3, #22
90005b78:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
90005b7a:	e7fe      	b.n	90005b7a <_exit+0xa>

90005b7c <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
90005b7c:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
90005b7e:	1e16      	subs	r6, r2, #0
90005b80:	dd07      	ble.n	90005b92 <_read+0x16>
90005b82:	460c      	mov	r4, r1
90005b84:	198d      	adds	r5, r1, r6
	{
		*ptr++ = __io_getchar();
90005b86:	f3af 8000 	nop.w
90005b8a:	f804 0b01 	strb.w	r0, [r4], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
90005b8e:	42a5      	cmp	r5, r4
90005b90:	d1f9      	bne.n	90005b86 <_read+0xa>
	}

return len;
}
90005b92:	4630      	mov	r0, r6
90005b94:	bd70      	pop	{r4, r5, r6, pc}
90005b96:	bf00      	nop

90005b98 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
90005b98:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
90005b9a:	1e16      	subs	r6, r2, #0
90005b9c:	dd07      	ble.n	90005bae <_write+0x16>
90005b9e:	460c      	mov	r4, r1
90005ba0:	198d      	adds	r5, r1, r6
	{
		__io_putchar(*ptr++);
90005ba2:	f814 0b01 	ldrb.w	r0, [r4], #1
90005ba6:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
90005baa:	42ac      	cmp	r4, r5
90005bac:	d1f9      	bne.n	90005ba2 <_write+0xa>
	}
	return len;
}
90005bae:	4630      	mov	r0, r6
90005bb0:	bd70      	pop	{r4, r5, r6, pc}
90005bb2:	bf00      	nop

90005bb4 <_close>:

int _close(int file)
{
	return -1;
}
90005bb4:	f04f 30ff 	mov.w	r0, #4294967295
90005bb8:	4770      	bx	lr
90005bba:	bf00      	nop

90005bbc <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
90005bbc:	f44f 5300 	mov.w	r3, #8192	; 0x2000
	return 0;
}
90005bc0:	2000      	movs	r0, #0
	st->st_mode = S_IFCHR;
90005bc2:	604b      	str	r3, [r1, #4]
}
90005bc4:	4770      	bx	lr
90005bc6:	bf00      	nop

90005bc8 <_isatty>:

int _isatty(int file)
{
	return 1;
}
90005bc8:	2001      	movs	r0, #1
90005bca:	4770      	bx	lr

90005bcc <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
90005bcc:	2000      	movs	r0, #0
90005bce:	4770      	bx	lr

90005bd0 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
90005bd0:	4770      	bx	lr
90005bd2:	bf00      	nop

90005bd4 <_ZN23ApplicationFontProviderD0Ev>:
90005bd4:	b510      	push	{r4, lr}
90005bd6:	4604      	mov	r4, r0
90005bd8:	2104      	movs	r1, #4
90005bda:	f024 f820 	bl	90029c1e <_ZdlPvj>
90005bde:	4620      	mov	r0, r4
90005be0:	bd10      	pop	{r4, pc}
90005be2:	bf00      	nop

90005be4 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
    switch (typography)
90005be4:	2901      	cmp	r1, #1
{
90005be6:	b508      	push	{r3, lr}
    switch (typography)
90005be8:	d004      	beq.n	90005bf4 <_ZN23ApplicationFontProvider7getFontEt+0x10>
90005bea:	2902      	cmp	r1, #2
90005bec:	d00a      	beq.n	90005c04 <_ZN23ApplicationFontProvider7getFontEt+0x20>
90005bee:	b129      	cbz	r1, 90005bfc <_ZN23ApplicationFontProvider7getFontEt+0x18>
90005bf0:	2000      	movs	r0, #0
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    default:
        return 0;
    }
}
90005bf2:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
90005bf4:	f000 ff98 	bl	90006b28 <_ZN17TypedTextDatabase8getFontsEv>
90005bf8:	6840      	ldr	r0, [r0, #4]
}
90005bfa:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
90005bfc:	f000 ff94 	bl	90006b28 <_ZN17TypedTextDatabase8getFontsEv>
90005c00:	6800      	ldr	r0, [r0, #0]
}
90005c02:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
90005c04:	f000 ff90 	bl	90006b28 <_ZN17TypedTextDatabase8getFontsEv>
90005c08:	6880      	ldr	r0, [r0, #8]
}
90005c0a:	bd08      	pop	{r3, pc}

90005c0c <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
90005c0c:	4800      	ldr	r0, [pc, #0]	; (90005c10 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
90005c0e:	4770      	bx	lr
90005c10:	9002cca0 	.word	0x9002cca0

90005c14 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
90005c14:	200c      	movs	r0, #12
90005c16:	4770      	bx	lr

90005c18 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
    {
        if (unicode == 0)
90005c18:	b169      	cbz	r1, 90005c36 <_ZNK8touchgfx4Font8getGlyphEt+0x1e>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
90005c1a:	6802      	ldr	r2, [r0, #0]
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
90005c1c:	b530      	push	{r4, r5, lr}
90005c1e:	b083      	sub	sp, #12
        const uint8_t* dummyPixelDataPointer = 0;
90005c20:	2400      	movs	r4, #0
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
90005c22:	6895      	ldr	r5, [r2, #8]
90005c24:	f10d 0303 	add.w	r3, sp, #3
90005c28:	aa01      	add	r2, sp, #4
        const uint8_t* dummyPixelDataPointer = 0;
90005c2a:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
90005c2c:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
90005c30:	47a8      	blx	r5
        return glyph;
    }
90005c32:	b003      	add	sp, #12
90005c34:	bd30      	pop	{r4, r5, pc}
            return 0;
90005c36:	4608      	mov	r0, r1
    }
90005c38:	4770      	bx	lr
90005c3a:	bf00      	nop

90005c3c <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
90005c3c:	89c0      	ldrh	r0, [r0, #14]
90005c3e:	4770      	bx	lr

90005c40 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
90005c40:	8a00      	ldrh	r0, [r0, #16]
90005c42:	4770      	bx	lr

90005c44 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
90005c44:	88c0      	ldrh	r0, [r0, #6]
90005c46:	4770      	bx	lr

90005c48 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
90005c48:	8880      	ldrh	r0, [r0, #4]
90005c4a:	4770      	bx	lr

90005c4c <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
90005c4c:	7a80      	ldrb	r0, [r0, #10]
    }
90005c4e:	f000 007f 	and.w	r0, r0, #127	; 0x7f
90005c52:	4770      	bx	lr

90005c54 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
90005c54:	7a80      	ldrb	r0, [r0, #10]
    }
90005c56:	09c0      	lsrs	r0, r0, #7
90005c58:	4770      	bx	lr
90005c5a:	bf00      	nop

90005c5c <_ZNK8touchgfx4Font17isVectorBasedFontEv>:
     * @return True if this Font is vector based.
     */
    virtual bool isVectorBasedFont() const
    {
        return false;
    }
90005c5c:	2000      	movs	r0, #0
90005c5e:	4770      	bx	lr

90005c60 <_ZNK8touchgfx4Font14getScaleFactorEv>:
     * @return The scale factor
     */
    virtual float getScaleFactor() const
    {
        return 0;
    }
90005c60:	ed9f 0a01 	vldr	s0, [pc, #4]	; 90005c68 <_ZNK8touchgfx4Font14getScaleFactorEv+0x8>
90005c64:	4770      	bx	lr
90005c66:	bf00      	nop
90005c68:	00000000 	.word	0x00000000

90005c6c <_ZN8touchgfx9TypedTextD1Ev>:
    }
90005c6c:	4770      	bx	lr
90005c6e:	bf00      	nop

90005c70 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
90005c70:	b510      	push	{r4, lr}
90005c72:	4604      	mov	r4, r0
    }
90005c74:	2108      	movs	r1, #8
90005c76:	f023 ffd2 	bl	90029c1e <_ZdlPvj>
90005c7a:	4620      	mov	r0, r4
90005c7c:	bd10      	pop	{r4, pc}
90005c7e:	bf00      	nop

90005c80 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
90005c80:	4770      	bx	lr
90005c82:	bf00      	nop

90005c84 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
90005c84:	f500 7398 	add.w	r3, r0, #304	; 0x130
90005c88:	6808      	ldr	r0, [r1, #0]
90005c8a:	6849      	ldr	r1, [r1, #4]
90005c8c:	c303      	stmia	r3!, {r0, r1}
    }
90005c8e:	4770      	bx	lr

90005c90 <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
90005c90:	6a80      	ldr	r0, [r0, #40]	; 0x28
90005c92:	4770      	bx	lr

90005c94 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
90005c94:	4770      	bx	lr
90005c96:	bf00      	nop

90005c98 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
90005c98:	4770      	bx	lr
90005c9a:	bf00      	nop

90005c9c <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
90005c9c:	6041      	str	r1, [r0, #4]
    }
90005c9e:	4770      	bx	lr

90005ca0 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
90005ca0:	4770      	bx	lr
90005ca2:	bf00      	nop

90005ca4 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
90005ca4:	4905      	ldr	r1, [pc, #20]	; (90005cbc <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x18>)
90005ca6:	2200      	movs	r2, #0
// screen_game_select

void FrontendApplicationBase::gotoscreen_game_selectScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoscreen_game_selectScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
90005ca8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
90005cac:	f8c0 2150 	str.w	r2, [r0, #336]	; 0x150
90005cb0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
90005cb4:	e9c0 0152 	strd	r0, r1, [r0, #328]	; 0x148

    virtual void changeToStartScreen()
    {
        gotoscreen_game_selectScreenNoTransition();
    }
90005cb8:	4770      	bx	lr
90005cba:	bf00      	nop
90005cbc:	90006019 	.word	0x90006019

90005cc0 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
90005cc0:	2301      	movs	r3, #1
90005cc2:	7203      	strb	r3, [r0, #8]
    }
90005cc4:	4770      	bx	lr
90005cc6:	bf00      	nop

90005cc8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EED1Ev>:
 * Screen transitioning to.
 *
 * @see Transition
 */
template <Direction templateDirection>
class SlideTransition : public Transition
90005cc8:	4770      	bx	lr
90005cca:	bf00      	nop

90005ccc <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EED1Ev>:
90005ccc:	4770      	bx	lr
90005cce:	bf00      	nop

90005cd0 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
90005cd0:	4770      	bx	lr
90005cd2:	bf00      	nop

90005cd4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
90005cd4:	4770      	bx	lr
90005cd6:	bf00      	nop

90005cd8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
    {
        (pobject->*pmemfun)();
90005cd8:	68c2      	ldr	r2, [r0, #12]
    virtual void execute()
90005cda:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
90005cdc:	6841      	ldr	r1, [r0, #4]
90005cde:	ea4f 0c62 	mov.w	ip, r2, asr #1
90005ce2:	eb01 0062 	add.w	r0, r1, r2, asr #1
90005ce6:	07d2      	lsls	r2, r2, #31
90005ce8:	d401      	bmi.n	90005cee <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x16>
90005cea:	689b      	ldr	r3, [r3, #8]
90005cec:	4718      	bx	r3
90005cee:	f851 200c 	ldr.w	r2, [r1, ip]
90005cf2:	689b      	ldr	r3, [r3, #8]
90005cf4:	58d3      	ldr	r3, [r2, r3]
90005cf6:	4718      	bx	r3

90005cf8 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
90005cf8:	6843      	ldr	r3, [r0, #4]
90005cfa:	b13b      	cbz	r3, 90005d0c <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
90005cfc:	6883      	ldr	r3, [r0, #8]
90005cfe:	b10b      	cbz	r3, 90005d04 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0xc>
90005d00:	2001      	movs	r0, #1
    }
90005d02:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
90005d04:	68c0      	ldr	r0, [r0, #12]
90005d06:	f000 0001 	and.w	r0, r0, #1
90005d0a:	4770      	bx	lr
90005d0c:	4618      	mov	r0, r3
90005d0e:	4770      	bx	lr

90005d10 <_ZN8touchgfx12NoTransitionD0Ev>:
90005d10:	b510      	push	{r4, lr}
90005d12:	4604      	mov	r4, r0
90005d14:	210c      	movs	r1, #12
90005d16:	f023 ff82 	bl	90029c1e <_ZdlPvj>
90005d1a:	4620      	mov	r0, r4
90005d1c:	bd10      	pop	{r4, pc}
90005d1e:	bf00      	nop

90005d20 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
90005d20:	b510      	push	{r4, lr}
90005d22:	4604      	mov	r4, r0
90005d24:	2110      	movs	r1, #16
90005d26:	f023 ff7a 	bl	90029c1e <_ZdlPvj>
90005d2a:	4620      	mov	r0, r4
90005d2c:	bd10      	pop	{r4, pc}
90005d2e:	bf00      	nop

90005d30 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
90005d30:	b510      	push	{r4, lr}
90005d32:	4604      	mov	r4, r0
90005d34:	f44f 71ae 	mov.w	r1, #348	; 0x15c
90005d38:	f023 ff71 	bl	90029c1e <_ZdlPvj>
90005d3c:	4620      	mov	r0, r4
90005d3e:	bd10      	pop	{r4, pc}

90005d40 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EED0Ev>:
90005d40:	b510      	push	{r4, lr}
90005d42:	4604      	mov	r4, r0
90005d44:	2140      	movs	r1, #64	; 0x40
90005d46:	f023 ff6a 	bl	90029c1e <_ZdlPvj>
90005d4a:	4620      	mov	r0, r4
90005d4c:	bd10      	pop	{r4, pc}
90005d4e:	bf00      	nop

90005d50 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EED0Ev>:
90005d50:	b510      	push	{r4, lr}
90005d52:	4604      	mov	r4, r0
90005d54:	2140      	movs	r1, #64	; 0x40
90005d56:	f023 ff62 	bl	90029c1e <_ZdlPvj>
90005d5a:	4620      	mov	r0, r4
90005d5c:	bd10      	pop	{r4, pc}
90005d5e:	bf00      	nop

90005d60 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
90005d60:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
90005d62:	f012 fe0f 	bl	90018984 <_ZN8touchgfx11Application11getInstanceEv>
90005d66:	6803      	ldr	r3, [r0, #0]
    }
90005d68:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
90005d6c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90005d6e:	4718      	bx	r3

90005d70 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv>:
        screenContainer->invalidate();
    }

    virtual void tearDown()
    {
        if (HAL::USE_ANIMATION_STORAGE && screenContainer)
90005d70:	4b05      	ldr	r3, [pc, #20]	; (90005d88 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x18>)
90005d72:	781b      	ldrb	r3, [r3, #0]
90005d74:	b13b      	cbz	r3, 90005d86 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x16>
90005d76:	6843      	ldr	r3, [r0, #4]
90005d78:	b12b      	cbz	r3, 90005d86 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x16>
        {
            screenContainer->remove(snapshot);
90005d7a:	681a      	ldr	r2, [r3, #0]
90005d7c:	f100 010c 	add.w	r1, r0, #12
90005d80:	4618      	mov	r0, r3
90005d82:	6e53      	ldr	r3, [r2, #100]	; 0x64
90005d84:	4718      	bx	r3
        }
    }
90005d86:	4770      	bx	lr
90005d88:	240236cb 	.word	0x240236cb

90005d8c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE8tearDownEv>:
        if (HAL::USE_ANIMATION_STORAGE && screenContainer)
90005d8c:	4b05      	ldr	r3, [pc, #20]	; (90005da4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE8tearDownEv+0x18>)
90005d8e:	781b      	ldrb	r3, [r3, #0]
90005d90:	b13b      	cbz	r3, 90005da2 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE8tearDownEv+0x16>
90005d92:	6843      	ldr	r3, [r0, #4]
90005d94:	b12b      	cbz	r3, 90005da2 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE8tearDownEv+0x16>
            screenContainer->remove(snapshot);
90005d96:	681a      	ldr	r2, [r3, #0]
90005d98:	f100 010c 	add.w	r1, r0, #12
90005d9c:	4618      	mov	r0, r3
90005d9e:	6e53      	ldr	r3, [r2, #100]	; 0x64
90005da0:	4718      	bx	r3
    }
90005da2:	4770      	bx	lr
90005da4:	240236cb 	.word	0x240236cb

90005da8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
90005da8:	b570      	push	{r4, r5, r6, lr}
90005daa:	4605      	mov	r5, r0
        animationCounter++;
90005dac:	f890 0039 	ldrb.w	r0, [r0, #57]	; 0x39
90005db0:	3001      	adds	r0, #1
        if (animationCounter > animationSteps)
90005db2:	f895 3038 	ldrb.w	r3, [r5, #56]	; 0x38
        animationCounter++;
90005db6:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
90005db8:	4298      	cmp	r0, r3
        animationCounter++;
90005dba:	f885 0039 	strb.w	r0, [r5, #57]	; 0x39
        if (animationCounter > animationSteps)
90005dbe:	d905      	bls.n	90005dcc <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x24>
            done = true;
90005dc0:	2201      	movs	r2, #1
            animationCounter = 0;
90005dc2:	2300      	movs	r3, #0
            done = true;
90005dc4:	722a      	strb	r2, [r5, #8]
            animationCounter = 0;
90005dc6:	f885 3039 	strb.w	r3, [r5, #57]	; 0x39
    }
90005dca:	bd70      	pop	{r4, r5, r6, pc}
        int16_t calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
90005dcc:	f9b5 203a 	ldrsh.w	r2, [r5, #58]	; 0x3a
90005dd0:	2100      	movs	r1, #0
90005dd2:	f014 fb57 	bl	9001a484 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
90005dd6:	f010 0201 	ands.w	r2, r0, #1
90005dda:	b283      	uxth	r3, r0
90005ddc:	d006      	beq.n	90005dec <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x44>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
90005dde:	f64f 71ff 	movw	r1, #65535	; 0xffff
90005de2:	2800      	cmp	r0, #0
90005de4:	bfd8      	it	le
90005de6:	460a      	movle	r2, r1
90005de8:	4413      	add	r3, r2
90005dea:	b29b      	uxth	r3, r3
        Drawable* d = screenContainer->getFirstChild();
90005dec:	6868      	ldr	r0, [r5, #4]
            relativeValue = calculatedValue - snapshot.getX();
90005dee:	8a2c      	ldrh	r4, [r5, #16]
        Drawable* d = screenContainer->getFirstChild();
90005df0:	6802      	ldr	r2, [r0, #0]
90005df2:	4912      	ldr	r1, [pc, #72]	; (90005e3c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x94>)
            relativeValue = calculatedValue - snapshot.getX();
90005df4:	1b1b      	subs	r3, r3, r4
        Drawable* d = screenContainer->getFirstChild();
90005df6:	69d2      	ldr	r2, [r2, #28]
            relativeValue = calculatedValue - snapshot.getX();
90005df8:	87ab      	strh	r3, [r5, #60]	; 0x3c
90005dfa:	428a      	cmp	r2, r1
90005dfc:	d11b      	bne.n	90005e36 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x8e>
        return firstChild;
90005dfe:	6a84      	ldr	r4, [r0, #40]	; 0x28
        while (d)
90005e00:	b164      	cbz	r4, 90005e1c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x74>
90005e02:	8faa      	ldrh	r2, [r5, #60]	; 0x3c
90005e04:	4e0e      	ldr	r6, [pc, #56]	; (90005e40 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x98>)
                d->setX(d->getX() + relativeValue);
90005e06:	6823      	ldr	r3, [r4, #0]
90005e08:	88a1      	ldrh	r1, [r4, #4]
90005e0a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90005e0c:	4411      	add	r1, r2
90005e0e:	42b3      	cmp	r3, r6
90005e10:	b209      	sxth	r1, r1
        rect.x = x;
90005e12:	d109      	bne.n	90005e28 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x80>
90005e14:	80a1      	strh	r1, [r4, #4]
        return nextSibling;
90005e16:	69a4      	ldr	r4, [r4, #24]
        while (d)
90005e18:	2c00      	cmp	r4, #0
90005e1a:	d1f4      	bne.n	90005e06 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x5e>
        screenContainer->invalidate();
90005e1c:	6868      	ldr	r0, [r5, #4]
90005e1e:	6803      	ldr	r3, [r0, #0]
    }
90005e20:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        screenContainer->invalidate();
90005e24:	695b      	ldr	r3, [r3, #20]
90005e26:	4718      	bx	r3
                d->setX(d->getX() + relativeValue);
90005e28:	4620      	mov	r0, r4
90005e2a:	4798      	blx	r3
90005e2c:	69a4      	ldr	r4, [r4, #24]
        while (d)
90005e2e:	2c00      	cmp	r4, #0
90005e30:	d0f4      	beq.n	90005e1c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x74>
90005e32:	8faa      	ldrh	r2, [r5, #60]	; 0x3c
90005e34:	e7e7      	b.n	90005e06 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x5e>
        Drawable* d = screenContainer->getFirstChild();
90005e36:	4790      	blx	r2
90005e38:	4604      	mov	r4, r0
90005e3a:	e7e1      	b.n	90005e00 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x58>
90005e3c:	90005c91 	.word	0x90005c91
90005e40:	9000452d 	.word	0x9000452d

90005e44 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv>:
    virtual void handleTickEvent()
90005e44:	b570      	push	{r4, r5, r6, lr}
90005e46:	4605      	mov	r5, r0
        animationCounter++;
90005e48:	f890 0039 	ldrb.w	r0, [r0, #57]	; 0x39
90005e4c:	3001      	adds	r0, #1
        if (animationCounter > animationSteps)
90005e4e:	f895 3038 	ldrb.w	r3, [r5, #56]	; 0x38
        animationCounter++;
90005e52:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
90005e54:	4298      	cmp	r0, r3
        animationCounter++;
90005e56:	f885 0039 	strb.w	r0, [r5, #57]	; 0x39
        if (animationCounter > animationSteps)
90005e5a:	d905      	bls.n	90005e68 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x24>
            done = true;
90005e5c:	2201      	movs	r2, #1
            animationCounter = 0;
90005e5e:	2300      	movs	r3, #0
            done = true;
90005e60:	722a      	strb	r2, [r5, #8]
            animationCounter = 0;
90005e62:	f885 3039 	strb.w	r3, [r5, #57]	; 0x39
    }
90005e66:	bd70      	pop	{r4, r5, r6, pc}
        int16_t calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
90005e68:	f9b5 203a 	ldrsh.w	r2, [r5, #58]	; 0x3a
90005e6c:	2100      	movs	r1, #0
90005e6e:	f014 fb09 	bl	9001a484 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
90005e72:	f010 0201 	ands.w	r2, r0, #1
90005e76:	b283      	uxth	r3, r0
90005e78:	d006      	beq.n	90005e88 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x44>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
90005e7a:	f64f 71ff 	movw	r1, #65535	; 0xffff
90005e7e:	2800      	cmp	r0, #0
90005e80:	bfd8      	it	le
90005e82:	460a      	movle	r2, r1
90005e84:	4413      	add	r3, r2
90005e86:	b29b      	uxth	r3, r3
        Drawable* d = screenContainer->getFirstChild();
90005e88:	6868      	ldr	r0, [r5, #4]
            relativeValue = calculatedValue - snapshot.getX();
90005e8a:	8a2c      	ldrh	r4, [r5, #16]
        Drawable* d = screenContainer->getFirstChild();
90005e8c:	6802      	ldr	r2, [r0, #0]
90005e8e:	4912      	ldr	r1, [pc, #72]	; (90005ed8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x94>)
            relativeValue = calculatedValue - snapshot.getX();
90005e90:	1b1b      	subs	r3, r3, r4
        Drawable* d = screenContainer->getFirstChild();
90005e92:	69d2      	ldr	r2, [r2, #28]
            relativeValue = calculatedValue - snapshot.getX();
90005e94:	87ab      	strh	r3, [r5, #60]	; 0x3c
90005e96:	428a      	cmp	r2, r1
90005e98:	d11b      	bne.n	90005ed2 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x8e>
90005e9a:	6a84      	ldr	r4, [r0, #40]	; 0x28
        while (d)
90005e9c:	b164      	cbz	r4, 90005eb8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x74>
90005e9e:	8faa      	ldrh	r2, [r5, #60]	; 0x3c
90005ea0:	4e0e      	ldr	r6, [pc, #56]	; (90005edc <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x98>)
                d->setX(d->getX() + relativeValue);
90005ea2:	6823      	ldr	r3, [r4, #0]
90005ea4:	88a1      	ldrh	r1, [r4, #4]
90005ea6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90005ea8:	4411      	add	r1, r2
90005eaa:	42b3      	cmp	r3, r6
90005eac:	b209      	sxth	r1, r1
        rect.x = x;
90005eae:	d109      	bne.n	90005ec4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x80>
90005eb0:	80a1      	strh	r1, [r4, #4]
        return nextSibling;
90005eb2:	69a4      	ldr	r4, [r4, #24]
        while (d)
90005eb4:	2c00      	cmp	r4, #0
90005eb6:	d1f4      	bne.n	90005ea2 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x5e>
        screenContainer->invalidate();
90005eb8:	6868      	ldr	r0, [r5, #4]
90005eba:	6803      	ldr	r3, [r0, #0]
    }
90005ebc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        screenContainer->invalidate();
90005ec0:	695b      	ldr	r3, [r3, #20]
90005ec2:	4718      	bx	r3
                d->setX(d->getX() + relativeValue);
90005ec4:	4620      	mov	r0, r4
90005ec6:	4798      	blx	r3
90005ec8:	69a4      	ldr	r4, [r4, #24]
        while (d)
90005eca:	2c00      	cmp	r4, #0
90005ecc:	d0f4      	beq.n	90005eb8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x74>
90005ece:	8faa      	ldrh	r2, [r5, #60]	; 0x3c
90005ed0:	e7e7      	b.n	90005ea2 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x5e>
        Drawable* d = screenContainer->getFirstChild();
90005ed2:	4790      	blx	r2
90005ed4:	4604      	mov	r4, r0
90005ed6:	e7e1      	b.n	90005e9c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x58>
90005ed8:	90005c91 	.word	0x90005c91
90005edc:	9000452d 	.word	0x9000452d

90005ee0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv>:

    virtual void init()
    {
        Transition::init();

        if (done)
90005ee0:	7a03      	ldrb	r3, [r0, #8]
90005ee2:	bb2b      	cbnz	r3, 90005f30 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x50>
90005ee4:	4a14      	ldr	r2, [pc, #80]	; (90005f38 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x58>)
    virtual void init()
90005ee6:	b570      	push	{r4, r5, r6, lr}
90005ee8:	4605      	mov	r5, r0
        {
            return;
        }

        // Move snapshot and its children with delta value for X or Y
        Drawable* d = screenContainer->getFirstChild();
90005eea:	6840      	ldr	r0, [r0, #4]
90005eec:	6803      	ldr	r3, [r0, #0]
90005eee:	69db      	ldr	r3, [r3, #28]
90005ef0:	4293      	cmp	r3, r2
90005ef2:	d11e      	bne.n	90005f32 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x52>
90005ef4:	6a84      	ldr	r4, [r0, #40]	; 0x28
        while (d)
90005ef6:	b164      	cbz	r4, 90005f12 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x32>
90005ef8:	8f6a      	ldrh	r2, [r5, #58]	; 0x3a
90005efa:	4e10      	ldr	r6, [pc, #64]	; (90005f3c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x5c>)
        {
            switch (templateDirection)
            {
            case EAST:
            case WEST:
                d->setX(d->getX() - targetValue);
90005efc:	6823      	ldr	r3, [r4, #0]
90005efe:	88a1      	ldrh	r1, [r4, #4]
90005f00:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90005f02:	1a89      	subs	r1, r1, r2
90005f04:	42b3      	cmp	r3, r6
90005f06:	b209      	sxth	r1, r1
        rect.x = x;
90005f08:	d10b      	bne.n	90005f22 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x42>
90005f0a:	80a1      	strh	r1, [r4, #4]
        return nextSibling;
90005f0c:	69a4      	ldr	r4, [r4, #24]
        while (d)
90005f0e:	2c00      	cmp	r4, #0
90005f10:	d1f4      	bne.n	90005efc <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x1c>
            }

            d = d->getNextSibling();
        }

        screenContainer->add(snapshot);
90005f12:	6868      	ldr	r0, [r5, #4]
90005f14:	f105 010c 	add.w	r1, r5, #12
90005f18:	6803      	ldr	r3, [r0, #0]
    }
90005f1a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        screenContainer->add(snapshot);
90005f1e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
90005f20:	4718      	bx	r3
                d->setX(d->getX() - targetValue);
90005f22:	4620      	mov	r0, r4
90005f24:	4798      	blx	r3
90005f26:	69a4      	ldr	r4, [r4, #24]
        while (d)
90005f28:	2c00      	cmp	r4, #0
90005f2a:	d0f2      	beq.n	90005f12 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x32>
90005f2c:	8f6a      	ldrh	r2, [r5, #58]	; 0x3a
90005f2e:	e7e5      	b.n	90005efc <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x1c>
90005f30:	4770      	bx	lr
        Drawable* d = screenContainer->getFirstChild();
90005f32:	4798      	blx	r3
90005f34:	4604      	mov	r4, r0
90005f36:	e7de      	b.n	90005ef6 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x16>
90005f38:	90005c91 	.word	0x90005c91
90005f3c:	9000452d 	.word	0x9000452d

90005f40 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv>:
        if (done)
90005f40:	7a03      	ldrb	r3, [r0, #8]
90005f42:	bb2b      	cbnz	r3, 90005f90 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x50>
90005f44:	4a14      	ldr	r2, [pc, #80]	; (90005f98 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x58>)
    virtual void init()
90005f46:	b570      	push	{r4, r5, r6, lr}
90005f48:	4605      	mov	r5, r0
        Drawable* d = screenContainer->getFirstChild();
90005f4a:	6840      	ldr	r0, [r0, #4]
90005f4c:	6803      	ldr	r3, [r0, #0]
90005f4e:	69db      	ldr	r3, [r3, #28]
90005f50:	4293      	cmp	r3, r2
90005f52:	d11e      	bne.n	90005f92 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x52>
90005f54:	6a84      	ldr	r4, [r0, #40]	; 0x28
        while (d)
90005f56:	b164      	cbz	r4, 90005f72 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x32>
90005f58:	8f6a      	ldrh	r2, [r5, #58]	; 0x3a
90005f5a:	4e10      	ldr	r6, [pc, #64]	; (90005f9c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x5c>)
                d->setX(d->getX() - targetValue);
90005f5c:	6823      	ldr	r3, [r4, #0]
90005f5e:	88a1      	ldrh	r1, [r4, #4]
90005f60:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90005f62:	1a89      	subs	r1, r1, r2
90005f64:	42b3      	cmp	r3, r6
90005f66:	b209      	sxth	r1, r1
        rect.x = x;
90005f68:	d10b      	bne.n	90005f82 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x42>
90005f6a:	80a1      	strh	r1, [r4, #4]
        return nextSibling;
90005f6c:	69a4      	ldr	r4, [r4, #24]
        while (d)
90005f6e:	2c00      	cmp	r4, #0
90005f70:	d1f4      	bne.n	90005f5c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x1c>
        screenContainer->add(snapshot);
90005f72:	6868      	ldr	r0, [r5, #4]
90005f74:	f105 010c 	add.w	r1, r5, #12
90005f78:	6803      	ldr	r3, [r0, #0]
    }
90005f7a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        screenContainer->add(snapshot);
90005f7e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
90005f80:	4718      	bx	r3
                d->setX(d->getX() - targetValue);
90005f82:	4620      	mov	r0, r4
90005f84:	4798      	blx	r3
90005f86:	69a4      	ldr	r4, [r4, #24]
        while (d)
90005f88:	2c00      	cmp	r4, #0
90005f8a:	d0f2      	beq.n	90005f72 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x32>
90005f8c:	8f6a      	ldrh	r2, [r5, #58]	; 0x3a
90005f8e:	e7e5      	b.n	90005f5c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x1c>
90005f90:	4770      	bx	lr
        Drawable* d = screenContainer->getFirstChild();
90005f92:	4798      	blx	r3
90005f94:	4604      	mov	r4, r0
90005f96:	e7de      	b.n	90005f56 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x16>
90005f98:	90005c91 	.word	0x90005c91
90005f9c:	9000452d 	.word	0x9000452d

90005fa0 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
90005fa0:	f8d0 3140 	ldr.w	r3, [r0, #320]	; 0x140
90005fa4:	b1d3      	cbz	r3, 90005fdc <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3c>
90005fa6:	681a      	ldr	r2, [r3, #0]
    virtual void handlePendingScreenTransition()
90005fa8:	b570      	push	{r4, r5, r6, lr}
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
90005faa:	68d1      	ldr	r1, [r2, #12]
90005fac:	4604      	mov	r4, r0
90005fae:	4818      	ldr	r0, [pc, #96]	; (90006010 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x70>)
90005fb0:	4281      	cmp	r1, r0
90005fb2:	d118      	bne.n	90005fe6 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x46>
        return (pobject != 0) && (pmemfun != 0);
90005fb4:	6858      	ldr	r0, [r3, #4]
90005fb6:	b180      	cbz	r0, 90005fda <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
90005fb8:	6899      	ldr	r1, [r3, #8]
90005fba:	b1e1      	cbz	r1, 90005ff6 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x56>
        {
            pendingScreenTransitionCallback->execute();
90005fbc:	6892      	ldr	r2, [r2, #8]
90005fbe:	4915      	ldr	r1, [pc, #84]	; (90006014 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x74>)
90005fc0:	428a      	cmp	r2, r1
90005fc2:	d122      	bne.n	9000600a <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x6a>
        (pobject->*pmemfun)();
90005fc4:	68da      	ldr	r2, [r3, #12]
90005fc6:	6858      	ldr	r0, [r3, #4]
90005fc8:	eb00 0062 	add.w	r0, r0, r2, asr #1
90005fcc:	07d2      	lsls	r2, r2, #31
90005fce:	d406      	bmi.n	90005fde <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3e>
90005fd0:	689b      	ldr	r3, [r3, #8]
90005fd2:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
90005fd4:	2300      	movs	r3, #0
90005fd6:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
    }
90005fda:	bd70      	pop	{r4, r5, r6, pc}
90005fdc:	4770      	bx	lr
90005fde:	6899      	ldr	r1, [r3, #8]
90005fe0:	6803      	ldr	r3, [r0, #0]
90005fe2:	585b      	ldr	r3, [r3, r1]
90005fe4:	e7f5      	b.n	90005fd2 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x32>
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
90005fe6:	4618      	mov	r0, r3
90005fe8:	4788      	blx	r1
90005fea:	2800      	cmp	r0, #0
90005fec:	d0f5      	beq.n	90005fda <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
            pendingScreenTransitionCallback->execute();
90005fee:	f8d4 3140 	ldr.w	r3, [r4, #320]	; 0x140
90005ff2:	681a      	ldr	r2, [r3, #0]
90005ff4:	e7e2      	b.n	90005fbc <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x1c>
        return (pobject != 0) && (pmemfun != 0);
90005ff6:	68dd      	ldr	r5, [r3, #12]
90005ff8:	07ee      	lsls	r6, r5, #31
90005ffa:	d5ee      	bpl.n	90005fda <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
90005ffc:	6892      	ldr	r2, [r2, #8]
90005ffe:	4e05      	ldr	r6, [pc, #20]	; (90006014 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x74>)
90006000:	42b2      	cmp	r2, r6
90006002:	d102      	bne.n	9000600a <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x6a>
        (pobject->*pmemfun)();
90006004:	eb00 0065 	add.w	r0, r0, r5, asr #1
90006008:	e7ea      	b.n	90005fe0 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x40>
9000600a:	4618      	mov	r0, r3
9000600c:	4790      	blx	r2
9000600e:	e7e1      	b.n	90005fd4 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x34>
90006010:	90005cf9 	.word	0x90005cf9
90006014:	90005cd9 	.word	0x90005cd9

90006018 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv>:
}

void FrontendApplicationBase::gotoscreen_game_selectScreenNoTransitionImpl()
{
90006018:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<screen_game_selectView, screen_game_selectPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
9000601c:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
90006020:	4607      	mov	r7, r0
90006022:	b081      	sub	sp, #4
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90006024:	68a0      	ldr	r0, [r4, #8]
90006026:	6803      	ldr	r3, [r0, #0]
90006028:	6a1b      	ldr	r3, [r3, #32]
9000602a:	4798      	blx	r3
9000602c:	f5b0 7fca 	cmp.w	r0, #404	; 0x194
90006030:	f0c0 809e 	bcc.w	90006170 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x158>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90006034:	6860      	ldr	r0, [r4, #4]
90006036:	6803      	ldr	r3, [r0, #0]
90006038:	6a1b      	ldr	r3, [r3, #32]
9000603a:	4798      	blx	r3
9000603c:	280f      	cmp	r0, #15
9000603e:	f240 80a3 	bls.w	90006188 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x170>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90006042:	68e0      	ldr	r0, [r4, #12]
90006044:	6803      	ldr	r3, [r0, #0]
90006046:	6a1b      	ldr	r3, [r3, #32]
90006048:	4798      	blx	r3
9000604a:	280b      	cmp	r0, #11
9000604c:	f240 8096 	bls.w	9000617c <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x164>
    if (*currentTrans)
90006050:	f8df 9160 	ldr.w	r9, [pc, #352]	; 900061b4 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x19c>
    Application::getInstance()->clearAllTimerWidgets();
90006054:	f012 fc96 	bl	90018984 <_ZN8touchgfx11Application11getInstanceEv>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
90006058:	3004      	adds	r0, #4
9000605a:	f012 fcb8 	bl	900189ce <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
9000605e:	f8d9 0000 	ldr.w	r0, [r9]
90006062:	b140      	cbz	r0, 90006076 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x5e>
        (*currentTrans)->tearDown();
90006064:	6803      	ldr	r3, [r0, #0]
90006066:	68db      	ldr	r3, [r3, #12]
90006068:	4798      	blx	r3
    if (*currentTrans)
9000606a:	f8d9 0000 	ldr.w	r0, [r9]
9000606e:	b110      	cbz	r0, 90006076 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x5e>
        (*currentTrans)->~Transition();
90006070:	6803      	ldr	r3, [r0, #0]
90006072:	681b      	ldr	r3, [r3, #0]
90006074:	4798      	blx	r3
    if (*currentScreen)
90006076:	f8df 8140 	ldr.w	r8, [pc, #320]	; 900061b8 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x1a0>
9000607a:	f8d8 0000 	ldr.w	r0, [r8]
9000607e:	2800      	cmp	r0, #0
90006080:	d063      	beq.n	9000614a <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x132>
        (*currentScreen)->tearDownScreen();
90006082:	6803      	ldr	r3, [r0, #0]
90006084:	695b      	ldr	r3, [r3, #20]
90006086:	4798      	blx	r3
    if (*currentPresenter)
90006088:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
9000608c:	2800      	cmp	r0, #0
9000608e:	d057      	beq.n	90006140 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x128>
        (*currentPresenter)->deactivate();
90006090:	6803      	ldr	r3, [r0, #0]
90006092:	685b      	ldr	r3, [r3, #4]
90006094:	4798      	blx	r3
    if (*currentScreen)
90006096:	f8d8 0000 	ldr.w	r0, [r8]
9000609a:	b110      	cbz	r0, 900060a2 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x8a>
        (*currentScreen)->~Screen();
9000609c:	6803      	ldr	r3, [r0, #0]
9000609e:	681b      	ldr	r3, [r3, #0]
900060a0:	4798      	blx	r3
    if (*currentPresenter)
900060a2:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
900060a6:	b110      	cbz	r0, 900060ae <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x96>
        (*currentPresenter)->~Presenter();
900060a8:	6803      	ldr	r3, [r0, #0]
900060aa:	689b      	ldr	r3, [r3, #8]
900060ac:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
900060ae:	68e0      	ldr	r0, [r4, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
900060b0:	2100      	movs	r1, #0
900060b2:	6803      	ldr	r3, [r0, #0]
        : screenContainer(0), done(false)
900060b4:	468b      	mov	fp, r1
900060b6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
900060b8:	4798      	blx	r3
900060ba:	4b36      	ldr	r3, [pc, #216]	; (90006194 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x17c>)
900060bc:	4605      	mov	r5, r0
900060be:	f8c0 b004 	str.w	fp, [r0, #4]
900060c2:	f880 b008 	strb.w	fp, [r0, #8]
900060c6:	4659      	mov	r1, fp
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
900060c8:	68a0      	ldr	r0, [r4, #8]
900060ca:	602b      	str	r3, [r5, #0]
900060cc:	6803      	ldr	r3, [r0, #0]
900060ce:	6a5b      	ldr	r3, [r3, #36]	; 0x24
900060d0:	4798      	blx	r3
900060d2:	4606      	mov	r6, r0
900060d4:	f002 fe78 	bl	90008dc8 <_ZN22screen_game_selectViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
900060d8:	6860      	ldr	r0, [r4, #4]
900060da:	4659      	mov	r1, fp
900060dc:	6803      	ldr	r3, [r0, #0]
900060de:	6a5b      	ldr	r3, [r3, #36]	; 0x24
900060e0:	4798      	blx	r3
900060e2:	4604      	mov	r4, r0
900060e4:	4631      	mov	r1, r6
900060e6:	f002 fe43 	bl	90008d70 <_ZN27screen_game_selectPresenterC1ER22screen_game_selectView>
    *currentTrans = newTransition;
900060ea:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
900060ee:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
900060f2:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
900060f6:	2c00      	cmp	r4, #0
900060f8:	d02c      	beq.n	90006154 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x13c>
900060fa:	1d23      	adds	r3, r4, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
900060fc:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
90006100:	4630      	mov	r0, r6
90006102:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
90006104:	f8c4 a008 	str.w	sl, [r4, #8]
90006108:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
9000610a:	63f4      	str	r4, [r6, #60]	; 0x3c
9000610c:	4798      	blx	r3
    newPresenter->activate();
9000610e:	6823      	ldr	r3, [r4, #0]
90006110:	4620      	mov	r0, r4
90006112:	681b      	ldr	r3, [r3, #0]
90006114:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
90006116:	4629      	mov	r1, r5
90006118:	4630      	mov	r0, r6
9000611a:	f014 f9ad 	bl	9001a478 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
9000611e:	682b      	ldr	r3, [r5, #0]
90006120:	491d      	ldr	r1, [pc, #116]	; (90006198 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x180>)
90006122:	691a      	ldr	r2, [r3, #16]
90006124:	428a      	cmp	r2, r1
90006126:	d117      	bne.n	90006158 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x140>
    newTransition->invalidate();
90006128:	695b      	ldr	r3, [r3, #20]
9000612a:	4a1c      	ldr	r2, [pc, #112]	; (9000619c <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x184>)
9000612c:	4293      	cmp	r3, r2
9000612e:	d11a      	bne.n	90006166 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x14e>
        Application::getInstance()->invalidate();
90006130:	f012 fc28 	bl	90018984 <_ZN8touchgfx11Application11getInstanceEv>
90006134:	6803      	ldr	r3, [r0, #0]
90006136:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
}
90006138:	b001      	add	sp, #4
9000613a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000613e:	4718      	bx	r3
    if (*currentScreen)
90006140:	f8d8 0000 	ldr.w	r0, [r8]
90006144:	2800      	cmp	r0, #0
90006146:	d1a9      	bne.n	9000609c <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x84>
90006148:	e7b1      	b.n	900060ae <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x96>
    if (*currentPresenter)
9000614a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
9000614e:	2800      	cmp	r0, #0
90006150:	d19e      	bne.n	90006090 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x78>
90006152:	e7ac      	b.n	900060ae <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x96>
    model->bind(newPresenter);
90006154:	4623      	mov	r3, r4
90006156:	e7d1      	b.n	900060fc <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0xe4>
    newTransition->init();
90006158:	4628      	mov	r0, r5
9000615a:	4790      	blx	r2
    newTransition->invalidate();
9000615c:	682b      	ldr	r3, [r5, #0]
9000615e:	4a0f      	ldr	r2, [pc, #60]	; (9000619c <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x184>)
90006160:	695b      	ldr	r3, [r3, #20]
90006162:	4293      	cmp	r3, r2
90006164:	d0e4      	beq.n	90006130 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x118>
90006166:	4628      	mov	r0, r5
90006168:	b001      	add	sp, #4
9000616a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000616e:	4718      	bx	r3
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90006170:	4b0b      	ldr	r3, [pc, #44]	; (900061a0 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x188>)
90006172:	21a3      	movs	r1, #163	; 0xa3
90006174:	4a0b      	ldr	r2, [pc, #44]	; (900061a4 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x18c>)
90006176:	480c      	ldr	r0, [pc, #48]	; (900061a8 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x190>)
90006178:	f023 fd80 	bl	90029c7c <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
9000617c:	4b0b      	ldr	r3, [pc, #44]	; (900061ac <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x194>)
9000617e:	21a5      	movs	r1, #165	; 0xa5
90006180:	4a08      	ldr	r2, [pc, #32]	; (900061a4 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x18c>)
90006182:	4809      	ldr	r0, [pc, #36]	; (900061a8 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x190>)
90006184:	f023 fd7a 	bl	90029c7c <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90006188:	4b09      	ldr	r3, [pc, #36]	; (900061b0 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x198>)
9000618a:	21a4      	movs	r1, #164	; 0xa4
9000618c:	4a05      	ldr	r2, [pc, #20]	; (900061a4 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x18c>)
9000618e:	4806      	ldr	r0, [pc, #24]	; (900061a8 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x190>)
90006190:	f023 fd74 	bl	90029c7c <__assert_func>
90006194:	9002d3ac 	.word	0x9002d3ac
90006198:	90005c99 	.word	0x90005c99
9000619c:	90005d61 	.word	0x90005d61
900061a0:	9002cda0 	.word	0x9002cda0
900061a4:	9002ce30 	.word	0x9002ce30
900061a8:	9002cf4c 	.word	0x9002cf4c
900061ac:	9002d038 	.word	0x9002d038
900061b0:	9002cf94 	.word	0x9002cf94
900061b4:	24023714 	.word	0x24023714
900061b8:	24023710 	.word	0x24023710

900061bc <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoscreen_game_selectScreenSlideTransitionWestImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoscreen_game_selectScreenSlideTransitionWestImpl()
{
900061bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<screen_game_selectView, screen_game_selectPresenter, touchgfx::SlideTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
900061c0:	e9d0 4b55 	ldrd	r4, fp, [r0, #340]	; 0x154
{
900061c4:	4680      	mov	r8, r0
900061c6:	b081      	sub	sp, #4
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
900061c8:	68a0      	ldr	r0, [r4, #8]
900061ca:	6803      	ldr	r3, [r0, #0]
900061cc:	6a1b      	ldr	r3, [r3, #32]
900061ce:	4798      	blx	r3
900061d0:	f5b0 7fca 	cmp.w	r0, #404	; 0x194
900061d4:	f0c0 80e0 	bcc.w	90006398 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x1dc>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
900061d8:	6860      	ldr	r0, [r4, #4]
900061da:	6803      	ldr	r3, [r0, #0]
900061dc:	6a1b      	ldr	r3, [r3, #32]
900061de:	4798      	blx	r3
900061e0:	280f      	cmp	r0, #15
900061e2:	f240 80e5 	bls.w	900063b0 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x1f4>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
900061e6:	68e0      	ldr	r0, [r4, #12]
900061e8:	6803      	ldr	r3, [r0, #0]
900061ea:	6a1b      	ldr	r3, [r3, #32]
900061ec:	4798      	blx	r3
900061ee:	283f      	cmp	r0, #63	; 0x3f
900061f0:	f240 80d8 	bls.w	900063a4 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x1e8>
    if (*currentTrans)
900061f4:	f8df a1f8 	ldr.w	sl, [pc, #504]	; 900063f0 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x234>
    Application::getInstance()->clearAllTimerWidgets();
900061f8:	f012 fbc4 	bl	90018984 <_ZN8touchgfx11Application11getInstanceEv>
900061fc:	3004      	adds	r0, #4
900061fe:	f012 fbe6 	bl	900189ce <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
90006202:	f8da 0000 	ldr.w	r0, [sl]
90006206:	b140      	cbz	r0, 9000621a <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x5e>
        (*currentTrans)->tearDown();
90006208:	6803      	ldr	r3, [r0, #0]
9000620a:	68db      	ldr	r3, [r3, #12]
9000620c:	4798      	blx	r3
    if (*currentTrans)
9000620e:	f8da 0000 	ldr.w	r0, [sl]
90006212:	b110      	cbz	r0, 9000621a <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x5e>
        (*currentTrans)->~Transition();
90006214:	6803      	ldr	r3, [r0, #0]
90006216:	681b      	ldr	r3, [r3, #0]
90006218:	4798      	blx	r3
    if (*currentScreen)
9000621a:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 900063f4 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x238>
9000621e:	f8d9 0000 	ldr.w	r0, [r9]
90006222:	2800      	cmp	r0, #0
90006224:	f000 80a4 	beq.w	90006370 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x1b4>
        (*currentScreen)->tearDownScreen();
90006228:	6803      	ldr	r3, [r0, #0]
9000622a:	695b      	ldr	r3, [r3, #20]
9000622c:	4798      	blx	r3
    if (*currentPresenter)
9000622e:	f8d8 013c 	ldr.w	r0, [r8, #316]	; 0x13c
90006232:	2800      	cmp	r0, #0
90006234:	f000 8081 	beq.w	9000633a <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x17e>
        (*currentPresenter)->deactivate();
90006238:	6803      	ldr	r3, [r0, #0]
9000623a:	685b      	ldr	r3, [r3, #4]
9000623c:	4798      	blx	r3
    if (*currentScreen)
9000623e:	f8d9 0000 	ldr.w	r0, [r9]
90006242:	b110      	cbz	r0, 9000624a <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x8e>
        (*currentScreen)->~Screen();
90006244:	6803      	ldr	r3, [r0, #0]
90006246:	681b      	ldr	r3, [r3, #0]
90006248:	4798      	blx	r3
    if (*currentPresenter)
9000624a:	f8d8 013c 	ldr.w	r0, [r8, #316]	; 0x13c
9000624e:	b110      	cbz	r0, 90006256 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x9a>
        (*currentPresenter)->~Presenter();
90006250:	6803      	ldr	r3, [r0, #0]
90006252:	689b      	ldr	r3, [r3, #8]
90006254:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
90006256:	68e0      	ldr	r0, [r4, #12]
90006258:	2100      	movs	r1, #0
9000625a:	6803      	ldr	r3, [r0, #0]
        : screenContainer(0), done(false)
9000625c:	460f      	mov	r7, r1
9000625e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90006260:	4798      	blx	r3
          relativeValue(0)
90006262:	4b56      	ldr	r3, [pc, #344]	; (900063bc <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x200>)
90006264:	4606      	mov	r6, r0
90006266:	4605      	mov	r5, r0
90006268:	6047      	str	r7, [r0, #4]
9000626a:	7207      	strb	r7, [r0, #8]
9000626c:	f846 3b0c 	str.w	r3, [r6], #12
          snapshot(),
90006270:	4630      	mov	r0, r6
90006272:	f00e ff7f 	bl	90015174 <_ZN8touchgfx14SnapshotWidgetC1Ev>
        if (!HAL::USE_ANIMATION_STORAGE)
90006276:	4b52      	ldr	r3, [pc, #328]	; (900063c0 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x204>)
          animationSteps(transitionSteps),
90006278:	2214      	movs	r2, #20
          relativeValue(0)
9000627a:	87af      	strh	r7, [r5, #60]	; 0x3c
        if (!HAL::USE_ANIMATION_STORAGE)
9000627c:	781b      	ldrb	r3, [r3, #0]
          animationSteps(transitionSteps),
9000627e:	872a      	strh	r2, [r5, #56]	; 0x38
        if (!HAL::USE_ANIMATION_STORAGE)
90006280:	2b00      	cmp	r3, #0
90006282:	d166      	bne.n	90006352 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x196>
            done = true;
90006284:	2301      	movs	r3, #1
90006286:	722b      	strb	r3, [r5, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
90006288:	68a0      	ldr	r0, [r4, #8]
9000628a:	2100      	movs	r1, #0
9000628c:	6803      	ldr	r3, [r0, #0]
9000628e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90006290:	4798      	blx	r3
90006292:	4607      	mov	r7, r0
90006294:	f002 fd98 	bl	90008dc8 <_ZN22screen_game_selectViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
90006298:	6860      	ldr	r0, [r4, #4]
9000629a:	2100      	movs	r1, #0
9000629c:	6803      	ldr	r3, [r0, #0]
9000629e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
900062a0:	4798      	blx	r3
900062a2:	4604      	mov	r4, r0
900062a4:	4639      	mov	r1, r7
900062a6:	f002 fd63 	bl	90008d70 <_ZN27screen_game_selectPresenterC1ER22screen_game_selectView>
    *currentTrans = newTransition;
900062aa:	f8ca 5000 	str.w	r5, [sl]
    *currentPresenter = newPresenter;
900062ae:	f8c8 413c 	str.w	r4, [r8, #316]	; 0x13c
    *currentScreen = newScreen;
900062b2:	f8c9 7000 	str.w	r7, [r9]
    model->bind(newPresenter);
900062b6:	2c00      	cmp	r4, #0
900062b8:	d060      	beq.n	9000637c <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x1c0>
900062ba:	1d23      	adds	r3, r4, #4
900062bc:	f8cb 3000 	str.w	r3, [fp]
    newScreen->setupScreen();
900062c0:	4638      	mov	r0, r7
900062c2:	683b      	ldr	r3, [r7, #0]
900062c4:	f8c4 b008 	str.w	fp, [r4, #8]
900062c8:	68db      	ldr	r3, [r3, #12]
900062ca:	63fc      	str	r4, [r7, #60]	; 0x3c
900062cc:	4798      	blx	r3
    newPresenter->activate();
900062ce:	6823      	ldr	r3, [r4, #0]
900062d0:	4620      	mov	r0, r4
900062d2:	681b      	ldr	r3, [r3, #0]
900062d4:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
900062d6:	4629      	mov	r1, r5
900062d8:	4638      	mov	r0, r7
900062da:	f014 f8cd 	bl	9001a478 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
900062de:	682b      	ldr	r3, [r5, #0]
900062e0:	4938      	ldr	r1, [pc, #224]	; (900063c4 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x208>)
900062e2:	691a      	ldr	r2, [r3, #16]
900062e4:	428a      	cmp	r2, r1
900062e6:	d153      	bne.n	90006390 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x1d4>
        if (done)
900062e8:	7a2a      	ldrb	r2, [r5, #8]
900062ea:	b9d2      	cbnz	r2, 90006322 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x166>
        Drawable* d = screenContainer->getFirstChild();
900062ec:	6868      	ldr	r0, [r5, #4]
900062ee:	4a36      	ldr	r2, [pc, #216]	; (900063c8 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x20c>)
900062f0:	6803      	ldr	r3, [r0, #0]
900062f2:	69db      	ldr	r3, [r3, #28]
900062f4:	4293      	cmp	r3, r2
900062f6:	d143      	bne.n	90006380 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x1c4>
900062f8:	6a84      	ldr	r4, [r0, #40]	; 0x28
        while (d)
900062fa:	b164      	cbz	r4, 90006316 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x15a>
900062fc:	8f6a      	ldrh	r2, [r5, #58]	; 0x3a
900062fe:	4f33      	ldr	r7, [pc, #204]	; (900063cc <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x210>)
                d->setX(d->getX() - targetValue);
90006300:	6823      	ldr	r3, [r4, #0]
90006302:	88a1      	ldrh	r1, [r4, #4]
90006304:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90006306:	1a89      	subs	r1, r1, r2
90006308:	42bb      	cmp	r3, r7
9000630a:	b209      	sxth	r1, r1
9000630c:	d11a      	bne.n	90006344 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x188>
        rect.x = x;
9000630e:	80a1      	strh	r1, [r4, #4]
        return nextSibling;
90006310:	69a4      	ldr	r4, [r4, #24]
        while (d)
90006312:	2c00      	cmp	r4, #0
90006314:	d1f4      	bne.n	90006300 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x144>
        screenContainer->add(snapshot);
90006316:	6868      	ldr	r0, [r5, #4]
90006318:	4631      	mov	r1, r6
9000631a:	6803      	ldr	r3, [r0, #0]
9000631c:	6e1b      	ldr	r3, [r3, #96]	; 0x60
9000631e:	4798      	blx	r3
    newTransition->invalidate();
90006320:	682b      	ldr	r3, [r5, #0]
90006322:	695b      	ldr	r3, [r3, #20]
90006324:	4a2a      	ldr	r2, [pc, #168]	; (900063d0 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x214>)
90006326:	4293      	cmp	r3, r2
90006328:	d12d      	bne.n	90006386 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x1ca>
        Application::getInstance()->invalidate();
9000632a:	f012 fb2b 	bl	90018984 <_ZN8touchgfx11Application11getInstanceEv>
9000632e:	6803      	ldr	r3, [r0, #0]
90006330:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
}
90006332:	b001      	add	sp, #4
90006334:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90006338:	4718      	bx	r3
    if (*currentScreen)
9000633a:	f8d9 0000 	ldr.w	r0, [r9]
9000633e:	2800      	cmp	r0, #0
90006340:	d180      	bne.n	90006244 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x88>
90006342:	e788      	b.n	90006256 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x9a>
                d->setX(d->getX() - targetValue);
90006344:	4620      	mov	r0, r4
90006346:	4798      	blx	r3
90006348:	69a4      	ldr	r4, [r4, #24]
        while (d)
9000634a:	2c00      	cmp	r4, #0
9000634c:	d0e3      	beq.n	90006316 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x15a>
9000634e:	8f6a      	ldrh	r2, [r5, #58]	; 0x3a
90006350:	e7d6      	b.n	90006300 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x144>
        snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
90006352:	4b20      	ldr	r3, [pc, #128]	; (900063d4 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x218>)
        snapshot.makeSnapshot();
90006354:	4630      	mov	r0, r6
        rect.x = x;
90006356:	612f      	str	r7, [r5, #16]
        snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
90006358:	f9b3 3000 	ldrsh.w	r3, [r3]
9000635c:	4f1e      	ldr	r7, [pc, #120]	; (900063d8 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x21c>)
        rect.height = height;
9000635e:	82eb      	strh	r3, [r5, #22]
90006360:	f9b7 3000 	ldrsh.w	r3, [r7]
        rect.width = width;
90006364:	82ab      	strh	r3, [r5, #20]
        snapshot.makeSnapshot();
90006366:	f00e fe80 	bl	9001506a <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>
            targetValue = HAL::DISPLAY_WIDTH;
9000636a:	883b      	ldrh	r3, [r7, #0]
9000636c:	876b      	strh	r3, [r5, #58]	; 0x3a
            break;
9000636e:	e78b      	b.n	90006288 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0xcc>
    if (*currentPresenter)
90006370:	f8d8 013c 	ldr.w	r0, [r8, #316]	; 0x13c
90006374:	2800      	cmp	r0, #0
90006376:	f47f af5f 	bne.w	90006238 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x7c>
9000637a:	e76c      	b.n	90006256 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x9a>
    model->bind(newPresenter);
9000637c:	4623      	mov	r3, r4
9000637e:	e79d      	b.n	900062bc <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x100>
        Drawable* d = screenContainer->getFirstChild();
90006380:	4798      	blx	r3
90006382:	4604      	mov	r4, r0
90006384:	e7b9      	b.n	900062fa <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x13e>
    newTransition->invalidate();
90006386:	4628      	mov	r0, r5
90006388:	b001      	add	sp, #4
9000638a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000638e:	4718      	bx	r3
    newTransition->init();
90006390:	4628      	mov	r0, r5
90006392:	4790      	blx	r2
    newTransition->invalidate();
90006394:	682b      	ldr	r3, [r5, #0]
90006396:	e7c4      	b.n	90006322 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x166>
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90006398:	4b10      	ldr	r3, [pc, #64]	; (900063dc <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x220>)
9000639a:	21a3      	movs	r1, #163	; 0xa3
9000639c:	4a10      	ldr	r2, [pc, #64]	; (900063e0 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x224>)
9000639e:	4811      	ldr	r0, [pc, #68]	; (900063e4 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x228>)
900063a0:	f023 fc6c 	bl	90029c7c <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
900063a4:	4b10      	ldr	r3, [pc, #64]	; (900063e8 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x22c>)
900063a6:	21a5      	movs	r1, #165	; 0xa5
900063a8:	4a0d      	ldr	r2, [pc, #52]	; (900063e0 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x224>)
900063aa:	480e      	ldr	r0, [pc, #56]	; (900063e4 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x228>)
900063ac:	f023 fc66 	bl	90029c7c <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
900063b0:	4b0e      	ldr	r3, [pc, #56]	; (900063ec <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x230>)
900063b2:	21a4      	movs	r1, #164	; 0xa4
900063b4:	4a0a      	ldr	r2, [pc, #40]	; (900063e0 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x224>)
900063b6:	480b      	ldr	r0, [pc, #44]	; (900063e4 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x228>)
900063b8:	f023 fc60 	bl	90029c7c <__assert_func>
900063bc:	9002d3d0 	.word	0x9002d3d0
900063c0:	240236cb 	.word	0x240236cb
900063c4:	90005f41 	.word	0x90005f41
900063c8:	90005c91 	.word	0x90005c91
900063cc:	9000452d 	.word	0x9000452d
900063d0:	90005d61 	.word	0x90005d61
900063d4:	240236c2 	.word	0x240236c2
900063d8:	240236c0 	.word	0x240236c0
900063dc:	9002cda0 	.word	0x9002cda0
900063e0:	9002d0dc 	.word	0x9002d0dc
900063e4:	9002cf4c 	.word	0x9002cf4c
900063e8:	9002d038 	.word	0x9002d038
900063ec:	9002cf94 	.word	0x9002cf94
900063f0:	24023714 	.word	0x24023714
900063f4:	24023710 	.word	0x24023710

900063f8 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv>:
{
900063f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<screen_asteroidsView, screen_asteroidsPresenter, touchgfx::SlideTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
900063fc:	e9d0 4b55 	ldrd	r4, fp, [r0, #340]	; 0x154
{
90006400:	4680      	mov	r8, r0
90006402:	b081      	sub	sp, #4
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90006404:	68a0      	ldr	r0, [r4, #8]
90006406:	6803      	ldr	r3, [r0, #0]
90006408:	6a1b      	ldr	r3, [r3, #32]
9000640a:	4798      	blx	r3
9000640c:	f242 43c3 	movw	r3, #9411	; 0x24c3
90006410:	4298      	cmp	r0, r3
90006412:	f240 80e1 	bls.w	900065d8 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x1e0>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90006416:	6860      	ldr	r0, [r4, #4]
90006418:	6803      	ldr	r3, [r0, #0]
9000641a:	6a1b      	ldr	r3, [r3, #32]
9000641c:	4798      	blx	r3
9000641e:	281f      	cmp	r0, #31
90006420:	f240 80e6 	bls.w	900065f0 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x1f8>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90006424:	68e0      	ldr	r0, [r4, #12]
90006426:	6803      	ldr	r3, [r0, #0]
90006428:	6a1b      	ldr	r3, [r3, #32]
9000642a:	4798      	blx	r3
9000642c:	283f      	cmp	r0, #63	; 0x3f
9000642e:	f240 80d9 	bls.w	900065e4 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x1ec>
    if (*currentTrans)
90006432:	f8df a1fc 	ldr.w	sl, [pc, #508]	; 90006630 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x238>
    Application::getInstance()->clearAllTimerWidgets();
90006436:	f012 faa5 	bl	90018984 <_ZN8touchgfx11Application11getInstanceEv>
9000643a:	3004      	adds	r0, #4
9000643c:	f012 fac7 	bl	900189ce <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
90006440:	f8da 0000 	ldr.w	r0, [sl]
90006444:	b140      	cbz	r0, 90006458 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x60>
        (*currentTrans)->tearDown();
90006446:	6803      	ldr	r3, [r0, #0]
90006448:	68db      	ldr	r3, [r3, #12]
9000644a:	4798      	blx	r3
    if (*currentTrans)
9000644c:	f8da 0000 	ldr.w	r0, [sl]
90006450:	b110      	cbz	r0, 90006458 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x60>
        (*currentTrans)->~Transition();
90006452:	6803      	ldr	r3, [r0, #0]
90006454:	681b      	ldr	r3, [r3, #0]
90006456:	4798      	blx	r3
    if (*currentScreen)
90006458:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 90006634 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x23c>
9000645c:	f8d9 0000 	ldr.w	r0, [r9]
90006460:	2800      	cmp	r0, #0
90006462:	f000 80a5 	beq.w	900065b0 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x1b8>
        (*currentScreen)->tearDownScreen();
90006466:	6803      	ldr	r3, [r0, #0]
90006468:	695b      	ldr	r3, [r3, #20]
9000646a:	4798      	blx	r3
    if (*currentPresenter)
9000646c:	f8d8 013c 	ldr.w	r0, [r8, #316]	; 0x13c
90006470:	2800      	cmp	r0, #0
90006472:	f000 8081 	beq.w	90006578 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x180>
        (*currentPresenter)->deactivate();
90006476:	6803      	ldr	r3, [r0, #0]
90006478:	685b      	ldr	r3, [r3, #4]
9000647a:	4798      	blx	r3
    if (*currentScreen)
9000647c:	f8d9 0000 	ldr.w	r0, [r9]
90006480:	b110      	cbz	r0, 90006488 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x90>
        (*currentScreen)->~Screen();
90006482:	6803      	ldr	r3, [r0, #0]
90006484:	681b      	ldr	r3, [r3, #0]
90006486:	4798      	blx	r3
    if (*currentPresenter)
90006488:	f8d8 013c 	ldr.w	r0, [r8, #316]	; 0x13c
9000648c:	b110      	cbz	r0, 90006494 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x9c>
        (*currentPresenter)->~Presenter();
9000648e:	6803      	ldr	r3, [r0, #0]
90006490:	689b      	ldr	r3, [r3, #8]
90006492:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
90006494:	68e0      	ldr	r0, [r4, #12]
90006496:	2100      	movs	r1, #0
90006498:	6803      	ldr	r3, [r0, #0]
        : screenContainer(0), done(false)
9000649a:	460f      	mov	r7, r1
9000649c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
9000649e:	4798      	blx	r3
          relativeValue(0)
900064a0:	4b56      	ldr	r3, [pc, #344]	; (900065fc <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x204>)
900064a2:	4606      	mov	r6, r0
900064a4:	4605      	mov	r5, r0
900064a6:	6047      	str	r7, [r0, #4]
900064a8:	7207      	strb	r7, [r0, #8]
900064aa:	f846 3b0c 	str.w	r3, [r6], #12
          snapshot(),
900064ae:	4630      	mov	r0, r6
900064b0:	f00e fe60 	bl	90015174 <_ZN8touchgfx14SnapshotWidgetC1Ev>
        if (!HAL::USE_ANIMATION_STORAGE)
900064b4:	4b52      	ldr	r3, [pc, #328]	; (90006600 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x208>)
          animationSteps(transitionSteps),
900064b6:	2214      	movs	r2, #20
          relativeValue(0)
900064b8:	87af      	strh	r7, [r5, #60]	; 0x3c
        if (!HAL::USE_ANIMATION_STORAGE)
900064ba:	781b      	ldrb	r3, [r3, #0]
          animationSteps(transitionSteps),
900064bc:	872a      	strh	r2, [r5, #56]	; 0x38
        if (!HAL::USE_ANIMATION_STORAGE)
900064be:	2b00      	cmp	r3, #0
900064c0:	d166      	bne.n	90006590 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x198>
            done = true;
900064c2:	2301      	movs	r3, #1
900064c4:	722b      	strb	r3, [r5, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
900064c6:	68a0      	ldr	r0, [r4, #8]
900064c8:	2100      	movs	r1, #0
900064ca:	6803      	ldr	r3, [r0, #0]
900064cc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
900064ce:	4798      	blx	r3
900064d0:	4607      	mov	r7, r0
900064d2:	f002 fab1 	bl	90008a38 <_ZN20screen_asteroidsViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
900064d6:	6860      	ldr	r0, [r4, #4]
900064d8:	2100      	movs	r1, #0
900064da:	6803      	ldr	r3, [r0, #0]
900064dc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
900064de:	4798      	blx	r3
900064e0:	4604      	mov	r4, r0
900064e2:	4639      	mov	r1, r7
900064e4:	f002 f83e 	bl	90008564 <_ZN25screen_asteroidsPresenterC1ER20screen_asteroidsView>
    *currentTrans = newTransition;
900064e8:	f8ca 5000 	str.w	r5, [sl]
    *currentPresenter = newPresenter;
900064ec:	f8c8 413c 	str.w	r4, [r8, #316]	; 0x13c
    *currentScreen = newScreen;
900064f0:	f8c9 7000 	str.w	r7, [r9]
    model->bind(newPresenter);
900064f4:	2c00      	cmp	r4, #0
900064f6:	d061      	beq.n	900065bc <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x1c4>
900064f8:	1d23      	adds	r3, r4, #4
900064fa:	f8cb 3000 	str.w	r3, [fp]
    newScreen->setupScreen();
900064fe:	4638      	mov	r0, r7
90006500:	683b      	ldr	r3, [r7, #0]
90006502:	f8c4 b008 	str.w	fp, [r4, #8]
90006506:	68db      	ldr	r3, [r3, #12]
90006508:	63fc      	str	r4, [r7, #60]	; 0x3c
9000650a:	4798      	blx	r3
    newPresenter->activate();
9000650c:	6823      	ldr	r3, [r4, #0]
9000650e:	4620      	mov	r0, r4
90006510:	681b      	ldr	r3, [r3, #0]
90006512:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
90006514:	4629      	mov	r1, r5
90006516:	4638      	mov	r0, r7
90006518:	f013 ffae 	bl	9001a478 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
9000651c:	682b      	ldr	r3, [r5, #0]
9000651e:	4939      	ldr	r1, [pc, #228]	; (90006604 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x20c>)
90006520:	691a      	ldr	r2, [r3, #16]
90006522:	428a      	cmp	r2, r1
90006524:	d154      	bne.n	900065d0 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x1d8>
        if (done)
90006526:	7a2a      	ldrb	r2, [r5, #8]
90006528:	b9d2      	cbnz	r2, 90006560 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x168>
        Drawable* d = screenContainer->getFirstChild();
9000652a:	6868      	ldr	r0, [r5, #4]
9000652c:	4a36      	ldr	r2, [pc, #216]	; (90006608 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x210>)
9000652e:	6803      	ldr	r3, [r0, #0]
90006530:	69db      	ldr	r3, [r3, #28]
90006532:	4293      	cmp	r3, r2
90006534:	d144      	bne.n	900065c0 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x1c8>
90006536:	6a84      	ldr	r4, [r0, #40]	; 0x28
        while (d)
90006538:	b164      	cbz	r4, 90006554 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x15c>
9000653a:	8f6a      	ldrh	r2, [r5, #58]	; 0x3a
9000653c:	4f33      	ldr	r7, [pc, #204]	; (9000660c <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x214>)
                d->setX(d->getX() - targetValue);
9000653e:	6823      	ldr	r3, [r4, #0]
90006540:	88a1      	ldrh	r1, [r4, #4]
90006542:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90006544:	1a89      	subs	r1, r1, r2
90006546:	42bb      	cmp	r3, r7
90006548:	b209      	sxth	r1, r1
9000654a:	d11a      	bne.n	90006582 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x18a>
        rect.x = x;
9000654c:	80a1      	strh	r1, [r4, #4]
        return nextSibling;
9000654e:	69a4      	ldr	r4, [r4, #24]
        while (d)
90006550:	2c00      	cmp	r4, #0
90006552:	d1f4      	bne.n	9000653e <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x146>
        screenContainer->add(snapshot);
90006554:	6868      	ldr	r0, [r5, #4]
90006556:	4631      	mov	r1, r6
90006558:	6803      	ldr	r3, [r0, #0]
9000655a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
9000655c:	4798      	blx	r3
    newTransition->invalidate();
9000655e:	682b      	ldr	r3, [r5, #0]
90006560:	695b      	ldr	r3, [r3, #20]
90006562:	4a2b      	ldr	r2, [pc, #172]	; (90006610 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x218>)
90006564:	4293      	cmp	r3, r2
90006566:	d12e      	bne.n	900065c6 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x1ce>
        Application::getInstance()->invalidate();
90006568:	f012 fa0c 	bl	90018984 <_ZN8touchgfx11Application11getInstanceEv>
9000656c:	6803      	ldr	r3, [r0, #0]
9000656e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
}
90006570:	b001      	add	sp, #4
90006572:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90006576:	4718      	bx	r3
    if (*currentScreen)
90006578:	f8d9 0000 	ldr.w	r0, [r9]
9000657c:	2800      	cmp	r0, #0
9000657e:	d180      	bne.n	90006482 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x8a>
90006580:	e788      	b.n	90006494 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x9c>
                d->setX(d->getX() - targetValue);
90006582:	4620      	mov	r0, r4
90006584:	4798      	blx	r3
90006586:	69a4      	ldr	r4, [r4, #24]
        while (d)
90006588:	2c00      	cmp	r4, #0
9000658a:	d0e3      	beq.n	90006554 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x15c>
9000658c:	8f6a      	ldrh	r2, [r5, #58]	; 0x3a
9000658e:	e7d6      	b.n	9000653e <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x146>
        snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
90006590:	4b20      	ldr	r3, [pc, #128]	; (90006614 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x21c>)
        snapshot.makeSnapshot();
90006592:	4630      	mov	r0, r6
        rect.x = x;
90006594:	612f      	str	r7, [r5, #16]
        snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
90006596:	f9b3 3000 	ldrsh.w	r3, [r3]
9000659a:	4f1f      	ldr	r7, [pc, #124]	; (90006618 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x220>)
        rect.height = height;
9000659c:	82eb      	strh	r3, [r5, #22]
9000659e:	f9b7 3000 	ldrsh.w	r3, [r7]
        rect.width = width;
900065a2:	82ab      	strh	r3, [r5, #20]
        snapshot.makeSnapshot();
900065a4:	f00e fd61 	bl	9001506a <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>
            targetValue = -HAL::DISPLAY_WIDTH;
900065a8:	883b      	ldrh	r3, [r7, #0]
900065aa:	425b      	negs	r3, r3
900065ac:	876b      	strh	r3, [r5, #58]	; 0x3a
            break;
900065ae:	e78a      	b.n	900064c6 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0xce>
    if (*currentPresenter)
900065b0:	f8d8 013c 	ldr.w	r0, [r8, #316]	; 0x13c
900065b4:	2800      	cmp	r0, #0
900065b6:	f47f af5e 	bne.w	90006476 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x7e>
900065ba:	e76b      	b.n	90006494 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x9c>
    model->bind(newPresenter);
900065bc:	4623      	mov	r3, r4
900065be:	e79c      	b.n	900064fa <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x102>
        Drawable* d = screenContainer->getFirstChild();
900065c0:	4798      	blx	r3
900065c2:	4604      	mov	r4, r0
900065c4:	e7b8      	b.n	90006538 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x140>
    newTransition->invalidate();
900065c6:	4628      	mov	r0, r5
900065c8:	b001      	add	sp, #4
900065ca:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900065ce:	4718      	bx	r3
    newTransition->init();
900065d0:	4628      	mov	r0, r5
900065d2:	4790      	blx	r2
    newTransition->invalidate();
900065d4:	682b      	ldr	r3, [r5, #0]
900065d6:	e7c3      	b.n	90006560 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x168>
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
900065d8:	4b10      	ldr	r3, [pc, #64]	; (9000661c <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x224>)
900065da:	21a3      	movs	r1, #163	; 0xa3
900065dc:	4a10      	ldr	r2, [pc, #64]	; (90006620 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x228>)
900065de:	4811      	ldr	r0, [pc, #68]	; (90006624 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x22c>)
900065e0:	f023 fb4c 	bl	90029c7c <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
900065e4:	4b10      	ldr	r3, [pc, #64]	; (90006628 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x230>)
900065e6:	21a5      	movs	r1, #165	; 0xa5
900065e8:	4a0d      	ldr	r2, [pc, #52]	; (90006620 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x228>)
900065ea:	480e      	ldr	r0, [pc, #56]	; (90006624 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x22c>)
900065ec:	f023 fb46 	bl	90029c7c <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
900065f0:	4b0e      	ldr	r3, [pc, #56]	; (9000662c <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x234>)
900065f2:	21a4      	movs	r1, #164	; 0xa4
900065f4:	4a0a      	ldr	r2, [pc, #40]	; (90006620 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x228>)
900065f6:	480b      	ldr	r0, [pc, #44]	; (90006624 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x22c>)
900065f8:	f023 fb40 	bl	90029c7c <__assert_func>
900065fc:	9002d3f4 	.word	0x9002d3f4
90006600:	240236cb 	.word	0x240236cb
90006604:	90005ee1 	.word	0x90005ee1
90006608:	90005c91 	.word	0x90005c91
9000660c:	9000452d 	.word	0x9000452d
90006610:	90005d61 	.word	0x90005d61
90006614:	240236c2 	.word	0x240236c2
90006618:	240236c0 	.word	0x240236c0
9000661c:	9002cda0 	.word	0x9002cda0
90006620:	9002d20c 	.word	0x9002d20c
90006624:	9002cf4c 	.word	0x9002cf4c
90006628:	9002d038 	.word	0x9002d038
9000662c:	9002cf94 	.word	0x9002cf94
90006630:	24023714 	.word	0x24023714
90006634:	24023710 	.word	0x24023710

90006638 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
90006638:	b570      	push	{r4, r5, r6, lr}
9000663a:	4604      	mov	r4, r0
9000663c:	4615      	mov	r5, r2
9000663e:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
90006640:	f012 fa66 	bl	90018b10 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
90006644:	4a1d      	ldr	r2, [pc, #116]	; (900066bc <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x84>)
        : currentPresenter(0),
90006646:	2300      	movs	r3, #0
      frontendHeap(heap),
90006648:	f8c4 5154 	str.w	r5, [r4, #340]	; 0x154
        instance = this;
9000664c:	6014      	str	r4, [r2, #0]
        return instance;
9000664e:	4d1c      	ldr	r5, [pc, #112]	; (900066c0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x88>)
      model(m)
90006650:	4a1c      	ldr	r2, [pc, #112]	; (900066c4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x8c>)
90006652:	6828      	ldr	r0, [r5, #0]
90006654:	6022      	str	r2, [r4, #0]
        : pobject(0), pmemfun(0)
90006656:	4a1c      	ldr	r2, [pc, #112]	; (900066c8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x90>)
90006658:	491c      	ldr	r1, [pc, #112]	; (900066cc <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x94>)
9000665a:	f8c4 2144 	str.w	r2, [r4, #324]	; 0x144
9000665e:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
90006662:	f8c4 6158 	str.w	r6, [r4, #344]	; 0x158
90006666:	e9c4 3353 	strd	r3, r3, [r4, #332]	; 0x14c
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
9000666a:	6802      	ldr	r2, [r0, #0]
9000666c:	6892      	ldr	r2, [r2, #8]
9000666e:	428a      	cmp	r2, r1
          pendingScreenTransitionCallback(0)
90006670:	e9c4 334f 	strd	r3, r3, [r4, #316]	; 0x13c
90006674:	d11f      	bne.n	900066b6 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x7e>
        requestedOrientation = orientation;
90006676:	f44f 7380 	mov.w	r3, #256	; 0x100
9000667a:	f8a0 3078 	strh.w	r3, [r0, #120]	; 0x78
    touchgfx::Texts::setLanguage(GB);
9000667e:	2000      	movs	r0, #0
90006680:	f000 fa04 	bl	90006a8c <_ZN8touchgfx5Texts11setLanguageEt>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
90006684:	682b      	ldr	r3, [r5, #0]
90006686:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
9000668a:	b192      	cbz	r2, 900066b2 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x7a>
9000668c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
9000668e:	b180      	cbz	r0, 900066b2 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x7a>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
90006690:	f01b fbad 	bl	90021dee <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
90006694:	682b      	ldr	r3, [r5, #0]
90006696:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
9000669a:	b12a      	cbz	r2, 900066a8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x70>
9000669c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
9000669e:	b118      	cbz	r0, 900066a8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x70>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
900066a0:	f01b fc20 	bl	90021ee4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
900066a4:	4620      	mov	r0, r4
900066a6:	bd70      	pop	{r4, r5, r6, pc}
        return instance->lcdRef;
900066a8:	6898      	ldr	r0, [r3, #8]
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
900066aa:	f01b fc1b 	bl	90021ee4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
900066ae:	4620      	mov	r0, r4
900066b0:	bd70      	pop	{r4, r5, r6, pc}
900066b2:	6898      	ldr	r0, [r3, #8]
900066b4:	e7ec      	b.n	90006690 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
900066b6:	4619      	mov	r1, r3
900066b8:	4790      	blx	r2
900066ba:	e7e0      	b.n	9000667e <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x46>
900066bc:	24023720 	.word	0x24023720
900066c0:	240236cc 	.word	0x240236cc
900066c4:	9002d358 	.word	0x9002d358
900066c8:	9002d340 	.word	0x9002d340
900066cc:	9000279d 	.word	0x9000279d

900066d0 <_ZN23FrontendApplicationBase45gotoscreen_asteroidsScreenSlideTransitionEastEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
900066d0:	4905      	ldr	r1, [pc, #20]	; (900066e8 <_ZN23FrontendApplicationBase45gotoscreen_asteroidsScreenSlideTransitionEastEv+0x18>)
900066d2:	2200      	movs	r2, #0
    pendingScreenTransitionCallback = &transitionCallback;
900066d4:	f500 73a2 	add.w	r3, r0, #324	; 0x144
900066d8:	f8c0 2150 	str.w	r2, [r0, #336]	; 0x150
900066dc:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
900066e0:	e9c0 0152 	strd	r0, r1, [r0, #328]	; 0x148
}
900066e4:	4770      	bx	lr
900066e6:	bf00      	nop
900066e8:	900063f9 	.word	0x900063f9

900066ec <_ZN23FrontendApplicationBase40gotoscreen_game_selectScreenNoTransitionEv>:
900066ec:	4905      	ldr	r1, [pc, #20]	; (90006704 <_ZN23FrontendApplicationBase40gotoscreen_game_selectScreenNoTransitionEv+0x18>)
900066ee:	2200      	movs	r2, #0
    pendingScreenTransitionCallback = &transitionCallback;
900066f0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
900066f4:	f8c0 2150 	str.w	r2, [r0, #336]	; 0x150
900066f8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
900066fc:	e9c0 0152 	strd	r0, r1, [r0, #328]	; 0x148
}
90006700:	4770      	bx	lr
90006702:	bf00      	nop
90006704:	90006019 	.word	0x90006019

90006708 <_ZN23FrontendApplicationBase47gotoscreen_game_selectScreenSlideTransitionWestEv>:
90006708:	4905      	ldr	r1, [pc, #20]	; (90006720 <_ZN23FrontendApplicationBase47gotoscreen_game_selectScreenSlideTransitionWestEv+0x18>)
9000670a:	2200      	movs	r2, #0
    pendingScreenTransitionCallback = &transitionCallback;
9000670c:	f500 73a2 	add.w	r3, r0, #324	; 0x144
90006710:	f8c0 2150 	str.w	r2, [r0, #336]	; 0x150
90006714:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
90006718:	e9c0 0152 	strd	r0, r1, [r0, #328]	; 0x148
}
9000671c:	4770      	bx	lr
9000671e:	bf00      	nop
90006720:	900061bd 	.word	0x900061bd

90006724 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
90006724:	6a40      	ldr	r0, [r0, #36]	; 0x24
90006726:	4770      	bx	lr

90006728 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
90006728:	6a80      	ldr	r0, [r0, #40]	; 0x28
9000672a:	4770      	bx	lr

9000672c <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
9000672c:	4770      	bx	lr
9000672e:	bf00      	nop

90006730 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
90006730:	888b      	ldrh	r3, [r1, #4]
90006732:	69c0      	ldr	r0, [r0, #28]
90006734:	0adb      	lsrs	r3, r3, #11
90006736:	680a      	ldr	r2, [r1, #0]
90006738:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
9000673c:	4410      	add	r0, r2
9000673e:	4770      	bx	lr

90006740 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
    if (!glyph || glyph->kerningTableSize == 0)
90006740:	b1da      	cbz	r2, 9000677a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x3a>
{
90006742:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
90006744:	7b14      	ldrb	r4, [r2, #12]
90006746:	b1b4      	cbz	r4, 90006776 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
90006748:	f892 c00d 	ldrb.w	ip, [r2, #13]
9000674c:	f892 e00b 	ldrb.w	lr, [r2, #11]
90006750:	ea4f 220c 	mov.w	r2, ip, lsl #8
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
90006754:	6a03      	ldr	r3, [r0, #32]
90006756:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
9000675a:	ea4e 0202 	orr.w	r2, lr, r2
9000675e:	eb03 0382 	add.w	r3, r3, r2, lsl #2
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
90006762:	eb03 0084 	add.w	r0, r3, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
90006766:	881a      	ldrh	r2, [r3, #0]
90006768:	428a      	cmp	r2, r1
9000676a:	d008      	beq.n	9000677e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x3e>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
9000676c:	f103 0304 	add.w	r3, r3, #4
        {
            return kerndata->distance;
        }
        if (prevChar < kerndata->unicodePrevChar)
90006770:	d801      	bhi.n	90006776 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
90006772:	4283      	cmp	r3, r0
90006774:	d1f7      	bne.n	90006766 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
90006776:	2000      	movs	r0, #0
        {
            break;
        }
    }
    return 0;
}
90006778:	bd10      	pop	{r4, pc}
        return 0;
9000677a:	4610      	mov	r0, r2
}
9000677c:	4770      	bx	lr
            return kerndata->distance;
9000677e:	f993 0002 	ldrsb.w	r0, [r3, #2]
}
90006782:	bd10      	pop	{r4, pc}

90006784 <_ZN8touchgfx13GeneratedFontD0Ev>:
90006784:	b510      	push	{r4, lr}
90006786:	4604      	mov	r4, r0
90006788:	212c      	movs	r1, #44	; 0x2c
9000678a:	f023 fa48 	bl	90029c1e <_ZdlPvj>
9000678e:	4620      	mov	r0, r4
90006790:	bd10      	pop	{r4, pc}
90006792:	bf00      	nop

90006794 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90006794:	b530      	push	{r4, r5, lr}
90006796:	b08b      	sub	sp, #44	; 0x2c
90006798:	4604      	mov	r4, r0
9000679a:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
      arabicTable(formsTable)
9000679e:	9500      	str	r5, [sp, #0]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
900067a0:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
      arabicTable(formsTable)
900067a4:	9501      	str	r5, [sp, #4]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
900067a6:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
      arabicTable(formsTable)
900067aa:	9502      	str	r5, [sp, #8]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
900067ac:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
      arabicTable(formsTable)
900067b0:	9503      	str	r5, [sp, #12]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
900067b2:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
      arabicTable(formsTable)
900067b6:	9504      	str	r5, [sp, #16]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
900067b8:	f89d 504c 	ldrb.w	r5, [sp, #76]	; 0x4c
      arabicTable(formsTable)
900067bc:	9505      	str	r5, [sp, #20]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
900067be:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
      arabicTable(formsTable)
900067c2:	9506      	str	r5, [sp, #24]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
900067c4:	f8bd 505c 	ldrh.w	r5, [sp, #92]	; 0x5c
      arabicTable(formsTable)
900067c8:	9507      	str	r5, [sp, #28]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
900067ca:	f8bd 5060 	ldrh.w	r5, [sp, #96]	; 0x60
      arabicTable(formsTable)
900067ce:	9508      	str	r5, [sp, #32]
900067d0:	f013 f9fe 	bl	90019bd0 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
      glyphData(glyphDataInternalFlash),
900067d4:	9b15      	ldr	r3, [sp, #84]	; 0x54
}
900067d6:	4620      	mov	r0, r4
      glyphData(glyphDataInternalFlash),
900067d8:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
900067da:	9b16      	ldr	r3, [sp, #88]	; 0x58
900067dc:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
900067de:	9b19      	ldr	r3, [sp, #100]	; 0x64
900067e0:	6263      	str	r3, [r4, #36]	; 0x24
      arabicTable(formsTable)
900067e2:	9b1a      	ldr	r3, [sp, #104]	; 0x68
900067e4:	62a3      	str	r3, [r4, #40]	; 0x28
900067e6:	4b02      	ldr	r3, [pc, #8]	; (900067f0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
900067e8:	6023      	str	r3, [r4, #0]
}
900067ea:	b00b      	add	sp, #44	; 0x2c
900067ec:	bd30      	pop	{r4, r5, pc}
900067ee:	bf00      	nop
900067f0:	9002d418 	.word	0x9002d418

900067f4 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 190, 12, 10, 1, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
900067f4:	4770      	bx	lr
900067f6:	bf00      	nop

900067f8 <_Z23getFont_verdana_10_4bppv>:
{
900067f8:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 190, 12, 10, 1, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
900067fa:	4d19      	ldr	r5, [pc, #100]	; (90006860 <_Z23getFont_verdana_10_4bppv+0x68>)
{
900067fc:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 190, 12, 10, 1, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
900067fe:	682c      	ldr	r4, [r5, #0]
90006800:	f3bf 8f5b 	dmb	ish
90006804:	f014 0401 	ands.w	r4, r4, #1
90006808:	d002      	beq.n	90006810 <_Z23getFont_verdana_10_4bppv+0x18>
    return verdana_10_4bpp;
}
9000680a:	4816      	ldr	r0, [pc, #88]	; (90006864 <_Z23getFont_verdana_10_4bppv+0x6c>)
9000680c:	b00f      	add	sp, #60	; 0x3c
9000680e:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 190, 12, 10, 1, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
90006810:	4628      	mov	r0, r5
90006812:	f023 fa06 	bl	90029c22 <__cxa_guard_acquire>
90006816:	2800      	cmp	r0, #0
90006818:	d0f7      	beq.n	9000680a <_Z23getFont_verdana_10_4bppv+0x12>
9000681a:	213f      	movs	r1, #63	; 0x3f
9000681c:	4b12      	ldr	r3, [pc, #72]	; (90006868 <_Z23getFont_verdana_10_4bppv+0x70>)
9000681e:	2201      	movs	r2, #1
90006820:	200a      	movs	r0, #10
90006822:	9308      	str	r3, [sp, #32]
90006824:	2304      	movs	r3, #4
90006826:	9000      	str	r0, [sp, #0]
90006828:	480e      	ldr	r0, [pc, #56]	; (90006864 <_Z23getFont_verdana_10_4bppv+0x6c>)
9000682a:	e9cd 1409 	strd	r1, r4, [sp, #36]	; 0x24
9000682e:	490f      	ldr	r1, [pc, #60]	; (9000686c <_Z23getFont_verdana_10_4bppv+0x74>)
90006830:	e9cd 3203 	strd	r3, r2, [sp, #12]
90006834:	e9cd 2205 	strd	r2, r2, [sp, #20]
90006838:	230c      	movs	r3, #12
9000683a:	9107      	str	r1, [sp, #28]
9000683c:	490c      	ldr	r1, [pc, #48]	; (90006870 <_Z23getFont_verdana_10_4bppv+0x78>)
9000683e:	e9cd 2401 	strd	r2, r4, [sp, #4]
90006842:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
90006846:	22be      	movs	r2, #190	; 0xbe
90006848:	f7ff ffa4 	bl	90006794 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
9000684c:	4809      	ldr	r0, [pc, #36]	; (90006874 <_Z23getFont_verdana_10_4bppv+0x7c>)
9000684e:	f023 fa33 	bl	90029cb8 <atexit>
90006852:	4628      	mov	r0, r5
90006854:	f023 f9f1 	bl	90029c3a <__cxa_guard_release>
}
90006858:	4802      	ldr	r0, [pc, #8]	; (90006864 <_Z23getFont_verdana_10_4bppv+0x6c>)
9000685a:	b00f      	add	sp, #60	; 0x3c
9000685c:	bd30      	pop	{r4, r5, pc}
9000685e:	bf00      	nop
90006860:	24009610 	.word	0x24009610
90006864:	24009614 	.word	0x24009614
90006868:	9002eb20 	.word	0x9002eb20
9000686c:	9002f16c 	.word	0x9002f16c
90006870:	902138ec 	.word	0x902138ec
90006874:	900067f5 	.word	0x900067f5

90006878 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 190, 25, 20, 0, 0, 4, 1, 1, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
90006878:	4770      	bx	lr
9000687a:	bf00      	nop

9000687c <_Z23getFont_verdana_20_4bppv>:
{
9000687c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 190, 25, 20, 0, 0, 4, 1, 1, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
9000687e:	4d19      	ldr	r5, [pc, #100]	; (900068e4 <_Z23getFont_verdana_20_4bppv+0x68>)
{
90006880:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 190, 25, 20, 0, 0, 4, 1, 1, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
90006882:	682c      	ldr	r4, [r5, #0]
90006884:	f3bf 8f5b 	dmb	ish
90006888:	f014 0401 	ands.w	r4, r4, #1
9000688c:	d002      	beq.n	90006894 <_Z23getFont_verdana_20_4bppv+0x18>
    return verdana_20_4bpp;
}
9000688e:	4816      	ldr	r0, [pc, #88]	; (900068e8 <_Z23getFont_verdana_20_4bppv+0x6c>)
90006890:	b00f      	add	sp, #60	; 0x3c
90006892:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 190, 25, 20, 0, 0, 4, 1, 1, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
90006894:	4628      	mov	r0, r5
90006896:	f023 f9c4 	bl	90029c22 <__cxa_guard_acquire>
9000689a:	2800      	cmp	r0, #0
9000689c:	d0f7      	beq.n	9000688e <_Z23getFont_verdana_20_4bppv+0x12>
9000689e:	213f      	movs	r1, #63	; 0x3f
900068a0:	4a12      	ldr	r2, [pc, #72]	; (900068ec <_Z23getFont_verdana_20_4bppv+0x70>)
900068a2:	2301      	movs	r3, #1
900068a4:	2014      	movs	r0, #20
900068a6:	9208      	str	r2, [sp, #32]
900068a8:	2204      	movs	r2, #4
900068aa:	9304      	str	r3, [sp, #16]
900068ac:	9000      	str	r0, [sp, #0]
900068ae:	9401      	str	r4, [sp, #4]
900068b0:	480d      	ldr	r0, [pc, #52]	; (900068e8 <_Z23getFont_verdana_20_4bppv+0x6c>)
900068b2:	e9cd 1409 	strd	r1, r4, [sp, #36]	; 0x24
900068b6:	490e      	ldr	r1, [pc, #56]	; (900068f0 <_Z23getFont_verdana_20_4bppv+0x74>)
900068b8:	e9cd 3305 	strd	r3, r3, [sp, #20]
900068bc:	9107      	str	r1, [sp, #28]
900068be:	2319      	movs	r3, #25
900068c0:	490c      	ldr	r1, [pc, #48]	; (900068f4 <_Z23getFont_verdana_20_4bppv+0x78>)
900068c2:	e9cd 4202 	strd	r4, r2, [sp, #8]
900068c6:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
900068ca:	22be      	movs	r2, #190	; 0xbe
900068cc:	f7ff ff62 	bl	90006794 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
900068d0:	4809      	ldr	r0, [pc, #36]	; (900068f8 <_Z23getFont_verdana_20_4bppv+0x7c>)
900068d2:	f023 f9f1 	bl	90029cb8 <atexit>
900068d6:	4628      	mov	r0, r5
900068d8:	f023 f9af 	bl	90029c3a <__cxa_guard_release>
}
900068dc:	4802      	ldr	r0, [pc, #8]	; (900068e8 <_Z23getFont_verdana_20_4bppv+0x6c>)
900068de:	b00f      	add	sp, #60	; 0x3c
900068e0:	bd30      	pop	{r4, r5, pc}
900068e2:	bf00      	nop
900068e4:	24009640 	.word	0x24009640
900068e8:	24009644 	.word	0x24009644
900068ec:	9002eb54 	.word	0x9002eb54
900068f0:	9002f170 	.word	0x9002f170
900068f4:	90214350 	.word	0x90214350
900068f8:	90006879 	.word	0x90006879

900068fc <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 190, 48, 40, 1, 0, 4, 1, 2, 2, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
900068fc:	4770      	bx	lr
900068fe:	bf00      	nop

90006900 <_Z23getFont_verdana_40_4bppv>:
{
90006900:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 190, 48, 40, 1, 0, 4, 1, 2, 2, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
90006902:	4d19      	ldr	r5, [pc, #100]	; (90006968 <_Z23getFont_verdana_40_4bppv+0x68>)
{
90006904:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 190, 48, 40, 1, 0, 4, 1, 2, 2, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
90006906:	682c      	ldr	r4, [r5, #0]
90006908:	f3bf 8f5b 	dmb	ish
9000690c:	f014 0401 	ands.w	r4, r4, #1
90006910:	d002      	beq.n	90006918 <_Z23getFont_verdana_40_4bppv+0x18>
    return verdana_40_4bpp;
}
90006912:	4816      	ldr	r0, [pc, #88]	; (9000696c <_Z23getFont_verdana_40_4bppv+0x6c>)
90006914:	b00f      	add	sp, #60	; 0x3c
90006916:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 190, 48, 40, 1, 0, 4, 1, 2, 2, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
90006918:	4628      	mov	r0, r5
9000691a:	f023 f982 	bl	90029c22 <__cxa_guard_acquire>
9000691e:	2800      	cmp	r0, #0
90006920:	d0f7      	beq.n	90006912 <_Z23getFont_verdana_40_4bppv+0x12>
90006922:	2302      	movs	r3, #2
90006924:	223f      	movs	r2, #63	; 0x3f
90006926:	4812      	ldr	r0, [pc, #72]	; (90006970 <_Z23getFont_verdana_40_4bppv+0x70>)
90006928:	2101      	movs	r1, #1
9000692a:	9402      	str	r4, [sp, #8]
9000692c:	9008      	str	r0, [sp, #32]
9000692e:	2028      	movs	r0, #40	; 0x28
90006930:	e9cd 2409 	strd	r2, r4, [sp, #36]	; 0x24
90006934:	e9cd 3305 	strd	r3, r3, [sp, #20]
90006938:	2204      	movs	r2, #4
9000693a:	4b0e      	ldr	r3, [pc, #56]	; (90006974 <_Z23getFont_verdana_40_4bppv+0x74>)
9000693c:	e9cd 2103 	strd	r2, r1, [sp, #12]
90006940:	e9cd 0100 	strd	r0, r1, [sp]
90006944:	22be      	movs	r2, #190	; 0xbe
90006946:	490c      	ldr	r1, [pc, #48]	; (90006978 <_Z23getFont_verdana_40_4bppv+0x78>)
90006948:	9307      	str	r3, [sp, #28]
9000694a:	2330      	movs	r3, #48	; 0x30
9000694c:	4807      	ldr	r0, [pc, #28]	; (9000696c <_Z23getFont_verdana_40_4bppv+0x6c>)
9000694e:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
90006952:	f7ff ff1f 	bl	90006794 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
90006956:	4809      	ldr	r0, [pc, #36]	; (9000697c <_Z23getFont_verdana_40_4bppv+0x7c>)
90006958:	f023 f9ae 	bl	90029cb8 <atexit>
9000695c:	4628      	mov	r0, r5
9000695e:	f023 f96c 	bl	90029c3a <__cxa_guard_release>
}
90006962:	4802      	ldr	r0, [pc, #8]	; (9000696c <_Z23getFont_verdana_40_4bppv+0x6c>)
90006964:	b00f      	add	sp, #60	; 0x3c
90006966:	bd30      	pop	{r4, r5, pc}
90006968:	24009670 	.word	0x24009670
9000696c:	24009674 	.word	0x24009674
90006970:	9002ed68 	.word	0x9002ed68
90006974:	9002f174 	.word	0x9002f174
90006978:	90214db4 	.word	0x90214db4
9000697c:	900068fd 	.word	0x900068fd

90006980 <_ZNK8touchgfx4Font12getGSUBTableEv>:
    }
90006980:	2000      	movs	r0, #0
90006982:	4770      	bx	lr

90006984 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
    }
90006984:	2000      	movs	r0, #0
90006986:	4770      	bx	lr

90006988 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
90006988:	b40e      	push	{r1, r2, r3}
9000698a:	b500      	push	{lr}
9000698c:	b082      	sub	sp, #8
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
9000698e:	2100      	movs	r1, #0
{
90006990:	ab03      	add	r3, sp, #12
90006992:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
90006996:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
90006998:	f012 ff42 	bl	90019820 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
9000699c:	b002      	add	sp, #8
9000699e:	f85d eb04 	ldr.w	lr, [sp], #4
900069a2:	b003      	add	sp, #12
900069a4:	4770      	bx	lr
900069a6:	bf00      	nop

900069a8 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
900069a8:	b40c      	push	{r2, r3}
900069aa:	b500      	push	{lr}
900069ac:	b083      	sub	sp, #12
900069ae:	ab04      	add	r3, sp, #16
900069b0:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
900069b4:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
900069b6:	f012 ff33 	bl	90019820 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
900069ba:	b003      	add	sp, #12
900069bc:	f85d eb04 	ldr.w	lr, [sp], #4
900069c0:	b002      	add	sp, #8
900069c2:	4770      	bx	lr

900069c4 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
900069c4:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
900069c6:	b510      	push	{r4, lr}
900069c8:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
900069ca:	b133      	cbz	r3, 900069da <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
900069cc:	8f03      	ldrh	r3, [r0, #56]	; 0x38
900069ce:	b39b      	cbz	r3, 90006a38 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>
            return buffer[pos];
900069d0:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
900069d2:	eb00 0343 	add.w	r3, r0, r3, lsl #1
900069d6:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
900069d8:	b923      	cbnz	r3, 900069e4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x20>
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
900069da:	4620      	mov	r0, r4
}
900069dc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
900069e0:	f014 b9b0 	b.w	9001ad44 <_ZN8touchgfx12TextProvider11getNextCharEv>
        substituteGlyphs();
900069e4:	f014 faac 	bl	9001af40 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
900069e8:	8f23      	ldrh	r3, [r4, #56]	; 0x38
900069ea:	2b01      	cmp	r3, #1
900069ec:	d92a      	bls.n	90006a44 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>
            const uint16_t index = pos + offset;
900069ee:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
900069f0:	1c53      	adds	r3, r2, #1
900069f2:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
900069f4:	2b09      	cmp	r3, #9
900069f6:	d812      	bhi.n	90006a1e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x5a>
900069f8:	eb04 0143 	add.w	r1, r4, r3, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
900069fc:	f640 103f 	movw	r0, #2367	; 0x93f
90006a00:	8c49      	ldrh	r1, [r1, #34]	; 0x22
90006a02:	4281      	cmp	r1, r0
90006a04:	d1e9      	bne.n	900069da <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return buffer[pos];
90006a06:	eb04 0142 	add.w	r1, r4, r2, lsl #1
90006a0a:	0052      	lsls	r2, r2, #1
90006a0c:	8c49      	ldrh	r1, [r1, #34]	; 0x22

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
90006a0e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            buffer[pos] = newChar;
90006a12:	4422      	add	r2, r4
90006a14:	f640 103f 	movw	r0, #2367	; 0x93f
            buffer[index < size ? index : 0] = newChar;
90006a18:	8459      	strh	r1, [r3, #34]	; 0x22
            buffer[pos] = newChar;
90006a1a:	8450      	strh	r0, [r2, #34]	; 0x22
        }
90006a1c:	e7dd      	b.n	900069da <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return buffer[index < size ? index : index - size];
90006a1e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90006a22:	f640 113f 	movw	r1, #2367	; 0x93f
90006a26:	89db      	ldrh	r3, [r3, #14]
90006a28:	428b      	cmp	r3, r1
90006a2a:	d1d6      	bne.n	900069da <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return buffer[pos];
90006a2c:	eb04 0142 	add.w	r1, r4, r2, lsl #1
90006a30:	2300      	movs	r3, #0
90006a32:	0052      	lsls	r2, r2, #1
90006a34:	8c49      	ldrh	r1, [r1, #34]	; 0x22
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
90006a36:	e7ea      	b.n	90006a0e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x4a>
            assert(used > 0);
90006a38:	4b05      	ldr	r3, [pc, #20]	; (90006a50 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x8c>)
90006a3a:	21c5      	movs	r1, #197	; 0xc5
90006a3c:	4a05      	ldr	r2, [pc, #20]	; (90006a54 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x90>)
90006a3e:	4806      	ldr	r0, [pc, #24]	; (90006a58 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x94>)
90006a40:	f023 f91c 	bl	90029c7c <__assert_func>
            assert(offset < used);
90006a44:	4b05      	ldr	r3, [pc, #20]	; (90006a5c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x98>)
90006a46:	21cb      	movs	r1, #203	; 0xcb
90006a48:	4a05      	ldr	r2, [pc, #20]	; (90006a60 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x9c>)
90006a4a:	4803      	ldr	r0, [pc, #12]	; (90006a58 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x94>)
90006a4c:	f023 f916 	bl	90029c7c <__assert_func>
90006a50:	9002d478 	.word	0x9002d478
90006a54:	9002d484 	.word	0x9002d484
90006a58:	9002d530 	.word	0x9002d530
90006a5c:	9002d57c 	.word	0x9002d57c
90006a60:	9002d58c 	.word	0x9002d58c

90006a64 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
90006a64:	f014 b937 	b.w	9001acd6 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

90006a68 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
90006a68:	b510      	push	{r4, lr}
90006a6a:	b086      	sub	sp, #24
90006a6c:	f10d 0c08 	add.w	ip, sp, #8
    va_list pArg;
    va_start(pArg, format);
90006a70:	ac0a      	add	r4, sp, #40	; 0x28
{
90006a72:	e88c 0006 	stmia.w	ip, {r1, r2}
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
90006a76:	461a      	mov	r2, r3
90006a78:	9b09      	ldr	r3, [sp, #36]	; 0x24
90006a7a:	4661      	mov	r1, ip
90006a7c:	9401      	str	r4, [sp, #4]
90006a7e:	9300      	str	r3, [sp, #0]
90006a80:	9b08      	ldr	r3, [sp, #32]
    va_start(pArg, format);
90006a82:	9405      	str	r4, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
90006a84:	f011 fafe 	bl	90018084 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
90006a88:	b006      	add	sp, #24
90006a8a:	bd10      	pop	{r4, pc}

90006a8c <_ZN8touchgfx5Texts11setLanguageEt>:
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
90006a8c:	b9e0      	cbnz	r0, 90006ac8 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
{
90006a8e:	b538      	push	{r3, r4, r5, lr}
    {
        if (languagesArray[id] != 0)
90006a90:	4b13      	ldr	r3, [pc, #76]	; (90006ae0 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
90006a92:	681b      	ldr	r3, [r3, #0]
90006a94:	b1cb      	cbz	r3, 90006aca <_ZN8touchgfx5Texts11setLanguageEt+0x3e>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
90006a96:	4c13      	ldr	r4, [pc, #76]	; (90006ae4 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
90006a98:	4813      	ldr	r0, [pc, #76]	; (90006ae8 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
90006a9a:	e9d3 1200 	ldrd	r1, r2, [r3]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
90006a9e:	4419      	add	r1, r3
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
90006aa0:	441a      	add	r2, r3
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
90006aa2:	6021      	str	r1, [r4, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
90006aa4:	6899      	ldr	r1, [r3, #8]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
90006aa6:	6002      	str	r2, [r0, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
90006aa8:	185c      	adds	r4, r3, r1
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
90006aaa:	4b10      	ldr	r3, [pc, #64]	; (90006aec <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
90006aac:	2200      	movs	r2, #0
90006aae:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
90006ab0:	f000 f83a 	bl	90006b28 <_ZN17TypedTextDatabase8getFontsEv>
90006ab4:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
90006ab6:	f000 f835 	bl	90006b24 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
90006aba:	4b0d      	ldr	r3, [pc, #52]	; (90006af0 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
        fonts = f;
90006abc:	4a0d      	ldr	r2, [pc, #52]	; (90006af4 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
        typedTexts = data;
90006abe:	601c      	str	r4, [r3, #0]
        numberOfTypedTexts = n;
90006ac0:	4b0d      	ldr	r3, [pc, #52]	; (90006af8 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
        fonts = f;
90006ac2:	6015      	str	r5, [r2, #0]
        numberOfTypedTexts = n;
90006ac4:	8018      	strh	r0, [r3, #0]
    }
}
90006ac6:	bd38      	pop	{r3, r4, r5, pc}
90006ac8:	4770      	bx	lr
            currentLanguageTypedText = typedTextDatabaseArray[id];
90006aca:	4c0c      	ldr	r4, [pc, #48]	; (90006afc <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
            currentLanguagePtr = texts_all_languages;
90006acc:	4905      	ldr	r1, [pc, #20]	; (90006ae4 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
            currentLanguageTypedText = typedTextDatabaseArray[id];
90006ace:	6824      	ldr	r4, [r4, #0]
            currentLanguagePtr = texts_all_languages;
90006ad0:	480b      	ldr	r0, [pc, #44]	; (90006b00 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
            currentLanguageIndices = staticLanguageIndices[id];
90006ad2:	4b05      	ldr	r3, [pc, #20]	; (90006ae8 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
90006ad4:	4a0b      	ldr	r2, [pc, #44]	; (90006b04 <_ZN8touchgfx5Texts11setLanguageEt+0x78>)
            currentLanguagePtr = texts_all_languages;
90006ad6:	6008      	str	r0, [r1, #0]
            currentLanguageIndices = staticLanguageIndices[id];
90006ad8:	601a      	str	r2, [r3, #0]
    if (currentLanguageTypedText)
90006ada:	2c00      	cmp	r4, #0
90006adc:	d1e5      	bne.n	90006aaa <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
90006ade:	bd38      	pop	{r3, r4, r5, pc}
90006ae0:	240096a0 	.word	0x240096a0
90006ae4:	240096a4 	.word	0x240096a4
90006ae8:	240096a8 	.word	0x240096a8
90006aec:	240096ac 	.word	0x240096ac
90006af0:	24023724 	.word	0x24023724
90006af4:	2402372c 	.word	0x2402372c
90006af8:	24023728 	.word	0x24023728
90006afc:	90215878 	.word	0x90215878
90006b00:	90215828 	.word	0x90215828
90006b04:	90215818 	.word	0x90215818

90006b08 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
90006b08:	4a04      	ldr	r2, [pc, #16]	; (90006b1c <_ZNK8touchgfx5Texts7getTextEt+0x14>)
90006b0a:	4b05      	ldr	r3, [pc, #20]	; (90006b20 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
90006b0c:	6812      	ldr	r2, [r2, #0]
90006b0e:	681b      	ldr	r3, [r3, #0]
90006b10:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
}
90006b14:	eb03 0040 	add.w	r0, r3, r0, lsl #1
90006b18:	4770      	bx	lr
90006b1a:	bf00      	nop
90006b1c:	240096a8 	.word	0x240096a8
90006b20:	240096a4 	.word	0x240096a4

90006b24 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
90006b24:	2004      	movs	r0, #4
90006b26:	4770      	bx	lr

90006b28 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
90006b28:	4800      	ldr	r0, [pc, #0]	; (90006b2c <_ZN17TypedTextDatabase8getFontsEv+0x4>)
90006b2a:	4770      	bx	lr
90006b2c:	240096b0 	.word	0x240096b0

90006b30 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
90006b30:	b510      	push	{r4, lr}
};
90006b32:	4c05      	ldr	r4, [pc, #20]	; (90006b48 <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
    &(getFont_verdana_20_4bpp()),
90006b34:	f7ff fea2 	bl	9000687c <_Z23getFont_verdana_20_4bppv>
};
90006b38:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
90006b3a:	f7ff fee1 	bl	90006900 <_Z23getFont_verdana_40_4bppv>
};
90006b3e:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp())
90006b40:	f7ff fe5a 	bl	900067f8 <_Z23getFont_verdana_10_4bppv>
};
90006b44:	60a0      	str	r0, [r4, #8]
} // namespace TypedTextDatabase
90006b46:	bd10      	pop	{r4, pc}
90006b48:	240096b0 	.word	0x240096b0

90006b4c <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
90006b4c:	4770      	bx	lr
90006b4e:	bf00      	nop

90006b50 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
90006b50:	4770      	bx	lr
90006b52:	bf00      	nop

90006b54 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
90006b54:	4770      	bx	lr
90006b56:	bf00      	nop

90006b58 <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
90006b58:	b530      	push	{r4, r5, lr}
90006b5a:	b085      	sub	sp, #20
90006b5c:	460a      	mov	r2, r1
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
90006b5e:	6803      	ldr	r3, [r0, #0]
    virtual void setWidth(int16_t width)
90006b60:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
90006b62:	466d      	mov	r5, sp
90006b64:	4601      	mov	r1, r0
90006b66:	8102      	strh	r2, [r0, #8]
90006b68:	343c      	adds	r4, #60	; 0x3c
90006b6a:	4628      	mov	r0, r5
90006b6c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
90006b70:	4798      	blx	r3
90006b72:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90006b76:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
90006b7a:	b005      	add	sp, #20
90006b7c:	bd30      	pop	{r4, r5, pc}
90006b7e:	bf00      	nop

90006b80 <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
90006b80:	b530      	push	{r4, r5, lr}
90006b82:	b085      	sub	sp, #20
90006b84:	460a      	mov	r2, r1
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
90006b86:	6803      	ldr	r3, [r0, #0]
    virtual void setHeight(int16_t height)
90006b88:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
90006b8a:	466d      	mov	r5, sp
90006b8c:	4601      	mov	r1, r0
        rect.height = height;
90006b8e:	8142      	strh	r2, [r0, #10]
90006b90:	343c      	adds	r4, #60	; 0x3c
90006b92:	4628      	mov	r0, r5
90006b94:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
90006b98:	4798      	blx	r3
90006b9a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90006b9e:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
90006ba2:	b005      	add	sp, #20
90006ba4:	bd30      	pop	{r4, r5, pc}
90006ba6:	bf00      	nop

90006ba8 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
90006ba8:	2200      	movs	r2, #0
90006baa:	6002      	str	r2, [r0, #0]
90006bac:	6042      	str	r2, [r0, #4]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
90006bae:	4770      	bx	lr

90006bb0 <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
90006bb0:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
    }
90006bb4:	4770      	bx	lr
90006bb6:	bf00      	nop

90006bb8 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
90006bb8:	2000      	movs	r0, #0
90006bba:	4770      	bx	lr

90006bbc <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
        if (visible)
90006bbc:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
90006bc0:	b112      	cbz	r2, 90006bc8 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xc>
            invalidate();
90006bc2:	6803      	ldr	r3, [r0, #0]
90006bc4:	695b      	ldr	r3, [r3, #20]
90006bc6:	4718      	bx	r3
    virtual void draw(const Rect& area) const;

    virtual void invalidateContent() const
    {
        Widget::invalidateContent();
    }
90006bc8:	4770      	bx	lr
90006bca:	bf00      	nop

90006bcc <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90006bcc:	2200      	movs	r2, #0
90006bce:	f04f 31ff 	mov.w	r1, #4294967295
        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
              text(0)
90006bd2:	6082      	str	r2, [r0, #8]
90006bd4:	e9c0 2100 	strd	r2, r1, [r0]

protected:
    virtual TextArea::BoundingArea calculateBoundingArea() const
    {
        return TextArea::BoundingArea();
    }
90006bd8:	4770      	bx	lr
90006bda:	bf00      	nop

90006bdc <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
90006bdc:	6c80      	ldr	r0, [r0, #72]	; 0x48
90006bde:	4770      	bx	lr

90006be0 <_ZN24screen_asteroidsViewBase21resume_asteroids_taskEv>:
     * Virtual Action Handlers
     */
    virtual void resume_asteroids_task()
    {
        // Override and implement this function in screen_asteroids
    }
90006be0:	4770      	bx	lr
90006be2:	bf00      	nop

90006be4 <_ZN24screen_asteroidsViewBase22suspend_asteroids_taskEv>:
    virtual void suspend_asteroids_task()
    {
        // Override and implement this function in screen_asteroids
    }
90006be4:	4770      	bx	lr
90006be6:	bf00      	nop

90006be8 <_ZN24screen_asteroidsViewBase20start_asteroids_gameEv>:
    virtual void start_asteroids_game()
    {
        // Override and implement this function in screen_asteroids
    }
90006be8:	4770      	bx	lr
90006bea:	bf00      	nop

90006bec <_ZN24screen_asteroidsViewBase11setupScreenEv>:
}

void screen_asteroidsViewBase::setupScreen()
{

}
90006bec:	4770      	bx	lr
90006bee:	bf00      	nop

90006bf0 <_ZN8touchgfx8CallbackI24screen_asteroidsViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
90006bf0:	4770      	bx	lr
90006bf2:	bf00      	nop

90006bf4 <_ZN8touchgfx5ShapeILt3EED1Ev>:
 * scaled, rotated and moved freely. Example uses could be the hands of a clock.
 *
 * @see AbstractShape
 */
template <uint16_t POINTS>
class Shape : public AbstractShape
90006bf4:	4770      	bx	lr
90006bf6:	bf00      	nop

90006bf8 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
90006bf8:	4770      	bx	lr
90006bfa:	bf00      	nop

90006bfc <_ZN8touchgfx8CallbackI24screen_asteroidsViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
90006bfc:	b410      	push	{r4}
        (pobject->*pmemfun)(t1);
90006bfe:	68c2      	ldr	r2, [r0, #12]
    virtual void execute(T1 t1)
90006c00:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
90006c02:	6844      	ldr	r4, [r0, #4]
90006c04:	f012 0f01 	tst.w	r2, #1
90006c08:	eb04 0062 	add.w	r0, r4, r2, asr #1
90006c0c:	d103      	bne.n	90006c16 <_ZN8touchgfx8CallbackI24screen_asteroidsViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x1a>
90006c0e:	689b      	ldr	r3, [r3, #8]
    }
90006c10:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
90006c14:	4718      	bx	r3
90006c16:	ea4f 0c62 	mov.w	ip, r2, asr #1
90006c1a:	689b      	ldr	r3, [r3, #8]
90006c1c:	f854 200c 	ldr.w	r2, [r4, ip]
    }
90006c20:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
90006c24:	58d3      	ldr	r3, [r2, r3]
90006c26:	4718      	bx	r3

90006c28 <_ZNK8touchgfx8CallbackI24screen_asteroidsViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
90006c28:	6843      	ldr	r3, [r0, #4]
90006c2a:	b13b      	cbz	r3, 90006c3c <_ZNK8touchgfx8CallbackI24screen_asteroidsViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
90006c2c:	6883      	ldr	r3, [r0, #8]
90006c2e:	b10b      	cbz	r3, 90006c34 <_ZNK8touchgfx8CallbackI24screen_asteroidsViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0xc>
90006c30:	2001      	movs	r0, #1
    }
90006c32:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
90006c34:	68c0      	ldr	r0, [r0, #12]
90006c36:	f000 0001 	and.w	r0, r0, #1
90006c3a:	4770      	bx	lr
90006c3c:	4618      	mov	r0, r3
90006c3e:	4770      	bx	lr

90006c40 <_ZNK8touchgfx5ShapeILt3EE12getNumPointsEv>:
{
public:
    virtual int getNumPoints() const
    {
        return POINTS;
    }
90006c40:	2003      	movs	r0, #3
90006c42:	4770      	bx	lr

90006c44 <_ZN8touchgfx5ShapeILt3EE9setCornerEiNS_7CWRUtil2Q5ES3_>:

    virtual void setCorner(int i, CWRUtil::Q5 x, CWRUtil::Q5 y)
    {
        if (i >= 0 && i < POINTS)
90006c44:	2902      	cmp	r1, #2
90006c46:	d803      	bhi.n	90006c50 <_ZN8touchgfx5ShapeILt3EE9setCornerEiNS_7CWRUtil2Q5ES3_+0xc>
90006c48:	eb00 0181 	add.w	r1, r0, r1, lsl #2
        {
            xCorner[i] = x, yCorner[i] = y;
90006c4c:	64ca      	str	r2, [r1, #76]	; 0x4c
90006c4e:	658b      	str	r3, [r1, #88]	; 0x58
        }
    }
90006c50:	4770      	bx	lr
90006c52:	bf00      	nop

90006c54 <_ZNK8touchgfx5ShapeILt3EE10getCornerXEi>:

    virtual CWRUtil::Q5 getCornerX(int i) const
    {
        if (i >= 0 && i < POINTS)
90006c54:	2902      	cmp	r1, #2
90006c56:	d803      	bhi.n	90006c60 <_ZNK8touchgfx5ShapeILt3EE10getCornerXEi+0xc>
        {
            return xCorner[i];
90006c58:	eb00 0181 	add.w	r1, r0, r1, lsl #2
90006c5c:	6cc8      	ldr	r0, [r1, #76]	; 0x4c
90006c5e:	4770      	bx	lr
         * Constructor from integer. No conversion is done - the integer is assumed to already
         * be in Q5 format.
         *
         * @param  i Integer pre-formattet in Q5 format.
         */
        explicit Q5(int i)
90006c60:	2000      	movs	r0, #0
        }
        return CWRUtil::toQ5<int>(0);
    }
90006c62:	4770      	bx	lr

90006c64 <_ZNK8touchgfx5ShapeILt3EE10getCornerYEi>:

    virtual CWRUtil::Q5 getCornerY(int i) const
    {
        if (i >= 0 && i < POINTS)
90006c64:	2902      	cmp	r1, #2
90006c66:	d803      	bhi.n	90006c70 <_ZNK8touchgfx5ShapeILt3EE10getCornerYEi+0xc>
        {
            return yCorner[i];
90006c68:	3116      	adds	r1, #22
90006c6a:	f850 0021 	ldr.w	r0, [r0, r1, lsl #2]
90006c6e:	4770      	bx	lr
90006c70:	2000      	movs	r0, #0
        }
        return CWRUtil::toQ5<int>(0);
    }
90006c72:	4770      	bx	lr

90006c74 <_ZN8touchgfx5ShapeILt3EE8setCacheEiNS_7CWRUtil2Q5ES3_>:

protected:
    virtual void setCache(int i, CWRUtil::Q5 x, CWRUtil::Q5 y)
    {
        if (i >= 0 && i < POINTS)
90006c74:	2902      	cmp	r1, #2
90006c76:	d803      	bhi.n	90006c80 <_ZN8touchgfx5ShapeILt3EE8setCacheEiNS_7CWRUtil2Q5ES3_+0xc>
90006c78:	eb00 0181 	add.w	r1, r0, r1, lsl #2
        {
            xCache[i] = x, yCache[i] = y;
90006c7c:	664a      	str	r2, [r1, #100]	; 0x64
90006c7e:	670b      	str	r3, [r1, #112]	; 0x70
        }
    }
90006c80:	4770      	bx	lr
90006c82:	bf00      	nop

90006c84 <_ZNK8touchgfx5ShapeILt3EE9getCacheXEi>:

    virtual CWRUtil::Q5 getCacheX(int i) const
    {
        if (i >= 0 && i < POINTS)
90006c84:	2902      	cmp	r1, #2
90006c86:	d803      	bhi.n	90006c90 <_ZNK8touchgfx5ShapeILt3EE9getCacheXEi+0xc>
        {
            return xCache[i];
90006c88:	eb00 0181 	add.w	r1, r0, r1, lsl #2
90006c8c:	6e48      	ldr	r0, [r1, #100]	; 0x64
90006c8e:	4770      	bx	lr
90006c90:	2000      	movs	r0, #0
        }
        return CWRUtil::toQ5<int>(0);
    }
90006c92:	4770      	bx	lr

90006c94 <_ZNK8touchgfx5ShapeILt3EE9getCacheYEi>:

    virtual CWRUtil::Q5 getCacheY(int i) const
    {
        if (i >= 0 && i < POINTS)
90006c94:	2902      	cmp	r1, #2
90006c96:	d803      	bhi.n	90006ca0 <_ZNK8touchgfx5ShapeILt3EE9getCacheYEi+0xc>
        {
            return yCache[i];
90006c98:	311c      	adds	r1, #28
90006c9a:	f850 0021 	ldr.w	r0, [r0, r1, lsl #2]
90006c9e:	4770      	bx	lr
90006ca0:	2000      	movs	r0, #0
        }
        return CWRUtil::toQ5<int>(0);
    }
90006ca2:	4770      	bx	lr

90006ca4 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
90006ca4:	b510      	push	{r4, lr}
90006ca6:	4604      	mov	r4, r0
90006ca8:	214c      	movs	r1, #76	; 0x4c
90006caa:	f022 ffb8 	bl	90029c1e <_ZdlPvj>
90006cae:	4620      	mov	r0, r4
90006cb0:	bd10      	pop	{r4, pc}
90006cb2:	bf00      	nop

90006cb4 <_ZN8touchgfx5ShapeILt3EED0Ev>:
class Shape : public AbstractShape
90006cb4:	b510      	push	{r4, lr}
90006cb6:	4604      	mov	r4, r0
90006cb8:	217c      	movs	r1, #124	; 0x7c
90006cba:	f022 ffb0 	bl	90029c1e <_ZdlPvj>
90006cbe:	4620      	mov	r0, r4
90006cc0:	bd10      	pop	{r4, pc}
90006cc2:	bf00      	nop

90006cc4 <_ZN8touchgfx8CallbackI24screen_asteroidsViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
90006cc4:	b510      	push	{r4, lr}
90006cc6:	4604      	mov	r4, r0
90006cc8:	2110      	movs	r1, #16
90006cca:	f022 ffa8 	bl	90029c1e <_ZdlPvj>
90006cce:	4620      	mov	r0, r4
90006cd0:	bd10      	pop	{r4, pc}
90006cd2:	bf00      	nop

90006cd4 <_ZN24screen_asteroidsViewBaseD1Ev>:
screen_asteroidsViewBase::~screen_asteroidsViewBase()
90006cd4:	4b03      	ldr	r3, [pc, #12]	; (90006ce4 <_ZN24screen_asteroidsViewBaseD1Ev+0x10>)
90006cd6:	b510      	push	{r4, lr}
90006cd8:	4604      	mov	r4, r0
90006cda:	6003      	str	r3, [r0, #0]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
90006cdc:	f010 f93c 	bl	90016f58 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
90006ce0:	4620      	mov	r0, r4
90006ce2:	bd10      	pop	{r4, pc}
90006ce4:	9002d9e8 	.word	0x9002d9e8

90006ce8 <_ZN24screen_asteroidsViewBaseD0Ev>:
screen_asteroidsViewBase::~screen_asteroidsViewBase()
90006ce8:	4b07      	ldr	r3, [pc, #28]	; (90006d08 <_ZN24screen_asteroidsViewBaseD0Ev+0x20>)
90006cea:	b500      	push	{lr}
90006cec:	b083      	sub	sp, #12
90006cee:	6003      	str	r3, [r0, #0]
90006cf0:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
90006cf2:	f010 f931 	bl	90016f58 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
90006cf6:	9801      	ldr	r0, [sp, #4]
90006cf8:	f242 1154 	movw	r1, #8532	; 0x2154
90006cfc:	f022 ff8f 	bl	90029c1e <_ZdlPvj>
90006d00:	9801      	ldr	r0, [sp, #4]
90006d02:	b003      	add	sp, #12
90006d04:	f85d fb04 	ldr.w	pc, [sp], #4
90006d08:	9002d9e8 	.word	0x9002d9e8

90006d0c <_ZN8touchgfx8TextArea12setBaselineYEs>:
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90006d0c:	4b1b      	ldr	r3, [pc, #108]	; (90006d7c <_ZN8touchgfx8TextArea12setBaselineYEs+0x70>)
        setY(baselineY - getTypedText().getFont()->getBaseline());
90006d0e:	6802      	ldr	r2, [r0, #0]
90006d10:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
90006d12:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
90006d14:	6b55      	ldr	r5, [r2, #52]	; 0x34
90006d16:	b323      	cbz	r3, 90006d62 <_ZN8touchgfx8TextArea12setBaselineYEs+0x56>
90006d18:	b28e      	uxth	r6, r1
        return typedTextId < numberOfTypedTexts;
90006d1a:	4919      	ldr	r1, [pc, #100]	; (90006d80 <_ZN8touchgfx8TextArea12setBaselineYEs+0x74>)
90006d1c:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
90006d1e:	4604      	mov	r4, r0
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90006d20:	8809      	ldrh	r1, [r1, #0]
90006d22:	4291      	cmp	r1, r2
90006d24:	d923      	bls.n	90006d6e <_ZN8touchgfx8TextArea12setBaselineYEs+0x62>
        return fonts[typedTexts[typedTextId].fontIdx];
90006d26:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
90006d2a:	4b16      	ldr	r3, [pc, #88]	; (90006d84 <_ZN8touchgfx8TextArea12setBaselineYEs+0x78>)
90006d2c:	681b      	ldr	r3, [r3, #0]
90006d2e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
90006d32:	4a15      	ldr	r2, [pc, #84]	; (90006d88 <_ZN8touchgfx8TextArea12setBaselineYEs+0x7c>)
90006d34:	6803      	ldr	r3, [r0, #0]
90006d36:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90006d38:	4293      	cmp	r3, r2
90006d3a:	d107      	bne.n	90006d4c <_ZN8touchgfx8TextArea12setBaselineYEs+0x40>
        return baselineHeight;
90006d3c:	88c0      	ldrh	r0, [r0, #6]
90006d3e:	4b13      	ldr	r3, [pc, #76]	; (90006d8c <_ZN8touchgfx8TextArea12setBaselineYEs+0x80>)
90006d40:	1a31      	subs	r1, r6, r0
90006d42:	429d      	cmp	r5, r3
90006d44:	b209      	sxth	r1, r1
90006d46:	d107      	bne.n	90006d58 <_ZN8touchgfx8TextArea12setBaselineYEs+0x4c>
        rect.y = y;
90006d48:	80e1      	strh	r1, [r4, #6]
    }
90006d4a:	bd70      	pop	{r4, r5, r6, pc}
        setY(baselineY - getTypedText().getFont()->getBaseline());
90006d4c:	4798      	blx	r3
90006d4e:	4b0f      	ldr	r3, [pc, #60]	; (90006d8c <_ZN8touchgfx8TextArea12setBaselineYEs+0x80>)
90006d50:	1a31      	subs	r1, r6, r0
90006d52:	429d      	cmp	r5, r3
90006d54:	b209      	sxth	r1, r1
90006d56:	d0f7      	beq.n	90006d48 <_ZN8touchgfx8TextArea12setBaselineYEs+0x3c>
90006d58:	4620      	mov	r0, r4
90006d5a:	462b      	mov	r3, r5
    }
90006d5c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
90006d60:	4718      	bx	r3
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90006d62:	4b0b      	ldr	r3, [pc, #44]	; (90006d90 <_ZN8touchgfx8TextArea12setBaselineYEs+0x84>)
90006d64:	216c      	movs	r1, #108	; 0x6c
90006d66:	4a0b      	ldr	r2, [pc, #44]	; (90006d94 <_ZN8touchgfx8TextArea12setBaselineYEs+0x88>)
90006d68:	480b      	ldr	r0, [pc, #44]	; (90006d98 <_ZN8touchgfx8TextArea12setBaselineYEs+0x8c>)
90006d6a:	f022 ff87 	bl	90029c7c <__assert_func>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90006d6e:	4b0b      	ldr	r3, [pc, #44]	; (90006d9c <_ZN8touchgfx8TextArea12setBaselineYEs+0x90>)
90006d70:	216d      	movs	r1, #109	; 0x6d
90006d72:	4a08      	ldr	r2, [pc, #32]	; (90006d94 <_ZN8touchgfx8TextArea12setBaselineYEs+0x88>)
90006d74:	4808      	ldr	r0, [pc, #32]	; (90006d98 <_ZN8touchgfx8TextArea12setBaselineYEs+0x8c>)
90006d76:	f022 ff81 	bl	90029c7c <__assert_func>
90006d7a:	bf00      	nop
90006d7c:	24023724 	.word	0x24023724
90006d80:	24023728 	.word	0x24023728
90006d84:	2402372c 	.word	0x2402372c
90006d88:	90005c45 	.word	0x90005c45
90006d8c:	90004531 	.word	0x90004531
90006d90:	9002d660 	.word	0x9002d660
90006d94:	9002d6a4 	.word	0x9002d6a4
90006d98:	9002d6e0 	.word	0x9002d6e0
90006d9c:	9002d728 	.word	0x9002d728

90006da0 <_ZN24screen_asteroidsViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void screen_asteroidsViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &btn_back)
90006da0:	f500 638d 	add.w	r3, r0, #1128	; 0x468
90006da4:	4299      	cmp	r1, r3
{
90006da6:	b570      	push	{r4, r5, r6, lr}
90006da8:	4604      	mov	r4, r0
90006daa:	460d      	mov	r5, r1
    if (&src == &btn_back)
90006dac:	d00d      	beq.n	90006dca <_ZN24screen_asteroidsViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x2a>
        //interaction_transition_to_home
        //When suspend_asteroid_task completed change screen to screen_game_select
        //Go to screen_game_select with screen transition towards West
        application().gotoscreen_game_selectScreenSlideTransitionWest();
    }
    if (&src == &btn_retry)
90006dae:	f204 432c 	addw	r3, r4, #1068	; 0x42c
90006db2:	429d      	cmp	r5, r3
90006db4:	d000      	beq.n	90006db8 <_ZN24screen_asteroidsViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x18>
        //interaction_restart
        //When btn_retry clicked call virtual function
        //Call start_asteroids_game
        start_asteroids_game();
    }
}
90006db6:	bd70      	pop	{r4, r5, r6, pc}
        start_asteroids_game();
90006db8:	6823      	ldr	r3, [r4, #0]
90006dba:	4a0a      	ldr	r2, [pc, #40]	; (90006de4 <_ZN24screen_asteroidsViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x44>)
90006dbc:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90006dbe:	4293      	cmp	r3, r2
90006dc0:	d0f9      	beq.n	90006db6 <_ZN24screen_asteroidsViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
90006dc2:	4620      	mov	r0, r4
}
90006dc4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        start_asteroids_game();
90006dc8:	4718      	bx	r3
        suspend_asteroids_task();
90006dca:	6803      	ldr	r3, [r0, #0]
90006dcc:	4a06      	ldr	r2, [pc, #24]	; (90006de8 <_ZN24screen_asteroidsViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x48>)
90006dce:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90006dd0:	4293      	cmp	r3, r2
90006dd2:	d104      	bne.n	90006dde <_ZN24screen_asteroidsViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3e>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
90006dd4:	f011 fdd6 	bl	90018984 <_ZN8touchgfx11Application11getInstanceEv>
        application().gotoscreen_game_selectScreenSlideTransitionWest();
90006dd8:	f7ff fc96 	bl	90006708 <_ZN23FrontendApplicationBase47gotoscreen_game_selectScreenSlideTransitionWestEv>
90006ddc:	e7e7      	b.n	90006dae <_ZN24screen_asteroidsViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xe>
        suspend_asteroids_task();
90006dde:	4798      	blx	r3
90006de0:	e7f8      	b.n	90006dd4 <_ZN24screen_asteroidsViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x34>
90006de2:	bf00      	nop
90006de4:	90006be9 	.word	0x90006be9
90006de8:	90006be5 	.word	0x90006be5

90006dec <_ZN24screen_asteroidsViewBase15afterTransitionEv>:
void screen_asteroidsViewBase::afterTransition()
{
    //interaction_resume_asteroids_task
    //When screen transition ends call virtual function
    //Call resume_asteroids_task
    resume_asteroids_task();
90006dec:	6803      	ldr	r3, [r0, #0]
90006dee:	490a      	ldr	r1, [pc, #40]	; (90006e18 <_ZN24screen_asteroidsViewBase15afterTransitionEv+0x2c>)
90006df0:	6ada      	ldr	r2, [r3, #44]	; 0x2c
90006df2:	428a      	cmp	r2, r1
{
90006df4:	b510      	push	{r4, lr}
90006df6:	4604      	mov	r4, r0
90006df8:	d104      	bne.n	90006e04 <_ZN24screen_asteroidsViewBase15afterTransitionEv+0x18>

    //interaction_start_asteroids_game
    //When screen transition ends call virtual function
    //Call start_asteroids_game
    start_asteroids_game();
90006dfa:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90006dfc:	4a07      	ldr	r2, [pc, #28]	; (90006e1c <_ZN24screen_asteroidsViewBase15afterTransitionEv+0x30>)
90006dfe:	4293      	cmp	r3, r2
90006e00:	d106      	bne.n	90006e10 <_ZN24screen_asteroidsViewBase15afterTransitionEv+0x24>
}
90006e02:	bd10      	pop	{r4, pc}
    resume_asteroids_task();
90006e04:	4790      	blx	r2
    start_asteroids_game();
90006e06:	6823      	ldr	r3, [r4, #0]
90006e08:	4a04      	ldr	r2, [pc, #16]	; (90006e1c <_ZN24screen_asteroidsViewBase15afterTransitionEv+0x30>)
90006e0a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90006e0c:	4293      	cmp	r3, r2
90006e0e:	d0f8      	beq.n	90006e02 <_ZN24screen_asteroidsViewBase15afterTransitionEv+0x16>
90006e10:	4620      	mov	r0, r4
}
90006e12:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    start_asteroids_game();
90006e16:	4718      	bx	r3
90006e18:	90006be1 	.word	0x90006be1
90006e1c:	90006be9 	.word	0x90006be9

90006e20 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
        setX(x);
90006e20:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
90006e22:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90006e26:	4f25      	ldr	r7, [pc, #148]	; (90006ebc <_ZN8touchgfx8TextArea13setXBaselineYEss+0x9c>)
90006e28:	4605      	mov	r5, r0
        setX(x);
90006e2a:	6b1e      	ldr	r6, [r3, #48]	; 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
90006e2c:	4690      	mov	r8, r2
90006e2e:	42be      	cmp	r6, r7
90006e30:	d125      	bne.n	90006e7e <_ZN8touchgfx8TextArea13setXBaselineYEss+0x5e>
        setBaselineY(baselineY);
90006e32:	6e5c      	ldr	r4, [r3, #100]	; 0x64
        rect.x = x;
90006e34:	80a9      	strh	r1, [r5, #4]
90006e36:	4922      	ldr	r1, [pc, #136]	; (90006ec0 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xa0>)
90006e38:	428c      	cmp	r4, r1
90006e3a:	d126      	bne.n	90006e8a <_ZN8touchgfx8TextArea13setXBaselineYEss+0x6a>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90006e3c:	4921      	ldr	r1, [pc, #132]	; (90006ec4 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xa4>)
        setY(baselineY - getTypedText().getFont()->getBaseline());
90006e3e:	fa1f f888 	uxth.w	r8, r8
90006e42:	6b5e      	ldr	r6, [r3, #52]	; 0x34
90006e44:	680b      	ldr	r3, [r1, #0]
90006e46:	2b00      	cmp	r3, #0
90006e48:	d032      	beq.n	90006eb0 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x90>
        return typedTextId < numberOfTypedTexts;
90006e4a:	491f      	ldr	r1, [pc, #124]	; (90006ec8 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xa8>)
90006e4c:	8daa      	ldrh	r2, [r5, #44]	; 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90006e4e:	8809      	ldrh	r1, [r1, #0]
90006e50:	4291      	cmp	r1, r2
90006e52:	d927      	bls.n	90006ea4 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x84>
        return fonts[typedTexts[typedTextId].fontIdx];
90006e54:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
90006e58:	4b1c      	ldr	r3, [pc, #112]	; (90006ecc <_ZN8touchgfx8TextArea13setXBaselineYEss+0xac>)
90006e5a:	681b      	ldr	r3, [r3, #0]
90006e5c:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
90006e60:	4a1b      	ldr	r2, [pc, #108]	; (90006ed0 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb0>)
90006e62:	6803      	ldr	r3, [r0, #0]
90006e64:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90006e66:	4293      	cmp	r3, r2
90006e68:	d11a      	bne.n	90006ea0 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x80>
90006e6a:	88c0      	ldrh	r0, [r0, #6]
90006e6c:	4b19      	ldr	r3, [pc, #100]	; (90006ed4 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb4>)
90006e6e:	eba8 0200 	sub.w	r2, r8, r0
90006e72:	429e      	cmp	r6, r3
90006e74:	b211      	sxth	r1, r2
90006e76:	d10e      	bne.n	90006e96 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x76>
        rect.y = y;
90006e78:	80e9      	strh	r1, [r5, #6]
    }
90006e7a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        setX(x);
90006e7e:	47b0      	blx	r6
        setBaselineY(baselineY);
90006e80:	682b      	ldr	r3, [r5, #0]
90006e82:	490f      	ldr	r1, [pc, #60]	; (90006ec0 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xa0>)
90006e84:	6e5c      	ldr	r4, [r3, #100]	; 0x64
90006e86:	428c      	cmp	r4, r1
90006e88:	d0d8      	beq.n	90006e3c <_ZN8touchgfx8TextArea13setXBaselineYEss+0x1c>
90006e8a:	4641      	mov	r1, r8
90006e8c:	4628      	mov	r0, r5
90006e8e:	4623      	mov	r3, r4
    }
90006e90:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
        setBaselineY(baselineY);
90006e94:	4718      	bx	r3
        setY(baselineY - getTypedText().getFont()->getBaseline());
90006e96:	4628      	mov	r0, r5
90006e98:	4633      	mov	r3, r6
    }
90006e9a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
90006e9e:	4718      	bx	r3
90006ea0:	4798      	blx	r3
90006ea2:	e7e3      	b.n	90006e6c <_ZN8touchgfx8TextArea13setXBaselineYEss+0x4c>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90006ea4:	4b0c      	ldr	r3, [pc, #48]	; (90006ed8 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb8>)
90006ea6:	216d      	movs	r1, #109	; 0x6d
90006ea8:	4a0c      	ldr	r2, [pc, #48]	; (90006edc <_ZN8touchgfx8TextArea13setXBaselineYEss+0xbc>)
90006eaa:	480d      	ldr	r0, [pc, #52]	; (90006ee0 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xc0>)
90006eac:	f022 fee6 	bl	90029c7c <__assert_func>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90006eb0:	4b0c      	ldr	r3, [pc, #48]	; (90006ee4 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xc4>)
90006eb2:	216c      	movs	r1, #108	; 0x6c
90006eb4:	4a09      	ldr	r2, [pc, #36]	; (90006edc <_ZN8touchgfx8TextArea13setXBaselineYEss+0xbc>)
90006eb6:	480a      	ldr	r0, [pc, #40]	; (90006ee0 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xc0>)
90006eb8:	f022 fee0 	bl	90029c7c <__assert_func>
90006ebc:	9000452d 	.word	0x9000452d
90006ec0:	90006d0d 	.word	0x90006d0d
90006ec4:	24023724 	.word	0x24023724
90006ec8:	24023728 	.word	0x24023728
90006ecc:	2402372c 	.word	0x2402372c
90006ed0:	90005c45 	.word	0x90005c45
90006ed4:	90004531 	.word	0x90004531
90006ed8:	9002d728 	.word	0x9002d728
90006edc:	9002d6a4 	.word	0x9002d6a4
90006ee0:	9002d6e0 	.word	0x9002d6e0
90006ee4:	9002d660 	.word	0x9002d660

90006ee8 <_ZN24screen_asteroidsViewBaseC1Ev>:
screen_asteroidsViewBase::screen_asteroidsViewBase() :
90006ee8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90006eec:	ed2d 8b02 	vpush	{d8}
90006ef0:	b097      	sub	sp, #92	; 0x5c
90006ef2:	4604      	mov	r4, r0
        : presenter(0)
90006ef4:	f013 f914 	bl	9001a120 <_ZN8touchgfx6ScreenC1Ev>
    buttonCallback(this, &screen_asteroidsViewBase::buttonCallbackHandler)
90006ef8:	4938      	ldr	r1, [pc, #224]	; (90006fdc <_ZN24screen_asteroidsViewBaseC1Ev+0xf4>)
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
90006efa:	23ff      	movs	r3, #255	; 0xff
90006efc:	2500      	movs	r5, #0
          touchable(false),
90006efe:	f44f 7280 	mov.w	r2, #256	; 0x100
90006f02:	6021      	str	r1, [r4, #0]
90006f04:	f104 0b98 	add.w	fp, r4, #152	; 0x98
90006f08:	4935      	ldr	r1, [pc, #212]	; (90006fe0 <_ZN24screen_asteroidsViewBaseC1Ev+0xf8>)
90006f0a:	ae14      	add	r6, sp, #80	; 0x50
90006f0c:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
90006f10:	f884 3092 	strb.w	r3, [r4, #146]	; 0x92
90006f14:	f104 09c4 	add.w	r9, r4, #196	; 0xc4
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
90006f18:	f64f 73ff 	movw	r3, #65535	; 0xffff
90006f1c:	f8a4 2064 	strh.w	r2, [r4, #100]	; 0x64
90006f20:	f8a4 2090 	strh.w	r2, [r4, #144]	; 0x90
90006f24:	4658      	mov	r0, fp
90006f26:	6421      	str	r1, [r4, #64]	; 0x40
90006f28:	66e1      	str	r1, [r4, #108]	; 0x6c
90006f2a:	4631      	mov	r1, r6
90006f2c:	63e5      	str	r5, [r4, #60]	; 0x3c
        : color(col)
90006f2e:	66a5      	str	r5, [r4, #104]	; 0x68
90006f30:	f8c4 5094 	str.w	r5, [r4, #148]	; 0x94
90006f34:	f8ad 3050 	strh.w	r3, [sp, #80]	; 0x50
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
90006f38:	4f2a      	ldr	r7, [pc, #168]	; (90006fe4 <_ZN24screen_asteroidsViewBaseC1Ev+0xfc>)
        : x(0), y(0), width(0), height(0)
90006f3a:	e9c4 5511 	strd	r5, r5, [r4, #68]	; 0x44
90006f3e:	e9c4 5513 	strd	r5, r5, [r4, #76]	; 0x4c
          nextSibling(0),
90006f42:	e9c4 5515 	strd	r5, r5, [r4, #84]	; 0x54
          cachedAbsX(0),
90006f46:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
90006f4a:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
90006f4e:	e9c4 551e 	strd	r5, r5, [r4, #120]	; 0x78
          nextSibling(0),
90006f52:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
          cachedAbsX(0),
90006f56:	e9c4 5522 	strd	r5, r5, [r4, #136]	; 0x88
90006f5a:	f00e f975 	bl	90015248 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90006f5e:	4648      	mov	r0, r9
90006f60:	f00d febc 	bl	90014cdc <_ZN8touchgfx13AbstractShapeC1Ev>
90006f64:	4a20      	ldr	r2, [pc, #128]	; (90006fe8 <_ZN24screen_asteroidsViewBaseC1Ev+0x100>)
90006f66:	683b      	ldr	r3, [r7, #0]
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
90006f68:	f504 71a0 	add.w	r1, r4, #320	; 0x140
90006f6c:	f8c4 20c4 	str.w	r2, [r4, #196]	; 0xc4
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
        : AbstractPainter()
90006f70:	4a1e      	ldr	r2, [pc, #120]	; (90006fec <_ZN24screen_asteroidsViewBaseC1Ev+0x104>)
        : widgetWidth(0)
90006f72:	f8a4 5144 	strh.w	r5, [r4, #324]	; 0x144
90006f76:	f8c4 2140 	str.w	r2, [r4, #320]	; 0x140
90006f7a:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
90006f7e:	910b      	str	r1, [sp, #44]	; 0x2c
            : v(0)
90006f80:	e9c4 5544 	strd	r5, r5, [r4, #272]	; 0x110
90006f84:	e9c4 5546 	strd	r5, r5, [r4, #280]	; 0x118
90006f88:	e9c4 5548 	strd	r5, r5, [r4, #288]	; 0x120
90006f8c:	e9c4 554a 	strd	r5, r5, [r4, #296]	; 0x128
90006f90:	e9c4 554c 	strd	r5, r5, [r4, #304]	; 0x130
90006f94:	e9c4 554e 	strd	r5, r5, [r4, #312]	; 0x138
90006f98:	2a00      	cmp	r2, #0
90006f9a:	d031      	beq.n	90007000 <_ZN24screen_asteroidsViewBaseC1Ev+0x118>
90006f9c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
90006f9e:	2800      	cmp	r0, #0
90006fa0:	f000 8400 	beq.w	900077a4 <_ZN24screen_asteroidsViewBaseC1Ev+0x8bc>
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
90006fa4:	6803      	ldr	r3, [r0, #0]
90006fa6:	4d12      	ldr	r5, [pc, #72]	; (90006ff0 <_ZN24screen_asteroidsViewBaseC1Ev+0x108>)
90006fa8:	6ada      	ldr	r2, [r3, #44]	; 0x2c
90006faa:	42aa      	cmp	r2, r5
90006fac:	d035      	beq.n	9000701a <_ZN24screen_asteroidsViewBaseC1Ev+0x132>
90006fae:	4790      	blx	r2
        return auxiliaryLCD;
90006fb0:	683b      	ldr	r3, [r7, #0]
90006fb2:	fab0 f780 	clz	r7, r0
90006fb6:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
90006fb8:	097f      	lsrs	r7, r7, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
90006fba:	b140      	cbz	r0, 90006fce <_ZN24screen_asteroidsViewBaseC1Ev+0xe6>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
90006fbc:	6803      	ldr	r3, [r0, #0]
90006fbe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90006fc0:	42ab      	cmp	r3, r5
90006fc2:	d02a      	beq.n	9000701a <_ZN24screen_asteroidsViewBaseC1Ev+0x132>
90006fc4:	4798      	blx	r3
90006fc6:	2800      	cmp	r0, #0
90006fc8:	bf08      	it	eq
90006fca:	f047 0701 	orreq.w	r7, r7, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
90006fce:	bb27      	cbnz	r7, 9000701a <_ZN24screen_asteroidsViewBaseC1Ev+0x132>
90006fd0:	4b08      	ldr	r3, [pc, #32]	; (90006ff4 <_ZN24screen_asteroidsViewBaseC1Ev+0x10c>)
90006fd2:	212c      	movs	r1, #44	; 0x2c
90006fd4:	4a08      	ldr	r2, [pc, #32]	; (90006ff8 <_ZN24screen_asteroidsViewBaseC1Ev+0x110>)
90006fd6:	4809      	ldr	r0, [pc, #36]	; (90006ffc <_ZN24screen_asteroidsViewBaseC1Ev+0x114>)
90006fd8:	f022 fe50 	bl	90029c7c <__assert_func>
90006fdc:	9002d9e8 	.word	0x9002d9e8
90006fe0:	9002e464 	.word	0x9002e464
90006fe4:	240236cc 	.word	0x240236cc
90006fe8:	9002d93c 	.word	0x9002d93c
90006fec:	9002ca44 	.word	0x9002ca44
90006ff0:	900045d1 	.word	0x900045d1
90006ff4:	9002d768 	.word	0x9002d768
90006ff8:	9002d7c8 	.word	0x9002d7c8
90006ffc:	9002d804 	.word	0x9002d804
        return instance->lcdRef;
90007000:	6898      	ldr	r0, [r3, #8]
90007002:	4ddf      	ldr	r5, [pc, #892]	; (90007380 <_ZN24screen_asteroidsViewBaseC1Ev+0x498>)
        bool compat = HAL::lcd().framebufferFormat() == format;
90007004:	6802      	ldr	r2, [r0, #0]
90007006:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
90007008:	42aa      	cmp	r2, r5
9000700a:	d1d0      	bne.n	90006fae <_ZN24screen_asteroidsViewBaseC1Ev+0xc6>
        return auxiliaryLCD;
9000700c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
        if (HAL::getInstance()->getAuxiliaryLCD())
9000700e:	b120      	cbz	r0, 9000701a <_ZN24screen_asteroidsViewBaseC1Ev+0x132>
        bool compat = HAL::lcd().framebufferFormat() == format;
90007010:	6803      	ldr	r3, [r0, #0]
90007012:	2701      	movs	r7, #1
90007014:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90007016:	42ab      	cmp	r3, r5
90007018:	d1d4      	bne.n	90006fc4 <_ZN24screen_asteroidsViewBaseC1Ev+0xdc>
9000701a:	4bda      	ldr	r3, [pc, #872]	; (90007384 <_ZN24screen_asteroidsViewBaseC1Ev+0x49c>)
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
9000701c:	2500      	movs	r5, #0
        : typedTextId(id)
9000701e:	4ada      	ldr	r2, [pc, #872]	; (90007388 <_ZN24screen_asteroidsViewBaseC1Ev+0x4a0>)
          touchable(false),
90007020:	f44f 7a80 	mov.w	sl, #256	; 0x100
90007024:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
90007028:	3324      	adds	r3, #36	; 0x24
9000702a:	f64f 78ff 	movw	r8, #65535	; 0xffff
          firstChild(0)
9000702e:	4fd7      	ldr	r7, [pc, #860]	; (9000738c <_ZN24screen_asteroidsViewBaseC1Ev+0x4a4>)
        : TextAreaWithWildcardBase(), wc1(0)
90007030:	49d7      	ldr	r1, [pc, #860]	; (90007390 <_ZN24screen_asteroidsViewBaseC1Ev+0x4a8>)
90007032:	f504 70e6 	add.w	r0, r4, #460	; 0x1cc
90007036:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
9000703a:	f04f 33ff 	mov.w	r3, #4294967295
9000703e:	f8c4 217c 	str.w	r2, [r4, #380]	; 0x17c
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
90007042:	22ff      	movs	r2, #255	; 0xff
90007044:	f8c4 514c 	str.w	r5, [r4, #332]	; 0x14c
90007048:	ee08 0a10 	vmov	s16, r0
9000704c:	f8c4 218a 	str.w	r2, [r4, #394]	; 0x18a
        : color(col)
90007050:	f8c4 5184 	str.w	r5, [r4, #388]	; 0x184
90007054:	f8a4 5188 	strh.w	r5, [r4, #392]	; 0x188
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90007058:	f8c4 5190 	str.w	r5, [r4, #400]	; 0x190
9000705c:	f8a4 8180 	strh.w	r8, [r4, #384]	; 0x180
90007060:	f8c4 3194 	str.w	r3, [r4, #404]	; 0x194
90007064:	f8c4 71a0 	str.w	r7, [r4, #416]	; 0x1a0
90007068:	f8c4 1154 	str.w	r1, [r4, #340]	; 0x154
9000706c:	4631      	mov	r1, r6
9000706e:	f8a4 a178 	strh.w	sl, [r4, #376]	; 0x178
90007072:	f8a4 a1c4 	strh.w	sl, [r4, #452]	; 0x1c4
        : x(0), y(0), width(0), height(0)
90007076:	e9c4 5556 	strd	r5, r5, [r4, #344]	; 0x158
9000707a:	e9c4 5558 	strd	r5, r5, [r4, #352]	; 0x160
          nextSibling(0),
9000707e:	e9c4 555a 	strd	r5, r5, [r4, #360]	; 0x168
          cachedAbsX(0),
90007082:	e9c4 555c 	strd	r5, r5, [r4, #368]	; 0x170
90007086:	e9c4 5566 	strd	r5, r5, [r4, #408]	; 0x198
9000708a:	e9c4 5569 	strd	r5, r5, [r4, #420]	; 0x1a4
9000708e:	e9c4 556b 	strd	r5, r5, [r4, #428]	; 0x1ac
          nextSibling(0),
90007092:	e9c4 556d 	strd	r5, r5, [r4, #436]	; 0x1b4
          cachedAbsX(0),
90007096:	e9c4 556f 	strd	r5, r5, [r4, #444]	; 0x1bc
9000709a:	f8c4 51c8 	str.w	r5, [r4, #456]	; 0x1c8
9000709e:	f8ad 3050 	strh.w	r3, [sp, #80]	; 0x50
900070a2:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
900070a6:	9302      	str	r3, [sp, #8]
900070a8:	f00e f8ce 	bl	90015248 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
900070ac:	f504 7109 	add.w	r1, r4, #548	; 0x224
900070b0:	9802      	ldr	r0, [sp, #8]
900070b2:	f8ad 8050 	strh.w	r8, [sp, #80]	; 0x50
900070b6:	9103      	str	r1, [sp, #12]
900070b8:	4631      	mov	r1, r6
900070ba:	f00e f8c5 	bl	90015248 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
900070be:	f504 731f 	add.w	r3, r4, #636	; 0x27c
900070c2:	4631      	mov	r1, r6
900070c4:	9803      	ldr	r0, [sp, #12]
900070c6:	9304      	str	r3, [sp, #16]
900070c8:	f8ad 8050 	strh.w	r8, [sp, #80]	; 0x50
900070cc:	f00e f8bc 	bl	90015248 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
900070d0:	f504 712e 	add.w	r1, r4, #696	; 0x2b8
900070d4:	f8c4 7250 	str.w	r7, [r4, #592]	; 0x250
900070d8:	f8c4 5278 	str.w	r5, [r4, #632]	; 0x278
900070dc:	9804      	ldr	r0, [sp, #16]
          touchable(false),
900070de:	f8a4 a274 	strh.w	sl, [r4, #628]	; 0x274
900070e2:	9105      	str	r1, [sp, #20]
900070e4:	e9c4 5595 	strd	r5, r5, [r4, #596]	; 0x254
900070e8:	e9c4 5597 	strd	r5, r5, [r4, #604]	; 0x25c
          nextSibling(0),
900070ec:	e9c4 5599 	strd	r5, r5, [r4, #612]	; 0x264
          cachedAbsX(0),
900070f0:	e9c4 559b 	strd	r5, r5, [r4, #620]	; 0x26c
900070f4:	f00f f80e 	bl	90016114 <_ZN8touchgfx14ButtonWithIconC1Ev>
900070f8:	f504 733d 	add.w	r3, r4, #756	; 0x2f4
900070fc:	9805      	ldr	r0, [sp, #20]
900070fe:	9306      	str	r3, [sp, #24]
90007100:	f00f f808 	bl	90016114 <_ZN8touchgfx14ButtonWithIconC1Ev>
90007104:	f504 714c 	add.w	r1, r4, #816	; 0x330
90007108:	9806      	ldr	r0, [sp, #24]
9000710a:	9107      	str	r1, [sp, #28]
9000710c:	f00f f802 	bl	90016114 <_ZN8touchgfx14ButtonWithIconC1Ev>
90007110:	f504 735b 	add.w	r3, r4, #876	; 0x36c
90007114:	9807      	ldr	r0, [sp, #28]
90007116:	9308      	str	r3, [sp, #32]
90007118:	f00e fffc 	bl	90016114 <_ZN8touchgfx14ButtonWithIconC1Ev>
9000711c:	f204 412c 	addw	r1, r4, #1068	; 0x42c
90007120:	9808      	ldr	r0, [sp, #32]
90007122:	9109      	str	r1, [sp, #36]	; 0x24
90007124:	f00e fff6 	bl	90016114 <_ZN8touchgfx14ButtonWithIconC1Ev>
90007128:	4b9a      	ldr	r3, [pc, #616]	; (90007394 <_ZN24screen_asteroidsViewBaseC1Ev+0x4ac>)
9000712a:	f8c4 73d4 	str.w	r7, [r4, #980]	; 0x3d4
9000712e:	f504 678d 	add.w	r7, r4, #1128	; 0x468
90007132:	f8c4 33a8 	str.w	r3, [r4, #936]	; 0x3a8
90007136:	f884 83ce 	strb.w	r8, [r4, #974]	; 0x3ce
        : color(col)
9000713a:	f8c4 53d0 	str.w	r5, [r4, #976]	; 0x3d0
9000713e:	f8c4 53fc 	str.w	r5, [r4, #1020]	; 0x3fc
        : x(0), y(0), width(0), height(0)
90007142:	f8c4 5404 	str.w	r5, [r4, #1028]	; 0x404
90007146:	f8c4 5408 	str.w	r5, [r4, #1032]	; 0x408
9000714a:	f8c4 540c 	str.w	r5, [r4, #1036]	; 0x40c
9000714e:	f8c4 5410 	str.w	r5, [r4, #1040]	; 0x410
          parent(0),
90007152:	f8c4 5414 	str.w	r5, [r4, #1044]	; 0x414
          nextSibling(0),
90007156:	f8c4 5418 	str.w	r5, [r4, #1048]	; 0x418
          nextDrawChainElement(0),
9000715a:	f8c4 541c 	str.w	r5, [r4, #1052]	; 0x41c
          cachedAbsX(0),
9000715e:	f8c4 5420 	str.w	r5, [r4, #1056]	; 0x420
          touchable(false),
90007162:	f8a4 a3cc 	strh.w	sl, [r4, #972]	; 0x3cc
90007166:	f8a4 a3f8 	strh.w	sl, [r4, #1016]	; 0x3f8
9000716a:	f8a4 a424 	strh.w	sl, [r4, #1060]	; 0x424
9000716e:	e9c4 55eb 	strd	r5, r5, [r4, #940]	; 0x3ac
90007172:	e9c4 55ed 	strd	r5, r5, [r4, #948]	; 0x3b4
          nextSibling(0),
90007176:	e9c4 55ef 	strd	r5, r5, [r4, #956]	; 0x3bc
          cachedAbsX(0),
9000717a:	e9c4 55f1 	strd	r5, r5, [r4, #964]	; 0x3c4
9000717e:	e9c4 55f6 	strd	r5, r5, [r4, #984]	; 0x3d8
90007182:	e9c4 55f8 	strd	r5, r5, [r4, #992]	; 0x3e0
          nextSibling(0),
90007186:	e9c4 55fa 	strd	r5, r5, [r4, #1000]	; 0x3e8
          cachedAbsX(0),
9000718a:	e9c4 55fc 	strd	r5, r5, [r4, #1008]	; 0x3f0
9000718e:	f8c4 3400 	str.w	r3, [r4, #1024]	; 0x400
90007192:	f04f 33ff 	mov.w	r3, #4294967295
        : color(col)
90007196:	f8c4 5428 	str.w	r5, [r4, #1064]	; 0x428
9000719a:	f884 3426 	strb.w	r3, [r4, #1062]	; 0x426
9000719e:	9809      	ldr	r0, [sp, #36]	; 0x24
900071a0:	970a      	str	r7, [sp, #40]	; 0x28
900071a2:	f00e ffb7 	bl	90016114 <_ZN8touchgfx14ButtonWithIconC1Ev>
900071a6:	980a      	ldr	r0, [sp, #40]	; 0x28
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
900071a8:	1d27      	adds	r7, r4, #4
900071aa:	f00e ffb3 	bl	90016114 <_ZN8touchgfx14ButtonWithIconC1Ev>
900071ae:	22ff      	movs	r2, #255	; 0xff
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
900071b0:	f04f 33ff 	mov.w	r3, #4294967295
        : x(0), y(0), width(0), height(0)
900071b4:	f8c4 54a8 	str.w	r5, [r4, #1192]	; 0x4a8
900071b8:	f8c4 24da 	str.w	r2, [r4, #1242]	; 0x4da
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
900071bc:	f44f 51e1 	mov.w	r1, #7200	; 0x1c20
900071c0:	4a71      	ldr	r2, [pc, #452]	; (90007388 <_ZN24screen_asteroidsViewBaseC1Ev+0x4a0>)
900071c2:	f204 5024 	addw	r0, r4, #1316	; 0x524
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
900071c6:	f8c4 34e4 	str.w	r3, [r4, #1252]	; 0x4e4
900071ca:	f8c4 24cc 	str.w	r2, [r4, #1228]	; 0x4cc
900071ce:	4b71      	ldr	r3, [pc, #452]	; (90007394 <_ZN24screen_asteroidsViewBaseC1Ev+0x4ac>)
900071d0:	4a71      	ldr	r2, [pc, #452]	; (90007398 <_ZN24screen_asteroidsViewBaseC1Ev+0x4b0>)
900071d2:	f8c4 34ec 	str.w	r3, [r4, #1260]	; 0x4ec
        : pobject(pObject), pmemfun(pmemfun_1)
900071d6:	f504 5300 	add.w	r3, r4, #8192	; 0x2000
900071da:	f8c4 24a4 	str.w	r2, [r4, #1188]	; 0x4a4
900071de:	4a6f      	ldr	r2, [pc, #444]	; (9000739c <_ZN24screen_asteroidsViewBaseC1Ev+0x4b4>)
        : x(0), y(0), width(0), height(0)
900071e0:	f8c4 54ac 	str.w	r5, [r4, #1196]	; 0x4ac
900071e4:	f8c4 54b0 	str.w	r5, [r4, #1200]	; 0x4b0
900071e8:	f8c4 54b4 	str.w	r5, [r4, #1204]	; 0x4b4
          parent(0),
900071ec:	f8c4 54b8 	str.w	r5, [r4, #1208]	; 0x4b8
          nextSibling(0),
900071f0:	f8c4 54bc 	str.w	r5, [r4, #1212]	; 0x4bc
          nextDrawChainElement(0),
900071f4:	f8c4 54c0 	str.w	r5, [r4, #1216]	; 0x4c0
          cachedAbsX(0),
900071f8:	f8c4 54c4 	str.w	r5, [r4, #1220]	; 0x4c4
900071fc:	f8a4 84d0 	strh.w	r8, [r4, #1232]	; 0x4d0
90007200:	f884 8512 	strb.w	r8, [r4, #1298]	; 0x512
        : color(col)
90007204:	f8c4 54d4 	str.w	r5, [r4, #1236]	; 0x4d4
90007208:	f8a4 54d8 	strh.w	r5, [r4, #1240]	; 0x4d8
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
9000720c:	f8c4 54e0 	str.w	r5, [r4, #1248]	; 0x4e0
              text(0)
90007210:	f8c4 54e8 	str.w	r5, [r4, #1256]	; 0x4e8
        : x(0), y(0), width(0), height(0)
90007214:	f8c4 54f0 	str.w	r5, [r4, #1264]	; 0x4f0
90007218:	f8c4 54f4 	str.w	r5, [r4, #1268]	; 0x4f4
9000721c:	f8c4 54f8 	str.w	r5, [r4, #1272]	; 0x4f8
90007220:	f8c4 54fc 	str.w	r5, [r4, #1276]	; 0x4fc
          parent(0),
90007224:	f8c4 5500 	str.w	r5, [r4, #1280]	; 0x500
          nextSibling(0),
90007228:	f8c4 5504 	str.w	r5, [r4, #1284]	; 0x504
          nextDrawChainElement(0),
9000722c:	f8c4 5508 	str.w	r5, [r4, #1288]	; 0x508
          cachedAbsX(0),
90007230:	f8c4 550c 	str.w	r5, [r4, #1292]	; 0x50c
        : color(col)
90007234:	f8c4 5514 	str.w	r5, [r4, #1300]	; 0x514
          touchable(false),
90007238:	f8a4 a4c8 	strh.w	sl, [r4, #1224]	; 0x4c8
9000723c:	f8a4 a510 	strh.w	sl, [r4, #1296]	; 0x510
90007240:	f8c3 2144 	str.w	r2, [r3, #324]	; 0x144
90007244:	4a56      	ldr	r2, [pc, #344]	; (900073a0 <_ZN24screen_asteroidsViewBaseC1Ev+0x4b8>)
90007246:	f8c3 4148 	str.w	r4, [r3, #328]	; 0x148
        rect.x = x;
9000724a:	f8df 816c 	ldr.w	r8, [pc, #364]	; 900073b8 <_ZN24screen_asteroidsViewBaseC1Ev+0x4d0>
9000724e:	e9c3 2553 	strd	r2, r5, [r3, #332]	; 0x14c
90007252:	f00f fe77 	bl	90016f44 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
90007256:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
9000725a:	f104 0140 	add.w	r1, r4, #64	; 0x40
9000725e:	4638      	mov	r0, r7
90007260:	6465      	str	r5, [r4, #68]	; 0x44
90007262:	f8c4 8048 	str.w	r8, [r4, #72]	; 0x48
90007266:	66a3      	str	r3, [r4, #104]	; 0x68
90007268:	f00c fae8 	bl	9001383c <_ZN8touchgfx9Container3addERNS_8DrawableE>
9000726c:	4b4d      	ldr	r3, [pc, #308]	; (900073a4 <_ZN24screen_asteroidsViewBaseC1Ev+0x4bc>)
9000726e:	f104 016c 	add.w	r1, r4, #108	; 0x6c
90007272:	4638      	mov	r0, r7
90007274:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
90007278:	e9c4 581c 	strd	r5, r8, [r4, #112]	; 0x70
9000727c:	f00c fade 	bl	9001383c <_ZN8touchgfx9Container3addERNS_8DrawableE>
90007280:	2303      	movs	r3, #3
    icon_rock.setBitmap(touchgfx::Bitmap(BITMAP_ASTEROIDS_ROCK_ID));
90007282:	4658      	mov	r0, fp
90007284:	4631      	mov	r1, r6
90007286:	f8ad 3050 	strh.w	r3, [sp, #80]	; 0x50
9000728a:	f00e ff6a 	bl	90016162 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
9000728e:	4b46      	ldr	r3, [pc, #280]	; (900073a8 <_ZN24screen_asteroidsViewBaseC1Ev+0x4c0>)
    icon_rock.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90007290:	4629      	mov	r1, r5
90007292:	f8df c128 	ldr.w	ip, [pc, #296]	; 900073bc <_ZN24screen_asteroidsViewBaseC1Ev+0x4d4>
90007296:	4658      	mov	r0, fp
    buttonCallback(this, &screen_asteroidsViewBase::buttonCallbackHandler)
90007298:	f504 7875 	add.w	r8, r4, #980	; 0x3d4
9000729c:	e9c4 c327 	strd	ip, r3, [r4, #156]	; 0x9c
    icon_rock.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
900072a0:	f00d ff8d 	bl	900151be <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
900072a4:	4659      	mov	r1, fp
        visible = vis;
900072a6:	f884 50bd 	strb.w	r5, [r4, #189]	; 0xbd
900072aa:	4638      	mov	r0, r7
900072ac:	f00c fac6 	bl	9001383c <_ZN8touchgfx9Container3addERNS_8DrawableE>
        rect.x = x;
900072b0:	f04f 131e 	mov.w	r3, #1966110	; 0x1e001e
900072b4:	f8df e108 	ldr.w	lr, [pc, #264]	; 900073c0 <_ZN24screen_asteroidsViewBaseC1Ev+0x4d8>
    buttonCallback(this, &screen_asteroidsViewBase::buttonCallbackHandler)
900072b8:	f204 42a4 	addw	r2, r4, #1188	; 0x4a4
900072bc:	f504 7bd0 	add.w	fp, r4, #416	; 0x1a0
900072c0:	f504 7514 	add.w	r5, r4, #592	; 0x250
900072c4:	ee08 2a90 	vmov	s17, r2
900072c8:	e9c4 e332 	strd	lr, r3, [r4, #200]	; 0xc8
    void setOrigin(T x, T y)
    {
        CWRUtil::Q5 dxNew = CWRUtil::toQ5<T>(x);
        CWRUtil::Q5 dyNew = CWRUtil::toQ5<T>(y);

        if (dx == dxNew && dy == dyNew)
900072cc:	f8d4 30f4 	ldr.w	r3, [r4, #244]	; 0xf4
900072d0:	b913      	cbnz	r3, 900072d8 <_ZN24screen_asteroidsViewBaseC1Ev+0x3f0>
900072d2:	f8d4 30f8 	ldr.w	r3, [r4, #248]	; 0xf8
900072d6:	b12b      	cbz	r3, 900072e4 <_ZN24screen_asteroidsViewBaseC1Ev+0x3fc>
        {
            return;
        }

        dx = dxNew;
900072d8:	2300      	movs	r3, #0
        dy = dyNew;

        updateAbstractShapeCache();
900072da:	4648      	mov	r0, r9
        dy = dyNew;
900072dc:	e9c4 333d 	strd	r3, r3, [r4, #244]	; 0xf4
        updateAbstractShapeCache();
900072e0:	f00d fd14 	bl	90014d0c <_ZN8touchgfx13AbstractShape24updateAbstractShapeCacheEv>
     * @note The area containing the AbstractShape is not invalidated.
     */
    template <typename T>
    void setScale(T newXScale, T newYScale)
    {
        xScale = CWRUtil::toQ10<T>(newXScale);
900072e4:	f44f 6380 	mov.w	r3, #1024	; 0x400
        yScale = CWRUtil::toQ10<T>(newYScale);
        updateAbstractShapeCache();
900072e8:	4648      	mov	r0, r9
        yScale = CWRUtil::toQ10<T>(newYScale);
900072ea:	e9c4 3340 	strd	r3, r3, [r4, #256]	; 0x100
        updateAbstractShapeCache();
900072ee:	f00d fd0d 	bl	90014d0c <_ZN8touchgfx13AbstractShape24updateAbstractShapeCacheEv>
        if (shapeAngle != angleQ5)
900072f2:	f8d4 30fc 	ldr.w	r3, [r4, #252]	; 0xfc
900072f6:	b12b      	cbz	r3, 90007304 <_ZN24screen_asteroidsViewBaseC1Ev+0x41c>
            shapeAngle = angleQ5;
900072f8:	2300      	movs	r3, #0
            updateAbstractShapeCache();
900072fa:	4648      	mov	r0, r9
            shapeAngle = angleQ5;
900072fc:	f8c4 30fc 	str.w	r3, [r4, #252]	; 0xfc
            updateAbstractShapeCache();
90007300:	f00d fd04 	bl	90014d0c <_ZN8touchgfx13AbstractShape24updateAbstractShapeCacheEv>
        canvasPainter = &painter;
90007304:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
            xCorner[i] = x, yCorner[i] = y;
90007306:	f44f 7270 	mov.w	r2, #960	; 0x3c0
9000730a:	f04f 0a00 	mov.w	sl, #0
        updateAbstractShapeCache();
9000730e:	4648      	mov	r0, r9
90007310:	f8c4 30ec 	str.w	r3, [r4, #236]	; 0xec
90007314:	f04f 33ff 	mov.w	r3, #4294967295
90007318:	f8c4 2114 	str.w	r2, [r4, #276]	; 0x114
9000731c:	f8c4 314c 	str.w	r3, [r4, #332]	; 0x14c
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
90007320:	f8a4 3150 	strh.w	r3, [r4, #336]	; 0x150
90007324:	e9c4 2248 	strd	r2, r2, [r4, #288]	; 0x120
90007328:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
9000732c:	e9c4 aa46 	strd	sl, sl, [r4, #280]	; 0x118
90007330:	f8c4 2110 	str.w	r2, [r4, #272]	; 0x110
90007334:	f00d fcea 	bl	90014d0c <_ZN8touchgfx13AbstractShape24updateAbstractShapeCacheEv>
90007338:	4649      	mov	r1, r9
9000733a:	4638      	mov	r0, r7
    lbl_score.setXY(338, 3);
9000733c:	f504 79aa 	add.w	r9, r4, #340	; 0x154
90007340:	f00c fa7c 	bl	9001383c <_ZN8touchgfx9Container3addERNS_8DrawableE>
90007344:	4919      	ldr	r1, [pc, #100]	; (900073ac <_ZN24screen_asteroidsViewBaseC1Ev+0x4c4>)
        setX(x);
90007346:	f8d4 2154 	ldr.w	r2, [r4, #340]	; 0x154
        color = newColor;
9000734a:	f04f 33ff 	mov.w	r3, #4294967295
        linespace = space;
9000734e:	f8a4 a188 	strh.w	sl, [r4, #392]	; 0x188
        boundingArea = calculateBoundingArea();
90007352:	f8d2 2084 	ldr.w	r2, [r2, #132]	; 0x84
        rect.x = x;
90007356:	f8c4 1158 	str.w	r1, [r4, #344]	; 0x158
9000735a:	4915      	ldr	r1, [pc, #84]	; (900073b0 <_ZN24screen_asteroidsViewBaseC1Ev+0x4c8>)
        color = newColor;
9000735c:	f8c4 3184 	str.w	r3, [r4, #388]	; 0x184
90007360:	428a      	cmp	r2, r1
90007362:	f040 8228 	bne.w	900077b6 <_ZN24screen_asteroidsViewBaseC1Ev+0x8ce>
        boundingArea = calculateBoundingArea();
90007366:	f8c4 a198 	str.w	sl, [r4, #408]	; 0x198
9000736a:	e9c4 a364 	strd	sl, r3, [r4, #400]	; 0x190
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
9000736e:	4b11      	ldr	r3, [pc, #68]	; (900073b4 <_ZN24screen_asteroidsViewBaseC1Ev+0x4cc>)
    Unicode::snprintf(lbl_scoreBuffer, LBL_SCORE_SIZE, "%s", touchgfx::TypedText(T_SCORE_VALUE).getText());
90007370:	f504 6aa3 	add.w	sl, r4, #1304	; 0x518
90007374:	681b      	ldr	r3, [r3, #0]
90007376:	2b00      	cmp	r3, #0
90007378:	f000 822f 	beq.w	900077da <_ZN24screen_asteroidsViewBaseC1Ev+0x8f2>
9000737c:	e022      	b.n	900073c4 <_ZN24screen_asteroidsViewBaseC1Ev+0x4dc>
9000737e:	bf00      	nop
90007380:	900045d1 	.word	0x900045d1
90007384:	9002e0f4 	.word	0x9002e0f4
90007388:	9002cd98 	.word	0x9002cd98
9000738c:	9002e034 	.word	0x9002e034
90007390:	9002d8ac 	.word	0x9002d8ac
90007394:	9002e464 	.word	0x9002e464
90007398:	9002e3d4 	.word	0x9002e3d4
9000739c:	9002d9d0 	.word	0x9002d9d0
900073a0:	90006da1 	.word	0x90006da1
900073a4:	ff333333 	.word	0xff333333
900073a8:	001d0022 	.word	0x001d0022
900073ac:	00030152 	.word	0x00030152
900073b0:	90006bcd 	.word	0x90006bcd
900073b4:	24023724 	.word	0x24023724
900073b8:	011001e0 	.word	0x011001e0
900073bc:	004f011d 	.word	0x004f011d
900073c0:	00e300e1 	.word	0x00e300e1
        return typedTextId < numberOfTypedTexts;
900073c4:	4bdf      	ldr	r3, [pc, #892]	; (90007744 <_ZN24screen_asteroidsViewBaseC1Ev+0x85c>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
900073c6:	881b      	ldrh	r3, [r3, #0]
900073c8:	2b01      	cmp	r3, #1
900073ca:	f240 8200 	bls.w	900077ce <_ZN24screen_asteroidsViewBaseC1Ev+0x8e6>
        return texts->getText(typedTextId);
900073ce:	4bde      	ldr	r3, [pc, #888]	; (90007748 <_ZN24screen_asteroidsViewBaseC1Ev+0x860>)
900073d0:	2101      	movs	r1, #1
900073d2:	6818      	ldr	r0, [r3, #0]
900073d4:	f7ff fb98 	bl	90006b08 <_ZNK8touchgfx5Texts7getTextEt>
900073d8:	4adc      	ldr	r2, [pc, #880]	; (9000774c <_ZN24screen_asteroidsViewBaseC1Ev+0x864>)
900073da:	4603      	mov	r3, r0
900073dc:	2106      	movs	r1, #6
900073de:	4650      	mov	r0, sl
900073e0:	f014 fb56 	bl	9001ba90 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    lbl_score.resizeToCurrentText();
900073e4:	4648      	mov	r0, r9
        wc1 = value;
900073e6:	f8c4 a19c 	str.w	sl, [r4, #412]	; 0x19c
        : typedTextId(id)
900073ea:	f04f 0a02 	mov.w	sl, #2
900073ee:	f00e fc5d 	bl	90015cac <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
900073f2:	4bd7      	ldr	r3, [pc, #860]	; (90007750 <_ZN24screen_asteroidsViewBaseC1Ev+0x868>)
    lbl_score.setTypedText(touchgfx::TypedText(T___SINGLEUSE_W1MR));
900073f4:	4631      	mov	r1, r6
900073f6:	4648      	mov	r0, r9
900073f8:	9314      	str	r3, [sp, #80]	; 0x50
900073fa:	f8ad a054 	strh.w	sl, [sp, #84]	; 0x54
900073fe:	f00e fc75 	bl	90015cec <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
90007402:	4649      	mov	r1, r9
90007404:	4638      	mov	r0, r7
90007406:	f00c fa19 	bl	9001383c <_ZN8touchgfx9Container3addERNS_8DrawableE>
9000740a:	4ad2      	ldr	r2, [pc, #840]	; (90007754 <_ZN24screen_asteroidsViewBaseC1Ev+0x86c>)
9000740c:	4bd2      	ldr	r3, [pc, #840]	; (90007758 <_ZN24screen_asteroidsViewBaseC1Ev+0x870>)
9000740e:	f04f 0904 	mov.w	r9, #4
    icon_heart1.setBitmap(touchgfx::Bitmap(BITMAP_HEART_ICON_ID));
90007412:	4631      	mov	r1, r6
90007414:	ee18 0a10 	vmov	r0, s16
90007418:	f8ad 9050 	strh.w	r9, [sp, #80]	; 0x50
9000741c:	e9c4 2369 	strd	r2, r3, [r4, #420]	; 0x1a4
90007420:	f00e fe9f 	bl	90016162 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90007424:	4bcd      	ldr	r3, [pc, #820]	; (9000775c <_ZN24screen_asteroidsViewBaseC1Ev+0x874>)
90007426:	f04f 1214 	mov.w	r2, #1310740	; 0x140014
    icon_heart1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
9000742a:	ee18 0a10 	vmov	r0, s16
9000742e:	2100      	movs	r1, #0
90007430:	e9c4 3274 	strd	r3, r2, [r4, #464]	; 0x1d0
90007434:	f00d fec3 	bl	900151be <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    container_health.add(icon_heart1);
90007438:	ee18 1a10 	vmov	r1, s16
9000743c:	4658      	mov	r0, fp
9000743e:	f00c f9fd 	bl	9001383c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    icon_heart2.setBitmap(touchgfx::Bitmap(BITMAP_HEART_ICON_ID));
90007442:	ed9d 8a02 	vldr	s16, [sp, #8]
90007446:	4631      	mov	r1, r6
90007448:	f8ad 9050 	strh.w	r9, [sp, #80]	; 0x50
9000744c:	ee18 0a10 	vmov	r0, s16
90007450:	f00e fe87 	bl	90016162 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90007454:	4bc2      	ldr	r3, [pc, #776]	; (90007760 <_ZN24screen_asteroidsViewBaseC1Ev+0x878>)
90007456:	f04f 1214 	mov.w	r2, #1310740	; 0x140014
    icon_heart2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
9000745a:	ee18 0a10 	vmov	r0, s16
9000745e:	2100      	movs	r1, #0
90007460:	e9c4 327f 	strd	r3, r2, [r4, #508]	; 0x1fc
90007464:	f00d feab 	bl	900151be <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    container_health.add(icon_heart2);
90007468:	ee18 1a10 	vmov	r1, s16
9000746c:	4658      	mov	r0, fp
9000746e:	f00c f9e5 	bl	9001383c <_ZN8touchgfx9Container3addERNS_8DrawableE>
90007472:	f8ad 9050 	strh.w	r9, [sp, #80]	; 0x50
    icon_heart3.setBitmap(touchgfx::Bitmap(BITMAP_HEART_ICON_ID));
90007476:	f8dd 900c 	ldr.w	r9, [sp, #12]
9000747a:	4631      	mov	r1, r6
9000747c:	4648      	mov	r0, r9
9000747e:	f00e fe70 	bl	90016162 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90007482:	4bb8      	ldr	r3, [pc, #736]	; (90007764 <_ZN24screen_asteroidsViewBaseC1Ev+0x87c>)
90007484:	f04f 1214 	mov.w	r2, #1310740	; 0x140014
    icon_heart3.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90007488:	4648      	mov	r0, r9
9000748a:	2100      	movs	r1, #0
9000748c:	e9c4 328a 	strd	r3, r2, [r4, #552]	; 0x228
90007490:	f00d fe95 	bl	900151be <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    container_health.add(icon_heart3);
90007494:	4649      	mov	r1, r9
90007496:	4658      	mov	r0, fp
90007498:	f04f 0901 	mov.w	r9, #1
9000749c:	f00c f9ce 	bl	9001383c <_ZN8touchgfx9Container3addERNS_8DrawableE>
900074a0:	4659      	mov	r1, fp
900074a2:	4638      	mov	r0, r7
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The value set is overwritten on a subsequent call to setBitmaps.
     */
    void setIconX(int16_t x)
    {
        iconX = x;
900074a4:	f06f 1b06 	mvn.w	fp, #393222	; 0x60006
900074a8:	f00c f9c8 	bl	9001383c <_ZN8touchgfx9Container3addERNS_8DrawableE>
900074ac:	49ae      	ldr	r1, [pc, #696]	; (90007768 <_ZN24screen_asteroidsViewBaseC1Ev+0x880>)
900074ae:	4baf      	ldr	r3, [pc, #700]	; (9000776c <_ZN24screen_asteroidsViewBaseC1Ev+0x884>)
    btn_right.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_RIGHT_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_RIGHT_50_50_E8F6FB_SVG_ID));
900074b0:	aa13      	add	r2, sp, #76	; 0x4c
900074b2:	9600      	str	r6, [sp, #0]
900074b4:	ed9d 8a04 	vldr	s16, [sp, #16]
900074b8:	f8ad a048 	strh.w	sl, [sp, #72]	; 0x48
900074bc:	ee18 0a10 	vmov	r0, s16
900074c0:	f8ad 9044 	strh.w	r9, [sp, #68]	; 0x44
900074c4:	e9c4 1395 	strd	r1, r3, [r4, #596]	; 0x254
900074c8:	4ba9      	ldr	r3, [pc, #676]	; (90007770 <_ZN24screen_asteroidsViewBaseC1Ev+0x888>)
900074ca:	a911      	add	r1, sp, #68	; 0x44
900074cc:	f8c4 3280 	str.w	r3, [r4, #640]	; 0x280
900074d0:	2308      	movs	r3, #8
900074d2:	f8ad 304c 	strh.w	r3, [sp, #76]	; 0x4c
900074d6:	f8ad 3050 	strh.w	r3, [sp, #80]	; 0x50
900074da:	4613      	mov	r3, r2
900074dc:	aa12      	add	r2, sp, #72	; 0x48
900074de:	f00e fd73 	bl	90015fc8 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    container_controls.add(btn_right);
900074e2:	ee18 1a10 	vmov	r1, s16
900074e6:	4628      	mov	r0, r5
900074e8:	f8c4 b2b4 	str.w	fp, [r4, #692]	; 0x2b4
900074ec:	f00c f9a6 	bl	9001383c <_ZN8touchgfx9Container3addERNS_8DrawableE>
900074f0:	4ba0      	ldr	r3, [pc, #640]	; (90007774 <_ZN24screen_asteroidsViewBaseC1Ev+0x88c>)
    btn_down.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_DOWN_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_DOWN_50_50_E8F6FB_SVG_ID));
900074f2:	ed9d 8a05 	vldr	s16, [sp, #20]
900074f6:	aa13      	add	r2, sp, #76	; 0x4c
900074f8:	9600      	str	r6, [sp, #0]
900074fa:	a911      	add	r1, sp, #68	; 0x44
900074fc:	f8c4 32bc 	str.w	r3, [r4, #700]	; 0x2bc
90007500:	2306      	movs	r3, #6
90007502:	ee18 0a10 	vmov	r0, s16
90007506:	f8ad 9044 	strh.w	r9, [sp, #68]	; 0x44
9000750a:	f8ad 304c 	strh.w	r3, [sp, #76]	; 0x4c
9000750e:	f8ad 3050 	strh.w	r3, [sp, #80]	; 0x50
90007512:	4613      	mov	r3, r2
90007514:	aa12      	add	r2, sp, #72	; 0x48
90007516:	f8ad a048 	strh.w	sl, [sp, #72]	; 0x48
9000751a:	f00e fd55 	bl	90015fc8 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
9000751e:	f06f 1205 	mvn.w	r2, #327685	; 0x50005
    container_controls.add(btn_down);
90007522:	ee18 1a10 	vmov	r1, s16
90007526:	4628      	mov	r0, r5
90007528:	f8c4 22f0 	str.w	r2, [r4, #752]	; 0x2f0
9000752c:	f00c f986 	bl	9001383c <_ZN8touchgfx9Container3addERNS_8DrawableE>
90007530:	4b91      	ldr	r3, [pc, #580]	; (90007778 <_ZN24screen_asteroidsViewBaseC1Ev+0x890>)
    btn_left.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_LEFT_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_LEFT_50_50_E8F6FB_SVG_ID));
90007532:	ed9d 8a06 	vldr	s16, [sp, #24]
90007536:	aa13      	add	r2, sp, #76	; 0x4c
90007538:	9600      	str	r6, [sp, #0]
9000753a:	a911      	add	r1, sp, #68	; 0x44
9000753c:	f8c4 32f8 	str.w	r3, [r4, #760]	; 0x2f8
90007540:	2307      	movs	r3, #7
90007542:	ee18 0a10 	vmov	r0, s16
90007546:	f8ad 9044 	strh.w	r9, [sp, #68]	; 0x44
9000754a:	f8ad 304c 	strh.w	r3, [sp, #76]	; 0x4c
9000754e:	f8ad 3050 	strh.w	r3, [sp, #80]	; 0x50
90007552:	4613      	mov	r3, r2
90007554:	aa12      	add	r2, sp, #72	; 0x48
90007556:	f8ad a048 	strh.w	sl, [sp, #72]	; 0x48
9000755a:	f00e fd35 	bl	90015fc8 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    container_controls.add(btn_left);
9000755e:	ee18 1a10 	vmov	r1, s16
90007562:	4628      	mov	r0, r5
90007564:	f8c4 b32c 	str.w	fp, [r4, #812]	; 0x32c
90007568:	f00c f968 	bl	9001383c <_ZN8touchgfx9Container3addERNS_8DrawableE>
9000756c:	f240 137b 	movw	r3, #379	; 0x17b
    btn_up.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_UP_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_UP_50_50_E8F6FB_SVG_ID));
90007570:	f8dd b01c 	ldr.w	fp, [sp, #28]
90007574:	aa13      	add	r2, sp, #76	; 0x4c
90007576:	9600      	str	r6, [sp, #0]
90007578:	a911      	add	r1, sp, #68	; 0x44
9000757a:	f8c4 3334 	str.w	r3, [r4, #820]	; 0x334
9000757e:	2309      	movs	r3, #9
90007580:	4658      	mov	r0, fp
90007582:	f8ad 9044 	strh.w	r9, [sp, #68]	; 0x44
90007586:	f8ad 304c 	strh.w	r3, [sp, #76]	; 0x4c
9000758a:	f8ad 3050 	strh.w	r3, [sp, #80]	; 0x50
9000758e:	4613      	mov	r3, r2
90007590:	aa12      	add	r2, sp, #72	; 0x48
90007592:	f8ad a048 	strh.w	sl, [sp, #72]	; 0x48
90007596:	f00e fd17 	bl	90015fc8 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
9000759a:	f06f 1205 	mvn.w	r2, #327685	; 0x50005
    container_controls.add(btn_up);
9000759e:	4659      	mov	r1, fp
900075a0:	4628      	mov	r0, r5
900075a2:	f8c4 2368 	str.w	r2, [r4, #872]	; 0x368
900075a6:	f00c f949 	bl	9001383c <_ZN8touchgfx9Container3addERNS_8DrawableE>
900075aa:	f44f 1310 	mov.w	r3, #2359296	; 0x240000
    btn_shoot.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_MAPS_LOCAL_FIRE_DEPARTMENT_30_30_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_MAPS_LOCAL_FIRE_DEPARTMENT_30_30_E8F6FB_SVG_ID));
900075ae:	aa13      	add	r2, sp, #76	; 0x4c
900075b0:	f8ad 9044 	strh.w	r9, [sp, #68]	; 0x44
900075b4:	9600      	str	r6, [sp, #0]
900075b6:	a911      	add	r1, sp, #68	; 0x44
900075b8:	f8dd 9020 	ldr.w	r9, [sp, #32]
900075bc:	f8c4 3370 	str.w	r3, [r4, #880]	; 0x370
900075c0:	230a      	movs	r3, #10
900075c2:	4648      	mov	r0, r9
900075c4:	f8ad a048 	strh.w	sl, [sp, #72]	; 0x48
900075c8:	f8ad 304c 	strh.w	r3, [sp, #76]	; 0x4c
900075cc:	f04f 3aff 	mov.w	sl, #4294967295
900075d0:	f8ad 3050 	strh.w	r3, [sp, #80]	; 0x50
900075d4:	4613      	mov	r3, r2
900075d6:	aa12      	add	r2, sp, #72	; 0x48
900075d8:	f8df b1c4 	ldr.w	fp, [pc, #452]	; 900077a0 <_ZN24screen_asteroidsViewBaseC1Ev+0x8b8>
900075dc:	f00e fcf4 	bl	90015fc8 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
900075e0:	f04f 1302 	mov.w	r3, #131074	; 0x20002
    container_controls.add(btn_shoot);
900075e4:	4649      	mov	r1, r9
900075e6:	4628      	mov	r0, r5
900075e8:	f8c4 33a4 	str.w	r3, [r4, #932]	; 0x3a4
    btn_retry.setAction(buttonCallback);
900075ec:	f242 1944 	movw	r9, #8516	; 0x2144
    container_controls.add(btn_shoot);
900075f0:	f00c f924 	bl	9001383c <_ZN8touchgfx9Container3addERNS_8DrawableE>
900075f4:	4629      	mov	r1, r5
900075f6:	4638      	mov	r0, r7
        visible = vis;
900075f8:	2500      	movs	r5, #0
900075fa:	f00c f91f 	bl	9001383c <_ZN8touchgfx9Container3addERNS_8DrawableE>
        rect.x = x;
900075fe:	f04f 1304 	mov.w	r3, #262148	; 0x40004
90007602:	485e      	ldr	r0, [pc, #376]	; (9000777c <_ZN24screen_asteroidsViewBaseC1Ev+0x894>)
90007604:	f504 716a 	add.w	r1, r4, #936	; 0x3a8
        visible = vis;
90007608:	f884 53cd 	strb.w	r5, [r4, #973]	; 0x3cd
    btn_retry.setAction(buttonCallback);
9000760c:	44a1      	add	r9, r4
9000760e:	f8c4 a3d0 	str.w	sl, [r4, #976]	; 0x3d0
        rect.x = x;
90007612:	e9c4 03eb 	strd	r0, r3, [r4, #940]	; 0x3ac
90007616:	4638      	mov	r0, r7
90007618:	f00c f910 	bl	9001383c <_ZN8touchgfx9Container3addERNS_8DrawableE>
9000761c:	4b58      	ldr	r3, [pc, #352]	; (90007780 <_ZN24screen_asteroidsViewBaseC1Ev+0x898>)
    container_game_over.add(bg_light_grey);
9000761e:	f504 6180 	add.w	r1, r4, #1024	; 0x400
90007622:	4640      	mov	r0, r8
90007624:	f8c4 3404 	str.w	r3, [r4, #1028]	; 0x404
90007628:	4b56      	ldr	r3, [pc, #344]	; (90007784 <_ZN24screen_asteroidsViewBaseC1Ev+0x89c>)
9000762a:	f8c4 53d8 	str.w	r5, [r4, #984]	; 0x3d8
9000762e:	f8c4 3408 	str.w	r3, [r4, #1032]	; 0x408
90007632:	4b55      	ldr	r3, [pc, #340]	; (90007788 <_ZN24screen_asteroidsViewBaseC1Ev+0x8a0>)
        visible = vis;
90007634:	f884 53f9 	strb.w	r5, [r4, #1017]	; 0x3f9
90007638:	f8c4 3428 	str.w	r3, [r4, #1064]	; 0x428
        rect.x = x;
9000763c:	f8c4 b3dc 	str.w	fp, [r4, #988]	; 0x3dc
90007640:	f00c f8fc 	bl	9001383c <_ZN8touchgfx9Container3addERNS_8DrawableE>
90007644:	4b51      	ldr	r3, [pc, #324]	; (9000778c <_ZN24screen_asteroidsViewBaseC1Ev+0x8a4>)
    btn_retry.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_ACTION_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_CACHED_40_40_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_CACHED_40_40_E8F6FB_SVG_ID));
90007646:	ed9d 8a09 	vldr	s16, [sp, #36]	; 0x24
9000764a:	aa13      	add	r2, sp, #76	; 0x4c
9000764c:	9600      	str	r6, [sp, #0]
9000764e:	a911      	add	r1, sp, #68	; 0x44
90007650:	f8c4 3430 	str.w	r3, [r4, #1072]	; 0x430
90007654:	2305      	movs	r3, #5
90007656:	ee18 0a10 	vmov	r0, s16
9000765a:	f8ad 5044 	strh.w	r5, [sp, #68]	; 0x44
9000765e:	f8ad 304c 	strh.w	r3, [sp, #76]	; 0x4c
90007662:	f8ad 3050 	strh.w	r3, [sp, #80]	; 0x50
90007666:	4613      	mov	r3, r2
90007668:	aa12      	add	r2, sp, #72	; 0x48
9000766a:	f8ad 5048 	strh.w	r5, [sp, #72]	; 0x48
9000766e:	f00e fcab 	bl	90015fc8 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    container_game_over.add(btn_retry);
90007672:	ee18 1a10 	vmov	r1, s16
90007676:	4640      	mov	r0, r8
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
90007678:	f8c4 9454 	str.w	r9, [r4, #1108]	; 0x454
9000767c:	f8c4 a464 	str.w	sl, [r4, #1124]	; 0x464
90007680:	f00c f8dc 	bl	9001383c <_ZN8touchgfx9Container3addERNS_8DrawableE>
90007684:	4842      	ldr	r0, [pc, #264]	; (90007790 <_ZN24screen_asteroidsViewBaseC1Ev+0x8a8>)
    btn_back.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_ACTION_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_ARROW_BACK_40_40_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_ARROW_BACK_40_40_E8F6FB_SVG_ID));
90007686:	ed9d 8a0a 	vldr	s16, [sp, #40]	; 0x28
9000768a:	aa13      	add	r2, sp, #76	; 0x4c
9000768c:	9600      	str	r6, [sp, #0]
9000768e:	a911      	add	r1, sp, #68	; 0x44
90007690:	f8c4 046c 	str.w	r0, [r4, #1132]	; 0x46c
90007694:	200b      	movs	r0, #11
90007696:	4613      	mov	r3, r2
90007698:	aa12      	add	r2, sp, #72	; 0x48
9000769a:	f8ad 004c 	strh.w	r0, [sp, #76]	; 0x4c
9000769e:	f8ad 0050 	strh.w	r0, [sp, #80]	; 0x50
900076a2:	ee18 0a10 	vmov	r0, s16
900076a6:	f8ad 5044 	strh.w	r5, [sp, #68]	; 0x44
900076aa:	f8ad 5048 	strh.w	r5, [sp, #72]	; 0x48
900076ae:	f00e fc8b 	bl	90015fc8 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    container_game_over.add(btn_back);
900076b2:	ee18 1a10 	vmov	r1, s16
900076b6:	4640      	mov	r0, r8
900076b8:	f8c4 9490 	str.w	r9, [r4, #1168]	; 0x490
900076bc:	f10d 0930 	add.w	r9, sp, #48	; 0x30
900076c0:	f8c4 a4a0 	str.w	sl, [r4, #1184]	; 0x4a0
900076c4:	f00c f8ba 	bl	9001383c <_ZN8touchgfx9Container3addERNS_8DrawableE>
900076c8:	4b32      	ldr	r3, [pc, #200]	; (90007794 <_ZN24screen_asteroidsViewBaseC1Ev+0x8ac>)
900076ca:	ee18 1a90 	vmov	r1, s17
900076ce:	4648      	mov	r0, r9
900076d0:	f8c4 34a8 	str.w	r3, [r4, #1192]	; 0x4a8
        color = newColor;
900076d4:	4b30      	ldr	r3, [pc, #192]	; (90007798 <_ZN24screen_asteroidsViewBaseC1Ev+0x8b0>)
        linespace = space;
900076d6:	f8a4 54d8 	strh.w	r5, [r4, #1240]	; 0x4d8
        color = newColor;
900076da:	f8c4 34d4 	str.w	r3, [r4, #1236]	; 0x4d4
        boundingArea = calculateBoundingArea();
900076de:	f00e f85d 	bl	9001579c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
900076e2:	4b1b      	ldr	r3, [pc, #108]	; (90007750 <_ZN24screen_asteroidsViewBaseC1Ev+0x868>)
900076e4:	f8ad 5054 	strh.w	r5, [sp, #84]	; 0x54
900076e8:	9314      	str	r3, [sp, #80]	; 0x50
900076ea:	ee18 3a90 	vmov	r3, s17
900076ee:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
900076f2:	333c      	adds	r3, #60	; 0x3c
900076f4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    lbl_over.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DW7K));
900076f8:	4631      	mov	r1, r6
900076fa:	ee18 0a90 	vmov	r0, s17
900076fe:	f00e faf5 	bl	90015cec <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    container_game_over.add(lbl_over);
90007702:	ee18 1a90 	vmov	r1, s17
90007706:	4640      	mov	r0, r8
90007708:	f00c f898 	bl	9001383c <_ZN8touchgfx9Container3addERNS_8DrawableE>
9000770c:	4641      	mov	r1, r8
9000770e:	4638      	mov	r0, r7
90007710:	f00c f894 	bl	9001383c <_ZN8touchgfx9Container3addERNS_8DrawableE>
90007714:	4b21      	ldr	r3, [pc, #132]	; (9000779c <_ZN24screen_asteroidsViewBaseC1Ev+0x8b4>)
90007716:	4638      	mov	r0, r7
90007718:	f204 41ec 	addw	r1, r4, #1260	; 0x4ec
9000771c:	f8c4 3514 	str.w	r3, [r4, #1300]	; 0x514
    /**
     * @copydoc Image::setAlpha
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
90007720:	234e      	movs	r3, #78	; 0x4e
90007722:	f8c4 54f0 	str.w	r5, [r4, #1264]	; 0x4f0
90007726:	f8c4 b4f4 	str.w	fp, [r4, #1268]	; 0x4f4
        visible = vis;
9000772a:	f884 5511 	strb.w	r5, [r4, #1297]	; 0x511
9000772e:	f884 3512 	strb.w	r3, [r4, #1298]	; 0x512
90007732:	f00c f883 	bl	9001383c <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
90007736:	4620      	mov	r0, r4
90007738:	b017      	add	sp, #92	; 0x5c
9000773a:	ecbd 8b02 	vpop	{d8}
9000773e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90007742:	bf00      	nop
90007744:	24023728 	.word	0x24023728
90007748:	24023730 	.word	0x24023730
9000774c:	9002d8a0 	.word	0x9002d8a0
90007750:	9002cd98 	.word	0x9002cd98
90007754:	000400e9 	.word	0x000400e9
90007758:	0014005c 	.word	0x0014005c
9000775c:	00010048 	.word	0x00010048
90007760:	00010031 	.word	0x00010031
90007764:	0001001a 	.word	0x0001001a
90007768:	009e000f 	.word	0x009e000f
9000776c:	006c01c3 	.word	0x006c01c3
90007770:	0024019f 	.word	0x0024019f
90007774:	0048017b 	.word	0x0048017b
90007778:	00240157 	.word	0x00240157
9000777c:	00db00ee 	.word	0x00db00ee
90007780:	0049005d 	.word	0x0049005d
90007784:	007e0127 	.word	0x007e0127
90007788:	ff828282 	.word	0xff828282
9000778c:	00890112 	.word	0x00890112
90007790:	008900ab 	.word	0x008900ab
90007794:	00500082 	.word	0x00500082
90007798:	ff851717 	.word	0xff851717
9000779c:	ff851313 	.word	0xff851313
900077a0:	011001e0 	.word	0x011001e0
        return instance->lcdRef;
900077a4:	6898      	ldr	r0, [r3, #8]
900077a6:	4d10      	ldr	r5, [pc, #64]	; (900077e8 <_ZN24screen_asteroidsViewBaseC1Ev+0x900>)
900077a8:	6803      	ldr	r3, [r0, #0]
900077aa:	6ada      	ldr	r2, [r3, #44]	; 0x2c
900077ac:	42aa      	cmp	r2, r5
900077ae:	f43f ac34 	beq.w	9000701a <_ZN24screen_asteroidsViewBaseC1Ev+0x132>
900077b2:	f7ff bbfc 	b.w	90006fae <_ZN24screen_asteroidsViewBaseC1Ev+0xc6>
900077b6:	f10d 0a30 	add.w	sl, sp, #48	; 0x30
900077ba:	4649      	mov	r1, r9
900077bc:	4650      	mov	r0, sl
900077be:	4790      	blx	r2
900077c0:	f504 73c8 	add.w	r3, r4, #400	; 0x190
900077c4:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
900077c8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
900077cc:	e5cf      	b.n	9000736e <_ZN24screen_asteroidsViewBaseC1Ev+0x486>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
900077ce:	4b07      	ldr	r3, [pc, #28]	; (900077ec <_ZN24screen_asteroidsViewBaseC1Ev+0x904>)
900077d0:	2161      	movs	r1, #97	; 0x61
900077d2:	4a07      	ldr	r2, [pc, #28]	; (900077f0 <_ZN24screen_asteroidsViewBaseC1Ev+0x908>)
900077d4:	4807      	ldr	r0, [pc, #28]	; (900077f4 <_ZN24screen_asteroidsViewBaseC1Ev+0x90c>)
900077d6:	f022 fa51 	bl	90029c7c <__assert_func>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
900077da:	4b07      	ldr	r3, [pc, #28]	; (900077f8 <_ZN24screen_asteroidsViewBaseC1Ev+0x910>)
900077dc:	2160      	movs	r1, #96	; 0x60
900077de:	4a04      	ldr	r2, [pc, #16]	; (900077f0 <_ZN24screen_asteroidsViewBaseC1Ev+0x908>)
900077e0:	4804      	ldr	r0, [pc, #16]	; (900077f4 <_ZN24screen_asteroidsViewBaseC1Ev+0x90c>)
900077e2:	f022 fa4b 	bl	90029c7c <__assert_func>
900077e6:	bf00      	nop
900077e8:	900045d1 	.word	0x900045d1
900077ec:	9002d728 	.word	0x9002d728
900077f0:	9002d868 	.word	0x9002d868
900077f4:	9002d6e0 	.word	0x9002d6e0
900077f8:	9002d660 	.word	0x9002d660

900077fc <_ZN8touchgfx6Screen15afterTransitionEv>:
    }
900077fc:	4770      	bx	lr
900077fe:	bf00      	nop

90007800 <_ZN26screen_game_selectViewBaseD1Ev>:
}

screen_game_selectViewBase::~screen_game_selectViewBase()
{

}
90007800:	4770      	bx	lr
90007802:	bf00      	nop

90007804 <_ZN26screen_game_selectViewBase11setupScreenEv>:

void screen_game_selectViewBase::setupScreen()
{

}
90007804:	4770      	bx	lr
90007806:	bf00      	nop

90007808 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>:
    colortype borderDown;    ///< The border down

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
    {
        borderBox.setColor(T::getPressed() ? down : up);
90007808:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
9000780c:	b133      	cbz	r3, 9000781c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x14>
9000780e:	6ec2      	ldr	r2, [r0, #108]	; 0x6c
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90007810:	f100 0374 	add.w	r3, r0, #116	; 0x74
90007814:	65c2      	str	r2, [r0, #92]	; 0x5c
90007816:	681b      	ldr	r3, [r3, #0]
     *
     * @see setColor, getBorderColor, Color::getColorFromRGB
     */
    void setBorderColor(colortype colorBorder)
    {
        borderColor = colorBorder;
90007818:	6603      	str	r3, [r0, #96]	; 0x60
        T::handlePressedUpdated();
    }
9000781a:	4770      	bx	lr
9000781c:	6e82      	ldr	r2, [r0, #104]	; 0x68
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
9000781e:	f100 0370 	add.w	r3, r0, #112	; 0x70
90007822:	65c2      	str	r2, [r0, #92]	; 0x5c
90007824:	681b      	ldr	r3, [r3, #0]
90007826:	6603      	str	r3, [r0, #96]	; 0x60
    }
90007828:	4770      	bx	lr
9000782a:	bf00      	nop

9000782c <_ZN8touchgfx8CallbackI26screen_game_selectViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
9000782c:	4770      	bx	lr
9000782e:	bf00      	nop

90007830 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>:
class BoxWithBorderButtonStyle : public T
90007830:	4770      	bx	lr
90007832:	bf00      	nop

90007834 <_ZN8touchgfx8CallbackI26screen_game_selectViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
90007834:	b410      	push	{r4}
        (pobject->*pmemfun)(t1);
90007836:	68c2      	ldr	r2, [r0, #12]
    virtual void execute(T1 t1)
90007838:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
9000783a:	6844      	ldr	r4, [r0, #4]
9000783c:	f012 0f01 	tst.w	r2, #1
90007840:	eb04 0062 	add.w	r0, r4, r2, asr #1
90007844:	d103      	bne.n	9000784e <_ZN8touchgfx8CallbackI26screen_game_selectViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_+0x1a>
90007846:	689b      	ldr	r3, [r3, #8]
    }
90007848:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
9000784c:	4718      	bx	r3
9000784e:	ea4f 0c62 	mov.w	ip, r2, asr #1
90007852:	689b      	ldr	r3, [r3, #8]
90007854:	f854 200c 	ldr.w	r2, [r4, ip]
    }
90007858:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
9000785c:	58d3      	ldr	r3, [r2, r3]
9000785e:	4718      	bx	r3

90007860 <_ZNK8touchgfx8CallbackI26screen_game_selectViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
90007860:	6843      	ldr	r3, [r0, #4]
90007862:	b13b      	cbz	r3, 90007874 <_ZNK8touchgfx8CallbackI26screen_game_selectViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
90007864:	6883      	ldr	r3, [r0, #8]
90007866:	b10b      	cbz	r3, 9000786c <_ZNK8touchgfx8CallbackI26screen_game_selectViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0xc>
90007868:	2001      	movs	r0, #1
    }
9000786a:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
9000786c:	68c0      	ldr	r0, [r0, #12]
9000786e:	f000 0001 	and.w	r0, r0, #1
90007872:	4770      	bx	lr
90007874:	4618      	mov	r0, r3
90007876:	4770      	bx	lr

90007878 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE18handleAlphaUpdatedEv>:
90007878:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
9000787c:	f880 305a 	strb.w	r3, [r0, #90]	; 0x5a
    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        borderBox.setAlpha(T::getAlpha());
        T::handleAlphaUpdated();
    }
90007880:	4770      	bx	lr
90007882:	bf00      	nop

90007884 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED0Ev>:
class BoxWithBorderButtonStyle : public T
90007884:	b510      	push	{r4, lr}
90007886:	4604      	mov	r4, r0
90007888:	2178      	movs	r1, #120	; 0x78
9000788a:	f022 f9c8 	bl	90029c1e <_ZdlPvj>
9000788e:	4620      	mov	r0, r4
90007890:	bd10      	pop	{r4, pc}
90007892:	bf00      	nop

90007894 <_ZN8touchgfx8CallbackI26screen_game_selectViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
90007894:	b510      	push	{r4, lr}
90007896:	4604      	mov	r4, r0
90007898:	2110      	movs	r1, #16
9000789a:	f022 f9c0 	bl	90029c1e <_ZdlPvj>
9000789e:	4620      	mov	r0, r4
900078a0:	bd10      	pop	{r4, pc}
900078a2:	bf00      	nop

900078a4 <_ZN26screen_game_selectViewBaseD0Ev>:
screen_game_selectViewBase::~screen_game_selectViewBase()
900078a4:	b510      	push	{r4, lr}
900078a6:	4604      	mov	r4, r0
}
900078a8:	f44f 71ca 	mov.w	r1, #404	; 0x194
900078ac:	f022 f9b7 	bl	90029c1e <_ZdlPvj>
900078b0:	4620      	mov	r0, r4
900078b2:	bd10      	pop	{r4, pc}

900078b4 <_ZN26screen_game_selectViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void screen_game_selectViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &_btn_asteroids)
900078b4:	30c4      	adds	r0, #196	; 0xc4
900078b6:	4288      	cmp	r0, r1
900078b8:	d000      	beq.n	900078bc <_ZN26screen_game_selectViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x8>
900078ba:	4770      	bx	lr
{
900078bc:	b508      	push	{r3, lr}
    virtual ~screen_game_selectViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
900078be:	f011 f861 	bl	90018984 <_ZN8touchgfx11Application11getInstanceEv>
        //game_asteroids
        //When _btn_asteroids clicked change screen to screen_asteroids
        //Go to screen_asteroids with screen transition towards East
        application().gotoscreen_asteroidsScreenSlideTransitionEast();
    }
}
900078c2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoscreen_asteroidsScreenSlideTransitionEast();
900078c6:	f7fe bf03 	b.w	900066d0 <_ZN23FrontendApplicationBase45gotoscreen_asteroidsScreenSlideTransitionEastEv>
900078ca:	bf00      	nop

900078cc <_ZN8touchgfx23AbstractButtonContainer13executeActionEv>:
     *
     * @see setAction
     */
    virtual void executeAction()
    {
        if (action && action->isValid())
900078cc:	6b03      	ldr	r3, [r0, #48]	; 0x30
900078ce:	b30b      	cbz	r3, 90007914 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x48>
900078d0:	681a      	ldr	r2, [r3, #0]
    virtual void executeAction()
900078d2:	b570      	push	{r4, r5, r6, lr}
        if (action && action->isValid())
900078d4:	68d1      	ldr	r1, [r2, #12]
900078d6:	4604      	mov	r4, r0
900078d8:	481a      	ldr	r0, [pc, #104]	; (90007944 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x78>)
900078da:	4281      	cmp	r1, r0
900078dc:	d11b      	bne.n	90007916 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x4a>
        return (pobject != 0) && (pmemfun != 0);
900078de:	6858      	ldr	r0, [r3, #4]
900078e0:	b180      	cbz	r0, 90007904 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x38>
900078e2:	6899      	ldr	r1, [r3, #8]
900078e4:	b1f1      	cbz	r1, 90007924 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x58>
        {
            action->execute(*this);
900078e6:	6892      	ldr	r2, [r2, #8]
900078e8:	4917      	ldr	r1, [pc, #92]	; (90007948 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x7c>)
900078ea:	428a      	cmp	r2, r1
900078ec:	d124      	bne.n	90007938 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x6c>
        (pobject->*pmemfun)(t1);
900078ee:	68da      	ldr	r2, [r3, #12]
900078f0:	6858      	ldr	r0, [r3, #4]
900078f2:	eb00 0062 	add.w	r0, r0, r2, asr #1
900078f6:	07d2      	lsls	r2, r2, #31
900078f8:	d405      	bmi.n	90007906 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x3a>
900078fa:	4621      	mov	r1, r4
900078fc:	689b      	ldr	r3, [r3, #8]
        }
    }
900078fe:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90007902:	4718      	bx	r3
90007904:	bd70      	pop	{r4, r5, r6, pc}
90007906:	6899      	ldr	r1, [r3, #8]
90007908:	6803      	ldr	r3, [r0, #0]
9000790a:	585b      	ldr	r3, [r3, r1]
9000790c:	4621      	mov	r1, r4
9000790e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90007912:	4718      	bx	r3
90007914:	4770      	bx	lr
        if (action && action->isValid())
90007916:	4618      	mov	r0, r3
90007918:	4788      	blx	r1
9000791a:	2800      	cmp	r0, #0
9000791c:	d0f2      	beq.n	90007904 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x38>
            action->execute(*this);
9000791e:	6b23      	ldr	r3, [r4, #48]	; 0x30
90007920:	681a      	ldr	r2, [r3, #0]
90007922:	e7e0      	b.n	900078e6 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1a>
        return (pobject != 0) && (pmemfun != 0);
90007924:	68dd      	ldr	r5, [r3, #12]
90007926:	07ee      	lsls	r6, r5, #31
90007928:	d5ec      	bpl.n	90007904 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x38>
9000792a:	6892      	ldr	r2, [r2, #8]
9000792c:	4e06      	ldr	r6, [pc, #24]	; (90007948 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x7c>)
9000792e:	42b2      	cmp	r2, r6
90007930:	d102      	bne.n	90007938 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x6c>
        (pobject->*pmemfun)(t1);
90007932:	eb00 0065 	add.w	r0, r0, r5, asr #1
90007936:	e7e7      	b.n	90007908 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x3c>
90007938:	4621      	mov	r1, r4
9000793a:	4618      	mov	r0, r3
    }
9000793c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            action->execute(*this);
90007940:	4710      	bx	r2
90007942:	bf00      	nop
90007944:	90007861 	.word	0x90007861
90007948:	90007835 	.word	0x90007835

9000794c <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE>:
     *
     * @return The click type of this event.
     */
    ClickEventType getType() const
    {
        return clickEventType;
9000794c:	790b      	ldrb	r3, [r1, #4]
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        bool wasPressed = getPressed();
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
9000794e:	1e1a      	subs	r2, r3, #0
    virtual void handleClickEvent(const ClickEvent& event)
90007950:	b570      	push	{r4, r5, r6, lr}
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
90007952:	bf18      	it	ne
90007954:	2201      	movne	r2, #1
        return pressed;
90007956:	f890 602c 	ldrb.w	r6, [r0, #44]	; 0x2c
    virtual void handleClickEvent(const ClickEvent& event)
9000795a:	460d      	mov	r5, r1
9000795c:	4604      	mov	r4, r0
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
9000795e:	42b2      	cmp	r2, r6
90007960:	d004      	beq.n	9000796c <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x20>
        {
            setPressed(newPressedValue);
            invalidate();
        }
        if (wasPressed && (event.getType() == ClickEvent::RELEASED))
90007962:	b116      	cbz	r6, 9000796a <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x1e>
90007964:	792b      	ldrb	r3, [r5, #4]
90007966:	2b01      	cmp	r3, #1
90007968:	d00e      	beq.n	90007988 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x3c>
        {
            executeAction();
        }
    }
9000796a:	bd70      	pop	{r4, r5, r6, pc}
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
9000796c:	fab3 f383 	clz	r3, r3
90007970:	095b      	lsrs	r3, r3, #5
90007972:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
        handlePressedUpdated();
90007976:	6803      	ldr	r3, [r0, #0]
90007978:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
9000797c:	4798      	blx	r3
            invalidate();
9000797e:	6823      	ldr	r3, [r4, #0]
90007980:	4620      	mov	r0, r4
90007982:	695b      	ldr	r3, [r3, #20]
90007984:	4798      	blx	r3
90007986:	e7ec      	b.n	90007962 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x16>
            executeAction();
90007988:	6823      	ldr	r3, [r4, #0]
9000798a:	4a20      	ldr	r2, [pc, #128]	; (90007a0c <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xc0>)
9000798c:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
90007990:	4293      	cmp	r3, r2
90007992:	d127      	bne.n	900079e4 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x98>
        if (action && action->isValid())
90007994:	6b23      	ldr	r3, [r4, #48]	; 0x30
90007996:	2b00      	cmp	r3, #0
90007998:	d0e7      	beq.n	9000796a <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x1e>
9000799a:	6819      	ldr	r1, [r3, #0]
9000799c:	481c      	ldr	r0, [pc, #112]	; (90007a10 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xc4>)
9000799e:	68ca      	ldr	r2, [r1, #12]
900079a0:	4282      	cmp	r2, r0
900079a2:	d123      	bne.n	900079ec <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xa0>
        return (pobject != 0) && (pmemfun != 0);
900079a4:	685a      	ldr	r2, [r3, #4]
900079a6:	2a00      	cmp	r2, #0
900079a8:	d0df      	beq.n	9000796a <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x1e>
900079aa:	689d      	ldr	r5, [r3, #8]
900079ac:	b175      	cbz	r5, 900079cc <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x80>
            action->execute(*this);
900079ae:	688e      	ldr	r6, [r1, #8]
900079b0:	4a18      	ldr	r2, [pc, #96]	; (90007a14 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xc8>)
900079b2:	4296      	cmp	r6, r2
900079b4:	d123      	bne.n	900079fe <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xb2>
        (pobject->*pmemfun)(t1);
900079b6:	68d9      	ldr	r1, [r3, #12]
900079b8:	685a      	ldr	r2, [r3, #4]
900079ba:	eb02 0061 	add.w	r0, r2, r1, asr #1
900079be:	07ca      	lsls	r2, r1, #31
900079c0:	d41b      	bmi.n	900079fa <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xae>
900079c2:	689b      	ldr	r3, [r3, #8]
900079c4:	4621      	mov	r1, r4
    }
900079c6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900079ca:	4718      	bx	r3
        return (pobject != 0) && (pmemfun != 0);
900079cc:	68d8      	ldr	r0, [r3, #12]
900079ce:	07c6      	lsls	r6, r0, #31
900079d0:	d5cb      	bpl.n	9000796a <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x1e>
900079d2:	688e      	ldr	r6, [r1, #8]
900079d4:	490f      	ldr	r1, [pc, #60]	; (90007a14 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xc8>)
900079d6:	428e      	cmp	r6, r1
900079d8:	d111      	bne.n	900079fe <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xb2>
        (pobject->*pmemfun)(t1);
900079da:	eb02 0060 	add.w	r0, r2, r0, asr #1
900079de:	6803      	ldr	r3, [r0, #0]
900079e0:	595b      	ldr	r3, [r3, r5]
900079e2:	e7ef      	b.n	900079c4 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x78>
            executeAction();
900079e4:	4620      	mov	r0, r4
    }
900079e6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            executeAction();
900079ea:	4718      	bx	r3
        if (action && action->isValid())
900079ec:	4618      	mov	r0, r3
900079ee:	4790      	blx	r2
900079f0:	2800      	cmp	r0, #0
900079f2:	d0ba      	beq.n	9000796a <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x1e>
            action->execute(*this);
900079f4:	6b23      	ldr	r3, [r4, #48]	; 0x30
900079f6:	6819      	ldr	r1, [r3, #0]
900079f8:	e7d9      	b.n	900079ae <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x62>
900079fa:	689d      	ldr	r5, [r3, #8]
900079fc:	e7ef      	b.n	900079de <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x92>
900079fe:	4621      	mov	r1, r4
90007a00:	4618      	mov	r0, r3
90007a02:	4633      	mov	r3, r6
    }
90007a04:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90007a08:	4718      	bx	r3
90007a0a:	bf00      	nop
90007a0c:	900078cd 	.word	0x900078cd
90007a10:	90007861 	.word	0x90007861
90007a14:	90007835 	.word	0x90007835

90007a18 <_ZN26screen_game_selectViewBaseC1Ev>:
screen_game_selectViewBase::screen_game_selectViewBase() :
90007a18:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90007a1c:	b086      	sub	sp, #24
90007a1e:	4604      	mov	r4, r0
90007a20:	f012 fb7e 	bl	9001a120 <_ZN8touchgfx6ScreenC1Ev>
        : Widget(), alpha(255), color(0)
90007a24:	4b87      	ldr	r3, [pc, #540]	; (90007c44 <_ZN26screen_game_selectViewBaseC1Ev+0x22c>)
90007a26:	2500      	movs	r5, #0
          touchable(false),
90007a28:	f44f 7680 	mov.w	r6, #256	; 0x100
90007a2c:	27ff      	movs	r7, #255	; 0xff
    flexButtonCallback(this, &screen_game_selectViewBase::flexButtonCallbackHandler)
90007a2e:	4a86      	ldr	r2, [pc, #536]	; (90007c48 <_ZN26screen_game_selectViewBaseC1Ev+0x230>)
90007a30:	6423      	str	r3, [r4, #64]	; 0x40
90007a32:	f104 0ac4 	add.w	sl, r4, #196	; 0xc4
90007a36:	66e3      	str	r3, [r4, #108]	; 0x6c
        T::add(borderBox);
90007a38:	f104 01f8 	add.w	r1, r4, #248	; 0xf8
90007a3c:	4b83      	ldr	r3, [pc, #524]	; (90007c4c <_ZN26screen_game_selectViewBaseC1Ev+0x234>)
90007a3e:	4650      	mov	r0, sl
90007a40:	6022      	str	r2, [r4, #0]
90007a42:	f104 0898 	add.w	r8, r4, #152	; 0x98
90007a46:	63e5      	str	r5, [r4, #60]	; 0x3c
90007a48:	f8a4 6064 	strh.w	r6, [r4, #100]	; 0x64
90007a4c:	f884 7066 	strb.w	r7, [r4, #102]	; 0x66
90007a50:	66a5      	str	r5, [r4, #104]	; 0x68
90007a52:	f8a4 6090 	strh.w	r6, [r4, #144]	; 0x90
90007a56:	f884 7092 	strb.w	r7, [r4, #146]	; 0x92
90007a5a:	f8c4 5094 	str.w	r5, [r4, #148]	; 0x94
        : typedTextId(id)
90007a5e:	f8df 9224 	ldr.w	r9, [pc, #548]	; 90007c84 <_ZN26screen_game_selectViewBaseC1Ev+0x26c>
        : x(0), y(0), width(0), height(0)
90007a62:	e9c4 5511 	strd	r5, r5, [r4, #68]	; 0x44
90007a66:	e9c4 5513 	strd	r5, r5, [r4, #76]	; 0x4c
          nextSibling(0),
90007a6a:	e9c4 5515 	strd	r5, r5, [r4, #84]	; 0x54
          cachedAbsX(0),
90007a6e:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
90007a72:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
90007a76:	e9c4 551e 	strd	r5, r5, [r4, #120]	; 0x78
          nextSibling(0),
90007a7a:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
          cachedAbsX(0),
90007a7e:	e9c4 5522 	strd	r5, r5, [r4, #136]	; 0x88
90007a82:	e9c4 5527 	strd	r5, r5, [r4, #156]	; 0x9c
90007a86:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
          nextSibling(0),
90007a8a:	e9c4 552b 	strd	r5, r5, [r4, #172]	; 0xac
          cachedAbsX(0),
90007a8e:	e9c4 552d 	strd	r5, r5, [r4, #180]	; 0xb4
90007a92:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
        : pressed(false), alpha(255), action(0)
90007a96:	f44f 437f 	mov.w	r3, #65280	; 0xff00
          touchable(false),
90007a9a:	f8a4 60bc 	strh.w	r6, [r4, #188]	; 0xbc
90007a9e:	f8a4 30f0 	strh.w	r3, [r4, #240]	; 0xf0
        touchable = touch;
90007aa2:	f240 1301 	movw	r3, #257	; 0x101
90007aa6:	f8c4 50c0 	str.w	r5, [r4, #192]	; 0xc0
90007aaa:	f8a4 30e8 	strh.w	r3, [r4, #232]	; 0xe8
        : T(), up(), down()
90007aae:	4b68      	ldr	r3, [pc, #416]	; (90007c50 <_ZN26screen_game_selectViewBaseC1Ev+0x238>)
90007ab0:	f8c4 50ec 	str.w	r5, [r4, #236]	; 0xec
90007ab4:	f8c4 30c4 	str.w	r3, [r4, #196]	; 0xc4
        : Box(), borderColor(0), borderSize(0)
90007ab8:	4b66      	ldr	r3, [pc, #408]	; (90007c54 <_ZN26screen_game_selectViewBaseC1Ev+0x23c>)
90007aba:	f8c4 50f4 	str.w	r5, [r4, #244]	; 0xf4
90007abe:	f8c4 30f8 	str.w	r3, [r4, #248]	; 0xf8
          touchable(false),
90007ac2:	f8a4 611c 	strh.w	r6, [r4, #284]	; 0x11c
90007ac6:	f884 711e 	strb.w	r7, [r4, #286]	; 0x11e
90007aca:	f8a4 5128 	strh.w	r5, [r4, #296]	; 0x128
        rect.x = x;
90007ace:	f8c4 50fc 	str.w	r5, [r4, #252]	; 0xfc
90007ad2:	e9c4 5532 	strd	r5, r5, [r4, #200]	; 0xc8
90007ad6:	e9c4 5534 	strd	r5, r5, [r4, #208]	; 0xd0
          nextSibling(0),
90007ada:	e9c4 5536 	strd	r5, r5, [r4, #216]	; 0xd8
          cachedAbsX(0),
90007ade:	e9c4 5538 	strd	r5, r5, [r4, #224]	; 0xe0
          nextSibling(0),
90007ae2:	e9c4 5543 	strd	r5, r5, [r4, #268]	; 0x10c
          cachedAbsX(0),
90007ae6:	e9c4 5545 	strd	r5, r5, [r4, #276]	; 0x114
        : color(col)
90007aea:	e9c4 5548 	strd	r5, r5, [r4, #288]	; 0x120
        : color(0)
90007aee:	e9c4 554b 	strd	r5, r5, [r4, #300]	; 0x12c
90007af2:	e9c4 554d 	strd	r5, r5, [r4, #308]	; 0x134
        rect.x = x;
90007af6:	e9c4 5540 	strd	r5, r5, [r4, #256]	; 0x100
90007afa:	f8c4 5108 	str.w	r5, [r4, #264]	; 0x108
        T::add(borderBox);
90007afe:	f00b fe9d 	bl	9001383c <_ZN8touchgfx9Container3addERNS_8DrawableE>
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90007b02:	f04f 33ff 	mov.w	r3, #4294967295
          touchable(false),
90007b06:	f8a4 6160 	strh.w	r6, [r4, #352]	; 0x160
        container.add(d);
90007b0a:	f104 0140 	add.w	r1, r4, #64	; 0x40
        rect.x = x;
90007b0e:	4e52      	ldr	r6, [pc, #328]	; (90007c58 <_ZN26screen_game_selectViewBaseC1Ev+0x240>)
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
90007b10:	f8c4 7172 	str.w	r7, [r4, #370]	; 0x172
90007b14:	1d27      	adds	r7, r4, #4
        : color(col)
90007b16:	f8c4 516c 	str.w	r5, [r4, #364]	; 0x16c
90007b1a:	4638      	mov	r0, r7
90007b1c:	f8a4 5170 	strh.w	r5, [r4, #368]	; 0x170
              text(0)
90007b20:	f8c4 5180 	str.w	r5, [r4, #384]	; 0x180
        : pobject(pObject), pmemfun(pmemfun_1)
90007b24:	f8c4 5190 	str.w	r5, [r4, #400]	; 0x190
90007b28:	6465      	str	r5, [r4, #68]	; 0x44
90007b2a:	f8c4 4188 	str.w	r4, [r4, #392]	; 0x188
90007b2e:	64a6      	str	r6, [r4, #72]	; 0x48
90007b30:	f8c4 9164 	str.w	r9, [r4, #356]	; 0x164
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90007b34:	e9c4 535e 	strd	r5, r3, [r4, #376]	; 0x178
90007b38:	4b48      	ldr	r3, [pc, #288]	; (90007c5c <_ZN26screen_game_selectViewBaseC1Ev+0x244>)
90007b3a:	f8c4 3184 	str.w	r3, [r4, #388]	; 0x184
90007b3e:	4b48      	ldr	r3, [pc, #288]	; (90007c60 <_ZN26screen_game_selectViewBaseC1Ev+0x248>)
90007b40:	f8c4 318c 	str.w	r3, [r4, #396]	; 0x18c
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
90007b44:	4b47      	ldr	r3, [pc, #284]	; (90007c64 <_ZN26screen_game_selectViewBaseC1Ev+0x24c>)
90007b46:	f8c4 313c 	str.w	r3, [r4, #316]	; 0x13c
90007b4a:	f64f 73ff 	movw	r3, #65535	; 0xffff
90007b4e:	f8a4 3168 	strh.w	r3, [r4, #360]	; 0x168
        color = newColor;
90007b52:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        : x(0), y(0), width(0), height(0)
90007b56:	e9c4 5550 	strd	r5, r5, [r4, #320]	; 0x140
90007b5a:	e9c4 5552 	strd	r5, r5, [r4, #328]	; 0x148
          nextSibling(0),
90007b5e:	e9c4 5554 	strd	r5, r5, [r4, #336]	; 0x150
          cachedAbsX(0),
90007b62:	e9c4 5556 	strd	r5, r5, [r4, #344]	; 0x158
90007b66:	66a3      	str	r3, [r4, #104]	; 0x68
90007b68:	f00b fe68 	bl	9001383c <_ZN8touchgfx9Container3addERNS_8DrawableE>
90007b6c:	4b3e      	ldr	r3, [pc, #248]	; (90007c68 <_ZN26screen_game_selectViewBaseC1Ev+0x250>)
90007b6e:	f104 016c 	add.w	r1, r4, #108	; 0x6c
90007b72:	4638      	mov	r0, r7
90007b74:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
        rect.x = x;
90007b78:	e9c4 561c 	strd	r5, r6, [r4, #112]	; 0x70
90007b7c:	f00b fe5e 	bl	9001383c <_ZN8touchgfx9Container3addERNS_8DrawableE>
        borderUp = borderColorReleased;
90007b80:	493a      	ldr	r1, [pc, #232]	; (90007c6c <_ZN26screen_game_selectViewBaseC1Ev+0x254>)
90007b82:	4b3b      	ldr	r3, [pc, #236]	; (90007c70 <_ZN26screen_game_selectViewBaseC1Ev+0x258>)
90007b84:	f8c4 1134 	str.w	r1, [r4, #308]	; 0x134
        borderDown = borderColorPressed;
90007b88:	f101 1133 	add.w	r1, r1, #3342387	; 0x330033
90007b8c:	f8c4 30a0 	str.w	r3, [r4, #160]	; 0xa0
90007b90:	f501 514c 	add.w	r1, r1, #13056	; 0x3300
90007b94:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
90007b98:	4b36      	ldr	r3, [pc, #216]	; (90007c74 <_ZN26screen_game_selectViewBaseC1Ev+0x25c>)
        down = colorPressed;
90007b9a:	4a37      	ldr	r2, [pc, #220]	; (90007c78 <_ZN26screen_game_selectViewBaseC1Ev+0x260>)
90007b9c:	f8c4 309c 	str.w	r3, [r4, #156]	; 0x9c
        borderDown = borderColorPressed;
90007ba0:	f8c4 1138 	str.w	r1, [r4, #312]	; 0x138
        down = colorPressed;
90007ba4:	4b35      	ldr	r3, [pc, #212]	; (90007c7c <_ZN26screen_game_selectViewBaseC1Ev+0x264>)
        borderBox.setColor(T::getPressed() ? down : up);
90007ba6:	f894 10f0 	ldrb.w	r1, [r4, #240]	; 0xf0
90007baa:	f8c4 50fc 	str.w	r5, [r4, #252]	; 0xfc
     *
     * @see getBorderSize
     */
    void setBorderSize(uint16_t size)
    {
        borderSize = size;
90007bae:	f8a4 5128 	strh.w	r5, [r4, #296]	; 0x128
90007bb2:	f504 759e 	add.w	r5, r4, #316	; 0x13c
        down = colorPressed;
90007bb6:	e9c4 324b 	strd	r3, r2, [r4, #300]	; 0x12c
        borderBox.setColor(T::getPressed() ? down : up);
90007bba:	2900      	cmp	r1, #0
90007bbc:	d03e      	beq.n	90007c3c <_ZN26screen_game_selectViewBaseC1Ev+0x224>
90007bbe:	4613      	mov	r3, r2
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90007bc0:	f504 729c 	add.w	r2, r4, #312	; 0x138
90007bc4:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
90007bc8:	2600      	movs	r6, #0
90007bca:	6813      	ldr	r3, [r2, #0]
    btn_asteroids.add(_btn_asteroids);
90007bcc:	4651      	mov	r1, sl
90007bce:	4640      	mov	r0, r8
90007bd0:	f8c4 60c8 	str.w	r6, [r4, #200]	; 0xc8
        borderColor = colorBorder;
90007bd4:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
    _btn_asteroids.setAction(flexButtonCallback);
90007bd8:	f504 73c2 	add.w	r3, r4, #388	; 0x184
        action = &callback;
90007bdc:	f8c4 30f4 	str.w	r3, [r4, #244]	; 0xf4
90007be0:	4b23      	ldr	r3, [pc, #140]	; (90007c70 <_ZN26screen_game_selectViewBaseC1Ev+0x258>)
90007be2:	f8c4 30cc 	str.w	r3, [r4, #204]	; 0xcc
    btn_asteroids.add(_btn_asteroids);
90007be6:	f00b fe29 	bl	9001383c <_ZN8touchgfx9Container3addERNS_8DrawableE>
90007bea:	4b25      	ldr	r3, [pc, #148]	; (90007c80 <_ZN26screen_game_selectViewBaseC1Ev+0x268>)
        linespace = space;
90007bec:	f8a4 6170 	strh.w	r6, [r4, #368]	; 0x170
        boundingArea = calculateBoundingArea();
90007bf0:	466e      	mov	r6, sp
90007bf2:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
        color = newColor;
90007bf6:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        boundingArea = calculateBoundingArea();
90007bfa:	4629      	mov	r1, r5
90007bfc:	4630      	mov	r0, r6
        color = newColor;
90007bfe:	f8c4 316c 	str.w	r3, [r4, #364]	; 0x16c
        boundingArea = calculateBoundingArea();
90007c02:	f00d fdcb 	bl	9001579c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
90007c06:	2203      	movs	r2, #3
90007c08:	f105 033c 	add.w	r3, r5, #60	; 0x3c
90007c0c:	f8cd 9010 	str.w	r9, [sp, #16]
90007c10:	f8ad 2014 	strh.w	r2, [sp, #20]
90007c14:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
90007c18:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    lbl_asteroids.setTypedText(touchgfx::TypedText(T___SINGLEUSE_19SB));
90007c1c:	a904      	add	r1, sp, #16
90007c1e:	4628      	mov	r0, r5
90007c20:	f00e f864 	bl	90015cec <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    btn_asteroids.add(lbl_asteroids);
90007c24:	4629      	mov	r1, r5
90007c26:	4640      	mov	r0, r8
90007c28:	f00b fe08 	bl	9001383c <_ZN8touchgfx9Container3addERNS_8DrawableE>
90007c2c:	4638      	mov	r0, r7
90007c2e:	4641      	mov	r1, r8
90007c30:	f00b fe04 	bl	9001383c <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
90007c34:	4620      	mov	r0, r4
90007c36:	b006      	add	sp, #24
90007c38:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90007c3c:	f504 729a 	add.w	r2, r4, #308	; 0x134
90007c40:	e7c0      	b.n	90007bc4 <_ZN26screen_game_selectViewBaseC1Ev+0x1ac>
90007c42:	bf00      	nop
90007c44:	9002e464 	.word	0x9002e464
90007c48:	9002dadc 	.word	0x9002dadc
90007c4c:	9002e034 	.word	0x9002e034
90007c50:	9002da28 	.word	0x9002da28
90007c54:	9002e4cc 	.word	0x9002e4cc
90007c58:	011001e0 	.word	0x011001e0
90007c5c:	9002dac4 	.word	0x9002dac4
90007c60:	900078b5 	.word	0x900078b5
90007c64:	9002e3d4 	.word	0x9002e3d4
90007c68:	ff3d3d3d 	.word	0xff3d3d3d
90007c6c:	ff003366 	.word	0xff003366
90007c70:	003800f0 	.word	0x003800f0
90007c74:	0014000f 	.word	0x0014000f
90007c78:	ff7a7a05 	.word	0xff7a7a05
90007c7c:	ffc7c73c 	.word	0xffc7c73c
90007c80:	0008001b 	.word	0x0008001b
90007c84:	9002cd98 	.word	0x9002cd98

90007c88 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
90007c88:	4770      	bx	lr
90007c8a:	bf00      	nop

90007c8c <_ZN19FrontendApplicationD0Ev>:
90007c8c:	b510      	push	{r4, lr}
90007c8e:	4604      	mov	r4, r0
90007c90:	f44f 71ae 	mov.w	r1, #348	; 0x15c
90007c94:	f021 ffc3 	bl	90029c1e <_ZdlPvj>
90007c98:	4620      	mov	r0, r4
90007c9a:	bd10      	pop	{r4, pc}

90007c9c <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
90007c9c:	b510      	push	{r4, lr}
90007c9e:	4604      	mov	r4, r0
    {
        model.tick();
90007ca0:	f8d0 0158 	ldr.w	r0, [r0, #344]	; 0x158
90007ca4:	f000 f892 	bl	90007dcc <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
90007ca8:	4620      	mov	r0, r4
    }
90007caa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
90007cae:	f010 beeb 	b.w	90018a88 <_ZN8touchgfx11Application15handleTickEventEv>
90007cb2:	bf00      	nop

90007cb4 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
90007cb4:	b510      	push	{r4, lr}
90007cb6:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
90007cb8:	f7fe fcbe 	bl	90006638 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
90007cbc:	4b01      	ldr	r3, [pc, #4]	; (90007cc4 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
{

}
90007cbe:	4620      	mov	r0, r4
    : FrontendApplicationBase(m, heap)
90007cc0:	6023      	str	r3, [r4, #0]
}
90007cc2:	bd10      	pop	{r4, pc}
90007cc4:	9002db10 	.word	0x9002db10

90007cc8 <_ZN13ModelListener9move_shipEv>:
    }

    virtual void move_ship(){}
90007cc8:	4770      	bx	lr
90007cca:	bf00      	nop

90007ccc <_ZN13ModelListener12move_bulletsEv>:
    virtual void move_bullets(){}
90007ccc:	4770      	bx	lr
90007cce:	bf00      	nop

90007cd0 <_ZN13ModelListener10move_rocksEv>:
    virtual void move_rocks(){}
90007cd0:	4770      	bx	lr
90007cd2:	bf00      	nop

90007cd4 <_ZN13ModelListener25is_asteroids_game_startedEv>:

    virtual bool is_asteroids_game_started() {return false;}
90007cd4:	2000      	movs	r0, #0
90007cd6:	4770      	bx	lr

90007cd8 <_ZN13ModelListener21check_ship_collisionsEv>:

    virtual void check_ship_collisions(){}
90007cd8:	4770      	bx	lr
90007cda:	bf00      	nop

90007cdc <_ZN13ModelListener23check_bullet_collisionsEv>:
    virtual void check_bullet_collisions(){}
90007cdc:	4770      	bx	lr
90007cde:	bf00      	nop

90007ce0 <_ZN13ModelListener20set_allowed_to_shootEb>:

    virtual void set_allowed_to_shoot(bool value){}
90007ce0:	4770      	bx	lr
90007ce2:	bf00      	nop

90007ce4 <_ZN13ModelListener14set_invincibleEb>:

    virtual void set_invincible(bool value){}
90007ce4:	4770      	bx	lr
90007ce6:	bf00      	nop

90007ce8 <_ZN5ModelC1Ev>:

	extern osSemaphoreId_t invincibility_timer_started_semaphoreHandle;
	extern osSemaphoreId_t invincibility_timer_ended_semaphoreHandle;
}

Model::Model() : modelListener(0)
90007ce8:	2200      	movs	r2, #0
90007cea:	6002      	str	r2, [r0, #0]
{

}
90007cec:	4770      	bx	lr
90007cee:	bf00      	nop

90007cf0 <_ZN5Model14asteroids_tickEv>:
	if( modelListener->is_asteroids_game_started() ) {
		asteroids_tick();
	}
}

void Model::asteroids_tick() {
90007cf0:	b570      	push	{r4, r5, r6, lr}
	osSemaphoreAcquire(bullet_timer_started_semaphoreHandle, 0U);
}

void Model::bullet_timer_ended()
{
	if( osSemaphoreGetCount(bullet_timer_ended_semaphoreHandle) == 0 ) {
90007cf2:	4d2d      	ldr	r5, [pc, #180]	; (90007da8 <_ZN5Model14asteroids_tickEv+0xb8>)
void Model::asteroids_tick() {
90007cf4:	4604      	mov	r4, r0
	if( osSemaphoreGetCount(bullet_timer_ended_semaphoreHandle) == 0 ) {
90007cf6:	6828      	ldr	r0, [r5, #0]
90007cf8:	f008 fec8 	bl	90010a8c <osSemaphoreGetCount>
90007cfc:	b1e0      	cbz	r0, 90007d38 <_ZN5Model14asteroids_tickEv+0x48>
	osSemaphoreAcquire(invincibility_timer_started_semaphoreHandle, 0U);
}

void Model::invincibility_timer_ended()
{
	if( osSemaphoreGetCount(invincibility_timer_ended_semaphoreHandle) == 0 ) {
90007cfe:	4e2b      	ldr	r6, [pc, #172]	; (90007dac <_ZN5Model14asteroids_tickEv+0xbc>)
90007d00:	6830      	ldr	r0, [r6, #0]
90007d02:	f008 fec3 	bl	90010a8c <osSemaphoreGetCount>
90007d06:	4605      	mov	r5, r0
90007d08:	b310      	cbz	r0, 90007d50 <_ZN5Model14asteroids_tickEv+0x60>
	modelListener->move_ship();
90007d0a:	6820      	ldr	r0, [r4, #0]
90007d0c:	6803      	ldr	r3, [r0, #0]
90007d0e:	689a      	ldr	r2, [r3, #8]
90007d10:	4927      	ldr	r1, [pc, #156]	; (90007db0 <_ZN5Model14asteroids_tickEv+0xc0>)
90007d12:	428a      	cmp	r2, r1
90007d14:	d128      	bne.n	90007d68 <_ZN5Model14asteroids_tickEv+0x78>
	modelListener->move_bullets();
90007d16:	68da      	ldr	r2, [r3, #12]
90007d18:	4926      	ldr	r1, [pc, #152]	; (90007db4 <_ZN5Model14asteroids_tickEv+0xc4>)
90007d1a:	428a      	cmp	r2, r1
90007d1c:	d12b      	bne.n	90007d76 <_ZN5Model14asteroids_tickEv+0x86>
	modelListener->move_rocks();
90007d1e:	691a      	ldr	r2, [r3, #16]
90007d20:	4925      	ldr	r1, [pc, #148]	; (90007db8 <_ZN5Model14asteroids_tickEv+0xc8>)
90007d22:	428a      	cmp	r2, r1
90007d24:	d12e      	bne.n	90007d84 <_ZN5Model14asteroids_tickEv+0x94>
	modelListener->check_bullet_collisions();
90007d26:	69da      	ldr	r2, [r3, #28]
90007d28:	4924      	ldr	r1, [pc, #144]	; (90007dbc <_ZN5Model14asteroids_tickEv+0xcc>)
90007d2a:	428a      	cmp	r2, r1
90007d2c:	d131      	bne.n	90007d92 <_ZN5Model14asteroids_tickEv+0xa2>
	modelListener->check_ship_collisions();
90007d2e:	699b      	ldr	r3, [r3, #24]
90007d30:	4a23      	ldr	r2, [pc, #140]	; (90007dc0 <_ZN5Model14asteroids_tickEv+0xd0>)
90007d32:	4293      	cmp	r3, r2
90007d34:	d134      	bne.n	90007da0 <_ZN5Model14asteroids_tickEv+0xb0>
}
90007d36:	bd70      	pop	{r4, r5, r6, pc}
		osSemaphoreRelease(bullet_timer_ended_semaphoreHandle);
90007d38:	6828      	ldr	r0, [r5, #0]
90007d3a:	f008 fe7b 	bl	90010a34 <osSemaphoreRelease>
		modelListener->set_allowed_to_shoot(true);
90007d3e:	6820      	ldr	r0, [r4, #0]
90007d40:	4a20      	ldr	r2, [pc, #128]	; (90007dc4 <_ZN5Model14asteroids_tickEv+0xd4>)
90007d42:	6803      	ldr	r3, [r0, #0]
90007d44:	6a1b      	ldr	r3, [r3, #32]
90007d46:	4293      	cmp	r3, r2
90007d48:	d0d9      	beq.n	90007cfe <_ZN5Model14asteroids_tickEv+0xe>
90007d4a:	2101      	movs	r1, #1
90007d4c:	4798      	blx	r3
90007d4e:	e7d6      	b.n	90007cfe <_ZN5Model14asteroids_tickEv+0xe>
		osSemaphoreRelease(invincibility_timer_ended_semaphoreHandle);
90007d50:	6830      	ldr	r0, [r6, #0]
90007d52:	f008 fe6f 	bl	90010a34 <osSemaphoreRelease>
		modelListener->set_invincible(false);
90007d56:	6820      	ldr	r0, [r4, #0]
90007d58:	491b      	ldr	r1, [pc, #108]	; (90007dc8 <_ZN5Model14asteroids_tickEv+0xd8>)
90007d5a:	6803      	ldr	r3, [r0, #0]
90007d5c:	6a5a      	ldr	r2, [r3, #36]	; 0x24
90007d5e:	428a      	cmp	r2, r1
90007d60:	d0d5      	beq.n	90007d0e <_ZN5Model14asteroids_tickEv+0x1e>
90007d62:	4629      	mov	r1, r5
90007d64:	4790      	blx	r2
90007d66:	e7d0      	b.n	90007d0a <_ZN5Model14asteroids_tickEv+0x1a>
	modelListener->move_ship();
90007d68:	4790      	blx	r2
	modelListener->move_bullets();
90007d6a:	6820      	ldr	r0, [r4, #0]
90007d6c:	4911      	ldr	r1, [pc, #68]	; (90007db4 <_ZN5Model14asteroids_tickEv+0xc4>)
90007d6e:	6803      	ldr	r3, [r0, #0]
90007d70:	68da      	ldr	r2, [r3, #12]
90007d72:	428a      	cmp	r2, r1
90007d74:	d0d3      	beq.n	90007d1e <_ZN5Model14asteroids_tickEv+0x2e>
90007d76:	4790      	blx	r2
	modelListener->move_rocks();
90007d78:	6820      	ldr	r0, [r4, #0]
90007d7a:	490f      	ldr	r1, [pc, #60]	; (90007db8 <_ZN5Model14asteroids_tickEv+0xc8>)
90007d7c:	6803      	ldr	r3, [r0, #0]
90007d7e:	691a      	ldr	r2, [r3, #16]
90007d80:	428a      	cmp	r2, r1
90007d82:	d0d0      	beq.n	90007d26 <_ZN5Model14asteroids_tickEv+0x36>
90007d84:	4790      	blx	r2
	modelListener->check_bullet_collisions();
90007d86:	6820      	ldr	r0, [r4, #0]
90007d88:	490c      	ldr	r1, [pc, #48]	; (90007dbc <_ZN5Model14asteroids_tickEv+0xcc>)
90007d8a:	6803      	ldr	r3, [r0, #0]
90007d8c:	69da      	ldr	r2, [r3, #28]
90007d8e:	428a      	cmp	r2, r1
90007d90:	d0cd      	beq.n	90007d2e <_ZN5Model14asteroids_tickEv+0x3e>
90007d92:	4790      	blx	r2
	modelListener->check_ship_collisions();
90007d94:	6820      	ldr	r0, [r4, #0]
90007d96:	4a0a      	ldr	r2, [pc, #40]	; (90007dc0 <_ZN5Model14asteroids_tickEv+0xd0>)
90007d98:	6803      	ldr	r3, [r0, #0]
90007d9a:	699b      	ldr	r3, [r3, #24]
90007d9c:	4293      	cmp	r3, r2
90007d9e:	d0ca      	beq.n	90007d36 <_ZN5Model14asteroids_tickEv+0x46>
}
90007da0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	modelListener->check_ship_collisions();
90007da4:	4718      	bx	r3
90007da6:	bf00      	nop
90007da8:	240091e8 	.word	0x240091e8
90007dac:	240095b0 	.word	0x240095b0
90007db0:	90007cc9 	.word	0x90007cc9
90007db4:	90007ccd 	.word	0x90007ccd
90007db8:	90007cd1 	.word	0x90007cd1
90007dbc:	90007cdd 	.word	0x90007cdd
90007dc0:	90007cd9 	.word	0x90007cd9
90007dc4:	90007ce1 	.word	0x90007ce1
90007dc8:	90007ce5 	.word	0x90007ce5

90007dcc <_ZN5Model4tickEv>:
{
90007dcc:	b510      	push	{r4, lr}
90007dce:	4604      	mov	r4, r0
	if( modelListener->is_asteroids_game_started() ) {
90007dd0:	6800      	ldr	r0, [r0, #0]
90007dd2:	4a07      	ldr	r2, [pc, #28]	; (90007df0 <_ZN5Model4tickEv+0x24>)
90007dd4:	6803      	ldr	r3, [r0, #0]
90007dd6:	695b      	ldr	r3, [r3, #20]
90007dd8:	4293      	cmp	r3, r2
90007dda:	d100      	bne.n	90007dde <_ZN5Model4tickEv+0x12>
}
90007ddc:	bd10      	pop	{r4, pc}
	if( modelListener->is_asteroids_game_started() ) {
90007dde:	4798      	blx	r3
90007de0:	2800      	cmp	r0, #0
90007de2:	d0fb      	beq.n	90007ddc <_ZN5Model4tickEv+0x10>
		asteroids_tick();
90007de4:	4620      	mov	r0, r4
}
90007de6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		asteroids_tick();
90007dea:	f7ff bf81 	b.w	90007cf0 <_ZN5Model14asteroids_tickEv>
90007dee:	bf00      	nop
90007df0:	90007cd5 	.word	0x90007cd5

90007df4 <_ZN5Model18start_bullet_timerEv>:
	osSemaphoreAcquire(bullet_timer_started_semaphoreHandle, 0U);
90007df4:	4b02      	ldr	r3, [pc, #8]	; (90007e00 <_ZN5Model18start_bullet_timerEv+0xc>)
90007df6:	2100      	movs	r1, #0
90007df8:	6818      	ldr	r0, [r3, #0]
90007dfa:	f008 bde7 	b.w	900109cc <osSemaphoreAcquire>
90007dfe:	bf00      	nop
90007e00:	240091ec 	.word	0x240091ec

90007e04 <_ZN5Model25start_invincibility_timerEv>:
	osSemaphoreAcquire(invincibility_timer_started_semaphoreHandle, 0U);
90007e04:	4b02      	ldr	r3, [pc, #8]	; (90007e10 <_ZN5Model25start_invincibility_timerEv+0xc>)
90007e06:	2100      	movs	r1, #0
90007e08:	6818      	ldr	r0, [r3, #0]
90007e0a:	f008 bddf 	b.w	900109cc <osSemaphoreAcquire>
90007e0e:	bf00      	nop
90007e10:	240095b4 	.word	0x240095b4

90007e14 <_ZN25screen_asteroidsPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~screen_asteroidsPresenter() {}
90007e14:	4770      	bx	lr
90007e16:	bf00      	nop

90007e18 <_ZThn4_N25screen_asteroidsPresenterD1Ev>:
90007e18:	3804      	subs	r0, #4
90007e1a:	4770      	bx	lr

90007e1c <_ZN25screen_asteroidsPresenter10deactivateEv>:
}

void screen_asteroidsPresenter::activate()
{

}
90007e1c:	4770      	bx	lr
90007e1e:	bf00      	nop

90007e20 <_ZN25screen_asteroidsPresenter25is_asteroids_game_startedEv>:


bool screen_asteroidsPresenter::is_asteroids_game_started()
{
	return game_started;
}
90007e20:	7e40      	ldrb	r0, [r0, #25]
90007e22:	4770      	bx	lr

90007e24 <_ZN25screen_asteroidsPresenter20start_asteroids_gameEv>:

void screen_asteroidsPresenter::start_asteroids_game()
{
	init_game();
90007e24:	6803      	ldr	r3, [r0, #0]
90007e26:	6a1b      	ldr	r3, [r3, #32]
90007e28:	4718      	bx	r3
90007e2a:	bf00      	nop

90007e2c <_ZN25screen_asteroidsPresenter9game_overEv>:

void screen_asteroidsPresenter::game_over()
{
	game_started = false;

	if( score > high_score )
90007e2c:	e9d0 3204 	ldrd	r3, r2, [r0, #16]
	game_started = false;
90007e30:	2100      	movs	r1, #0
	if( score > high_score )
90007e32:	4293      	cmp	r3, r2
	game_started = false;
90007e34:	7641      	strb	r1, [r0, #25]
		high_score = score;
90007e36:	bf88      	it	hi
90007e38:	6143      	strhi	r3, [r0, #20]

	view.show_endgame_screen();
90007e3a:	69c0      	ldr	r0, [r0, #28]
90007e3c:	6803      	ldr	r3, [r0, #0]
90007e3e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
90007e40:	4718      	bx	r3
90007e42:	bf00      	nop

90007e44 <_ZN25screen_asteroidsPresenter9move_shipEv>:
	// start the game
	game_started = true;
}

void screen_asteroidsPresenter::move_ship()
{
90007e44:	b5f0      	push	{r4, r5, r6, r7, lr}
90007e46:	4604      	mov	r4, r0
	int old_x, old_y;

	view.getShipPosition(&old_x, &old_y);
90007e48:	69c0      	ldr	r0, [r0, #28]
{
90007e4a:	b083      	sub	sp, #12
	view.getShipPosition(&old_x, &old_y);
90007e4c:	6803      	ldr	r3, [r0, #0]
90007e4e:	aa01      	add	r2, sp, #4
90007e50:	4669      	mov	r1, sp
90007e52:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
90007e54:	4798      	blx	r3

	int new_x = old_x;
	int new_y = old_y;

	ShipDirection ship_direction = view.get_ship_direction();
90007e56:	69e0      	ldr	r0, [r4, #28]
90007e58:	6803      	ldr	r3, [r0, #0]
90007e5a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
	int new_y = old_y;
90007e5c:	e9dd 5600 	ldrd	r5, r6, [sp]
	ShipDirection ship_direction = view.get_ship_direction();
90007e60:	4798      	blx	r3

	switch(ship_direction) {
90007e62:	2803      	cmp	r0, #3
90007e64:	d805      	bhi.n	90007e72 <_ZN25screen_asteroidsPresenter9move_shipEv+0x2e>
90007e66:	e8df f000 	tbb	[pc, r0]
90007e6a:	2629      	.short	0x2629
90007e6c:	2302      	.short	0x2302
		case ShipDirection::LEFT: {
			new_x = old_x - SHIP_MOVES_PER_TICK;
90007e6e:	9d00      	ldr	r5, [sp, #0]
90007e70:	3d05      	subs	r5, #5
		default: {
			break;
		}
	}

	Drawable *ship = view.get_ship_pointer();
90007e72:	69e0      	ldr	r0, [r4, #28]
90007e74:	6803      	ldr	r3, [r0, #0]
90007e76:	6d9b      	ldr	r3, [r3, #88]	; 0x58
90007e78:	4798      	blx	r3

	view.move_ship((new_x > (SCREEN_WIDTH - ship->getWidth()) || new_x < 0) ? old_x : new_x, (new_y > (SCREEN_HEIGHT - ship->getHeight()) || new_y < 0) ? old_y : new_y);
90007e7a:	69e4      	ldr	r4, [r4, #28]
90007e7c:	6823      	ldr	r3, [r4, #0]
90007e7e:	6d1f      	ldr	r7, [r3, #80]	; 0x50
90007e80:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
90007e84:	f5c3 73f0 	rsb	r3, r3, #480	; 0x1e0
90007e88:	42ab      	cmp	r3, r5
90007e8a:	db01      	blt.n	90007e90 <_ZN25screen_asteroidsPresenter9move_shipEv+0x4c>
90007e8c:	2d00      	cmp	r5, #0
90007e8e:	da00      	bge.n	90007e92 <_ZN25screen_asteroidsPresenter9move_shipEv+0x4e>
90007e90:	9d00      	ldr	r5, [sp, #0]
90007e92:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
90007e96:	f5c3 7388 	rsb	r3, r3, #272	; 0x110
90007e9a:	42b3      	cmp	r3, r6
90007e9c:	db01      	blt.n	90007ea2 <_ZN25screen_asteroidsPresenter9move_shipEv+0x5e>
90007e9e:	2e00      	cmp	r6, #0
90007ea0:	da00      	bge.n	90007ea4 <_ZN25screen_asteroidsPresenter9move_shipEv+0x60>
90007ea2:	9e01      	ldr	r6, [sp, #4]
90007ea4:	4632      	mov	r2, r6
90007ea6:	4629      	mov	r1, r5
90007ea8:	4620      	mov	r0, r4
90007eaa:	47b8      	blx	r7
}
90007eac:	b003      	add	sp, #12
90007eae:	bdf0      	pop	{r4, r5, r6, r7, pc}
			new_x = old_x + SHIP_MOVES_PER_TICK;
90007eb0:	9d00      	ldr	r5, [sp, #0]
90007eb2:	3505      	adds	r5, #5
			break;
90007eb4:	e7dd      	b.n	90007e72 <_ZN25screen_asteroidsPresenter9move_shipEv+0x2e>
			new_y = old_y + SHIP_MOVES_PER_TICK;
90007eb6:	9e01      	ldr	r6, [sp, #4]
90007eb8:	3605      	adds	r6, #5
			break;
90007eba:	e7da      	b.n	90007e72 <_ZN25screen_asteroidsPresenter9move_shipEv+0x2e>
			new_y = old_y - SHIP_MOVES_PER_TICK;
90007ebc:	9e01      	ldr	r6, [sp, #4]
90007ebe:	3e05      	subs	r6, #5
			break;
90007ec0:	e7d7      	b.n	90007e72 <_ZN25screen_asteroidsPresenter9move_shipEv+0x2e>
90007ec2:	bf00      	nop

90007ec4 <_ZThn4_N25screen_asteroidsPresenter9move_shipEv>:
    virtual bool is_invincible();

    /*
     * SHIP STUFF
     */
    virtual void move_ship();
90007ec4:	f1a0 0004 	sub.w	r0, r0, #4
90007ec8:	f7ff bfbc 	b.w	90007e44 <_ZN25screen_asteroidsPresenter9move_shipEv>

90007ecc <_ZN25screen_asteroidsPresenter10move_rocksEv>:


void screen_asteroidsPresenter::move_rocks()
{
90007ecc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90007ed0:	f242 1754 	movw	r7, #8532	; 0x2154
90007ed4:	b083      	sub	sp, #12
	for(int i = 0; i < ROCK_COUNT; i++) {
90007ed6:	2500      	movs	r5, #0
        return visible;
90007ed8:	f04f 092c 	mov.w	r9, #44	; 0x2c
{
90007edc:	4682      	mov	sl, r0
        return rect.y;
90007ede:	f242 1b5a 	movw	fp, #8538	; 0x215a
90007ee2:	9701      	str	r7, [sp, #4]
90007ee4:	e01f      	b.n	90007f26 <_ZN25screen_asteroidsPresenter10move_rocksEv+0x5a>

			continue;
		}

		// move the rock
		view.move_rock(rock, rock->getX(), rock->getY() + ROCK_MOVES_PER_TICK);
90007ee6:	f936 300b 	ldrsh.w	r3, [r6, fp]
90007eea:	6827      	ldr	r7, [r4, #0]
90007eec:	3301      	adds	r3, #1
90007eee:	5eb2      	ldrsh	r2, [r6, r2]
90007ef0:	6e7f      	ldr	r7, [r7, #100]	; 0x64
90007ef2:	47b8      	blx	r7

		// check if rock is offscreen
		if( rock->getY() > SCREEN_HEIGHT ) {
90007ef4:	f936 300b 	ldrsh.w	r3, [r6, fp]
			// remove the rock
			view.move_rock_offscreen(rock);
90007ef8:	4641      	mov	r1, r8
		if( rock->getY() > SCREEN_HEIGHT ) {
90007efa:	f5b3 7f88 	cmp.w	r3, #272	; 0x110
90007efe:	dd04      	ble.n	90007f0a <_ZN25screen_asteroidsPresenter10move_rocksEv+0x3e>
			view.move_rock_offscreen(rock);
90007f00:	f8da 001c 	ldr.w	r0, [sl, #28]
90007f04:	6803      	ldr	r3, [r0, #0]
90007f06:	6d5b      	ldr	r3, [r3, #84]	; 0x54
90007f08:	4798      	blx	r3
        return parent;
90007f0a:	f242 1368 	movw	r3, #8552	; 0x2168
90007f0e:	fb09 4405 	mla	r4, r9, r5, r4
90007f12:	58e0      	ldr	r0, [r4, r3]
		}
		rock->getParent()->invalidateContent();
90007f14:	6803      	ldr	r3, [r0, #0]
90007f16:	699b      	ldr	r3, [r3, #24]
90007f18:	4798      	blx	r3
	for(int i = 0; i < ROCK_COUNT; i++) {
90007f1a:	9b01      	ldr	r3, [sp, #4]
90007f1c:	3501      	adds	r5, #1
90007f1e:	332c      	adds	r3, #44	; 0x2c
90007f20:	2d0a      	cmp	r5, #10
90007f22:	9301      	str	r3, [sp, #4]
90007f24:	d013      	beq.n	90007f4e <_ZN25screen_asteroidsPresenter10move_rocksEv+0x82>
		touchgfx::ScalableImage *rock = &view.rocks[i];
90007f26:	f8da 401c 	ldr.w	r4, [sl, #28]
        return rect.x;
90007f2a:	f242 1258 	movw	r2, #8536	; 0x2158
90007f2e:	9b01      	ldr	r3, [sp, #4]
        return visible;
90007f30:	fb09 4605 	mla	r6, r9, r5, r4
		view.move_rock(rock, rock->getX(), rock->getY() + ROCK_MOVES_PER_TICK);
90007f34:	4620      	mov	r0, r4
		touchgfx::ScalableImage *rock = &view.rocks[i];
90007f36:	eb04 0803 	add.w	r8, r4, r3
		if( !rock->isVisible() ) {
90007f3a:	f242 1379 	movw	r3, #8569	; 0x2179
90007f3e:	5cf3      	ldrb	r3, [r6, r3]
		view.move_rock(rock, rock->getX(), rock->getY() + ROCK_MOVES_PER_TICK);
90007f40:	4641      	mov	r1, r8
		if( !rock->isVisible() ) {
90007f42:	2b00      	cmp	r3, #0
90007f44:	d1cf      	bne.n	90007ee6 <_ZN25screen_asteroidsPresenter10move_rocksEv+0x1a>
			view.new_rock_position(rock);
90007f46:	6823      	ldr	r3, [r4, #0]
90007f48:	6e9b      	ldr	r3, [r3, #104]	; 0x68
90007f4a:	4798      	blx	r3
			continue;
90007f4c:	e7e5      	b.n	90007f1a <_ZN25screen_asteroidsPresenter10move_rocksEv+0x4e>
	}
}
90007f4e:	b003      	add	sp, #12
90007f50:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90007f54 <_ZThn4_N25screen_asteroidsPresenter10move_rocksEv>:


    /*
     * ROCK STUFF
     */
    virtual void move_rocks();
90007f54:	f1a0 0004 	sub.w	r0, r0, #4
90007f58:	f7ff bfb8 	b.w	90007ecc <_ZN25screen_asteroidsPresenter10move_rocksEv>

90007f5c <_ZN25screen_asteroidsPresenter25get_next_invisible_bulletEv>:
}

Drawable* screen_asteroidsPresenter::get_next_invisible_bullet()
{
	for(int i = 0; i < BULLET_COUNT; i++) {
		if( !view.bullets[i].isVisible() )
90007f5c:	69c2      	ldr	r2, [r0, #28]
90007f5e:	f502 5300 	add.w	r3, r2, #8192	; 0x2000
90007f62:	f893 1331 	ldrb.w	r1, [r3, #817]	; 0x331
90007f66:	b1e9      	cbz	r1, 90007fa4 <_ZN25screen_asteroidsPresenter25get_next_invisible_bulletEv+0x48>
90007f68:	f893 135d 	ldrb.w	r1, [r3, #861]	; 0x35d
90007f6c:	b1c9      	cbz	r1, 90007fa2 <_ZN25screen_asteroidsPresenter25get_next_invisible_bulletEv+0x46>
90007f6e:	f893 1389 	ldrb.w	r1, [r3, #905]	; 0x389
90007f72:	b1f1      	cbz	r1, 90007fb2 <_ZN25screen_asteroidsPresenter25get_next_invisible_bulletEv+0x56>
90007f74:	f893 13b5 	ldrb.w	r1, [r3, #949]	; 0x3b5
90007f78:	b1e9      	cbz	r1, 90007fb6 <_ZN25screen_asteroidsPresenter25get_next_invisible_bulletEv+0x5a>
90007f7a:	f893 13e1 	ldrb.w	r1, [r3, #993]	; 0x3e1
90007f7e:	b1e1      	cbz	r1, 90007fba <_ZN25screen_asteroidsPresenter25get_next_invisible_bulletEv+0x5e>
90007f80:	f893 140d 	ldrb.w	r1, [r3, #1037]	; 0x40d
90007f84:	b1d9      	cbz	r1, 90007fbe <_ZN25screen_asteroidsPresenter25get_next_invisible_bulletEv+0x62>
90007f86:	f893 1439 	ldrb.w	r1, [r3, #1081]	; 0x439
90007f8a:	b1d1      	cbz	r1, 90007fc2 <_ZN25screen_asteroidsPresenter25get_next_invisible_bulletEv+0x66>
90007f8c:	f893 1465 	ldrb.w	r1, [r3, #1125]	; 0x465
90007f90:	b1c9      	cbz	r1, 90007fc6 <_ZN25screen_asteroidsPresenter25get_next_invisible_bulletEv+0x6a>
90007f92:	f893 1491 	ldrb.w	r1, [r3, #1169]	; 0x491
90007f96:	b1c1      	cbz	r1, 90007fca <_ZN25screen_asteroidsPresenter25get_next_invisible_bulletEv+0x6e>
90007f98:	f893 34bd 	ldrb.w	r3, [r3, #1213]	; 0x4bd
90007f9c:	b1bb      	cbz	r3, 90007fce <_ZN25screen_asteroidsPresenter25get_next_invisible_bulletEv+0x72>
			return &view.bullets[i];
	}

	return NULL;
90007f9e:	2000      	movs	r0, #0
}
90007fa0:	4770      	bx	lr
	for(int i = 0; i < BULLET_COUNT; i++) {
90007fa2:	2101      	movs	r1, #1
			return &view.bullets[i];
90007fa4:	232c      	movs	r3, #44	; 0x2c
90007fa6:	f242 300c 	movw	r0, #8972	; 0x230c
90007faa:	fb03 2201 	mla	r2, r3, r1, r2
90007fae:	4410      	add	r0, r2
90007fb0:	4770      	bx	lr
	for(int i = 0; i < BULLET_COUNT; i++) {
90007fb2:	2102      	movs	r1, #2
90007fb4:	e7f6      	b.n	90007fa4 <_ZN25screen_asteroidsPresenter25get_next_invisible_bulletEv+0x48>
90007fb6:	2103      	movs	r1, #3
90007fb8:	e7f4      	b.n	90007fa4 <_ZN25screen_asteroidsPresenter25get_next_invisible_bulletEv+0x48>
90007fba:	2104      	movs	r1, #4
90007fbc:	e7f2      	b.n	90007fa4 <_ZN25screen_asteroidsPresenter25get_next_invisible_bulletEv+0x48>
90007fbe:	2105      	movs	r1, #5
90007fc0:	e7f0      	b.n	90007fa4 <_ZN25screen_asteroidsPresenter25get_next_invisible_bulletEv+0x48>
90007fc2:	2106      	movs	r1, #6
90007fc4:	e7ee      	b.n	90007fa4 <_ZN25screen_asteroidsPresenter25get_next_invisible_bulletEv+0x48>
90007fc6:	2107      	movs	r1, #7
90007fc8:	e7ec      	b.n	90007fa4 <_ZN25screen_asteroidsPresenter25get_next_invisible_bulletEv+0x48>
90007fca:	2108      	movs	r1, #8
90007fcc:	e7ea      	b.n	90007fa4 <_ZN25screen_asteroidsPresenter25get_next_invisible_bulletEv+0x48>
90007fce:	2109      	movs	r1, #9
90007fd0:	e7e8      	b.n	90007fa4 <_ZN25screen_asteroidsPresenter25get_next_invisible_bulletEv+0x48>
90007fd2:	bf00      	nop

90007fd4 <_ZN25screen_asteroidsPresenter12move_bulletsEv>:

void screen_asteroidsPresenter::move_bullets()
{
90007fd4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	shoot_bullet();
90007fd8:	6803      	ldr	r3, [r0, #0]
90007fda:	f242 360c 	movw	r6, #8972	; 0x230c

	for(int i = 0; i < BULLET_COUNT; i++) {
90007fde:	2400      	movs	r4, #0
90007fe0:	f04f 0a2c 	mov.w	sl, #44	; 0x2c
90007fe4:	f242 3931 	movw	r9, #9009	; 0x2331
        return rect.y;
90007fe8:	f242 3812 	movw	r8, #8978	; 0x2312
	shoot_bullet();
90007fec:	6adb      	ldr	r3, [r3, #44]	; 0x2c
{
90007fee:	4607      	mov	r7, r0
	shoot_bullet();
90007ff0:	4798      	blx	r3
		if( !view.bullets[i].isVisible() )
90007ff2:	69fa      	ldr	r2, [r7, #28]
        return visible;
90007ff4:	fb0a f504 	mul.w	r5, sl, r4
        return rect.x;
90007ff8:	f242 3b10 	movw	fp, #8976	; 0x2310
	for(int i = 0; i < BULLET_COUNT; i++) {
90007ffc:	3401      	adds	r4, #1
        return visible;
90007ffe:	eb02 0c05 	add.w	ip, r2, r5
			continue;

		// move the bullet
		view.move_bullet(&view.bullets[i], view.bullets[i].getX(), view.bullets[i].getY() - BULLET_MOVES_PER_TICK);
90008002:	1991      	adds	r1, r2, r6
90008004:	4610      	mov	r0, r2
		if( !view.bullets[i].isVisible() )
90008006:	f81c 3009 	ldrb.w	r3, [ip, r9]
9000800a:	b1a3      	cbz	r3, 90008036 <_ZN25screen_asteroidsPresenter12move_bulletsEv+0x62>
		view.move_bullet(&view.bullets[i], view.bullets[i].getX(), view.bullets[i].getY() - BULLET_MOVES_PER_TICK);
9000800c:	f8d2 e000 	ldr.w	lr, [r2]
90008010:	f93c 3008 	ldrsh.w	r3, [ip, r8]
90008014:	f93c 200b 	ldrsh.w	r2, [ip, fp]
90008018:	3b0a      	subs	r3, #10
9000801a:	f8de b074 	ldr.w	fp, [lr, #116]	; 0x74
9000801e:	47d8      	blx	fp

		// check if bullet is offscreen
		if( view.bullets[i].getY() < 0 ) {
90008020:	69fb      	ldr	r3, [r7, #28]
        return rect.y;
90008022:	441d      	add	r5, r3
			// remove the offscreen bullet
			view.move_bullet_offscreen(&view.bullets[i]);
90008024:	1999      	adds	r1, r3, r6
90008026:	4618      	mov	r0, r3
		if( view.bullets[i].getY() < 0 ) {
90008028:	f935 2008 	ldrsh.w	r2, [r5, r8]
9000802c:	2a00      	cmp	r2, #0
9000802e:	da02      	bge.n	90008036 <_ZN25screen_asteroidsPresenter12move_bulletsEv+0x62>
			view.move_bullet_offscreen(&view.bullets[i]);
90008030:	681b      	ldr	r3, [r3, #0]
90008032:	6f1b      	ldr	r3, [r3, #112]	; 0x70
90008034:	4798      	blx	r3
	for(int i = 0; i < BULLET_COUNT; i++) {
90008036:	2c0a      	cmp	r4, #10
90008038:	f106 062c 	add.w	r6, r6, #44	; 0x2c
9000803c:	d1d9      	bne.n	90007ff2 <_ZN25screen_asteroidsPresenter12move_bulletsEv+0x1e>
		}
	}
}
9000803e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
90008042:	bf00      	nop

90008044 <_ZThn4_N25screen_asteroidsPresenter12move_bulletsEv>:


    /*
     * BULLET STUFF
     */
    virtual void move_bullets();
90008044:	f1a0 0004 	sub.w	r0, r0, #4
90008048:	f7ff bfc4 	b.w	90007fd4 <_ZN25screen_asteroidsPresenter12move_bulletsEv>

9000804c <_ZN25screen_asteroidsPresenter19is_allowed_to_shootEv>:

bool screen_asteroidsPresenter::is_allowed_to_shoot()
{
	return allowed_to_shoot;
}
9000804c:	7e80      	ldrb	r0, [r0, #26]
9000804e:	4770      	bx	lr

90008050 <_ZN25screen_asteroidsPresenter20set_allowed_to_shootEb>:

void screen_asteroidsPresenter::set_allowed_to_shoot(bool value)
{
	allowed_to_shoot = value;
90008050:	7681      	strb	r1, [r0, #26]
}
90008052:	4770      	bx	lr

90008054 <_ZN25screen_asteroidsPresenter10hide_rocksEv>:
		}
	}
}

void screen_asteroidsPresenter::hide_rocks()
{
90008054:	b570      	push	{r4, r5, r6, lr}
90008056:	f242 1454 	movw	r4, #8532	; 0x2154
	for(int i = 0; i < ROCK_COUNT; i++) {
9000805a:	f242 360c 	movw	r6, #8972	; 0x230c
{
9000805e:	4605      	mov	r5, r0
		view.hide_element(&view.rocks[i]);
90008060:	69e8      	ldr	r0, [r5, #28]
90008062:	6803      	ldr	r3, [r0, #0]
90008064:	1901      	adds	r1, r0, r4
	for(int i = 0; i < ROCK_COUNT; i++) {
90008066:	342c      	adds	r4, #44	; 0x2c
		view.hide_element(&view.rocks[i]);
90008068:	6c9b      	ldr	r3, [r3, #72]	; 0x48
9000806a:	4798      	blx	r3
	for(int i = 0; i < ROCK_COUNT; i++) {
9000806c:	42b4      	cmp	r4, r6
9000806e:	d1f7      	bne.n	90008060 <_ZN25screen_asteroidsPresenter10hide_rocksEv+0xc>
	}
}
90008070:	bd70      	pop	{r4, r5, r6, pc}
90008072:	bf00      	nop

90008074 <_ZN25screen_asteroidsPresenter12hide_bulletsEv>:


void screen_asteroidsPresenter::hide_bullets()
{
90008074:	b570      	push	{r4, r5, r6, lr}
90008076:	f242 340c 	movw	r4, #8972	; 0x230c
	for(int i = 0; i < BULLET_COUNT; i++) {
9000807a:	f242 46c4 	movw	r6, #9412	; 0x24c4
{
9000807e:	4605      	mov	r5, r0
		view.hide_element(&view.bullets[i]);
90008080:	69e8      	ldr	r0, [r5, #28]
90008082:	6803      	ldr	r3, [r0, #0]
90008084:	1901      	adds	r1, r0, r4
	for(int i = 0; i < BULLET_COUNT; i++) {
90008086:	342c      	adds	r4, #44	; 0x2c
		view.hide_element(&view.bullets[i]);
90008088:	6c9b      	ldr	r3, [r3, #72]	; 0x48
9000808a:	4798      	blx	r3
	for(int i = 0; i < BULLET_COUNT; i++) {
9000808c:	42b4      	cmp	r4, r6
9000808e:	d1f7      	bne.n	90008080 <_ZN25screen_asteroidsPresenter12hide_bulletsEv+0xc>
	}
}
90008090:	bd70      	pop	{r4, r5, r6, pc}
90008092:	bf00      	nop

90008094 <_ZN25screen_asteroidsPresenter14set_invincibleEb>:

void screen_asteroidsPresenter::set_invincible(bool value)
{
	invincible = value;

	view.set_ship_invincible(invincible);
90008094:	69c3      	ldr	r3, [r0, #28]
	invincible = value;
90008096:	76c1      	strb	r1, [r0, #27]
	view.set_ship_invincible(invincible);
90008098:	681a      	ldr	r2, [r3, #0]
9000809a:	4618      	mov	r0, r3
9000809c:	6e13      	ldr	r3, [r2, #96]	; 0x60
9000809e:	4718      	bx	r3

900080a0 <_ZN25screen_asteroidsPresenter13is_invincibleEv>:
}

bool screen_asteroidsPresenter::is_invincible()
{
	return invincible;
}
900080a0:	7ec0      	ldrb	r0, [r0, #27]
900080a2:	4770      	bx	lr

900080a4 <_ZN25screen_asteroidsPresenterD0Ev>:
    virtual ~screen_asteroidsPresenter() {}
900080a4:	b510      	push	{r4, lr}
900080a6:	4604      	mov	r4, r0
900080a8:	2120      	movs	r1, #32
900080aa:	f021 fdb8 	bl	90029c1e <_ZdlPvj>
900080ae:	4620      	mov	r0, r4
900080b0:	bd10      	pop	{r4, pc}
900080b2:	bf00      	nop

900080b4 <_ZThn4_N25screen_asteroidsPresenterD0Ev>:
900080b4:	b500      	push	{lr}
900080b6:	3804      	subs	r0, #4
900080b8:	b083      	sub	sp, #12
900080ba:	2120      	movs	r1, #32
900080bc:	9001      	str	r0, [sp, #4]
900080be:	f021 fdae 	bl	90029c1e <_ZdlPvj>
900080c2:	9801      	ldr	r0, [sp, #4]
900080c4:	b003      	add	sp, #12
900080c6:	f85d fb04 	ldr.w	pc, [sp], #4
900080ca:	bf00      	nop

900080cc <_ZThn4_N25screen_asteroidsPresenter25is_asteroids_game_startedEv>:
900080cc:	7d40      	ldrb	r0, [r0, #21]
900080ce:	4770      	bx	lr

900080d0 <_ZThn4_N25screen_asteroidsPresenter20set_allowed_to_shootEb>:
900080d0:	7581      	strb	r1, [r0, #22]
900080d2:	4770      	bx	lr

900080d4 <_ZN25screen_asteroidsPresenter23check_bullet_collisionsEv>:
		}
	}
}

void screen_asteroidsPresenter::check_bullet_collisions()
{
900080d4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
900080d8:	f242 370c 	movw	r7, #8972	; 0x230c
	for(int i = 0; i < BULLET_COUNT; i++) {
900080dc:	f04f 0b00 	mov.w	fp, #0
        return visible;
900080e0:	f04f 082c 	mov.w	r8, #44	; 0x2c
{
900080e4:	4605      	mov	r5, r0
900080e6:	f8df a0bc 	ldr.w	sl, [pc, #188]	; 900081a4 <_ZN25screen_asteroidsPresenter23check_bullet_collisionsEv+0xd0>
900080ea:	e005      	b.n	900080f8 <_ZN25screen_asteroidsPresenter23check_bullet_collisionsEv+0x24>
	for(int i = 0; i < BULLET_COUNT; i++) {
900080ec:	f10b 0b01 	add.w	fp, fp, #1
900080f0:	372c      	adds	r7, #44	; 0x2c
900080f2:	f1bb 0f0a 	cmp.w	fp, #10
900080f6:	d053      	beq.n	900081a0 <_ZN25screen_asteroidsPresenter23check_bullet_collisionsEv+0xcc>
		if( !view.bullets[i].isVisible() )
900080f8:	69e8      	ldr	r0, [r5, #28]
900080fa:	f242 3331 	movw	r3, #9009	; 0x2331
900080fe:	fb08 020b 	mla	r2, r8, fp, r0
90008102:	5cd3      	ldrb	r3, [r2, r3]
90008104:	2b00      	cmp	r3, #0
90008106:	d0f1      	beq.n	900080ec <_ZN25screen_asteroidsPresenter23check_bullet_collisionsEv+0x18>
90008108:	f242 1654 	movw	r6, #8532	; 0x2154
			continue;

		for(int j = 0; j < ROCK_COUNT; j++) {
9000810c:	2400      	movs	r4, #0
9000810e:	f242 1979 	movw	r9, #8569	; 0x2179
90008112:	e02f      	b.n	90008174 <_ZN25screen_asteroidsPresenter23check_bullet_collisionsEv+0xa0>
	}
}

bool screen_asteroidsPresenter::elements_collide(Drawable *element1, Drawable *element2)
{
	if( element1->getX() > (element2->getX() + element2->getWidth()) || (element1->getX() + element1->getWidth()) < element2->getX()) {
90008114:	f9b1 2004 	ldrsh.w	r2, [r1, #4]
90008118:	f9b1 3008 	ldrsh.w	r3, [r1, #8]
9000811c:	f9bc e004 	ldrsh.w	lr, [ip, #4]
90008120:	4413      	add	r3, r2
90008122:	459e      	cmp	lr, r3
90008124:	dc21      	bgt.n	9000816a <_ZN25screen_asteroidsPresenter23check_bullet_collisionsEv+0x96>
90008126:	f9bc 3008 	ldrsh.w	r3, [ip, #8]
9000812a:	4473      	add	r3, lr
9000812c:	429a      	cmp	r2, r3
9000812e:	dc1c      	bgt.n	9000816a <_ZN25screen_asteroidsPresenter23check_bullet_collisionsEv+0x96>
		return false;
	}

	if( element1->getY() > (element2->getY() + element2->getHeight()) || (element1->getY() + element1->getHeight()) < element2->getY()) {
90008130:	f9b1 2006 	ldrsh.w	r2, [r1, #6]
90008134:	f9b1 300a 	ldrsh.w	r3, [r1, #10]
90008138:	f9bc e006 	ldrsh.w	lr, [ip, #6]
9000813c:	4413      	add	r3, r2
9000813e:	459e      	cmp	lr, r3
90008140:	dc13      	bgt.n	9000816a <_ZN25screen_asteroidsPresenter23check_bullet_collisionsEv+0x96>
90008142:	f9bc 300a 	ldrsh.w	r3, [ip, #10]
90008146:	4473      	add	r3, lr
90008148:	429a      	cmp	r2, r3
9000814a:	dc0e      	bgt.n	9000816a <_ZN25screen_asteroidsPresenter23check_bullet_collisionsEv+0x96>
				view.move_rock_offscreen(&view.rocks[j]);
9000814c:	6803      	ldr	r3, [r0, #0]
9000814e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
90008150:	4798      	blx	r3
				view.move_bullet_offscreen(&view.bullets[i]);
90008152:	69e8      	ldr	r0, [r5, #28]
90008154:	6803      	ldr	r3, [r0, #0]
90008156:	19c1      	adds	r1, r0, r7
90008158:	6f1b      	ldr	r3, [r3, #112]	; 0x70
9000815a:	4798      	blx	r3
				score++;
9000815c:	6929      	ldr	r1, [r5, #16]
				view.update_score(score);
9000815e:	69e8      	ldr	r0, [r5, #28]
				score++;
90008160:	3101      	adds	r1, #1
				view.update_score(score);
90008162:	6803      	ldr	r3, [r0, #0]
				score++;
90008164:	6129      	str	r1, [r5, #16]
				view.update_score(score);
90008166:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90008168:	4798      	blx	r3
		for(int j = 0; j < ROCK_COUNT; j++) {
9000816a:	3401      	adds	r4, #1
9000816c:	362c      	adds	r6, #44	; 0x2c
9000816e:	2c0a      	cmp	r4, #10
90008170:	d0bc      	beq.n	900080ec <_ZN25screen_asteroidsPresenter23check_bullet_collisionsEv+0x18>
			if( !view.rocks[j].isVisible() )
90008172:	69e8      	ldr	r0, [r5, #28]
90008174:	fb08 0304 	mla	r3, r8, r4, r0
90008178:	f813 3009 	ldrb.w	r3, [r3, r9]
9000817c:	2b00      	cmp	r3, #0
9000817e:	d0f4      	beq.n	9000816a <_ZN25screen_asteroidsPresenter23check_bullet_collisionsEv+0x96>
			if(elements_collide(&view.bullets[i], &view.rocks[j])) {
90008180:	682b      	ldr	r3, [r5, #0]
90008182:	eb00 0c07 	add.w	ip, r0, r7
90008186:	1981      	adds	r1, r0, r6
90008188:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9000818a:	4553      	cmp	r3, sl
9000818c:	d0c2      	beq.n	90008114 <_ZN25screen_asteroidsPresenter23check_bullet_collisionsEv+0x40>
9000818e:	460a      	mov	r2, r1
90008190:	4628      	mov	r0, r5
90008192:	4661      	mov	r1, ip
90008194:	4798      	blx	r3
90008196:	2800      	cmp	r0, #0
90008198:	d0e7      	beq.n	9000816a <_ZN25screen_asteroidsPresenter23check_bullet_collisionsEv+0x96>
				view.move_rock_offscreen(&view.rocks[j]);
9000819a:	69e8      	ldr	r0, [r5, #28]
9000819c:	1981      	adds	r1, r0, r6
9000819e:	e7d5      	b.n	9000814c <_ZN25screen_asteroidsPresenter23check_bullet_collisionsEv+0x78>
}
900081a0:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
900081a4:	900081b1 	.word	0x900081b1

900081a8 <_ZThn4_N25screen_asteroidsPresenter23check_bullet_collisionsEv>:
    virtual void hide_bullets();

    virtual Drawable* get_next_invisible_bullet();

    virtual void check_bullet_collisions();
900081a8:	f1a0 0004 	sub.w	r0, r0, #4
900081ac:	f7ff bf92 	b.w	900080d4 <_ZN25screen_asteroidsPresenter23check_bullet_collisionsEv>

900081b0 <_ZN25screen_asteroidsPresenter16elements_collideEPN8touchgfx8DrawableES2_>:
	if( element1->getX() > (element2->getX() + element2->getWidth()) || (element1->getX() + element1->getWidth()) < element2->getX()) {
900081b0:	f9b2 0004 	ldrsh.w	r0, [r2, #4]
900081b4:	f9b2 3008 	ldrsh.w	r3, [r2, #8]
900081b8:	f9b1 c004 	ldrsh.w	ip, [r1, #4]
900081bc:	4403      	add	r3, r0
900081be:	459c      	cmp	ip, r3
900081c0:	dc15      	bgt.n	900081ee <_ZN25screen_asteroidsPresenter16elements_collideEPN8touchgfx8DrawableES2_+0x3e>
900081c2:	f9b1 3008 	ldrsh.w	r3, [r1, #8]
900081c6:	4463      	add	r3, ip
900081c8:	4298      	cmp	r0, r3
900081ca:	dc10      	bgt.n	900081ee <_ZN25screen_asteroidsPresenter16elements_collideEPN8touchgfx8DrawableES2_+0x3e>
	if( element1->getY() > (element2->getY() + element2->getHeight()) || (element1->getY() + element1->getHeight()) < element2->getY()) {
900081cc:	f9b2 0006 	ldrsh.w	r0, [r2, #6]
900081d0:	f9b2 300a 	ldrsh.w	r3, [r2, #10]
900081d4:	f9b1 2006 	ldrsh.w	r2, [r1, #6]
900081d8:	4403      	add	r3, r0
900081da:	429a      	cmp	r2, r3
900081dc:	dc07      	bgt.n	900081ee <_ZN25screen_asteroidsPresenter16elements_collideEPN8touchgfx8DrawableES2_+0x3e>
900081de:	f9b1 300a 	ldrsh.w	r3, [r1, #10]
900081e2:	4413      	add	r3, r2
900081e4:	4298      	cmp	r0, r3
900081e6:	bfcc      	ite	gt
900081e8:	2000      	movgt	r0, #0
900081ea:	2001      	movle	r0, #1
900081ec:	4770      	bx	lr
		return false;
900081ee:	2000      	movs	r0, #0
	}

	return true;
}
900081f0:	4770      	bx	lr
900081f2:	bf00      	nop

900081f4 <_ZThn4_N25screen_asteroidsPresenter14set_invincibleEb>:
900081f4:	6983      	ldr	r3, [r0, #24]
900081f6:	75c1      	strb	r1, [r0, #23]
900081f8:	681a      	ldr	r2, [r3, #0]
900081fa:	4618      	mov	r0, r3
900081fc:	6e13      	ldr	r3, [r2, #96]	; 0x60
900081fe:	4718      	bx	r3

90008200 <_ZN25screen_asteroidsPresenter12shoot_bulletEv>:
	if( !is_allowed_to_shoot() )
90008200:	6803      	ldr	r3, [r0, #0]
90008202:	4a4a      	ldr	r2, [pc, #296]	; (9000832c <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x12c>)
90008204:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90008206:	4293      	cmp	r3, r2
{
90008208:	b570      	push	{r4, r5, r6, lr}
9000820a:	4604      	mov	r4, r0
9000820c:	d14d      	bne.n	900082aa <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0xaa>
	return allowed_to_shoot;
9000820e:	7e80      	ldrb	r0, [r0, #26]
	if( !is_allowed_to_shoot() )
90008210:	b150      	cbz	r0, 90008228 <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x28>
	Drawable *ship = view.get_ship_pointer();
90008212:	69e0      	ldr	r0, [r4, #28]
90008214:	6803      	ldr	r3, [r0, #0]
90008216:	6d9b      	ldr	r3, [r3, #88]	; 0x58
90008218:	4798      	blx	r3
	if( view.bullet_button_pressed() )
9000821a:	69e3      	ldr	r3, [r4, #28]
	Drawable *ship = view.get_ship_pointer();
9000821c:	4605      	mov	r5, r0
	if( view.bullet_button_pressed() )
9000821e:	681a      	ldr	r2, [r3, #0]
90008220:	4618      	mov	r0, r3
90008222:	6ed3      	ldr	r3, [r2, #108]	; 0x6c
90008224:	4798      	blx	r3
90008226:	b900      	cbnz	r0, 9000822a <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x2a>
}
90008228:	bd70      	pop	{r4, r5, r6, pc}
		model->start_bullet_timer();
9000822a:	68a0      	ldr	r0, [r4, #8]
9000822c:	f7ff fde2 	bl	90007df4 <_ZN5Model18start_bullet_timerEv>
		set_allowed_to_shoot(false);
90008230:	6823      	ldr	r3, [r4, #0]
90008232:	493f      	ldr	r1, [pc, #252]	; (90008330 <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x130>)
90008234:	6b1a      	ldr	r2, [r3, #48]	; 0x30
90008236:	428a      	cmp	r2, r1
90008238:	d15a      	bne.n	900082f0 <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0xf0>
	allowed_to_shoot = value;
9000823a:	2200      	movs	r2, #0
9000823c:	76a2      	strb	r2, [r4, #26]
		Drawable *new_bullet = get_next_invisible_bullet();
9000823e:	6d9b      	ldr	r3, [r3, #88]	; 0x58
90008240:	4a3c      	ldr	r2, [pc, #240]	; (90008334 <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x134>)
90008242:	4293      	cmp	r3, r2
90008244:	d133      	bne.n	900082ae <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0xae>
		if( !view.bullets[i].isVisible() )
90008246:	69e2      	ldr	r2, [r4, #28]
90008248:	f502 5300 	add.w	r3, r2, #8192	; 0x2000
9000824c:	f893 1331 	ldrb.w	r1, [r3, #817]	; 0x331
90008250:	b321      	cbz	r1, 9000829c <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x9c>
90008252:	f893 135d 	ldrb.w	r1, [r3, #861]	; 0x35d
90008256:	2900      	cmp	r1, #0
90008258:	d057      	beq.n	9000830a <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x10a>
9000825a:	f893 1389 	ldrb.w	r1, [r3, #905]	; 0x389
9000825e:	2900      	cmp	r1, #0
90008260:	d055      	beq.n	9000830e <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x10e>
90008262:	f893 13b5 	ldrb.w	r1, [r3, #949]	; 0x3b5
90008266:	2900      	cmp	r1, #0
90008268:	d053      	beq.n	90008312 <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x112>
9000826a:	f893 13e1 	ldrb.w	r1, [r3, #993]	; 0x3e1
9000826e:	2900      	cmp	r1, #0
90008270:	d051      	beq.n	90008316 <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x116>
90008272:	f893 140d 	ldrb.w	r1, [r3, #1037]	; 0x40d
90008276:	2900      	cmp	r1, #0
90008278:	d04f      	beq.n	9000831a <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x11a>
9000827a:	f893 1439 	ldrb.w	r1, [r3, #1081]	; 0x439
9000827e:	2900      	cmp	r1, #0
90008280:	d04d      	beq.n	9000831e <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x11e>
90008282:	f893 1465 	ldrb.w	r1, [r3, #1125]	; 0x465
90008286:	2900      	cmp	r1, #0
90008288:	d04b      	beq.n	90008322 <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x122>
9000828a:	f893 1491 	ldrb.w	r1, [r3, #1169]	; 0x491
9000828e:	2900      	cmp	r1, #0
90008290:	d049      	beq.n	90008326 <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x126>
90008292:	f893 34bd 	ldrb.w	r3, [r3, #1213]	; 0x4bd
90008296:	2b00      	cmp	r3, #0
90008298:	d1c6      	bne.n	90008228 <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x28>
	for(int i = 0; i < BULLET_COUNT; i++) {
9000829a:	2109      	movs	r1, #9
			return &view.bullets[i];
9000829c:	232c      	movs	r3, #44	; 0x2c
9000829e:	f242 340c 	movw	r4, #8972	; 0x230c
900082a2:	fb03 2201 	mla	r2, r3, r1, r2
900082a6:	4414      	add	r4, r2
		if( new_bullet != NULL )
900082a8:	e006      	b.n	900082b8 <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0xb8>
	if( !is_allowed_to_shoot() )
900082aa:	4798      	blx	r3
900082ac:	e7b0      	b.n	90008210 <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x10>
		Drawable *new_bullet = get_next_invisible_bullet();
900082ae:	4620      	mov	r0, r4
900082b0:	4798      	blx	r3
		if( new_bullet != NULL )
900082b2:	4604      	mov	r4, r0
900082b4:	2800      	cmp	r0, #0
900082b6:	d0b7      	beq.n	90008228 <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x28>
        visible = vis;
900082b8:	2301      	movs	r3, #1
			new_bullet->setX(ship->getX() + (ship->getWidth()/2) - 1);
900082ba:	88a9      	ldrh	r1, [r5, #4]
900082bc:	6822      	ldr	r2, [r4, #0]
900082be:	f884 3025 	strb.w	r3, [r4, #37]	; 0x25
900082c2:	3901      	subs	r1, #1
900082c4:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
900082c8:	6b16      	ldr	r6, [r2, #48]	; 0x30
900082ca:	2b00      	cmp	r3, #0
900082cc:	bfb8      	it	lt
900082ce:	3301      	addlt	r3, #1
900082d0:	eb01 0163 	add.w	r1, r1, r3, asr #1
900082d4:	4b18      	ldr	r3, [pc, #96]	; (90008338 <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x138>)
900082d6:	429e      	cmp	r6, r3
900082d8:	b209      	sxth	r1, r1
900082da:	d112      	bne.n	90008302 <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x102>
        rect.x = x;
900082dc:	80a1      	strh	r1, [r4, #4]
			new_bullet->setY(ship->getY() + 1);
900082de:	6b53      	ldr	r3, [r2, #52]	; 0x34
900082e0:	88e9      	ldrh	r1, [r5, #6]
900082e2:	4a16      	ldr	r2, [pc, #88]	; (9000833c <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x13c>)
900082e4:	3101      	adds	r1, #1
900082e6:	4293      	cmp	r3, r2
900082e8:	b209      	sxth	r1, r1
900082ea:	d106      	bne.n	900082fa <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0xfa>
        rect.y = y;
900082ec:	80e1      	strh	r1, [r4, #6]
}
900082ee:	bd70      	pop	{r4, r5, r6, pc}
		set_allowed_to_shoot(false);
900082f0:	2100      	movs	r1, #0
900082f2:	4620      	mov	r0, r4
900082f4:	4790      	blx	r2
		Drawable *new_bullet = get_next_invisible_bullet();
900082f6:	6823      	ldr	r3, [r4, #0]
900082f8:	e7a1      	b.n	9000823e <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x3e>
			new_bullet->setY(ship->getY() + 1);
900082fa:	4620      	mov	r0, r4
}
900082fc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			new_bullet->setY(ship->getY() + 1);
90008300:	4718      	bx	r3
			new_bullet->setX(ship->getX() + (ship->getWidth()/2) - 1);
90008302:	4620      	mov	r0, r4
90008304:	47b0      	blx	r6
			new_bullet->setY(ship->getY() + 1);
90008306:	6822      	ldr	r2, [r4, #0]
90008308:	e7e9      	b.n	900082de <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0xde>
	for(int i = 0; i < BULLET_COUNT; i++) {
9000830a:	2101      	movs	r1, #1
9000830c:	e7c6      	b.n	9000829c <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x9c>
9000830e:	2102      	movs	r1, #2
90008310:	e7c4      	b.n	9000829c <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x9c>
90008312:	2103      	movs	r1, #3
90008314:	e7c2      	b.n	9000829c <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x9c>
90008316:	2104      	movs	r1, #4
90008318:	e7c0      	b.n	9000829c <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x9c>
9000831a:	2105      	movs	r1, #5
9000831c:	e7be      	b.n	9000829c <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x9c>
9000831e:	2106      	movs	r1, #6
90008320:	e7bc      	b.n	9000829c <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x9c>
90008322:	2107      	movs	r1, #7
90008324:	e7ba      	b.n	9000829c <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x9c>
90008326:	2108      	movs	r1, #8
90008328:	e7b8      	b.n	9000829c <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x9c>
9000832a:	bf00      	nop
9000832c:	9000804d 	.word	0x9000804d
90008330:	90008051 	.word	0x90008051
90008334:	90007f5d 	.word	0x90007f5d
90008338:	9000452d 	.word	0x9000452d
9000833c:	90004531 	.word	0x90004531

90008340 <_ZN25screen_asteroidsPresenter9init_gameEv>:
{
90008340:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90008344:	4604      	mov	r4, r0
	view.hide_endgame_screen();
90008346:	69c0      	ldr	r0, [r0, #28]
	for(int i = 0; i < BULLET_COUNT; i++ ) {
90008348:	2500      	movs	r5, #0
	view.move_ship(225, 227);
9000834a:	f242 360c 	movw	r6, #8972	; 0x230c
	view.hide_endgame_screen();
9000834e:	6803      	ldr	r3, [r0, #0]
        visible = vis;
90008350:	f04f 082c 	mov.w	r8, #44	; 0x2c
		view.move_bullet(&view.bullets[i], BULLET_OFFSCREEN_X, BULLET_OFFSCREEN_Y);
90008354:	462f      	mov	r7, r5
	view.hide_endgame_screen();
90008356:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90008358:	4798      	blx	r3
	view.move_ship(225, 227);
9000835a:	69e0      	ldr	r0, [r4, #28]
9000835c:	22e3      	movs	r2, #227	; 0xe3
9000835e:	21e1      	movs	r1, #225	; 0xe1
90008360:	6803      	ldr	r3, [r0, #0]
90008362:	6d1b      	ldr	r3, [r3, #80]	; 0x50
90008364:	4798      	blx	r3
		view.move_bullet(&view.bullets[i], BULLET_OFFSCREEN_X, BULLET_OFFSCREEN_Y);
90008366:	69e0      	ldr	r0, [r4, #28]
90008368:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
9000836c:	2200      	movs	r2, #0
9000836e:	f8d0 c000 	ldr.w	ip, [r0]
90008372:	1981      	adds	r1, r0, r6
	for(int i = 0; i < BULLET_COUNT; i++ ) {
90008374:	362c      	adds	r6, #44	; 0x2c
		view.move_bullet(&view.bullets[i], BULLET_OFFSCREEN_X, BULLET_OFFSCREEN_Y);
90008376:	f8dc 9074 	ldr.w	r9, [ip, #116]	; 0x74
9000837a:	47c8      	blx	r9
		view.bullets[i].setVisible(false);
9000837c:	69e3      	ldr	r3, [r4, #28]
        return parent;
9000837e:	f242 3120 	movw	r1, #8992	; 0x2320
        visible = vis;
90008382:	f242 3231 	movw	r2, #9009	; 0x2331
90008386:	fb08 3305 	mla	r3, r8, r5, r3
	for(int i = 0; i < BULLET_COUNT; i++ ) {
9000838a:	3501      	adds	r5, #1
        return parent;
9000838c:	5858      	ldr	r0, [r3, r1]
        visible = vis;
9000838e:	549f      	strb	r7, [r3, r2]
		view.bullets[i].getParent()->invalidateContent();
90008390:	6803      	ldr	r3, [r0, #0]
90008392:	699b      	ldr	r3, [r3, #24]
90008394:	4798      	blx	r3
	for(int i = 0; i < BULLET_COUNT; i++ ) {
90008396:	2d0a      	cmp	r5, #10
90008398:	d1e5      	bne.n	90008366 <_ZN25screen_asteroidsPresenter9init_gameEv+0x26>
	for(int i = 0; i < ROCK_COUNT; i++ ) {
9000839a:	2500      	movs	r5, #0
9000839c:	f242 1654 	movw	r6, #8532	; 0x2154
900083a0:	f04f 092c 	mov.w	r9, #44	; 0x2c
900083a4:	f242 1879 	movw	r8, #8569	; 0x2179
		view.move_rock(&view.rocks[i], ROCK_OFFSCREEN_X, ROCK_OFFSCREEN_Y);
900083a8:	462f      	mov	r7, r5
900083aa:	69e0      	ldr	r0, [r4, #28]
900083ac:	2300      	movs	r3, #0
900083ae:	f8d0 c000 	ldr.w	ip, [r0]
900083b2:	1981      	adds	r1, r0, r6
900083b4:	461a      	mov	r2, r3
	for(int i = 0; i < ROCK_COUNT; i++ ) {
900083b6:	362c      	adds	r6, #44	; 0x2c
		view.move_rock(&view.rocks[i], ROCK_OFFSCREEN_X, ROCK_OFFSCREEN_Y);
900083b8:	f8dc a064 	ldr.w	sl, [ip, #100]	; 0x64
900083bc:	47d0      	blx	sl
		view.rocks[i].setVisible(false);
900083be:	69e3      	ldr	r3, [r4, #28]
        return parent;
900083c0:	f242 1268 	movw	r2, #8552	; 0x2168
        visible = vis;
900083c4:	fb09 3305 	mla	r3, r9, r5, r3
	for(int i = 0; i < ROCK_COUNT; i++ ) {
900083c8:	3501      	adds	r5, #1
        return parent;
900083ca:	5898      	ldr	r0, [r3, r2]
        visible = vis;
900083cc:	f803 7008 	strb.w	r7, [r3, r8]
		view.rocks[i].getParent()->invalidateContent();
900083d0:	6803      	ldr	r3, [r0, #0]
900083d2:	699b      	ldr	r3, [r3, #24]
900083d4:	4798      	blx	r3
	for(int i = 0; i < ROCK_COUNT; i++ ) {
900083d6:	2d0a      	cmp	r5, #10
900083d8:	d1e7      	bne.n	900083aa <_ZN25screen_asteroidsPresenter9init_gameEv+0x6a>
900083da:	f242 1554 	movw	r5, #8532	; 0x2154
	for(int i = 0; i < ROCK_COUNT; i++) {
900083de:	f242 360c 	movw	r6, #8972	; 0x230c
		view.new_rock_position(&view.rocks[i]);
900083e2:	69e0      	ldr	r0, [r4, #28]
900083e4:	6803      	ldr	r3, [r0, #0]
900083e6:	1941      	adds	r1, r0, r5
	for(int i = 0; i < ROCK_COUNT; i++) {
900083e8:	352c      	adds	r5, #44	; 0x2c
		view.new_rock_position(&view.rocks[i]);
900083ea:	6e9b      	ldr	r3, [r3, #104]	; 0x68
900083ec:	4798      	blx	r3
	for(int i = 0; i < ROCK_COUNT; i++) {
900083ee:	42b5      	cmp	r5, r6
900083f0:	d1f7      	bne.n	900083e2 <_ZN25screen_asteroidsPresenter9init_gameEv+0xa2>
	view.update_score(score);
900083f2:	69e0      	ldr	r0, [r4, #28]
	score = 0;
900083f4:	2500      	movs	r5, #0
	view.update_score(score);
900083f6:	6803      	ldr	r3, [r0, #0]
900083f8:	4629      	mov	r1, r5
	score = 0;
900083fa:	6125      	str	r5, [r4, #16]
	view.update_score(score);
900083fc:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
900083fe:	4798      	blx	r3
	view.update_hearts(lives);
90008400:	69e0      	ldr	r0, [r4, #28]
	lives = 3;
90008402:	2103      	movs	r1, #3
90008404:	7321      	strb	r1, [r4, #12]
	view.update_hearts(lives);
90008406:	6803      	ldr	r3, [r0, #0]
90008408:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9000840a:	4798      	blx	r3
	set_invincible(false);
9000840c:	6823      	ldr	r3, [r4, #0]
9000840e:	4a0a      	ldr	r2, [pc, #40]	; (90008438 <_ZN25screen_asteroidsPresenter9init_gameEv+0xf8>)
90008410:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90008412:	4293      	cmp	r3, r2
90008414:	d109      	bne.n	9000842a <_ZN25screen_asteroidsPresenter9init_gameEv+0xea>
	view.set_ship_invincible(invincible);
90008416:	69e0      	ldr	r0, [r4, #28]
90008418:	4629      	mov	r1, r5
	invincible = value;
9000841a:	76e5      	strb	r5, [r4, #27]
	view.set_ship_invincible(invincible);
9000841c:	6803      	ldr	r3, [r0, #0]
9000841e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
90008420:	4798      	blx	r3
	game_started = true;
90008422:	2301      	movs	r3, #1
90008424:	7663      	strb	r3, [r4, #25]
}
90008426:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	set_invincible(false);
9000842a:	4629      	mov	r1, r5
9000842c:	4620      	mov	r0, r4
9000842e:	4798      	blx	r3
	game_started = true;
90008430:	2301      	movs	r3, #1
90008432:	7663      	strb	r3, [r4, #25]
}
90008434:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90008438:	90008095 	.word	0x90008095

9000843c <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv>:
{
9000843c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90008440:	4604      	mov	r4, r0
	Drawable *ship = view.get_ship_pointer();
90008442:	69c0      	ldr	r0, [r0, #28]
90008444:	f242 1a54 	movw	sl, #8532	; 0x2154
	for(int i = 0; i < ROCK_COUNT; i++) {
90008448:	2500      	movs	r5, #0
	Drawable *ship = view.get_ship_pointer();
9000844a:	6803      	ldr	r3, [r0, #0]
9000844c:	4f3f      	ldr	r7, [pc, #252]	; (9000854c <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv+0x110>)
9000844e:	6d9b      	ldr	r3, [r3, #88]	; 0x58
90008450:	4798      	blx	r3
90008452:	f8df 8100 	ldr.w	r8, [pc, #256]	; 90008554 <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv+0x118>
90008456:	f8df 9100 	ldr.w	r9, [pc, #256]	; 90008558 <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv+0x11c>
9000845a:	4606      	mov	r6, r0
        return visible;
9000845c:	69e3      	ldr	r3, [r4, #28]
9000845e:	212c      	movs	r1, #44	; 0x2c
90008460:	f242 1279 	movw	r2, #8569	; 0x2179
90008464:	fb01 3305 	mla	r3, r1, r5, r3
		if( !view.rocks[i].isVisible() )
90008468:	5c9b      	ldrb	r3, [r3, r2]
9000846a:	2b00      	cmp	r3, #0
9000846c:	d045      	beq.n	900084fa <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv+0xbe>
		if( is_invincible() )
9000846e:	6823      	ldr	r3, [r4, #0]
90008470:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90008472:	42bb      	cmp	r3, r7
90008474:	d148      	bne.n	90008508 <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv+0xcc>
	return invincible;
90008476:	7ee0      	ldrb	r0, [r4, #27]
		if( is_invincible() )
90008478:	2800      	cmp	r0, #0
9000847a:	d13e      	bne.n	900084fa <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv+0xbe>
		if( elements_collide(ship, &view.rocks[i]) ) {
9000847c:	6823      	ldr	r3, [r4, #0]
9000847e:	69e0      	ldr	r0, [r4, #28]
90008480:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90008482:	eb00 020a 	add.w	r2, r0, sl
90008486:	4543      	cmp	r3, r8
90008488:	d141      	bne.n	9000850e <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv+0xd2>
	if( element1->getX() > (element2->getX() + element2->getWidth()) || (element1->getX() + element1->getWidth()) < element2->getX()) {
9000848a:	f9b2 1004 	ldrsh.w	r1, [r2, #4]
9000848e:	f9b2 3008 	ldrsh.w	r3, [r2, #8]
90008492:	f9b6 c004 	ldrsh.w	ip, [r6, #4]
90008496:	440b      	add	r3, r1
90008498:	459c      	cmp	ip, r3
9000849a:	dc2e      	bgt.n	900084fa <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv+0xbe>
9000849c:	f9b6 3008 	ldrsh.w	r3, [r6, #8]
900084a0:	4463      	add	r3, ip
900084a2:	4299      	cmp	r1, r3
900084a4:	dc29      	bgt.n	900084fa <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv+0xbe>
	if( element1->getY() > (element2->getY() + element2->getHeight()) || (element1->getY() + element1->getHeight()) < element2->getY()) {
900084a6:	f9b2 1006 	ldrsh.w	r1, [r2, #6]
900084aa:	f9b2 300a 	ldrsh.w	r3, [r2, #10]
900084ae:	f9b6 2006 	ldrsh.w	r2, [r6, #6]
900084b2:	440b      	add	r3, r1
900084b4:	429a      	cmp	r2, r3
900084b6:	dc20      	bgt.n	900084fa <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv+0xbe>
900084b8:	f9b6 300a 	ldrsh.w	r3, [r6, #10]
900084bc:	4413      	add	r3, r2
900084be:	4299      	cmp	r1, r3
900084c0:	dc1b      	bgt.n	900084fa <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv+0xbe>
			lives--;
900084c2:	7b21      	ldrb	r1, [r4, #12]
900084c4:	3901      	subs	r1, #1
900084c6:	b2c9      	uxtb	r1, r1
900084c8:	7321      	strb	r1, [r4, #12]
			view.update_hearts(lives);
900084ca:	6803      	ldr	r3, [r0, #0]
900084cc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
900084ce:	4798      	blx	r3
			view.move_rock_offscreen(&view.rocks[i]);
900084d0:	69e0      	ldr	r0, [r4, #28]
900084d2:	6803      	ldr	r3, [r0, #0]
900084d4:	eb00 010a 	add.w	r1, r0, sl
900084d8:	6d5b      	ldr	r3, [r3, #84]	; 0x54
900084da:	4798      	blx	r3
			if( lives == 0 ) {
900084dc:	7b23      	ldrb	r3, [r4, #12]
900084de:	b303      	cbz	r3, 90008522 <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv+0xe6>
			model->start_invincibility_timer();
900084e0:	68a0      	ldr	r0, [r4, #8]
900084e2:	f7ff fc8f 	bl	90007e04 <_ZN5Model25start_invincibility_timerEv>
			set_invincible(true);
900084e6:	6823      	ldr	r3, [r4, #0]
	invincible = value;
900084e8:	2101      	movs	r1, #1
			set_invincible(true);
900084ea:	6b9b      	ldr	r3, [r3, #56]	; 0x38
900084ec:	454b      	cmp	r3, r9
900084ee:	d115      	bne.n	9000851c <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv+0xe0>
	view.set_ship_invincible(invincible);
900084f0:	69e0      	ldr	r0, [r4, #28]
	invincible = value;
900084f2:	76e1      	strb	r1, [r4, #27]
	view.set_ship_invincible(invincible);
900084f4:	6803      	ldr	r3, [r0, #0]
900084f6:	6e1b      	ldr	r3, [r3, #96]	; 0x60
900084f8:	4798      	blx	r3
	for(int i = 0; i < ROCK_COUNT; i++) {
900084fa:	3501      	adds	r5, #1
900084fc:	f10a 0a2c 	add.w	sl, sl, #44	; 0x2c
90008500:	2d0a      	cmp	r5, #10
90008502:	d1ab      	bne.n	9000845c <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv+0x20>
}
90008504:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		if( is_invincible() )
90008508:	4620      	mov	r0, r4
9000850a:	4798      	blx	r3
9000850c:	e7b4      	b.n	90008478 <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv+0x3c>
		if( elements_collide(ship, &view.rocks[i]) ) {
9000850e:	4631      	mov	r1, r6
90008510:	4620      	mov	r0, r4
90008512:	4798      	blx	r3
90008514:	2800      	cmp	r0, #0
90008516:	d0f0      	beq.n	900084fa <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv+0xbe>
			view.update_hearts(lives);
90008518:	69e0      	ldr	r0, [r4, #28]
9000851a:	e7d2      	b.n	900084c2 <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv+0x86>
			set_invincible(true);
9000851c:	4620      	mov	r0, r4
9000851e:	4798      	blx	r3
90008520:	e7eb      	b.n	900084fa <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv+0xbe>
				game_over();
90008522:	6822      	ldr	r2, [r4, #0]
90008524:	490a      	ldr	r1, [pc, #40]	; (90008550 <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv+0x114>)
90008526:	6a52      	ldr	r2, [r2, #36]	; 0x24
90008528:	428a      	cmp	r2, r1
9000852a:	d10b      	bne.n	90008544 <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv+0x108>
	view.show_endgame_screen();
9000852c:	69e0      	ldr	r0, [r4, #28]
	game_started = false;
9000852e:	7663      	strb	r3, [r4, #25]
	view.show_endgame_screen();
90008530:	6803      	ldr	r3, [r0, #0]
	if( score > high_score )
90008532:	e9d4 2104 	ldrd	r2, r1, [r4, #16]
	view.show_endgame_screen();
90008536:	6c1b      	ldr	r3, [r3, #64]	; 0x40
	if( score > high_score )
90008538:	428a      	cmp	r2, r1
		high_score = score;
9000853a:	bf88      	it	hi
9000853c:	6162      	strhi	r2, [r4, #20]
}
9000853e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
	view.show_endgame_screen();
90008542:	4718      	bx	r3
				game_over();
90008544:	4620      	mov	r0, r4
}
90008546:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
				game_over();
9000854a:	4710      	bx	r2
9000854c:	900080a1 	.word	0x900080a1
90008550:	90007e2d 	.word	0x90007e2d
90008554:	900081b1 	.word	0x900081b1
90008558:	90008095 	.word	0x90008095

9000855c <_ZThn4_N25screen_asteroidsPresenter21check_ship_collisionsEv>:
    virtual void check_ship_collisions();
9000855c:	f1a0 0004 	sub.w	r0, r0, #4
90008560:	f7ff bf6c 	b.w	9000843c <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv>

90008564 <_ZN25screen_asteroidsPresenterC1ER20screen_asteroidsView>:
    : view(v)
90008564:	4a09      	ldr	r2, [pc, #36]	; (9000858c <_ZN25screen_asteroidsPresenterC1ER20screen_asteroidsView+0x28>)
90008566:	61c1      	str	r1, [r0, #28]
90008568:	4909      	ldr	r1, [pc, #36]	; (90008590 <_ZN25screen_asteroidsPresenterC1ER20screen_asteroidsView+0x2c>)
screen_asteroidsPresenter::screen_asteroidsPresenter(screen_asteroidsView& v)
9000856a:	b410      	push	{r4}
    ModelListener() : model(0) {}
9000856c:	2400      	movs	r4, #0
    : view(v)
9000856e:	6181      	str	r1, [r0, #24]
90008570:	2103      	movs	r1, #3
90008572:	6084      	str	r4, [r0, #8]
90008574:	7301      	strb	r1, [r0, #12]
90008576:	e9c0 4404 	strd	r4, r4, [r0, #16]
9000857a:	f102 0408 	add.w	r4, r2, #8
9000857e:	3270      	adds	r2, #112	; 0x70
90008580:	e9c0 4200 	strd	r4, r2, [r0]
}
90008584:	f85d 4b04 	ldr.w	r4, [sp], #4
90008588:	4770      	bx	lr
9000858a:	bf00      	nop
9000858c:	9002db5c 	.word	0x9002db5c
90008590:	00010004 	.word	0x00010004

90008594 <_ZN20screen_asteroidsView14tearDownScreenEv>:
}

void screen_asteroidsView::tearDownScreen()
{
    screen_asteroidsViewBase::tearDownScreen();
}
90008594:	4770      	bx	lr
90008596:	bf00      	nop

90008598 <_ZN20screen_asteroidsView21resume_asteroids_taskEv>:

void screen_asteroidsView::resume_asteroids_task()
{
	presenter->resume_asteroids_task();
90008598:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
9000859a:	6803      	ldr	r3, [r0, #0]
9000859c:	691b      	ldr	r3, [r3, #16]
9000859e:	4718      	bx	r3

900085a0 <_ZN20screen_asteroidsView22suspend_asteroids_taskEv>:
}

void screen_asteroidsView::suspend_asteroids_task()
{
	presenter->suspend_asteroids_task();
900085a0:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
900085a2:	6803      	ldr	r3, [r0, #0]
900085a4:	695b      	ldr	r3, [r3, #20]
900085a6:	4718      	bx	r3

900085a8 <_ZN20screen_asteroidsView20start_asteroids_gameEv>:
}

void screen_asteroidsView::start_asteroids_game()
{
	presenter->start_asteroids_game();
900085a8:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
900085aa:	6803      	ldr	r3, [r0, #0]
900085ac:	69db      	ldr	r3, [r3, #28]
900085ae:	4718      	bx	r3

900085b0 <_ZN20screen_asteroidsView19hide_endgame_screenEv>:
	container_controls.getParent()->invalidateContent();
	container_game_over.getParent()->invalidateContent();
}

void screen_asteroidsView::hide_endgame_screen()
{
900085b0:	b510      	push	{r4, lr}
        visible = vis;
900085b2:	2301      	movs	r3, #1
900085b4:	4604      	mov	r4, r0
        return parent;
900085b6:	f8d0 0264 	ldr.w	r0, [r0, #612]	; 0x264
        visible = vis;
900085ba:	2200      	movs	r2, #0
900085bc:	f884 3275 	strb.w	r3, [r4, #629]	; 0x275
	container_game_over.setVisible(false);
	container_controls.setVisible(true);
	container_controls.getParent()->invalidateContent();
900085c0:	6803      	ldr	r3, [r0, #0]
900085c2:	f884 23f9 	strb.w	r2, [r4, #1017]	; 0x3f9
900085c6:	699b      	ldr	r3, [r3, #24]
900085c8:	4798      	blx	r3
        return parent;
900085ca:	f8d4 03e8 	ldr.w	r0, [r4, #1000]	; 0x3e8
	container_game_over.getParent()->invalidateContent();
900085ce:	6803      	ldr	r3, [r0, #0]
}
900085d0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	container_game_over.getParent()->invalidateContent();
900085d4:	699b      	ldr	r3, [r3, #24]
900085d6:	4718      	bx	r3

900085d8 <_ZN20screen_asteroidsView15getShipPositionEPiS0_>:
}

void screen_asteroidsView::getShipPosition(int *x, int *y)
{
	*x = icon_ship.getX();
	*y = icon_ship.getY();
900085d8:	f9b0 30ca 	ldrsh.w	r3, [r0, #202]	; 0xca
{
900085dc:	b410      	push	{r4}
	*x = icon_ship.getX();
900085de:	f9b0 40c8 	ldrsh.w	r4, [r0, #200]	; 0xc8
900085e2:	600c      	str	r4, [r1, #0]
}
900085e4:	f85d 4b04 	ldr.w	r4, [sp], #4
	*y = icon_ship.getY();
900085e8:	6013      	str	r3, [r2, #0]
}
900085ea:	4770      	bx	lr

900085ec <_ZN20screen_asteroidsView16get_ship_pointerEv>:

Drawable* screen_asteroidsView::get_ship_pointer()
{
	return &icon_ship;
}
900085ec:	30c4      	adds	r0, #196	; 0xc4
900085ee:	4770      	bx	lr

900085f0 <_ZN20screen_asteroidsView9move_shipEii>:
900085f0:	f8d0 30d8 	ldr.w	r3, [r0, #216]	; 0xd8
}

void screen_asteroidsView::move_ship(int x, int y)
{
	icon_ship.setX(x);
	icon_ship.setY(y);
900085f4:	f8a0 20ca 	strh.w	r2, [r0, #202]	; 0xca
	icon_ship.getParent()->invalidateContent();
900085f8:	681a      	ldr	r2, [r3, #0]
	icon_ship.setX(x);
900085fa:	f8a0 10c8 	strh.w	r1, [r0, #200]	; 0xc8
	icon_ship.getParent()->invalidateContent();
900085fe:	4618      	mov	r0, r3
90008600:	6993      	ldr	r3, [r2, #24]
90008602:	4718      	bx	r3

90008604 <_ZN20screen_asteroidsView21bullet_button_pressedEv>:
}

bool screen_asteroidsView::bullet_button_pressed()
{
	return btn_shoot.getPressedState();
}
90008604:	f890 0398 	ldrb.w	r0, [r0, #920]	; 0x398
90008608:	4770      	bx	lr
9000860a:	bf00      	nop

9000860c <_ZN20screen_asteroidsView12hide_elementEPN8touchgfx8DrawableE>:
        visible = vis;
9000860c:	2300      	movs	r3, #0
        return parent;
9000860e:	6948      	ldr	r0, [r1, #20]
        visible = vis;
90008610:	f881 3025 	strb.w	r3, [r1, #37]	; 0x25

void screen_asteroidsView::hide_element(Drawable *element)
{
	element->setVisible(false);
	element->getParent()->invalidateContent();
90008614:	6803      	ldr	r3, [r0, #0]
90008616:	699b      	ldr	r3, [r3, #24]
90008618:	4718      	bx	r3
9000861a:	bf00      	nop

9000861c <_ZN20screen_asteroidsView12update_scoreEj>:
{
9000861c:	b510      	push	{r4, lr}
9000861e:	4604      	mov	r4, r0
90008620:	460b      	mov	r3, r1
	Unicode::snprintf(lbl_scoreBuffer, LBL_SCORE_SIZE, "%05u", score);
90008622:	4a08      	ldr	r2, [pc, #32]	; (90008644 <_ZN20screen_asteroidsView12update_scoreEj+0x28>)
90008624:	2106      	movs	r1, #6
90008626:	f500 60a3 	add.w	r0, r0, #1304	; 0x518
9000862a:	f013 fa31 	bl	9001ba90 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        if (visible)
9000862e:	f894 3179 	ldrb.w	r3, [r4, #377]	; 0x179
90008632:	b12b      	cbz	r3, 90008640 <_ZN20screen_asteroidsView12update_scoreEj+0x24>
            invalidate();
90008634:	f504 70aa 	add.w	r0, r4, #340	; 0x154
}
90008638:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9000863c:	f011 ba1b 	b.w	90019a76 <_ZNK8touchgfx8Drawable10invalidateEv>
90008640:	bd10      	pop	{r4, pc}
90008642:	bf00      	nop
90008644:	9002dbf4 	.word	0x9002dbf4

90008648 <_ZN20screen_asteroidsViewD1Ev>:
public:
    touchgfx::ScalableImage rocks[ROCK_COUNT];
    touchgfx::Box bullets[BULLET_COUNT];

    screen_asteroidsView();
    virtual ~screen_asteroidsView() {}
90008648:	b570      	push	{r4, r5, r6, lr}
9000864a:	f242 340c 	movw	r4, #8972	; 0x230c
9000864e:	f242 45c4 	movw	r5, #9412	; 0x24c4
90008652:	4b0d      	ldr	r3, [pc, #52]	; (90008688 <_ZN20screen_asteroidsViewD1Ev+0x40>)
90008654:	4606      	mov	r6, r0
90008656:	4404      	add	r4, r0
90008658:	4405      	add	r5, r0
9000865a:	6003      	str	r3, [r0, #0]
9000865c:	f855 3d2c 	ldr.w	r3, [r5, #-44]!
90008660:	681b      	ldr	r3, [r3, #0]
90008662:	4628      	mov	r0, r5
90008664:	4798      	blx	r3
90008666:	42ac      	cmp	r4, r5
90008668:	d1f8      	bne.n	9000865c <_ZN20screen_asteroidsViewD1Ev+0x14>
9000866a:	f242 1554 	movw	r5, #8532	; 0x2154
9000866e:	4435      	add	r5, r6
90008670:	f854 3d2c 	ldr.w	r3, [r4, #-44]!
90008674:	681b      	ldr	r3, [r3, #0]
90008676:	4620      	mov	r0, r4
90008678:	4798      	blx	r3
9000867a:	42a5      	cmp	r5, r4
9000867c:	d1f8      	bne.n	90008670 <_ZN20screen_asteroidsViewD1Ev+0x28>
9000867e:	4630      	mov	r0, r6
90008680:	f7fe fb28 	bl	90006cd4 <_ZN24screen_asteroidsViewBaseD1Ev>
90008684:	4630      	mov	r0, r6
90008686:	bd70      	pop	{r4, r5, r6, pc}
90008688:	9002dc04 	.word	0x9002dc04

9000868c <_ZN20screen_asteroidsView18get_ship_directionEv>:
	if( btn_up.getPressedState() ) {
9000868c:	f890 335c 	ldrb.w	r3, [r0, #860]	; 0x35c
90008690:	b96b      	cbnz	r3, 900086ae <_ZN20screen_asteroidsView18get_ship_directionEv+0x22>
	else if( btn_down.getPressedState() ) {
90008692:	f890 32e4 	ldrb.w	r3, [r0, #740]	; 0x2e4
90008696:	b943      	cbnz	r3, 900086aa <_ZN20screen_asteroidsView18get_ship_directionEv+0x1e>
	else if( btn_left.getPressedState() ) {
90008698:	f890 3320 	ldrb.w	r3, [r0, #800]	; 0x320
9000869c:	b94b      	cbnz	r3, 900086b2 <_ZN20screen_asteroidsView18get_ship_directionEv+0x26>
	else if( btn_right.getPressedState() ) {
9000869e:	f890 02a8 	ldrb.w	r0, [r0, #680]	; 0x2a8
900086a2:	f1c0 0004 	rsb	r0, r0, #4
900086a6:	b2c0      	uxtb	r0, r0
900086a8:	4770      	bx	lr
		return ShipDirection::DOWN;
900086aa:	2001      	movs	r0, #1
900086ac:	4770      	bx	lr
		return ShipDirection::UP;
900086ae:	2000      	movs	r0, #0
900086b0:	4770      	bx	lr
		return ShipDirection::LEFT;
900086b2:	2002      	movs	r0, #2
}
900086b4:	4770      	bx	lr
900086b6:	bf00      	nop

900086b8 <_ZN20screen_asteroidsView19set_ship_invincibleEb>:
{
900086b8:	4603      	mov	r3, r0
	if( value ) {
900086ba:	b191      	cbz	r1, 900086e2 <_ZN20screen_asteroidsView19set_ship_invincibleEb+0x2a>
        return parent;
900086bc:	f8d0 0500 	ldr.w	r0, [r0, #1280]	; 0x500
900086c0:	f44f 62fc 	mov.w	r2, #2016	; 0x7e0
        visible = vis;
900086c4:	2101      	movs	r1, #1
{
900086c6:	b410      	push	{r4}
900086c8:	f04f 24ff 	mov.w	r4, #4278255360	; 0xff00ff00
900086cc:	f8a3 2150 	strh.w	r2, [r3, #336]	; 0x150
		cover_red.getParent()->invalidateContent();
900086d0:	6802      	ldr	r2, [r0, #0]
900086d2:	f8c3 414c 	str.w	r4, [r3, #332]	; 0x14c
900086d6:	f883 1511 	strb.w	r1, [r3, #1297]	; 0x511
}
900086da:	f85d 4b04 	ldr.w	r4, [sp], #4
		cover_red.getParent()->invalidateContent();
900086de:	6993      	ldr	r3, [r2, #24]
900086e0:	4718      	bx	r3
        return parent;
900086e2:	f8d0 0500 	ldr.w	r0, [r0, #1280]	; 0x500
900086e6:	f04f 32ff 	mov.w	r2, #4294967295
        visible = vis;
900086ea:	f883 1511 	strb.w	r1, [r3, #1297]	; 0x511
		cover_red.getParent()->invalidateContent();
900086ee:	6801      	ldr	r1, [r0, #0]
900086f0:	f8c3 214c 	str.w	r2, [r3, #332]	; 0x14c
900086f4:	f8a3 2150 	strh.w	r2, [r3, #336]	; 0x150
900086f8:	698b      	ldr	r3, [r1, #24]
900086fa:	4718      	bx	r3

900086fc <_ZN20screen_asteroidsView19show_endgame_screenEv>:
{
900086fc:	b570      	push	{r4, r5, r6, lr}
900086fe:	4604      	mov	r4, r0
	presenter->hide_rocks();
90008700:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
90008702:	2500      	movs	r5, #0
90008704:	6803      	ldr	r3, [r0, #0]
90008706:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
90008708:	4798      	blx	r3
	presenter->hide_bullets();
9000870a:	6be0      	ldr	r0, [r4, #60]	; 0x3c
9000870c:	6803      	ldr	r3, [r0, #0]
9000870e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
90008710:	4798      	blx	r3
        return parent;
90008712:	f8d4 0500 	ldr.w	r0, [r4, #1280]	; 0x500
        visible = vis;
90008716:	f884 5511 	strb.w	r5, [r4, #1297]	; 0x511
	cover_red.getParent()->invalidateContent();
9000871a:	6803      	ldr	r3, [r0, #0]
9000871c:	699b      	ldr	r3, [r3, #24]
9000871e:	4798      	blx	r3
        return parent;
90008720:	f8d4 0264 	ldr.w	r0, [r4, #612]	; 0x264
        visible = vis;
90008724:	2201      	movs	r2, #1
90008726:	f884 5275 	strb.w	r5, [r4, #629]	; 0x275
	container_controls.getParent()->invalidateContent();
9000872a:	6803      	ldr	r3, [r0, #0]
9000872c:	f884 23f9 	strb.w	r2, [r4, #1017]	; 0x3f9
90008730:	699b      	ldr	r3, [r3, #24]
90008732:	4798      	blx	r3
        return parent;
90008734:	f8d4 03e8 	ldr.w	r0, [r4, #1000]	; 0x3e8
	container_game_over.getParent()->invalidateContent();
90008738:	6803      	ldr	r3, [r0, #0]
}
9000873a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	container_game_over.getParent()->invalidateContent();
9000873e:	699b      	ldr	r3, [r3, #24]
90008740:	4718      	bx	r3
90008742:	bf00      	nop

90008744 <_ZN20screen_asteroidsView9move_rockEPN8touchgfx13ScalableImageEii>:
{
90008744:	b570      	push	{r4, r5, r6, lr}
90008746:	460c      	mov	r4, r1
	rock->setX(x);
90008748:	b211      	sxth	r1, r2
9000874a:	480f      	ldr	r0, [pc, #60]	; (90008788 <_ZN20screen_asteroidsView9move_rockEPN8touchgfx13ScalableImageEii+0x44>)
{
9000874c:	461e      	mov	r6, r3
	rock->setX(x);
9000874e:	6822      	ldr	r2, [r4, #0]
90008750:	6b15      	ldr	r5, [r2, #48]	; 0x30
90008752:	4285      	cmp	r5, r0
90008754:	d10c      	bne.n	90008770 <_ZN20screen_asteroidsView9move_rockEPN8touchgfx13ScalableImageEii+0x2c>
	rock->setY(y);
90008756:	6b52      	ldr	r2, [r2, #52]	; 0x34
90008758:	480c      	ldr	r0, [pc, #48]	; (9000878c <_ZN20screen_asteroidsView9move_rockEPN8touchgfx13ScalableImageEii+0x48>)
        rect.x = x;
9000875a:	80a1      	strh	r1, [r4, #4]
9000875c:	b231      	sxth	r1, r6
9000875e:	4282      	cmp	r2, r0
90008760:	d10e      	bne.n	90008780 <_ZN20screen_asteroidsView9move_rockEPN8touchgfx13ScalableImageEii+0x3c>
        rect.y = y;
90008762:	80e1      	strh	r1, [r4, #6]
        return parent;
90008764:	6960      	ldr	r0, [r4, #20]
	rock->getParent()->invalidateContent();
90008766:	6803      	ldr	r3, [r0, #0]
}
90008768:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	rock->getParent()->invalidateContent();
9000876c:	699b      	ldr	r3, [r3, #24]
9000876e:	4718      	bx	r3
	rock->setX(x);
90008770:	4620      	mov	r0, r4
90008772:	47a8      	blx	r5
	rock->setY(y);
90008774:	6822      	ldr	r2, [r4, #0]
90008776:	4805      	ldr	r0, [pc, #20]	; (9000878c <_ZN20screen_asteroidsView9move_rockEPN8touchgfx13ScalableImageEii+0x48>)
90008778:	b231      	sxth	r1, r6
9000877a:	6b52      	ldr	r2, [r2, #52]	; 0x34
9000877c:	4282      	cmp	r2, r0
9000877e:	d0f0      	beq.n	90008762 <_ZN20screen_asteroidsView9move_rockEPN8touchgfx13ScalableImageEii+0x1e>
90008780:	4620      	mov	r0, r4
90008782:	4790      	blx	r2
90008784:	e7ee      	b.n	90008764 <_ZN20screen_asteroidsView9move_rockEPN8touchgfx13ScalableImageEii+0x20>
90008786:	bf00      	nop
90008788:	9000452d 	.word	0x9000452d
9000878c:	90004531 	.word	0x90004531

90008790 <_ZN20screen_asteroidsView11move_bulletEPN8touchgfx3BoxEii>:
{
90008790:	b570      	push	{r4, r5, r6, lr}
90008792:	460c      	mov	r4, r1
	bullet->setX(x);
90008794:	b211      	sxth	r1, r2
90008796:	480f      	ldr	r0, [pc, #60]	; (900087d4 <_ZN20screen_asteroidsView11move_bulletEPN8touchgfx3BoxEii+0x44>)
{
90008798:	461e      	mov	r6, r3
	bullet->setX(x);
9000879a:	6822      	ldr	r2, [r4, #0]
9000879c:	6b15      	ldr	r5, [r2, #48]	; 0x30
9000879e:	4285      	cmp	r5, r0
900087a0:	d10c      	bne.n	900087bc <_ZN20screen_asteroidsView11move_bulletEPN8touchgfx3BoxEii+0x2c>
	bullet->setY(y);
900087a2:	6b52      	ldr	r2, [r2, #52]	; 0x34
900087a4:	480c      	ldr	r0, [pc, #48]	; (900087d8 <_ZN20screen_asteroidsView11move_bulletEPN8touchgfx3BoxEii+0x48>)
        rect.x = x;
900087a6:	80a1      	strh	r1, [r4, #4]
900087a8:	b231      	sxth	r1, r6
900087aa:	4282      	cmp	r2, r0
900087ac:	d10e      	bne.n	900087cc <_ZN20screen_asteroidsView11move_bulletEPN8touchgfx3BoxEii+0x3c>
        rect.y = y;
900087ae:	80e1      	strh	r1, [r4, #6]
        return parent;
900087b0:	6960      	ldr	r0, [r4, #20]
	bullet->getParent()->invalidateContent();
900087b2:	6803      	ldr	r3, [r0, #0]
}
900087b4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	bullet->getParent()->invalidateContent();
900087b8:	699b      	ldr	r3, [r3, #24]
900087ba:	4718      	bx	r3
	bullet->setX(x);
900087bc:	4620      	mov	r0, r4
900087be:	47a8      	blx	r5
	bullet->setY(y);
900087c0:	6822      	ldr	r2, [r4, #0]
900087c2:	4805      	ldr	r0, [pc, #20]	; (900087d8 <_ZN20screen_asteroidsView11move_bulletEPN8touchgfx3BoxEii+0x48>)
900087c4:	b231      	sxth	r1, r6
900087c6:	6b52      	ldr	r2, [r2, #52]	; 0x34
900087c8:	4282      	cmp	r2, r0
900087ca:	d0f0      	beq.n	900087ae <_ZN20screen_asteroidsView11move_bulletEPN8touchgfx3BoxEii+0x1e>
900087cc:	4620      	mov	r0, r4
900087ce:	4790      	blx	r2
900087d0:	e7ee      	b.n	900087b0 <_ZN20screen_asteroidsView11move_bulletEPN8touchgfx3BoxEii+0x20>
900087d2:	bf00      	nop
900087d4:	9000452d 	.word	0x9000452d
900087d8:	90004531 	.word	0x90004531

900087dc <_ZN20screen_asteroidsView13update_heartsEc>:
{
900087dc:	b510      	push	{r4, lr}
900087de:	4604      	mov	r4, r0
900087e0:	2903      	cmp	r1, #3
900087e2:	d839      	bhi.n	90008858 <_ZN20screen_asteroidsView13update_heartsEc+0x7c>
900087e4:	e8df f001 	tbb	[pc, r1]
900087e8:	24340221 	.word	0x24340221
    }
900087ec:	2300      	movs	r3, #0
900087ee:	2201      	movs	r2, #1
        visible = vis;
900087f0:	2100      	movs	r1, #0
900087f2:	f884 321d 	strb.w	r3, [r4, #541]	; 0x21d
900087f6:	f884 21f1 	strb.w	r2, [r4, #497]	; 0x1f1
900087fa:	f884 1249 	strb.w	r1, [r4, #585]	; 0x249

    virtual Rect getSolidRect() const;

    virtual void invalidateContent() const
    {
        if (alpha > 0)
900087fe:	f894 3220 	ldrb.w	r3, [r4, #544]	; 0x220
90008802:	b133      	cbz	r3, 90008812 <_ZN20screen_asteroidsView13update_heartsEc+0x36>
        if (visible)
90008804:	f894 321d 	ldrb.w	r3, [r4, #541]	; 0x21d
90008808:	b11b      	cbz	r3, 90008812 <_ZN20screen_asteroidsView13update_heartsEc+0x36>
            invalidate();
9000880a:	f504 70fc 	add.w	r0, r4, #504	; 0x1f8
9000880e:	f011 f932 	bl	90019a76 <_ZNK8touchgfx8Drawable10invalidateEv>
90008812:	f894 31f4 	ldrb.w	r3, [r4, #500]	; 0x1f4
90008816:	b1f3      	cbz	r3, 90008856 <_ZN20screen_asteroidsView13update_heartsEc+0x7a>
        if (visible)
90008818:	f894 31f1 	ldrb.w	r3, [r4, #497]	; 0x1f1
9000881c:	b1db      	cbz	r3, 90008856 <_ZN20screen_asteroidsView13update_heartsEc+0x7a>
            invalidate();
9000881e:	f504 70e6 	add.w	r0, r4, #460	; 0x1cc
}
90008822:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90008826:	f011 b926 	b.w	90019a76 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
9000882a:	2300      	movs	r3, #0
9000882c:	461a      	mov	r2, r3
9000882e:	e7df      	b.n	900087f0 <_ZN20screen_asteroidsView13update_heartsEc+0x14>
        visible = vis;
90008830:	2301      	movs	r3, #1
90008832:	f890 224c 	ldrb.w	r2, [r0, #588]	; 0x24c
90008836:	f880 3249 	strb.w	r3, [r0, #585]	; 0x249
9000883a:	f880 321d 	strb.w	r3, [r0, #541]	; 0x21d
9000883e:	f880 31f1 	strb.w	r3, [r0, #497]	; 0x1f1
90008842:	2a00      	cmp	r2, #0
90008844:	d0db      	beq.n	900087fe <_ZN20screen_asteroidsView13update_heartsEc+0x22>
        {
            Widget::invalidateContent();
90008846:	f500 7009 	add.w	r0, r0, #548	; 0x224
            invalidate();
9000884a:	f011 f914 	bl	90019a76 <_ZNK8touchgfx8Drawable10invalidateEv>
9000884e:	e7d6      	b.n	900087fe <_ZN20screen_asteroidsView13update_heartsEc+0x22>
    }
90008850:	2301      	movs	r3, #1
90008852:	461a      	mov	r2, r3
90008854:	e7cc      	b.n	900087f0 <_ZN20screen_asteroidsView13update_heartsEc+0x14>
90008856:	bd10      	pop	{r4, pc}
        if (alpha > 0)
90008858:	f890 324c 	ldrb.w	r3, [r0, #588]	; 0x24c
9000885c:	2b00      	cmp	r3, #0
9000885e:	d0ce      	beq.n	900087fe <_ZN20screen_asteroidsView13update_heartsEc+0x22>
        if (visible)
90008860:	f890 3249 	ldrb.w	r3, [r0, #585]	; 0x249
            Widget::invalidateContent();
90008864:	f500 7009 	add.w	r0, r0, #548	; 0x224
90008868:	2b00      	cmp	r3, #0
9000886a:	d1ee      	bne.n	9000884a <_ZN20screen_asteroidsView13update_heartsEc+0x6e>
9000886c:	e7c7      	b.n	900087fe <_ZN20screen_asteroidsView13update_heartsEc+0x22>
9000886e:	bf00      	nop

90008870 <_ZN20screen_asteroidsViewD0Ev>:
90008870:	b570      	push	{r4, r5, r6, lr}
90008872:	f242 340c 	movw	r4, #8972	; 0x230c
90008876:	f242 45c4 	movw	r5, #9412	; 0x24c4
9000887a:	4b10      	ldr	r3, [pc, #64]	; (900088bc <_ZN20screen_asteroidsViewD0Ev+0x4c>)
9000887c:	4606      	mov	r6, r0
9000887e:	4404      	add	r4, r0
90008880:	4405      	add	r5, r0
90008882:	6003      	str	r3, [r0, #0]
90008884:	f855 3d2c 	ldr.w	r3, [r5, #-44]!
90008888:	681b      	ldr	r3, [r3, #0]
9000888a:	4628      	mov	r0, r5
9000888c:	4798      	blx	r3
9000888e:	42a5      	cmp	r5, r4
90008890:	d1f8      	bne.n	90008884 <_ZN20screen_asteroidsViewD0Ev+0x14>
90008892:	f242 1554 	movw	r5, #8532	; 0x2154
90008896:	4435      	add	r5, r6
90008898:	f854 3d2c 	ldr.w	r3, [r4, #-44]!
9000889c:	681b      	ldr	r3, [r3, #0]
9000889e:	4620      	mov	r0, r4
900088a0:	4798      	blx	r3
900088a2:	42a5      	cmp	r5, r4
900088a4:	d1f8      	bne.n	90008898 <_ZN20screen_asteroidsViewD0Ev+0x28>
900088a6:	4630      	mov	r0, r6
900088a8:	f7fe fa14 	bl	90006cd4 <_ZN24screen_asteroidsViewBaseD1Ev>
900088ac:	4630      	mov	r0, r6
900088ae:	f242 41c4 	movw	r1, #9412	; 0x24c4
900088b2:	f021 f9b4 	bl	90029c1e <_ZdlPvj>
900088b6:	4630      	mov	r0, r6
900088b8:	bd70      	pop	{r4, r5, r6, pc}
900088ba:	bf00      	nop
900088bc:	9002dc04 	.word	0x9002dc04

900088c0 <_ZN20screen_asteroidsView21move_bullet_offscreenEPN8touchgfx3BoxE>:
	move_bullet(bullet, BULLET_OFFSCREEN_X, BULLET_OFFSCREEN_Y);
900088c0:	6802      	ldr	r2, [r0, #0]
900088c2:	4b18      	ldr	r3, [pc, #96]	; (90008924 <_ZN20screen_asteroidsView21move_bullet_offscreenEPN8touchgfx3BoxE+0x64>)
{
900088c4:	b570      	push	{r4, r5, r6, lr}
	move_bullet(bullet, BULLET_OFFSCREEN_X, BULLET_OFFSCREEN_Y);
900088c6:	6f55      	ldr	r5, [r2, #116]	; 0x74
{
900088c8:	460c      	mov	r4, r1
900088ca:	429d      	cmp	r5, r3
900088cc:	d11a      	bne.n	90008904 <_ZN20screen_asteroidsView21move_bullet_offscreenEPN8touchgfx3BoxE+0x44>
	bullet->setX(x);
900088ce:	680b      	ldr	r3, [r1, #0]
900088d0:	4915      	ldr	r1, [pc, #84]	; (90008928 <_ZN20screen_asteroidsView21move_bullet_offscreenEPN8touchgfx3BoxE+0x68>)
900088d2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
900088d4:	428a      	cmp	r2, r1
900088d6:	d11f      	bne.n	90008918 <_ZN20screen_asteroidsView21move_bullet_offscreenEPN8touchgfx3BoxE+0x58>
        rect.x = x;
900088d8:	2200      	movs	r2, #0
900088da:	80a2      	strh	r2, [r4, #4]
	bullet->setY(y);
900088dc:	6b5b      	ldr	r3, [r3, #52]	; 0x34
900088de:	4a13      	ldr	r2, [pc, #76]	; (9000892c <_ZN20screen_asteroidsView21move_bullet_offscreenEPN8touchgfx3BoxE+0x6c>)
900088e0:	4293      	cmp	r3, r2
900088e2:	d114      	bne.n	9000890e <_ZN20screen_asteroidsView21move_bullet_offscreenEPN8touchgfx3BoxE+0x4e>
        rect.y = y;
900088e4:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
900088e8:	80e3      	strh	r3, [r4, #6]
        return parent;
900088ea:	6960      	ldr	r0, [r4, #20]
	bullet->getParent()->invalidateContent();
900088ec:	6803      	ldr	r3, [r0, #0]
900088ee:	699b      	ldr	r3, [r3, #24]
900088f0:	4798      	blx	r3
900088f2:	6960      	ldr	r0, [r4, #20]
        visible = vis;
900088f4:	2200      	movs	r2, #0
	bullet->getParent()->invalidateContent();
900088f6:	6803      	ldr	r3, [r0, #0]
900088f8:	f884 2025 	strb.w	r2, [r4, #37]	; 0x25
900088fc:	699b      	ldr	r3, [r3, #24]
}
900088fe:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	bullet->getParent()->invalidateContent();
90008902:	4718      	bx	r3
	move_bullet(bullet, BULLET_OFFSCREEN_X, BULLET_OFFSCREEN_Y);
90008904:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
90008908:	2200      	movs	r2, #0
9000890a:	47a8      	blx	r5
9000890c:	e7f1      	b.n	900088f2 <_ZN20screen_asteroidsView21move_bullet_offscreenEPN8touchgfx3BoxE+0x32>
	bullet->setY(y);
9000890e:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
90008912:	4620      	mov	r0, r4
90008914:	4798      	blx	r3
90008916:	e7e8      	b.n	900088ea <_ZN20screen_asteroidsView21move_bullet_offscreenEPN8touchgfx3BoxE+0x2a>
	bullet->setX(x);
90008918:	2100      	movs	r1, #0
9000891a:	4620      	mov	r0, r4
9000891c:	4790      	blx	r2
	bullet->setY(y);
9000891e:	6823      	ldr	r3, [r4, #0]
90008920:	e7dc      	b.n	900088dc <_ZN20screen_asteroidsView21move_bullet_offscreenEPN8touchgfx3BoxE+0x1c>
90008922:	bf00      	nop
90008924:	90008791 	.word	0x90008791
90008928:	9000452d 	.word	0x9000452d
9000892c:	90004531 	.word	0x90004531

90008930 <_ZN20screen_asteroidsView19move_rock_offscreenEPN8touchgfx13ScalableImageE>:
	move_rock(rock, ROCK_OFFSCREEN_X, ROCK_OFFSCREEN_Y);
90008930:	6802      	ldr	r2, [r0, #0]
90008932:	4b16      	ldr	r3, [pc, #88]	; (9000898c <_ZN20screen_asteroidsView19move_rock_offscreenEPN8touchgfx13ScalableImageE+0x5c>)
{
90008934:	b570      	push	{r4, r5, r6, lr}
	move_rock(rock, ROCK_OFFSCREEN_X, ROCK_OFFSCREEN_Y);
90008936:	6e55      	ldr	r5, [r2, #100]	; 0x64
{
90008938:	460c      	mov	r4, r1
9000893a:	429d      	cmp	r5, r3
9000893c:	d119      	bne.n	90008972 <_ZN20screen_asteroidsView19move_rock_offscreenEPN8touchgfx13ScalableImageE+0x42>
	rock->setX(x);
9000893e:	680b      	ldr	r3, [r1, #0]
90008940:	4913      	ldr	r1, [pc, #76]	; (90008990 <_ZN20screen_asteroidsView19move_rock_offscreenEPN8touchgfx13ScalableImageE+0x60>)
90008942:	6b1a      	ldr	r2, [r3, #48]	; 0x30
90008944:	428a      	cmp	r2, r1
90008946:	d11c      	bne.n	90008982 <_ZN20screen_asteroidsView19move_rock_offscreenEPN8touchgfx13ScalableImageE+0x52>
        rect.x = x;
90008948:	2200      	movs	r2, #0
9000894a:	80a2      	strh	r2, [r4, #4]
	rock->setY(y);
9000894c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
9000894e:	4a11      	ldr	r2, [pc, #68]	; (90008994 <_ZN20screen_asteroidsView19move_rock_offscreenEPN8touchgfx13ScalableImageE+0x64>)
90008950:	4293      	cmp	r3, r2
90008952:	d112      	bne.n	9000897a <_ZN20screen_asteroidsView19move_rock_offscreenEPN8touchgfx13ScalableImageE+0x4a>
        rect.y = y;
90008954:	2300      	movs	r3, #0
90008956:	80e3      	strh	r3, [r4, #6]
        return parent;
90008958:	6960      	ldr	r0, [r4, #20]
	rock->getParent()->invalidateContent();
9000895a:	6803      	ldr	r3, [r0, #0]
9000895c:	699b      	ldr	r3, [r3, #24]
9000895e:	4798      	blx	r3
90008960:	6960      	ldr	r0, [r4, #20]
        visible = vis;
90008962:	2200      	movs	r2, #0
	rock->getParent()->invalidateContent();
90008964:	6803      	ldr	r3, [r0, #0]
90008966:	f884 2025 	strb.w	r2, [r4, #37]	; 0x25
9000896a:	699b      	ldr	r3, [r3, #24]
}
9000896c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	rock->getParent()->invalidateContent();
90008970:	4718      	bx	r3
	move_rock(rock, ROCK_OFFSCREEN_X, ROCK_OFFSCREEN_Y);
90008972:	2300      	movs	r3, #0
90008974:	461a      	mov	r2, r3
90008976:	47a8      	blx	r5
90008978:	e7f2      	b.n	90008960 <_ZN20screen_asteroidsView19move_rock_offscreenEPN8touchgfx13ScalableImageE+0x30>
	rock->setY(y);
9000897a:	2100      	movs	r1, #0
9000897c:	4620      	mov	r0, r4
9000897e:	4798      	blx	r3
90008980:	e7ea      	b.n	90008958 <_ZN20screen_asteroidsView19move_rock_offscreenEPN8touchgfx13ScalableImageE+0x28>
	rock->setX(x);
90008982:	2100      	movs	r1, #0
90008984:	4620      	mov	r0, r4
90008986:	4790      	blx	r2
	rock->setY(y);
90008988:	6823      	ldr	r3, [r4, #0]
9000898a:	e7df      	b.n	9000894c <_ZN20screen_asteroidsView19move_rock_offscreenEPN8touchgfx13ScalableImageE+0x1c>
9000898c:	90008745 	.word	0x90008745
90008990:	9000452d 	.word	0x9000452d
90008994:	90004531 	.word	0x90004531

90008998 <_ZN20screen_asteroidsView17new_rock_positionEPN8touchgfx13ScalableImageE>:
{
90008998:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000899c:	460d      	mov	r5, r1
9000899e:	4607      	mov	r7, r0
	int random_x = rand() % (480 - rock->getWidth());
900089a0:	f021 fa4c 	bl	90029e3c <rand>
900089a4:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
900089a8:	f5c3 73f0 	rsb	r3, r3, #480	; 0x1e0
900089ac:	fb90 f2f3 	sdiv	r2, r0, r3
900089b0:	fb02 0613 	mls	r6, r2, r3, r0
	int random_y = 0 - (rand() % 272);
900089b4:	f021 fa42 	bl	90029e3c <rand>
900089b8:	4b1b      	ldr	r3, [pc, #108]	; (90008a28 <_ZN20screen_asteroidsView17new_rock_positionEPN8touchgfx13ScalableImageE+0x90>)
900089ba:	ea4f 7ce0 	mov.w	ip, r0, asr #31
900089be:	fb83 2300 	smull	r2, r3, r3, r0
900089c2:	ebcc 1ce3 	rsb	ip, ip, r3, asr #7
	move_rock(rock, random_x, random_y);
900089c6:	683b      	ldr	r3, [r7, #0]
900089c8:	f8d3 8064 	ldr.w	r8, [r3, #100]	; 0x64
	int random_y = 0 - (rand() % 272);
900089cc:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
900089d0:	4b16      	ldr	r3, [pc, #88]	; (90008a2c <_ZN20screen_asteroidsView17new_rock_positionEPN8touchgfx13ScalableImageE+0x94>)
900089d2:	ebc0 140c 	rsb	r4, r0, ip, lsl #4
	move_rock(rock, random_x, random_y);
900089d6:	4598      	cmp	r8, r3
900089d8:	d119      	bne.n	90008a0e <_ZN20screen_asteroidsView17new_rock_positionEPN8touchgfx13ScalableImageE+0x76>
	rock->setX(x);
900089da:	682b      	ldr	r3, [r5, #0]
900089dc:	b231      	sxth	r1, r6
900089de:	4814      	ldr	r0, [pc, #80]	; (90008a30 <_ZN20screen_asteroidsView17new_rock_positionEPN8touchgfx13ScalableImageE+0x98>)
900089e0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
900089e2:	4282      	cmp	r2, r0
900089e4:	d11c      	bne.n	90008a20 <_ZN20screen_asteroidsView17new_rock_positionEPN8touchgfx13ScalableImageE+0x88>
        rect.x = x;
900089e6:	80a9      	strh	r1, [r5, #4]
	rock->setY(y);
900089e8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
900089ea:	b221      	sxth	r1, r4
900089ec:	4a11      	ldr	r2, [pc, #68]	; (90008a34 <_ZN20screen_asteroidsView17new_rock_positionEPN8touchgfx13ScalableImageE+0x9c>)
900089ee:	4293      	cmp	r3, r2
900089f0:	d113      	bne.n	90008a1a <_ZN20screen_asteroidsView17new_rock_positionEPN8touchgfx13ScalableImageE+0x82>
        rect.y = y;
900089f2:	80e9      	strh	r1, [r5, #6]
        return parent;
900089f4:	6968      	ldr	r0, [r5, #20]
	rock->getParent()->invalidateContent();
900089f6:	6803      	ldr	r3, [r0, #0]
900089f8:	699b      	ldr	r3, [r3, #24]
900089fa:	4798      	blx	r3
900089fc:	6968      	ldr	r0, [r5, #20]
        visible = vis;
900089fe:	2201      	movs	r2, #1
	rock->getParent()->invalidateContent();
90008a00:	6803      	ldr	r3, [r0, #0]
90008a02:	f885 2025 	strb.w	r2, [r5, #37]	; 0x25
90008a06:	699b      	ldr	r3, [r3, #24]
}
90008a08:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
	rock->getParent()->invalidateContent();
90008a0c:	4718      	bx	r3
	move_rock(rock, random_x, random_y);
90008a0e:	4623      	mov	r3, r4
90008a10:	4632      	mov	r2, r6
90008a12:	4638      	mov	r0, r7
90008a14:	4629      	mov	r1, r5
90008a16:	47c0      	blx	r8
90008a18:	e7f0      	b.n	900089fc <_ZN20screen_asteroidsView17new_rock_positionEPN8touchgfx13ScalableImageE+0x64>
	rock->setY(y);
90008a1a:	4628      	mov	r0, r5
90008a1c:	4798      	blx	r3
90008a1e:	e7e9      	b.n	900089f4 <_ZN20screen_asteroidsView17new_rock_positionEPN8touchgfx13ScalableImageE+0x5c>
	rock->setX(x);
90008a20:	4628      	mov	r0, r5
90008a22:	4790      	blx	r2
	rock->setY(y);
90008a24:	682b      	ldr	r3, [r5, #0]
90008a26:	e7df      	b.n	900089e8 <_ZN20screen_asteroidsView17new_rock_positionEPN8touchgfx13ScalableImageE+0x50>
90008a28:	78787879 	.word	0x78787879
90008a2c:	90008745 	.word	0x90008745
90008a30:	9000452d 	.word	0x9000452d
90008a34:	90004531 	.word	0x90004531

90008a38 <_ZN20screen_asteroidsViewC1Ev>:
screen_asteroidsView::screen_asteroidsView()
90008a38:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90008a3c:	4607      	mov	r7, r0
90008a3e:	f242 1454 	movw	r4, #8532	; 0x2154
90008a42:	f242 350c 	movw	r5, #8972	; 0x230c
90008a46:	b082      	sub	sp, #8
90008a48:	f7fe fa4e 	bl	90006ee8 <_ZN24screen_asteroidsViewBaseC1Ev>
90008a4c:	443c      	add	r4, r7
90008a4e:	4b6f      	ldr	r3, [pc, #444]	; (90008c0c <_ZN20screen_asteroidsViewC1Ev+0x1d4>)
90008a50:	443d      	add	r5, r7
90008a52:	f64f 76ff 	movw	r6, #65535	; 0xffff
90008a56:	f04f 38ff 	mov.w	r8, #4294967295
90008a5a:	603b      	str	r3, [r7, #0]
90008a5c:	4620      	mov	r0, r4
90008a5e:	342c      	adds	r4, #44	; 0x2c
90008a60:	a901      	add	r1, sp, #4
90008a62:	f8ad 6004 	strh.w	r6, [sp, #4]
90008a66:	f00c fbef 	bl	90015248 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90008a6a:	42a5      	cmp	r5, r4
90008a6c:	d1f6      	bne.n	90008a5c <_ZN20screen_asteroidsViewC1Ev+0x24>
90008a6e:	f507 5300 	add.w	r3, r7, #8192	; 0x2000
90008a72:	2200      	movs	r2, #0
          touchable(false),
90008a74:	f44f 7480 	mov.w	r4, #256	; 0x100
        : Widget(), alpha(255), color(0)
90008a78:	4965      	ldr	r1, [pc, #404]	; (90008c10 <_ZN20screen_asteroidsViewC1Ev+0x1d8>)
90008a7a:	25ff      	movs	r5, #255	; 0xff
}
90008a7c:	4638      	mov	r0, r7
90008a7e:	f883 8332 	strb.w	r8, [r3, #818]	; 0x332
90008a82:	f8a3 4330 	strh.w	r4, [r3, #816]	; 0x330
90008a86:	f8c3 130c 	str.w	r1, [r3, #780]	; 0x30c
        : color(col)
90008a8a:	f8c3 2334 	str.w	r2, [r3, #820]	; 0x334
90008a8e:	f8a3 435c 	strh.w	r4, [r3, #860]	; 0x35c
90008a92:	f8c3 1338 	str.w	r1, [r3, #824]	; 0x338
90008a96:	f8c3 2360 	str.w	r2, [r3, #864]	; 0x360
90008a9a:	f883 535e 	strb.w	r5, [r3, #862]	; 0x35e
        : x(0), y(0), width(0), height(0)
90008a9e:	e9c3 22c4 	strd	r2, r2, [r3, #784]	; 0x310
90008aa2:	e9c3 22c6 	strd	r2, r2, [r3, #792]	; 0x318
          nextSibling(0),
90008aa6:	e9c3 22c8 	strd	r2, r2, [r3, #800]	; 0x320
          cachedAbsX(0),
90008aaa:	e9c3 22ca 	strd	r2, r2, [r3, #808]	; 0x328
90008aae:	e9c3 22cf 	strd	r2, r2, [r3, #828]	; 0x33c
90008ab2:	e9c3 22d1 	strd	r2, r2, [r3, #836]	; 0x344
          nextSibling(0),
90008ab6:	e9c3 22d3 	strd	r2, r2, [r3, #844]	; 0x34c
          cachedAbsX(0),
90008aba:	e9c3 22d5 	strd	r2, r2, [r3, #852]	; 0x354
90008abe:	e9c3 22da 	strd	r2, r2, [r3, #872]	; 0x368
90008ac2:	e9c3 22dc 	strd	r2, r2, [r3, #880]	; 0x370
          nextSibling(0),
90008ac6:	e9c3 22de 	strd	r2, r2, [r3, #888]	; 0x378
          cachedAbsX(0),
90008aca:	e9c3 22e0 	strd	r2, r2, [r3, #896]	; 0x380
          touchable(false),
90008ace:	f8a3 4388 	strh.w	r4, [r3, #904]	; 0x388
90008ad2:	f8c3 1364 	str.w	r1, [r3, #868]	; 0x364
90008ad6:	f883 538a 	strb.w	r5, [r3, #906]	; 0x38a
        : color(col)
90008ada:	f8c3 238c 	str.w	r2, [r3, #908]	; 0x38c
90008ade:	f8a3 43b4 	strh.w	r4, [r3, #948]	; 0x3b4
90008ae2:	f8c3 1390 	str.w	r1, [r3, #912]	; 0x390
90008ae6:	f883 53b6 	strb.w	r5, [r3, #950]	; 0x3b6
90008aea:	f8c3 23b8 	str.w	r2, [r3, #952]	; 0x3b8
90008aee:	f8a3 43e0 	strh.w	r4, [r3, #992]	; 0x3e0
90008af2:	f8c3 13bc 	str.w	r1, [r3, #956]	; 0x3bc
90008af6:	f883 53e2 	strb.w	r5, [r3, #994]	; 0x3e2
90008afa:	f8c3 23e4 	str.w	r2, [r3, #996]	; 0x3e4
          parent(0),
90008afe:	f8c3 23fc 	str.w	r2, [r3, #1020]	; 0x3fc
        : x(0), y(0), width(0), height(0)
90008b02:	e9c3 22e5 	strd	r2, r2, [r3, #916]	; 0x394
90008b06:	e9c3 22e7 	strd	r2, r2, [r3, #924]	; 0x39c
          nextSibling(0),
90008b0a:	e9c3 22e9 	strd	r2, r2, [r3, #932]	; 0x3a4
          cachedAbsX(0),
90008b0e:	e9c3 22eb 	strd	r2, r2, [r3, #940]	; 0x3ac
90008b12:	e9c3 22f0 	strd	r2, r2, [r3, #960]	; 0x3c0
90008b16:	e9c3 22f2 	strd	r2, r2, [r3, #968]	; 0x3c8
          nextSibling(0),
90008b1a:	e9c3 22f4 	strd	r2, r2, [r3, #976]	; 0x3d0
          cachedAbsX(0),
90008b1e:	e9c3 22f6 	strd	r2, r2, [r3, #984]	; 0x3d8
90008b22:	e9c3 22fb 	strd	r2, r2, [r3, #1004]	; 0x3ec
90008b26:	e9c3 22fd 	strd	r2, r2, [r3, #1012]	; 0x3f4
          nextSibling(0),
90008b2a:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
          nextDrawChainElement(0),
90008b2e:	f8c3 2404 	str.w	r2, [r3, #1028]	; 0x404
          cachedAbsX(0),
90008b32:	f8c3 2408 	str.w	r2, [r3, #1032]	; 0x408
          touchable(false),
90008b36:	f8a3 440c 	strh.w	r4, [r3, #1036]	; 0x40c
90008b3a:	f8c3 13e8 	str.w	r1, [r3, #1000]	; 0x3e8
90008b3e:	f883 540e 	strb.w	r5, [r3, #1038]	; 0x40e
        : color(col)
90008b42:	f8c3 2410 	str.w	r2, [r3, #1040]	; 0x410
        : x(0), y(0), width(0), height(0)
90008b46:	f8c3 2418 	str.w	r2, [r3, #1048]	; 0x418
90008b4a:	f8c3 241c 	str.w	r2, [r3, #1052]	; 0x41c
90008b4e:	f8c3 2420 	str.w	r2, [r3, #1056]	; 0x420
90008b52:	f8c3 2424 	str.w	r2, [r3, #1060]	; 0x424
          parent(0),
90008b56:	f8c3 2428 	str.w	r2, [r3, #1064]	; 0x428
          nextSibling(0),
90008b5a:	f8c3 242c 	str.w	r2, [r3, #1068]	; 0x42c
          nextDrawChainElement(0),
90008b5e:	f8c3 2430 	str.w	r2, [r3, #1072]	; 0x430
          cachedAbsX(0),
90008b62:	f8c3 2434 	str.w	r2, [r3, #1076]	; 0x434
          touchable(false),
90008b66:	f8a3 4438 	strh.w	r4, [r3, #1080]	; 0x438
90008b6a:	f8c3 1414 	str.w	r1, [r3, #1044]	; 0x414
90008b6e:	f883 543a 	strb.w	r5, [r3, #1082]	; 0x43a
        : color(col)
90008b72:	f8c3 243c 	str.w	r2, [r3, #1084]	; 0x43c
        : x(0), y(0), width(0), height(0)
90008b76:	f8c3 2444 	str.w	r2, [r3, #1092]	; 0x444
90008b7a:	f8c3 2448 	str.w	r2, [r3, #1096]	; 0x448
90008b7e:	f8c3 244c 	str.w	r2, [r3, #1100]	; 0x44c
90008b82:	f8c3 2450 	str.w	r2, [r3, #1104]	; 0x450
          parent(0),
90008b86:	f8c3 2454 	str.w	r2, [r3, #1108]	; 0x454
          nextSibling(0),
90008b8a:	f8c3 2458 	str.w	r2, [r3, #1112]	; 0x458
          nextDrawChainElement(0),
90008b8e:	f8c3 245c 	str.w	r2, [r3, #1116]	; 0x45c
          cachedAbsX(0),
90008b92:	f8c3 2460 	str.w	r2, [r3, #1120]	; 0x460
          touchable(false),
90008b96:	f8a3 4464 	strh.w	r4, [r3, #1124]	; 0x464
90008b9a:	f8c3 1440 	str.w	r1, [r3, #1088]	; 0x440
90008b9e:	f883 5466 	strb.w	r5, [r3, #1126]	; 0x466
        : color(col)
90008ba2:	f8c3 2468 	str.w	r2, [r3, #1128]	; 0x468
        : x(0), y(0), width(0), height(0)
90008ba6:	f8c3 2470 	str.w	r2, [r3, #1136]	; 0x470
90008baa:	f8c3 2474 	str.w	r2, [r3, #1140]	; 0x474
90008bae:	f8c3 2478 	str.w	r2, [r3, #1144]	; 0x478
90008bb2:	f8c3 247c 	str.w	r2, [r3, #1148]	; 0x47c
          parent(0),
90008bb6:	f8c3 2480 	str.w	r2, [r3, #1152]	; 0x480
          nextSibling(0),
90008bba:	f8c3 2484 	str.w	r2, [r3, #1156]	; 0x484
          nextDrawChainElement(0),
90008bbe:	f8c3 2488 	str.w	r2, [r3, #1160]	; 0x488
          cachedAbsX(0),
90008bc2:	f8c3 248c 	str.w	r2, [r3, #1164]	; 0x48c
          touchable(false),
90008bc6:	f8a3 4490 	strh.w	r4, [r3, #1168]	; 0x490
90008bca:	f8a3 44bc 	strh.w	r4, [r3, #1212]	; 0x4bc
90008bce:	f8c3 146c 	str.w	r1, [r3, #1132]	; 0x46c
90008bd2:	f883 5492 	strb.w	r5, [r3, #1170]	; 0x492
        : color(col)
90008bd6:	f8c3 2494 	str.w	r2, [r3, #1172]	; 0x494
        : x(0), y(0), width(0), height(0)
90008bda:	f8c3 249c 	str.w	r2, [r3, #1180]	; 0x49c
90008bde:	f8c3 24a0 	str.w	r2, [r3, #1184]	; 0x4a0
90008be2:	f8c3 24a4 	str.w	r2, [r3, #1188]	; 0x4a4
90008be6:	f8c3 24a8 	str.w	r2, [r3, #1192]	; 0x4a8
          parent(0),
90008bea:	f8c3 24ac 	str.w	r2, [r3, #1196]	; 0x4ac
          nextSibling(0),
90008bee:	f8c3 24b0 	str.w	r2, [r3, #1200]	; 0x4b0
          nextDrawChainElement(0),
90008bf2:	f8c3 24b4 	str.w	r2, [r3, #1204]	; 0x4b4
          cachedAbsX(0),
90008bf6:	f8c3 24b8 	str.w	r2, [r3, #1208]	; 0x4b8
90008bfa:	f8c3 1498 	str.w	r1, [r3, #1176]	; 0x498
90008bfe:	f883 54be 	strb.w	r5, [r3, #1214]	; 0x4be
        : color(col)
90008c02:	f8c3 24c0 	str.w	r2, [r3, #1216]	; 0x4c0
90008c06:	b002      	add	sp, #8
90008c08:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90008c0c:	9002dc04 	.word	0x9002dc04
90008c10:	9002e464 	.word	0x9002e464

90008c14 <_ZN20screen_asteroidsView11setupScreenEv>:
{
90008c14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90008c18:	4605      	mov	r5, r0
90008c1a:	b085      	sub	sp, #20
90008c1c:	f242 1b54 	movw	fp, #8532	; 0x2154
90008c20:	2400      	movs	r4, #0
90008c22:	9001      	str	r0, [sp, #4]
    screen_asteroidsViewBase::setupScreen();
90008c24:	f7fd ffe2 	bl	90006bec <_ZN24screen_asteroidsViewBase11setupScreenEv>
90008c28:	462b      	mov	r3, r5
90008c2a:	4e42      	ldr	r6, [pc, #264]	; (90008d34 <_ZN20screen_asteroidsView11setupScreenEv+0x120>)
90008c2c:	3504      	adds	r5, #4
90008c2e:	4f42      	ldr	r7, [pc, #264]	; (90008d38 <_ZN20screen_asteroidsView11setupScreenEv+0x124>)
90008c30:	449b      	add	fp, r3
90008c32:	f04f 0903 	mov.w	r9, #3
        setY(y);
90008c36:	f04f 0a4f 	mov.w	sl, #79	; 0x4f
		rocks[i].setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90008c3a:	46a0      	mov	r8, r4
90008c3c:	e023      	b.n	90008c86 <_ZN20screen_asteroidsView11setupScreenEv+0x72>
90008c3e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
        rect.x = x;
90008c40:	f8ab 1004 	strh.w	r1, [fp, #4]
        rect.y = y;
90008c44:	42ba      	cmp	r2, r7
90008c46:	d133      	bne.n	90008cb0 <_ZN20screen_asteroidsView11setupScreenEv+0x9c>
90008c48:	f8ab a006 	strh.w	sl, [fp, #6]
        setWidth(width);
90008c4c:	6b9a      	ldr	r2, [r3, #56]	; 0x38
90008c4e:	4658      	mov	r0, fp
90008c50:	2122      	movs	r1, #34	; 0x22
    for(int i = 0; i < ROCK_COUNT; i++) {
90008c52:	3422      	adds	r4, #34	; 0x22
90008c54:	4790      	blx	r2
        setHeight(height);
90008c56:	f8db 2000 	ldr.w	r2, [fp]
90008c5a:	4658      	mov	r0, fp
90008c5c:	211d      	movs	r1, #29
90008c5e:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
90008c60:	b2a4      	uxth	r4, r4
90008c62:	4790      	blx	r2
		rocks[i].setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90008c64:	f8db 2000 	ldr.w	r2, [fp]
90008c68:	4658      	mov	r0, fp
90008c6a:	2100      	movs	r1, #0
90008c6c:	6e52      	ldr	r2, [r2, #100]	; 0x64
90008c6e:	4790      	blx	r2
90008c70:	4659      	mov	r1, fp
        visible = vis;
90008c72:	f88b 8025 	strb.w	r8, [fp, #37]	; 0x25
90008c76:	4628      	mov	r0, r5
90008c78:	f00a fde0 	bl	9001383c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    for(int i = 0; i < ROCK_COUNT; i++) {
90008c7c:	f5b4 7faa 	cmp.w	r4, #340	; 0x154
90008c80:	f10b 0b2c 	add.w	fp, fp, #44	; 0x2c
90008c84:	d01a      	beq.n	90008cbc <_ZN20screen_asteroidsView11setupScreenEv+0xa8>
    	rocks[i].setBitmap(touchgfx::Bitmap(BITMAP_ASTEROIDS_ROCK_ID));
90008c86:	f8db 2000 	ldr.w	r2, [fp]
90008c8a:	a903      	add	r1, sp, #12
90008c8c:	4658      	mov	r0, fp
90008c8e:	f8ad 900c 	strh.w	r9, [sp, #12]
90008c92:	6e12      	ldr	r2, [r2, #96]	; 0x60
90008c94:	4790      	blx	r2
        setX(x);
90008c96:	f8db 3000 	ldr.w	r3, [fp]
    	rocks[i].setPosition(i*34, 79, 34, 29);
90008c9a:	b221      	sxth	r1, r4
90008c9c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
90008c9e:	42b2      	cmp	r2, r6
90008ca0:	d0cd      	beq.n	90008c3e <_ZN20screen_asteroidsView11setupScreenEv+0x2a>
90008ca2:	4658      	mov	r0, fp
90008ca4:	4790      	blx	r2
90008ca6:	f8db 3000 	ldr.w	r3, [fp]
        setY(y);
90008caa:	6b5a      	ldr	r2, [r3, #52]	; 0x34
90008cac:	42ba      	cmp	r2, r7
90008cae:	d0cb      	beq.n	90008c48 <_ZN20screen_asteroidsView11setupScreenEv+0x34>
90008cb0:	4658      	mov	r0, fp
90008cb2:	214f      	movs	r1, #79	; 0x4f
90008cb4:	4790      	blx	r2
90008cb6:	f8db 3000 	ldr.w	r3, [fp]
90008cba:	e7c7      	b.n	90008c4c <_ZN20screen_asteroidsView11setupScreenEv+0x38>
90008cbc:	9b01      	ldr	r3, [sp, #4]
90008cbe:	f242 340c 	movw	r4, #8972	; 0x230c
90008cc2:	f242 48c4 	movw	r8, #9412	; 0x24c4
        setX(x);
90008cc6:	f04f 0aee 	mov.w	sl, #238	; 0xee
90008cca:	441c      	add	r4, r3
        setY(y);
90008ccc:	f04f 09db 	mov.w	r9, #219	; 0xdb
90008cd0:	4498      	add	r8, r3
90008cd2:	e01c      	b.n	90008d0e <_ZN20screen_asteroidsView11setupScreenEv+0xfa>
90008cd4:	6b5a      	ldr	r2, [r3, #52]	; 0x34
        rect.x = x;
90008cd6:	f8a4 a004 	strh.w	sl, [r4, #4]
        rect.y = y;
90008cda:	42ba      	cmp	r2, r7
90008cdc:	d122      	bne.n	90008d24 <_ZN20screen_asteroidsView11setupScreenEv+0x110>
90008cde:	f8a4 9006 	strh.w	r9, [r4, #6]
        setWidth(width);
90008ce2:	4620      	mov	r0, r4
90008ce4:	2104      	movs	r1, #4
90008ce6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90008ce8:	4798      	blx	r3
        setHeight(height);
90008cea:	6823      	ldr	r3, [r4, #0]
90008cec:	4620      	mov	r0, r4
90008cee:	2104      	movs	r1, #4
90008cf0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90008cf2:	4798      	blx	r3
        color = newColor;
90008cf4:	f04f 32ff 	mov.w	r2, #4294967295
90008cf8:	4621      	mov	r1, r4
        visible = vis;
90008cfa:	2300      	movs	r3, #0
90008cfc:	62a2      	str	r2, [r4, #40]	; 0x28
    for(int i = 0; i < BULLET_COUNT; i++) {
90008cfe:	342c      	adds	r4, #44	; 0x2c
90008d00:	4628      	mov	r0, r5
90008d02:	f804 3c07 	strb.w	r3, [r4, #-7]
90008d06:	f00a fd99 	bl	9001383c <_ZN8touchgfx9Container3addERNS_8DrawableE>
90008d0a:	45a0      	cmp	r8, r4
90008d0c:	d00f      	beq.n	90008d2e <_ZN20screen_asteroidsView11setupScreenEv+0x11a>
        setX(x);
90008d0e:	6823      	ldr	r3, [r4, #0]
90008d10:	6b1a      	ldr	r2, [r3, #48]	; 0x30
90008d12:	42b2      	cmp	r2, r6
90008d14:	d0de      	beq.n	90008cd4 <_ZN20screen_asteroidsView11setupScreenEv+0xc0>
90008d16:	4620      	mov	r0, r4
90008d18:	21ee      	movs	r1, #238	; 0xee
90008d1a:	4790      	blx	r2
90008d1c:	6823      	ldr	r3, [r4, #0]
        setY(y);
90008d1e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
90008d20:	42ba      	cmp	r2, r7
90008d22:	d0dc      	beq.n	90008cde <_ZN20screen_asteroidsView11setupScreenEv+0xca>
90008d24:	4620      	mov	r0, r4
90008d26:	21db      	movs	r1, #219	; 0xdb
90008d28:	4790      	blx	r2
90008d2a:	6823      	ldr	r3, [r4, #0]
90008d2c:	e7d9      	b.n	90008ce2 <_ZN20screen_asteroidsView11setupScreenEv+0xce>
}
90008d2e:	b005      	add	sp, #20
90008d30:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90008d34:	9000452d 	.word	0x9000452d
90008d38:	90004531 	.word	0x90004531

90008d3c <_ZN27screen_game_selectPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~screen_game_selectPresenter() {}
90008d3c:	4770      	bx	lr
90008d3e:	bf00      	nop

90008d40 <_ZThn4_N27screen_game_selectPresenterD1Ev>:
90008d40:	3804      	subs	r0, #4
90008d42:	4770      	bx	lr

90008d44 <_ZN27screen_game_selectPresenter10deactivateEv>:
}

void screen_game_selectPresenter::activate()
{

}
90008d44:	4770      	bx	lr
90008d46:	bf00      	nop

90008d48 <_ZN27screen_game_selectPresenterD0Ev>:
90008d48:	b510      	push	{r4, lr}
90008d4a:	4604      	mov	r4, r0
90008d4c:	2110      	movs	r1, #16
90008d4e:	f020 ff66 	bl	90029c1e <_ZdlPvj>
90008d52:	4620      	mov	r0, r4
90008d54:	bd10      	pop	{r4, pc}
90008d56:	bf00      	nop

90008d58 <_ZThn4_N27screen_game_selectPresenterD0Ev>:
90008d58:	b500      	push	{lr}
90008d5a:	3804      	subs	r0, #4
90008d5c:	b083      	sub	sp, #12
90008d5e:	2110      	movs	r1, #16
90008d60:	9001      	str	r0, [sp, #4]
90008d62:	f020 ff5c 	bl	90029c1e <_ZdlPvj>
90008d66:	9801      	ldr	r0, [sp, #4]
90008d68:	b003      	add	sp, #12
90008d6a:	f85d fb04 	ldr.w	pc, [sp], #4
90008d6e:	bf00      	nop

90008d70 <_ZN27screen_game_selectPresenterC1ER22screen_game_selectView>:
    : view(v)
90008d70:	4a06      	ldr	r2, [pc, #24]	; (90008d8c <_ZN27screen_game_selectPresenterC1ER22screen_game_selectView+0x1c>)
90008d72:	60c1      	str	r1, [r0, #12]
screen_game_selectPresenter::screen_game_selectPresenter(screen_game_selectView& v)
90008d74:	b410      	push	{r4}
90008d76:	2400      	movs	r4, #0
90008d78:	6084      	str	r4, [r0, #8]
    : view(v)
90008d7a:	f102 0408 	add.w	r4, r2, #8
90008d7e:	3220      	adds	r2, #32
90008d80:	e9c0 4200 	strd	r4, r2, [r0]
}
90008d84:	f85d 4b04 	ldr.w	r4, [sp], #4
90008d88:	4770      	bx	lr
90008d8a:	bf00      	nop
90008d8c:	9002dc7c 	.word	0x9002dc7c

90008d90 <_ZN22screen_game_selectView14tearDownScreenEv>:
}

void screen_game_selectView::tearDownScreen()
{
    screen_game_selectViewBase::tearDownScreen();
}
90008d90:	4770      	bx	lr
90008d92:	bf00      	nop

90008d94 <_ZN22screen_game_selectViewD1Ev>:

class screen_game_selectView : public screen_game_selectViewBase
{
public:
    screen_game_selectView();
    virtual ~screen_game_selectView() {}
90008d94:	4b03      	ldr	r3, [pc, #12]	; (90008da4 <_ZN22screen_game_selectViewD1Ev+0x10>)
90008d96:	b510      	push	{r4, lr}
90008d98:	4604      	mov	r4, r0
90008d9a:	6003      	str	r3, [r0, #0]
90008d9c:	f7fe fd30 	bl	90007800 <_ZN26screen_game_selectViewBaseD1Ev>
90008da0:	4620      	mov	r0, r4
90008da2:	bd10      	pop	{r4, pc}
90008da4:	9002dccc 	.word	0x9002dccc

90008da8 <_ZN22screen_game_selectViewD0Ev>:
90008da8:	4b06      	ldr	r3, [pc, #24]	; (90008dc4 <_ZN22screen_game_selectViewD0Ev+0x1c>)
90008daa:	b510      	push	{r4, lr}
90008dac:	4604      	mov	r4, r0
90008dae:	6003      	str	r3, [r0, #0]
90008db0:	f7fe fd26 	bl	90007800 <_ZN26screen_game_selectViewBaseD1Ev>
90008db4:	f44f 71ca 	mov.w	r1, #404	; 0x194
90008db8:	4620      	mov	r0, r4
90008dba:	f020 ff30 	bl	90029c1e <_ZdlPvj>
90008dbe:	4620      	mov	r0, r4
90008dc0:	bd10      	pop	{r4, pc}
90008dc2:	bf00      	nop
90008dc4:	9002dccc 	.word	0x9002dccc

90008dc8 <_ZN22screen_game_selectViewC1Ev>:
screen_game_selectView::screen_game_selectView()
90008dc8:	b510      	push	{r4, lr}
90008dca:	4604      	mov	r4, r0
90008dcc:	f7fe fe24 	bl	90007a18 <_ZN26screen_game_selectViewBaseC1Ev>
90008dd0:	4b01      	ldr	r3, [pc, #4]	; (90008dd8 <_ZN22screen_game_selectViewC1Ev+0x10>)
}
90008dd2:	4620      	mov	r0, r4
screen_game_selectView::screen_game_selectView()
90008dd4:	6023      	str	r3, [r4, #0]
}
90008dd6:	bd10      	pop	{r4, pc}
90008dd8:	9002dccc 	.word	0x9002dccc

90008ddc <_ZN22screen_game_selectView11setupScreenEv>:
    screen_game_selectViewBase::setupScreen();
90008ddc:	f7fe bd12 	b.w	90007804 <_ZN26screen_game_selectViewBase11setupScreenEv>

90008de0 <FT5336_GetCapabilities>:
{
  /* Prevent unused argument(s) compilation warning */
  (void)(pObj);

  /* Store component's capabilities */
  Capabilities->MultiTouch = 1;
90008de0:	f240 1c01 	movw	ip, #257	; 0x101
  Capabilities->Gesture    = 1;
  Capabilities->MaxTouch   = FT5336_MAX_NB_TOUCH;
90008de4:	2005      	movs	r0, #5
  Capabilities->MaxXl      = FT5336_MAX_X_LENGTH;
90008de6:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
  Capabilities->MaxYl      = FT5336_MAX_Y_LENGTH;
90008dea:	f44f 7388 	mov.w	r3, #272	; 0x110
  Capabilities->MaxTouch   = FT5336_MAX_NB_TOUCH;
90008dee:	7088      	strb	r0, [r1, #2]

  return FT5336_OK;
}
90008df0:	2000      	movs	r0, #0
  Capabilities->MultiTouch = 1;
90008df2:	f8a1 c000 	strh.w	ip, [r1]
  Capabilities->MaxYl      = FT5336_MAX_Y_LENGTH;
90008df6:	e9c1 2301 	strd	r2, r3, [r1, #4]
}
90008dfa:	4770      	bx	lr

90008dfc <FT5336_DeInit>:
  */
int32_t FT5336_DeInit(FT5336_Object_t *pObj)
{
  int32_t ret = FT5336_OK;

  if(pObj->IsInitialized == 1U)
90008dfc:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
90008e00:	2b01      	cmp	r3, #1
90008e02:	d102      	bne.n	90008e0a <FT5336_DeInit+0xe>
  {
    pObj->IsInitialized = 0;
90008e04:	2300      	movs	r3, #0
90008e06:	f880 3024 	strb.w	r3, [r0, #36]	; 0x24
  }

  return ret;
}
90008e0a:	2000      	movs	r0, #0
90008e0c:	4770      	bx	lr
90008e0e:	bf00      	nop

90008e10 <FT5336_ITStatus>:
  /* Prevent unused argument(s) compilation warning */
  (void)(pObj);

  /* Always return FT5336_OK as feature not applicable to FT5336 */
  return FT5336_OK;
}
90008e10:	2000      	movs	r0, #0
90008e12:	4770      	bx	lr

90008e14 <ReadRegWrap>:
  * @param  pData: The target register value to be written
  * @param  Length: buffer size to be written
  * @retval error status
  */
static int32_t ReadRegWrap(void *handle, uint8_t Reg, uint8_t* pData, uint16_t Length)
{
90008e14:	b410      	push	{r4}
  FT5336_Object_t *pObj = (FT5336_Object_t *)handle;

  return pObj->IO.ReadReg(pObj->IO.Address, Reg, pData, Length);
90008e16:	6904      	ldr	r4, [r0, #16]
90008e18:	8900      	ldrh	r0, [r0, #8]
90008e1a:	46a4      	mov	ip, r4
}
90008e1c:	f85d 4b04 	ldr.w	r4, [sp], #4
  return pObj->IO.ReadReg(pObj->IO.Address, Reg, pData, Length);
90008e20:	4760      	bx	ip
90008e22:	bf00      	nop

90008e24 <WriteRegWrap>:
  * @param  pData: The target register value to be written
  * @param  Length: buffer size to be written
  * @retval error status
  */
static int32_t WriteRegWrap(void *handle, uint8_t Reg, uint8_t* pData, uint16_t Length)
{
90008e24:	b410      	push	{r4}
  FT5336_Object_t *pObj = (FT5336_Object_t *)handle;

  return pObj->IO.WriteReg(pObj->IO.Address, Reg, pData, Length);
90008e26:	68c4      	ldr	r4, [r0, #12]
90008e28:	8900      	ldrh	r0, [r0, #8]
90008e2a:	46a4      	mov	ip, r4
}
90008e2c:	f85d 4b04 	ldr.w	r4, [sp], #4
  return pObj->IO.WriteReg(pObj->IO.Address, Reg, pData, Length);
90008e30:	4760      	bx	ip
90008e32:	bf00      	nop

90008e34 <FT5336_GestureConfig>:
{
90008e34:	b570      	push	{r4, r5, r6, lr}
  ret = ft5336_radian_value(&pObj->Ctx, (uint8_t)GestureInit->Radian);
90008e36:	f100 0518 	add.w	r5, r0, #24
{
90008e3a:	460e      	mov	r6, r1
  ret = ft5336_radian_value(&pObj->Ctx, (uint8_t)GestureInit->Radian);
90008e3c:	7809      	ldrb	r1, [r1, #0]
90008e3e:	4628      	mov	r0, r5
90008e40:	f000 f96c 	bl	9000911c <ft5336_radian_value>
90008e44:	4604      	mov	r4, r0
  ret += ft5336_offset_left_right(&pObj->Ctx, (uint8_t)GestureInit->OffsetLeftRight);
90008e46:	7931      	ldrb	r1, [r6, #4]
90008e48:	4628      	mov	r0, r5
90008e4a:	f000 f975 	bl	90009138 <ft5336_offset_left_right>
90008e4e:	4404      	add	r4, r0
  ret += ft5336_offset_up_down(&pObj->Ctx, (uint8_t)GestureInit->OffsetUpDown);
90008e50:	7a31      	ldrb	r1, [r6, #8]
90008e52:	4628      	mov	r0, r5
90008e54:	f000 f97e 	bl	90009154 <ft5336_offset_up_down>
90008e58:	4404      	add	r4, r0
  ret += ft5336_disatnce_left_right(&pObj->Ctx, (uint8_t)GestureInit->DistanceLeftRight);
90008e5a:	7b31      	ldrb	r1, [r6, #12]
90008e5c:	4628      	mov	r0, r5
90008e5e:	f000 f987 	bl	90009170 <ft5336_disatnce_left_right>
  ret += ft5336_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
90008e62:	7c31      	ldrb	r1, [r6, #16]
  ret += ft5336_disatnce_left_right(&pObj->Ctx, (uint8_t)GestureInit->DistanceLeftRight);
90008e64:	4404      	add	r4, r0
  ret += ft5336_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
90008e66:	4628      	mov	r0, r5
90008e68:	f000 f990 	bl	9000918c <ft5336_distance_up_down>
90008e6c:	4603      	mov	r3, r0
  ret += ft5336_distance_zoom(&pObj->Ctx, (uint8_t)GestureInit->DistanceZoom);
90008e6e:	7d31      	ldrb	r1, [r6, #20]
90008e70:	4628      	mov	r0, r5
  ret += ft5336_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
90008e72:	441c      	add	r4, r3
  ret += ft5336_distance_zoom(&pObj->Ctx, (uint8_t)GestureInit->DistanceZoom);
90008e74:	f000 f998 	bl	900091a8 <ft5336_distance_zoom>
  if(ret != FT5336_OK)
90008e78:	42c4      	cmn	r4, r0
}
90008e7a:	bf14      	ite	ne
90008e7c:	f04f 30ff 	movne.w	r0, #4294967295
90008e80:	2000      	moveq	r0, #0
90008e82:	bd70      	pop	{r4, r5, r6, pc}

90008e84 <FT5336_ReadID>:
  return ft5336_chip_id(&pObj->Ctx, (uint8_t *)Id);
90008e84:	3018      	adds	r0, #24
90008e86:	f000 b9ab 	b.w	900091e0 <ft5336_chip_id>
90008e8a:	bf00      	nop

90008e8c <FT5336_GetState>:
{
90008e8c:	b530      	push	{r4, r5, lr}
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
90008e8e:	f100 0518 	add.w	r5, r0, #24
{
90008e92:	b083      	sub	sp, #12
90008e94:	460c      	mov	r4, r1
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
90008e96:	4628      	mov	r0, r5
90008e98:	a901      	add	r1, sp, #4
90008e9a:	f000 f931 	bl	90009100 <ft5336_td_status>
90008e9e:	bb10      	cbnz	r0, 90008ee6 <FT5336_GetState+0x5a>
    if(nb_touch > FT5336_MAX_NB_TOUCH)
90008ea0:	f89d 3004 	ldrb.w	r3, [sp, #4]
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
90008ea4:	2b05      	cmp	r3, #5
90008ea6:	bf94      	ite	ls
90008ea8:	4619      	movls	r1, r3
90008eaa:	2100      	movhi	r1, #0
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
90008eac:	2304      	movs	r3, #4
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
90008eae:	6021      	str	r1, [r4, #0]
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
90008eb0:	4628      	mov	r0, r5
90008eb2:	2103      	movs	r1, #3
90008eb4:	eb0d 0203 	add.w	r2, sp, r3
90008eb8:	f000 f910 	bl	900090dc <ft5336_read_reg>
90008ebc:	b9b0      	cbnz	r0, 90008eec <FT5336_GetState+0x60>
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
90008ebe:	f89d 2004 	ldrb.w	r2, [sp, #4]
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
90008ec2:	f89d 3006 	ldrb.w	r3, [sp, #6]
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
90008ec6:	0212      	lsls	r2, r2, #8
90008ec8:	f89d 1005 	ldrb.w	r1, [sp, #5]
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
90008ecc:	021b      	lsls	r3, r3, #8
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
90008ece:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
90008ed2:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
90008ed6:	430a      	orrs	r2, r1
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
90008ed8:	f89d 1007 	ldrb.w	r1, [sp, #7]
90008edc:	430b      	orrs	r3, r1
90008ede:	e9c4 2301 	strd	r2, r3, [r4, #4]
}
90008ee2:	b003      	add	sp, #12
90008ee4:	bd30      	pop	{r4, r5, pc}
90008ee6:	f04f 31ff 	mov.w	r1, #4294967295
90008eea:	e7df      	b.n	90008eac <FT5336_GetState+0x20>
    ret = FT5336_ERROR;
90008eec:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
90008ef0:	e7f7      	b.n	90008ee2 <FT5336_GetState+0x56>
90008ef2:	bf00      	nop

90008ef4 <FT5336_GetMultiTouchState>:
{
90008ef4:	b570      	push	{r4, r5, r6, lr}
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
90008ef6:	f100 0518 	add.w	r5, r0, #24
{
90008efa:	b088      	sub	sp, #32
90008efc:	460c      	mov	r4, r1
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
90008efe:	4628      	mov	r0, r5
90008f00:	4669      	mov	r1, sp
90008f02:	f000 f8fd 	bl	90009100 <ft5336_td_status>
90008f06:	2800      	cmp	r0, #0
90008f08:	f040 809a 	bne.w	90009040 <FT5336_GetMultiTouchState+0x14c>
    if(nb_touch > FT5336_MAX_NB_TOUCH)
90008f0c:	f89d 3000 	ldrb.w	r3, [sp]
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
90008f10:	2b05      	cmp	r3, #5
90008f12:	bf94      	ite	ls
90008f14:	4619      	movls	r1, r3
90008f16:	2100      	movhi	r1, #0
90008f18:	6021      	str	r1, [r4, #0]
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
90008f1a:	231e      	movs	r3, #30
90008f1c:	466a      	mov	r2, sp
90008f1e:	4628      	mov	r0, r5
90008f20:	2103      	movs	r1, #3
90008f22:	f000 f8db 	bl	900090dc <ft5336_read_reg>
90008f26:	2800      	cmp	r0, #0
90008f28:	f040 808d 	bne.w	90009046 <FT5336_GetMultiTouchState+0x152>
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90008f2c:	f89d 1000 	ldrb.w	r1, [sp]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90008f30:	f89d 3002 	ldrb.w	r3, [sp, #2]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90008f34:	020a      	lsls	r2, r1, #8
90008f36:	f89d 5001 	ldrb.w	r5, [sp, #1]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90008f3a:	021b      	lsls	r3, r3, #8
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90008f3c:	f89d c007 	ldrb.w	ip, [sp, #7]
90008f40:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90008f44:	0989      	lsrs	r1, r1, #6
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90008f46:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90008f4a:	f89d 6011 	ldrb.w	r6, [sp, #17]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90008f4e:	432a      	orrs	r2, r5
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90008f50:	f89d 5003 	ldrb.w	r5, [sp, #3]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90008f54:	6421      	str	r1, [r4, #64]	; 0x40
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90008f56:	0936      	lsrs	r6, r6, #4
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90008f58:	432b      	orrs	r3, r5
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90008f5a:	6062      	str	r2, [r4, #4]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90008f5c:	f89d 2004 	ldrb.w	r2, [sp, #4]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90008f60:	61a3      	str	r3, [r4, #24]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90008f62:	f89d 3005 	ldrb.w	r3, [sp, #5]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90008f66:	f89d 1006 	ldrb.w	r1, [sp, #6]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90008f6a:	091b      	lsrs	r3, r3, #4
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90008f6c:	62e2      	str	r2, [r4, #44]	; 0x2c
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90008f6e:	f89d 200b 	ldrb.w	r2, [sp, #11]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90008f72:	020d      	lsls	r5, r1, #8
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90008f74:	6563      	str	r3, [r4, #84]	; 0x54
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90008f76:	0989      	lsrs	r1, r1, #6
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90008f78:	f89d 300c 	ldrb.w	r3, [sp, #12]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90008f7c:	0912      	lsrs	r2, r2, #4
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90008f7e:	6461      	str	r1, [r4, #68]	; 0x44
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90008f80:	f405 6570 	and.w	r5, r5, #3840	; 0xf00
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90008f84:	f89d 100a 	ldrb.w	r1, [sp, #10]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90008f88:	65a2      	str	r2, [r4, #88]	; 0x58
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90008f8a:	021a      	lsls	r2, r3, #8
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90008f8c:	6321      	str	r1, [r4, #48]	; 0x30
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90008f8e:	ea45 050c 	orr.w	r5, r5, ip
90008f92:	f402 6170 	and.w	r1, r2, #3840	; 0xf00
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90008f96:	f89d 2008 	ldrb.w	r2, [sp, #8]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90008f9a:	099b      	lsrs	r3, r3, #6
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90008f9c:	60a5      	str	r5, [r4, #8]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90008f9e:	0212      	lsls	r2, r2, #8
90008fa0:	f89d 5009 	ldrb.w	r5, [sp, #9]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90008fa4:	64a3      	str	r3, [r4, #72]	; 0x48
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90008fa6:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90008faa:	f89d 3010 	ldrb.w	r3, [sp, #16]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90008fae:	432a      	orrs	r2, r5
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90008fb0:	6363      	str	r3, [r4, #52]	; 0x34
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90008fb2:	f89d 300e 	ldrb.w	r3, [sp, #14]
90008fb6:	61e2      	str	r2, [r4, #28]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90008fb8:	f89d 200d 	ldrb.w	r2, [sp, #13]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90008fbc:	021b      	lsls	r3, r3, #8
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90008fbe:	430a      	orrs	r2, r1
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90008fc0:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90008fc4:	60e2      	str	r2, [r4, #12]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90008fc6:	f89d 200f 	ldrb.w	r2, [sp, #15]
90008fca:	4313      	orrs	r3, r2
90008fcc:	6223      	str	r3, [r4, #32]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90008fce:	65e6      	str	r6, [r4, #92]	; 0x5c
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90008fd0:	f89d 1012 	ldrb.w	r1, [sp, #18]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90008fd4:	f89d 3014 	ldrb.w	r3, [sp, #20]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90008fd8:	020a      	lsls	r2, r1, #8
90008fda:	f89d 5013 	ldrb.w	r5, [sp, #19]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90008fde:	021b      	lsls	r3, r3, #8
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90008fe0:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90008fe4:	0989      	lsrs	r1, r1, #6
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90008fe6:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90008fea:	432a      	orrs	r2, r5
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90008fec:	f89d 5015 	ldrb.w	r5, [sp, #21]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90008ff0:	64e1      	str	r1, [r4, #76]	; 0x4c
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90008ff2:	432b      	orrs	r3, r5
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90008ff4:	f89d 1018 	ldrb.w	r1, [sp, #24]
90008ff8:	6122      	str	r2, [r4, #16]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90008ffa:	6263      	str	r3, [r4, #36]	; 0x24
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90008ffc:	020b      	lsls	r3, r1, #8
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90008ffe:	f89d 2016 	ldrb.w	r2, [sp, #22]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90009002:	0989      	lsrs	r1, r1, #6
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90009004:	f89d 5017 	ldrb.w	r5, [sp, #23]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90009008:	63a2      	str	r2, [r4, #56]	; 0x38
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
9000900a:	f403 6270 	and.w	r2, r3, #3840	; 0xf00
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
9000900e:	f89d 301d 	ldrb.w	r3, [sp, #29]
90009012:	092d      	lsrs	r5, r5, #4
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90009014:	6521      	str	r1, [r4, #80]	; 0x50
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90009016:	091b      	lsrs	r3, r3, #4
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90009018:	f89d 101c 	ldrb.w	r1, [sp, #28]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
9000901c:	6625      	str	r5, [r4, #96]	; 0x60
9000901e:	6663      	str	r3, [r4, #100]	; 0x64
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90009020:	f89d 301a 	ldrb.w	r3, [sp, #26]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90009024:	63e1      	str	r1, [r4, #60]	; 0x3c
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90009026:	021b      	lsls	r3, r3, #8
90009028:	f89d 101b 	ldrb.w	r1, [sp, #27]
9000902c:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
90009030:	430b      	orrs	r3, r1
90009032:	62a3      	str	r3, [r4, #40]	; 0x28
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90009034:	f89d 3019 	ldrb.w	r3, [sp, #25]
90009038:	4313      	orrs	r3, r2
9000903a:	6163      	str	r3, [r4, #20]
}
9000903c:	b008      	add	sp, #32
9000903e:	bd70      	pop	{r4, r5, r6, pc}
90009040:	f04f 31ff 	mov.w	r1, #4294967295
90009044:	e768      	b.n	90008f18 <FT5336_GetMultiTouchState+0x24>
    ret = FT5336_ERROR;
90009046:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
9000904a:	e7f7      	b.n	9000903c <FT5336_GetMultiTouchState+0x148>

9000904c <FT5336_GetGesture>:
  return ft5336_gest_id(&pObj->Ctx, GestureId);
9000904c:	3018      	adds	r0, #24
9000904e:	f000 b84d 	b.w	900090ec <ft5336_gest_id>
90009052:	bf00      	nop

90009054 <FT5336_EnableIT>:
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_TRIGGER);
90009054:	2101      	movs	r1, #1
90009056:	3018      	adds	r0, #24
90009058:	f000 b8b4 	b.w	900091c4 <ft5336_g_mode>

9000905c <FT5336_DisableIT>:
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_POLLING);
9000905c:	2100      	movs	r1, #0
9000905e:	3018      	adds	r0, #24
90009060:	f000 b8b0 	b.w	900091c4 <ft5336_g_mode>

90009064 <FT5336_Init>:
{
90009064:	b570      	push	{r4, r5, r6, lr}
  if(pObj->IsInitialized == 0U)
90009066:	f890 5024 	ldrb.w	r5, [r0, #36]	; 0x24
9000906a:	b98d      	cbnz	r5, 90009090 <FT5336_Init+0x2c>
    pObj->IO.Init();
9000906c:	4606      	mov	r6, r0
9000906e:	4604      	mov	r4, r0
90009070:	f856 3b18 	ldr.w	r3, [r6], #24
90009074:	4798      	blx	r3
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_POLLING);
90009076:	4629      	mov	r1, r5
90009078:	4630      	mov	r0, r6
9000907a:	f000 f8a3 	bl	900091c4 <ft5336_g_mode>
  if(ret != FT5336_OK)
9000907e:	3800      	subs	r0, #0
    pObj->IsInitialized = 1;
90009080:	f04f 0301 	mov.w	r3, #1
  if(ret != FT5336_OK)
90009084:	bf18      	it	ne
90009086:	2001      	movne	r0, #1
    pObj->IsInitialized = 1;
90009088:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
  if(ret != FT5336_OK)
9000908c:	4240      	negs	r0, r0
}
9000908e:	bd70      	pop	{r4, r5, r6, pc}
  int32_t ret = FT5336_OK;
90009090:	2000      	movs	r0, #0
}
90009092:	bd70      	pop	{r4, r5, r6, pc}

90009094 <FT5336_ClearIT>:
90009094:	2000      	movs	r0, #0
90009096:	4770      	bx	lr

90009098 <FT5336_RegisterBusIO>:
  if (pObj == NULL)
90009098:	b1c0      	cbz	r0, 900090cc <FT5336_RegisterBusIO+0x34>
    pObj->IO.Address   = pIO->Address;
9000909a:	890a      	ldrh	r2, [r1, #8]
{
9000909c:	b430      	push	{r4, r5}
    pObj->IO.DeInit    = pIO->DeInit;
9000909e:	e9d1 3400 	ldrd	r3, r4, [r1]
    pObj->IO.Address   = pIO->Address;
900090a2:	8102      	strh	r2, [r0, #8]
    pObj->IO.DeInit    = pIO->DeInit;
900090a4:	e9c0 3400 	strd	r3, r4, [r0]
    pObj->IO.WriteReg  = pIO->WriteReg;
900090a8:	694a      	ldr	r2, [r1, #20]
900090aa:	e9d1 5403 	ldrd	r5, r4, [r1, #12]
    pObj->Ctx.ReadReg  = ReadRegWrap;
900090ae:	4909      	ldr	r1, [pc, #36]	; (900090d4 <FT5336_RegisterBusIO+0x3c>)
    pObj->IO.WriteReg  = pIO->WriteReg;
900090b0:	60c5      	str	r5, [r0, #12]
900090b2:	e9c0 4204 	strd	r4, r2, [r0, #16]
    pObj->Ctx.WriteReg = WriteRegWrap;
900090b6:	4a08      	ldr	r2, [pc, #32]	; (900090d8 <FT5336_RegisterBusIO+0x40>)
    pObj->Ctx.handle   = pObj;
900090b8:	e9c0 1007 	strd	r1, r0, [r0, #28]
    pObj->Ctx.WriteReg = WriteRegWrap;
900090bc:	6182      	str	r2, [r0, #24]
    if(pObj->IO.Init != NULL)
900090be:	b10b      	cbz	r3, 900090c4 <FT5336_RegisterBusIO+0x2c>
}
900090c0:	bc30      	pop	{r4, r5}
      ret = pObj->IO.Init();
900090c2:	4718      	bx	r3
}
900090c4:	f04f 30ff 	mov.w	r0, #4294967295
900090c8:	bc30      	pop	{r4, r5}
900090ca:	4770      	bx	lr
900090cc:	f04f 30ff 	mov.w	r0, #4294967295
900090d0:	4770      	bx	lr
900090d2:	bf00      	nop
900090d4:	90008e15 	.word	0x90008e15
900090d8:	90008e25 	.word	0x90008e25

900090dc <ft5336_read_reg>:
  * @param  pdata pointer to data to be read
  * @param  length Length of data to read   
  * @retval Component status
  */
int32_t ft5336_read_reg(ft5336_ctx_t *ctx, uint8_t reg, uint8_t* pdata, uint16_t length)
{
900090dc:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
900090de:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
900090e2:	46a4      	mov	ip, r4
}
900090e4:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
900090e8:	4760      	bx	ip
900090ea:	bf00      	nop

900090ec <ft5336_gest_id>:
  * @param  ctx Component context 
  * @param  value pointer to the value of FT5336_GEST_ID_REG register
  * @retval Component status
  */
int32_t  ft5336_gest_id(ft5336_ctx_t *ctx, uint8_t *value)
{
900090ec:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
900090ee:	2301      	movs	r3, #1
{
900090f0:	460a      	mov	r2, r1
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
900090f2:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
900090f6:	4619      	mov	r1, r3
900090f8:	46a4      	mov	ip, r4
  return ft5336_read_reg(ctx, FT5336_GEST_ID_REG, (uint8_t *)value, 1);
}
900090fa:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
900090fe:	4760      	bx	ip

90009100 <ft5336_td_status>:
  * @param  ctx Component context 
  * @param  value pointer to the value of Touch Data Status register
  * @retval Component status
  */
int32_t  ft5336_td_status(ft5336_ctx_t *ctx, uint8_t *value)
{
90009100:	b538      	push	{r3, r4, r5, lr}
90009102:	460c      	mov	r4, r1
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90009104:	2301      	movs	r3, #1
90009106:	2102      	movs	r1, #2
90009108:	4622      	mov	r2, r4
9000910a:	e9d0 5001 	ldrd	r5, r0, [r0, #4]
9000910e:	47a8      	blx	r5
  int32_t ret;
  
  ret = ft5336_read_reg(ctx, FT5336_TD_STAT_REG, (uint8_t *)value, 1);
  
  if(ret == 0)
90009110:	b918      	cbnz	r0, 9000911a <ft5336_td_status+0x1a>
  {
    *value &= FT5336_TD_STATUS_BIT_MASK; 
90009112:	7823      	ldrb	r3, [r4, #0]
90009114:	f003 030f 	and.w	r3, r3, #15
90009118:	7023      	strb	r3, [r4, #0]
    *value = *value >> FT5336_TD_STATUS_BIT_POSITION; 
  }
  
  return ret;
}
9000911a:	bd38      	pop	{r3, r4, r5, pc}

9000911c <ft5336_radian_value>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_RADIAN_VALUE_REG register
  * @retval Component status
  */
int32_t  ft5336_radian_value(ft5336_ctx_t *ctx, uint8_t value)
{
9000911c:	b510      	push	{r4, lr}
9000911e:	460c      	mov	r4, r1
90009120:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90009122:	2301      	movs	r3, #1
90009124:	2191      	movs	r1, #145	; 0x91
{
90009126:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
9000912a:	f10d 0207 	add.w	r2, sp, #7
9000912e:	6804      	ldr	r4, [r0, #0]
90009130:	6880      	ldr	r0, [r0, #8]
90009132:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_RADIAN_VALUE_REG, &value, 1);
}
90009134:	b002      	add	sp, #8
90009136:	bd10      	pop	{r4, pc}

90009138 <ft5336_offset_left_right>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_OFFSET_LR_REG register
  * @retval Component status
  */
int32_t  ft5336_offset_left_right(ft5336_ctx_t *ctx, uint8_t value)
{
90009138:	b510      	push	{r4, lr}
9000913a:	460c      	mov	r4, r1
9000913c:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
9000913e:	2301      	movs	r3, #1
90009140:	2192      	movs	r1, #146	; 0x92
{
90009142:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90009146:	f10d 0207 	add.w	r2, sp, #7
9000914a:	6804      	ldr	r4, [r0, #0]
9000914c:	6880      	ldr	r0, [r0, #8]
9000914e:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_OFFSET_LR_REG, &value, 1);
}
90009150:	b002      	add	sp, #8
90009152:	bd10      	pop	{r4, pc}

90009154 <ft5336_offset_up_down>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_OFFSET_UD_REG register
  * @retval Component status
  */
int32_t  ft5336_offset_up_down(ft5336_ctx_t *ctx, uint8_t value)
{
90009154:	b510      	push	{r4, lr}
90009156:	460c      	mov	r4, r1
90009158:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
9000915a:	2301      	movs	r3, #1
9000915c:	2193      	movs	r1, #147	; 0x93
{
9000915e:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90009162:	f10d 0207 	add.w	r2, sp, #7
90009166:	6804      	ldr	r4, [r0, #0]
90009168:	6880      	ldr	r0, [r0, #8]
9000916a:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_OFFSET_UD_REG, &value, 1);
}
9000916c:	b002      	add	sp, #8
9000916e:	bd10      	pop	{r4, pc}

90009170 <ft5336_disatnce_left_right>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_LR_REG register
  * @retval Component status
  */
int32_t  ft5336_disatnce_left_right(ft5336_ctx_t *ctx, uint8_t value)
{
90009170:	b510      	push	{r4, lr}
90009172:	460c      	mov	r4, r1
90009174:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90009176:	2301      	movs	r3, #1
90009178:	2194      	movs	r1, #148	; 0x94
{
9000917a:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
9000917e:	f10d 0207 	add.w	r2, sp, #7
90009182:	6804      	ldr	r4, [r0, #0]
90009184:	6880      	ldr	r0, [r0, #8]
90009186:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_DISTANCE_LR_REG, &value, 1);
}
90009188:	b002      	add	sp, #8
9000918a:	bd10      	pop	{r4, pc}

9000918c <ft5336_distance_up_down>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_UD_REG register
  * @retval Component status
  */
int32_t  ft5336_distance_up_down(ft5336_ctx_t *ctx, uint8_t value)
{
9000918c:	b510      	push	{r4, lr}
9000918e:	460c      	mov	r4, r1
90009190:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90009192:	2301      	movs	r3, #1
90009194:	2195      	movs	r1, #149	; 0x95
{
90009196:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
9000919a:	f10d 0207 	add.w	r2, sp, #7
9000919e:	6804      	ldr	r4, [r0, #0]
900091a0:	6880      	ldr	r0, [r0, #8]
900091a2:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_DISTANCE_UD_REG, &value, 1);
}
900091a4:	b002      	add	sp, #8
900091a6:	bd10      	pop	{r4, pc}

900091a8 <ft5336_distance_zoom>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_ZOOM_REG register
  * @retval Component status
  */
int32_t  ft5336_distance_zoom(ft5336_ctx_t *ctx, uint8_t value)
{
900091a8:	b510      	push	{r4, lr}
900091aa:	460c      	mov	r4, r1
900091ac:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
900091ae:	2301      	movs	r3, #1
900091b0:	2196      	movs	r1, #150	; 0x96
{
900091b2:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
900091b6:	f10d 0207 	add.w	r2, sp, #7
900091ba:	6804      	ldr	r4, [r0, #0]
900091bc:	6880      	ldr	r0, [r0, #8]
900091be:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_DISTANCE_ZOOM_REG, &value, 1);
}
900091c0:	b002      	add	sp, #8
900091c2:	bd10      	pop	{r4, pc}

900091c4 <ft5336_g_mode>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_GMODE_REG register
  * @retval Component status
  */
int32_t  ft5336_g_mode(ft5336_ctx_t *ctx, uint8_t value)
{
900091c4:	b510      	push	{r4, lr}
900091c6:	460c      	mov	r4, r1
900091c8:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
900091ca:	2301      	movs	r3, #1
900091cc:	21a4      	movs	r1, #164	; 0xa4
{
900091ce:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
900091d2:	f10d 0207 	add.w	r2, sp, #7
900091d6:	6804      	ldr	r4, [r0, #0]
900091d8:	6880      	ldr	r0, [r0, #8]
900091da:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_GMODE_REG, &value, 1);
}
900091dc:	b002      	add	sp, #8
900091de:	bd10      	pop	{r4, pc}

900091e0 <ft5336_chip_id>:
  * @param  ctx Component context 
  * @param  value Pointer to FT5336_CHIP_ID_REG register value
  * @retval Component status
  */
int32_t  ft5336_chip_id(ft5336_ctx_t *ctx, uint8_t *value)
{
900091e0:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
900091e2:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
{
900091e6:	460a      	mov	r2, r1
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
900091e8:	2301      	movs	r3, #1
900091ea:	46a4      	mov	ip, r4
900091ec:	21a8      	movs	r1, #168	; 0xa8
    *value &= FT5336_CHIP_ID_BIT_MASK; 
    *value = *value >> FT5336_CHIP_ID_BIT_POSITION; 
  }
  
  return ret;
}
900091ee:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
900091f2:	4760      	bx	ip

900091f4 <MT48LC4M32B2_Init>:
  * @param  Ctx : Component object pointer
  * @param  pRegMode : Pointer to Register Mode stucture
  * @retval error status
  */
int32_t MT48LC4M32B2_Init(SDRAM_HandleTypeDef *Ctx, MT48LC4M32B2_Context_t *pRegMode) 
{
900091f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  int32_t ret = MT48LC4M32B2_ERROR;
  
  /* Step 1: Configure a clock configuration enable command */
  if(MT48LC4M32B2_ClockEnable(Ctx, pRegMode->TargetBank) == MT48LC4M32B2_OK)
900091f6:	680b      	ldr	r3, [r1, #0]
{
900091f8:	460d      	mov	r5, r1
  * @param  Interface : Could be FMC_SDRAM_CMD_TARGET_BANK1 or FMC_SDRAM_CMD_TARGET_BANK2
  * @retval error status
  */
int32_t MT48LC4M32B2_ClockEnable(SDRAM_HandleTypeDef *Ctx, uint32_t Interface) 
{
  Command.CommandMode            = MT48LC4M32B2_CLK_ENABLE_CMD;
900091fa:	4c2a      	ldr	r4, [pc, #168]	; (900092a4 <MT48LC4M32B2_Init+0xb0>)
  Command.CommandTarget          = Interface;
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
900091fc:	f64f 72ff 	movw	r2, #65535	; 0xffff
{
90009200:	4607      	mov	r7, r0
  Command.CommandTarget          = Interface;
90009202:	6063      	str	r3, [r4, #4]
  Command.ModeRegisterDefinition = 0;
90009204:	2300      	movs	r3, #0
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90009206:	4621      	mov	r1, r4
  Command.ModeRegisterDefinition = 0;
90009208:	60e3      	str	r3, [r4, #12]
  Command.CommandMode            = MT48LC4M32B2_CLK_ENABLE_CMD;
9000920a:	2301      	movs	r3, #1
9000920c:	6023      	str	r3, [r4, #0]
  Command.AutoRefreshNumber      = 1;
9000920e:	60a3      	str	r3, [r4, #8]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90009210:	f005 fed4 	bl	9000efbc <HAL_SDRAM_SendCommand>
90009214:	2800      	cmp	r0, #0
90009216:	d142      	bne.n	9000929e <MT48LC4M32B2_Init+0xaa>
  * @retval MT48LC4M32B2_OK
  */
static int32_t MT48LC4M32B2_Delay(uint32_t Delay)
{  
  uint32_t tickstart;
  tickstart = HAL_GetTick();
90009218:	f000 ff46 	bl	9000a0a8 <HAL_GetTick>
9000921c:	4606      	mov	r6, r0
  while((HAL_GetTick() - tickstart) < Delay)
9000921e:	f000 ff43 	bl	9000a0a8 <HAL_GetTick>
90009222:	4286      	cmp	r6, r0
90009224:	d0fb      	beq.n	9000921e <MT48LC4M32B2_Init+0x2a>
  Command.CommandMode            = MT48LC4M32B2_PALL_CMD;
90009226:	2302      	movs	r3, #2
    if(MT48LC4M32B2_Precharge(Ctx, pRegMode->TargetBank) == MT48LC4M32B2_OK)
90009228:	682a      	ldr	r2, [r5, #0]
  Command.AutoRefreshNumber      = 1;
9000922a:	2601      	movs	r6, #1
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
9000922c:	491d      	ldr	r1, [pc, #116]	; (900092a4 <MT48LC4M32B2_Init+0xb0>)
  Command.CommandMode            = MT48LC4M32B2_PALL_CMD;
9000922e:	6023      	str	r3, [r4, #0]
  Command.ModeRegisterDefinition = 0;
90009230:	2300      	movs	r3, #0
  Command.CommandTarget          = Interface;
90009232:	6062      	str	r2, [r4, #4]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90009234:	4638      	mov	r0, r7
90009236:	f64f 72ff 	movw	r2, #65535	; 0xffff
  Command.AutoRefreshNumber      = 1;
9000923a:	60a6      	str	r6, [r4, #8]
  Command.ModeRegisterDefinition = 0;
9000923c:	60e3      	str	r3, [r4, #12]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
9000923e:	f005 febd 	bl	9000efbc <HAL_SDRAM_SendCommand>
90009242:	bb60      	cbnz	r0, 9000929e <MT48LC4M32B2_Init+0xaa>
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90009244:	4917      	ldr	r1, [pc, #92]	; (900092a4 <MT48LC4M32B2_Init+0xb0>)
  Command.CommandMode            = RefreshMode;
90009246:	e9d5 3200 	ldrd	r3, r2, [r5]
  Command.ModeRegisterDefinition = 0;
9000924a:	60e0      	str	r0, [r4, #12]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
9000924c:	4638      	mov	r0, r7
  Command.CommandMode            = RefreshMode;
9000924e:	e9c4 2300 	strd	r2, r3, [r4]
  Command.AutoRefreshNumber      = 8;
90009252:	2308      	movs	r3, #8
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90009254:	f64f 72ff 	movw	r2, #65535	; 0xffff
  Command.AutoRefreshNumber      = 8;
90009258:	60a3      	str	r3, [r4, #8]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
9000925a:	f005 feaf 	bl	9000efbc <HAL_SDRAM_SendCommand>
9000925e:	b9f0      	cbnz	r0, 9000929e <MT48LC4M32B2_Init+0xaa>
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90009260:	4910      	ldr	r1, [pc, #64]	; (900092a4 <MT48LC4M32B2_Init+0xb0>)
90009262:	4638      	mov	r0, r7
  tmpmrd = (uint32_t)pRegMode->BurstLength   |\
90009264:	e9d5 3203 	ldrd	r3, r2, [r5, #12]
90009268:	4313      	orrs	r3, r2
                     pRegMode->BurstType     |\
9000926a:	696a      	ldr	r2, [r5, #20]
9000926c:	4313      	orrs	r3, r2
                     pRegMode->CASLatency    |\
9000926e:	69aa      	ldr	r2, [r5, #24]
90009270:	4313      	orrs	r3, r2
  tmpmrd = (uint32_t)pRegMode->BurstLength   |\
90009272:	69ea      	ldr	r2, [r5, #28]
90009274:	4313      	orrs	r3, r2
  Command.CommandTarget          = pRegMode->TargetBank;
90009276:	682a      	ldr	r2, [r5, #0]
  Command.ModeRegisterDefinition = tmpmrd;
90009278:	60e3      	str	r3, [r4, #12]
  Command.CommandMode            = MT48LC4M32B2_LOAD_MODE_CMD;
9000927a:	2304      	movs	r3, #4
  Command.CommandTarget          = pRegMode->TargetBank;
9000927c:	e9c4 2601 	strd	r2, r6, [r4, #4]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90009280:	f64f 72ff 	movw	r2, #65535	; 0xffff
  Command.CommandMode            = MT48LC4M32B2_LOAD_MODE_CMD;
90009284:	6023      	str	r3, [r4, #0]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90009286:	f005 fe99 	bl	9000efbc <HAL_SDRAM_SendCommand>
9000928a:	b940      	cbnz	r0, 9000929e <MT48LC4M32B2_Init+0xaa>
  if(HAL_SDRAM_ProgramRefreshRate(Ctx, RefreshCount) != HAL_OK)
9000928c:	68a9      	ldr	r1, [r5, #8]
9000928e:	4638      	mov	r0, r7
90009290:	f005 feb4 	bl	9000effc <HAL_SDRAM_ProgramRefreshRate>
90009294:	3800      	subs	r0, #0
90009296:	bf18      	it	ne
90009298:	2001      	movne	r0, #1
9000929a:	4240      	negs	r0, r0
}
9000929c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  int32_t ret = MT48LC4M32B2_ERROR;
9000929e:	f04f 30ff 	mov.w	r0, #4294967295
}
900092a2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
900092a4:	240096bc 	.word	0x240096bc

900092a8 <BSP_I2C4_DeInit>:
  */
int32_t BSP_I2C4_DeInit(void)
{
  int32_t ret  = BSP_ERROR_NONE;

  I2c4InitCounter--;
900092a8:	4a10      	ldr	r2, [pc, #64]	; (900092ec <BSP_I2C4_DeInit+0x44>)
{
900092aa:	b508      	push	{r3, lr}
  I2c4InitCounter--;
900092ac:	6813      	ldr	r3, [r2, #0]
900092ae:	3b01      	subs	r3, #1
900092b0:	6013      	str	r3, [r2, #0]

  if (I2c4InitCounter == 0U)
900092b2:	b10b      	cbz	r3, 900092b8 <BSP_I2C4_DeInit+0x10>
  int32_t ret  = BSP_ERROR_NONE;
900092b4:	2000      	movs	r0, #0
      ret = BSP_ERROR_BUS_FAILURE;
    }
  }

  return ret;
}
900092b6:	bd08      	pop	{r3, pc}
  /* Prevent unused argument(s) compilation warning */
  UNUSED(phi2c);

  /* Configure I2C Tx, Rx as alternate function */
  gpio_init_structure.Pin = BUS_I2C4_SCL_PIN;
  HAL_GPIO_DeInit(BUS_I2C4_SCL_GPIO_PORT, gpio_init_structure.Pin );
900092b8:	f44f 5180 	mov.w	r1, #4096	; 0x1000
900092bc:	480c      	ldr	r0, [pc, #48]	; (900092f0 <BSP_I2C4_DeInit+0x48>)
900092be:	f001 faaf 	bl	9000a820 <HAL_GPIO_DeInit>
  gpio_init_structure.Pin = BUS_I2C4_SDA_PIN;
  HAL_GPIO_DeInit(BUS_I2C4_SDA_GPIO_PORT, gpio_init_structure.Pin);
900092c2:	480b      	ldr	r0, [pc, #44]	; (900092f0 <BSP_I2C4_DeInit+0x48>)
900092c4:	f44f 5100 	mov.w	r1, #8192	; 0x2000
900092c8:	f001 faaa 	bl	9000a820 <HAL_GPIO_DeInit>

  /* Disable I2C clock */
  BUS_I2C4_CLK_DISABLE();
900092cc:	4a09      	ldr	r2, [pc, #36]	; (900092f4 <BSP_I2C4_DeInit+0x4c>)
    if (HAL_I2C_DeInit(&hbus_i2c4) != HAL_OK)
900092ce:	480a      	ldr	r0, [pc, #40]	; (900092f8 <BSP_I2C4_DeInit+0x50>)
  BUS_I2C4_CLK_DISABLE();
900092d0:	f8d2 30f4 	ldr.w	r3, [r2, #244]	; 0xf4
900092d4:	f023 0380 	bic.w	r3, r3, #128	; 0x80
900092d8:	f8c2 30f4 	str.w	r3, [r2, #244]	; 0xf4
    if (HAL_I2C_DeInit(&hbus_i2c4) != HAL_OK)
900092dc:	f001 fd48 	bl	9000ad70 <HAL_I2C_DeInit>
900092e0:	2800      	cmp	r0, #0
900092e2:	d0e7      	beq.n	900092b4 <BSP_I2C4_DeInit+0xc>
      ret = BSP_ERROR_BUS_FAILURE;
900092e4:	f06f 0007 	mvn.w	r0, #7
}
900092e8:	bd08      	pop	{r3, pc}
900092ea:	bf00      	nop
900092ec:	240096cc 	.word	0x240096cc
900092f0:	58020c00 	.word	0x58020c00
900092f4:	58024400 	.word	0x58024400
900092f8:	2400a0d4 	.word	0x2400a0d4

900092fc <MX_I2C4_Init>:
  hI2c->Init.OwnAddress1      = 0;
900092fc:	2300      	movs	r3, #0
  hI2c->Init.AddressingMode   = I2C_ADDRESSINGMODE_7BIT;
900092fe:	2201      	movs	r2, #1
{
90009300:	b510      	push	{r4, lr}
  hI2c->Init.OwnAddress1      = 0;
90009302:	e9c0 1301 	strd	r1, r3, [r0, #4]
  hI2c->Init.DualAddressMode  = I2C_DUALADDRESS_DISABLE;
90009306:	e9c0 2303 	strd	r2, r3, [r0, #12]
  hI2c->Init.OwnAddress2Masks = I2C_OA2_NOMASK;
9000930a:	e9c0 3305 	strd	r3, r3, [r0, #20]
  hI2c->Init.NoStretchMode    = I2C_NOSTRETCH_DISABLE;
9000930e:	e9c0 3307 	strd	r3, r3, [r0, #28]
{
90009312:	4604      	mov	r4, r0
  if (HAL_I2C_Init(hI2c) != HAL_OK)
90009314:	f001 fcd4 	bl	9000acc0 <HAL_I2C_Init>
90009318:	b108      	cbz	r0, 9000931e <MX_I2C4_Init+0x22>
    status = HAL_ERROR;
9000931a:	2001      	movs	r0, #1
}
9000931c:	bd10      	pop	{r4, pc}
    if (HAL_I2CEx_ConfigAnalogFilter(hI2c, analog_filter) != HAL_OK)
9000931e:	4601      	mov	r1, r0
90009320:	4620      	mov	r0, r4
90009322:	f001 ffe3 	bl	9000b2ec <HAL_I2CEx_ConfigAnalogFilter>
90009326:	2800      	cmp	r0, #0
90009328:	d1f7      	bne.n	9000931a <MX_I2C4_Init+0x1e>
      if (HAL_I2CEx_ConfigDigitalFilter(hI2c, I2C_DIGITAL_FILTER_COEF) != HAL_OK)
9000932a:	4601      	mov	r1, r0
9000932c:	4620      	mov	r0, r4
9000932e:	f002 f807 	bl	9000b340 <HAL_I2CEx_ConfigDigitalFilter>
    status = HAL_ERROR;
90009332:	3800      	subs	r0, #0
90009334:	bf18      	it	ne
90009336:	2001      	movne	r0, #1
}
90009338:	bd10      	pop	{r4, pc}
9000933a:	bf00      	nop

9000933c <BSP_I2C4_Init>:
  if (I2c4InitCounter == 0U)
9000933c:	4b99      	ldr	r3, [pc, #612]	; (900095a4 <BSP_I2C4_Init+0x268>)
  hbus_i2c4.Instance = BUS_I2C4;
9000933e:	489a      	ldr	r0, [pc, #616]	; (900095a8 <BSP_I2C4_Init+0x26c>)
90009340:	4a9a      	ldr	r2, [pc, #616]	; (900095ac <BSP_I2C4_Init+0x270>)
  if (I2c4InitCounter == 0U)
90009342:	6819      	ldr	r1, [r3, #0]
{
90009344:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90009348:	b09f      	sub	sp, #124	; 0x7c
  hbus_i2c4.Instance = BUS_I2C4;
9000934a:	6002      	str	r2, [r0, #0]
  if (I2c4InitCounter == 0U)
9000934c:	9103      	str	r1, [sp, #12]
9000934e:	b119      	cbz	r1, 90009358 <BSP_I2C4_Init+0x1c>
  int32_t ret = BSP_ERROR_NONE;
90009350:	2000      	movs	r0, #0
}
90009352:	b01f      	add	sp, #124	; 0x7c
90009354:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    I2c4InitCounter++;
90009358:	2201      	movs	r2, #1
9000935a:	601a      	str	r2, [r3, #0]
    if (HAL_I2C_GetState(&hbus_i2c4) == HAL_I2C_STATE_RESET)
9000935c:	f001 ffc0 	bl	9000b2e0 <HAL_I2C_GetState>
90009360:	2800      	cmp	r0, #0
90009362:	d1f5      	bne.n	90009350 <BSP_I2C4_Init+0x14>
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
90009364:	4c92      	ldr	r4, [pc, #584]	; (900095b0 <BSP_I2C4_Init+0x274>)
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
90009366:	f44f 5080 	mov.w	r0, #4096	; 0x1000
9000936a:	2112      	movs	r1, #18
  gpio_init_structure.Alternate = BUS_I2C4_SCL_AF;
9000936c:	2504      	movs	r5, #4
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
9000936e:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
90009372:	2600      	movs	r6, #0
90009374:	2702      	movs	r7, #2
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
90009376:	f043 0308 	orr.w	r3, r3, #8
9000937a:	f8c4 30e0 	str.w	r3, [r4, #224]	; 0xe0
9000937e:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
90009382:	f003 0308 	and.w	r3, r3, #8
90009386:	9315      	str	r3, [sp, #84]	; 0x54
90009388:	9b15      	ldr	r3, [sp, #84]	; 0x54
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
9000938a:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
9000938e:	f043 0308 	orr.w	r3, r3, #8
90009392:	f8c4 30e0 	str.w	r3, [r4, #224]	; 0xe0
90009396:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
  gpio_init_structure.Alternate = BUS_I2C4_SCL_AF;
9000939a:	951c      	str	r5, [sp, #112]	; 0x70
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
9000939c:	f003 0308 	and.w	r3, r3, #8
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
900093a0:	e9cd 0118 	strd	r0, r1, [sp, #96]	; 0x60
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
900093a4:	9316      	str	r3, [sp, #88]	; 0x58
  HAL_GPIO_Init(BUS_I2C4_SCL_GPIO_PORT, &gpio_init_structure);
900093a6:	a918      	add	r1, sp, #96	; 0x60
900093a8:	4882      	ldr	r0, [pc, #520]	; (900095b4 <BSP_I2C4_Init+0x278>)
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
900093aa:	9b16      	ldr	r3, [sp, #88]	; 0x58
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
900093ac:	e9cd 671a 	strd	r6, r7, [sp, #104]	; 0x68
  HAL_GPIO_Init(BUS_I2C4_SCL_GPIO_PORT, &gpio_init_structure);
900093b0:	f001 f904 	bl	9000a5bc <HAL_GPIO_Init>
  gpio_init_structure.Pin       = BUS_I2C4_SDA_PIN;
900093b4:	2312      	movs	r3, #18
900093b6:	f44f 5200 	mov.w	r2, #8192	; 0x2000
  HAL_GPIO_Init(BUS_I2C4_SDA_GPIO_PORT, &gpio_init_structure);
900093ba:	a918      	add	r1, sp, #96	; 0x60
900093bc:	487d      	ldr	r0, [pc, #500]	; (900095b4 <BSP_I2C4_Init+0x278>)
  gpio_init_structure.Alternate = BUS_I2C4_SDA_AF;
900093be:	951c      	str	r5, [sp, #112]	; 0x70
  gpio_init_structure.Pin       = BUS_I2C4_SDA_PIN;
900093c0:	e9cd 2318 	strd	r2, r3, [sp, #96]	; 0x60
900093c4:	e9cd 671a 	strd	r6, r7, [sp, #104]	; 0x68
  HAL_GPIO_Init(BUS_I2C4_SDA_GPIO_PORT, &gpio_init_structure);
900093c8:	f001 f8f8 	bl	9000a5bc <HAL_GPIO_Init>
  BUS_I2C4_CLK_ENABLE();
900093cc:	f8d4 30f4 	ldr.w	r3, [r4, #244]	; 0xf4
900093d0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
900093d4:	f8c4 30f4 	str.w	r3, [r4, #244]	; 0xf4
900093d8:	f8d4 30f4 	ldr.w	r3, [r4, #244]	; 0xf4
900093dc:	f003 0380 	and.w	r3, r3, #128	; 0x80
900093e0:	9317      	str	r3, [sp, #92]	; 0x5c
900093e2:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  BUS_I2C4_FORCE_RESET();
900093e4:	f8d4 309c 	ldr.w	r3, [r4, #156]	; 0x9c
900093e8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
900093ec:	f8c4 309c 	str.w	r3, [r4, #156]	; 0x9c
  BUS_I2C4_RELEASE_RESET();
900093f0:	f8d4 309c 	ldr.w	r3, [r4, #156]	; 0x9c
900093f4:	f023 0380 	bic.w	r3, r3, #128	; 0x80
900093f8:	f8c4 309c 	str.w	r3, [r4, #156]	; 0x9c
        if (MX_I2C4_Init(&hbus_i2c4, I2C_GetTiming(HAL_RCC_GetPCLK2Freq(), BUS_I2C4_FREQUENCY)) != HAL_OK)
900093fc:	f004 fcd4 	bl	9000dda8 <HAL_RCC_GetPCLK2Freq>
  if((clock_src_freq != 0U) && (i2c_freq != 0U))
90009400:	2800      	cmp	r0, #0
90009402:	f000 81f6 	beq.w	900097f2 <BSP_I2C4_Init+0x4b6>
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
90009406:	4b6c      	ldr	r3, [pc, #432]	; (900095b8 <BSP_I2C4_Init+0x27c>)
  uint32_t prev_presc = I2C_PRESC_MAX;
90009408:	f04f 0b10 	mov.w	fp, #16
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
9000940c:	9e03      	ldr	r6, [sp, #12]
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
9000940e:	eb03 0350 	add.w	r3, r3, r0, lsr #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009412:	f8df a1ac 	ldr.w	sl, [pc, #428]	; 900095c0 <BSP_I2C4_Init+0x284>
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
90009416:	4635      	mov	r5, r6
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
90009418:	fbb3 f7f0 	udiv	r7, r3, r0
    (int32_t)tafdel_max - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 4) * (int32_t)ti2cclk);
9000941c:	00bb      	lsls	r3, r7, #2
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
9000941e:	9702      	str	r7, [sp, #8]
    (int32_t)tafdel_min - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 3) * (int32_t)ti2cclk);
90009420:	eb07 0247 	add.w	r2, r7, r7, lsl #1
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
90009424:	f5c3 7cc3 	rsb	ip, r3, #390	; 0x186
90009428:	4b64      	ldr	r3, [pc, #400]	; (900095bc <BSP_I2C4_Init+0x280>)
  tsdadel_min = (int32_t)I2C_Charac[I2C_speed].tfall + (int32_t)I2C_Charac[I2C_speed].hddat_min -
9000942a:	f1c2 0432 	rsb	r4, r2, #50	; 0x32
    (int32_t)tafdel_min - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 3) * (int32_t)ti2cclk);
9000942e:	0079      	lsls	r1, r7, #1
90009430:	681b      	ldr	r3, [r3, #0]
90009432:	ea2c 7cec 	bic.w	ip, ip, ip, asr #31
90009436:	ea24 74e4 	bic.w	r4, r4, r4, asr #31
9000943a:	9113      	str	r1, [sp, #76]	; 0x4c
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
9000943c:	4699      	mov	r9, r3
9000943e:	930a      	str	r3, [sp, #40]	; 0x28
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
90009440:	ebb4 0f47 	cmp.w	r4, r7, lsl #1
90009444:	46b8      	mov	r8, r7
90009446:	eb07 0347 	add.w	r3, r7, r7, lsl #1
9000944a:	bf94      	ite	ls
9000944c:	2101      	movls	r1, #1
9000944e:	2100      	movhi	r1, #0
90009450:	ebbc 0f47 	cmp.w	ip, r7, lsl #1
90009454:	f001 0101 	and.w	r1, r1, #1
90009458:	eb07 0287 	add.w	r2, r7, r7, lsl #2
9000945c:	bf38      	it	cc
9000945e:	2100      	movcc	r1, #0
90009460:	429c      	cmp	r4, r3
90009462:	ebc7 00c7 	rsb	r0, r7, r7, lsl #3
90009466:	9105      	str	r1, [sp, #20]
90009468:	bf8c      	ite	hi
9000946a:	2100      	movhi	r1, #0
9000946c:	2101      	movls	r1, #1
9000946e:	459c      	cmp	ip, r3
90009470:	bf38      	it	cc
90009472:	2100      	movcc	r1, #0
90009474:	ebb4 0f87 	cmp.w	r4, r7, lsl #2
90009478:	9106      	str	r1, [sp, #24]
9000947a:	eb07 0142 	add.w	r1, r7, r2, lsl #1
9000947e:	9104      	str	r1, [sp, #16]
90009480:	eb07 0183 	add.w	r1, r7, r3, lsl #2
90009484:	9111      	str	r1, [sp, #68]	; 0x44
90009486:	bf94      	ite	ls
90009488:	2101      	movls	r1, #1
9000948a:	2100      	movhi	r1, #0
9000948c:	ebbc 0f87 	cmp.w	ip, r7, lsl #2
90009490:	f001 0e01 	and.w	lr, r1, #1
90009494:	bf38      	it	cc
90009496:	f04f 0e00 	movcc.w	lr, #0
9000949a:	4294      	cmp	r4, r2
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
9000949c:	f04f 0100 	mov.w	r1, #0
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
900094a0:	f8cd e01c 	str.w	lr, [sp, #28]
900094a4:	bf8c      	ite	hi
900094a6:	f04f 0e00 	movhi.w	lr, #0
900094aa:	f04f 0e01 	movls.w	lr, #1
900094ae:	4594      	cmp	ip, r2
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
900094b0:	9101      	str	r1, [sp, #4]
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
900094b2:	bf38      	it	cc
900094b4:	f04f 0e00 	movcc.w	lr, #0
900094b8:	ebb4 0f43 	cmp.w	r4, r3, lsl #1
900094bc:	bf98      	it	ls
900094be:	2101      	movls	r1, #1
900094c0:	ebbc 0f43 	cmp.w	ip, r3, lsl #1
900094c4:	f8cd e020 	str.w	lr, [sp, #32]
900094c8:	f001 0101 	and.w	r1, r1, #1
900094cc:	bf38      	it	cc
900094ce:	2100      	movcc	r1, #0
900094d0:	4284      	cmp	r4, r0
900094d2:	9109      	str	r1, [sp, #36]	; 0x24
900094d4:	4601      	mov	r1, r0
900094d6:	bf8c      	ite	hi
900094d8:	2000      	movhi	r0, #0
900094da:	2001      	movls	r0, #1
900094dc:	458c      	cmp	ip, r1
900094de:	bf38      	it	cc
900094e0:	2000      	movcc	r0, #0
900094e2:	ebb4 0fc7 	cmp.w	r4, r7, lsl #3
900094e6:	900b      	str	r0, [sp, #44]	; 0x2c
900094e8:	bf94      	ite	ls
900094ea:	2001      	movls	r0, #1
900094ec:	2000      	movhi	r0, #0
900094ee:	ebbc 0fc7 	cmp.w	ip, r7, lsl #3
900094f2:	f000 0001 	and.w	r0, r0, #1
900094f6:	bf38      	it	cc
900094f8:	2000      	movcc	r0, #0
900094fa:	900c      	str	r0, [sp, #48]	; 0x30
900094fc:	eb07 00c7 	add.w	r0, r7, r7, lsl #3
90009500:	4284      	cmp	r4, r0
90009502:	bf8c      	ite	hi
90009504:	f04f 0e00 	movhi.w	lr, #0
90009508:	f04f 0e01 	movls.w	lr, #1
9000950c:	4584      	cmp	ip, r0
9000950e:	bf38      	it	cc
90009510:	f04f 0e00 	movcc.w	lr, #0
90009514:	ebb4 0f42 	cmp.w	r4, r2, lsl #1
90009518:	4670      	mov	r0, lr
9000951a:	bf94      	ite	ls
9000951c:	2001      	movls	r0, #1
9000951e:	2000      	movhi	r0, #0
90009520:	ebbc 0f42 	cmp.w	ip, r2, lsl #1
90009524:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
90009528:	f04f 0e00 	mov.w	lr, #0
9000952c:	f000 0001 	and.w	r0, r0, #1
90009530:	bf38      	it	cc
90009532:	2000      	movcc	r0, #0
90009534:	900e      	str	r0, [sp, #56]	; 0x38
90009536:	9804      	ldr	r0, [sp, #16]
90009538:	4284      	cmp	r4, r0
9000953a:	4602      	mov	r2, r0
9000953c:	bf8c      	ite	hi
9000953e:	2200      	movhi	r2, #0
90009540:	2201      	movls	r2, #1
90009542:	4584      	cmp	ip, r0
90009544:	bf38      	it	cc
90009546:	2200      	movcc	r2, #0
90009548:	ebb4 0f83 	cmp.w	r4, r3, lsl #2
9000954c:	920f      	str	r2, [sp, #60]	; 0x3c
9000954e:	bf94      	ite	ls
90009550:	2201      	movls	r2, #1
90009552:	2200      	movhi	r2, #0
90009554:	ebbc 0f83 	cmp.w	ip, r3, lsl #2
90009558:	f002 0201 	and.w	r2, r2, #1
9000955c:	bf38      	it	cc
9000955e:	2200      	movcc	r2, #0
90009560:	9210      	str	r2, [sp, #64]	; 0x40
90009562:	9a11      	ldr	r2, [sp, #68]	; 0x44
90009564:	4294      	cmp	r4, r2
90009566:	4613      	mov	r3, r2
90009568:	bf8c      	ite	hi
9000956a:	2300      	movhi	r3, #0
9000956c:	2301      	movls	r3, #1
9000956e:	4594      	cmp	ip, r2
90009570:	bf38      	it	cc
90009572:	2300      	movcc	r3, #0
90009574:	ebb4 0f41 	cmp.w	r4, r1, lsl #1
90009578:	9311      	str	r3, [sp, #68]	; 0x44
9000957a:	bf94      	ite	ls
9000957c:	2301      	movls	r3, #1
9000957e:	2300      	movhi	r3, #0
90009580:	ebbc 0f41 	cmp.w	ip, r1, lsl #1
90009584:	f003 0301 	and.w	r3, r3, #1
90009588:	bf38      	it	cc
9000958a:	2300      	movcc	r3, #0
9000958c:	9312      	str	r3, [sp, #72]	; 0x48
9000958e:	ebc7 1307 	rsb	r3, r7, r7, lsl #4
90009592:	429c      	cmp	r4, r3
90009594:	bf8c      	ite	hi
90009596:	2200      	movhi	r2, #0
90009598:	2201      	movls	r2, #1
9000959a:	459c      	cmp	ip, r3
9000959c:	bf38      	it	cc
9000959e:	2200      	movcc	r2, #0
900095a0:	9204      	str	r2, [sp, #16]
900095a2:	e014      	b.n	900095ce <BSP_I2C4_Init+0x292>
900095a4:	240096cc 	.word	0x240096cc
900095a8:	2400a0d4 	.word	0x2400a0d4
900095ac:	58001c00 	.word	0x58001c00
900095b0:	58024400 	.word	0x58024400
900095b4:	58020c00 	.word	0x58020c00
900095b8:	3b9aca00 	.word	0x3b9aca00
900095bc:	2400a0d0 	.word	0x2400a0d0
900095c0:	240096d0 	.word	0x240096d0
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
900095c4:	f1be 0f10 	cmp.w	lr, #16
900095c8:	44b8      	add	r8, r7
900095ca:	f000 826c 	beq.w	90009aa6 <BSP_I2C4_Init+0x76a>
      if (tscldel >= (uint32_t)tscldel_min)
900095ce:	f5b8 7faf 	cmp.w	r8, #350	; 0x15e
900095d2:	4673      	mov	r3, lr
      uint32_t tscldel = (scldel + 1U) * (presc + 1U) * ti2cclk;
900095d4:	f10e 0e01 	add.w	lr, lr, #1
      if (tscldel >= (uint32_t)tscldel_min)
900095d8:	d3f4      	bcc.n	900095c4 <BSP_I2C4_Init+0x288>
            if(presc != prev_presc)
900095da:	ebbb 0205 	subs.w	r2, fp, r5
900095de:	bf18      	it	ne
900095e0:	2201      	movne	r2, #1
900095e2:	2c00      	cmp	r4, #0
900095e4:	bf18      	it	ne
900095e6:	2200      	movne	r2, #0
900095e8:	2a00      	cmp	r2, #0
900095ea:	f040 824a 	bne.w	90009a82 <BSP_I2C4_Init+0x746>
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
900095ee:	45bc      	cmp	ip, r7
900095f0:	bf34      	ite	cc
900095f2:	2200      	movcc	r2, #0
900095f4:	2201      	movcs	r2, #1
900095f6:	42bc      	cmp	r4, r7
900095f8:	bf88      	it	hi
900095fa:	2200      	movhi	r2, #0
            if(presc != prev_presc)
900095fc:	45ab      	cmp	fp, r5
900095fe:	bf0c      	ite	eq
90009600:	2200      	moveq	r2, #0
90009602:	f002 0201 	andne.w	r2, r2, #1
90009606:	2a00      	cmp	r2, #0
90009608:	f000 80fd 	beq.w	90009806 <BSP_I2C4_Init+0x4ca>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000960c:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90009610:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009614:	2001      	movs	r0, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009616:	f84a 5021 	str.w	r5, [sl, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000961a:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000961e:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009622:	6088      	str	r0, [r1, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009624:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90009626:	604b      	str	r3, [r1, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009628:	f200 81a5 	bhi.w	90009976 <BSP_I2C4_Init+0x63a>
9000962c:	46ab      	mov	fp, r5
            if(presc != prev_presc)
9000962e:	9906      	ldr	r1, [sp, #24]
90009630:	45ab      	cmp	fp, r5
90009632:	bf0c      	ite	eq
90009634:	2100      	moveq	r1, #0
90009636:	f001 0101 	andne.w	r1, r1, #1
9000963a:	2900      	cmp	r1, #0
9000963c:	f000 80ff 	beq.w	9000983e <BSP_I2C4_Init+0x502>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009640:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90009644:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009648:	2003      	movs	r0, #3
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000964a:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000964e:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009652:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009656:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009658:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
9000965a:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000965c:	f200 818b 	bhi.w	90009976 <BSP_I2C4_Init+0x63a>
90009660:	460a      	mov	r2, r1
90009662:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90009664:	9908      	ldr	r1, [sp, #32]
90009666:	45ab      	cmp	fp, r5
90009668:	bf0c      	ite	eq
9000966a:	2100      	moveq	r1, #0
9000966c:	f001 0101 	andne.w	r1, r1, #1
90009670:	2900      	cmp	r1, #0
90009672:	f000 80ff 	beq.w	90009874 <BSP_I2C4_Init+0x538>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009676:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000967a:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000967e:	2005      	movs	r0, #5
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009680:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009684:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009688:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000968c:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000968e:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90009690:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009692:	f200 8170 	bhi.w	90009976 <BSP_I2C4_Init+0x63a>
90009696:	460a      	mov	r2, r1
90009698:	46ab      	mov	fp, r5
            if(presc != prev_presc)
9000969a:	990b      	ldr	r1, [sp, #44]	; 0x2c
9000969c:	45ab      	cmp	fp, r5
9000969e:	bf0c      	ite	eq
900096a0:	2100      	moveq	r1, #0
900096a2:	f001 0101 	andne.w	r1, r1, #1
900096a6:	2900      	cmp	r1, #0
900096a8:	f000 80fe 	beq.w	900098a8 <BSP_I2C4_Init+0x56c>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900096ac:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900096b0:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900096b4:	2007      	movs	r0, #7
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900096b6:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900096ba:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900096be:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900096c2:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900096c4:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900096c6:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900096c8:	f200 8155 	bhi.w	90009976 <BSP_I2C4_Init+0x63a>
900096cc:	460a      	mov	r2, r1
900096ce:	46ab      	mov	fp, r5
            if(presc != prev_presc)
900096d0:	990d      	ldr	r1, [sp, #52]	; 0x34
900096d2:	45ab      	cmp	fp, r5
900096d4:	bf0c      	ite	eq
900096d6:	2100      	moveq	r1, #0
900096d8:	f001 0101 	andne.w	r1, r1, #1
900096dc:	2900      	cmp	r1, #0
900096de:	f000 80fd 	beq.w	900098dc <BSP_I2C4_Init+0x5a0>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900096e2:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900096e6:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900096ea:	2009      	movs	r0, #9
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900096ec:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900096f0:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900096f4:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900096f8:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900096fa:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900096fc:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900096fe:	f200 813a 	bhi.w	90009976 <BSP_I2C4_Init+0x63a>
90009702:	460a      	mov	r2, r1
90009704:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90009706:	990f      	ldr	r1, [sp, #60]	; 0x3c
90009708:	45ab      	cmp	fp, r5
9000970a:	bf0c      	ite	eq
9000970c:	2100      	moveq	r1, #0
9000970e:	f001 0101 	andne.w	r1, r1, #1
90009712:	2900      	cmp	r1, #0
90009714:	f000 80fc 	beq.w	90009910 <BSP_I2C4_Init+0x5d4>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009718:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000971c:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009720:	200b      	movs	r0, #11
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009722:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009726:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000972a:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000972e:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009730:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90009732:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009734:	f200 811f 	bhi.w	90009976 <BSP_I2C4_Init+0x63a>
90009738:	46ab      	mov	fp, r5
            if(presc != prev_presc)
9000973a:	9e11      	ldr	r6, [sp, #68]	; 0x44
9000973c:	455d      	cmp	r5, fp
9000973e:	bf0c      	ite	eq
90009740:	2600      	moveq	r6, #0
90009742:	f006 0601 	andne.w	r6, r6, #1
90009746:	2e00      	cmp	r6, #0
90009748:	f000 80fb 	beq.w	90009942 <BSP_I2C4_Init+0x606>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000974c:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90009750:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009754:	210d      	movs	r1, #13
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009756:	4650      	mov	r0, sl
90009758:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000975c:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009760:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90009764:	6053      	str	r3, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009766:	6091      	str	r1, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009768:	f200 8105 	bhi.w	90009976 <BSP_I2C4_Init+0x63a>
9000976c:	4631      	mov	r1, r6
9000976e:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90009770:	9e04      	ldr	r6, [sp, #16]
90009772:	455d      	cmp	r5, fp
90009774:	bf0c      	ite	eq
90009776:	2600      	moveq	r6, #0
90009778:	f006 0601 	andne.w	r6, r6, #1
9000977c:	2e00      	cmp	r6, #0
9000977e:	f000 817c 	beq.w	90009a7a <BSP_I2C4_Init+0x73e>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009782:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90009786:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000978a:	4650      	mov	r0, sl
9000978c:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
90009790:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009794:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90009798:	6053      	str	r3, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000979a:	f04f 030f 	mov.w	r3, #15
9000979e:	6093      	str	r3, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900097a0:	f200 80e9 	bhi.w	90009976 <BSP_I2C4_Init+0x63a>
900097a4:	46ab      	mov	fp, r5
        for (sdadel = 0; sdadel < I2C_SDADEL_MAX; sdadel++)
900097a6:	e70d      	b.n	900095c4 <BSP_I2C4_Init+0x288>
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
900097a8:	9a07      	ldr	r2, [sp, #28]
900097aa:	9b08      	ldr	r3, [sp, #32]
900097ac:	3214      	adds	r2, #20
900097ae:	3301      	adds	r3, #1
900097b0:	9207      	str	r2, [sp, #28]
900097b2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
900097b4:	9308      	str	r3, [sp, #32]
900097b6:	4293      	cmp	r3, r2
900097b8:	f040 80ff 	bne.w	900099ba <BSP_I2C4_Init+0x67e>
        if (idx < I2C_VALID_TIMING_NBR)
900097bc:	297f      	cmp	r1, #127	; 0x7f
900097be:	d818      	bhi.n	900097f2 <BSP_I2C4_Init+0x4b6>
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
900097c0:	eb01 0381 	add.w	r3, r1, r1, lsl #2
900097c4:	990b      	ldr	r1, [sp, #44]	; 0x2c
900097c6:	eb01 0283 	add.w	r2, r1, r3, lsl #2
900097ca:	f851 4023 	ldr.w	r4, [r1, r3, lsl #2]
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
900097ce:	6850      	ldr	r0, [r2, #4]
                ((I2c_valid_timing[idx].scll & 0xFFU) << 0);
900097d0:	7c13      	ldrb	r3, [r2, #16]
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
900097d2:	0500      	lsls	r0, r0, #20
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
900097d4:	ea43 7304 	orr.w	r3, r3, r4, lsl #28
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
900097d8:	f400 0070 	and.w	r0, r0, #15728640	; 0xf00000
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
900097dc:	e9d2 1202 	ldrd	r1, r2, [r2, #8]
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
900097e0:	4303      	orrs	r3, r0
                ((I2c_valid_timing[idx].tsdadel & 0x0FU) << 16) |\
900097e2:	0409      	lsls	r1, r1, #16
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
900097e4:	0212      	lsls	r2, r2, #8
                ((I2c_valid_timing[idx].tsdadel & 0x0FU) << 16) |\
900097e6:	f401 2170 	and.w	r1, r1, #983040	; 0xf0000
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
900097ea:	b292      	uxth	r2, r2
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
900097ec:	430b      	orrs	r3, r1
900097ee:	4313      	orrs	r3, r2
900097f0:	9303      	str	r3, [sp, #12]
        if (MX_I2C4_Init(&hbus_i2c4, I2C_GetTiming(HAL_RCC_GetPCLK2Freq(), BUS_I2C4_FREQUENCY)) != HAL_OK)
900097f2:	9903      	ldr	r1, [sp, #12]
900097f4:	48b5      	ldr	r0, [pc, #724]	; (90009acc <BSP_I2C4_Init+0x790>)
900097f6:	f7ff fd81 	bl	900092fc <MX_I2C4_Init>
900097fa:	2800      	cmp	r0, #0
900097fc:	f43f ada8 	beq.w	90009350 <BSP_I2C4_Init+0x14>
          ret = BSP_ERROR_BUS_FAILURE;
90009800:	f06f 0007 	mvn.w	r0, #7
  return ret;
90009804:	e5a5      	b.n	90009352 <BSP_I2C4_Init+0x16>
            if(presc != prev_presc)
90009806:	4632      	mov	r2, r6
90009808:	9905      	ldr	r1, [sp, #20]
9000980a:	45ab      	cmp	fp, r5
9000980c:	bf0c      	ite	eq
9000980e:	2100      	moveq	r1, #0
90009810:	f001 0101 	andne.w	r1, r1, #1
90009814:	2900      	cmp	r1, #0
90009816:	f43f af0a 	beq.w	9000962e <BSP_I2C4_Init+0x2f2>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000981a:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000981e:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009822:	2002      	movs	r0, #2
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009824:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009828:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000982c:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009830:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009832:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90009834:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009836:	f200 809e 	bhi.w	90009976 <BSP_I2C4_Init+0x63a>
9000983a:	460a      	mov	r2, r1
9000983c:	46ab      	mov	fp, r5
            if(presc != prev_presc)
9000983e:	9907      	ldr	r1, [sp, #28]
90009840:	45ab      	cmp	fp, r5
90009842:	bf0c      	ite	eq
90009844:	2100      	moveq	r1, #0
90009846:	f001 0101 	andne.w	r1, r1, #1
9000984a:	2900      	cmp	r1, #0
9000984c:	f43f af0a 	beq.w	90009664 <BSP_I2C4_Init+0x328>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009850:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90009854:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009858:	2004      	movs	r0, #4
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000985a:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000985e:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009862:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009866:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009868:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
9000986a:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000986c:	f200 8083 	bhi.w	90009976 <BSP_I2C4_Init+0x63a>
90009870:	460a      	mov	r2, r1
90009872:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90009874:	9909      	ldr	r1, [sp, #36]	; 0x24
90009876:	45ab      	cmp	fp, r5
90009878:	bf0c      	ite	eq
9000987a:	2100      	moveq	r1, #0
9000987c:	f001 0101 	andne.w	r1, r1, #1
90009880:	2900      	cmp	r1, #0
90009882:	f43f af0a 	beq.w	9000969a <BSP_I2C4_Init+0x35e>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009886:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000988a:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000988e:	2006      	movs	r0, #6
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009890:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009894:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009898:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000989c:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000989e:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900098a0:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900098a2:	d868      	bhi.n	90009976 <BSP_I2C4_Init+0x63a>
900098a4:	460a      	mov	r2, r1
900098a6:	46ab      	mov	fp, r5
            if(presc != prev_presc)
900098a8:	990c      	ldr	r1, [sp, #48]	; 0x30
900098aa:	45ab      	cmp	fp, r5
900098ac:	bf0c      	ite	eq
900098ae:	2100      	moveq	r1, #0
900098b0:	f001 0101 	andne.w	r1, r1, #1
900098b4:	2900      	cmp	r1, #0
900098b6:	f43f af0b 	beq.w	900096d0 <BSP_I2C4_Init+0x394>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900098ba:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900098be:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900098c2:	2008      	movs	r0, #8
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900098c4:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900098c8:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900098cc:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900098d0:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900098d2:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900098d4:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900098d6:	d84e      	bhi.n	90009976 <BSP_I2C4_Init+0x63a>
900098d8:	460a      	mov	r2, r1
900098da:	46ab      	mov	fp, r5
            if(presc != prev_presc)
900098dc:	990e      	ldr	r1, [sp, #56]	; 0x38
900098de:	45ab      	cmp	fp, r5
900098e0:	bf0c      	ite	eq
900098e2:	2100      	moveq	r1, #0
900098e4:	f001 0101 	andne.w	r1, r1, #1
900098e8:	2900      	cmp	r1, #0
900098ea:	f43f af0c 	beq.w	90009706 <BSP_I2C4_Init+0x3ca>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900098ee:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900098f2:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900098f6:	200a      	movs	r0, #10
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900098f8:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900098fc:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009900:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009904:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009906:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90009908:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000990a:	d834      	bhi.n	90009976 <BSP_I2C4_Init+0x63a>
9000990c:	460a      	mov	r2, r1
9000990e:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90009910:	9910      	ldr	r1, [sp, #64]	; 0x40
90009912:	45ab      	cmp	fp, r5
90009914:	bf0c      	ite	eq
90009916:	2100      	moveq	r1, #0
90009918:	f001 0101 	andne.w	r1, r1, #1
9000991c:	2900      	cmp	r1, #0
9000991e:	f000 80ae 	beq.w	90009a7e <BSP_I2C4_Init+0x742>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009922:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90009926:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000992a:	200c      	movs	r0, #12
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000992c:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009930:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009934:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009938:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000993a:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
9000993c:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000993e:	d81a      	bhi.n	90009976 <BSP_I2C4_Init+0x63a>
90009940:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90009942:	9e12      	ldr	r6, [sp, #72]	; 0x48
90009944:	455d      	cmp	r5, fp
90009946:	bf0c      	ite	eq
90009948:	2600      	moveq	r6, #0
9000994a:	f006 0601 	andne.w	r6, r6, #1
9000994e:	2e00      	cmp	r6, #0
90009950:	f43f af0e 	beq.w	90009770 <BSP_I2C4_Init+0x434>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009954:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90009958:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000995c:	4650      	mov	r0, sl
9000995e:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
90009962:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009966:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
9000996a:	6053      	str	r3, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000996c:	f04f 030e 	mov.w	r3, #14
90009970:	6093      	str	r3, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009972:	f67f af17 	bls.w	900097a4 <BSP_I2C4_Init+0x468>
90009976:	4b56      	ldr	r3, [pc, #344]	; (90009ad0 <BSP_I2C4_Init+0x794>)
90009978:	900b      	str	r0, [sp, #44]	; 0x2c
9000997a:	f8c3 9000 	str.w	r9, [r3]
              I2c_valid_timing_nbr ++;
9000997e:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
90009982:	9b13      	ldr	r3, [sp, #76]	; 0x4c
90009984:	f240 4201 	movw	r2, #1025	; 0x401
90009988:	f240 2657 	movw	r6, #599	; 0x257
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
9000998c:	f640 1ac4 	movw	sl, #2500	; 0x9c4
90009990:	1ad2      	subs	r2, r2, r3
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
90009992:	f240 4b12 	movw	fp, #1042	; 0x412
90009996:	920d      	str	r2, [sp, #52]	; 0x34
90009998:	9a02      	ldr	r2, [sp, #8]
9000999a:	4296      	cmp	r6, r2
9000999c:	bf38      	it	cc
9000999e:	4616      	movcc	r6, r2
900099a0:	4a4c      	ldr	r2, [pc, #304]	; (90009ad4 <BSP_I2C4_Init+0x798>)
900099a2:	9207      	str	r2, [sp, #28]
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
900099a4:	2200      	movs	r2, #0
900099a6:	9208      	str	r2, [sp, #32]
900099a8:	f04f 32ff 	mov.w	r2, #4294967295
900099ac:	4611      	mov	r1, r2
900099ae:	f103 0232 	add.w	r2, r3, #50	; 0x32
900099b2:	f6a3 0334 	subw	r3, r3, #2100	; 0x834
900099b6:	920c      	str	r2, [sp, #48]	; 0x30
900099b8:	930e      	str	r3, [sp, #56]	; 0x38
    uint32_t tpresc = (I2c_valid_timing[count].presc + 1U) * ti2cclk;
900099ba:	9b07      	ldr	r3, [sp, #28]
    for (scll = 0; scll < I2C_SCLL_MAX; scll++)
900099bc:	f04f 0800 	mov.w	r8, #0
    uint32_t tpresc = (I2c_valid_timing[count].presc + 1U) * ti2cclk;
900099c0:	6818      	ldr	r0, [r3, #0]
900099c2:	9b02      	ldr	r3, [sp, #8]
900099c4:	fb00 3003 	mla	r0, r0, r3, r3
    for (scll = 0; scll < I2C_SCLL_MAX; scll++)
900099c8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
900099ca:	1a1b      	subs	r3, r3, r0
900099cc:	ea4f 0943 	mov.w	r9, r3, lsl #1
900099d0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
900099d2:	eb03 0e00 	add.w	lr, r3, r0
900099d6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
900099d8:	4403      	add	r3, r0
900099da:	9309      	str	r3, [sp, #36]	; 0x24
900099dc:	e006      	b.n	900099ec <BSP_I2C4_Init+0x6b0>
900099de:	f5b8 7f80 	cmp.w	r8, #256	; 0x100
900099e2:	4486      	add	lr, r0
900099e4:	eba9 0900 	sub.w	r9, r9, r0
900099e8:	f43f aede 	beq.w	900097a8 <BSP_I2C4_Init+0x46c>
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
900099ec:	f240 5214 	movw	r2, #1300	; 0x514
900099f0:	f8cd 8004 	str.w	r8, [sp, #4]
900099f4:	f1ae 0332 	sub.w	r3, lr, #50	; 0x32
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
900099f8:	f108 0801 	add.w	r8, r8, #1
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
900099fc:	4596      	cmp	lr, r2
900099fe:	d9ee      	bls.n	900099de <BSP_I2C4_Init+0x6a2>
90009a00:	9a02      	ldr	r2, [sp, #8]
90009a02:	ebb2 0f93 	cmp.w	r2, r3, lsr #2
90009a06:	d2ea      	bcs.n	900099de <BSP_I2C4_Init+0x6a2>
90009a08:	f640 0c34 	movw	ip, #2100	; 0x834
90009a0c:	464c      	mov	r4, r9
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
90009a0e:	f8cd 9018 	str.w	r9, [sp, #24]
90009a12:	2200      	movs	r2, #0
90009a14:	ebac 0c03 	sub.w	ip, ip, r3
90009a18:	9b09      	ldr	r3, [sp, #36]	; 0x24
90009a1a:	4689      	mov	r9, r1
90009a1c:	4473      	add	r3, lr
90009a1e:	e9cd e804 	strd	lr, r8, [sp, #16]
90009a22:	f8dd 8020 	ldr.w	r8, [sp, #32]
90009a26:	f8dd e01c 	ldr.w	lr, [sp, #28]
90009a2a:	e005      	b.n	90009a38 <BSP_I2C4_Init+0x6fc>
90009a2c:	f5b2 7f80 	cmp.w	r2, #256	; 0x100
90009a30:	4403      	add	r3, r0
90009a32:	eba4 0400 	sub.w	r4, r4, r0
90009a36:	d01a      	beq.n	90009a6e <BSP_I2C4_Init+0x732>
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
90009a38:	eb0c 0103 	add.w	r1, ip, r3
90009a3c:	4617      	mov	r7, r2
90009a3e:	f203 15a1 	addw	r5, r3, #417	; 0x1a1
          uint32_t tscl_h = tafdel_min + dnf_delay + (2U * ti2cclk) + ((sclh + 1U) * tpresc);
90009a42:	3201      	adds	r2, #1
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
90009a44:	42b1      	cmp	r1, r6
90009a46:	d9f1      	bls.n	90009a2c <BSP_I2C4_Init+0x6f0>
90009a48:	455d      	cmp	r5, fp
90009a4a:	d8ef      	bhi.n	90009a2c <BSP_I2C4_Init+0x6f0>
            if (error < 0)
90009a4c:	ea33 0123 	bics.w	r1, r3, r3, asr #32
90009a50:	bf28      	it	cs
90009a52:	4621      	movcs	r1, r4
            if ((uint32_t)error < prev_error)
90009a54:	458a      	cmp	sl, r1
90009a56:	d9e9      	bls.n	90009a2c <BSP_I2C4_Init+0x6f0>
              I2c_valid_timing[count].sclh = sclh;
90009a58:	468a      	mov	sl, r1
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
90009a5a:	f5b2 7f80 	cmp.w	r2, #256	; 0x100
              I2c_valid_timing[count].scll = scll;
90009a5e:	9901      	ldr	r1, [sp, #4]
              I2c_valid_timing[count].sclh = sclh;
90009a60:	46c1      	mov	r9, r8
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
90009a62:	4403      	add	r3, r0
90009a64:	eba4 0400 	sub.w	r4, r4, r0
              I2c_valid_timing[count].sclh = sclh;
90009a68:	e9ce 7103 	strd	r7, r1, [lr, #12]
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
90009a6c:	d1e4      	bne.n	90009a38 <BSP_I2C4_Init+0x6fc>
90009a6e:	4649      	mov	r1, r9
90009a70:	f8dd 9018 	ldr.w	r9, [sp, #24]
90009a74:	e9dd e804 	ldrd	lr, r8, [sp, #16]
90009a78:	e7b1      	b.n	900099de <BSP_I2C4_Init+0x6a2>
90009a7a:	460e      	mov	r6, r1
90009a7c:	e5a2      	b.n	900095c4 <BSP_I2C4_Init+0x288>
            if(presc != prev_presc)
90009a7e:	4611      	mov	r1, r2
90009a80:	e65b      	b.n	9000973a <BSP_I2C4_Init+0x3fe>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009a82:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90009a86:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009a8a:	2000      	movs	r0, #0
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009a8c:	f84a 5021 	str.w	r5, [sl, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009a90:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009a94:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009a98:	6088      	str	r0, [r1, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009a9a:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90009a9c:	604b      	str	r3, [r1, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009a9e:	f63f af6a 	bhi.w	90009976 <BSP_I2C4_Init+0x63a>
90009aa2:	46ab      	mov	fp, r5
90009aa4:	e6b0      	b.n	90009808 <BSP_I2C4_Init+0x4cc>
  for (presc = 0; presc < I2C_PRESC_MAX; presc++)
90009aa6:	3501      	adds	r5, #1
90009aa8:	9b02      	ldr	r3, [sp, #8]
90009aaa:	2d10      	cmp	r5, #16
90009aac:	441f      	add	r7, r3
90009aae:	f47f acc7 	bne.w	90009440 <BSP_I2C4_Init+0x104>
90009ab2:	b126      	cbz	r6, 90009abe <BSP_I2C4_Init+0x782>
90009ab4:	4b06      	ldr	r3, [pc, #24]	; (90009ad0 <BSP_I2C4_Init+0x794>)
90009ab6:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
90009aba:	f8c3 9000 	str.w	r9, [r3]
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
90009abe:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90009ac0:	2b00      	cmp	r3, #0
90009ac2:	f43f ae96 	beq.w	900097f2 <BSP_I2C4_Init+0x4b6>
90009ac6:	4b03      	ldr	r3, [pc, #12]	; (90009ad4 <BSP_I2C4_Init+0x798>)
90009ac8:	930b      	str	r3, [sp, #44]	; 0x2c
90009aca:	e75a      	b.n	90009982 <BSP_I2C4_Init+0x646>
90009acc:	2400a0d4 	.word	0x2400a0d4
90009ad0:	2400a0d0 	.word	0x2400a0d0
90009ad4:	240096d0 	.word	0x240096d0

90009ad8 <BSP_I2C4_WriteReg>:
{
90009ad8:	b530      	push	{r4, r5, lr}
90009ada:	4614      	mov	r4, r2
90009adc:	b085      	sub	sp, #20
  * @param  Length     data length in bytes
  * @retval BSP status
  */
static int32_t I2C4_WriteReg(uint16_t DevAddr, uint16_t Reg, uint16_t MemAddSize, uint8_t *pData, uint16_t Length)
{
  if(HAL_I2C_Mem_Write(&hbus_i2c4, DevAddr, Reg, MemAddSize, pData, Length, 1000) == HAL_OK)
90009ade:	f44f 757a 	mov.w	r5, #1000	; 0x3e8
90009ae2:	460a      	mov	r2, r1
90009ae4:	9301      	str	r3, [sp, #4]
90009ae6:	4601      	mov	r1, r0
90009ae8:	2301      	movs	r3, #1
90009aea:	4809      	ldr	r0, [pc, #36]	; (90009b10 <BSP_I2C4_WriteReg+0x38>)
90009aec:	9502      	str	r5, [sp, #8]
90009aee:	9400      	str	r4, [sp, #0]
90009af0:	f001 f958 	bl	9000ada4 <HAL_I2C_Mem_Write>
90009af4:	b908      	cbnz	r0, 90009afa <BSP_I2C4_WriteReg+0x22>
}
90009af6:	b005      	add	sp, #20
90009af8:	bd30      	pop	{r4, r5, pc}
    if( HAL_I2C_GetError(&hbus_i2c4) == HAL_I2C_ERROR_AF)
90009afa:	4805      	ldr	r0, [pc, #20]	; (90009b10 <BSP_I2C4_WriteReg+0x38>)
90009afc:	f001 fbf4 	bl	9000b2e8 <HAL_I2C_GetError>
      ret =  BSP_ERROR_PERIPH_FAILURE;
90009b00:	2804      	cmp	r0, #4
90009b02:	bf0c      	ite	eq
90009b04:	f06f 0065 	mvneq.w	r0, #101	; 0x65
90009b08:	f06f 0003 	mvnne.w	r0, #3
90009b0c:	e7f3      	b.n	90009af6 <BSP_I2C4_WriteReg+0x1e>
90009b0e:	bf00      	nop
90009b10:	2400a0d4 	.word	0x2400a0d4

90009b14 <BSP_I2C4_ReadReg>:
{
90009b14:	b530      	push	{r4, r5, lr}
90009b16:	4614      	mov	r4, r2
90009b18:	b085      	sub	sp, #20
  * @param  Length     data length in bytes
  * @retval BSP status
  */
static int32_t I2C4_ReadReg(uint16_t DevAddr, uint16_t Reg, uint16_t MemAddSize, uint8_t *pData, uint16_t Length)
{
  if (HAL_I2C_Mem_Read(&hbus_i2c4, DevAddr, Reg, MemAddSize, pData, Length, 1000) == HAL_OK)
90009b1a:	f44f 757a 	mov.w	r5, #1000	; 0x3e8
90009b1e:	460a      	mov	r2, r1
90009b20:	9301      	str	r3, [sp, #4]
90009b22:	4601      	mov	r1, r0
90009b24:	2301      	movs	r3, #1
90009b26:	4809      	ldr	r0, [pc, #36]	; (90009b4c <BSP_I2C4_ReadReg+0x38>)
90009b28:	9502      	str	r5, [sp, #8]
90009b2a:	9400      	str	r4, [sp, #0]
90009b2c:	f001 fa6e 	bl	9000b00c <HAL_I2C_Mem_Read>
90009b30:	b908      	cbnz	r0, 90009b36 <BSP_I2C4_ReadReg+0x22>
}
90009b32:	b005      	add	sp, #20
90009b34:	bd30      	pop	{r4, r5, pc}
    if( HAL_I2C_GetError(&hbus_i2c4) == HAL_I2C_ERROR_AF)
90009b36:	4805      	ldr	r0, [pc, #20]	; (90009b4c <BSP_I2C4_ReadReg+0x38>)
90009b38:	f001 fbd6 	bl	9000b2e8 <HAL_I2C_GetError>
      ret =  BSP_ERROR_PERIPH_FAILURE;
90009b3c:	2804      	cmp	r0, #4
90009b3e:	bf0c      	ite	eq
90009b40:	f06f 0065 	mvneq.w	r0, #101	; 0x65
90009b44:	f06f 0003 	mvnne.w	r0, #3
90009b48:	e7f3      	b.n	90009b32 <BSP_I2C4_ReadReg+0x1e>
90009b4a:	bf00      	nop
90009b4c:	2400a0d4 	.word	0x2400a0d4

90009b50 <BSP_GetTick>:
  return (int32_t)HAL_GetTick();
90009b50:	f000 baaa 	b.w	9000a0a8 <HAL_GetTick>

90009b54 <BSP_SDRAM_DeInit>:
  */
int32_t BSP_SDRAM_DeInit(uint32_t Instance)
{
  int32_t ret = BSP_ERROR_NONE;

  if(Instance >= SDRAM_INSTANCES_NBR)
90009b54:	b970      	cbnz	r0, 90009b74 <BSP_SDRAM_DeInit+0x20>
{
90009b56:	b510      	push	{r4, lr}
90009b58:	4604      	mov	r4, r0
  {
    ret =  BSP_ERROR_WRONG_PARAM;
  }
  else
  {
    (void)HAL_SDRAM_DeInit(&hsdram[Instance]);
90009b5a:	4808      	ldr	r0, [pc, #32]	; (90009b7c <BSP_SDRAM_DeInit+0x28>)
90009b5c:	f005 fa20 	bl	9000efa0 <HAL_SDRAM_DeInit>

  /* Prevent unused argument(s) compilation warning */
  UNUSED(hSdram);

  /* Disable NVIC configuration for DMA interrupt */
  HAL_NVIC_DisableIRQ(SDRAM_MDMAx_IRQn);
90009b60:	207a      	movs	r0, #122	; 0x7a
90009b62:	f000 fb0b 	bl	9000a17c <HAL_NVIC_DisableIRQ>

  /* Deinitialize the stream for new transfer */
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
90009b66:	4b06      	ldr	r3, [pc, #24]	; (90009b80 <BSP_SDRAM_DeInit+0x2c>)
90009b68:	4806      	ldr	r0, [pc, #24]	; (90009b84 <BSP_SDRAM_DeInit+0x30>)
90009b6a:	6003      	str	r3, [r0, #0]
  (void)HAL_MDMA_DeInit(&mdma_handle);
90009b6c:	f003 f98e 	bl	9000ce8c <HAL_MDMA_DeInit>
  int32_t ret = BSP_ERROR_NONE;
90009b70:	4620      	mov	r0, r4
}
90009b72:	bd10      	pop	{r4, pc}
    ret =  BSP_ERROR_WRONG_PARAM;
90009b74:	f06f 0001 	mvn.w	r0, #1
}
90009b78:	4770      	bx	lr
90009b7a:	bf00      	nop
90009b7c:	2400a128 	.word	0x2400a128
90009b80:	52000040 	.word	0x52000040
90009b84:	2400a15c 	.word	0x2400a15c

90009b88 <MX_SDRAM_BANK2_Init>:
{
90009b88:	b530      	push	{r4, r5, lr}
  hSdram->Init.MemoryDataWidth    = MemoryDataWidth;
90009b8a:	6102      	str	r2, [r0, #16]
  hSdram->Init.ColumnBitsNumber   = FMC_SDRAM_COLUMN_BITS_NUM_8;
90009b8c:	2200      	movs	r2, #0
{
90009b8e:	b089      	sub	sp, #36	; 0x24
  hsdram->Instance = FMC_SDRAM_DEVICE;
90009b90:	4c13      	ldr	r4, [pc, #76]	; (90009be0 <MX_SDRAM_BANK2_Init+0x58>)
  hSdram->Init.ColumnBitsNumber   = FMC_SDRAM_COLUMN_BITS_NUM_8;
90009b92:	6082      	str	r2, [r0, #8]
  hsdram->Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
90009b94:	2540      	movs	r5, #64	; 0x40
  hSdram->Init.WriteProtection    = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
90009b96:	61c2      	str	r2, [r0, #28]
  sdram_timing.ExitSelfRefreshDelay = 7;
90009b98:	2307      	movs	r3, #7
  hSdram->Init.ReadPipeDelay      = FMC_SDRAM_RPIPE_DELAY_0;
90009b9a:	6282      	str	r2, [r0, #40]	; 0x28
  sdram_timing.LoadToActiveDelay    = 2;
90009b9c:	2202      	movs	r2, #2
  hSdram->Init.RowBitsNumber      = RowBitsNumber;
90009b9e:	60c1      	str	r1, [r0, #12]
  hSdram->Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
90009ba0:	f44f 71c0 	mov.w	r1, #384	; 0x180
  sdram_timing.LoadToActiveDelay    = 2;
90009ba4:	9200      	str	r2, [sp, #0]
  sdram_timing.RCDDelay             = 2;
90009ba6:	9206      	str	r2, [sp, #24]
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
90009ba8:	2201      	movs	r2, #1
  sdram_timing.ExitSelfRefreshDelay = 7;
90009baa:	9301      	str	r3, [sp, #4]
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
90009bac:	6042      	str	r2, [r0, #4]
  hSdram->Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
90009bae:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  hsdram->Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
90009bb2:	6165      	str	r5, [r4, #20]
  hSdram->Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
90009bb4:	f44f 6500 	mov.w	r5, #2048	; 0x800
  hSdram->Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
90009bb8:	6181      	str	r1, [r0, #24]
  if(HAL_SDRAM_Init(hSdram, &sdram_timing) != HAL_OK)
90009bba:	4669      	mov	r1, sp
  hSdram->Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
90009bbc:	e9c0 5208 	strd	r5, r2, [r0, #32]
  sdram_timing.SelfRefreshTime      = 4;
90009bc0:	2204      	movs	r2, #4
90009bc2:	e9cd 2302 	strd	r2, r3, [sp, #8]
  sdram_timing.WriteRecoveryTime    = 2;
90009bc6:	2202      	movs	r2, #2
90009bc8:	2302      	movs	r3, #2
90009bca:	e9cd 2304 	strd	r2, r3, [sp, #16]
  hsdram->Instance = FMC_SDRAM_DEVICE;
90009bce:	4b05      	ldr	r3, [pc, #20]	; (90009be4 <MX_SDRAM_BANK2_Init+0x5c>)
90009bd0:	6023      	str	r3, [r4, #0]
  if(HAL_SDRAM_Init(hSdram, &sdram_timing) != HAL_OK)
90009bd2:	f005 f9bb 	bl	9000ef4c <HAL_SDRAM_Init>
}
90009bd6:	3800      	subs	r0, #0
90009bd8:	bf18      	it	ne
90009bda:	2001      	movne	r0, #1
90009bdc:	b009      	add	sp, #36	; 0x24
90009bde:	bd30      	pop	{r4, r5, pc}
90009be0:	2400a128 	.word	0x2400a128
90009be4:	52004140 	.word	0x52004140

90009be8 <BSP_SDRAM_Init>:
  if(Instance >=SDRAM_INSTANCES_NBR)
90009be8:	2800      	cmp	r0, #0
90009bea:	f040 80d2 	bne.w	90009d92 <BSP_SDRAM_Init+0x1aa>
  __HAL_RCC_FMC_CLK_ENABLE();
90009bee:	4b6c      	ldr	r3, [pc, #432]	; (90009da0 <BSP_SDRAM_Init+0x1b8>)
  gpio_init_structure.Alternate = GPIO_AF12_FMC;
90009bf0:	210c      	movs	r1, #12
  __HAL_RCC_FMC_CLK_ENABLE();
90009bf2:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
90009bf6:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
{
90009bfa:	b570      	push	{r4, r5, r6, lr}
  __HAL_RCC_FMC_CLK_ENABLE();
90009bfc:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
{
90009c00:	b08e      	sub	sp, #56	; 0x38
  __HAL_RCC_FMC_CLK_ENABLE();
90009c02:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
90009c06:	4605      	mov	r5, r0
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
90009c08:	f24c 7003 	movw	r0, #50947	; 0xc703
  mdma_handle.Init.Request = MDMA_REQUEST_SW;
90009c0c:	4c65      	ldr	r4, [pc, #404]	; (90009da4 <BSP_SDRAM_Init+0x1bc>)
  __HAL_RCC_FMC_CLK_ENABLE();
90009c0e:	f402 5280 	and.w	r2, r2, #4096	; 0x1000
  __HAL_LINKDMA(hsdram, hmdma, mdma_handle);
90009c12:	4e65      	ldr	r6, [pc, #404]	; (90009da8 <BSP_SDRAM_Init+0x1c0>)
  __HAL_RCC_FMC_CLK_ENABLE();
90009c14:	9201      	str	r2, [sp, #4]
90009c16:	9a01      	ldr	r2, [sp, #4]
  SDRAM_MDMAx_CLK_ENABLE();
90009c18:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
90009c1c:	f042 0201 	orr.w	r2, r2, #1
90009c20:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
90009c24:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
90009c28:	f002 0201 	and.w	r2, r2, #1
90009c2c:	9202      	str	r2, [sp, #8]
90009c2e:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOD_CLK_ENABLE();
90009c30:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90009c34:	f042 0208 	orr.w	r2, r2, #8
90009c38:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
90009c3c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90009c40:	f002 0208 	and.w	r2, r2, #8
90009c44:	9203      	str	r2, [sp, #12]
90009c46:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOE_CLK_ENABLE();
90009c48:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90009c4c:	f042 0210 	orr.w	r2, r2, #16
90009c50:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
90009c54:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90009c58:	f002 0210 	and.w	r2, r2, #16
90009c5c:	9204      	str	r2, [sp, #16]
90009c5e:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOF_CLK_ENABLE();
90009c60:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90009c64:	f042 0220 	orr.w	r2, r2, #32
90009c68:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
90009c6c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90009c70:	f002 0220 	and.w	r2, r2, #32
90009c74:	9205      	str	r2, [sp, #20]
90009c76:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
90009c78:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90009c7c:	f042 0240 	orr.w	r2, r2, #64	; 0x40
90009c80:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
90009c84:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90009c88:	f002 0240 	and.w	r2, r2, #64	; 0x40
90009c8c:	9206      	str	r2, [sp, #24]
90009c8e:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOH_CLK_ENABLE();
90009c90:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90009c94:	f042 0280 	orr.w	r2, r2, #128	; 0x80
90009c98:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
90009c9c:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
  gpio_init_structure.Alternate = GPIO_AF12_FMC;
90009ca0:	910c      	str	r1, [sp, #48]	; 0x30
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
90009ca2:	2102      	movs	r1, #2
  __HAL_RCC_GPIOH_CLK_ENABLE();
90009ca4:	f003 0380 	and.w	r3, r3, #128	; 0x80
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
90009ca8:	e9cd 0108 	strd	r0, r1, [sp, #32]
90009cac:	2001      	movs	r0, #1
90009cae:	2103      	movs	r1, #3
  __HAL_RCC_GPIOH_CLK_ENABLE();
90009cb0:	9307      	str	r3, [sp, #28]
90009cb2:	9b07      	ldr	r3, [sp, #28]
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
90009cb4:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
  HAL_GPIO_Init(GPIOD, &gpio_init_structure);
90009cb8:	a908      	add	r1, sp, #32
90009cba:	483c      	ldr	r0, [pc, #240]	; (90009dac <BSP_SDRAM_Init+0x1c4>)
90009cbc:	f000 fc7e 	bl	9000a5bc <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
90009cc0:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &gpio_init_structure);
90009cc4:	a908      	add	r1, sp, #32
90009cc6:	483a      	ldr	r0, [pc, #232]	; (90009db0 <BSP_SDRAM_Init+0x1c8>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
90009cc8:	9308      	str	r3, [sp, #32]
  HAL_GPIO_Init(GPIOE, &gpio_init_structure);
90009cca:	f000 fc77 	bl	9000a5bc <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
90009cce:	f64f 033f 	movw	r3, #63551	; 0xf83f
  HAL_GPIO_Init(GPIOF, &gpio_init_structure);
90009cd2:	a908      	add	r1, sp, #32
90009cd4:	4837      	ldr	r0, [pc, #220]	; (90009db4 <BSP_SDRAM_Init+0x1cc>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
90009cd6:	9308      	str	r3, [sp, #32]
  HAL_GPIO_Init(GPIOF, &gpio_init_structure);
90009cd8:	f000 fc70 	bl	9000a5bc <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_8 | GPIO_PIN_15;
90009cdc:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &gpio_init_structure);
90009ce0:	a908      	add	r1, sp, #32
90009ce2:	4835      	ldr	r0, [pc, #212]	; (90009db8 <BSP_SDRAM_Init+0x1d0>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_8 | GPIO_PIN_15;
90009ce4:	9308      	str	r3, [sp, #32]
  HAL_GPIO_Init(GPIOG, &gpio_init_structure);
90009ce6:	f000 fc69 	bl	9000a5bc <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 ;
90009cea:	23e0      	movs	r3, #224	; 0xe0
  HAL_GPIO_Init(GPIOH, &gpio_init_structure);
90009cec:	a908      	add	r1, sp, #32
90009cee:	4833      	ldr	r0, [pc, #204]	; (90009dbc <BSP_SDRAM_Init+0x1d4>)
  gpio_init_structure.Pin   = GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 ;
90009cf0:	9308      	str	r3, [sp, #32]
  HAL_GPIO_Init(GPIOH, &gpio_init_structure);
90009cf2:	f000 fc63 	bl	9000a5bc <HAL_GPIO_Init>
  mdma_handle.Init.Priority = MDMA_PRIORITY_HIGH;
90009cf6:	2380      	movs	r3, #128	; 0x80
  mdma_handle.Init.Request = MDMA_REQUEST_SW;
90009cf8:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
  mdma_handle.Init.SourceInc = MDMA_SRC_INC_WORD;
90009cfc:	f240 2102 	movw	r1, #514	; 0x202
  HAL_MDMA_DeInit(&mdma_handle);
90009d00:	4620      	mov	r0, r4
  mdma_handle.Init.DestDataSize = MDMA_DEST_DATASIZE_WORD;
90009d02:	6223      	str	r3, [r4, #32]
  mdma_handle.Init.BufferTransferLength = 128;
90009d04:	62a3      	str	r3, [r4, #40]	; 0x28
  mdma_handle.Init.Request = MDMA_REQUEST_SW;
90009d06:	6062      	str	r2, [r4, #4]
  mdma_handle.Init.TransferTriggerMode = MDMA_BLOCK_TRANSFER;
90009d08:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
  mdma_handle.Init.SourceInc = MDMA_SRC_INC_WORD;
90009d0c:	6161      	str	r1, [r4, #20]
  mdma_handle.Init.TransferTriggerMode = MDMA_BLOCK_TRANSFER;
90009d0e:	60a2      	str	r2, [r4, #8]
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
90009d10:	4a2b      	ldr	r2, [pc, #172]	; (90009dc0 <BSP_SDRAM_Init+0x1d8>)
  __HAL_LINKDMA(hsdram, hmdma, mdma_handle);
90009d12:	6334      	str	r4, [r6, #48]	; 0x30
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
90009d14:	6022      	str	r2, [r4, #0]
  __HAL_LINKDMA(hsdram, hmdma, mdma_handle);
90009d16:	6426      	str	r6, [r4, #64]	; 0x40
  mdma_handle.Init.Priority = MDMA_PRIORITY_HIGH;
90009d18:	e9c4 3503 	strd	r3, r5, [r4, #12]
  mdma_handle.Init.DestinationInc = MDMA_DEST_INC_WORD;
90009d1c:	f640 0308 	movw	r3, #2056	; 0x808
90009d20:	61a3      	str	r3, [r4, #24]
  mdma_handle.Init.SourceDataSize = MDMA_SRC_DATASIZE_WORD;
90009d22:	2320      	movs	r3, #32
90009d24:	61e3      	str	r3, [r4, #28]
  mdma_handle.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
90009d26:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
  mdma_handle.Init.DestBurst = MDMA_DEST_BURST_SINGLE;
90009d2a:	e9c4 550b 	strd	r5, r5, [r4, #44]	; 0x2c
  mdma_handle.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
90009d2e:	6263      	str	r3, [r4, #36]	; 0x24
  mdma_handle.Init.DestBlockAddressOffset = 0;
90009d30:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
  HAL_MDMA_DeInit(&mdma_handle);
90009d34:	f003 f8aa 	bl	9000ce8c <HAL_MDMA_DeInit>
  HAL_MDMA_Init(&mdma_handle);
90009d38:	4620      	mov	r0, r4
90009d3a:	f003 f82d 	bl	9000cd98 <HAL_MDMA_Init>
  HAL_NVIC_SetPriority(SDRAM_MDMAx_IRQn, 0x0F, 0);
90009d3e:	462a      	mov	r2, r5
90009d40:	210f      	movs	r1, #15
90009d42:	207a      	movs	r0, #122	; 0x7a
90009d44:	f000 f9ce 	bl	9000a0e4 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(SDRAM_MDMAx_IRQn);
90009d48:	207a      	movs	r0, #122	; 0x7a
90009d4a:	f000 fa09 	bl	9000a160 <HAL_NVIC_EnableIRQ>
    if(MX_SDRAM_BANK2_Init(&hsdram[Instance],FMC_SDRAM_ROW_BITS_NUM_12, FMC_SDRAM_MEM_BUS_WIDTH_16) != HAL_OK)
90009d4e:	2210      	movs	r2, #16
90009d50:	2104      	movs	r1, #4
90009d52:	4630      	mov	r0, r6
90009d54:	f7ff ff18 	bl	90009b88 <MX_SDRAM_BANK2_Init>
90009d58:	b9f0      	cbnz	r0, 90009d98 <BSP_SDRAM_Init+0x1b0>
      pRegMode.TargetBank      = FMC_SDRAM_CMD_TARGET_BANK2;
90009d5a:	491a      	ldr	r1, [pc, #104]	; (90009dc4 <BSP_SDRAM_Init+0x1dc>)
90009d5c:	2208      	movs	r2, #8
90009d5e:	2303      	movs	r3, #3
      if(MT48LC4M32B2_Init(&hsdram[Instance], &pRegMode) != MT48LC4M32B2_OK)
90009d60:	4630      	mov	r0, r6
      pRegMode.TargetBank      = FMC_SDRAM_CMD_TARGET_BANK2;
90009d62:	e9c1 2300 	strd	r2, r3, [r1]
90009d66:	f240 6203 	movw	r2, #1539	; 0x603
90009d6a:	2300      	movs	r3, #0
90009d6c:	e9c1 2302 	strd	r2, r3, [r1, #8]
90009d70:	2200      	movs	r2, #0
90009d72:	2330      	movs	r3, #48	; 0x30
90009d74:	e9c1 2304 	strd	r2, r3, [r1, #16]
90009d78:	2200      	movs	r2, #0
90009d7a:	f44f 7300 	mov.w	r3, #512	; 0x200
90009d7e:	e9c1 2306 	strd	r2, r3, [r1, #24]
      if(MT48LC4M32B2_Init(&hsdram[Instance], &pRegMode) != MT48LC4M32B2_OK)
90009d82:	f7ff fa37 	bl	900091f4 <MT48LC4M32B2_Init>
        ret =  BSP_ERROR_COMPONENT_FAILURE;
90009d86:	2800      	cmp	r0, #0
90009d88:	bf18      	it	ne
90009d8a:	f06f 0004 	mvnne.w	r0, #4
}
90009d8e:	b00e      	add	sp, #56	; 0x38
90009d90:	bd70      	pop	{r4, r5, r6, pc}
    ret =  BSP_ERROR_WRONG_PARAM;
90009d92:	f06f 0001 	mvn.w	r0, #1
}
90009d96:	4770      	bx	lr
      ret = BSP_ERROR_NO_INIT;
90009d98:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
90009d9c:	e7f7      	b.n	90009d8e <BSP_SDRAM_Init+0x1a6>
90009d9e:	bf00      	nop
90009da0:	58024400 	.word	0x58024400
90009da4:	2400a1c8 	.word	0x2400a1c8
90009da8:	2400a128 	.word	0x2400a128
90009dac:	58020c00 	.word	0x58020c00
90009db0:	58021000 	.word	0x58021000
90009db4:	58021400 	.word	0x58021400
90009db8:	58021800 	.word	0x58021800
90009dbc:	58021c00 	.word	0x58021c00
90009dc0:	52000040 	.word	0x52000040
90009dc4:	2400a238 	.word	0x2400a238

90009dc8 <BSP_TS_Init>:
  * @param  Instance TS instance. Could be only 0.
  * @param  TS_Init  TS Init structure
  * @retval BSP status
  */
int32_t BSP_TS_Init(uint32_t Instance, TS_Init_t *TS_Init)
{
90009dc8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90009dcc:	b088      	sub	sp, #32
  int32_t ret = BSP_ERROR_NONE;

  if((Instance >=TS_INSTANCES_NBR) || (TS_Init->Width == 0U) ||( TS_Init->Width > TS_MAX_WIDTH) ||\
90009dce:	2800      	cmp	r0, #0
90009dd0:	d16b      	bne.n	90009eaa <BSP_TS_Init+0xe2>
90009dd2:	680b      	ldr	r3, [r1, #0]
90009dd4:	460c      	mov	r4, r1
90009dd6:	1e5a      	subs	r2, r3, #1
90009dd8:	f5b2 7ff0 	cmp.w	r2, #480	; 0x1e0
90009ddc:	d265      	bcs.n	90009eaa <BSP_TS_Init+0xe2>
                         (TS_Init->Height == 0U) ||( TS_Init->Height > TS_MAX_HEIGHT) ||\
90009dde:	684a      	ldr	r2, [r1, #4]
90009de0:	1e51      	subs	r1, r2, #1
90009de2:	f5b1 7f88 	cmp.w	r1, #272	; 0x110
90009de6:	d260      	bcs.n	90009eaa <BSP_TS_Init+0xe2>
                         (TS_Init->Accuracy > TS_MIN((TS_Init->Width), (TS_Init->Height))))
90009de8:	4293      	cmp	r3, r2
90009dea:	bf28      	it	cs
90009dec:	4613      	movcs	r3, r2
                         (TS_Init->Height == 0U) ||( TS_Init->Height > TS_MAX_HEIGHT) ||\
90009dee:	68e2      	ldr	r2, [r4, #12]
90009df0:	429a      	cmp	r2, r3
90009df2:	d85a      	bhi.n	90009eaa <BSP_TS_Init+0xe2>
  FT5336_IO_t              IOCtx;
  static FT5336_Object_t   FT5336Obj;
  uint32_t ft5336_id       = 0;

  /* Configure the touch screen driver */
  IOCtx.Address     = TS_I2C_ADDRESS;
90009df4:	2270      	movs	r2, #112	; 0x70
  IOCtx.Init        = BSP_I2C4_Init;
90009df6:	4b31      	ldr	r3, [pc, #196]	; (90009ebc <BSP_TS_Init+0xf4>)
  IOCtx.DeInit      = BSP_I2C4_DeInit;
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
  IOCtx.GetTick     = BSP_GetTick;

  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
90009df8:	4d31      	ldr	r5, [pc, #196]	; (90009ec0 <BSP_TS_Init+0xf8>)
90009dfa:	a902      	add	r1, sp, #8
  IOCtx.Address     = TS_I2C_ADDRESS;
90009dfc:	f8ad 2010 	strh.w	r2, [sp, #16]
  IOCtx.Init        = BSP_I2C4_Init;
90009e00:	9302      	str	r3, [sp, #8]
  IOCtx.DeInit      = BSP_I2C4_DeInit;
90009e02:	4a30      	ldr	r2, [pc, #192]	; (90009ec4 <BSP_TS_Init+0xfc>)
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
90009e04:	4b30      	ldr	r3, [pc, #192]	; (90009ec8 <BSP_TS_Init+0x100>)
  IOCtx.DeInit      = BSP_I2C4_DeInit;
90009e06:	9203      	str	r2, [sp, #12]
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
90009e08:	9306      	str	r3, [sp, #24]
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
90009e0a:	4a30      	ldr	r2, [pc, #192]	; (90009ecc <BSP_TS_Init+0x104>)
  IOCtx.GetTick     = BSP_GetTick;
90009e0c:	4b30      	ldr	r3, [pc, #192]	; (90009ed0 <BSP_TS_Init+0x108>)
  uint32_t ft5336_id       = 0;
90009e0e:	9001      	str	r0, [sp, #4]
  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
90009e10:	4628      	mov	r0, r5
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
90009e12:	9205      	str	r2, [sp, #20]
  IOCtx.GetTick     = BSP_GetTick;
90009e14:	9307      	str	r3, [sp, #28]
  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
90009e16:	f7ff f93f 	bl	90009098 <FT5336_RegisterBusIO>
90009e1a:	2800      	cmp	r0, #0
90009e1c:	d14b      	bne.n	90009eb6 <BSP_TS_Init+0xee>
  {
    ret = BSP_ERROR_BUS_FAILURE;
  }
  else if(FT5336_ReadID(&FT5336Obj, &ft5336_id) != FT5336_OK)
90009e1e:	a901      	add	r1, sp, #4
90009e20:	4628      	mov	r0, r5
90009e22:	f7ff f82f 	bl	90008e84 <FT5336_ReadID>
90009e26:	2800      	cmp	r0, #0
90009e28:	d145      	bne.n	90009eb6 <BSP_TS_Init+0xee>
  {
    ret = BSP_ERROR_COMPONENT_FAILURE;
  }
  else if(ft5336_id != FT5336_ID)
90009e2a:	9b01      	ldr	r3, [sp, #4]
90009e2c:	2b51      	cmp	r3, #81	; 0x51
90009e2e:	d142      	bne.n	90009eb6 <BSP_TS_Init+0xee>
    ret = BSP_ERROR_UNKNOWN_COMPONENT;
  }
  else
  {
    Ts_CompObj[Instance] = &FT5336Obj;
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
90009e30:	4b28      	ldr	r3, [pc, #160]	; (90009ed4 <BSP_TS_Init+0x10c>)

    if(Ts_Drv->Init(Ts_CompObj[Instance]) != FT5336_OK)
90009e32:	4628      	mov	r0, r5
    Ts_CompObj[Instance] = &FT5336Obj;
90009e34:	4f28      	ldr	r7, [pc, #160]	; (90009ed8 <BSP_TS_Init+0x110>)
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
90009e36:	f8df 80a8 	ldr.w	r8, [pc, #168]	; 90009ee0 <BSP_TS_Init+0x118>
    Ts_CompObj[Instance] = &FT5336Obj;
90009e3a:	603d      	str	r5, [r7, #0]
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
90009e3c:	f8c8 3000 	str.w	r3, [r8]
    if(Ts_Drv->Init(Ts_CompObj[Instance]) != FT5336_OK)
90009e40:	681b      	ldr	r3, [r3, #0]
90009e42:	4798      	blx	r3
90009e44:	4606      	mov	r6, r0
90009e46:	2800      	cmp	r0, #0
90009e48:	d135      	bne.n	90009eb6 <BSP_TS_Init+0xee>
      Ts_Ctx[Instance].Width             = TS_Init->Width;
90009e4a:	4d24      	ldr	r5, [pc, #144]	; (90009edc <BSP_TS_Init+0x114>)
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
90009e4c:	a902      	add	r1, sp, #8
90009e4e:	6838      	ldr	r0, [r7, #0]
90009e50:	f8d8 3000 	ldr.w	r3, [r8]
      Ts_Ctx[Instance].Width             = TS_Init->Width;
90009e54:	e9d4 7200 	ldrd	r7, r2, [r4]
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
90009e58:	69db      	ldr	r3, [r3, #28]
      Ts_Ctx[Instance].Width             = TS_Init->Width;
90009e5a:	e9c5 7200 	strd	r7, r2, [r5]
90009e5e:	68a2      	ldr	r2, [r4, #8]
90009e60:	60aa      	str	r2, [r5, #8]
90009e62:	68e2      	ldr	r2, [r4, #12]
90009e64:	60ea      	str	r2, [r5, #12]
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
90009e66:	4798      	blx	r3
90009e68:	2800      	cmp	r0, #0
90009e6a:	db18      	blt.n	90009e9e <BSP_TS_Init+0xd6>
        Ts_Ctx[Instance].MaxX = Capabilities.MaxXl;
90009e6c:	e9dd 3203 	ldrd	r3, r2, [sp, #12]
90009e70:	e9c5 3204 	strd	r3, r2, [r5, #16]
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90009e74:	68e3      	ldr	r3, [r4, #12]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90009e76:	e9d4 2100 	ldrd	r2, r1, [r4]
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90009e7a:	441a      	add	r2, r3
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90009e7c:	440b      	add	r3, r1
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90009e7e:	3201      	adds	r2, #1
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90009e80:	3301      	adds	r3, #1
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90009e82:	e9c5 2206 	strd	r2, r2, [r5, #24]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90009e86:	e9c5 330b 	strd	r3, r3, [r5, #44]	; 0x2c
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90009e8a:	622a      	str	r2, [r5, #32]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90009e8c:	636b      	str	r3, [r5, #52]	; 0x34
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90009e8e:	626a      	str	r2, [r5, #36]	; 0x24
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90009e90:	63ab      	str	r3, [r5, #56]	; 0x38
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90009e92:	62aa      	str	r2, [r5, #40]	; 0x28
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90009e94:	63eb      	str	r3, [r5, #60]	; 0x3c
}
90009e96:	4630      	mov	r0, r6
90009e98:	b008      	add	sp, #32
90009e9a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        ret = BSP_ERROR_COMPONENT_FAILURE;
90009e9e:	f06f 0604 	mvn.w	r6, #4
}
90009ea2:	4630      	mov	r0, r6
90009ea4:	b008      	add	sp, #32
90009ea6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    ret = BSP_ERROR_WRONG_PARAM;
90009eaa:	f06f 0601 	mvn.w	r6, #1
}
90009eae:	4630      	mov	r0, r6
90009eb0:	b008      	add	sp, #32
90009eb2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      ret = BSP_ERROR_NO_INIT;
90009eb6:	f04f 36ff 	mov.w	r6, #4294967295
90009eba:	e7ec      	b.n	90009e96 <BSP_TS_Init+0xce>
90009ebc:	9000933d 	.word	0x9000933d
90009ec0:	2400a258 	.word	0x2400a258
90009ec4:	900092a9 	.word	0x900092a9
90009ec8:	90009b15 	.word	0x90009b15
90009ecc:	90009ad9 	.word	0x90009ad9
90009ed0:	90009b51 	.word	0x90009b51
90009ed4:	24000030 	.word	0x24000030
90009ed8:	2400a280 	.word	0x2400a280
90009edc:	2400a284 	.word	0x2400a284
90009ee0:	2400a2c4 	.word	0x2400a2c4

90009ee4 <BSP_TS_GetState>:
  if(Instance >= TS_INSTANCES_NBR)
90009ee4:	2800      	cmp	r0, #0
90009ee6:	d157      	bne.n	90009f98 <BSP_TS_GetState+0xb4>
    if(Ts_Drv->GetState(Ts_CompObj[Instance], &state) < 0)
90009ee8:	4b2d      	ldr	r3, [pc, #180]	; (90009fa0 <BSP_TS_GetState+0xbc>)
90009eea:	4a2e      	ldr	r2, [pc, #184]	; (90009fa4 <BSP_TS_GetState+0xc0>)
90009eec:	681b      	ldr	r3, [r3, #0]
90009eee:	6810      	ldr	r0, [r2, #0]
90009ef0:	691b      	ldr	r3, [r3, #16]
{
90009ef2:	b5f0      	push	{r4, r5, r6, r7, lr}
90009ef4:	b085      	sub	sp, #20
90009ef6:	460c      	mov	r4, r1
    if(Ts_Drv->GetState(Ts_CompObj[Instance], &state) < 0)
90009ef8:	a901      	add	r1, sp, #4
90009efa:	4798      	blx	r3
90009efc:	2800      	cmp	r0, #0
90009efe:	db41      	blt.n	90009f84 <BSP_TS_GetState+0xa0>
    else if(state.TouchDetected != 0U)
90009f00:	9d01      	ldr	r5, [sp, #4]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_XY) == TS_SWAP_XY)
90009f02:	4b29      	ldr	r3, [pc, #164]	; (90009fa8 <BSP_TS_GetState+0xc4>)
    else if(state.TouchDetected != 0U)
90009f04:	b93d      	cbnz	r5, 90009f16 <BSP_TS_GetState+0x32>
      TS_State->TouchX = Ts_Ctx[Instance].PreviousX[0];
90009f06:	699a      	ldr	r2, [r3, #24]
  int32_t ret = BSP_ERROR_NONE;
90009f08:	4628      	mov	r0, r5
      TS_State->TouchY = Ts_Ctx[Instance].PreviousY[0];
90009f0a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
      TS_State->TouchDetected = 0U;
90009f0c:	6025      	str	r5, [r4, #0]
      TS_State->TouchY = Ts_Ctx[Instance].PreviousY[0];
90009f0e:	e9c4 2301 	strd	r2, r3, [r4, #4]
}
90009f12:	b005      	add	sp, #20
90009f14:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_XY) == TS_SWAP_XY)
90009f16:	6898      	ldr	r0, [r3, #8]
90009f18:	0702      	lsls	r2, r0, #28
      y_oriented = state.TouchY;
90009f1a:	e9dd c702 	ldrd	ip, r7, [sp, #8]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_XY) == TS_SWAP_XY)
90009f1e:	d435      	bmi.n	90009f8c <BSP_TS_GetState+0xa8>
      y_oriented = state.TouchY;
90009f20:	4639      	mov	r1, r7
      x_oriented = state.TouchX;
90009f22:	4662      	mov	r2, ip
        x_oriented = Ts_Ctx[Instance].MaxX - state.TouchX - 1UL;
90009f24:	691e      	ldr	r6, [r3, #16]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_X) == TS_SWAP_X)
90009f26:	f010 0f02 	tst.w	r0, #2
        x_oriented = Ts_Ctx[Instance].MaxX - state.TouchX - 1UL;
90009f2a:	bf1c      	itt	ne
90009f2c:	f106 32ff 	addne.w	r2, r6, #4294967295
90009f30:	eba2 020c 	subne.w	r2, r2, ip
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_Y) == TS_SWAP_Y)
90009f34:	f010 0f04 	tst.w	r0, #4
        y_oriented = Ts_Ctx[Instance].MaxY - state.TouchY;
90009f38:	6958      	ldr	r0, [r3, #20]
90009f3a:	bf18      	it	ne
90009f3c:	1bc1      	subne	r1, r0, r7
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
90009f3e:	681f      	ldr	r7, [r3, #0]
90009f40:	fb07 f202 	mul.w	r2, r7, r2
90009f44:	fbb2 f2f6 	udiv	r2, r2, r6
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
90009f48:	685e      	ldr	r6, [r3, #4]
      TS_State->TouchDetected = state.TouchDetected;
90009f4a:	6025      	str	r5, [r4, #0]
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
90009f4c:	fb06 f101 	mul.w	r1, r6, r1
      x_diff = (TS_State->TouchX > Ts_Ctx[Instance].PreviousX[0])?
90009f50:	699e      	ldr	r6, [r3, #24]
        y_diff = (TS_State->TouchY > Ts_Ctx[Instance].PreviousY[0])?
90009f52:	6add      	ldr	r5, [r3, #44]	; 0x2c
        (TS_State->TouchX - Ts_Ctx[Instance].PreviousX[0]):
90009f54:	42b2      	cmp	r2, r6
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
90009f56:	6062      	str	r2, [r4, #4]
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
90009f58:	fbb1 f1f0 	udiv	r1, r1, r0
        (TS_State->TouchX - Ts_Ctx[Instance].PreviousX[0]):
90009f5c:	bf8c      	ite	hi
90009f5e:	1b90      	subhi	r0, r2, r6
90009f60:	1ab0      	subls	r0, r6, r2
          (TS_State->TouchY - Ts_Ctx[Instance].PreviousY[0]):
90009f62:	42a9      	cmp	r1, r5
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
90009f64:	60a1      	str	r1, [r4, #8]
          (TS_State->TouchY - Ts_Ctx[Instance].PreviousY[0]):
90009f66:	bf8c      	ite	hi
90009f68:	1b4f      	subhi	r7, r1, r5
90009f6a:	1a6f      	subls	r7, r5, r1
          if ((x_diff > Ts_Ctx[Instance].Accuracy) || (y_diff > Ts_Ctx[Instance].Accuracy))
90009f6c:	42b8      	cmp	r0, r7
90009f6e:	bf38      	it	cc
90009f70:	4638      	movcc	r0, r7
90009f72:	68df      	ldr	r7, [r3, #12]
90009f74:	4287      	cmp	r7, r0
  int32_t ret = BSP_ERROR_NONE;
90009f76:	f04f 0000 	mov.w	r0, #0
          if ((x_diff > Ts_Ctx[Instance].Accuracy) || (y_diff > Ts_Ctx[Instance].Accuracy))
90009f7a:	d20a      	bcs.n	90009f92 <BSP_TS_GetState+0xae>
            Ts_Ctx[Instance].PreviousX[0] = TS_State->TouchX;
90009f7c:	619a      	str	r2, [r3, #24]
            Ts_Ctx[Instance].PreviousY[0] = TS_State->TouchY;
90009f7e:	62d9      	str	r1, [r3, #44]	; 0x2c
}
90009f80:	b005      	add	sp, #20
90009f82:	bdf0      	pop	{r4, r5, r6, r7, pc}
      ret = BSP_ERROR_COMPONENT_FAILURE;
90009f84:	f06f 0004 	mvn.w	r0, #4
}
90009f88:	b005      	add	sp, #20
90009f8a:	bdf0      	pop	{r4, r5, r6, r7, pc}
        y_oriented = state.TouchX;
90009f8c:	4661      	mov	r1, ip
        x_oriented = state.TouchY;
90009f8e:	463a      	mov	r2, r7
90009f90:	e7c8      	b.n	90009f24 <BSP_TS_GetState+0x40>
            TS_State->TouchY = Ts_Ctx[Instance].PreviousY[0];
90009f92:	e9c4 6501 	strd	r6, r5, [r4, #4]
90009f96:	e7bc      	b.n	90009f12 <BSP_TS_GetState+0x2e>
    ret = BSP_ERROR_WRONG_PARAM;
90009f98:	f06f 0001 	mvn.w	r0, #1
}
90009f9c:	4770      	bx	lr
90009f9e:	bf00      	nop
90009fa0:	2400a2c4 	.word	0x2400a2c4
90009fa4:	2400a280 	.word	0x2400a280
90009fa8:	2400a284 	.word	0x2400a284

90009fac <SystemInit>:
#endif

extern unsigned int VECTOR_TABLE_LOCATION;

void SystemInit (void)
{
90009fac:	b410      	push	{r4}
 __IO uint32_t tmpreg;
#endif /* DATA_IN_D2_SRAM */

  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
90009fae:	4c19      	ldr	r4, [pc, #100]	; (9000a014 <SystemInit+0x68>)
  /* Reset the RCC clock configuration to the default reset state ------------*/
  /* Set HSION bit */
  RCC->CR |= RCC_CR_HSION;

  /* Reset CFGR register */
  RCC->CFGR = 0x00000000;
90009fb0:	2200      	movs	r2, #0
  RCC->CR |= RCC_CR_HSION;
90009fb2:	4b19      	ldr	r3, [pc, #100]	; (9000a018 <SystemInit+0x6c>)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
90009fb4:	f8d4 1088 	ldr.w	r1, [r4, #136]	; 0x88

  /* Reset HSEON, CSSON , CSION,RC48ON, CSIKERON PLL1ON, PLL2ON and PLL3ON bits */
  RCC->CR &= 0xEAF6ED7FU;
90009fb8:	4818      	ldr	r0, [pc, #96]	; (9000a01c <SystemInit+0x70>)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
90009fba:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
90009fbe:	f8c4 1088 	str.w	r1, [r4, #136]	; 0x88
  RCC->CR |= RCC_CR_HSION;
90009fc2:	6819      	ldr	r1, [r3, #0]
  SCB->VTOR = FLASH_BANK2_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
#endif /* VECT_TAB_SRAM */

#else
  /* dual core CM7 or single core line */
  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
90009fc4:	4c16      	ldr	r4, [pc, #88]	; (9000a020 <SystemInit+0x74>)
  RCC->CR |= RCC_CR_HSION;
90009fc6:	f041 0101 	orr.w	r1, r1, #1
90009fca:	6019      	str	r1, [r3, #0]
  RCC->CFGR = 0x00000000;
90009fcc:	611a      	str	r2, [r3, #16]
  RCC->CR &= 0xEAF6ED7FU;
90009fce:	6819      	ldr	r1, [r3, #0]
90009fd0:	4008      	ands	r0, r1
  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
90009fd2:	4914      	ldr	r1, [pc, #80]	; (9000a024 <SystemInit+0x78>)
  RCC->CR &= 0xEAF6ED7FU;
90009fd4:	6018      	str	r0, [r3, #0]
  RCC->D1CFGR = 0x00000000;
90009fd6:	619a      	str	r2, [r3, #24]
  RCC->D2CFGR = 0x00000000;
90009fd8:	61da      	str	r2, [r3, #28]
  RCC->D3CFGR = 0x00000000;
90009fda:	621a      	str	r2, [r3, #32]
  RCC->PLLCKSELR = 0x00000000;
90009fdc:	629a      	str	r2, [r3, #40]	; 0x28
  RCC->PLLCFGR = 0x00000000;
90009fde:	62da      	str	r2, [r3, #44]	; 0x2c
  RCC->PLL1DIVR = 0x00000000;
90009fe0:	631a      	str	r2, [r3, #48]	; 0x30
  RCC->PLL1FRACR = 0x00000000;
90009fe2:	635a      	str	r2, [r3, #52]	; 0x34
  RCC->PLL2DIVR = 0x00000000;
90009fe4:	639a      	str	r2, [r3, #56]	; 0x38
  RCC->PLL2FRACR = 0x00000000;
90009fe6:	63da      	str	r2, [r3, #60]	; 0x3c
  RCC->PLL3DIVR = 0x00000000;
90009fe8:	641a      	str	r2, [r3, #64]	; 0x40
  RCC->PLL3FRACR = 0x00000000;
90009fea:	645a      	str	r2, [r3, #68]	; 0x44
  RCC->CR &= 0xFFFBFFFFU;
90009fec:	6818      	ldr	r0, [r3, #0]
90009fee:	f420 2080 	bic.w	r0, r0, #262144	; 0x40000
90009ff2:	6018      	str	r0, [r3, #0]
  RCC->CIER = 0x00000000;
90009ff4:	661a      	str	r2, [r3, #96]	; 0x60
  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
90009ff6:	6823      	ldr	r3, [r4, #0]
90009ff8:	4019      	ands	r1, r3
90009ffa:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
90009ffe:	d203      	bcs.n	9000a008 <SystemInit+0x5c>
  {
    /* if stm32h7 revY*/
    /* Change  the switch matrix read issuing capability to 1 for the AXI SRAM target (Target 7) */
    *((__IO uint32_t*)0x51008108) = 0x000000001U;
9000a000:	4b09      	ldr	r3, [pc, #36]	; (9000a028 <SystemInit+0x7c>)
9000a002:	2201      	movs	r2, #1
9000a004:	f8c3 2108 	str.w	r2, [r3, #264]	; 0x108

  /* Configure the Vector Table location add offset address for cortex-M7 ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = D1_AXISRAM_BASE  | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal D1 AXI-RAM */
#elif defined(VECT_TAB_QSPI)
  SCB->VTOR = (unsigned int)&VECTOR_TABLE_LOCATION; /* Vector Table Relocation in External FLASH */
9000a008:	4a08      	ldr	r2, [pc, #32]	; (9000a02c <SystemInit+0x80>)
9000a00a:	4b02      	ldr	r3, [pc, #8]	; (9000a014 <SystemInit+0x68>)
  SCB->VTOR = FLASH_BANK1_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
#endif

#endif /*DUAL_CORE && CORE_CM4*/

}
9000a00c:	f85d 4b04 	ldr.w	r4, [sp], #4
  SCB->VTOR = (unsigned int)&VECTOR_TABLE_LOCATION; /* Vector Table Relocation in External FLASH */
9000a010:	609a      	str	r2, [r3, #8]
}
9000a012:	4770      	bx	lr
9000a014:	e000ed00 	.word	0xe000ed00
9000a018:	58024400 	.word	0x58024400
9000a01c:	eaf6ed7f 	.word	0xeaf6ed7f
9000a020:	5c001000 	.word	0x5c001000
9000a024:	ffff0000 	.word	0xffff0000
9000a028:	51008000 	.word	0x51008000
9000a02c:	90000000 	.word	0x90000000

9000a030 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
9000a030:	b510      	push	{r4, lr}
   __HAL_ART_CONFIG_BASE_ADDRESS(0x08100000UL);  /* Configure the Cortex-M4 ART Base address to the Flash Bank 2 : */
   __HAL_ART_ENABLE();                           /* Enable the Cortex-M4 ART */
#endif /* DUAL_CORE &&  CORE_CM4 */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
9000a032:	2003      	movs	r0, #3
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE)>> RCC_CDCFGR1_CDCPRE_Pos]) & 0x1FU);
#endif

  /* Update the SystemD2Clock global variable */
#if defined(RCC_D1CFGR_HPRE)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000a034:	4c12      	ldr	r4, [pc, #72]	; (9000a080 <HAL_Init+0x50>)
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
9000a036:	f000 f843 	bl	9000a0c0 <HAL_NVIC_SetPriorityGrouping>
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000a03a:	f003 fc65 	bl	9000d908 <HAL_RCC_GetSysClockFreq>
9000a03e:	4b11      	ldr	r3, [pc, #68]	; (9000a084 <HAL_Init+0x54>)
9000a040:	4911      	ldr	r1, [pc, #68]	; (9000a088 <HAL_Init+0x58>)
9000a042:	699a      	ldr	r2, [r3, #24]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000a044:	699b      	ldr	r3, [r3, #24]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000a046:	f3c2 2203 	ubfx	r2, r2, #8, #4
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000a04a:	f003 030f 	and.w	r3, r3, #15
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000a04e:	5c8a      	ldrb	r2, [r1, r2]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000a050:	5ccb      	ldrb	r3, [r1, r3]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000a052:	f002 021f 	and.w	r2, r2, #31
#endif

#if defined(DUAL_CORE) && defined(CORE_CM4)
  SystemCoreClock = SystemD2Clock;
#else
  SystemCoreClock = common_system_clock;
9000a056:	490d      	ldr	r1, [pc, #52]	; (9000a08c <HAL_Init+0x5c>)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000a058:	f003 031f 	and.w	r3, r3, #31
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000a05c:	40d0      	lsrs	r0, r2
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000a05e:	fa20 f303 	lsr.w	r3, r0, r3
  SystemCoreClock = common_system_clock;
9000a062:	6008      	str	r0, [r1, #0]
#endif /* DUAL_CORE && CORE_CM4 */

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
9000a064:	2000      	movs	r0, #0
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000a066:	6023      	str	r3, [r4, #0]
  if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
9000a068:	f7fb fcf6 	bl	90005a58 <HAL_InitTick>
9000a06c:	b110      	cbz	r0, 9000a074 <HAL_Init+0x44>
  {
    return HAL_ERROR;
9000a06e:	2401      	movs	r4, #1
  /* Init the low level hardware */
  HAL_MspInit();

  /* Return function status */
  return HAL_OK;
}
9000a070:	4620      	mov	r0, r4
9000a072:	bd10      	pop	{r4, pc}
9000a074:	4604      	mov	r4, r0
  HAL_MspInit();
9000a076:	f7fb f9d3 	bl	90005420 <HAL_MspInit>
}
9000a07a:	4620      	mov	r0, r4
9000a07c:	bd10      	pop	{r4, pc}
9000a07e:	bf00      	nop
9000a080:	24000064 	.word	0x24000064
9000a084:	58024400 	.word	0x58024400
9000a088:	9002dcf8 	.word	0x9002dcf8
9000a08c:	24000060 	.word	0x24000060

9000a090 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += (uint32_t)uwTickFreq;
9000a090:	4a03      	ldr	r2, [pc, #12]	; (9000a0a0 <HAL_IncTick+0x10>)
9000a092:	4b04      	ldr	r3, [pc, #16]	; (9000a0a4 <HAL_IncTick+0x14>)
9000a094:	6811      	ldr	r1, [r2, #0]
9000a096:	781b      	ldrb	r3, [r3, #0]
9000a098:	440b      	add	r3, r1
9000a09a:	6013      	str	r3, [r2, #0]
}
9000a09c:	4770      	bx	lr
9000a09e:	bf00      	nop
9000a0a0:	2400a2c8 	.word	0x2400a2c8
9000a0a4:	24000068 	.word	0x24000068

9000a0a8 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
9000a0a8:	4b01      	ldr	r3, [pc, #4]	; (9000a0b0 <HAL_GetTick+0x8>)
9000a0aa:	6818      	ldr	r0, [r3, #0]
}
9000a0ac:	4770      	bx	lr
9000a0ae:	bf00      	nop
9000a0b0:	2400a2c8 	.word	0x2400a2c8

9000a0b4 <HAL_GetREVID>:
  * @brief  Returns the device revision identifier.
  * @retval Device revision identifier
  */
uint32_t HAL_GetREVID(void)
{
   return((DBGMCU->IDCODE) >> 16);
9000a0b4:	4b01      	ldr	r3, [pc, #4]	; (9000a0bc <HAL_GetREVID+0x8>)
9000a0b6:	6818      	ldr	r0, [r3, #0]
}
9000a0b8:	0c00      	lsrs	r0, r0, #16
9000a0ba:	4770      	bx	lr
9000a0bc:	5c001000 	.word	0x5c001000

9000a0c0 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
9000a0c0:	4906      	ldr	r1, [pc, #24]	; (9000a0dc <HAL_NVIC_SetPriorityGrouping+0x1c>)
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
9000a0c2:	f64f 0cff 	movw	ip, #63743	; 0xf8ff
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
9000a0c6:	0200      	lsls	r0, r0, #8
  reg_value  =  (reg_value                                   |
9000a0c8:	4b05      	ldr	r3, [pc, #20]	; (9000a0e0 <HAL_NVIC_SetPriorityGrouping+0x20>)
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
9000a0ca:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
9000a0cc:	f400 60e0 	and.w	r0, r0, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
9000a0d0:	ea02 020c 	and.w	r2, r2, ip
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
9000a0d4:	4310      	orrs	r0, r2
  reg_value  =  (reg_value                                   |
9000a0d6:	4303      	orrs	r3, r0
  SCB->AIRCR =  reg_value;
9000a0d8:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));

  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
9000a0da:	4770      	bx	lr
9000a0dc:	e000ed00 	.word	0xe000ed00
9000a0e0:	05fa0000 	.word	0x05fa0000

9000a0e4 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
9000a0e4:	4b1b      	ldr	r3, [pc, #108]	; (9000a154 <HAL_NVIC_SetPriority+0x70>)
9000a0e6:	68db      	ldr	r3, [r3, #12]
9000a0e8:	f3c3 2302 	ubfx	r3, r3, #8, #3
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{
9000a0ec:	b500      	push	{lr}
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
9000a0ee:	f1c3 0e07 	rsb	lr, r3, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
9000a0f2:	f103 0c04 	add.w	ip, r3, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
9000a0f6:	f1be 0f04 	cmp.w	lr, #4
9000a0fa:	bf28      	it	cs
9000a0fc:	f04f 0e04 	movcs.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
9000a100:	f1bc 0f06 	cmp.w	ip, #6
9000a104:	d91a      	bls.n	9000a13c <HAL_NVIC_SetPriority+0x58>
9000a106:	3b03      	subs	r3, #3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
9000a108:	f04f 3cff 	mov.w	ip, #4294967295
9000a10c:	fa0c fc03 	lsl.w	ip, ip, r3
9000a110:	ea22 020c 	bic.w	r2, r2, ip
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
9000a114:	f04f 3cff 	mov.w	ip, #4294967295
  if ((int32_t)(IRQn) >= 0)
9000a118:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
9000a11a:	fa0c fc0e 	lsl.w	ip, ip, lr
9000a11e:	ea21 010c 	bic.w	r1, r1, ip
9000a122:	fa01 f103 	lsl.w	r1, r1, r3
9000a126:	ea41 0102 	orr.w	r1, r1, r2
  if ((int32_t)(IRQn) >= 0)
9000a12a:	db0a      	blt.n	9000a142 <HAL_NVIC_SetPriority+0x5e>
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
9000a12c:	0109      	lsls	r1, r1, #4
9000a12e:	4b0a      	ldr	r3, [pc, #40]	; (9000a158 <HAL_NVIC_SetPriority+0x74>)
9000a130:	b2c9      	uxtb	r1, r1
9000a132:	4403      	add	r3, r0
9000a134:	f883 1300 	strb.w	r1, [r3, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));

  prioritygroup = NVIC_GetPriorityGrouping();

  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
9000a138:	f85d fb04 	ldr.w	pc, [sp], #4
9000a13c:	2200      	movs	r2, #0
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
9000a13e:	4613      	mov	r3, r2
9000a140:	e7e8      	b.n	9000a114 <HAL_NVIC_SetPriority+0x30>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
9000a142:	f000 000f 	and.w	r0, r0, #15
9000a146:	0109      	lsls	r1, r1, #4
9000a148:	4b04      	ldr	r3, [pc, #16]	; (9000a15c <HAL_NVIC_SetPriority+0x78>)
9000a14a:	b2c9      	uxtb	r1, r1
9000a14c:	4403      	add	r3, r0
9000a14e:	7619      	strb	r1, [r3, #24]
9000a150:	f85d fb04 	ldr.w	pc, [sp], #4
9000a154:	e000ed00 	.word	0xe000ed00
9000a158:	e000e100 	.word	0xe000e100
9000a15c:	e000ecfc 	.word	0xe000ecfc

9000a160 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
9000a160:	2800      	cmp	r0, #0
9000a162:	db07      	blt.n	9000a174 <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
9000a164:	2301      	movs	r3, #1
9000a166:	f000 011f 	and.w	r1, r0, #31
9000a16a:	4a03      	ldr	r2, [pc, #12]	; (9000a178 <HAL_NVIC_EnableIRQ+0x18>)
9000a16c:	0940      	lsrs	r0, r0, #5
9000a16e:	408b      	lsls	r3, r1
9000a170:	f842 3020 	str.w	r3, [r2, r0, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
9000a174:	4770      	bx	lr
9000a176:	bf00      	nop
9000a178:	e000e100 	.word	0xe000e100

9000a17c <HAL_NVIC_DisableIRQ>:
  if ((int32_t)(IRQn) >= 0)
9000a17c:	2800      	cmp	r0, #0
9000a17e:	db0c      	blt.n	9000a19a <HAL_NVIC_DisableIRQ+0x1e>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
9000a180:	0943      	lsrs	r3, r0, #5
9000a182:	2201      	movs	r2, #1
9000a184:	f000 001f 	and.w	r0, r0, #31
9000a188:	4904      	ldr	r1, [pc, #16]	; (9000a19c <HAL_NVIC_DisableIRQ+0x20>)
9000a18a:	3320      	adds	r3, #32
9000a18c:	4082      	lsls	r2, r0
9000a18e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
9000a192:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
9000a196:	f3bf 8f6f 	isb	sy
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
}
9000a19a:	4770      	bx	lr
9000a19c:	e000e100 	.word	0xe000e100

9000a1a0 <HAL_MPU_Disable>:
  \details Ensures the apparent order of the explicit memory operations before
           and after the instruction, without ensuring their completion.
 */
__STATIC_FORCEINLINE void __DMB(void)
{
  __ASM volatile ("dmb 0xF":::"memory");
9000a1a0:	f3bf 8f5f 	dmb	sy
{
  /* Make sure outstanding transfers are done */
  __DMB();

  /* Disable fault exceptions */
  SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
9000a1a4:	4b04      	ldr	r3, [pc, #16]	; (9000a1b8 <HAL_MPU_Disable+0x18>)

  /* Disable the MPU and clear the control register*/
  MPU->CTRL = 0;
9000a1a6:	2100      	movs	r1, #0
  SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
9000a1a8:	6a5a      	ldr	r2, [r3, #36]	; 0x24
9000a1aa:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
9000a1ae:	625a      	str	r2, [r3, #36]	; 0x24
  MPU->CTRL = 0;
9000a1b0:	f8c3 1094 	str.w	r1, [r3, #148]	; 0x94
}
9000a1b4:	4770      	bx	lr
9000a1b6:	bf00      	nop
9000a1b8:	e000ed00 	.word	0xe000ed00

9000a1bc <HAL_MPU_Enable>:
  * @retval None
  */
void HAL_MPU_Enable(uint32_t MPU_Control)
{
  /* Enable the MPU */
  MPU->CTRL = MPU_Control | MPU_CTRL_ENABLE_Msk;
9000a1bc:	4b06      	ldr	r3, [pc, #24]	; (9000a1d8 <HAL_MPU_Enable+0x1c>)
9000a1be:	f040 0001 	orr.w	r0, r0, #1
9000a1c2:	f8c3 0094 	str.w	r0, [r3, #148]	; 0x94

  /* Enable fault exceptions */
  SCB->SHCSR |= SCB_SHCSR_MEMFAULTENA_Msk;
9000a1c6:	6a5a      	ldr	r2, [r3, #36]	; 0x24
9000a1c8:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
9000a1cc:	625a      	str	r2, [r3, #36]	; 0x24
  __ASM volatile ("dsb 0xF":::"memory");
9000a1ce:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
9000a1d2:	f3bf 8f6f 	isb	sy

  /* Ensure MPU setting take effects */
  __DSB();
  __ISB();
}
9000a1d6:	4770      	bx	lr
9000a1d8:	e000ed00 	.word	0xe000ed00

9000a1dc <HAL_MPU_ConfigRegion>:
  /* Check the parameters */
  assert_param(IS_MPU_REGION_NUMBER(MPU_Init->Number));
  assert_param(IS_MPU_REGION_ENABLE(MPU_Init->Enable));

  /* Set the Region number */
  MPU->RNR = MPU_Init->Number;
9000a1dc:	4a17      	ldr	r2, [pc, #92]	; (9000a23c <HAL_MPU_ConfigRegion+0x60>)
9000a1de:	7843      	ldrb	r3, [r0, #1]
9000a1e0:	f8c2 3098 	str.w	r3, [r2, #152]	; 0x98

  if ((MPU_Init->Enable) != 0UL)
9000a1e4:	7801      	ldrb	r1, [r0, #0]
9000a1e6:	b321      	cbz	r1, 9000a232 <HAL_MPU_ConfigRegion+0x56>
    assert_param(IS_MPU_ACCESS_CACHEABLE(MPU_Init->IsCacheable));
    assert_param(IS_MPU_ACCESS_BUFFERABLE(MPU_Init->IsBufferable));
    assert_param(IS_MPU_SUB_REGION_DISABLE(MPU_Init->SubRegionDisable));
    assert_param(IS_MPU_REGION_SIZE(MPU_Init->Size));

    MPU->RBAR = MPU_Init->BaseAddress;
9000a1e8:	6843      	ldr	r3, [r0, #4]
{
9000a1ea:	b500      	push	{lr}
    MPU->RBAR = MPU_Init->BaseAddress;
9000a1ec:	f8c2 309c 	str.w	r3, [r2, #156]	; 0x9c
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
                ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
9000a1f0:	7ac3      	ldrb	r3, [r0, #11]
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
9000a1f2:	f890 c00c 	ldrb.w	ip, [r0, #12]
                ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
9000a1f6:	061b      	lsls	r3, r3, #24
                ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
                ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
                ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
                ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
9000a1f8:	f890 e00f 	ldrb.w	lr, [r0, #15]
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
9000a1fc:	ea43 730c 	orr.w	r3, r3, ip, lsl #28
                ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
9000a200:	f890 c00a 	ldrb.w	ip, [r0, #10]
                ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
9000a204:	430b      	orrs	r3, r1
                ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
9000a206:	7b81      	ldrb	r1, [r0, #14]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
9000a208:	ea43 43cc 	orr.w	r3, r3, ip, lsl #19
                ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
9000a20c:	f890 c00d 	ldrb.w	ip, [r0, #13]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
9000a210:	ea43 438c 	orr.w	r3, r3, ip, lsl #18
                ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
9000a214:	f890 c009 	ldrb.w	ip, [r0, #9]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
9000a218:	ea43 4341 	orr.w	r3, r3, r1, lsl #17
9000a21c:	7a01      	ldrb	r1, [r0, #8]
9000a21e:	ea43 430e 	orr.w	r3, r3, lr, lsl #16
9000a222:	ea43 230c 	orr.w	r3, r3, ip, lsl #8
9000a226:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
9000a22a:	f8c2 30a0 	str.w	r3, [r2, #160]	; 0xa0
  else
  {
    MPU->RBAR = 0x00;
    MPU->RASR = 0x00;
  }
}
9000a22e:	f85d fb04 	ldr.w	pc, [sp], #4
    MPU->RBAR = 0x00;
9000a232:	f8c2 109c 	str.w	r1, [r2, #156]	; 0x9c
    MPU->RASR = 0x00;
9000a236:	f8c2 10a0 	str.w	r1, [r2, #160]	; 0xa0
9000a23a:	4770      	bx	lr
9000a23c:	e000ed00 	.word	0xe000ed00

9000a240 <HAL_CRC_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
9000a240:	2800      	cmp	r0, #0
9000a242:	d036      	beq.n	9000a2b2 <HAL_CRC_Init+0x72>
{
9000a244:	b510      	push	{r4, lr}
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
9000a246:	7f43      	ldrb	r3, [r0, #29]
9000a248:	4604      	mov	r4, r0
9000a24a:	f003 02ff 	and.w	r2, r3, #255	; 0xff
9000a24e:	b363      	cbz	r3, 9000a2aa <HAL_CRC_Init+0x6a>
    hcrc->Lock = HAL_UNLOCKED;
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
  }

  hcrc->State = HAL_CRC_STATE_BUSY;
9000a250:	2202      	movs	r2, #2

  /* check whether or not non-default generating polynomial has been
   * picked up by user */
  assert_param(IS_DEFAULT_POLYNOMIAL(hcrc->Init.DefaultPolynomialUse));
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
9000a252:	7923      	ldrb	r3, [r4, #4]
  hcrc->State = HAL_CRC_STATE_BUSY;
9000a254:	7762      	strb	r2, [r4, #29]
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
9000a256:	b9f3      	cbnz	r3, 9000a296 <HAL_CRC_Init+0x56>
  {
    /* initialize peripheral with default generating polynomial */
    WRITE_REG(hcrc->Instance->POL, DEFAULT_CRC32_POLY);
9000a258:	6823      	ldr	r3, [r4, #0]
9000a25a:	4a17      	ldr	r2, [pc, #92]	; (9000a2b8 <HAL_CRC_Init+0x78>)
9000a25c:	615a      	str	r2, [r3, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, CRC_POLYLENGTH_32B);
9000a25e:	689a      	ldr	r2, [r3, #8]
9000a260:	f022 0218 	bic.w	r2, r2, #24
9000a264:	609a      	str	r2, [r3, #8]
  }

  /* check whether or not non-default CRC initial value has been
   * picked up by user */
  assert_param(IS_DEFAULT_INIT_VALUE(hcrc->Init.DefaultInitValueUse));
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
9000a266:	7962      	ldrb	r2, [r4, #5]
9000a268:	b18a      	cbz	r2, 9000a28e <HAL_CRC_Init+0x4e>
  {
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
  }
  else
  {
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
9000a26a:	6922      	ldr	r2, [r4, #16]
9000a26c:	611a      	str	r2, [r3, #16]
  }


  /* set input data inversion mode */
  assert_param(IS_CRC_INPUTDATA_INVERSION_MODE(hcrc->Init.InputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
9000a26e:	689a      	ldr	r2, [r3, #8]

  /* set output data inversion mode */
  assert_param(IS_CRC_OUTPUTDATA_INVERSION_MODE(hcrc->Init.OutputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
9000a270:	e9d4 0105 	ldrd	r0, r1, [r4, #20]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
9000a274:	f022 0260 	bic.w	r2, r2, #96	; 0x60
9000a278:	4302      	orrs	r2, r0

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;

  /* Return function status */
  return HAL_OK;
9000a27a:	2000      	movs	r0, #0
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
9000a27c:	609a      	str	r2, [r3, #8]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
9000a27e:	689a      	ldr	r2, [r3, #8]
9000a280:	f022 0280 	bic.w	r2, r2, #128	; 0x80
9000a284:	430a      	orrs	r2, r1
  hcrc->State = HAL_CRC_STATE_READY;
9000a286:	2101      	movs	r1, #1
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
9000a288:	609a      	str	r2, [r3, #8]
  hcrc->State = HAL_CRC_STATE_READY;
9000a28a:	7761      	strb	r1, [r4, #29]
}
9000a28c:	bd10      	pop	{r4, pc}
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
9000a28e:	f04f 32ff 	mov.w	r2, #4294967295
9000a292:	611a      	str	r2, [r3, #16]
9000a294:	e7eb      	b.n	9000a26e <HAL_CRC_Init+0x2e>
    if (HAL_CRCEx_Polynomial_Set(hcrc, hcrc->Init.GeneratingPolynomial, hcrc->Init.CRCLength) != HAL_OK)
9000a296:	e9d4 1202 	ldrd	r1, r2, [r4, #8]
9000a29a:	4620      	mov	r0, r4
9000a29c:	f000 f80e 	bl	9000a2bc <HAL_CRCEx_Polynomial_Set>
9000a2a0:	b908      	cbnz	r0, 9000a2a6 <HAL_CRC_Init+0x66>
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
9000a2a2:	6823      	ldr	r3, [r4, #0]
9000a2a4:	e7df      	b.n	9000a266 <HAL_CRC_Init+0x26>
    return HAL_ERROR;
9000a2a6:	2001      	movs	r0, #1
}
9000a2a8:	bd10      	pop	{r4, pc}
    hcrc->Lock = HAL_UNLOCKED;
9000a2aa:	7702      	strb	r2, [r0, #28]
    HAL_CRC_MspInit(hcrc);
9000a2ac:	f7fb f8d2 	bl	90005454 <HAL_CRC_MspInit>
9000a2b0:	e7ce      	b.n	9000a250 <HAL_CRC_Init+0x10>
    return HAL_ERROR;
9000a2b2:	2001      	movs	r0, #1
}
9000a2b4:	4770      	bx	lr
9000a2b6:	bf00      	nop
9000a2b8:	04c11db7 	.word	0x04c11db7

9000a2bc <HAL_CRCEx_Polynomial_Set>:

  /* Check the parameters */
  assert_param(IS_CRC_POL_LENGTH(PolyLength));

  /* Ensure that the generating polynomial is odd */ 
  if ((Pol & (uint32_t)(0x1U)) ==  0U)
9000a2bc:	07cb      	lsls	r3, r1, #31
9000a2be:	d51a      	bpl.n	9000a2f6 <HAL_CRCEx_Polynomial_Set+0x3a>
     * definition. HAL_ERROR is reported if Pol degree is
     * larger than that indicated by PolyLength.
     * Look for MSB position: msb will contain the degree of
     *  the second to the largest polynomial member. E.g., for
     *  X^7 + X^6 + X^5 + X^2 + 1, msb = 6. */
    while ((msb-- > 0U) && ((Pol & ((uint32_t)(0x1U) << (msb & 0x1FU))) == 0U))
9000a2c0:	231e      	movs	r3, #30
{
9000a2c2:	b410      	push	{r4}
9000a2c4:	e001      	b.n	9000a2ca <HAL_CRCEx_Polynomial_Set+0xe>
    while ((msb-- > 0U) && ((Pol & ((uint32_t)(0x1U) << (msb & 0x1FU))) == 0U))
9000a2c6:	3b01      	subs	r3, #1
9000a2c8:	d317      	bcc.n	9000a2fa <HAL_CRCEx_Polynomial_Set+0x3e>
9000a2ca:	fa21 fc03 	lsr.w	ip, r1, r3
9000a2ce:	f01c 0f01 	tst.w	ip, #1
9000a2d2:	d0f8      	beq.n	9000a2c6 <HAL_CRCEx_Polynomial_Set+0xa>
    {
    }

    switch (PolyLength)
9000a2d4:	2a18      	cmp	r2, #24
9000a2d6:	d811      	bhi.n	9000a2fc <HAL_CRCEx_Polynomial_Set+0x40>
9000a2d8:	e8df f002 	tbb	[pc, r2]
9000a2dc:	10101016 	.word	0x10101016
9000a2e0:	10101010 	.word	0x10101010
9000a2e4:	10101024 	.word	0x10101024
9000a2e8:	10101010 	.word	0x10101010
9000a2ec:	10101021 	.word	0x10101021
9000a2f0:	10101010 	.word	0x10101010
9000a2f4:	14          	.byte	0x14
9000a2f5:	00          	.byte	0x00
    status =  HAL_ERROR;
9000a2f6:	2001      	movs	r0, #1
    /* set generating polynomial size */
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
  }
  /* Return function status */
  return status;
}
9000a2f8:	4770      	bx	lr
    switch (PolyLength)
9000a2fa:	b12a      	cbz	r2, 9000a308 <HAL_CRCEx_Polynomial_Set+0x4c>
        status =  HAL_ERROR;
9000a2fc:	2001      	movs	r0, #1
}
9000a2fe:	f85d 4b04 	ldr.w	r4, [sp], #4
9000a302:	4770      	bx	lr
        if (msb >= HAL_CRC_LENGTH_7B)
9000a304:	2b06      	cmp	r3, #6
9000a306:	d8f9      	bhi.n	9000a2fc <HAL_CRCEx_Polynomial_Set+0x40>
    WRITE_REG(hcrc->Instance->POL, Pol);
9000a308:	6804      	ldr	r4, [r0, #0]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
9000a30a:	2000      	movs	r0, #0
    WRITE_REG(hcrc->Instance->POL, Pol);
9000a30c:	6161      	str	r1, [r4, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
9000a30e:	68a3      	ldr	r3, [r4, #8]
9000a310:	f023 0318 	bic.w	r3, r3, #24
9000a314:	4313      	orrs	r3, r2
9000a316:	60a3      	str	r3, [r4, #8]
}
9000a318:	f85d 4b04 	ldr.w	r4, [sp], #4
9000a31c:	4770      	bx	lr
        if (msb >= HAL_CRC_LENGTH_8B)
9000a31e:	2b07      	cmp	r3, #7
9000a320:	d9f2      	bls.n	9000a308 <HAL_CRCEx_Polynomial_Set+0x4c>
9000a322:	e7eb      	b.n	9000a2fc <HAL_CRCEx_Polynomial_Set+0x40>
        if (msb >= HAL_CRC_LENGTH_16B)
9000a324:	2b0f      	cmp	r3, #15
9000a326:	d9ef      	bls.n	9000a308 <HAL_CRCEx_Polynomial_Set+0x4c>
9000a328:	e7e8      	b.n	9000a2fc <HAL_CRCEx_Polynomial_Set+0x40>
9000a32a:	bf00      	nop

9000a32c <HAL_DMA2D_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
9000a32c:	2800      	cmp	r0, #0
9000a32e:	d035      	beq.n	9000a39c <HAL_DMA2D_Init+0x70>
{
9000a330:	b538      	push	{r3, r4, r5, lr}

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
9000a332:	f890 3061 	ldrb.w	r3, [r0, #97]	; 0x61
9000a336:	4604      	mov	r4, r0
9000a338:	f003 02ff 	and.w	r2, r3, #255	; 0xff
9000a33c:	b34b      	cbz	r3, 9000a392 <HAL_DMA2D_Init+0x66>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
9000a33e:	6823      	ldr	r3, [r4, #0]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
9000a340:	2002      	movs	r0, #2
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
9000a342:	6862      	ldr	r2, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
9000a344:	f884 0061 	strb.w	r0, [r4, #97]	; 0x61
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
9000a348:	69e1      	ldr	r1, [r4, #28]
9000a34a:	681d      	ldr	r5, [r3, #0]
9000a34c:	4814      	ldr	r0, [pc, #80]	; (9000a3a0 <HAL_DMA2D_Init+0x74>)
9000a34e:	4311      	orrs	r1, r2

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
9000a350:	68a2      	ldr	r2, [r4, #8]
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
9000a352:	4028      	ands	r0, r5
             hdma2d->Init.ColorMode | hdma2d->Init.BytesSwap);

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
9000a354:	68e5      	ldr	r5, [r4, #12]
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
9000a356:	4301      	orrs	r1, r0
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
9000a358:	69a0      	ldr	r0, [r4, #24]
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
9000a35a:	6019      	str	r1, [r3, #0]
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
9000a35c:	4302      	orrs	r2, r0
9000a35e:	6b59      	ldr	r1, [r3, #52]	; 0x34
9000a360:	4810      	ldr	r0, [pc, #64]	; (9000a3a4 <HAL_DMA2D_Init+0x78>)
9000a362:	4008      	ands	r0, r1
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
9000a364:	4910      	ldr	r1, [pc, #64]	; (9000a3a8 <HAL_DMA2D_Init+0x7c>)
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
9000a366:	4302      	orrs	r2, r0
9000a368:	635a      	str	r2, [r3, #52]	; 0x34
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
9000a36a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
9000a36c:	4011      	ands	r1, r2
  /* DMA2D OPFCCR AI and RBS fields setting (Output Alpha Inversion)*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
9000a36e:	e9d4 0204 	ldrd	r0, r2, [r4, #16]
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
9000a372:	4329      	orrs	r1, r5
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
9000a374:	0552      	lsls	r2, r2, #21
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
9000a376:	6419      	str	r1, [r3, #64]	; 0x40
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
9000a378:	6b59      	ldr	r1, [r3, #52]	; 0x34
9000a37a:	ea42 5200 	orr.w	r2, r2, r0, lsl #20
             ((hdma2d->Init.AlphaInverted << DMA2D_OPFCCR_AI_Pos) | \
              (hdma2d->Init.RedBlueSwap << DMA2D_OPFCCR_RBS_Pos)));


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
9000a37e:	2000      	movs	r0, #0
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
9000a380:	f421 1140 	bic.w	r1, r1, #3145728	; 0x300000
9000a384:	430a      	orrs	r2, r1
9000a386:	635a      	str	r2, [r3, #52]	; 0x34

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
9000a388:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
9000a38a:	6660      	str	r0, [r4, #100]	; 0x64
  hdma2d->State  = HAL_DMA2D_STATE_READY;
9000a38c:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61

  return HAL_OK;
}
9000a390:	bd38      	pop	{r3, r4, r5, pc}
    hdma2d->Lock = HAL_UNLOCKED;
9000a392:	f880 2060 	strb.w	r2, [r0, #96]	; 0x60
    HAL_DMA2D_MspInit(hdma2d);
9000a396:	f7fb f875 	bl	90005484 <HAL_DMA2D_MspInit>
9000a39a:	e7d0      	b.n	9000a33e <HAL_DMA2D_Init+0x12>
    return HAL_ERROR;
9000a39c:	2001      	movs	r0, #1
}
9000a39e:	4770      	bx	lr
9000a3a0:	fff8ffbf 	.word	0xfff8ffbf
9000a3a4:	fffffef8 	.word	0xfffffef8
9000a3a8:	ffff0000 	.word	0xffff0000

9000a3ac <HAL_DMA2D_LineEventCallback>:
9000a3ac:	4770      	bx	lr
9000a3ae:	bf00      	nop

9000a3b0 <HAL_DMA2D_CLUTLoadingCpltCallback>:
9000a3b0:	4770      	bx	lr
9000a3b2:	bf00      	nop

9000a3b4 <HAL_DMA2D_IRQHandler>:
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
9000a3b4:	6803      	ldr	r3, [r0, #0]
{
9000a3b6:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
9000a3b8:	685d      	ldr	r5, [r3, #4]
{
9000a3ba:	4604      	mov	r4, r0
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
9000a3bc:	681e      	ldr	r6, [r3, #0]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
9000a3be:	07ea      	lsls	r2, r5, #31
9000a3c0:	d501      	bpl.n	9000a3c6 <HAL_DMA2D_IRQHandler+0x12>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
9000a3c2:	05f1      	lsls	r1, r6, #23
9000a3c4:	d456      	bmi.n	9000a474 <HAL_DMA2D_IRQHandler+0xc0>
        hdma2d->XferErrorCallback(hdma2d);
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
9000a3c6:	06aa      	lsls	r2, r5, #26
9000a3c8:	d501      	bpl.n	9000a3ce <HAL_DMA2D_IRQHandler+0x1a>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
9000a3ca:	04b3      	lsls	r3, r6, #18
9000a3cc:	d43b      	bmi.n	9000a446 <HAL_DMA2D_IRQHandler+0x92>
        hdma2d->XferErrorCallback(hdma2d);
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
9000a3ce:	0728      	lsls	r0, r5, #28
9000a3d0:	d501      	bpl.n	9000a3d6 <HAL_DMA2D_IRQHandler+0x22>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
9000a3d2:	0531      	lsls	r1, r6, #20
9000a3d4:	d421      	bmi.n	9000a41a <HAL_DMA2D_IRQHandler+0x66>
        hdma2d->XferErrorCallback(hdma2d);
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
9000a3d6:	076a      	lsls	r2, r5, #29
9000a3d8:	d501      	bpl.n	9000a3de <HAL_DMA2D_IRQHandler+0x2a>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
9000a3da:	0573      	lsls	r3, r6, #21
9000a3dc:	d472      	bmi.n	9000a4c4 <HAL_DMA2D_IRQHandler+0x110>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
9000a3de:	07a8      	lsls	r0, r5, #30
9000a3e0:	d501      	bpl.n	9000a3e6 <HAL_DMA2D_IRQHandler+0x32>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
9000a3e2:	05b1      	lsls	r1, r6, #22
9000a3e4:	d404      	bmi.n	9000a3f0 <HAL_DMA2D_IRQHandler+0x3c>
        hdma2d->XferCpltCallback(hdma2d);
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
9000a3e6:	06ea      	lsls	r2, r5, #27
9000a3e8:	d501      	bpl.n	9000a3ee <HAL_DMA2D_IRQHandler+0x3a>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
9000a3ea:	04f3      	lsls	r3, r6, #19
9000a3ec:	d457      	bmi.n	9000a49e <HAL_DMA2D_IRQHandler+0xea>
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
9000a3ee:	bd70      	pop	{r4, r5, r6, pc}
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
9000a3f0:	6823      	ldr	r3, [r4, #0]
9000a3f2:	681a      	ldr	r2, [r3, #0]
9000a3f4:	f422 7200 	bic.w	r2, r2, #512	; 0x200
9000a3f8:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
9000a3fa:	2202      	movs	r2, #2
9000a3fc:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_READY;
9000a3fe:	2201      	movs	r2, #1
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
9000a400:	6e63      	ldr	r3, [r4, #100]	; 0x64
9000a402:	6663      	str	r3, [r4, #100]	; 0x64
      __HAL_UNLOCK(hdma2d);
9000a404:	2300      	movs	r3, #0
      hdma2d->State = HAL_DMA2D_STATE_READY;
9000a406:	f884 2061 	strb.w	r2, [r4, #97]	; 0x61
      __HAL_UNLOCK(hdma2d);
9000a40a:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
      if (hdma2d->XferCpltCallback != NULL)
9000a40e:	6a23      	ldr	r3, [r4, #32]
9000a410:	2b00      	cmp	r3, #0
9000a412:	d0e8      	beq.n	9000a3e6 <HAL_DMA2D_IRQHandler+0x32>
        hdma2d->XferCpltCallback(hdma2d);
9000a414:	4620      	mov	r0, r4
9000a416:	4798      	blx	r3
9000a418:	e7e5      	b.n	9000a3e6 <HAL_DMA2D_IRQHandler+0x32>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
9000a41a:	6823      	ldr	r3, [r4, #0]
9000a41c:	681a      	ldr	r2, [r3, #0]
9000a41e:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
9000a422:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
9000a424:	2208      	movs	r2, #8
9000a426:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
9000a428:	2204      	movs	r2, #4
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
9000a42a:	6e63      	ldr	r3, [r4, #100]	; 0x64
9000a42c:	4313      	orrs	r3, r2
9000a42e:	6663      	str	r3, [r4, #100]	; 0x64
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
9000a430:	f884 2061 	strb.w	r2, [r4, #97]	; 0x61
      __HAL_UNLOCK(hdma2d);
9000a434:	2200      	movs	r2, #0
      if (hdma2d->XferErrorCallback != NULL)
9000a436:	6a63      	ldr	r3, [r4, #36]	; 0x24
      __HAL_UNLOCK(hdma2d);
9000a438:	f884 2060 	strb.w	r2, [r4, #96]	; 0x60
      if (hdma2d->XferErrorCallback != NULL)
9000a43c:	2b00      	cmp	r3, #0
9000a43e:	d0ca      	beq.n	9000a3d6 <HAL_DMA2D_IRQHandler+0x22>
        hdma2d->XferErrorCallback(hdma2d);
9000a440:	4620      	mov	r0, r4
9000a442:	4798      	blx	r3
9000a444:	e7c7      	b.n	9000a3d6 <HAL_DMA2D_IRQHandler+0x22>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
9000a446:	6823      	ldr	r3, [r4, #0]
9000a448:	681a      	ldr	r2, [r3, #0]
9000a44a:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
9000a44e:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
9000a450:	2220      	movs	r2, #32
9000a452:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
9000a454:	2204      	movs	r2, #4
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
9000a456:	6e63      	ldr	r3, [r4, #100]	; 0x64
9000a458:	f043 0302 	orr.w	r3, r3, #2
9000a45c:	6663      	str	r3, [r4, #100]	; 0x64
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
9000a45e:	f884 2061 	strb.w	r2, [r4, #97]	; 0x61
      __HAL_UNLOCK(hdma2d);
9000a462:	2200      	movs	r2, #0
      if (hdma2d->XferErrorCallback != NULL)
9000a464:	6a63      	ldr	r3, [r4, #36]	; 0x24
      __HAL_UNLOCK(hdma2d);
9000a466:	f884 2060 	strb.w	r2, [r4, #96]	; 0x60
      if (hdma2d->XferErrorCallback != NULL)
9000a46a:	2b00      	cmp	r3, #0
9000a46c:	d0af      	beq.n	9000a3ce <HAL_DMA2D_IRQHandler+0x1a>
        hdma2d->XferErrorCallback(hdma2d);
9000a46e:	4620      	mov	r0, r4
9000a470:	4798      	blx	r3
9000a472:	e7ac      	b.n	9000a3ce <HAL_DMA2D_IRQHandler+0x1a>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
9000a474:	681a      	ldr	r2, [r3, #0]
9000a476:	f422 7280 	bic.w	r2, r2, #256	; 0x100
9000a47a:	601a      	str	r2, [r3, #0]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
9000a47c:	6e42      	ldr	r2, [r0, #100]	; 0x64
9000a47e:	f042 0201 	orr.w	r2, r2, #1
9000a482:	6642      	str	r2, [r0, #100]	; 0x64
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
9000a484:	2201      	movs	r2, #1
9000a486:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
9000a488:	2304      	movs	r3, #4
9000a48a:	f880 3061 	strb.w	r3, [r0, #97]	; 0x61
      __HAL_UNLOCK(hdma2d);
9000a48e:	2300      	movs	r3, #0
9000a490:	f880 3060 	strb.w	r3, [r0, #96]	; 0x60
      if (hdma2d->XferErrorCallback != NULL)
9000a494:	6a43      	ldr	r3, [r0, #36]	; 0x24
9000a496:	2b00      	cmp	r3, #0
9000a498:	d095      	beq.n	9000a3c6 <HAL_DMA2D_IRQHandler+0x12>
        hdma2d->XferErrorCallback(hdma2d);
9000a49a:	4798      	blx	r3
9000a49c:	e793      	b.n	9000a3c6 <HAL_DMA2D_IRQHandler+0x12>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
9000a49e:	6823      	ldr	r3, [r4, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
9000a4a0:	2010      	movs	r0, #16
      hdma2d->State = HAL_DMA2D_STATE_READY;
9000a4a2:	2101      	movs	r1, #1
      __HAL_UNLOCK(hdma2d);
9000a4a4:	2500      	movs	r5, #0
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
9000a4a6:	681a      	ldr	r2, [r3, #0]
9000a4a8:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
9000a4ac:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
9000a4ae:	6098      	str	r0, [r3, #8]
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
9000a4b0:	4620      	mov	r0, r4
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
9000a4b2:	6e63      	ldr	r3, [r4, #100]	; 0x64
      __HAL_UNLOCK(hdma2d);
9000a4b4:	f884 5060 	strb.w	r5, [r4, #96]	; 0x60
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
9000a4b8:	6663      	str	r3, [r4, #100]	; 0x64
      hdma2d->State = HAL_DMA2D_STATE_READY;
9000a4ba:	f884 1061 	strb.w	r1, [r4, #97]	; 0x61
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
9000a4be:	f7ff ff77 	bl	9000a3b0 <HAL_DMA2D_CLUTLoadingCpltCallback>
}
9000a4c2:	bd70      	pop	{r4, r5, r6, pc}
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
9000a4c4:	6823      	ldr	r3, [r4, #0]
      HAL_DMA2D_LineEventCallback(hdma2d);
9000a4c6:	4620      	mov	r0, r4
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
9000a4c8:	681a      	ldr	r2, [r3, #0]
9000a4ca:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
9000a4ce:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
9000a4d0:	2204      	movs	r2, #4
9000a4d2:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
9000a4d4:	f7ff ff6a 	bl	9000a3ac <HAL_DMA2D_LineEventCallback>
9000a4d8:	e781      	b.n	9000a3de <HAL_DMA2D_IRQHandler+0x2a>
9000a4da:	bf00      	nop

9000a4dc <HAL_DMA2D_ConfigLayer>:
  {
    assert_param(IS_DMA2D_CHROMA_SUB_SAMPLING(hdma2d->LayerCfg[LayerIdx].ChromaSubSampling));
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
9000a4dc:	f890 2060 	ldrb.w	r2, [r0, #96]	; 0x60
9000a4e0:	2a01      	cmp	r2, #1
9000a4e2:	d065      	beq.n	9000a5b0 <HAL_DMA2D_ConfigLayer+0xd4>
9000a4e4:	4603      	mov	r3, r0
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
9000a4e6:	ebc1 00c1 	rsb	r0, r1, r1, lsl #3
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
9000a4ea:	2202      	movs	r2, #2
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
9000a4ec:	eb03 0080 	add.w	r0, r3, r0, lsl #2
{
9000a4f0:	b470      	push	{r4, r5, r6}
  __HAL_LOCK(hdma2d);
9000a4f2:	2401      	movs	r4, #1
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
9000a4f4:	f883 2061 	strb.w	r2, [r3, #97]	; 0x61
  __HAL_LOCK(hdma2d);
9000a4f8:	f883 4060 	strb.w	r4, [r3, #96]	; 0x60
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
9000a4fc:	6b82      	ldr	r2, [r0, #56]	; 0x38
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
9000a4fe:	6ac4      	ldr	r4, [r0, #44]	; 0x2c
9000a500:	6b05      	ldr	r5, [r0, #48]	; 0x30
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
9000a502:	0512      	lsls	r2, r2, #20
  regMask  = (DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA | DMA2D_BGPFCCR_AI | DMA2D_BGPFCCR_RBS);


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
9000a504:	f1a4 0c09 	sub.w	ip, r4, #9
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
9000a508:	ea42 4205 	orr.w	r2, r2, r5, lsl #16
9000a50c:	6bc5      	ldr	r5, [r0, #60]	; 0x3c
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
9000a50e:	f1bc 0f01 	cmp.w	ip, #1
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
9000a512:	ea42 0204 	orr.w	r2, r2, r4
9000a516:	ea42 5245 	orr.w	r2, r2, r5, lsl #21
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
9000a51a:	d922      	bls.n	9000a562 <HAL_DMA2D_ConfigLayer+0x86>
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
  }
  else
  {
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
9000a51c:	6b45      	ldr	r5, [r0, #52]	; 0x34
9000a51e:	ea42 6205 	orr.w	r2, r2, r5, lsl #24
  }

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
9000a522:	b981      	cbnz	r1, 9000a546 <HAL_DMA2D_ConfigLayer+0x6a>
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
9000a524:	6818      	ldr	r0, [r3, #0]
9000a526:	4923      	ldr	r1, [pc, #140]	; (9000a5b4 <HAL_DMA2D_ConfigLayer+0xd8>)
9000a528:	6a45      	ldr	r5, [r0, #36]	; 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
9000a52a:	6a9c      	ldr	r4, [r3, #40]	; 0x28
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
9000a52c:	4029      	ands	r1, r5
9000a52e:	4311      	orrs	r1, r2
9000a530:	6241      	str	r1, [r0, #36]	; 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
9000a532:	6184      	str	r4, [r0, #24]
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
9000a534:	2200      	movs	r2, #0
  hdma2d->State = HAL_DMA2D_STATE_READY;
9000a536:	2101      	movs	r1, #1

  return HAL_OK;
9000a538:	4610      	mov	r0, r2
  hdma2d->State = HAL_DMA2D_STATE_READY;
9000a53a:	f883 1061 	strb.w	r1, [r3, #97]	; 0x61
  __HAL_UNLOCK(hdma2d);
9000a53e:	f883 2060 	strb.w	r2, [r3, #96]	; 0x60
}
9000a542:	bc70      	pop	{r4, r5, r6}
9000a544:	4770      	bx	lr
    if (pLayerCfg->InputColorMode == DMA2D_INPUT_YCBCR)
9000a546:	2c0b      	cmp	r4, #11
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
9000a548:	681c      	ldr	r4, [r3, #0]
    if (pLayerCfg->InputColorMode == DMA2D_INPUT_YCBCR)
9000a54a:	d129      	bne.n	9000a5a0 <HAL_DMA2D_ConfigLayer+0xc4>
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
9000a54c:	69e5      	ldr	r5, [r4, #28]
9000a54e:	491a      	ldr	r1, [pc, #104]	; (9000a5b8 <HAL_DMA2D_ConfigLayer+0xdc>)
9000a550:	4029      	ands	r1, r5
      regValue |= (pLayerCfg->ChromaSubSampling << DMA2D_FGPFCCR_CSS_Pos);
9000a552:	6c05      	ldr	r5, [r0, #64]	; 0x40
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
9000a554:	6a80      	ldr	r0, [r0, #40]	; 0x28
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
9000a556:	ea41 4185 	orr.w	r1, r1, r5, lsl #18
9000a55a:	4311      	orrs	r1, r2
9000a55c:	61e1      	str	r1, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
9000a55e:	6120      	str	r0, [r4, #16]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
9000a560:	e7e8      	b.n	9000a534 <HAL_DMA2D_ConfigLayer+0x58>
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
9000a562:	6b44      	ldr	r4, [r0, #52]	; 0x34
9000a564:	f004 447f 	and.w	r4, r4, #4278190080	; 0xff000000
9000a568:	4314      	orrs	r4, r2
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
9000a56a:	b961      	cbnz	r1, 9000a586 <HAL_DMA2D_ConfigLayer+0xaa>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
9000a56c:	6819      	ldr	r1, [r3, #0]
9000a56e:	4a11      	ldr	r2, [pc, #68]	; (9000a5b4 <HAL_DMA2D_ConfigLayer+0xd8>)
9000a570:	6a4e      	ldr	r6, [r1, #36]	; 0x24
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
9000a572:	6b58      	ldr	r0, [r3, #52]	; 0x34
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
9000a574:	4032      	ands	r2, r6
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
9000a576:	6a9d      	ldr	r5, [r3, #40]	; 0x28
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
9000a578:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
9000a57c:	4322      	orrs	r2, r4
9000a57e:	624a      	str	r2, [r1, #36]	; 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
9000a580:	618d      	str	r5, [r1, #24]
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
9000a582:	6288      	str	r0, [r1, #40]	; 0x28
9000a584:	e7d6      	b.n	9000a534 <HAL_DMA2D_ConfigLayer+0x58>
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
9000a586:	6819      	ldr	r1, [r3, #0]
9000a588:	4a0a      	ldr	r2, [pc, #40]	; (9000a5b4 <HAL_DMA2D_ConfigLayer+0xd8>)
9000a58a:	69cd      	ldr	r5, [r1, #28]
9000a58c:	402a      	ands	r2, r5
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
9000a58e:	6a85      	ldr	r5, [r0, #40]	; 0x28
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
9000a590:	4322      	orrs	r2, r4
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
9000a592:	6b44      	ldr	r4, [r0, #52]	; 0x34
9000a594:	f024 447f 	bic.w	r4, r4, #4278190080	; 0xff000000
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
9000a598:	61ca      	str	r2, [r1, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
9000a59a:	610d      	str	r5, [r1, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
9000a59c:	620c      	str	r4, [r1, #32]
9000a59e:	e7c9      	b.n	9000a534 <HAL_DMA2D_ConfigLayer+0x58>
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
9000a5a0:	69e5      	ldr	r5, [r4, #28]
9000a5a2:	4904      	ldr	r1, [pc, #16]	; (9000a5b4 <HAL_DMA2D_ConfigLayer+0xd8>)
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
9000a5a4:	6a80      	ldr	r0, [r0, #40]	; 0x28
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
9000a5a6:	4029      	ands	r1, r5
9000a5a8:	4311      	orrs	r1, r2
9000a5aa:	61e1      	str	r1, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
9000a5ac:	6120      	str	r0, [r4, #16]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
9000a5ae:	e7c1      	b.n	9000a534 <HAL_DMA2D_ConfigLayer+0x58>
  __HAL_LOCK(hdma2d);
9000a5b0:	2002      	movs	r0, #2
}
9000a5b2:	4770      	bx	lr
9000a5b4:	00ccfff0 	.word	0x00ccfff0
9000a5b8:	00c0fff0 	.word	0x00c0fff0

9000a5bc <HAL_GPIO_Init>:
  * @param  GPIO_Init: pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
9000a5bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != 0x00U)
9000a5c0:	680c      	ldr	r4, [r1, #0]
{
9000a5c2:	b083      	sub	sp, #12
  while (((GPIO_Init->Pin) >> position) != 0x00U)
9000a5c4:	2c00      	cmp	r4, #0
9000a5c6:	f000 80a7 	beq.w	9000a718 <HAL_GPIO_Init+0x15c>
9000a5ca:	f04f 0c00 	mov.w	ip, #0
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
9000a5ce:	4f8a      	ldr	r7, [pc, #552]	; (9000a7f8 <HAL_GPIO_Init+0x23c>)
  uint32_t position = 0x00U;
9000a5d0:	4663      	mov	r3, ip
    iocurrent = (GPIO_Init->Pin) & (1UL << position);
9000a5d2:	2201      	movs	r2, #1
9000a5d4:	409a      	lsls	r2, r3
    if (iocurrent != 0x00U)
9000a5d6:	ea12 0e04 	ands.w	lr, r2, r4
9000a5da:	f000 8096 	beq.w	9000a70a <HAL_GPIO_Init+0x14e>
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
9000a5de:	684d      	ldr	r5, [r1, #4]
9000a5e0:	f005 0903 	and.w	r9, r5, #3
9000a5e4:	f109 36ff 	add.w	r6, r9, #4294967295
9000a5e8:	2e01      	cmp	r6, #1
9000a5ea:	f240 8098 	bls.w	9000a71e <HAL_GPIO_Init+0x162>
      if ((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
9000a5ee:	f1b9 0f03 	cmp.w	r9, #3
9000a5f2:	f040 80d2 	bne.w	9000a79a <HAL_GPIO_Init+0x1de>
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
9000a5f6:	fa09 f20c 	lsl.w	r2, r9, ip
9000a5fa:	ea6f 0802 	mvn.w	r8, r2
      temp = GPIOx->MODER;
9000a5fe:	6806      	ldr	r6, [r0, #0]
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
9000a600:	f415 3f40 	tst.w	r5, #196608	; 0x30000
      temp &= ~(GPIO_MODER_MODE0 << (position * 2U));
9000a604:	ea06 0608 	and.w	r6, r6, r8
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
9000a608:	ea42 0206 	orr.w	r2, r2, r6
      GPIOx->MODER = temp;
9000a60c:	6002      	str	r2, [r0, #0]
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
9000a60e:	d07c      	beq.n	9000a70a <HAL_GPIO_Init+0x14e>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
9000a610:	f8d7 20f4 	ldr.w	r2, [r7, #244]	; 0xf4
9000a614:	f023 0803 	bic.w	r8, r3, #3

        temp = SYSCFG->EXTICR[position >> 2U];
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
9000a618:	f003 0903 	and.w	r9, r3, #3
9000a61c:	260f      	movs	r6, #15
        __HAL_RCC_SYSCFG_CLK_ENABLE();
9000a61e:	f042 0202 	orr.w	r2, r2, #2
9000a622:	f108 48b0 	add.w	r8, r8, #1476395008	; 0x58000000
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
9000a626:	ea4f 0989 	mov.w	r9, r9, lsl #2
        __HAL_RCC_SYSCFG_CLK_ENABLE();
9000a62a:	f8c7 20f4 	str.w	r2, [r7, #244]	; 0xf4
9000a62e:	f508 6880 	add.w	r8, r8, #1024	; 0x400
9000a632:	f8d7 20f4 	ldr.w	r2, [r7, #244]	; 0xf4
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
9000a636:	fa06 f609 	lsl.w	r6, r6, r9
        __HAL_RCC_SYSCFG_CLK_ENABLE();
9000a63a:	f002 0202 	and.w	r2, r2, #2
9000a63e:	9201      	str	r2, [sp, #4]
9000a640:	9a01      	ldr	r2, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
9000a642:	f8d8 2008 	ldr.w	r2, [r8, #8]
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
9000a646:	ea22 0206 	bic.w	r2, r2, r6
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
9000a64a:	4e6c      	ldr	r6, [pc, #432]	; (9000a7fc <HAL_GPIO_Init+0x240>)
9000a64c:	42b0      	cmp	r0, r6
9000a64e:	d028      	beq.n	9000a6a2 <HAL_GPIO_Init+0xe6>
9000a650:	f506 6680 	add.w	r6, r6, #1024	; 0x400
9000a654:	42b0      	cmp	r0, r6
9000a656:	f000 80ac 	beq.w	9000a7b2 <HAL_GPIO_Init+0x1f6>
9000a65a:	4e69      	ldr	r6, [pc, #420]	; (9000a800 <HAL_GPIO_Init+0x244>)
9000a65c:	42b0      	cmp	r0, r6
9000a65e:	f000 80ad 	beq.w	9000a7bc <HAL_GPIO_Init+0x200>
9000a662:	4e68      	ldr	r6, [pc, #416]	; (9000a804 <HAL_GPIO_Init+0x248>)
9000a664:	42b0      	cmp	r0, r6
9000a666:	f000 809f 	beq.w	9000a7a8 <HAL_GPIO_Init+0x1ec>
9000a66a:	4e67      	ldr	r6, [pc, #412]	; (9000a808 <HAL_GPIO_Init+0x24c>)
9000a66c:	42b0      	cmp	r0, r6
9000a66e:	f000 80af 	beq.w	9000a7d0 <HAL_GPIO_Init+0x214>
9000a672:	4e66      	ldr	r6, [pc, #408]	; (9000a80c <HAL_GPIO_Init+0x250>)
9000a674:	42b0      	cmp	r0, r6
9000a676:	f000 80b0 	beq.w	9000a7da <HAL_GPIO_Init+0x21e>
9000a67a:	4e65      	ldr	r6, [pc, #404]	; (9000a810 <HAL_GPIO_Init+0x254>)
9000a67c:	42b0      	cmp	r0, r6
9000a67e:	f000 80a2 	beq.w	9000a7c6 <HAL_GPIO_Init+0x20a>
9000a682:	4e64      	ldr	r6, [pc, #400]	; (9000a814 <HAL_GPIO_Init+0x258>)
9000a684:	42b0      	cmp	r0, r6
9000a686:	f000 80ad 	beq.w	9000a7e4 <HAL_GPIO_Init+0x228>
9000a68a:	4e63      	ldr	r6, [pc, #396]	; (9000a818 <HAL_GPIO_Init+0x25c>)
9000a68c:	42b0      	cmp	r0, r6
9000a68e:	f000 80ae 	beq.w	9000a7ee <HAL_GPIO_Init+0x232>
9000a692:	4e62      	ldr	r6, [pc, #392]	; (9000a81c <HAL_GPIO_Init+0x260>)
9000a694:	42b0      	cmp	r0, r6
9000a696:	bf0c      	ite	eq
9000a698:	2609      	moveq	r6, #9
9000a69a:	260a      	movne	r6, #10
9000a69c:	fa06 f609 	lsl.w	r6, r6, r9
9000a6a0:	4332      	orrs	r2, r6
        SYSCFG->EXTICR[position >> 2U] = temp;
9000a6a2:	f8c8 2008 	str.w	r2, [r8, #8]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR1;
9000a6a6:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
9000a6aa:	f415 1f80 	tst.w	r5, #1048576	; 0x100000
        temp &= ~(iocurrent);
9000a6ae:	ea6f 060e 	mvn.w	r6, lr
        temp = EXTI->RTSR1;
9000a6b2:	6812      	ldr	r2, [r2, #0]
        {
          temp |= iocurrent;
        }
        EXTI->RTSR1 = temp;
9000a6b4:	f04f 48b0 	mov.w	r8, #1476395008	; 0x58000000
        temp &= ~(iocurrent);
9000a6b8:	bf0c      	ite	eq
9000a6ba:	4032      	andeq	r2, r6
          temp |= iocurrent;
9000a6bc:	ea4e 0202 	orrne.w	r2, lr, r2

        temp = EXTI->FTSR1;
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
9000a6c0:	f415 1f00 	tst.w	r5, #2097152	; 0x200000
        EXTI->RTSR1 = temp;
9000a6c4:	f8c8 2000 	str.w	r2, [r8]
        temp = EXTI->FTSR1;
9000a6c8:	f8d8 2004 	ldr.w	r2, [r8, #4]
        {
          temp |= iocurrent;
        }
        EXTI->FTSR1 = temp;
9000a6cc:	f04f 48b0 	mov.w	r8, #1476395008	; 0x58000000
        temp &= ~(iocurrent);
9000a6d0:	bf0c      	ite	eq
9000a6d2:	4032      	andeq	r2, r6
          temp |= iocurrent;
9000a6d4:	ea4e 0202 	orrne.w	r2, lr, r2

        temp = EXTI_CurrentCPU->EMR1;
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
9000a6d8:	f415 3f00 	tst.w	r5, #131072	; 0x20000
        EXTI->FTSR1 = temp;
9000a6dc:	f8c8 2004 	str.w	r2, [r8, #4]
        temp = EXTI_CurrentCPU->EMR1;
9000a6e0:	f8d8 2084 	ldr.w	r2, [r8, #132]	; 0x84
        {
          temp |= iocurrent;
        }
        EXTI_CurrentCPU->EMR1 = temp;
9000a6e4:	f04f 48b0 	mov.w	r8, #1476395008	; 0x58000000
        temp &= ~(iocurrent);
9000a6e8:	bf0c      	ite	eq
9000a6ea:	4032      	andeq	r2, r6
          temp |= iocurrent;
9000a6ec:	ea4e 0202 	orrne.w	r2, lr, r2

        /* Clear EXTI line configuration */
        temp = EXTI_CurrentCPU->IMR1;
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & EXTI_IT) != 0x00U)
9000a6f0:	03ed      	lsls	r5, r5, #15
        {
          temp |= iocurrent;
        }
        EXTI_CurrentCPU->IMR1 = temp;
9000a6f2:	f04f 45b0 	mov.w	r5, #1476395008	; 0x58000000
        EXTI_CurrentCPU->EMR1 = temp;
9000a6f6:	f8c8 2084 	str.w	r2, [r8, #132]	; 0x84
        temp = EXTI_CurrentCPU->IMR1;
9000a6fa:	f8d8 2080 	ldr.w	r2, [r8, #128]	; 0x80
        temp &= ~(iocurrent);
9000a6fe:	bf54      	ite	pl
9000a700:	4032      	andpl	r2, r6
          temp |= iocurrent;
9000a702:	ea4e 0202 	orrmi.w	r2, lr, r2
        EXTI_CurrentCPU->IMR1 = temp;
9000a706:	f8c5 2080 	str.w	r2, [r5, #128]	; 0x80
      }
    }

    position++;
9000a70a:	3301      	adds	r3, #1
  while (((GPIO_Init->Pin) >> position) != 0x00U)
9000a70c:	f10c 0c02 	add.w	ip, ip, #2
9000a710:	fa34 f203 	lsrs.w	r2, r4, r3
9000a714:	f47f af5d 	bne.w	9000a5d2 <HAL_GPIO_Init+0x16>
  }
}
9000a718:	b003      	add	sp, #12
9000a71a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
9000a71e:	f04f 0803 	mov.w	r8, #3
        temp = GPIOx->OSPEEDR;
9000a722:	6886      	ldr	r6, [r0, #8]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
9000a724:	fa08 f80c 	lsl.w	r8, r8, ip
9000a728:	ea26 0a08 	bic.w	sl, r6, r8
        temp |= (GPIO_Init->Speed << (position * 2U));
9000a72c:	68ce      	ldr	r6, [r1, #12]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
9000a72e:	ea6f 0808 	mvn.w	r8, r8
        temp |= (GPIO_Init->Speed << (position * 2U));
9000a732:	fa06 f60c 	lsl.w	r6, r6, ip
9000a736:	ea46 060a 	orr.w	r6, r6, sl
        GPIOx->OSPEEDR = temp;
9000a73a:	6086      	str	r6, [r0, #8]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
9000a73c:	f3c5 1600 	ubfx	r6, r5, #4, #1
        temp = GPIOx->OTYPER;
9000a740:	f8d0 a004 	ldr.w	sl, [r0, #4]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
9000a744:	409e      	lsls	r6, r3
        temp &= ~(GPIO_OTYPER_OT0 << position) ;
9000a746:	ea2a 0202 	bic.w	r2, sl, r2
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
9000a74a:	4332      	orrs	r2, r6
        GPIOx->OTYPER = temp;
9000a74c:	6042      	str	r2, [r0, #4]
      temp = GPIOx->PUPDR;
9000a74e:	68c2      	ldr	r2, [r0, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
9000a750:	f1b9 0f02 	cmp.w	r9, #2
      temp |= ((GPIO_Init->Pull) << (position * 2U));
9000a754:	688e      	ldr	r6, [r1, #8]
      temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
9000a756:	ea02 0208 	and.w	r2, r2, r8
      temp |= ((GPIO_Init->Pull) << (position * 2U));
9000a75a:	fa06 f60c 	lsl.w	r6, r6, ip
9000a75e:	ea46 0602 	orr.w	r6, r6, r2
      GPIOx->PUPDR = temp;
9000a762:	fa09 f20c 	lsl.w	r2, r9, ip
9000a766:	60c6      	str	r6, [r0, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
9000a768:	f47f af49 	bne.w	9000a5fe <HAL_GPIO_Init+0x42>
        temp = GPIOx->AFR[position >> 3U];
9000a76c:	ea4f 09d3 	mov.w	r9, r3, lsr #3
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
9000a770:	f003 0b07 	and.w	fp, r3, #7
9000a774:	260f      	movs	r6, #15
9000a776:	eb00 0989 	add.w	r9, r0, r9, lsl #2
9000a77a:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
        temp = GPIOx->AFR[position >> 3U];
9000a77e:	f8d9 a020 	ldr.w	sl, [r9, #32]
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
9000a782:	fa06 f60b 	lsl.w	r6, r6, fp
9000a786:	ea2a 0a06 	bic.w	sl, sl, r6
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
9000a78a:	690e      	ldr	r6, [r1, #16]
9000a78c:	fa06 f60b 	lsl.w	r6, r6, fp
9000a790:	ea46 060a 	orr.w	r6, r6, sl
        GPIOx->AFR[position >> 3U] = temp;
9000a794:	f8c9 6020 	str.w	r6, [r9, #32]
9000a798:	e731      	b.n	9000a5fe <HAL_GPIO_Init+0x42>
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
9000a79a:	f04f 0803 	mov.w	r8, #3
9000a79e:	fa08 f80c 	lsl.w	r8, r8, ip
9000a7a2:	ea6f 0808 	mvn.w	r8, r8
9000a7a6:	e7d2      	b.n	9000a74e <HAL_GPIO_Init+0x192>
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
9000a7a8:	2603      	movs	r6, #3
9000a7aa:	fa06 f609 	lsl.w	r6, r6, r9
9000a7ae:	4332      	orrs	r2, r6
9000a7b0:	e777      	b.n	9000a6a2 <HAL_GPIO_Init+0xe6>
9000a7b2:	2601      	movs	r6, #1
9000a7b4:	fa06 f609 	lsl.w	r6, r6, r9
9000a7b8:	4332      	orrs	r2, r6
9000a7ba:	e772      	b.n	9000a6a2 <HAL_GPIO_Init+0xe6>
9000a7bc:	2602      	movs	r6, #2
9000a7be:	fa06 f609 	lsl.w	r6, r6, r9
9000a7c2:	4332      	orrs	r2, r6
9000a7c4:	e76d      	b.n	9000a6a2 <HAL_GPIO_Init+0xe6>
9000a7c6:	2606      	movs	r6, #6
9000a7c8:	fa06 f609 	lsl.w	r6, r6, r9
9000a7cc:	4332      	orrs	r2, r6
9000a7ce:	e768      	b.n	9000a6a2 <HAL_GPIO_Init+0xe6>
9000a7d0:	2604      	movs	r6, #4
9000a7d2:	fa06 f609 	lsl.w	r6, r6, r9
9000a7d6:	4332      	orrs	r2, r6
9000a7d8:	e763      	b.n	9000a6a2 <HAL_GPIO_Init+0xe6>
9000a7da:	2605      	movs	r6, #5
9000a7dc:	fa06 f609 	lsl.w	r6, r6, r9
9000a7e0:	4332      	orrs	r2, r6
9000a7e2:	e75e      	b.n	9000a6a2 <HAL_GPIO_Init+0xe6>
9000a7e4:	2607      	movs	r6, #7
9000a7e6:	fa06 f609 	lsl.w	r6, r6, r9
9000a7ea:	4332      	orrs	r2, r6
9000a7ec:	e759      	b.n	9000a6a2 <HAL_GPIO_Init+0xe6>
9000a7ee:	2608      	movs	r6, #8
9000a7f0:	fa06 f609 	lsl.w	r6, r6, r9
9000a7f4:	4332      	orrs	r2, r6
9000a7f6:	e754      	b.n	9000a6a2 <HAL_GPIO_Init+0xe6>
9000a7f8:	58024400 	.word	0x58024400
9000a7fc:	58020000 	.word	0x58020000
9000a800:	58020800 	.word	0x58020800
9000a804:	58020c00 	.word	0x58020c00
9000a808:	58021000 	.word	0x58021000
9000a80c:	58021400 	.word	0x58021400
9000a810:	58021800 	.word	0x58021800
9000a814:	58021c00 	.word	0x58021c00
9000a818:	58022000 	.word	0x58022000
9000a81c:	58022400 	.word	0x58022400

9000a820 <HAL_GPIO_DeInit>:
  /* Check the parameters */
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* Configure the port pins */
  while ((GPIO_Pin >> position) != 0x00U)
9000a820:	2900      	cmp	r1, #0
9000a822:	f000 80a4 	beq.w	9000a96e <HAL_GPIO_DeInit+0x14e>
  uint32_t position = 0x00U;
9000a826:	2300      	movs	r3, #0
{
9000a828:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000a82c:	f8df 9168 	ldr.w	r9, [pc, #360]	; 9000a998 <HAL_GPIO_DeInit+0x178>
9000a830:	b083      	sub	sp, #12
    {
      /*------------------------- EXTI Mode Configuration --------------------*/
      /* Clear the External Interrupt or Event for the current IO */
      tmp = SYSCFG->EXTICR[position >> 2U];
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
9000a832:	f8df 8168 	ldr.w	r8, [pc, #360]	; 9000a99c <HAL_GPIO_DeInit+0x17c>
9000a836:	f8df a168 	ldr.w	sl, [pc, #360]	; 9000a9a0 <HAL_GPIO_DeInit+0x180>
9000a83a:	f8df b168 	ldr.w	fp, [pc, #360]	; 9000a9a4 <HAL_GPIO_DeInit+0x184>
    iocurrent = GPIO_Pin & (1UL << position) ;
9000a83e:	f04f 0e01 	mov.w	lr, #1
9000a842:	fa0e f203 	lsl.w	r2, lr, r3
    if (iocurrent != 0x00U)
9000a846:	ea12 0c01 	ands.w	ip, r2, r1
9000a84a:	d06b      	beq.n	9000a924 <HAL_GPIO_DeInit+0x104>
      tmp = SYSCFG->EXTICR[position >> 2U];
9000a84c:	f023 0503 	bic.w	r5, r3, #3
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
9000a850:	f003 0403 	and.w	r4, r3, #3
9000a854:	260f      	movs	r6, #15
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
9000a856:	4540      	cmp	r0, r8
9000a858:	444d      	add	r5, r9
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
9000a85a:	ea4f 0484 	mov.w	r4, r4, lsl #2
      tmp = SYSCFG->EXTICR[position >> 2U];
9000a85e:	68af      	ldr	r7, [r5, #8]
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
9000a860:	fa06 f604 	lsl.w	r6, r6, r4
9000a864:	ea07 0706 	and.w	r7, r7, r6
9000a868:	9701      	str	r7, [sp, #4]
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
9000a86a:	d01f      	beq.n	9000a8ac <HAL_GPIO_DeInit+0x8c>
9000a86c:	4550      	cmp	r0, sl
9000a86e:	d01a      	beq.n	9000a8a6 <HAL_GPIO_DeInit+0x86>
9000a870:	4558      	cmp	r0, fp
9000a872:	d05e      	beq.n	9000a932 <HAL_GPIO_DeInit+0x112>
9000a874:	4f43      	ldr	r7, [pc, #268]	; (9000a984 <HAL_GPIO_DeInit+0x164>)
9000a876:	42b8      	cmp	r0, r7
9000a878:	d065      	beq.n	9000a946 <HAL_GPIO_DeInit+0x126>
9000a87a:	4f43      	ldr	r7, [pc, #268]	; (9000a988 <HAL_GPIO_DeInit+0x168>)
9000a87c:	42b8      	cmp	r0, r7
9000a87e:	d067      	beq.n	9000a950 <HAL_GPIO_DeInit+0x130>
9000a880:	4f42      	ldr	r7, [pc, #264]	; (9000a98c <HAL_GPIO_DeInit+0x16c>)
9000a882:	42b8      	cmp	r0, r7
9000a884:	d05a      	beq.n	9000a93c <HAL_GPIO_DeInit+0x11c>
9000a886:	4f42      	ldr	r7, [pc, #264]	; (9000a990 <HAL_GPIO_DeInit+0x170>)
9000a888:	42b8      	cmp	r0, r7
9000a88a:	d06b      	beq.n	9000a964 <HAL_GPIO_DeInit+0x144>
9000a88c:	4f41      	ldr	r7, [pc, #260]	; (9000a994 <HAL_GPIO_DeInit+0x174>)
9000a88e:	42b8      	cmp	r0, r7
9000a890:	d06e      	beq.n	9000a970 <HAL_GPIO_DeInit+0x150>
9000a892:	f8df e114 	ldr.w	lr, [pc, #276]	; 9000a9a8 <HAL_GPIO_DeInit+0x188>
9000a896:	4570      	cmp	r0, lr
9000a898:	d05f      	beq.n	9000a95a <HAL_GPIO_DeInit+0x13a>
9000a89a:	f8df e110 	ldr.w	lr, [pc, #272]	; 9000a9ac <HAL_GPIO_DeInit+0x18c>
9000a89e:	4570      	cmp	r0, lr
9000a8a0:	d06b      	beq.n	9000a97a <HAL_GPIO_DeInit+0x15a>
9000a8a2:	f04f 0e0a 	mov.w	lr, #10
9000a8a6:	fa0e f404 	lsl.w	r4, lr, r4
9000a8aa:	e000      	b.n	9000a8ae <HAL_GPIO_DeInit+0x8e>
9000a8ac:	2400      	movs	r4, #0
9000a8ae:	9f01      	ldr	r7, [sp, #4]
9000a8b0:	42a7      	cmp	r7, r4
9000a8b2:	d119      	bne.n	9000a8e8 <HAL_GPIO_DeInit+0xc8>
      {
        /* Clear EXTI line configuration for Current CPU */
        EXTI_CurrentCPU->IMR1 &= ~(iocurrent);
9000a8b4:	f04f 44b0 	mov.w	r4, #1476395008	; 0x58000000
9000a8b8:	f8d4 7080 	ldr.w	r7, [r4, #128]	; 0x80
9000a8bc:	ea27 070c 	bic.w	r7, r7, ip
9000a8c0:	f8c4 7080 	str.w	r7, [r4, #128]	; 0x80
        EXTI_CurrentCPU->EMR1 &= ~(iocurrent);
9000a8c4:	f8d4 7084 	ldr.w	r7, [r4, #132]	; 0x84
9000a8c8:	ea27 070c 	bic.w	r7, r7, ip
9000a8cc:	f8c4 7084 	str.w	r7, [r4, #132]	; 0x84

        /* Clear Rising Falling edge configuration */
        EXTI->FTSR1 &= ~(iocurrent);
9000a8d0:	6867      	ldr	r7, [r4, #4]
9000a8d2:	ea27 070c 	bic.w	r7, r7, ip
9000a8d6:	6067      	str	r7, [r4, #4]
        EXTI->RTSR1 &= ~(iocurrent);
9000a8d8:	6827      	ldr	r7, [r4, #0]
9000a8da:	ea27 070c 	bic.w	r7, r7, ip
9000a8de:	6027      	str	r7, [r4, #0]

        tmp = 0x0FUL << (4U * (position & 0x03U));
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
9000a8e0:	68ac      	ldr	r4, [r5, #8]
9000a8e2:	ea24 0406 	bic.w	r4, r4, r6
9000a8e6:	60ac      	str	r4, [r5, #8]
      }

      /*------------------------- GPIO Mode Configuration --------------------*/
      /* Configure IO in Analog Mode */
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
9000a8e8:	005d      	lsls	r5, r3, #1
9000a8ea:	2403      	movs	r4, #3

      /* Configure the default Alternate Function in current IO */
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
9000a8ec:	f003 0607 	and.w	r6, r3, #7
9000a8f0:	270f      	movs	r7, #15
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
9000a8f2:	40ac      	lsls	r4, r5
9000a8f4:	6805      	ldr	r5, [r0, #0]
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
9000a8f6:	00b6      	lsls	r6, r6, #2
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
9000a8f8:	4325      	orrs	r5, r4
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
9000a8fa:	40b7      	lsls	r7, r6
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
9000a8fc:	6005      	str	r5, [r0, #0]
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
9000a8fe:	08dd      	lsrs	r5, r3, #3
9000a900:	eb00 0585 	add.w	r5, r0, r5, lsl #2
9000a904:	6a2e      	ldr	r6, [r5, #32]
9000a906:	ea26 0607 	bic.w	r6, r6, r7
9000a90a:	622e      	str	r6, [r5, #32]

      /* Deactivate the Pull-up and Pull-down resistor for the current IO */
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
9000a90c:	68c5      	ldr	r5, [r0, #12]
9000a90e:	ea25 0504 	bic.w	r5, r5, r4
9000a912:	60c5      	str	r5, [r0, #12]

      /* Configure the default value IO Output Type */
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT0 << position) ;
9000a914:	6845      	ldr	r5, [r0, #4]
9000a916:	ea25 0202 	bic.w	r2, r5, r2
9000a91a:	6042      	str	r2, [r0, #4]

      /* Configure the default value for IO Speed */
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
9000a91c:	6882      	ldr	r2, [r0, #8]
9000a91e:	ea22 0204 	bic.w	r2, r2, r4
9000a922:	6082      	str	r2, [r0, #8]
    }

    position++;
9000a924:	3301      	adds	r3, #1
  while ((GPIO_Pin >> position) != 0x00U)
9000a926:	fa31 f203 	lsrs.w	r2, r1, r3
9000a92a:	d188      	bne.n	9000a83e <HAL_GPIO_DeInit+0x1e>
  }
}
9000a92c:	b003      	add	sp, #12
9000a92e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
9000a932:	f04f 0e02 	mov.w	lr, #2
9000a936:	fa0e f404 	lsl.w	r4, lr, r4
9000a93a:	e7b8      	b.n	9000a8ae <HAL_GPIO_DeInit+0x8e>
9000a93c:	f04f 0e05 	mov.w	lr, #5
9000a940:	fa0e f404 	lsl.w	r4, lr, r4
9000a944:	e7b3      	b.n	9000a8ae <HAL_GPIO_DeInit+0x8e>
9000a946:	f04f 0e03 	mov.w	lr, #3
9000a94a:	fa0e f404 	lsl.w	r4, lr, r4
9000a94e:	e7ae      	b.n	9000a8ae <HAL_GPIO_DeInit+0x8e>
9000a950:	f04f 0e04 	mov.w	lr, #4
9000a954:	fa0e f404 	lsl.w	r4, lr, r4
9000a958:	e7a9      	b.n	9000a8ae <HAL_GPIO_DeInit+0x8e>
9000a95a:	f04f 0e08 	mov.w	lr, #8
9000a95e:	fa0e f404 	lsl.w	r4, lr, r4
9000a962:	e7a4      	b.n	9000a8ae <HAL_GPIO_DeInit+0x8e>
9000a964:	f04f 0e06 	mov.w	lr, #6
9000a968:	fa0e f404 	lsl.w	r4, lr, r4
9000a96c:	e79f      	b.n	9000a8ae <HAL_GPIO_DeInit+0x8e>
9000a96e:	4770      	bx	lr
9000a970:	f04f 0e07 	mov.w	lr, #7
9000a974:	fa0e f404 	lsl.w	r4, lr, r4
9000a978:	e799      	b.n	9000a8ae <HAL_GPIO_DeInit+0x8e>
9000a97a:	f04f 0e09 	mov.w	lr, #9
9000a97e:	fa0e f404 	lsl.w	r4, lr, r4
9000a982:	e794      	b.n	9000a8ae <HAL_GPIO_DeInit+0x8e>
9000a984:	58020c00 	.word	0x58020c00
9000a988:	58021000 	.word	0x58021000
9000a98c:	58021400 	.word	0x58021400
9000a990:	58021800 	.word	0x58021800
9000a994:	58021c00 	.word	0x58021c00
9000a998:	58000400 	.word	0x58000400
9000a99c:	58020000 	.word	0x58020000
9000a9a0:	58020400 	.word	0x58020400
9000a9a4:	58020800 	.word	0x58020800
9000a9a8:	58022000 	.word	0x58022000
9000a9ac:	58022400 	.word	0x58022400

9000a9b0 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if ((GPIOx->IDR & GPIO_Pin) != 0x00U)
9000a9b0:	6903      	ldr	r3, [r0, #16]
9000a9b2:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
9000a9b4:	bf14      	ite	ne
9000a9b6:	2001      	movne	r0, #1
9000a9b8:	2000      	moveq	r0, #0
9000a9ba:	4770      	bx	lr

9000a9bc <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
9000a9bc:	b902      	cbnz	r2, 9000a9c0 <HAL_GPIO_WritePin+0x4>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << GPIO_NUMBER;
9000a9be:	0409      	lsls	r1, r1, #16
9000a9c0:	6181      	str	r1, [r0, #24]
  }
}
9000a9c2:	4770      	bx	lr

9000a9c4 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
9000a9c4:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
9000a9c6:	ea01 0203 	and.w	r2, r1, r3
9000a9ca:	ea21 0103 	bic.w	r1, r1, r3
9000a9ce:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
9000a9d2:	6181      	str	r1, [r0, #24]
}
9000a9d4:	4770      	bx	lr
9000a9d6:	bf00      	nop

9000a9d8 <I2C_WaitOnTXISFlagUntilTimeout>:
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnTXISFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout,
                                                        uint32_t Tickstart)
{
9000a9d8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
9000a9dc:	6803      	ldr	r3, [r0, #0]
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
          {
            /* Check for the Timeout */
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
            {
              error_code |= HAL_I2C_ERROR_TIMEOUT;
9000a9de:	f04f 0820 	mov.w	r8, #32
{
9000a9e2:	4605      	mov	r5, r0
9000a9e4:	460e      	mov	r6, r1
9000a9e6:	4617      	mov	r7, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
9000a9e8:	6998      	ldr	r0, [r3, #24]
9000a9ea:	f010 0902 	ands.w	r9, r0, #2
9000a9ee:	f040 809e 	bne.w	9000ab2e <I2C_WaitOnTXISFlagUntilTimeout+0x156>
  uint32_t itflag   = hi2c->Instance->ISR;
9000a9f2:	699c      	ldr	r4, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
9000a9f4:	f014 0410 	ands.w	r4, r4, #16
9000a9f8:	d068      	beq.n	9000aacc <I2C_WaitOnTXISFlagUntilTimeout+0xf4>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
9000a9fa:	2210      	movs	r2, #16
  uint32_t tickstart = Tickstart;
9000a9fc:	463c      	mov	r4, r7
  HAL_StatusTypeDef status = HAL_OK;
9000a9fe:	46ca      	mov	sl, r9
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
9000aa00:	61da      	str	r2, [r3, #28]
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
9000aa02:	1c71      	adds	r1, r6, #1
9000aa04:	699a      	ldr	r2, [r3, #24]
9000aa06:	d163      	bne.n	9000aad0 <I2C_WaitOnTXISFlagUntilTimeout+0xf8>
9000aa08:	0690      	lsls	r0, r2, #26
9000aa0a:	f100 8093 	bmi.w	9000ab34 <I2C_WaitOnTXISFlagUntilTimeout+0x15c>
9000aa0e:	f1ba 0f00 	cmp.w	sl, #0
9000aa12:	d104      	bne.n	9000aa1e <I2C_WaitOnTXISFlagUntilTimeout+0x46>
9000aa14:	699c      	ldr	r4, [r3, #24]
9000aa16:	06a1      	lsls	r1, r4, #26
9000aa18:	d5fc      	bpl.n	9000aa14 <I2C_WaitOnTXISFlagUntilTimeout+0x3c>

    /* In case STOP Flag is detected, clear it */
    if (status == HAL_OK)
    {
      /* Clear STOP Flag */
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
9000aa1a:	f8c3 801c 	str.w	r8, [r3, #28]
    }

    error_code |= HAL_I2C_ERROR_AF;
9000aa1e:	f049 0404 	orr.w	r4, r9, #4

    status = HAL_ERROR;
9000aa22:	2101      	movs	r1, #1
  }

  /* Refresh Content of Status register */
  itflag = hi2c->Instance->ISR;
9000aa24:	699a      	ldr	r2, [r3, #24]

  /* Then verify if an additional errors occurs */
  /* Check if a Bus error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
9000aa26:	05d0      	lsls	r0, r2, #23
9000aa28:	d530      	bpl.n	9000aa8c <I2C_WaitOnTXISFlagUntilTimeout+0xb4>
  {
    error_code |= HAL_I2C_ERROR_BERR;

    /* Clear BERR flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
9000aa2a:	f44f 7180 	mov.w	r1, #256	; 0x100

    status = HAL_ERROR;
  }

  /* Check if an Over-Run/Under-Run error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
9000aa2e:	0556      	lsls	r6, r2, #21
    error_code |= HAL_I2C_ERROR_BERR;
9000aa30:	f044 0401 	orr.w	r4, r4, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
9000aa34:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
9000aa36:	d504      	bpl.n	9000aa42 <I2C_WaitOnTXISFlagUntilTimeout+0x6a>
  {
    error_code |= HAL_I2C_ERROR_OVR;

    /* Clear OVR flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
9000aa38:	f44f 6180 	mov.w	r1, #1024	; 0x400
    error_code |= HAL_I2C_ERROR_OVR;
9000aa3c:	f044 0408 	orr.w	r4, r4, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
9000aa40:	61d9      	str	r1, [r3, #28]

    status = HAL_ERROR;
  }

  /* Check if an Arbitration Loss error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
9000aa42:	0591      	lsls	r1, r2, #22
9000aa44:	d504      	bpl.n	9000aa50 <I2C_WaitOnTXISFlagUntilTimeout+0x78>
  {
    error_code |= HAL_I2C_ERROR_ARLO;

    /* Clear ARLO flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
9000aa46:	f44f 7200 	mov.w	r2, #512	; 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
9000aa4a:	f044 0402 	orr.w	r4, r4, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
9000aa4e:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
9000aa50:	699a      	ldr	r2, [r3, #24]
9000aa52:	0790      	lsls	r0, r2, #30
9000aa54:	d501      	bpl.n	9000aa5a <I2C_WaitOnTXISFlagUntilTimeout+0x82>
    hi2c->Instance->TXDR = 0x00U;
9000aa56:	2200      	movs	r2, #0
9000aa58:	629a      	str	r2, [r3, #40]	; 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
9000aa5a:	699a      	ldr	r2, [r3, #24]
9000aa5c:	07d1      	lsls	r1, r2, #31
9000aa5e:	d403      	bmi.n	9000aa68 <I2C_WaitOnTXISFlagUntilTimeout+0x90>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
9000aa60:	699a      	ldr	r2, [r3, #24]
9000aa62:	f042 0201 	orr.w	r2, r2, #1
9000aa66:	619a      	str	r2, [r3, #24]
  {
    /* Flush TX register */
    I2C_Flush_TXDR(hi2c);

    /* Clear Configuration Register 2 */
    I2C_RESET_CR2(hi2c);
9000aa68:	685a      	ldr	r2, [r3, #4]

    hi2c->ErrorCode |= error_code;
    hi2c->State = HAL_I2C_STATE_READY;
    hi2c->Mode = HAL_I2C_MODE_NONE;
9000aa6a:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
9000aa6c:	4834      	ldr	r0, [pc, #208]	; (9000ab40 <I2C_WaitOnTXISFlagUntilTimeout+0x168>)
    hi2c->State = HAL_I2C_STATE_READY;
9000aa6e:	2620      	movs	r6, #32
    I2C_RESET_CR2(hi2c);
9000aa70:	4002      	ands	r2, r0
      return HAL_ERROR;
9000aa72:	2001      	movs	r0, #1
    I2C_RESET_CR2(hi2c);
9000aa74:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= error_code;
9000aa76:	6c6b      	ldr	r3, [r5, #68]	; 0x44

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
9000aa78:	f885 1040 	strb.w	r1, [r5, #64]	; 0x40
    hi2c->ErrorCode |= error_code;
9000aa7c:	4323      	orrs	r3, r4
9000aa7e:	646b      	str	r3, [r5, #68]	; 0x44
    hi2c->State = HAL_I2C_STATE_READY;
9000aa80:	f885 6041 	strb.w	r6, [r5, #65]	; 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
9000aa84:	f885 1042 	strb.w	r1, [r5, #66]	; 0x42
}
9000aa88:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
9000aa8c:	0550      	lsls	r0, r2, #21
9000aa8e:	d4d3      	bmi.n	9000aa38 <I2C_WaitOnTXISFlagUntilTimeout+0x60>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
9000aa90:	0592      	lsls	r2, r2, #22
9000aa92:	d4d8      	bmi.n	9000aa46 <I2C_WaitOnTXISFlagUntilTimeout+0x6e>
  if (status != HAL_OK)
9000aa94:	2900      	cmp	r1, #0
9000aa96:	d1db      	bne.n	9000aa50 <I2C_WaitOnTXISFlagUntilTimeout+0x78>
    if (Timeout != HAL_MAX_DELAY)
9000aa98:	1c72      	adds	r2, r6, #1
9000aa9a:	d0a5      	beq.n	9000a9e8 <I2C_WaitOnTXISFlagUntilTimeout+0x10>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000aa9c:	f7ff fb04 	bl	9000a0a8 <HAL_GetTick>
9000aaa0:	1bc0      	subs	r0, r0, r7
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET))
9000aaa2:	682b      	ldr	r3, [r5, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000aaa4:	42b0      	cmp	r0, r6
9000aaa6:	d801      	bhi.n	9000aaac <I2C_WaitOnTXISFlagUntilTimeout+0xd4>
9000aaa8:	2e00      	cmp	r6, #0
9000aaaa:	d19d      	bne.n	9000a9e8 <I2C_WaitOnTXISFlagUntilTimeout+0x10>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET))
9000aaac:	699a      	ldr	r2, [r3, #24]
9000aaae:	f012 0202 	ands.w	r2, r2, #2
9000aab2:	d199      	bne.n	9000a9e8 <I2C_WaitOnTXISFlagUntilTimeout+0x10>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000aab4:	6c6b      	ldr	r3, [r5, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000aab6:	2120      	movs	r1, #32
          __HAL_UNLOCK(hi2c);
9000aab8:	2001      	movs	r0, #1
9000aaba:	f885 2040 	strb.w	r2, [r5, #64]	; 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000aabe:	430b      	orrs	r3, r1
9000aac0:	646b      	str	r3, [r5, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000aac2:	f885 1041 	strb.w	r1, [r5, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
9000aac6:	f885 2042 	strb.w	r2, [r5, #66]	; 0x42
          return HAL_ERROR;
9000aaca:	e7dd      	b.n	9000aa88 <I2C_WaitOnTXISFlagUntilTimeout+0xb0>
  HAL_StatusTypeDef status = HAL_OK;
9000aacc:	4621      	mov	r1, r4
9000aace:	e7a9      	b.n	9000aa24 <I2C_WaitOnTXISFlagUntilTimeout+0x4c>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
9000aad0:	0692      	lsls	r2, r2, #26
9000aad2:	d42f      	bmi.n	9000ab34 <I2C_WaitOnTXISFlagUntilTimeout+0x15c>
9000aad4:	f1ba 0f00 	cmp.w	sl, #0
9000aad8:	d1a1      	bne.n	9000aa1e <I2C_WaitOnTXISFlagUntilTimeout+0x46>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
9000aada:	f7ff fae5 	bl	9000a0a8 <HAL_GetTick>
9000aade:	1b00      	subs	r0, r0, r4
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
9000aae0:	682b      	ldr	r3, [r5, #0]
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
9000aae2:	4286      	cmp	r6, r0
9000aae4:	d301      	bcc.n	9000aaea <I2C_WaitOnTXISFlagUntilTimeout+0x112>
9000aae6:	2e00      	cmp	r6, #0
9000aae8:	d18b      	bne.n	9000aa02 <I2C_WaitOnTXISFlagUntilTimeout+0x2a>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
9000aaea:	6858      	ldr	r0, [r3, #4]
          tmp2 = hi2c->Mode;
9000aaec:	f895 2042 	ldrb.w	r2, [r5, #66]	; 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
9000aaf0:	6999      	ldr	r1, [r3, #24]
          tmp2 = hi2c->Mode;
9000aaf2:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
9000aaf4:	0409      	lsls	r1, r1, #16
9000aaf6:	d50b      	bpl.n	9000ab10 <I2C_WaitOnTXISFlagUntilTimeout+0x138>
              (tmp1 != I2C_CR2_STOP) && \
9000aaf8:	0441      	lsls	r1, r0, #17
9000aafa:	d409      	bmi.n	9000ab10 <I2C_WaitOnTXISFlagUntilTimeout+0x138>
9000aafc:	2a20      	cmp	r2, #32
9000aafe:	d007      	beq.n	9000ab10 <I2C_WaitOnTXISFlagUntilTimeout+0x138>
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
9000ab00:	685a      	ldr	r2, [r3, #4]
9000ab02:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
9000ab06:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
9000ab08:	f7ff face 	bl	9000a0a8 <HAL_GetTick>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
9000ab0c:	682b      	ldr	r3, [r5, #0]
            tickstart = HAL_GetTick();
9000ab0e:	4604      	mov	r4, r0
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
9000ab10:	699a      	ldr	r2, [r3, #24]
9000ab12:	0690      	lsls	r0, r2, #26
9000ab14:	f53f af75 	bmi.w	9000aa02 <I2C_WaitOnTXISFlagUntilTimeout+0x2a>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
9000ab18:	f7ff fac6 	bl	9000a0a8 <HAL_GetTick>
9000ab1c:	1b00      	subs	r0, r0, r4
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
9000ab1e:	682b      	ldr	r3, [r5, #0]
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
9000ab20:	2819      	cmp	r0, #25
9000ab22:	d9f5      	bls.n	9000ab10 <I2C_WaitOnTXISFlagUntilTimeout+0x138>
              error_code |= HAL_I2C_ERROR_TIMEOUT;
9000ab24:	f04f 0920 	mov.w	r9, #32
              status = HAL_ERROR;
9000ab28:	f04f 0a01 	mov.w	sl, #1
9000ab2c:	e769      	b.n	9000aa02 <I2C_WaitOnTXISFlagUntilTimeout+0x2a>
  return HAL_OK;
9000ab2e:	2000      	movs	r0, #0
}
9000ab30:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    if (status == HAL_OK)
9000ab34:	f1ba 0f00 	cmp.w	sl, #0
9000ab38:	f43f af6f 	beq.w	9000aa1a <I2C_WaitOnTXISFlagUntilTimeout+0x42>
9000ab3c:	e76f      	b.n	9000aa1e <I2C_WaitOnTXISFlagUntilTimeout+0x46>
9000ab3e:	bf00      	nop
9000ab40:	fe00e800 	.word	0xfe00e800

9000ab44 <I2C_WaitOnSTOPFlagUntilTimeout>:
{
9000ab44:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9000ab48:	4690      	mov	r8, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
9000ab4a:	6802      	ldr	r2, [r0, #0]
{
9000ab4c:	460f      	mov	r7, r1
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
9000ab4e:	6991      	ldr	r1, [r2, #24]
9000ab50:	068c      	lsls	r4, r1, #26
9000ab52:	d469      	bmi.n	9000ac28 <I2C_WaitOnSTOPFlagUntilTimeout+0xe4>
9000ab54:	4606      	mov	r6, r0
9000ab56:	4613      	mov	r3, r2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
9000ab58:	f04f 0910 	mov.w	r9, #16
  uint32_t itflag   = hi2c->Instance->ISR;
9000ab5c:	6994      	ldr	r4, [r2, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
9000ab5e:	f014 0410 	ands.w	r4, r4, #16
9000ab62:	d064      	beq.n	9000ac2e <I2C_WaitOnSTOPFlagUntilTimeout+0xea>
  uint32_t error_code = 0;
9000ab64:	2500      	movs	r5, #0
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
9000ab66:	4613      	mov	r3, r2
  uint32_t tickstart = Tickstart;
9000ab68:	4644      	mov	r4, r8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
9000ab6a:	f8c2 901c 	str.w	r9, [r2, #28]
  HAL_StatusTypeDef status = HAL_OK;
9000ab6e:	46aa      	mov	sl, r5
9000ab70:	1c79      	adds	r1, r7, #1
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
9000ab72:	699a      	ldr	r2, [r3, #24]
9000ab74:	d15d      	bne.n	9000ac32 <I2C_WaitOnSTOPFlagUntilTimeout+0xee>
9000ab76:	0690      	lsls	r0, r2, #26
9000ab78:	f100 8083 	bmi.w	9000ac82 <I2C_WaitOnSTOPFlagUntilTimeout+0x13e>
9000ab7c:	f1ba 0f00 	cmp.w	sl, #0
9000ab80:	d104      	bne.n	9000ab8c <I2C_WaitOnSTOPFlagUntilTimeout+0x48>
9000ab82:	699c      	ldr	r4, [r3, #24]
9000ab84:	06a1      	lsls	r1, r4, #26
9000ab86:	d5fc      	bpl.n	9000ab82 <I2C_WaitOnSTOPFlagUntilTimeout+0x3e>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
9000ab88:	2220      	movs	r2, #32
9000ab8a:	61da      	str	r2, [r3, #28]
    error_code |= HAL_I2C_ERROR_AF;
9000ab8c:	f045 0404 	orr.w	r4, r5, #4
    status = HAL_ERROR;
9000ab90:	2101      	movs	r1, #1
  itflag = hi2c->Instance->ISR;
9000ab92:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
9000ab94:	05d0      	lsls	r0, r2, #23
9000ab96:	d530      	bpl.n	9000abfa <I2C_WaitOnSTOPFlagUntilTimeout+0xb6>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
9000ab98:	f44f 7180 	mov.w	r1, #256	; 0x100
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
9000ab9c:	0555      	lsls	r5, r2, #21
    error_code |= HAL_I2C_ERROR_BERR;
9000ab9e:	f044 0401 	orr.w	r4, r4, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
9000aba2:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
9000aba4:	d504      	bpl.n	9000abb0 <I2C_WaitOnSTOPFlagUntilTimeout+0x6c>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
9000aba6:	f44f 6180 	mov.w	r1, #1024	; 0x400
    error_code |= HAL_I2C_ERROR_OVR;
9000abaa:	f044 0408 	orr.w	r4, r4, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
9000abae:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
9000abb0:	0591      	lsls	r1, r2, #22
9000abb2:	d504      	bpl.n	9000abbe <I2C_WaitOnSTOPFlagUntilTimeout+0x7a>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
9000abb4:	f44f 7200 	mov.w	r2, #512	; 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
9000abb8:	f044 0402 	orr.w	r4, r4, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
9000abbc:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
9000abbe:	699a      	ldr	r2, [r3, #24]
9000abc0:	0795      	lsls	r5, r2, #30
9000abc2:	d501      	bpl.n	9000abc8 <I2C_WaitOnSTOPFlagUntilTimeout+0x84>
    hi2c->Instance->TXDR = 0x00U;
9000abc4:	2200      	movs	r2, #0
9000abc6:	629a      	str	r2, [r3, #40]	; 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
9000abc8:	699a      	ldr	r2, [r3, #24]
9000abca:	07d0      	lsls	r0, r2, #31
9000abcc:	d403      	bmi.n	9000abd6 <I2C_WaitOnSTOPFlagUntilTimeout+0x92>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
9000abce:	699a      	ldr	r2, [r3, #24]
9000abd0:	f042 0201 	orr.w	r2, r2, #1
9000abd4:	619a      	str	r2, [r3, #24]
    I2C_RESET_CR2(hi2c);
9000abd6:	685a      	ldr	r2, [r3, #4]
    hi2c->Mode = HAL_I2C_MODE_NONE;
9000abd8:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
9000abda:	4837      	ldr	r0, [pc, #220]	; (9000acb8 <I2C_WaitOnSTOPFlagUntilTimeout+0x174>)
    hi2c->State = HAL_I2C_STATE_READY;
9000abdc:	2520      	movs	r5, #32
    I2C_RESET_CR2(hi2c);
9000abde:	4002      	ands	r2, r0
      return HAL_ERROR;
9000abe0:	2001      	movs	r0, #1
    I2C_RESET_CR2(hi2c);
9000abe2:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= error_code;
9000abe4:	6c73      	ldr	r3, [r6, #68]	; 0x44
    __HAL_UNLOCK(hi2c);
9000abe6:	f886 1040 	strb.w	r1, [r6, #64]	; 0x40
    hi2c->ErrorCode |= error_code;
9000abea:	4323      	orrs	r3, r4
9000abec:	6473      	str	r3, [r6, #68]	; 0x44
    hi2c->State = HAL_I2C_STATE_READY;
9000abee:	f886 5041 	strb.w	r5, [r6, #65]	; 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
9000abf2:	f886 1042 	strb.w	r1, [r6, #66]	; 0x42
}
9000abf6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
9000abfa:	0550      	lsls	r0, r2, #21
9000abfc:	d4d3      	bmi.n	9000aba6 <I2C_WaitOnSTOPFlagUntilTimeout+0x62>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
9000abfe:	0592      	lsls	r2, r2, #22
9000ac00:	d4d8      	bmi.n	9000abb4 <I2C_WaitOnSTOPFlagUntilTimeout+0x70>
  if (status != HAL_OK)
9000ac02:	2900      	cmp	r1, #0
9000ac04:	d1db      	bne.n	9000abbe <I2C_WaitOnSTOPFlagUntilTimeout+0x7a>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000ac06:	f7ff fa4f 	bl	9000a0a8 <HAL_GetTick>
9000ac0a:	eba0 0008 	sub.w	r0, r0, r8
9000ac0e:	42b8      	cmp	r0, r7
9000ac10:	d801      	bhi.n	9000ac16 <I2C_WaitOnSTOPFlagUntilTimeout+0xd2>
9000ac12:	2f00      	cmp	r7, #0
9000ac14:	d132      	bne.n	9000ac7c <I2C_WaitOnSTOPFlagUntilTimeout+0x138>
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET))
9000ac16:	6832      	ldr	r2, [r6, #0]
9000ac18:	6991      	ldr	r1, [r2, #24]
9000ac1a:	4613      	mov	r3, r2
9000ac1c:	f011 0120 	ands.w	r1, r1, #32
9000ac20:	d034      	beq.n	9000ac8c <I2C_WaitOnSTOPFlagUntilTimeout+0x148>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
9000ac22:	6991      	ldr	r1, [r2, #24]
9000ac24:	0689      	lsls	r1, r1, #26
9000ac26:	d599      	bpl.n	9000ab5c <I2C_WaitOnSTOPFlagUntilTimeout+0x18>
  return HAL_OK;
9000ac28:	2000      	movs	r0, #0
}
9000ac2a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  HAL_StatusTypeDef status = HAL_OK;
9000ac2e:	4621      	mov	r1, r4
9000ac30:	e7af      	b.n	9000ab92 <I2C_WaitOnSTOPFlagUntilTimeout+0x4e>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
9000ac32:	0692      	lsls	r2, r2, #26
9000ac34:	d425      	bmi.n	9000ac82 <I2C_WaitOnSTOPFlagUntilTimeout+0x13e>
9000ac36:	f1ba 0f00 	cmp.w	sl, #0
9000ac3a:	d1a7      	bne.n	9000ab8c <I2C_WaitOnSTOPFlagUntilTimeout+0x48>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
9000ac3c:	f7ff fa34 	bl	9000a0a8 <HAL_GetTick>
9000ac40:	1b00      	subs	r0, r0, r4
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
9000ac42:	6833      	ldr	r3, [r6, #0]
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
9000ac44:	4287      	cmp	r7, r0
9000ac46:	d301      	bcc.n	9000ac4c <I2C_WaitOnSTOPFlagUntilTimeout+0x108>
9000ac48:	2f00      	cmp	r7, #0
9000ac4a:	d191      	bne.n	9000ab70 <I2C_WaitOnSTOPFlagUntilTimeout+0x2c>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
9000ac4c:	6858      	ldr	r0, [r3, #4]
          tmp2 = hi2c->Mode;
9000ac4e:	f896 2042 	ldrb.w	r2, [r6, #66]	; 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
9000ac52:	6999      	ldr	r1, [r3, #24]
          tmp2 = hi2c->Mode;
9000ac54:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
9000ac56:	0409      	lsls	r1, r1, #16
9000ac58:	d503      	bpl.n	9000ac62 <I2C_WaitOnSTOPFlagUntilTimeout+0x11e>
              (tmp1 != I2C_CR2_STOP) && \
9000ac5a:	0441      	lsls	r1, r0, #17
9000ac5c:	d401      	bmi.n	9000ac62 <I2C_WaitOnSTOPFlagUntilTimeout+0x11e>
9000ac5e:	2a20      	cmp	r2, #32
9000ac60:	d121      	bne.n	9000aca6 <I2C_WaitOnSTOPFlagUntilTimeout+0x162>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
9000ac62:	699a      	ldr	r2, [r3, #24]
9000ac64:	0690      	lsls	r0, r2, #26
9000ac66:	d483      	bmi.n	9000ab70 <I2C_WaitOnSTOPFlagUntilTimeout+0x2c>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
9000ac68:	f7ff fa1e 	bl	9000a0a8 <HAL_GetTick>
9000ac6c:	1b00      	subs	r0, r0, r4
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
9000ac6e:	6833      	ldr	r3, [r6, #0]
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
9000ac70:	2819      	cmp	r0, #25
9000ac72:	d9f6      	bls.n	9000ac62 <I2C_WaitOnSTOPFlagUntilTimeout+0x11e>
              error_code |= HAL_I2C_ERROR_TIMEOUT;
9000ac74:	2520      	movs	r5, #32
              status = HAL_ERROR;
9000ac76:	f04f 0a01 	mov.w	sl, #1
9000ac7a:	e779      	b.n	9000ab70 <I2C_WaitOnSTOPFlagUntilTimeout+0x2c>
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET))
9000ac7c:	6833      	ldr	r3, [r6, #0]
9000ac7e:	461a      	mov	r2, r3
9000ac80:	e7cf      	b.n	9000ac22 <I2C_WaitOnSTOPFlagUntilTimeout+0xde>
    if (status == HAL_OK)
9000ac82:	f1ba 0f00 	cmp.w	sl, #0
9000ac86:	f43f af7f 	beq.w	9000ab88 <I2C_WaitOnSTOPFlagUntilTimeout+0x44>
9000ac8a:	e77f      	b.n	9000ab8c <I2C_WaitOnSTOPFlagUntilTimeout+0x48>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000ac8c:	6c73      	ldr	r3, [r6, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000ac8e:	2220      	movs	r2, #32
          __HAL_UNLOCK(hi2c);
9000ac90:	2001      	movs	r0, #1
9000ac92:	f886 1040 	strb.w	r1, [r6, #64]	; 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000ac96:	4313      	orrs	r3, r2
9000ac98:	6473      	str	r3, [r6, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000ac9a:	f886 2041 	strb.w	r2, [r6, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
9000ac9e:	f886 1042 	strb.w	r1, [r6, #66]	; 0x42
}
9000aca2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
9000aca6:	685a      	ldr	r2, [r3, #4]
9000aca8:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
9000acac:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
9000acae:	f7ff f9fb 	bl	9000a0a8 <HAL_GetTick>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
9000acb2:	6833      	ldr	r3, [r6, #0]
            tickstart = HAL_GetTick();
9000acb4:	4604      	mov	r4, r0
9000acb6:	e7d4      	b.n	9000ac62 <I2C_WaitOnSTOPFlagUntilTimeout+0x11e>
9000acb8:	fe00e800 	.word	0xfe00e800

9000acbc <HAL_I2C_MspInit>:
}
9000acbc:	4770      	bx	lr
9000acbe:	bf00      	nop

9000acc0 <HAL_I2C_Init>:
  if (hi2c == NULL)
9000acc0:	2800      	cmp	r0, #0
9000acc2:	d04e      	beq.n	9000ad62 <HAL_I2C_Init+0xa2>
{
9000acc4:	b510      	push	{r4, lr}
  if (hi2c->State == HAL_I2C_STATE_RESET)
9000acc6:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
9000acca:	4604      	mov	r4, r0
9000accc:	f003 02ff 	and.w	r2, r3, #255	; 0xff
9000acd0:	2b00      	cmp	r3, #0
9000acd2:	d041      	beq.n	9000ad58 <HAL_I2C_Init+0x98>
  __HAL_I2C_DISABLE(hi2c);
9000acd4:	6823      	ldr	r3, [r4, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
9000acd6:	2124      	movs	r1, #36	; 0x24
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
9000acd8:	6862      	ldr	r2, [r4, #4]
  hi2c->State = HAL_I2C_STATE_BUSY;
9000acda:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
  __HAL_I2C_DISABLE(hi2c);
9000acde:	6819      	ldr	r1, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
9000ace0:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
9000ace4:	68e0      	ldr	r0, [r4, #12]
  __HAL_I2C_DISABLE(hi2c);
9000ace6:	f021 0101 	bic.w	r1, r1, #1
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
9000acea:	2801      	cmp	r0, #1
  __HAL_I2C_DISABLE(hi2c);
9000acec:	6019      	str	r1, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
9000acee:	611a      	str	r2, [r3, #16]
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
9000acf0:	689a      	ldr	r2, [r3, #8]
9000acf2:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
9000acf6:	609a      	str	r2, [r3, #8]
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
9000acf8:	68a2      	ldr	r2, [r4, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
9000acfa:	d029      	beq.n	9000ad50 <HAL_I2C_Init+0x90>
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
9000acfc:	f442 4204 	orr.w	r2, r2, #33792	; 0x8400
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
9000ad00:	2802      	cmp	r0, #2
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
9000ad02:	609a      	str	r2, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
9000ad04:	d102      	bne.n	9000ad0c <HAL_I2C_Init+0x4c>
    hi2c->Instance->CR2 = (I2C_CR2_ADD10);
9000ad06:	f44f 6200 	mov.w	r2, #2048	; 0x800
9000ad0a:	605a      	str	r2, [r3, #4]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
9000ad0c:	6858      	ldr	r0, [r3, #4]
  hi2c->State = HAL_I2C_STATE_READY;
9000ad0e:	f04f 0c20 	mov.w	ip, #32
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
9000ad12:	4915      	ldr	r1, [pc, #84]	; (9000ad68 <HAL_I2C_Init+0xa8>)
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
9000ad14:	6922      	ldr	r2, [r4, #16]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
9000ad16:	4301      	orrs	r1, r0
9000ad18:	6059      	str	r1, [r3, #4]
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
9000ad1a:	68d9      	ldr	r1, [r3, #12]
9000ad1c:	f421 4100 	bic.w	r1, r1, #32768	; 0x8000
9000ad20:	60d9      	str	r1, [r3, #12]
                          (hi2c->Init.OwnAddress2Masks << 8));
9000ad22:	e9d4 0105 	ldrd	r0, r1, [r4, #20]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
9000ad26:	4302      	orrs	r2, r0
9000ad28:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
9000ad2c:	e9d4 1007 	ldrd	r1, r0, [r4, #28]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
9000ad30:	60da      	str	r2, [r3, #12]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
9000ad32:	2200      	movs	r2, #0
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
9000ad34:	4301      	orrs	r1, r0
  return HAL_OK;
9000ad36:	4610      	mov	r0, r2
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
9000ad38:	6019      	str	r1, [r3, #0]
  __HAL_I2C_ENABLE(hi2c);
9000ad3a:	6819      	ldr	r1, [r3, #0]
9000ad3c:	f041 0101 	orr.w	r1, r1, #1
9000ad40:	6019      	str	r1, [r3, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
9000ad42:	6462      	str	r2, [r4, #68]	; 0x44
  hi2c->State = HAL_I2C_STATE_READY;
9000ad44:	f884 c041 	strb.w	ip, [r4, #65]	; 0x41
  hi2c->PreviousState = I2C_STATE_NONE;
9000ad48:	6322      	str	r2, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
9000ad4a:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
}
9000ad4e:	bd10      	pop	{r4, pc}
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
9000ad50:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
9000ad54:	609a      	str	r2, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
9000ad56:	e7d9      	b.n	9000ad0c <HAL_I2C_Init+0x4c>
    hi2c->Lock = HAL_UNLOCKED;
9000ad58:	f880 2040 	strb.w	r2, [r0, #64]	; 0x40
    HAL_I2C_MspInit(hi2c);
9000ad5c:	f7ff ffae 	bl	9000acbc <HAL_I2C_MspInit>
9000ad60:	e7b8      	b.n	9000acd4 <HAL_I2C_Init+0x14>
    return HAL_ERROR;
9000ad62:	2001      	movs	r0, #1
}
9000ad64:	4770      	bx	lr
9000ad66:	bf00      	nop
9000ad68:	02008000 	.word	0x02008000

9000ad6c <HAL_I2C_MspDeInit>:
9000ad6c:	4770      	bx	lr
9000ad6e:	bf00      	nop

9000ad70 <HAL_I2C_DeInit>:
  if (hi2c == NULL)
9000ad70:	b1b0      	cbz	r0, 9000ada0 <HAL_I2C_DeInit+0x30>
  __HAL_I2C_DISABLE(hi2c);
9000ad72:	6802      	ldr	r2, [r0, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
9000ad74:	2324      	movs	r3, #36	; 0x24
{
9000ad76:	b510      	push	{r4, lr}
  hi2c->State = HAL_I2C_STATE_BUSY;
9000ad78:	f880 3041 	strb.w	r3, [r0, #65]	; 0x41
9000ad7c:	4604      	mov	r4, r0
  __HAL_I2C_DISABLE(hi2c);
9000ad7e:	6813      	ldr	r3, [r2, #0]
9000ad80:	f023 0301 	bic.w	r3, r3, #1
9000ad84:	6013      	str	r3, [r2, #0]
  HAL_I2C_MspDeInit(hi2c);
9000ad86:	f7ff fff1 	bl	9000ad6c <HAL_I2C_MspDeInit>
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
9000ad8a:	2300      	movs	r3, #0
9000ad8c:	6463      	str	r3, [r4, #68]	; 0x44
  return HAL_OK;
9000ad8e:	4618      	mov	r0, r3
  hi2c->State = HAL_I2C_STATE_RESET;
9000ad90:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hi2c);
9000ad94:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
  hi2c->PreviousState = I2C_STATE_NONE;
9000ad98:	6323      	str	r3, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
9000ad9a:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
}
9000ad9e:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
9000ada0:	2001      	movs	r0, #1
}
9000ada2:	4770      	bx	lr

9000ada4 <HAL_I2C_Mem_Write>:
{
9000ada4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9000ada8:	4698      	mov	r8, r3
  if (hi2c->State == HAL_I2C_STATE_READY)
9000adaa:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
{
9000adae:	f8bd a024 	ldrh.w	sl, [sp, #36]	; 0x24
  if (hi2c->State == HAL_I2C_STATE_READY)
9000adb2:	2b20      	cmp	r3, #32
{
9000adb4:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  if (hi2c->State == HAL_I2C_STATE_READY)
9000adb6:	d132      	bne.n	9000ae1e <HAL_I2C_Mem_Write+0x7a>
    if ((pData == NULL) || (Size == 0U))
9000adb8:	9b08      	ldr	r3, [sp, #32]
9000adba:	4604      	mov	r4, r0
9000adbc:	b34b      	cbz	r3, 9000ae12 <HAL_I2C_Mem_Write+0x6e>
9000adbe:	f1ba 0f00 	cmp.w	sl, #0
9000adc2:	d026      	beq.n	9000ae12 <HAL_I2C_Mem_Write+0x6e>
    __HAL_LOCK(hi2c);
9000adc4:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
9000adc8:	2b01      	cmp	r3, #1
9000adca:	d028      	beq.n	9000ae1e <HAL_I2C_Mem_Write+0x7a>
9000adcc:	2301      	movs	r3, #1
9000adce:	460e      	mov	r6, r1
9000add0:	4691      	mov	r9, r2
9000add2:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
    tickstart = HAL_GetTick();
9000add6:	f7ff f967 	bl	9000a0a8 <HAL_GetTick>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000adda:	6823      	ldr	r3, [r4, #0]
    tickstart = HAL_GetTick();
9000addc:	4605      	mov	r5, r0
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000adde:	699a      	ldr	r2, [r3, #24]
9000ade0:	0411      	lsls	r1, r2, #16
9000ade2:	d51f      	bpl.n	9000ae24 <HAL_I2C_Mem_Write+0x80>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000ade4:	f7ff f960 	bl	9000a0a8 <HAL_GetTick>
9000ade8:	1b40      	subs	r0, r0, r5
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000adea:	6823      	ldr	r3, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000adec:	2819      	cmp	r0, #25
9000adee:	d9f6      	bls.n	9000adde <HAL_I2C_Mem_Write+0x3a>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000adf0:	699a      	ldr	r2, [r3, #24]
9000adf2:	0412      	lsls	r2, r2, #16
9000adf4:	d5f3      	bpl.n	9000adde <HAL_I2C_Mem_Write+0x3a>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000adf6:	6c63      	ldr	r3, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000adf8:	2120      	movs	r1, #32
          hi2c->Mode = HAL_I2C_MODE_NONE;
9000adfa:	2200      	movs	r2, #0
      return HAL_ERROR;
9000adfc:	2001      	movs	r0, #1
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000adfe:	430b      	orrs	r3, r1
          __HAL_UNLOCK(hi2c);
9000ae00:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000ae04:	6463      	str	r3, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000ae06:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
9000ae0a:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
}
9000ae0e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
9000ae12:	f44f 7300 	mov.w	r3, #512	; 0x200
      return  HAL_ERROR;
9000ae16:	2001      	movs	r0, #1
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
9000ae18:	6463      	str	r3, [r4, #68]	; 0x44
}
9000ae1a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    return HAL_BUSY;
9000ae1e:	2002      	movs	r0, #2
}
9000ae20:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    hi2c->pBuffPtr  = pData;
9000ae24:	9a08      	ldr	r2, [sp, #32]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
9000ae26:	2121      	movs	r1, #33	; 0x21
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_TRANSFER_MODE(Mode));
  assert_param(IS_TRANSFER_REQUEST(Request));

  /* Declaration of tmp to prevent undefined behavior of volatile usage */
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
9000ae28:	f3c6 0609 	ubfx	r6, r6, #0, #10
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000ae2c:	4620      	mov	r0, r4
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
9000ae2e:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
9000ae32:	2140      	movs	r1, #64	; 0x40
    hi2c->pBuffPtr  = pData;
9000ae34:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
9000ae36:	2200      	movs	r2, #0
    hi2c->Mode      = HAL_I2C_MODE_MEM;
9000ae38:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
    hi2c->XferISR   = NULL;
9000ae3c:	6362      	str	r2, [r4, #52]	; 0x34
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
9000ae3e:	6462      	str	r2, [r4, #68]	; 0x44
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
                             (uint32_t)Mode | (uint32_t)Request) & (~0x80000000U));

  /* update CR2 register */
  MODIFY_REG(hi2c->Instance->CR2, \
9000ae40:	496d      	ldr	r1, [pc, #436]	; (9000aff8 <HAL_I2C_Mem_Write+0x254>)
    hi2c->XferCount = Size;
9000ae42:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
9000ae46:	685a      	ldr	r2, [r3, #4]
9000ae48:	400a      	ands	r2, r1
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
9000ae4a:	fa5f f188 	uxtb.w	r1, r8
  MODIFY_REG(hi2c->Instance->CR2, \
9000ae4e:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
9000ae52:	496a      	ldr	r1, [pc, #424]	; (9000affc <HAL_I2C_Mem_Write+0x258>)
9000ae54:	4332      	orrs	r2, r6
9000ae56:	4311      	orrs	r1, r2
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000ae58:	462a      	mov	r2, r5
  MODIFY_REG(hi2c->Instance->CR2, \
9000ae5a:	6059      	str	r1, [r3, #4]
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000ae5c:	4639      	mov	r1, r7
9000ae5e:	f7ff fdbb 	bl	9000a9d8 <I2C_WaitOnTXISFlagUntilTimeout>
9000ae62:	2800      	cmp	r0, #0
9000ae64:	d175      	bne.n	9000af52 <HAL_I2C_Mem_Write+0x1ae>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
9000ae66:	f1b8 0f01 	cmp.w	r8, #1
9000ae6a:	d00a      	beq.n	9000ae82 <HAL_I2C_Mem_Write+0xde>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
9000ae6c:	ea4f 2219 	mov.w	r2, r9, lsr #8
9000ae70:	6823      	ldr	r3, [r4, #0]
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000ae72:	4639      	mov	r1, r7
9000ae74:	4620      	mov	r0, r4
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
9000ae76:	629a      	str	r2, [r3, #40]	; 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000ae78:	462a      	mov	r2, r5
9000ae7a:	f7ff fdad 	bl	9000a9d8 <I2C_WaitOnTXISFlagUntilTimeout>
9000ae7e:	2800      	cmp	r0, #0
9000ae80:	d167      	bne.n	9000af52 <HAL_I2C_Mem_Write+0x1ae>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
9000ae82:	fa5f f389 	uxtb.w	r3, r9
9000ae86:	6822      	ldr	r2, [r4, #0]
9000ae88:	6293      	str	r3, [r2, #40]	; 0x28
9000ae8a:	1c78      	adds	r0, r7, #1
9000ae8c:	d14a      	bne.n	9000af24 <HAL_I2C_Mem_Write+0x180>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000ae8e:	6993      	ldr	r3, [r2, #24]
9000ae90:	0619      	lsls	r1, r3, #24
9000ae92:	d5fc      	bpl.n	9000ae8e <HAL_I2C_Mem_Write+0xea>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
9000ae94:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
9000ae96:	b29b      	uxth	r3, r3
9000ae98:	2bff      	cmp	r3, #255	; 0xff
9000ae9a:	f240 808a 	bls.w	9000afb2 <HAL_I2C_Mem_Write+0x20e>
  MODIFY_REG(hi2c->Instance->CR2, \
9000ae9e:	6853      	ldr	r3, [r2, #4]
9000aea0:	4957      	ldr	r1, [pc, #348]	; (9000b000 <HAL_I2C_Mem_Write+0x25c>)
9000aea2:	400b      	ands	r3, r1
9000aea4:	4957      	ldr	r1, [pc, #348]	; (9000b004 <HAL_I2C_Mem_Write+0x260>)
9000aea6:	4333      	orrs	r3, r6
9000aea8:	4319      	orrs	r1, r3
      hi2c->XferSize = MAX_NBYTE_SIZE;
9000aeaa:	23ff      	movs	r3, #255	; 0xff
9000aeac:	8523      	strh	r3, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
9000aeae:	6051      	str	r1, [r2, #4]
9000aeb0:	f8df 814c 	ldr.w	r8, [pc, #332]	; 9000b000 <HAL_I2C_Mem_Write+0x25c>
          hi2c->XferSize = MAX_NBYTE_SIZE;
9000aeb4:	f04f 0aff 	mov.w	sl, #255	; 0xff
  MODIFY_REG(hi2c->Instance->CR2, \
9000aeb8:	f8df 9148 	ldr.w	r9, [pc, #328]	; 9000b004 <HAL_I2C_Mem_Write+0x260>
9000aebc:	e004      	b.n	9000aec8 <HAL_I2C_Mem_Write+0x124>
    } while (hi2c->XferCount > 0U);
9000aebe:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
9000aec0:	b29b      	uxth	r3, r3
9000aec2:	2b00      	cmp	r3, #0
9000aec4:	f000 8083 	beq.w	9000afce <HAL_I2C_Mem_Write+0x22a>
      if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
9000aec8:	462a      	mov	r2, r5
9000aeca:	4639      	mov	r1, r7
9000aecc:	4620      	mov	r0, r4
9000aece:	f7ff fd83 	bl	9000a9d8 <I2C_WaitOnTXISFlagUntilTimeout>
9000aed2:	2800      	cmp	r0, #0
9000aed4:	d16b      	bne.n	9000afae <HAL_I2C_Mem_Write+0x20a>
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
9000aed6:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000aed8:	6821      	ldr	r1, [r4, #0]
9000aeda:	f812 0b01 	ldrb.w	r0, [r2], #1
      hi2c->XferSize--;
9000aede:	8d23      	ldrh	r3, [r4, #40]	; 0x28
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
9000aee0:	6288      	str	r0, [r1, #40]	; 0x28
      hi2c->pBuffPtr++;
9000aee2:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferSize--;
9000aee4:	3b01      	subs	r3, #1
      hi2c->XferCount--;
9000aee6:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
9000aee8:	b29b      	uxth	r3, r3
      hi2c->XferCount--;
9000aeea:	3a01      	subs	r2, #1
      hi2c->XferSize--;
9000aeec:	8523      	strh	r3, [r4, #40]	; 0x28
      hi2c->XferCount--;
9000aeee:	b292      	uxth	r2, r2
9000aef0:	8562      	strh	r2, [r4, #42]	; 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
9000aef2:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
9000aef4:	b292      	uxth	r2, r2
9000aef6:	2a00      	cmp	r2, #0
9000aef8:	d0e1      	beq.n	9000aebe <HAL_I2C_Mem_Write+0x11a>
9000aefa:	2b00      	cmp	r3, #0
9000aefc:	d1df      	bne.n	9000aebe <HAL_I2C_Mem_Write+0x11a>
9000aefe:	1c78      	adds	r0, r7, #1
9000af00:	d12c      	bne.n	9000af5c <HAL_I2C_Mem_Write+0x1b8>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000af02:	698b      	ldr	r3, [r1, #24]
9000af04:	061a      	lsls	r2, r3, #24
9000af06:	d5fc      	bpl.n	9000af02 <HAL_I2C_Mem_Write+0x15e>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
9000af08:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
9000af0a:	b29b      	uxth	r3, r3
9000af0c:	2bff      	cmp	r3, #255	; 0xff
9000af0e:	d940      	bls.n	9000af92 <HAL_I2C_Mem_Write+0x1ee>
  MODIFY_REG(hi2c->Instance->CR2, \
9000af10:	684b      	ldr	r3, [r1, #4]
          hi2c->XferSize = MAX_NBYTE_SIZE;
9000af12:	f8a4 a028 	strh.w	sl, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
9000af16:	ea03 0308 	and.w	r3, r3, r8
9000af1a:	4333      	orrs	r3, r6
9000af1c:	ea43 0309 	orr.w	r3, r3, r9
9000af20:	604b      	str	r3, [r1, #4]
             ((I2C_CR2_SADD | I2C_CR2_NBYTES | I2C_CR2_RELOAD | I2C_CR2_AUTOEND | \
               (I2C_CR2_RD_WRN & (uint32_t)(Request >> (31U - I2C_CR2_RD_WRN_Pos))) | \
               I2C_CR2_START | I2C_CR2_STOP)), tmp);
}
9000af22:	e7cc      	b.n	9000aebe <HAL_I2C_Mem_Write+0x11a>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000af24:	6993      	ldr	r3, [r2, #24]
9000af26:	061b      	lsls	r3, r3, #24
9000af28:	d4b4      	bmi.n	9000ae94 <HAL_I2C_Mem_Write+0xf0>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000af2a:	f7ff f8bd 	bl	9000a0a8 <HAL_GetTick>
9000af2e:	1b40      	subs	r0, r0, r5
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000af30:	6822      	ldr	r2, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000af32:	4287      	cmp	r7, r0
9000af34:	d301      	bcc.n	9000af3a <HAL_I2C_Mem_Write+0x196>
9000af36:	2f00      	cmp	r7, #0
9000af38:	d1a7      	bne.n	9000ae8a <HAL_I2C_Mem_Write+0xe6>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000af3a:	6993      	ldr	r3, [r2, #24]
9000af3c:	f013 0380 	ands.w	r3, r3, #128	; 0x80
9000af40:	d1a3      	bne.n	9000ae8a <HAL_I2C_Mem_Write+0xe6>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000af42:	6c62      	ldr	r2, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000af44:	2120      	movs	r1, #32
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000af46:	430a      	orrs	r2, r1
9000af48:	6462      	str	r2, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000af4a:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
9000af4e:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
      __HAL_UNLOCK(hi2c);
9000af52:	2300      	movs	r3, #0
      return HAL_ERROR;
9000af54:	2001      	movs	r0, #1
      __HAL_UNLOCK(hi2c);
9000af56:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
      return HAL_ERROR;
9000af5a:	e75e      	b.n	9000ae1a <HAL_I2C_Mem_Write+0x76>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000af5c:	698b      	ldr	r3, [r1, #24]
9000af5e:	061b      	lsls	r3, r3, #24
9000af60:	d4d2      	bmi.n	9000af08 <HAL_I2C_Mem_Write+0x164>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000af62:	f7ff f8a1 	bl	9000a0a8 <HAL_GetTick>
9000af66:	1b40      	subs	r0, r0, r5
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000af68:	6821      	ldr	r1, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000af6a:	4287      	cmp	r7, r0
9000af6c:	d301      	bcc.n	9000af72 <HAL_I2C_Mem_Write+0x1ce>
9000af6e:	2f00      	cmp	r7, #0
9000af70:	d1c5      	bne.n	9000aefe <HAL_I2C_Mem_Write+0x15a>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000af72:	698b      	ldr	r3, [r1, #24]
9000af74:	f013 0380 	ands.w	r3, r3, #128	; 0x80
9000af78:	d1c1      	bne.n	9000aefe <HAL_I2C_Mem_Write+0x15a>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000af7a:	6c62      	ldr	r2, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000af7c:	2120      	movs	r1, #32
          return HAL_ERROR;
9000af7e:	2001      	movs	r0, #1
          __HAL_UNLOCK(hi2c);
9000af80:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000af84:	430a      	orrs	r2, r1
9000af86:	6462      	str	r2, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000af88:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
9000af8c:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
          return HAL_ERROR;
9000af90:	e743      	b.n	9000ae1a <HAL_I2C_Mem_Write+0x76>
          hi2c->XferSize = hi2c->XferCount;
9000af92:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
9000af94:	b29b      	uxth	r3, r3
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
9000af96:	b2da      	uxtb	r2, r3
          hi2c->XferSize = hi2c->XferCount;
9000af98:	8523      	strh	r3, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
9000af9a:	684b      	ldr	r3, [r1, #4]
9000af9c:	ea03 0308 	and.w	r3, r3, r8
9000afa0:	4333      	orrs	r3, r6
9000afa2:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9000afa6:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
9000afaa:	604b      	str	r3, [r1, #4]
}
9000afac:	e787      	b.n	9000aebe <HAL_I2C_Mem_Write+0x11a>
        return HAL_ERROR;
9000afae:	2001      	movs	r0, #1
9000afb0:	e733      	b.n	9000ae1a <HAL_I2C_Mem_Write+0x76>
      hi2c->XferSize = hi2c->XferCount;
9000afb2:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
9000afb4:	4812      	ldr	r0, [pc, #72]	; (9000b000 <HAL_I2C_Mem_Write+0x25c>)
      hi2c->XferSize = hi2c->XferCount;
9000afb6:	b29b      	uxth	r3, r3
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
9000afb8:	b2d9      	uxtb	r1, r3
      hi2c->XferSize = hi2c->XferCount;
9000afba:	8523      	strh	r3, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
9000afbc:	6853      	ldr	r3, [r2, #4]
9000afbe:	4003      	ands	r3, r0
9000afc0:	4333      	orrs	r3, r6
9000afc2:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
9000afc6:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
9000afca:	6053      	str	r3, [r2, #4]
}
9000afcc:	e770      	b.n	9000aeb0 <HAL_I2C_Mem_Write+0x10c>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
9000afce:	462a      	mov	r2, r5
9000afd0:	4639      	mov	r1, r7
9000afd2:	4620      	mov	r0, r4
9000afd4:	f7ff fdb6 	bl	9000ab44 <I2C_WaitOnSTOPFlagUntilTimeout>
9000afd8:	2800      	cmp	r0, #0
9000afda:	d1e8      	bne.n	9000afae <HAL_I2C_Mem_Write+0x20a>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
9000afdc:	6823      	ldr	r3, [r4, #0]
9000afde:	2120      	movs	r1, #32
    I2C_RESET_CR2(hi2c);
9000afe0:	4d09      	ldr	r5, [pc, #36]	; (9000b008 <HAL_I2C_Mem_Write+0x264>)
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
9000afe2:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
9000afe4:	685a      	ldr	r2, [r3, #4]
9000afe6:	402a      	ands	r2, r5
9000afe8:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
9000afea:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
9000afee:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
9000aff2:	f884 0042 	strb.w	r0, [r4, #66]	; 0x42
    return HAL_OK;
9000aff6:	e710      	b.n	9000ae1a <HAL_I2C_Mem_Write+0x76>
9000aff8:	fc009800 	.word	0xfc009800
9000affc:	01002000 	.word	0x01002000
9000b000:	fc009c00 	.word	0xfc009c00
9000b004:	01ff0000 	.word	0x01ff0000
9000b008:	fe00e800 	.word	0xfe00e800

9000b00c <HAL_I2C_Mem_Read>:
{
9000b00c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000b010:	461c      	mov	r4, r3
  if (hi2c->State == HAL_I2C_STATE_READY)
9000b012:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
{
9000b016:	f8bd 902c 	ldrh.w	r9, [sp, #44]	; 0x2c
  if (hi2c->State == HAL_I2C_STATE_READY)
9000b01a:	2b20      	cmp	r3, #32
{
9000b01c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
  if (hi2c->State == HAL_I2C_STATE_READY)
9000b01e:	d137      	bne.n	9000b090 <HAL_I2C_Mem_Read+0x84>
    if ((pData == NULL) || (Size == 0U))
9000b020:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9000b022:	4683      	mov	fp, r0
9000b024:	b36b      	cbz	r3, 9000b082 <HAL_I2C_Mem_Read+0x76>
9000b026:	f1b9 0f00 	cmp.w	r9, #0
9000b02a:	d02a      	beq.n	9000b082 <HAL_I2C_Mem_Read+0x76>
    __HAL_LOCK(hi2c);
9000b02c:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
9000b030:	2b01      	cmp	r3, #1
9000b032:	d02d      	beq.n	9000b090 <HAL_I2C_Mem_Read+0x84>
9000b034:	2301      	movs	r3, #1
9000b036:	460f      	mov	r7, r1
9000b038:	4690      	mov	r8, r2
9000b03a:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
    tickstart = HAL_GetTick();
9000b03e:	f7ff f833 	bl	9000a0a8 <HAL_GetTick>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000b042:	f8db 3000 	ldr.w	r3, [fp]
    tickstart = HAL_GetTick();
9000b046:	4606      	mov	r6, r0
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000b048:	699a      	ldr	r2, [r3, #24]
9000b04a:	0410      	lsls	r0, r2, #16
9000b04c:	d523      	bpl.n	9000b096 <HAL_I2C_Mem_Read+0x8a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000b04e:	f7ff f82b 	bl	9000a0a8 <HAL_GetTick>
9000b052:	1b80      	subs	r0, r0, r6
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000b054:	f8db 3000 	ldr.w	r3, [fp]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000b058:	2819      	cmp	r0, #25
9000b05a:	d9f5      	bls.n	9000b048 <HAL_I2C_Mem_Read+0x3c>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000b05c:	699a      	ldr	r2, [r3, #24]
9000b05e:	0411      	lsls	r1, r2, #16
9000b060:	d5f2      	bpl.n	9000b048 <HAL_I2C_Mem_Read+0x3c>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000b062:	f8db 3044 	ldr.w	r3, [fp, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000b066:	2120      	movs	r1, #32
          hi2c->Mode = HAL_I2C_MODE_NONE;
9000b068:	2200      	movs	r2, #0
      return HAL_ERROR;
9000b06a:	2001      	movs	r0, #1
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000b06c:	430b      	orrs	r3, r1
          __HAL_UNLOCK(hi2c);
9000b06e:	f88b 2040 	strb.w	r2, [fp, #64]	; 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000b072:	f8cb 3044 	str.w	r3, [fp, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000b076:	f88b 1041 	strb.w	r1, [fp, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
9000b07a:	f88b 2042 	strb.w	r2, [fp, #66]	; 0x42
}
9000b07e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
9000b082:	f44f 7300 	mov.w	r3, #512	; 0x200
      return  HAL_ERROR;
9000b086:	2001      	movs	r0, #1
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
9000b088:	f8cb 3044 	str.w	r3, [fp, #68]	; 0x44
}
9000b08c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    return HAL_BUSY;
9000b090:	2002      	movs	r0, #2
}
9000b092:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    hi2c->pBuffPtr  = pData;
9000b096:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
9000b098:	2122      	movs	r1, #34	; 0x22
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
9000b09a:	f3c7 0709 	ubfx	r7, r7, #0, #10
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000b09e:	4658      	mov	r0, fp
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
9000b0a0:	f88b 1041 	strb.w	r1, [fp, #65]	; 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
9000b0a4:	2140      	movs	r1, #64	; 0x40
    hi2c->pBuffPtr  = pData;
9000b0a6:	f8cb 2024 	str.w	r2, [fp, #36]	; 0x24
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
9000b0aa:	2200      	movs	r2, #0
    hi2c->Mode      = HAL_I2C_MODE_MEM;
9000b0ac:	f88b 1042 	strb.w	r1, [fp, #66]	; 0x42
    hi2c->XferISR   = NULL;
9000b0b0:	f8cb 2034 	str.w	r2, [fp, #52]	; 0x34
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
9000b0b4:	f8cb 2044 	str.w	r2, [fp, #68]	; 0x44
  MODIFY_REG(hi2c->Instance->CR2, \
9000b0b8:	4983      	ldr	r1, [pc, #524]	; (9000b2c8 <HAL_I2C_Mem_Read+0x2bc>)
    hi2c->XferCount = Size;
9000b0ba:	f8ab 902a 	strh.w	r9, [fp, #42]	; 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
9000b0be:	685a      	ldr	r2, [r3, #4]
9000b0c0:	400a      	ands	r2, r1
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
9000b0c2:	b2e1      	uxtb	r1, r4
  MODIFY_REG(hi2c->Instance->CR2, \
9000b0c4:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000b0c8:	4629      	mov	r1, r5
  MODIFY_REG(hi2c->Instance->CR2, \
9000b0ca:	433a      	orrs	r2, r7
9000b0cc:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
9000b0d0:	605a      	str	r2, [r3, #4]
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000b0d2:	4632      	mov	r2, r6
9000b0d4:	f7ff fc80 	bl	9000a9d8 <I2C_WaitOnTXISFlagUntilTimeout>
9000b0d8:	2800      	cmp	r0, #0
9000b0da:	f040 8091 	bne.w	9000b200 <HAL_I2C_Mem_Read+0x1f4>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
9000b0de:	2c01      	cmp	r4, #1
9000b0e0:	d00c      	beq.n	9000b0fc <HAL_I2C_Mem_Read+0xf0>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
9000b0e2:	ea4f 2218 	mov.w	r2, r8, lsr #8
9000b0e6:	f8db 3000 	ldr.w	r3, [fp]
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000b0ea:	4629      	mov	r1, r5
9000b0ec:	4658      	mov	r0, fp
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
9000b0ee:	629a      	str	r2, [r3, #40]	; 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000b0f0:	4632      	mov	r2, r6
9000b0f2:	f7ff fc71 	bl	9000a9d8 <I2C_WaitOnTXISFlagUntilTimeout>
9000b0f6:	2800      	cmp	r0, #0
9000b0f8:	f040 8082 	bne.w	9000b200 <HAL_I2C_Mem_Read+0x1f4>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
9000b0fc:	fa5f f388 	uxtb.w	r3, r8
9000b100:	f8db 4000 	ldr.w	r4, [fp]
9000b104:	62a3      	str	r3, [r4, #40]	; 0x28
9000b106:	1c6a      	adds	r2, r5, #1
9000b108:	d160      	bne.n	9000b1cc <HAL_I2C_Mem_Read+0x1c0>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000b10a:	69a3      	ldr	r3, [r4, #24]
9000b10c:	065b      	lsls	r3, r3, #25
9000b10e:	d5fc      	bpl.n	9000b10a <HAL_I2C_Mem_Read+0xfe>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
9000b110:	f8bb 302a 	ldrh.w	r3, [fp, #42]	; 0x2a
9000b114:	b29b      	uxth	r3, r3
9000b116:	2bff      	cmp	r3, #255	; 0xff
9000b118:	f240 80ae 	bls.w	9000b278 <HAL_I2C_Mem_Read+0x26c>
  MODIFY_REG(hi2c->Instance->CR2, \
9000b11c:	6863      	ldr	r3, [r4, #4]
9000b11e:	4a6a      	ldr	r2, [pc, #424]	; (9000b2c8 <HAL_I2C_Mem_Read+0x2bc>)
9000b120:	4013      	ands	r3, r2
9000b122:	4a6a      	ldr	r2, [pc, #424]	; (9000b2cc <HAL_I2C_Mem_Read+0x2c0>)
9000b124:	433b      	orrs	r3, r7
9000b126:	431a      	orrs	r2, r3
      hi2c->XferSize = MAX_NBYTE_SIZE;
9000b128:	23ff      	movs	r3, #255	; 0xff
9000b12a:	f8ab 3028 	strh.w	r3, [fp, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
9000b12e:	6062      	str	r2, [r4, #4]
9000b130:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 9000b2d8 <HAL_I2C_Mem_Read+0x2cc>
          hi2c->XferSize = MAX_NBYTE_SIZE;
9000b134:	f04f 0aff 	mov.w	sl, #255	; 0xff
  MODIFY_REG(hi2c->Instance->CR2, \
9000b138:	f8df 91a0 	ldr.w	r9, [pc, #416]	; 9000b2dc <HAL_I2C_Mem_Read+0x2d0>
9000b13c:	1c69      	adds	r1, r5, #1
9000b13e:	d127      	bne.n	9000b190 <HAL_I2C_Mem_Read+0x184>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000b140:	69a3      	ldr	r3, [r4, #24]
9000b142:	075a      	lsls	r2, r3, #29
9000b144:	d5fc      	bpl.n	9000b140 <HAL_I2C_Mem_Read+0x134>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
9000b146:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000b148:	f8db 3024 	ldr.w	r3, [fp, #36]	; 0x24
9000b14c:	701a      	strb	r2, [r3, #0]
      hi2c->XferCount--;
9000b14e:	f8bb 202a 	ldrh.w	r2, [fp, #42]	; 0x2a
      hi2c->pBuffPtr++;
9000b152:	f8db 3024 	ldr.w	r3, [fp, #36]	; 0x24
      hi2c->XferCount--;
9000b156:	3a01      	subs	r2, #1
      hi2c->pBuffPtr++;
9000b158:	3301      	adds	r3, #1
      hi2c->XferCount--;
9000b15a:	b292      	uxth	r2, r2
      hi2c->pBuffPtr++;
9000b15c:	f8cb 3024 	str.w	r3, [fp, #36]	; 0x24
      hi2c->XferSize--;
9000b160:	f8bb 3028 	ldrh.w	r3, [fp, #40]	; 0x28
      hi2c->XferCount--;
9000b164:	f8ab 202a 	strh.w	r2, [fp, #42]	; 0x2a
      hi2c->XferSize--;
9000b168:	3b01      	subs	r3, #1
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
9000b16a:	f8bb 202a 	ldrh.w	r2, [fp, #42]	; 0x2a
      hi2c->XferSize--;
9000b16e:	b29b      	uxth	r3, r3
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
9000b170:	b292      	uxth	r2, r2
      hi2c->XferSize--;
9000b172:	f8ab 3028 	strh.w	r3, [fp, #40]	; 0x28
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
9000b176:	b10a      	cbz	r2, 9000b17c <HAL_I2C_Mem_Read+0x170>
9000b178:	2b00      	cmp	r3, #0
9000b17a:	d046      	beq.n	9000b20a <HAL_I2C_Mem_Read+0x1fe>
    } while (hi2c->XferCount > 0U);
9000b17c:	f8bb 302a 	ldrh.w	r3, [fp, #42]	; 0x2a
9000b180:	b29b      	uxth	r3, r3
9000b182:	2b00      	cmp	r3, #0
9000b184:	f000 8088 	beq.w	9000b298 <HAL_I2C_Mem_Read+0x28c>
9000b188:	1c69      	adds	r1, r5, #1
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000b18a:	f8db 4000 	ldr.w	r4, [fp]
9000b18e:	d0d7      	beq.n	9000b140 <HAL_I2C_Mem_Read+0x134>
9000b190:	69a3      	ldr	r3, [r4, #24]
9000b192:	075b      	lsls	r3, r3, #29
9000b194:	d4d7      	bmi.n	9000b146 <HAL_I2C_Mem_Read+0x13a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000b196:	f7fe ff87 	bl	9000a0a8 <HAL_GetTick>
9000b19a:	1b80      	subs	r0, r0, r6
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000b19c:	f8db 4000 	ldr.w	r4, [fp]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000b1a0:	4285      	cmp	r5, r0
9000b1a2:	d301      	bcc.n	9000b1a8 <HAL_I2C_Mem_Read+0x19c>
9000b1a4:	2d00      	cmp	r5, #0
9000b1a6:	d1c9      	bne.n	9000b13c <HAL_I2C_Mem_Read+0x130>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000b1a8:	69a3      	ldr	r3, [r4, #24]
9000b1aa:	f013 0304 	ands.w	r3, r3, #4
9000b1ae:	d1c5      	bne.n	9000b13c <HAL_I2C_Mem_Read+0x130>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000b1b0:	f8db 2044 	ldr.w	r2, [fp, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000b1b4:	2120      	movs	r1, #32
          return HAL_ERROR;
9000b1b6:	2001      	movs	r0, #1
          __HAL_UNLOCK(hi2c);
9000b1b8:	f88b 3040 	strb.w	r3, [fp, #64]	; 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000b1bc:	430a      	orrs	r2, r1
9000b1be:	f8cb 2044 	str.w	r2, [fp, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000b1c2:	f88b 1041 	strb.w	r1, [fp, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
9000b1c6:	f88b 3042 	strb.w	r3, [fp, #66]	; 0x42
          return HAL_ERROR;
9000b1ca:	e75f      	b.n	9000b08c <HAL_I2C_Mem_Read+0x80>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000b1cc:	69a3      	ldr	r3, [r4, #24]
9000b1ce:	0658      	lsls	r0, r3, #25
9000b1d0:	d49e      	bmi.n	9000b110 <HAL_I2C_Mem_Read+0x104>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000b1d2:	f7fe ff69 	bl	9000a0a8 <HAL_GetTick>
9000b1d6:	1b80      	subs	r0, r0, r6
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000b1d8:	f8db 4000 	ldr.w	r4, [fp]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000b1dc:	4285      	cmp	r5, r0
9000b1de:	d301      	bcc.n	9000b1e4 <HAL_I2C_Mem_Read+0x1d8>
9000b1e0:	2d00      	cmp	r5, #0
9000b1e2:	d190      	bne.n	9000b106 <HAL_I2C_Mem_Read+0xfa>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000b1e4:	69a3      	ldr	r3, [r4, #24]
9000b1e6:	f013 0340 	ands.w	r3, r3, #64	; 0x40
9000b1ea:	d18c      	bne.n	9000b106 <HAL_I2C_Mem_Read+0xfa>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000b1ec:	f8db 2044 	ldr.w	r2, [fp, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000b1f0:	2120      	movs	r1, #32
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000b1f2:	430a      	orrs	r2, r1
9000b1f4:	f8cb 2044 	str.w	r2, [fp, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000b1f8:	f88b 1041 	strb.w	r1, [fp, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
9000b1fc:	f88b 3042 	strb.w	r3, [fp, #66]	; 0x42
      __HAL_UNLOCK(hi2c);
9000b200:	2300      	movs	r3, #0
      return HAL_ERROR;
9000b202:	2001      	movs	r0, #1
      __HAL_UNLOCK(hi2c);
9000b204:	f88b 3040 	strb.w	r3, [fp, #64]	; 0x40
      return HAL_ERROR;
9000b208:	e740      	b.n	9000b08c <HAL_I2C_Mem_Read+0x80>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000b20a:	f8db 2000 	ldr.w	r2, [fp]
9000b20e:	1c68      	adds	r0, r5, #1
9000b210:	d111      	bne.n	9000b236 <HAL_I2C_Mem_Read+0x22a>
9000b212:	6993      	ldr	r3, [r2, #24]
9000b214:	0619      	lsls	r1, r3, #24
9000b216:	d5fc      	bpl.n	9000b212 <HAL_I2C_Mem_Read+0x206>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
9000b218:	f8bb 302a 	ldrh.w	r3, [fp, #42]	; 0x2a
9000b21c:	b29b      	uxth	r3, r3
9000b21e:	2bff      	cmp	r3, #255	; 0xff
9000b220:	d91a      	bls.n	9000b258 <HAL_I2C_Mem_Read+0x24c>
  MODIFY_REG(hi2c->Instance->CR2, \
9000b222:	6853      	ldr	r3, [r2, #4]
          hi2c->XferSize = MAX_NBYTE_SIZE;
9000b224:	f8ab a028 	strh.w	sl, [fp, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
9000b228:	ea03 0308 	and.w	r3, r3, r8
9000b22c:	433b      	orrs	r3, r7
9000b22e:	ea43 0309 	orr.w	r3, r3, r9
9000b232:	6053      	str	r3, [r2, #4]
}
9000b234:	e7a2      	b.n	9000b17c <HAL_I2C_Mem_Read+0x170>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000b236:	6993      	ldr	r3, [r2, #24]
9000b238:	061b      	lsls	r3, r3, #24
9000b23a:	d4ed      	bmi.n	9000b218 <HAL_I2C_Mem_Read+0x20c>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000b23c:	f7fe ff34 	bl	9000a0a8 <HAL_GetTick>
9000b240:	1b80      	subs	r0, r0, r6
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000b242:	f8db 2000 	ldr.w	r2, [fp]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000b246:	4285      	cmp	r5, r0
9000b248:	d301      	bcc.n	9000b24e <HAL_I2C_Mem_Read+0x242>
9000b24a:	2d00      	cmp	r5, #0
9000b24c:	d1df      	bne.n	9000b20e <HAL_I2C_Mem_Read+0x202>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000b24e:	6993      	ldr	r3, [r2, #24]
9000b250:	f013 0380 	ands.w	r3, r3, #128	; 0x80
9000b254:	d1db      	bne.n	9000b20e <HAL_I2C_Mem_Read+0x202>
9000b256:	e7ab      	b.n	9000b1b0 <HAL_I2C_Mem_Read+0x1a4>
          hi2c->XferSize = hi2c->XferCount;
9000b258:	f8bb 302a 	ldrh.w	r3, [fp, #42]	; 0x2a
9000b25c:	b29b      	uxth	r3, r3
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
9000b25e:	b2d9      	uxtb	r1, r3
          hi2c->XferSize = hi2c->XferCount;
9000b260:	f8ab 3028 	strh.w	r3, [fp, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
9000b264:	6853      	ldr	r3, [r2, #4]
9000b266:	ea03 0308 	and.w	r3, r3, r8
9000b26a:	433b      	orrs	r3, r7
9000b26c:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
9000b270:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
9000b274:	6053      	str	r3, [r2, #4]
}
9000b276:	e781      	b.n	9000b17c <HAL_I2C_Mem_Read+0x170>
      hi2c->XferSize = hi2c->XferCount;
9000b278:	f8bb 302a 	ldrh.w	r3, [fp, #42]	; 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
9000b27c:	4912      	ldr	r1, [pc, #72]	; (9000b2c8 <HAL_I2C_Mem_Read+0x2bc>)
      hi2c->XferSize = hi2c->XferCount;
9000b27e:	b29b      	uxth	r3, r3
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
9000b280:	b2da      	uxtb	r2, r3
      hi2c->XferSize = hi2c->XferCount;
9000b282:	f8ab 3028 	strh.w	r3, [fp, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
9000b286:	6863      	ldr	r3, [r4, #4]
9000b288:	400b      	ands	r3, r1
9000b28a:	433b      	orrs	r3, r7
9000b28c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9000b290:	4a0f      	ldr	r2, [pc, #60]	; (9000b2d0 <HAL_I2C_Mem_Read+0x2c4>)
9000b292:	431a      	orrs	r2, r3
9000b294:	6062      	str	r2, [r4, #4]
}
9000b296:	e74b      	b.n	9000b130 <HAL_I2C_Mem_Read+0x124>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
9000b298:	4632      	mov	r2, r6
9000b29a:	4629      	mov	r1, r5
9000b29c:	4658      	mov	r0, fp
9000b29e:	f7ff fc51 	bl	9000ab44 <I2C_WaitOnSTOPFlagUntilTimeout>
9000b2a2:	b970      	cbnz	r0, 9000b2c2 <HAL_I2C_Mem_Read+0x2b6>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
9000b2a4:	f8db 3000 	ldr.w	r3, [fp]
9000b2a8:	2120      	movs	r1, #32
    I2C_RESET_CR2(hi2c);
9000b2aa:	4c0a      	ldr	r4, [pc, #40]	; (9000b2d4 <HAL_I2C_Mem_Read+0x2c8>)
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
9000b2ac:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
9000b2ae:	685a      	ldr	r2, [r3, #4]
9000b2b0:	4022      	ands	r2, r4
9000b2b2:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
9000b2b4:	f88b 1041 	strb.w	r1, [fp, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
9000b2b8:	f88b 0040 	strb.w	r0, [fp, #64]	; 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
9000b2bc:	f88b 0042 	strb.w	r0, [fp, #66]	; 0x42
    return HAL_OK;
9000b2c0:	e6e4      	b.n	9000b08c <HAL_I2C_Mem_Read+0x80>
      return HAL_ERROR;
9000b2c2:	2001      	movs	r0, #1
9000b2c4:	e6e2      	b.n	9000b08c <HAL_I2C_Mem_Read+0x80>
9000b2c6:	bf00      	nop
9000b2c8:	fc009800 	.word	0xfc009800
9000b2cc:	01ff2400 	.word	0x01ff2400
9000b2d0:	02002400 	.word	0x02002400
9000b2d4:	fe00e800 	.word	0xfe00e800
9000b2d8:	fc009c00 	.word	0xfc009c00
9000b2dc:	01ff0000 	.word	0x01ff0000

9000b2e0 <HAL_I2C_GetState>:
  return hi2c->State;
9000b2e0:	f890 0041 	ldrb.w	r0, [r0, #65]	; 0x41
}
9000b2e4:	4770      	bx	lr
9000b2e6:	bf00      	nop

9000b2e8 <HAL_I2C_GetError>:
  return hi2c->ErrorCode;
9000b2e8:	6c40      	ldr	r0, [r0, #68]	; 0x44
}
9000b2ea:	4770      	bx	lr

9000b2ec <HAL_I2CEx_ConfigAnalogFilter>:
{
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
9000b2ec:	f890 2041 	ldrb.w	r2, [r0, #65]	; 0x41
9000b2f0:	2a20      	cmp	r2, #32
9000b2f2:	d123      	bne.n	9000b33c <HAL_I2CEx_ConfigAnalogFilter+0x50>
9000b2f4:	fa5f fc82 	uxtb.w	ip, r2
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
9000b2f8:	f890 2040 	ldrb.w	r2, [r0, #64]	; 0x40
9000b2fc:	4603      	mov	r3, r0
9000b2fe:	2a01      	cmp	r2, #1
9000b300:	d01c      	beq.n	9000b33c <HAL_I2CEx_ConfigAnalogFilter+0x50>

    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
9000b302:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
9000b304:	2024      	movs	r0, #36	; 0x24
{
9000b306:	b500      	push	{lr}
    hi2c->State = HAL_I2C_STATE_BUSY;
9000b308:	f883 0041 	strb.w	r0, [r3, #65]	; 0x41
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
9000b30c:	f04f 0e00 	mov.w	lr, #0
    __HAL_I2C_DISABLE(hi2c);
9000b310:	6810      	ldr	r0, [r2, #0]
9000b312:	f020 0001 	bic.w	r0, r0, #1
9000b316:	6010      	str	r0, [r2, #0]
    hi2c->Instance->CR1 &= ~(I2C_CR1_ANFOFF);
9000b318:	6810      	ldr	r0, [r2, #0]
9000b31a:	f420 5080 	bic.w	r0, r0, #4096	; 0x1000
9000b31e:	6010      	str	r0, [r2, #0]
    hi2c->Instance->CR1 |= AnalogFilter;
9000b320:	6810      	ldr	r0, [r2, #0]
9000b322:	4301      	orrs	r1, r0

    return HAL_OK;
9000b324:	4670      	mov	r0, lr
    hi2c->Instance->CR1 |= AnalogFilter;
9000b326:	6011      	str	r1, [r2, #0]
    __HAL_I2C_ENABLE(hi2c);
9000b328:	6811      	ldr	r1, [r2, #0]
9000b32a:	f041 0101 	orr.w	r1, r1, #1
9000b32e:	6011      	str	r1, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
9000b330:	f883 c041 	strb.w	ip, [r3, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
9000b334:	f883 e040 	strb.w	lr, [r3, #64]	; 0x40
  }
  else
  {
    return HAL_BUSY;
  }
}
9000b338:	f85d fb04 	ldr.w	pc, [sp], #4
    return HAL_BUSY;
9000b33c:	2002      	movs	r0, #2
}
9000b33e:	4770      	bx	lr

9000b340 <HAL_I2CEx_ConfigDigitalFilter>:

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
9000b340:	f890 2041 	ldrb.w	r2, [r0, #65]	; 0x41
9000b344:	2a20      	cmp	r2, #32
9000b346:	d122      	bne.n	9000b38e <HAL_I2CEx_ConfigDigitalFilter+0x4e>
9000b348:	4603      	mov	r3, r0
{
9000b34a:	b500      	push	{lr}
9000b34c:	fa5f fe82 	uxtb.w	lr, r2
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
9000b350:	f890 2040 	ldrb.w	r2, [r0, #64]	; 0x40
9000b354:	2a01      	cmp	r2, #1
9000b356:	d01c      	beq.n	9000b392 <HAL_I2CEx_ConfigDigitalFilter+0x52>

    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
9000b358:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
9000b35a:	2024      	movs	r0, #36	; 0x24
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
9000b35c:	f04f 0c00 	mov.w	ip, #0
    hi2c->State = HAL_I2C_STATE_BUSY;
9000b360:	f883 0041 	strb.w	r0, [r3, #65]	; 0x41
    __HAL_I2C_DISABLE(hi2c);
9000b364:	6810      	ldr	r0, [r2, #0]
9000b366:	f020 0001 	bic.w	r0, r0, #1
9000b36a:	6010      	str	r0, [r2, #0]
    tmpreg = hi2c->Instance->CR1;
9000b36c:	6810      	ldr	r0, [r2, #0]
    tmpreg &= ~(I2C_CR1_DNF);
9000b36e:	f420 6070 	bic.w	r0, r0, #3840	; 0xf00
    tmpreg |= DigitalFilter << 8U;
9000b372:	ea40 2101 	orr.w	r1, r0, r1, lsl #8

    return HAL_OK;
9000b376:	4660      	mov	r0, ip
    hi2c->Instance->CR1 = tmpreg;
9000b378:	6011      	str	r1, [r2, #0]
    __HAL_I2C_ENABLE(hi2c);
9000b37a:	6811      	ldr	r1, [r2, #0]
9000b37c:	f041 0101 	orr.w	r1, r1, #1
9000b380:	6011      	str	r1, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
9000b382:	f883 e041 	strb.w	lr, [r3, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
9000b386:	f883 c040 	strb.w	ip, [r3, #64]	; 0x40
  }
  else
  {
    return HAL_BUSY;
  }
}
9000b38a:	f85d fb04 	ldr.w	pc, [sp], #4
    return HAL_BUSY;
9000b38e:	2002      	movs	r0, #2
}
9000b390:	4770      	bx	lr
    return HAL_BUSY;
9000b392:	2002      	movs	r0, #2
}
9000b394:	f85d fb04 	ldr.w	pc, [sp], #4

9000b398 <JPEG_Bits_To_SizeCodes>:
  * @param  Huffcode pointer to codes table
  * @param  LastK pointer to last Coeff (table dimension)
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Bits_To_SizeCodes(uint8_t *Bits, uint8_t *Huffsize, uint32_t *Huffcode, uint32_t *LastK)
{
9000b398:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9000b39c:	460d      	mov	r5, r1
9000b39e:	4614      	mov	r4, r2
9000b3a0:	469a      	mov	sl, r3

  /* Figure C.1: Generation of table of Huffman code sizes */
  p = 0;
  for (l = 0; l < 16UL; l++)
  {
    i = (uint32_t)Bits[l];
9000b3a2:	7806      	ldrb	r6, [r0, #0]
    if ((p + i) > 256UL)
9000b3a4:	4681      	mov	r9, r0
    i = (uint32_t)Bits[l];
9000b3a6:	2701      	movs	r7, #1
  p = 0;
9000b3a8:	f04f 0800 	mov.w	r8, #0
9000b3ac:	e006      	b.n	9000b3bc <JPEG_Bits_To_SizeCodes+0x24>
    i = (uint32_t)Bits[l];
9000b3ae:	f819 6f01 	ldrb.w	r6, [r9, #1]!
    if ((p + i) > 256UL)
9000b3b2:	eb06 0308 	add.w	r3, r6, r8
9000b3b6:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
9000b3ba:	d837      	bhi.n	9000b42c <JPEG_Bits_To_SizeCodes+0x94>
      /* check for table overflow */
      return HAL_ERROR;
    }
    while (i != 0UL)
    {
      Huffsize[p] = (uint8_t) l + 1U;
9000b3bc:	eb05 0008 	add.w	r0, r5, r8
9000b3c0:	4632      	mov	r2, r6
9000b3c2:	4639      	mov	r1, r7
    while (i != 0UL)
9000b3c4:	b116      	cbz	r6, 9000b3cc <JPEG_Bits_To_SizeCodes+0x34>
      p++;
9000b3c6:	44b0      	add	r8, r6
      Huffsize[p] = (uint8_t) l + 1U;
9000b3c8:	f01e ff50 	bl	9002a26c <memset>
  for (l = 0; l < 16UL; l++)
9000b3cc:	2f10      	cmp	r7, #16
    if ((p + i) > 256UL)
9000b3ce:	f107 0701 	add.w	r7, r7, #1
  for (l = 0; l < 16UL; l++)
9000b3d2:	d1ec      	bne.n	9000b3ae <JPEG_Bits_To_SizeCodes+0x16>
      i--;
    }
  }
  Huffsize[p] = 0;
9000b3d4:	2300      	movs	r3, #0
9000b3d6:	f805 3008 	strb.w	r3, [r5, r8]
  *LastK = p;
9000b3da:	f8ca 8000 	str.w	r8, [sl]

  /* Figure C.2: Generation of table of Huffman codes */
  code = 0;
  si = Huffsize[0];
9000b3de:	7828      	ldrb	r0, [r5, #0]
9000b3e0:	4601      	mov	r1, r0
  p = 0;
  while (Huffsize[p] != 0U)
9000b3e2:	b300      	cbz	r0, 9000b426 <JPEG_Bits_To_SizeCodes+0x8e>
9000b3e4:	f06f 4840 	mvn.w	r8, #3221225472	; 0xc0000000
    /* code must fit in "size" bits (si), no code is allowed to be all ones*/
    if(si > 31UL)
    {
      return HAL_ERROR;
    }
    if (((uint32_t) code) >= (((uint32_t) 1) << si))
9000b3e8:	2701      	movs	r7, #1
  p = 0;
9000b3ea:	461a      	mov	r2, r3
    while (((uint32_t) Huffsize[p]) == si)
9000b3ec:	4288      	cmp	r0, r1
9000b3ee:	d10f      	bne.n	9000b410 <JPEG_Bits_To_SizeCodes+0x78>
9000b3f0:	eb02 0008 	add.w	r0, r2, r8
9000b3f4:	1c56      	adds	r6, r2, #1
9000b3f6:	eb05 0c02 	add.w	ip, r5, r2
9000b3fa:	eb04 0080 	add.w	r0, r4, r0, lsl #2
9000b3fe:	1af6      	subs	r6, r6, r3
      Huffcode[p] = code;
9000b400:	f840 3f04 	str.w	r3, [r0, #4]!
      p++;
9000b404:	18f2      	adds	r2, r6, r3
    while (((uint32_t) Huffsize[p]) == si)
9000b406:	f81c ef01 	ldrb.w	lr, [ip, #1]!
      code++;
9000b40a:	3301      	adds	r3, #1
    while (((uint32_t) Huffsize[p]) == si)
9000b40c:	458e      	cmp	lr, r1
9000b40e:	d0f7      	beq.n	9000b400 <JPEG_Bits_To_SizeCodes+0x68>
    if(si > 31UL)
9000b410:	291f      	cmp	r1, #31
9000b412:	d80b      	bhi.n	9000b42c <JPEG_Bits_To_SizeCodes+0x94>
    if (((uint32_t) code) >= (((uint32_t) 1) << si))
9000b414:	fa07 f001 	lsl.w	r0, r7, r1
9000b418:	4298      	cmp	r0, r3
9000b41a:	d907      	bls.n	9000b42c <JPEG_Bits_To_SizeCodes+0x94>
  while (Huffsize[p] != 0U)
9000b41c:	5ca8      	ldrb	r0, [r5, r2]
    {
      return HAL_ERROR;
    }
    code <<= 1;
9000b41e:	005b      	lsls	r3, r3, #1
    si++;
9000b420:	3101      	adds	r1, #1
  while (Huffsize[p] != 0U)
9000b422:	2800      	cmp	r0, #0
9000b424:	d1e2      	bne.n	9000b3ec <JPEG_Bits_To_SizeCodes+0x54>
  }
  /* Return function status */
  return HAL_OK;
9000b426:	2000      	movs	r0, #0
}
9000b428:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      return HAL_ERROR;
9000b42c:	2001      	movs	r0, #1
}
9000b42e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9000b432:	bf00      	nop

9000b434 <JPEG_DCHuff_BitsVals_To_SizeCodes>:
  * @param  DC_SizeCodesTable pointer to DC huffman Sizes/Codes table
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_DCHuff_BitsVals_To_SizeCodes(JPEG_DCHuffTableTypeDef *DC_BitsValsTable,
                                                           JPEG_DC_HuffCodeTableTypeDef *DC_SizeCodesTable)
{
9000b434:	b5f0      	push	{r4, r5, r6, r7, lr}
9000b436:	f2ad 5d14 	subw	sp, sp, #1300	; 0x514
9000b43a:	460d      	mov	r5, r1
9000b43c:	4604      	mov	r4, r0
  uint32_t k;
  uint32_t l;
  uint32_t lastK;
  uint8_t huffsize[257];
  uint32_t huffcode[257];
  error = JPEG_Bits_To_SizeCodes(DC_BitsValsTable->Bits, huffsize, huffcode, &lastK);
9000b43e:	ab01      	add	r3, sp, #4
9000b440:	aa43      	add	r2, sp, #268	; 0x10c
9000b442:	a902      	add	r1, sp, #8
9000b444:	f7ff ffa8 	bl	9000b398 <JPEG_Bits_To_SizeCodes>
  if (error != HAL_OK)
9000b448:	b9d0      	cbnz	r0, 9000b480 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4c>
    return  error;
  }
  /* Figure C.3: ordering procedure for encoding procedure code tables */
  k = 0;

  while (k < lastK)
9000b44a:	9f01      	ldr	r7, [sp, #4]
9000b44c:	b1c7      	cbz	r7, 9000b480 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4c>
9000b44e:	370f      	adds	r7, #15
9000b450:	f50d 7e86 	add.w	lr, sp, #268	; 0x10c
9000b454:	a902      	add	r1, sp, #8
9000b456:	f104 0c0f 	add.w	ip, r4, #15
9000b45a:	4427      	add	r7, r4
9000b45c:	e009      	b.n	9000b472 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x3e>
      return HAL_ERROR; /* Huffman Table overflow error*/
    }
    else
    {
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
      DC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
9000b45e:	f811 2b01 	ldrb.w	r2, [r1], #1
  while (k < lastK)
9000b462:	45bc      	cmp	ip, r7
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
9000b464:	f85e 6b04 	ldr.w	r6, [lr], #4
      DC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
9000b468:	f102 32ff 	add.w	r2, r2, #4294967295
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
9000b46c:	60e6      	str	r6, [r4, #12]
      DC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
9000b46e:	54ea      	strb	r2, [r5, r3]
  while (k < lastK)
9000b470:	d006      	beq.n	9000b480 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4c>
    l = DC_BitsValsTable->HuffVal[k];
9000b472:	f81c 3f01 	ldrb.w	r3, [ip, #1]!
    if (l >= JPEG_DC_HUFF_TABLE_SIZE)
9000b476:	2b0b      	cmp	r3, #11
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
9000b478:	eb05 0483 	add.w	r4, r5, r3, lsl #2
    if (l >= JPEG_DC_HUFF_TABLE_SIZE)
9000b47c:	d9ef      	bls.n	9000b45e <JPEG_DCHuff_BitsVals_To_SizeCodes+0x2a>
      return HAL_ERROR; /* Huffman Table overflow error*/
9000b47e:	2001      	movs	r0, #1
    }
  }

  /* Return function status */
  return HAL_OK;
}
9000b480:	f20d 5d14 	addw	sp, sp, #1300	; 0x514
9000b484:	bdf0      	pop	{r4, r5, r6, r7, pc}
9000b486:	bf00      	nop

9000b488 <JPEG_Set_HuffDC_Mem>:
  * @param  DCTableAddress Encoder DC huffman table address it could be HUFFENC_DC0 or HUFFENC_DC1.
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Set_HuffDC_Mem(JPEG_HandleTypeDef *hjpeg, JPEG_DCHuffTableTypeDef *HuffTableDC,
                                             const __IO uint32_t *DCTableAddress)
{
9000b488:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  uint32_t i;
  uint32_t lsb;
  uint32_t msb;
  __IO uint32_t *address, *addressDef;

  if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC0))
9000b48c:	6804      	ldr	r4, [r0, #0]
{
9000b48e:	b093      	sub	sp, #76	; 0x4c
9000b490:	4608      	mov	r0, r1
  if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC0))
9000b492:	f504 63f8 	add.w	r3, r4, #1984	; 0x7c0
9000b496:	429a      	cmp	r2, r3
9000b498:	f000 809d 	beq.w	9000b5d6 <JPEG_Set_HuffDC_Mem+0x14e>
  {
    address = (hjpeg->Instance->HUFFENC_DC0 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
  }
  else if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC1))
9000b49c:	f504 63fc 	add.w	r3, r4, #2016	; 0x7e0
9000b4a0:	429a      	cmp	r2, r3
9000b4a2:	d003      	beq.n	9000b4ac <JPEG_Set_HuffDC_Mem+0x24>
  {
    address = (hjpeg->Instance->HUFFENC_DC1 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
  }
  else
  {
    return HAL_ERROR;
9000b4a4:	2001      	movs	r0, #1
    }
  }

  /* Return function status */
  return HAL_OK;
}
9000b4a6:	b013      	add	sp, #76	; 0x4c
9000b4a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    address = (hjpeg->Instance->HUFFENC_DC1 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
9000b4ac:	f504 64ff 	add.w	r4, r4, #2040	; 0x7f8
    error = JPEG_DCHuff_BitsVals_To_SizeCodes(HuffTableDC, &dcSizeCodesTable);
9000b4b0:	a903      	add	r1, sp, #12
9000b4b2:	f7ff ffbf 	bl	9000b434 <JPEG_DCHuff_BitsVals_To_SizeCodes>
    if (error != HAL_OK)
9000b4b6:	2800      	cmp	r0, #0
9000b4b8:	d1f5      	bne.n	9000b4a6 <JPEG_Set_HuffDC_Mem+0x1e>
    *addressDef = 0x0FFF0FFF;
9000b4ba:	f06f 23f0 	mvn.w	r3, #4026593280	; 0xf000f000
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000b4be:	f89d a017 	ldrb.w	sl, [sp, #23]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000b4c2:	f89d e016 	ldrb.w	lr, [sp, #22]
    *addressDef = 0x0FFF0FFF;
9000b4c6:	6023      	str	r3, [r4, #0]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000b4c8:	ea4f 2a0a 	mov.w	sl, sl, lsl #8
    *addressDef = 0x0FFF0FFF;
9000b4cc:	6063      	str	r3, [r4, #4]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000b4ce:	ea4f 2e0e 	mov.w	lr, lr, lsl #8
9000b4d2:	f89d 300e 	ldrb.w	r3, [sp, #14]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000b4d6:	f40a 6a70 	and.w	sl, sl, #3840	; 0xf00
9000b4da:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000b4de:	f40e 6e70 	and.w	lr, lr, #3840	; 0xf00
9000b4e2:	021b      	lsls	r3, r3, #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000b4e4:	f89d 9015 	ldrb.w	r9, [sp, #21]
9000b4e8:	ea4a 0a02 	orr.w	sl, sl, r2
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000b4ec:	f89d c014 	ldrb.w	ip, [sp, #20]
9000b4f0:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000b4f4:	ea4f 2909 	mov.w	r9, r9, lsl #8
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000b4f8:	ea4f 2c0c 	mov.w	ip, ip, lsl #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000b4fc:	f89d 8013 	ldrb.w	r8, [sp, #19]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000b500:	9301      	str	r3, [sp, #4]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000b502:	f409 6970 	and.w	r9, r9, #3840	; 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000b506:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
9000b50a:	f40c 6c70 	and.w	ip, ip, #3840	; 0xf00
9000b50e:	f89d 1012 	ldrb.w	r1, [sp, #18]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000b512:	ea4f 2808 	mov.w	r8, r8, lsl #8
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000b516:	ea4e 0e03 	orr.w	lr, lr, r3
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000b51a:	f89d 7011 	ldrb.w	r7, [sp, #17]
9000b51e:	f408 6870 	and.w	r8, r8, #3840	; 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000b522:	0209      	lsls	r1, r1, #8
      *address = lsb | (msb << 16);
9000b524:	ea4e 4e0a 	orr.w	lr, lr, sl, lsl #16
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000b528:	f89d 2010 	ldrb.w	r2, [sp, #16]
9000b52c:	f401 6170 	and.w	r1, r1, #3840	; 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000b530:	023f      	lsls	r7, r7, #8
      *address = lsb | (msb << 16);
9000b532:	f844 ec04 	str.w	lr, [r4, #-4]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000b536:	0212      	lsls	r2, r2, #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000b538:	f89d e03c 	ldrb.w	lr, [sp, #60]	; 0x3c
9000b53c:	f407 6770 	and.w	r7, r7, #3840	; 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000b540:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000b544:	f89d 600f 	ldrb.w	r6, [sp, #15]
9000b548:	ea49 090e 	orr.w	r9, r9, lr
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000b54c:	f89d e038 	ldrb.w	lr, [sp, #56]	; 0x38
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000b550:	0236      	lsls	r6, r6, #8
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000b552:	9b01      	ldr	r3, [sp, #4]
9000b554:	ea4c 0c0e 	orr.w	ip, ip, lr
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000b558:	f89d 500d 	ldrb.w	r5, [sp, #13]
9000b55c:	f406 6670 	and.w	r6, r6, #3840	; 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000b560:	f89d b00c 	ldrb.w	fp, [sp, #12]
      *address = lsb | (msb << 16);
9000b564:	ea4c 4c09 	orr.w	ip, ip, r9, lsl #16
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000b568:	022d      	lsls	r5, r5, #8
      *address = lsb | (msb << 16);
9000b56a:	f844 cc08 	str.w	ip, [r4, #-8]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000b56e:	ea4f 2b0b 	mov.w	fp, fp, lsl #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000b572:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
9000b576:	f405 6570 	and.w	r5, r5, #3840	; 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000b57a:	f40b 6b70 	and.w	fp, fp, #3840	; 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000b57e:	ea48 080c 	orr.w	r8, r8, ip
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000b582:	f89d c030 	ldrb.w	ip, [sp, #48]	; 0x30
9000b586:	ea41 010c 	orr.w	r1, r1, ip
      *address = lsb | (msb << 16);
9000b58a:	ea41 4108 	orr.w	r1, r1, r8, lsl #16
9000b58e:	f844 1c0c 	str.w	r1, [r4, #-12]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000b592:	f89d 102c 	ldrb.w	r1, [sp, #44]	; 0x2c
9000b596:	430f      	orrs	r7, r1
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000b598:	f89d 1028 	ldrb.w	r1, [sp, #40]	; 0x28
9000b59c:	430a      	orrs	r2, r1
      *address = lsb | (msb << 16);
9000b59e:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
9000b5a2:	f844 2c10 	str.w	r2, [r4, #-16]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000b5a6:	f89d 2024 	ldrb.w	r2, [sp, #36]	; 0x24
9000b5aa:	4316      	orrs	r6, r2
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000b5ac:	f89d 2020 	ldrb.w	r2, [sp, #32]
9000b5b0:	4313      	orrs	r3, r2
      *address = lsb | (msb << 16);
9000b5b2:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
9000b5b6:	f844 3c14 	str.w	r3, [r4, #-20]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000b5ba:	f89d 301c 	ldrb.w	r3, [sp, #28]
9000b5be:	431d      	orrs	r5, r3
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000b5c0:	f89d 3018 	ldrb.w	r3, [sp, #24]
9000b5c4:	ea4b 0303 	orr.w	r3, fp, r3
      *address = lsb | (msb << 16);
9000b5c8:	ea43 4305 	orr.w	r3, r3, r5, lsl #16
9000b5cc:	f844 3c18 	str.w	r3, [r4, #-24]
}
9000b5d0:	b013      	add	sp, #76	; 0x4c
9000b5d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    address = (hjpeg->Instance->HUFFENC_DC0 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
9000b5d6:	f504 64fb 	add.w	r4, r4, #2008	; 0x7d8
9000b5da:	e769      	b.n	9000b4b0 <JPEG_Set_HuffDC_Mem+0x28>

9000b5dc <JPEG_Set_HuffAC_Mem>:
  * @param  ACTableAddress Encoder AC huffman table address it could be HUFFENC_AC0 or HUFFENC_AC1.
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Set_HuffAC_Mem(JPEG_HandleTypeDef *hjpeg, JPEG_ACHuffTableTypeDef *HuffTableAC,
                                             const __IO uint32_t *ACTableAddress)
{
9000b5dc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_StatusTypeDef error;
  JPEG_AC_HuffCodeTableTypeDef acSizeCodesTable;
  uint32_t i, lsb, msb;
  __IO uint32_t *address, *addressDef;

  if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC0))
9000b5e0:	6804      	ldr	r4, [r0, #0]
{
9000b5e2:	f6ad 0d3c 	subw	sp, sp, #2108	; 0x83c
9000b5e6:	460d      	mov	r5, r1
  if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC0))
9000b5e8:	f504 63a0 	add.w	r3, r4, #1280	; 0x500
9000b5ec:	429a      	cmp	r2, r3
9000b5ee:	d042      	beq.n	9000b676 <JPEG_Set_HuffAC_Mem+0x9a>
  {
    address = (hjpeg->Instance->HUFFENC_AC0 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
  }
  else if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC1))
9000b5f0:	f504 63cc 	add.w	r3, r4, #1632	; 0x660
9000b5f4:	429a      	cmp	r2, r3
9000b5f6:	d004      	beq.n	9000b602 <JPEG_Set_HuffAC_Mem+0x26>
      return HAL_ERROR; /* Huffman Table overflow error*/
9000b5f8:	2001      	movs	r0, #1
    }
  }

  /* Return function status */
  return HAL_OK;
}
9000b5fa:	f60d 0d3c 	addw	sp, sp, #2108	; 0x83c
9000b5fe:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    address = (hjpeg->Instance->HUFFENC_AC1 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
9000b602:	f204 74a4 	addw	r4, r4, #1956	; 0x7a4
  error = JPEG_Bits_To_SizeCodes(AC_BitsValsTable->Bits, huffsize, huffcode, &lastK);
9000b606:	4628      	mov	r0, r5
9000b608:	466b      	mov	r3, sp
9000b60a:	f20d 4234 	addw	r2, sp, #1076	; 0x434
9000b60e:	a901      	add	r1, sp, #4
9000b610:	f7ff fec2 	bl	9000b398 <JPEG_Bits_To_SizeCodes>
  if (error != HAL_OK)
9000b614:	2800      	cmp	r0, #0
9000b616:	d1f0      	bne.n	9000b5fa <JPEG_Set_HuffAC_Mem+0x1e>
  while (k < lastK)
9000b618:	9b00      	ldr	r3, [sp, #0]
9000b61a:	b37b      	cbz	r3, 9000b67c <JPEG_Set_HuffAC_Mem+0xa0>
9000b61c:	330f      	adds	r3, #15
9000b61e:	f20d 4734 	addw	r7, sp, #1076	; 0x434
9000b622:	f10d 0c04 	add.w	ip, sp, #4
9000b626:	f105 020f 	add.w	r2, r5, #15
9000b62a:	eb05 0e03 	add.w	lr, r5, r3
      AC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
9000b62e:	ae42      	add	r6, sp, #264	; 0x108
9000b630:	e011      	b.n	9000b656 <JPEG_Set_HuffAC_Mem+0x7a>
      l = (msb * 10UL) + lsb - 1UL;
9000b632:	eb03 0345 	add.w	r3, r3, r5, lsl #1
    if (l >= JPEG_AC_HUFF_TABLE_SIZE)
9000b636:	2ba1      	cmp	r3, #161	; 0xa1
9000b638:	d8de      	bhi.n	9000b5f8 <JPEG_Set_HuffAC_Mem+0x1c>
      AC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
9000b63a:	f81c 5b01 	ldrb.w	r5, [ip], #1
      AC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
9000b63e:	eb06 0883 	add.w	r8, r6, r3, lsl #2
9000b642:	f857 9b04 	ldr.w	r9, [r7], #4
  while (k < lastK)
9000b646:	4596      	cmp	lr, r2
      AC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
9000b648:	f105 35ff 	add.w	r5, r5, #4294967295
      AC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
9000b64c:	4631      	mov	r1, r6
9000b64e:	f8c8 90a4 	str.w	r9, [r8, #164]	; 0xa4
      AC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
9000b652:	54f5      	strb	r5, [r6, r3]
  while (k < lastK)
9000b654:	d013      	beq.n	9000b67e <JPEG_Set_HuffAC_Mem+0xa2>
    l = AC_BitsValsTable->HuffVal[k];
9000b656:	f812 1f01 	ldrb.w	r1, [r2, #1]!
      l = 160; /*l = 0x00 EOB code*/
9000b65a:	23a0      	movs	r3, #160	; 0xa0
    if (l == 0UL)
9000b65c:	2900      	cmp	r1, #0
9000b65e:	d0ec      	beq.n	9000b63a <JPEG_Set_HuffAC_Mem+0x5e>
      msb = (l & 0xF0UL) >> 4;
9000b660:	090d      	lsrs	r5, r1, #4
      lsb = (l & 0x0FUL);
9000b662:	f001 030f 	and.w	r3, r1, #15
    else if (l == 0xF0UL) /* l = 0xF0 ZRL code*/
9000b666:	29f0      	cmp	r1, #240	; 0xf0
      l = (msb * 10UL) + lsb - 1UL;
9000b668:	eb05 0585 	add.w	r5, r5, r5, lsl #2
9000b66c:	f103 33ff 	add.w	r3, r3, #4294967295
    else if (l == 0xF0UL) /* l = 0xF0 ZRL code*/
9000b670:	d1df      	bne.n	9000b632 <JPEG_Set_HuffAC_Mem+0x56>
      l = 161;
9000b672:	23a1      	movs	r3, #161	; 0xa1
9000b674:	e7e1      	b.n	9000b63a <JPEG_Set_HuffAC_Mem+0x5e>
    address = (hjpeg->Instance->HUFFENC_AC0 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
9000b676:	f204 6444 	addw	r4, r4, #1604	; 0x644
9000b67a:	e7c4      	b.n	9000b606 <JPEG_Set_HuffAC_Mem+0x2a>
9000b67c:	a942      	add	r1, sp, #264	; 0x108
      *addressDef = 0x0FFF0FFF;
9000b67e:	f06f 23f0 	mvn.w	r3, #4026593280	; 0xf000f000
    *addressDef = 0x0FD10FD0;
9000b682:	4a1a      	ldr	r2, [pc, #104]	; (9000b6ec <JPEG_Set_HuffAC_Mem+0x110>)
9000b684:	eba1 0c81 	sub.w	ip, r1, r1, lsl #2
9000b688:	f10d 0566 	add.w	r5, sp, #102	; 0x66
      *addressDef = 0x0FFF0FFF;
9000b68c:	6023      	str	r3, [r4, #0]
9000b68e:	6063      	str	r3, [r4, #4]
9000b690:	f50c 7e4a 	add.w	lr, ip, #808	; 0x328
9000b694:	60a3      	str	r3, [r4, #8]
    *addressDef = 0x0FD30FD2;
9000b696:	f103 33d3 	add.w	r3, r3, #3553874899	; 0xd3d3d3d3
    *addressDef = 0x0FD10FD0;
9000b69a:	60e2      	str	r2, [r4, #12]
    *addressDef = 0x0FD30FD2;
9000b69c:	f50c 7c49 	add.w	ip, ip, #804	; 0x324
9000b6a0:	f103 232c 	add.w	r3, r3, #738208768	; 0x2c002c00
9000b6a4:	6123      	str	r3, [r4, #16]
    *addressDef = 0x0FD50FD4;
9000b6a6:	f103 1302 	add.w	r3, r3, #131074	; 0x20002
9000b6aa:	6163      	str	r3, [r4, #20]
    *addressDef = 0x0FD70FD6;
9000b6ac:	f103 1302 	add.w	r3, r3, #131074	; 0x20002
9000b6b0:	61a3      	str	r3, [r4, #24]
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000b6b2:	f891 20a1 	ldrb.w	r2, [r1, #161]	; 0xa1
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000b6b6:	f891 30a0 	ldrb.w	r3, [r1, #160]	; 0xa0
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000b6ba:	0212      	lsls	r2, r2, #8
9000b6bc:	f81e 7021 	ldrb.w	r7, [lr, r1, lsl #2]
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000b6c0:	021b      	lsls	r3, r3, #8
9000b6c2:	f81c 6021 	ldrb.w	r6, [ip, r1, lsl #2]
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000b6c6:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
    while (i > 1UL)
9000b6ca:	3902      	subs	r1, #2
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000b6cc:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000b6d0:	433a      	orrs	r2, r7
    while (i > 1UL)
9000b6d2:	428d      	cmp	r5, r1
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000b6d4:	ea43 0306 	orr.w	r3, r3, r6
      *address = lsb | (msb << 16);
9000b6d8:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9000b6dc:	f844 3d04 	str.w	r3, [r4, #-4]!
    while (i > 1UL)
9000b6e0:	d1e7      	bne.n	9000b6b2 <JPEG_Set_HuffAC_Mem+0xd6>
}
9000b6e2:	f60d 0d3c 	addw	sp, sp, #2108	; 0x83c
9000b6e6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9000b6ea:	bf00      	nop
9000b6ec:	0fd10fd0 	.word	0x0fd10fd0

9000b6f0 <JPEG_Init_Process>:
  * @retval None
  */
static void JPEG_Init_Process(JPEG_HandleTypeDef *hjpeg)
{
  /*Reset pause*/
  hjpeg->Context &= (~(JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT));
9000b6f0:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000b6f2:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
9000b6f6:	6543      	str	r3, [r0, #84]	; 0x54

  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000b6f8:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000b6fa:	f003 0303 	and.w	r3, r3, #3
9000b6fe:	2b02      	cmp	r3, #2
  {
    /*Set JPEG Codec to Decoding mode */
    hjpeg->Instance->CONFR1 |= JPEG_CONFR1_DE;
9000b700:	6803      	ldr	r3, [r0, #0]
9000b702:	685a      	ldr	r2, [r3, #4]
9000b704:	bf0c      	ite	eq
9000b706:	f042 0208 	orreq.w	r2, r2, #8
  }
  else /* JPEG_CONTEXT_ENCODE */
  {
    /*Set JPEG Codec to Encoding mode */
    hjpeg->Instance->CONFR1 &= ~JPEG_CONFR1_DE;
9000b70a:	f022 0208 	bicne.w	r2, r2, #8
9000b70e:	605a      	str	r2, [r3, #4]
  }

  /*Stop JPEG processing */
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000b710:	681a      	ldr	r2, [r3, #0]
9000b712:	f022 0201 	bic.w	r2, r2, #1
9000b716:	601a      	str	r2, [r3, #0]

  /* Disable All Interrupts */
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000b718:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000b71a:	f022 027e 	bic.w	r2, r2, #126	; 0x7e
9000b71e:	631a      	str	r2, [r3, #48]	; 0x30

  /* Flush input and output FIFOs*/
  hjpeg->Instance->CR |= JPEG_CR_IFF;
9000b720:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000b722:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
9000b726:	631a      	str	r2, [r3, #48]	; 0x30
  hjpeg->Instance->CR |= JPEG_CR_OFF;
9000b728:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000b72a:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
9000b72e:	631a      	str	r2, [r3, #48]	; 0x30

  /* Clear all flags */
  __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
9000b730:	6b9a      	ldr	r2, [r3, #56]	; 0x38
9000b732:	f042 0260 	orr.w	r2, r2, #96	; 0x60
9000b736:	639a      	str	r2, [r3, #56]	; 0x38

  /*Start Encoding/Decoding*/
  hjpeg->Instance->CONFR0 |=  JPEG_CONFR0_START;
9000b738:	681a      	ldr	r2, [r3, #0]
9000b73a:	f042 0201 	orr.w	r2, r2, #1
9000b73e:	601a      	str	r2, [r3, #0]

  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000b740:	6d42      	ldr	r2, [r0, #84]	; 0x54
9000b742:	f002 020c 	and.w	r2, r2, #12
9000b746:	2a08      	cmp	r2, #8
9000b748:	d00a      	beq.n	9000b760 <JPEG_Init_Process+0x70>
  {
    /*Enable IN/OUT, end of Conversation, and end of header parsing interruptions*/
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_IFT | JPEG_IT_IFNF | JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC | JPEG_IT_HPD);
  }
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000b74a:	6d42      	ldr	r2, [r0, #84]	; 0x54
9000b74c:	f002 020c 	and.w	r2, r2, #12
9000b750:	2a0c      	cmp	r2, #12
9000b752:	d000      	beq.n	9000b756 <JPEG_Init_Process+0x66>
  }
  else
  {
    /* Nothing to do */
  }
}
9000b754:	4770      	bx	lr
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
9000b756:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000b758:	f042 0260 	orr.w	r2, r2, #96	; 0x60
9000b75c:	631a      	str	r2, [r3, #48]	; 0x30
}
9000b75e:	4770      	bx	lr
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_IFT | JPEG_IT_IFNF | JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC | JPEG_IT_HPD);
9000b760:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000b762:	f042 026e 	orr.w	r2, r2, #110	; 0x6e
9000b766:	631a      	str	r2, [r3, #48]	; 0x30
9000b768:	4770      	bx	lr
9000b76a:	bf00      	nop

9000b76c <JPEG_DMA_StartProcess>:
  /*if the MDMA In is triggred with JPEG In FIFO Threshold flag
      then MDMA In buffer size is 32 bytes
    else (MDMA In is triggred with JPEG In FIFO not full flag)
      then MDMA In buffer size is 4 bytes
    */
  inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000b76c:	6b01      	ldr	r1, [r0, #48]	; 0x30
    else (MDMA Out is triggred with JPEG Out FIFO not empty flag)
      then MDMA buffer size is 4 bytes
    */
  outXfrSize = hjpeg->hdmaout->Init.BufferTransferLength;

  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
9000b76e:	6a82      	ldr	r2, [r0, #40]	; 0x28
{
9000b770:	b5f0      	push	{r4, r5, r6, r7, lr}
  inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000b772:	6a8d      	ldr	r5, [r1, #40]	; 0x28
{
9000b774:	b083      	sub	sp, #12
  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
9000b776:	42aa      	cmp	r2, r5
9000b778:	d32d      	bcc.n	9000b7d6 <JPEG_DMA_StartProcess+0x6a>
9000b77a:	4604      	mov	r4, r0
  outXfrSize = hjpeg->hdmaout->Init.BufferTransferLength;
9000b77c:	6b40      	ldr	r0, [r0, #52]	; 0x34
  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
9000b77e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
  outXfrSize = hjpeg->hdmaout->Init.BufferTransferLength;
9000b780:	6a86      	ldr	r6, [r0, #40]	; 0x28
  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
9000b782:	42b3      	cmp	r3, r6
9000b784:	d327      	bcc.n	9000b7d6 <JPEG_DMA_StartProcess+0x6a>
    return HAL_ERROR;
  }
  /* Set the JPEG MDMA In transfer complete callback */
  hjpeg->hdmain->XferCpltCallback = JPEG_MDMAInCpltCallback;
  /* Set the MDMA In error callback */
  hjpeg->hdmain->XferErrorCallback = JPEG_MDMAErrorCallback;
9000b786:	4f1b      	ldr	r7, [pc, #108]	; (9000b7f4 <JPEG_DMA_StartProcess+0x88>)
  hjpeg->hdmain->XferCpltCallback = JPEG_MDMAInCpltCallback;
9000b788:	f8df c074 	ldr.w	ip, [pc, #116]	; 9000b800 <JPEG_DMA_StartProcess+0x94>
  hjpeg->hdmain->XferErrorCallback = JPEG_MDMAErrorCallback;
9000b78c:	654f      	str	r7, [r1, #84]	; 0x54
  hjpeg->hdmain->XferCpltCallback = JPEG_MDMAInCpltCallback;
9000b78e:	f8c1 c044 	str.w	ip, [r1, #68]	; 0x44

  /* Set the JPEG MDMA Out transfer complete callback */
  hjpeg->hdmaout->XferCpltCallback = JPEG_MDMAOutCpltCallback;
9000b792:	4919      	ldr	r1, [pc, #100]	; (9000b7f8 <JPEG_DMA_StartProcess+0x8c>)
  /* Set the MDMA In error callback */
  hjpeg->hdmaout->XferErrorCallback = JPEG_MDMAErrorCallback;
9000b794:	6547      	str	r7, [r0, #84]	; 0x54
  hjpeg->hdmaout->XferCpltCallback = JPEG_MDMAOutCpltCallback;
9000b796:	6441      	str	r1, [r0, #68]	; 0x44
  /* Set the MDMA Out Abort callback */
  hjpeg->hdmaout->XferAbortCallback = JPEG_MDMAOutAbortCallback;
9000b798:	4918      	ldr	r1, [pc, #96]	; (9000b7fc <JPEG_DMA_StartProcess+0x90>)
9000b79a:	6581      	str	r1, [r0, #88]	; 0x58

  if ((inXfrSize == 0UL) || (outXfrSize == 0UL))
9000b79c:	b1a5      	cbz	r5, 9000b7c8 <JPEG_DMA_StartProcess+0x5c>
9000b79e:	b19e      	cbz	r6, 9000b7c8 <JPEG_DMA_StartProcess+0x5c>
  {
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
    return HAL_ERROR;
  }
  /*MDMA transfer size (BNDTR) must be a multiple of MDMA buffer size (TLEN)*/
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
9000b7a0:	fbb2 f1f5 	udiv	r1, r2, r5
9000b7a4:	fb05 2111 	mls	r1, r5, r1, r2
  /*MDMA transfer size (BNDTR) must be a multiple of MDMA buffer size (TLEN)*/
  hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % outXfrSize);


  /* Start MDMA FIFO Out transfer */
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000b7a8:	2501      	movs	r5, #1
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
9000b7aa:	1a52      	subs	r2, r2, r1
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000b7ac:	6821      	ldr	r1, [r4, #0]
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
9000b7ae:	62a2      	str	r2, [r4, #40]	; 0x28
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000b7b0:	3144      	adds	r1, #68	; 0x44
  hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % outXfrSize);
9000b7b2:	fbb3 f2f6 	udiv	r2, r3, r6
9000b7b6:	fb06 3212 	mls	r2, r6, r2, r3
9000b7ba:	1a9b      	subs	r3, r3, r2
9000b7bc:	62e3      	str	r3, [r4, #44]	; 0x2c
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000b7be:	9500      	str	r5, [sp, #0]
9000b7c0:	69e2      	ldr	r2, [r4, #28]
9000b7c2:	f001 fbb5 	bl	9000cf30 <HAL_MDMA_Start_IT>
9000b7c6:	b148      	cbz	r0, 9000b7dc <JPEG_DMA_StartProcess+0x70>
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000b7c8:	6d23      	ldr	r3, [r4, #80]	; 0x50
    return HAL_ERROR;
9000b7ca:	2001      	movs	r0, #1
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000b7cc:	f043 0304 	orr.w	r3, r3, #4
9000b7d0:	6523      	str	r3, [r4, #80]	; 0x50
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
    return HAL_ERROR;
  }

  return HAL_OK;
}
9000b7d2:	b003      	add	sp, #12
9000b7d4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    return HAL_ERROR;
9000b7d6:	2001      	movs	r0, #1
}
9000b7d8:	b003      	add	sp, #12
9000b7da:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (HAL_MDMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
9000b7dc:	6822      	ldr	r2, [r4, #0]
9000b7de:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000b7e0:	69a1      	ldr	r1, [r4, #24]
9000b7e2:	3240      	adds	r2, #64	; 0x40
9000b7e4:	9500      	str	r5, [sp, #0]
9000b7e6:	6b20      	ldr	r0, [r4, #48]	; 0x30
9000b7e8:	f001 fba2 	bl	9000cf30 <HAL_MDMA_Start_IT>
9000b7ec:	2800      	cmp	r0, #0
9000b7ee:	d0f3      	beq.n	9000b7d8 <JPEG_DMA_StartProcess+0x6c>
9000b7f0:	e7ea      	b.n	9000b7c8 <JPEG_DMA_StartProcess+0x5c>
9000b7f2:	bf00      	nop
9000b7f4:	9000bd25 	.word	0x9000bd25
9000b7f8:	9000bf9d 	.word	0x9000bf9d
9000b7fc:	9000c01d 	.word	0x9000c01d
9000b800:	9000bd51 	.word	0x9000bd51

9000b804 <HAL_JPEG_GetInfo.part.0>:
  if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF_1)
9000b804:	6803      	ldr	r3, [r0, #0]
9000b806:	685a      	ldr	r2, [r3, #4]
9000b808:	f002 0203 	and.w	r2, r2, #3
9000b80c:	2a02      	cmp	r2, #2
HAL_StatusTypeDef HAL_JPEG_GetInfo(JPEG_HandleTypeDef *hjpeg, JPEG_ConfTypeDef *pInfo)
9000b80e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9000b812:	4689      	mov	r9, r1
  if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF_1)
9000b814:	f000 8094 	beq.w	9000b940 <HAL_JPEG_GetInfo.part.0+0x13c>
  else if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == 0UL)
9000b818:	685c      	ldr	r4, [r3, #4]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
9000b81a:	685a      	ldr	r2, [r3, #4]
  else if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == 0UL)
9000b81c:	f014 0403 	ands.w	r4, r4, #3
9000b820:	d172      	bne.n	9000b908 <HAL_JPEG_GetInfo.part.0+0x104>
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
9000b822:	0c12      	lsrs	r2, r2, #16
    pInfo->ColorSpace = JPEG_YCBCR_COLORSPACE;
9000b824:	600c      	str	r4, [r1, #0]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
9000b826:	608a      	str	r2, [r1, #8]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
9000b828:	68da      	ldr	r2, [r3, #12]
9000b82a:	0c12      	lsrs	r2, r2, #16
9000b82c:	60ca      	str	r2, [r1, #12]
  if ((pInfo->ColorSpace == JPEG_YCBCR_COLORSPACE) || (pInfo->ColorSpace == JPEG_CMYK_COLORSPACE))
9000b82e:	4a5f      	ldr	r2, [pc, #380]	; (9000b9ac <HAL_JPEG_GetInfo.part.0+0x1a8>)
  */
static uint32_t JPEG_GetQuality(JPEG_HandleTypeDef *hjpeg)
{
  uint32_t quality = 0;
  uint32_t quantRow, quantVal, scale, i, j;
  __IO uint32_t *tableAddress = hjpeg->Instance->QMEM0;
9000b830:	f103 0c50 	add.w	ip, r3, #80	; 0x50
      pInfo->ChromaSubsampling = JPEG_422_SUBSAMPLING; /*16x8 block*/
9000b834:	f8c9 4004 	str.w	r4, [r9, #4]
  uint32_t quality = 0;
9000b838:	2600      	movs	r6, #0
9000b83a:	f102 0540 	add.w	r5, r2, #64	; 0x40
        quality += 100UL;
      }
      else
      {
        /* Note that the quantization coefficients must be specified in the table in zigzag order */
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
9000b83e:	f04f 0e64 	mov.w	lr, #100	; 0x64
        {
          quality += (200UL - scale) / 2UL;
        }
        else
        {
          quality += 5000UL / scale;
9000b842:	f241 3488 	movw	r4, #5000	; 0x1388
9000b846:	e033      	b.n	9000b8b0 <HAL_JPEG_GetInfo.part.0+0xac>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
9000b848:	f892 8001 	ldrb.w	r8, [r2, #1]
9000b84c:	fb0e f707 	mul.w	r7, lr, r7
9000b850:	6bc1      	ldr	r1, [r0, #60]	; 0x3c
9000b852:	f811 8008 	ldrb.w	r8, [r1, r8]
9000b856:	fbb7 f7f8 	udiv	r7, r7, r8
        if (scale <= 100UL)
9000b85a:	2f64      	cmp	r7, #100	; 0x64
9000b85c:	d961      	bls.n	9000b922 <HAL_JPEG_GetInfo.part.0+0x11e>
          quality += 5000UL / scale;
9000b85e:	fbb4 f7f7 	udiv	r7, r4, r7
9000b862:	443e      	add	r6, r7
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
9000b864:	f3c3 4707 	ubfx	r7, r3, #16, #8
      if (quantVal == 1UL)
9000b868:	2f01      	cmp	r7, #1
9000b86a:	d03d      	beq.n	9000b8e8 <HAL_JPEG_GetInfo.part.0+0xe4>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
9000b86c:	f892 8002 	ldrb.w	r8, [r2, #2]
9000b870:	fb0e f707 	mul.w	r7, lr, r7
9000b874:	6bc1      	ldr	r1, [r0, #60]	; 0x3c
9000b876:	f811 8008 	ldrb.w	r8, [r1, r8]
9000b87a:	fbb7 f7f8 	udiv	r7, r7, r8
        if (scale <= 100UL)
9000b87e:	2f64      	cmp	r7, #100	; 0x64
9000b880:	d94a      	bls.n	9000b918 <HAL_JPEG_GetInfo.part.0+0x114>
          quality += 5000UL / scale;
9000b882:	fbb4 f7f7 	udiv	r7, r4, r7
9000b886:	443e      	add	r6, r7
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
9000b888:	0e1b      	lsrs	r3, r3, #24
      if (quantVal == 1UL)
9000b88a:	2b01      	cmp	r3, #1
9000b88c:	d030      	beq.n	9000b8f0 <HAL_JPEG_GetInfo.part.0+0xec>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
9000b88e:	78d7      	ldrb	r7, [r2, #3]
9000b890:	fb0e f303 	mul.w	r3, lr, r3
9000b894:	6bc1      	ldr	r1, [r0, #60]	; 0x3c
9000b896:	5dcf      	ldrb	r7, [r1, r7]
9000b898:	fbb3 f3f7 	udiv	r3, r3, r7
        if (scale <= 100UL)
9000b89c:	2b64      	cmp	r3, #100	; 0x64
9000b89e:	d94a      	bls.n	9000b936 <HAL_JPEG_GetInfo.part.0+0x132>
          quality += 5000UL / scale;
9000b8a0:	fbb4 f3f3 	udiv	r3, r4, r3
9000b8a4:	441e      	add	r6, r3
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
9000b8a6:	3204      	adds	r2, #4
        }
      }
    }

    i += 4UL;
    tableAddress ++;
9000b8a8:	f10c 0c04 	add.w	ip, ip, #4
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
9000b8ac:	4295      	cmp	r5, r2
9000b8ae:	d025      	beq.n	9000b8fc <HAL_JPEG_GetInfo.part.0+0xf8>
    quantRow = *tableAddress;
9000b8b0:	f8dc 3000 	ldr.w	r3, [ip]
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
9000b8b4:	b2df      	uxtb	r7, r3
      if (quantVal == 1UL)
9000b8b6:	2f01      	cmp	r7, #1
9000b8b8:	d02c      	beq.n	9000b914 <HAL_JPEG_GetInfo.part.0+0x110>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
9000b8ba:	f892 8000 	ldrb.w	r8, [r2]
9000b8be:	fb0e f707 	mul.w	r7, lr, r7
9000b8c2:	6bc1      	ldr	r1, [r0, #60]	; 0x3c
9000b8c4:	f811 8008 	ldrb.w	r8, [r1, r8]
9000b8c8:	fbb7 f7f8 	udiv	r7, r7, r8
        if (scale <= 100UL)
9000b8cc:	2f64      	cmp	r7, #100	; 0x64
9000b8ce:	d92d      	bls.n	9000b92c <HAL_JPEG_GetInfo.part.0+0x128>
          quality += 5000UL / scale;
9000b8d0:	fbb4 f7f7 	udiv	r7, r4, r7
9000b8d4:	443e      	add	r6, r7
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
9000b8d6:	f3c3 2707 	ubfx	r7, r3, #8, #8
      if (quantVal == 1UL)
9000b8da:	2f01      	cmp	r7, #1
9000b8dc:	d1b4      	bne.n	9000b848 <HAL_JPEG_GetInfo.part.0+0x44>
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
9000b8de:	f3c3 4707 	ubfx	r7, r3, #16, #8
        quality += 100UL;
9000b8e2:	3664      	adds	r6, #100	; 0x64
      if (quantVal == 1UL)
9000b8e4:	2f01      	cmp	r7, #1
9000b8e6:	d1c1      	bne.n	9000b86c <HAL_JPEG_GetInfo.part.0+0x68>
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
9000b8e8:	0e1b      	lsrs	r3, r3, #24
        quality += 100UL;
9000b8ea:	3664      	adds	r6, #100	; 0x64
      if (quantVal == 1UL)
9000b8ec:	2b01      	cmp	r3, #1
9000b8ee:	d1ce      	bne.n	9000b88e <HAL_JPEG_GetInfo.part.0+0x8a>
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
9000b8f0:	3204      	adds	r2, #4
        quality += 100UL;
9000b8f2:	3664      	adds	r6, #100	; 0x64
    tableAddress ++;
9000b8f4:	f10c 0c04 	add.w	ip, ip, #4
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
9000b8f8:	4295      	cmp	r5, r2
9000b8fa:	d1d9      	bne.n	9000b8b0 <HAL_JPEG_GetInfo.part.0+0xac>
  }

  return (quality / 64UL);
9000b8fc:	09b6      	lsrs	r6, r6, #6
  return HAL_OK;
9000b8fe:	2000      	movs	r0, #0
  pInfo->ImageQuality = JPEG_GetQuality(hjpeg);
9000b900:	f8c9 6010 	str.w	r6, [r9, #16]
}
9000b904:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  else if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF)
9000b908:	f002 0203 	and.w	r2, r2, #3
9000b90c:	2a03      	cmp	r2, #3
9000b90e:	d14a      	bne.n	9000b9a6 <HAL_JPEG_GetInfo.part.0+0x1a2>
9000b910:	2430      	movs	r4, #48	; 0x30
9000b912:	e016      	b.n	9000b942 <HAL_JPEG_GetInfo.part.0+0x13e>
        quality += 100UL;
9000b914:	3664      	adds	r6, #100	; 0x64
9000b916:	e7de      	b.n	9000b8d6 <HAL_JPEG_GetInfo.part.0+0xd2>
          quality += (200UL - scale) / 2UL;
9000b918:	f1c7 07c8 	rsb	r7, r7, #200	; 0xc8
9000b91c:	eb06 0657 	add.w	r6, r6, r7, lsr #1
9000b920:	e7b2      	b.n	9000b888 <HAL_JPEG_GetInfo.part.0+0x84>
9000b922:	f1c7 07c8 	rsb	r7, r7, #200	; 0xc8
9000b926:	eb06 0657 	add.w	r6, r6, r7, lsr #1
9000b92a:	e79b      	b.n	9000b864 <HAL_JPEG_GetInfo.part.0+0x60>
9000b92c:	f1c7 07c8 	rsb	r7, r7, #200	; 0xc8
9000b930:	eb06 0657 	add.w	r6, r6, r7, lsr #1
9000b934:	e7cf      	b.n	9000b8d6 <HAL_JPEG_GetInfo.part.0+0xd2>
9000b936:	f1c3 03c8 	rsb	r3, r3, #200	; 0xc8
9000b93a:	eb06 0653 	add.w	r6, r6, r3, lsr #1
9000b93e:	e7b2      	b.n	9000b8a6 <HAL_JPEG_GetInfo.part.0+0xa2>
9000b940:	2410      	movs	r4, #16
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
9000b942:	685a      	ldr	r2, [r3, #4]
    pInfo->ColorSpace = JPEG_YCBCR_COLORSPACE;
9000b944:	f8c9 4000 	str.w	r4, [r9]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
9000b948:	0c12      	lsrs	r2, r2, #16
9000b94a:	f8c9 2008 	str.w	r2, [r9, #8]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
9000b94e:	68da      	ldr	r2, [r3, #12]
    yblockNb  = (hjpeg->Instance->CONFR4 & JPEG_CONFR4_NB) >> 4;
9000b950:	691d      	ldr	r5, [r3, #16]
    cBblockNb = (hjpeg->Instance->CONFR5 & JPEG_CONFR5_NB) >> 4;
9000b952:	695f      	ldr	r7, [r3, #20]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
9000b954:	0c12      	lsrs	r2, r2, #16
    cRblockNb = (hjpeg->Instance->CONFR6 & JPEG_CONFR6_NB) >> 4;
9000b956:	699e      	ldr	r6, [r3, #24]
    if ((yblockNb == 1UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
9000b958:	f017 0ff0 	tst.w	r7, #240	; 0xf0
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
9000b95c:	f8c9 200c 	str.w	r2, [r9, #12]
    cRblockNb = (hjpeg->Instance->CONFR6 & JPEG_CONFR6_NB) >> 4;
9000b960:	ea4f 1616 	mov.w	r6, r6, lsr #4
    yblockNb  = (hjpeg->Instance->CONFR4 & JPEG_CONFR4_NB) >> 4;
9000b964:	ea4f 1215 	mov.w	r2, r5, lsr #4
9000b968:	f3c5 1503 	ubfx	r5, r5, #4, #4
    cBblockNb = (hjpeg->Instance->CONFR5 & JPEG_CONFR5_NB) >> 4;
9000b96c:	ea4f 1c17 	mov.w	ip, r7, lsr #4
    if ((yblockNb == 1UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
9000b970:	d108      	bne.n	9000b984 <HAL_JPEG_GetInfo.part.0+0x180>
9000b972:	2d01      	cmp	r5, #1
9000b974:	d106      	bne.n	9000b984 <HAL_JPEG_GetInfo.part.0+0x180>
9000b976:	f016 0f0f 	tst.w	r6, #15
9000b97a:	bf0c      	ite	eq
9000b97c:	2401      	moveq	r4, #1
9000b97e:	2400      	movne	r4, #0
9000b980:	0064      	lsls	r4, r4, #1
9000b982:	e754      	b.n	9000b82e <HAL_JPEG_GetInfo.part.0+0x2a>
    else if ((yblockNb == 0UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
9000b984:	ea42 020c 	orr.w	r2, r2, ip
9000b988:	f012 040f 	ands.w	r4, r2, #15
9000b98c:	f43f af4f 	beq.w	9000b82e <HAL_JPEG_GetInfo.part.0+0x2a>
    else if ((yblockNb == 3UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
9000b990:	ea4c 0206 	orr.w	r2, ip, r6
9000b994:	f3c2 0203 	ubfx	r2, r2, #0, #4
9000b998:	2d03      	cmp	r5, #3
9000b99a:	bf08      	it	eq
9000b99c:	2a00      	cmpeq	r2, #0
9000b99e:	bf0c      	ite	eq
9000b9a0:	2401      	moveq	r4, #1
9000b9a2:	2400      	movne	r4, #0
9000b9a4:	e743      	b.n	9000b82e <HAL_JPEG_GetInfo.part.0+0x2a>
    return HAL_ERROR;
9000b9a6:	2001      	movs	r0, #1
}
9000b9a8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9000b9ac:	9002df28 	.word	0x9002df28

9000b9b0 <HAL_JPEG_Init>:
  if (hjpeg == NULL)
9000b9b0:	2800      	cmp	r0, #0
9000b9b2:	f000 810b 	beq.w	9000bbcc <HAL_JPEG_Init+0x21c>
{
9000b9b6:	b570      	push	{r4, r5, r6, lr}
  if (hjpeg->State == HAL_JPEG_STATE_RESET)
9000b9b8:	f890 304d 	ldrb.w	r3, [r0, #77]	; 0x4d
9000b9bc:	4604      	mov	r4, r0
9000b9be:	f003 02ff 	and.w	r2, r3, #255	; 0xff
9000b9c2:	2b00      	cmp	r3, #0
9000b9c4:	f000 80fd 	beq.w	9000bbc2 <HAL_JPEG_Init+0x212>
  __HAL_JPEG_ENABLE(hjpeg);
9000b9c8:	6822      	ldr	r2, [r4, #0]
  hjpeg->State = HAL_JPEG_STATE_BUSY;
9000b9ca:	2102      	movs	r1, #2
  hjpeg->QuantTable2 = NULL;
9000b9cc:	2300      	movs	r3, #0
  hjpeg->QuantTable0 = (uint8_t *)((uint32_t)JPEG_LUM_QuantTable);
9000b9ce:	4880      	ldr	r0, [pc, #512]	; (9000bbd0 <HAL_JPEG_Init+0x220>)
  hjpeg->State = HAL_JPEG_STATE_BUSY;
9000b9d0:	f884 104d 	strb.w	r1, [r4, #77]	; 0x4d
  __HAL_JPEG_ENABLE(hjpeg);
9000b9d4:	6b11      	ldr	r1, [r2, #48]	; 0x30
9000b9d6:	f041 0101 	orr.w	r1, r1, #1
9000b9da:	6311      	str	r1, [r2, #48]	; 0x30
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000b9dc:	6811      	ldr	r1, [r2, #0]
9000b9de:	f021 0101 	bic.w	r1, r1, #1
9000b9e2:	6011      	str	r1, [r2, #0]
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000b9e4:	6b11      	ldr	r1, [r2, #48]	; 0x30
9000b9e6:	f021 017e 	bic.w	r1, r1, #126	; 0x7e
9000b9ea:	6311      	str	r1, [r2, #48]	; 0x30
  hjpeg->Instance->CR |= JPEG_CR_IFF;
9000b9ec:	6b11      	ldr	r1, [r2, #48]	; 0x30
9000b9ee:	f441 5100 	orr.w	r1, r1, #8192	; 0x2000
9000b9f2:	6311      	str	r1, [r2, #48]	; 0x30
  hjpeg->Instance->CR |= JPEG_CR_OFF;
9000b9f4:	6b11      	ldr	r1, [r2, #48]	; 0x30
9000b9f6:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
9000b9fa:	6311      	str	r1, [r2, #48]	; 0x30
  __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
9000b9fc:	6b91      	ldr	r1, [r2, #56]	; 0x38
9000b9fe:	f041 0160 	orr.w	r1, r1, #96	; 0x60
9000ba02:	6391      	str	r1, [r2, #56]	; 0x38
  hjpeg->QuantTable1 = (uint8_t *)((uint32_t)JPEG_CHROM_QuantTable);
9000ba04:	4973      	ldr	r1, [pc, #460]	; (9000bbd4 <HAL_JPEG_Init+0x224>)
  hjpeg->QuantTable0 = (uint8_t *)((uint32_t)JPEG_LUM_QuantTable);
9000ba06:	63e0      	str	r0, [r4, #60]	; 0x3c
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
9000ba08:	2001      	movs	r0, #1
  hjpeg->QuantTable3 = NULL;
9000ba0a:	64a3      	str	r3, [r4, #72]	; 0x48
  hjpeg->QuantTable1 = (uint8_t *)((uint32_t)JPEG_CHROM_QuantTable);
9000ba0c:	e9c4 1310 	strd	r1, r3, [r4, #64]	; 0x40
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
9000ba10:	f8c2 336c 	str.w	r3, [r2, #876]	; 0x36c
9000ba14:	f04f 3101 	mov.w	r1, #16843009	; 0x1010101
9000ba18:	4b6f      	ldr	r3, [pc, #444]	; (9000bbd8 <HAL_JPEG_Init+0x228>)
9000ba1a:	f8c2 0368 	str.w	r0, [r2, #872]	; 0x368
9000ba1e:	f8c2 1364 	str.w	r1, [r2, #868]	; 0x364
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000ba22:	486e      	ldr	r0, [pc, #440]	; (9000bbdc <HAL_JPEG_Init+0x22c>)
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
9000ba24:	f8c2 3360 	str.w	r3, [r2, #864]	; 0x360
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000ba28:	4b6d      	ldr	r3, [pc, #436]	; (9000bbe0 <HAL_JPEG_Init+0x230>)
9000ba2a:	f8c2 0378 	str.w	r0, [r2, #888]	; 0x378
9000ba2e:	496d      	ldr	r1, [pc, #436]	; (9000bbe4 <HAL_JPEG_Init+0x234>)
9000ba30:	f8c2 3374 	str.w	r3, [r2, #884]	; 0x374
    *address = (((uint32_t)HuffTableAC0->Bits[index - 1UL] & 0xFFUL) << 24) |
9000ba34:	4b6c      	ldr	r3, [pc, #432]	; (9000bbe8 <HAL_JPEG_Init+0x238>)
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000ba36:	f8c2 1370 	str.w	r1, [r2, #880]	; 0x370
    *address = (((uint32_t)HuffTableAC0->Bits[index - 1UL] & 0xFFUL) << 24) |
9000ba3a:	486c      	ldr	r0, [pc, #432]	; (9000bbec <HAL_JPEG_Init+0x23c>)
9000ba3c:	f8c2 3388 	str.w	r3, [r2, #904]	; 0x388
9000ba40:	496b      	ldr	r1, [pc, #428]	; (9000bbf0 <HAL_JPEG_Init+0x240>)
9000ba42:	4b6c      	ldr	r3, [pc, #432]	; (9000bbf4 <HAL_JPEG_Init+0x244>)
9000ba44:	f8c2 0384 	str.w	r0, [r2, #900]	; 0x384
9000ba48:	f8c2 1380 	str.w	r1, [r2, #896]	; 0x380
9000ba4c:	f8c2 337c 	str.w	r3, [r2, #892]	; 0x37c
  value = value | (((uint32_t)HuffTableAC0->HuffVal[161] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC0->HuffVal[160] & 0xFFUL);
9000ba50:	f64f 23f9 	movw	r3, #64249	; 0xfaf9
  value = *address & 0xFFFF0000U;
9000ba54:	f8d2 042c 	ldr.w	r0, [r2, #1068]	; 0x42c
9000ba58:	4967      	ldr	r1, [pc, #412]	; (9000bbf8 <HAL_JPEG_Init+0x248>)
9000ba5a:	4001      	ands	r1, r0
  address--; /* address = hjpeg->Instance->DHTMEM + 50*/
9000ba5c:	f502 6085 	add.w	r0, r2, #1064	; 0x428
  value = value | (((uint32_t)HuffTableAC0->HuffVal[161] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC0->HuffVal[160] & 0xFFUL);
9000ba60:	430b      	orrs	r3, r1
  *address = value;
9000ba62:	4966      	ldr	r1, [pc, #408]	; (9000bbfc <HAL_JPEG_Init+0x24c>)
9000ba64:	f1a1 06a0 	sub.w	r6, r1, #160	; 0xa0
9000ba68:	f8c2 342c 	str.w	r3, [r2, #1068]	; 0x42c
               (((uint32_t)HuffTableAC0->HuffVal[index - 2UL] & 0xFFUL) << 16) |
9000ba6c:	f891 30ae 	ldrb.w	r3, [r1, #174]	; 0xae
  while (index > 3UL)
9000ba70:	3904      	subs	r1, #4
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000ba72:	f891 e0b3 	ldrb.w	lr, [r1, #179]	; 0xb3
               (((uint32_t)HuffTableAC0->HuffVal[index - 2UL] & 0xFFUL) << 16) |
9000ba76:	041b      	lsls	r3, r3, #16
               ((uint32_t)HuffTableAC0->HuffVal[index - 4UL] & 0xFFUL);
9000ba78:	f891 c0b0 	ldrb.w	ip, [r1, #176]	; 0xb0
               (((uint32_t)HuffTableAC0->HuffVal[index - 3UL] & 0xFFUL) << 8) |
9000ba7c:	f891 50b1 	ldrb.w	r5, [r1, #177]	; 0xb1
  while (index > 3UL)
9000ba80:	42b1      	cmp	r1, r6
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000ba82:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
               (((uint32_t)HuffTableAC0->HuffVal[index - 3UL] & 0xFFUL) << 8) |
9000ba86:	ea43 030c 	orr.w	r3, r3, ip
9000ba8a:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000ba8e:	f840 3904 	str.w	r3, [r0], #-4
  while (index > 3UL)
9000ba92:	d1eb      	bne.n	9000ba6c <HAL_JPEG_Init+0xbc>
  value = *address & 0x0000FFFFU;
9000ba94:	f8d2 342c 	ldr.w	r3, [r2, #1068]	; 0x42c
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000ba98:	f04f 3101 	mov.w	r1, #16843009	; 0x1010101
  value = *address & 0xFFFF0000U;
9000ba9c:	4856      	ldr	r0, [pc, #344]	; (9000bbf8 <HAL_JPEG_Init+0x248>)
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000ba9e:	2501      	movs	r5, #1
  value = *address & 0x0000FFFFU;
9000baa0:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableDC1->Bits[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableDC1->Bits[0] & 0xFFUL) << 16);
9000baa2:	f043 7340 	orr.w	r3, r3, #50331648	; 0x3000000
  *address = value;
9000baa6:	f8c2 342c 	str.w	r3, [r2, #1068]	; 0x42c
  value = *address & 0xFFFF0000U;
9000baaa:	f8d2 343c 	ldr.w	r3, [r2, #1084]	; 0x43c
9000baae:	4003      	ands	r3, r0
  *address = value;
9000bab0:	f8c2 343c 	str.w	r3, [r2, #1084]	; 0x43c
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000bab4:	f8c2 5438 	str.w	r5, [r2, #1080]	; 0x438
9000bab8:	f8c2 1434 	str.w	r1, [r2, #1076]	; 0x434
9000babc:	f8c2 1430 	str.w	r1, [r2, #1072]	; 0x430
  value = value | (((uint32_t)HuffTableDC1->HuffVal[11] & 0xFFUL) << 8) | ((uint32_t)HuffTableDC1->HuffVal[10] & 0xFFUL);
9000bac0:	f640 310a 	movw	r1, #2826	; 0xb0a
  value = *address & 0x0000FFFFUL;
9000bac4:	f8d2 343c 	ldr.w	r3, [r2, #1084]	; 0x43c
9000bac8:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableDC1->HuffVal[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableDC1->HuffVal[0] & 0xFFUL) <<
9000baca:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
  *address = value;
9000bace:	f8c2 343c 	str.w	r3, [r2, #1084]	; 0x43c
  value = *address & 0xFFFF0000UL;
9000bad2:	f8d2 3448 	ldr.w	r3, [r2, #1096]	; 0x448
9000bad6:	4003      	ands	r3, r0
  value = value | (((uint32_t)HuffTableDC1->HuffVal[11] & 0xFFUL) << 8) | ((uint32_t)HuffTableDC1->HuffVal[10] & 0xFFUL);
9000bad8:	4319      	orrs	r1, r3
    *address = (((uint32_t)HuffTableDC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
9000bada:	4b49      	ldr	r3, [pc, #292]	; (9000bc00 <HAL_JPEG_Init+0x250>)
  *address = value;
9000badc:	f8c2 1448 	str.w	r1, [r2, #1096]	; 0x448
  value = value | (((uint32_t)HuffTableAC1->Bits[15] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC1->Bits[14] & 0xFFUL);
9000bae0:	f247 7102 	movw	r1, #30466	; 0x7702
    *address = (((uint32_t)HuffTableDC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
9000bae4:	f8c2 3444 	str.w	r3, [r2, #1092]	; 0x444
9000bae8:	f1a3 3304 	sub.w	r3, r3, #67372036	; 0x4040404
9000baec:	f8c2 3440 	str.w	r3, [r2, #1088]	; 0x440
  value = *address & 0x0000FFFFU;
9000baf0:	f8d2 3448 	ldr.w	r3, [r2, #1096]	; 0x448
9000baf4:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableAC1->Bits[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableAC1->Bits[0] & 0xFFUL) << 16);
9000baf6:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
  *address = value;
9000bafa:	f8c2 3448 	str.w	r3, [r2, #1096]	; 0x448
  value = *address & 0xFFFF0000U;
9000bafe:	f8d2 3458 	ldr.w	r3, [r2, #1112]	; 0x458
9000bb02:	4003      	ands	r3, r0
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000bb04:	483f      	ldr	r0, [pc, #252]	; (9000bc04 <HAL_JPEG_Init+0x254>)
  value = value | (((uint32_t)HuffTableAC1->Bits[15] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC1->Bits[14] & 0xFFUL);
9000bb06:	4319      	orrs	r1, r3
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000bb08:	4b3f      	ldr	r3, [pc, #252]	; (9000bc08 <HAL_JPEG_Init+0x258>)
  *address = value;
9000bb0a:	f8c2 1458 	str.w	r1, [r2, #1112]	; 0x458
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000bb0e:	493f      	ldr	r1, [pc, #252]	; (9000bc0c <HAL_JPEG_Init+0x25c>)
9000bb10:	f8c2 0454 	str.w	r0, [r2, #1108]	; 0x454
  address = (hjpeg->Instance->DHTMEM + 102);
9000bb14:	f502 609f 	add.w	r0, r2, #1272	; 0x4f8
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000bb18:	f8c2 1450 	str.w	r1, [r2, #1104]	; 0x450
9000bb1c:	f8c2 344c 	str.w	r3, [r2, #1100]	; 0x44c
  value = *address & 0x0000FFFFUL;
9000bb20:	f8d2 3458 	ldr.w	r3, [r2, #1112]	; 0x458
  value = value | (((uint32_t)HuffTableAC1->HuffVal[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableAC1->HuffVal[0] & 0xFFUL) <<
9000bb24:	493a      	ldr	r1, [pc, #232]	; (9000bc10 <HAL_JPEG_Init+0x260>)
  value = *address & 0x0000FFFFUL;
9000bb26:	b29b      	uxth	r3, r3
9000bb28:	f1a1 06a0 	sub.w	r6, r1, #160	; 0xa0
  value = value | (((uint32_t)HuffTableAC1->HuffVal[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableAC1->HuffVal[0] & 0xFFUL) <<
9000bb2c:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
  *address = value;
9000bb30:	f8c2 3458 	str.w	r3, [r2, #1112]	; 0x458
               (((uint32_t)HuffTableAC1->HuffVal[index] & 0xFFUL) << 16) |
9000bb34:	f891 30b0 	ldrb.w	r3, [r1, #176]	; 0xb0
  while (index > 3UL)
9000bb38:	3904      	subs	r1, #4
    *address = (((uint32_t)HuffTableAC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
9000bb3a:	f891 50b5 	ldrb.w	r5, [r1, #181]	; 0xb5
               (((uint32_t)HuffTableAC1->HuffVal[index] & 0xFFUL) << 16) |
9000bb3e:	041b      	lsls	r3, r3, #16
               ((uint32_t)HuffTableAC1->HuffVal[index - 2UL] & 0xFFUL);
9000bb40:	f891 e0b2 	ldrb.w	lr, [r1, #178]	; 0xb2
               (((uint32_t)HuffTableAC1->HuffVal[index - 1UL] & 0xFFUL) << 8) |
9000bb44:	f891 c0b3 	ldrb.w	ip, [r1, #179]	; 0xb3
  while (index > 3UL)
9000bb48:	42b1      	cmp	r1, r6
               (((uint32_t)HuffTableAC1->HuffVal[index - 1UL] & 0xFFUL) << 8) |
9000bb4a:	ea43 6305 	orr.w	r3, r3, r5, lsl #24
9000bb4e:	ea43 030e 	orr.w	r3, r3, lr
9000bb52:	ea43 230c 	orr.w	r3, r3, ip, lsl #8
    *address = (((uint32_t)HuffTableAC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
9000bb56:	f840 3904 	str.w	r3, [r0], #-4
  while (index > 3UL)
9000bb5a:	d1eb      	bne.n	9000bb34 <HAL_JPEG_Init+0x184>
  error = JPEG_Set_HuffAC_Mem(hjpeg, (JPEG_ACHuffTableTypeDef *)(uint32_t)&JPEG_ACLUM_HuffTable,
9000bb5c:	f502 62a0 	add.w	r2, r2, #1280	; 0x500
9000bb60:	4926      	ldr	r1, [pc, #152]	; (9000bbfc <HAL_JPEG_Init+0x24c>)
9000bb62:	4620      	mov	r0, r4
9000bb64:	f7ff fd3a 	bl	9000b5dc <JPEG_Set_HuffAC_Mem>
  if (error != HAL_OK)
9000bb68:	b118      	cbz	r0, 9000bb72 <HAL_JPEG_Init+0x1c2>
    hjpeg->ErrorCode = HAL_JPEG_ERROR_HUFF_TABLE;
9000bb6a:	2301      	movs	r3, #1
    return HAL_ERROR;
9000bb6c:	4618      	mov	r0, r3
    hjpeg->ErrorCode = HAL_JPEG_ERROR_HUFF_TABLE;
9000bb6e:	6523      	str	r3, [r4, #80]	; 0x50
}
9000bb70:	bd70      	pop	{r4, r5, r6, pc}
                              (hjpeg->Instance->HUFFENC_AC1));
9000bb72:	6822      	ldr	r2, [r4, #0]
  error = JPEG_Set_HuffAC_Mem(hjpeg, (JPEG_ACHuffTableTypeDef *)(uint32_t)&JPEG_ACCHROM_HuffTable,
9000bb74:	4620      	mov	r0, r4
9000bb76:	4926      	ldr	r1, [pc, #152]	; (9000bc10 <HAL_JPEG_Init+0x260>)
9000bb78:	f502 62cc 	add.w	r2, r2, #1632	; 0x660
9000bb7c:	f7ff fd2e 	bl	9000b5dc <JPEG_Set_HuffAC_Mem>
  if (error != HAL_OK)
9000bb80:	2800      	cmp	r0, #0
9000bb82:	d1f2      	bne.n	9000bb6a <HAL_JPEG_Init+0x1ba>
                              hjpeg->Instance->HUFFENC_DC0);
9000bb84:	6822      	ldr	r2, [r4, #0]
  error = JPEG_Set_HuffDC_Mem(hjpeg, (JPEG_DCHuffTableTypeDef *)(uint32_t)&JPEG_DCLUM_HuffTable,
9000bb86:	4620      	mov	r0, r4
9000bb88:	4922      	ldr	r1, [pc, #136]	; (9000bc14 <HAL_JPEG_Init+0x264>)
9000bb8a:	f502 62f8 	add.w	r2, r2, #1984	; 0x7c0
9000bb8e:	f7ff fc7b 	bl	9000b488 <JPEG_Set_HuffDC_Mem>
  if (error != HAL_OK)
9000bb92:	2800      	cmp	r0, #0
9000bb94:	d1e9      	bne.n	9000bb6a <HAL_JPEG_Init+0x1ba>
                              hjpeg->Instance->HUFFENC_DC1);
9000bb96:	6822      	ldr	r2, [r4, #0]
  error = JPEG_Set_HuffDC_Mem(hjpeg, (JPEG_DCHuffTableTypeDef *)(uint32_t)&JPEG_DCCHROM_HuffTable,
9000bb98:	4620      	mov	r0, r4
9000bb9a:	491f      	ldr	r1, [pc, #124]	; (9000bc18 <HAL_JPEG_Init+0x268>)
9000bb9c:	f502 62fc 	add.w	r2, r2, #2016	; 0x7e0
9000bba0:	f7ff fc72 	bl	9000b488 <JPEG_Set_HuffDC_Mem>
  if (JPEG_Set_HuffEnc_Mem(hjpeg) != HAL_OK)
9000bba4:	2800      	cmp	r0, #0
9000bba6:	d1e0      	bne.n	9000bb6a <HAL_JPEG_Init+0x1ba>
  hjpeg->Instance->CONFR1 |= JPEG_CONFR1_HDR;
9000bba8:	6822      	ldr	r2, [r4, #0]
  hjpeg->State = HAL_JPEG_STATE_READY;
9000bbaa:	2101      	movs	r1, #1
  hjpeg->Instance->CONFR1 |= JPEG_CONFR1_HDR;
9000bbac:	6853      	ldr	r3, [r2, #4]
9000bbae:	f443 7380 	orr.w	r3, r3, #256	; 0x100
9000bbb2:	6053      	str	r3, [r2, #4]
  hjpeg->JpegInCount = 0;
9000bbb4:	6220      	str	r0, [r4, #32]
  hjpeg->JpegOutCount = 0;
9000bbb6:	6260      	str	r0, [r4, #36]	; 0x24
  hjpeg->State = HAL_JPEG_STATE_READY;
9000bbb8:	f884 104d 	strb.w	r1, [r4, #77]	; 0x4d
  hjpeg->ErrorCode = HAL_JPEG_ERROR_NONE;
9000bbbc:	6520      	str	r0, [r4, #80]	; 0x50
  hjpeg->Context = 0;
9000bbbe:	6560      	str	r0, [r4, #84]	; 0x54
}
9000bbc0:	bd70      	pop	{r4, r5, r6, pc}
    hjpeg->Lock = HAL_UNLOCKED;
9000bbc2:	f880 204c 	strb.w	r2, [r0, #76]	; 0x4c
    HAL_JPEG_MspInit(hjpeg);
9000bbc6:	f7f9 fc81 	bl	900054cc <HAL_JPEG_MspInit>
9000bbca:	e6fd      	b.n	9000b9c8 <HAL_JPEG_Init+0x18>
    return HAL_ERROR;
9000bbcc:	2001      	movs	r0, #1
}
9000bbce:	4770      	bx	lr
9000bbd0:	9002dee8 	.word	0x9002dee8
9000bbd4:	9002de70 	.word	0x9002de70
9000bbd8:	01050100 	.word	0x01050100
9000bbdc:	0b0a0908 	.word	0x0b0a0908
9000bbe0:	07060504 	.word	0x07060504
9000bbe4:	03020100 	.word	0x03020100
9000bbe8:	7d010000 	.word	0x7d010000
9000bbec:	04040505 	.word	0x04040505
9000bbf0:	03040203 	.word	0x03040203
9000bbf4:	03010200 	.word	0x03010200
9000bbf8:	ffff0000 	.word	0xffff0000
9000bbfc:	9002ddbc 	.word	0x9002ddbc
9000bc00:	09080706 	.word	0x09080706
9000bc04:	01000404 	.word	0x01000404
9000bc08:	04040201 	.word	0x04040201
9000bc0c:	05070403 	.word	0x05070403
9000bc10:	9002dd08 	.word	0x9002dd08
9000bc14:	9002decc 	.word	0x9002decc
9000bc18:	9002deb0 	.word	0x9002deb0

9000bc1c <HAL_JPEG_Decode_DMA>:
  if ((hjpeg == NULL) || (pDataIn == NULL) || (pDataOutMCU == NULL))
9000bc1c:	2b00      	cmp	r3, #0
9000bc1e:	bf18      	it	ne
9000bc20:	2900      	cmpne	r1, #0
9000bc22:	d03b      	beq.n	9000bc9c <HAL_JPEG_Decode_DMA+0x80>
{
9000bc24:	b570      	push	{r4, r5, r6, lr}
  if ((hjpeg == NULL) || (pDataIn == NULL) || (pDataOutMCU == NULL))
9000bc26:	fab0 f580 	clz	r5, r0
9000bc2a:	4604      	mov	r4, r0
9000bc2c:	096d      	lsrs	r5, r5, #5
9000bc2e:	b330      	cbz	r0, 9000bc7e <HAL_JPEG_Decode_DMA+0x62>
  __HAL_LOCK(hjpeg);
9000bc30:	f890 c04c 	ldrb.w	ip, [r0, #76]	; 0x4c
9000bc34:	f1bc 0f01 	cmp.w	ip, #1
9000bc38:	d02e      	beq.n	9000bc98 <HAL_JPEG_Decode_DMA+0x7c>
  if (hjpeg->State == HAL_JPEG_STATE_READY)
9000bc3a:	f890 c04d 	ldrb.w	ip, [r0, #77]	; 0x4d
  __HAL_LOCK(hjpeg);
9000bc3e:	f04f 0e01 	mov.w	lr, #1
  if (hjpeg->State == HAL_JPEG_STATE_READY)
9000bc42:	45f4      	cmp	ip, lr
9000bc44:	fa5f f68c 	uxtb.w	r6, ip
  __HAL_LOCK(hjpeg);
9000bc48:	f880 e04c 	strb.w	lr, [r0, #76]	; 0x4c
  if (hjpeg->State == HAL_JPEG_STATE_READY)
9000bc4c:	d119      	bne.n	9000bc82 <HAL_JPEG_Decode_DMA+0x66>
    hjpeg->InDataLength = InDataLength;
9000bc4e:	6282      	str	r2, [r0, #40]	; 0x28
    hjpeg->pJpegOutBuffPtr = pDataOutMCU;
9000bc50:	e9c0 1306 	strd	r1, r3, [r0, #24]
    hjpeg->OutDataLength = OutDataLength;
9000bc54:	9b04      	ldr	r3, [sp, #16]
9000bc56:	62c3      	str	r3, [r0, #44]	; 0x2c
    hjpeg->State = HAL_JPEG_STATE_BUSY_DECODING;
9000bc58:	2304      	movs	r3, #4
9000bc5a:	f880 304d 	strb.w	r3, [r0, #77]	; 0x4d
    hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK);
9000bc5e:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000bc60:	f023 030f 	bic.w	r3, r3, #15
9000bc64:	6543      	str	r3, [r0, #84]	; 0x54
    hjpeg->Context |= (JPEG_CONTEXT_DECODE | JPEG_CONTEXT_DMA);
9000bc66:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000bc68:	f043 030e 	orr.w	r3, r3, #14
9000bc6c:	6543      	str	r3, [r0, #84]	; 0x54
    hjpeg->JpegInCount = 0;
9000bc6e:	6205      	str	r5, [r0, #32]
    hjpeg->JpegOutCount = 0;
9000bc70:	6245      	str	r5, [r0, #36]	; 0x24
    JPEG_Init_Process(hjpeg);
9000bc72:	f7ff fd3d 	bl	9000b6f0 <JPEG_Init_Process>
    if (JPEG_DMA_StartProcess(hjpeg) != HAL_OK)
9000bc76:	f7ff fd79 	bl	9000b76c <JPEG_DMA_StartProcess>
9000bc7a:	b930      	cbnz	r0, 9000bc8a <HAL_JPEG_Decode_DMA+0x6e>
}
9000bc7c:	bd70      	pop	{r4, r5, r6, pc}
    return HAL_ERROR;
9000bc7e:	2001      	movs	r0, #1
}
9000bc80:	bd70      	pop	{r4, r5, r6, pc}
    return HAL_BUSY;
9000bc82:	2002      	movs	r0, #2
    __HAL_UNLOCK(hjpeg);
9000bc84:	f884 504c 	strb.w	r5, [r4, #76]	; 0x4c
}
9000bc88:	bd70      	pop	{r4, r5, r6, pc}
      hjpeg->State = HAL_JPEG_STATE_ERROR;
9000bc8a:	2306      	movs	r3, #6
      return HAL_ERROR;
9000bc8c:	4630      	mov	r0, r6
      __HAL_UNLOCK(hjpeg);
9000bc8e:	f884 504c 	strb.w	r5, [r4, #76]	; 0x4c
      hjpeg->State = HAL_JPEG_STATE_ERROR;
9000bc92:	f884 304d 	strb.w	r3, [r4, #77]	; 0x4d
}
9000bc96:	bd70      	pop	{r4, r5, r6, pc}
  __HAL_LOCK(hjpeg);
9000bc98:	2002      	movs	r0, #2
}
9000bc9a:	bd70      	pop	{r4, r5, r6, pc}
    return HAL_ERROR;
9000bc9c:	2001      	movs	r0, #1
}
9000bc9e:	4770      	bx	lr

9000bca0 <HAL_JPEG_Pause>:
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000bca0:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000bca2:	f003 030c 	and.w	r3, r3, #12
9000bca6:	2b0c      	cmp	r3, #12
9000bca8:	d01a      	beq.n	9000bce0 <HAL_JPEG_Pause+0x40>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000bcaa:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000bcac:	f003 030c 	and.w	r3, r3, #12
9000bcb0:	2b08      	cmp	r3, #8
9000bcb2:	d001      	beq.n	9000bcb8 <HAL_JPEG_Pause+0x18>
}
9000bcb4:	2000      	movs	r0, #0
9000bcb6:	4770      	bx	lr
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
9000bcb8:	07ca      	lsls	r2, r1, #31
9000bcba:	d41f      	bmi.n	9000bcfc <HAL_JPEG_Pause+0x5c>
9000bcbc:	f04f 3cff 	mov.w	ip, #4294967295
9000bcc0:	f06f 0228 	mvn.w	r2, #40	; 0x28
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
9000bcc4:	078b      	lsls	r3, r1, #30
9000bcc6:	d504      	bpl.n	9000bcd2 <HAL_JPEG_Pause+0x32>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_OUTPUT;
9000bcc8:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000bcca:	4694      	mov	ip, r2
9000bccc:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
9000bcd0:	6543      	str	r3, [r0, #84]	; 0x54
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
9000bcd2:	6802      	ldr	r2, [r0, #0]
}
9000bcd4:	2000      	movs	r0, #0
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
9000bcd6:	6b13      	ldr	r3, [r2, #48]	; 0x30
9000bcd8:	ea03 030c 	and.w	r3, r3, ip
9000bcdc:	6313      	str	r3, [r2, #48]	; 0x30
}
9000bcde:	4770      	bx	lr
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
9000bce0:	07cb      	lsls	r3, r1, #31
9000bce2:	d503      	bpl.n	9000bcec <HAL_JPEG_Pause+0x4c>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000bce4:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000bce6:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
9000bcea:	6543      	str	r3, [r0, #84]	; 0x54
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
9000bcec:	0789      	lsls	r1, r1, #30
9000bcee:	d5e1      	bpl.n	9000bcb4 <HAL_JPEG_Pause+0x14>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_OUTPUT;
9000bcf0:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000bcf2:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
9000bcf6:	6543      	str	r3, [r0, #84]	; 0x54
}
9000bcf8:	2000      	movs	r0, #0
9000bcfa:	4770      	bx	lr
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000bcfc:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000bcfe:	f06f 0c06 	mvn.w	ip, #6
9000bd02:	f06f 022e 	mvn.w	r2, #46	; 0x2e
9000bd06:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
9000bd0a:	6543      	str	r3, [r0, #84]	; 0x54
      mask |= (JPEG_IT_IFT | JPEG_IT_IFNF);
9000bd0c:	e7da      	b.n	9000bcc4 <HAL_JPEG_Pause+0x24>
9000bd0e:	bf00      	nop

9000bd10 <HAL_JPEG_ConfigInputBuffer>:
  hjpeg->pJpegInBuffPtr =  pNewInputBuffer;
9000bd10:	6181      	str	r1, [r0, #24]
  hjpeg->InDataLength = InDataLength;
9000bd12:	6282      	str	r2, [r0, #40]	; 0x28
}
9000bd14:	4770      	bx	lr
9000bd16:	bf00      	nop

9000bd18 <HAL_JPEG_ConfigOutputBuffer>:
  hjpeg->pJpegOutBuffPtr = pNewOutputBuffer;
9000bd18:	61c1      	str	r1, [r0, #28]
  hjpeg->OutDataLength = OutDataLength;
9000bd1a:	62c2      	str	r2, [r0, #44]	; 0x2c
}
9000bd1c:	4770      	bx	lr
9000bd1e:	bf00      	nop

9000bd20 <HAL_JPEG_EncodeCpltCallback>:
9000bd20:	4770      	bx	lr
9000bd22:	bf00      	nop

9000bd24 <JPEG_MDMAErrorCallback>:
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
9000bd24:	6c00      	ldr	r0, [r0, #64]	; 0x40
  hjpeg->State = HAL_JPEG_STATE_READY;
9000bd26:	2101      	movs	r1, #1
{
9000bd28:	b508      	push	{r3, lr}
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000bd2a:	6803      	ldr	r3, [r0, #0]
9000bd2c:	681a      	ldr	r2, [r3, #0]
9000bd2e:	f022 0201 	bic.w	r2, r2, #1
9000bd32:	601a      	str	r2, [r3, #0]
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000bd34:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000bd36:	f022 027e 	bic.w	r2, r2, #126	; 0x7e
9000bd3a:	631a      	str	r2, [r3, #48]	; 0x30
  hjpeg->State = HAL_JPEG_STATE_READY;
9000bd3c:	f880 104d 	strb.w	r1, [r0, #77]	; 0x4d
  hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000bd40:	6d03      	ldr	r3, [r0, #80]	; 0x50
9000bd42:	f043 0304 	orr.w	r3, r3, #4
9000bd46:	6503      	str	r3, [r0, #80]	; 0x50
  HAL_JPEG_ErrorCallback(hjpeg);
9000bd48:	f7f7 fe50 	bl	900039ec <HAL_JPEG_ErrorCallback>
}
9000bd4c:	bd08      	pop	{r3, pc}
9000bd4e:	bf00      	nop

9000bd50 <JPEG_MDMAInCpltCallback>:
{
9000bd50:	b530      	push	{r4, r5, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
9000bd52:	6c04      	ldr	r4, [r0, #64]	; 0x40
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) == JPEG_CONTEXT_DMA)
9000bd54:	f248 010c 	movw	r1, #32780	; 0x800c
{
9000bd58:	b083      	sub	sp, #12
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000bd5a:	6822      	ldr	r2, [r4, #0]
9000bd5c:	6b13      	ldr	r3, [r2, #48]	; 0x30
9000bd5e:	f023 037e 	bic.w	r3, r3, #126	; 0x7e
9000bd62:	6313      	str	r3, [r2, #48]	; 0x30
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) == JPEG_CONTEXT_DMA)
9000bd64:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000bd66:	400b      	ands	r3, r1
9000bd68:	2b0c      	cmp	r3, #12
9000bd6a:	d001      	beq.n	9000bd70 <JPEG_MDMAInCpltCallback+0x20>
}
9000bd6c:	b003      	add	sp, #12
9000bd6e:	bd30      	pop	{r4, r5, pc}
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000bd70:	6802      	ldr	r2, [r0, #0]
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
9000bd72:	4620      	mov	r0, r4
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000bd74:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000bd76:	6952      	ldr	r2, [r2, #20]
    inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000bd78:	6b21      	ldr	r1, [r4, #48]	; 0x30
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000bd7a:	f3c2 0210 	ubfx	r2, r2, #0, #17
    inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000bd7e:	6a8d      	ldr	r5, [r1, #40]	; 0x28
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000bd80:	1a9b      	subs	r3, r3, r2
9000bd82:	6223      	str	r3, [r4, #32]
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
9000bd84:	6a21      	ldr	r1, [r4, #32]
9000bd86:	f7f7 fdbd 	bl	90003904 <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength >= inXfrSize)
9000bd8a:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000bd8c:	42ab      	cmp	r3, r5
9000bd8e:	d311      	bcc.n	9000bdb4 <JPEG_MDMAInCpltCallback+0x64>
      if (inXfrSize == 0UL)
9000bd90:	b305      	cbz	r5, 9000bdd4 <JPEG_MDMAInCpltCallback+0x84>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
9000bd92:	fbb3 f2f5 	udiv	r2, r3, r5
9000bd96:	fb05 3212 	mls	r2, r5, r2, r3
9000bd9a:	1a9b      	subs	r3, r3, r2
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
9000bd9c:	6d62      	ldr	r2, [r4, #84]	; 0x54
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
9000bd9e:	62a3      	str	r3, [r4, #40]	; 0x28
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
9000bda0:	04d1      	lsls	r1, r2, #19
9000bda2:	d400      	bmi.n	9000bda6 <JPEG_MDMAInCpltCallback+0x56>
9000bda4:	b963      	cbnz	r3, 9000bdc0 <JPEG_MDMAInCpltCallback+0x70>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
9000bda6:	6822      	ldr	r2, [r4, #0]
9000bda8:	6b13      	ldr	r3, [r2, #48]	; 0x30
9000bdaa:	f043 0360 	orr.w	r3, r3, #96	; 0x60
9000bdae:	6313      	str	r3, [r2, #48]	; 0x30
}
9000bdb0:	b003      	add	sp, #12
9000bdb2:	bd30      	pop	{r4, r5, pc}
    else if (hjpeg->InDataLength > 0UL)
9000bdb4:	b1cb      	cbz	r3, 9000bdea <JPEG_MDMAInCpltCallback+0x9a>
      if ((hjpeg->InDataLength % 4UL) != 0UL)
9000bdb6:	0798      	lsls	r0, r3, #30
9000bdb8:	d119      	bne.n	9000bdee <JPEG_MDMAInCpltCallback+0x9e>
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
9000bdba:	6d62      	ldr	r2, [r4, #84]	; 0x54
9000bdbc:	04d2      	lsls	r2, r2, #19
9000bdbe:	d4f2      	bmi.n	9000bda6 <JPEG_MDMAInCpltCallback+0x56>
      if (HAL_MDMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
9000bdc0:	6822      	ldr	r2, [r4, #0]
9000bdc2:	2501      	movs	r5, #1
9000bdc4:	69a1      	ldr	r1, [r4, #24]
9000bdc6:	6b20      	ldr	r0, [r4, #48]	; 0x30
9000bdc8:	3240      	adds	r2, #64	; 0x40
9000bdca:	9500      	str	r5, [sp, #0]
9000bdcc:	f001 f8b0 	bl	9000cf30 <HAL_MDMA_Start_IT>
9000bdd0:	2800      	cmp	r0, #0
9000bdd2:	d0e8      	beq.n	9000bda6 <JPEG_MDMAInCpltCallback+0x56>
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000bdd4:	6d23      	ldr	r3, [r4, #80]	; 0x50
        hjpeg->State = HAL_JPEG_STATE_ERROR;
9000bdd6:	2206      	movs	r2, #6
        HAL_JPEG_ErrorCallback(hjpeg);
9000bdd8:	4620      	mov	r0, r4
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000bdda:	f043 0304 	orr.w	r3, r3, #4
9000bdde:	6523      	str	r3, [r4, #80]	; 0x50
        hjpeg->State = HAL_JPEG_STATE_ERROR;
9000bde0:	f884 204d 	strb.w	r2, [r4, #77]	; 0x4d
        HAL_JPEG_ErrorCallback(hjpeg);
9000bde4:	f7f7 fe02 	bl	900039ec <HAL_JPEG_ErrorCallback>
        return;
9000bde8:	e7c0      	b.n	9000bd6c <JPEG_MDMAInCpltCallback+0x1c>
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
9000bdea:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000bdec:	e7db      	b.n	9000bda6 <JPEG_MDMAInCpltCallback+0x56>
        hjpeg->InDataLength = ((hjpeg->InDataLength / 4UL) + 1UL) * 4UL;
9000bdee:	f023 0303 	bic.w	r3, r3, #3
9000bdf2:	3304      	adds	r3, #4
9000bdf4:	e7d2      	b.n	9000bd9c <JPEG_MDMAInCpltCallback+0x4c>
9000bdf6:	bf00      	nop

9000bdf8 <JPEG_DMA_PollResidualData>:
{
9000bdf8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
      if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
9000bdfa:	6802      	ldr	r2, [r0, #0]
9000bdfc:	2610      	movs	r6, #16
{
9000bdfe:	4604      	mov	r4, r0
    if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000be00:	6d65      	ldr	r5, [r4, #84]	; 0x54
9000be02:	f415 5500 	ands.w	r5, r5, #8192	; 0x2000
9000be06:	d11d      	bne.n	9000be44 <JPEG_DMA_PollResidualData+0x4c>
      if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
9000be08:	6b53      	ldr	r3, [r2, #52]	; 0x34
9000be0a:	06df      	lsls	r7, r3, #27
9000be0c:	d51a      	bpl.n	9000be44 <JPEG_DMA_PollResidualData+0x4c>
        dataOut = hjpeg->Instance->DOR;
9000be0e:	6c53      	ldr	r3, [r2, #68]	; 0x44
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataOut & 0x000000FFUL);
9000be10:	69e7      	ldr	r7, [r4, #28]
9000be12:	6a62      	ldr	r2, [r4, #36]	; 0x24
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataOut & 0x0000FF00UL) >> 8);
9000be14:	0a18      	lsrs	r0, r3, #8
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataOut & 0x00FF0000UL) >> 16);
9000be16:	0c19      	lsrs	r1, r3, #16
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataOut & 0x000000FFUL);
9000be18:	54bb      	strb	r3, [r7, r2]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataOut & 0xFF000000UL) >> 24);
9000be1a:	0e1b      	lsrs	r3, r3, #24
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataOut & 0x0000FF00UL) >> 8);
9000be1c:	6a67      	ldr	r7, [r4, #36]	; 0x24
9000be1e:	69e2      	ldr	r2, [r4, #28]
9000be20:	443a      	add	r2, r7
9000be22:	7050      	strb	r0, [r2, #1]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataOut & 0x00FF0000UL) >> 16);
9000be24:	6a60      	ldr	r0, [r4, #36]	; 0x24
9000be26:	69e2      	ldr	r2, [r4, #28]
9000be28:	4402      	add	r2, r0
9000be2a:	7091      	strb	r1, [r2, #2]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataOut & 0xFF000000UL) >> 24);
9000be2c:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000be2e:	69e2      	ldr	r2, [r4, #28]
9000be30:	440a      	add	r2, r1
9000be32:	70d3      	strb	r3, [r2, #3]
        hjpeg->JpegOutCount += 4UL;
9000be34:	6a63      	ldr	r3, [r4, #36]	; 0x24
        if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
9000be36:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
        hjpeg->JpegOutCount += 4UL;
9000be38:	3304      	adds	r3, #4
9000be3a:	6263      	str	r3, [r4, #36]	; 0x24
        if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
9000be3c:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000be3e:	4293      	cmp	r3, r2
9000be40:	d021      	beq.n	9000be86 <JPEG_DMA_PollResidualData+0x8e>
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
9000be42:	6822      	ldr	r2, [r4, #0]
  for (count = JPEG_FIFO_SIZE; count > 0UL; count--)
9000be44:	3e01      	subs	r6, #1
9000be46:	d1db      	bne.n	9000be00 <JPEG_DMA_PollResidualData+0x8>
  tmpContext = hjpeg->Context;
9000be48:	6d61      	ldr	r1, [r4, #84]	; 0x54
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
9000be4a:	6b53      	ldr	r3, [r2, #52]	; 0x34
9000be4c:	06d8      	lsls	r0, r3, #27
9000be4e:	d501      	bpl.n	9000be54 <JPEG_DMA_PollResidualData+0x5c>
9000be50:	048b      	lsls	r3, r1, #18
9000be52:	d417      	bmi.n	9000be84 <JPEG_DMA_PollResidualData+0x8c>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000be54:	6813      	ldr	r3, [r2, #0]
9000be56:	f023 0301 	bic.w	r3, r3, #1
9000be5a:	6013      	str	r3, [r2, #0]
    if (hjpeg->JpegOutCount > 0UL)
9000be5c:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000be5e:	b9eb      	cbnz	r3, 9000be9c <JPEG_DMA_PollResidualData+0xa4>
    tmpContext = hjpeg->Context;
9000be60:	6d63      	ldr	r3, [r4, #84]	; 0x54
    __HAL_UNLOCK(hjpeg);
9000be62:	2000      	movs	r0, #0
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000be64:	6d62      	ldr	r2, [r4, #84]	; 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000be66:	2101      	movs	r1, #1
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000be68:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
9000be6c:	f884 004c 	strb.w	r0, [r4, #76]	; 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000be70:	f402 4282 	and.w	r2, r2, #16640	; 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000be74:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000be76:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000be78:	6562      	str	r2, [r4, #84]	; 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000be7a:	f884 104d 	strb.w	r1, [r4, #77]	; 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000be7e:	d00a      	beq.n	9000be96 <JPEG_DMA_PollResidualData+0x9e>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
9000be80:	f7ff ff4e 	bl	9000bd20 <HAL_JPEG_EncodeCpltCallback>
}
9000be84:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
          HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000be86:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000be88:	4620      	mov	r0, r4
9000be8a:	69e1      	ldr	r1, [r4, #28]
9000be8c:	f7f7 fd5a 	bl	90003944 <HAL_JPEG_DataReadyCallback>
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
9000be90:	6822      	ldr	r2, [r4, #0]
          hjpeg->JpegOutCount = 0;
9000be92:	6265      	str	r5, [r4, #36]	; 0x24
9000be94:	e7d6      	b.n	9000be44 <JPEG_DMA_PollResidualData+0x4c>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000be96:	f7f7 fdab 	bl	900039f0 <HAL_JPEG_DecodeCpltCallback>
}
9000be9a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000be9c:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000be9e:	4620      	mov	r0, r4
9000bea0:	69e1      	ldr	r1, [r4, #28]
9000bea2:	f7f7 fd4f 	bl	90003944 <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000bea6:	2300      	movs	r3, #0
9000bea8:	6263      	str	r3, [r4, #36]	; 0x24
9000beaa:	e7d9      	b.n	9000be60 <JPEG_DMA_PollResidualData+0x68>

9000beac <HAL_JPEG_Resume>:
  if ((hjpeg->Context & (JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT)) == 0UL)
9000beac:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000beae:	f413 5f40 	tst.w	r3, #12288	; 0x3000
9000beb2:	d028      	beq.n	9000bf06 <HAL_JPEG_Resume+0x5a>
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000beb4:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000beb6:	f003 030c 	and.w	r3, r3, #12
9000beba:	2b0c      	cmp	r3, #12
{
9000bebc:	b570      	push	{r4, r5, r6, lr}
9000bebe:	4604      	mov	r4, r0
9000bec0:	b082      	sub	sp, #8
9000bec2:	460d      	mov	r5, r1
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000bec4:	d007      	beq.n	9000bed6 <HAL_JPEG_Resume+0x2a>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000bec6:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000bec8:	f003 030c 	and.w	r3, r3, #12
9000becc:	2b08      	cmp	r3, #8
9000bece:	d037      	beq.n	9000bf40 <HAL_JPEG_Resume+0x94>
  return HAL_OK;
9000bed0:	2000      	movs	r0, #0
}
9000bed2:	b002      	add	sp, #8
9000bed4:	bd70      	pop	{r4, r5, r6, pc}
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
9000bed6:	07c8      	lsls	r0, r1, #31
9000bed8:	d417      	bmi.n	9000bf0a <HAL_JPEG_Resume+0x5e>
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
9000beda:	07a9      	lsls	r1, r5, #30
9000bedc:	d5f8      	bpl.n	9000bed0 <HAL_JPEG_Resume+0x24>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
9000bede:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000bee0:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
9000bee4:	6563      	str	r3, [r4, #84]	; 0x54
      if ((hjpeg->Context & JPEG_CONTEXT_ENDING_DMA) != 0UL)
9000bee6:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000bee8:	041a      	lsls	r2, r3, #16
9000beea:	d453      	bmi.n	9000bf94 <HAL_JPEG_Resume+0xe8>
        xfrSize = hjpeg->hdmaout->Init.BufferTransferLength;
9000beec:	6b60      	ldr	r0, [r4, #52]	; 0x34
9000beee:	6a82      	ldr	r2, [r0, #40]	; 0x28
        if (xfrSize == 0UL)
9000bef0:	2a00      	cmp	r2, #0
9000bef2:	d13e      	bne.n	9000bf72 <HAL_JPEG_Resume+0xc6>
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000bef4:	6d23      	ldr	r3, [r4, #80]	; 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
9000bef6:	2206      	movs	r2, #6
          return HAL_ERROR;
9000bef8:	2001      	movs	r0, #1
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000befa:	f043 0304 	orr.w	r3, r3, #4
9000befe:	6523      	str	r3, [r4, #80]	; 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
9000bf00:	f884 204d 	strb.w	r2, [r4, #77]	; 0x4d
          return HAL_ERROR;
9000bf04:	e7e5      	b.n	9000bed2 <HAL_JPEG_Resume+0x26>
    return HAL_ERROR;
9000bf06:	2001      	movs	r0, #1
}
9000bf08:	4770      	bx	lr
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000bf0a:	6d63      	ldr	r3, [r4, #84]	; 0x54
      xfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000bf0c:	6b20      	ldr	r0, [r4, #48]	; 0x30
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000bf0e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
      xfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000bf12:	6a82      	ldr	r2, [r0, #40]	; 0x28
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000bf14:	6563      	str	r3, [r4, #84]	; 0x54
      if (xfrSize == 0UL)
9000bf16:	2a00      	cmp	r2, #0
9000bf18:	d0ec      	beq.n	9000bef4 <HAL_JPEG_Resume+0x48>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % xfrSize);
9000bf1a:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000bf1c:	fbb3 f1f2 	udiv	r1, r3, r2
9000bf20:	fb02 3211 	mls	r2, r2, r1, r3
9000bf24:	1a9b      	subs	r3, r3, r2
9000bf26:	62a3      	str	r3, [r4, #40]	; 0x28
      if (hjpeg->InDataLength > 0UL)
9000bf28:	2b00      	cmp	r3, #0
9000bf2a:	d0d6      	beq.n	9000beda <HAL_JPEG_Resume+0x2e>
        if (HAL_MDMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
9000bf2c:	6822      	ldr	r2, [r4, #0]
9000bf2e:	2601      	movs	r6, #1
9000bf30:	3240      	adds	r2, #64	; 0x40
9000bf32:	9600      	str	r6, [sp, #0]
9000bf34:	69a1      	ldr	r1, [r4, #24]
9000bf36:	f000 fffb 	bl	9000cf30 <HAL_MDMA_Start_IT>
9000bf3a:	2800      	cmp	r0, #0
9000bf3c:	d0cd      	beq.n	9000beda <HAL_JPEG_Resume+0x2e>
9000bf3e:	e7d9      	b.n	9000bef4 <HAL_JPEG_Resume+0x48>
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
9000bf40:	f011 0101 	ands.w	r1, r1, #1
9000bf44:	d013      	beq.n	9000bf6e <HAL_JPEG_Resume+0xc2>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000bf46:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000bf48:	222e      	movs	r2, #46	; 0x2e
      mask |= (JPEG_IT_IFT | JPEG_IT_IFNF);
9000bf4a:	2106      	movs	r1, #6
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000bf4c:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
9000bf50:	6543      	str	r3, [r0, #84]	; 0x54
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
9000bf52:	07ab      	lsls	r3, r5, #30
9000bf54:	d504      	bpl.n	9000bf60 <HAL_JPEG_Resume+0xb4>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
9000bf56:	6d63      	ldr	r3, [r4, #84]	; 0x54
      mask |= (JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC);
9000bf58:	4611      	mov	r1, r2
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
9000bf5a:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
9000bf5e:	6563      	str	r3, [r4, #84]	; 0x54
    __HAL_JPEG_ENABLE_IT(hjpeg, mask);
9000bf60:	6822      	ldr	r2, [r4, #0]
  return HAL_OK;
9000bf62:	2000      	movs	r0, #0
    __HAL_JPEG_ENABLE_IT(hjpeg, mask);
9000bf64:	6b13      	ldr	r3, [r2, #48]	; 0x30
9000bf66:	430b      	orrs	r3, r1
9000bf68:	6313      	str	r3, [r2, #48]	; 0x30
}
9000bf6a:	b002      	add	sp, #8
9000bf6c:	bd70      	pop	{r4, r5, r6, pc}
9000bf6e:	2228      	movs	r2, #40	; 0x28
9000bf70:	e7ef      	b.n	9000bf52 <HAL_JPEG_Resume+0xa6>
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
9000bf72:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000bf74:	2501      	movs	r5, #1
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
9000bf76:	fbb3 f1f2 	udiv	r1, r3, r2
9000bf7a:	fb02 3211 	mls	r2, r2, r1, r3
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000bf7e:	6821      	ldr	r1, [r4, #0]
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
9000bf80:	1a9b      	subs	r3, r3, r2
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000bf82:	3144      	adds	r1, #68	; 0x44
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
9000bf84:	62e3      	str	r3, [r4, #44]	; 0x2c
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000bf86:	9500      	str	r5, [sp, #0]
9000bf88:	69e2      	ldr	r2, [r4, #28]
9000bf8a:	f000 ffd1 	bl	9000cf30 <HAL_MDMA_Start_IT>
9000bf8e:	2800      	cmp	r0, #0
9000bf90:	d09e      	beq.n	9000bed0 <HAL_JPEG_Resume+0x24>
9000bf92:	e7af      	b.n	9000bef4 <HAL_JPEG_Resume+0x48>
        JPEG_DMA_PollResidualData(hjpeg);
9000bf94:	4620      	mov	r0, r4
9000bf96:	f7ff ff2f 	bl	9000bdf8 <JPEG_DMA_PollResidualData>
9000bf9a:	e799      	b.n	9000bed0 <HAL_JPEG_Resume+0x24>

9000bf9c <JPEG_MDMAOutCpltCallback>:
{
9000bf9c:	b530      	push	{r4, r5, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
9000bf9e:	6c04      	ldr	r4, [r0, #64]	; 0x40
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) ==
9000bfa0:	f248 010c 	movw	r1, #32780	; 0x800c
{
9000bfa4:	b083      	sub	sp, #12
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000bfa6:	6823      	ldr	r3, [r4, #0]
9000bfa8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000bfaa:	f022 027e 	bic.w	r2, r2, #126	; 0x7e
9000bfae:	631a      	str	r2, [r3, #48]	; 0x30
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) ==
9000bfb0:	6d62      	ldr	r2, [r4, #84]	; 0x54
9000bfb2:	400a      	ands	r2, r1
9000bfb4:	2a0c      	cmp	r2, #12
9000bfb6:	d001      	beq.n	9000bfbc <JPEG_MDMAOutCpltCallback+0x20>
}
9000bfb8:	b003      	add	sp, #12
9000bfba:	bd30      	pop	{r4, r5, pc}
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF) == 0UL)
9000bfbc:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000bfbe:	0692      	lsls	r2, r2, #26
9000bfc0:	d505      	bpl.n	9000bfce <JPEG_MDMAOutCpltCallback+0x32>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
9000bfc2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000bfc4:	f042 0260 	orr.w	r2, r2, #96	; 0x60
9000bfc8:	631a      	str	r2, [r3, #48]	; 0x30
}
9000bfca:	b003      	add	sp, #12
9000bfcc:	bd30      	pop	{r4, r5, pc}
      hjpeg->JpegOutCount = hjpeg->OutDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000bfce:	6802      	ldr	r2, [r0, #0]
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000bfd0:	4620      	mov	r0, r4
      hjpeg->JpegOutCount = hjpeg->OutDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000bfd2:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000bfd4:	6952      	ldr	r2, [r2, #20]
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000bfd6:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount = hjpeg->OutDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000bfd8:	f3c2 0210 	ubfx	r2, r2, #0, #17
9000bfdc:	1a9b      	subs	r3, r3, r2
9000bfde:	6263      	str	r3, [r4, #36]	; 0x24
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000bfe0:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000bfe2:	f7f7 fcaf 	bl	90003944 <HAL_JPEG_DataReadyCallback>
      if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000bfe6:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000bfe8:	049b      	lsls	r3, r3, #18
9000bfea:	d501      	bpl.n	9000bff0 <JPEG_MDMAOutCpltCallback+0x54>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
9000bfec:	6823      	ldr	r3, [r4, #0]
9000bfee:	e7e8      	b.n	9000bfc2 <JPEG_MDMAOutCpltCallback+0x26>
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000bff0:	6821      	ldr	r1, [r4, #0]
9000bff2:	2501      	movs	r5, #1
9000bff4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000bff6:	69e2      	ldr	r2, [r4, #28]
9000bff8:	3144      	adds	r1, #68	; 0x44
9000bffa:	6b60      	ldr	r0, [r4, #52]	; 0x34
9000bffc:	9500      	str	r5, [sp, #0]
9000bffe:	f000 ff97 	bl	9000cf30 <HAL_MDMA_Start_IT>
9000c002:	2800      	cmp	r0, #0
9000c004:	d0f2      	beq.n	9000bfec <JPEG_MDMAOutCpltCallback+0x50>
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000c006:	6d23      	ldr	r3, [r4, #80]	; 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
9000c008:	2206      	movs	r2, #6
          HAL_JPEG_ErrorCallback(hjpeg);
9000c00a:	4620      	mov	r0, r4
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000c00c:	f043 0304 	orr.w	r3, r3, #4
9000c010:	6523      	str	r3, [r4, #80]	; 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
9000c012:	f884 204d 	strb.w	r2, [r4, #77]	; 0x4d
          HAL_JPEG_ErrorCallback(hjpeg);
9000c016:	f7f7 fce9 	bl	900039ec <HAL_JPEG_ErrorCallback>
          return;
9000c01a:	e7cd      	b.n	9000bfb8 <JPEG_MDMAOutCpltCallback+0x1c>

9000c01c <JPEG_MDMAOutAbortCallback>:
{
9000c01c:	b538      	push	{r3, r4, r5, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
9000c01e:	6c04      	ldr	r4, [r0, #64]	; 0x40
  if ((hjpeg->Context & JPEG_CONTEXT_ENDING_DMA) != 0UL)
9000c020:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000c022:	041a      	lsls	r2, r3, #16
9000c024:	d400      	bmi.n	9000c028 <JPEG_MDMAOutAbortCallback+0xc>
}
9000c026:	bd38      	pop	{r3, r4, r5, pc}
  hjpeg->JpegOutCount = hjpeg->OutDataLength - (hjpeg->hdmaout->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000c028:	6b63      	ldr	r3, [r4, #52]	; 0x34
9000c02a:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000c02c:	681b      	ldr	r3, [r3, #0]
9000c02e:	695b      	ldr	r3, [r3, #20]
9000c030:	f3c3 0310 	ubfx	r3, r3, #0, #17
9000c034:	1ad3      	subs	r3, r2, r3
9000c036:	6263      	str	r3, [r4, #36]	; 0x24
  if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
9000c038:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000c03a:	429a      	cmp	r2, r3
9000c03c:	d025      	beq.n	9000c08a <JPEG_MDMAOutAbortCallback+0x6e>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL)
9000c03e:	6822      	ldr	r2, [r4, #0]
9000c040:	6b55      	ldr	r5, [r2, #52]	; 0x34
9000c042:	f015 0510 	ands.w	r5, r5, #16
9000c046:	d118      	bne.n	9000c07a <JPEG_MDMAOutAbortCallback+0x5e>
    if (hjpeg->JpegOutCount > 0UL)
9000c048:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000c04a:	bb4b      	cbnz	r3, 9000c0a0 <JPEG_MDMAOutAbortCallback+0x84>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000c04c:	6813      	ldr	r3, [r2, #0]
    __HAL_UNLOCK(hjpeg);
9000c04e:	2000      	movs	r0, #0
    hjpeg->State = HAL_JPEG_STATE_READY;
9000c050:	2101      	movs	r1, #1
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000c052:	f023 0301 	bic.w	r3, r3, #1
9000c056:	6013      	str	r3, [r2, #0]
    tmpContext = hjpeg->Context;
9000c058:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000c05a:	6d62      	ldr	r2, [r4, #84]	; 0x54
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000c05c:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
9000c060:	f884 004c 	strb.w	r0, [r4, #76]	; 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000c064:	f402 4282 	and.w	r2, r2, #16640	; 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000c068:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000c06a:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000c06c:	6562      	str	r2, [r4, #84]	; 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000c06e:	f884 104d 	strb.w	r1, [r4, #77]	; 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000c072:	d012      	beq.n	9000c09a <JPEG_MDMAOutAbortCallback+0x7e>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
9000c074:	f7ff fe54 	bl	9000bd20 <HAL_JPEG_EncodeCpltCallback>
}
9000c078:	bd38      	pop	{r3, r4, r5, pc}
  else if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000c07a:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000c07c:	049b      	lsls	r3, r3, #18
9000c07e:	d4d2      	bmi.n	9000c026 <JPEG_MDMAOutAbortCallback+0xa>
    JPEG_DMA_PollResidualData(hjpeg);
9000c080:	4620      	mov	r0, r4
}
9000c082:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    JPEG_DMA_PollResidualData(hjpeg);
9000c086:	f7ff beb7 	b.w	9000bdf8 <JPEG_DMA_PollResidualData>
    HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000c08a:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000c08c:	4620      	mov	r0, r4
9000c08e:	69e1      	ldr	r1, [r4, #28]
9000c090:	f7f7 fc58 	bl	90003944 <HAL_JPEG_DataReadyCallback>
    hjpeg->JpegOutCount = 0;
9000c094:	2300      	movs	r3, #0
9000c096:	6263      	str	r3, [r4, #36]	; 0x24
9000c098:	e7d1      	b.n	9000c03e <JPEG_MDMAOutAbortCallback+0x22>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000c09a:	f7f7 fca9 	bl	900039f0 <HAL_JPEG_DecodeCpltCallback>
}
9000c09e:	bd38      	pop	{r3, r4, r5, pc}
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000c0a0:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000c0a2:	4620      	mov	r0, r4
9000c0a4:	69e1      	ldr	r1, [r4, #28]
9000c0a6:	f7f7 fc4d 	bl	90003944 <HAL_JPEG_DataReadyCallback>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000c0aa:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000c0ac:	6265      	str	r5, [r4, #36]	; 0x24
9000c0ae:	e7cd      	b.n	9000c04c <JPEG_MDMAOutAbortCallback+0x30>

9000c0b0 <JPEG_Process>:
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000c0b0:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000c0b2:	f003 0303 	and.w	r3, r3, #3
9000c0b6:	2b02      	cmp	r3, #2
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
9000c0b8:	6803      	ldr	r3, [r0, #0]
{
9000c0ba:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000c0be:	4604      	mov	r4, r0
9000c0c0:	b082      	sub	sp, #8
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000c0c2:	d01f      	beq.n	9000c104 <JPEG_Process+0x54>
  if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL)
9000c0c4:	6d62      	ldr	r2, [r4, #84]	; 0x54
9000c0c6:	04d7      	lsls	r7, r2, #19
9000c0c8:	d407      	bmi.n	9000c0da <JPEG_Process+0x2a>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_IFTF) != 0UL)
9000c0ca:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000c0cc:	0796      	lsls	r6, r2, #30
9000c0ce:	f100 811d 	bmi.w	9000c30c <JPEG_Process+0x25c>
    else if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_IFNFF) != 0UL)
9000c0d2:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000c0d4:	0750      	lsls	r0, r2, #29
9000c0d6:	f100 81b1 	bmi.w	9000c43c <JPEG_Process+0x38c>
  if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000c0da:	6d65      	ldr	r5, [r4, #84]	; 0x54
9000c0dc:	f415 5500 	ands.w	r5, r5, #8192	; 0x2000
9000c0e0:	d107      	bne.n	9000c0f2 <JPEG_Process+0x42>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFTF) != 0UL)
9000c0e2:	6b5e      	ldr	r6, [r3, #52]	; 0x34
9000c0e4:	f016 0608 	ands.w	r6, r6, #8
9000c0e8:	d14c      	bne.n	9000c184 <JPEG_Process+0xd4>
    else if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
9000c0ea:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000c0ec:	06d2      	lsls	r2, r2, #27
9000c0ee:	f100 81e3 	bmi.w	9000c4b8 <JPEG_Process+0x408>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000c0f2:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000c0f4:	f002 0238 	and.w	r2, r2, #56	; 0x38
9000c0f8:	2a20      	cmp	r2, #32
9000c0fa:	d01a      	beq.n	9000c132 <JPEG_Process+0x82>
  return JPEG_PROCESS_ONGOING;
9000c0fc:	2000      	movs	r0, #0
}
9000c0fe:	b002      	add	sp, #8
9000c100:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
9000c104:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000c106:	0652      	lsls	r2, r2, #25
9000c108:	d5dc      	bpl.n	9000c0c4 <JPEG_Process+0x14>
      (void) HAL_JPEG_GetInfo(hjpeg, &hjpeg->Conf);
9000c10a:	1d01      	adds	r1, r0, #4
  if ((hjpeg == NULL) || (pInfo == NULL))
9000c10c:	9101      	str	r1, [sp, #4]
9000c10e:	f7ff fb79 	bl	9000b804 <HAL_JPEG_GetInfo.part.0>
      hjpeg->Conf.ImageQuality = 0;
9000c112:	2300      	movs	r3, #0
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
9000c114:	9901      	ldr	r1, [sp, #4]
9000c116:	4620      	mov	r0, r4
      hjpeg->Conf.ImageQuality = 0;
9000c118:	6163      	str	r3, [r4, #20]
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
9000c11a:	f7f7 fbbd 	bl	90003898 <HAL_JPEG_InfoReadyCallback>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_IT_HPD);
9000c11e:	6823      	ldr	r3, [r4, #0]
9000c120:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000c122:	f022 0240 	bic.w	r2, r2, #64	; 0x40
9000c126:	631a      	str	r2, [r3, #48]	; 0x30
      __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_HPDF);
9000c128:	6b9a      	ldr	r2, [r3, #56]	; 0x38
9000c12a:	f042 0240 	orr.w	r2, r2, #64	; 0x40
9000c12e:	639a      	str	r2, [r3, #56]	; 0x38
9000c130:	e7c8      	b.n	9000c0c4 <JPEG_Process+0x14>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000c132:	681a      	ldr	r2, [r3, #0]
9000c134:	f022 0201 	bic.w	r2, r2, #1
9000c138:	601a      	str	r2, [r3, #0]
    if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000c13a:	6d62      	ldr	r2, [r4, #84]	; 0x54
9000c13c:	f002 020c 	and.w	r2, r2, #12
9000c140:	2a08      	cmp	r2, #8
9000c142:	f000 81e6 	beq.w	9000c512 <JPEG_Process+0x462>
    __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
9000c146:	6b9a      	ldr	r2, [r3, #56]	; 0x38
9000c148:	f042 0260 	orr.w	r2, r2, #96	; 0x60
9000c14c:	639a      	str	r2, [r3, #56]	; 0x38
    if (hjpeg->JpegOutCount > 0UL)
9000c14e:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000c150:	2b00      	cmp	r3, #0
9000c152:	f040 81e3 	bne.w	9000c51c <JPEG_Process+0x46c>
    tmpContext = hjpeg->Context;
9000c156:	6d63      	ldr	r3, [r4, #84]	; 0x54
    __HAL_UNLOCK(hjpeg);
9000c158:	2100      	movs	r1, #0
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000c15a:	6d62      	ldr	r2, [r4, #84]	; 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000c15c:	2501      	movs	r5, #1
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000c15e:	f003 0303 	and.w	r3, r3, #3
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000c162:	4620      	mov	r0, r4
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000c164:	f402 4282 	and.w	r2, r2, #16640	; 0x4100
    __HAL_UNLOCK(hjpeg);
9000c168:	f884 104c 	strb.w	r1, [r4, #76]	; 0x4c
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000c16c:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000c16e:	6562      	str	r2, [r4, #84]	; 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000c170:	f884 504d 	strb.w	r5, [r4, #77]	; 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000c174:	f000 81c9 	beq.w	9000c50a <JPEG_Process+0x45a>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
9000c178:	f7ff fdd2 	bl	9000bd20 <HAL_JPEG_EncodeCpltCallback>
    return JPEG_PROCESS_DONE;
9000c17c:	4628      	mov	r0, r5
}
9000c17e:	b002      	add	sp, #8
9000c180:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (hjpeg->OutDataLength >= (hjpeg->JpegOutCount + (nbOutputWords * 4UL)))
9000c184:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000c186:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
9000c188:	3220      	adds	r2, #32
9000c18a:	4296      	cmp	r6, r2
9000c18c:	f0c0 81e4 	bcc.w	9000c558 <JPEG_Process+0x4a8>
      dataword = hjpeg->Instance->DOR;
9000c190:	6c5b      	ldr	r3, [r3, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000c192:	69e1      	ldr	r1, [r4, #28]
9000c194:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000c196:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000c198:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000c19a:	69e2      	ldr	r2, [r4, #28]
9000c19c:	440a      	add	r2, r1
9000c19e:	0a19      	lsrs	r1, r3, #8
9000c1a0:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000c1a2:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000c1a4:	69e2      	ldr	r2, [r4, #28]
9000c1a6:	440a      	add	r2, r1
9000c1a8:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000c1aa:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000c1ac:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000c1ae:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000c1b0:	69e2      	ldr	r2, [r4, #28]
9000c1b2:	440a      	add	r2, r1
9000c1b4:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000c1b6:	6a63      	ldr	r3, [r4, #36]	; 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000c1b8:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000c1ba:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000c1bc:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
9000c1be:	6263      	str	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000c1c0:	6c53      	ldr	r3, [r2, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000c1c2:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000c1c4:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000c1c6:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000c1c8:	69e2      	ldr	r2, [r4, #28]
9000c1ca:	440a      	add	r2, r1
9000c1cc:	0a19      	lsrs	r1, r3, #8
9000c1ce:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000c1d0:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000c1d2:	69e2      	ldr	r2, [r4, #28]
9000c1d4:	440a      	add	r2, r1
9000c1d6:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000c1d8:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000c1da:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000c1dc:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000c1de:	69e2      	ldr	r2, [r4, #28]
9000c1e0:	440a      	add	r2, r1
9000c1e2:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000c1e4:	6a63      	ldr	r3, [r4, #36]	; 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000c1e6:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000c1e8:	3304      	adds	r3, #4
9000c1ea:	6263      	str	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000c1ec:	6c53      	ldr	r3, [r2, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000c1ee:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000c1f0:	69e1      	ldr	r1, [r4, #28]
9000c1f2:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000c1f4:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000c1f6:	69e2      	ldr	r2, [r4, #28]
9000c1f8:	440a      	add	r2, r1
9000c1fa:	0a19      	lsrs	r1, r3, #8
9000c1fc:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000c1fe:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000c200:	69e2      	ldr	r2, [r4, #28]
9000c202:	440a      	add	r2, r1
9000c204:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000c206:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000c208:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000c20a:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000c20c:	69e2      	ldr	r2, [r4, #28]
9000c20e:	440a      	add	r2, r1
9000c210:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000c212:	6a63      	ldr	r3, [r4, #36]	; 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000c214:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000c216:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000c218:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
9000c21a:	6263      	str	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000c21c:	6c53      	ldr	r3, [r2, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000c21e:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000c220:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000c222:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000c224:	69e2      	ldr	r2, [r4, #28]
9000c226:	440a      	add	r2, r1
9000c228:	0a19      	lsrs	r1, r3, #8
9000c22a:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000c22c:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000c22e:	69e2      	ldr	r2, [r4, #28]
9000c230:	440a      	add	r2, r1
9000c232:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000c234:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000c236:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000c238:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000c23a:	69e2      	ldr	r2, [r4, #28]
9000c23c:	440a      	add	r2, r1
9000c23e:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000c240:	6a63      	ldr	r3, [r4, #36]	; 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000c242:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000c244:	3304      	adds	r3, #4
9000c246:	6263      	str	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000c248:	6c53      	ldr	r3, [r2, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000c24a:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000c24c:	69e1      	ldr	r1, [r4, #28]
9000c24e:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000c250:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000c252:	69e2      	ldr	r2, [r4, #28]
9000c254:	440a      	add	r2, r1
9000c256:	0a19      	lsrs	r1, r3, #8
9000c258:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000c25a:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000c25c:	69e2      	ldr	r2, [r4, #28]
9000c25e:	440a      	add	r2, r1
9000c260:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000c262:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000c264:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000c266:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000c268:	69e2      	ldr	r2, [r4, #28]
9000c26a:	440a      	add	r2, r1
9000c26c:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000c26e:	6a63      	ldr	r3, [r4, #36]	; 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000c270:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000c272:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000c274:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
9000c276:	6263      	str	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000c278:	6c53      	ldr	r3, [r2, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000c27a:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000c27c:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000c27e:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000c280:	69e2      	ldr	r2, [r4, #28]
9000c282:	440a      	add	r2, r1
9000c284:	0a19      	lsrs	r1, r3, #8
9000c286:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000c288:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000c28a:	69e2      	ldr	r2, [r4, #28]
9000c28c:	440a      	add	r2, r1
9000c28e:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000c290:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000c292:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000c294:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000c296:	69e2      	ldr	r2, [r4, #28]
9000c298:	440a      	add	r2, r1
9000c29a:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000c29c:	6a63      	ldr	r3, [r4, #36]	; 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000c29e:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000c2a0:	3304      	adds	r3, #4
9000c2a2:	6263      	str	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000c2a4:	6c53      	ldr	r3, [r2, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000c2a6:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000c2a8:	69e1      	ldr	r1, [r4, #28]
9000c2aa:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000c2ac:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000c2ae:	69e2      	ldr	r2, [r4, #28]
9000c2b0:	440a      	add	r2, r1
9000c2b2:	0a19      	lsrs	r1, r3, #8
9000c2b4:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000c2b6:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000c2b8:	69e2      	ldr	r2, [r4, #28]
9000c2ba:	440a      	add	r2, r1
9000c2bc:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000c2be:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000c2c0:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000c2c2:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000c2c4:	69e2      	ldr	r2, [r4, #28]
9000c2c6:	440a      	add	r2, r1
9000c2c8:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000c2ca:	6a63      	ldr	r3, [r4, #36]	; 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000c2cc:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000c2ce:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000c2d0:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
9000c2d2:	6263      	str	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000c2d4:	6c53      	ldr	r3, [r2, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000c2d6:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000c2d8:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000c2da:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000c2dc:	69e2      	ldr	r2, [r4, #28]
9000c2de:	440a      	add	r2, r1
9000c2e0:	0a19      	lsrs	r1, r3, #8
9000c2e2:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000c2e4:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000c2e6:	69e2      	ldr	r2, [r4, #28]
9000c2e8:	440a      	add	r2, r1
9000c2ea:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000c2ec:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000c2ee:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000c2f0:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000c2f2:	69e2      	ldr	r2, [r4, #28]
9000c2f4:	440a      	add	r2, r1
9000c2f6:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000c2f8:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000c2fa:	3304      	adds	r3, #4
9000c2fc:	6263      	str	r3, [r4, #36]	; 0x24
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000c2fe:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000c300:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000c302:	429a      	cmp	r2, r3
9000c304:	f000 82ae 	beq.w	9000c864 <JPEG_Process+0x7b4>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000c308:	6823      	ldr	r3, [r4, #0]
9000c30a:	e6f2      	b.n	9000c0f2 <JPEG_Process+0x42>
  if ((hjpeg->InDataLength == 0UL) || (nbRequestWords == 0UL))
9000c30c:	6aa2      	ldr	r2, [r4, #40]	; 0x28
9000c30e:	2a00      	cmp	r2, #0
9000c310:	f000 810c 	beq.w	9000c52c <JPEG_Process+0x47c>
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
9000c314:	6a21      	ldr	r1, [r4, #32]
9000c316:	428a      	cmp	r2, r1
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
9000c318:	6a21      	ldr	r1, [r4, #32]
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
9000c31a:	f240 81a4 	bls.w	9000c666 <JPEG_Process+0x5b6>
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
9000c31e:	1a52      	subs	r2, r2, r1
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000c320:	6d61      	ldr	r1, [r4, #84]	; 0x54
9000c322:	04cd      	lsls	r5, r1, #19
9000c324:	f53f aed9 	bmi.w	9000c0da <JPEG_Process+0x2a>
9000c328:	2a00      	cmp	r2, #0
9000c32a:	f43f aed6 	beq.w	9000c0da <JPEG_Process+0x2a>
    if (nb_words >= nbRequestWords)
9000c32e:	2a1f      	cmp	r2, #31
    nb_words = nb_bytes / 4UL;
9000c330:	ea4f 0192 	mov.w	r1, r2, lsr #2
    if (nb_words >= nbRequestWords)
9000c334:	f240 8203 	bls.w	9000c73e <JPEG_Process+0x68e>
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000c338:	69a2      	ldr	r2, [r4, #24]
        input_count = hjpeg->JpegInCount;
9000c33a:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000c33c:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000c33e:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000c340:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000c342:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000c344:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000c346:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000c348:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000c34c:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000c34e:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000c352:	6419      	str	r1, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
9000c354:	6a21      	ldr	r1, [r4, #32]
9000c356:	3104      	adds	r1, #4
9000c358:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000c35a:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000c35c:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000c35e:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000c360:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000c362:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000c364:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000c366:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000c368:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000c36c:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000c36e:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000c372:	6419      	str	r1, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
9000c374:	6a21      	ldr	r1, [r4, #32]
9000c376:	3104      	adds	r1, #4
9000c378:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000c37a:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000c37c:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000c37e:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000c380:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000c382:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000c384:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000c386:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000c388:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000c38c:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000c38e:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000c392:	6419      	str	r1, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
9000c394:	6a21      	ldr	r1, [r4, #32]
9000c396:	3104      	adds	r1, #4
9000c398:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000c39a:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000c39c:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000c39e:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000c3a0:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000c3a2:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000c3a4:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000c3a6:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000c3a8:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000c3ac:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000c3ae:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000c3b2:	6419      	str	r1, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
9000c3b4:	6a21      	ldr	r1, [r4, #32]
9000c3b6:	3104      	adds	r1, #4
9000c3b8:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000c3ba:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000c3bc:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000c3be:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000c3c0:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000c3c2:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000c3c4:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000c3c6:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000c3c8:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000c3cc:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000c3ce:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000c3d2:	6419      	str	r1, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
9000c3d4:	6a21      	ldr	r1, [r4, #32]
9000c3d6:	3104      	adds	r1, #4
9000c3d8:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000c3da:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000c3dc:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000c3de:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000c3e0:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000c3e2:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000c3e4:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000c3e6:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000c3e8:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000c3ec:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000c3ee:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000c3f2:	6419      	str	r1, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
9000c3f4:	6a21      	ldr	r1, [r4, #32]
9000c3f6:	3104      	adds	r1, #4
9000c3f8:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000c3fa:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000c3fc:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000c3fe:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000c400:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000c402:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000c404:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000c406:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000c408:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000c40c:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000c40e:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000c412:	6419      	str	r1, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
9000c414:	6a21      	ldr	r1, [r4, #32]
9000c416:	3104      	adds	r1, #4
9000c418:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000c41a:	6a20      	ldr	r0, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000c41c:	1881      	adds	r1, r0, r2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000c41e:	5c85      	ldrb	r5, [r0, r2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000c420:	788a      	ldrb	r2, [r1, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000c422:	78c8      	ldrb	r0, [r1, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000c424:	0412      	lsls	r2, r2, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000c426:	7849      	ldrb	r1, [r1, #1]
9000c428:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
9000c42c:	432a      	orrs	r2, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000c42e:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000c432:	641a      	str	r2, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
9000c434:	6a22      	ldr	r2, [r4, #32]
9000c436:	3204      	adds	r2, #4
9000c438:	6222      	str	r2, [r4, #32]
      for (index = 0; index < nbRequestWords; index++)
9000c43a:	e64e      	b.n	9000c0da <JPEG_Process+0x2a>
  if ((hjpeg->InDataLength == 0UL) || (nbRequestWords == 0UL))
9000c43c:	6aa2      	ldr	r2, [r4, #40]	; 0x28
9000c43e:	2a00      	cmp	r2, #0
9000c440:	d074      	beq.n	9000c52c <JPEG_Process+0x47c>
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
9000c442:	6a21      	ldr	r1, [r4, #32]
9000c444:	428a      	cmp	r2, r1
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
9000c446:	6a21      	ldr	r1, [r4, #32]
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
9000c448:	f200 8164 	bhi.w	9000c714 <JPEG_Process+0x664>
  else if (hjpeg->InDataLength == hjpeg->JpegInCount)
9000c44c:	428a      	cmp	r2, r1
9000c44e:	f040 810c 	bne.w	9000c66a <JPEG_Process+0x5ba>
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
9000c452:	6a21      	ldr	r1, [r4, #32]
9000c454:	4620      	mov	r0, r4
9000c456:	f7f7 fa55 	bl	90003904 <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength > 4UL)
9000c45a:	6aa2      	ldr	r2, [r4, #40]	; 0x28
9000c45c:	2a04      	cmp	r2, #4
9000c45e:	d902      	bls.n	9000c466 <JPEG_Process+0x3b6>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % 4UL);
9000c460:	f022 0203 	bic.w	r2, r2, #3
9000c464:	62a2      	str	r2, [r4, #40]	; 0x28
    hjpeg->JpegInCount = 0;
9000c466:	2100      	movs	r1, #0
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000c468:	6823      	ldr	r3, [r4, #0]
    hjpeg->JpegInCount = 0;
9000c46a:	6221      	str	r1, [r4, #32]
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000c46c:	6d61      	ldr	r1, [r4, #84]	; 0x54
9000c46e:	04c9      	lsls	r1, r1, #19
9000c470:	f53f ae33 	bmi.w	9000c0da <JPEG_Process+0x2a>
9000c474:	2a00      	cmp	r2, #0
9000c476:	f43f ae30 	beq.w	9000c0da <JPEG_Process+0x2a>
    if (nb_words >= nbRequestWords)
9000c47a:	0891      	lsrs	r1, r2, #2
9000c47c:	f040 8203 	bne.w	9000c886 <JPEG_Process+0x7d6>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000c480:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000c482:	2a01      	cmp	r2, #1
          hjpeg->JpegInCount++;
9000c484:	6a21      	ldr	r1, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000c486:	69a5      	ldr	r5, [r4, #24]
          hjpeg->JpegInCount++;
9000c488:	f101 0101 	add.w	r1, r1, #1
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000c48c:	5c28      	ldrb	r0, [r5, r0]
          hjpeg->JpegInCount++;
9000c48e:	6221      	str	r1, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000c490:	d010      	beq.n	9000c4b4 <JPEG_Process+0x404>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000c492:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000c494:	2a03      	cmp	r2, #3
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000c496:	5c69      	ldrb	r1, [r5, r1]
9000c498:	ea40 2001 	orr.w	r0, r0, r1, lsl #8
          hjpeg->JpegInCount++;
9000c49c:	6a21      	ldr	r1, [r4, #32]
9000c49e:	f101 0101 	add.w	r1, r1, #1
9000c4a2:	6221      	str	r1, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000c4a4:	d106      	bne.n	9000c4b4 <JPEG_Process+0x404>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000c4a6:	6a22      	ldr	r2, [r4, #32]
9000c4a8:	5ca9      	ldrb	r1, [r5, r2]
          hjpeg->JpegInCount++;
9000c4aa:	6a22      	ldr	r2, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000c4ac:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
          hjpeg->JpegInCount++;
9000c4b0:	3201      	adds	r2, #1
9000c4b2:	6222      	str	r2, [r4, #32]
        hjpeg->Instance->DIR = dataword;
9000c4b4:	6418      	str	r0, [r3, #64]	; 0x40
9000c4b6:	e610      	b.n	9000c0da <JPEG_Process+0x2a>
  if (hjpeg->OutDataLength >= (hjpeg->JpegOutCount + (nbOutputWords * 4UL)))
9000c4b8:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000c4ba:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
9000c4bc:	3204      	adds	r2, #4
9000c4be:	4295      	cmp	r5, r2
9000c4c0:	f0c0 80d5 	bcc.w	9000c66e <JPEG_Process+0x5be>
      dataword = hjpeg->Instance->DOR;
9000c4c4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000c4c6:	69e1      	ldr	r1, [r4, #28]
9000c4c8:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000c4ca:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000c4cc:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000c4ce:	69e2      	ldr	r2, [r4, #28]
9000c4d0:	440a      	add	r2, r1
9000c4d2:	0a19      	lsrs	r1, r3, #8
9000c4d4:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000c4d6:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000c4d8:	69e2      	ldr	r2, [r4, #28]
9000c4da:	440a      	add	r2, r1
9000c4dc:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000c4de:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000c4e0:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000c4e2:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000c4e4:	69e2      	ldr	r2, [r4, #28]
9000c4e6:	440a      	add	r2, r1
9000c4e8:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000c4ea:	6a63      	ldr	r3, [r4, #36]	; 0x24
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000c4ec:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
      hjpeg->JpegOutCount += 4UL;
9000c4ee:	3304      	adds	r3, #4
9000c4f0:	6263      	str	r3, [r4, #36]	; 0x24
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000c4f2:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000c4f4:	429a      	cmp	r2, r3
9000c4f6:	f47f af07 	bne.w	9000c308 <JPEG_Process+0x258>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000c4fa:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000c4fc:	4620      	mov	r0, r4
9000c4fe:	69e1      	ldr	r1, [r4, #28]
9000c500:	f7f7 fa20 	bl	90003944 <HAL_JPEG_DataReadyCallback>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000c504:	6823      	ldr	r3, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000c506:	6266      	str	r6, [r4, #36]	; 0x24
9000c508:	e5f3      	b.n	9000c0f2 <JPEG_Process+0x42>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000c50a:	f7f7 fa71 	bl	900039f0 <HAL_JPEG_DecodeCpltCallback>
    return JPEG_PROCESS_DONE;
9000c50e:	4628      	mov	r0, r5
9000c510:	e5f5      	b.n	9000c0fe <JPEG_Process+0x4e>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000c512:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000c514:	f022 027e 	bic.w	r2, r2, #126	; 0x7e
9000c518:	631a      	str	r2, [r3, #48]	; 0x30
9000c51a:	e614      	b.n	9000c146 <JPEG_Process+0x96>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000c51c:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000c51e:	4620      	mov	r0, r4
9000c520:	69e1      	ldr	r1, [r4, #28]
9000c522:	f7f7 fa0f 	bl	90003944 <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000c526:	2300      	movs	r3, #0
9000c528:	6263      	str	r3, [r4, #36]	; 0x24
9000c52a:	e614      	b.n	9000c156 <JPEG_Process+0xa6>
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000c52c:	6d62      	ldr	r2, [r4, #84]	; 0x54
9000c52e:	f002 020c 	and.w	r2, r2, #12
9000c532:	2a0c      	cmp	r2, #12
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000c534:	6d62      	ldr	r2, [r4, #84]	; 0x54
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000c536:	f000 80fd 	beq.w	9000c734 <JPEG_Process+0x684>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000c53a:	f002 020c 	and.w	r2, r2, #12
9000c53e:	2a08      	cmp	r2, #8
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000c540:	6d62      	ldr	r2, [r4, #84]	; 0x54
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000c542:	f47f adca 	bne.w	9000c0da <JPEG_Process+0x2a>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000c546:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
9000c54a:	6562      	str	r2, [r4, #84]	; 0x54
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
9000c54c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000c54e:	f022 0206 	bic.w	r2, r2, #6
9000c552:	631a      	str	r2, [r3, #48]	; 0x30
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000c554:	6d62      	ldr	r2, [r4, #84]	; 0x54
9000c556:	e5c0      	b.n	9000c0da <JPEG_Process+0x2a>
  else if (hjpeg->OutDataLength > hjpeg->JpegOutCount)
9000c558:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000c55a:	4296      	cmp	r6, r2
9000c55c:	f67f adc9 	bls.w	9000c0f2 <JPEG_Process+0x42>
    nb_words = (hjpeg->OutDataLength - hjpeg->JpegOutCount) / 4UL;
9000c560:	6a60      	ldr	r0, [r4, #36]	; 0x24
9000c562:	1a30      	subs	r0, r6, r0
    for (index = 0; index < nb_words; index++)
9000c564:	0880      	lsrs	r0, r0, #2
9000c566:	d020      	beq.n	9000c5aa <JPEG_Process+0x4fa>
9000c568:	4629      	mov	r1, r5
9000c56a:	e000      	b.n	9000c56e <JPEG_Process+0x4be>
      dataword = hjpeg->Instance->DOR;
9000c56c:	6823      	ldr	r3, [r4, #0]
9000c56e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
    for (index = 0; index < nb_words; index++)
9000c570:	3101      	adds	r1, #1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000c572:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000c574:	69e6      	ldr	r6, [r4, #28]
    for (index = 0; index < nb_words; index++)
9000c576:	4288      	cmp	r0, r1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000c578:	54b3      	strb	r3, [r6, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000c57a:	6a66      	ldr	r6, [r4, #36]	; 0x24
9000c57c:	69e2      	ldr	r2, [r4, #28]
9000c57e:	4432      	add	r2, r6
9000c580:	ea4f 2613 	mov.w	r6, r3, lsr #8
9000c584:	7056      	strb	r6, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000c586:	6a66      	ldr	r6, [r4, #36]	; 0x24
9000c588:	69e2      	ldr	r2, [r4, #28]
9000c58a:	4432      	add	r2, r6
9000c58c:	ea4f 4613 	mov.w	r6, r3, lsr #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000c590:	ea4f 6313 	mov.w	r3, r3, lsr #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000c594:	7096      	strb	r6, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000c596:	6a66      	ldr	r6, [r4, #36]	; 0x24
9000c598:	69e2      	ldr	r2, [r4, #28]
9000c59a:	4432      	add	r2, r6
9000c59c:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000c59e:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000c5a0:	f103 0304 	add.w	r3, r3, #4
9000c5a4:	6263      	str	r3, [r4, #36]	; 0x24
    for (index = 0; index < nb_words; index++)
9000c5a6:	d1e1      	bne.n	9000c56c <JPEG_Process+0x4bc>
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000c5a8:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
9000c5aa:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000c5ac:	42b3      	cmp	r3, r6
9000c5ae:	f000 8161 	beq.w	9000c874 <JPEG_Process+0x7c4>
      nb_bytes = hjpeg->OutDataLength - hjpeg->JpegOutCount;
9000c5b2:	f8d4 8024 	ldr.w	r8, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000c5b6:	6823      	ldr	r3, [r4, #0]
      for (index = 0; index < nb_bytes; index++)
9000c5b8:	ebb6 0008 	subs.w	r0, r6, r8
      dataword = hjpeg->Instance->DOR;
9000c5bc:	6c5f      	ldr	r7, [r3, #68]	; 0x44
      for (index = 0; index < nb_bytes; index++)
9000c5be:	d00e      	beq.n	9000c5de <JPEG_Process+0x52e>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000c5c0:	f005 0303 	and.w	r3, r5, #3
9000c5c4:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000c5c6:	69e1      	ldr	r1, [r4, #28]
      for (index = 0; index < nb_bytes; index++)
9000c5c8:	3501      	adds	r5, #1
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000c5ca:	00db      	lsls	r3, r3, #3
      for (index = 0; index < nb_bytes; index++)
9000c5cc:	42a8      	cmp	r0, r5
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000c5ce:	fa27 f303 	lsr.w	r3, r7, r3
9000c5d2:	548b      	strb	r3, [r1, r2]
        hjpeg->JpegOutCount++;
9000c5d4:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000c5d6:	f103 0301 	add.w	r3, r3, #1
9000c5da:	6263      	str	r3, [r4, #36]	; 0x24
      for (index = 0; index < nb_bytes; index++)
9000c5dc:	d1f0      	bne.n	9000c5c0 <JPEG_Process+0x510>
      nb_bytes = 4UL - nb_bytes;
9000c5de:	f108 0804 	add.w	r8, r8, #4
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000c5e2:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000c5e4:	69e1      	ldr	r1, [r4, #28]
9000c5e6:	4620      	mov	r0, r4
      nb_bytes = 4UL - nb_bytes;
9000c5e8:	eba8 0806 	sub.w	r8, r8, r6
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000c5ec:	f7f7 f9aa 	bl	90003944 <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000c5f0:	2300      	movs	r3, #0
      for (index = nb_bytes; index < 4UL; index++)
9000c5f2:	f1b8 0f03 	cmp.w	r8, #3
      hjpeg->JpegOutCount = 0;
9000c5f6:	6263      	str	r3, [r4, #36]	; 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000c5f8:	f63f ae86 	bhi.w	9000c308 <JPEG_Process+0x258>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000c5fc:	ea4f 03c8 	mov.w	r3, r8, lsl #3
9000c600:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000c602:	69e1      	ldr	r1, [r4, #28]
      for (index = nb_bytes; index < 4UL; index++)
9000c604:	f1b8 0f03 	cmp.w	r8, #3
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000c608:	fa27 f003 	lsr.w	r0, r7, r3
9000c60c:	5488      	strb	r0, [r1, r2]
        hjpeg->JpegOutCount++;
9000c60e:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000c610:	f102 0201 	add.w	r2, r2, #1
9000c614:	6262      	str	r2, [r4, #36]	; 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000c616:	f43f ae77 	beq.w	9000c308 <JPEG_Process+0x258>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000c61a:	f103 0208 	add.w	r2, r3, #8
9000c61e:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000c620:	69e0      	ldr	r0, [r4, #28]
      for (index = nb_bytes; index < 4UL; index++)
9000c622:	f1b8 0f02 	cmp.w	r8, #2
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000c626:	fa27 f202 	lsr.w	r2, r7, r2
9000c62a:	5442      	strb	r2, [r0, r1]
        hjpeg->JpegOutCount++;
9000c62c:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000c62e:	f102 0201 	add.w	r2, r2, #1
9000c632:	6262      	str	r2, [r4, #36]	; 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000c634:	f108 0202 	add.w	r2, r8, #2
9000c638:	f43f ae66 	beq.w	9000c308 <JPEG_Process+0x258>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000c63c:	3310      	adds	r3, #16
9000c63e:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000c640:	69e0      	ldr	r0, [r4, #28]
      for (index = nb_bytes; index < 4UL; index++)
9000c642:	2a02      	cmp	r2, #2
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000c644:	fa27 f303 	lsr.w	r3, r7, r3
9000c648:	5443      	strb	r3, [r0, r1]
        hjpeg->JpegOutCount++;
9000c64a:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000c64c:	f103 0301 	add.w	r3, r3, #1
9000c650:	6263      	str	r3, [r4, #36]	; 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000c652:	f47f ae59 	bne.w	9000c308 <JPEG_Process+0x258>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000c656:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000c658:	0e3f      	lsrs	r7, r7, #24
9000c65a:	69e2      	ldr	r2, [r4, #28]
9000c65c:	54d7      	strb	r7, [r2, r3]
        hjpeg->JpegOutCount++;
9000c65e:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000c660:	3301      	adds	r3, #1
9000c662:	6263      	str	r3, [r4, #36]	; 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000c664:	e650      	b.n	9000c308 <JPEG_Process+0x258>
  else if (hjpeg->InDataLength == hjpeg->JpegInCount)
9000c666:	428a      	cmp	r2, r1
9000c668:	d056      	beq.n	9000c718 <JPEG_Process+0x668>
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000c66a:	6d62      	ldr	r2, [r4, #84]	; 0x54
9000c66c:	e535      	b.n	9000c0da <JPEG_Process+0x2a>
  else if (hjpeg->OutDataLength > hjpeg->JpegOutCount)
9000c66e:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000c670:	4295      	cmp	r5, r2
9000c672:	f67f ad3e 	bls.w	9000c0f2 <JPEG_Process+0x42>
    nb_words = (hjpeg->OutDataLength - hjpeg->JpegOutCount) / 4UL;
9000c676:	6a60      	ldr	r0, [r4, #36]	; 0x24
9000c678:	1a28      	subs	r0, r5, r0
    for (index = 0; index < nb_words; index++)
9000c67a:	0880      	lsrs	r0, r0, #2
9000c67c:	d020      	beq.n	9000c6c0 <JPEG_Process+0x610>
9000c67e:	4631      	mov	r1, r6
9000c680:	e000      	b.n	9000c684 <JPEG_Process+0x5d4>
      dataword = hjpeg->Instance->DOR;
9000c682:	6823      	ldr	r3, [r4, #0]
9000c684:	6c5b      	ldr	r3, [r3, #68]	; 0x44
    for (index = 0; index < nb_words; index++)
9000c686:	3101      	adds	r1, #1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000c688:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000c68a:	69e5      	ldr	r5, [r4, #28]
    for (index = 0; index < nb_words; index++)
9000c68c:	4288      	cmp	r0, r1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000c68e:	54ab      	strb	r3, [r5, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000c690:	6a65      	ldr	r5, [r4, #36]	; 0x24
9000c692:	69e2      	ldr	r2, [r4, #28]
9000c694:	442a      	add	r2, r5
9000c696:	ea4f 2513 	mov.w	r5, r3, lsr #8
9000c69a:	7055      	strb	r5, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000c69c:	6a65      	ldr	r5, [r4, #36]	; 0x24
9000c69e:	69e2      	ldr	r2, [r4, #28]
9000c6a0:	442a      	add	r2, r5
9000c6a2:	ea4f 4513 	mov.w	r5, r3, lsr #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000c6a6:	ea4f 6313 	mov.w	r3, r3, lsr #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000c6aa:	7095      	strb	r5, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000c6ac:	6a65      	ldr	r5, [r4, #36]	; 0x24
9000c6ae:	69e2      	ldr	r2, [r4, #28]
9000c6b0:	442a      	add	r2, r5
9000c6b2:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000c6b4:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000c6b6:	f103 0304 	add.w	r3, r3, #4
9000c6ba:	6263      	str	r3, [r4, #36]	; 0x24
    for (index = 0; index < nb_words; index++)
9000c6bc:	d1e1      	bne.n	9000c682 <JPEG_Process+0x5d2>
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000c6be:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
9000c6c0:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000c6c2:	429d      	cmp	r5, r3
9000c6c4:	f000 80d6 	beq.w	9000c874 <JPEG_Process+0x7c4>
      nb_bytes = hjpeg->OutDataLength - hjpeg->JpegOutCount;
9000c6c8:	f8d4 8024 	ldr.w	r8, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000c6cc:	6823      	ldr	r3, [r4, #0]
      for (index = 0; index < nb_bytes; index++)
9000c6ce:	ebb5 0008 	subs.w	r0, r5, r8
      dataword = hjpeg->Instance->DOR;
9000c6d2:	6c5f      	ldr	r7, [r3, #68]	; 0x44
      for (index = 0; index < nb_bytes; index++)
9000c6d4:	d00e      	beq.n	9000c6f4 <JPEG_Process+0x644>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000c6d6:	f006 0303 	and.w	r3, r6, #3
9000c6da:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000c6dc:	69e1      	ldr	r1, [r4, #28]
      for (index = 0; index < nb_bytes; index++)
9000c6de:	3601      	adds	r6, #1
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000c6e0:	00db      	lsls	r3, r3, #3
      for (index = 0; index < nb_bytes; index++)
9000c6e2:	42b0      	cmp	r0, r6
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000c6e4:	fa27 f303 	lsr.w	r3, r7, r3
9000c6e8:	548b      	strb	r3, [r1, r2]
        hjpeg->JpegOutCount++;
9000c6ea:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000c6ec:	f103 0301 	add.w	r3, r3, #1
9000c6f0:	6263      	str	r3, [r4, #36]	; 0x24
      for (index = 0; index < nb_bytes; index++)
9000c6f2:	d1f0      	bne.n	9000c6d6 <JPEG_Process+0x626>
      nb_bytes = 4UL - nb_bytes;
9000c6f4:	f108 0804 	add.w	r8, r8, #4
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000c6f8:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000c6fa:	69e1      	ldr	r1, [r4, #28]
9000c6fc:	4620      	mov	r0, r4
      nb_bytes = 4UL - nb_bytes;
9000c6fe:	eba8 0805 	sub.w	r8, r8, r5
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000c702:	f7f7 f91f 	bl	90003944 <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000c706:	2300      	movs	r3, #0
      for (index = nb_bytes; index < 4UL; index++)
9000c708:	f1b8 0f03 	cmp.w	r8, #3
      hjpeg->JpegOutCount = 0;
9000c70c:	6263      	str	r3, [r4, #36]	; 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000c70e:	f67f af75 	bls.w	9000c5fc <JPEG_Process+0x54c>
9000c712:	e5f9      	b.n	9000c308 <JPEG_Process+0x258>
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
9000c714:	1a52      	subs	r2, r2, r1
9000c716:	e6a9      	b.n	9000c46c <JPEG_Process+0x3bc>
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
9000c718:	6a21      	ldr	r1, [r4, #32]
9000c71a:	4620      	mov	r0, r4
9000c71c:	f7f7 f8f2 	bl	90003904 <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength > 4UL)
9000c720:	6aa2      	ldr	r2, [r4, #40]	; 0x28
9000c722:	2a04      	cmp	r2, #4
9000c724:	d902      	bls.n	9000c72c <JPEG_Process+0x67c>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % 4UL);
9000c726:	f022 0203 	bic.w	r2, r2, #3
9000c72a:	62a2      	str	r2, [r4, #40]	; 0x28
    hjpeg->JpegInCount = 0;
9000c72c:	2100      	movs	r1, #0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000c72e:	6823      	ldr	r3, [r4, #0]
    hjpeg->JpegInCount = 0;
9000c730:	6221      	str	r1, [r4, #32]
    nb_bytes = hjpeg->InDataLength;
9000c732:	e5f5      	b.n	9000c320 <JPEG_Process+0x270>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000c734:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
9000c738:	6562      	str	r2, [r4, #84]	; 0x54
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000c73a:	6d62      	ldr	r2, [r4, #84]	; 0x54
9000c73c:	e4cd      	b.n	9000c0da <JPEG_Process+0x2a>
      if (nb_words > 0UL)
9000c73e:	2a03      	cmp	r2, #3
9000c740:	f240 80a4 	bls.w	9000c88c <JPEG_Process+0x7dc>
        for (index = 0; index < nb_words; index++)
9000c744:	2900      	cmp	r1, #0
9000c746:	f43f acc8 	beq.w	9000c0da <JPEG_Process+0x2a>
          input_count = hjpeg->JpegInCount;
9000c74a:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000c74c:	2901      	cmp	r1, #1
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000c74e:	69a2      	ldr	r2, [r4, #24]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000c750:	eb02 0500 	add.w	r5, r2, r0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000c754:	5c16      	ldrb	r6, [r2, r0]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000c756:	78a8      	ldrb	r0, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000c758:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000c75a:	ea4f 4000 	mov.w	r0, r0, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000c75e:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000c760:	ea40 2007 	orr.w	r0, r0, r7, lsl #8
9000c764:	ea40 0006 	orr.w	r0, r0, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000c768:	ea40 6005 	orr.w	r0, r0, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000c76c:	6418      	str	r0, [r3, #64]	; 0x40
          hjpeg->JpegInCount += 4UL;
9000c76e:	6a20      	ldr	r0, [r4, #32]
9000c770:	f100 0004 	add.w	r0, r0, #4
9000c774:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000c776:	f43f acb0 	beq.w	9000c0da <JPEG_Process+0x2a>
          input_count = hjpeg->JpegInCount;
9000c77a:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000c77c:	2902      	cmp	r1, #2
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000c77e:	eb02 0500 	add.w	r5, r2, r0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000c782:	5c16      	ldrb	r6, [r2, r0]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000c784:	78a8      	ldrb	r0, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000c786:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000c788:	ea4f 4000 	mov.w	r0, r0, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000c78c:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000c78e:	ea40 2007 	orr.w	r0, r0, r7, lsl #8
9000c792:	ea40 0006 	orr.w	r0, r0, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000c796:	ea40 6005 	orr.w	r0, r0, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000c79a:	6418      	str	r0, [r3, #64]	; 0x40
          hjpeg->JpegInCount += 4UL;
9000c79c:	6a20      	ldr	r0, [r4, #32]
9000c79e:	f100 0004 	add.w	r0, r0, #4
9000c7a2:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000c7a4:	f43f ac99 	beq.w	9000c0da <JPEG_Process+0x2a>
          input_count = hjpeg->JpegInCount;
9000c7a8:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000c7aa:	2903      	cmp	r1, #3
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000c7ac:	eb02 0500 	add.w	r5, r2, r0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000c7b0:	5c16      	ldrb	r6, [r2, r0]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000c7b2:	78a8      	ldrb	r0, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000c7b4:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000c7b6:	ea4f 4000 	mov.w	r0, r0, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000c7ba:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000c7bc:	ea40 2007 	orr.w	r0, r0, r7, lsl #8
9000c7c0:	ea40 0006 	orr.w	r0, r0, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000c7c4:	ea40 6005 	orr.w	r0, r0, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000c7c8:	6418      	str	r0, [r3, #64]	; 0x40
          hjpeg->JpegInCount += 4UL;
9000c7ca:	6a20      	ldr	r0, [r4, #32]
9000c7cc:	f100 0004 	add.w	r0, r0, #4
9000c7d0:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000c7d2:	f43f ac82 	beq.w	9000c0da <JPEG_Process+0x2a>
          input_count = hjpeg->JpegInCount;
9000c7d6:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000c7d8:	2904      	cmp	r1, #4
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000c7da:	eb02 0500 	add.w	r5, r2, r0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000c7de:	5c16      	ldrb	r6, [r2, r0]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000c7e0:	78a8      	ldrb	r0, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000c7e2:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000c7e4:	ea4f 4000 	mov.w	r0, r0, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000c7e8:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000c7ea:	ea40 2007 	orr.w	r0, r0, r7, lsl #8
9000c7ee:	ea40 0006 	orr.w	r0, r0, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000c7f2:	ea40 6005 	orr.w	r0, r0, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000c7f6:	6418      	str	r0, [r3, #64]	; 0x40
          hjpeg->JpegInCount += 4UL;
9000c7f8:	6a20      	ldr	r0, [r4, #32]
9000c7fa:	f100 0004 	add.w	r0, r0, #4
9000c7fe:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000c800:	f43f ac6b 	beq.w	9000c0da <JPEG_Process+0x2a>
          input_count = hjpeg->JpegInCount;
9000c804:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000c806:	2905      	cmp	r1, #5
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000c808:	eb02 0500 	add.w	r5, r2, r0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000c80c:	5c16      	ldrb	r6, [r2, r0]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000c80e:	78a8      	ldrb	r0, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000c810:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000c812:	ea4f 4000 	mov.w	r0, r0, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000c816:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000c818:	ea40 2007 	orr.w	r0, r0, r7, lsl #8
9000c81c:	ea40 0006 	orr.w	r0, r0, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000c820:	ea40 6005 	orr.w	r0, r0, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000c824:	6418      	str	r0, [r3, #64]	; 0x40
          hjpeg->JpegInCount += 4UL;
9000c826:	6a20      	ldr	r0, [r4, #32]
9000c828:	f100 0004 	add.w	r0, r0, #4
9000c82c:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000c82e:	f43f ac54 	beq.w	9000c0da <JPEG_Process+0x2a>
          input_count = hjpeg->JpegInCount;
9000c832:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000c834:	2907      	cmp	r1, #7
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000c836:	eb02 0500 	add.w	r5, r2, r0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000c83a:	5c16      	ldrb	r6, [r2, r0]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000c83c:	78a8      	ldrb	r0, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000c83e:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000c840:	ea4f 4000 	mov.w	r0, r0, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000c844:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000c846:	ea40 2007 	orr.w	r0, r0, r7, lsl #8
9000c84a:	ea40 0006 	orr.w	r0, r0, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000c84e:	ea40 6005 	orr.w	r0, r0, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000c852:	6418      	str	r0, [r3, #64]	; 0x40
          hjpeg->JpegInCount += 4UL;
9000c854:	6a20      	ldr	r0, [r4, #32]
9000c856:	f100 0004 	add.w	r0, r0, #4
9000c85a:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000c85c:	f47f ac3d 	bne.w	9000c0da <JPEG_Process+0x2a>
          input_count = hjpeg->JpegInCount;
9000c860:	6a20      	ldr	r0, [r4, #32]
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000c862:	e5db      	b.n	9000c41c <JPEG_Process+0x36c>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000c864:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000c866:	4620      	mov	r0, r4
9000c868:	69e1      	ldr	r1, [r4, #28]
9000c86a:	f7f7 f86b 	bl	90003944 <HAL_JPEG_DataReadyCallback>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000c86e:	6823      	ldr	r3, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000c870:	6265      	str	r5, [r4, #36]	; 0x24
9000c872:	e43e      	b.n	9000c0f2 <JPEG_Process+0x42>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000c874:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000c876:	4620      	mov	r0, r4
9000c878:	69e1      	ldr	r1, [r4, #28]
9000c87a:	f7f7 f863 	bl	90003944 <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000c87e:	2200      	movs	r2, #0
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000c880:	6823      	ldr	r3, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000c882:	6262      	str	r2, [r4, #36]	; 0x24
9000c884:	e435      	b.n	9000c0f2 <JPEG_Process+0x42>
        input_count = hjpeg->JpegInCount;
9000c886:	6a22      	ldr	r2, [r4, #32]
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000c888:	69a0      	ldr	r0, [r4, #24]
9000c88a:	e5c7      	b.n	9000c41c <JPEG_Process+0x36c>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000c88c:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000c88e:	2a01      	cmp	r2, #1
          hjpeg->JpegInCount++;
9000c890:	6a20      	ldr	r0, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000c892:	69a5      	ldr	r5, [r4, #24]
          hjpeg->JpegInCount++;
9000c894:	f100 0001 	add.w	r0, r0, #1
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000c898:	5c69      	ldrb	r1, [r5, r1]
          hjpeg->JpegInCount++;
9000c89a:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000c89c:	d010      	beq.n	9000c8c0 <JPEG_Process+0x810>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000c89e:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000c8a0:	2a03      	cmp	r2, #3
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000c8a2:	5c28      	ldrb	r0, [r5, r0]
9000c8a4:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
          hjpeg->JpegInCount++;
9000c8a8:	6a20      	ldr	r0, [r4, #32]
9000c8aa:	f100 0001 	add.w	r0, r0, #1
9000c8ae:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000c8b0:	d106      	bne.n	9000c8c0 <JPEG_Process+0x810>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000c8b2:	6a22      	ldr	r2, [r4, #32]
9000c8b4:	5ca8      	ldrb	r0, [r5, r2]
          hjpeg->JpegInCount++;
9000c8b6:	6a22      	ldr	r2, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000c8b8:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
          hjpeg->JpegInCount++;
9000c8bc:	3201      	adds	r2, #1
9000c8be:	6222      	str	r2, [r4, #32]
        hjpeg->Instance->DIR = dataword;
9000c8c0:	6419      	str	r1, [r3, #64]	; 0x40
9000c8c2:	e40a      	b.n	9000c0da <JPEG_Process+0x2a>

9000c8c4 <HAL_JPEG_IRQHandler>:
  switch (hjpeg->State)
9000c8c4:	f890 304d 	ldrb.w	r3, [r0, #77]	; 0x4d
9000c8c8:	3b03      	subs	r3, #3
9000c8ca:	2b01      	cmp	r3, #1
9000c8cc:	d900      	bls.n	9000c8d0 <HAL_JPEG_IRQHandler+0xc>
9000c8ce:	4770      	bx	lr
      if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000c8d0:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000c8d2:	f003 030c 	and.w	r3, r3, #12
9000c8d6:	2b08      	cmp	r3, #8
{
9000c8d8:	b530      	push	{r4, r5, lr}
9000c8da:	4604      	mov	r4, r0
9000c8dc:	b083      	sub	sp, #12
      if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000c8de:	d006      	beq.n	9000c8ee <HAL_JPEG_IRQHandler+0x2a>
      else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000c8e0:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000c8e2:	f003 030c 	and.w	r3, r3, #12
9000c8e6:	2b0c      	cmp	r3, #12
9000c8e8:	d006      	beq.n	9000c8f8 <HAL_JPEG_IRQHandler+0x34>
}
9000c8ea:	b003      	add	sp, #12
9000c8ec:	bd30      	pop	{r4, r5, pc}
9000c8ee:	b003      	add	sp, #12
9000c8f0:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
        (void) JPEG_Process(hjpeg);
9000c8f4:	f7ff bbdc 	b.w	9000c0b0 <JPEG_Process>
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000c8f8:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000c8fa:	f003 0303 	and.w	r3, r3, #3
9000c8fe:	2b02      	cmp	r3, #2
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
9000c900:	6803      	ldr	r3, [r0, #0]
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000c902:	d045      	beq.n	9000c990 <HAL_JPEG_IRQHandler+0xcc>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF) != 0UL)
9000c904:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000c906:	0692      	lsls	r2, r2, #26
9000c908:	d5ef      	bpl.n	9000c8ea <HAL_JPEG_IRQHandler+0x26>
    hjpeg->Context |= JPEG_CONTEXT_ENDING_DMA;
9000c90a:	6d62      	ldr	r2, [r4, #84]	; 0x54
    if (hjpeg->hdmain->State == HAL_MDMA_STATE_BUSY)
9000c90c:	6b20      	ldr	r0, [r4, #48]	; 0x30
    hjpeg->Context |= JPEG_CONTEXT_ENDING_DMA;
9000c90e:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
9000c912:	6562      	str	r2, [r4, #84]	; 0x54
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000c914:	681a      	ldr	r2, [r3, #0]
9000c916:	f022 0201 	bic.w	r2, r2, #1
9000c91a:	601a      	str	r2, [r3, #0]
    __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000c91c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000c91e:	f022 027e 	bic.w	r2, r2, #126	; 0x7e
9000c922:	631a      	str	r2, [r3, #48]	; 0x30
    __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
9000c924:	6b9a      	ldr	r2, [r3, #56]	; 0x38
9000c926:	f042 0260 	orr.w	r2, r2, #96	; 0x60
9000c92a:	639a      	str	r2, [r3, #56]	; 0x38
    if (hjpeg->hdmain->State == HAL_MDMA_STATE_BUSY)
9000c92c:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
9000c930:	2b02      	cmp	r3, #2
9000c932:	d052      	beq.n	9000c9da <HAL_JPEG_IRQHandler+0x116>
    if (hjpeg->hdmaout->State == HAL_MDMA_STATE_BUSY)
9000c934:	6b60      	ldr	r0, [r4, #52]	; 0x34
9000c936:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
9000c93a:	2b02      	cmp	r3, #2
9000c93c:	d03f      	beq.n	9000c9be <HAL_JPEG_IRQHandler+0xfa>
  hjpeg->JpegOutCount = hjpeg->OutDataLength - (hjpeg->hdmaout->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000c93e:	6803      	ldr	r3, [r0, #0]
9000c940:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000c942:	695b      	ldr	r3, [r3, #20]
9000c944:	f3c3 0310 	ubfx	r3, r3, #0, #17
9000c948:	1ad3      	subs	r3, r2, r3
9000c94a:	6263      	str	r3, [r4, #36]	; 0x24
  if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
9000c94c:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000c94e:	429a      	cmp	r2, r3
9000c950:	d046      	beq.n	9000c9e0 <HAL_JPEG_IRQHandler+0x11c>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL)
9000c952:	6822      	ldr	r2, [r4, #0]
9000c954:	6b55      	ldr	r5, [r2, #52]	; 0x34
9000c956:	f015 0510 	ands.w	r5, r5, #16
9000c95a:	d135      	bne.n	9000c9c8 <HAL_JPEG_IRQHandler+0x104>
    if (hjpeg->JpegOutCount > 0UL)
9000c95c:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000c95e:	2b00      	cmp	r3, #0
9000c960:	d149      	bne.n	9000c9f6 <HAL_JPEG_IRQHandler+0x132>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000c962:	6813      	ldr	r3, [r2, #0]
    __HAL_UNLOCK(hjpeg);
9000c964:	2000      	movs	r0, #0
    hjpeg->State = HAL_JPEG_STATE_READY;
9000c966:	2101      	movs	r1, #1
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000c968:	f023 0301 	bic.w	r3, r3, #1
9000c96c:	6013      	str	r3, [r2, #0]
    tmpContext = hjpeg->Context;
9000c96e:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000c970:	6d62      	ldr	r2, [r4, #84]	; 0x54
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000c972:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
9000c976:	f884 004c 	strb.w	r0, [r4, #76]	; 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000c97a:	f402 4282 	and.w	r2, r2, #16640	; 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000c97e:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000c980:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000c982:	6562      	str	r2, [r4, #84]	; 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000c984:	f884 104d 	strb.w	r1, [r4, #77]	; 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000c988:	d032      	beq.n	9000c9f0 <HAL_JPEG_IRQHandler+0x12c>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
9000c98a:	f7ff f9c9 	bl	9000bd20 <HAL_JPEG_EncodeCpltCallback>
9000c98e:	e7ac      	b.n	9000c8ea <HAL_JPEG_IRQHandler+0x26>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
9000c990:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000c992:	0651      	lsls	r1, r2, #25
9000c994:	d5b6      	bpl.n	9000c904 <HAL_JPEG_IRQHandler+0x40>
      (void) HAL_JPEG_GetInfo(hjpeg, &hjpeg->Conf);
9000c996:	1d01      	adds	r1, r0, #4
  if ((hjpeg == NULL) || (pInfo == NULL))
9000c998:	9101      	str	r1, [sp, #4]
9000c99a:	f7fe ff33 	bl	9000b804 <HAL_JPEG_GetInfo.part.0>
      hjpeg->Conf.ImageQuality = 0;
9000c99e:	2300      	movs	r3, #0
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
9000c9a0:	9901      	ldr	r1, [sp, #4]
9000c9a2:	4620      	mov	r0, r4
      hjpeg->Conf.ImageQuality = 0;
9000c9a4:	6163      	str	r3, [r4, #20]
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
9000c9a6:	f7f6 ff77 	bl	90003898 <HAL_JPEG_InfoReadyCallback>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_IT_HPD);
9000c9aa:	6823      	ldr	r3, [r4, #0]
9000c9ac:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000c9ae:	f022 0240 	bic.w	r2, r2, #64	; 0x40
9000c9b2:	631a      	str	r2, [r3, #48]	; 0x30
      __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_HPDF);
9000c9b4:	6b9a      	ldr	r2, [r3, #56]	; 0x38
9000c9b6:	f042 0240 	orr.w	r2, r2, #64	; 0x40
9000c9ba:	639a      	str	r2, [r3, #56]	; 0x38
9000c9bc:	e7a2      	b.n	9000c904 <HAL_JPEG_IRQHandler+0x40>
}
9000c9be:	b003      	add	sp, #12
9000c9c0:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
      (void) HAL_MDMA_Abort_IT(hjpeg->hdmaout);
9000c9c4:	f000 bb30 	b.w	9000d028 <HAL_MDMA_Abort_IT>
  else if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000c9c8:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000c9ca:	049b      	lsls	r3, r3, #18
9000c9cc:	d48d      	bmi.n	9000c8ea <HAL_JPEG_IRQHandler+0x26>
    JPEG_DMA_PollResidualData(hjpeg);
9000c9ce:	4620      	mov	r0, r4
}
9000c9d0:	b003      	add	sp, #12
9000c9d2:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
    JPEG_DMA_PollResidualData(hjpeg);
9000c9d6:	f7ff ba0f 	b.w	9000bdf8 <JPEG_DMA_PollResidualData>
      (void) HAL_MDMA_Abort_IT(hjpeg->hdmain);
9000c9da:	f000 fb25 	bl	9000d028 <HAL_MDMA_Abort_IT>
9000c9de:	e7a9      	b.n	9000c934 <HAL_JPEG_IRQHandler+0x70>
    HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000c9e0:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000c9e2:	4620      	mov	r0, r4
9000c9e4:	69e1      	ldr	r1, [r4, #28]
9000c9e6:	f7f6 ffad 	bl	90003944 <HAL_JPEG_DataReadyCallback>
    hjpeg->JpegOutCount = 0;
9000c9ea:	2300      	movs	r3, #0
9000c9ec:	6263      	str	r3, [r4, #36]	; 0x24
9000c9ee:	e7b0      	b.n	9000c952 <HAL_JPEG_IRQHandler+0x8e>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000c9f0:	f7f6 fffe 	bl	900039f0 <HAL_JPEG_DecodeCpltCallback>
9000c9f4:	e779      	b.n	9000c8ea <HAL_JPEG_IRQHandler+0x26>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000c9f6:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000c9f8:	4620      	mov	r0, r4
9000c9fa:	69e1      	ldr	r1, [r4, #28]
9000c9fc:	f7f6 ffa2 	bl	90003944 <HAL_JPEG_DataReadyCallback>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000ca00:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000ca02:	6265      	str	r5, [r4, #36]	; 0x24
9000ca04:	e7ad      	b.n	9000c962 <HAL_JPEG_IRQHandler+0x9e>
9000ca06:	bf00      	nop

9000ca08 <HAL_LTDC_Init>:
{
  uint32_t tmp;
  uint32_t tmp1;

  /* Check the LTDC peripheral state */
  if (hltdc == NULL)
9000ca08:	2800      	cmp	r0, #0
9000ca0a:	d067      	beq.n	9000cadc <HAL_LTDC_Init+0xd4>
{
9000ca0c:	b538      	push	{r3, r4, r5, lr}
    }
    /* Init the low level hardware */
    hltdc->MspInitCallback(hltdc);
  }
#else
  if (hltdc->State == HAL_LTDC_STATE_RESET)
9000ca0e:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
9000ca12:	4604      	mov	r4, r0
9000ca14:	f003 02ff 	and.w	r2, r3, #255	; 0xff
9000ca18:	2b00      	cmp	r3, #0
9000ca1a:	d05a      	beq.n	9000cad2 <HAL_LTDC_Init+0xca>
  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;

  /* Configure the HS, VS, DE and PC polarity */
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000ca1c:	68a0      	ldr	r0, [r4, #8]
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000ca1e:	2102      	movs	r1, #2
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000ca20:	e9d4 3200 	ldrd	r3, r2, [r4]
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000ca24:	f884 10a1 	strb.w	r1, [r4, #161]	; 0xa1
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000ca28:	4302      	orrs	r2, r0
9000ca2a:	68e1      	ldr	r1, [r4, #12]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
9000ca2c:	6998      	ldr	r0, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000ca2e:	430a      	orrs	r2, r1
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
9000ca30:	6921      	ldr	r1, [r4, #16]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
9000ca32:	f020 4070 	bic.w	r0, r0, #4026531840	; 0xf0000000
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
9000ca36:	430a      	orrs	r2, r1

  /* Set Synchronization size */
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
9000ca38:	4929      	ldr	r1, [pc, #164]	; (9000cae0 <HAL_LTDC_Init+0xd8>)
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
9000ca3a:	6198      	str	r0, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000ca3c:	6998      	ldr	r0, [r3, #24]
9000ca3e:	4302      	orrs	r2, r0
  tmp = (hltdc->Init.HorizontalSync << 16U);
9000ca40:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000ca42:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
9000ca44:	689a      	ldr	r2, [r3, #8]
9000ca46:	400a      	ands	r2, r1
9000ca48:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
9000ca4a:	689a      	ldr	r2, [r3, #8]
9000ca4c:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
9000ca50:	69a0      	ldr	r0, [r4, #24]
9000ca52:	4302      	orrs	r2, r0

  /* Set Accumulated Back porch */
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
9000ca54:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
9000ca56:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
9000ca58:	68da      	ldr	r2, [r3, #12]
9000ca5a:	400a      	ands	r2, r1
9000ca5c:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
9000ca5e:	68da      	ldr	r2, [r3, #12]
9000ca60:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
9000ca64:	6a20      	ldr	r0, [r4, #32]
9000ca66:	4302      	orrs	r2, r0

  /* Set Accumulated Active Width */
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
9000ca68:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
9000ca6a:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
9000ca6c:	691a      	ldr	r2, [r3, #16]
9000ca6e:	400a      	ands	r2, r1
9000ca70:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
9000ca72:	691a      	ldr	r2, [r3, #16]
9000ca74:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
9000ca78:	6aa0      	ldr	r0, [r4, #40]	; 0x28
9000ca7a:	4302      	orrs	r2, r0

  /* Set Total Width */
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
  tmp = (hltdc->Init.TotalWidth << 16U);
9000ca7c:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
9000ca7e:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
9000ca80:	695a      	ldr	r2, [r3, #20]
9000ca82:	400a      	ands	r2, r1
9000ca84:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
9000ca86:	695a      	ldr	r2, [r3, #20]
9000ca88:	6b21      	ldr	r1, [r4, #48]	; 0x30
9000ca8a:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
9000ca8e:	430a      	orrs	r2, r1
9000ca90:	615a      	str	r2, [r3, #20]

  /* Set the background color value */
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
9000ca92:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
9000ca94:	f894 0035 	ldrb.w	r0, [r4, #53]	; 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
9000ca98:	f002 427f 	and.w	r2, r2, #4278190080	; 0xff000000
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
9000ca9c:	f894 1036 	ldrb.w	r1, [r4, #54]	; 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
9000caa0:	62da      	str	r2, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
9000caa2:	6add      	ldr	r5, [r3, #44]	; 0x2c
9000caa4:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
9000caa8:	432a      	orrs	r2, r5
9000caaa:	ea42 2200 	orr.w	r2, r2, r0, lsl #8

  /* Enable LTDC by setting LTDCEN bit */
  __HAL_LTDC_ENABLE(hltdc);

  /* Initialize the error code */
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
9000caae:	2000      	movs	r0, #0
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
9000cab0:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
9000cab4:	62da      	str	r2, [r3, #44]	; 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
9000cab6:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000cab8:	f042 0206 	orr.w	r2, r2, #6
9000cabc:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_LTDC_ENABLE(hltdc);
9000cabe:	699a      	ldr	r2, [r3, #24]
9000cac0:	f042 0201 	orr.w	r2, r2, #1
9000cac4:	619a      	str	r2, [r3, #24]

  /* Initialize the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
9000cac6:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
9000cac8:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
9000cacc:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1

  return HAL_OK;
}
9000cad0:	bd38      	pop	{r3, r4, r5, pc}
    hltdc->Lock = HAL_UNLOCKED;
9000cad2:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
9000cad6:	f7f8 fd85 	bl	900055e4 <HAL_LTDC_MspInit>
9000cada:	e79f      	b.n	9000ca1c <HAL_LTDC_Init+0x14>
    return HAL_ERROR;
9000cadc:	2001      	movs	r0, #1
}
9000cade:	4770      	bx	lr
9000cae0:	f000f800 	.word	0xf000f800

9000cae4 <HAL_LTDC_ErrorCallback>:
9000cae4:	4770      	bx	lr
9000cae6:	bf00      	nop

9000cae8 <HAL_LTDC_ReloadEventCallback>:
9000cae8:	4770      	bx	lr
9000caea:	bf00      	nop

9000caec <HAL_LTDC_IRQHandler>:
  *                the configuration information for the LTDC.
  * @retval HAL status
  */
void HAL_LTDC_IRQHandler(LTDC_HandleTypeDef *hltdc)
{
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
9000caec:	6803      	ldr	r3, [r0, #0]
{
9000caee:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
9000caf0:	6b9d      	ldr	r5, [r3, #56]	; 0x38
{
9000caf2:	4604      	mov	r4, r0
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
9000caf4:	6b5e      	ldr	r6, [r3, #52]	; 0x34

  /* Transfer Error Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
9000caf6:	076a      	lsls	r2, r5, #29
9000caf8:	d501      	bpl.n	9000cafe <HAL_LTDC_IRQHandler+0x12>
9000cafa:	0771      	lsls	r1, r6, #29
9000cafc:	d41d      	bmi.n	9000cb3a <HAL_LTDC_IRQHandler+0x4e>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* FIFO underrun Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
9000cafe:	07aa      	lsls	r2, r5, #30
9000cb00:	d501      	bpl.n	9000cb06 <HAL_LTDC_IRQHandler+0x1a>
9000cb02:	07b3      	lsls	r3, r6, #30
9000cb04:	d42d      	bmi.n	9000cb62 <HAL_LTDC_IRQHandler+0x76>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Line Interrupt management ************************************************/
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
9000cb06:	07e8      	lsls	r0, r5, #31
9000cb08:	d501      	bpl.n	9000cb0e <HAL_LTDC_IRQHandler+0x22>
9000cb0a:	07f1      	lsls	r1, r6, #31
9000cb0c:	d440      	bmi.n	9000cb90 <HAL_LTDC_IRQHandler+0xa4>
    HAL_LTDC_LineEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Register reload Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
9000cb0e:	072a      	lsls	r2, r5, #28
9000cb10:	d501      	bpl.n	9000cb16 <HAL_LTDC_IRQHandler+0x2a>
9000cb12:	0733      	lsls	r3, r6, #28
9000cb14:	d400      	bmi.n	9000cb18 <HAL_LTDC_IRQHandler+0x2c>
#else
    /*Call Legacy Reload Event callback */
    HAL_LTDC_ReloadEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }
}
9000cb16:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
9000cb18:	6823      	ldr	r3, [r4, #0]
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
9000cb1a:	2008      	movs	r0, #8
    hltdc->State = HAL_LTDC_STATE_READY;
9000cb1c:	2501      	movs	r5, #1
    __HAL_UNLOCK(hltdc);
9000cb1e:	2100      	movs	r1, #0
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
9000cb20:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000cb22:	f022 0208 	bic.w	r2, r2, #8
9000cb26:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
9000cb28:	63d8      	str	r0, [r3, #60]	; 0x3c
    HAL_LTDC_ReloadEventCallback(hltdc);
9000cb2a:	4620      	mov	r0, r4
    hltdc->State = HAL_LTDC_STATE_READY;
9000cb2c:	f884 50a1 	strb.w	r5, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
9000cb30:	f884 10a0 	strb.w	r1, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
9000cb34:	f7ff ffd8 	bl	9000cae8 <HAL_LTDC_ReloadEventCallback>
}
9000cb38:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
9000cb3a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000cb3c:	f022 0204 	bic.w	r2, r2, #4
9000cb40:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
9000cb42:	2204      	movs	r2, #4
9000cb44:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
9000cb46:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
9000cb4a:	f043 0301 	orr.w	r3, r3, #1
9000cb4e:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
9000cb52:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
9000cb54:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
9000cb58:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
9000cb5c:	f7ff ffc2 	bl	9000cae4 <HAL_LTDC_ErrorCallback>
9000cb60:	e7cd      	b.n	9000cafe <HAL_LTDC_IRQHandler+0x12>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
9000cb62:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_ErrorCallback(hltdc);
9000cb64:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
9000cb66:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000cb68:	f022 0202 	bic.w	r2, r2, #2
9000cb6c:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
9000cb6e:	2202      	movs	r2, #2
9000cb70:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->State = HAL_LTDC_STATE_ERROR;
9000cb72:	2204      	movs	r2, #4
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
9000cb74:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
9000cb78:	f043 0302 	orr.w	r3, r3, #2
9000cb7c:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
9000cb80:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
9000cb82:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
9000cb86:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
9000cb8a:	f7ff ffab 	bl	9000cae4 <HAL_LTDC_ErrorCallback>
9000cb8e:	e7ba      	b.n	9000cb06 <HAL_LTDC_IRQHandler+0x1a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000cb90:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_LineEventCallback(hltdc);
9000cb92:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000cb94:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000cb96:	f022 0201 	bic.w	r2, r2, #1
9000cb9a:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
9000cb9c:	2201      	movs	r2, #1
9000cb9e:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
9000cba0:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
9000cba2:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
9000cba6:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
9000cbaa:	f7f7 ff7d 	bl	90004aa8 <HAL_LTDC_LineEventCallback>
9000cbae:	e7ae      	b.n	9000cb0e <HAL_LTDC_IRQHandler+0x22>

9000cbb0 <HAL_LTDC_ConfigLayer>:
  assert_param(IS_LTDC_BLENDING_FACTOR2(pLayerCfg->BlendingFactor2));
  assert_param(IS_LTDC_CFBLL(pLayerCfg->ImageWidth));
  assert_param(IS_LTDC_CFBLNBR(pLayerCfg->ImageHeight));

  /* Process locked */
  __HAL_LOCK(hltdc);
9000cbb0:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
9000cbb4:	2b01      	cmp	r3, #1
9000cbb6:	f000 80c0 	beq.w	9000cd3a <HAL_LTDC_ConfigLayer+0x18a>

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000cbba:	2302      	movs	r3, #2
{
9000cbbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

  /* Copy new layer configuration into handle structure */
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000cbc0:	f04f 0e34 	mov.w	lr, #52	; 0x34
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000cbc4:	f8d0 9000 	ldr.w	r9, [r0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000cbc8:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
{
9000cbcc:	b083      	sub	sp, #12
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000cbce:	fb0e 0e02 	mla	lr, lr, r2, r0
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000cbd2:	01d2      	lsls	r2, r2, #7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000cbd4:	f8d9 300c 	ldr.w	r3, [r9, #12]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000cbd8:	460c      	mov	r4, r1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000cbda:	f102 0684 	add.w	r6, r2, #132	; 0x84
9000cbde:	460d      	mov	r5, r1
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000cbe0:	f3c3 4b0b 	ubfx	fp, r3, #16, #12
9000cbe4:	4680      	mov	r8, r0
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000cbe6:	eb09 0c06 	add.w	ip, r9, r6
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000cbea:	f10e 0e38 	add.w	lr, lr, #56	; 0x38
  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000cbee:	f8df a160 	ldr.w	sl, [pc, #352]	; 9000cd50 <HAL_LTDC_ConfigLayer+0x1a0>
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000cbf2:	f8dc 3004 	ldr.w	r3, [ip, #4]
9000cbf6:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
9000cbfa:	9301      	str	r3, [sp, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000cbfc:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
9000cbfe:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
9000cc02:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000cc04:	686f      	ldr	r7, [r5, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000cc06:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
9000cc0a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
9000cc0c:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
9000cc10:	6823      	ldr	r3, [r4, #0]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000cc12:	44bb      	add	fp, r7
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000cc14:	f8ce 3000 	str.w	r3, [lr]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000cc18:	9b01      	ldr	r3, [sp, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
9000cc1a:	682a      	ldr	r2, [r5, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000cc1c:	f8cc 3004 	str.w	r3, [ip, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
9000cc20:	f8d9 300c 	ldr.w	r3, [r9, #12]
9000cc24:	1c51      	adds	r1, r2, #1
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000cc26:	68e8      	ldr	r0, [r5, #12]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
9000cc28:	f3c3 430b 	ubfx	r3, r3, #16, #12
  tmp2 = (pLayerCfg->Alpha0 << 24U);
9000cc2c:	f8d5 e018 	ldr.w	lr, [r5, #24]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
9000cc30:	440b      	add	r3, r1
9000cc32:	ea43 430b 	orr.w	r3, r3, fp, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
9000cc36:	f8cc 3004 	str.w	r3, [ip, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000cc3a:	f8d9 100c 	ldr.w	r1, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
9000cc3e:	f8dc 3008 	ldr.w	r3, [ip, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000cc42:	f3c1 010a 	ubfx	r1, r1, #0, #11
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
9000cc46:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000cc4a:	4401      	add	r1, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
9000cc4c:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
9000cc50:	68ab      	ldr	r3, [r5, #8]
9000cc52:	f8d9 000c 	ldr.w	r0, [r9, #12]
9000cc56:	3301      	adds	r3, #1
9000cc58:	f3c0 000a 	ubfx	r0, r0, #0, #11
9000cc5c:	4403      	add	r3, r0
9000cc5e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
9000cc62:	6929      	ldr	r1, [r5, #16]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
9000cc64:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
9000cc68:	f8dc 3010 	ldr.w	r3, [ip, #16]
9000cc6c:	f023 0307 	bic.w	r3, r3, #7
9000cc70:	f8cc 3010 	str.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
9000cc74:	f8cc 1010 	str.w	r1, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
9000cc78:	f8dc 3018 	ldr.w	r3, [ip, #24]
9000cc7c:	2300      	movs	r3, #0
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
9000cc7e:	f895 0032 	ldrb.w	r0, [r5, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
9000cc82:	f895 4031 	ldrb.w	r4, [r5, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
9000cc86:	f8cc 3018 	str.w	r3, [ip, #24]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
9000cc8a:	f895 3030 	ldrb.w	r3, [r5, #48]	; 0x30
9000cc8e:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
9000cc92:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
9000cc96:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
9000cc9a:	f8cc 3018 	str.w	r3, [ip, #24]
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
9000cc9e:	f8dc 3014 	ldr.w	r3, [ip, #20]
9000cca2:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
9000cca6:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
9000ccaa:	696b      	ldr	r3, [r5, #20]
9000ccac:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000ccb0:	f8dc 001c 	ldr.w	r0, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
9000ccb4:	69eb      	ldr	r3, [r5, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000ccb6:	ea00 0a0a 	and.w	sl, r0, sl
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
9000ccba:	6a28      	ldr	r0, [r5, #32]
9000ccbc:	4303      	orrs	r3, r0
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000ccbe:	f8cc a01c 	str.w	sl, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
9000ccc2:	f8cc 301c 	str.w	r3, [ip, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
9000ccc6:	f8dc 3028 	ldr.w	r3, [ip, #40]	; 0x28
9000ccca:	2300      	movs	r3, #0
9000cccc:	f8cc 3028 	str.w	r3, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
9000ccd0:	6a6b      	ldr	r3, [r5, #36]	; 0x24
9000ccd2:	f8cc 3028 	str.w	r3, [ip, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
9000ccd6:	bb59      	cbnz	r1, 9000cd30 <HAL_LTDC_ConfigLayer+0x180>
  {
    tmp = 4U;
9000ccd8:	2304      	movs	r3, #4
    tmp = 1U;
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
9000ccda:	1abf      	subs	r7, r7, r2
9000ccdc:	6aaa      	ldr	r2, [r5, #40]	; 0x28
9000ccde:	fb03 f707 	mul.w	r7, r3, r7
9000cce2:	fb02 f303 	mul.w	r3, r2, r3
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
9000cce6:	6aea      	ldr	r2, [r5, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
9000cce8:	3707      	adds	r7, #7
9000ccea:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
9000ccee:	f8dc 302c 	ldr.w	r3, [ip, #44]	; 0x2c
9000ccf2:	f003 23e0 	and.w	r3, r3, #3758153728	; 0xe000e000
9000ccf6:	f8cc 302c 	str.w	r3, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
9000ccfa:	f8cc 702c 	str.w	r7, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
9000ccfe:	4b12      	ldr	r3, [pc, #72]	; (9000cd48 <HAL_LTDC_ConfigLayer+0x198>)
9000cd00:	f8dc 1030 	ldr.w	r1, [ip, #48]	; 0x30
9000cd04:	400b      	ands	r3, r1
9000cd06:	f8cc 3030 	str.w	r3, [ip, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
9000cd0a:	f8cc 2030 	str.w	r2, [ip, #48]	; 0x30
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
9000cd0e:	2201      	movs	r2, #1

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
9000cd10:	f859 3006 	ldr.w	r3, [r9, r6]
9000cd14:	4313      	orrs	r3, r2
9000cd16:	f849 3006 	str.w	r3, [r9, r6]
  __HAL_UNLOCK(hltdc);
9000cd1a:	2300      	movs	r3, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
9000cd1c:	f8c9 2024 	str.w	r2, [r9, #36]	; 0x24
  return HAL_OK;
9000cd20:	4618      	mov	r0, r3
  hltdc->State  = HAL_LTDC_STATE_READY;
9000cd22:	f888 20a1 	strb.w	r2, [r8, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
9000cd26:	f888 30a0 	strb.w	r3, [r8, #160]	; 0xa0
}
9000cd2a:	b003      	add	sp, #12
9000cd2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
9000cd30:	3901      	subs	r1, #1
9000cd32:	2906      	cmp	r1, #6
9000cd34:	d903      	bls.n	9000cd3e <HAL_LTDC_ConfigLayer+0x18e>
  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
9000cd36:	2301      	movs	r3, #1
9000cd38:	e7cf      	b.n	9000ccda <HAL_LTDC_ConfigLayer+0x12a>
  __HAL_LOCK(hltdc);
9000cd3a:	2002      	movs	r0, #2
}
9000cd3c:	4770      	bx	lr
9000cd3e:	4b03      	ldr	r3, [pc, #12]	; (9000cd4c <HAL_LTDC_ConfigLayer+0x19c>)
9000cd40:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
9000cd44:	e7c9      	b.n	9000ccda <HAL_LTDC_ConfigLayer+0x12a>
9000cd46:	bf00      	nop
9000cd48:	fffff800 	.word	0xfffff800
9000cd4c:	9002df68 	.word	0x9002df68
9000cd50:	fffff8f8 	.word	0xfffff8f8

9000cd54 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
9000cd54:	f890 20a0 	ldrb.w	r2, [r0, #160]	; 0xa0
9000cd58:	2a01      	cmp	r2, #1
9000cd5a:	d019      	beq.n	9000cd90 <HAL_LTDC_ProgramLineEvent+0x3c>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000cd5c:	6802      	ldr	r2, [r0, #0]
9000cd5e:	4603      	mov	r3, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000cd60:	2002      	movs	r0, #2
  __HAL_UNLOCK(hltdc);
9000cd62:	f04f 0c00 	mov.w	ip, #0
{
9000cd66:	b410      	push	{r4}
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000cd68:	f883 00a1 	strb.w	r0, [r3, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000cd6c:	6b50      	ldr	r0, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
9000cd6e:	4c09      	ldr	r4, [pc, #36]	; (9000cd94 <HAL_LTDC_ProgramLineEvent+0x40>)
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000cd70:	f020 0001 	bic.w	r0, r0, #1
9000cd74:	6350      	str	r0, [r2, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
9000cd76:	2001      	movs	r0, #1
  LTDC->LIPCR = (uint32_t)Line;
9000cd78:	6421      	str	r1, [r4, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
9000cd7a:	6b51      	ldr	r1, [r2, #52]	; 0x34
9000cd7c:	4301      	orrs	r1, r0
9000cd7e:	6351      	str	r1, [r2, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
9000cd80:	f883 00a1 	strb.w	r0, [r3, #161]	; 0xa1
  return HAL_OK;
9000cd84:	4660      	mov	r0, ip
  __HAL_UNLOCK(hltdc);
9000cd86:	f883 c0a0 	strb.w	ip, [r3, #160]	; 0xa0
}
9000cd8a:	f85d 4b04 	ldr.w	r4, [sp], #4
9000cd8e:	4770      	bx	lr
  __HAL_LOCK(hltdc);
9000cd90:	2002      	movs	r0, #2
}
9000cd92:	4770      	bx	lr
9000cd94:	50001000 	.word	0x50001000

9000cd98 <HAL_MDMA_Init>:
  * @param  hmdma: Pointer to a MDMA_HandleTypeDef structure that contains
  *               the configuration information for the specified MDMA Channel.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_MDMA_Init(MDMA_HandleTypeDef *hmdma)
{
9000cd98:	b538      	push	{r3, r4, r5, lr}
9000cd9a:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
9000cd9c:	f7fd f984 	bl	9000a0a8 <HAL_GetTick>

  /* Check the MDMA peripheral handle */
  if(hmdma == NULL)
9000cda0:	2c00      	cmp	r4, #0
9000cda2:	d05a      	beq.n	9000ce5a <HAL_MDMA_Init+0xc2>

  /* Change MDMA peripheral state */
  hmdma->State = HAL_MDMA_STATE_BUSY;

  /* Disable the MDMA channel */
  __HAL_MDMA_DISABLE(hmdma);
9000cda4:	6823      	ldr	r3, [r4, #0]
  hmdma->State = HAL_MDMA_STATE_BUSY;
9000cda6:	2202      	movs	r2, #2
  __HAL_UNLOCK(hmdma);
9000cda8:	2100      	movs	r1, #0
9000cdaa:	4605      	mov	r5, r0
  hmdma->State = HAL_MDMA_STATE_BUSY;
9000cdac:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
  __HAL_UNLOCK(hmdma);
9000cdb0:	f884 103c 	strb.w	r1, [r4, #60]	; 0x3c
  __HAL_MDMA_DISABLE(hmdma);
9000cdb4:	68da      	ldr	r2, [r3, #12]
9000cdb6:	f022 0201 	bic.w	r2, r2, #1
9000cdba:	60da      	str	r2, [r3, #12]

  /* Check if the MDMA channel is effectively disabled */
  while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000cdbc:	e005      	b.n	9000cdca <HAL_MDMA_Init+0x32>
  {
    /* Check for the Timeout */
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_MDMA_ABORT)
9000cdbe:	f7fd f973 	bl	9000a0a8 <HAL_GetTick>
9000cdc2:	1b43      	subs	r3, r0, r5
9000cdc4:	2b05      	cmp	r3, #5
9000cdc6:	d841      	bhi.n	9000ce4c <HAL_MDMA_Init+0xb4>
  while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000cdc8:	6823      	ldr	r3, [r4, #0]
9000cdca:	68da      	ldr	r2, [r3, #12]
9000cdcc:	07d2      	lsls	r2, r2, #31
9000cdce:	d4f6      	bmi.n	9000cdbe <HAL_MDMA_Init+0x26>
  /* Write new CTCR Register value */
  hmdma->Instance->CTCR =  hmdma->Init.SourceInc      | hmdma->Init.DestinationInc | \
                           hmdma->Init.SourceDataSize | hmdma->Init.DestDataSize   | \
                           hmdma->Init.DataAlignment  | hmdma->Init.SourceBurst    | \
                           hmdma->Init.DestBurst                                   | \
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
9000cdd0:	e9d4 2505 	ldrd	r2, r5, [r4, #20]
9000cdd4:	69e0      	ldr	r0, [r4, #28]
9000cdd6:	432a      	orrs	r2, r5
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
9000cdd8:	68e1      	ldr	r1, [r4, #12]
9000cdda:	6925      	ldr	r5, [r4, #16]
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
9000cddc:	4302      	orrs	r2, r0
9000cdde:	6a20      	ldr	r0, [r4, #32]
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
9000cde0:	4329      	orrs	r1, r5
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
9000cde2:	4302      	orrs	r2, r0
9000cde4:	6a60      	ldr	r0, [r4, #36]	; 0x24
9000cde6:	4302      	orrs	r2, r0
9000cde8:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
9000cdea:	4302      	orrs	r2, r0
9000cdec:	6b20      	ldr	r0, [r4, #48]	; 0x30
9000cdee:	4302      	orrs	r2, r0
9000cdf0:	68a0      	ldr	r0, [r4, #8]
9000cdf2:	4302      	orrs	r2, r0
9000cdf4:	6aa0      	ldr	r0, [r4, #40]	; 0x28
9000cdf6:	3801      	subs	r0, #1
9000cdf8:	ea42 4280 	orr.w	r2, r2, r0, lsl #18
                           hmdma->Init.TransferTriggerMode;

  /* If SW request set the CTCR register to SW Request Mode */
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000cdfc:	6860      	ldr	r0, [r4, #4]
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
9000cdfe:	60d9      	str	r1, [r3, #12]
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000ce00:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
  hmdma->Instance->CTCR =  hmdma->Init.SourceInc      | hmdma->Init.DestinationInc | \
9000ce04:	611a      	str	r2, [r3, #16]
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000ce06:	d103      	bne.n	9000ce10 <HAL_MDMA_Init+0x78>
    -If the request is done by SW : BWM could be set to 1 or 0.
    -If the request is done by a peripheral :
    If mask address not set (0) => BWM must be set to 0
    If mask address set (different than 0) => BWM could be set to 1 or 0
    */
    hmdma->Instance->CTCR |= (MDMA_CTCR_SWRM | MDMA_CTCR_BWM);
9000ce08:	691a      	ldr	r2, [r3, #16]
9000ce0a:	f042 4240 	orr.w	r2, r2, #3221225472	; 0xc0000000
9000ce0e:	611a      	str	r2, [r3, #16]
  }

  /* Reset CBNDTR Register */
  hmdma->Instance->CBNDTR = 0;
9000ce10:	2100      	movs	r1, #0

  /* if block source address offset is negative set the Block Repeat Source address Update Mode to decrement */
  if(hmdma->Init.SourceBlockAddressOffset < 0)
9000ce12:	6b62      	ldr	r2, [r4, #52]	; 0x34
9000ce14:	428a      	cmp	r2, r1
  hmdma->Instance->CBNDTR = 0;
9000ce16:	6159      	str	r1, [r3, #20]
  if(hmdma->Init.SourceBlockAddressOffset < 0)
9000ce18:	db30      	blt.n	9000ce7c <HAL_MDMA_Init+0xe4>
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
  }
  else
  {
    /* Write new CBRUR Register value : source repeat block offset */
    hmdma->Instance->CBRUR = (((uint32_t)hmdma->Init.SourceBlockAddressOffset) & 0x0000FFFFU);
9000ce1a:	b292      	uxth	r2, r2
9000ce1c:	621a      	str	r2, [r3, #32]
  }

  /* If block destination address offset is negative set the Block Repeat destination address Update Mode to decrement */
  if(hmdma->Init.DestBlockAddressOffset < 0)
9000ce1e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
9000ce20:	2a00      	cmp	r2, #0
9000ce22:	db1c      	blt.n	9000ce5e <HAL_MDMA_Init+0xc6>
    hmdma->Instance->CBRUR |= ((blockoffset & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
  }
  else
  {
    /*write new CBRUR Register value : destination repeat block offset */
    hmdma->Instance->CBRUR |= ((((uint32_t)hmdma->Init.DestBlockAddressOffset) & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
9000ce24:	6a19      	ldr	r1, [r3, #32]
  }

  /* if HW request set the HW request and the requet CleraMask and ClearData MaskData, */
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000ce26:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
    hmdma->Instance->CBRUR |= ((((uint32_t)hmdma->Init.DestBlockAddressOffset) & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
9000ce2a:	ea41 4202 	orr.w	r2, r1, r2, lsl #16
9000ce2e:	621a      	str	r2, [r3, #32]
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000ce30:	d021      	beq.n	9000ce76 <HAL_MDMA_Init+0xde>
  {
    /* Set the HW request in CTRB register  */
    hmdma->Instance->CTBR = hmdma->Init.Request & MDMA_CTBR_TSEL;
9000ce32:	b2c0      	uxtb	r0, r0
9000ce34:	6298      	str	r0, [r3, #40]	; 0x28
  {
    hmdma->Instance->CTBR = 0;
  }

  /* Write Link Address Register */
  hmdma->Instance->CLAR =  0;
9000ce36:	2200      	movs	r2, #0
  hmdma->State = HAL_MDMA_STATE_READY;
9000ce38:	2101      	movs	r1, #1
  hmdma->Instance->CLAR =  0;
9000ce3a:	625a      	str	r2, [r3, #36]	; 0x24
  return HAL_OK;
9000ce3c:	4610      	mov	r0, r2
  hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000ce3e:	66a2      	str	r2, [r4, #104]	; 0x68
  hmdma->LinkedListNodeCounter  = 0;
9000ce40:	6662      	str	r2, [r4, #100]	; 0x64
  hmdma->State = HAL_MDMA_STATE_READY;
9000ce42:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
  hmdma->LastLinkedListNodeAddress   = 0;
9000ce46:	e9c4 2217 	strd	r2, r2, [r4, #92]	; 0x5c
}
9000ce4a:	bd38      	pop	{r3, r4, r5, pc}
      hmdma->ErrorCode = HAL_MDMA_ERROR_TIMEOUT;
9000ce4c:	2240      	movs	r2, #64	; 0x40
      hmdma->State = HAL_MDMA_STATE_ERROR;
9000ce4e:	2303      	movs	r3, #3
      return HAL_ERROR;
9000ce50:	2001      	movs	r0, #1
      hmdma->ErrorCode = HAL_MDMA_ERROR_TIMEOUT;
9000ce52:	66a2      	str	r2, [r4, #104]	; 0x68
      hmdma->State = HAL_MDMA_STATE_ERROR;
9000ce54:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
}
9000ce58:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
9000ce5a:	2001      	movs	r0, #1
}
9000ce5c:	bd38      	pop	{r3, r4, r5, pc}
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRDUM;
9000ce5e:	6959      	ldr	r1, [r3, #20]
    blockoffset = (uint32_t)(- hmdma->Init.DestBlockAddressOffset);
9000ce60:	4252      	negs	r2, r2
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000ce62:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRDUM;
9000ce66:	f441 2100 	orr.w	r1, r1, #524288	; 0x80000
9000ce6a:	6159      	str	r1, [r3, #20]
    hmdma->Instance->CBRUR |= ((blockoffset & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
9000ce6c:	6a19      	ldr	r1, [r3, #32]
9000ce6e:	ea41 4202 	orr.w	r2, r1, r2, lsl #16
9000ce72:	621a      	str	r2, [r3, #32]
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000ce74:	d1dd      	bne.n	9000ce32 <HAL_MDMA_Init+0x9a>
    hmdma->Instance->CTBR = 0;
9000ce76:	2200      	movs	r2, #0
9000ce78:	629a      	str	r2, [r3, #40]	; 0x28
9000ce7a:	e7dc      	b.n	9000ce36 <HAL_MDMA_Init+0x9e>
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
9000ce7c:	6959      	ldr	r1, [r3, #20]
    blockoffset = (uint32_t)(- hmdma->Init.SourceBlockAddressOffset);
9000ce7e:	4252      	negs	r2, r2
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
9000ce80:	f441 2180 	orr.w	r1, r1, #262144	; 0x40000
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
9000ce84:	b292      	uxth	r2, r2
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
9000ce86:	6159      	str	r1, [r3, #20]
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
9000ce88:	621a      	str	r2, [r3, #32]
9000ce8a:	e7c8      	b.n	9000ce1e <HAL_MDMA_Init+0x86>

9000ce8c <HAL_MDMA_DeInit>:
  if(hmdma == NULL)
9000ce8c:	b1f8      	cbz	r0, 9000cece <HAL_MDMA_DeInit+0x42>
  __HAL_MDMA_DISABLE(hmdma);
9000ce8e:	6802      	ldr	r2, [r0, #0]
9000ce90:	4601      	mov	r1, r0
  hmdma->Instance->CCR  = 0;
9000ce92:	2300      	movs	r3, #0
  __HAL_MDMA_DISABLE(hmdma);
9000ce94:	68d0      	ldr	r0, [r2, #12]
{
9000ce96:	b410      	push	{r4}
  __HAL_MDMA_DISABLE(hmdma);
9000ce98:	f020 0001 	bic.w	r0, r0, #1
  __HAL_MDMA_CLEAR_FLAG(hmdma,(MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BRT | MDMA_FLAG_BT | MDMA_FLAG_BFTC));
9000ce9c:	241f      	movs	r4, #31
  __HAL_MDMA_DISABLE(hmdma);
9000ce9e:	60d0      	str	r0, [r2, #12]
  return HAL_OK;
9000cea0:	4618      	mov	r0, r3
  hmdma->Instance->CCR  = 0;
9000cea2:	60d3      	str	r3, [r2, #12]
  hmdma->Instance->CTCR = 0;
9000cea4:	6113      	str	r3, [r2, #16]
  hmdma->Instance->CBNDTR = 0;
9000cea6:	6153      	str	r3, [r2, #20]
  hmdma->Instance->CSAR = 0;
9000cea8:	6193      	str	r3, [r2, #24]
  hmdma->Instance->CDAR = 0;
9000ceaa:	61d3      	str	r3, [r2, #28]
  hmdma->Instance->CBRUR = 0;
9000ceac:	6213      	str	r3, [r2, #32]
  hmdma->Instance->CLAR = 0;
9000ceae:	6253      	str	r3, [r2, #36]	; 0x24
  hmdma->Instance->CTBR = 0;
9000ceb0:	6293      	str	r3, [r2, #40]	; 0x28
  hmdma->Instance->CMAR = 0;
9000ceb2:	6313      	str	r3, [r2, #48]	; 0x30
  hmdma->Instance->CMDR = 0;
9000ceb4:	6353      	str	r3, [r2, #52]	; 0x34
  __HAL_MDMA_CLEAR_FLAG(hmdma,(MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BRT | MDMA_FLAG_BT | MDMA_FLAG_BFTC));
9000ceb6:	6054      	str	r4, [r2, #4]
  hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000ceb8:	668b      	str	r3, [r1, #104]	; 0x68
  __HAL_UNLOCK(hmdma);
9000ceba:	f881 303c 	strb.w	r3, [r1, #60]	; 0x3c
  hmdma->State = HAL_MDMA_STATE_RESET;
9000cebe:	f881 303d 	strb.w	r3, [r1, #61]	; 0x3d
}
9000cec2:	f85d 4b04 	ldr.w	r4, [sp], #4
  hmdma->LinkedListNodeCounter  = 0;
9000cec6:	664b      	str	r3, [r1, #100]	; 0x64
  hmdma->LastLinkedListNodeAddress   = 0;
9000cec8:	e9c1 3317 	strd	r3, r3, [r1, #92]	; 0x5c
}
9000cecc:	4770      	bx	lr
    return HAL_ERROR;
9000cece:	2001      	movs	r0, #1
}
9000ced0:	4770      	bx	lr
9000ced2:	bf00      	nop

9000ced4 <HAL_MDMA_ConfigPostRequestMask>:
  if(hmdma == NULL)
9000ced4:	b310      	cbz	r0, 9000cf1c <HAL_MDMA_ConfigPostRequestMask+0x48>
9000ced6:	4603      	mov	r3, r0
  __HAL_LOCK(hmdma);
9000ced8:	f890 003c 	ldrb.w	r0, [r0, #60]	; 0x3c
9000cedc:	2801      	cmp	r0, #1
9000cede:	d01f      	beq.n	9000cf20 <HAL_MDMA_ConfigPostRequestMask+0x4c>
{
9000cee0:	b530      	push	{r4, r5, lr}
  __HAL_LOCK(hmdma);
9000cee2:	f04f 0e01 	mov.w	lr, #1
  if(HAL_MDMA_STATE_READY == hmdma->State)
9000cee6:	f893 c03d 	ldrb.w	ip, [r3, #61]	; 0x3d
9000ceea:	45f4      	cmp	ip, lr
9000ceec:	fa5f f08c 	uxtb.w	r0, ip
  __HAL_LOCK(hmdma);
9000cef0:	f883 e03c 	strb.w	lr, [r3, #60]	; 0x3c
  if(HAL_MDMA_STATE_READY == hmdma->State)
9000cef4:	d004      	beq.n	9000cf00 <HAL_MDMA_ConfigPostRequestMask+0x2c>
    status =  HAL_ERROR;
9000cef6:	4670      	mov	r0, lr
  __HAL_UNLOCK(hmdma);
9000cef8:	2200      	movs	r2, #0
9000cefa:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
}
9000cefe:	bd30      	pop	{r4, r5, pc}
    if((hmdma->Instance->CTCR & MDMA_CTCR_SWRM) == 0U)
9000cf00:	681d      	ldr	r5, [r3, #0]
9000cf02:	692c      	ldr	r4, [r5, #16]
9000cf04:	f014 4480 	ands.w	r4, r4, #1073741824	; 0x40000000
9000cf08:	d1f6      	bne.n	9000cef8 <HAL_MDMA_ConfigPostRequestMask+0x24>
      hmdma->Instance->CMAR = MaskAddress;
9000cf0a:	6329      	str	r1, [r5, #48]	; 0x30
      hmdma->Instance->CMDR = MaskData;
9000cf0c:	636a      	str	r2, [r5, #52]	; 0x34
        hmdma->Instance->CTCR &=  ~MDMA_CTCR_BWM;
9000cf0e:	692a      	ldr	r2, [r5, #16]
      if(MaskAddress == 0U)
9000cf10:	b941      	cbnz	r1, 9000cf24 <HAL_MDMA_ConfigPostRequestMask+0x50>
        hmdma->Instance->CTCR &=  ~MDMA_CTCR_BWM;
9000cf12:	f022 4200 	bic.w	r2, r2, #2147483648	; 0x80000000
  HAL_StatusTypeDef  status = HAL_OK;
9000cf16:	4608      	mov	r0, r1
        hmdma->Instance->CTCR &=  ~MDMA_CTCR_BWM;
9000cf18:	612a      	str	r2, [r5, #16]
9000cf1a:	e7ed      	b.n	9000cef8 <HAL_MDMA_ConfigPostRequestMask+0x24>
    return HAL_ERROR;
9000cf1c:	2001      	movs	r0, #1
9000cf1e:	4770      	bx	lr
  __HAL_LOCK(hmdma);
9000cf20:	2002      	movs	r0, #2
}
9000cf22:	4770      	bx	lr
        hmdma->Instance->CTCR |=  MDMA_CTCR_BWM;
9000cf24:	f042 4200 	orr.w	r2, r2, #2147483648	; 0x80000000
  HAL_StatusTypeDef  status = HAL_OK;
9000cf28:	4620      	mov	r0, r4
        hmdma->Instance->CTCR |=  MDMA_CTCR_BWM;
9000cf2a:	612a      	str	r2, [r5, #16]
9000cf2c:	e7e4      	b.n	9000cef8 <HAL_MDMA_ConfigPostRequestMask+0x24>
9000cf2e:	bf00      	nop

9000cf30 <HAL_MDMA_Start_IT>:
  if(hmdma == NULL)
9000cf30:	2800      	cmp	r0, #0
9000cf32:	d06f      	beq.n	9000d014 <HAL_MDMA_Start_IT+0xe4>
9000cf34:	4684      	mov	ip, r0
  __HAL_LOCK(hmdma);
9000cf36:	f890 003c 	ldrb.w	r0, [r0, #60]	; 0x3c
9000cf3a:	2801      	cmp	r0, #1
9000cf3c:	d072      	beq.n	9000d024 <HAL_MDMA_Start_IT+0xf4>
9000cf3e:	2001      	movs	r0, #1
9000cf40:	f88c 003c 	strb.w	r0, [ip, #60]	; 0x3c
  if(HAL_MDMA_STATE_READY == hmdma->State)
9000cf44:	f89c 003d 	ldrb.w	r0, [ip, #61]	; 0x3d
9000cf48:	2801      	cmp	r0, #1
9000cf4a:	d004      	beq.n	9000cf56 <HAL_MDMA_Start_IT+0x26>
    __HAL_UNLOCK(hmdma);
9000cf4c:	2300      	movs	r3, #0
    return HAL_BUSY;
9000cf4e:	2002      	movs	r0, #2
    __HAL_UNLOCK(hmdma);
9000cf50:	f88c 303c 	strb.w	r3, [ip, #60]	; 0x3c
    return HAL_BUSY;
9000cf54:	4770      	bx	lr
    hmdma->State = HAL_MDMA_STATE_BUSY;
9000cf56:	2002      	movs	r0, #2
  MODIFY_REG(hmdma->Instance->CBNDTR ,MDMA_CBNDTR_BNDT, (BlockDataLength & MDMA_CBNDTR_BNDT));
9000cf58:	f3c3 0310 	ubfx	r3, r3, #0, #17
  if((addressMask == 0x20000000U) || (addressMask == 0x00000000U))
9000cf5c:	f011 4f5f 	tst.w	r1, #3741319168	; 0xdf000000
{
9000cf60:	b530      	push	{r4, r5, lr}
  MODIFY_REG(hmdma->Instance->CBNDTR , MDMA_CBNDTR_BRC , ((BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos) & MDMA_CBNDTR_BRC);
9000cf62:	9d03      	ldr	r5, [sp, #12]
    hmdma->State = HAL_MDMA_STATE_BUSY;
9000cf64:	f88c 003d 	strb.w	r0, [ip, #61]	; 0x3d
    hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000cf68:	f04f 0000 	mov.w	r0, #0
    __HAL_MDMA_DISABLE(hmdma);
9000cf6c:	f8dc 4000 	ldr.w	r4, [ip]
  MODIFY_REG(hmdma->Instance->CBNDTR , MDMA_CBNDTR_BRC , ((BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos) & MDMA_CBNDTR_BRC);
9000cf70:	f105 3eff 	add.w	lr, r5, #4294967295
    hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000cf74:	f8cc 0068 	str.w	r0, [ip, #104]	; 0x68
  MODIFY_REG(hmdma->Instance->CBNDTR ,MDMA_CBNDTR_BNDT, (BlockDataLength & MDMA_CBNDTR_BNDT));
9000cf78:	f5a0 3000 	sub.w	r0, r0, #131072	; 0x20000
    __HAL_MDMA_DISABLE(hmdma);
9000cf7c:	68e5      	ldr	r5, [r4, #12]
9000cf7e:	f025 0501 	bic.w	r5, r5, #1
9000cf82:	60e5      	str	r5, [r4, #12]
  MODIFY_REG(hmdma->Instance->CBNDTR ,MDMA_CBNDTR_BNDT, (BlockDataLength & MDMA_CBNDTR_BNDT));
9000cf84:	6965      	ldr	r5, [r4, #20]
9000cf86:	ea00 0005 	and.w	r0, r0, r5
9000cf8a:	ea40 0003 	orr.w	r0, r0, r3
9000cf8e:	6160      	str	r0, [r4, #20]
  MODIFY_REG(hmdma->Instance->CBNDTR , MDMA_CBNDTR_BRC , ((BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos) & MDMA_CBNDTR_BRC);
9000cf90:	6963      	ldr	r3, [r4, #20]
9000cf92:	f3c3 0313 	ubfx	r3, r3, #0, #20
9000cf96:	ea43 530e 	orr.w	r3, r3, lr, lsl #20
9000cf9a:	6163      	str	r3, [r4, #20]
  __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_CISR_BRTIF | MDMA_CISR_BTIF | MDMA_CISR_TCIF);
9000cf9c:	f04f 031f 	mov.w	r3, #31
9000cfa0:	6063      	str	r3, [r4, #4]
  hmdma->Instance->CDAR = DstAddress;
9000cfa2:	61e2      	str	r2, [r4, #28]
  hmdma->Instance->CSAR = SrcAddress;
9000cfa4:	61a1      	str	r1, [r4, #24]
    hmdma->Instance->CTBR |= MDMA_CTBR_SBUS;
9000cfa6:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000cfa8:	bf0c      	ite	eq
9000cfaa:	f443 3380 	orreq.w	r3, r3, #65536	; 0x10000
    hmdma->Instance->CTBR &= (~MDMA_CTBR_SBUS);
9000cfae:	f423 3380 	bicne.w	r3, r3, #65536	; 0x10000
  if((addressMask == 0x20000000U) || (addressMask == 0x00000000U))
9000cfb2:	f012 4f5f 	tst.w	r2, #3741319168	; 0xdf000000
    if(hmdma->XferBlockCpltCallback != NULL)
9000cfb6:	f8dc 204c 	ldr.w	r2, [ip, #76]	; 0x4c
    hmdma->Instance->CTBR &= (~MDMA_CTBR_SBUS);
9000cfba:	62a3      	str	r3, [r4, #40]	; 0x28
    hmdma->Instance->CTBR |= MDMA_CTBR_DBUS;
9000cfbc:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000cfbe:	bf0c      	ite	eq
9000cfc0:	f443 3300 	orreq.w	r3, r3, #131072	; 0x20000
    hmdma->Instance->CTBR &= (~MDMA_CTBR_DBUS);
9000cfc4:	f423 3300 	bicne.w	r3, r3, #131072	; 0x20000
9000cfc8:	62a3      	str	r3, [r4, #40]	; 0x28
  hmdma->Instance->CLAR = (uint32_t)hmdma->FirstLinkedListNodeAddress;
9000cfca:	f8dc 305c 	ldr.w	r3, [ip, #92]	; 0x5c
9000cfce:	6263      	str	r3, [r4, #36]	; 0x24
    __HAL_MDMA_ENABLE_IT(hmdma, (MDMA_IT_TE | MDMA_IT_CTC));
9000cfd0:	68e3      	ldr	r3, [r4, #12]
9000cfd2:	f043 0306 	orr.w	r3, r3, #6
9000cfd6:	60e3      	str	r3, [r4, #12]
    if(hmdma->XferBlockCpltCallback != NULL)
9000cfd8:	b11a      	cbz	r2, 9000cfe2 <HAL_MDMA_Start_IT+0xb2>
      __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BT);
9000cfda:	68e3      	ldr	r3, [r4, #12]
9000cfdc:	f043 0310 	orr.w	r3, r3, #16
9000cfe0:	60e3      	str	r3, [r4, #12]
    if(hmdma->XferRepeatBlockCpltCallback != NULL)
9000cfe2:	f8dc 3050 	ldr.w	r3, [ip, #80]	; 0x50
9000cfe6:	b11b      	cbz	r3, 9000cff0 <HAL_MDMA_Start_IT+0xc0>
      __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BRT);
9000cfe8:	68e3      	ldr	r3, [r4, #12]
9000cfea:	f043 0308 	orr.w	r3, r3, #8
9000cfee:	60e3      	str	r3, [r4, #12]
    if(hmdma->XferBufferCpltCallback != NULL)
9000cff0:	f8dc 3048 	ldr.w	r3, [ip, #72]	; 0x48
9000cff4:	b11b      	cbz	r3, 9000cffe <HAL_MDMA_Start_IT+0xce>
      __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BFTC);
9000cff6:	68e3      	ldr	r3, [r4, #12]
9000cff8:	f043 0320 	orr.w	r3, r3, #32
9000cffc:	60e3      	str	r3, [r4, #12]
    __HAL_MDMA_ENABLE(hmdma);
9000cffe:	68e3      	ldr	r3, [r4, #12]
    if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000d000:	f8dc 2004 	ldr.w	r2, [ip, #4]
    __HAL_MDMA_ENABLE(hmdma);
9000d004:	f043 0301 	orr.w	r3, r3, #1
    if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000d008:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
    __HAL_MDMA_ENABLE(hmdma);
9000d00c:	60e3      	str	r3, [r4, #12]
    if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000d00e:	d003      	beq.n	9000d018 <HAL_MDMA_Start_IT+0xe8>
  return HAL_OK;
9000d010:	2000      	movs	r0, #0
}
9000d012:	bd30      	pop	{r4, r5, pc}
    return HAL_ERROR;
9000d014:	2001      	movs	r0, #1
9000d016:	4770      	bx	lr
      hmdma->Instance->CCR |=  MDMA_CCR_SWRQ;
9000d018:	68e3      	ldr	r3, [r4, #12]
  return HAL_OK;
9000d01a:	2000      	movs	r0, #0
      hmdma->Instance->CCR |=  MDMA_CCR_SWRQ;
9000d01c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
9000d020:	60e3      	str	r3, [r4, #12]
}
9000d022:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hmdma);
9000d024:	2002      	movs	r0, #2
}
9000d026:	4770      	bx	lr

9000d028 <HAL_MDMA_Abort_IT>:
  if(hmdma == NULL)
9000d028:	4603      	mov	r3, r0
9000d02a:	b188      	cbz	r0, 9000d050 <HAL_MDMA_Abort_IT+0x28>
  if(HAL_MDMA_STATE_BUSY != hmdma->State)
9000d02c:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
9000d030:	2a02      	cmp	r2, #2
9000d032:	d003      	beq.n	9000d03c <HAL_MDMA_Abort_IT+0x14>
    hmdma->ErrorCode = HAL_MDMA_ERROR_NO_XFER;
9000d034:	2280      	movs	r2, #128	; 0x80
    return HAL_ERROR;
9000d036:	2001      	movs	r0, #1
    hmdma->ErrorCode = HAL_MDMA_ERROR_NO_XFER;
9000d038:	669a      	str	r2, [r3, #104]	; 0x68
    return HAL_ERROR;
9000d03a:	4770      	bx	lr
    __HAL_MDMA_DISABLE(hmdma);
9000d03c:	6802      	ldr	r2, [r0, #0]
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000d03e:	2104      	movs	r1, #4
  return HAL_OK;
9000d040:	2000      	movs	r0, #0
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000d042:	f883 103d 	strb.w	r1, [r3, #61]	; 0x3d
    __HAL_MDMA_DISABLE(hmdma);
9000d046:	68d3      	ldr	r3, [r2, #12]
9000d048:	f023 0301 	bic.w	r3, r3, #1
9000d04c:	60d3      	str	r3, [r2, #12]
  return HAL_OK;
9000d04e:	4770      	bx	lr
    return HAL_ERROR;
9000d050:	2001      	movs	r0, #1
}
9000d052:	4770      	bx	lr

9000d054 <HAL_MDMA_IRQHandler>:
{
9000d054:	b530      	push	{r4, r5, lr}
  __IO uint32_t count = 0;
9000d056:	2300      	movs	r3, #0
{
9000d058:	b083      	sub	sp, #12
  if((MDMA->GISR0 & generalIntFlag) == 0U)
9000d05a:	f04f 45a4 	mov.w	r5, #1375731712	; 0x52000000
{
9000d05e:	4604      	mov	r4, r0
  __IO uint32_t count = 0;
9000d060:	9301      	str	r3, [sp, #4]
  generalIntFlag =  1UL << ((((uint32_t)hmdma->Instance - (uint32_t)(MDMA_Channel0))/HAL_MDMA_CHANNEL_SIZE) & 0x1FU);
9000d062:	2101      	movs	r1, #1
  uint32_t timeout = SystemCoreClock / 9600U;
9000d064:	4b57      	ldr	r3, [pc, #348]	; (9000d1c4 <HAL_MDMA_IRQHandler+0x170>)
  if((MDMA->GISR0 & generalIntFlag) == 0U)
9000d066:	6828      	ldr	r0, [r5, #0]
  generalIntFlag =  1UL << ((((uint32_t)hmdma->Instance - (uint32_t)(MDMA_Channel0))/HAL_MDMA_CHANNEL_SIZE) & 0x1FU);
9000d068:	4a57      	ldr	r2, [pc, #348]	; (9000d1c8 <HAL_MDMA_IRQHandler+0x174>)
  uint32_t timeout = SystemCoreClock / 9600U;
9000d06a:	681d      	ldr	r5, [r3, #0]
  generalIntFlag =  1UL << ((((uint32_t)hmdma->Instance - (uint32_t)(MDMA_Channel0))/HAL_MDMA_CHANNEL_SIZE) & 0x1FU);
9000d06c:	6823      	ldr	r3, [r4, #0]
9000d06e:	441a      	add	r2, r3
9000d070:	f3c2 1284 	ubfx	r2, r2, #6, #5
9000d074:	fa01 f202 	lsl.w	r2, r1, r2
  if((MDMA->GISR0 & generalIntFlag) == 0U)
9000d078:	4202      	tst	r2, r0
9000d07a:	f000 80a0 	beq.w	9000d1be <HAL_MDMA_IRQHandler+0x16a>
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_TE) != 0U))
9000d07e:	681a      	ldr	r2, [r3, #0]
9000d080:	07d1      	lsls	r1, r2, #31
9000d082:	d529      	bpl.n	9000d0d8 <HAL_MDMA_IRQHandler+0x84>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_TE) != 0U)
9000d084:	68da      	ldr	r2, [r3, #12]
9000d086:	0792      	lsls	r2, r2, #30
9000d088:	d526      	bpl.n	9000d0d8 <HAL_MDMA_IRQHandler+0x84>
      __HAL_MDMA_DISABLE_IT(hmdma, MDMA_IT_TE);
9000d08a:	68da      	ldr	r2, [r3, #12]
9000d08c:	f022 0202 	bic.w	r2, r2, #2
9000d090:	60da      	str	r2, [r3, #12]
      errorFlag = hmdma->Instance->CESR;
9000d092:	689a      	ldr	r2, [r3, #8]
        hmdma->ErrorCode |= HAL_MDMA_ERROR_READ_XFER;
9000d094:	6ea1      	ldr	r1, [r4, #104]	; 0x68
      if((errorFlag & MDMA_CESR_TED) == 0U)
9000d096:	0610      	lsls	r0, r2, #24
        hmdma->ErrorCode |= HAL_MDMA_ERROR_READ_XFER;
9000d098:	bf54      	ite	pl
9000d09a:	f041 0101 	orrpl.w	r1, r1, #1
        hmdma->ErrorCode |= HAL_MDMA_ERROR_WRITE_XFER;
9000d09e:	f041 0102 	orrmi.w	r1, r1, #2
9000d0a2:	66a1      	str	r1, [r4, #104]	; 0x68
      if((errorFlag & MDMA_CESR_TEMD) != 0U)
9000d0a4:	0591      	lsls	r1, r2, #22
9000d0a6:	d503      	bpl.n	9000d0b0 <HAL_MDMA_IRQHandler+0x5c>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_MASK_DATA;
9000d0a8:	6ea1      	ldr	r1, [r4, #104]	; 0x68
9000d0aa:	f041 0104 	orr.w	r1, r1, #4
9000d0ae:	66a1      	str	r1, [r4, #104]	; 0x68
      if((errorFlag & MDMA_CESR_TELD) != 0U)
9000d0b0:	05d0      	lsls	r0, r2, #23
9000d0b2:	d503      	bpl.n	9000d0bc <HAL_MDMA_IRQHandler+0x68>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_LINKED_LIST;
9000d0b4:	6ea1      	ldr	r1, [r4, #104]	; 0x68
9000d0b6:	f041 0108 	orr.w	r1, r1, #8
9000d0ba:	66a1      	str	r1, [r4, #104]	; 0x68
      if((errorFlag & MDMA_CESR_ASE) != 0U)
9000d0bc:	0551      	lsls	r1, r2, #21
9000d0be:	d503      	bpl.n	9000d0c8 <HAL_MDMA_IRQHandler+0x74>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_ALIGNMENT;
9000d0c0:	6ea1      	ldr	r1, [r4, #104]	; 0x68
9000d0c2:	f041 0110 	orr.w	r1, r1, #16
9000d0c6:	66a1      	str	r1, [r4, #104]	; 0x68
      if((errorFlag & MDMA_CESR_BSE) != 0U)
9000d0c8:	0510      	lsls	r0, r2, #20
9000d0ca:	d503      	bpl.n	9000d0d4 <HAL_MDMA_IRQHandler+0x80>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_BLOCK_SIZE;
9000d0cc:	6ea2      	ldr	r2, [r4, #104]	; 0x68
9000d0ce:	f042 0220 	orr.w	r2, r2, #32
9000d0d2:	66a2      	str	r2, [r4, #104]	; 0x68
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_TE);
9000d0d4:	2201      	movs	r2, #1
9000d0d6:	605a      	str	r2, [r3, #4]
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BFTC) != 0U))
9000d0d8:	681a      	ldr	r2, [r3, #0]
9000d0da:	06d1      	lsls	r1, r2, #27
9000d0dc:	d509      	bpl.n	9000d0f2 <HAL_MDMA_IRQHandler+0x9e>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BFTC) != 0U)
9000d0de:	68da      	ldr	r2, [r3, #12]
9000d0e0:	0692      	lsls	r2, r2, #26
9000d0e2:	d506      	bpl.n	9000d0f2 <HAL_MDMA_IRQHandler+0x9e>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BFTC);
9000d0e4:	2110      	movs	r1, #16
      if(hmdma->XferBufferCpltCallback != NULL)
9000d0e6:	6ca2      	ldr	r2, [r4, #72]	; 0x48
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BFTC);
9000d0e8:	6059      	str	r1, [r3, #4]
      if(hmdma->XferBufferCpltCallback != NULL)
9000d0ea:	b112      	cbz	r2, 9000d0f2 <HAL_MDMA_IRQHandler+0x9e>
        hmdma->XferBufferCpltCallback(hmdma);
9000d0ec:	4620      	mov	r0, r4
9000d0ee:	4790      	blx	r2
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BT) != 0U))
9000d0f0:	6823      	ldr	r3, [r4, #0]
9000d0f2:	681a      	ldr	r2, [r3, #0]
9000d0f4:	0710      	lsls	r0, r2, #28
9000d0f6:	d509      	bpl.n	9000d10c <HAL_MDMA_IRQHandler+0xb8>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BT) != 0U)
9000d0f8:	68da      	ldr	r2, [r3, #12]
9000d0fa:	06d1      	lsls	r1, r2, #27
9000d0fc:	d506      	bpl.n	9000d10c <HAL_MDMA_IRQHandler+0xb8>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BT);
9000d0fe:	2108      	movs	r1, #8
      if(hmdma->XferBlockCpltCallback != NULL)
9000d100:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BT);
9000d102:	6059      	str	r1, [r3, #4]
      if(hmdma->XferBlockCpltCallback != NULL)
9000d104:	b112      	cbz	r2, 9000d10c <HAL_MDMA_IRQHandler+0xb8>
        hmdma->XferBlockCpltCallback(hmdma);
9000d106:	4620      	mov	r0, r4
9000d108:	4790      	blx	r2
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BRT) != 0U))
9000d10a:	6823      	ldr	r3, [r4, #0]
9000d10c:	681a      	ldr	r2, [r3, #0]
9000d10e:	0752      	lsls	r2, r2, #29
9000d110:	d509      	bpl.n	9000d126 <HAL_MDMA_IRQHandler+0xd2>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BRT) != 0U)
9000d112:	68da      	ldr	r2, [r3, #12]
9000d114:	0710      	lsls	r0, r2, #28
9000d116:	d506      	bpl.n	9000d126 <HAL_MDMA_IRQHandler+0xd2>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BRT);
9000d118:	2104      	movs	r1, #4
      if(hmdma->XferRepeatBlockCpltCallback != NULL)
9000d11a:	6d22      	ldr	r2, [r4, #80]	; 0x50
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BRT);
9000d11c:	6059      	str	r1, [r3, #4]
      if(hmdma->XferRepeatBlockCpltCallback != NULL)
9000d11e:	b112      	cbz	r2, 9000d126 <HAL_MDMA_IRQHandler+0xd2>
        hmdma->XferRepeatBlockCpltCallback(hmdma);
9000d120:	4620      	mov	r0, r4
9000d122:	4790      	blx	r2
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_CTC) != 0U))
9000d124:	6823      	ldr	r3, [r4, #0]
9000d126:	681a      	ldr	r2, [r3, #0]
9000d128:	0791      	lsls	r1, r2, #30
9000d12a:	d516      	bpl.n	9000d15a <HAL_MDMA_IRQHandler+0x106>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_CTC) != 0U)
9000d12c:	68da      	ldr	r2, [r3, #12]
9000d12e:	0752      	lsls	r2, r2, #29
9000d130:	d513      	bpl.n	9000d15a <HAL_MDMA_IRQHandler+0x106>
      __HAL_MDMA_DISABLE_IT(hmdma, (MDMA_IT_TE | MDMA_IT_CTC | MDMA_IT_BT | MDMA_IT_BRT | MDMA_IT_BFTC));
9000d132:	68da      	ldr	r2, [r3, #12]
9000d134:	f022 023e 	bic.w	r2, r2, #62	; 0x3e
9000d138:	60da      	str	r2, [r3, #12]
      if(HAL_MDMA_STATE_ABORT == hmdma->State)
9000d13a:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
9000d13e:	2a04      	cmp	r2, #4
9000d140:	d034      	beq.n	9000d1ac <HAL_MDMA_IRQHandler+0x158>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_CTC);
9000d142:	2202      	movs	r2, #2
      __HAL_UNLOCK(hmdma);
9000d144:	2100      	movs	r1, #0
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_CTC);
9000d146:	605a      	str	r2, [r3, #4]
      hmdma->State = HAL_MDMA_STATE_READY;
9000d148:	2201      	movs	r2, #1
      if(hmdma->XferCpltCallback != NULL)
9000d14a:	6c63      	ldr	r3, [r4, #68]	; 0x44
      __HAL_UNLOCK(hmdma);
9000d14c:	f884 103c 	strb.w	r1, [r4, #60]	; 0x3c
      hmdma->State = HAL_MDMA_STATE_READY;
9000d150:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      if(hmdma->XferCpltCallback != NULL)
9000d154:	b10b      	cbz	r3, 9000d15a <HAL_MDMA_IRQHandler+0x106>
        hmdma->XferCpltCallback(hmdma);
9000d156:	4620      	mov	r0, r4
9000d158:	4798      	blx	r3
  if(hmdma->ErrorCode != HAL_MDMA_ERROR_NONE)
9000d15a:	6ea3      	ldr	r3, [r4, #104]	; 0x68
9000d15c:	2b00      	cmp	r3, #0
9000d15e:	d02e      	beq.n	9000d1be <HAL_MDMA_IRQHandler+0x16a>
    __HAL_MDMA_DISABLE(hmdma);
9000d160:	6821      	ldr	r1, [r4, #0]
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000d162:	2004      	movs	r0, #4
  uint32_t timeout = SystemCoreClock / 9600U;
9000d164:	4b19      	ldr	r3, [pc, #100]	; (9000d1cc <HAL_MDMA_IRQHandler+0x178>)
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000d166:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  uint32_t timeout = SystemCoreClock / 9600U;
9000d16a:	fba3 3205 	umull	r3, r2, r3, r5
    __HAL_MDMA_DISABLE(hmdma);
9000d16e:	68cb      	ldr	r3, [r1, #12]
9000d170:	f023 0301 	bic.w	r3, r3, #1
  uint32_t timeout = SystemCoreClock / 9600U;
9000d174:	0a92      	lsrs	r2, r2, #10
    __HAL_MDMA_DISABLE(hmdma);
9000d176:	60cb      	str	r3, [r1, #12]
9000d178:	e002      	b.n	9000d180 <HAL_MDMA_IRQHandler+0x12c>
    while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U);
9000d17a:	68cb      	ldr	r3, [r1, #12]
9000d17c:	07d8      	lsls	r0, r3, #31
9000d17e:	d504      	bpl.n	9000d18a <HAL_MDMA_IRQHandler+0x136>
      if (++count > timeout)
9000d180:	9b01      	ldr	r3, [sp, #4]
9000d182:	3301      	adds	r3, #1
9000d184:	4293      	cmp	r3, r2
9000d186:	9301      	str	r3, [sp, #4]
9000d188:	d9f7      	bls.n	9000d17a <HAL_MDMA_IRQHandler+0x126>
    __HAL_UNLOCK(hmdma);
9000d18a:	2300      	movs	r3, #0
9000d18c:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000d190:	68cb      	ldr	r3, [r1, #12]
9000d192:	07db      	lsls	r3, r3, #31
      hmdma->State = HAL_MDMA_STATE_ERROR;
9000d194:	bf4c      	ite	mi
9000d196:	2303      	movmi	r3, #3
      hmdma->State = HAL_MDMA_STATE_READY;
9000d198:	2301      	movpl	r3, #1
9000d19a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    if (hmdma->XferErrorCallback != NULL)
9000d19e:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000d1a0:	b16b      	cbz	r3, 9000d1be <HAL_MDMA_IRQHandler+0x16a>
      hmdma->XferErrorCallback(hmdma);
9000d1a2:	4620      	mov	r0, r4
}
9000d1a4:	b003      	add	sp, #12
9000d1a6:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
      hmdma->XferErrorCallback(hmdma);
9000d1aa:	4718      	bx	r3
        __HAL_UNLOCK(hmdma);
9000d1ac:	2100      	movs	r1, #0
        hmdma->State = HAL_MDMA_STATE_READY;
9000d1ae:	2201      	movs	r2, #1
        if(hmdma->XferAbortCallback != NULL)
9000d1b0:	6da3      	ldr	r3, [r4, #88]	; 0x58
        __HAL_UNLOCK(hmdma);
9000d1b2:	f884 103c 	strb.w	r1, [r4, #60]	; 0x3c
        hmdma->State = HAL_MDMA_STATE_READY;
9000d1b6:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        if(hmdma->XferAbortCallback != NULL)
9000d1ba:	2b00      	cmp	r3, #0
9000d1bc:	d1f1      	bne.n	9000d1a2 <HAL_MDMA_IRQHandler+0x14e>
}
9000d1be:	b003      	add	sp, #12
9000d1c0:	bd30      	pop	{r4, r5, pc}
9000d1c2:	bf00      	nop
9000d1c4:	24000060 	.word	0x24000060
9000d1c8:	adffffc0 	.word	0xadffffc0
9000d1cc:	1b4e81b5 	.word	0x1b4e81b5

9000d1d0 <HAL_PWREx_ConfigSupply>:
  *         PWR_SMPS_2V5_SUPPLIES_EXT are used only for lines that supports SMPS
  *         regulator.
  * @retval HAL status.
  */
HAL_StatusTypeDef HAL_PWREx_ConfigSupply (uint32_t SupplySource)
{
9000d1d0:	b538      	push	{r3, r4, r5, lr}
  /* Check the parameters */
  assert_param (IS_PWR_SUPPLY (SupplySource));

  /* Check if supply source was configured */
#if defined (PWR_FLAG_SCUEN)
  if (__HAL_PWR_GET_FLAG (PWR_FLAG_SCUEN) == 0U)
9000d1d2:	4c10      	ldr	r4, [pc, #64]	; (9000d214 <HAL_PWREx_ConfigSupply+0x44>)
9000d1d4:	68e3      	ldr	r3, [r4, #12]
9000d1d6:	f013 0f04 	tst.w	r3, #4
#else
  if ((PWR->CR3 & (PWR_CR3_SMPSEN | PWR_CR3_LDOEN | PWR_CR3_BYPASS)) != (PWR_CR3_SMPSEN | PWR_CR3_LDOEN))
#endif /* defined (PWR_FLAG_SCUEN) */
  {
    /* Check supply configuration */
    if ((PWR->CR3 & PWR_SUPPLY_CONFIG_MASK) != SupplySource)
9000d1da:	68e3      	ldr	r3, [r4, #12]
  if (__HAL_PWR_GET_FLAG (PWR_FLAG_SCUEN) == 0U)
9000d1dc:	d105      	bne.n	9000d1ea <HAL_PWREx_ConfigSupply+0x1a>
    if ((PWR->CR3 & PWR_SUPPLY_CONFIG_MASK) != SupplySource)
9000d1de:	f003 0307 	and.w	r3, r3, #7
    {
      /* Supply configuration update locked, can't apply a new supply config */
      return HAL_ERROR;
9000d1e2:	1a18      	subs	r0, r3, r0
9000d1e4:	bf18      	it	ne
9000d1e6:	2001      	movne	r0, #1
    }
  }
#endif /* defined (SMPS) */

  return HAL_OK;
}
9000d1e8:	bd38      	pop	{r3, r4, r5, pc}
  MODIFY_REG (PWR->CR3, PWR_SUPPLY_CONFIG_MASK, SupplySource);
9000d1ea:	f023 0307 	bic.w	r3, r3, #7
9000d1ee:	4303      	orrs	r3, r0
9000d1f0:	60e3      	str	r3, [r4, #12]
  tickstart = HAL_GetTick ();
9000d1f2:	f7fc ff59 	bl	9000a0a8 <HAL_GetTick>
9000d1f6:	4605      	mov	r5, r0
  while (__HAL_PWR_GET_FLAG (PWR_FLAG_ACTVOSRDY) == 0U)
9000d1f8:	e005      	b.n	9000d206 <HAL_PWREx_ConfigSupply+0x36>
    if ((HAL_GetTick () - tickstart) > PWR_FLAG_SETTING_DELAY)
9000d1fa:	f7fc ff55 	bl	9000a0a8 <HAL_GetTick>
9000d1fe:	1b40      	subs	r0, r0, r5
9000d200:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
9000d204:	d804      	bhi.n	9000d210 <HAL_PWREx_ConfigSupply+0x40>
  while (__HAL_PWR_GET_FLAG (PWR_FLAG_ACTVOSRDY) == 0U)
9000d206:	6863      	ldr	r3, [r4, #4]
9000d208:	049b      	lsls	r3, r3, #18
9000d20a:	d5f6      	bpl.n	9000d1fa <HAL_PWREx_ConfigSupply+0x2a>
  return HAL_OK;
9000d20c:	2000      	movs	r0, #0
}
9000d20e:	bd38      	pop	{r3, r4, r5, pc}
      return HAL_ERROR;
9000d210:	2001      	movs	r0, #1
}
9000d212:	bd38      	pop	{r3, r4, r5, pc}
9000d214:	58024800 	.word	0x58024800

9000d218 <HAL_RCC_GetSysClockFreq.part.0>:
    case RCC_CFGR_SWS_PLL1:  /* PLL1 used as system clock  source */

      /* PLL_VCO = (HSE_VALUE or HSI_VALUE or CSI_VALUE/ PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLR
      */
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000d218:	4b3b      	ldr	r3, [pc, #236]	; (9000d308 <HAL_RCC_GetSysClockFreq.part.0+0xf0>)
uint32_t HAL_RCC_GetSysClockFreq(void)
9000d21a:	b430      	push	{r4, r5}
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000d21c:	6a9a      	ldr	r2, [r3, #40]	; 0x28
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000d21e:	6a9c      	ldr	r4, [r3, #40]	; 0x28
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000d220:	6add      	ldr	r5, [r3, #44]	; 0x2c
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));

      if (pllm != 0U)
9000d222:	f414 7f7c 	tst.w	r4, #1008	; 0x3f0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000d226:	6b59      	ldr	r1, [r3, #52]	; 0x34
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000d228:	f3c4 1005 	ubfx	r0, r4, #4, #6
      if (pllm != 0U)
9000d22c:	d038      	beq.n	9000d2a0 <HAL_RCC_GetSysClockFreq.part.0+0x88>
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000d22e:	f3c1 01cc 	ubfx	r1, r1, #3, #13
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000d232:	f005 0501 	and.w	r5, r5, #1
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000d236:	f002 0203 	and.w	r2, r2, #3
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000d23a:	fb05 f101 	mul.w	r1, r5, r1
9000d23e:	2a01      	cmp	r2, #1
9000d240:	ee07 1a90 	vmov	s15, r1
9000d244:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
      {
        switch (pllsource)
9000d248:	d002      	beq.n	9000d250 <HAL_RCC_GetSysClockFreq.part.0+0x38>
9000d24a:	2a02      	cmp	r2, #2
9000d24c:	d04e      	beq.n	9000d2ec <HAL_RCC_GetSysClockFreq.part.0+0xd4>
9000d24e:	b34a      	cbz	r2, 9000d2a4 <HAL_RCC_GetSysClockFreq.part.0+0x8c>
          case RCC_PLLSOURCE_HSE:  /* HSE used as PLL clock source */
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
            break;

          default:
            pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000d250:	ee07 0a90 	vmov	s15, r0
9000d254:	ed9f 5a2d 	vldr	s10, [pc, #180]	; 9000d30c <HAL_RCC_GetSysClockFreq.part.0+0xf4>
9000d258:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000d25c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9000d25e:	eec5 6a27 	vdiv.f32	s13, s10, s15
9000d262:	eddf 5a2b 	vldr	s11, [pc, #172]	; 9000d310 <HAL_RCC_GetSysClockFreq.part.0+0xf8>
9000d266:	f3c3 0308 	ubfx	r3, r3, #0, #9
9000d26a:	ee07 3a90 	vmov	s15, r3
9000d26e:	eeb7 6a00 	vmov.f32	s12, #112	; 0x3f800000  1.0
9000d272:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000d276:	eee7 7a25 	vfma.f32	s15, s14, s11
9000d27a:	ee77 7a86 	vadd.f32	s15, s15, s12
9000d27e:	ee66 6aa7 	vmul.f32	s13, s13, s15
            break;
        }
        pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >> 9) + 1U) ;
9000d282:	4b21      	ldr	r3, [pc, #132]	; (9000d308 <HAL_RCC_GetSysClockFreq.part.0+0xf0>)
9000d284:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9000d286:	f3c3 2346 	ubfx	r3, r3, #9, #7
9000d28a:	3301      	adds	r3, #1
        sysclockfreq = (uint32_t)(float_t)(pllvco / (float_t)pllp);
9000d28c:	ee07 3a90 	vmov	s15, r3
9000d290:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
9000d294:	eec6 7a87 	vdiv.f32	s15, s13, s14
9000d298:	eefc 7ae7 	vcvt.u32.f32	s15, s15
9000d29c:	ee17 0a90 	vmov	r0, s15
      sysclockfreq = CSI_VALUE;
      break;
  }

  return sysclockfreq;
}
9000d2a0:	bc30      	pop	{r4, r5}
9000d2a2:	4770      	bx	lr
            if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000d2a4:	681a      	ldr	r2, [r3, #0]
9000d2a6:	0692      	lsls	r2, r2, #26
9000d2a8:	d527      	bpl.n	9000d2fa <HAL_RCC_GetSysClockFreq.part.0+0xe2>
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000d2aa:	6819      	ldr	r1, [r3, #0]
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000d2ac:	ee07 0a90 	vmov	s15, r0
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000d2b0:	4a18      	ldr	r2, [pc, #96]	; (9000d314 <HAL_RCC_GetSysClockFreq.part.0+0xfc>)
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000d2b2:	eef7 5a00 	vmov.f32	s11, #112	; 0x3f800000  1.0
9000d2b6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000d2b8:	f3c1 01c1 	ubfx	r1, r1, #3, #2
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000d2bc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000d2c0:	ed9f 5a13 	vldr	s10, [pc, #76]	; 9000d310 <HAL_RCC_GetSysClockFreq.part.0+0xf8>
9000d2c4:	f3c3 0308 	ubfx	r3, r3, #0, #9
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000d2c8:	40ca      	lsrs	r2, r1
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000d2ca:	ee06 3a90 	vmov	s13, r3
9000d2ce:	ee06 2a10 	vmov	s12, r2
9000d2d2:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9000d2d6:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
9000d2da:	eee7 6a05 	vfma.f32	s13, s14, s10
9000d2de:	ee86 7a27 	vdiv.f32	s14, s12, s15
9000d2e2:	ee76 6aa5 	vadd.f32	s13, s13, s11
9000d2e6:	ee66 6a87 	vmul.f32	s13, s13, s14
9000d2ea:	e7ca      	b.n	9000d282 <HAL_RCC_GetSysClockFreq.part.0+0x6a>
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000d2ec:	ee07 0a90 	vmov	s15, r0
9000d2f0:	ed9f 5a09 	vldr	s10, [pc, #36]	; 9000d318 <HAL_RCC_GetSysClockFreq.part.0+0x100>
9000d2f4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000d2f8:	e7b0      	b.n	9000d25c <HAL_RCC_GetSysClockFreq.part.0+0x44>
              pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000d2fa:	ee07 0a90 	vmov	s15, r0
9000d2fe:	ed9f 5a07 	vldr	s10, [pc, #28]	; 9000d31c <HAL_RCC_GetSysClockFreq.part.0+0x104>
9000d302:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000d306:	e7a9      	b.n	9000d25c <HAL_RCC_GetSysClockFreq.part.0+0x44>
9000d308:	58024400 	.word	0x58024400
9000d30c:	4a742400 	.word	0x4a742400
9000d310:	39000000 	.word	0x39000000
9000d314:	03d09000 	.word	0x03d09000
9000d318:	4bbebc20 	.word	0x4bbebc20
9000d31c:	4c742400 	.word	0x4c742400

9000d320 <HAL_RCC_OscConfig>:
  if (RCC_OscInitStruct == NULL)
9000d320:	2800      	cmp	r0, #0
9000d322:	f000 81e8 	beq.w	9000d6f6 <HAL_RCC_OscConfig+0x3d6>
{
9000d326:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
9000d328:	6803      	ldr	r3, [r0, #0]
9000d32a:	4604      	mov	r4, r0
9000d32c:	07d9      	lsls	r1, r3, #31
9000d32e:	d52e      	bpl.n	9000d38e <HAL_RCC_OscConfig+0x6e>
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000d330:	49a4      	ldr	r1, [pc, #656]	; (9000d5c4 <HAL_RCC_OscConfig+0x2a4>)
9000d332:	690a      	ldr	r2, [r1, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
9000d334:	6a89      	ldr	r1, [r1, #40]	; 0x28
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000d336:	f002 0238 	and.w	r2, r2, #56	; 0x38
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSE) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSE)))
9000d33a:	2a10      	cmp	r2, #16
9000d33c:	f000 8107 	beq.w	9000d54e <HAL_RCC_OscConfig+0x22e>
9000d340:	2a18      	cmp	r2, #24
9000d342:	f000 80ff 	beq.w	9000d544 <HAL_RCC_OscConfig+0x224>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000d346:	6863      	ldr	r3, [r4, #4]
9000d348:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
9000d34c:	f000 812a 	beq.w	9000d5a4 <HAL_RCC_OscConfig+0x284>
9000d350:	2b00      	cmp	r3, #0
9000d352:	f000 8168 	beq.w	9000d626 <HAL_RCC_OscConfig+0x306>
9000d356:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
9000d35a:	4b9a      	ldr	r3, [pc, #616]	; (9000d5c4 <HAL_RCC_OscConfig+0x2a4>)
9000d35c:	681a      	ldr	r2, [r3, #0]
9000d35e:	f000 8289 	beq.w	9000d874 <HAL_RCC_OscConfig+0x554>
9000d362:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
9000d366:	601a      	str	r2, [r3, #0]
9000d368:	681a      	ldr	r2, [r3, #0]
9000d36a:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
9000d36e:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
9000d370:	f7fc fe9a 	bl	9000a0a8 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000d374:	4e93      	ldr	r6, [pc, #588]	; (9000d5c4 <HAL_RCC_OscConfig+0x2a4>)
        tickstart = HAL_GetTick();
9000d376:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000d378:	e005      	b.n	9000d386 <HAL_RCC_OscConfig+0x66>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
9000d37a:	f7fc fe95 	bl	9000a0a8 <HAL_GetTick>
9000d37e:	1b40      	subs	r0, r0, r5
9000d380:	2864      	cmp	r0, #100	; 0x64
9000d382:	f200 814e 	bhi.w	9000d622 <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000d386:	6833      	ldr	r3, [r6, #0]
9000d388:	039b      	lsls	r3, r3, #14
9000d38a:	d5f6      	bpl.n	9000d37a <HAL_RCC_OscConfig+0x5a>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
9000d38c:	6823      	ldr	r3, [r4, #0]
9000d38e:	079d      	lsls	r5, r3, #30
9000d390:	f100 808a 	bmi.w	9000d4a8 <HAL_RCC_OscConfig+0x188>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000d394:	06d9      	lsls	r1, r3, #27
9000d396:	d533      	bpl.n	9000d400 <HAL_RCC_OscConfig+0xe0>
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000d398:	4a8a      	ldr	r2, [pc, #552]	; (9000d5c4 <HAL_RCC_OscConfig+0x2a4>)
9000d39a:	6913      	ldr	r3, [r2, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
9000d39c:	6a92      	ldr	r2, [r2, #40]	; 0x28
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000d39e:	f003 0338 	and.w	r3, r3, #56	; 0x38
    if ((temp_sysclksrc == RCC_CFGR_SWS_CSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_CSI)))
9000d3a2:	2b08      	cmp	r3, #8
9000d3a4:	f000 80e3 	beq.w	9000d56e <HAL_RCC_OscConfig+0x24e>
9000d3a8:	2b18      	cmp	r3, #24
9000d3aa:	f000 80db 	beq.w	9000d564 <HAL_RCC_OscConfig+0x244>
      if ((RCC_OscInitStruct->CSIState) != RCC_CSI_OFF)
9000d3ae:	69e3      	ldr	r3, [r4, #28]
        __HAL_RCC_CSI_ENABLE();
9000d3b0:	4d84      	ldr	r5, [pc, #528]	; (9000d5c4 <HAL_RCC_OscConfig+0x2a4>)
      if ((RCC_OscInitStruct->CSIState) != RCC_CSI_OFF)
9000d3b2:	2b00      	cmp	r3, #0
9000d3b4:	f000 816f 	beq.w	9000d696 <HAL_RCC_OscConfig+0x376>
        __HAL_RCC_CSI_ENABLE();
9000d3b8:	682b      	ldr	r3, [r5, #0]
9000d3ba:	f043 0380 	orr.w	r3, r3, #128	; 0x80
9000d3be:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000d3c0:	f7fc fe72 	bl	9000a0a8 <HAL_GetTick>
9000d3c4:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
9000d3c6:	e005      	b.n	9000d3d4 <HAL_RCC_OscConfig+0xb4>
          if ((HAL_GetTick() - tickstart) > CSI_TIMEOUT_VALUE)
9000d3c8:	f7fc fe6e 	bl	9000a0a8 <HAL_GetTick>
9000d3cc:	1b80      	subs	r0, r0, r6
9000d3ce:	2802      	cmp	r0, #2
9000d3d0:	f200 8127 	bhi.w	9000d622 <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
9000d3d4:	682b      	ldr	r3, [r5, #0]
9000d3d6:	05db      	lsls	r3, r3, #23
9000d3d8:	d5f6      	bpl.n	9000d3c8 <HAL_RCC_OscConfig+0xa8>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000d3da:	f7fc fe6b 	bl	9000a0b4 <HAL_GetREVID>
9000d3de:	f241 0303 	movw	r3, #4099	; 0x1003
9000d3e2:	4298      	cmp	r0, r3
9000d3e4:	f200 826d 	bhi.w	9000d8c2 <HAL_RCC_OscConfig+0x5a2>
9000d3e8:	6a22      	ldr	r2, [r4, #32]
9000d3ea:	686b      	ldr	r3, [r5, #4]
9000d3ec:	2a20      	cmp	r2, #32
9000d3ee:	f023 43f8 	bic.w	r3, r3, #2080374784	; 0x7c000000
9000d3f2:	bf0c      	ite	eq
9000d3f4:	f043 4380 	orreq.w	r3, r3, #1073741824	; 0x40000000
9000d3f8:	ea43 6382 	orrne.w	r3, r3, r2, lsl #26
9000d3fc:	606b      	str	r3, [r5, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000d3fe:	6823      	ldr	r3, [r4, #0]
9000d400:	071d      	lsls	r5, r3, #28
9000d402:	d516      	bpl.n	9000d432 <HAL_RCC_OscConfig+0x112>
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
9000d404:	6963      	ldr	r3, [r4, #20]
      __HAL_RCC_LSI_ENABLE();
9000d406:	4d6f      	ldr	r5, [pc, #444]	; (9000d5c4 <HAL_RCC_OscConfig+0x2a4>)
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
9000d408:	2b00      	cmp	r3, #0
9000d40a:	f000 8122 	beq.w	9000d652 <HAL_RCC_OscConfig+0x332>
      __HAL_RCC_LSI_ENABLE();
9000d40e:	6f6b      	ldr	r3, [r5, #116]	; 0x74
9000d410:	f043 0301 	orr.w	r3, r3, #1
9000d414:	676b      	str	r3, [r5, #116]	; 0x74
      tickstart = HAL_GetTick();
9000d416:	f7fc fe47 	bl	9000a0a8 <HAL_GetTick>
9000d41a:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
9000d41c:	e005      	b.n	9000d42a <HAL_RCC_OscConfig+0x10a>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
9000d41e:	f7fc fe43 	bl	9000a0a8 <HAL_GetTick>
9000d422:	1b80      	subs	r0, r0, r6
9000d424:	2802      	cmp	r0, #2
9000d426:	f200 80fc 	bhi.w	9000d622 <HAL_RCC_OscConfig+0x302>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
9000d42a:	6f6b      	ldr	r3, [r5, #116]	; 0x74
9000d42c:	0798      	lsls	r0, r3, #30
9000d42e:	d5f6      	bpl.n	9000d41e <HAL_RCC_OscConfig+0xfe>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
9000d430:	6823      	ldr	r3, [r4, #0]
9000d432:	069a      	lsls	r2, r3, #26
9000d434:	d516      	bpl.n	9000d464 <HAL_RCC_OscConfig+0x144>
    if ((RCC_OscInitStruct->HSI48State) != RCC_HSI48_OFF)
9000d436:	69a3      	ldr	r3, [r4, #24]
      __HAL_RCC_HSI48_ENABLE();
9000d438:	4d62      	ldr	r5, [pc, #392]	; (9000d5c4 <HAL_RCC_OscConfig+0x2a4>)
    if ((RCC_OscInitStruct->HSI48State) != RCC_HSI48_OFF)
9000d43a:	2b00      	cmp	r3, #0
9000d43c:	f000 811a 	beq.w	9000d674 <HAL_RCC_OscConfig+0x354>
      __HAL_RCC_HSI48_ENABLE();
9000d440:	682b      	ldr	r3, [r5, #0]
9000d442:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
9000d446:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
9000d448:	f7fc fe2e 	bl	9000a0a8 <HAL_GetTick>
9000d44c:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
9000d44e:	e005      	b.n	9000d45c <HAL_RCC_OscConfig+0x13c>
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
9000d450:	f7fc fe2a 	bl	9000a0a8 <HAL_GetTick>
9000d454:	1b80      	subs	r0, r0, r6
9000d456:	2802      	cmp	r0, #2
9000d458:	f200 80e3 	bhi.w	9000d622 <HAL_RCC_OscConfig+0x302>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
9000d45c:	682b      	ldr	r3, [r5, #0]
9000d45e:	049f      	lsls	r7, r3, #18
9000d460:	d5f6      	bpl.n	9000d450 <HAL_RCC_OscConfig+0x130>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
9000d462:	6823      	ldr	r3, [r4, #0]
9000d464:	0759      	lsls	r1, r3, #29
9000d466:	f100 80a3 	bmi.w	9000d5b0 <HAL_RCC_OscConfig+0x290>
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
9000d46a:	6a60      	ldr	r0, [r4, #36]	; 0x24
9000d46c:	b1d0      	cbz	r0, 9000d4a4 <HAL_RCC_OscConfig+0x184>
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL1)
9000d46e:	4d55      	ldr	r5, [pc, #340]	; (9000d5c4 <HAL_RCC_OscConfig+0x2a4>)
9000d470:	692b      	ldr	r3, [r5, #16]
9000d472:	f003 0338 	and.w	r3, r3, #56	; 0x38
9000d476:	2b18      	cmp	r3, #24
9000d478:	f000 81ae 	beq.w	9000d7d8 <HAL_RCC_OscConfig+0x4b8>
        __HAL_RCC_PLL_DISABLE();
9000d47c:	682b      	ldr	r3, [r5, #0]
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
9000d47e:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
9000d480:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
9000d484:	602b      	str	r3, [r5, #0]
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
9000d486:	f000 8142 	beq.w	9000d70e <HAL_RCC_OscConfig+0x3ee>
        tickstart = HAL_GetTick();
9000d48a:	f7fc fe0d 	bl	9000a0a8 <HAL_GetTick>
9000d48e:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000d490:	e005      	b.n	9000d49e <HAL_RCC_OscConfig+0x17e>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
9000d492:	f7fc fe09 	bl	9000a0a8 <HAL_GetTick>
9000d496:	1b00      	subs	r0, r0, r4
9000d498:	2802      	cmp	r0, #2
9000d49a:	f200 80c2 	bhi.w	9000d622 <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000d49e:	682b      	ldr	r3, [r5, #0]
9000d4a0:	019b      	lsls	r3, r3, #6
9000d4a2:	d4f6      	bmi.n	9000d492 <HAL_RCC_OscConfig+0x172>
  return HAL_OK;
9000d4a4:	2000      	movs	r0, #0
}
9000d4a6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000d4a8:	4a46      	ldr	r2, [pc, #280]	; (9000d5c4 <HAL_RCC_OscConfig+0x2a4>)
9000d4aa:	6913      	ldr	r3, [r2, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
9000d4ac:	6a92      	ldr	r2, [r2, #40]	; 0x28
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
9000d4ae:	f013 0338 	ands.w	r3, r3, #56	; 0x38
9000d4b2:	d12d      	bne.n	9000d510 <HAL_RCC_OscConfig+0x1f0>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
9000d4b4:	4b43      	ldr	r3, [pc, #268]	; (9000d5c4 <HAL_RCC_OscConfig+0x2a4>)
9000d4b6:	68e2      	ldr	r2, [r4, #12]
9000d4b8:	681b      	ldr	r3, [r3, #0]
9000d4ba:	0759      	lsls	r1, r3, #29
9000d4bc:	d501      	bpl.n	9000d4c2 <HAL_RCC_OscConfig+0x1a2>
9000d4be:	2a00      	cmp	r2, #0
9000d4c0:	d04e      	beq.n	9000d560 <HAL_RCC_OscConfig+0x240>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000d4c2:	4d40      	ldr	r5, [pc, #256]	; (9000d5c4 <HAL_RCC_OscConfig+0x2a4>)
9000d4c4:	682b      	ldr	r3, [r5, #0]
9000d4c6:	f023 0319 	bic.w	r3, r3, #25
9000d4ca:	4313      	orrs	r3, r2
9000d4cc:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000d4ce:	f7fc fdeb 	bl	9000a0a8 <HAL_GetTick>
9000d4d2:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000d4d4:	e005      	b.n	9000d4e2 <HAL_RCC_OscConfig+0x1c2>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
9000d4d6:	f7fc fde7 	bl	9000a0a8 <HAL_GetTick>
9000d4da:	1b80      	subs	r0, r0, r6
9000d4dc:	2802      	cmp	r0, #2
9000d4de:	f200 80a0 	bhi.w	9000d622 <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000d4e2:	682b      	ldr	r3, [r5, #0]
9000d4e4:	075b      	lsls	r3, r3, #29
9000d4e6:	d5f6      	bpl.n	9000d4d6 <HAL_RCC_OscConfig+0x1b6>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
9000d4e8:	f7fc fde4 	bl	9000a0b4 <HAL_GetREVID>
9000d4ec:	f241 0303 	movw	r3, #4099	; 0x1003
9000d4f0:	4298      	cmp	r0, r3
9000d4f2:	f200 80f7 	bhi.w	9000d6e4 <HAL_RCC_OscConfig+0x3c4>
9000d4f6:	6922      	ldr	r2, [r4, #16]
9000d4f8:	686b      	ldr	r3, [r5, #4]
9000d4fa:	2a40      	cmp	r2, #64	; 0x40
9000d4fc:	f423 337c 	bic.w	r3, r3, #258048	; 0x3f000
9000d500:	bf0c      	ite	eq
9000d502:	f443 3300 	orreq.w	r3, r3, #131072	; 0x20000
9000d506:	ea43 3302 	orrne.w	r3, r3, r2, lsl #12
9000d50a:	606b      	str	r3, [r5, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000d50c:	6823      	ldr	r3, [r4, #0]
9000d50e:	e741      	b.n	9000d394 <HAL_RCC_OscConfig+0x74>
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
9000d510:	2b18      	cmp	r3, #24
9000d512:	f000 80e3 	beq.w	9000d6dc <HAL_RCC_OscConfig+0x3bc>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000d516:	4d2b      	ldr	r5, [pc, #172]	; (9000d5c4 <HAL_RCC_OscConfig+0x2a4>)
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
9000d518:	68e2      	ldr	r2, [r4, #12]
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000d51a:	682b      	ldr	r3, [r5, #0]
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
9000d51c:	2a00      	cmp	r2, #0
9000d51e:	f000 80cc 	beq.w	9000d6ba <HAL_RCC_OscConfig+0x39a>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000d522:	f023 0319 	bic.w	r3, r3, #25
9000d526:	4313      	orrs	r3, r2
9000d528:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000d52a:	f7fc fdbd 	bl	9000a0a8 <HAL_GetTick>
9000d52e:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000d530:	e004      	b.n	9000d53c <HAL_RCC_OscConfig+0x21c>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
9000d532:	f7fc fdb9 	bl	9000a0a8 <HAL_GetTick>
9000d536:	1b80      	subs	r0, r0, r6
9000d538:	2802      	cmp	r0, #2
9000d53a:	d872      	bhi.n	9000d622 <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000d53c:	682b      	ldr	r3, [r5, #0]
9000d53e:	075f      	lsls	r7, r3, #29
9000d540:	d5f7      	bpl.n	9000d532 <HAL_RCC_OscConfig+0x212>
9000d542:	e7d1      	b.n	9000d4e8 <HAL_RCC_OscConfig+0x1c8>
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSE) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSE)))
9000d544:	f001 0103 	and.w	r1, r1, #3
9000d548:	2902      	cmp	r1, #2
9000d54a:	f47f aefc 	bne.w	9000d346 <HAL_RCC_OscConfig+0x26>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
9000d54e:	4a1d      	ldr	r2, [pc, #116]	; (9000d5c4 <HAL_RCC_OscConfig+0x2a4>)
9000d550:	6812      	ldr	r2, [r2, #0]
9000d552:	0392      	lsls	r2, r2, #14
9000d554:	f57f af1b 	bpl.w	9000d38e <HAL_RCC_OscConfig+0x6e>
9000d558:	6862      	ldr	r2, [r4, #4]
9000d55a:	2a00      	cmp	r2, #0
9000d55c:	f47f af17 	bne.w	9000d38e <HAL_RCC_OscConfig+0x6e>
        return HAL_ERROR;
9000d560:	2001      	movs	r0, #1
}
9000d562:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    if ((temp_sysclksrc == RCC_CFGR_SWS_CSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_CSI)))
9000d564:	f002 0203 	and.w	r2, r2, #3
9000d568:	2a01      	cmp	r2, #1
9000d56a:	f47f af20 	bne.w	9000d3ae <HAL_RCC_OscConfig+0x8e>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U) && (RCC_OscInitStruct->CSIState != RCC_CSI_ON))
9000d56e:	4b15      	ldr	r3, [pc, #84]	; (9000d5c4 <HAL_RCC_OscConfig+0x2a4>)
9000d570:	681b      	ldr	r3, [r3, #0]
9000d572:	05da      	lsls	r2, r3, #23
9000d574:	d502      	bpl.n	9000d57c <HAL_RCC_OscConfig+0x25c>
9000d576:	69e3      	ldr	r3, [r4, #28]
9000d578:	2b80      	cmp	r3, #128	; 0x80
9000d57a:	d1f1      	bne.n	9000d560 <HAL_RCC_OscConfig+0x240>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000d57c:	f7fc fd9a 	bl	9000a0b4 <HAL_GetREVID>
9000d580:	f241 0303 	movw	r3, #4099	; 0x1003
9000d584:	4298      	cmp	r0, r3
9000d586:	f200 80b8 	bhi.w	9000d6fa <HAL_RCC_OscConfig+0x3da>
9000d58a:	6a22      	ldr	r2, [r4, #32]
9000d58c:	2a20      	cmp	r2, #32
9000d58e:	f000 81a7 	beq.w	9000d8e0 <HAL_RCC_OscConfig+0x5c0>
9000d592:	490c      	ldr	r1, [pc, #48]	; (9000d5c4 <HAL_RCC_OscConfig+0x2a4>)
9000d594:	684b      	ldr	r3, [r1, #4]
9000d596:	f023 43f8 	bic.w	r3, r3, #2080374784	; 0x7c000000
9000d59a:	ea43 6382 	orr.w	r3, r3, r2, lsl #26
9000d59e:	604b      	str	r3, [r1, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000d5a0:	6823      	ldr	r3, [r4, #0]
9000d5a2:	e72d      	b.n	9000d400 <HAL_RCC_OscConfig+0xe0>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000d5a4:	4a07      	ldr	r2, [pc, #28]	; (9000d5c4 <HAL_RCC_OscConfig+0x2a4>)
9000d5a6:	6813      	ldr	r3, [r2, #0]
9000d5a8:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
9000d5ac:	6013      	str	r3, [r2, #0]
      if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
9000d5ae:	e6df      	b.n	9000d370 <HAL_RCC_OscConfig+0x50>
    PWR->CR1 |= PWR_CR1_DBP;
9000d5b0:	4d05      	ldr	r5, [pc, #20]	; (9000d5c8 <HAL_RCC_OscConfig+0x2a8>)
9000d5b2:	682b      	ldr	r3, [r5, #0]
9000d5b4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
9000d5b8:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
9000d5ba:	f7fc fd75 	bl	9000a0a8 <HAL_GetTick>
9000d5be:	4606      	mov	r6, r0
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000d5c0:	e009      	b.n	9000d5d6 <HAL_RCC_OscConfig+0x2b6>
9000d5c2:	bf00      	nop
9000d5c4:	58024400 	.word	0x58024400
9000d5c8:	58024800 	.word	0x58024800
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
9000d5cc:	f7fc fd6c 	bl	9000a0a8 <HAL_GetTick>
9000d5d0:	1b80      	subs	r0, r0, r6
9000d5d2:	2864      	cmp	r0, #100	; 0x64
9000d5d4:	d825      	bhi.n	9000d622 <HAL_RCC_OscConfig+0x302>
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000d5d6:	682b      	ldr	r3, [r5, #0]
9000d5d8:	05da      	lsls	r2, r3, #23
9000d5da:	d5f7      	bpl.n	9000d5cc <HAL_RCC_OscConfig+0x2ac>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000d5dc:	68a3      	ldr	r3, [r4, #8]
9000d5de:	2b01      	cmp	r3, #1
9000d5e0:	f000 8178 	beq.w	9000d8d4 <HAL_RCC_OscConfig+0x5b4>
9000d5e4:	2b00      	cmp	r3, #0
9000d5e6:	f000 8153 	beq.w	9000d890 <HAL_RCC_OscConfig+0x570>
9000d5ea:	2b05      	cmp	r3, #5
9000d5ec:	4ba5      	ldr	r3, [pc, #660]	; (9000d884 <HAL_RCC_OscConfig+0x564>)
9000d5ee:	6f1a      	ldr	r2, [r3, #112]	; 0x70
9000d5f0:	f000 817f 	beq.w	9000d8f2 <HAL_RCC_OscConfig+0x5d2>
9000d5f4:	f022 0201 	bic.w	r2, r2, #1
9000d5f8:	671a      	str	r2, [r3, #112]	; 0x70
9000d5fa:	6f1a      	ldr	r2, [r3, #112]	; 0x70
9000d5fc:	f022 0204 	bic.w	r2, r2, #4
9000d600:	671a      	str	r2, [r3, #112]	; 0x70
      tickstart = HAL_GetTick();
9000d602:	f7fc fd51 	bl	9000a0a8 <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000d606:	4e9f      	ldr	r6, [pc, #636]	; (9000d884 <HAL_RCC_OscConfig+0x564>)
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000d608:	f241 3788 	movw	r7, #5000	; 0x1388
      tickstart = HAL_GetTick();
9000d60c:	4605      	mov	r5, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000d60e:	e004      	b.n	9000d61a <HAL_RCC_OscConfig+0x2fa>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000d610:	f7fc fd4a 	bl	9000a0a8 <HAL_GetTick>
9000d614:	1b40      	subs	r0, r0, r5
9000d616:	42b8      	cmp	r0, r7
9000d618:	d803      	bhi.n	9000d622 <HAL_RCC_OscConfig+0x302>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000d61a:	6f33      	ldr	r3, [r6, #112]	; 0x70
9000d61c:	079b      	lsls	r3, r3, #30
9000d61e:	d5f7      	bpl.n	9000d610 <HAL_RCC_OscConfig+0x2f0>
9000d620:	e723      	b.n	9000d46a <HAL_RCC_OscConfig+0x14a>
            return HAL_TIMEOUT;
9000d622:	2003      	movs	r0, #3
}
9000d624:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000d626:	4d97      	ldr	r5, [pc, #604]	; (9000d884 <HAL_RCC_OscConfig+0x564>)
9000d628:	682b      	ldr	r3, [r5, #0]
9000d62a:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
9000d62e:	602b      	str	r3, [r5, #0]
9000d630:	682b      	ldr	r3, [r5, #0]
9000d632:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
9000d636:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000d638:	f7fc fd36 	bl	9000a0a8 <HAL_GetTick>
9000d63c:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
9000d63e:	e004      	b.n	9000d64a <HAL_RCC_OscConfig+0x32a>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
9000d640:	f7fc fd32 	bl	9000a0a8 <HAL_GetTick>
9000d644:	1b80      	subs	r0, r0, r6
9000d646:	2864      	cmp	r0, #100	; 0x64
9000d648:	d8eb      	bhi.n	9000d622 <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
9000d64a:	682b      	ldr	r3, [r5, #0]
9000d64c:	039f      	lsls	r7, r3, #14
9000d64e:	d4f7      	bmi.n	9000d640 <HAL_RCC_OscConfig+0x320>
9000d650:	e69c      	b.n	9000d38c <HAL_RCC_OscConfig+0x6c>
      __HAL_RCC_LSI_DISABLE();
9000d652:	6f6b      	ldr	r3, [r5, #116]	; 0x74
9000d654:	f023 0301 	bic.w	r3, r3, #1
9000d658:	676b      	str	r3, [r5, #116]	; 0x74
      tickstart = HAL_GetTick();
9000d65a:	f7fc fd25 	bl	9000a0a8 <HAL_GetTick>
9000d65e:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
9000d660:	e004      	b.n	9000d66c <HAL_RCC_OscConfig+0x34c>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
9000d662:	f7fc fd21 	bl	9000a0a8 <HAL_GetTick>
9000d666:	1b80      	subs	r0, r0, r6
9000d668:	2802      	cmp	r0, #2
9000d66a:	d8da      	bhi.n	9000d622 <HAL_RCC_OscConfig+0x302>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
9000d66c:	6f6b      	ldr	r3, [r5, #116]	; 0x74
9000d66e:	0799      	lsls	r1, r3, #30
9000d670:	d4f7      	bmi.n	9000d662 <HAL_RCC_OscConfig+0x342>
9000d672:	e6dd      	b.n	9000d430 <HAL_RCC_OscConfig+0x110>
      __HAL_RCC_HSI48_DISABLE();
9000d674:	682b      	ldr	r3, [r5, #0]
9000d676:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
9000d67a:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
9000d67c:	f7fc fd14 	bl	9000a0a8 <HAL_GetTick>
9000d680:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
9000d682:	e004      	b.n	9000d68e <HAL_RCC_OscConfig+0x36e>
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
9000d684:	f7fc fd10 	bl	9000a0a8 <HAL_GetTick>
9000d688:	1b80      	subs	r0, r0, r6
9000d68a:	2802      	cmp	r0, #2
9000d68c:	d8c9      	bhi.n	9000d622 <HAL_RCC_OscConfig+0x302>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
9000d68e:	682b      	ldr	r3, [r5, #0]
9000d690:	0498      	lsls	r0, r3, #18
9000d692:	d4f7      	bmi.n	9000d684 <HAL_RCC_OscConfig+0x364>
9000d694:	e6e5      	b.n	9000d462 <HAL_RCC_OscConfig+0x142>
        __HAL_RCC_CSI_DISABLE();
9000d696:	682b      	ldr	r3, [r5, #0]
9000d698:	f023 0380 	bic.w	r3, r3, #128	; 0x80
9000d69c:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000d69e:	f7fc fd03 	bl	9000a0a8 <HAL_GetTick>
9000d6a2:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
9000d6a4:	e004      	b.n	9000d6b0 <HAL_RCC_OscConfig+0x390>
          if ((HAL_GetTick() - tickstart) > CSI_TIMEOUT_VALUE)
9000d6a6:	f7fc fcff 	bl	9000a0a8 <HAL_GetTick>
9000d6aa:	1b80      	subs	r0, r0, r6
9000d6ac:	2802      	cmp	r0, #2
9000d6ae:	d8b8      	bhi.n	9000d622 <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
9000d6b0:	682b      	ldr	r3, [r5, #0]
9000d6b2:	05df      	lsls	r7, r3, #23
9000d6b4:	d4f7      	bmi.n	9000d6a6 <HAL_RCC_OscConfig+0x386>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000d6b6:	6823      	ldr	r3, [r4, #0]
9000d6b8:	e6a2      	b.n	9000d400 <HAL_RCC_OscConfig+0xe0>
        __HAL_RCC_HSI_DISABLE();
9000d6ba:	f023 0301 	bic.w	r3, r3, #1
9000d6be:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000d6c0:	f7fc fcf2 	bl	9000a0a8 <HAL_GetTick>
9000d6c4:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
9000d6c6:	e004      	b.n	9000d6d2 <HAL_RCC_OscConfig+0x3b2>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
9000d6c8:	f7fc fcee 	bl	9000a0a8 <HAL_GetTick>
9000d6cc:	1b80      	subs	r0, r0, r6
9000d6ce:	2802      	cmp	r0, #2
9000d6d0:	d8a7      	bhi.n	9000d622 <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
9000d6d2:	682b      	ldr	r3, [r5, #0]
9000d6d4:	0758      	lsls	r0, r3, #29
9000d6d6:	d4f7      	bmi.n	9000d6c8 <HAL_RCC_OscConfig+0x3a8>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000d6d8:	6823      	ldr	r3, [r4, #0]
9000d6da:	e65b      	b.n	9000d394 <HAL_RCC_OscConfig+0x74>
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
9000d6dc:	0790      	lsls	r0, r2, #30
9000d6de:	f47f af1a 	bne.w	9000d516 <HAL_RCC_OscConfig+0x1f6>
9000d6e2:	e6e7      	b.n	9000d4b4 <HAL_RCC_OscConfig+0x194>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
9000d6e4:	686b      	ldr	r3, [r5, #4]
9000d6e6:	6922      	ldr	r2, [r4, #16]
9000d6e8:	f023 43fe 	bic.w	r3, r3, #2130706432	; 0x7f000000
9000d6ec:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
9000d6f0:	606b      	str	r3, [r5, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000d6f2:	6823      	ldr	r3, [r4, #0]
9000d6f4:	e64e      	b.n	9000d394 <HAL_RCC_OscConfig+0x74>
    return HAL_ERROR;
9000d6f6:	2001      	movs	r0, #1
}
9000d6f8:	4770      	bx	lr
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000d6fa:	4a62      	ldr	r2, [pc, #392]	; (9000d884 <HAL_RCC_OscConfig+0x564>)
9000d6fc:	6a21      	ldr	r1, [r4, #32]
9000d6fe:	68d3      	ldr	r3, [r2, #12]
9000d700:	f023 537c 	bic.w	r3, r3, #1056964608	; 0x3f000000
9000d704:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
9000d708:	60d3      	str	r3, [r2, #12]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000d70a:	6823      	ldr	r3, [r4, #0]
9000d70c:	e678      	b.n	9000d400 <HAL_RCC_OscConfig+0xe0>
        tickstart = HAL_GetTick();
9000d70e:	f7fc fccb 	bl	9000a0a8 <HAL_GetTick>
9000d712:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000d714:	e004      	b.n	9000d720 <HAL_RCC_OscConfig+0x400>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
9000d716:	f7fc fcc7 	bl	9000a0a8 <HAL_GetTick>
9000d71a:	1b80      	subs	r0, r0, r6
9000d71c:	2802      	cmp	r0, #2
9000d71e:	d880      	bhi.n	9000d622 <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000d720:	682b      	ldr	r3, [r5, #0]
9000d722:	0199      	lsls	r1, r3, #6
9000d724:	d4f7      	bmi.n	9000d716 <HAL_RCC_OscConfig+0x3f6>
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
9000d726:	6aa9      	ldr	r1, [r5, #40]	; 0x28
9000d728:	4b57      	ldr	r3, [pc, #348]	; (9000d888 <HAL_RCC_OscConfig+0x568>)
9000d72a:	6aa2      	ldr	r2, [r4, #40]	; 0x28
9000d72c:	400b      	ands	r3, r1
        __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000d72e:	4957      	ldr	r1, [pc, #348]	; (9000d88c <HAL_RCC_OscConfig+0x56c>)
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000d730:	4e54      	ldr	r6, [pc, #336]	; (9000d884 <HAL_RCC_OscConfig+0x564>)
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
9000d732:	4313      	orrs	r3, r2
9000d734:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000d736:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
9000d73a:	62ab      	str	r3, [r5, #40]	; 0x28
9000d73c:	e9d4 320d 	ldrd	r3, r2, [r4, #52]	; 0x34
9000d740:	3b01      	subs	r3, #1
9000d742:	3a01      	subs	r2, #1
9000d744:	025b      	lsls	r3, r3, #9
9000d746:	0412      	lsls	r2, r2, #16
9000d748:	b29b      	uxth	r3, r3
9000d74a:	f402 02fe 	and.w	r2, r2, #8323072	; 0x7f0000
9000d74e:	4313      	orrs	r3, r2
9000d750:	6b22      	ldr	r2, [r4, #48]	; 0x30
9000d752:	3a01      	subs	r2, #1
9000d754:	f3c2 0208 	ubfx	r2, r2, #0, #9
9000d758:	4313      	orrs	r3, r2
9000d75a:	6be2      	ldr	r2, [r4, #60]	; 0x3c
9000d75c:	3a01      	subs	r2, #1
9000d75e:	0612      	lsls	r2, r2, #24
9000d760:	f002 42fe 	and.w	r2, r2, #2130706432	; 0x7f000000
9000d764:	4313      	orrs	r3, r2
9000d766:	632b      	str	r3, [r5, #48]	; 0x30
        __HAL_RCC_PLLFRACN_DISABLE();
9000d768:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000d76a:	f023 0301 	bic.w	r3, r3, #1
9000d76e:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000d770:	6b6a      	ldr	r2, [r5, #52]	; 0x34
9000d772:	6ca3      	ldr	r3, [r4, #72]	; 0x48
9000d774:	4011      	ands	r1, r2
9000d776:	ea41 01c3 	orr.w	r1, r1, r3, lsl #3
9000d77a:	6369      	str	r1, [r5, #52]	; 0x34
        __HAL_RCC_PLL_VCIRANGE(RCC_OscInitStruct->PLL.PLLRGE) ;
9000d77c:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000d77e:	6c22      	ldr	r2, [r4, #64]	; 0x40
9000d780:	f023 030c 	bic.w	r3, r3, #12
9000d784:	4313      	orrs	r3, r2
9000d786:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLL_VCORANGE(RCC_OscInitStruct->PLL.PLLVCOSEL) ;
9000d788:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000d78a:	6c62      	ldr	r2, [r4, #68]	; 0x44
9000d78c:	f023 0302 	bic.w	r3, r3, #2
9000d790:	4313      	orrs	r3, r2
9000d792:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
9000d794:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000d796:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
9000d79a:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000d79c:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000d79e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
9000d7a2:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVR);
9000d7a4:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000d7a6:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
9000d7aa:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLLFRACN_ENABLE();
9000d7ac:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000d7ae:	f043 0301 	orr.w	r3, r3, #1
9000d7b2:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLL_ENABLE();
9000d7b4:	682b      	ldr	r3, [r5, #0]
9000d7b6:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
9000d7ba:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000d7bc:	f7fc fc74 	bl	9000a0a8 <HAL_GetTick>
9000d7c0:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000d7c2:	e005      	b.n	9000d7d0 <HAL_RCC_OscConfig+0x4b0>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
9000d7c4:	f7fc fc70 	bl	9000a0a8 <HAL_GetTick>
9000d7c8:	1b00      	subs	r0, r0, r4
9000d7ca:	2802      	cmp	r0, #2
9000d7cc:	f63f af29 	bhi.w	9000d622 <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000d7d0:	6833      	ldr	r3, [r6, #0]
9000d7d2:	019a      	lsls	r2, r3, #6
9000d7d4:	d5f6      	bpl.n	9000d7c4 <HAL_RCC_OscConfig+0x4a4>
9000d7d6:	e665      	b.n	9000d4a4 <HAL_RCC_OscConfig+0x184>
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
9000d7d8:	2801      	cmp	r0, #1
      temp1_pllckcfg = RCC->PLLCKSELR;
9000d7da:	6aaa      	ldr	r2, [r5, #40]	; 0x28
      temp2_pllckcfg = RCC->PLL1DIVR;
9000d7dc:	6b2e      	ldr	r6, [r5, #48]	; 0x30
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
9000d7de:	f43f ae62 	beq.w	9000d4a6 <HAL_RCC_OscConfig+0x186>
          (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
9000d7e2:	f002 0303 	and.w	r3, r2, #3
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
9000d7e6:	6aa1      	ldr	r1, [r4, #40]	; 0x28
9000d7e8:	428b      	cmp	r3, r1
9000d7ea:	f47f aeb9 	bne.w	9000d560 <HAL_RCC_OscConfig+0x240>
          ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
9000d7ee:	f3c2 1205 	ubfx	r2, r2, #4, #6
          (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
9000d7f2:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000d7f4:	429a      	cmp	r2, r3
9000d7f6:	f47f aeb3 	bne.w	9000d560 <HAL_RCC_OscConfig+0x240>
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
9000d7fa:	6b23      	ldr	r3, [r4, #48]	; 0x30
9000d7fc:	f3c6 0208 	ubfx	r2, r6, #0, #9
9000d800:	3b01      	subs	r3, #1
          ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
9000d802:	429a      	cmp	r2, r3
9000d804:	f47f aeac 	bne.w	9000d560 <HAL_RCC_OscConfig+0x240>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
9000d808:	6b63      	ldr	r3, [r4, #52]	; 0x34
9000d80a:	f3c6 2246 	ubfx	r2, r6, #9, #7
9000d80e:	3b01      	subs	r3, #1
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
9000d810:	429a      	cmp	r2, r3
9000d812:	f47f aea5 	bne.w	9000d560 <HAL_RCC_OscConfig+0x240>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
9000d816:	6ba3      	ldr	r3, [r4, #56]	; 0x38
9000d818:	f3c6 4206 	ubfx	r2, r6, #16, #7
9000d81c:	3b01      	subs	r3, #1
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
9000d81e:	429a      	cmp	r2, r3
9000d820:	f47f ae9e 	bne.w	9000d560 <HAL_RCC_OscConfig+0x240>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_R1) >> RCC_PLL1DIVR_R1_Pos) != (RCC_OscInitStruct->PLL.PLLR - 1U)))
9000d824:	6be3      	ldr	r3, [r4, #60]	; 0x3c
9000d826:	f3c6 6606 	ubfx	r6, r6, #24, #7
9000d82a:	3b01      	subs	r3, #1
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
9000d82c:	429e      	cmp	r6, r3
9000d82e:	f47f ae97 	bne.w	9000d560 <HAL_RCC_OscConfig+0x240>
        temp1_pllckcfg = ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> RCC_PLL1FRACR_FRACN1_Pos);
9000d832:	6b6b      	ldr	r3, [r5, #52]	; 0x34
        if (RCC_OscInitStruct->PLL.PLLFRACN != temp1_pllckcfg)
9000d834:	6ca2      	ldr	r2, [r4, #72]	; 0x48
        temp1_pllckcfg = ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> RCC_PLL1FRACR_FRACN1_Pos);
9000d836:	f3c3 03cc 	ubfx	r3, r3, #3, #13
        if (RCC_OscInitStruct->PLL.PLLFRACN != temp1_pllckcfg)
9000d83a:	429a      	cmp	r2, r3
9000d83c:	f43f ae32 	beq.w	9000d4a4 <HAL_RCC_OscConfig+0x184>
          __HAL_RCC_PLLFRACN_DISABLE();
9000d840:	4a10      	ldr	r2, [pc, #64]	; (9000d884 <HAL_RCC_OscConfig+0x564>)
9000d842:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
9000d844:	f023 0301 	bic.w	r3, r3, #1
9000d848:	62d3      	str	r3, [r2, #44]	; 0x2c
          tickstart = HAL_GetTick();
9000d84a:	f7fc fc2d 	bl	9000a0a8 <HAL_GetTick>
9000d84e:	4605      	mov	r5, r0
          while ((HAL_GetTick() - tickstart) < PLL_FRAC_TIMEOUT_VALUE)
9000d850:	f7fc fc2a 	bl	9000a0a8 <HAL_GetTick>
9000d854:	42a8      	cmp	r0, r5
9000d856:	d0fb      	beq.n	9000d850 <HAL_RCC_OscConfig+0x530>
          __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000d858:	4a0a      	ldr	r2, [pc, #40]	; (9000d884 <HAL_RCC_OscConfig+0x564>)
  return HAL_OK;
9000d85a:	2000      	movs	r0, #0
          __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000d85c:	6ca1      	ldr	r1, [r4, #72]	; 0x48
9000d85e:	4b0b      	ldr	r3, [pc, #44]	; (9000d88c <HAL_RCC_OscConfig+0x56c>)
9000d860:	6b54      	ldr	r4, [r2, #52]	; 0x34
9000d862:	4023      	ands	r3, r4
9000d864:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
9000d868:	6353      	str	r3, [r2, #52]	; 0x34
          __HAL_RCC_PLLFRACN_ENABLE();
9000d86a:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
9000d86c:	f043 0301 	orr.w	r3, r3, #1
9000d870:	62d3      	str	r3, [r2, #44]	; 0x2c
}
9000d872:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000d874:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
9000d878:	601a      	str	r2, [r3, #0]
9000d87a:	681a      	ldr	r2, [r3, #0]
9000d87c:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
9000d880:	601a      	str	r2, [r3, #0]
9000d882:	e575      	b.n	9000d370 <HAL_RCC_OscConfig+0x50>
9000d884:	58024400 	.word	0x58024400
9000d888:	fffffc0c 	.word	0xfffffc0c
9000d88c:	ffff0007 	.word	0xffff0007
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000d890:	4d1c      	ldr	r5, [pc, #112]	; (9000d904 <HAL_RCC_OscConfig+0x5e4>)
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000d892:	f241 3788 	movw	r7, #5000	; 0x1388
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000d896:	6f2b      	ldr	r3, [r5, #112]	; 0x70
9000d898:	f023 0301 	bic.w	r3, r3, #1
9000d89c:	672b      	str	r3, [r5, #112]	; 0x70
9000d89e:	6f2b      	ldr	r3, [r5, #112]	; 0x70
9000d8a0:	f023 0304 	bic.w	r3, r3, #4
9000d8a4:	672b      	str	r3, [r5, #112]	; 0x70
      tickstart = HAL_GetTick();
9000d8a6:	f7fc fbff 	bl	9000a0a8 <HAL_GetTick>
9000d8aa:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
9000d8ac:	e005      	b.n	9000d8ba <HAL_RCC_OscConfig+0x59a>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000d8ae:	f7fc fbfb 	bl	9000a0a8 <HAL_GetTick>
9000d8b2:	1b80      	subs	r0, r0, r6
9000d8b4:	42b8      	cmp	r0, r7
9000d8b6:	f63f aeb4 	bhi.w	9000d622 <HAL_RCC_OscConfig+0x302>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
9000d8ba:	6f2b      	ldr	r3, [r5, #112]	; 0x70
9000d8bc:	0798      	lsls	r0, r3, #30
9000d8be:	d4f6      	bmi.n	9000d8ae <HAL_RCC_OscConfig+0x58e>
9000d8c0:	e5d3      	b.n	9000d46a <HAL_RCC_OscConfig+0x14a>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000d8c2:	68eb      	ldr	r3, [r5, #12]
9000d8c4:	6a22      	ldr	r2, [r4, #32]
9000d8c6:	f023 537c 	bic.w	r3, r3, #1056964608	; 0x3f000000
9000d8ca:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
9000d8ce:	60eb      	str	r3, [r5, #12]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000d8d0:	6823      	ldr	r3, [r4, #0]
9000d8d2:	e595      	b.n	9000d400 <HAL_RCC_OscConfig+0xe0>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000d8d4:	4a0b      	ldr	r2, [pc, #44]	; (9000d904 <HAL_RCC_OscConfig+0x5e4>)
9000d8d6:	6f13      	ldr	r3, [r2, #112]	; 0x70
9000d8d8:	f043 0301 	orr.w	r3, r3, #1
9000d8dc:	6713      	str	r3, [r2, #112]	; 0x70
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
9000d8de:	e690      	b.n	9000d602 <HAL_RCC_OscConfig+0x2e2>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000d8e0:	4a08      	ldr	r2, [pc, #32]	; (9000d904 <HAL_RCC_OscConfig+0x5e4>)
9000d8e2:	6853      	ldr	r3, [r2, #4]
9000d8e4:	f023 43f8 	bic.w	r3, r3, #2080374784	; 0x7c000000
9000d8e8:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
9000d8ec:	6053      	str	r3, [r2, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000d8ee:	6823      	ldr	r3, [r4, #0]
9000d8f0:	e586      	b.n	9000d400 <HAL_RCC_OscConfig+0xe0>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000d8f2:	f042 0204 	orr.w	r2, r2, #4
9000d8f6:	671a      	str	r2, [r3, #112]	; 0x70
9000d8f8:	6f1a      	ldr	r2, [r3, #112]	; 0x70
9000d8fa:	f042 0201 	orr.w	r2, r2, #1
9000d8fe:	671a      	str	r2, [r3, #112]	; 0x70
9000d900:	e67f      	b.n	9000d602 <HAL_RCC_OscConfig+0x2e2>
9000d902:	bf00      	nop
9000d904:	58024400 	.word	0x58024400

9000d908 <HAL_RCC_GetSysClockFreq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000d908:	4a47      	ldr	r2, [pc, #284]	; (9000da28 <HAL_RCC_GetSysClockFreq+0x120>)
9000d90a:	6913      	ldr	r3, [r2, #16]
9000d90c:	f003 0338 	and.w	r3, r3, #56	; 0x38
9000d910:	2b10      	cmp	r3, #16
9000d912:	d004      	beq.n	9000d91e <HAL_RCC_GetSysClockFreq+0x16>
9000d914:	2b18      	cmp	r3, #24
9000d916:	d00d      	beq.n	9000d934 <HAL_RCC_GetSysClockFreq+0x2c>
9000d918:	b11b      	cbz	r3, 9000d922 <HAL_RCC_GetSysClockFreq+0x1a>
      sysclockfreq = CSI_VALUE;
9000d91a:	4844      	ldr	r0, [pc, #272]	; (9000da2c <HAL_RCC_GetSysClockFreq+0x124>)
9000d91c:	4770      	bx	lr
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000d91e:	4844      	ldr	r0, [pc, #272]	; (9000da30 <HAL_RCC_GetSysClockFreq+0x128>)
9000d920:	4770      	bx	lr
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000d922:	6813      	ldr	r3, [r2, #0]
9000d924:	0699      	lsls	r1, r3, #26
9000d926:	d54a      	bpl.n	9000d9be <HAL_RCC_GetSysClockFreq+0xb6>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000d928:	6813      	ldr	r3, [r2, #0]
9000d92a:	4842      	ldr	r0, [pc, #264]	; (9000da34 <HAL_RCC_GetSysClockFreq+0x12c>)
9000d92c:	f3c3 03c1 	ubfx	r3, r3, #3, #2
9000d930:	40d8      	lsrs	r0, r3
9000d932:	4770      	bx	lr
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000d934:	6a93      	ldr	r3, [r2, #40]	; 0x28
{
9000d936:	b430      	push	{r4, r5}
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000d938:	6a94      	ldr	r4, [r2, #40]	; 0x28
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000d93a:	6ad5      	ldr	r5, [r2, #44]	; 0x2c
      if (pllm != 0U)
9000d93c:	f414 7f7c 	tst.w	r4, #1008	; 0x3f0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000d940:	6b51      	ldr	r1, [r2, #52]	; 0x34
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000d942:	f3c4 1005 	ubfx	r0, r4, #4, #6
      if (pllm != 0U)
9000d946:	d038      	beq.n	9000d9ba <HAL_RCC_GetSysClockFreq+0xb2>
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000d948:	f3c1 01cc 	ubfx	r1, r1, #3, #13
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000d94c:	f005 0501 	and.w	r5, r5, #1
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000d950:	f003 0303 	and.w	r3, r3, #3
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000d954:	fb05 f101 	mul.w	r1, r5, r1
9000d958:	2b01      	cmp	r3, #1
9000d95a:	ee07 1a90 	vmov	s15, r1
9000d95e:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
        switch (pllsource)
9000d962:	d002      	beq.n	9000d96a <HAL_RCC_GetSysClockFreq+0x62>
9000d964:	2b02      	cmp	r3, #2
9000d966:	d02c      	beq.n	9000d9c2 <HAL_RCC_GetSysClockFreq+0xba>
9000d968:	b393      	cbz	r3, 9000d9d0 <HAL_RCC_GetSysClockFreq+0xc8>
            pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000d96a:	ee07 0a90 	vmov	s15, r0
9000d96e:	ed9f 5a32 	vldr	s10, [pc, #200]	; 9000da38 <HAL_RCC_GetSysClockFreq+0x130>
9000d972:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000d976:	6b13      	ldr	r3, [r2, #48]	; 0x30
9000d978:	eec5 6a27 	vdiv.f32	s13, s10, s15
9000d97c:	eddf 5a2f 	vldr	s11, [pc, #188]	; 9000da3c <HAL_RCC_GetSysClockFreq+0x134>
9000d980:	f3c3 0308 	ubfx	r3, r3, #0, #9
9000d984:	ee07 3a90 	vmov	s15, r3
9000d988:	eeb7 6a00 	vmov.f32	s12, #112	; 0x3f800000  1.0
9000d98c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000d990:	eee7 7a25 	vfma.f32	s15, s14, s11
9000d994:	ee77 7a86 	vadd.f32	s15, s15, s12
9000d998:	ee66 6aa7 	vmul.f32	s13, s13, s15
        pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >> 9) + 1U) ;
9000d99c:	4b22      	ldr	r3, [pc, #136]	; (9000da28 <HAL_RCC_GetSysClockFreq+0x120>)
9000d99e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9000d9a0:	f3c3 2346 	ubfx	r3, r3, #9, #7
9000d9a4:	3301      	adds	r3, #1
        sysclockfreq = (uint32_t)(float_t)(pllvco / (float_t)pllp);
9000d9a6:	ee07 3a90 	vmov	s15, r3
9000d9aa:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
9000d9ae:	eec6 7a87 	vdiv.f32	s15, s13, s14
9000d9b2:	eefc 7ae7 	vcvt.u32.f32	s15, s15
9000d9b6:	ee17 0a90 	vmov	r0, s15
}
9000d9ba:	bc30      	pop	{r4, r5}
9000d9bc:	4770      	bx	lr
        sysclockfreq = (uint32_t) HSI_VALUE;
9000d9be:	481d      	ldr	r0, [pc, #116]	; (9000da34 <HAL_RCC_GetSysClockFreq+0x12c>)
}
9000d9c0:	4770      	bx	lr
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000d9c2:	ee07 0a90 	vmov	s15, r0
9000d9c6:	ed9f 5a1e 	vldr	s10, [pc, #120]	; 9000da40 <HAL_RCC_GetSysClockFreq+0x138>
9000d9ca:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000d9ce:	e7d2      	b.n	9000d976 <HAL_RCC_GetSysClockFreq+0x6e>
            if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000d9d0:	6813      	ldr	r3, [r2, #0]
9000d9d2:	069b      	lsls	r3, r3, #26
9000d9d4:	d520      	bpl.n	9000da18 <HAL_RCC_GetSysClockFreq+0x110>
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000d9d6:	6814      	ldr	r4, [r2, #0]
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000d9d8:	ee07 0a90 	vmov	s15, r0
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000d9dc:	4915      	ldr	r1, [pc, #84]	; (9000da34 <HAL_RCC_GetSysClockFreq+0x12c>)
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000d9de:	eef7 5a00 	vmov.f32	s11, #112	; 0x3f800000  1.0
9000d9e2:	6b13      	ldr	r3, [r2, #48]	; 0x30
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000d9e4:	f3c4 04c1 	ubfx	r4, r4, #3, #2
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000d9e8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000d9ec:	ed9f 5a13 	vldr	s10, [pc, #76]	; 9000da3c <HAL_RCC_GetSysClockFreq+0x134>
9000d9f0:	f3c3 0308 	ubfx	r3, r3, #0, #9
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000d9f4:	40e1      	lsrs	r1, r4
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000d9f6:	ee06 3a90 	vmov	s13, r3
9000d9fa:	ee06 1a10 	vmov	s12, r1
9000d9fe:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9000da02:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
9000da06:	eee7 6a05 	vfma.f32	s13, s14, s10
9000da0a:	ee86 7a27 	vdiv.f32	s14, s12, s15
9000da0e:	ee76 6aa5 	vadd.f32	s13, s13, s11
9000da12:	ee66 6a87 	vmul.f32	s13, s13, s14
9000da16:	e7c1      	b.n	9000d99c <HAL_RCC_GetSysClockFreq+0x94>
              pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000da18:	ee07 0a90 	vmov	s15, r0
9000da1c:	ed9f 5a09 	vldr	s10, [pc, #36]	; 9000da44 <HAL_RCC_GetSysClockFreq+0x13c>
9000da20:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000da24:	e7a7      	b.n	9000d976 <HAL_RCC_GetSysClockFreq+0x6e>
9000da26:	bf00      	nop
9000da28:	58024400 	.word	0x58024400
9000da2c:	003d0900 	.word	0x003d0900
9000da30:	017d7840 	.word	0x017d7840
9000da34:	03d09000 	.word	0x03d09000
9000da38:	4a742400 	.word	0x4a742400
9000da3c:	39000000 	.word	0x39000000
9000da40:	4bbebc20 	.word	0x4bbebc20
9000da44:	4c742400 	.word	0x4c742400

9000da48 <HAL_RCC_ClockConfig>:
  if (RCC_ClkInitStruct == NULL)
9000da48:	2800      	cmp	r0, #0
9000da4a:	f000 810c 	beq.w	9000dc66 <HAL_RCC_ClockConfig+0x21e>
  if (FLatency > __HAL_FLASH_GET_LATENCY())
9000da4e:	4a8c      	ldr	r2, [pc, #560]	; (9000dc80 <HAL_RCC_ClockConfig+0x238>)
9000da50:	6813      	ldr	r3, [r2, #0]
9000da52:	f003 030f 	and.w	r3, r3, #15
9000da56:	428b      	cmp	r3, r1
{
9000da58:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000da5c:	4604      	mov	r4, r0
9000da5e:	460d      	mov	r5, r1
  if (FLatency > __HAL_FLASH_GET_LATENCY())
9000da60:	d20c      	bcs.n	9000da7c <HAL_RCC_ClockConfig+0x34>
    __HAL_FLASH_SET_LATENCY(FLatency);
9000da62:	6813      	ldr	r3, [r2, #0]
9000da64:	f023 030f 	bic.w	r3, r3, #15
9000da68:	430b      	orrs	r3, r1
9000da6a:	6013      	str	r3, [r2, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
9000da6c:	6813      	ldr	r3, [r2, #0]
9000da6e:	f003 030f 	and.w	r3, r3, #15
9000da72:	428b      	cmp	r3, r1
9000da74:	d002      	beq.n	9000da7c <HAL_RCC_ClockConfig+0x34>
    return HAL_ERROR;
9000da76:	2001      	movs	r0, #1
}
9000da78:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
9000da7c:	6823      	ldr	r3, [r4, #0]
9000da7e:	075f      	lsls	r7, r3, #29
9000da80:	d50b      	bpl.n	9000da9a <HAL_RCC_ClockConfig+0x52>
    if ((RCC_ClkInitStruct->APB3CLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
9000da82:	4980      	ldr	r1, [pc, #512]	; (9000dc84 <HAL_RCC_ClockConfig+0x23c>)
9000da84:	6920      	ldr	r0, [r4, #16]
9000da86:	698a      	ldr	r2, [r1, #24]
9000da88:	f002 0270 	and.w	r2, r2, #112	; 0x70
9000da8c:	4290      	cmp	r0, r2
9000da8e:	d904      	bls.n	9000da9a <HAL_RCC_ClockConfig+0x52>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
9000da90:	698a      	ldr	r2, [r1, #24]
9000da92:	f022 0270 	bic.w	r2, r2, #112	; 0x70
9000da96:	4302      	orrs	r2, r0
9000da98:	618a      	str	r2, [r1, #24]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
9000da9a:	071e      	lsls	r6, r3, #28
9000da9c:	d50b      	bpl.n	9000dab6 <HAL_RCC_ClockConfig+0x6e>
    if ((RCC_ClkInitStruct->APB1CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
9000da9e:	4979      	ldr	r1, [pc, #484]	; (9000dc84 <HAL_RCC_ClockConfig+0x23c>)
9000daa0:	6960      	ldr	r0, [r4, #20]
9000daa2:	69ca      	ldr	r2, [r1, #28]
9000daa4:	f002 0270 	and.w	r2, r2, #112	; 0x70
9000daa8:	4290      	cmp	r0, r2
9000daaa:	d904      	bls.n	9000dab6 <HAL_RCC_ClockConfig+0x6e>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
9000daac:	69ca      	ldr	r2, [r1, #28]
9000daae:	f022 0270 	bic.w	r2, r2, #112	; 0x70
9000dab2:	4302      	orrs	r2, r0
9000dab4:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
9000dab6:	06d8      	lsls	r0, r3, #27
9000dab8:	d50b      	bpl.n	9000dad2 <HAL_RCC_ClockConfig+0x8a>
    if ((RCC_ClkInitStruct->APB2CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
9000daba:	4972      	ldr	r1, [pc, #456]	; (9000dc84 <HAL_RCC_ClockConfig+0x23c>)
9000dabc:	69a0      	ldr	r0, [r4, #24]
9000dabe:	69ca      	ldr	r2, [r1, #28]
9000dac0:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
9000dac4:	4290      	cmp	r0, r2
9000dac6:	d904      	bls.n	9000dad2 <HAL_RCC_ClockConfig+0x8a>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
9000dac8:	69ca      	ldr	r2, [r1, #28]
9000daca:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
9000dace:	4302      	orrs	r2, r0
9000dad0:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
9000dad2:	0699      	lsls	r1, r3, #26
9000dad4:	d50b      	bpl.n	9000daee <HAL_RCC_ClockConfig+0xa6>
    if ((RCC_ClkInitStruct->APB4CLKDivider) > (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
9000dad6:	496b      	ldr	r1, [pc, #428]	; (9000dc84 <HAL_RCC_ClockConfig+0x23c>)
9000dad8:	69e0      	ldr	r0, [r4, #28]
9000dada:	6a0a      	ldr	r2, [r1, #32]
9000dadc:	f002 0270 	and.w	r2, r2, #112	; 0x70
9000dae0:	4290      	cmp	r0, r2
9000dae2:	d904      	bls.n	9000daee <HAL_RCC_ClockConfig+0xa6>
      MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider));
9000dae4:	6a0a      	ldr	r2, [r1, #32]
9000dae6:	f022 0270 	bic.w	r2, r2, #112	; 0x70
9000daea:	4302      	orrs	r2, r0
9000daec:	620a      	str	r2, [r1, #32]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
9000daee:	079a      	lsls	r2, r3, #30
9000daf0:	f140 80ab 	bpl.w	9000dc4a <HAL_RCC_ClockConfig+0x202>
    if ((RCC_ClkInitStruct->AHBCLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_HPRE))
9000daf4:	4863      	ldr	r0, [pc, #396]	; (9000dc84 <HAL_RCC_ClockConfig+0x23c>)
9000daf6:	68e1      	ldr	r1, [r4, #12]
9000daf8:	6982      	ldr	r2, [r0, #24]
9000dafa:	f002 020f 	and.w	r2, r2, #15
9000dafe:	4291      	cmp	r1, r2
9000db00:	d904      	bls.n	9000db0c <HAL_RCC_ClockConfig+0xc4>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
9000db02:	6982      	ldr	r2, [r0, #24]
9000db04:	f022 020f 	bic.w	r2, r2, #15
9000db08:	430a      	orrs	r2, r1
9000db0a:	6182      	str	r2, [r0, #24]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
9000db0c:	07d8      	lsls	r0, r3, #31
9000db0e:	d530      	bpl.n	9000db72 <HAL_RCC_ClockConfig+0x12a>
    MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1CPRE, RCC_ClkInitStruct->SYSCLKDivider);
9000db10:	4a5c      	ldr	r2, [pc, #368]	; (9000dc84 <HAL_RCC_ClockConfig+0x23c>)
9000db12:	68a1      	ldr	r1, [r4, #8]
9000db14:	6993      	ldr	r3, [r2, #24]
9000db16:	f423 6370 	bic.w	r3, r3, #3840	; 0xf00
9000db1a:	430b      	orrs	r3, r1
9000db1c:	6193      	str	r3, [r2, #24]
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
9000db1e:	6861      	ldr	r1, [r4, #4]
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000db20:	6813      	ldr	r3, [r2, #0]
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
9000db22:	2902      	cmp	r1, #2
9000db24:	f000 80a1 	beq.w	9000dc6a <HAL_RCC_ClockConfig+0x222>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
9000db28:	2903      	cmp	r1, #3
9000db2a:	f000 8098 	beq.w	9000dc5e <HAL_RCC_ClockConfig+0x216>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_CSI)
9000db2e:	2901      	cmp	r1, #1
9000db30:	f000 80a1 	beq.w	9000dc76 <HAL_RCC_ClockConfig+0x22e>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000db34:	0758      	lsls	r0, r3, #29
9000db36:	d59e      	bpl.n	9000da76 <HAL_RCC_ClockConfig+0x2e>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
9000db38:	4e52      	ldr	r6, [pc, #328]	; (9000dc84 <HAL_RCC_ClockConfig+0x23c>)
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
9000db3a:	f241 3888 	movw	r8, #5000	; 0x1388
    MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
9000db3e:	6933      	ldr	r3, [r6, #16]
9000db40:	f023 0307 	bic.w	r3, r3, #7
9000db44:	430b      	orrs	r3, r1
9000db46:	6133      	str	r3, [r6, #16]
    tickstart = HAL_GetTick();
9000db48:	f7fc faae 	bl	9000a0a8 <HAL_GetTick>
9000db4c:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
9000db4e:	e005      	b.n	9000db5c <HAL_RCC_ClockConfig+0x114>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
9000db50:	f7fc faaa 	bl	9000a0a8 <HAL_GetTick>
9000db54:	1bc0      	subs	r0, r0, r7
9000db56:	4540      	cmp	r0, r8
9000db58:	f200 808b 	bhi.w	9000dc72 <HAL_RCC_ClockConfig+0x22a>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
9000db5c:	6933      	ldr	r3, [r6, #16]
9000db5e:	6862      	ldr	r2, [r4, #4]
9000db60:	f003 0338 	and.w	r3, r3, #56	; 0x38
9000db64:	ebb3 0fc2 	cmp.w	r3, r2, lsl #3
9000db68:	d1f2      	bne.n	9000db50 <HAL_RCC_ClockConfig+0x108>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
9000db6a:	6823      	ldr	r3, [r4, #0]
9000db6c:	0799      	lsls	r1, r3, #30
9000db6e:	d506      	bpl.n	9000db7e <HAL_RCC_ClockConfig+0x136>
    if ((RCC_ClkInitStruct->AHBCLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_HPRE))
9000db70:	68e1      	ldr	r1, [r4, #12]
9000db72:	4844      	ldr	r0, [pc, #272]	; (9000dc84 <HAL_RCC_ClockConfig+0x23c>)
9000db74:	6982      	ldr	r2, [r0, #24]
9000db76:	f002 020f 	and.w	r2, r2, #15
9000db7a:	428a      	cmp	r2, r1
9000db7c:	d869      	bhi.n	9000dc52 <HAL_RCC_ClockConfig+0x20a>
  if (FLatency < __HAL_FLASH_GET_LATENCY())
9000db7e:	4940      	ldr	r1, [pc, #256]	; (9000dc80 <HAL_RCC_ClockConfig+0x238>)
9000db80:	680a      	ldr	r2, [r1, #0]
9000db82:	f002 020f 	and.w	r2, r2, #15
9000db86:	42aa      	cmp	r2, r5
9000db88:	d90a      	bls.n	9000dba0 <HAL_RCC_ClockConfig+0x158>
    __HAL_FLASH_SET_LATENCY(FLatency);
9000db8a:	680a      	ldr	r2, [r1, #0]
9000db8c:	f022 020f 	bic.w	r2, r2, #15
9000db90:	432a      	orrs	r2, r5
9000db92:	600a      	str	r2, [r1, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
9000db94:	680a      	ldr	r2, [r1, #0]
9000db96:	f002 020f 	and.w	r2, r2, #15
9000db9a:	42aa      	cmp	r2, r5
9000db9c:	f47f af6b 	bne.w	9000da76 <HAL_RCC_ClockConfig+0x2e>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
9000dba0:	075a      	lsls	r2, r3, #29
9000dba2:	d50b      	bpl.n	9000dbbc <HAL_RCC_ClockConfig+0x174>
    if ((RCC_ClkInitStruct->APB3CLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
9000dba4:	4937      	ldr	r1, [pc, #220]	; (9000dc84 <HAL_RCC_ClockConfig+0x23c>)
9000dba6:	6920      	ldr	r0, [r4, #16]
9000dba8:	698a      	ldr	r2, [r1, #24]
9000dbaa:	f002 0270 	and.w	r2, r2, #112	; 0x70
9000dbae:	4290      	cmp	r0, r2
9000dbb0:	d204      	bcs.n	9000dbbc <HAL_RCC_ClockConfig+0x174>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
9000dbb2:	698a      	ldr	r2, [r1, #24]
9000dbb4:	f022 0270 	bic.w	r2, r2, #112	; 0x70
9000dbb8:	4302      	orrs	r2, r0
9000dbba:	618a      	str	r2, [r1, #24]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
9000dbbc:	071f      	lsls	r7, r3, #28
9000dbbe:	d50b      	bpl.n	9000dbd8 <HAL_RCC_ClockConfig+0x190>
    if ((RCC_ClkInitStruct->APB1CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
9000dbc0:	4930      	ldr	r1, [pc, #192]	; (9000dc84 <HAL_RCC_ClockConfig+0x23c>)
9000dbc2:	6960      	ldr	r0, [r4, #20]
9000dbc4:	69ca      	ldr	r2, [r1, #28]
9000dbc6:	f002 0270 	and.w	r2, r2, #112	; 0x70
9000dbca:	4290      	cmp	r0, r2
9000dbcc:	d204      	bcs.n	9000dbd8 <HAL_RCC_ClockConfig+0x190>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
9000dbce:	69ca      	ldr	r2, [r1, #28]
9000dbd0:	f022 0270 	bic.w	r2, r2, #112	; 0x70
9000dbd4:	4302      	orrs	r2, r0
9000dbd6:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
9000dbd8:	06de      	lsls	r6, r3, #27
9000dbda:	d50b      	bpl.n	9000dbf4 <HAL_RCC_ClockConfig+0x1ac>
    if ((RCC_ClkInitStruct->APB2CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
9000dbdc:	4929      	ldr	r1, [pc, #164]	; (9000dc84 <HAL_RCC_ClockConfig+0x23c>)
9000dbde:	69a0      	ldr	r0, [r4, #24]
9000dbe0:	69ca      	ldr	r2, [r1, #28]
9000dbe2:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
9000dbe6:	4290      	cmp	r0, r2
9000dbe8:	d204      	bcs.n	9000dbf4 <HAL_RCC_ClockConfig+0x1ac>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
9000dbea:	69ca      	ldr	r2, [r1, #28]
9000dbec:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
9000dbf0:	4302      	orrs	r2, r0
9000dbf2:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
9000dbf4:	069d      	lsls	r5, r3, #26
9000dbf6:	d50b      	bpl.n	9000dc10 <HAL_RCC_ClockConfig+0x1c8>
    if ((RCC_ClkInitStruct->APB4CLKDivider) < (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
9000dbf8:	4a22      	ldr	r2, [pc, #136]	; (9000dc84 <HAL_RCC_ClockConfig+0x23c>)
9000dbfa:	69e1      	ldr	r1, [r4, #28]
9000dbfc:	6a13      	ldr	r3, [r2, #32]
9000dbfe:	f003 0370 	and.w	r3, r3, #112	; 0x70
9000dc02:	4299      	cmp	r1, r3
9000dc04:	d204      	bcs.n	9000dc10 <HAL_RCC_ClockConfig+0x1c8>
      MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider));
9000dc06:	6a13      	ldr	r3, [r2, #32]
9000dc08:	f023 0370 	bic.w	r3, r3, #112	; 0x70
9000dc0c:	430b      	orrs	r3, r1
9000dc0e:	6213      	str	r3, [r2, #32]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000dc10:	f7ff fe7a 	bl	9000d908 <HAL_RCC_GetSysClockFreq>
9000dc14:	4a1b      	ldr	r2, [pc, #108]	; (9000dc84 <HAL_RCC_ClockConfig+0x23c>)
9000dc16:	4603      	mov	r3, r0
9000dc18:	481b      	ldr	r0, [pc, #108]	; (9000dc88 <HAL_RCC_ClockConfig+0x240>)
9000dc1a:	6991      	ldr	r1, [r2, #24]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000dc1c:	6992      	ldr	r2, [r2, #24]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000dc1e:	f3c1 2103 	ubfx	r1, r1, #8, #4
  SystemCoreClock = common_system_clock;
9000dc22:	4d1a      	ldr	r5, [pc, #104]	; (9000dc8c <HAL_RCC_ClockConfig+0x244>)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000dc24:	f002 020f 	and.w	r2, r2, #15
9000dc28:	4c19      	ldr	r4, [pc, #100]	; (9000dc90 <HAL_RCC_ClockConfig+0x248>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000dc2a:	5c41      	ldrb	r1, [r0, r1]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000dc2c:	5c82      	ldrb	r2, [r0, r2]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000dc2e:	f001 011f 	and.w	r1, r1, #31
  halstatus = HAL_InitTick(uwTickPrio);
9000dc32:	4818      	ldr	r0, [pc, #96]	; (9000dc94 <HAL_RCC_ClockConfig+0x24c>)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000dc34:	f002 021f 	and.w	r2, r2, #31
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000dc38:	40cb      	lsrs	r3, r1
  halstatus = HAL_InitTick(uwTickPrio);
9000dc3a:	6800      	ldr	r0, [r0, #0]
  SystemCoreClock = common_system_clock;
9000dc3c:	602b      	str	r3, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000dc3e:	40d3      	lsrs	r3, r2
9000dc40:	6023      	str	r3, [r4, #0]
}
9000dc42:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  halstatus = HAL_InitTick(uwTickPrio);
9000dc46:	f7f7 bf07 	b.w	90005a58 <HAL_InitTick>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
9000dc4a:	07da      	lsls	r2, r3, #31
9000dc4c:	f53f af60 	bmi.w	9000db10 <HAL_RCC_ClockConfig+0xc8>
9000dc50:	e795      	b.n	9000db7e <HAL_RCC_ClockConfig+0x136>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
9000dc52:	6982      	ldr	r2, [r0, #24]
9000dc54:	f022 020f 	bic.w	r2, r2, #15
9000dc58:	430a      	orrs	r2, r1
9000dc5a:	6182      	str	r2, [r0, #24]
9000dc5c:	e78f      	b.n	9000db7e <HAL_RCC_ClockConfig+0x136>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000dc5e:	019f      	lsls	r7, r3, #6
9000dc60:	f53f af6a 	bmi.w	9000db38 <HAL_RCC_ClockConfig+0xf0>
9000dc64:	e707      	b.n	9000da76 <HAL_RCC_ClockConfig+0x2e>
    return HAL_ERROR;
9000dc66:	2001      	movs	r0, #1
}
9000dc68:	4770      	bx	lr
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000dc6a:	039b      	lsls	r3, r3, #14
9000dc6c:	f53f af64 	bmi.w	9000db38 <HAL_RCC_ClockConfig+0xf0>
9000dc70:	e701      	b.n	9000da76 <HAL_RCC_ClockConfig+0x2e>
        return HAL_TIMEOUT;
9000dc72:	2003      	movs	r0, #3
9000dc74:	e700      	b.n	9000da78 <HAL_RCC_ClockConfig+0x30>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
9000dc76:	05de      	lsls	r6, r3, #23
9000dc78:	f53f af5e 	bmi.w	9000db38 <HAL_RCC_ClockConfig+0xf0>
9000dc7c:	e6fb      	b.n	9000da76 <HAL_RCC_ClockConfig+0x2e>
9000dc7e:	bf00      	nop
9000dc80:	52002000 	.word	0x52002000
9000dc84:	58024400 	.word	0x58024400
9000dc88:	9002dcf8 	.word	0x9002dcf8
9000dc8c:	24000060 	.word	0x24000060
9000dc90:	24000064 	.word	0x24000064
9000dc94:	2400006c 	.word	0x2400006c

9000dc98 <HAL_RCC_GetHCLKFreq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000dc98:	4a18      	ldr	r2, [pc, #96]	; (9000dcfc <HAL_RCC_GetHCLKFreq+0x64>)
  * @note   The SystemD2Clock CMSIS variable is used to store System domain2 Clock Frequency
  *         and updated within this function
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
9000dc9a:	b538      	push	{r3, r4, r5, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000dc9c:	6913      	ldr	r3, [r2, #16]
9000dc9e:	f003 0338 	and.w	r3, r3, #56	; 0x38
9000dca2:	2b10      	cmp	r3, #16
9000dca4:	d01a      	beq.n	9000dcdc <HAL_RCC_GetHCLKFreq+0x44>
9000dca6:	2b18      	cmp	r3, #24
9000dca8:	d023      	beq.n	9000dcf2 <HAL_RCC_GetHCLKFreq+0x5a>
9000dcaa:	b1cb      	cbz	r3, 9000dce0 <HAL_RCC_GetHCLKFreq+0x48>
      sysclockfreq = CSI_VALUE;
9000dcac:	4814      	ldr	r0, [pc, #80]	; (9000dd00 <HAL_RCC_GetHCLKFreq+0x68>)
  uint32_t common_system_clock;

#if defined(RCC_D1CFGR_D1CPRE)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000dcae:	4b13      	ldr	r3, [pc, #76]	; (9000dcfc <HAL_RCC_GetHCLKFreq+0x64>)
9000dcb0:	4914      	ldr	r1, [pc, #80]	; (9000dd04 <HAL_RCC_GetHCLKFreq+0x6c>)
9000dcb2:	699a      	ldr	r2, [r3, #24]
#else
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE) >> RCC_CDCFGR1_CDCPRE_Pos] & 0x1FU);
#endif

#if defined(RCC_D1CFGR_HPRE)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000dcb4:	699b      	ldr	r3, [r3, #24]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000dcb6:	f3c2 2203 	ubfx	r2, r2, #8, #4
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000dcba:	4c13      	ldr	r4, [pc, #76]	; (9000dd08 <HAL_RCC_GetHCLKFreq+0x70>)
9000dcbc:	f003 030f 	and.w	r3, r3, #15
#endif

#if defined(DUAL_CORE) && defined(CORE_CM4)
  SystemCoreClock = SystemD2Clock;
#else
  SystemCoreClock = common_system_clock;
9000dcc0:	4d12      	ldr	r5, [pc, #72]	; (9000dd0c <HAL_RCC_GetHCLKFreq+0x74>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000dcc2:	5c8a      	ldrb	r2, [r1, r2]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000dcc4:	5ccb      	ldrb	r3, [r1, r3]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000dcc6:	f002 021f 	and.w	r2, r2, #31
9000dcca:	fa20 f202 	lsr.w	r2, r0, r2
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000dcce:	f003 001f 	and.w	r0, r3, #31
9000dcd2:	fa22 f000 	lsr.w	r0, r2, r0
  SystemCoreClock = common_system_clock;
9000dcd6:	602a      	str	r2, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000dcd8:	6020      	str	r0, [r4, #0]
#endif /* DUAL_CORE && CORE_CM4 */

  return SystemD2Clock;
}
9000dcda:	bd38      	pop	{r3, r4, r5, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000dcdc:	480c      	ldr	r0, [pc, #48]	; (9000dd10 <HAL_RCC_GetHCLKFreq+0x78>)
9000dcde:	e7e6      	b.n	9000dcae <HAL_RCC_GetHCLKFreq+0x16>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000dce0:	6813      	ldr	r3, [r2, #0]
9000dce2:	069b      	lsls	r3, r3, #26
9000dce4:	d508      	bpl.n	9000dcf8 <HAL_RCC_GetHCLKFreq+0x60>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000dce6:	6813      	ldr	r3, [r2, #0]
9000dce8:	480a      	ldr	r0, [pc, #40]	; (9000dd14 <HAL_RCC_GetHCLKFreq+0x7c>)
9000dcea:	f3c3 03c1 	ubfx	r3, r3, #3, #2
9000dcee:	40d8      	lsrs	r0, r3
9000dcf0:	e7dd      	b.n	9000dcae <HAL_RCC_GetHCLKFreq+0x16>
9000dcf2:	f7ff fa91 	bl	9000d218 <HAL_RCC_GetSysClockFreq.part.0>
9000dcf6:	e7da      	b.n	9000dcae <HAL_RCC_GetHCLKFreq+0x16>
        sysclockfreq = (uint32_t) HSI_VALUE;
9000dcf8:	4806      	ldr	r0, [pc, #24]	; (9000dd14 <HAL_RCC_GetHCLKFreq+0x7c>)
9000dcfa:	e7d8      	b.n	9000dcae <HAL_RCC_GetHCLKFreq+0x16>
9000dcfc:	58024400 	.word	0x58024400
9000dd00:	003d0900 	.word	0x003d0900
9000dd04:	9002dcf8 	.word	0x9002dcf8
9000dd08:	24000064 	.word	0x24000064
9000dd0c:	24000060 	.word	0x24000060
9000dd10:	017d7840 	.word	0x017d7840
9000dd14:	03d09000 	.word	0x03d09000

9000dd18 <HAL_RCC_GetPCLK1Freq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000dd18:	4a1c      	ldr	r2, [pc, #112]	; (9000dd8c <HAL_RCC_GetPCLK1Freq+0x74>)
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
9000dd1a:	b538      	push	{r3, r4, r5, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000dd1c:	6913      	ldr	r3, [r2, #16]
9000dd1e:	f003 0338 	and.w	r3, r3, #56	; 0x38
9000dd22:	2b10      	cmp	r3, #16
9000dd24:	d021      	beq.n	9000dd6a <HAL_RCC_GetPCLK1Freq+0x52>
9000dd26:	2b18      	cmp	r3, #24
9000dd28:	d02a      	beq.n	9000dd80 <HAL_RCC_GetPCLK1Freq+0x68>
9000dd2a:	b303      	cbz	r3, 9000dd6e <HAL_RCC_GetPCLK1Freq+0x56>
      sysclockfreq = CSI_VALUE;
9000dd2c:	4818      	ldr	r0, [pc, #96]	; (9000dd90 <HAL_RCC_GetPCLK1Freq+0x78>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000dd2e:	4a17      	ldr	r2, [pc, #92]	; (9000dd8c <HAL_RCC_GetPCLK1Freq+0x74>)
9000dd30:	4918      	ldr	r1, [pc, #96]	; (9000dd94 <HAL_RCC_GetPCLK1Freq+0x7c>)
9000dd32:	6993      	ldr	r3, [r2, #24]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000dd34:	4c18      	ldr	r4, [pc, #96]	; (9000dd98 <HAL_RCC_GetPCLK1Freq+0x80>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000dd36:	f3c3 2303 	ubfx	r3, r3, #8, #4
  SystemCoreClock = common_system_clock;
9000dd3a:	4d18      	ldr	r5, [pc, #96]	; (9000dd9c <HAL_RCC_GetPCLK1Freq+0x84>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000dd3c:	5ccb      	ldrb	r3, [r1, r3]
9000dd3e:	f003 031f 	and.w	r3, r3, #31
9000dd42:	40d8      	lsrs	r0, r3
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000dd44:	6993      	ldr	r3, [r2, #24]
9000dd46:	f003 030f 	and.w	r3, r3, #15
  SystemCoreClock = common_system_clock;
9000dd4a:	6028      	str	r0, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000dd4c:	5ccb      	ldrb	r3, [r1, r3]
9000dd4e:	f003 031f 	and.w	r3, r3, #31
9000dd52:	fa20 f303 	lsr.w	r3, r0, r3
9000dd56:	6023      	str	r3, [r4, #0]
#if defined (RCC_D2CFGR_D2PPRE1)
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1) >> RCC_D2CFGR_D2PPRE1_Pos]) & 0x1FU));
9000dd58:	69d2      	ldr	r2, [r2, #28]
9000dd5a:	f3c2 1202 	ubfx	r2, r2, #4, #3
9000dd5e:	5c88      	ldrb	r0, [r1, r2]
9000dd60:	f000 001f 	and.w	r0, r0, #31
#else
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE1) >> RCC_CDCFGR2_CDPPRE1_Pos]) & 0x1FU));
#endif
}
9000dd64:	fa23 f000 	lsr.w	r0, r3, r0
9000dd68:	bd38      	pop	{r3, r4, r5, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000dd6a:	480d      	ldr	r0, [pc, #52]	; (9000dda0 <HAL_RCC_GetPCLK1Freq+0x88>)
9000dd6c:	e7df      	b.n	9000dd2e <HAL_RCC_GetPCLK1Freq+0x16>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000dd6e:	6813      	ldr	r3, [r2, #0]
9000dd70:	069b      	lsls	r3, r3, #26
9000dd72:	d508      	bpl.n	9000dd86 <HAL_RCC_GetPCLK1Freq+0x6e>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000dd74:	6813      	ldr	r3, [r2, #0]
9000dd76:	480b      	ldr	r0, [pc, #44]	; (9000dda4 <HAL_RCC_GetPCLK1Freq+0x8c>)
9000dd78:	f3c3 03c1 	ubfx	r3, r3, #3, #2
9000dd7c:	40d8      	lsrs	r0, r3
9000dd7e:	e7d6      	b.n	9000dd2e <HAL_RCC_GetPCLK1Freq+0x16>
9000dd80:	f7ff fa4a 	bl	9000d218 <HAL_RCC_GetSysClockFreq.part.0>
9000dd84:	e7d3      	b.n	9000dd2e <HAL_RCC_GetPCLK1Freq+0x16>
        sysclockfreq = (uint32_t) HSI_VALUE;
9000dd86:	4807      	ldr	r0, [pc, #28]	; (9000dda4 <HAL_RCC_GetPCLK1Freq+0x8c>)
9000dd88:	e7d1      	b.n	9000dd2e <HAL_RCC_GetPCLK1Freq+0x16>
9000dd8a:	bf00      	nop
9000dd8c:	58024400 	.word	0x58024400
9000dd90:	003d0900 	.word	0x003d0900
9000dd94:	9002dcf8 	.word	0x9002dcf8
9000dd98:	24000064 	.word	0x24000064
9000dd9c:	24000060 	.word	0x24000060
9000dda0:	017d7840 	.word	0x017d7840
9000dda4:	03d09000 	.word	0x03d09000

9000dda8 <HAL_RCC_GetPCLK2Freq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000dda8:	4a1c      	ldr	r2, [pc, #112]	; (9000de1c <HAL_RCC_GetPCLK2Freq+0x74>)
  * @note   Each time PCLK2 changes, this function must be called to update the
  *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
9000ddaa:	b538      	push	{r3, r4, r5, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000ddac:	6913      	ldr	r3, [r2, #16]
9000ddae:	f003 0338 	and.w	r3, r3, #56	; 0x38
9000ddb2:	2b10      	cmp	r3, #16
9000ddb4:	d021      	beq.n	9000ddfa <HAL_RCC_GetPCLK2Freq+0x52>
9000ddb6:	2b18      	cmp	r3, #24
9000ddb8:	d02a      	beq.n	9000de10 <HAL_RCC_GetPCLK2Freq+0x68>
9000ddba:	b303      	cbz	r3, 9000ddfe <HAL_RCC_GetPCLK2Freq+0x56>
      sysclockfreq = CSI_VALUE;
9000ddbc:	4818      	ldr	r0, [pc, #96]	; (9000de20 <HAL_RCC_GetPCLK2Freq+0x78>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000ddbe:	4a17      	ldr	r2, [pc, #92]	; (9000de1c <HAL_RCC_GetPCLK2Freq+0x74>)
9000ddc0:	4918      	ldr	r1, [pc, #96]	; (9000de24 <HAL_RCC_GetPCLK2Freq+0x7c>)
9000ddc2:	6993      	ldr	r3, [r2, #24]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000ddc4:	4c18      	ldr	r4, [pc, #96]	; (9000de28 <HAL_RCC_GetPCLK2Freq+0x80>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000ddc6:	f3c3 2303 	ubfx	r3, r3, #8, #4
  SystemCoreClock = common_system_clock;
9000ddca:	4d18      	ldr	r5, [pc, #96]	; (9000de2c <HAL_RCC_GetPCLK2Freq+0x84>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000ddcc:	5ccb      	ldrb	r3, [r1, r3]
9000ddce:	f003 031f 	and.w	r3, r3, #31
9000ddd2:	40d8      	lsrs	r0, r3
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000ddd4:	6993      	ldr	r3, [r2, #24]
9000ddd6:	f003 030f 	and.w	r3, r3, #15
  SystemCoreClock = common_system_clock;
9000ddda:	6028      	str	r0, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000dddc:	5ccb      	ldrb	r3, [r1, r3]
9000ddde:	f003 031f 	and.w	r3, r3, #31
9000dde2:	fa20 f303 	lsr.w	r3, r0, r3
9000dde6:	6023      	str	r3, [r4, #0]
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
#if defined(RCC_D2CFGR_D2PPRE2)
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE2) >> RCC_D2CFGR_D2PPRE2_Pos]) & 0x1FU));
9000dde8:	69d2      	ldr	r2, [r2, #28]
9000ddea:	f3c2 2202 	ubfx	r2, r2, #8, #3
9000ddee:	5c88      	ldrb	r0, [r1, r2]
9000ddf0:	f000 001f 	and.w	r0, r0, #31
#else
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE2) >> RCC_CDCFGR2_CDPPRE2_Pos]) & 0x1FU));
#endif
}
9000ddf4:	fa23 f000 	lsr.w	r0, r3, r0
9000ddf8:	bd38      	pop	{r3, r4, r5, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000ddfa:	480d      	ldr	r0, [pc, #52]	; (9000de30 <HAL_RCC_GetPCLK2Freq+0x88>)
9000ddfc:	e7df      	b.n	9000ddbe <HAL_RCC_GetPCLK2Freq+0x16>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000ddfe:	6813      	ldr	r3, [r2, #0]
9000de00:	069b      	lsls	r3, r3, #26
9000de02:	d508      	bpl.n	9000de16 <HAL_RCC_GetPCLK2Freq+0x6e>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000de04:	6813      	ldr	r3, [r2, #0]
9000de06:	480b      	ldr	r0, [pc, #44]	; (9000de34 <HAL_RCC_GetPCLK2Freq+0x8c>)
9000de08:	f3c3 03c1 	ubfx	r3, r3, #3, #2
9000de0c:	40d8      	lsrs	r0, r3
9000de0e:	e7d6      	b.n	9000ddbe <HAL_RCC_GetPCLK2Freq+0x16>
9000de10:	f7ff fa02 	bl	9000d218 <HAL_RCC_GetSysClockFreq.part.0>
9000de14:	e7d3      	b.n	9000ddbe <HAL_RCC_GetPCLK2Freq+0x16>
        sysclockfreq = (uint32_t) HSI_VALUE;
9000de16:	4807      	ldr	r0, [pc, #28]	; (9000de34 <HAL_RCC_GetPCLK2Freq+0x8c>)
9000de18:	e7d1      	b.n	9000ddbe <HAL_RCC_GetPCLK2Freq+0x16>
9000de1a:	bf00      	nop
9000de1c:	58024400 	.word	0x58024400
9000de20:	003d0900 	.word	0x003d0900
9000de24:	9002dcf8 	.word	0x9002dcf8
9000de28:	24000064 	.word	0x24000064
9000de2c:	24000060 	.word	0x24000060
9000de30:	017d7840 	.word	0x017d7840
9000de34:	03d09000 	.word	0x03d09000

9000de38 <HAL_RCC_GetClockConfig>:
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_D1PCLK1 | RCC_CLOCKTYPE_PCLK1 |
                                 RCC_CLOCKTYPE_PCLK2 |  RCC_CLOCKTYPE_D3PCLK1  ;

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
9000de38:	4b13      	ldr	r3, [pc, #76]	; (9000de88 <HAL_RCC_GetClockConfig+0x50>)
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_D1PCLK1 | RCC_CLOCKTYPE_PCLK1 |
9000de3a:	223f      	movs	r2, #63	; 0x3f
9000de3c:	6002      	str	r2, [r0, #0]
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
9000de3e:	691a      	ldr	r2, [r3, #16]
9000de40:	f002 0207 	and.w	r2, r2, #7
9000de44:	6042      	str	r2, [r0, #4]

#if defined(RCC_D1CFGR_D1CPRE)
  /* Get the SYSCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_D1CPRE);
9000de46:	699a      	ldr	r2, [r3, #24]
9000de48:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
9000de4c:	6082      	str	r2, [r0, #8]

  /* Get the D1HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_HPRE);
9000de4e:	699a      	ldr	r2, [r3, #24]
9000de50:	f002 020f 	and.w	r2, r2, #15
9000de54:	60c2      	str	r2, [r0, #12]

  /* Get the APB3 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB3CLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_D1PPRE);
9000de56:	699a      	ldr	r2, [r3, #24]
9000de58:	f002 0270 	and.w	r2, r2, #112	; 0x70
9000de5c:	6102      	str	r2, [r0, #16]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1);
9000de5e:	69da      	ldr	r2, [r3, #28]
9000de60:	f002 0270 	and.w	r2, r2, #112	; 0x70
9000de64:	6142      	str	r2, [r0, #20]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)(RCC->D2CFGR & RCC_D2CFGR_D2PPRE2);
9000de66:	69da      	ldr	r2, [r3, #28]
9000de68:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
9000de6c:	6182      	str	r2, [r0, #24]

  /* Get the APB4 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->D3CFGR & RCC_D3CFGR_D3PPRE);
9000de6e:	6a1b      	ldr	r3, [r3, #32]
{
9000de70:	b410      	push	{r4}
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->D3CFGR & RCC_D3CFGR_D3PPRE);
9000de72:	f003 0370 	and.w	r3, r3, #112	; 0x70
  /* Get the APB4 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->SRDCFGR & RCC_SRDCFGR_SRDPPRE);
#endif

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
9000de76:	4c05      	ldr	r4, [pc, #20]	; (9000de8c <HAL_RCC_GetClockConfig+0x54>)
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->D3CFGR & RCC_D3CFGR_D3PPRE);
9000de78:	61c3      	str	r3, [r0, #28]
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
9000de7a:	6823      	ldr	r3, [r4, #0]
}
9000de7c:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
9000de80:	f003 030f 	and.w	r3, r3, #15
9000de84:	600b      	str	r3, [r1, #0]
}
9000de86:	4770      	bx	lr
9000de88:	58024400 	.word	0x58024400
9000de8c:	52002000 	.word	0x52002000

9000de90 <RCCEx_PLL2_Config>:
  * @note   PLL2 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL2_Config(RCC_PLL2InitTypeDef *pll2, uint32_t Divider)
{
9000de90:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  assert_param(IS_RCC_PLL2RGE_VALUE(pll2->PLL2RGE));
  assert_param(IS_RCC_PLL2VCO_VALUE(pll2->PLL2VCOSEL));
  assert_param(IS_RCC_PLLFRACN_VALUE(pll2->PLL2FRACN));

  /* Check that PLL2 OSC clock source is already set */
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000de92:	4c3a      	ldr	r4, [pc, #232]	; (9000df7c <RCCEx_PLL2_Config+0xec>)
9000de94:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000de96:	f003 0303 	and.w	r3, r3, #3
9000de9a:	2b03      	cmp	r3, #3
9000de9c:	d067      	beq.n	9000df6e <RCCEx_PLL2_Config+0xde>


  else
  {
    /* Disable  PLL2. */
    __HAL_RCC_PLL2_DISABLE();
9000de9e:	6823      	ldr	r3, [r4, #0]
9000dea0:	4606      	mov	r6, r0
9000dea2:	460f      	mov	r7, r1
9000dea4:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
9000dea8:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000deaa:	f7fc f8fd 	bl	9000a0a8 <HAL_GetTick>
9000deae:	4605      	mov	r5, r0

    /* Wait till PLL is disabled */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
9000deb0:	e004      	b.n	9000debc <RCCEx_PLL2_Config+0x2c>
    {
      if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
9000deb2:	f7fc f8f9 	bl	9000a0a8 <HAL_GetTick>
9000deb6:	1b43      	subs	r3, r0, r5
9000deb8:	2b02      	cmp	r3, #2
9000deba:	d856      	bhi.n	9000df6a <RCCEx_PLL2_Config+0xda>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
9000debc:	6823      	ldr	r3, [r4, #0]
9000debe:	011a      	lsls	r2, r3, #4
9000dec0:	d4f7      	bmi.n	9000deb2 <RCCEx_PLL2_Config+0x22>
        return HAL_TIMEOUT;
      }
    }

    /* Configure PLL2 multiplication and division factors. */
    __HAL_RCC_PLL2_CONFIG(pll2->PLL2M,
9000dec2:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000dec4:	6832      	ldr	r2, [r6, #0]
9000dec6:	f423 337c 	bic.w	r3, r3, #258048	; 0x3f000
9000deca:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
9000dece:	62a3      	str	r3, [r4, #40]	; 0x28
9000ded0:	e9d6 3202 	ldrd	r3, r2, [r6, #8]
9000ded4:	3b01      	subs	r3, #1
9000ded6:	3a01      	subs	r2, #1
9000ded8:	025b      	lsls	r3, r3, #9
9000deda:	0412      	lsls	r2, r2, #16
9000dedc:	b29b      	uxth	r3, r3
9000dede:	f402 02fe 	and.w	r2, r2, #8323072	; 0x7f0000
9000dee2:	4313      	orrs	r3, r2
9000dee4:	6872      	ldr	r2, [r6, #4]
9000dee6:	3a01      	subs	r2, #1
9000dee8:	f3c2 0208 	ubfx	r2, r2, #0, #9
9000deec:	4313      	orrs	r3, r2
9000deee:	6932      	ldr	r2, [r6, #16]
9000def0:	3a01      	subs	r2, #1
9000def2:	0612      	lsls	r2, r2, #24
9000def4:	f002 42fe 	and.w	r2, r2, #2130706432	; 0x7f000000
9000def8:	4313      	orrs	r3, r2
9000defa:	63a3      	str	r3, [r4, #56]	; 0x38
                          pll2->PLL2P,
                          pll2->PLL2Q,
                          pll2->PLL2R);

    /* Select PLL2 input reference frequency range: VCI */
    __HAL_RCC_PLL2_VCIRANGE(pll2->PLL2RGE) ;
9000defc:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000defe:	6972      	ldr	r2, [r6, #20]
9000df00:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
9000df04:	4313      	orrs	r3, r2
9000df06:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Select PLL2 output frequency range : VCO */
    __HAL_RCC_PLL2_VCORANGE(pll2->PLL2VCOSEL) ;
9000df08:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000df0a:	69b3      	ldr	r3, [r6, #24]
9000df0c:	f022 0220 	bic.w	r2, r2, #32
9000df10:	431a      	orrs	r2, r3

    /* Disable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_DISABLE();

    /* Configures PLL2 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL2FRACN_CONFIG(pll2->PLL2FRACN);
9000df12:	4b1b      	ldr	r3, [pc, #108]	; (9000df80 <RCCEx_PLL2_Config+0xf0>)
    __HAL_RCC_PLL2_VCORANGE(pll2->PLL2VCOSEL) ;
9000df14:	62e2      	str	r2, [r4, #44]	; 0x2c
    __HAL_RCC_PLL2FRACN_DISABLE();
9000df16:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000df18:	f022 0210 	bic.w	r2, r2, #16
9000df1c:	62e2      	str	r2, [r4, #44]	; 0x2c
    __HAL_RCC_PLL2FRACN_CONFIG(pll2->PLL2FRACN);
9000df1e:	6be1      	ldr	r1, [r4, #60]	; 0x3c
9000df20:	69f2      	ldr	r2, [r6, #28]
9000df22:	400b      	ands	r3, r1
9000df24:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
9000df28:	63e3      	str	r3, [r4, #60]	; 0x3c

    /* Enable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_ENABLE();
9000df2a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000df2c:	f043 0310 	orr.w	r3, r3, #16
9000df30:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Enable the PLL2 clock output */
    if (Divider == DIVIDER_P_UPDATE)
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVP);
9000df32:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    if (Divider == DIVIDER_P_UPDATE)
9000df34:	b1ef      	cbz	r7, 9000df72 <RCCEx_PLL2_Config+0xe2>
    }
    else if (Divider == DIVIDER_Q_UPDATE)
9000df36:	2f01      	cmp	r7, #1
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVQ);
9000df38:	bf0c      	ite	eq
9000df3a:	f443 1380 	orreq.w	r3, r3, #1048576	; 0x100000
    }
    else
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVR);
9000df3e:	f443 1300 	orrne.w	r3, r3, #2097152	; 0x200000
9000df42:	62e3      	str	r3, [r4, #44]	; 0x2c
    }

    /* Enable  PLL2. */
    __HAL_RCC_PLL2_ENABLE();
9000df44:	4c0d      	ldr	r4, [pc, #52]	; (9000df7c <RCCEx_PLL2_Config+0xec>)
9000df46:	6823      	ldr	r3, [r4, #0]
9000df48:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
9000df4c:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000df4e:	f7fc f8ab 	bl	9000a0a8 <HAL_GetTick>
9000df52:	4605      	mov	r5, r0

    /* Wait till PLL2 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
9000df54:	e004      	b.n	9000df60 <RCCEx_PLL2_Config+0xd0>
    {
      if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
9000df56:	f7fc f8a7 	bl	9000a0a8 <HAL_GetTick>
9000df5a:	1b40      	subs	r0, r0, r5
9000df5c:	2802      	cmp	r0, #2
9000df5e:	d804      	bhi.n	9000df6a <RCCEx_PLL2_Config+0xda>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
9000df60:	6823      	ldr	r3, [r4, #0]
9000df62:	011b      	lsls	r3, r3, #4
9000df64:	d5f7      	bpl.n	9000df56 <RCCEx_PLL2_Config+0xc6>
    }

  }


  return status;
9000df66:	2000      	movs	r0, #0
}
9000df68:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        return HAL_TIMEOUT;
9000df6a:	2003      	movs	r0, #3
}
9000df6c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    return HAL_ERROR;
9000df6e:	2001      	movs	r0, #1
}
9000df70:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVP);
9000df72:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
9000df76:	62e3      	str	r3, [r4, #44]	; 0x2c
9000df78:	e7e4      	b.n	9000df44 <RCCEx_PLL2_Config+0xb4>
9000df7a:	bf00      	nop
9000df7c:	58024400 	.word	0x58024400
9000df80:	ffff0007 	.word	0xffff0007

9000df84 <RCCEx_PLL3_Config>:
  * @note   PLL3 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL3_Config(RCC_PLL3InitTypeDef *pll3, uint32_t Divider)
{
9000df84:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  assert_param(IS_RCC_PLL3RGE_VALUE(pll3->PLL3RGE));
  assert_param(IS_RCC_PLL3VCO_VALUE(pll3->PLL3VCOSEL));
  assert_param(IS_RCC_PLLFRACN_VALUE(pll3->PLL3FRACN));

  /* Check that PLL3 OSC clock source is already set */
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000df86:	4c3a      	ldr	r4, [pc, #232]	; (9000e070 <RCCEx_PLL3_Config+0xec>)
9000df88:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000df8a:	f003 0303 	and.w	r3, r3, #3
9000df8e:	2b03      	cmp	r3, #3
9000df90:	d067      	beq.n	9000e062 <RCCEx_PLL3_Config+0xde>


  else
  {
    /* Disable  PLL3. */
    __HAL_RCC_PLL3_DISABLE();
9000df92:	6823      	ldr	r3, [r4, #0]
9000df94:	4606      	mov	r6, r0
9000df96:	460f      	mov	r7, r1
9000df98:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
9000df9c:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000df9e:	f7fc f883 	bl	9000a0a8 <HAL_GetTick>
9000dfa2:	4605      	mov	r5, r0
    /* Wait till PLL3 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
9000dfa4:	e004      	b.n	9000dfb0 <RCCEx_PLL3_Config+0x2c>
    {
      if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
9000dfa6:	f7fc f87f 	bl	9000a0a8 <HAL_GetTick>
9000dfaa:	1b43      	subs	r3, r0, r5
9000dfac:	2b02      	cmp	r3, #2
9000dfae:	d856      	bhi.n	9000e05e <RCCEx_PLL3_Config+0xda>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
9000dfb0:	6823      	ldr	r3, [r4, #0]
9000dfb2:	009a      	lsls	r2, r3, #2
9000dfb4:	d4f7      	bmi.n	9000dfa6 <RCCEx_PLL3_Config+0x22>
        return HAL_TIMEOUT;
      }
    }

    /* Configure the PLL3  multiplication and division factors. */
    __HAL_RCC_PLL3_CONFIG(pll3->PLL3M,
9000dfb6:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000dfb8:	6832      	ldr	r2, [r6, #0]
9000dfba:	f023 737c 	bic.w	r3, r3, #66060288	; 0x3f00000
9000dfbe:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
9000dfc2:	62a3      	str	r3, [r4, #40]	; 0x28
9000dfc4:	e9d6 3202 	ldrd	r3, r2, [r6, #8]
9000dfc8:	3b01      	subs	r3, #1
9000dfca:	3a01      	subs	r2, #1
9000dfcc:	025b      	lsls	r3, r3, #9
9000dfce:	0412      	lsls	r2, r2, #16
9000dfd0:	b29b      	uxth	r3, r3
9000dfd2:	f402 02fe 	and.w	r2, r2, #8323072	; 0x7f0000
9000dfd6:	4313      	orrs	r3, r2
9000dfd8:	6872      	ldr	r2, [r6, #4]
9000dfda:	3a01      	subs	r2, #1
9000dfdc:	f3c2 0208 	ubfx	r2, r2, #0, #9
9000dfe0:	4313      	orrs	r3, r2
9000dfe2:	6932      	ldr	r2, [r6, #16]
9000dfe4:	3a01      	subs	r2, #1
9000dfe6:	0612      	lsls	r2, r2, #24
9000dfe8:	f002 42fe 	and.w	r2, r2, #2130706432	; 0x7f000000
9000dfec:	4313      	orrs	r3, r2
9000dfee:	6423      	str	r3, [r4, #64]	; 0x40
                          pll3->PLL3P,
                          pll3->PLL3Q,
                          pll3->PLL3R);

    /* Select PLL3 input reference frequency range: VCI */
    __HAL_RCC_PLL3_VCIRANGE(pll3->PLL3RGE) ;
9000dff0:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000dff2:	6972      	ldr	r2, [r6, #20]
9000dff4:	f423 6340 	bic.w	r3, r3, #3072	; 0xc00
9000dff8:	4313      	orrs	r3, r2
9000dffa:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Select PLL3 output frequency range : VCO */
    __HAL_RCC_PLL3_VCORANGE(pll3->PLL3VCOSEL) ;
9000dffc:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000dffe:	69b3      	ldr	r3, [r6, #24]
9000e000:	f422 7200 	bic.w	r2, r2, #512	; 0x200
9000e004:	431a      	orrs	r2, r3

    /* Disable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_DISABLE();

    /* Configures PLL3 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL3FRACN_CONFIG(pll3->PLL3FRACN);
9000e006:	4b1b      	ldr	r3, [pc, #108]	; (9000e074 <RCCEx_PLL3_Config+0xf0>)
    __HAL_RCC_PLL3_VCORANGE(pll3->PLL3VCOSEL) ;
9000e008:	62e2      	str	r2, [r4, #44]	; 0x2c
    __HAL_RCC_PLL3FRACN_DISABLE();
9000e00a:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000e00c:	f422 7280 	bic.w	r2, r2, #256	; 0x100
9000e010:	62e2      	str	r2, [r4, #44]	; 0x2c
    __HAL_RCC_PLL3FRACN_CONFIG(pll3->PLL3FRACN);
9000e012:	6c61      	ldr	r1, [r4, #68]	; 0x44
9000e014:	69f2      	ldr	r2, [r6, #28]
9000e016:	400b      	ands	r3, r1
9000e018:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
9000e01c:	6463      	str	r3, [r4, #68]	; 0x44

    /* Enable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_ENABLE();
9000e01e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000e020:	f443 7380 	orr.w	r3, r3, #256	; 0x100
9000e024:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Enable the PLL3 clock output */
    if (Divider == DIVIDER_P_UPDATE)
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVP);
9000e026:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    if (Divider == DIVIDER_P_UPDATE)
9000e028:	b1ef      	cbz	r7, 9000e066 <RCCEx_PLL3_Config+0xe2>
    }
    else if (Divider == DIVIDER_Q_UPDATE)
9000e02a:	2f01      	cmp	r7, #1
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVQ);
9000e02c:	bf0c      	ite	eq
9000e02e:	f443 0300 	orreq.w	r3, r3, #8388608	; 0x800000
    }
    else
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVR);
9000e032:	f043 7380 	orrne.w	r3, r3, #16777216	; 0x1000000
9000e036:	62e3      	str	r3, [r4, #44]	; 0x2c
    }

    /* Enable  PLL3. */
    __HAL_RCC_PLL3_ENABLE();
9000e038:	4c0d      	ldr	r4, [pc, #52]	; (9000e070 <RCCEx_PLL3_Config+0xec>)
9000e03a:	6823      	ldr	r3, [r4, #0]
9000e03c:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
9000e040:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000e042:	f7fc f831 	bl	9000a0a8 <HAL_GetTick>
9000e046:	4605      	mov	r5, r0

    /* Wait till PLL3 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
9000e048:	e004      	b.n	9000e054 <RCCEx_PLL3_Config+0xd0>
    {
      if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
9000e04a:	f7fc f82d 	bl	9000a0a8 <HAL_GetTick>
9000e04e:	1b40      	subs	r0, r0, r5
9000e050:	2802      	cmp	r0, #2
9000e052:	d804      	bhi.n	9000e05e <RCCEx_PLL3_Config+0xda>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
9000e054:	6823      	ldr	r3, [r4, #0]
9000e056:	009b      	lsls	r3, r3, #2
9000e058:	d5f7      	bpl.n	9000e04a <RCCEx_PLL3_Config+0xc6>
    }

  }


  return status;
9000e05a:	2000      	movs	r0, #0
}
9000e05c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        return HAL_TIMEOUT;
9000e05e:	2003      	movs	r0, #3
}
9000e060:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    return HAL_ERROR;
9000e062:	2001      	movs	r0, #1
}
9000e064:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVP);
9000e066:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
9000e06a:	62e3      	str	r3, [r4, #44]	; 0x2c
9000e06c:	e7e4      	b.n	9000e038 <RCCEx_PLL3_Config+0xb4>
9000e06e:	bf00      	nop
9000e070:	58024400 	.word	0x58024400
9000e074:	ffff0007 	.word	0xffff0007

9000e078 <HAL_RCCEx_PeriphCLKConfig>:
{
9000e078:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
9000e07c:	e9d0 3200 	ldrd	r3, r2, [r0]
{
9000e080:	4604      	mov	r4, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
9000e082:	011d      	lsls	r5, r3, #4
9000e084:	f003 6600 	and.w	r6, r3, #134217728	; 0x8000000
9000e088:	d523      	bpl.n	9000e0d2 <HAL_RCCEx_PeriphCLKConfig+0x5a>
    switch (PeriphClkInit->SpdifrxClockSelection)
9000e08a:	6e81      	ldr	r1, [r0, #104]	; 0x68
9000e08c:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
9000e090:	f000 8553 	beq.w	9000eb3a <HAL_RCCEx_PeriphCLKConfig+0xac2>
9000e094:	d812      	bhi.n	9000e0bc <HAL_RCCEx_PeriphCLKConfig+0x44>
9000e096:	2900      	cmp	r1, #0
9000e098:	f000 85a9 	beq.w	9000ebee <HAL_RCCEx_PeriphCLKConfig+0xb76>
9000e09c:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
9000e0a0:	f040 85a2 	bne.w	9000ebe8 <HAL_RCCEx_PeriphCLKConfig+0xb70>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
9000e0a4:	2102      	movs	r1, #2
9000e0a6:	3008      	adds	r0, #8
9000e0a8:	f7ff fef2 	bl	9000de90 <RCCEx_PLL2_Config>
9000e0ac:	4606      	mov	r6, r0
    if (ret == HAL_OK)
9000e0ae:	2e00      	cmp	r6, #0
9000e0b0:	f040 8522 	bne.w	9000eaf8 <HAL_RCCEx_PeriphCLKConfig+0xa80>
      __HAL_RCC_SPDIFRX_CONFIG(PeriphClkInit->SpdifrxClockSelection);
9000e0b4:	6ea1      	ldr	r1, [r4, #104]	; 0x68
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
9000e0b6:	e9d4 3200 	ldrd	r3, r2, [r4]
9000e0ba:	e003      	b.n	9000e0c4 <HAL_RCCEx_PeriphCLKConfig+0x4c>
    switch (PeriphClkInit->SpdifrxClockSelection)
9000e0bc:	f5b1 1f40 	cmp.w	r1, #3145728	; 0x300000
9000e0c0:	f040 8592 	bne.w	9000ebe8 <HAL_RCCEx_PeriphCLKConfig+0xb70>
      __HAL_RCC_SPDIFRX_CONFIG(PeriphClkInit->SpdifrxClockSelection);
9000e0c4:	4dae      	ldr	r5, [pc, #696]	; (9000e380 <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000e0c6:	2600      	movs	r6, #0
9000e0c8:	6d28      	ldr	r0, [r5, #80]	; 0x50
9000e0ca:	f420 1040 	bic.w	r0, r0, #3145728	; 0x300000
9000e0ce:	4301      	orrs	r1, r0
9000e0d0:	6529      	str	r1, [r5, #80]	; 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
9000e0d2:	05d8      	lsls	r0, r3, #23
9000e0d4:	d50a      	bpl.n	9000e0ec <HAL_RCCEx_PeriphCLKConfig+0x74>
    switch (PeriphClkInit->Sai1ClockSelection)
9000e0d6:	6da1      	ldr	r1, [r4, #88]	; 0x58
9000e0d8:	2904      	cmp	r1, #4
9000e0da:	d806      	bhi.n	9000e0ea <HAL_RCCEx_PeriphCLKConfig+0x72>
9000e0dc:	e8df f011 	tbh	[pc, r1, lsl #1]
9000e0e0:	053d0536 	.word	0x053d0536
9000e0e4:	0323051a 	.word	0x0323051a
9000e0e8:	0323      	.short	0x0323
9000e0ea:	2601      	movs	r6, #1
9000e0ec:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
9000e0ee:	0599      	lsls	r1, r3, #22
9000e0f0:	d51d      	bpl.n	9000e12e <HAL_RCCEx_PeriphCLKConfig+0xb6>
    switch (PeriphClkInit->Sai23ClockSelection)
9000e0f2:	6de1      	ldr	r1, [r4, #92]	; 0x5c
9000e0f4:	2980      	cmp	r1, #128	; 0x80
9000e0f6:	f000 8516 	beq.w	9000eb26 <HAL_RCCEx_PeriphCLKConfig+0xaae>
9000e0fa:	f200 80f9 	bhi.w	9000e2f0 <HAL_RCCEx_PeriphCLKConfig+0x278>
9000e0fe:	2900      	cmp	r1, #0
9000e100:	f000 8433 	beq.w	9000e96a <HAL_RCCEx_PeriphCLKConfig+0x8f2>
9000e104:	2940      	cmp	r1, #64	; 0x40
9000e106:	f040 80fa 	bne.w	9000e2fe <HAL_RCCEx_PeriphCLKConfig+0x286>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000e10a:	2100      	movs	r1, #0
9000e10c:	f104 0008 	add.w	r0, r4, #8
9000e110:	f7ff febe 	bl	9000de90 <RCCEx_PLL2_Config>
9000e114:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
9000e116:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000e11a:	2d00      	cmp	r5, #0
9000e11c:	f040 83fe 	bne.w	9000e91c <HAL_RCCEx_PeriphCLKConfig+0x8a4>
      __HAL_RCC_SAI23_CONFIG(PeriphClkInit->Sai23ClockSelection);
9000e120:	4f97      	ldr	r7, [pc, #604]	; (9000e380 <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000e122:	6de0      	ldr	r0, [r4, #92]	; 0x5c
9000e124:	6d39      	ldr	r1, [r7, #80]	; 0x50
9000e126:	f421 71e0 	bic.w	r1, r1, #448	; 0x1c0
9000e12a:	4301      	orrs	r1, r0
9000e12c:	6539      	str	r1, [r7, #80]	; 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
9000e12e:	055f      	lsls	r7, r3, #21
9000e130:	d521      	bpl.n	9000e176 <HAL_RCCEx_PeriphCLKConfig+0xfe>
    switch (PeriphClkInit->Sai4AClockSelection)
9000e132:	f8d4 10a8 	ldr.w	r1, [r4, #168]	; 0xa8
9000e136:	f5b1 0f80 	cmp.w	r1, #4194304	; 0x400000
9000e13a:	f000 8521 	beq.w	9000eb80 <HAL_RCCEx_PeriphCLKConfig+0xb08>
9000e13e:	f200 80e1 	bhi.w	9000e304 <HAL_RCCEx_PeriphCLKConfig+0x28c>
9000e142:	2900      	cmp	r1, #0
9000e144:	f000 8418 	beq.w	9000e978 <HAL_RCCEx_PeriphCLKConfig+0x900>
9000e148:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
9000e14c:	f040 80e2 	bne.w	9000e314 <HAL_RCCEx_PeriphCLKConfig+0x29c>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000e150:	2100      	movs	r1, #0
9000e152:	f104 0008 	add.w	r0, r4, #8
9000e156:	f7ff fe9b 	bl	9000de90 <RCCEx_PLL2_Config>
9000e15a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
9000e15c:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000e160:	2d00      	cmp	r5, #0
9000e162:	f040 83e2 	bne.w	9000e92a <HAL_RCCEx_PeriphCLKConfig+0x8b2>
      __HAL_RCC_SAI4A_CONFIG(PeriphClkInit->Sai4AClockSelection);
9000e166:	4f86      	ldr	r7, [pc, #536]	; (9000e380 <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000e168:	f8d4 00a8 	ldr.w	r0, [r4, #168]	; 0xa8
9000e16c:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000e16e:	f421 0160 	bic.w	r1, r1, #14680064	; 0xe00000
9000e172:	4301      	orrs	r1, r0
9000e174:	65b9      	str	r1, [r7, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
9000e176:	0518      	lsls	r0, r3, #20
9000e178:	d521      	bpl.n	9000e1be <HAL_RCCEx_PeriphCLKConfig+0x146>
    switch (PeriphClkInit->Sai4BClockSelection)
9000e17a:	f8d4 10ac 	ldr.w	r1, [r4, #172]	; 0xac
9000e17e:	f1b1 7f00 	cmp.w	r1, #33554432	; 0x2000000
9000e182:	f000 84bd 	beq.w	9000eb00 <HAL_RCCEx_PeriphCLKConfig+0xa88>
9000e186:	f200 80c8 	bhi.w	9000e31a <HAL_RCCEx_PeriphCLKConfig+0x2a2>
9000e18a:	2900      	cmp	r1, #0
9000e18c:	f000 83e7 	beq.w	9000e95e <HAL_RCCEx_PeriphCLKConfig+0x8e6>
9000e190:	f1b1 7f80 	cmp.w	r1, #16777216	; 0x1000000
9000e194:	f040 80c9 	bne.w	9000e32a <HAL_RCCEx_PeriphCLKConfig+0x2b2>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000e198:	2100      	movs	r1, #0
9000e19a:	f104 0008 	add.w	r0, r4, #8
9000e19e:	f7ff fe77 	bl	9000de90 <RCCEx_PLL2_Config>
9000e1a2:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
9000e1a4:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000e1a8:	2d00      	cmp	r5, #0
9000e1aa:	f040 83b5 	bne.w	9000e918 <HAL_RCCEx_PeriphCLKConfig+0x8a0>
      __HAL_RCC_SAI4B_CONFIG(PeriphClkInit->Sai4BClockSelection);
9000e1ae:	4f74      	ldr	r7, [pc, #464]	; (9000e380 <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000e1b0:	f8d4 00ac 	ldr.w	r0, [r4, #172]	; 0xac
9000e1b4:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000e1b6:	f021 61e0 	bic.w	r1, r1, #117440512	; 0x7000000
9000e1ba:	4301      	orrs	r1, r0
9000e1bc:	65b9      	str	r1, [r7, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
9000e1be:	0199      	lsls	r1, r3, #6
9000e1c0:	d518      	bpl.n	9000e1f4 <HAL_RCCEx_PeriphCLKConfig+0x17c>
    switch (PeriphClkInit->QspiClockSelection)
9000e1c2:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
9000e1c4:	2920      	cmp	r1, #32
9000e1c6:	f000 841f 	beq.w	9000ea08 <HAL_RCCEx_PeriphCLKConfig+0x990>
9000e1ca:	f200 80b1 	bhi.w	9000e330 <HAL_RCCEx_PeriphCLKConfig+0x2b8>
9000e1ce:	b139      	cbz	r1, 9000e1e0 <HAL_RCCEx_PeriphCLKConfig+0x168>
9000e1d0:	2910      	cmp	r1, #16
9000e1d2:	f040 80b0 	bne.w	9000e336 <HAL_RCCEx_PeriphCLKConfig+0x2be>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000e1d6:	486a      	ldr	r0, [pc, #424]	; (9000e380 <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000e1d8:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000e1da:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000e1de:	62c1      	str	r1, [r0, #44]	; 0x2c
    if (ret == HAL_OK)
9000e1e0:	2d00      	cmp	r5, #0
9000e1e2:	f040 83d8 	bne.w	9000e996 <HAL_RCCEx_PeriphCLKConfig+0x91e>
      __HAL_RCC_QSPI_CONFIG(PeriphClkInit->QspiClockSelection);
9000e1e6:	4f66      	ldr	r7, [pc, #408]	; (9000e380 <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000e1e8:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
9000e1ea:	6cf9      	ldr	r1, [r7, #76]	; 0x4c
9000e1ec:	f021 0130 	bic.w	r1, r1, #48	; 0x30
9000e1f0:	4301      	orrs	r1, r0
9000e1f2:	64f9      	str	r1, [r7, #76]	; 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI123) == RCC_PERIPHCLK_SPI123)
9000e1f4:	04df      	lsls	r7, r3, #19
9000e1f6:	d51f      	bpl.n	9000e238 <HAL_RCCEx_PeriphCLKConfig+0x1c0>
    switch (PeriphClkInit->Spi123ClockSelection)
9000e1f8:	6e21      	ldr	r1, [r4, #96]	; 0x60
9000e1fa:	f5b1 5f00 	cmp.w	r1, #8192	; 0x2000
9000e1fe:	f000 84b5 	beq.w	9000eb6c <HAL_RCCEx_PeriphCLKConfig+0xaf4>
9000e202:	f200 809b 	bhi.w	9000e33c <HAL_RCCEx_PeriphCLKConfig+0x2c4>
9000e206:	2900      	cmp	r1, #0
9000e208:	f000 83a3 	beq.w	9000e952 <HAL_RCCEx_PeriphCLKConfig+0x8da>
9000e20c:	f5b1 5f80 	cmp.w	r1, #4096	; 0x1000
9000e210:	f040 809c 	bne.w	9000e34c <HAL_RCCEx_PeriphCLKConfig+0x2d4>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000e214:	2100      	movs	r1, #0
9000e216:	f104 0008 	add.w	r0, r4, #8
9000e21a:	f7ff fe39 	bl	9000de90 <RCCEx_PLL2_Config>
9000e21e:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
9000e220:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000e224:	2d00      	cmp	r5, #0
9000e226:	f040 837b 	bne.w	9000e920 <HAL_RCCEx_PeriphCLKConfig+0x8a8>
      __HAL_RCC_SPI123_CONFIG(PeriphClkInit->Spi123ClockSelection);
9000e22a:	4f55      	ldr	r7, [pc, #340]	; (9000e380 <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000e22c:	6e20      	ldr	r0, [r4, #96]	; 0x60
9000e22e:	6d39      	ldr	r1, [r7, #80]	; 0x50
9000e230:	f421 41e0 	bic.w	r1, r1, #28672	; 0x7000
9000e234:	4301      	orrs	r1, r0
9000e236:	6539      	str	r1, [r7, #80]	; 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
9000e238:	0498      	lsls	r0, r3, #18
9000e23a:	d51d      	bpl.n	9000e278 <HAL_RCCEx_PeriphCLKConfig+0x200>
    switch (PeriphClkInit->Spi45ClockSelection)
9000e23c:	6e61      	ldr	r1, [r4, #100]	; 0x64
9000e23e:	f5b1 3f00 	cmp.w	r1, #131072	; 0x20000
9000e242:	f000 8410 	beq.w	9000ea66 <HAL_RCCEx_PeriphCLKConfig+0x9ee>
9000e246:	f200 8084 	bhi.w	9000e352 <HAL_RCCEx_PeriphCLKConfig+0x2da>
9000e24a:	b159      	cbz	r1, 9000e264 <HAL_RCCEx_PeriphCLKConfig+0x1ec>
9000e24c:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
9000e250:	f040 8087 	bne.w	9000e362 <HAL_RCCEx_PeriphCLKConfig+0x2ea>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
9000e254:	2101      	movs	r1, #1
9000e256:	f104 0008 	add.w	r0, r4, #8
9000e25a:	f7ff fe19 	bl	9000de90 <RCCEx_PLL2_Config>
9000e25e:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
9000e260:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000e264:	2d00      	cmp	r5, #0
9000e266:	f040 839a 	bne.w	9000e99e <HAL_RCCEx_PeriphCLKConfig+0x926>
      __HAL_RCC_SPI45_CONFIG(PeriphClkInit->Spi45ClockSelection);
9000e26a:	4f45      	ldr	r7, [pc, #276]	; (9000e380 <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000e26c:	6e60      	ldr	r0, [r4, #100]	; 0x64
9000e26e:	6d39      	ldr	r1, [r7, #80]	; 0x50
9000e270:	f421 21e0 	bic.w	r1, r1, #458752	; 0x70000
9000e274:	4301      	orrs	r1, r0
9000e276:	6539      	str	r1, [r7, #80]	; 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
9000e278:	0459      	lsls	r1, r3, #17
9000e27a:	d51d      	bpl.n	9000e2b8 <HAL_RCCEx_PeriphCLKConfig+0x240>
    switch (PeriphClkInit->Spi6ClockSelection)
9000e27c:	f8d4 10b0 	ldr.w	r1, [r4, #176]	; 0xb0
9000e280:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
9000e284:	f000 83fb 	beq.w	9000ea7e <HAL_RCCEx_PeriphCLKConfig+0xa06>
9000e288:	d86e      	bhi.n	9000e368 <HAL_RCCEx_PeriphCLKConfig+0x2f0>
9000e28a:	b151      	cbz	r1, 9000e2a2 <HAL_RCCEx_PeriphCLKConfig+0x22a>
9000e28c:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
9000e290:	d172      	bne.n	9000e378 <HAL_RCCEx_PeriphCLKConfig+0x300>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
9000e292:	2101      	movs	r1, #1
9000e294:	f104 0008 	add.w	r0, r4, #8
9000e298:	f7ff fdfa 	bl	9000de90 <RCCEx_PLL2_Config>
9000e29c:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
9000e29e:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000e2a2:	2d00      	cmp	r5, #0
9000e2a4:	f040 837f 	bne.w	9000e9a6 <HAL_RCCEx_PeriphCLKConfig+0x92e>
      __HAL_RCC_SPI6_CONFIG(PeriphClkInit->Spi6ClockSelection);
9000e2a8:	4f35      	ldr	r7, [pc, #212]	; (9000e380 <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000e2aa:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
9000e2ae:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000e2b0:	f021 41e0 	bic.w	r1, r1, #1879048192	; 0x70000000
9000e2b4:	4301      	orrs	r1, r0
9000e2b6:	65b9      	str	r1, [r7, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
9000e2b8:	041f      	lsls	r7, r3, #16
9000e2ba:	d50d      	bpl.n	9000e2d8 <HAL_RCCEx_PeriphCLKConfig+0x260>
    switch (PeriphClkInit->FdcanClockSelection)
9000e2bc:	6f21      	ldr	r1, [r4, #112]	; 0x70
9000e2be:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
9000e2c2:	f000 83c8 	beq.w	9000ea56 <HAL_RCCEx_PeriphCLKConfig+0x9de>
9000e2c6:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
9000e2ca:	f000 823b 	beq.w	9000e744 <HAL_RCCEx_PeriphCLKConfig+0x6cc>
9000e2ce:	2900      	cmp	r1, #0
9000e2d0:	f000 8240 	beq.w	9000e754 <HAL_RCCEx_PeriphCLKConfig+0x6dc>
9000e2d4:	2601      	movs	r6, #1
9000e2d6:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FMC) == RCC_PERIPHCLK_FMC)
9000e2d8:	01d8      	lsls	r0, r3, #7
9000e2da:	d562      	bpl.n	9000e3a2 <HAL_RCCEx_PeriphCLKConfig+0x32a>
    switch (PeriphClkInit->FmcClockSelection)
9000e2dc:	6ca1      	ldr	r1, [r4, #72]	; 0x48
9000e2de:	2903      	cmp	r1, #3
9000e2e0:	f200 84bf 	bhi.w	9000ec62 <HAL_RCCEx_PeriphCLKConfig+0xbea>
9000e2e4:	e8df f011 	tbh	[pc, r1, lsl #1]
9000e2e8:	004e0053 	.word	0x004e0053
9000e2ec:	005303e2 	.word	0x005303e2
    switch (PeriphClkInit->Sai23ClockSelection)
9000e2f0:	29c0      	cmp	r1, #192	; 0xc0
9000e2f2:	f43f af12 	beq.w	9000e11a <HAL_RCCEx_PeriphCLKConfig+0xa2>
9000e2f6:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
9000e2fa:	f43f af0e 	beq.w	9000e11a <HAL_RCCEx_PeriphCLKConfig+0xa2>
9000e2fe:	2601      	movs	r6, #1
9000e300:	4635      	mov	r5, r6
9000e302:	e714      	b.n	9000e12e <HAL_RCCEx_PeriphCLKConfig+0xb6>
    switch (PeriphClkInit->Sai4AClockSelection)
9000e304:	f5b1 0fc0 	cmp.w	r1, #6291456	; 0x600000
9000e308:	f43f af2a 	beq.w	9000e160 <HAL_RCCEx_PeriphCLKConfig+0xe8>
9000e30c:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
9000e310:	f43f af26 	beq.w	9000e160 <HAL_RCCEx_PeriphCLKConfig+0xe8>
9000e314:	2601      	movs	r6, #1
9000e316:	4635      	mov	r5, r6
9000e318:	e72d      	b.n	9000e176 <HAL_RCCEx_PeriphCLKConfig+0xfe>
    switch (PeriphClkInit->Sai4BClockSelection)
9000e31a:	f1b1 7f40 	cmp.w	r1, #50331648	; 0x3000000
9000e31e:	f43f af43 	beq.w	9000e1a8 <HAL_RCCEx_PeriphCLKConfig+0x130>
9000e322:	f1b1 6f80 	cmp.w	r1, #67108864	; 0x4000000
9000e326:	f43f af3f 	beq.w	9000e1a8 <HAL_RCCEx_PeriphCLKConfig+0x130>
9000e32a:	2601      	movs	r6, #1
9000e32c:	4635      	mov	r5, r6
9000e32e:	e746      	b.n	9000e1be <HAL_RCCEx_PeriphCLKConfig+0x146>
    switch (PeriphClkInit->QspiClockSelection)
9000e330:	2930      	cmp	r1, #48	; 0x30
9000e332:	f43f af55 	beq.w	9000e1e0 <HAL_RCCEx_PeriphCLKConfig+0x168>
9000e336:	2601      	movs	r6, #1
9000e338:	4635      	mov	r5, r6
9000e33a:	e75b      	b.n	9000e1f4 <HAL_RCCEx_PeriphCLKConfig+0x17c>
    switch (PeriphClkInit->Spi123ClockSelection)
9000e33c:	f5b1 5f40 	cmp.w	r1, #12288	; 0x3000
9000e340:	f43f af70 	beq.w	9000e224 <HAL_RCCEx_PeriphCLKConfig+0x1ac>
9000e344:	f5b1 4f80 	cmp.w	r1, #16384	; 0x4000
9000e348:	f43f af6c 	beq.w	9000e224 <HAL_RCCEx_PeriphCLKConfig+0x1ac>
9000e34c:	2601      	movs	r6, #1
9000e34e:	4635      	mov	r5, r6
9000e350:	e772      	b.n	9000e238 <HAL_RCCEx_PeriphCLKConfig+0x1c0>
    switch (PeriphClkInit->Spi45ClockSelection)
9000e352:	f421 3080 	bic.w	r0, r1, #65536	; 0x10000
9000e356:	f5b0 2f80 	cmp.w	r0, #262144	; 0x40000
9000e35a:	d083      	beq.n	9000e264 <HAL_RCCEx_PeriphCLKConfig+0x1ec>
9000e35c:	f5b1 3f40 	cmp.w	r1, #196608	; 0x30000
9000e360:	d080      	beq.n	9000e264 <HAL_RCCEx_PeriphCLKConfig+0x1ec>
9000e362:	2601      	movs	r6, #1
9000e364:	4635      	mov	r5, r6
9000e366:	e787      	b.n	9000e278 <HAL_RCCEx_PeriphCLKConfig+0x200>
    switch (PeriphClkInit->Spi6ClockSelection)
9000e368:	f021 5080 	bic.w	r0, r1, #268435456	; 0x10000000
9000e36c:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
9000e370:	d097      	beq.n	9000e2a2 <HAL_RCCEx_PeriphCLKConfig+0x22a>
9000e372:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
9000e376:	d094      	beq.n	9000e2a2 <HAL_RCCEx_PeriphCLKConfig+0x22a>
9000e378:	2601      	movs	r6, #1
9000e37a:	4635      	mov	r5, r6
9000e37c:	e79c      	b.n	9000e2b8 <HAL_RCCEx_PeriphCLKConfig+0x240>
9000e37e:	bf00      	nop
9000e380:	58024400 	.word	0x58024400
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000e384:	4839      	ldr	r0, [pc, #228]	; (9000e46c <HAL_RCCEx_PeriphCLKConfig+0x3f4>)
9000e386:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000e388:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000e38c:	62c1      	str	r1, [r0, #44]	; 0x2c
    if (ret == HAL_OK)
9000e38e:	2d00      	cmp	r5, #0
9000e390:	f040 8303 	bne.w	9000e99a <HAL_RCCEx_PeriphCLKConfig+0x922>
      __HAL_RCC_FMC_CONFIG(PeriphClkInit->FmcClockSelection);
9000e394:	4f35      	ldr	r7, [pc, #212]	; (9000e46c <HAL_RCCEx_PeriphCLKConfig+0x3f4>)
9000e396:	6ca0      	ldr	r0, [r4, #72]	; 0x48
9000e398:	6cf9      	ldr	r1, [r7, #76]	; 0x4c
9000e39a:	f021 0103 	bic.w	r1, r1, #3
9000e39e:	4301      	orrs	r1, r0
9000e3a0:	64f9      	str	r1, [r7, #76]	; 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
9000e3a2:	0259      	lsls	r1, r3, #9
9000e3a4:	f100 826a 	bmi.w	9000e87c <HAL_RCCEx_PeriphCLKConfig+0x804>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000e3a8:	07d8      	lsls	r0, r3, #31
9000e3aa:	d52f      	bpl.n	9000e40c <HAL_RCCEx_PeriphCLKConfig+0x394>
    switch (PeriphClkInit->Usart16ClockSelection)
9000e3ac:	6fe1      	ldr	r1, [r4, #124]	; 0x7c
9000e3ae:	2928      	cmp	r1, #40	; 0x28
9000e3b0:	d82a      	bhi.n	9000e408 <HAL_RCCEx_PeriphCLKConfig+0x390>
9000e3b2:	e8df f011 	tbh	[pc, r1, lsl #1]
9000e3b6:	020a      	.short	0x020a
9000e3b8:	00290029 	.word	0x00290029
9000e3bc:	00290029 	.word	0x00290029
9000e3c0:	00290029 	.word	0x00290029
9000e3c4:	02020029 	.word	0x02020029
9000e3c8:	00290029 	.word	0x00290029
9000e3cc:	00290029 	.word	0x00290029
9000e3d0:	00290029 	.word	0x00290029
9000e3d4:	04070029 	.word	0x04070029
9000e3d8:	00290029 	.word	0x00290029
9000e3dc:	00290029 	.word	0x00290029
9000e3e0:	00290029 	.word	0x00290029
9000e3e4:	020a0029 	.word	0x020a0029
9000e3e8:	00290029 	.word	0x00290029
9000e3ec:	00290029 	.word	0x00290029
9000e3f0:	00290029 	.word	0x00290029
9000e3f4:	020a0029 	.word	0x020a0029
9000e3f8:	00290029 	.word	0x00290029
9000e3fc:	00290029 	.word	0x00290029
9000e400:	00290029 	.word	0x00290029
9000e404:	020a0029 	.word	0x020a0029
9000e408:	2601      	movs	r6, #1
9000e40a:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
9000e40c:	0799      	lsls	r1, r3, #30
9000e40e:	d51d      	bpl.n	9000e44c <HAL_RCCEx_PeriphCLKConfig+0x3d4>
    switch (PeriphClkInit->Usart234578ClockSelection)
9000e410:	6fa1      	ldr	r1, [r4, #120]	; 0x78
9000e412:	2905      	cmp	r1, #5
9000e414:	f200 8421 	bhi.w	9000ec5a <HAL_RCCEx_PeriphCLKConfig+0xbe2>
9000e418:	e8df f011 	tbh	[pc, r1, lsl #1]
9000e41c:	0006000e 	.word	0x0006000e
9000e420:	000e03c8 	.word	0x000e03c8
9000e424:	000e000e 	.word	0x000e000e
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
9000e428:	2101      	movs	r1, #1
9000e42a:	f104 0008 	add.w	r0, r4, #8
9000e42e:	f7ff fd2f 	bl	9000de90 <RCCEx_PLL2_Config>
9000e432:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
9000e434:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000e438:	2d00      	cmp	r5, #0
9000e43a:	f040 82b8 	bne.w	9000e9ae <HAL_RCCEx_PeriphCLKConfig+0x936>
      __HAL_RCC_USART234578_CONFIG(PeriphClkInit->Usart234578ClockSelection);
9000e43e:	4f0b      	ldr	r7, [pc, #44]	; (9000e46c <HAL_RCCEx_PeriphCLKConfig+0x3f4>)
9000e440:	6fa0      	ldr	r0, [r4, #120]	; 0x78
9000e442:	6d79      	ldr	r1, [r7, #84]	; 0x54
9000e444:	f021 0107 	bic.w	r1, r1, #7
9000e448:	4301      	orrs	r1, r0
9000e44a:	6579      	str	r1, [r7, #84]	; 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
9000e44c:	075f      	lsls	r7, r3, #29
9000e44e:	d522      	bpl.n	9000e496 <HAL_RCCEx_PeriphCLKConfig+0x41e>
    switch (PeriphClkInit->Lpuart1ClockSelection)
9000e450:	f8d4 1094 	ldr.w	r1, [r4, #148]	; 0x94
9000e454:	2905      	cmp	r1, #5
9000e456:	f200 8408 	bhi.w	9000ec6a <HAL_RCCEx_PeriphCLKConfig+0xbf2>
9000e45a:	e8df f011 	tbh	[pc, r1, lsl #1]
9000e45e:	0011      	.short	0x0011
9000e460:	039b0009 	.word	0x039b0009
9000e464:	00110011 	.word	0x00110011
9000e468:	0011      	.short	0x0011
9000e46a:	bf00      	nop
9000e46c:	58024400 	.word	0x58024400
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
9000e470:	2101      	movs	r1, #1
9000e472:	f104 0008 	add.w	r0, r4, #8
9000e476:	f7ff fd0b 	bl	9000de90 <RCCEx_PLL2_Config>
9000e47a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
9000e47c:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000e480:	2d00      	cmp	r5, #0
9000e482:	f040 8286 	bne.w	9000e992 <HAL_RCCEx_PeriphCLKConfig+0x91a>
      __HAL_RCC_LPUART1_CONFIG(PeriphClkInit->Lpuart1ClockSelection);
9000e486:	4fae      	ldr	r7, [pc, #696]	; (9000e740 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000e488:	f8d4 0094 	ldr.w	r0, [r4, #148]	; 0x94
9000e48c:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000e48e:	f021 0107 	bic.w	r1, r1, #7
9000e492:	4301      	orrs	r1, r0
9000e494:	65b9      	str	r1, [r7, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
9000e496:	0698      	lsls	r0, r3, #26
9000e498:	d51f      	bpl.n	9000e4da <HAL_RCCEx_PeriphCLKConfig+0x462>
    switch (PeriphClkInit->Lptim1ClockSelection)
9000e49a:	f8d4 1090 	ldr.w	r1, [r4, #144]	; 0x90
9000e49e:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
9000e4a2:	f000 82f7 	beq.w	9000ea94 <HAL_RCCEx_PeriphCLKConfig+0xa1c>
9000e4a6:	f200 810b 	bhi.w	9000e6c0 <HAL_RCCEx_PeriphCLKConfig+0x648>
9000e4aa:	b159      	cbz	r1, 9000e4c4 <HAL_RCCEx_PeriphCLKConfig+0x44c>
9000e4ac:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
9000e4b0:	f040 8110 	bne.w	9000e6d4 <HAL_RCCEx_PeriphCLKConfig+0x65c>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000e4b4:	2100      	movs	r1, #0
9000e4b6:	f104 0008 	add.w	r0, r4, #8
9000e4ba:	f7ff fce9 	bl	9000de90 <RCCEx_PLL2_Config>
9000e4be:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
9000e4c0:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000e4c4:	2d00      	cmp	r5, #0
9000e4c6:	f040 8260 	bne.w	9000e98a <HAL_RCCEx_PeriphCLKConfig+0x912>
      __HAL_RCC_LPTIM1_CONFIG(PeriphClkInit->Lptim1ClockSelection);
9000e4ca:	4f9d      	ldr	r7, [pc, #628]	; (9000e740 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000e4cc:	f8d4 0090 	ldr.w	r0, [r4, #144]	; 0x90
9000e4d0:	6d79      	ldr	r1, [r7, #84]	; 0x54
9000e4d2:	f021 41e0 	bic.w	r1, r1, #1879048192	; 0x70000000
9000e4d6:	4301      	orrs	r1, r0
9000e4d8:	6579      	str	r1, [r7, #84]	; 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
9000e4da:	0659      	lsls	r1, r3, #25
9000e4dc:	d51f      	bpl.n	9000e51e <HAL_RCCEx_PeriphCLKConfig+0x4a6>
    switch (PeriphClkInit->Lptim2ClockSelection)
9000e4de:	f8d4 109c 	ldr.w	r1, [r4, #156]	; 0x9c
9000e4e2:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
9000e4e6:	f000 829b 	beq.w	9000ea20 <HAL_RCCEx_PeriphCLKConfig+0x9a8>
9000e4ea:	f200 80f6 	bhi.w	9000e6da <HAL_RCCEx_PeriphCLKConfig+0x662>
9000e4ee:	b159      	cbz	r1, 9000e508 <HAL_RCCEx_PeriphCLKConfig+0x490>
9000e4f0:	f5b1 6f80 	cmp.w	r1, #1024	; 0x400
9000e4f4:	f040 80fb 	bne.w	9000e6ee <HAL_RCCEx_PeriphCLKConfig+0x676>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000e4f8:	2100      	movs	r1, #0
9000e4fa:	f104 0008 	add.w	r0, r4, #8
9000e4fe:	f7ff fcc7 	bl	9000de90 <RCCEx_PLL2_Config>
9000e502:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
9000e504:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000e508:	2d00      	cmp	r5, #0
9000e50a:	f040 824e 	bne.w	9000e9aa <HAL_RCCEx_PeriphCLKConfig+0x932>
      __HAL_RCC_LPTIM2_CONFIG(PeriphClkInit->Lptim2ClockSelection);
9000e50e:	4f8c      	ldr	r7, [pc, #560]	; (9000e740 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000e510:	f8d4 009c 	ldr.w	r0, [r4, #156]	; 0x9c
9000e514:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000e516:	f421 51e0 	bic.w	r1, r1, #7168	; 0x1c00
9000e51a:	4301      	orrs	r1, r0
9000e51c:	65b9      	str	r1, [r7, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
9000e51e:	061f      	lsls	r7, r3, #24
9000e520:	d51f      	bpl.n	9000e562 <HAL_RCCEx_PeriphCLKConfig+0x4ea>
    switch (PeriphClkInit->Lptim345ClockSelection)
9000e522:	f8d4 10a0 	ldr.w	r1, [r4, #160]	; 0xa0
9000e526:	f5b1 4f80 	cmp.w	r1, #16384	; 0x4000
9000e52a:	f000 8289 	beq.w	9000ea40 <HAL_RCCEx_PeriphCLKConfig+0x9c8>
9000e52e:	f200 80e1 	bhi.w	9000e6f4 <HAL_RCCEx_PeriphCLKConfig+0x67c>
9000e532:	b159      	cbz	r1, 9000e54c <HAL_RCCEx_PeriphCLKConfig+0x4d4>
9000e534:	f5b1 5f00 	cmp.w	r1, #8192	; 0x2000
9000e538:	f040 80e6 	bne.w	9000e708 <HAL_RCCEx_PeriphCLKConfig+0x690>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000e53c:	2100      	movs	r1, #0
9000e53e:	f104 0008 	add.w	r0, r4, #8
9000e542:	f7ff fca5 	bl	9000de90 <RCCEx_PLL2_Config>
9000e546:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
9000e548:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000e54c:	2d00      	cmp	r5, #0
9000e54e:	f040 8228 	bne.w	9000e9a2 <HAL_RCCEx_PeriphCLKConfig+0x92a>
      __HAL_RCC_LPTIM345_CONFIG(PeriphClkInit->Lptim345ClockSelection);
9000e552:	4f7b      	ldr	r7, [pc, #492]	; (9000e740 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000e554:	f8d4 00a0 	ldr.w	r0, [r4, #160]	; 0xa0
9000e558:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000e55a:	f421 4160 	bic.w	r1, r1, #57344	; 0xe000
9000e55e:	4301      	orrs	r1, r0
9000e560:	65b9      	str	r1, [r7, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
9000e562:	0718      	lsls	r0, r3, #28
9000e564:	d50b      	bpl.n	9000e57e <HAL_RCCEx_PeriphCLKConfig+0x506>
    if ((PeriphClkInit->I2c123ClockSelection) == RCC_I2C123CLKSOURCE_PLL3)
9000e566:	f8d4 0084 	ldr.w	r0, [r4, #132]	; 0x84
9000e56a:	f5b0 5f80 	cmp.w	r0, #4096	; 0x1000
9000e56e:	f000 82a9 	beq.w	9000eac4 <HAL_RCCEx_PeriphCLKConfig+0xa4c>
    __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
9000e572:	4f73      	ldr	r7, [pc, #460]	; (9000e740 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000e574:	6d79      	ldr	r1, [r7, #84]	; 0x54
9000e576:	f421 5140 	bic.w	r1, r1, #12288	; 0x3000
9000e57a:	4301      	orrs	r1, r0
9000e57c:	6579      	str	r1, [r7, #84]	; 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
9000e57e:	06d9      	lsls	r1, r3, #27
9000e580:	d50b      	bpl.n	9000e59a <HAL_RCCEx_PeriphCLKConfig+0x522>
    if ((PeriphClkInit->I2c4ClockSelection) == RCC_I2C4CLKSOURCE_PLL3)
9000e582:	f8d4 0098 	ldr.w	r0, [r4, #152]	; 0x98
9000e586:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
9000e58a:	f000 82a8 	beq.w	9000eade <HAL_RCCEx_PeriphCLKConfig+0xa66>
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
9000e58e:	4f6c      	ldr	r7, [pc, #432]	; (9000e740 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000e590:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000e592:	f421 7140 	bic.w	r1, r1, #768	; 0x300
9000e596:	4301      	orrs	r1, r0
9000e598:	65b9      	str	r1, [r7, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
9000e59a:	031f      	lsls	r7, r3, #12
9000e59c:	d50e      	bpl.n	9000e5bc <HAL_RCCEx_PeriphCLKConfig+0x544>
    switch (PeriphClkInit->AdcClockSelection)
9000e59e:	f8d4 10a4 	ldr.w	r1, [r4, #164]	; 0xa4
9000e5a2:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
9000e5a6:	f000 80f4 	beq.w	9000e792 <HAL_RCCEx_PeriphCLKConfig+0x71a>
9000e5aa:	f5b1 3f00 	cmp.w	r1, #131072	; 0x20000
9000e5ae:	f000 80f8 	beq.w	9000e7a2 <HAL_RCCEx_PeriphCLKConfig+0x72a>
9000e5b2:	2900      	cmp	r1, #0
9000e5b4:	f000 821c 	beq.w	9000e9f0 <HAL_RCCEx_PeriphCLKConfig+0x978>
9000e5b8:	2601      	movs	r6, #1
9000e5ba:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
9000e5bc:	0358      	lsls	r0, r3, #13
9000e5be:	d50f      	bpl.n	9000e5e0 <HAL_RCCEx_PeriphCLKConfig+0x568>
    switch (PeriphClkInit->UsbClockSelection)
9000e5c0:	f8d4 1088 	ldr.w	r1, [r4, #136]	; 0x88
9000e5c4:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
9000e5c8:	f000 80cf 	beq.w	9000e76a <HAL_RCCEx_PeriphCLKConfig+0x6f2>
9000e5cc:	f5b1 1f40 	cmp.w	r1, #3145728	; 0x300000
9000e5d0:	f000 80d3 	beq.w	9000e77a <HAL_RCCEx_PeriphCLKConfig+0x702>
9000e5d4:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
9000e5d8:	f000 8202 	beq.w	9000e9e0 <HAL_RCCEx_PeriphCLKConfig+0x968>
9000e5dc:	2601      	movs	r6, #1
9000e5de:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC) == RCC_PERIPHCLK_SDMMC)
9000e5e0:	03d9      	lsls	r1, r3, #15
9000e5e2:	d509      	bpl.n	9000e5f8 <HAL_RCCEx_PeriphCLKConfig+0x580>
    switch (PeriphClkInit->SdmmcClockSelection)
9000e5e4:	6d21      	ldr	r1, [r4, #80]	; 0x50
9000e5e6:	2900      	cmp	r1, #0
9000e5e8:	f000 81f1 	beq.w	9000e9ce <HAL_RCCEx_PeriphCLKConfig+0x956>
9000e5ec:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
9000e5f0:	f000 819d 	beq.w	9000e92e <HAL_RCCEx_PeriphCLKConfig+0x8b6>
9000e5f4:	2601      	movs	r6, #1
9000e5f6:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
9000e5f8:	009f      	lsls	r7, r3, #2
9000e5fa:	f100 80f1 	bmi.w	9000e7e0 <HAL_RCCEx_PeriphCLKConfig+0x768>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == RCC_PERIPHCLK_RNG)
9000e5fe:	0398      	lsls	r0, r3, #14
9000e600:	d50c      	bpl.n	9000e61c <HAL_RCCEx_PeriphCLKConfig+0x5a4>
    switch (PeriphClkInit->RngClockSelection)
9000e602:	f8d4 1080 	ldr.w	r1, [r4, #128]	; 0x80
9000e606:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
9000e60a:	f000 81d8 	beq.w	9000e9be <HAL_RCCEx_PeriphCLKConfig+0x946>
9000e60e:	d97e      	bls.n	9000e70e <HAL_RCCEx_PeriphCLKConfig+0x696>
9000e610:	f421 7080 	bic.w	r0, r1, #256	; 0x100
9000e614:	f5b0 7f00 	cmp.w	r0, #512	; 0x200
9000e618:	d07b      	beq.n	9000e712 <HAL_RCCEx_PeriphCLKConfig+0x69a>
9000e61a:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SWPMI1) == RCC_PERIPHCLK_SWPMI1)
9000e61c:	02d9      	lsls	r1, r3, #11
9000e61e:	d506      	bpl.n	9000e62e <HAL_RCCEx_PeriphCLKConfig+0x5b6>
    __HAL_RCC_SWPMI1_CONFIG(PeriphClkInit->Swpmi1ClockSelection);
9000e620:	4847      	ldr	r0, [pc, #284]	; (9000e740 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000e622:	6f65      	ldr	r5, [r4, #116]	; 0x74
9000e624:	6d01      	ldr	r1, [r0, #80]	; 0x50
9000e626:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
9000e62a:	4329      	orrs	r1, r5
9000e62c:	6501      	str	r1, [r0, #80]	; 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_HRTIM1) == RCC_PERIPHCLK_HRTIM1)
9000e62e:	00df      	lsls	r7, r3, #3
9000e630:	d507      	bpl.n	9000e642 <HAL_RCCEx_PeriphCLKConfig+0x5ca>
    __HAL_RCC_HRTIM1_CONFIG(PeriphClkInit->Hrtim1ClockSelection);
9000e632:	4843      	ldr	r0, [pc, #268]	; (9000e740 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000e634:	f8d4 50b8 	ldr.w	r5, [r4, #184]	; 0xb8
9000e638:	6901      	ldr	r1, [r0, #16]
9000e63a:	f421 4180 	bic.w	r1, r1, #16384	; 0x4000
9000e63e:	4329      	orrs	r1, r5
9000e640:	6101      	str	r1, [r0, #16]
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DFSDM1) == RCC_PERIPHCLK_DFSDM1)
9000e642:	029d      	lsls	r5, r3, #10
9000e644:	d506      	bpl.n	9000e654 <HAL_RCCEx_PeriphCLKConfig+0x5dc>
    __HAL_RCC_DFSDM1_CONFIG(PeriphClkInit->Dfsdm1ClockSelection);
9000e646:	483e      	ldr	r0, [pc, #248]	; (9000e740 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000e648:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
9000e64a:	6d01      	ldr	r1, [r0, #80]	; 0x50
9000e64c:	f021 7180 	bic.w	r1, r1, #16777216	; 0x1000000
9000e650:	4329      	orrs	r1, r5
9000e652:	6501      	str	r1, [r0, #80]	; 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == RCC_PERIPHCLK_TIM)
9000e654:	0058      	lsls	r0, r3, #1
9000e656:	d509      	bpl.n	9000e66c <HAL_RCCEx_PeriphCLKConfig+0x5f4>
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
9000e658:	4939      	ldr	r1, [pc, #228]	; (9000e740 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000e65a:	6908      	ldr	r0, [r1, #16]
9000e65c:	f420 4000 	bic.w	r0, r0, #32768	; 0x8000
9000e660:	6108      	str	r0, [r1, #16]
9000e662:	6908      	ldr	r0, [r1, #16]
9000e664:	f8d4 50bc 	ldr.w	r5, [r4, #188]	; 0xbc
9000e668:	4328      	orrs	r0, r5
9000e66a:	6108      	str	r0, [r1, #16]
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CKPER) == RCC_PERIPHCLK_CKPER)
9000e66c:	2b00      	cmp	r3, #0
9000e66e:	da06      	bge.n	9000e67e <HAL_RCCEx_PeriphCLKConfig+0x606>
    __HAL_RCC_CLKP_CONFIG(PeriphClkInit->CkperClockSelection);
9000e670:	4833      	ldr	r0, [pc, #204]	; (9000e740 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000e672:	6d65      	ldr	r5, [r4, #84]	; 0x54
9000e674:	6cc1      	ldr	r1, [r0, #76]	; 0x4c
9000e676:	f021 5140 	bic.w	r1, r1, #805306368	; 0x30000000
9000e67a:	4329      	orrs	r1, r5
9000e67c:	64c1      	str	r1, [r0, #76]	; 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CEC) == RCC_PERIPHCLK_CEC)
9000e67e:	0219      	lsls	r1, r3, #8
9000e680:	d507      	bpl.n	9000e692 <HAL_RCCEx_PeriphCLKConfig+0x61a>
    __HAL_RCC_CEC_CONFIG(PeriphClkInit->CecClockSelection);
9000e682:	492f      	ldr	r1, [pc, #188]	; (9000e740 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000e684:	f8d4 008c 	ldr.w	r0, [r4, #140]	; 0x8c
9000e688:	6d4b      	ldr	r3, [r1, #84]	; 0x54
9000e68a:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
9000e68e:	4303      	orrs	r3, r0
9000e690:	654b      	str	r3, [r1, #84]	; 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVP) == RCC_PERIPHCLK_PLL2_DIVP)
9000e692:	07d3      	lsls	r3, r2, #31
9000e694:	f100 80b0 	bmi.w	9000e7f8 <HAL_RCCEx_PeriphCLKConfig+0x780>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVQ) == RCC_PERIPHCLK_PLL2_DIVQ)
9000e698:	0797      	lsls	r7, r2, #30
9000e69a:	f100 80ba 	bmi.w	9000e812 <HAL_RCCEx_PeriphCLKConfig+0x79a>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVR) == RCC_PERIPHCLK_PLL2_DIVR)
9000e69e:	0755      	lsls	r5, r2, #29
9000e6a0:	f100 80c4 	bmi.w	9000e82c <HAL_RCCEx_PeriphCLKConfig+0x7b4>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVP) == RCC_PERIPHCLK_PLL3_DIVP)
9000e6a4:	0710      	lsls	r0, r2, #28
9000e6a6:	f100 80ce 	bmi.w	9000e846 <HAL_RCCEx_PeriphCLKConfig+0x7ce>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVQ) == RCC_PERIPHCLK_PLL3_DIVQ)
9000e6aa:	06d1      	lsls	r1, r2, #27
9000e6ac:	f100 80d8 	bmi.w	9000e860 <HAL_RCCEx_PeriphCLKConfig+0x7e8>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
9000e6b0:	0692      	lsls	r2, r2, #26
9000e6b2:	f100 8125 	bmi.w	9000e900 <HAL_RCCEx_PeriphCLKConfig+0x888>
    return HAL_OK;
9000e6b6:	1e30      	subs	r0, r6, #0
9000e6b8:	bf18      	it	ne
9000e6ba:	2001      	movne	r0, #1
}
9000e6bc:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    switch (PeriphClkInit->Lptim1ClockSelection)
9000e6c0:	f021 5080 	bic.w	r0, r1, #268435456	; 0x10000000
9000e6c4:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
9000e6c8:	f43f aefc 	beq.w	9000e4c4 <HAL_RCCEx_PeriphCLKConfig+0x44c>
9000e6cc:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
9000e6d0:	f43f aef8 	beq.w	9000e4c4 <HAL_RCCEx_PeriphCLKConfig+0x44c>
9000e6d4:	2601      	movs	r6, #1
9000e6d6:	4635      	mov	r5, r6
9000e6d8:	e6ff      	b.n	9000e4da <HAL_RCCEx_PeriphCLKConfig+0x462>
    switch (PeriphClkInit->Lptim2ClockSelection)
9000e6da:	f421 6080 	bic.w	r0, r1, #1024	; 0x400
9000e6de:	f5b0 5f80 	cmp.w	r0, #4096	; 0x1000
9000e6e2:	f43f af11 	beq.w	9000e508 <HAL_RCCEx_PeriphCLKConfig+0x490>
9000e6e6:	f5b1 6f40 	cmp.w	r1, #3072	; 0xc00
9000e6ea:	f43f af0d 	beq.w	9000e508 <HAL_RCCEx_PeriphCLKConfig+0x490>
9000e6ee:	2601      	movs	r6, #1
9000e6f0:	4635      	mov	r5, r6
9000e6f2:	e714      	b.n	9000e51e <HAL_RCCEx_PeriphCLKConfig+0x4a6>
    switch (PeriphClkInit->Lptim345ClockSelection)
9000e6f4:	f421 5000 	bic.w	r0, r1, #8192	; 0x2000
9000e6f8:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
9000e6fc:	f43f af26 	beq.w	9000e54c <HAL_RCCEx_PeriphCLKConfig+0x4d4>
9000e700:	f5b1 4fc0 	cmp.w	r1, #24576	; 0x6000
9000e704:	f43f af22 	beq.w	9000e54c <HAL_RCCEx_PeriphCLKConfig+0x4d4>
9000e708:	2601      	movs	r6, #1
9000e70a:	4635      	mov	r5, r6
9000e70c:	e729      	b.n	9000e562 <HAL_RCCEx_PeriphCLKConfig+0x4ea>
    switch (PeriphClkInit->RngClockSelection)
9000e70e:	2900      	cmp	r1, #0
9000e710:	d183      	bne.n	9000e61a <HAL_RCCEx_PeriphCLKConfig+0x5a2>
    if (ret == HAL_OK)
9000e712:	2d00      	cmp	r5, #0
9000e714:	f040 8151 	bne.w	9000e9ba <HAL_RCCEx_PeriphCLKConfig+0x942>
      __HAL_RCC_RNG_CONFIG(PeriphClkInit->RngClockSelection);
9000e718:	4d09      	ldr	r5, [pc, #36]	; (9000e740 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000e71a:	6d68      	ldr	r0, [r5, #84]	; 0x54
9000e71c:	f420 7040 	bic.w	r0, r0, #768	; 0x300
9000e720:	4301      	orrs	r1, r0
9000e722:	6569      	str	r1, [r5, #84]	; 0x54
9000e724:	e77a      	b.n	9000e61c <HAL_RCCEx_PeriphCLKConfig+0x5a4>
    switch (PeriphClkInit->Sai1ClockSelection)
9000e726:	4635      	mov	r5, r6
    if (ret == HAL_OK)
9000e728:	2d00      	cmp	r5, #0
9000e72a:	f040 80fb 	bne.w	9000e924 <HAL_RCCEx_PeriphCLKConfig+0x8ac>
      __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
9000e72e:	4f04      	ldr	r7, [pc, #16]	; (9000e740 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000e730:	6da0      	ldr	r0, [r4, #88]	; 0x58
9000e732:	6d39      	ldr	r1, [r7, #80]	; 0x50
9000e734:	f021 0107 	bic.w	r1, r1, #7
9000e738:	4301      	orrs	r1, r0
9000e73a:	6539      	str	r1, [r7, #80]	; 0x50
9000e73c:	e4d7      	b.n	9000e0ee <HAL_RCCEx_PeriphCLKConfig+0x76>
9000e73e:	bf00      	nop
9000e740:	58024400 	.word	0x58024400
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
9000e744:	2101      	movs	r1, #1
9000e746:	f104 0008 	add.w	r0, r4, #8
9000e74a:	f7ff fba1 	bl	9000de90 <RCCEx_PLL2_Config>
9000e74e:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FMC) == RCC_PERIPHCLK_FMC)
9000e750:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000e754:	2d00      	cmp	r5, #0
9000e756:	f040 811a 	bne.w	9000e98e <HAL_RCCEx_PeriphCLKConfig+0x916>
      __HAL_RCC_FDCAN_CONFIG(PeriphClkInit->FdcanClockSelection);
9000e75a:	4fb7      	ldr	r7, [pc, #732]	; (9000ea38 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000e75c:	6f20      	ldr	r0, [r4, #112]	; 0x70
9000e75e:	6d39      	ldr	r1, [r7, #80]	; 0x50
9000e760:	f021 5140 	bic.w	r1, r1, #805306368	; 0x30000000
9000e764:	4301      	orrs	r1, r0
9000e766:	6539      	str	r1, [r7, #80]	; 0x50
9000e768:	e5b6      	b.n	9000e2d8 <HAL_RCCEx_PeriphCLKConfig+0x260>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000e76a:	2101      	movs	r1, #1
9000e76c:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000e770:	f7ff fc08 	bl	9000df84 <RCCEx_PLL3_Config>
9000e774:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC) == RCC_PERIPHCLK_SDMMC)
9000e776:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000e77a:	2d00      	cmp	r5, #0
9000e77c:	f040 811b 	bne.w	9000e9b6 <HAL_RCCEx_PeriphCLKConfig+0x93e>
      __HAL_RCC_USB_CONFIG(PeriphClkInit->UsbClockSelection);
9000e780:	4fad      	ldr	r7, [pc, #692]	; (9000ea38 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000e782:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
9000e786:	6d79      	ldr	r1, [r7, #84]	; 0x54
9000e788:	f421 1140 	bic.w	r1, r1, #3145728	; 0x300000
9000e78c:	4301      	orrs	r1, r0
9000e78e:	6579      	str	r1, [r7, #84]	; 0x54
9000e790:	e726      	b.n	9000e5e0 <HAL_RCCEx_PeriphCLKConfig+0x568>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000e792:	2102      	movs	r1, #2
9000e794:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000e798:	f7ff fbf4 	bl	9000df84 <RCCEx_PLL3_Config>
9000e79c:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
9000e79e:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000e7a2:	2d00      	cmp	r5, #0
9000e7a4:	f040 8105 	bne.w	9000e9b2 <HAL_RCCEx_PeriphCLKConfig+0x93a>
      __HAL_RCC_ADC_CONFIG(PeriphClkInit->AdcClockSelection);
9000e7a8:	4fa3      	ldr	r7, [pc, #652]	; (9000ea38 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000e7aa:	f8d4 00a4 	ldr.w	r0, [r4, #164]	; 0xa4
9000e7ae:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000e7b0:	f421 3140 	bic.w	r1, r1, #196608	; 0x30000
9000e7b4:	4301      	orrs	r1, r0
9000e7b6:	65b9      	str	r1, [r7, #88]	; 0x58
9000e7b8:	e700      	b.n	9000e5bc <HAL_RCCEx_PeriphCLKConfig+0x544>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
9000e7ba:	2101      	movs	r1, #1
9000e7bc:	f104 0008 	add.w	r0, r4, #8
9000e7c0:	f7ff fb66 	bl	9000de90 <RCCEx_PLL2_Config>
9000e7c4:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
9000e7c6:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000e7ca:	2d00      	cmp	r5, #0
9000e7cc:	f040 80db 	bne.w	9000e986 <HAL_RCCEx_PeriphCLKConfig+0x90e>
      __HAL_RCC_USART16_CONFIG(PeriphClkInit->Usart16ClockSelection);
9000e7d0:	4f99      	ldr	r7, [pc, #612]	; (9000ea38 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000e7d2:	6fe0      	ldr	r0, [r4, #124]	; 0x7c
9000e7d4:	6d79      	ldr	r1, [r7, #84]	; 0x54
9000e7d6:	f021 0138 	bic.w	r1, r1, #56	; 0x38
9000e7da:	4301      	orrs	r1, r0
9000e7dc:	6579      	str	r1, [r7, #84]	; 0x54
9000e7de:	e615      	b.n	9000e40c <HAL_RCCEx_PeriphCLKConfig+0x394>
    if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000e7e0:	2102      	movs	r1, #2
9000e7e2:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000e7e6:	f7ff fbcd 	bl	9000df84 <RCCEx_PLL3_Config>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == RCC_PERIPHCLK_RNG)
9000e7ea:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000e7ee:	2800      	cmp	r0, #0
9000e7f0:	f43f af05 	beq.w	9000e5fe <HAL_RCCEx_PeriphCLKConfig+0x586>
      status = HAL_ERROR;
9000e7f4:	2601      	movs	r6, #1
9000e7f6:	e702      	b.n	9000e5fe <HAL_RCCEx_PeriphCLKConfig+0x586>
    ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000e7f8:	2100      	movs	r1, #0
9000e7fa:	f104 0008 	add.w	r0, r4, #8
9000e7fe:	f7ff fb47 	bl	9000de90 <RCCEx_PLL2_Config>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVQ) == RCC_PERIPHCLK_PLL2_DIVQ)
9000e802:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000e804:	2800      	cmp	r0, #0
9000e806:	f43f af47 	beq.w	9000e698 <HAL_RCCEx_PeriphCLKConfig+0x620>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVQ) == RCC_PERIPHCLK_PLL2_DIVQ)
9000e80a:	0797      	lsls	r7, r2, #30
9000e80c:	4606      	mov	r6, r0
9000e80e:	f57f af46 	bpl.w	9000e69e <HAL_RCCEx_PeriphCLKConfig+0x626>
    ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
9000e812:	2101      	movs	r1, #1
9000e814:	f104 0008 	add.w	r0, r4, #8
9000e818:	f7ff fb3a 	bl	9000de90 <RCCEx_PLL2_Config>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVR) == RCC_PERIPHCLK_PLL2_DIVR)
9000e81c:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000e81e:	2800      	cmp	r0, #0
9000e820:	f43f af3d 	beq.w	9000e69e <HAL_RCCEx_PeriphCLKConfig+0x626>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVR) == RCC_PERIPHCLK_PLL2_DIVR)
9000e824:	0755      	lsls	r5, r2, #29
9000e826:	4606      	mov	r6, r0
9000e828:	f57f af3c 	bpl.w	9000e6a4 <HAL_RCCEx_PeriphCLKConfig+0x62c>
    ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
9000e82c:	2102      	movs	r1, #2
9000e82e:	f104 0008 	add.w	r0, r4, #8
9000e832:	f7ff fb2d 	bl	9000de90 <RCCEx_PLL2_Config>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVP) == RCC_PERIPHCLK_PLL3_DIVP)
9000e836:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000e838:	2800      	cmp	r0, #0
9000e83a:	f43f af33 	beq.w	9000e6a4 <HAL_RCCEx_PeriphCLKConfig+0x62c>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVP) == RCC_PERIPHCLK_PLL3_DIVP)
9000e83e:	4606      	mov	r6, r0
9000e840:	0710      	lsls	r0, r2, #28
9000e842:	f57f af32 	bpl.w	9000e6aa <HAL_RCCEx_PeriphCLKConfig+0x632>
    ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
9000e846:	2100      	movs	r1, #0
9000e848:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000e84c:	f7ff fb9a 	bl	9000df84 <RCCEx_PLL3_Config>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVQ) == RCC_PERIPHCLK_PLL3_DIVQ)
9000e850:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000e852:	2800      	cmp	r0, #0
9000e854:	f43f af29 	beq.w	9000e6aa <HAL_RCCEx_PeriphCLKConfig+0x632>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVQ) == RCC_PERIPHCLK_PLL3_DIVQ)
9000e858:	06d1      	lsls	r1, r2, #27
9000e85a:	4606      	mov	r6, r0
9000e85c:	f57f af28 	bpl.w	9000e6b0 <HAL_RCCEx_PeriphCLKConfig+0x638>
    ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000e860:	f104 0528 	add.w	r5, r4, #40	; 0x28
9000e864:	2101      	movs	r1, #1
9000e866:	4628      	mov	r0, r5
9000e868:	f7ff fb8c 	bl	9000df84 <RCCEx_PLL3_Config>
    if (ret == HAL_OK)
9000e86c:	2800      	cmp	r0, #0
9000e86e:	f000 80c9 	beq.w	9000ea04 <HAL_RCCEx_PeriphCLKConfig+0x98c>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
9000e872:	6863      	ldr	r3, [r4, #4]
9000e874:	069b      	lsls	r3, r3, #26
9000e876:	d54c      	bpl.n	9000e912 <HAL_RCCEx_PeriphCLKConfig+0x89a>
9000e878:	4606      	mov	r6, r0
9000e87a:	e043      	b.n	9000e904 <HAL_RCCEx_PeriphCLKConfig+0x88c>
    SET_BIT(PWR->CR1, PWR_CR1_DBP);
9000e87c:	4f6f      	ldr	r7, [pc, #444]	; (9000ea3c <HAL_RCCEx_PeriphCLKConfig+0x9c4>)
9000e87e:	683b      	ldr	r3, [r7, #0]
9000e880:	f443 7380 	orr.w	r3, r3, #256	; 0x100
9000e884:	603b      	str	r3, [r7, #0]
    tickstart = HAL_GetTick();
9000e886:	f7fb fc0f 	bl	9000a0a8 <HAL_GetTick>
9000e88a:	4680      	mov	r8, r0
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000e88c:	e006      	b.n	9000e89c <HAL_RCCEx_PeriphCLKConfig+0x824>
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
9000e88e:	f7fb fc0b 	bl	9000a0a8 <HAL_GetTick>
9000e892:	eba0 0008 	sub.w	r0, r0, r8
9000e896:	2864      	cmp	r0, #100	; 0x64
9000e898:	f200 81a0 	bhi.w	9000ebdc <HAL_RCCEx_PeriphCLKConfig+0xb64>
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000e89c:	683b      	ldr	r3, [r7, #0]
9000e89e:	05da      	lsls	r2, r3, #23
9000e8a0:	d5f5      	bpl.n	9000e88e <HAL_RCCEx_PeriphCLKConfig+0x816>
    if (ret == HAL_OK)
9000e8a2:	2d00      	cmp	r5, #0
9000e8a4:	f040 81d4 	bne.w	9000ec50 <HAL_RCCEx_PeriphCLKConfig+0xbd8>
      if ((RCC->BDCR & RCC_BDCR_RTCSEL) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL))
9000e8a8:	4a63      	ldr	r2, [pc, #396]	; (9000ea38 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000e8aa:	f8d4 30b4 	ldr.w	r3, [r4, #180]	; 0xb4
9000e8ae:	6f11      	ldr	r1, [r2, #112]	; 0x70
9000e8b0:	4059      	eors	r1, r3
9000e8b2:	f411 7f40 	tst.w	r1, #768	; 0x300
9000e8b6:	d00b      	beq.n	9000e8d0 <HAL_RCCEx_PeriphCLKConfig+0x858>
        tmpreg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
9000e8b8:	6f11      	ldr	r1, [r2, #112]	; 0x70
        __HAL_RCC_BACKUPRESET_FORCE();
9000e8ba:	6f10      	ldr	r0, [r2, #112]	; 0x70
        tmpreg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
9000e8bc:	f421 7140 	bic.w	r1, r1, #768	; 0x300
        __HAL_RCC_BACKUPRESET_FORCE();
9000e8c0:	f440 3080 	orr.w	r0, r0, #65536	; 0x10000
9000e8c4:	6710      	str	r0, [r2, #112]	; 0x70
        __HAL_RCC_BACKUPRESET_RELEASE();
9000e8c6:	6f10      	ldr	r0, [r2, #112]	; 0x70
9000e8c8:	f420 3080 	bic.w	r0, r0, #65536	; 0x10000
9000e8cc:	6710      	str	r0, [r2, #112]	; 0x70
        RCC->BDCR = tmpreg;
9000e8ce:	6711      	str	r1, [r2, #112]	; 0x70
      if (PeriphClkInit->RTCClockSelection == RCC_RTCCLKSOURCE_LSE)
9000e8d0:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
9000e8d4:	f000 819e 	beq.w	9000ec14 <HAL_RCCEx_PeriphCLKConfig+0xb9c>
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
9000e8d8:	f403 7240 	and.w	r2, r3, #768	; 0x300
9000e8dc:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
9000e8e0:	f000 81ac 	beq.w	9000ec3c <HAL_RCCEx_PeriphCLKConfig+0xbc4>
9000e8e4:	4954      	ldr	r1, [pc, #336]	; (9000ea38 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000e8e6:	690a      	ldr	r2, [r1, #16]
9000e8e8:	f422 527c 	bic.w	r2, r2, #16128	; 0x3f00
9000e8ec:	610a      	str	r2, [r1, #16]
9000e8ee:	4852      	ldr	r0, [pc, #328]	; (9000ea38 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000e8f0:	f3c3 010b 	ubfx	r1, r3, #0, #12
9000e8f4:	6f07      	ldr	r7, [r0, #112]	; 0x70
9000e8f6:	4339      	orrs	r1, r7
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000e8f8:	e9d4 3200 	ldrd	r3, r2, [r4]
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
9000e8fc:	6701      	str	r1, [r0, #112]	; 0x70
9000e8fe:	e553      	b.n	9000e3a8 <HAL_RCCEx_PeriphCLKConfig+0x330>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000e900:	f104 0528 	add.w	r5, r4, #40	; 0x28
    ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000e904:	2102      	movs	r1, #2
9000e906:	4628      	mov	r0, r5
9000e908:	f7ff fb3c 	bl	9000df84 <RCCEx_PLL3_Config>
    if (ret == HAL_OK)
9000e90c:	2800      	cmp	r0, #0
9000e90e:	f43f aed2 	beq.w	9000e6b6 <HAL_RCCEx_PeriphCLKConfig+0x63e>
  return HAL_ERROR;
9000e912:	2001      	movs	r0, #1
}
9000e914:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
9000e918:	462e      	mov	r6, r5
9000e91a:	e450      	b.n	9000e1be <HAL_RCCEx_PeriphCLKConfig+0x146>
9000e91c:	462e      	mov	r6, r5
9000e91e:	e406      	b.n	9000e12e <HAL_RCCEx_PeriphCLKConfig+0xb6>
9000e920:	462e      	mov	r6, r5
9000e922:	e489      	b.n	9000e238 <HAL_RCCEx_PeriphCLKConfig+0x1c0>
9000e924:	462e      	mov	r6, r5
9000e926:	f7ff bbe2 	b.w	9000e0ee <HAL_RCCEx_PeriphCLKConfig+0x76>
9000e92a:	462e      	mov	r6, r5
9000e92c:	e423      	b.n	9000e176 <HAL_RCCEx_PeriphCLKConfig+0xfe>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
9000e92e:	2102      	movs	r1, #2
9000e930:	f104 0008 	add.w	r0, r4, #8
9000e934:	f7ff faac 	bl	9000de90 <RCCEx_PLL2_Config>
9000e938:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
9000e93a:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000e93e:	2d00      	cmp	r5, #0
9000e940:	d14c      	bne.n	9000e9dc <HAL_RCCEx_PeriphCLKConfig+0x964>
      __HAL_RCC_SDMMC_CONFIG(PeriphClkInit->SdmmcClockSelection);
9000e942:	4f3d      	ldr	r7, [pc, #244]	; (9000ea38 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000e944:	6d20      	ldr	r0, [r4, #80]	; 0x50
9000e946:	6cf9      	ldr	r1, [r7, #76]	; 0x4c
9000e948:	f421 3180 	bic.w	r1, r1, #65536	; 0x10000
9000e94c:	4301      	orrs	r1, r0
9000e94e:	64f9      	str	r1, [r7, #76]	; 0x4c
9000e950:	e652      	b.n	9000e5f8 <HAL_RCCEx_PeriphCLKConfig+0x580>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000e952:	4839      	ldr	r0, [pc, #228]	; (9000ea38 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000e954:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000e956:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000e95a:	62c1      	str	r1, [r0, #44]	; 0x2c
        break;
9000e95c:	e462      	b.n	9000e224 <HAL_RCCEx_PeriphCLKConfig+0x1ac>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000e95e:	4836      	ldr	r0, [pc, #216]	; (9000ea38 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000e960:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000e962:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000e966:	62c1      	str	r1, [r0, #44]	; 0x2c
        break;
9000e968:	e41e      	b.n	9000e1a8 <HAL_RCCEx_PeriphCLKConfig+0x130>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000e96a:	4833      	ldr	r0, [pc, #204]	; (9000ea38 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000e96c:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000e96e:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000e972:	62c1      	str	r1, [r0, #44]	; 0x2c
        break;
9000e974:	f7ff bbd1 	b.w	9000e11a <HAL_RCCEx_PeriphCLKConfig+0xa2>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000e978:	482f      	ldr	r0, [pc, #188]	; (9000ea38 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000e97a:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000e97c:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000e980:	62c1      	str	r1, [r0, #44]	; 0x2c
        break;
9000e982:	f7ff bbed 	b.w	9000e160 <HAL_RCCEx_PeriphCLKConfig+0xe8>
9000e986:	462e      	mov	r6, r5
9000e988:	e540      	b.n	9000e40c <HAL_RCCEx_PeriphCLKConfig+0x394>
9000e98a:	462e      	mov	r6, r5
9000e98c:	e5a5      	b.n	9000e4da <HAL_RCCEx_PeriphCLKConfig+0x462>
9000e98e:	462e      	mov	r6, r5
9000e990:	e4a2      	b.n	9000e2d8 <HAL_RCCEx_PeriphCLKConfig+0x260>
9000e992:	462e      	mov	r6, r5
9000e994:	e57f      	b.n	9000e496 <HAL_RCCEx_PeriphCLKConfig+0x41e>
9000e996:	462e      	mov	r6, r5
9000e998:	e42c      	b.n	9000e1f4 <HAL_RCCEx_PeriphCLKConfig+0x17c>
9000e99a:	462e      	mov	r6, r5
9000e99c:	e501      	b.n	9000e3a2 <HAL_RCCEx_PeriphCLKConfig+0x32a>
9000e99e:	462e      	mov	r6, r5
9000e9a0:	e46a      	b.n	9000e278 <HAL_RCCEx_PeriphCLKConfig+0x200>
9000e9a2:	462e      	mov	r6, r5
9000e9a4:	e5dd      	b.n	9000e562 <HAL_RCCEx_PeriphCLKConfig+0x4ea>
9000e9a6:	462e      	mov	r6, r5
9000e9a8:	e486      	b.n	9000e2b8 <HAL_RCCEx_PeriphCLKConfig+0x240>
9000e9aa:	462e      	mov	r6, r5
9000e9ac:	e5b7      	b.n	9000e51e <HAL_RCCEx_PeriphCLKConfig+0x4a6>
9000e9ae:	462e      	mov	r6, r5
9000e9b0:	e54c      	b.n	9000e44c <HAL_RCCEx_PeriphCLKConfig+0x3d4>
9000e9b2:	462e      	mov	r6, r5
9000e9b4:	e602      	b.n	9000e5bc <HAL_RCCEx_PeriphCLKConfig+0x544>
9000e9b6:	462e      	mov	r6, r5
9000e9b8:	e612      	b.n	9000e5e0 <HAL_RCCEx_PeriphCLKConfig+0x568>
9000e9ba:	462e      	mov	r6, r5
9000e9bc:	e62e      	b.n	9000e61c <HAL_RCCEx_PeriphCLKConfig+0x5a4>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000e9be:	4f1e      	ldr	r7, [pc, #120]	; (9000ea38 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000e9c0:	6af8      	ldr	r0, [r7, #44]	; 0x2c
9000e9c2:	f440 3000 	orr.w	r0, r0, #131072	; 0x20000
9000e9c6:	62f8      	str	r0, [r7, #44]	; 0x2c
    if (ret == HAL_OK)
9000e9c8:	2d00      	cmp	r5, #0
9000e9ca:	d1f6      	bne.n	9000e9ba <HAL_RCCEx_PeriphCLKConfig+0x942>
9000e9cc:	e6a4      	b.n	9000e718 <HAL_RCCEx_PeriphCLKConfig+0x6a0>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000e9ce:	481a      	ldr	r0, [pc, #104]	; (9000ea38 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000e9d0:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000e9d2:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000e9d6:	62c1      	str	r1, [r0, #44]	; 0x2c
    if (ret == HAL_OK)
9000e9d8:	2d00      	cmp	r5, #0
9000e9da:	d0b2      	beq.n	9000e942 <HAL_RCCEx_PeriphCLKConfig+0x8ca>
9000e9dc:	462e      	mov	r6, r5
9000e9de:	e60b      	b.n	9000e5f8 <HAL_RCCEx_PeriphCLKConfig+0x580>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000e9e0:	4815      	ldr	r0, [pc, #84]	; (9000ea38 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000e9e2:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000e9e4:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000e9e8:	62c1      	str	r1, [r0, #44]	; 0x2c
    if (ret == HAL_OK)
9000e9ea:	2d00      	cmp	r5, #0
9000e9ec:	d1e3      	bne.n	9000e9b6 <HAL_RCCEx_PeriphCLKConfig+0x93e>
9000e9ee:	e6c7      	b.n	9000e780 <HAL_RCCEx_PeriphCLKConfig+0x708>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000e9f0:	f104 0008 	add.w	r0, r4, #8
9000e9f4:	f7ff fa4c 	bl	9000de90 <RCCEx_PLL2_Config>
9000e9f8:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
9000e9fa:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000e9fe:	2d00      	cmp	r5, #0
9000ea00:	d1d7      	bne.n	9000e9b2 <HAL_RCCEx_PeriphCLKConfig+0x93a>
9000ea02:	e6d1      	b.n	9000e7a8 <HAL_RCCEx_PeriphCLKConfig+0x730>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
9000ea04:	6862      	ldr	r2, [r4, #4]
9000ea06:	e653      	b.n	9000e6b0 <HAL_RCCEx_PeriphCLKConfig+0x638>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
9000ea08:	2102      	movs	r1, #2
9000ea0a:	f104 0008 	add.w	r0, r4, #8
9000ea0e:	f7ff fa3f 	bl	9000de90 <RCCEx_PLL2_Config>
9000ea12:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI123) == RCC_PERIPHCLK_SPI123)
9000ea14:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000ea18:	2d00      	cmp	r5, #0
9000ea1a:	d1bc      	bne.n	9000e996 <HAL_RCCEx_PeriphCLKConfig+0x91e>
9000ea1c:	f7ff bbe3 	b.w	9000e1e6 <HAL_RCCEx_PeriphCLKConfig+0x16e>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000ea20:	2102      	movs	r1, #2
9000ea22:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000ea26:	f7ff faad 	bl	9000df84 <RCCEx_PLL3_Config>
9000ea2a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
9000ea2c:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000ea30:	2d00      	cmp	r5, #0
9000ea32:	d1ba      	bne.n	9000e9aa <HAL_RCCEx_PeriphCLKConfig+0x932>
9000ea34:	e56b      	b.n	9000e50e <HAL_RCCEx_PeriphCLKConfig+0x496>
9000ea36:	bf00      	nop
9000ea38:	58024400 	.word	0x58024400
9000ea3c:	58024800 	.word	0x58024800
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000ea40:	2102      	movs	r1, #2
9000ea42:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000ea46:	f7ff fa9d 	bl	9000df84 <RCCEx_PLL3_Config>
9000ea4a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
9000ea4c:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000ea50:	2d00      	cmp	r5, #0
9000ea52:	d1a6      	bne.n	9000e9a2 <HAL_RCCEx_PeriphCLKConfig+0x92a>
9000ea54:	e57d      	b.n	9000e552 <HAL_RCCEx_PeriphCLKConfig+0x4da>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000ea56:	4886      	ldr	r0, [pc, #536]	; (9000ec70 <HAL_RCCEx_PeriphCLKConfig+0xbf8>)
9000ea58:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000ea5a:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000ea5e:	62c1      	str	r1, [r0, #44]	; 0x2c
    if (ret == HAL_OK)
9000ea60:	2d00      	cmp	r5, #0
9000ea62:	d194      	bne.n	9000e98e <HAL_RCCEx_PeriphCLKConfig+0x916>
9000ea64:	e679      	b.n	9000e75a <HAL_RCCEx_PeriphCLKConfig+0x6e2>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000ea66:	2101      	movs	r1, #1
9000ea68:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000ea6c:	f7ff fa8a 	bl	9000df84 <RCCEx_PLL3_Config>
9000ea70:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
9000ea72:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000ea76:	2d00      	cmp	r5, #0
9000ea78:	d191      	bne.n	9000e99e <HAL_RCCEx_PeriphCLKConfig+0x926>
9000ea7a:	f7ff bbf6 	b.w	9000e26a <HAL_RCCEx_PeriphCLKConfig+0x1f2>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000ea7e:	2101      	movs	r1, #1
9000ea80:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000ea84:	f7ff fa7e 	bl	9000df84 <RCCEx_PLL3_Config>
9000ea88:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
9000ea8a:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000ea8e:	2d00      	cmp	r5, #0
9000ea90:	d189      	bne.n	9000e9a6 <HAL_RCCEx_PeriphCLKConfig+0x92e>
9000ea92:	e409      	b.n	9000e2a8 <HAL_RCCEx_PeriphCLKConfig+0x230>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000ea94:	2102      	movs	r1, #2
9000ea96:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000ea9a:	f7ff fa73 	bl	9000df84 <RCCEx_PLL3_Config>
9000ea9e:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
9000eaa0:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000eaa4:	2d00      	cmp	r5, #0
9000eaa6:	f47f af70 	bne.w	9000e98a <HAL_RCCEx_PeriphCLKConfig+0x912>
9000eaaa:	e50e      	b.n	9000e4ca <HAL_RCCEx_PeriphCLKConfig+0x452>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
9000eaac:	2102      	movs	r1, #2
9000eaae:	f104 0008 	add.w	r0, r4, #8
9000eab2:	f7ff f9ed 	bl	9000de90 <RCCEx_PLL2_Config>
9000eab6:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
9000eab8:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000eabc:	2d00      	cmp	r5, #0
9000eabe:	f47f af6c 	bne.w	9000e99a <HAL_RCCEx_PeriphCLKConfig+0x922>
9000eac2:	e467      	b.n	9000e394 <HAL_RCCEx_PeriphCLKConfig+0x31c>
      if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000eac4:	2102      	movs	r1, #2
9000eac6:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000eaca:	f7ff fa5b 	bl	9000df84 <RCCEx_PLL3_Config>
9000eace:	2800      	cmp	r0, #0
9000ead0:	f040 8094 	bne.w	9000ebfc <HAL_RCCEx_PeriphCLKConfig+0xb84>
    __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
9000ead4:	f8d4 0084 	ldr.w	r0, [r4, #132]	; 0x84
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
9000ead8:	e9d4 3200 	ldrd	r3, r2, [r4]
9000eadc:	e549      	b.n	9000e572 <HAL_RCCEx_PeriphCLKConfig+0x4fa>
      if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000eade:	2102      	movs	r1, #2
9000eae0:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000eae4:	f7ff fa4e 	bl	9000df84 <RCCEx_PLL3_Config>
9000eae8:	2800      	cmp	r0, #0
9000eaea:	f040 808d 	bne.w	9000ec08 <HAL_RCCEx_PeriphCLKConfig+0xb90>
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
9000eaee:	f8d4 0098 	ldr.w	r0, [r4, #152]	; 0x98
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
9000eaf2:	e9d4 3200 	ldrd	r3, r2, [r4]
9000eaf6:	e54a      	b.n	9000e58e <HAL_RCCEx_PeriphCLKConfig+0x516>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
9000eaf8:	e9d4 3200 	ldrd	r3, r2, [r4]
9000eafc:	f7ff bae9 	b.w	9000e0d2 <HAL_RCCEx_PeriphCLKConfig+0x5a>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
9000eb00:	2100      	movs	r1, #0
9000eb02:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000eb06:	f7ff fa3d 	bl	9000df84 <RCCEx_PLL3_Config>
9000eb0a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
9000eb0c:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000eb10:	f7ff bb4a 	b.w	9000e1a8 <HAL_RCCEx_PeriphCLKConfig+0x130>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
9000eb14:	2100      	movs	r1, #0
9000eb16:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000eb1a:	f7ff fa33 	bl	9000df84 <RCCEx_PLL3_Config>
9000eb1e:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
9000eb20:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000eb24:	e600      	b.n	9000e728 <HAL_RCCEx_PeriphCLKConfig+0x6b0>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
9000eb26:	2100      	movs	r1, #0
9000eb28:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000eb2c:	f7ff fa2a 	bl	9000df84 <RCCEx_PLL3_Config>
9000eb30:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
9000eb32:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000eb36:	f7ff baf0 	b.w	9000e11a <HAL_RCCEx_PeriphCLKConfig+0xa2>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000eb3a:	2102      	movs	r1, #2
9000eb3c:	3028      	adds	r0, #40	; 0x28
9000eb3e:	f7ff fa21 	bl	9000df84 <RCCEx_PLL3_Config>
9000eb42:	4606      	mov	r6, r0
    if (ret == HAL_OK)
9000eb44:	2e00      	cmp	r6, #0
9000eb46:	f43f aab5 	beq.w	9000e0b4 <HAL_RCCEx_PeriphCLKConfig+0x3c>
9000eb4a:	e7d5      	b.n	9000eaf8 <HAL_RCCEx_PeriphCLKConfig+0xa80>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000eb4c:	4848      	ldr	r0, [pc, #288]	; (9000ec70 <HAL_RCCEx_PeriphCLKConfig+0xbf8>)
        break;
9000eb4e:	4635      	mov	r5, r6
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000eb50:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000eb52:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000eb56:	62c1      	str	r1, [r0, #44]	; 0x2c
        break;
9000eb58:	e5e6      	b.n	9000e728 <HAL_RCCEx_PeriphCLKConfig+0x6b0>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000eb5a:	2100      	movs	r1, #0
9000eb5c:	f104 0008 	add.w	r0, r4, #8
9000eb60:	f7ff f996 	bl	9000de90 <RCCEx_PLL2_Config>
9000eb64:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
9000eb66:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000eb6a:	e5dd      	b.n	9000e728 <HAL_RCCEx_PeriphCLKConfig+0x6b0>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
9000eb6c:	2100      	movs	r1, #0
9000eb6e:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000eb72:	f7ff fa07 	bl	9000df84 <RCCEx_PLL3_Config>
9000eb76:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
9000eb78:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000eb7c:	f7ff bb52 	b.w	9000e224 <HAL_RCCEx_PeriphCLKConfig+0x1ac>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
9000eb80:	2100      	movs	r1, #0
9000eb82:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000eb86:	f7ff f9fd 	bl	9000df84 <RCCEx_PLL3_Config>
9000eb8a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
9000eb8c:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000eb90:	f7ff bae6 	b.w	9000e160 <HAL_RCCEx_PeriphCLKConfig+0xe8>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000eb94:	2101      	movs	r1, #1
9000eb96:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000eb9a:	f7ff f9f3 	bl	9000df84 <RCCEx_PLL3_Config>
9000eb9e:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
9000eba0:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000eba4:	2d00      	cmp	r5, #0
9000eba6:	f47f aef4 	bne.w	9000e992 <HAL_RCCEx_PeriphCLKConfig+0x91a>
9000ebaa:	e46c      	b.n	9000e486 <HAL_RCCEx_PeriphCLKConfig+0x40e>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000ebac:	2101      	movs	r1, #1
9000ebae:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000ebb2:	f7ff f9e7 	bl	9000df84 <RCCEx_PLL3_Config>
9000ebb6:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
9000ebb8:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000ebbc:	2d00      	cmp	r5, #0
9000ebbe:	f47f aef6 	bne.w	9000e9ae <HAL_RCCEx_PeriphCLKConfig+0x936>
9000ebc2:	e43c      	b.n	9000e43e <HAL_RCCEx_PeriphCLKConfig+0x3c6>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000ebc4:	2101      	movs	r1, #1
9000ebc6:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000ebca:	f7ff f9db 	bl	9000df84 <RCCEx_PLL3_Config>
9000ebce:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
9000ebd0:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000ebd4:	2d00      	cmp	r5, #0
9000ebd6:	f47f aed6 	bne.w	9000e986 <HAL_RCCEx_PeriphCLKConfig+0x90e>
9000ebda:	e5f9      	b.n	9000e7d0 <HAL_RCCEx_PeriphCLKConfig+0x758>
        status = ret;
9000ebdc:	2603      	movs	r6, #3
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000ebde:	e9d4 3200 	ldrd	r3, r2, [r4]
9000ebe2:	4635      	mov	r5, r6
9000ebe4:	f7ff bbe0 	b.w	9000e3a8 <HAL_RCCEx_PeriphCLKConfig+0x330>
    switch (PeriphClkInit->SpdifrxClockSelection)
9000ebe8:	2601      	movs	r6, #1
9000ebea:	f7ff ba72 	b.w	9000e0d2 <HAL_RCCEx_PeriphCLKConfig+0x5a>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000ebee:	4d20      	ldr	r5, [pc, #128]	; (9000ec70 <HAL_RCCEx_PeriphCLKConfig+0xbf8>)
9000ebf0:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
9000ebf2:	f440 3000 	orr.w	r0, r0, #131072	; 0x20000
9000ebf6:	62e8      	str	r0, [r5, #44]	; 0x2c
    if (ret == HAL_OK)
9000ebf8:	f7ff ba64 	b.w	9000e0c4 <HAL_RCCEx_PeriphCLKConfig+0x4c>
    __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
9000ebfc:	f8d4 0084 	ldr.w	r0, [r4, #132]	; 0x84
        status = HAL_ERROR;
9000ec00:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
9000ec02:	e9d4 3200 	ldrd	r3, r2, [r4]
9000ec06:	e4b4      	b.n	9000e572 <HAL_RCCEx_PeriphCLKConfig+0x4fa>
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
9000ec08:	f8d4 0098 	ldr.w	r0, [r4, #152]	; 0x98
        status = HAL_ERROR;
9000ec0c:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
9000ec0e:	e9d4 3200 	ldrd	r3, r2, [r4]
9000ec12:	e4bc      	b.n	9000e58e <HAL_RCCEx_PeriphCLKConfig+0x516>
        tickstart = HAL_GetTick();
9000ec14:	f7fb fa48 	bl	9000a0a8 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000ec18:	f8df 8054 	ldr.w	r8, [pc, #84]	; 9000ec70 <HAL_RCCEx_PeriphCLKConfig+0xbf8>
        tickstart = HAL_GetTick();
9000ec1c:	4607      	mov	r7, r0
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000ec1e:	f241 3988 	movw	r9, #5000	; 0x1388
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000ec22:	e004      	b.n	9000ec2e <HAL_RCCEx_PeriphCLKConfig+0xbb6>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000ec24:	f7fb fa40 	bl	9000a0a8 <HAL_GetTick>
9000ec28:	1bc0      	subs	r0, r0, r7
9000ec2a:	4548      	cmp	r0, r9
9000ec2c:	d8d6      	bhi.n	9000ebdc <HAL_RCCEx_PeriphCLKConfig+0xb64>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000ec2e:	f8d8 3070 	ldr.w	r3, [r8, #112]	; 0x70
9000ec32:	079b      	lsls	r3, r3, #30
9000ec34:	d5f6      	bpl.n	9000ec24 <HAL_RCCEx_PeriphCLKConfig+0xbac>
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
9000ec36:	f8d4 30b4 	ldr.w	r3, [r4, #180]	; 0xb4
9000ec3a:	e64d      	b.n	9000e8d8 <HAL_RCCEx_PeriphCLKConfig+0x860>
9000ec3c:	480c      	ldr	r0, [pc, #48]	; (9000ec70 <HAL_RCCEx_PeriphCLKConfig+0xbf8>)
9000ec3e:	4a0d      	ldr	r2, [pc, #52]	; (9000ec74 <HAL_RCCEx_PeriphCLKConfig+0xbfc>)
9000ec40:	6901      	ldr	r1, [r0, #16]
9000ec42:	ea02 1213 	and.w	r2, r2, r3, lsr #4
9000ec46:	f421 517c 	bic.w	r1, r1, #16128	; 0x3f00
9000ec4a:	430a      	orrs	r2, r1
9000ec4c:	6102      	str	r2, [r0, #16]
9000ec4e:	e64e      	b.n	9000e8ee <HAL_RCCEx_PeriphCLKConfig+0x876>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000ec50:	e9d4 3200 	ldrd	r3, r2, [r4]
9000ec54:	462e      	mov	r6, r5
9000ec56:	f7ff bba7 	b.w	9000e3a8 <HAL_RCCEx_PeriphCLKConfig+0x330>
    switch (PeriphClkInit->Usart234578ClockSelection)
9000ec5a:	2601      	movs	r6, #1
9000ec5c:	4635      	mov	r5, r6
9000ec5e:	f7ff bbf5 	b.w	9000e44c <HAL_RCCEx_PeriphCLKConfig+0x3d4>
    switch (PeriphClkInit->FmcClockSelection)
9000ec62:	2601      	movs	r6, #1
9000ec64:	4635      	mov	r5, r6
9000ec66:	f7ff bb9c 	b.w	9000e3a2 <HAL_RCCEx_PeriphCLKConfig+0x32a>
    switch (PeriphClkInit->Lpuart1ClockSelection)
9000ec6a:	2601      	movs	r6, #1
9000ec6c:	4635      	mov	r5, r6
9000ec6e:	e412      	b.n	9000e496 <HAL_RCCEx_PeriphCLKConfig+0x41e>
9000ec70:	58024400 	.word	0x58024400
9000ec74:	00ffffcf 	.word	0x00ffffcf

9000ec78 <HAL_RCCEx_GetD3PCLK1Freq>:
{
9000ec78:	b508      	push	{r3, lr}
  return (HAL_RCC_GetHCLKFreq() >> (D1CorePrescTable[(RCC->D3CFGR & RCC_D3CFGR_D3PPRE) >> RCC_D3CFGR_D3PPRE_Pos] & 0x1FU));
9000ec7a:	f7ff f80d 	bl	9000dc98 <HAL_RCC_GetHCLKFreq>
9000ec7e:	4b05      	ldr	r3, [pc, #20]	; (9000ec94 <HAL_RCCEx_GetD3PCLK1Freq+0x1c>)
9000ec80:	4a05      	ldr	r2, [pc, #20]	; (9000ec98 <HAL_RCCEx_GetD3PCLK1Freq+0x20>)
9000ec82:	6a1b      	ldr	r3, [r3, #32]
9000ec84:	f3c3 1302 	ubfx	r3, r3, #4, #3
9000ec88:	5cd3      	ldrb	r3, [r2, r3]
9000ec8a:	f003 031f 	and.w	r3, r3, #31
}
9000ec8e:	40d8      	lsrs	r0, r3
9000ec90:	bd08      	pop	{r3, pc}
9000ec92:	bf00      	nop
9000ec94:	58024400 	.word	0x58024400
9000ec98:	9002dcf8 	.word	0x9002dcf8

9000ec9c <HAL_RCCEx_GetPLL2ClockFreq>:
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000ec9c:	4a4f      	ldr	r2, [pc, #316]	; (9000eddc <HAL_RCCEx_GetPLL2ClockFreq+0x140>)
{
9000ec9e:	b470      	push	{r4, r5, r6}
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000eca0:	6a91      	ldr	r1, [r2, #40]	; 0x28
  pll2m = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM2) >> 12);
9000eca2:	6a95      	ldr	r5, [r2, #40]	; 0x28
  pll2fracen = (RCC->PLLCFGR & RCC_PLLCFGR_PLL2FRACEN) >> RCC_PLLCFGR_PLL2FRACEN_Pos;
9000eca4:	6ad6      	ldr	r6, [r2, #44]	; 0x2c
  if (pll2m != 0U)
9000eca6:	f415 3f7c 	tst.w	r5, #258048	; 0x3f000
  pll2m = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM2) >> 12);
9000ecaa:	f3c5 3305 	ubfx	r3, r5, #12, #6
  fracn2 = (float_t)(uint32_t)(pll2fracen * ((RCC->PLL2FRACR & RCC_PLL2FRACR_FRACN2) >> 3));
9000ecae:	6bd4      	ldr	r4, [r2, #60]	; 0x3c
  if (pll2m != 0U)
9000ecb0:	d05d      	beq.n	9000ed6e <HAL_RCCEx_GetPLL2ClockFreq+0xd2>
  fracn2 = (float_t)(uint32_t)(pll2fracen * ((RCC->PLL2FRACR & RCC_PLL2FRACR_FRACN2) >> 3));
9000ecb2:	f3c4 04cc 	ubfx	r4, r4, #3, #13
  pll2fracen = (RCC->PLLCFGR & RCC_PLLCFGR_PLL2FRACEN) >> RCC_PLLCFGR_PLL2FRACEN_Pos;
9000ecb6:	f3c6 1600 	ubfx	r6, r6, #4, #1
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000ecba:	f001 0103 	and.w	r1, r1, #3
  fracn2 = (float_t)(uint32_t)(pll2fracen * ((RCC->PLL2FRACR & RCC_PLL2FRACR_FRACN2) >> 3));
9000ecbe:	fb06 f404 	mul.w	r4, r6, r4
    switch (pllsource)
9000ecc2:	2901      	cmp	r1, #1
  fracn2 = (float_t)(uint32_t)(pll2fracen * ((RCC->PLL2FRACR & RCC_PLL2FRACR_FRACN2) >> 3));
9000ecc4:	ee07 4a90 	vmov	s15, r4
9000ecc8:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
    switch (pllsource)
9000eccc:	d003      	beq.n	9000ecd6 <HAL_RCCEx_GetPLL2ClockFreq+0x3a>
9000ecce:	2902      	cmp	r1, #2
9000ecd0:	d076      	beq.n	9000edc0 <HAL_RCCEx_GetPLL2ClockFreq+0x124>
9000ecd2:	2900      	cmp	r1, #0
9000ecd4:	d050      	beq.n	9000ed78 <HAL_RCCEx_GetPLL2ClockFreq+0xdc>
        pll2vco = ((float_t)CSI_VALUE / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
9000ecd6:	ee07 3a90 	vmov	s15, r3
9000ecda:	ed9f 5a41 	vldr	s10, [pc, #260]	; 9000ede0 <HAL_RCCEx_GetPLL2ClockFreq+0x144>
9000ecde:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000ece2:	6b93      	ldr	r3, [r2, #56]	; 0x38
9000ece4:	eec5 6a27 	vdiv.f32	s13, s10, s15
9000ece8:	eddf 5a3e 	vldr	s11, [pc, #248]	; 9000ede4 <HAL_RCCEx_GetPLL2ClockFreq+0x148>
9000ecec:	f3c3 0308 	ubfx	r3, r3, #0, #9
9000ecf0:	ee07 3a90 	vmov	s15, r3
9000ecf4:	eeb7 6a00 	vmov.f32	s12, #112	; 0x3f800000  1.0
9000ecf8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000ecfc:	eee7 7a25 	vfma.f32	s15, s14, s11
9000ed00:	ee77 7a86 	vadd.f32	s15, s15, s12
9000ed04:	ee66 6aa7 	vmul.f32	s13, s13, s15
    PLL2_Clocks->PLL2_P_Frequency = (uint32_t)(float_t)(pll2vco / ((float_t)(uint32_t)((RCC->PLL2DIVR & RCC_PLL2DIVR_P2) >> 9)  + (float_t)1)) ;
9000ed08:	4a34      	ldr	r2, [pc, #208]	; (9000eddc <HAL_RCCEx_GetPLL2ClockFreq+0x140>)
9000ed0a:	eeb7 6a00 	vmov.f32	s12, #112	; 0x3f800000  1.0
9000ed0e:	6b93      	ldr	r3, [r2, #56]	; 0x38
9000ed10:	f3c3 2346 	ubfx	r3, r3, #9, #7
9000ed14:	ee07 3a90 	vmov	s15, r3
9000ed18:	eef8 7ae7 	vcvt.f32.s32	s15, s15
}
9000ed1c:	bc70      	pop	{r4, r5, r6}
    PLL2_Clocks->PLL2_P_Frequency = (uint32_t)(float_t)(pll2vco / ((float_t)(uint32_t)((RCC->PLL2DIVR & RCC_PLL2DIVR_P2) >> 9)  + (float_t)1)) ;
9000ed1e:	ee77 7a86 	vadd.f32	s15, s15, s12
9000ed22:	ee86 7aa7 	vdiv.f32	s14, s13, s15
9000ed26:	eebc 7ac7 	vcvt.u32.f32	s14, s14
9000ed2a:	ed80 7a00 	vstr	s14, [r0]
    PLL2_Clocks->PLL2_Q_Frequency = (uint32_t)(float_t)(pll2vco / ((float_t)(uint32_t)((RCC->PLL2DIVR & RCC_PLL2DIVR_Q2) >> 16) + (float_t)1)) ;
9000ed2e:	6b93      	ldr	r3, [r2, #56]	; 0x38
9000ed30:	f3c3 4306 	ubfx	r3, r3, #16, #7
9000ed34:	ee07 3a90 	vmov	s15, r3
9000ed38:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000ed3c:	ee77 7a86 	vadd.f32	s15, s15, s12
9000ed40:	ee86 7aa7 	vdiv.f32	s14, s13, s15
9000ed44:	eebc 7ac7 	vcvt.u32.f32	s14, s14
9000ed48:	ed80 7a01 	vstr	s14, [r0, #4]
    PLL2_Clocks->PLL2_R_Frequency = (uint32_t)(float_t)(pll2vco / ((float_t)(uint32_t)((RCC->PLL2DIVR & RCC_PLL2DIVR_R2) >> 24) + (float_t)1)) ;
9000ed4c:	6b93      	ldr	r3, [r2, #56]	; 0x38
9000ed4e:	f3c3 6306 	ubfx	r3, r3, #24, #7
9000ed52:	ee07 3a10 	vmov	s14, r3
9000ed56:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9000ed5a:	ee37 7a06 	vadd.f32	s14, s14, s12
9000ed5e:	eec6 7a87 	vdiv.f32	s15, s13, s14
9000ed62:	eefc 7ae7 	vcvt.u32.f32	s15, s15
9000ed66:	ee17 3a90 	vmov	r3, s15
9000ed6a:	6083      	str	r3, [r0, #8]
}
9000ed6c:	4770      	bx	lr
9000ed6e:	bc70      	pop	{r4, r5, r6}
    PLL2_Clocks->PLL2_Q_Frequency = 0U;
9000ed70:	e9c0 3300 	strd	r3, r3, [r0]
    PLL2_Clocks->PLL2_R_Frequency = (uint32_t)(float_t)(pll2vco / ((float_t)(uint32_t)((RCC->PLL2DIVR & RCC_PLL2DIVR_R2) >> 24) + (float_t)1)) ;
9000ed74:	6083      	str	r3, [r0, #8]
}
9000ed76:	4770      	bx	lr
        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000ed78:	6811      	ldr	r1, [r2, #0]
9000ed7a:	0689      	lsls	r1, r1, #26
9000ed7c:	d527      	bpl.n	9000edce <HAL_RCCEx_GetPLL2ClockFreq+0x132>
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000ed7e:	6814      	ldr	r4, [r2, #0]
          pll2vco = ((float_t)hsivalue / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
9000ed80:	ee07 3a90 	vmov	s15, r3
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000ed84:	4918      	ldr	r1, [pc, #96]	; (9000ede8 <HAL_RCCEx_GetPLL2ClockFreq+0x14c>)
          pll2vco = ((float_t)hsivalue / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
9000ed86:	eef7 5a00 	vmov.f32	s11, #112	; 0x3f800000  1.0
9000ed8a:	6b93      	ldr	r3, [r2, #56]	; 0x38
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000ed8c:	f3c4 02c1 	ubfx	r2, r4, #3, #2
          pll2vco = ((float_t)hsivalue / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
9000ed90:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000ed94:	ed9f 5a13 	vldr	s10, [pc, #76]	; 9000ede4 <HAL_RCCEx_GetPLL2ClockFreq+0x148>
9000ed98:	f3c3 0308 	ubfx	r3, r3, #0, #9
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000ed9c:	40d1      	lsrs	r1, r2
          pll2vco = ((float_t)hsivalue / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
9000ed9e:	ee06 3a90 	vmov	s13, r3
9000eda2:	ee06 1a10 	vmov	s12, r1
9000eda6:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9000edaa:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
9000edae:	eee7 6a05 	vfma.f32	s13, s14, s10
9000edb2:	ee86 7a27 	vdiv.f32	s14, s12, s15
9000edb6:	ee76 6aa5 	vadd.f32	s13, s13, s11
9000edba:	ee66 6a87 	vmul.f32	s13, s13, s14
9000edbe:	e7a3      	b.n	9000ed08 <HAL_RCCEx_GetPLL2ClockFreq+0x6c>
        pll2vco = ((float_t)HSE_VALUE / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
9000edc0:	ee07 3a90 	vmov	s15, r3
9000edc4:	ed9f 5a09 	vldr	s10, [pc, #36]	; 9000edec <HAL_RCCEx_GetPLL2ClockFreq+0x150>
9000edc8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000edcc:	e789      	b.n	9000ece2 <HAL_RCCEx_GetPLL2ClockFreq+0x46>
          pll2vco = ((float_t)HSI_VALUE / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
9000edce:	ee07 3a90 	vmov	s15, r3
9000edd2:	ed9f 5a07 	vldr	s10, [pc, #28]	; 9000edf0 <HAL_RCCEx_GetPLL2ClockFreq+0x154>
9000edd6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000edda:	e782      	b.n	9000ece2 <HAL_RCCEx_GetPLL2ClockFreq+0x46>
9000eddc:	58024400 	.word	0x58024400
9000ede0:	4a742400 	.word	0x4a742400
9000ede4:	39000000 	.word	0x39000000
9000ede8:	03d09000 	.word	0x03d09000
9000edec:	4bbebc20 	.word	0x4bbebc20
9000edf0:	4c742400 	.word	0x4c742400

9000edf4 <HAL_RCCEx_GetPLL3ClockFreq>:
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000edf4:	4a4f      	ldr	r2, [pc, #316]	; (9000ef34 <HAL_RCCEx_GetPLL3ClockFreq+0x140>)
{
9000edf6:	b470      	push	{r4, r5, r6}
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000edf8:	6a91      	ldr	r1, [r2, #40]	; 0x28
  pll3m = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM3) >> 20)  ;
9000edfa:	6a95      	ldr	r5, [r2, #40]	; 0x28
  pll3fracen = (RCC->PLLCFGR & RCC_PLLCFGR_PLL3FRACEN) >> RCC_PLLCFGR_PLL3FRACEN_Pos;
9000edfc:	6ad6      	ldr	r6, [r2, #44]	; 0x2c
  if (pll3m != 0U)
9000edfe:	f015 7f7c 	tst.w	r5, #66060288	; 0x3f00000
  pll3m = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM3) >> 20)  ;
9000ee02:	f3c5 5305 	ubfx	r3, r5, #20, #6
  fracn3 = (float_t)(uint32_t)(pll3fracen * ((RCC->PLL3FRACR & RCC_PLL3FRACR_FRACN3) >> 3));
9000ee06:	6c54      	ldr	r4, [r2, #68]	; 0x44
  if (pll3m != 0U)
9000ee08:	d05d      	beq.n	9000eec6 <HAL_RCCEx_GetPLL3ClockFreq+0xd2>
  fracn3 = (float_t)(uint32_t)(pll3fracen * ((RCC->PLL3FRACR & RCC_PLL3FRACR_FRACN3) >> 3));
9000ee0a:	f3c4 04cc 	ubfx	r4, r4, #3, #13
  pll3fracen = (RCC->PLLCFGR & RCC_PLLCFGR_PLL3FRACEN) >> RCC_PLLCFGR_PLL3FRACEN_Pos;
9000ee0e:	f3c6 2600 	ubfx	r6, r6, #8, #1
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000ee12:	f001 0103 	and.w	r1, r1, #3
  fracn3 = (float_t)(uint32_t)(pll3fracen * ((RCC->PLL3FRACR & RCC_PLL3FRACR_FRACN3) >> 3));
9000ee16:	fb06 f404 	mul.w	r4, r6, r4
    switch (pllsource)
9000ee1a:	2901      	cmp	r1, #1
  fracn3 = (float_t)(uint32_t)(pll3fracen * ((RCC->PLL3FRACR & RCC_PLL3FRACR_FRACN3) >> 3));
9000ee1c:	ee07 4a90 	vmov	s15, r4
9000ee20:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
    switch (pllsource)
9000ee24:	d003      	beq.n	9000ee2e <HAL_RCCEx_GetPLL3ClockFreq+0x3a>
9000ee26:	2902      	cmp	r1, #2
9000ee28:	d076      	beq.n	9000ef18 <HAL_RCCEx_GetPLL3ClockFreq+0x124>
9000ee2a:	2900      	cmp	r1, #0
9000ee2c:	d050      	beq.n	9000eed0 <HAL_RCCEx_GetPLL3ClockFreq+0xdc>
        pll3vco = ((float_t)CSI_VALUE / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
9000ee2e:	ee07 3a90 	vmov	s15, r3
9000ee32:	ed9f 5a41 	vldr	s10, [pc, #260]	; 9000ef38 <HAL_RCCEx_GetPLL3ClockFreq+0x144>
9000ee36:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000ee3a:	6c13      	ldr	r3, [r2, #64]	; 0x40
9000ee3c:	eec5 6a27 	vdiv.f32	s13, s10, s15
9000ee40:	eddf 5a3e 	vldr	s11, [pc, #248]	; 9000ef3c <HAL_RCCEx_GetPLL3ClockFreq+0x148>
9000ee44:	f3c3 0308 	ubfx	r3, r3, #0, #9
9000ee48:	ee07 3a90 	vmov	s15, r3
9000ee4c:	eeb7 6a00 	vmov.f32	s12, #112	; 0x3f800000  1.0
9000ee50:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000ee54:	eee7 7a25 	vfma.f32	s15, s14, s11
9000ee58:	ee77 7a86 	vadd.f32	s15, s15, s12
9000ee5c:	ee66 6aa7 	vmul.f32	s13, s13, s15
    PLL3_Clocks->PLL3_P_Frequency = (uint32_t)(float_t)(pll3vco / ((float_t)(uint32_t)((RCC->PLL3DIVR & RCC_PLL3DIVR_P3) >> 9)  + (float_t)1)) ;
9000ee60:	4a34      	ldr	r2, [pc, #208]	; (9000ef34 <HAL_RCCEx_GetPLL3ClockFreq+0x140>)
9000ee62:	eeb7 6a00 	vmov.f32	s12, #112	; 0x3f800000  1.0
9000ee66:	6c13      	ldr	r3, [r2, #64]	; 0x40
9000ee68:	f3c3 2346 	ubfx	r3, r3, #9, #7
9000ee6c:	ee07 3a90 	vmov	s15, r3
9000ee70:	eef8 7ae7 	vcvt.f32.s32	s15, s15
}
9000ee74:	bc70      	pop	{r4, r5, r6}
    PLL3_Clocks->PLL3_P_Frequency = (uint32_t)(float_t)(pll3vco / ((float_t)(uint32_t)((RCC->PLL3DIVR & RCC_PLL3DIVR_P3) >> 9)  + (float_t)1)) ;
9000ee76:	ee77 7a86 	vadd.f32	s15, s15, s12
9000ee7a:	ee86 7aa7 	vdiv.f32	s14, s13, s15
9000ee7e:	eebc 7ac7 	vcvt.u32.f32	s14, s14
9000ee82:	ed80 7a00 	vstr	s14, [r0]
    PLL3_Clocks->PLL3_Q_Frequency = (uint32_t)(float_t)(pll3vco / ((float_t)(uint32_t)((RCC->PLL3DIVR & RCC_PLL3DIVR_Q3) >> 16) + (float_t)1)) ;
9000ee86:	6c13      	ldr	r3, [r2, #64]	; 0x40
9000ee88:	f3c3 4306 	ubfx	r3, r3, #16, #7
9000ee8c:	ee07 3a90 	vmov	s15, r3
9000ee90:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000ee94:	ee77 7a86 	vadd.f32	s15, s15, s12
9000ee98:	ee86 7aa7 	vdiv.f32	s14, s13, s15
9000ee9c:	eebc 7ac7 	vcvt.u32.f32	s14, s14
9000eea0:	ed80 7a01 	vstr	s14, [r0, #4]
    PLL3_Clocks->PLL3_R_Frequency = (uint32_t)(float_t)(pll3vco / ((float_t)(uint32_t)((RCC->PLL3DIVR & RCC_PLL3DIVR_R3) >> 24) + (float_t)1)) ;
9000eea4:	6c13      	ldr	r3, [r2, #64]	; 0x40
9000eea6:	f3c3 6306 	ubfx	r3, r3, #24, #7
9000eeaa:	ee07 3a10 	vmov	s14, r3
9000eeae:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9000eeb2:	ee37 7a06 	vadd.f32	s14, s14, s12
9000eeb6:	eec6 7a87 	vdiv.f32	s15, s13, s14
9000eeba:	eefc 7ae7 	vcvt.u32.f32	s15, s15
9000eebe:	ee17 3a90 	vmov	r3, s15
9000eec2:	6083      	str	r3, [r0, #8]
}
9000eec4:	4770      	bx	lr
9000eec6:	bc70      	pop	{r4, r5, r6}
    PLL3_Clocks->PLL3_Q_Frequency = 0U;
9000eec8:	e9c0 3300 	strd	r3, r3, [r0]
    PLL3_Clocks->PLL3_R_Frequency = (uint32_t)(float_t)(pll3vco / ((float_t)(uint32_t)((RCC->PLL3DIVR & RCC_PLL3DIVR_R3) >> 24) + (float_t)1)) ;
9000eecc:	6083      	str	r3, [r0, #8]
}
9000eece:	4770      	bx	lr
        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000eed0:	6811      	ldr	r1, [r2, #0]
9000eed2:	0689      	lsls	r1, r1, #26
9000eed4:	d527      	bpl.n	9000ef26 <HAL_RCCEx_GetPLL3ClockFreq+0x132>
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000eed6:	6814      	ldr	r4, [r2, #0]
          pll3vco = ((float_t)hsivalue / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
9000eed8:	ee07 3a90 	vmov	s15, r3
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000eedc:	4918      	ldr	r1, [pc, #96]	; (9000ef40 <HAL_RCCEx_GetPLL3ClockFreq+0x14c>)
          pll3vco = ((float_t)hsivalue / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
9000eede:	eef7 5a00 	vmov.f32	s11, #112	; 0x3f800000  1.0
9000eee2:	6c13      	ldr	r3, [r2, #64]	; 0x40
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000eee4:	f3c4 02c1 	ubfx	r2, r4, #3, #2
          pll3vco = ((float_t)hsivalue / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
9000eee8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000eeec:	ed9f 5a13 	vldr	s10, [pc, #76]	; 9000ef3c <HAL_RCCEx_GetPLL3ClockFreq+0x148>
9000eef0:	f3c3 0308 	ubfx	r3, r3, #0, #9
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000eef4:	40d1      	lsrs	r1, r2
          pll3vco = ((float_t)hsivalue / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
9000eef6:	ee06 3a90 	vmov	s13, r3
9000eefa:	ee06 1a10 	vmov	s12, r1
9000eefe:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9000ef02:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
9000ef06:	eee7 6a05 	vfma.f32	s13, s14, s10
9000ef0a:	ee86 7a27 	vdiv.f32	s14, s12, s15
9000ef0e:	ee76 6aa5 	vadd.f32	s13, s13, s11
9000ef12:	ee66 6a87 	vmul.f32	s13, s13, s14
9000ef16:	e7a3      	b.n	9000ee60 <HAL_RCCEx_GetPLL3ClockFreq+0x6c>
        pll3vco = ((float_t)HSE_VALUE / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
9000ef18:	ee07 3a90 	vmov	s15, r3
9000ef1c:	ed9f 5a09 	vldr	s10, [pc, #36]	; 9000ef44 <HAL_RCCEx_GetPLL3ClockFreq+0x150>
9000ef20:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000ef24:	e789      	b.n	9000ee3a <HAL_RCCEx_GetPLL3ClockFreq+0x46>
          pll3vco = ((float_t)HSI_VALUE / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
9000ef26:	ee07 3a90 	vmov	s15, r3
9000ef2a:	ed9f 5a07 	vldr	s10, [pc, #28]	; 9000ef48 <HAL_RCCEx_GetPLL3ClockFreq+0x154>
9000ef2e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000ef32:	e782      	b.n	9000ee3a <HAL_RCCEx_GetPLL3ClockFreq+0x46>
9000ef34:	58024400 	.word	0x58024400
9000ef38:	4a742400 	.word	0x4a742400
9000ef3c:	39000000 	.word	0x39000000
9000ef40:	03d09000 	.word	0x03d09000
9000ef44:	4bbebc20 	.word	0x4bbebc20
9000ef48:	4c742400 	.word	0x4c742400

9000ef4c <HAL_SDRAM_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
9000ef4c:	b318      	cbz	r0, 9000ef96 <HAL_SDRAM_Init+0x4a>
{
9000ef4e:	b538      	push	{r3, r4, r5, lr}
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
9000ef50:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
9000ef54:	4604      	mov	r4, r0
9000ef56:	460d      	mov	r5, r1
9000ef58:	f003 02ff 	and.w	r2, r3, #255	; 0xff
9000ef5c:	b1b3      	cbz	r3, 9000ef8c <HAL_SDRAM_Init+0x40>

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
9000ef5e:	4621      	mov	r1, r4
  hsdram->State = HAL_SDRAM_STATE_BUSY;
9000ef60:	2302      	movs	r3, #2
9000ef62:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
9000ef66:	f851 0b04 	ldr.w	r0, [r1], #4
9000ef6a:	f001 faf1 	bl	90010550 <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
9000ef6e:	6862      	ldr	r2, [r4, #4]
9000ef70:	4629      	mov	r1, r5
9000ef72:	6820      	ldr	r0, [r4, #0]
9000ef74:	f001 fb2a 	bl	900105cc <FMC_SDRAM_Timing_Init>

  /* Enable FMC Peripheral */
  __FMC_ENABLE();
9000ef78:	4a08      	ldr	r2, [pc, #32]	; (9000ef9c <HAL_SDRAM_Init+0x50>)
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
9000ef7a:	2101      	movs	r1, #1

  return HAL_OK;
9000ef7c:	2000      	movs	r0, #0
  __FMC_ENABLE();
9000ef7e:	6813      	ldr	r3, [r2, #0]
9000ef80:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
9000ef84:	6013      	str	r3, [r2, #0]
  hsdram->State = HAL_SDRAM_STATE_READY;
9000ef86:	f884 102c 	strb.w	r1, [r4, #44]	; 0x2c
}
9000ef8a:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->Lock = HAL_UNLOCKED;
9000ef8c:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d
    HAL_SDRAM_MspInit(hsdram);
9000ef90:	f7f6 fcb0 	bl	900058f4 <HAL_SDRAM_MspInit>
9000ef94:	e7e3      	b.n	9000ef5e <HAL_SDRAM_Init+0x12>
    return HAL_ERROR;
9000ef96:	2001      	movs	r0, #1
}
9000ef98:	4770      	bx	lr
9000ef9a:	bf00      	nop
9000ef9c:	52004000 	.word	0x52004000

9000efa0 <HAL_SDRAM_DeInit>:
  * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
  *                the configuration information for SDRAM module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_DeInit(SDRAM_HandleTypeDef *hsdram)
{
9000efa0:	b510      	push	{r4, lr}
9000efa2:	4604      	mov	r4, r0

  /* DeInit the low level hardware */
  hsdram->MspDeInitCallback(hsdram);
#else
  /* Initialize the low level hardware (MSP) */
  HAL_SDRAM_MspDeInit(hsdram);
9000efa4:	f7f6 fd22 	bl	900059ec <HAL_SDRAM_MspDeInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */

  /* Configure the SDRAM registers with their reset values */
  (void)FMC_SDRAM_DeInit(hsdram->Instance, hsdram->Init.SDBank);
9000efa8:	e9d4 0100 	ldrd	r0, r1, [r4]
9000efac:	f001 fb5c 	bl	90010668 <FMC_SDRAM_DeInit>

  /* Reset the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_RESET;
9000efb0:	2000      	movs	r0, #0
9000efb2:	f884 002c 	strb.w	r0, [r4, #44]	; 0x2c

  /* Release Lock */
  __HAL_UNLOCK(hsdram);
9000efb6:	f884 002d 	strb.w	r0, [r4, #45]	; 0x2d

  return HAL_OK;
}
9000efba:	bd10      	pop	{r4, pc}

9000efbc <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
9000efbc:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
9000efbe:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
{
9000efc2:	4604      	mov	r4, r0

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
9000efc4:	2b02      	cmp	r3, #2
  HAL_SDRAM_StateTypeDef state = hsdram->State;
9000efc6:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
9000efc8:	d004      	beq.n	9000efd4 <HAL_SDRAM_SendCommand+0x18>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
9000efca:	f000 06fb 	and.w	r6, r0, #251	; 0xfb
9000efce:	2e01      	cmp	r6, #1
9000efd0:	d001      	beq.n	9000efd6 <HAL_SDRAM_SendCommand+0x1a>
      hsdram->State = HAL_SDRAM_STATE_READY;
    }
  }
  else
  {
    return HAL_ERROR;
9000efd2:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
9000efd4:	bd70      	pop	{r4, r5, r6, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000efd6:	2302      	movs	r3, #2
9000efd8:	460d      	mov	r5, r1
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
9000efda:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000efdc:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
9000efe0:	f001 fb56 	bl	90010690 <FMC_SDRAM_SendCommand>
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
9000efe4:	682b      	ldr	r3, [r5, #0]
9000efe6:	2b02      	cmp	r3, #2
9000efe8:	d003      	beq.n	9000eff2 <HAL_SDRAM_SendCommand+0x36>
  return HAL_OK;
9000efea:	2000      	movs	r0, #0
      hsdram->State = HAL_SDRAM_STATE_READY;
9000efec:	f884 602c 	strb.w	r6, [r4, #44]	; 0x2c
}
9000eff0:	bd70      	pop	{r4, r5, r6, pc}
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
9000eff2:	2305      	movs	r3, #5
  return HAL_OK;
9000eff4:	2000      	movs	r0, #0
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
9000eff6:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
}
9000effa:	bd70      	pop	{r4, r5, r6, pc}

9000effc <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
9000effc:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
9000effe:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
{
9000f002:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
9000f004:	2b02      	cmp	r3, #2
9000f006:	b2d8      	uxtb	r0, r3
9000f008:	d005      	beq.n	9000f016 <HAL_SDRAM_ProgramRefreshRate+0x1a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
9000f00a:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
9000f00e:	2b01      	cmp	r3, #1
9000f010:	b2dd      	uxtb	r5, r3
9000f012:	d001      	beq.n	9000f018 <HAL_SDRAM_ProgramRefreshRate+0x1c>
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
  }
  else
  {
    return HAL_ERROR;
9000f014:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
9000f016:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000f018:	2302      	movs	r3, #2
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
9000f01a:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000f01c:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
9000f020:	f001 fb4e 	bl	900106c0 <FMC_SDRAM_ProgramRefreshRate>
  return HAL_OK;
9000f024:	2000      	movs	r0, #0
    hsdram->State = HAL_SDRAM_STATE_READY;
9000f026:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
}
9000f02a:	bd38      	pop	{r3, r4, r5, pc}

9000f02c <SPI_CloseTransfer>:
  * @retval HAL_ERROR: if any error detected
  *         HAL_OK: if nothing detected
  */
static void SPI_CloseTransfer(SPI_HandleTypeDef *hspi)
{
  uint32_t itflag = hspi->Instance->SR;
9000f02c:	6803      	ldr	r3, [r0, #0]

  /* Disable SPI peripheral */
  __HAL_SPI_DISABLE(hspi);

  /* Disable ITs */
  __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_EOT | SPI_IT_TXP | SPI_IT_RXP | SPI_IT_DXP | SPI_IT_UDR | SPI_IT_OVR | \
9000f02e:	492c      	ldr	r1, [pc, #176]	; (9000f0e0 <SPI_CloseTransfer+0xb4>)
  uint32_t itflag = hspi->Instance->SR;
9000f030:	695a      	ldr	r2, [r3, #20]
{
9000f032:	b410      	push	{r4}
  __HAL_SPI_CLEAR_EOTFLAG(hspi);
9000f034:	699c      	ldr	r4, [r3, #24]
9000f036:	f044 0408 	orr.w	r4, r4, #8
9000f03a:	619c      	str	r4, [r3, #24]
  __HAL_SPI_CLEAR_TXTFFLAG(hspi);
9000f03c:	699c      	ldr	r4, [r3, #24]
9000f03e:	f044 0410 	orr.w	r4, r4, #16
9000f042:	619c      	str	r4, [r3, #24]
  __HAL_SPI_DISABLE(hspi);
9000f044:	681c      	ldr	r4, [r3, #0]
9000f046:	f024 0401 	bic.w	r4, r4, #1
9000f04a:	601c      	str	r4, [r3, #0]
  __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_EOT | SPI_IT_TXP | SPI_IT_RXP | SPI_IT_DXP | SPI_IT_UDR | SPI_IT_OVR | \
9000f04c:	691c      	ldr	r4, [r3, #16]
9000f04e:	4021      	ands	r1, r4
9000f050:	6119      	str	r1, [r3, #16]
                              SPI_IT_FRE | SPI_IT_MODF));

  /* Disable Tx DMA Request */
  CLEAR_BIT(hspi->Instance->CFG1, SPI_CFG1_TXDMAEN | SPI_CFG1_RXDMAEN);
9000f052:	6899      	ldr	r1, [r3, #8]
9000f054:	f421 4140 	bic.w	r1, r1, #49152	; 0xc000
9000f058:	6099      	str	r1, [r3, #8]

  /* Report UnderRun error for non RX Only communication */
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
9000f05a:	f890 1081 	ldrb.w	r1, [r0, #129]	; 0x81
9000f05e:	2904      	cmp	r1, #4
9000f060:	d001      	beq.n	9000f066 <SPI_CloseTransfer+0x3a>
  {
    if ((itflag & SPI_FLAG_UDR) != 0UL)
9000f062:	0691      	lsls	r1, r2, #26
9000f064:	d430      	bmi.n	9000f0c8 <SPI_CloseTransfer+0x9c>
      __HAL_SPI_CLEAR_UDRFLAG(hspi);
    }
  }

  /* Report OverRun error for non TX Only communication */
  if (hspi->State != HAL_SPI_STATE_BUSY_TX)
9000f066:	f890 1081 	ldrb.w	r1, [r0, #129]	; 0x81
9000f06a:	2903      	cmp	r1, #3
9000f06c:	d001      	beq.n	9000f072 <SPI_CloseTransfer+0x46>
  {
    if ((itflag & SPI_FLAG_OVR) != 0UL)
9000f06e:	0654      	lsls	r4, r2, #25
9000f070:	d41f      	bmi.n	9000f0b2 <SPI_CloseTransfer+0x86>
    }
#endif /* USE_SPI_CRC */
  }

  /* SPI Mode Fault error interrupt occurred -------------------------------*/
  if ((itflag & SPI_FLAG_MODF) != 0UL)
9000f072:	0591      	lsls	r1, r2, #22
9000f074:	d509      	bpl.n	9000f08a <SPI_CloseTransfer+0x5e>
  {
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_MODF);
9000f076:	f8d0 1084 	ldr.w	r1, [r0, #132]	; 0x84
9000f07a:	f041 0101 	orr.w	r1, r1, #1
9000f07e:	f8c0 1084 	str.w	r1, [r0, #132]	; 0x84
    __HAL_SPI_CLEAR_MODFFLAG(hspi);
9000f082:	6999      	ldr	r1, [r3, #24]
9000f084:	f441 7100 	orr.w	r1, r1, #512	; 0x200
9000f088:	6199      	str	r1, [r3, #24]
  }

  /* SPI Frame error interrupt occurred ------------------------------------*/
  if ((itflag & SPI_FLAG_FRE) != 0UL)
9000f08a:	05d2      	lsls	r2, r2, #23
9000f08c:	d509      	bpl.n	9000f0a2 <SPI_CloseTransfer+0x76>
  {
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FRE);
9000f08e:	f8d0 2084 	ldr.w	r2, [r0, #132]	; 0x84
9000f092:	f042 0208 	orr.w	r2, r2, #8
9000f096:	f8c0 2084 	str.w	r2, [r0, #132]	; 0x84
    __HAL_SPI_CLEAR_FREFLAG(hspi);
9000f09a:	699a      	ldr	r2, [r3, #24]
9000f09c:	f442 7280 	orr.w	r2, r2, #256	; 0x100
9000f0a0:	619a      	str	r2, [r3, #24]
  }

  hspi->TxXferCount = (uint16_t)0UL;
9000f0a2:	2300      	movs	r3, #0
  hspi->RxXferCount = (uint16_t)0UL;
}
9000f0a4:	f85d 4b04 	ldr.w	r4, [sp], #4
  hspi->TxXferCount = (uint16_t)0UL;
9000f0a8:	f8a0 3062 	strh.w	r3, [r0, #98]	; 0x62
  hspi->RxXferCount = (uint16_t)0UL;
9000f0ac:	f8a0 306a 	strh.w	r3, [r0, #106]	; 0x6a
}
9000f0b0:	4770      	bx	lr
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_OVR);
9000f0b2:	f8d0 1084 	ldr.w	r1, [r0, #132]	; 0x84
9000f0b6:	f041 0104 	orr.w	r1, r1, #4
9000f0ba:	f8c0 1084 	str.w	r1, [r0, #132]	; 0x84
      __HAL_SPI_CLEAR_OVRFLAG(hspi);
9000f0be:	6999      	ldr	r1, [r3, #24]
9000f0c0:	f041 0140 	orr.w	r1, r1, #64	; 0x40
9000f0c4:	6199      	str	r1, [r3, #24]
9000f0c6:	e7d4      	b.n	9000f072 <SPI_CloseTransfer+0x46>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_UDR);
9000f0c8:	f8d0 1084 	ldr.w	r1, [r0, #132]	; 0x84
9000f0cc:	f041 0180 	orr.w	r1, r1, #128	; 0x80
9000f0d0:	f8c0 1084 	str.w	r1, [r0, #132]	; 0x84
      __HAL_SPI_CLEAR_UDRFLAG(hspi);
9000f0d4:	6999      	ldr	r1, [r3, #24]
9000f0d6:	f041 0120 	orr.w	r1, r1, #32
9000f0da:	6199      	str	r1, [r3, #24]
9000f0dc:	e7c3      	b.n	9000f066 <SPI_CloseTransfer+0x3a>
9000f0de:	bf00      	nop
9000f0e0:	fffffc90 	.word	0xfffffc90

9000f0e4 <HAL_SPI_Init>:
  if (hspi == NULL)
9000f0e4:	2800      	cmp	r0, #0
9000f0e6:	f000 80c9 	beq.w	9000f27c <HAL_SPI_Init+0x198>
  if ((!IS_SPI_HIGHEND_INSTANCE(hspi->Instance)) && (hspi->Init.DataSize > SPI_DATASIZE_16BIT))
9000f0ea:	4a66      	ldr	r2, [pc, #408]	; (9000f284 <HAL_SPI_Init+0x1a0>)
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
9000f0ec:	2100      	movs	r1, #0
{
9000f0ee:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  if ((!IS_SPI_HIGHEND_INSTANCE(hspi->Instance)) && (hspi->Init.DataSize > SPI_DATASIZE_16BIT))
9000f0f2:	6803      	ldr	r3, [r0, #0]
9000f0f4:	4604      	mov	r4, r0
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
9000f0f6:	6281      	str	r1, [r0, #40]	; 0x28
  if ((!IS_SPI_HIGHEND_INSTANCE(hspi->Instance)) && (hspi->Init.DataSize > SPI_DATASIZE_16BIT))
9000f0f8:	4293      	cmp	r3, r2
9000f0fa:	d017      	beq.n	9000f12c <HAL_SPI_Init+0x48>
9000f0fc:	f5a2 4278 	sub.w	r2, r2, #63488	; 0xf800
9000f100:	4293      	cmp	r3, r2
9000f102:	d013      	beq.n	9000f12c <HAL_SPI_Init+0x48>
9000f104:	f502 6280 	add.w	r2, r2, #1024	; 0x400
9000f108:	4293      	cmp	r3, r2
9000f10a:	68c2      	ldr	r2, [r0, #12]
9000f10c:	f000 80ae 	beq.w	9000f26c <HAL_SPI_Init+0x188>
9000f110:	2a0f      	cmp	r2, #15
9000f112:	d808      	bhi.n	9000f126 <HAL_SPI_Init+0x42>
  *               the configuration information for SPI module.
  * @retval Packet size occupied in the fifo
  */
static uint32_t SPI_GetPacketSize(SPI_HandleTypeDef *hspi)
{
  uint32_t fifo_threashold = (hspi->Init.FifoThreshold >> SPI_CFG1_FTHLV_Pos) + 1UL;
9000f114:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
  uint32_t data_size       = (hspi->Init.DataSize      >> SPI_CFG1_DSIZE_Pos) + 1UL;

  /* Convert data size to Byte */
  data_size = (data_size + 7UL) / 8UL;
9000f116:	f102 0108 	add.w	r1, r2, #8
  uint32_t fifo_threashold = (hspi->Init.FifoThreshold >> SPI_CFG1_FTHLV_Pos) + 1UL;
9000f11a:	0945      	lsrs	r5, r0, #5
  data_size = (data_size + 7UL) / 8UL;
9000f11c:	08c9      	lsrs	r1, r1, #3

  return data_size * fifo_threashold;
9000f11e:	fb05 1101 	mla	r1, r5, r1, r1
  if (((!IS_SPI_HIGHEND_INSTANCE(hspi->Instance)) && (packet_length > SPI_LOWEND_FIFO_SIZE)) ||
9000f122:	2908      	cmp	r1, #8
9000f124:	d916      	bls.n	9000f154 <HAL_SPI_Init+0x70>
    return HAL_ERROR;
9000f126:	2001      	movs	r0, #1
}
9000f128:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  uint32_t data_size       = (hspi->Init.DataSize      >> SPI_CFG1_DSIZE_Pos) + 1UL;
9000f12c:	68e2      	ldr	r2, [r4, #12]
  uint32_t fifo_threashold = (hspi->Init.FifoThreshold >> SPI_CFG1_FTHLV_Pos) + 1UL;
9000f12e:	6be0      	ldr	r0, [r4, #60]	; 0x3c
  data_size = (data_size + 7UL) / 8UL;
9000f130:	f102 0108 	add.w	r1, r2, #8
      ((IS_SPI_HIGHEND_INSTANCE(hspi->Instance)) && (packet_length > SPI_HIGHEND_FIFO_SIZE)))
9000f134:	4e53      	ldr	r6, [pc, #332]	; (9000f284 <HAL_SPI_Init+0x1a0>)
  uint32_t fifo_threashold = (hspi->Init.FifoThreshold >> SPI_CFG1_FTHLV_Pos) + 1UL;
9000f136:	0945      	lsrs	r5, r0, #5
  data_size = (data_size + 7UL) / 8UL;
9000f138:	08c9      	lsrs	r1, r1, #3
  return data_size * fifo_threashold;
9000f13a:	fb05 1101 	mla	r1, r5, r1, r1
      ((IS_SPI_HIGHEND_INSTANCE(hspi->Instance)) && (packet_length > SPI_HIGHEND_FIFO_SIZE)))
9000f13e:	4d52      	ldr	r5, [pc, #328]	; (9000f288 <HAL_SPI_Init+0x1a4>)
9000f140:	42ab      	cmp	r3, r5
9000f142:	bf18      	it	ne
9000f144:	42b3      	cmpne	r3, r6
9000f146:	d003      	beq.n	9000f150 <HAL_SPI_Init+0x6c>
9000f148:	f505 6580 	add.w	r5, r5, #1024	; 0x400
9000f14c:	42ab      	cmp	r3, r5
9000f14e:	d101      	bne.n	9000f154 <HAL_SPI_Init+0x70>
9000f150:	2910      	cmp	r1, #16
9000f152:	d8e8      	bhi.n	9000f126 <HAL_SPI_Init+0x42>
  if (hspi->State == HAL_SPI_STATE_RESET)
9000f154:	f894 1081 	ldrb.w	r1, [r4, #129]	; 0x81
9000f158:	f001 05ff 	and.w	r5, r1, #255	; 0xff
9000f15c:	2900      	cmp	r1, #0
9000f15e:	d07a      	beq.n	9000f256 <HAL_SPI_Init+0x172>
9000f160:	f04f 0800 	mov.w	r8, #0
  hspi->State = HAL_SPI_STATE_BUSY;
9000f164:	2102      	movs	r1, #2
  if ((hspi->Init.NSS == SPI_NSS_SOFT) && (((hspi->Init.Mode == SPI_MODE_MASTER) &&  \
9000f166:	69a7      	ldr	r7, [r4, #24]
                                            (hspi->Init.NSSPolarity == SPI_NSS_POLARITY_LOW)) || \
9000f168:	6ba5      	ldr	r5, [r4, #56]	; 0x38
  hspi->State = HAL_SPI_STATE_BUSY;
9000f16a:	f884 1081 	strb.w	r1, [r4, #129]	; 0x81
  if ((hspi->Init.NSS == SPI_NSS_SOFT) && (((hspi->Init.Mode == SPI_MODE_MASTER) &&  \
9000f16e:	f1b7 6f80 	cmp.w	r7, #67108864	; 0x4000000
  __HAL_SPI_DISABLE(hspi);
9000f172:	6819      	ldr	r1, [r3, #0]
9000f174:	f021 0101 	bic.w	r1, r1, #1
9000f178:	6019      	str	r1, [r3, #0]
  crc_length = hspi->Instance->CFG1 & SPI_CFG1_CRCSIZE;
9000f17a:	6899      	ldr	r1, [r3, #8]
9000f17c:	f401 1cf8 	and.w	ip, r1, #2031616	; 0x1f0000
  if ((hspi->Init.NSS == SPI_NSS_SOFT) && (((hspi->Init.Mode == SPI_MODE_MASTER) &&  \
9000f180:	6861      	ldr	r1, [r4, #4]
9000f182:	d058      	beq.n	9000f236 <HAL_SPI_Init+0x152>
  if (((hspi->Init.Mode & SPI_MODE_MASTER) == SPI_MODE_MASTER) && (hspi->Init.DataSize >= SPI_DATASIZE_8BIT))
9000f184:	f411 0980 	ands.w	r9, r1, #4194304	; 0x400000
9000f188:	d001      	beq.n	9000f18e <HAL_SPI_Init+0xaa>
9000f18a:	2a06      	cmp	r2, #6
9000f18c:	d849      	bhi.n	9000f222 <HAL_SPI_Init+0x13e>
    CLEAR_BIT(hspi->Instance->CR1, SPI_CR1_MASRX);
9000f18e:	f8d3 e000 	ldr.w	lr, [r3]
9000f192:	f42e 7e80 	bic.w	lr, lr, #256	; 0x100
9000f196:	f8c3 e000 	str.w	lr, [r3]
  WRITE_REG(hspi->Instance->CFG2, (hspi->Init.NSSPMode                | hspi->Init.TIMode    |
9000f19a:	6b66      	ldr	r6, [r4, #52]	; 0x34
  WRITE_REG(hspi->Instance->CFG1, (hspi->Init.BaudRatePrescaler | hspi->Init.CRCCalculation | crc_length |
9000f19c:	ea42 0208 	orr.w	r2, r2, r8
  WRITE_REG(hspi->Instance->CFG2, (hspi->Init.NSSPMode                | hspi->Init.TIMode    |
9000f1a0:	4337      	orrs	r7, r6
9000f1a2:	6a66      	ldr	r6, [r4, #36]	; 0x24
9000f1a4:	4337      	orrs	r7, r6
9000f1a6:	6926      	ldr	r6, [r4, #16]
9000f1a8:	4337      	orrs	r7, r6
9000f1aa:	6966      	ldr	r6, [r4, #20]
9000f1ac:	4337      	orrs	r7, r6
9000f1ae:	6a26      	ldr	r6, [r4, #32]
9000f1b0:	4337      	orrs	r7, r6
9000f1b2:	6ce6      	ldr	r6, [r4, #76]	; 0x4c
9000f1b4:	4337      	orrs	r7, r6
9000f1b6:	68a6      	ldr	r6, [r4, #8]
9000f1b8:	4337      	orrs	r7, r6
9000f1ba:	6ca6      	ldr	r6, [r4, #72]	; 0x48
9000f1bc:	4337      	orrs	r7, r6
  WRITE_REG(hspi->Instance->CFG1, (hspi->Init.BaudRatePrescaler | hspi->Init.CRCCalculation | crc_length |
9000f1be:	69e6      	ldr	r6, [r4, #28]
9000f1c0:	4332      	orrs	r2, r6
9000f1c2:	4302      	orrs	r2, r0
9000f1c4:	ea42 020c 	orr.w	r2, r2, ip
9000f1c8:	609a      	str	r2, [r3, #8]
  WRITE_REG(hspi->Instance->CFG2, (hspi->Init.NSSPMode                | hspi->Init.TIMode    |
9000f1ca:	6da2      	ldr	r2, [r4, #88]	; 0x58
9000f1cc:	433a      	orrs	r2, r7
9000f1ce:	430a      	orrs	r2, r1
9000f1d0:	432a      	orrs	r2, r5
9000f1d2:	60da      	str	r2, [r3, #12]
  if (hspi->Init.Mode == SPI_MODE_SLAVE)
9000f1d4:	b9b9      	cbnz	r1, 9000f206 <HAL_SPI_Init+0x122>
      MODIFY_REG(hspi->Instance->CFG1, SPI_CFG1_UDRDET, SPI_CFG1_UDRDET_0);
9000f1d6:	689a      	ldr	r2, [r3, #8]
9000f1d8:	f422 52c0 	bic.w	r2, r2, #6144	; 0x1800
9000f1dc:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
9000f1e0:	609a      	str	r2, [r3, #8]
    MODIFY_REG(hspi->Instance->CFG1, SPI_CFG1_UDRCFG, SPI_CFG1_UDRCFG_1);
9000f1e2:	689a      	ldr	r2, [r3, #8]
9000f1e4:	f422 62c0 	bic.w	r2, r2, #1536	; 0x600
9000f1e8:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
9000f1ec:	609a      	str	r2, [r3, #8]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
9000f1ee:	6d1a      	ldr	r2, [r3, #80]	; 0x50
9000f1f0:	f022 0201 	bic.w	r2, r2, #1
9000f1f4:	651a      	str	r2, [r3, #80]	; 0x50
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
9000f1f6:	2000      	movs	r0, #0
  hspi->State     = HAL_SPI_STATE_READY;
9000f1f8:	2301      	movs	r3, #1
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
9000f1fa:	f8c4 0084 	str.w	r0, [r4, #132]	; 0x84
  hspi->State     = HAL_SPI_STATE_READY;
9000f1fe:	f884 3081 	strb.w	r3, [r4, #129]	; 0x81
}
9000f202:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
9000f206:	6d1a      	ldr	r2, [r3, #80]	; 0x50
9000f208:	f022 0201 	bic.w	r2, r2, #1
9000f20c:	651a      	str	r2, [r3, #80]	; 0x50
  if ((hspi->Init.Mode & SPI_MODE_MASTER) == SPI_MODE_MASTER)
9000f20e:	f1b9 0f00 	cmp.w	r9, #0
9000f212:	d0f0      	beq.n	9000f1f6 <HAL_SPI_Init+0x112>
    MODIFY_REG(hspi->Instance->CFG2, SPI_CFG2_AFCNTR, (hspi->Init.MasterKeepIOState));
9000f214:	68da      	ldr	r2, [r3, #12]
9000f216:	6d61      	ldr	r1, [r4, #84]	; 0x54
9000f218:	f022 4200 	bic.w	r2, r2, #2147483648	; 0x80000000
9000f21c:	430a      	orrs	r2, r1
9000f21e:	60da      	str	r2, [r3, #12]
9000f220:	e7e9      	b.n	9000f1f6 <HAL_SPI_Init+0x112>
    MODIFY_REG(hspi->Instance->CR1, SPI_CR1_MASRX, hspi->Init.MasterReceiverAutoSusp);
9000f222:	f8d3 e000 	ldr.w	lr, [r3]
9000f226:	6d26      	ldr	r6, [r4, #80]	; 0x50
9000f228:	f42e 7e80 	bic.w	lr, lr, #256	; 0x100
9000f22c:	ea4e 0e06 	orr.w	lr, lr, r6
9000f230:	f8c3 e000 	str.w	lr, [r3]
9000f234:	e7b1      	b.n	9000f19a <HAL_SPI_Init+0xb6>
  if ((hspi->Init.NSS == SPI_NSS_SOFT) && (((hspi->Init.Mode == SPI_MODE_MASTER) &&  \
9000f236:	f5b1 0f80 	cmp.w	r1, #4194304	; 0x400000
9000f23a:	d006      	beq.n	9000f24a <HAL_SPI_Init+0x166>
                                            (hspi->Init.NSSPolarity == SPI_NSS_POLARITY_LOW)) || \
9000f23c:	2900      	cmp	r1, #0
9000f23e:	d1a1      	bne.n	9000f184 <HAL_SPI_Init+0xa0>
                                           ((hspi->Init.Mode == SPI_MODE_SLAVE) && \
9000f240:	f1b5 5f80 	cmp.w	r5, #268435456	; 0x10000000
9000f244:	d002      	beq.n	9000f24c <HAL_SPI_Init+0x168>
  if (((hspi->Init.Mode & SPI_MODE_MASTER) == SPI_MODE_MASTER) && (hspi->Init.DataSize >= SPI_DATASIZE_8BIT))
9000f246:	4689      	mov	r9, r1
9000f248:	e7a1      	b.n	9000f18e <HAL_SPI_Init+0xaa>
  if ((hspi->Init.NSS == SPI_NSS_SOFT) && (((hspi->Init.Mode == SPI_MODE_MASTER) &&  \
9000f24a:	b9cd      	cbnz	r5, 9000f280 <HAL_SPI_Init+0x19c>
    SET_BIT(hspi->Instance->CR1, SPI_CR1_SSI);
9000f24c:	681e      	ldr	r6, [r3, #0]
9000f24e:	f446 5680 	orr.w	r6, r6, #4096	; 0x1000
9000f252:	601e      	str	r6, [r3, #0]
9000f254:	e796      	b.n	9000f184 <HAL_SPI_Init+0xa0>
    HAL_SPI_MspInit(hspi);
9000f256:	4620      	mov	r0, r4
    hspi->Lock = HAL_UNLOCKED;
9000f258:	f884 5080 	strb.w	r5, [r4, #128]	; 0x80
    HAL_SPI_MspInit(hspi);
9000f25c:	f7f6 fa70 	bl	90005740 <HAL_SPI_MspInit>
  __HAL_SPI_DISABLE(hspi);
9000f260:	6823      	ldr	r3, [r4, #0]
  if (((hspi->Init.Mode & SPI_MODE_MASTER) == SPI_MODE_MASTER) && (hspi->Init.DataSize >= SPI_DATASIZE_8BIT))
9000f262:	68e2      	ldr	r2, [r4, #12]
  WRITE_REG(hspi->Instance->CFG1, (hspi->Init.BaudRatePrescaler | hspi->Init.CRCCalculation | crc_length |
9000f264:	f8d4 8028 	ldr.w	r8, [r4, #40]	; 0x28
9000f268:	6be0      	ldr	r0, [r4, #60]	; 0x3c
9000f26a:	e77b      	b.n	9000f164 <HAL_SPI_Init+0x80>
  uint32_t fifo_threashold = (hspi->Init.FifoThreshold >> SPI_CFG1_FTHLV_Pos) + 1UL;
9000f26c:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
  data_size = (data_size + 7UL) / 8UL;
9000f26e:	f102 0108 	add.w	r1, r2, #8
  uint32_t fifo_threashold = (hspi->Init.FifoThreshold >> SPI_CFG1_FTHLV_Pos) + 1UL;
9000f272:	0945      	lsrs	r5, r0, #5
  data_size = (data_size + 7UL) / 8UL;
9000f274:	08c9      	lsrs	r1, r1, #3
  return data_size * fifo_threashold;
9000f276:	fb05 1101 	mla	r1, r5, r1, r1
  if (((!IS_SPI_HIGHEND_INSTANCE(hspi->Instance)) && (packet_length > SPI_LOWEND_FIFO_SIZE)) ||
9000f27a:	e769      	b.n	9000f150 <HAL_SPI_Init+0x6c>
    return HAL_ERROR;
9000f27c:	2001      	movs	r0, #1
}
9000f27e:	4770      	bx	lr
  if (((hspi->Init.Mode & SPI_MODE_MASTER) == SPI_MODE_MASTER) && (hspi->Init.DataSize >= SPI_DATASIZE_8BIT))
9000f280:	4689      	mov	r9, r1
9000f282:	e782      	b.n	9000f18a <HAL_SPI_Init+0xa6>
9000f284:	40013000 	.word	0x40013000
9000f288:	40003800 	.word	0x40003800

9000f28c <HAL_SPI_TransmitReceive>:
{
9000f28c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9000f290:	461d      	mov	r5, r3
  __HAL_LOCK(hspi);
9000f292:	f890 3080 	ldrb.w	r3, [r0, #128]	; 0x80
{
9000f296:	9f08      	ldr	r7, [sp, #32]
  __HAL_LOCK(hspi);
9000f298:	2b01      	cmp	r3, #1
9000f29a:	f000 80b9 	beq.w	9000f410 <HAL_SPI_TransmitReceive+0x184>
9000f29e:	2301      	movs	r3, #1
9000f2a0:	4604      	mov	r4, r0
9000f2a2:	4688      	mov	r8, r1
9000f2a4:	4691      	mov	r9, r2
9000f2a6:	f880 3080 	strb.w	r3, [r0, #128]	; 0x80
  __IO uint16_t *ptxdr_16bits = (__IO uint16_t *)(&(hspi->Instance->TXDR));
9000f2aa:	f8d0 a000 	ldr.w	sl, [r0]
  tickstart = HAL_GetTick();
9000f2ae:	f7fa fefb 	bl	9000a0a8 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
9000f2b2:	f894 1081 	ldrb.w	r1, [r4, #129]	; 0x81
  tickstart = HAL_GetTick();
9000f2b6:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
9000f2b8:	2901      	cmp	r1, #1
9000f2ba:	b2cb      	uxtb	r3, r1
9000f2bc:	f040 80a1 	bne.w	9000f402 <HAL_SPI_TransmitReceive+0x176>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0UL))
9000f2c0:	f1b9 0f00 	cmp.w	r9, #0
9000f2c4:	bf18      	it	ne
9000f2c6:	f1b8 0f00 	cmpne.w	r8, #0
9000f2ca:	f000 8094 	beq.w	9000f3f6 <HAL_SPI_TransmitReceive+0x16a>
9000f2ce:	fab5 f285 	clz	r2, r5
9000f2d2:	0952      	lsrs	r2, r2, #5
9000f2d4:	2d00      	cmp	r5, #0
9000f2d6:	f000 808e 	beq.w	9000f3f6 <HAL_SPI_TransmitReceive+0x16a>
  SPI_2LINES(hspi);
9000f2da:	6823      	ldr	r3, [r4, #0]
  hspi->State       = HAL_SPI_STATE_BUSY_TX_RX;
9000f2dc:	2105      	movs	r1, #5
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
9000f2de:	f8c4 9064 	str.w	r9, [r4, #100]	; 0x64
  hspi->State       = HAL_SPI_STATE_BUSY_TX_RX;
9000f2e2:	f884 1081 	strb.w	r1, [r4, #129]	; 0x81
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
9000f2e6:	f8c4 2084 	str.w	r2, [r4, #132]	; 0x84
  hspi->RxXferCount = Size;
9000f2ea:	f8a4 506a 	strh.w	r5, [r4, #106]	; 0x6a
  hspi->TxXferCount = Size;
9000f2ee:	f8a4 5062 	strh.w	r5, [r4, #98]	; 0x62
  hspi->pTxBuffPtr  = (const uint8_t *)pTxData;
9000f2f2:	f8c4 805c 	str.w	r8, [r4, #92]	; 0x5c
  hspi->RxXferSize  = Size;
9000f2f6:	f8a4 5068 	strh.w	r5, [r4, #104]	; 0x68
  hspi->TxXferSize  = Size;
9000f2fa:	f8a4 5060 	strh.w	r5, [r4, #96]	; 0x60
  hspi->TxISR       = NULL;
9000f2fe:	e9c4 221c 	strd	r2, r2, [r4, #112]	; 0x70
  SPI_2LINES(hspi);
9000f302:	68da      	ldr	r2, [r3, #12]
9000f304:	f422 22c0 	bic.w	r2, r2, #393216	; 0x60000
9000f308:	60da      	str	r2, [r3, #12]
  MODIFY_REG(hspi->Instance->CR2, SPI_CR2_TSIZE, Size);
9000f30a:	4a89      	ldr	r2, [pc, #548]	; (9000f530 <HAL_SPI_TransmitReceive+0x2a4>)
9000f30c:	6859      	ldr	r1, [r3, #4]
9000f30e:	400a      	ands	r2, r1
9000f310:	432a      	orrs	r2, r5
9000f312:	605a      	str	r2, [r3, #4]
  __HAL_SPI_ENABLE(hspi);
9000f314:	681a      	ldr	r2, [r3, #0]
9000f316:	f042 0201 	orr.w	r2, r2, #1
9000f31a:	601a      	str	r2, [r3, #0]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
9000f31c:	6862      	ldr	r2, [r4, #4]
9000f31e:	f5b2 0f80 	cmp.w	r2, #4194304	; 0x400000
9000f322:	f000 80ee 	beq.w	9000f502 <HAL_SPI_TransmitReceive+0x276>
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
9000f326:	f117 0901 	adds.w	r9, r7, #1
  if (hspi->Init.DataSize > SPI_DATASIZE_16BIT)
9000f32a:	68e2      	ldr	r2, [r4, #12]
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
9000f32c:	46a8      	mov	r8, r5
9000f32e:	bf18      	it	ne
9000f330:	f04f 0901 	movne.w	r9, #1
  if (hspi->Init.DataSize > SPI_DATASIZE_16BIT)
9000f334:	2a0f      	cmp	r2, #15
9000f336:	f200 80aa 	bhi.w	9000f48e <HAL_SPI_TransmitReceive+0x202>
  else if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
9000f33a:	2a07      	cmp	r2, #7
9000f33c:	d96d      	bls.n	9000f41a <HAL_SPI_TransmitReceive+0x18e>
9000f33e:	e000      	b.n	9000f342 <HAL_SPI_TransmitReceive+0xb6>
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) == Status)
9000f340:	6823      	ldr	r3, [r4, #0]
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXP) && (initial_TxXferCount > 0UL))
9000f342:	695a      	ldr	r2, [r3, #20]
9000f344:	0792      	lsls	r2, r2, #30
9000f346:	d50f      	bpl.n	9000f368 <HAL_SPI_TransmitReceive+0xdc>
9000f348:	b175      	cbz	r5, 9000f368 <HAL_SPI_TransmitReceive+0xdc>
        *ptxdr_16bits = *((const uint16_t *)hspi->pTxBuffPtr);
9000f34a:	6de2      	ldr	r2, [r4, #92]	; 0x5c
9000f34c:	f832 1b02 	ldrh.w	r1, [r2], #2
9000f350:	f8aa 1020 	strh.w	r1, [sl, #32]
        hspi->pTxBuffPtr += sizeof(uint16_t);
9000f354:	65e2      	str	r2, [r4, #92]	; 0x5c
        hspi->TxXferCount--;
9000f356:	f8b4 2062 	ldrh.w	r2, [r4, #98]	; 0x62
9000f35a:	3a01      	subs	r2, #1
9000f35c:	b292      	uxth	r2, r2
9000f35e:	f8a4 2062 	strh.w	r2, [r4, #98]	; 0x62
        initial_TxXferCount = hspi->TxXferCount;
9000f362:	f8b4 5062 	ldrh.w	r5, [r4, #98]	; 0x62
9000f366:	b2ad      	uxth	r5, r5
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXP)) && (initial_RxXferCount > 0UL))
9000f368:	695b      	ldr	r3, [r3, #20]
9000f36a:	07d8      	lsls	r0, r3, #31
9000f36c:	d512      	bpl.n	9000f394 <HAL_SPI_TransmitReceive+0x108>
9000f36e:	f1b8 0f00 	cmp.w	r8, #0
9000f372:	d00f      	beq.n	9000f394 <HAL_SPI_TransmitReceive+0x108>
        *((uint16_t *)hspi->pRxBuffPtr) = *prxdr_16bits;
9000f374:	f8ba 2030 	ldrh.w	r2, [sl, #48]	; 0x30
9000f378:	6e63      	ldr	r3, [r4, #100]	; 0x64
9000f37a:	f823 2b02 	strh.w	r2, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
9000f37e:	6663      	str	r3, [r4, #100]	; 0x64
        hspi->RxXferCount--;
9000f380:	f8b4 306a 	ldrh.w	r3, [r4, #106]	; 0x6a
9000f384:	3b01      	subs	r3, #1
9000f386:	b29b      	uxth	r3, r3
9000f388:	f8a4 306a 	strh.w	r3, [r4, #106]	; 0x6a
        initial_RxXferCount = hspi->RxXferCount;
9000f38c:	f8b4 806a 	ldrh.w	r8, [r4, #106]	; 0x6a
9000f390:	fa1f f888 	uxth.w	r8, r8
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
9000f394:	f7fa fe88 	bl	9000a0a8 <HAL_GetTick>
9000f398:	1b80      	subs	r0, r0, r6
9000f39a:	42b8      	cmp	r0, r7
9000f39c:	d303      	bcc.n	9000f3a6 <HAL_SPI_TransmitReceive+0x11a>
9000f39e:	f1b9 0f00 	cmp.w	r9, #0
9000f3a2:	f040 80b3 	bne.w	9000f50c <HAL_SPI_TransmitReceive+0x280>
    while ((initial_TxXferCount > 0UL) || (initial_RxXferCount > 0UL))
9000f3a6:	ea45 0308 	orr.w	r3, r5, r8
9000f3aa:	b29b      	uxth	r3, r3
9000f3ac:	2b00      	cmp	r3, #0
9000f3ae:	d1c7      	bne.n	9000f340 <HAL_SPI_TransmitReceive+0xb4>
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) == Status)
9000f3b0:	6823      	ldr	r3, [r4, #0]
9000f3b2:	695b      	ldr	r3, [r3, #20]
9000f3b4:	071b      	lsls	r3, r3, #28
9000f3b6:	d40d      	bmi.n	9000f3d4 <HAL_SPI_TransmitReceive+0x148>
    if ((((HAL_GetTick() - Tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
9000f3b8:	f7fa fe76 	bl	9000a0a8 <HAL_GetTick>
9000f3bc:	1b80      	subs	r0, r0, r6
9000f3be:	4287      	cmp	r7, r0
9000f3c0:	d8f6      	bhi.n	9000f3b0 <HAL_SPI_TransmitReceive+0x124>
9000f3c2:	f1b9 0f00 	cmp.w	r9, #0
9000f3c6:	d0f3      	beq.n	9000f3b0 <HAL_SPI_TransmitReceive+0x124>
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
9000f3c8:	f8d4 3084 	ldr.w	r3, [r4, #132]	; 0x84
9000f3cc:	f043 0320 	orr.w	r3, r3, #32
9000f3d0:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
  SPI_CloseTransfer(hspi);
9000f3d4:	4620      	mov	r0, r4
9000f3d6:	f7ff fe29 	bl	9000f02c <SPI_CloseTransfer>
  hspi->State = HAL_SPI_STATE_READY;
9000f3da:	2301      	movs	r3, #1
  __HAL_UNLOCK(hspi);
9000f3dc:	2200      	movs	r2, #0
  hspi->State = HAL_SPI_STATE_READY;
9000f3de:	f884 3081 	strb.w	r3, [r4, #129]	; 0x81
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
9000f3e2:	f8d4 3084 	ldr.w	r3, [r4, #132]	; 0x84
  __HAL_UNLOCK(hspi);
9000f3e6:	f884 2080 	strb.w	r2, [r4, #128]	; 0x80
  __HAL_LOCK(hspi);
9000f3ea:	1a9b      	subs	r3, r3, r2
9000f3ec:	bf18      	it	ne
9000f3ee:	2301      	movne	r3, #1
}
9000f3f0:	4618      	mov	r0, r3
9000f3f2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    __HAL_UNLOCK(hspi);
9000f3f6:	2200      	movs	r2, #0
9000f3f8:	f884 2080 	strb.w	r2, [r4, #128]	; 0x80
}
9000f3fc:	4618      	mov	r0, r3
9000f3fe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    __HAL_UNLOCK(hspi);
9000f402:	2200      	movs	r2, #0
    return errorcode;
9000f404:	2302      	movs	r3, #2
    __HAL_UNLOCK(hspi);
9000f406:	f884 2080 	strb.w	r2, [r4, #128]	; 0x80
}
9000f40a:	4618      	mov	r0, r3
9000f40c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  __HAL_LOCK(hspi);
9000f410:	2302      	movs	r3, #2
}
9000f412:	4618      	mov	r0, r3
9000f414:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) == Status)
9000f418:	6823      	ldr	r3, [r4, #0]
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXP)) && (initial_TxXferCount > 0UL))
9000f41a:	695a      	ldr	r2, [r3, #20]
9000f41c:	0791      	lsls	r1, r2, #30
9000f41e:	d511      	bpl.n	9000f444 <HAL_SPI_TransmitReceive+0x1b8>
9000f420:	b185      	cbz	r5, 9000f444 <HAL_SPI_TransmitReceive+0x1b8>
        *((__IO uint8_t *)&hspi->Instance->TXDR) = *((const uint8_t *)hspi->pTxBuffPtr);
9000f422:	6de2      	ldr	r2, [r4, #92]	; 0x5c
9000f424:	7812      	ldrb	r2, [r2, #0]
9000f426:	f883 2020 	strb.w	r2, [r3, #32]
        hspi->TxXferCount--;
9000f42a:	f8b4 3062 	ldrh.w	r3, [r4, #98]	; 0x62
9000f42e:	3b01      	subs	r3, #1
9000f430:	b29b      	uxth	r3, r3
9000f432:	f8a4 3062 	strh.w	r3, [r4, #98]	; 0x62
        hspi->pTxBuffPtr += sizeof(uint8_t);
9000f436:	6de3      	ldr	r3, [r4, #92]	; 0x5c
        initial_TxXferCount = hspi->TxXferCount;
9000f438:	f8b4 5062 	ldrh.w	r5, [r4, #98]	; 0x62
        hspi->pTxBuffPtr += sizeof(uint8_t);
9000f43c:	3301      	adds	r3, #1
        initial_TxXferCount = hspi->TxXferCount;
9000f43e:	b2ad      	uxth	r5, r5
        hspi->pTxBuffPtr += sizeof(uint8_t);
9000f440:	65e3      	str	r3, [r4, #92]	; 0x5c
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXP)) && (initial_RxXferCount > 0UL))
9000f442:	6823      	ldr	r3, [r4, #0]
9000f444:	695a      	ldr	r2, [r3, #20]
9000f446:	07d2      	lsls	r2, r2, #31
9000f448:	d513      	bpl.n	9000f472 <HAL_SPI_TransmitReceive+0x1e6>
9000f44a:	f1b8 0f00 	cmp.w	r8, #0
9000f44e:	d010      	beq.n	9000f472 <HAL_SPI_TransmitReceive+0x1e6>
        *((uint8_t *)hspi->pRxBuffPtr) = *((__IO uint8_t *)&hspi->Instance->RXDR);
9000f450:	f893 3030 	ldrb.w	r3, [r3, #48]	; 0x30
9000f454:	6e62      	ldr	r2, [r4, #100]	; 0x64
9000f456:	7013      	strb	r3, [r2, #0]
        hspi->RxXferCount--;
9000f458:	f8b4 306a 	ldrh.w	r3, [r4, #106]	; 0x6a
9000f45c:	3b01      	subs	r3, #1
9000f45e:	b29b      	uxth	r3, r3
9000f460:	f8a4 306a 	strh.w	r3, [r4, #106]	; 0x6a
        hspi->pRxBuffPtr += sizeof(uint8_t);
9000f464:	6e63      	ldr	r3, [r4, #100]	; 0x64
        initial_RxXferCount = hspi->RxXferCount;
9000f466:	f8b4 806a 	ldrh.w	r8, [r4, #106]	; 0x6a
        hspi->pRxBuffPtr += sizeof(uint8_t);
9000f46a:	3301      	adds	r3, #1
        initial_RxXferCount = hspi->RxXferCount;
9000f46c:	fa1f f888 	uxth.w	r8, r8
        hspi->pRxBuffPtr += sizeof(uint8_t);
9000f470:	6663      	str	r3, [r4, #100]	; 0x64
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
9000f472:	f7fa fe19 	bl	9000a0a8 <HAL_GetTick>
9000f476:	1b80      	subs	r0, r0, r6
9000f478:	42b8      	cmp	r0, r7
9000f47a:	d302      	bcc.n	9000f482 <HAL_SPI_TransmitReceive+0x1f6>
9000f47c:	f1b9 0f00 	cmp.w	r9, #0
9000f480:	d144      	bne.n	9000f50c <HAL_SPI_TransmitReceive+0x280>
    while ((initial_TxXferCount > 0UL) || (initial_RxXferCount > 0UL))
9000f482:	ea45 0308 	orr.w	r3, r5, r8
9000f486:	b29b      	uxth	r3, r3
9000f488:	2b00      	cmp	r3, #0
9000f48a:	d1c5      	bne.n	9000f418 <HAL_SPI_TransmitReceive+0x18c>
9000f48c:	e790      	b.n	9000f3b0 <HAL_SPI_TransmitReceive+0x124>
      if (((hspi->Instance->SR & (SPI_FLAG_RXWNE | SPI_FLAG_EOT)) != 0UL) && (initial_RxXferCount > 0UL))
9000f48e:	f248 0a08 	movw	sl, #32776	; 0x8008
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXP)) && (initial_TxXferCount > 0UL))
9000f492:	695a      	ldr	r2, [r3, #20]
9000f494:	0791      	lsls	r1, r2, #30
9000f496:	d50e      	bpl.n	9000f4b6 <HAL_SPI_TransmitReceive+0x22a>
9000f498:	b16d      	cbz	r5, 9000f4b6 <HAL_SPI_TransmitReceive+0x22a>
        *((__IO uint32_t *)&hspi->Instance->TXDR) = *((const uint32_t *)hspi->pTxBuffPtr);
9000f49a:	6de2      	ldr	r2, [r4, #92]	; 0x5c
9000f49c:	f852 1b04 	ldr.w	r1, [r2], #4
9000f4a0:	6219      	str	r1, [r3, #32]
        hspi->pTxBuffPtr += sizeof(uint32_t);
9000f4a2:	65e2      	str	r2, [r4, #92]	; 0x5c
        hspi->TxXferCount --;
9000f4a4:	f8b4 2062 	ldrh.w	r2, [r4, #98]	; 0x62
9000f4a8:	3a01      	subs	r2, #1
9000f4aa:	b292      	uxth	r2, r2
9000f4ac:	f8a4 2062 	strh.w	r2, [r4, #98]	; 0x62
        initial_TxXferCount = hspi->TxXferCount;
9000f4b0:	f8b4 5062 	ldrh.w	r5, [r4, #98]	; 0x62
9000f4b4:	b2ad      	uxth	r5, r5
      if (((hspi->Instance->SR & (SPI_FLAG_RXWNE | SPI_FLAG_EOT)) != 0UL) && (initial_RxXferCount > 0UL))
9000f4b6:	695a      	ldr	r2, [r3, #20]
9000f4b8:	ea12 0f0a 	tst.w	r2, sl
9000f4bc:	d011      	beq.n	9000f4e2 <HAL_SPI_TransmitReceive+0x256>
9000f4be:	f1b8 0f00 	cmp.w	r8, #0
9000f4c2:	d00e      	beq.n	9000f4e2 <HAL_SPI_TransmitReceive+0x256>
        *((uint32_t *)hspi->pRxBuffPtr) = *((__IO uint32_t *)&hspi->Instance->RXDR);
9000f4c4:	6b19      	ldr	r1, [r3, #48]	; 0x30
        hspi->RxXferCount --;
9000f4c6:	f8b4 306a 	ldrh.w	r3, [r4, #106]	; 0x6a
        *((uint32_t *)hspi->pRxBuffPtr) = *((__IO uint32_t *)&hspi->Instance->RXDR);
9000f4ca:	6e62      	ldr	r2, [r4, #100]	; 0x64
        hspi->RxXferCount --;
9000f4cc:	3b01      	subs	r3, #1
        *((uint32_t *)hspi->pRxBuffPtr) = *((__IO uint32_t *)&hspi->Instance->RXDR);
9000f4ce:	f842 1b04 	str.w	r1, [r2], #4
        hspi->RxXferCount --;
9000f4d2:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr += sizeof(uint32_t);
9000f4d4:	6662      	str	r2, [r4, #100]	; 0x64
        hspi->RxXferCount --;
9000f4d6:	f8a4 306a 	strh.w	r3, [r4, #106]	; 0x6a
        initial_RxXferCount = hspi->RxXferCount;
9000f4da:	f8b4 806a 	ldrh.w	r8, [r4, #106]	; 0x6a
9000f4de:	fa1f f888 	uxth.w	r8, r8
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
9000f4e2:	f7fa fde1 	bl	9000a0a8 <HAL_GetTick>
9000f4e6:	1b80      	subs	r0, r0, r6
    while ((initial_TxXferCount > 0UL) || (initial_RxXferCount > 0UL))
9000f4e8:	ea45 0308 	orr.w	r3, r5, r8
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
9000f4ec:	42b8      	cmp	r0, r7
    while ((initial_TxXferCount > 0UL) || (initial_RxXferCount > 0UL))
9000f4ee:	b29b      	uxth	r3, r3
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
9000f4f0:	d302      	bcc.n	9000f4f8 <HAL_SPI_TransmitReceive+0x26c>
9000f4f2:	f1b9 0f00 	cmp.w	r9, #0
9000f4f6:	d109      	bne.n	9000f50c <HAL_SPI_TransmitReceive+0x280>
    while ((initial_TxXferCount > 0UL) || (initial_RxXferCount > 0UL))
9000f4f8:	2b00      	cmp	r3, #0
9000f4fa:	f43f af59 	beq.w	9000f3b0 <HAL_SPI_TransmitReceive+0x124>
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) == Status)
9000f4fe:	6823      	ldr	r3, [r4, #0]
9000f500:	e7c7      	b.n	9000f492 <HAL_SPI_TransmitReceive+0x206>
    SET_BIT(hspi->Instance->CR1, SPI_CR1_CSTART);
9000f502:	681a      	ldr	r2, [r3, #0]
9000f504:	f442 7200 	orr.w	r2, r2, #512	; 0x200
9000f508:	601a      	str	r2, [r3, #0]
9000f50a:	e70c      	b.n	9000f326 <HAL_SPI_TransmitReceive+0x9a>
        SPI_CloseTransfer(hspi);
9000f50c:	4620      	mov	r0, r4
9000f50e:	f7ff fd8d 	bl	9000f02c <SPI_CloseTransfer>
        SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_TIMEOUT);
9000f512:	f8d4 2084 	ldr.w	r2, [r4, #132]	; 0x84
        hspi->State = HAL_SPI_STATE_READY;
9000f516:	2101      	movs	r1, #1
        __HAL_UNLOCK(hspi);
9000f518:	2400      	movs	r4, #0
        SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_TIMEOUT);
9000f51a:	f442 7280 	orr.w	r2, r2, #256	; 0x100
        return HAL_TIMEOUT;
9000f51e:	2303      	movs	r3, #3
        __HAL_UNLOCK(hspi);
9000f520:	f880 4080 	strb.w	r4, [r0, #128]	; 0x80
        SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_TIMEOUT);
9000f524:	f8c0 2084 	str.w	r2, [r0, #132]	; 0x84
        hspi->State = HAL_SPI_STATE_READY;
9000f528:	f880 1081 	strb.w	r1, [r0, #129]	; 0x81
        return HAL_TIMEOUT;
9000f52c:	e766      	b.n	9000f3fc <HAL_SPI_TransmitReceive+0x170>
9000f52e:	bf00      	nop
9000f530:	ffff0000 	.word	0xffff0000

9000f534 <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
9000f534:	4770      	bx	lr
9000f536:	bf00      	nop

9000f538 <HAL_TIM_Base_Init>:
  if (htim == NULL)
9000f538:	2800      	cmp	r0, #0
9000f53a:	f000 80a5 	beq.w	9000f688 <HAL_TIM_Base_Init+0x150>
{
9000f53e:	b538      	push	{r3, r4, r5, lr}
  if (htim->State == HAL_TIM_STATE_RESET)
9000f540:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
9000f544:	4604      	mov	r4, r0
9000f546:	f003 02ff 	and.w	r2, r3, #255	; 0xff
9000f54a:	2b00      	cmp	r3, #0
9000f54c:	d076      	beq.n	9000f63c <HAL_TIM_Base_Init+0x104>
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
9000f54e:	6822      	ldr	r2, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
9000f550:	2302      	movs	r3, #2
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000f552:	494e      	ldr	r1, [pc, #312]	; (9000f68c <HAL_TIM_Base_Init+0x154>)
9000f554:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
  htim->State = HAL_TIM_STATE_BUSY;
9000f558:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000f55c:	eba2 0101 	sub.w	r1, r2, r1
  tmpcr1 = TIMx->CR1;
9000f560:	6813      	ldr	r3, [r2, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000f562:	fab1 f181 	clz	r1, r1
9000f566:	ea4f 1151 	mov.w	r1, r1, lsr #5
9000f56a:	d027      	beq.n	9000f5bc <HAL_TIM_Base_Init+0x84>
9000f56c:	bb31      	cbnz	r1, 9000f5bc <HAL_TIM_Base_Init+0x84>
9000f56e:	4848      	ldr	r0, [pc, #288]	; (9000f690 <HAL_TIM_Base_Init+0x158>)
9000f570:	4d48      	ldr	r5, [pc, #288]	; (9000f694 <HAL_TIM_Base_Init+0x15c>)
9000f572:	4282      	cmp	r2, r0
9000f574:	d067      	beq.n	9000f646 <HAL_TIM_Base_Init+0x10e>
9000f576:	f500 6080 	add.w	r0, r0, #1024	; 0x400
9000f57a:	4282      	cmp	r2, r0
9000f57c:	d063      	beq.n	9000f646 <HAL_TIM_Base_Init+0x10e>
9000f57e:	1b55      	subs	r5, r2, r5
9000f580:	f500 6080 	add.w	r0, r0, #1024	; 0x400
9000f584:	fab5 f585 	clz	r5, r5
9000f588:	4282      	cmp	r2, r0
9000f58a:	ea4f 1555 	mov.w	r5, r5, lsr #5
9000f58e:	d063      	beq.n	9000f658 <HAL_TIM_Base_Init+0x120>
9000f590:	2d00      	cmp	r5, #0
9000f592:	d161      	bne.n	9000f658 <HAL_TIM_Base_Init+0x120>
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
9000f594:	4840      	ldr	r0, [pc, #256]	; (9000f698 <HAL_TIM_Base_Init+0x160>)
9000f596:	4941      	ldr	r1, [pc, #260]	; (9000f69c <HAL_TIM_Base_Init+0x164>)
9000f598:	428a      	cmp	r2, r1
9000f59a:	bf18      	it	ne
9000f59c:	4282      	cmpne	r2, r0
9000f59e:	d065      	beq.n	9000f66c <HAL_TIM_Base_Init+0x134>
9000f5a0:	f501 6180 	add.w	r1, r1, #1024	; 0x400
9000f5a4:	428a      	cmp	r2, r1
9000f5a6:	d061      	beq.n	9000f66c <HAL_TIM_Base_Init+0x134>
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000f5a8:	69a0      	ldr	r0, [r4, #24]
9000f5aa:	f023 0380 	bic.w	r3, r3, #128	; 0x80

  TIMx->CR1 = tmpcr1;

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
9000f5ae:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000f5b0:	4303      	orrs	r3, r0
  TIMx->CR1 = tmpcr1;
9000f5b2:	6013      	str	r3, [r2, #0]

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
9000f5b4:	6863      	ldr	r3, [r4, #4]
  TIMx->ARR = (uint32_t)Structure->Period ;
9000f5b6:	62d1      	str	r1, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
9000f5b8:	6293      	str	r3, [r2, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000f5ba:	e023      	b.n	9000f604 <HAL_TIM_Base_Init+0xcc>
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000f5bc:	4d35      	ldr	r5, [pc, #212]	; (9000f694 <HAL_TIM_Base_Init+0x15c>)
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
9000f5be:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
9000f5c2:	68a0      	ldr	r0, [r4, #8]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000f5c4:	1b55      	subs	r5, r2, r5
    tmpcr1 |= Structure->CounterMode;
9000f5c6:	4303      	orrs	r3, r0
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000f5c8:	fab5 f585 	clz	r5, r5
9000f5cc:	096d      	lsrs	r5, r5, #5
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000f5ce:	6920      	ldr	r0, [r4, #16]
    tmpcr1 &= ~TIM_CR1_CKD;
9000f5d0:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000f5d4:	4303      	orrs	r3, r0
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000f5d6:	69a0      	ldr	r0, [r4, #24]
9000f5d8:	f023 0380 	bic.w	r3, r3, #128	; 0x80
9000f5dc:	4303      	orrs	r3, r0
  TIMx->CR1 = tmpcr1;
9000f5de:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
9000f5e0:	68e3      	ldr	r3, [r4, #12]
9000f5e2:	62d3      	str	r3, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
9000f5e4:	6863      	ldr	r3, [r4, #4]
9000f5e6:	6293      	str	r3, [r2, #40]	; 0x28
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000f5e8:	b951      	cbnz	r1, 9000f600 <HAL_TIM_Base_Init+0xc8>
9000f5ea:	b94d      	cbnz	r5, 9000f600 <HAL_TIM_Base_Init+0xc8>
9000f5ec:	492a      	ldr	r1, [pc, #168]	; (9000f698 <HAL_TIM_Base_Init+0x160>)
9000f5ee:	4b2b      	ldr	r3, [pc, #172]	; (9000f69c <HAL_TIM_Base_Init+0x164>)
9000f5f0:	429a      	cmp	r2, r3
9000f5f2:	bf18      	it	ne
9000f5f4:	428a      	cmpne	r2, r1
9000f5f6:	d003      	beq.n	9000f600 <HAL_TIM_Base_Init+0xc8>
9000f5f8:	f503 6380 	add.w	r3, r3, #1024	; 0x400
9000f5fc:	429a      	cmp	r2, r3
9000f5fe:	d101      	bne.n	9000f604 <HAL_TIM_Base_Init+0xcc>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
9000f600:	6963      	ldr	r3, [r4, #20]
9000f602:	6313      	str	r3, [r2, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
9000f604:	2301      	movs	r3, #1
  return HAL_OK;
9000f606:	2000      	movs	r0, #0
  TIMx->EGR = TIM_EGR_UG;
9000f608:	6153      	str	r3, [r2, #20]
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
9000f60a:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
9000f60e:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
9000f612:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
9000f616:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
9000f61a:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
9000f61e:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
9000f622:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
9000f626:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
9000f62a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
9000f62e:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
9000f632:	f884 3047 	strb.w	r3, [r4, #71]	; 0x47
  htim->State = HAL_TIM_STATE_READY;
9000f636:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
}
9000f63a:	bd38      	pop	{r3, r4, r5, pc}
    htim->Lock = HAL_UNLOCKED;
9000f63c:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
9000f640:	f7ff ff78 	bl	9000f534 <HAL_TIM_Base_MspInit>
9000f644:	e783      	b.n	9000f54e <HAL_TIM_Base_Init+0x16>
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000f646:	1b55      	subs	r5, r2, r5
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
9000f648:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
9000f64c:	68a0      	ldr	r0, [r4, #8]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000f64e:	fab5 f585 	clz	r5, r5
    tmpcr1 |= Structure->CounterMode;
9000f652:	4303      	orrs	r3, r0
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000f654:	096d      	lsrs	r5, r5, #5
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
9000f656:	e7ba      	b.n	9000f5ce <HAL_TIM_Base_Init+0x96>
    tmpcr1 |= Structure->CounterMode;
9000f658:	68a0      	ldr	r0, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
9000f65a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
9000f65e:	4303      	orrs	r3, r0
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000f660:	480f      	ldr	r0, [pc, #60]	; (9000f6a0 <HAL_TIM_Base_Init+0x168>)
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
9000f662:	4282      	cmp	r2, r0
9000f664:	d0b3      	beq.n	9000f5ce <HAL_TIM_Base_Init+0x96>
9000f666:	2d00      	cmp	r5, #0
9000f668:	d1b1      	bne.n	9000f5ce <HAL_TIM_Base_Init+0x96>
9000f66a:	e793      	b.n	9000f594 <HAL_TIM_Base_Init+0x5c>
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000f66c:	6920      	ldr	r0, [r4, #16]
    tmpcr1 &= ~TIM_CR1_CKD;
9000f66e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000f672:	69a1      	ldr	r1, [r4, #24]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000f674:	4303      	orrs	r3, r0
  TIMx->ARR = (uint32_t)Structure->Period ;
9000f676:	68e0      	ldr	r0, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000f678:	f023 0380 	bic.w	r3, r3, #128	; 0x80
9000f67c:	430b      	orrs	r3, r1
  TIMx->PSC = Structure->Prescaler;
9000f67e:	6861      	ldr	r1, [r4, #4]
  TIMx->CR1 = tmpcr1;
9000f680:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
9000f682:	62d0      	str	r0, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
9000f684:	6291      	str	r1, [r2, #40]	; 0x28
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000f686:	e7b1      	b.n	9000f5ec <HAL_TIM_Base_Init+0xb4>
    return HAL_ERROR;
9000f688:	2001      	movs	r0, #1
}
9000f68a:	4770      	bx	lr
9000f68c:	40010000 	.word	0x40010000
9000f690:	40000400 	.word	0x40000400
9000f694:	40010400 	.word	0x40010400
9000f698:	40014000 	.word	0x40014000
9000f69c:	40014400 	.word	0x40014400
9000f6a0:	40000c00 	.word	0x40000c00

9000f6a4 <HAL_TIM_Base_Start_IT>:
  if (htim->State != HAL_TIM_STATE_READY)
9000f6a4:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
9000f6a8:	2b01      	cmp	r3, #1
9000f6aa:	d141      	bne.n	9000f730 <HAL_TIM_Base_Start_IT+0x8c>
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000f6ac:	6802      	ldr	r2, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
9000f6ae:	2102      	movs	r1, #2
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000f6b0:	4b24      	ldr	r3, [pc, #144]	; (9000f744 <HAL_TIM_Base_Start_IT+0xa0>)
9000f6b2:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
9000f6b6:	bf18      	it	ne
9000f6b8:	429a      	cmpne	r2, r3
{
9000f6ba:	b430      	push	{r4, r5}
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000f6bc:	bf0c      	ite	eq
9000f6be:	2301      	moveq	r3, #1
9000f6c0:	2300      	movne	r3, #0
9000f6c2:	4d21      	ldr	r5, [pc, #132]	; (9000f748 <HAL_TIM_Base_Start_IT+0xa4>)
9000f6c4:	4c21      	ldr	r4, [pc, #132]	; (9000f74c <HAL_TIM_Base_Start_IT+0xa8>)
9000f6c6:	42aa      	cmp	r2, r5
9000f6c8:	bf08      	it	eq
9000f6ca:	f043 0301 	orreq.w	r3, r3, #1
  htim->State = HAL_TIM_STATE_BUSY;
9000f6ce:	f880 103d 	strb.w	r1, [r0, #61]	; 0x3d
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000f6d2:	68d1      	ldr	r1, [r2, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000f6d4:	42a2      	cmp	r2, r4
9000f6d6:	bf08      	it	eq
9000f6d8:	f043 0301 	orreq.w	r3, r3, #1
9000f6dc:	f504 6480 	add.w	r4, r4, #1024	; 0x400
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000f6e0:	f041 0101 	orr.w	r1, r1, #1
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000f6e4:	481a      	ldr	r0, [pc, #104]	; (9000f750 <HAL_TIM_Base_Start_IT+0xac>)
9000f6e6:	42a2      	cmp	r2, r4
9000f6e8:	bf08      	it	eq
9000f6ea:	f043 0301 	orreq.w	r3, r3, #1
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000f6ee:	60d1      	str	r1, [r2, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000f6f0:	4282      	cmp	r2, r0
9000f6f2:	bf08      	it	eq
9000f6f4:	f043 0301 	orreq.w	r3, r3, #1
9000f6f8:	4916      	ldr	r1, [pc, #88]	; (9000f754 <HAL_TIM_Base_Start_IT+0xb0>)
9000f6fa:	428a      	cmp	r2, r1
9000f6fc:	bf08      	it	eq
9000f6fe:	f043 0301 	orreq.w	r3, r3, #1
9000f702:	b933      	cbnz	r3, 9000f712 <HAL_TIM_Base_Start_IT+0x6e>
9000f704:	f500 5070 	add.w	r0, r0, #15360	; 0x3c00
9000f708:	1a10      	subs	r0, r2, r0
9000f70a:	fab0 f080 	clz	r0, r0
9000f70e:	0940      	lsrs	r0, r0, #5
9000f710:	b198      	cbz	r0, 9000f73a <HAL_TIM_Base_Start_IT+0x96>
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
9000f712:	6891      	ldr	r1, [r2, #8]
9000f714:	4b10      	ldr	r3, [pc, #64]	; (9000f758 <HAL_TIM_Base_Start_IT+0xb4>)
9000f716:	400b      	ands	r3, r1
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
9000f718:	2b06      	cmp	r3, #6
9000f71a:	d00b      	beq.n	9000f734 <HAL_TIM_Base_Start_IT+0x90>
9000f71c:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
9000f720:	d008      	beq.n	9000f734 <HAL_TIM_Base_Start_IT+0x90>
      __HAL_TIM_ENABLE(htim);
9000f722:	6813      	ldr	r3, [r2, #0]
  return HAL_OK;
9000f724:	2000      	movs	r0, #0
      __HAL_TIM_ENABLE(htim);
9000f726:	f043 0301 	orr.w	r3, r3, #1
9000f72a:	6013      	str	r3, [r2, #0]
}
9000f72c:	bc30      	pop	{r4, r5}
9000f72e:	4770      	bx	lr
    return HAL_ERROR;
9000f730:	2001      	movs	r0, #1
}
9000f732:	4770      	bx	lr
  return HAL_OK;
9000f734:	2000      	movs	r0, #0
}
9000f736:	bc30      	pop	{r4, r5}
9000f738:	4770      	bx	lr
    __HAL_TIM_ENABLE(htim);
9000f73a:	6813      	ldr	r3, [r2, #0]
9000f73c:	f043 0301 	orr.w	r3, r3, #1
9000f740:	6013      	str	r3, [r2, #0]
9000f742:	e7f3      	b.n	9000f72c <HAL_TIM_Base_Start_IT+0x88>
9000f744:	40010000 	.word	0x40010000
9000f748:	40000400 	.word	0x40000400
9000f74c:	40000800 	.word	0x40000800
9000f750:	40010400 	.word	0x40010400
9000f754:	40001800 	.word	0x40001800
9000f758:	00010007 	.word	0x00010007

9000f75c <HAL_TIM_OC_DelayElapsedCallback>:
9000f75c:	4770      	bx	lr
9000f75e:	bf00      	nop

9000f760 <HAL_TIM_IC_CaptureCallback>:
9000f760:	4770      	bx	lr
9000f762:	bf00      	nop

9000f764 <HAL_TIM_PWM_PulseFinishedCallback>:
9000f764:	4770      	bx	lr
9000f766:	bf00      	nop

9000f768 <HAL_TIM_TriggerCallback>:
9000f768:	4770      	bx	lr
9000f76a:	bf00      	nop

9000f76c <HAL_TIM_IRQHandler>:
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
9000f76c:	6803      	ldr	r3, [r0, #0]
9000f76e:	691a      	ldr	r2, [r3, #16]
9000f770:	0791      	lsls	r1, r2, #30
{
9000f772:	b510      	push	{r4, lr}
9000f774:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
9000f776:	d502      	bpl.n	9000f77e <HAL_TIM_IRQHandler+0x12>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
9000f778:	68da      	ldr	r2, [r3, #12]
9000f77a:	0792      	lsls	r2, r2, #30
9000f77c:	d468      	bmi.n	9000f850 <HAL_TIM_IRQHandler+0xe4>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
9000f77e:	691a      	ldr	r2, [r3, #16]
9000f780:	0752      	lsls	r2, r2, #29
9000f782:	d502      	bpl.n	9000f78a <HAL_TIM_IRQHandler+0x1e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
9000f784:	68da      	ldr	r2, [r3, #12]
9000f786:	0750      	lsls	r0, r2, #29
9000f788:	d44f      	bmi.n	9000f82a <HAL_TIM_IRQHandler+0xbe>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
9000f78a:	691a      	ldr	r2, [r3, #16]
9000f78c:	0711      	lsls	r1, r2, #28
9000f78e:	d502      	bpl.n	9000f796 <HAL_TIM_IRQHandler+0x2a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
9000f790:	68da      	ldr	r2, [r3, #12]
9000f792:	0712      	lsls	r2, r2, #28
9000f794:	d437      	bmi.n	9000f806 <HAL_TIM_IRQHandler+0x9a>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
9000f796:	691a      	ldr	r2, [r3, #16]
9000f798:	06d0      	lsls	r0, r2, #27
9000f79a:	d502      	bpl.n	9000f7a2 <HAL_TIM_IRQHandler+0x36>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
9000f79c:	68da      	ldr	r2, [r3, #12]
9000f79e:	06d1      	lsls	r1, r2, #27
9000f7a0:	d41e      	bmi.n	9000f7e0 <HAL_TIM_IRQHandler+0x74>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
9000f7a2:	691a      	ldr	r2, [r3, #16]
9000f7a4:	07d2      	lsls	r2, r2, #31
9000f7a6:	d502      	bpl.n	9000f7ae <HAL_TIM_IRQHandler+0x42>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
9000f7a8:	68da      	ldr	r2, [r3, #12]
9000f7aa:	07d0      	lsls	r0, r2, #31
9000f7ac:	d469      	bmi.n	9000f882 <HAL_TIM_IRQHandler+0x116>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
9000f7ae:	691a      	ldr	r2, [r3, #16]
9000f7b0:	0611      	lsls	r1, r2, #24
9000f7b2:	d502      	bpl.n	9000f7ba <HAL_TIM_IRQHandler+0x4e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
9000f7b4:	68da      	ldr	r2, [r3, #12]
9000f7b6:	0612      	lsls	r2, r2, #24
9000f7b8:	d46b      	bmi.n	9000f892 <HAL_TIM_IRQHandler+0x126>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK2) != RESET)
9000f7ba:	691a      	ldr	r2, [r3, #16]
9000f7bc:	05d0      	lsls	r0, r2, #23
9000f7be:	d502      	bpl.n	9000f7c6 <HAL_TIM_IRQHandler+0x5a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
9000f7c0:	68da      	ldr	r2, [r3, #12]
9000f7c2:	0611      	lsls	r1, r2, #24
9000f7c4:	d46d      	bmi.n	9000f8a2 <HAL_TIM_IRQHandler+0x136>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
9000f7c6:	691a      	ldr	r2, [r3, #16]
9000f7c8:	0652      	lsls	r2, r2, #25
9000f7ca:	d502      	bpl.n	9000f7d2 <HAL_TIM_IRQHandler+0x66>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
9000f7cc:	68da      	ldr	r2, [r3, #12]
9000f7ce:	0650      	lsls	r0, r2, #25
9000f7d0:	d46f      	bmi.n	9000f8b2 <HAL_TIM_IRQHandler+0x146>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
9000f7d2:	691a      	ldr	r2, [r3, #16]
9000f7d4:	0691      	lsls	r1, r2, #26
9000f7d6:	d502      	bpl.n	9000f7de <HAL_TIM_IRQHandler+0x72>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
9000f7d8:	68da      	ldr	r2, [r3, #12]
9000f7da:	0692      	lsls	r2, r2, #26
9000f7dc:	d449      	bmi.n	9000f872 <HAL_TIM_IRQHandler+0x106>
}
9000f7de:	bd10      	pop	{r4, pc}
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
9000f7e0:	f06f 0110 	mvn.w	r1, #16
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
9000f7e4:	2208      	movs	r2, #8
        HAL_TIM_IC_CaptureCallback(htim);
9000f7e6:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
9000f7e8:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
9000f7ea:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
9000f7ec:	69db      	ldr	r3, [r3, #28]
9000f7ee:	f413 7f40 	tst.w	r3, #768	; 0x300
9000f7f2:	d16f      	bne.n	9000f8d4 <HAL_TIM_IRQHandler+0x168>
        HAL_TIM_OC_DelayElapsedCallback(htim);
9000f7f4:	f7ff ffb2 	bl	9000f75c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
9000f7f8:	4620      	mov	r0, r4
9000f7fa:	f7ff ffb3 	bl	9000f764 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000f7fe:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
9000f800:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000f802:	7722      	strb	r2, [r4, #28]
9000f804:	e7cd      	b.n	9000f7a2 <HAL_TIM_IRQHandler+0x36>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
9000f806:	f06f 0108 	mvn.w	r1, #8
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
9000f80a:	2204      	movs	r2, #4
        HAL_TIM_IC_CaptureCallback(htim);
9000f80c:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
9000f80e:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
9000f810:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
9000f812:	69db      	ldr	r3, [r3, #28]
9000f814:	079b      	lsls	r3, r3, #30
9000f816:	d15a      	bne.n	9000f8ce <HAL_TIM_IRQHandler+0x162>
        HAL_TIM_OC_DelayElapsedCallback(htim);
9000f818:	f7ff ffa0 	bl	9000f75c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
9000f81c:	4620      	mov	r0, r4
9000f81e:	f7ff ffa1 	bl	9000f764 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000f822:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
9000f824:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000f826:	7722      	strb	r2, [r4, #28]
9000f828:	e7b5      	b.n	9000f796 <HAL_TIM_IRQHandler+0x2a>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
9000f82a:	f06f 0104 	mvn.w	r1, #4
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
9000f82e:	2202      	movs	r2, #2
        HAL_TIM_IC_CaptureCallback(htim);
9000f830:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
9000f832:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
9000f834:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
9000f836:	699b      	ldr	r3, [r3, #24]
9000f838:	f413 7f40 	tst.w	r3, #768	; 0x300
9000f83c:	d144      	bne.n	9000f8c8 <HAL_TIM_IRQHandler+0x15c>
        HAL_TIM_OC_DelayElapsedCallback(htim);
9000f83e:	f7ff ff8d 	bl	9000f75c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
9000f842:	4620      	mov	r0, r4
9000f844:	f7ff ff8e 	bl	9000f764 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000f848:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
9000f84a:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000f84c:	7722      	strb	r2, [r4, #28]
9000f84e:	e79c      	b.n	9000f78a <HAL_TIM_IRQHandler+0x1e>
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
9000f850:	f06f 0102 	mvn.w	r1, #2
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
9000f854:	2201      	movs	r2, #1
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
9000f856:	6119      	str	r1, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
9000f858:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
9000f85a:	699b      	ldr	r3, [r3, #24]
9000f85c:	0799      	lsls	r1, r3, #30
9000f85e:	d130      	bne.n	9000f8c2 <HAL_TIM_IRQHandler+0x156>
          HAL_TIM_OC_DelayElapsedCallback(htim);
9000f860:	f7ff ff7c 	bl	9000f75c <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
9000f864:	4620      	mov	r0, r4
9000f866:	f7ff ff7d 	bl	9000f764 <HAL_TIM_PWM_PulseFinishedCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000f86a:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
9000f86c:	6823      	ldr	r3, [r4, #0]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000f86e:	7722      	strb	r2, [r4, #28]
9000f870:	e785      	b.n	9000f77e <HAL_TIM_IRQHandler+0x12>
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
9000f872:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
9000f876:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
9000f878:	611a      	str	r2, [r3, #16]
}
9000f87a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
9000f87e:	f000 b82d 	b.w	9000f8dc <HAL_TIMEx_CommutCallback>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
9000f882:	f06f 0201 	mvn.w	r2, #1
      HAL_TIM_PeriodElapsedCallback(htim);
9000f886:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
9000f888:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
9000f88a:	f7f5 fdbd 	bl	90005408 <HAL_TIM_PeriodElapsedCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
9000f88e:	6823      	ldr	r3, [r4, #0]
9000f890:	e78d      	b.n	9000f7ae <HAL_TIM_IRQHandler+0x42>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
9000f892:	f06f 0280 	mvn.w	r2, #128	; 0x80
      HAL_TIMEx_BreakCallback(htim);
9000f896:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
9000f898:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
9000f89a:	f000 f821 	bl	9000f8e0 <HAL_TIMEx_BreakCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK2) != RESET)
9000f89e:	6823      	ldr	r3, [r4, #0]
9000f8a0:	e78b      	b.n	9000f7ba <HAL_TIM_IRQHandler+0x4e>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
9000f8a2:	f46f 7280 	mvn.w	r2, #256	; 0x100
      HAL_TIMEx_Break2Callback(htim);
9000f8a6:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
9000f8a8:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_Break2Callback(htim);
9000f8aa:	f000 f81b 	bl	9000f8e4 <HAL_TIMEx_Break2Callback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
9000f8ae:	6823      	ldr	r3, [r4, #0]
9000f8b0:	e789      	b.n	9000f7c6 <HAL_TIM_IRQHandler+0x5a>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
9000f8b2:	f06f 0240 	mvn.w	r2, #64	; 0x40
      HAL_TIM_TriggerCallback(htim);
9000f8b6:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
9000f8b8:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
9000f8ba:	f7ff ff55 	bl	9000f768 <HAL_TIM_TriggerCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
9000f8be:	6823      	ldr	r3, [r4, #0]
9000f8c0:	e787      	b.n	9000f7d2 <HAL_TIM_IRQHandler+0x66>
          HAL_TIM_IC_CaptureCallback(htim);
9000f8c2:	f7ff ff4d 	bl	9000f760 <HAL_TIM_IC_CaptureCallback>
9000f8c6:	e7d0      	b.n	9000f86a <HAL_TIM_IRQHandler+0xfe>
        HAL_TIM_IC_CaptureCallback(htim);
9000f8c8:	f7ff ff4a 	bl	9000f760 <HAL_TIM_IC_CaptureCallback>
9000f8cc:	e7bc      	b.n	9000f848 <HAL_TIM_IRQHandler+0xdc>
        HAL_TIM_IC_CaptureCallback(htim);
9000f8ce:	f7ff ff47 	bl	9000f760 <HAL_TIM_IC_CaptureCallback>
9000f8d2:	e7a6      	b.n	9000f822 <HAL_TIM_IRQHandler+0xb6>
        HAL_TIM_IC_CaptureCallback(htim);
9000f8d4:	f7ff ff44 	bl	9000f760 <HAL_TIM_IC_CaptureCallback>
9000f8d8:	e791      	b.n	9000f7fe <HAL_TIM_IRQHandler+0x92>
9000f8da:	bf00      	nop

9000f8dc <HAL_TIMEx_CommutCallback>:
9000f8dc:	4770      	bx	lr
9000f8de:	bf00      	nop

9000f8e0 <HAL_TIMEx_BreakCallback>:
9000f8e0:	4770      	bx	lr
9000f8e2:	bf00      	nop

9000f8e4 <HAL_TIMEx_Break2Callback>:
9000f8e4:	4770      	bx	lr
9000f8e6:	bf00      	nop

9000f8e8 <HAL_UART_Transmit>:
  * @param Size    Amount of data elements (u8 or u16) to be sent.
  * @param Timeout Timeout duration.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, const uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
9000f8e8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9000f8ec:	461d      	mov	r5, r3
  const uint8_t  *pdata8bits;
  const uint16_t *pdata16bits;
  uint32_t tickstart;

  /* Check that a Tx process is not already ongoing */
  if (huart->gState == HAL_UART_STATE_READY)
9000f8ee:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
9000f8f2:	2b20      	cmp	r3, #32
9000f8f4:	f040 8091 	bne.w	9000fa1a <HAL_UART_Transmit+0x132>
  {
    if ((pData == NULL) || (Size == 0U))
9000f8f8:	4688      	mov	r8, r1
9000f8fa:	2900      	cmp	r1, #0
9000f8fc:	d03e      	beq.n	9000f97c <HAL_UART_Transmit+0x94>
9000f8fe:	fab2 f982 	clz	r9, r2
9000f902:	4616      	mov	r6, r2
9000f904:	ea4f 1959 	mov.w	r9, r9, lsr #5
9000f908:	2a00      	cmp	r2, #0
9000f90a:	d037      	beq.n	9000f97c <HAL_UART_Transmit+0x94>
    {
      return  HAL_ERROR;
    }

    huart->ErrorCode = HAL_UART_ERROR_NONE;
    huart->gState = HAL_UART_STATE_BUSY_TX;
9000f90c:	2321      	movs	r3, #33	; 0x21
9000f90e:	4604      	mov	r4, r0
    huart->ErrorCode = HAL_UART_ERROR_NONE;
9000f910:	f8c0 9090 	str.w	r9, [r0, #144]	; 0x90
    huart->gState = HAL_UART_STATE_BUSY_TX;
9000f914:	f8c0 3088 	str.w	r3, [r0, #136]	; 0x88

    /* Init tickstart for timeout management */
    tickstart = HAL_GetTick();
9000f918:	f7fa fbc6 	bl	9000a0a8 <HAL_GetTick>

    huart->TxXferSize  = Size;
    huart->TxXferCount = Size;

    /* In case of 9bits/No Parity transfer, pData needs to be handled as a uint16_t pointer */
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
9000f91c:	68a3      	ldr	r3, [r4, #8]
    tickstart = HAL_GetTick();
9000f91e:	4607      	mov	r7, r0
    huart->TxXferSize  = Size;
9000f920:	f8a4 6054 	strh.w	r6, [r4, #84]	; 0x54
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
9000f924:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
    huart->TxXferCount = Size;
9000f928:	f8a4 6056 	strh.w	r6, [r4, #86]	; 0x56
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
9000f92c:	f000 80b7 	beq.w	9000fa9e <HAL_UART_Transmit+0x1b6>
    {
      pdata8bits  = pData;
      pdata16bits = NULL;
    }

    while (huart->TxXferCount > 0U)
9000f930:	f8b4 3056 	ldrh.w	r3, [r4, #86]	; 0x56
  */
HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus Status,
                                              uint32_t Tickstart, uint32_t Timeout)
{
  /* Wait until flag is set */
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
9000f934:	6820      	ldr	r0, [r4, #0]
    while (huart->TxXferCount > 0U)
9000f936:	b29b      	uxth	r3, r3
9000f938:	b1ab      	cbz	r3, 9000f966 <HAL_UART_Transmit+0x7e>
9000f93a:	1c6a      	adds	r2, r5, #1
9000f93c:	d121      	bne.n	9000f982 <HAL_UART_Transmit+0x9a>
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
9000f93e:	69c2      	ldr	r2, [r0, #28]
9000f940:	0613      	lsls	r3, r2, #24
9000f942:	d5fc      	bpl.n	9000f93e <HAL_UART_Transmit+0x56>
      if (pdata8bits == NULL)
9000f944:	f1b8 0f00 	cmp.w	r8, #0
9000f948:	d062      	beq.n	9000fa10 <HAL_UART_Transmit+0x128>
        huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
9000f94a:	f818 3b01 	ldrb.w	r3, [r8], #1
9000f94e:	6283      	str	r3, [r0, #40]	; 0x28
      huart->TxXferCount--;
9000f950:	f8b4 3056 	ldrh.w	r3, [r4, #86]	; 0x56
9000f954:	3b01      	subs	r3, #1
9000f956:	b29b      	uxth	r3, r3
9000f958:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
    while (huart->TxXferCount > 0U)
9000f95c:	f8b4 3056 	ldrh.w	r3, [r4, #86]	; 0x56
9000f960:	b29b      	uxth	r3, r3
9000f962:	2b00      	cmp	r3, #0
9000f964:	d1e9      	bne.n	9000f93a <HAL_UART_Transmit+0x52>
9000f966:	1c69      	adds	r1, r5, #1
9000f968:	d15a      	bne.n	9000fa20 <HAL_UART_Transmit+0x138>
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
9000f96a:	69c3      	ldr	r3, [r0, #28]
9000f96c:	065a      	lsls	r2, r3, #25
9000f96e:	d5fc      	bpl.n	9000f96a <HAL_UART_Transmit+0x82>
    huart->gState = HAL_UART_STATE_READY;
9000f970:	2320      	movs	r3, #32
    return HAL_OK;
9000f972:	2000      	movs	r0, #0
    huart->gState = HAL_UART_STATE_READY;
9000f974:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
}
9000f978:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
      return  HAL_ERROR;
9000f97c:	2001      	movs	r0, #1
}
9000f97e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
9000f982:	69c3      	ldr	r3, [r0, #28]
9000f984:	061e      	lsls	r6, r3, #24
9000f986:	d4dd      	bmi.n	9000f944 <HAL_UART_Transmit+0x5c>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000f988:	f7fa fb8e 	bl	9000a0a8 <HAL_GetTick>
9000f98c:	1bc0      	subs	r0, r0, r7
9000f98e:	4285      	cmp	r5, r0
9000f990:	d338      	bcc.n	9000fa04 <HAL_UART_Transmit+0x11c>
9000f992:	2d00      	cmp	r5, #0
9000f994:	d036      	beq.n	9000fa04 <HAL_UART_Transmit+0x11c>
      {

        return HAL_TIMEOUT;
      }

      if (READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U)
9000f996:	6823      	ldr	r3, [r4, #0]
9000f998:	681a      	ldr	r2, [r3, #0]
9000f99a:	4618      	mov	r0, r3
9000f99c:	0752      	lsls	r2, r2, #29
9000f99e:	d5cc      	bpl.n	9000f93a <HAL_UART_Transmit+0x52>
      {
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_ORE) == SET)
9000f9a0:	69da      	ldr	r2, [r3, #28]
9000f9a2:	0716      	lsls	r6, r2, #28
9000f9a4:	f100 808b 	bmi.w	9000fabe <HAL_UART_Transmit+0x1d6>
           /* Process Unlocked */
           __HAL_UNLOCK(huart);

           return HAL_ERROR;
        }
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
9000f9a8:	69da      	ldr	r2, [r3, #28]
9000f9aa:	0511      	lsls	r1, r2, #20
9000f9ac:	d5c5      	bpl.n	9000f93a <HAL_UART_Transmit+0x52>
        {
          /* Clear Receiver Timeout flag*/
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
9000f9ae:	f44f 6200 	mov.w	r2, #2048	; 0x800
9000f9b2:	621a      	str	r2, [r3, #32]
 */
__STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
{
    uint32_t result;

   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000f9b4:	e853 2f00 	ldrex	r2, [r3]
  * @retval None
  */
static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
{
  /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
9000f9b8:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 */
__STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
{
   uint32_t result;

   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000f9bc:	e843 2100 	strex	r1, r2, [r3]
9000f9c0:	b139      	cbz	r1, 9000f9d2 <HAL_UART_Transmit+0xea>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000f9c2:	e853 2f00 	ldrex	r2, [r3]
9000f9c6:	f422 7290 	bic.w	r2, r2, #288	; 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000f9ca:	e843 2100 	strex	r1, r2, [r3]
9000f9ce:	2900      	cmp	r1, #0
9000f9d0:	d1f7      	bne.n	9000f9c2 <HAL_UART_Transmit+0xda>
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
9000f9d2:	4863      	ldr	r0, [pc, #396]	; (9000fb60 <HAL_UART_Transmit+0x278>)
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000f9d4:	f103 0208 	add.w	r2, r3, #8
9000f9d8:	e852 2f00 	ldrex	r2, [r2]
9000f9dc:	4002      	ands	r2, r0
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000f9de:	f103 0508 	add.w	r5, r3, #8
9000f9e2:	e845 2100 	strex	r1, r2, [r5]
9000f9e6:	2900      	cmp	r1, #0
9000f9e8:	d1f4      	bne.n	9000f9d4 <HAL_UART_Transmit+0xec>

  /* In case of reception waiting for IDLE event, disable also the IDLE IE interrupt source */
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
9000f9ea:	6ee2      	ldr	r2, [r4, #108]	; 0x6c
9000f9ec:	2a01      	cmp	r2, #1
9000f9ee:	d05d      	beq.n	9000faac <HAL_UART_Transmit+0x1c4>
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
  }

  /* At end of Rx process, restore huart->RxState to Ready */
  huart->RxState = HAL_UART_STATE_READY;
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000f9f0:	2300      	movs	r3, #0
  huart->RxState = HAL_UART_STATE_READY;
9000f9f2:	2220      	movs	r2, #32

  /* Reset RxIsr function pointer */
  huart->RxISR = NULL;
9000f9f4:	6763      	str	r3, [r4, #116]	; 0x74
  huart->RxState = HAL_UART_STATE_READY;
9000f9f6:	f8c4 208c 	str.w	r2, [r4, #140]	; 0x8c
          __HAL_UNLOCK(huart);
9000f9fa:	f884 3084 	strb.w	r3, [r4, #132]	; 0x84
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000f9fe:	66e3      	str	r3, [r4, #108]	; 0x6c
          huart->ErrorCode = HAL_UART_ERROR_RTO;
9000fa00:	f8c4 2090 	str.w	r2, [r4, #144]	; 0x90
      huart->gState = HAL_UART_STATE_READY;
9000fa04:	2320      	movs	r3, #32
      return HAL_TIMEOUT;
9000fa06:	2003      	movs	r0, #3
      huart->gState = HAL_UART_STATE_READY;
9000fa08:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
}
9000fa0c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
        huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
9000fa10:	f839 3b02 	ldrh.w	r3, [r9], #2
9000fa14:	f3c3 0308 	ubfx	r3, r3, #0, #9
9000fa18:	e799      	b.n	9000f94e <HAL_UART_Transmit+0x66>
    return HAL_BUSY;
9000fa1a:	2002      	movs	r0, #2
}
9000fa1c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
9000fa20:	69c3      	ldr	r3, [r0, #28]
9000fa22:	065b      	lsls	r3, r3, #25
9000fa24:	d4a4      	bmi.n	9000f970 <HAL_UART_Transmit+0x88>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000fa26:	f7fa fb3f 	bl	9000a0a8 <HAL_GetTick>
9000fa2a:	1bc0      	subs	r0, r0, r7
9000fa2c:	4285      	cmp	r5, r0
9000fa2e:	d3e9      	bcc.n	9000fa04 <HAL_UART_Transmit+0x11c>
9000fa30:	2d00      	cmp	r5, #0
9000fa32:	d0e7      	beq.n	9000fa04 <HAL_UART_Transmit+0x11c>
      if (READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U)
9000fa34:	6823      	ldr	r3, [r4, #0]
9000fa36:	681a      	ldr	r2, [r3, #0]
9000fa38:	4618      	mov	r0, r3
9000fa3a:	0751      	lsls	r1, r2, #29
9000fa3c:	d593      	bpl.n	9000f966 <HAL_UART_Transmit+0x7e>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_ORE) == SET)
9000fa3e:	69da      	ldr	r2, [r3, #28]
9000fa40:	0712      	lsls	r2, r2, #28
9000fa42:	d46a      	bmi.n	9000fb1a <HAL_UART_Transmit+0x232>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
9000fa44:	69da      	ldr	r2, [r3, #28]
9000fa46:	0516      	lsls	r6, r2, #20
9000fa48:	d58d      	bpl.n	9000f966 <HAL_UART_Transmit+0x7e>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
9000fa4a:	f44f 6200 	mov.w	r2, #2048	; 0x800
9000fa4e:	621a      	str	r2, [r3, #32]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000fa50:	e853 2f00 	ldrex	r2, [r3]
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
9000fa54:	f422 7290 	bic.w	r2, r2, #288	; 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000fa58:	e843 2100 	strex	r1, r2, [r3]
9000fa5c:	b139      	cbz	r1, 9000fa6e <HAL_UART_Transmit+0x186>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000fa5e:	e853 2f00 	ldrex	r2, [r3]
9000fa62:	f422 7290 	bic.w	r2, r2, #288	; 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000fa66:	e843 2100 	strex	r1, r2, [r3]
9000fa6a:	2900      	cmp	r1, #0
9000fa6c:	d1f7      	bne.n	9000fa5e <HAL_UART_Transmit+0x176>
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
9000fa6e:	493c      	ldr	r1, [pc, #240]	; (9000fb60 <HAL_UART_Transmit+0x278>)
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000fa70:	f103 0208 	add.w	r2, r3, #8
9000fa74:	e852 2f00 	ldrex	r2, [r2]
9000fa78:	400a      	ands	r2, r1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000fa7a:	f103 0508 	add.w	r5, r3, #8
9000fa7e:	e845 2000 	strex	r0, r2, [r5]
9000fa82:	2800      	cmp	r0, #0
9000fa84:	d1f4      	bne.n	9000fa70 <HAL_UART_Transmit+0x188>
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
9000fa86:	6ee2      	ldr	r2, [r4, #108]	; 0x6c
9000fa88:	2a01      	cmp	r2, #1
9000fa8a:	d1b1      	bne.n	9000f9f0 <HAL_UART_Transmit+0x108>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000fa8c:	e853 2f00 	ldrex	r2, [r3]
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
9000fa90:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000fa94:	e843 2100 	strex	r1, r2, [r3]
9000fa98:	2900      	cmp	r1, #0
9000fa9a:	d1f7      	bne.n	9000fa8c <HAL_UART_Transmit+0x1a4>
9000fa9c:	e7a8      	b.n	9000f9f0 <HAL_UART_Transmit+0x108>
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
9000fa9e:	6923      	ldr	r3, [r4, #16]
9000faa0:	2b00      	cmp	r3, #0
9000faa2:	f47f af45 	bne.w	9000f930 <HAL_UART_Transmit+0x48>
9000faa6:	46c1      	mov	r9, r8
      pdata8bits  = NULL;
9000faa8:	4698      	mov	r8, r3
9000faaa:	e741      	b.n	9000f930 <HAL_UART_Transmit+0x48>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000faac:	e853 2f00 	ldrex	r2, [r3]
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
9000fab0:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000fab4:	e843 2100 	strex	r1, r2, [r3]
9000fab8:	2900      	cmp	r1, #0
9000faba:	d1f7      	bne.n	9000faac <HAL_UART_Transmit+0x1c4>
9000fabc:	e798      	b.n	9000f9f0 <HAL_UART_Transmit+0x108>
           __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
9000fabe:	2208      	movs	r2, #8
9000fac0:	621a      	str	r2, [r3, #32]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000fac2:	e853 2f00 	ldrex	r2, [r3]
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
9000fac6:	f422 7290 	bic.w	r2, r2, #288	; 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000faca:	e843 2100 	strex	r1, r2, [r3]
9000face:	2900      	cmp	r1, #0
9000fad0:	d1f7      	bne.n	9000fac2 <HAL_UART_Transmit+0x1da>
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
9000fad2:	4823      	ldr	r0, [pc, #140]	; (9000fb60 <HAL_UART_Transmit+0x278>)
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000fad4:	f103 0208 	add.w	r2, r3, #8
9000fad8:	e852 2f00 	ldrex	r2, [r2]
9000fadc:	4002      	ands	r2, r0
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000fade:	f103 0508 	add.w	r5, r3, #8
9000fae2:	e845 2100 	strex	r1, r2, [r5]
9000fae6:	2900      	cmp	r1, #0
9000fae8:	d1f4      	bne.n	9000fad4 <HAL_UART_Transmit+0x1ec>
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
9000faea:	6ee2      	ldr	r2, [r4, #108]	; 0x6c
9000faec:	2a01      	cmp	r2, #1
9000faee:	d00b      	beq.n	9000fb08 <HAL_UART_Transmit+0x220>
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000faf0:	2300      	movs	r3, #0
  huart->RxState = HAL_UART_STATE_READY;
9000faf2:	2120      	movs	r1, #32
           huart->ErrorCode = HAL_UART_ERROR_ORE;
9000faf4:	2208      	movs	r2, #8
  huart->RxState = HAL_UART_STATE_READY;
9000faf6:	f8c4 108c 	str.w	r1, [r4, #140]	; 0x8c
  huart->RxISR = NULL;
9000fafa:	6763      	str	r3, [r4, #116]	; 0x74
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000fafc:	66e3      	str	r3, [r4, #108]	; 0x6c
           __HAL_UNLOCK(huart);
9000fafe:	f884 3084 	strb.w	r3, [r4, #132]	; 0x84
           huart->ErrorCode = HAL_UART_ERROR_ORE;
9000fb02:	f8c4 2090 	str.w	r2, [r4, #144]	; 0x90
           return HAL_ERROR;
9000fb06:	e77d      	b.n	9000fa04 <HAL_UART_Transmit+0x11c>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000fb08:	e853 2f00 	ldrex	r2, [r3]
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
9000fb0c:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000fb10:	e843 2100 	strex	r1, r2, [r3]
9000fb14:	2900      	cmp	r1, #0
9000fb16:	d1f7      	bne.n	9000fb08 <HAL_UART_Transmit+0x220>
9000fb18:	e7ea      	b.n	9000faf0 <HAL_UART_Transmit+0x208>
           __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
9000fb1a:	2208      	movs	r2, #8
9000fb1c:	621a      	str	r2, [r3, #32]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000fb1e:	e853 2f00 	ldrex	r2, [r3]
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
9000fb22:	f422 7290 	bic.w	r2, r2, #288	; 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000fb26:	e843 2100 	strex	r1, r2, [r3]
9000fb2a:	2900      	cmp	r1, #0
9000fb2c:	d1f7      	bne.n	9000fb1e <HAL_UART_Transmit+0x236>
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
9000fb2e:	490c      	ldr	r1, [pc, #48]	; (9000fb60 <HAL_UART_Transmit+0x278>)
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000fb30:	f103 0208 	add.w	r2, r3, #8
9000fb34:	e852 2f00 	ldrex	r2, [r2]
9000fb38:	400a      	ands	r2, r1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000fb3a:	f103 0508 	add.w	r5, r3, #8
9000fb3e:	e845 2000 	strex	r0, r2, [r5]
9000fb42:	2800      	cmp	r0, #0
9000fb44:	d1f4      	bne.n	9000fb30 <HAL_UART_Transmit+0x248>
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
9000fb46:	6ee2      	ldr	r2, [r4, #108]	; 0x6c
9000fb48:	2a01      	cmp	r2, #1
9000fb4a:	d1d1      	bne.n	9000faf0 <HAL_UART_Transmit+0x208>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000fb4c:	e853 2f00 	ldrex	r2, [r3]
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
9000fb50:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000fb54:	e843 2100 	strex	r1, r2, [r3]
9000fb58:	2900      	cmp	r1, #0
9000fb5a:	d1f7      	bne.n	9000fb4c <HAL_UART_Transmit+0x264>
9000fb5c:	e7c8      	b.n	9000faf0 <HAL_UART_Transmit+0x208>
9000fb5e:	bf00      	nop
9000fb60:	effffffe 	.word	0xeffffffe

9000fb64 <UART_SetConfig>:
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
9000fb64:	6901      	ldr	r1, [r0, #16]
9000fb66:	6882      	ldr	r2, [r0, #8]
  if (UART_INSTANCE_LOWPOWER(huart))
9000fb68:	6803      	ldr	r3, [r0, #0]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
9000fb6a:	430a      	orrs	r2, r1
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
9000fb6c:	49c0      	ldr	r1, [pc, #768]	; (9000fe70 <UART_SetConfig+0x30c>)
{
9000fb6e:	b530      	push	{r4, r5, lr}
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
9000fb70:	6945      	ldr	r5, [r0, #20]
{
9000fb72:	4604      	mov	r4, r0
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
9000fb74:	69c0      	ldr	r0, [r0, #28]
{
9000fb76:	b087      	sub	sp, #28
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
9000fb78:	432a      	orrs	r2, r5
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
9000fb7a:	681d      	ldr	r5, [r3, #0]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
9000fb7c:	4302      	orrs	r2, r0
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
9000fb7e:	4029      	ands	r1, r5
  if (!(UART_INSTANCE_LOWPOWER(huart)))
9000fb80:	4dbc      	ldr	r5, [pc, #752]	; (9000fe74 <UART_SetConfig+0x310>)
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
9000fb82:	430a      	orrs	r2, r1
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
9000fb84:	68e1      	ldr	r1, [r4, #12]
  if (!(UART_INSTANCE_LOWPOWER(huart)))
9000fb86:	42ab      	cmp	r3, r5
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
9000fb88:	601a      	str	r2, [r3, #0]
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
9000fb8a:	685a      	ldr	r2, [r3, #4]
9000fb8c:	f422 5240 	bic.w	r2, r2, #12288	; 0x3000
9000fb90:	ea42 0201 	orr.w	r2, r2, r1
  tmpreg = (uint32_t)huart->Init.HwFlowCtl;
9000fb94:	69a1      	ldr	r1, [r4, #24]
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
9000fb96:	605a      	str	r2, [r3, #4]
  if (!(UART_INSTANCE_LOWPOWER(huart)))
9000fb98:	f000 80e0 	beq.w	9000fd5c <UART_SetConfig+0x1f8>
    tmpreg |= huart->Init.OneBitSampling;
9000fb9c:	6a22      	ldr	r2, [r4, #32]
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
9000fb9e:	689d      	ldr	r5, [r3, #8]
    tmpreg |= huart->Init.OneBitSampling;
9000fba0:	4311      	orrs	r1, r2
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
9000fba2:	4ab5      	ldr	r2, [pc, #724]	; (9000fe78 <UART_SetConfig+0x314>)
9000fba4:	402a      	ands	r2, r5
  MODIFY_REG(huart->Instance->PRESC, USART_PRESC_PRESCALER, huart->Init.ClockPrescaler);
9000fba6:	6a65      	ldr	r5, [r4, #36]	; 0x24
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
9000fba8:	4311      	orrs	r1, r2
9000fbaa:	6099      	str	r1, [r3, #8]
  MODIFY_REG(huart->Instance->PRESC, USART_PRESC_PRESCALER, huart->Init.ClockPrescaler);
9000fbac:	6ada      	ldr	r2, [r3, #44]	; 0x2c
9000fbae:	f022 020f 	bic.w	r2, r2, #15
9000fbb2:	432a      	orrs	r2, r5
9000fbb4:	62da      	str	r2, [r3, #44]	; 0x2c
  UART_GETCLOCKSOURCE(huart, clocksource);
9000fbb6:	4ab1      	ldr	r2, [pc, #708]	; (9000fe7c <UART_SetConfig+0x318>)
9000fbb8:	4293      	cmp	r3, r2
9000fbba:	d023      	beq.n	9000fc04 <UART_SetConfig+0xa0>
9000fbbc:	4ab0      	ldr	r2, [pc, #704]	; (9000fe80 <UART_SetConfig+0x31c>)
9000fbbe:	4293      	cmp	r3, r2
9000fbc0:	d076      	beq.n	9000fcb0 <UART_SetConfig+0x14c>
9000fbc2:	4ab0      	ldr	r2, [pc, #704]	; (9000fe84 <UART_SetConfig+0x320>)
9000fbc4:	4293      	cmp	r3, r2
9000fbc6:	f000 818f 	beq.w	9000fee8 <UART_SetConfig+0x384>
9000fbca:	4aaf      	ldr	r2, [pc, #700]	; (9000fe88 <UART_SetConfig+0x324>)
9000fbcc:	4293      	cmp	r3, r2
9000fbce:	f000 81e1 	beq.w	9000ff94 <UART_SetConfig+0x430>
9000fbd2:	4aae      	ldr	r2, [pc, #696]	; (9000fe8c <UART_SetConfig+0x328>)
9000fbd4:	4293      	cmp	r3, r2
9000fbd6:	f000 8121 	beq.w	9000fe1c <UART_SetConfig+0x2b8>
9000fbda:	4aad      	ldr	r2, [pc, #692]	; (9000fe90 <UART_SetConfig+0x32c>)
9000fbdc:	4293      	cmp	r3, r2
9000fbde:	f000 81e3 	beq.w	9000ffa8 <UART_SetConfig+0x444>
9000fbe2:	4aac      	ldr	r2, [pc, #688]	; (9000fe94 <UART_SetConfig+0x330>)
9000fbe4:	4293      	cmp	r3, r2
9000fbe6:	f000 8234 	beq.w	90010052 <UART_SetConfig+0x4ee>
9000fbea:	4aab      	ldr	r2, [pc, #684]	; (9000fe98 <UART_SetConfig+0x334>)
9000fbec:	4293      	cmp	r3, r2
9000fbee:	f000 81e7 	beq.w	9000ffc0 <UART_SetConfig+0x45c>
        ret = HAL_ERROR;
9000fbf2:	2001      	movs	r0, #1
  huart->RxISR = NULL;
9000fbf4:	2300      	movs	r3, #0
  huart->NbRxDataToProcess = 1;
9000fbf6:	f04f 1201 	mov.w	r2, #65537	; 0x10001
  huart->RxISR = NULL;
9000fbfa:	6763      	str	r3, [r4, #116]	; 0x74
  huart->NbRxDataToProcess = 1;
9000fbfc:	66a2      	str	r2, [r4, #104]	; 0x68
  huart->TxISR = NULL;
9000fbfe:	67a3      	str	r3, [r4, #120]	; 0x78
}
9000fc00:	b007      	add	sp, #28
9000fc02:	bd30      	pop	{r4, r5, pc}
  UART_GETCLOCKSOURCE(huart, clocksource);
9000fc04:	4ba5      	ldr	r3, [pc, #660]	; (9000fe9c <UART_SetConfig+0x338>)
9000fc06:	6d5b      	ldr	r3, [r3, #84]	; 0x54
9000fc08:	f003 0338 	and.w	r3, r3, #56	; 0x38
9000fc0c:	2b28      	cmp	r3, #40	; 0x28
9000fc0e:	d8f0      	bhi.n	9000fbf2 <UART_SetConfig+0x8e>
9000fc10:	4aa3      	ldr	r2, [pc, #652]	; (9000fea0 <UART_SetConfig+0x33c>)
9000fc12:	5cd3      	ldrb	r3, [r2, r3]
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
9000fc14:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
9000fc18:	d055      	beq.n	9000fcc6 <UART_SetConfig+0x162>
    switch (clocksource)
9000fc1a:	2b20      	cmp	r3, #32
9000fc1c:	f200 814a 	bhi.w	9000feb4 <UART_SetConfig+0x350>
9000fc20:	2b20      	cmp	r3, #32
9000fc22:	d8e6      	bhi.n	9000fbf2 <UART_SetConfig+0x8e>
9000fc24:	a201      	add	r2, pc, #4	; (adr r2, 9000fc2c <UART_SetConfig+0xc8>)
9000fc26:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
9000fc2a:	bf00      	nop
9000fc2c:	9000fe6b 	.word	0x9000fe6b
9000fc30:	9000fe65 	.word	0x9000fe65
9000fc34:	9000fbf3 	.word	0x9000fbf3
9000fc38:	9000fbf3 	.word	0x9000fbf3
9000fc3c:	9000fe55 	.word	0x9000fe55
9000fc40:	9000fbf3 	.word	0x9000fbf3
9000fc44:	9000fbf3 	.word	0x9000fbf3
9000fc48:	9000fbf3 	.word	0x9000fbf3
9000fc4c:	9000fe47 	.word	0x9000fe47
9000fc50:	9000fbf3 	.word	0x9000fbf3
9000fc54:	9000fbf3 	.word	0x9000fbf3
9000fc58:	9000fbf3 	.word	0x9000fbf3
9000fc5c:	9000fbf3 	.word	0x9000fbf3
9000fc60:	9000fbf3 	.word	0x9000fbf3
9000fc64:	9000fbf3 	.word	0x9000fbf3
9000fc68:	9000fbf3 	.word	0x9000fbf3
9000fc6c:	9000fe31 	.word	0x9000fe31
9000fc70:	9000fbf3 	.word	0x9000fbf3
9000fc74:	9000fbf3 	.word	0x9000fbf3
9000fc78:	9000fbf3 	.word	0x9000fbf3
9000fc7c:	9000fbf3 	.word	0x9000fbf3
9000fc80:	9000fbf3 	.word	0x9000fbf3
9000fc84:	9000fbf3 	.word	0x9000fbf3
9000fc88:	9000fbf3 	.word	0x9000fbf3
9000fc8c:	9000fbf3 	.word	0x9000fbf3
9000fc90:	9000fbf3 	.word	0x9000fbf3
9000fc94:	9000fbf3 	.word	0x9000fbf3
9000fc98:	9000fbf3 	.word	0x9000fbf3
9000fc9c:	9000fbf3 	.word	0x9000fbf3
9000fca0:	9000fbf3 	.word	0x9000fbf3
9000fca4:	9000fbf3 	.word	0x9000fbf3
9000fca8:	9000fbf3 	.word	0x9000fbf3
9000fcac:	9000ffd5 	.word	0x9000ffd5
  UART_GETCLOCKSOURCE(huart, clocksource);
9000fcb0:	4b7a      	ldr	r3, [pc, #488]	; (9000fe9c <UART_SetConfig+0x338>)
9000fcb2:	6d5b      	ldr	r3, [r3, #84]	; 0x54
9000fcb4:	f003 0307 	and.w	r3, r3, #7
9000fcb8:	2b05      	cmp	r3, #5
9000fcba:	d89a      	bhi.n	9000fbf2 <UART_SetConfig+0x8e>
9000fcbc:	4a79      	ldr	r2, [pc, #484]	; (9000fea4 <UART_SetConfig+0x340>)
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
9000fcbe:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
9000fcc2:	5cd3      	ldrb	r3, [r2, r3]
9000fcc4:	d1a9      	bne.n	9000fc1a <UART_SetConfig+0xb6>
    switch (clocksource)
9000fcc6:	2b20      	cmp	r3, #32
9000fcc8:	f200 8145 	bhi.w	9000ff56 <UART_SetConfig+0x3f2>
9000fccc:	2b20      	cmp	r3, #32
9000fcce:	d890      	bhi.n	9000fbf2 <UART_SetConfig+0x8e>
9000fcd0:	a201      	add	r2, pc, #4	; (adr r2, 9000fcd8 <UART_SetConfig+0x174>)
9000fcd2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
9000fcd6:	bf00      	nop
9000fcd8:	9001003f 	.word	0x9001003f
9000fcdc:	90010039 	.word	0x90010039
9000fce0:	9000fbf3 	.word	0x9000fbf3
9000fce4:	9000fbf3 	.word	0x9000fbf3
9000fce8:	90010045 	.word	0x90010045
9000fcec:	9000fbf3 	.word	0x9000fbf3
9000fcf0:	9000fbf3 	.word	0x9000fbf3
9000fcf4:	9000fbf3 	.word	0x9000fbf3
9000fcf8:	90010027 	.word	0x90010027
9000fcfc:	9000fbf3 	.word	0x9000fbf3
9000fd00:	9000fbf3 	.word	0x9000fbf3
9000fd04:	9000fbf3 	.word	0x9000fbf3
9000fd08:	9000fbf3 	.word	0x9000fbf3
9000fd0c:	9000fbf3 	.word	0x9000fbf3
9000fd10:	9000fbf3 	.word	0x9000fbf3
9000fd14:	9000fbf3 	.word	0x9000fbf3
9000fd18:	90010013 	.word	0x90010013
9000fd1c:	9000fbf3 	.word	0x9000fbf3
9000fd20:	9000fbf3 	.word	0x9000fbf3
9000fd24:	9000fbf3 	.word	0x9000fbf3
9000fd28:	9000fbf3 	.word	0x9000fbf3
9000fd2c:	9000fbf3 	.word	0x9000fbf3
9000fd30:	9000fbf3 	.word	0x9000fbf3
9000fd34:	9000fbf3 	.word	0x9000fbf3
9000fd38:	9000fbf3 	.word	0x9000fbf3
9000fd3c:	9000fbf3 	.word	0x9000fbf3
9000fd40:	9000fbf3 	.word	0x9000fbf3
9000fd44:	9000fbf3 	.word	0x9000fbf3
9000fd48:	9000fbf3 	.word	0x9000fbf3
9000fd4c:	9000fbf3 	.word	0x9000fbf3
9000fd50:	9000fbf3 	.word	0x9000fbf3
9000fd54:	9000fbf3 	.word	0x9000fbf3
9000fd58:	9001004f 	.word	0x9001004f
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
9000fd5c:	6898      	ldr	r0, [r3, #8]
9000fd5e:	4a46      	ldr	r2, [pc, #280]	; (9000fe78 <UART_SetConfig+0x314>)
9000fd60:	4002      	ands	r2, r0
  UART_GETCLOCKSOURCE(huart, clocksource);
9000fd62:	484e      	ldr	r0, [pc, #312]	; (9000fe9c <UART_SetConfig+0x338>)
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
9000fd64:	430a      	orrs	r2, r1
9000fd66:	609a      	str	r2, [r3, #8]
  MODIFY_REG(huart->Instance->PRESC, USART_PRESC_PRESCALER, huart->Init.ClockPrescaler);
9000fd68:	6ada      	ldr	r2, [r3, #44]	; 0x2c
9000fd6a:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000fd6c:	f022 020f 	bic.w	r2, r2, #15
9000fd70:	430a      	orrs	r2, r1
9000fd72:	62da      	str	r2, [r3, #44]	; 0x2c
  UART_GETCLOCKSOURCE(huart, clocksource);
9000fd74:	6d83      	ldr	r3, [r0, #88]	; 0x58
9000fd76:	f003 0307 	and.w	r3, r3, #7
9000fd7a:	2b05      	cmp	r3, #5
9000fd7c:	f63f af39 	bhi.w	9000fbf2 <UART_SetConfig+0x8e>
9000fd80:	4a49      	ldr	r2, [pc, #292]	; (9000fea8 <UART_SetConfig+0x344>)
9000fd82:	5cd3      	ldrb	r3, [r2, r3]
    switch (clocksource)
9000fd84:	2b20      	cmp	r3, #32
9000fd86:	f200 80b9 	bhi.w	9000fefc <UART_SetConfig+0x398>
9000fd8a:	2b01      	cmp	r3, #1
9000fd8c:	f67f af31 	bls.w	9000fbf2 <UART_SetConfig+0x8e>
9000fd90:	3b02      	subs	r3, #2
9000fd92:	2b1e      	cmp	r3, #30
9000fd94:	f63f af2d 	bhi.w	9000fbf2 <UART_SetConfig+0x8e>
9000fd98:	a201      	add	r2, pc, #4	; (adr r2, 9000fda0 <UART_SetConfig+0x23c>)
9000fd9a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
9000fd9e:	bf00      	nop
9000fda0:	90010009 	.word	0x90010009
9000fda4:	9000fbf3 	.word	0x9000fbf3
9000fda8:	9000ffff 	.word	0x9000ffff
9000fdac:	9000fbf3 	.word	0x9000fbf3
9000fdb0:	9000fbf3 	.word	0x9000fbf3
9000fdb4:	9000fbf3 	.word	0x9000fbf3
9000fdb8:	9000ffed 	.word	0x9000ffed
9000fdbc:	9000fbf3 	.word	0x9000fbf3
9000fdc0:	9000fbf3 	.word	0x9000fbf3
9000fdc4:	9000fbf3 	.word	0x9000fbf3
9000fdc8:	9000fbf3 	.word	0x9000fbf3
9000fdcc:	9000fbf3 	.word	0x9000fbf3
9000fdd0:	9000fbf3 	.word	0x9000fbf3
9000fdd4:	9000fbf3 	.word	0x9000fbf3
9000fdd8:	9000ffd9 	.word	0x9000ffd9
9000fddc:	9000fbf3 	.word	0x9000fbf3
9000fde0:	9000fbf3 	.word	0x9000fbf3
9000fde4:	9000fbf3 	.word	0x9000fbf3
9000fde8:	9000fbf3 	.word	0x9000fbf3
9000fdec:	9000fbf3 	.word	0x9000fbf3
9000fdf0:	9000fbf3 	.word	0x9000fbf3
9000fdf4:	9000fbf3 	.word	0x9000fbf3
9000fdf8:	9000fbf3 	.word	0x9000fbf3
9000fdfc:	9000fbf3 	.word	0x9000fbf3
9000fe00:	9000fbf3 	.word	0x9000fbf3
9000fe04:	9000fbf3 	.word	0x9000fbf3
9000fe08:	9000fbf3 	.word	0x9000fbf3
9000fe0c:	9000fbf3 	.word	0x9000fbf3
9000fe10:	9000fbf3 	.word	0x9000fbf3
9000fe14:	9000fbf3 	.word	0x9000fbf3
9000fe18:	9001000f 	.word	0x9001000f
  UART_GETCLOCKSOURCE(huart, clocksource);
9000fe1c:	4b1f      	ldr	r3, [pc, #124]	; (9000fe9c <UART_SetConfig+0x338>)
9000fe1e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
9000fe20:	f003 0307 	and.w	r3, r3, #7
9000fe24:	2b05      	cmp	r3, #5
9000fe26:	f63f aee4 	bhi.w	9000fbf2 <UART_SetConfig+0x8e>
9000fe2a:	4a20      	ldr	r2, [pc, #128]	; (9000feac <UART_SetConfig+0x348>)
9000fe2c:	5cd3      	ldrb	r3, [r2, r3]
9000fe2e:	e6f1      	b.n	9000fc14 <UART_SetConfig+0xb0>
        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000fe30:	4b1a      	ldr	r3, [pc, #104]	; (9000fe9c <UART_SetConfig+0x338>)
9000fe32:	681a      	ldr	r2, [r3, #0]
9000fe34:	0692      	lsls	r2, r2, #26
9000fe36:	f140 80c1 	bpl.w	9000ffbc <UART_SetConfig+0x458>
          pclk = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3U));
9000fe3a:	681b      	ldr	r3, [r3, #0]
9000fe3c:	481c      	ldr	r0, [pc, #112]	; (9000feb0 <UART_SetConfig+0x34c>)
9000fe3e:	f3c3 03c1 	ubfx	r3, r3, #3, #2
9000fe42:	40d8      	lsrs	r0, r3
    if (pclk != 0U)
9000fe44:	e03b      	b.n	9000febe <UART_SetConfig+0x35a>
        HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
9000fe46:	a803      	add	r0, sp, #12
9000fe48:	f7fe ffd4 	bl	9000edf4 <HAL_RCCEx_GetPLL3ClockFreq>
        pclk = pll3_clocks.PLL3_Q_Frequency;
9000fe4c:	9804      	ldr	r0, [sp, #16]
    if (pclk != 0U)
9000fe4e:	b938      	cbnz	r0, 9000fe60 <UART_SetConfig+0x2fc>
        ret = HAL_ERROR;
9000fe50:	2000      	movs	r0, #0
9000fe52:	e6cf      	b.n	9000fbf4 <UART_SetConfig+0x90>
        HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
9000fe54:	4668      	mov	r0, sp
9000fe56:	f7fe ff21 	bl	9000ec9c <HAL_RCCEx_GetPLL2ClockFreq>
        pclk = pll2_clocks.PLL2_Q_Frequency;
9000fe5a:	9801      	ldr	r0, [sp, #4]
    if (pclk != 0U)
9000fe5c:	2800      	cmp	r0, #0
9000fe5e:	d0f7      	beq.n	9000fe50 <UART_SetConfig+0x2ec>
      usartdiv = (uint32_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
9000fe60:	6a65      	ldr	r5, [r4, #36]	; 0x24
9000fe62:	e02c      	b.n	9000febe <UART_SetConfig+0x35a>
        pclk = HAL_RCC_GetPCLK2Freq();
9000fe64:	f7fd ffa0 	bl	9000dda8 <HAL_RCC_GetPCLK2Freq>
        break;
9000fe68:	e7f1      	b.n	9000fe4e <UART_SetConfig+0x2ea>
        pclk = HAL_RCC_GetPCLK1Freq();
9000fe6a:	f7fd ff55 	bl	9000dd18 <HAL_RCC_GetPCLK1Freq>
        break;
9000fe6e:	e7ee      	b.n	9000fe4e <UART_SetConfig+0x2ea>
9000fe70:	cfff69f3 	.word	0xcfff69f3
9000fe74:	58000c00 	.word	0x58000c00
9000fe78:	11fff4ff 	.word	0x11fff4ff
9000fe7c:	40011000 	.word	0x40011000
9000fe80:	40004400 	.word	0x40004400
9000fe84:	40004800 	.word	0x40004800
9000fe88:	40004c00 	.word	0x40004c00
9000fe8c:	40005000 	.word	0x40005000
9000fe90:	40011400 	.word	0x40011400
9000fe94:	40007800 	.word	0x40007800
9000fe98:	40007c00 	.word	0x40007c00
9000fe9c:	58024400 	.word	0x58024400
9000fea0:	9002df84 	.word	0x9002df84
9000fea4:	9002dfb0 	.word	0x9002dfb0
9000fea8:	9002dfb8 	.word	0x9002dfb8
9000feac:	9002dfb0 	.word	0x9002dfb0
9000feb0:	03d09000 	.word	0x03d09000
    switch (clocksource)
9000feb4:	2b40      	cmp	r3, #64	; 0x40
9000feb6:	f47f ae9c 	bne.w	9000fbf2 <UART_SetConfig+0x8e>
9000feba:	f44f 4000 	mov.w	r0, #32768	; 0x8000
      usartdiv = (uint32_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
9000febe:	4b6c      	ldr	r3, [pc, #432]	; (90010070 <UART_SetConfig+0x50c>)
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
9000fec0:	f64f 71ef 	movw	r1, #65519	; 0xffef
      usartdiv = (uint32_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
9000fec4:	6862      	ldr	r2, [r4, #4]
9000fec6:	f833 3015 	ldrh.w	r3, [r3, r5, lsl #1]
9000feca:	fbb0 f3f3 	udiv	r3, r0, r3
9000fece:	eb03 0352 	add.w	r3, r3, r2, lsr #1
9000fed2:	fbb3 f3f2 	udiv	r3, r3, r2
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
9000fed6:	f1a3 0210 	sub.w	r2, r3, #16
9000feda:	428a      	cmp	r2, r1
9000fedc:	f63f ae89 	bhi.w	9000fbf2 <UART_SetConfig+0x8e>
        huart->Instance->BRR = (uint16_t)usartdiv;
9000fee0:	6822      	ldr	r2, [r4, #0]
9000fee2:	2000      	movs	r0, #0
9000fee4:	60d3      	str	r3, [r2, #12]
9000fee6:	e685      	b.n	9000fbf4 <UART_SetConfig+0x90>
  UART_GETCLOCKSOURCE(huart, clocksource);
9000fee8:	4b62      	ldr	r3, [pc, #392]	; (90010074 <UART_SetConfig+0x510>)
9000feea:	6d5b      	ldr	r3, [r3, #84]	; 0x54
9000feec:	f003 0307 	and.w	r3, r3, #7
9000fef0:	2b05      	cmp	r3, #5
9000fef2:	f63f ae7e 	bhi.w	9000fbf2 <UART_SetConfig+0x8e>
9000fef6:	4a60      	ldr	r2, [pc, #384]	; (90010078 <UART_SetConfig+0x514>)
9000fef8:	5cd3      	ldrb	r3, [r2, r3]
9000fefa:	e68b      	b.n	9000fc14 <UART_SetConfig+0xb0>
    switch (clocksource)
9000fefc:	2b40      	cmp	r3, #64	; 0x40
9000fefe:	f47f ae78 	bne.w	9000fbf2 <UART_SetConfig+0x8e>
9000ff02:	f44f 4000 	mov.w	r0, #32768	; 0x8000
      lpuart_ker_ck_pres = (pclk / UARTPrescTable[huart->Init.ClockPrescaler]);
9000ff06:	4b5a      	ldr	r3, [pc, #360]	; (90010070 <UART_SetConfig+0x50c>)
      if ((lpuart_ker_ck_pres < (3U * huart->Init.BaudRate)) ||
9000ff08:	6865      	ldr	r5, [r4, #4]
      lpuart_ker_ck_pres = (pclk / UARTPrescTable[huart->Init.ClockPrescaler]);
9000ff0a:	f833 2011 	ldrh.w	r2, [r3, r1, lsl #1]
      if ((lpuart_ker_ck_pres < (3U * huart->Init.BaudRate)) ||
9000ff0e:	eb05 0145 	add.w	r1, r5, r5, lsl #1
      lpuart_ker_ck_pres = (pclk / UARTPrescTable[huart->Init.ClockPrescaler]);
9000ff12:	fbb0 f3f2 	udiv	r3, r0, r2
      if ((lpuart_ker_ck_pres < (3U * huart->Init.BaudRate)) ||
9000ff16:	4299      	cmp	r1, r3
9000ff18:	f63f ae6b 	bhi.w	9000fbf2 <UART_SetConfig+0x8e>
9000ff1c:	ebb3 3f05 	cmp.w	r3, r5, lsl #12
9000ff20:	f63f ae67 	bhi.w	9000fbf2 <UART_SetConfig+0x8e>
        usartdiv = (uint32_t)(UART_DIV_LPUART(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
9000ff24:	2300      	movs	r3, #0
9000ff26:	4619      	mov	r1, r3
9000ff28:	f7f0 fa32 	bl	90000390 <__aeabi_uldivmod>
9000ff2c:	462a      	mov	r2, r5
9000ff2e:	0209      	lsls	r1, r1, #8
9000ff30:	0203      	lsls	r3, r0, #8
9000ff32:	ea41 6110 	orr.w	r1, r1, r0, lsr #24
9000ff36:	0868      	lsrs	r0, r5, #1
9000ff38:	1818      	adds	r0, r3, r0
9000ff3a:	f04f 0300 	mov.w	r3, #0
9000ff3e:	f141 0100 	adc.w	r1, r1, #0
9000ff42:	f7f0 fa25 	bl	90000390 <__aeabi_uldivmod>
        if ((usartdiv >= LPUART_BRR_MIN) && (usartdiv <= LPUART_BRR_MAX))
9000ff46:	4a4d      	ldr	r2, [pc, #308]	; (9001007c <UART_SetConfig+0x518>)
9000ff48:	f5a0 7140 	sub.w	r1, r0, #768	; 0x300
        usartdiv = (uint32_t)(UART_DIV_LPUART(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
9000ff4c:	4603      	mov	r3, r0
        if ((usartdiv >= LPUART_BRR_MIN) && (usartdiv <= LPUART_BRR_MAX))
9000ff4e:	4291      	cmp	r1, r2
9000ff50:	f63f ae4f 	bhi.w	9000fbf2 <UART_SetConfig+0x8e>
9000ff54:	e7c4      	b.n	9000fee0 <UART_SetConfig+0x37c>
    switch (clocksource)
9000ff56:	2b40      	cmp	r3, #64	; 0x40
9000ff58:	f47f ae4b 	bne.w	9000fbf2 <UART_SetConfig+0x8e>
      usartdiv = (uint32_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
9000ff5c:	4b44      	ldr	r3, [pc, #272]	; (90010070 <UART_SetConfig+0x50c>)
9000ff5e:	6862      	ldr	r2, [r4, #4]
9000ff60:	f833 1015 	ldrh.w	r1, [r3, r5, lsl #1]
9000ff64:	0853      	lsrs	r3, r2, #1
9000ff66:	fbb0 f0f1 	udiv	r0, r0, r1
9000ff6a:	eb03 0340 	add.w	r3, r3, r0, lsl #1
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
9000ff6e:	f64f 71ef 	movw	r1, #65519	; 0xffef
      usartdiv = (uint32_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
9000ff72:	fbb3 f3f2 	udiv	r3, r3, r2
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
9000ff76:	f1a3 0210 	sub.w	r2, r3, #16
9000ff7a:	428a      	cmp	r2, r1
9000ff7c:	f63f ae39 	bhi.w	9000fbf2 <UART_SetConfig+0x8e>
        brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
9000ff80:	f023 020f 	bic.w	r2, r3, #15
        brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
9000ff84:	f3c3 0342 	ubfx	r3, r3, #1, #3
        huart->Instance->BRR = brrtemp;
9000ff88:	6821      	ldr	r1, [r4, #0]
9000ff8a:	2000      	movs	r0, #0
        brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
9000ff8c:	b292      	uxth	r2, r2
        huart->Instance->BRR = brrtemp;
9000ff8e:	4313      	orrs	r3, r2
9000ff90:	60cb      	str	r3, [r1, #12]
9000ff92:	e62f      	b.n	9000fbf4 <UART_SetConfig+0x90>
  UART_GETCLOCKSOURCE(huart, clocksource);
9000ff94:	4b37      	ldr	r3, [pc, #220]	; (90010074 <UART_SetConfig+0x510>)
9000ff96:	6d5b      	ldr	r3, [r3, #84]	; 0x54
9000ff98:	f003 0307 	and.w	r3, r3, #7
9000ff9c:	2b05      	cmp	r3, #5
9000ff9e:	f63f ae28 	bhi.w	9000fbf2 <UART_SetConfig+0x8e>
9000ffa2:	4a37      	ldr	r2, [pc, #220]	; (90010080 <UART_SetConfig+0x51c>)
9000ffa4:	5cd3      	ldrb	r3, [r2, r3]
9000ffa6:	e635      	b.n	9000fc14 <UART_SetConfig+0xb0>
9000ffa8:	4b32      	ldr	r3, [pc, #200]	; (90010074 <UART_SetConfig+0x510>)
9000ffaa:	6d5b      	ldr	r3, [r3, #84]	; 0x54
9000ffac:	f003 0338 	and.w	r3, r3, #56	; 0x38
9000ffb0:	2b28      	cmp	r3, #40	; 0x28
9000ffb2:	f63f ae1e 	bhi.w	9000fbf2 <UART_SetConfig+0x8e>
9000ffb6:	4a33      	ldr	r2, [pc, #204]	; (90010084 <UART_SetConfig+0x520>)
9000ffb8:	5cd3      	ldrb	r3, [r2, r3]
9000ffba:	e62b      	b.n	9000fc14 <UART_SetConfig+0xb0>
          pclk = (uint32_t) HSI_VALUE;
9000ffbc:	4832      	ldr	r0, [pc, #200]	; (90010088 <UART_SetConfig+0x524>)
9000ffbe:	e77e      	b.n	9000febe <UART_SetConfig+0x35a>
  UART_GETCLOCKSOURCE(huart, clocksource);
9000ffc0:	4b2c      	ldr	r3, [pc, #176]	; (90010074 <UART_SetConfig+0x510>)
9000ffc2:	6d5b      	ldr	r3, [r3, #84]	; 0x54
9000ffc4:	f003 0307 	and.w	r3, r3, #7
9000ffc8:	2b05      	cmp	r3, #5
9000ffca:	f63f ae12 	bhi.w	9000fbf2 <UART_SetConfig+0x8e>
9000ffce:	4a2f      	ldr	r2, [pc, #188]	; (9001008c <UART_SetConfig+0x528>)
9000ffd0:	5cd3      	ldrb	r3, [r2, r3]
9000ffd2:	e61f      	b.n	9000fc14 <UART_SetConfig+0xb0>
        pclk = (uint32_t) CSI_VALUE;
9000ffd4:	482e      	ldr	r0, [pc, #184]	; (90010090 <UART_SetConfig+0x52c>)
9000ffd6:	e772      	b.n	9000febe <UART_SetConfig+0x35a>
        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000ffd8:	4b26      	ldr	r3, [pc, #152]	; (90010074 <UART_SetConfig+0x510>)
9000ffda:	681a      	ldr	r2, [r3, #0]
9000ffdc:	0690      	lsls	r0, r2, #26
9000ffde:	d542      	bpl.n	90010066 <UART_SetConfig+0x502>
          pclk = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3U));
9000ffe0:	681b      	ldr	r3, [r3, #0]
9000ffe2:	4829      	ldr	r0, [pc, #164]	; (90010088 <UART_SetConfig+0x524>)
9000ffe4:	f3c3 03c1 	ubfx	r3, r3, #3, #2
9000ffe8:	40d8      	lsrs	r0, r3
    if (pclk != 0U)
9000ffea:	e78c      	b.n	9000ff06 <UART_SetConfig+0x3a2>
        HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
9000ffec:	a803      	add	r0, sp, #12
9000ffee:	f7fe ff01 	bl	9000edf4 <HAL_RCCEx_GetPLL3ClockFreq>
        pclk = pll3_clocks.PLL3_Q_Frequency;
9000fff2:	9804      	ldr	r0, [sp, #16]
    if (pclk != 0U)
9000fff4:	2800      	cmp	r0, #0
9000fff6:	f43f af2b 	beq.w	9000fe50 <UART_SetConfig+0x2ec>
      lpuart_ker_ck_pres = (pclk / UARTPrescTable[huart->Init.ClockPrescaler]);
9000fffa:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000fffc:	e783      	b.n	9000ff06 <UART_SetConfig+0x3a2>
        HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
9000fffe:	4668      	mov	r0, sp
90010000:	f7fe fe4c 	bl	9000ec9c <HAL_RCCEx_GetPLL2ClockFreq>
        pclk = pll2_clocks.PLL2_Q_Frequency;
90010004:	9801      	ldr	r0, [sp, #4]
        break;
90010006:	e7f5      	b.n	9000fff4 <UART_SetConfig+0x490>
        pclk = HAL_RCCEx_GetD3PCLK1Freq();
90010008:	f7fe fe36 	bl	9000ec78 <HAL_RCCEx_GetD3PCLK1Freq>
        break;
9001000c:	e7f2      	b.n	9000fff4 <UART_SetConfig+0x490>
        pclk = (uint32_t) CSI_VALUE;
9001000e:	4820      	ldr	r0, [pc, #128]	; (90010090 <UART_SetConfig+0x52c>)
90010010:	e779      	b.n	9000ff06 <UART_SetConfig+0x3a2>
        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
90010012:	4b18      	ldr	r3, [pc, #96]	; (90010074 <UART_SetConfig+0x510>)
90010014:	681a      	ldr	r2, [r3, #0]
90010016:	0691      	lsls	r1, r2, #26
90010018:	d527      	bpl.n	9001006a <UART_SetConfig+0x506>
          pclk = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3U));
9001001a:	681b      	ldr	r3, [r3, #0]
9001001c:	481a      	ldr	r0, [pc, #104]	; (90010088 <UART_SetConfig+0x524>)
9001001e:	f3c3 03c1 	ubfx	r3, r3, #3, #2
90010022:	40d8      	lsrs	r0, r3
    if (pclk != 0U)
90010024:	e79a      	b.n	9000ff5c <UART_SetConfig+0x3f8>
        HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
90010026:	a803      	add	r0, sp, #12
90010028:	f7fe fee4 	bl	9000edf4 <HAL_RCCEx_GetPLL3ClockFreq>
        pclk = pll3_clocks.PLL3_Q_Frequency;
9001002c:	9804      	ldr	r0, [sp, #16]
    if (pclk != 0U)
9001002e:	2800      	cmp	r0, #0
90010030:	f43f af0e 	beq.w	9000fe50 <UART_SetConfig+0x2ec>
      usartdiv = (uint32_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
90010034:	6a65      	ldr	r5, [r4, #36]	; 0x24
90010036:	e791      	b.n	9000ff5c <UART_SetConfig+0x3f8>
        pclk = HAL_RCC_GetPCLK2Freq();
90010038:	f7fd feb6 	bl	9000dda8 <HAL_RCC_GetPCLK2Freq>
        break;
9001003c:	e7f7      	b.n	9001002e <UART_SetConfig+0x4ca>
        pclk = HAL_RCC_GetPCLK1Freq();
9001003e:	f7fd fe6b 	bl	9000dd18 <HAL_RCC_GetPCLK1Freq>
        break;
90010042:	e7f4      	b.n	9001002e <UART_SetConfig+0x4ca>
        HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
90010044:	4668      	mov	r0, sp
90010046:	f7fe fe29 	bl	9000ec9c <HAL_RCCEx_GetPLL2ClockFreq>
        pclk = pll2_clocks.PLL2_Q_Frequency;
9001004a:	9801      	ldr	r0, [sp, #4]
        break;
9001004c:	e7ef      	b.n	9001002e <UART_SetConfig+0x4ca>
        pclk = (uint32_t) CSI_VALUE;
9001004e:	4810      	ldr	r0, [pc, #64]	; (90010090 <UART_SetConfig+0x52c>)
90010050:	e784      	b.n	9000ff5c <UART_SetConfig+0x3f8>
  UART_GETCLOCKSOURCE(huart, clocksource);
90010052:	4b08      	ldr	r3, [pc, #32]	; (90010074 <UART_SetConfig+0x510>)
90010054:	6d5b      	ldr	r3, [r3, #84]	; 0x54
90010056:	f003 0307 	and.w	r3, r3, #7
9001005a:	2b05      	cmp	r3, #5
9001005c:	f63f adc9 	bhi.w	9000fbf2 <UART_SetConfig+0x8e>
90010060:	4a0c      	ldr	r2, [pc, #48]	; (90010094 <UART_SetConfig+0x530>)
90010062:	5cd3      	ldrb	r3, [r2, r3]
90010064:	e5d6      	b.n	9000fc14 <UART_SetConfig+0xb0>
          pclk = (uint32_t) HSI_VALUE;
90010066:	4808      	ldr	r0, [pc, #32]	; (90010088 <UART_SetConfig+0x524>)
90010068:	e74d      	b.n	9000ff06 <UART_SetConfig+0x3a2>
          pclk = (uint32_t) HSI_VALUE;
9001006a:	4807      	ldr	r0, [pc, #28]	; (90010088 <UART_SetConfig+0x524>)
9001006c:	e776      	b.n	9000ff5c <UART_SetConfig+0x3f8>
9001006e:	bf00      	nop
90010070:	9002dfc0 	.word	0x9002dfc0
90010074:	58024400 	.word	0x58024400
90010078:	9002dfb0 	.word	0x9002dfb0
9001007c:	000ffcff 	.word	0x000ffcff
90010080:	9002dfb0 	.word	0x9002dfb0
90010084:	9002df84 	.word	0x9002df84
90010088:	03d09000 	.word	0x03d09000
9001008c:	9002dfb0 	.word	0x9002dfb0
90010090:	003d0900 	.word	0x003d0900
90010094:	9002dfb0 	.word	0x9002dfb0

90010098 <UART_AdvFeatureConfig>:
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
90010098:	6a83      	ldr	r3, [r0, #40]	; 0x28
9001009a:	07da      	lsls	r2, r3, #31
{
9001009c:	b410      	push	{r4}
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
9001009e:	d506      	bpl.n	900100ae <UART_AdvFeatureConfig+0x16>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
900100a0:	6801      	ldr	r1, [r0, #0]
900100a2:	6ac4      	ldr	r4, [r0, #44]	; 0x2c
900100a4:	684a      	ldr	r2, [r1, #4]
900100a6:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
900100aa:	4322      	orrs	r2, r4
900100ac:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
900100ae:	079c      	lsls	r4, r3, #30
900100b0:	d506      	bpl.n	900100c0 <UART_AdvFeatureConfig+0x28>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
900100b2:	6801      	ldr	r1, [r0, #0]
900100b4:	6b04      	ldr	r4, [r0, #48]	; 0x30
900100b6:	684a      	ldr	r2, [r1, #4]
900100b8:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
900100bc:	4322      	orrs	r2, r4
900100be:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
900100c0:	0759      	lsls	r1, r3, #29
900100c2:	d506      	bpl.n	900100d2 <UART_AdvFeatureConfig+0x3a>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
900100c4:	6801      	ldr	r1, [r0, #0]
900100c6:	6b44      	ldr	r4, [r0, #52]	; 0x34
900100c8:	684a      	ldr	r2, [r1, #4]
900100ca:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
900100ce:	4322      	orrs	r2, r4
900100d0:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
900100d2:	071a      	lsls	r2, r3, #28
900100d4:	d506      	bpl.n	900100e4 <UART_AdvFeatureConfig+0x4c>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
900100d6:	6801      	ldr	r1, [r0, #0]
900100d8:	6b84      	ldr	r4, [r0, #56]	; 0x38
900100da:	684a      	ldr	r2, [r1, #4]
900100dc:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
900100e0:	4322      	orrs	r2, r4
900100e2:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
900100e4:	06dc      	lsls	r4, r3, #27
900100e6:	d506      	bpl.n	900100f6 <UART_AdvFeatureConfig+0x5e>
    MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
900100e8:	6801      	ldr	r1, [r0, #0]
900100ea:	6bc4      	ldr	r4, [r0, #60]	; 0x3c
900100ec:	688a      	ldr	r2, [r1, #8]
900100ee:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
900100f2:	4322      	orrs	r2, r4
900100f4:	608a      	str	r2, [r1, #8]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
900100f6:	0699      	lsls	r1, r3, #26
900100f8:	d506      	bpl.n	90010108 <UART_AdvFeatureConfig+0x70>
    MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
900100fa:	6801      	ldr	r1, [r0, #0]
900100fc:	6c04      	ldr	r4, [r0, #64]	; 0x40
900100fe:	688a      	ldr	r2, [r1, #8]
90010100:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
90010104:	4322      	orrs	r2, r4
90010106:	608a      	str	r2, [r1, #8]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
90010108:	065a      	lsls	r2, r3, #25
9001010a:	d50a      	bpl.n	90010122 <UART_AdvFeatureConfig+0x8a>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
9001010c:	6801      	ldr	r1, [r0, #0]
9001010e:	6c44      	ldr	r4, [r0, #68]	; 0x44
90010110:	684a      	ldr	r2, [r1, #4]
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
90010112:	f5b4 1f80 	cmp.w	r4, #1048576	; 0x100000
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
90010116:	f422 1280 	bic.w	r2, r2, #1048576	; 0x100000
9001011a:	ea42 0204 	orr.w	r2, r2, r4
9001011e:	604a      	str	r2, [r1, #4]
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
90010120:	d00b      	beq.n	9001013a <UART_AdvFeatureConfig+0xa2>
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
90010122:	061b      	lsls	r3, r3, #24
90010124:	d506      	bpl.n	90010134 <UART_AdvFeatureConfig+0x9c>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
90010126:	6802      	ldr	r2, [r0, #0]
90010128:	6cc1      	ldr	r1, [r0, #76]	; 0x4c
9001012a:	6853      	ldr	r3, [r2, #4]
9001012c:	f423 2300 	bic.w	r3, r3, #524288	; 0x80000
90010130:	430b      	orrs	r3, r1
90010132:	6053      	str	r3, [r2, #4]
}
90010134:	f85d 4b04 	ldr.w	r4, [sp], #4
90010138:	4770      	bx	lr
      MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
9001013a:	684a      	ldr	r2, [r1, #4]
9001013c:	6c84      	ldr	r4, [r0, #72]	; 0x48
9001013e:	f422 02c0 	bic.w	r2, r2, #6291456	; 0x600000
90010142:	4322      	orrs	r2, r4
90010144:	604a      	str	r2, [r1, #4]
90010146:	e7ec      	b.n	90010122 <UART_AdvFeatureConfig+0x8a>

90010148 <UART_CheckIdleState>:
{
90010148:	b538      	push	{r3, r4, r5, lr}
  huart->ErrorCode = HAL_UART_ERROR_NONE;
9001014a:	2300      	movs	r3, #0
{
9001014c:	4604      	mov	r4, r0
  huart->ErrorCode = HAL_UART_ERROR_NONE;
9001014e:	f8c0 3090 	str.w	r3, [r0, #144]	; 0x90
  tickstart = HAL_GetTick();
90010152:	f7f9 ffa9 	bl	9000a0a8 <HAL_GetTick>
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
90010156:	6822      	ldr	r2, [r4, #0]
  tickstart = HAL_GetTick();
90010158:	4605      	mov	r5, r0
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
9001015a:	6813      	ldr	r3, [r2, #0]
9001015c:	071b      	lsls	r3, r3, #28
9001015e:	d40f      	bmi.n	90010180 <UART_CheckIdleState+0x38>
  if ((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
90010160:	6813      	ldr	r3, [r2, #0]
90010162:	0759      	lsls	r1, r3, #29
90010164:	d431      	bmi.n	900101ca <UART_CheckIdleState+0x82>
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
90010166:	2300      	movs	r3, #0
  huart->gState = HAL_UART_STATE_READY;
90010168:	2220      	movs	r2, #32
  return HAL_OK;
9001016a:	4618      	mov	r0, r3
  huart->gState = HAL_UART_STATE_READY;
9001016c:	f8c4 2088 	str.w	r2, [r4, #136]	; 0x88
  huart->RxState = HAL_UART_STATE_READY;
90010170:	f8c4 208c 	str.w	r2, [r4, #140]	; 0x8c
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
90010174:	66e3      	str	r3, [r4, #108]	; 0x6c
  huart->RxEventType = HAL_UART_RXEVENT_TC;
90010176:	6723      	str	r3, [r4, #112]	; 0x70
      __HAL_UNLOCK(huart);
90010178:	2300      	movs	r3, #0
9001017a:	f884 3084 	strb.w	r3, [r4, #132]	; 0x84
}
9001017e:	bd38      	pop	{r3, r4, r5, pc}
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
90010180:	69d3      	ldr	r3, [r2, #28]
90010182:	0298      	lsls	r0, r3, #10
90010184:	d4ec      	bmi.n	90010160 <UART_CheckIdleState+0x18>
90010186:	e00c      	b.n	900101a2 <UART_CheckIdleState+0x5a>
      if (READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U)
90010188:	6819      	ldr	r1, [r3, #0]
9001018a:	461a      	mov	r2, r3
9001018c:	0749      	lsls	r1, r1, #29
9001018e:	d505      	bpl.n	9001019c <UART_CheckIdleState+0x54>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_ORE) == SET)
90010190:	69d9      	ldr	r1, [r3, #28]
90010192:	0708      	lsls	r0, r1, #28
90010194:	d44b      	bmi.n	9001022e <UART_CheckIdleState+0xe6>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
90010196:	69d9      	ldr	r1, [r3, #28]
90010198:	0509      	lsls	r1, r1, #20
9001019a:	d476      	bmi.n	9001028a <UART_CheckIdleState+0x142>
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
9001019c:	69db      	ldr	r3, [r3, #28]
9001019e:	0298      	lsls	r0, r3, #10
900101a0:	d4de      	bmi.n	90010160 <UART_CheckIdleState+0x18>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
900101a2:	f7f9 ff81 	bl	9000a0a8 <HAL_GetTick>
900101a6:	1b43      	subs	r3, r0, r5
900101a8:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
900101ac:	6823      	ldr	r3, [r4, #0]
900101ae:	d3eb      	bcc.n	90010188 <UART_CheckIdleState+0x40>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
900101b0:	e853 2f00 	ldrex	r2, [r3]
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE_TXFNFIE));
900101b4:	f022 0280 	bic.w	r2, r2, #128	; 0x80
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
900101b8:	e843 2100 	strex	r1, r2, [r3]
900101bc:	2900      	cmp	r1, #0
900101be:	d1f7      	bne.n	900101b0 <UART_CheckIdleState+0x68>
      huart->gState = HAL_UART_STATE_READY;
900101c0:	2320      	movs	r3, #32
      return HAL_TIMEOUT;
900101c2:	2003      	movs	r0, #3
      huart->gState = HAL_UART_STATE_READY;
900101c4:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
      return HAL_TIMEOUT;
900101c8:	e7d6      	b.n	90010178 <UART_CheckIdleState+0x30>
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
900101ca:	69d3      	ldr	r3, [r2, #28]
900101cc:	025b      	lsls	r3, r3, #9
900101ce:	d4ca      	bmi.n	90010166 <UART_CheckIdleState+0x1e>
900101d0:	e00d      	b.n	900101ee <UART_CheckIdleState+0xa6>
      if (READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U)
900101d2:	681a      	ldr	r2, [r3, #0]
900101d4:	0750      	lsls	r0, r2, #29
900101d6:	d507      	bpl.n	900101e8 <UART_CheckIdleState+0xa0>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_ORE) == SET)
900101d8:	69da      	ldr	r2, [r3, #28]
900101da:	0711      	lsls	r1, r2, #28
900101dc:	f100 8083 	bmi.w	900102e6 <UART_CheckIdleState+0x19e>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
900101e0:	69da      	ldr	r2, [r3, #28]
900101e2:	0512      	lsls	r2, r2, #20
900101e4:	f100 80ad 	bmi.w	90010342 <UART_CheckIdleState+0x1fa>
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
900101e8:	69db      	ldr	r3, [r3, #28]
900101ea:	025b      	lsls	r3, r3, #9
900101ec:	d4bb      	bmi.n	90010166 <UART_CheckIdleState+0x1e>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
900101ee:	f7f9 ff5b 	bl	9000a0a8 <HAL_GetTick>
900101f2:	1b43      	subs	r3, r0, r5
900101f4:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
900101f8:	6823      	ldr	r3, [r4, #0]
900101fa:	d3ea      	bcc.n	900101d2 <UART_CheckIdleState+0x8a>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
900101fc:	e853 2f00 	ldrex	r2, [r3]
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
90010200:	f422 7290 	bic.w	r2, r2, #288	; 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
90010204:	e843 2100 	strex	r1, r2, [r3]
90010208:	2900      	cmp	r1, #0
9001020a:	d1f7      	bne.n	900101fc <UART_CheckIdleState+0xb4>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9001020c:	f103 0208 	add.w	r2, r3, #8
90010210:	e852 2f00 	ldrex	r2, [r2]
      ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
90010214:	f022 0201 	bic.w	r2, r2, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
90010218:	f103 0008 	add.w	r0, r3, #8
9001021c:	e840 2100 	strex	r1, r2, [r0]
90010220:	2900      	cmp	r1, #0
90010222:	d1f3      	bne.n	9001020c <UART_CheckIdleState+0xc4>
      huart->RxState = HAL_UART_STATE_READY;
90010224:	2320      	movs	r3, #32
      return HAL_TIMEOUT;
90010226:	2003      	movs	r0, #3
      huart->RxState = HAL_UART_STATE_READY;
90010228:	f8c4 308c 	str.w	r3, [r4, #140]	; 0x8c
      return HAL_TIMEOUT;
9001022c:	e7a4      	b.n	90010178 <UART_CheckIdleState+0x30>
           __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
9001022e:	2208      	movs	r2, #8
90010230:	621a      	str	r2, [r3, #32]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
90010232:	e853 2f00 	ldrex	r2, [r3]
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
90010236:	f422 7290 	bic.w	r2, r2, #288	; 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9001023a:	e843 2100 	strex	r1, r2, [r3]
9001023e:	2900      	cmp	r1, #0
90010240:	d1f7      	bne.n	90010232 <UART_CheckIdleState+0xea>
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
90010242:	4857      	ldr	r0, [pc, #348]	; (900103a0 <UART_CheckIdleState+0x258>)
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
90010244:	f103 0208 	add.w	r2, r3, #8
90010248:	e852 2f00 	ldrex	r2, [r2]
9001024c:	4002      	ands	r2, r0
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9001024e:	f103 0508 	add.w	r5, r3, #8
90010252:	e845 2100 	strex	r1, r2, [r5]
90010256:	2900      	cmp	r1, #0
90010258:	d1f4      	bne.n	90010244 <UART_CheckIdleState+0xfc>
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
9001025a:	6ee2      	ldr	r2, [r4, #108]	; 0x6c
9001025c:	2a01      	cmp	r2, #1
9001025e:	d00b      	beq.n	90010278 <UART_CheckIdleState+0x130>
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
90010260:	2200      	movs	r2, #0
  huart->RxState = HAL_UART_STATE_READY;
90010262:	2020      	movs	r0, #32
           huart->ErrorCode = HAL_UART_ERROR_ORE;
90010264:	2108      	movs	r1, #8
  huart->RxState = HAL_UART_STATE_READY;
90010266:	f8c4 008c 	str.w	r0, [r4, #140]	; 0x8c
  huart->RxISR = NULL;
9001026a:	6762      	str	r2, [r4, #116]	; 0x74
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9001026c:	66e2      	str	r2, [r4, #108]	; 0x6c
           __HAL_UNLOCK(huart);
9001026e:	f884 2084 	strb.w	r2, [r4, #132]	; 0x84
           huart->ErrorCode = HAL_UART_ERROR_ORE;
90010272:	f8c4 1090 	str.w	r1, [r4, #144]	; 0x90
           return HAL_ERROR;
90010276:	e79b      	b.n	900101b0 <UART_CheckIdleState+0x68>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
90010278:	e853 2f00 	ldrex	r2, [r3]
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
9001027c:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
90010280:	e843 2100 	strex	r1, r2, [r3]
90010284:	2900      	cmp	r1, #0
90010286:	d1f7      	bne.n	90010278 <UART_CheckIdleState+0x130>
90010288:	e7ea      	b.n	90010260 <UART_CheckIdleState+0x118>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
9001028a:	f44f 6200 	mov.w	r2, #2048	; 0x800
9001028e:	621a      	str	r2, [r3, #32]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
90010290:	e853 2f00 	ldrex	r2, [r3]
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
90010294:	f422 7290 	bic.w	r2, r2, #288	; 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
90010298:	e843 2100 	strex	r1, r2, [r3]
9001029c:	2900      	cmp	r1, #0
9001029e:	d1f7      	bne.n	90010290 <UART_CheckIdleState+0x148>
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
900102a0:	483f      	ldr	r0, [pc, #252]	; (900103a0 <UART_CheckIdleState+0x258>)
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
900102a2:	f103 0208 	add.w	r2, r3, #8
900102a6:	e852 2f00 	ldrex	r2, [r2]
900102aa:	4002      	ands	r2, r0
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
900102ac:	f103 0508 	add.w	r5, r3, #8
900102b0:	e845 2100 	strex	r1, r2, [r5]
900102b4:	2900      	cmp	r1, #0
900102b6:	d1f4      	bne.n	900102a2 <UART_CheckIdleState+0x15a>
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
900102b8:	6ee2      	ldr	r2, [r4, #108]	; 0x6c
900102ba:	2a01      	cmp	r2, #1
900102bc:	d00a      	beq.n	900102d4 <UART_CheckIdleState+0x18c>
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
900102be:	2200      	movs	r2, #0
  huart->RxState = HAL_UART_STATE_READY;
900102c0:	2120      	movs	r1, #32
  huart->RxISR = NULL;
900102c2:	6762      	str	r2, [r4, #116]	; 0x74
  huart->RxState = HAL_UART_STATE_READY;
900102c4:	f8c4 108c 	str.w	r1, [r4, #140]	; 0x8c
          __HAL_UNLOCK(huart);
900102c8:	f884 2084 	strb.w	r2, [r4, #132]	; 0x84
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
900102cc:	66e2      	str	r2, [r4, #108]	; 0x6c
          huart->ErrorCode = HAL_UART_ERROR_RTO;
900102ce:	f8c4 1090 	str.w	r1, [r4, #144]	; 0x90
          return HAL_TIMEOUT;
900102d2:	e76d      	b.n	900101b0 <UART_CheckIdleState+0x68>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
900102d4:	e853 2f00 	ldrex	r2, [r3]
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
900102d8:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
900102dc:	e843 2100 	strex	r1, r2, [r3]
900102e0:	2900      	cmp	r1, #0
900102e2:	d1f7      	bne.n	900102d4 <UART_CheckIdleState+0x18c>
900102e4:	e7eb      	b.n	900102be <UART_CheckIdleState+0x176>
           __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
900102e6:	2208      	movs	r2, #8
900102e8:	621a      	str	r2, [r3, #32]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
900102ea:	e853 2f00 	ldrex	r2, [r3]
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
900102ee:	f422 7290 	bic.w	r2, r2, #288	; 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
900102f2:	e843 2100 	strex	r1, r2, [r3]
900102f6:	2900      	cmp	r1, #0
900102f8:	d1f7      	bne.n	900102ea <UART_CheckIdleState+0x1a2>
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
900102fa:	4829      	ldr	r0, [pc, #164]	; (900103a0 <UART_CheckIdleState+0x258>)
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
900102fc:	f103 0208 	add.w	r2, r3, #8
90010300:	e852 2f00 	ldrex	r2, [r2]
90010304:	4002      	ands	r2, r0
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
90010306:	f103 0508 	add.w	r5, r3, #8
9001030a:	e845 2100 	strex	r1, r2, [r5]
9001030e:	2900      	cmp	r1, #0
90010310:	d1f4      	bne.n	900102fc <UART_CheckIdleState+0x1b4>
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
90010312:	6ee2      	ldr	r2, [r4, #108]	; 0x6c
90010314:	2a01      	cmp	r2, #1
90010316:	d00b      	beq.n	90010330 <UART_CheckIdleState+0x1e8>
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
90010318:	2200      	movs	r2, #0
  huart->RxState = HAL_UART_STATE_READY;
9001031a:	2020      	movs	r0, #32
           huart->ErrorCode = HAL_UART_ERROR_ORE;
9001031c:	2108      	movs	r1, #8
  huart->RxState = HAL_UART_STATE_READY;
9001031e:	f8c4 008c 	str.w	r0, [r4, #140]	; 0x8c
  huart->RxISR = NULL;
90010322:	6762      	str	r2, [r4, #116]	; 0x74
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
90010324:	66e2      	str	r2, [r4, #108]	; 0x6c
           __HAL_UNLOCK(huart);
90010326:	f884 2084 	strb.w	r2, [r4, #132]	; 0x84
           huart->ErrorCode = HAL_UART_ERROR_ORE;
9001032a:	f8c4 1090 	str.w	r1, [r4, #144]	; 0x90
           return HAL_ERROR;
9001032e:	e765      	b.n	900101fc <UART_CheckIdleState+0xb4>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
90010330:	e853 2f00 	ldrex	r2, [r3]
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
90010334:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
90010338:	e843 2100 	strex	r1, r2, [r3]
9001033c:	2900      	cmp	r1, #0
9001033e:	d1f7      	bne.n	90010330 <UART_CheckIdleState+0x1e8>
90010340:	e7ea      	b.n	90010318 <UART_CheckIdleState+0x1d0>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
90010342:	f44f 6200 	mov.w	r2, #2048	; 0x800
90010346:	621a      	str	r2, [r3, #32]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
90010348:	e853 2f00 	ldrex	r2, [r3]
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
9001034c:	f422 7290 	bic.w	r2, r2, #288	; 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
90010350:	e843 2100 	strex	r1, r2, [r3]
90010354:	2900      	cmp	r1, #0
90010356:	d1f7      	bne.n	90010348 <UART_CheckIdleState+0x200>
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
90010358:	4811      	ldr	r0, [pc, #68]	; (900103a0 <UART_CheckIdleState+0x258>)
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9001035a:	f103 0208 	add.w	r2, r3, #8
9001035e:	e852 2f00 	ldrex	r2, [r2]
90010362:	4002      	ands	r2, r0
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
90010364:	f103 0508 	add.w	r5, r3, #8
90010368:	e845 2100 	strex	r1, r2, [r5]
9001036c:	2900      	cmp	r1, #0
9001036e:	d1f4      	bne.n	9001035a <UART_CheckIdleState+0x212>
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
90010370:	6ee2      	ldr	r2, [r4, #108]	; 0x6c
90010372:	2a01      	cmp	r2, #1
90010374:	d00a      	beq.n	9001038c <UART_CheckIdleState+0x244>
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
90010376:	2200      	movs	r2, #0
  huart->RxState = HAL_UART_STATE_READY;
90010378:	2120      	movs	r1, #32
  huart->RxISR = NULL;
9001037a:	6762      	str	r2, [r4, #116]	; 0x74
  huart->RxState = HAL_UART_STATE_READY;
9001037c:	f8c4 108c 	str.w	r1, [r4, #140]	; 0x8c
          __HAL_UNLOCK(huart);
90010380:	f884 2084 	strb.w	r2, [r4, #132]	; 0x84
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
90010384:	66e2      	str	r2, [r4, #108]	; 0x6c
          huart->ErrorCode = HAL_UART_ERROR_RTO;
90010386:	f8c4 1090 	str.w	r1, [r4, #144]	; 0x90
          return HAL_TIMEOUT;
9001038a:	e737      	b.n	900101fc <UART_CheckIdleState+0xb4>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9001038c:	e853 2f00 	ldrex	r2, [r3]
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
90010390:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
90010394:	e843 2100 	strex	r1, r2, [r3]
90010398:	2900      	cmp	r1, #0
9001039a:	d1f7      	bne.n	9001038c <UART_CheckIdleState+0x244>
9001039c:	e7eb      	b.n	90010376 <UART_CheckIdleState+0x22e>
9001039e:	bf00      	nop
900103a0:	effffffe 	.word	0xeffffffe

900103a4 <HAL_UART_Init>:
  if (huart == NULL)
900103a4:	b380      	cbz	r0, 90010408 <HAL_UART_Init+0x64>
  if (huart->gState == HAL_UART_STATE_RESET)
900103a6:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
{
900103aa:	b510      	push	{r4, lr}
900103ac:	4604      	mov	r4, r0
  if (huart->gState == HAL_UART_STATE_RESET)
900103ae:	b333      	cbz	r3, 900103fe <HAL_UART_Init+0x5a>
  __HAL_UART_DISABLE(huart);
900103b0:	6822      	ldr	r2, [r4, #0]
  huart->gState = HAL_UART_STATE_BUSY;
900103b2:	2324      	movs	r3, #36	; 0x24
  if (UART_SetConfig(huart) == HAL_ERROR)
900103b4:	4620      	mov	r0, r4
  huart->gState = HAL_UART_STATE_BUSY;
900103b6:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
  __HAL_UART_DISABLE(huart);
900103ba:	6813      	ldr	r3, [r2, #0]
900103bc:	f023 0301 	bic.w	r3, r3, #1
900103c0:	6013      	str	r3, [r2, #0]
  if (UART_SetConfig(huart) == HAL_ERROR)
900103c2:	f7ff fbcf 	bl	9000fb64 <UART_SetConfig>
900103c6:	2801      	cmp	r0, #1
900103c8:	d017      	beq.n	900103fa <HAL_UART_Init+0x56>
  if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
900103ca:	6aa3      	ldr	r3, [r4, #40]	; 0x28
900103cc:	b98b      	cbnz	r3, 900103f2 <HAL_UART_Init+0x4e>
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
900103ce:	6823      	ldr	r3, [r4, #0]
  return (UART_CheckIdleState(huart));
900103d0:	4620      	mov	r0, r4
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
900103d2:	685a      	ldr	r2, [r3, #4]
900103d4:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
900103d8:	605a      	str	r2, [r3, #4]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
900103da:	689a      	ldr	r2, [r3, #8]
900103dc:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
900103e0:	609a      	str	r2, [r3, #8]
  __HAL_UART_ENABLE(huart);
900103e2:	681a      	ldr	r2, [r3, #0]
900103e4:	f042 0201 	orr.w	r2, r2, #1
}
900103e8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  __HAL_UART_ENABLE(huart);
900103ec:	601a      	str	r2, [r3, #0]
  return (UART_CheckIdleState(huart));
900103ee:	f7ff beab 	b.w	90010148 <UART_CheckIdleState>
    UART_AdvFeatureConfig(huart);
900103f2:	4620      	mov	r0, r4
900103f4:	f7ff fe50 	bl	90010098 <UART_AdvFeatureConfig>
900103f8:	e7e9      	b.n	900103ce <HAL_UART_Init+0x2a>
}
900103fa:	2001      	movs	r0, #1
900103fc:	bd10      	pop	{r4, pc}
    huart->Lock = HAL_UNLOCKED;
900103fe:	f880 3084 	strb.w	r3, [r0, #132]	; 0x84
    HAL_UART_MspInit(huart);
90010402:	f7f5 fa21 	bl	90005848 <HAL_UART_MspInit>
90010406:	e7d3      	b.n	900103b0 <HAL_UART_Init+0xc>
}
90010408:	2001      	movs	r0, #1
9001040a:	4770      	bx	lr

9001040c <HAL_UARTEx_DisableFifoMode>:

  /* Check parameters */
  assert_param(IS_UART_FIFO_INSTANCE(huart->Instance));

  /* Process Locked */
  __HAL_LOCK(huart);
9001040c:	f890 2084 	ldrb.w	r2, [r0, #132]	; 0x84
90010410:	2a01      	cmp	r2, #1
90010412:	d017      	beq.n	90010444 <HAL_UARTEx_DisableFifoMode+0x38>

  huart->gState = HAL_UART_STATE_BUSY;

  /* Save actual UART configuration */
  tmpcr1 = READ_REG(huart->Instance->CR1);
90010414:	6802      	ldr	r2, [r0, #0]
90010416:	4603      	mov	r3, r0
  huart->gState = HAL_UART_STATE_BUSY;
90010418:	2024      	movs	r0, #36	; 0x24
  /* Disable UART */
  __HAL_UART_DISABLE(huart);

  /* Enable FIFO mode */
  CLEAR_BIT(tmpcr1, USART_CR1_FIFOEN);
  huart->FifoMode = UART_FIFOMODE_DISABLE;
9001041a:	2100      	movs	r1, #0
{
9001041c:	b430      	push	{r4, r5}
  huart->gState = HAL_UART_STATE_BUSY;
9001041e:	f8c3 0088 	str.w	r0, [r3, #136]	; 0x88

  /* Restore UART configuration */
  WRITE_REG(huart->Instance->CR1, tmpcr1);

  huart->gState = HAL_UART_STATE_READY;
90010422:	2520      	movs	r5, #32
  tmpcr1 = READ_REG(huart->Instance->CR1);
90010424:	6810      	ldr	r0, [r2, #0]
  __HAL_UART_DISABLE(huart);
90010426:	6814      	ldr	r4, [r2, #0]
  CLEAR_BIT(tmpcr1, USART_CR1_FIFOEN);
90010428:	f020 5000 	bic.w	r0, r0, #536870912	; 0x20000000
  __HAL_UART_DISABLE(huart);
9001042c:	f024 0401 	bic.w	r4, r4, #1
90010430:	6014      	str	r4, [r2, #0]
  huart->FifoMode = UART_FIFOMODE_DISABLE;
90010432:	6659      	str	r1, [r3, #100]	; 0x64
  WRITE_REG(huart->Instance->CR1, tmpcr1);
90010434:	6010      	str	r0, [r2, #0]

  /* Process Unlocked */
  __HAL_UNLOCK(huart);

  return HAL_OK;
90010436:	4608      	mov	r0, r1
  huart->gState = HAL_UART_STATE_READY;
90010438:	f8c3 5088 	str.w	r5, [r3, #136]	; 0x88
  __HAL_UNLOCK(huart);
9001043c:	f883 1084 	strb.w	r1, [r3, #132]	; 0x84
}
90010440:	bc30      	pop	{r4, r5}
90010442:	4770      	bx	lr
  __HAL_LOCK(huart);
90010444:	2002      	movs	r0, #2
}
90010446:	4770      	bx	lr

90010448 <HAL_UARTEx_SetTxFifoThreshold>:
  /* Check parameters */
  assert_param(IS_UART_FIFO_INSTANCE(huart->Instance));
  assert_param(IS_UART_TXFIFO_THRESHOLD(Threshold));

  /* Process Locked */
  __HAL_LOCK(huart);
90010448:	f890 2084 	ldrb.w	r2, [r0, #132]	; 0x84
9001044c:	2a01      	cmp	r2, #1
9001044e:	d037      	beq.n	900104c0 <HAL_UARTEx_SetTxFifoThreshold+0x78>

  huart->gState = HAL_UART_STATE_BUSY;

  /* Save actual UART configuration */
  tmpcr1 = READ_REG(huart->Instance->CR1);
90010450:	6802      	ldr	r2, [r0, #0]
90010452:	4603      	mov	r3, r0
  huart->gState = HAL_UART_STATE_BUSY;
90010454:	2024      	movs	r0, #36	; 0x24
{
90010456:	b530      	push	{r4, r5, lr}
  huart->gState = HAL_UART_STATE_BUSY;
90010458:	f8c3 0088 	str.w	r0, [r3, #136]	; 0x88
  tmpcr1 = READ_REG(huart->Instance->CR1);
9001045c:	6814      	ldr	r4, [r2, #0]

  /* Disable UART */
  __HAL_UART_DISABLE(huart);
9001045e:	6810      	ldr	r0, [r2, #0]
90010460:	f020 0001 	bic.w	r0, r0, #1
90010464:	6010      	str	r0, [r2, #0]

  /* Update TX threshold configuration */
  MODIFY_REG(huart->Instance->CR3, USART_CR3_TXFTCFG, Threshold);
90010466:	6890      	ldr	r0, [r2, #8]
90010468:	f020 4060 	bic.w	r0, r0, #3758096384	; 0xe0000000
9001046c:	4301      	orrs	r1, r0
  uint8_t rx_fifo_threshold;
  uint8_t tx_fifo_threshold;
  static const uint8_t numerator[] = {1U, 1U, 1U, 3U, 7U, 1U, 0U, 0U};
  static const uint8_t denominator[] = {8U, 4U, 2U, 4U, 8U, 1U, 1U, 1U};

  if (huart->FifoMode == UART_FIFOMODE_DISABLE)
9001046e:	6e58      	ldr	r0, [r3, #100]	; 0x64
  MODIFY_REG(huart->Instance->CR3, USART_CR3_TXFTCFG, Threshold);
90010470:	6091      	str	r1, [r2, #8]
  if (huart->FifoMode == UART_FIFOMODE_DISABLE)
90010472:	b310      	cbz	r0, 900104ba <HAL_UARTEx_SetTxFifoThreshold+0x72>
  }
  else
  {
    rx_fifo_depth = RX_FIFO_DEPTH;
    tx_fifo_depth = TX_FIFO_DEPTH;
    rx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_RXFTCFG) >> USART_CR3_RXFTCFG_Pos);
90010474:	6891      	ldr	r1, [r2, #8]
    tx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_TXFTCFG) >> USART_CR3_TXFTCFG_Pos);
90010476:	6890      	ldr	r0, [r2, #8]
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
                               (uint16_t)denominator[tx_fifo_threshold];
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
90010478:	f3c1 6c42 	ubfx	ip, r1, #25, #3
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
9001047c:	4911      	ldr	r1, [pc, #68]	; (900104c4 <HAL_UARTEx_SetTxFifoThreshold+0x7c>)
    tx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_TXFTCFG) >> USART_CR3_TXFTCFG_Pos);
9001047e:	ea4f 7e50 	mov.w	lr, r0, lsr #29
                               (uint16_t)denominator[tx_fifo_threshold];
90010482:	4d11      	ldr	r5, [pc, #68]	; (900104c8 <HAL_UARTEx_SetTxFifoThreshold+0x80>)
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
90010484:	f811 000e 	ldrb.w	r0, [r1, lr]
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
90010488:	f811 100c 	ldrb.w	r1, [r1, ip]
                               (uint16_t)denominator[tx_fifo_threshold];
9001048c:	f815 e00e 	ldrb.w	lr, [r5, lr]
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
90010490:	0100      	lsls	r0, r0, #4
                               (uint16_t)denominator[rx_fifo_threshold];
90010492:	f815 500c 	ldrb.w	r5, [r5, ip]
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
90010496:	0109      	lsls	r1, r1, #4
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
90010498:	fbb0 f0fe 	udiv	r0, r0, lr
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
9001049c:	fbb1 f1f5 	udiv	r1, r1, r5
900104a0:	f8a3 1068 	strh.w	r1, [r3, #104]	; 0x68
  huart->gState = HAL_UART_STATE_READY;
900104a4:	2520      	movs	r5, #32
  __HAL_UNLOCK(huart);
900104a6:	2100      	movs	r1, #0
900104a8:	f8a3 006a 	strh.w	r0, [r3, #106]	; 0x6a
  WRITE_REG(huart->Instance->CR1, tmpcr1);
900104ac:	6014      	str	r4, [r2, #0]
  return HAL_OK;
900104ae:	4608      	mov	r0, r1
  huart->gState = HAL_UART_STATE_READY;
900104b0:	f8c3 5088 	str.w	r5, [r3, #136]	; 0x88
  __HAL_UNLOCK(huart);
900104b4:	f883 1084 	strb.w	r1, [r3, #132]	; 0x84
}
900104b8:	bd30      	pop	{r4, r5, pc}
    huart->NbRxDataToProcess = 1U;
900104ba:	2101      	movs	r1, #1
    huart->NbTxDataToProcess = 1U;
900104bc:	4608      	mov	r0, r1
900104be:	e7ef      	b.n	900104a0 <HAL_UARTEx_SetTxFifoThreshold+0x58>
  __HAL_LOCK(huart);
900104c0:	2002      	movs	r0, #2
}
900104c2:	4770      	bx	lr
900104c4:	9002dfe0 	.word	0x9002dfe0
900104c8:	9002dfd8 	.word	0x9002dfd8

900104cc <HAL_UARTEx_SetRxFifoThreshold>:
  __HAL_LOCK(huart);
900104cc:	f890 2084 	ldrb.w	r2, [r0, #132]	; 0x84
900104d0:	2a01      	cmp	r2, #1
900104d2:	d037      	beq.n	90010544 <HAL_UARTEx_SetRxFifoThreshold+0x78>
  tmpcr1 = READ_REG(huart->Instance->CR1);
900104d4:	6802      	ldr	r2, [r0, #0]
900104d6:	4603      	mov	r3, r0
  huart->gState = HAL_UART_STATE_BUSY;
900104d8:	2024      	movs	r0, #36	; 0x24
{
900104da:	b530      	push	{r4, r5, lr}
  huart->gState = HAL_UART_STATE_BUSY;
900104dc:	f8c3 0088 	str.w	r0, [r3, #136]	; 0x88
  tmpcr1 = READ_REG(huart->Instance->CR1);
900104e0:	6814      	ldr	r4, [r2, #0]
  __HAL_UART_DISABLE(huart);
900104e2:	6810      	ldr	r0, [r2, #0]
900104e4:	f020 0001 	bic.w	r0, r0, #1
900104e8:	6010      	str	r0, [r2, #0]
  MODIFY_REG(huart->Instance->CR3, USART_CR3_RXFTCFG, Threshold);
900104ea:	6890      	ldr	r0, [r2, #8]
900104ec:	f020 6060 	bic.w	r0, r0, #234881024	; 0xe000000
900104f0:	4301      	orrs	r1, r0
  if (huart->FifoMode == UART_FIFOMODE_DISABLE)
900104f2:	6e58      	ldr	r0, [r3, #100]	; 0x64
  MODIFY_REG(huart->Instance->CR3, USART_CR3_RXFTCFG, Threshold);
900104f4:	6091      	str	r1, [r2, #8]
  if (huart->FifoMode == UART_FIFOMODE_DISABLE)
900104f6:	b310      	cbz	r0, 9001053e <HAL_UARTEx_SetRxFifoThreshold+0x72>
    rx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_RXFTCFG) >> USART_CR3_RXFTCFG_Pos);
900104f8:	6891      	ldr	r1, [r2, #8]
    tx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_TXFTCFG) >> USART_CR3_TXFTCFG_Pos);
900104fa:	6890      	ldr	r0, [r2, #8]
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
900104fc:	f3c1 6c42 	ubfx	ip, r1, #25, #3
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
90010500:	4911      	ldr	r1, [pc, #68]	; (90010548 <HAL_UARTEx_SetRxFifoThreshold+0x7c>)
    tx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_TXFTCFG) >> USART_CR3_TXFTCFG_Pos);
90010502:	ea4f 7e50 	mov.w	lr, r0, lsr #29
                               (uint16_t)denominator[tx_fifo_threshold];
90010506:	4d11      	ldr	r5, [pc, #68]	; (9001054c <HAL_UARTEx_SetRxFifoThreshold+0x80>)
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
90010508:	f811 000e 	ldrb.w	r0, [r1, lr]
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
9001050c:	f811 100c 	ldrb.w	r1, [r1, ip]
                               (uint16_t)denominator[tx_fifo_threshold];
90010510:	f815 e00e 	ldrb.w	lr, [r5, lr]
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
90010514:	0100      	lsls	r0, r0, #4
                               (uint16_t)denominator[rx_fifo_threshold];
90010516:	f815 500c 	ldrb.w	r5, [r5, ip]
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
9001051a:	0109      	lsls	r1, r1, #4
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
9001051c:	fbb0 f0fe 	udiv	r0, r0, lr
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
90010520:	fbb1 f1f5 	udiv	r1, r1, r5
90010524:	f8a3 1068 	strh.w	r1, [r3, #104]	; 0x68
  huart->gState = HAL_UART_STATE_READY;
90010528:	2520      	movs	r5, #32
  __HAL_UNLOCK(huart);
9001052a:	2100      	movs	r1, #0
9001052c:	f8a3 006a 	strh.w	r0, [r3, #106]	; 0x6a
  WRITE_REG(huart->Instance->CR1, tmpcr1);
90010530:	6014      	str	r4, [r2, #0]
  return HAL_OK;
90010532:	4608      	mov	r0, r1
  huart->gState = HAL_UART_STATE_READY;
90010534:	f8c3 5088 	str.w	r5, [r3, #136]	; 0x88
  __HAL_UNLOCK(huart);
90010538:	f883 1084 	strb.w	r1, [r3, #132]	; 0x84
}
9001053c:	bd30      	pop	{r4, r5, pc}
    huart->NbRxDataToProcess = 1U;
9001053e:	2101      	movs	r1, #1
    huart->NbTxDataToProcess = 1U;
90010540:	4608      	mov	r0, r1
90010542:	e7ef      	b.n	90010524 <HAL_UARTEx_SetRxFifoThreshold+0x58>
  __HAL_LOCK(huart);
90010544:	2002      	movs	r0, #2
}
90010546:	4770      	bx	lr
90010548:	9002dfe0 	.word	0x9002dfe0
9001054c:	9002dfd8 	.word	0x9002dfd8

90010550 <FMC_SDRAM_Init>:
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
90010550:	680b      	ldr	r3, [r1, #0]
{
90010552:	b410      	push	{r4}
  if (Init->SDBank == FMC_SDRAM_BANK1)
90010554:	b9d3      	cbnz	r3, 9001058c <FMC_SDRAM_Init+0x3c>
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
90010556:	6804      	ldr	r4, [r0, #0]
90010558:	f5a3 4300 	sub.w	r3, r3, #32768	; 0x8000
9001055c:	684a      	ldr	r2, [r1, #4]
9001055e:	4023      	ands	r3, r4
90010560:	4313      	orrs	r3, r2
90010562:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
90010566:	4323      	orrs	r3, r4
90010568:	4313      	orrs	r3, r2
9001056a:	e9d1 4204 	ldrd	r4, r2, [r1, #16]
9001056e:	4323      	orrs	r3, r4
90010570:	4313      	orrs	r3, r2
90010572:	e9d1 4206 	ldrd	r4, r2, [r1, #24]
90010576:	4323      	orrs	r3, r4
90010578:	4313      	orrs	r3, r2
9001057a:	e9d1 4208 	ldrd	r4, r2, [r1, #32]
9001057e:	4323      	orrs	r3, r4
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
90010580:	f85d 4b04 	ldr.w	r4, [sp], #4
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
90010584:	4313      	orrs	r3, r2
90010586:	6003      	str	r3, [r0, #0]
}
90010588:	2000      	movs	r0, #0
9001058a:	4770      	bx	lr
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9001058c:	6802      	ldr	r2, [r0, #0]
9001058e:	e9d1 4307 	ldrd	r4, r3, [r1, #28]
90010592:	f422 42f8 	bic.w	r2, r2, #31744	; 0x7c00
90010596:	4322      	orrs	r2, r4
90010598:	6a4c      	ldr	r4, [r1, #36]	; 0x24
9001059a:	431a      	orrs	r2, r3
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
9001059c:	4b0a      	ldr	r3, [pc, #40]	; (900105c8 <FMC_SDRAM_Init+0x78>)
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9001059e:	4322      	orrs	r2, r4
900105a0:	6002      	str	r2, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
900105a2:	6842      	ldr	r2, [r0, #4]
900105a4:	4013      	ands	r3, r2
900105a6:	e9d1 4201 	ldrd	r4, r2, [r1, #4]
900105aa:	4323      	orrs	r3, r4
900105ac:	4313      	orrs	r3, r2
900105ae:	e9d1 4203 	ldrd	r4, r2, [r1, #12]
900105b2:	4323      	orrs	r3, r4
900105b4:	4313      	orrs	r3, r2
900105b6:	e9d1 4205 	ldrd	r4, r2, [r1, #20]
900105ba:	4323      	orrs	r3, r4
}
900105bc:	f85d 4b04 	ldr.w	r4, [sp], #4
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
900105c0:	4313      	orrs	r3, r2
900105c2:	6043      	str	r3, [r0, #4]
}
900105c4:	2000      	movs	r0, #0
900105c6:	4770      	bx	lr
900105c8:	ffff8000 	.word	0xffff8000

900105cc <FMC_SDRAM_Timing_Init>:
  * @param  Bank SDRAM bank number
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
900105cc:	b430      	push	{r4, r5}
  assert_param(IS_FMC_RP_DELAY(Timing->RPDelay));
  assert_param(IS_FMC_RCD_DELAY(Timing->RCDDelay));
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
900105ce:	bb0a      	cbnz	r2, 90010614 <FMC_SDRAM_Timing_Init+0x48>
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
900105d0:	6883      	ldr	r3, [r0, #8]
900105d2:	e9d1 2400 	ldrd	r2, r4, [r1]
900105d6:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
900105da:	3c01      	subs	r4, #1
900105dc:	3a01      	subs	r2, #1
900105de:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
900105e2:	4313      	orrs	r3, r2
900105e4:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
900105e8:	3c01      	subs	r4, #1
900105ea:	3a01      	subs	r2, #1
900105ec:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
900105f0:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
900105f4:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
900105f8:	698a      	ldr	r2, [r1, #24]
900105fa:	3d01      	subs	r5, #1
900105fc:	1e61      	subs	r1, r4, #1
900105fe:	3a01      	subs	r2, #1
90010600:	ea43 4305 	orr.w	r3, r3, r5, lsl #16
90010604:	ea43 5301 	orr.w	r3, r3, r1, lsl #20
90010608:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTRx_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTRx_TRCD_Pos)));
  }

  return HAL_OK;
}
9001060c:	bc30      	pop	{r4, r5}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9001060e:	6083      	str	r3, [r0, #8]
}
90010610:	2000      	movs	r0, #0
90010612:	4770      	bx	lr
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
90010614:	6885      	ldr	r5, [r0, #8]
90010616:	68ca      	ldr	r2, [r1, #12]
90010618:	4b12      	ldr	r3, [pc, #72]	; (90010664 <FMC_SDRAM_Timing_Init+0x98>)
9001061a:	1e54      	subs	r4, r2, #1
9001061c:	694a      	ldr	r2, [r1, #20]
9001061e:	402b      	ands	r3, r5
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
90010620:	688d      	ldr	r5, [r1, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
90010622:	3a01      	subs	r2, #1
90010624:	ea43 3304 	orr.w	r3, r3, r4, lsl #12
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
90010628:	f105 3cff 	add.w	ip, r5, #4294967295
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9001062c:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
90010630:	e9d1 2400 	ldrd	r2, r4, [r1]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
90010634:	6083      	str	r3, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
90010636:	68c3      	ldr	r3, [r0, #12]
90010638:	3c01      	subs	r4, #1
9001063a:	3a01      	subs	r2, #1
9001063c:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
90010640:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
90010644:	690c      	ldr	r4, [r1, #16]
90010646:	4313      	orrs	r3, r2
90010648:	698a      	ldr	r2, [r1, #24]
9001064a:	1e61      	subs	r1, r4, #1
9001064c:	ea43 230c 	orr.w	r3, r3, ip, lsl #8
90010650:	3a01      	subs	r2, #1
90010652:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
90010656:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
}
9001065a:	bc30      	pop	{r4, r5}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9001065c:	60c3      	str	r3, [r0, #12]
}
9001065e:	2000      	movs	r0, #0
90010660:	4770      	bx	lr
90010662:	bf00      	nop
90010664:	ff0f0fff 	.word	0xff0f0fff

90010668 <FMC_SDRAM_DeInit>:
  * @brief  DeInitializes the FMC_SDRAM peripheral
  * @param  Device Pointer to SDRAM device instance
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_DeInit(FMC_SDRAM_TypeDef *Device, uint32_t Bank)
{
90010668:	b430      	push	{r4, r5}
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* De-initialize the SDRAM device */
  Device->SDCR[Bank] = 0x000002D0U;
  Device->SDTR[Bank] = 0x0FFFFFFFU;
  Device->SDCMR      = 0x00000000U;
9001066a:	2200      	movs	r2, #0
{
9001066c:	4603      	mov	r3, r0
  Device->SDCR[Bank] = 0x000002D0U;
9001066e:	f44f 7534 	mov.w	r5, #720	; 0x2d0
  Device->SDTR[Bank] = 0x0FFFFFFFU;
90010672:	f06f 4470 	mvn.w	r4, #4026531840	; 0xf0000000
90010676:	eb00 0c81 	add.w	ip, r0, r1, lsl #2
  Device->SDCR[Bank] = 0x000002D0U;
9001067a:	f840 5021 	str.w	r5, [r0, r1, lsl #2]
  Device->SDRTR      = 0x00000000U;
  Device->SDSR       = 0x00000000U;

  return HAL_OK;
}
9001067e:	4610      	mov	r0, r2
  Device->SDTR[Bank] = 0x0FFFFFFFU;
90010680:	f8cc 4008 	str.w	r4, [ip, #8]
  Device->SDCMR      = 0x00000000U;
90010684:	611a      	str	r2, [r3, #16]
  Device->SDRTR      = 0x00000000U;
90010686:	615a      	str	r2, [r3, #20]
  Device->SDSR       = 0x00000000U;
90010688:	619a      	str	r2, [r3, #24]
}
9001068a:	bc30      	pop	{r4, r5}
9001068c:	4770      	bx	lr
9001068e:	bf00      	nop

90010690 <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
90010690:	b410      	push	{r4}
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
90010692:	e9d1 3400 	ldrd	r3, r4, [r1]
{
90010696:	4602      	mov	r2, r0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
90010698:	6900      	ldr	r0, [r0, #16]
9001069a:	4323      	orrs	r3, r4
9001069c:	e9d1 1402 	ldrd	r1, r4, [r1, #8]
900106a0:	ea43 2344 	orr.w	r3, r3, r4, lsl #9
900106a4:	4c05      	ldr	r4, [pc, #20]	; (900106bc <FMC_SDRAM_SendCommand+0x2c>)
900106a6:	3901      	subs	r1, #1
900106a8:	4004      	ands	r4, r0
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Prevent unused argument(s) compilation warning */
  UNUSED(Timeout);
  return HAL_OK;
}
900106aa:	2000      	movs	r0, #0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
900106ac:	4323      	orrs	r3, r4
}
900106ae:	f85d 4b04 	ldr.w	r4, [sp], #4
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
900106b2:	ea43 1341 	orr.w	r3, r3, r1, lsl #5
900106b6:	6113      	str	r3, [r2, #16]
}
900106b8:	4770      	bx	lr
900106ba:	bf00      	nop
900106bc:	ffc00000 	.word	0xffc00000

900106c0 <FMC_SDRAM_ProgramRefreshRate>:
  * @param  Device Pointer to SDRAM device instance
  * @param  RefreshRate The SDRAM refresh rate value.
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_ProgramRefreshRate(FMC_SDRAM_TypeDef *Device, uint32_t RefreshRate)
{
900106c0:	4602      	mov	r2, r0
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
900106c2:	4b05      	ldr	r3, [pc, #20]	; (900106d8 <FMC_SDRAM_ProgramRefreshRate+0x18>)

  return HAL_OK;
}
900106c4:	2000      	movs	r0, #0
{
900106c6:	b410      	push	{r4}
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
900106c8:	6954      	ldr	r4, [r2, #20]
900106ca:	4023      	ands	r3, r4
}
900106cc:	f85d 4b04 	ldr.w	r4, [sp], #4
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
900106d0:	ea43 0141 	orr.w	r1, r3, r1, lsl #1
900106d4:	6151      	str	r1, [r2, #20]
}
900106d6:	4770      	bx	lr
900106d8:	ffffc001 	.word	0xffffc001

900106dc <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
900106dc:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
900106de:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
900106e2:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
900106e4:	f002 fd82 	bl	900131ec <xTaskGetSchedulerState>
900106e8:	2801      	cmp	r0, #1
900106ea:	d100      	bne.n	900106ee <SysTick_Handler+0x12>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
900106ec:	bd08      	pop	{r3, pc}
900106ee:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
900106f2:	f000 bcef 	b.w	900110d4 <xPortSysTickHandler>
900106f6:	bf00      	nop

900106f8 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
900106f8:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
900106fc:	b92b      	cbnz	r3, 9001070a <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
900106fe:	4b06      	ldr	r3, [pc, #24]	; (90010718 <osKernelInitialize+0x20>)
90010700:	6818      	ldr	r0, [r3, #0]
90010702:	b928      	cbnz	r0, 90010710 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
90010704:	2201      	movs	r2, #1
90010706:	601a      	str	r2, [r3, #0]
      stat = osOK;
90010708:	4770      	bx	lr
    stat = osErrorISR;
9001070a:	f06f 0005 	mvn.w	r0, #5
9001070e:	4770      	bx	lr
    } else {
      stat = osError;
90010710:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
90010714:	4770      	bx	lr
90010716:	bf00      	nop
90010718:	2400a52c 	.word	0x2400a52c

9001071c <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
9001071c:	b510      	push	{r4, lr}
9001071e:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
90010722:	b974      	cbnz	r4, 90010742 <osKernelStart+0x26>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
90010724:	4b08      	ldr	r3, [pc, #32]	; (90010748 <osKernelStart+0x2c>)
90010726:	681a      	ldr	r2, [r3, #0]
90010728:	2a01      	cmp	r2, #1
9001072a:	d107      	bne.n	9001073c <osKernelStart+0x20>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
9001072c:	4907      	ldr	r1, [pc, #28]	; (9001074c <osKernelStart+0x30>)
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
9001072e:	2202      	movs	r2, #2
90010730:	77cc      	strb	r4, [r1, #31]
90010732:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
90010734:	f002 fa7a 	bl	90012c2c <vTaskStartScheduler>
      stat = osOK;
90010738:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
9001073a:	bd10      	pop	{r4, pc}
      stat = osError;
9001073c:	f04f 30ff 	mov.w	r0, #4294967295
}
90010740:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
90010742:	f06f 0005 	mvn.w	r0, #5
}
90010746:	bd10      	pop	{r4, pc}
90010748:	2400a52c 	.word	0x2400a52c
9001074c:	e000ed00 	.word	0xe000ed00

90010750 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
90010750:	b5f0      	push	{r4, r5, r6, r7, lr}
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
90010752:	2500      	movs	r5, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
90010754:	b087      	sub	sp, #28
90010756:	4614      	mov	r4, r2
  hTask = NULL;
90010758:	9505      	str	r5, [sp, #20]
9001075a:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
9001075e:	bb5a      	cbnz	r2, 900107b8 <osThreadNew+0x68>
90010760:	4606      	mov	r6, r0
90010762:	b348      	cbz	r0, 900107b8 <osThreadNew+0x68>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
90010764:	b1e4      	cbz	r4, 900107a0 <osThreadNew+0x50>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
90010766:	69a7      	ldr	r7, [r4, #24]
90010768:	bb4f      	cbnz	r7, 900107be <osThreadNew+0x6e>
9001076a:	2718      	movs	r7, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
9001076c:	6863      	ldr	r3, [r4, #4]
9001076e:	07db      	lsls	r3, r3, #31
90010770:	d422      	bmi.n	900107b8 <osThreadNew+0x68>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
90010772:	6963      	ldr	r3, [r4, #20]
90010774:	b33b      	cbz	r3, 900107c6 <osThreadNew+0x76>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
90010776:	ea4f 0c93 	mov.w	ip, r3, lsr #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
9001077a:	68a0      	ldr	r0, [r4, #8]
      if (attr->name != NULL) {
9001077c:	6825      	ldr	r5, [r4, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
9001077e:	b338      	cbz	r0, 900107d0 <osThreadNew+0x80>
90010780:	68e2      	ldr	r2, [r4, #12]
90010782:	2a5f      	cmp	r2, #95	; 0x5f
90010784:	d918      	bls.n	900107b8 <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
90010786:	6924      	ldr	r4, [r4, #16]
90010788:	b1b3      	cbz	r3, 900107b8 <osThreadNew+0x68>
9001078a:	b1ac      	cbz	r4, 900107b8 <osThreadNew+0x68>
      mem = 0;
    }

    if (mem == 1) {
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
9001078c:	460b      	mov	r3, r1
9001078e:	4662      	mov	r2, ip
90010790:	4629      	mov	r1, r5
90010792:	9700      	str	r7, [sp, #0]
90010794:	e9cd 4001 	strd	r4, r0, [sp, #4]
90010798:	4630      	mov	r0, r6
9001079a:	f002 f8ab 	bl	900128f4 <xTaskCreateStatic>
9001079e:	e00c      	b.n	900107ba <osThreadNew+0x6a>
900107a0:	2280      	movs	r2, #128	; 0x80
    prio  = (UBaseType_t)osPriorityNormal;
900107a2:	2718      	movs	r7, #24
      #endif
    }
    else {
      if (mem == 0) {
        #if (configSUPPORT_DYNAMIC_ALLOCATION == 1)
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
900107a4:	460b      	mov	r3, r1
900107a6:	4621      	mov	r1, r4
900107a8:	ac05      	add	r4, sp, #20
900107aa:	4630      	mov	r0, r6
900107ac:	9700      	str	r7, [sp, #0]
900107ae:	9401      	str	r4, [sp, #4]
900107b0:	f002 f94a 	bl	90012a48 <xTaskCreate>
900107b4:	2801      	cmp	r0, #1
900107b6:	d009      	beq.n	900107cc <osThreadNew+0x7c>
        return (NULL);
900107b8:	2000      	movs	r0, #0
      }
    }
  }

  return ((osThreadId_t)hTask);
}
900107ba:	b007      	add	sp, #28
900107bc:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
900107be:	1e7a      	subs	r2, r7, #1
900107c0:	2a37      	cmp	r2, #55	; 0x37
900107c2:	d9d3      	bls.n	9001076c <osThreadNew+0x1c>
900107c4:	e7f8      	b.n	900107b8 <osThreadNew+0x68>
    stack = configMINIMAL_STACK_SIZE;
900107c6:	f04f 0c80 	mov.w	ip, #128	; 0x80
900107ca:	e7d6      	b.n	9001077a <osThreadNew+0x2a>
  return ((osThreadId_t)hTask);
900107cc:	9805      	ldr	r0, [sp, #20]
900107ce:	e7f4      	b.n	900107ba <osThreadNew+0x6a>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
900107d0:	68e3      	ldr	r3, [r4, #12]
900107d2:	2b00      	cmp	r3, #0
900107d4:	d1f1      	bne.n	900107ba <osThreadNew+0x6a>
900107d6:	6923      	ldr	r3, [r4, #16]
900107d8:	2b00      	cmp	r3, #0
900107da:	d1ee      	bne.n	900107ba <osThreadNew+0x6a>
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
900107dc:	fa1f f28c 	uxth.w	r2, ip
900107e0:	462c      	mov	r4, r5
900107e2:	e7df      	b.n	900107a4 <osThreadNew+0x54>

900107e4 <osThreadSuspend>:

  return (stat);
}

#if (configUSE_OS2_THREAD_SUSPEND_RESUME == 1)
osStatus_t osThreadSuspend (osThreadId_t thread_id) {
900107e4:	b510      	push	{r4, lr}
900107e6:	f3ef 8405 	mrs	r4, IPSR
  TaskHandle_t hTask = (TaskHandle_t)thread_id;
  osStatus_t stat;

  if (IS_IRQ()) {
900107ea:	b924      	cbnz	r4, 900107f6 <osThreadSuspend+0x12>
    stat = osErrorISR;
  }
  else if (hTask == NULL) {
900107ec:	b130      	cbz	r0, 900107fc <osThreadSuspend+0x18>
    stat = osErrorParameter;
  }
  else {
    stat = osOK;
    vTaskSuspend (hTask);
900107ee:	f002 fb57 	bl	90012ea0 <vTaskSuspend>
    stat = osOK;
900107f2:	4620      	mov	r0, r4
  }

  return (stat);
}
900107f4:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
900107f6:	f06f 0005 	mvn.w	r0, #5
}
900107fa:	bd10      	pop	{r4, pc}
    stat = osErrorParameter;
900107fc:	f06f 0003 	mvn.w	r0, #3
}
90010800:	bd10      	pop	{r4, pc}
90010802:	bf00      	nop

90010804 <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
90010804:	b510      	push	{r4, lr}
90010806:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
9001080a:	b92c      	cbnz	r4, 90010818 <osDelay+0x14>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
9001080c:	b900      	cbnz	r0, 90010810 <osDelay+0xc>
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
9001080e:	bd10      	pop	{r4, pc}
      vTaskDelay(ticks);
90010810:	f002 f9b6 	bl	90012b80 <vTaskDelay>
    stat = osOK;
90010814:	4620      	mov	r0, r4
}
90010816:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
90010818:	f06f 0005 	mvn.w	r0, #5
}
9001081c:	bd10      	pop	{r4, pc}
9001081e:	bf00      	nop

90010820 <osMutexNew>:
}

/*---------------------------------------------------------------------------*/
#if (configUSE_OS2_MUTEX == 1)

osMutexId_t osMutexNew (const osMutexAttr_t *attr) {
90010820:	b570      	push	{r4, r5, r6, lr}
90010822:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hMutex = NULL;

  if (!IS_IRQ()) {
90010826:	b9db      	cbnz	r3, 90010860 <osMutexNew+0x40>
    if (attr != NULL) {
90010828:	4604      	mov	r4, r0
9001082a:	b1e0      	cbz	r0, 90010866 <osMutexNew+0x46>
      type = attr->attr_bits;
9001082c:	6846      	ldr	r6, [r0, #4]
      rmtx = 1U;
    } else {
      rmtx = 0U;
    }

    if ((type & osMutexRobust) != osMutexRobust) {
9001082e:	0733      	lsls	r3, r6, #28
90010830:	d416      	bmi.n	90010860 <osMutexNew+0x40>
      mem = -1;

      if (attr != NULL) {
        if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
90010832:	6881      	ldr	r1, [r0, #8]
    if ((type & osMutexRecursive) == osMutexRecursive) {
90010834:	f006 0601 	and.w	r6, r6, #1
        if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
90010838:	68c3      	ldr	r3, [r0, #12]
9001083a:	b181      	cbz	r1, 9001085e <osMutexNew+0x3e>
9001083c:	2b4f      	cmp	r3, #79	; 0x4f
9001083e:	d90f      	bls.n	90010860 <osMutexNew+0x40>
        mem = 0;
      }

      if (mem == 1) {
        #if (configSUPPORT_STATIC_ALLOCATION == 1)
          if (rmtx != 0U) {
90010840:	b31e      	cbz	r6, 9001088a <osMutexNew+0x6a>
            #if (configUSE_RECURSIVE_MUTEXES == 1)
            hMutex = xSemaphoreCreateRecursiveMutexStatic (attr->cb_mem);
90010842:	2004      	movs	r0, #4
90010844:	f001 f858 	bl	900118f8 <xQueueCreateMutexStatic>
90010848:	4605      	mov	r5, r0
          #endif
        }
      }

      #if (configQUEUE_REGISTRY_SIZE > 0)
      if (hMutex != NULL) {
9001084a:	b14d      	cbz	r5, 90010860 <osMutexNew+0x40>
        if (attr != NULL) {
          name = attr->name;
        } else {
          name = NULL;
        }
        vQueueAddToRegistry (hMutex, name);
9001084c:	6821      	ldr	r1, [r4, #0]
9001084e:	4628      	mov	r0, r5
90010850:	f001 fdac 	bl	900123ac <vQueueAddToRegistry>
      }
      #endif

      if ((hMutex != NULL) && (rmtx != 0U)) {
90010854:	b12e      	cbz	r6, 90010862 <osMutexNew+0x42>
        hMutex = (SemaphoreHandle_t)((uint32_t)hMutex | 1U);
90010856:	f045 0501 	orr.w	r5, r5, #1
      }
    }
  }

  return ((osMutexId_t)hMutex);
}
9001085a:	4628      	mov	r0, r5
9001085c:	bd70      	pop	{r4, r5, r6, pc}
          if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
9001085e:	b163      	cbz	r3, 9001087a <osMutexNew+0x5a>
  hMutex = NULL;
90010860:	2500      	movs	r5, #0
}
90010862:	4628      	mov	r0, r5
90010864:	bd70      	pop	{r4, r5, r6, pc}
              hMutex = xSemaphoreCreateMutex ();
90010866:	2001      	movs	r0, #1
90010868:	f001 f8b6 	bl	900119d8 <xQueueCreateMutex>
      if (hMutex != NULL) {
9001086c:	4605      	mov	r5, r0
9001086e:	2800      	cmp	r0, #0
90010870:	d0f6      	beq.n	90010860 <osMutexNew+0x40>
        vQueueAddToRegistry (hMutex, name);
90010872:	4621      	mov	r1, r4
90010874:	f001 fd9a 	bl	900123ac <vQueueAddToRegistry>
      if ((hMutex != NULL) && (rmtx != 0U)) {
90010878:	e7f3      	b.n	90010862 <osMutexNew+0x42>
            if (rmtx != 0U) {
9001087a:	b15e      	cbz	r6, 90010894 <osMutexNew+0x74>
              hMutex = xSemaphoreCreateRecursiveMutex ();
9001087c:	2004      	movs	r0, #4
9001087e:	f001 f8ab 	bl	900119d8 <xQueueCreateMutex>
      if (hMutex != NULL) {
90010882:	4605      	mov	r5, r0
90010884:	2800      	cmp	r0, #0
90010886:	d1e1      	bne.n	9001084c <osMutexNew+0x2c>
90010888:	e7ea      	b.n	90010860 <osMutexNew+0x40>
            hMutex = xSemaphoreCreateMutexStatic (attr->cb_mem);
9001088a:	2001      	movs	r0, #1
9001088c:	f001 f834 	bl	900118f8 <xQueueCreateMutexStatic>
90010890:	4605      	mov	r5, r0
90010892:	e7da      	b.n	9001084a <osMutexNew+0x2a>
              hMutex = xSemaphoreCreateMutex ();
90010894:	2001      	movs	r0, #1
90010896:	f001 f89f 	bl	900119d8 <xQueueCreateMutex>
      if (hMutex != NULL) {
9001089a:	4605      	mov	r5, r0
9001089c:	e7d5      	b.n	9001084a <osMutexNew+0x2a>
9001089e:	bf00      	nop

900108a0 <osMutexAcquire>:
osStatus_t osMutexAcquire (osMutexId_t mutex_id, uint32_t timeout) {
  SemaphoreHandle_t hMutex;
  osStatus_t stat;
  uint32_t rmtx;

  hMutex = (SemaphoreHandle_t)((uint32_t)mutex_id & ~1U);
900108a0:	f020 0201 	bic.w	r2, r0, #1

  rmtx = (uint32_t)mutex_id & 1U;
900108a4:	f000 0301 	and.w	r3, r0, #1
900108a8:	f3ef 8005 	mrs	r0, IPSR

  stat = osOK;

  if (IS_IRQ()) {
900108ac:	b9a8      	cbnz	r0, 900108da <osMutexAcquire+0x3a>
    stat = osErrorISR;
  }
  else if (hMutex == NULL) {
900108ae:	b1ba      	cbz	r2, 900108e0 <osMutexAcquire+0x40>
    stat = osErrorParameter;
  }
  else {
    if (rmtx != 0U) {
      #if (configUSE_RECURSIVE_MUTEXES == 1)
      if (xSemaphoreTakeRecursive (hMutex, timeout) != pdPASS) {
900108b0:	4610      	mov	r0, r2
osStatus_t osMutexAcquire (osMutexId_t mutex_id, uint32_t timeout) {
900108b2:	b510      	push	{r4, lr}
900108b4:	460c      	mov	r4, r1
    if (rmtx != 0U) {
900108b6:	b953      	cbnz	r3, 900108ce <osMutexAcquire+0x2e>
        }
      }
      #endif
    }
    else {
      if (xSemaphoreTake (hMutex, timeout) != pdPASS) {
900108b8:	f001 fb06 	bl	90011ec8 <xQueueSemaphoreTake>
900108bc:	2801      	cmp	r0, #1
900108be:	d00a      	beq.n	900108d6 <osMutexAcquire+0x36>
          stat = osErrorResource;
900108c0:	2c00      	cmp	r4, #0
900108c2:	bf14      	ite	ne
900108c4:	f06f 0001 	mvnne.w	r0, #1
900108c8:	f06f 0002 	mvneq.w	r0, #2
      }
    }
  }

  return (stat);
}
900108cc:	bd10      	pop	{r4, pc}
      if (xSemaphoreTakeRecursive (hMutex, timeout) != pdPASS) {
900108ce:	f001 fc83 	bl	900121d8 <xQueueTakeMutexRecursive>
900108d2:	2801      	cmp	r0, #1
900108d4:	d1f4      	bne.n	900108c0 <osMutexAcquire+0x20>
  stat = osOK;
900108d6:	2000      	movs	r0, #0
}
900108d8:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
900108da:	f06f 0005 	mvn.w	r0, #5
900108de:	4770      	bx	lr
    stat = osErrorParameter;
900108e0:	f06f 0003 	mvn.w	r0, #3
}
900108e4:	4770      	bx	lr
900108e6:	bf00      	nop

900108e8 <osMutexRelease>:
900108e8:	f3ef 8205 	mrs	r2, IPSR

  rmtx = (uint32_t)mutex_id & 1U;

  stat = osOK;

  if (IS_IRQ()) {
900108ec:	b9ba      	cbnz	r2, 9001091e <osMutexRelease+0x36>
osStatus_t osMutexRelease (osMutexId_t mutex_id) {
900108ee:	b510      	push	{r4, lr}
900108f0:	f020 0401 	bic.w	r4, r0, #1
    stat = osErrorISR;
  }
  else if (hMutex == NULL) {
900108f4:	b1b4      	cbz	r4, 90010924 <osMutexRelease+0x3c>
    stat = osErrorParameter;
  }
  else {
    if (rmtx != 0U) {
900108f6:	f000 0301 	and.w	r3, r0, #1
900108fa:	b943      	cbnz	r3, 9001090e <osMutexRelease+0x26>
        stat = osErrorResource;
      }
      #endif
    }
    else {
      if (xSemaphoreGive (hMutex) != pdPASS) {
900108fc:	461a      	mov	r2, r3
900108fe:	4619      	mov	r1, r3
90010900:	4620      	mov	r0, r4
90010902:	f000 fe77 	bl	900115f4 <xQueueGenericSend>
90010906:	2801      	cmp	r0, #1
90010908:	d106      	bne.n	90010918 <osMutexRelease+0x30>
  stat = osOK;
9001090a:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
9001090c:	bd10      	pop	{r4, pc}
      if (xSemaphoreGiveRecursive (hMutex) != pdPASS) {
9001090e:	4620      	mov	r0, r4
90010910:	f001 f842 	bl	90011998 <xQueueGiveMutexRecursive>
90010914:	2801      	cmp	r0, #1
90010916:	d0f8      	beq.n	9001090a <osMutexRelease+0x22>
        stat = osErrorResource;
90010918:	f06f 0002 	mvn.w	r0, #2
}
9001091c:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
9001091e:	f06f 0005 	mvn.w	r0, #5
}
90010922:	4770      	bx	lr
    stat = osErrorParameter;
90010924:	f06f 0003 	mvn.w	r0, #3
}
90010928:	bd10      	pop	{r4, pc}
9001092a:	bf00      	nop

9001092c <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
9001092c:	b5f0      	push	{r4, r5, r6, r7, lr}
9001092e:	b083      	sub	sp, #12
90010930:	f3ef 8605 	mrs	r6, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
90010934:	b98e      	cbnz	r6, 9001095a <osSemaphoreNew+0x2e>
90010936:	4605      	mov	r5, r0
90010938:	b178      	cbz	r0, 9001095a <osSemaphoreNew+0x2e>
9001093a:	4288      	cmp	r0, r1
9001093c:	460f      	mov	r7, r1
9001093e:	d30c      	bcc.n	9001095a <osSemaphoreNew+0x2e>
    mem = -1;

    if (attr != NULL) {
90010940:	4614      	mov	r4, r2
90010942:	b182      	cbz	r2, 90010966 <osSemaphoreNew+0x3a>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
90010944:	e9d2 2302 	ldrd	r2, r3, [r2, #8]
90010948:	b15a      	cbz	r2, 90010962 <osSemaphoreNew+0x36>
9001094a:	2b4f      	cmp	r3, #79	; 0x4f
9001094c:	d905      	bls.n	9001095a <osSemaphoreNew+0x2e>
    else {
      mem = 0;
    }

    if (mem != -1) {
      if (max_count == 1U) {
9001094e:	2801      	cmp	r0, #1
90010950:	d032      	beq.n	900109b8 <osSemaphoreNew+0x8c>
        }
      }
      else {
        if (mem == 1) {
          #if (configSUPPORT_STATIC_ALLOCATION == 1)
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
90010952:	f000 fda7 	bl	900114a4 <xQueueCreateCountingSemaphoreStatic>
          #endif
        }
      }
      
      #if (configQUEUE_REGISTRY_SIZE > 0)
      if (hSemaphore != NULL) {
90010956:	4605      	mov	r5, r0
90010958:	b978      	cbnz	r0, 9001097a <osSemaphoreNew+0x4e>
  hSemaphore = NULL;
9001095a:	2500      	movs	r5, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
9001095c:	4628      	mov	r0, r5
9001095e:	b003      	add	sp, #12
90010960:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
90010962:	2b00      	cmp	r3, #0
90010964:	d1f9      	bne.n	9001095a <osSemaphoreNew+0x2e>
      if (max_count == 1U) {
90010966:	2d01      	cmp	r5, #1
90010968:	d00f      	beq.n	9001098a <osSemaphoreNew+0x5e>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
9001096a:	4628      	mov	r0, r5
9001096c:	4639      	mov	r1, r7
9001096e:	f000 fdfb 	bl	90011568 <xQueueCreateCountingSemaphore>
90010972:	4605      	mov	r5, r0
      if (hSemaphore != NULL) {
90010974:	2d00      	cmp	r5, #0
90010976:	d0f0      	beq.n	9001095a <osSemaphoreNew+0x2e>
        if (attr != NULL) {
90010978:	b104      	cbz	r4, 9001097c <osSemaphoreNew+0x50>
          name = attr->name;
9001097a:	6824      	ldr	r4, [r4, #0]
        vQueueAddToRegistry (hSemaphore, name);
9001097c:	4628      	mov	r0, r5
9001097e:	4621      	mov	r1, r4
90010980:	f001 fd14 	bl	900123ac <vQueueAddToRegistry>
}
90010984:	4628      	mov	r0, r5
90010986:	b003      	add	sp, #12
90010988:	bdf0      	pop	{r4, r5, r6, r7, pc}
            hSemaphore = xSemaphoreCreateBinary();
9001098a:	4628      	mov	r0, r5
9001098c:	2203      	movs	r2, #3
9001098e:	2100      	movs	r1, #0
90010990:	f000 fd46 	bl	90011420 <xQueueGenericCreate>
90010994:	4605      	mov	r5, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
90010996:	2d00      	cmp	r5, #0
90010998:	d0df      	beq.n	9001095a <osSemaphoreNew+0x2e>
9001099a:	2f00      	cmp	r7, #0
9001099c:	d0ea      	beq.n	90010974 <osSemaphoreNew+0x48>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
9001099e:	2300      	movs	r3, #0
900109a0:	4628      	mov	r0, r5
900109a2:	461a      	mov	r2, r3
900109a4:	4619      	mov	r1, r3
900109a6:	f000 fe25 	bl	900115f4 <xQueueGenericSend>
900109aa:	2801      	cmp	r0, #1
900109ac:	d0e4      	beq.n	90010978 <osSemaphoreNew+0x4c>
            vSemaphoreDelete (hSemaphore);
900109ae:	4628      	mov	r0, r5
            hSemaphore = NULL;
900109b0:	2500      	movs	r5, #0
            vSemaphoreDelete (hSemaphore);
900109b2:	f001 fcb5 	bl	90012320 <vQueueDelete>
      if (hSemaphore != NULL) {
900109b6:	e7d1      	b.n	9001095c <osSemaphoreNew+0x30>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
900109b8:	4613      	mov	r3, r2
900109ba:	2203      	movs	r2, #3
900109bc:	4631      	mov	r1, r6
900109be:	9200      	str	r2, [sp, #0]
900109c0:	4632      	mov	r2, r6
900109c2:	f000 fcc1 	bl	90011348 <xQueueGenericCreateStatic>
900109c6:	4605      	mov	r5, r0
900109c8:	e7e5      	b.n	90010996 <osSemaphoreNew+0x6a>
900109ca:	bf00      	nop

900109cc <osSemaphoreAcquire>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
900109cc:	b370      	cbz	r0, 90010a2c <osSemaphoreAcquire+0x60>
osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
900109ce:	b510      	push	{r4, lr}
900109d0:	460c      	mov	r4, r1
900109d2:	b082      	sub	sp, #8
900109d4:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
900109d8:	b1c3      	cbz	r3, 90010a0c <osSemaphoreAcquire+0x40>
    if (timeout != 0U) {
900109da:	bb21      	cbnz	r1, 90010a26 <osSemaphoreAcquire+0x5a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
900109dc:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
900109de:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
900109e0:	f001 fc1a 	bl	90012218 <xQueueReceiveFromISR>
900109e4:	2801      	cmp	r0, #1
900109e6:	d11a      	bne.n	90010a1e <osSemaphoreAcquire+0x52>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
900109e8:	9b01      	ldr	r3, [sp, #4]
900109ea:	b913      	cbnz	r3, 900109f2 <osSemaphoreAcquire+0x26>
  stat = osOK;
900109ec:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
900109ee:	b002      	add	sp, #8
900109f0:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
900109f2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
900109f6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
900109fa:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
900109fe:	f3bf 8f4f 	dsb	sy
90010a02:	f3bf 8f6f 	isb	sy
  stat = osOK;
90010a06:	4620      	mov	r0, r4
}
90010a08:	b002      	add	sp, #8
90010a0a:	bd10      	pop	{r4, pc}
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
90010a0c:	f001 fa5c 	bl	90011ec8 <xQueueSemaphoreTake>
90010a10:	2801      	cmp	r0, #1
90010a12:	d0eb      	beq.n	900109ec <osSemaphoreAcquire+0x20>
      if (timeout != 0U) {
90010a14:	b11c      	cbz	r4, 90010a1e <osSemaphoreAcquire+0x52>
        stat = osErrorTimeout;
90010a16:	f06f 0001 	mvn.w	r0, #1
}
90010a1a:	b002      	add	sp, #8
90010a1c:	bd10      	pop	{r4, pc}
        stat = osErrorResource;
90010a1e:	f06f 0002 	mvn.w	r0, #2
}
90010a22:	b002      	add	sp, #8
90010a24:	bd10      	pop	{r4, pc}
    stat = osErrorParameter;
90010a26:	f06f 0003 	mvn.w	r0, #3
90010a2a:	e7e0      	b.n	900109ee <osSemaphoreAcquire+0x22>
90010a2c:	f06f 0003 	mvn.w	r0, #3
}
90010a30:	4770      	bx	lr
90010a32:	bf00      	nop

90010a34 <osSemaphoreRelease>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
90010a34:	b330      	cbz	r0, 90010a84 <osSemaphoreRelease+0x50>
osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
90010a36:	b510      	push	{r4, lr}
90010a38:	b082      	sub	sp, #8
90010a3a:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
90010a3e:	b1ab      	cbz	r3, 90010a6c <osSemaphoreRelease+0x38>
    yield = pdFALSE;
90010a40:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
90010a42:	a901      	add	r1, sp, #4
    yield = pdFALSE;
90010a44:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
90010a46:	f001 f869 	bl	90011b1c <xQueueGiveFromISR>
90010a4a:	2801      	cmp	r0, #1
90010a4c:	d117      	bne.n	90010a7e <osSemaphoreRelease+0x4a>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
90010a4e:	9b01      	ldr	r3, [sp, #4]
90010a50:	b193      	cbz	r3, 90010a78 <osSemaphoreRelease+0x44>
90010a52:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
90010a56:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
90010a5a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
90010a5e:	f3bf 8f4f 	dsb	sy
90010a62:	f3bf 8f6f 	isb	sy
  stat = osOK;
90010a66:	4620      	mov	r0, r4
      stat = osErrorResource;
    }
  }

  return (stat);
}
90010a68:	b002      	add	sp, #8
90010a6a:	bd10      	pop	{r4, pc}
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
90010a6c:	461a      	mov	r2, r3
90010a6e:	4619      	mov	r1, r3
90010a70:	f000 fdc0 	bl	900115f4 <xQueueGenericSend>
90010a74:	2801      	cmp	r0, #1
90010a76:	d102      	bne.n	90010a7e <osSemaphoreRelease+0x4a>
  stat = osOK;
90010a78:	2000      	movs	r0, #0
}
90010a7a:	b002      	add	sp, #8
90010a7c:	bd10      	pop	{r4, pc}
      stat = osErrorResource;
90010a7e:	f06f 0002 	mvn.w	r0, #2
90010a82:	e7fa      	b.n	90010a7a <osSemaphoreRelease+0x46>
    stat = osErrorParameter;
90010a84:	f06f 0003 	mvn.w	r0, #3
}
90010a88:	4770      	bx	lr
90010a8a:	bf00      	nop

90010a8c <osSemaphoreGetCount>:

uint32_t osSemaphoreGetCount (osSemaphoreId_t semaphore_id) {
  SemaphoreHandle_t hSemaphore = (SemaphoreHandle_t)semaphore_id;
  uint32_t count;

  if (hSemaphore == NULL) {
90010a8c:	b130      	cbz	r0, 90010a9c <osSemaphoreGetCount+0x10>
90010a8e:	f3ef 8305 	mrs	r3, IPSR
    count = 0U;
  }
  else if (IS_IRQ()) {
90010a92:	b10b      	cbz	r3, 90010a98 <osSemaphoreGetCount+0xc>
    count = uxQueueMessagesWaitingFromISR (hSemaphore);
90010a94:	f001 bc36 	b.w	90012304 <uxQueueMessagesWaitingFromISR>
  } else {
    count = (uint32_t)uxSemaphoreGetCount (hSemaphore);
90010a98:	f001 bc1e 	b.w	900122d8 <uxQueueMessagesWaiting>
  }

  return (count);
}
90010a9c:	4770      	bx	lr
90010a9e:	bf00      	nop

90010aa0 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
90010aa0:	b5f0      	push	{r4, r5, r6, r7, lr}
90010aa2:	b083      	sub	sp, #12
90010aa4:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
90010aa8:	b987      	cbnz	r7, 90010acc <osMessageQueueNew+0x2c>
90010aaa:	4605      	mov	r5, r0
90010aac:	b170      	cbz	r0, 90010acc <osMessageQueueNew+0x2c>
90010aae:	b169      	cbz	r1, 90010acc <osMessageQueueNew+0x2c>
    mem = -1;

    if (attr != NULL) {
90010ab0:	4614      	mov	r4, r2
90010ab2:	b17a      	cbz	r2, 90010ad4 <osMessageQueueNew+0x34>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
90010ab4:	6893      	ldr	r3, [r2, #8]
90010ab6:	b1cb      	cbz	r3, 90010aec <osMessageQueueNew+0x4c>
90010ab8:	68d2      	ldr	r2, [r2, #12]
90010aba:	2a4f      	cmp	r2, #79	; 0x4f
90010abc:	d906      	bls.n	90010acc <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
90010abe:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
90010ac0:	b122      	cbz	r2, 90010acc <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
90010ac2:	fb01 f505 	mul.w	r5, r1, r5
90010ac6:	6966      	ldr	r6, [r4, #20]
90010ac8:	42ae      	cmp	r6, r5
90010aca:	d21f      	bcs.n	90010b0c <osMessageQueueNew+0x6c>
  hQueue = NULL;
90010acc:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
90010ace:	4628      	mov	r0, r5
90010ad0:	b003      	add	sp, #12
90010ad2:	bdf0      	pop	{r4, r5, r6, r7, pc}
          hQueue = xQueueCreate (msg_count, msg_size);
90010ad4:	f000 fca4 	bl	90011420 <xQueueGenericCreate>
    if (hQueue != NULL) {
90010ad8:	4605      	mov	r5, r0
90010ada:	2800      	cmp	r0, #0
90010adc:	d0f6      	beq.n	90010acc <osMessageQueueNew+0x2c>
      vQueueAddToRegistry (hQueue, name);
90010ade:	4628      	mov	r0, r5
90010ae0:	4621      	mov	r1, r4
90010ae2:	f001 fc63 	bl	900123ac <vQueueAddToRegistry>
}
90010ae6:	4628      	mov	r0, r5
90010ae8:	b003      	add	sp, #12
90010aea:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
90010aec:	68d3      	ldr	r3, [r2, #12]
90010aee:	2b00      	cmp	r3, #0
90010af0:	d1ec      	bne.n	90010acc <osMessageQueueNew+0x2c>
90010af2:	6913      	ldr	r3, [r2, #16]
90010af4:	2b00      	cmp	r3, #0
90010af6:	d1e9      	bne.n	90010acc <osMessageQueueNew+0x2c>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
90010af8:	6952      	ldr	r2, [r2, #20]
90010afa:	2a00      	cmp	r2, #0
90010afc:	d1e6      	bne.n	90010acc <osMessageQueueNew+0x2c>
          hQueue = xQueueCreate (msg_count, msg_size);
90010afe:	f000 fc8f 	bl	90011420 <xQueueGenericCreate>
    if (hQueue != NULL) {
90010b02:	4605      	mov	r5, r0
90010b04:	2800      	cmp	r0, #0
90010b06:	d0e1      	beq.n	90010acc <osMessageQueueNew+0x2c>
        name = attr->name;
90010b08:	6824      	ldr	r4, [r4, #0]
90010b0a:	e7e8      	b.n	90010ade <osMessageQueueNew+0x3e>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
90010b0c:	9700      	str	r7, [sp, #0]
90010b0e:	f000 fc1b 	bl	90011348 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
90010b12:	4605      	mov	r5, r0
90010b14:	2800      	cmp	r0, #0
90010b16:	d1f7      	bne.n	90010b08 <osMessageQueueNew+0x68>
90010b18:	e7d8      	b.n	90010acc <osMessageQueueNew+0x2c>
90010b1a:	bf00      	nop

90010b1c <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
90010b1c:	b530      	push	{r4, r5, lr}
90010b1e:	461c      	mov	r4, r3
90010b20:	b083      	sub	sp, #12
90010b22:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
90010b26:	b30b      	cbz	r3, 90010b6c <osMessageQueuePut+0x50>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
90010b28:	3c00      	subs	r4, #0
90010b2a:	bf18      	it	ne
90010b2c:	2401      	movne	r4, #1
90010b2e:	2900      	cmp	r1, #0
90010b30:	bf08      	it	eq
90010b32:	f044 0401 	orreq.w	r4, r4, #1
90010b36:	bb7c      	cbnz	r4, 90010b98 <osMessageQueuePut+0x7c>
90010b38:	fab0 f480 	clz	r4, r0
90010b3c:	0964      	lsrs	r4, r4, #5
90010b3e:	b358      	cbz	r0, 90010b98 <osMessageQueuePut+0x7c>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
90010b40:	4623      	mov	r3, r4
90010b42:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
90010b44:	9401      	str	r4, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
90010b46:	f000 ff7f 	bl	90011a48 <xQueueGenericSendFromISR>
90010b4a:	2801      	cmp	r0, #1
90010b4c:	d120      	bne.n	90010b90 <osMessageQueuePut+0x74>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
90010b4e:	9b01      	ldr	r3, [sp, #4]
90010b50:	b1db      	cbz	r3, 90010b8a <osMessageQueuePut+0x6e>
90010b52:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
90010b56:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
90010b5a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
90010b5e:	f3bf 8f4f 	dsb	sy
90010b62:	f3bf 8f6f 	isb	sy
  stat = osOK;
90010b66:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
90010b68:	b003      	add	sp, #12
90010b6a:	bd30      	pop	{r4, r5, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
90010b6c:	b1a0      	cbz	r0, 90010b98 <osMessageQueuePut+0x7c>
90010b6e:	fab1 f381 	clz	r3, r1
90010b72:	095b      	lsrs	r3, r3, #5
90010b74:	b181      	cbz	r1, 90010b98 <osMessageQueuePut+0x7c>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
90010b76:	4622      	mov	r2, r4
90010b78:	f000 fd3c 	bl	900115f4 <xQueueGenericSend>
90010b7c:	2801      	cmp	r0, #1
90010b7e:	d004      	beq.n	90010b8a <osMessageQueuePut+0x6e>
        if (timeout != 0U) {
90010b80:	b134      	cbz	r4, 90010b90 <osMessageQueuePut+0x74>
          stat = osErrorTimeout;
90010b82:	f06f 0001 	mvn.w	r0, #1
}
90010b86:	b003      	add	sp, #12
90010b88:	bd30      	pop	{r4, r5, pc}
  stat = osOK;
90010b8a:	2000      	movs	r0, #0
}
90010b8c:	b003      	add	sp, #12
90010b8e:	bd30      	pop	{r4, r5, pc}
          stat = osErrorResource;
90010b90:	f06f 0002 	mvn.w	r0, #2
}
90010b94:	b003      	add	sp, #12
90010b96:	bd30      	pop	{r4, r5, pc}
      stat = osErrorParameter;
90010b98:	f06f 0003 	mvn.w	r0, #3
90010b9c:	e7e4      	b.n	90010b68 <osMessageQueuePut+0x4c>
90010b9e:	bf00      	nop

90010ba0 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
90010ba0:	b530      	push	{r4, r5, lr}
90010ba2:	461c      	mov	r4, r3
90010ba4:	b083      	sub	sp, #12
90010ba6:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
90010baa:	b303      	cbz	r3, 90010bee <osMessageQueueGet+0x4e>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
90010bac:	3c00      	subs	r4, #0
90010bae:	bf18      	it	ne
90010bb0:	2401      	movne	r4, #1
90010bb2:	2900      	cmp	r1, #0
90010bb4:	bf08      	it	eq
90010bb6:	f044 0401 	orreq.w	r4, r4, #1
90010bba:	bb5c      	cbnz	r4, 90010c14 <osMessageQueueGet+0x74>
90010bbc:	fab0 f480 	clz	r4, r0
90010bc0:	0964      	lsrs	r4, r4, #5
90010bc2:	b338      	cbz	r0, 90010c14 <osMessageQueueGet+0x74>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
90010bc4:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
90010bc6:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
90010bc8:	f001 fb26 	bl	90012218 <xQueueReceiveFromISR>
90010bcc:	2801      	cmp	r0, #1
90010bce:	d11d      	bne.n	90010c0c <osMessageQueueGet+0x6c>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
90010bd0:	9b01      	ldr	r3, [sp, #4]
90010bd2:	b1c3      	cbz	r3, 90010c06 <osMessageQueueGet+0x66>
90010bd4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
90010bd8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
90010bdc:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
90010be0:	f3bf 8f4f 	dsb	sy
90010be4:	f3bf 8f6f 	isb	sy
  stat = osOK;
90010be8:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
90010bea:	b003      	add	sp, #12
90010bec:	bd30      	pop	{r4, r5, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
90010bee:	b188      	cbz	r0, 90010c14 <osMessageQueueGet+0x74>
90010bf0:	b181      	cbz	r1, 90010c14 <osMessageQueueGet+0x74>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
90010bf2:	4622      	mov	r2, r4
90010bf4:	f000 ffea 	bl	90011bcc <xQueueReceive>
90010bf8:	2801      	cmp	r0, #1
90010bfa:	d004      	beq.n	90010c06 <osMessageQueueGet+0x66>
        if (timeout != 0U) {
90010bfc:	b134      	cbz	r4, 90010c0c <osMessageQueueGet+0x6c>
          stat = osErrorTimeout;
90010bfe:	f06f 0001 	mvn.w	r0, #1
}
90010c02:	b003      	add	sp, #12
90010c04:	bd30      	pop	{r4, r5, pc}
  stat = osOK;
90010c06:	2000      	movs	r0, #0
}
90010c08:	b003      	add	sp, #12
90010c0a:	bd30      	pop	{r4, r5, pc}
          stat = osErrorResource;
90010c0c:	f06f 0002 	mvn.w	r0, #2
}
90010c10:	b003      	add	sp, #12
90010c12:	bd30      	pop	{r4, r5, pc}
      stat = osErrorParameter;
90010c14:	f06f 0003 	mvn.w	r0, #3
90010c18:	e7e7      	b.n	90010bea <osMessageQueueGet+0x4a>
90010c1a:	bf00      	nop

90010c1c <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
90010c1c:	4b04      	ldr	r3, [pc, #16]	; (90010c30 <vApplicationGetIdleTaskMemory+0x14>)
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
90010c1e:	b410      	push	{r4}
  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
90010c20:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
90010c22:	2380      	movs	r3, #128	; 0x80
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
90010c24:	4c03      	ldr	r4, [pc, #12]	; (90010c34 <vApplicationGetIdleTaskMemory+0x18>)
90010c26:	600c      	str	r4, [r1, #0]
}
90010c28:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
90010c2c:	6013      	str	r3, [r2, #0]
}
90010c2e:	4770      	bx	lr
90010c30:	2400a4cc 	.word	0x2400a4cc
90010c34:	2400a2cc 	.word	0x2400a2cc

90010c38 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
90010c38:	4b05      	ldr	r3, [pc, #20]	; (90010c50 <vApplicationGetTimerTaskMemory+0x18>)
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
90010c3a:	b410      	push	{r4}
  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
90010c3c:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
90010c3e:	f44f 7380 	mov.w	r3, #256	; 0x100
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
90010c42:	4c04      	ldr	r4, [pc, #16]	; (90010c54 <vApplicationGetTimerTaskMemory+0x1c>)
90010c44:	600c      	str	r4, [r1, #0]
}
90010c46:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
90010c4a:	6013      	str	r3, [r2, #0]
}
90010c4c:	4770      	bx	lr
90010c4e:	bf00      	nop
90010c50:	2400a930 	.word	0x2400a930
90010c54:	2400a530 	.word	0x2400a530

90010c58 <pvPortMalloc>:
static size_t xBlockAllocatedBit = 0;

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
90010c58:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90010c5c:	4605      	mov	r5, r0
BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
void *pvReturn = NULL;

	vTaskSuspendAll();
90010c5e:	f002 f881 	bl	90012d64 <vTaskSuspendAll>
	{
		/* If this is the first call to malloc then the heap will require
		initialisation to setup the list of free blocks. */
		if( pxEnd == NULL )
90010c62:	4a54      	ldr	r2, [pc, #336]	; (90010db4 <pvPortMalloc+0x15c>)
90010c64:	6816      	ldr	r6, [r2, #0]
90010c66:	2e00      	cmp	r6, #0
90010c68:	d06f      	beq.n	90010d4a <pvPortMalloc+0xf2>

		/* Check the requested block size is not so large that the top bit is
		set.  The top bit of the block size member of the BlockLink_t structure
		is used to determine who owns the block - the application or the
		kernel, so it must be free. */
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
90010c6a:	4b53      	ldr	r3, [pc, #332]	; (90010db8 <pvPortMalloc+0x160>)
90010c6c:	681f      	ldr	r7, [r3, #0]
		{
			/* The wanted size is increased so it can contain a BlockLink_t
			structure in addition to the requested amount of bytes. */
			if( xWantedSize > 0 )
90010c6e:	423d      	tst	r5, r7
90010c70:	d12e      	bne.n	90010cd0 <pvPortMalloc+0x78>
90010c72:	b36d      	cbz	r5, 90010cd0 <pvPortMalloc+0x78>
			{
				xWantedSize += xHeapStructSize;
90010c74:	f105 0408 	add.w	r4, r5, #8

				/* Ensure that blocks are always aligned to the required number
				of bytes. */
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
90010c78:	076d      	lsls	r5, r5, #29
90010c7a:	d002      	beq.n	90010c82 <pvPortMalloc+0x2a>
				{
					/* Byte alignment required. */
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
90010c7c:	f024 0407 	bic.w	r4, r4, #7
90010c80:	3408      	adds	r4, #8
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}

			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
90010c82:	b32c      	cbz	r4, 90010cd0 <pvPortMalloc+0x78>
90010c84:	f8df c148 	ldr.w	ip, [pc, #328]	; 90010dd0 <pvPortMalloc+0x178>
90010c88:	f8dc 5000 	ldr.w	r5, [ip]
90010c8c:	42a5      	cmp	r5, r4
90010c8e:	d31f      	bcc.n	90010cd0 <pvPortMalloc+0x78>
			{
				/* Traverse the list from the start	(lowest address) block until
				one	of adequate size is found. */
				pxPreviousBlock = &xStart;
				pxBlock = xStart.pxNextFreeBlock;
90010c90:	484a      	ldr	r0, [pc, #296]	; (90010dbc <pvPortMalloc+0x164>)
90010c92:	6803      	ldr	r3, [r0, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
90010c94:	e003      	b.n	90010c9e <pvPortMalloc+0x46>
90010c96:	681a      	ldr	r2, [r3, #0]
90010c98:	b122      	cbz	r2, 90010ca4 <pvPortMalloc+0x4c>
90010c9a:	4618      	mov	r0, r3
90010c9c:	4613      	mov	r3, r2
90010c9e:	6859      	ldr	r1, [r3, #4]
90010ca0:	42a1      	cmp	r1, r4
90010ca2:	d3f8      	bcc.n	90010c96 <pvPortMalloc+0x3e>
					pxBlock = pxBlock->pxNextFreeBlock;
				}

				/* If the end marker was reached then a block of adequate size
				was	not found. */
				if( pxBlock != pxEnd )
90010ca4:	42b3      	cmp	r3, r6
90010ca6:	d013      	beq.n	90010cd0 <pvPortMalloc+0x78>
				{
					/* Return the memory space pointed to - jumping over the
					BlockLink_t structure at its start. */
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
90010ca8:	4698      	mov	r8, r3
					of the list of free blocks. */
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;

					/* If the block is larger than required it can be split into
					two. */
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
90010caa:	1b0a      	subs	r2, r1, r4
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
90010cac:	f858 eb08 	ldr.w	lr, [r8], #8
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
90010cb0:	2a10      	cmp	r2, #16
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
90010cb2:	f8c0 e000 	str.w	lr, [r0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
90010cb6:	d929      	bls.n	90010d0c <pvPortMalloc+0xb4>
					{
						/* This block is to be split into two.  Create a new
						block following the number of bytes requested. The void
						cast is used to prevent byte alignment warnings from the
						compiler. */
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
90010cb8:	1919      	adds	r1, r3, r4
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
90010cba:	0748      	lsls	r0, r1, #29
90010cbc:	d00f      	beq.n	90010cde <pvPortMalloc+0x86>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
90010cbe:	f04f 0350 	mov.w	r3, #80	; 0x50
90010cc2:	f383 8811 	msr	BASEPRI, r3
90010cc6:	f3bf 8f6f 	isb	sy
90010cca:	f3bf 8f4f 	dsb	sy
90010cce:	e7fe      	b.n	90010cce <pvPortMalloc+0x76>
			mtCOVERAGE_TEST_MARKER();
		}

		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
90010cd0:	f04f 0800 	mov.w	r8, #0
90010cd4:	f002 f84e 	bl	90012d74 <xTaskResumeAll>
	}
	#endif

	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
	return pvReturn;
}
90010cd8:	4640      	mov	r0, r8
90010cda:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
90010cde:	604a      	str	r2, [r1, #4]
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
90010ce0:	4a36      	ldr	r2, [pc, #216]	; (90010dbc <pvPortMalloc+0x164>)
						pxBlock->xBlockSize = xWantedSize;
90010ce2:	605c      	str	r4, [r3, #4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
90010ce4:	4614      	mov	r4, r2
90010ce6:	6812      	ldr	r2, [r2, #0]
90010ce8:	4291      	cmp	r1, r2
90010cea:	d8fb      	bhi.n	90010ce4 <pvPortMalloc+0x8c>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
90010cec:	6860      	ldr	r0, [r4, #4]
90010cee:	eb04 0e00 	add.w	lr, r4, r0
90010cf2:	4571      	cmp	r1, lr
90010cf4:	d04a      	beq.n	90010d8c <pvPortMalloc+0x134>
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
90010cf6:	f8d1 e004 	ldr.w	lr, [r1, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
90010cfa:	eb01 000e 	add.w	r0, r1, lr
90010cfe:	4282      	cmp	r2, r0
90010d00:	d050      	beq.n	90010da4 <pvPortMalloc+0x14c>

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
90010d02:	428c      	cmp	r4, r1
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
90010d04:	600a      	str	r2, [r1, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
90010d06:	bf18      	it	ne
90010d08:	6021      	strne	r1, [r4, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
90010d0a:	6859      	ldr	r1, [r3, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
90010d0c:	4a2c      	ldr	r2, [pc, #176]	; (90010dc0 <pvPortMalloc+0x168>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
90010d0e:	1a6d      	subs	r5, r5, r1
					pxBlock->xBlockSize |= xBlockAllocatedBit;
90010d10:	4339      	orrs	r1, r7
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
90010d12:	6810      	ldr	r0, [r2, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
90010d14:	f8cc 5000 	str.w	r5, [ip]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
90010d18:	4285      	cmp	r5, r0
					pxBlock->pxNextFreeBlock = NULL;
90010d1a:	f04f 0000 	mov.w	r0, #0
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
90010d1e:	bf38      	it	cc
90010d20:	6015      	strcc	r5, [r2, #0]
					xNumberOfSuccessfulAllocations++;
90010d22:	4a28      	ldr	r2, [pc, #160]	; (90010dc4 <pvPortMalloc+0x16c>)
					pxBlock->pxNextFreeBlock = NULL;
90010d24:	e9c3 0100 	strd	r0, r1, [r3]
					xNumberOfSuccessfulAllocations++;
90010d28:	6813      	ldr	r3, [r2, #0]
90010d2a:	3301      	adds	r3, #1
90010d2c:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
90010d2e:	f002 f821 	bl	90012d74 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
90010d32:	f018 0f07 	tst.w	r8, #7
90010d36:	d0cf      	beq.n	90010cd8 <pvPortMalloc+0x80>
90010d38:	f04f 0350 	mov.w	r3, #80	; 0x50
90010d3c:	f383 8811 	msr	BASEPRI, r3
90010d40:	f3bf 8f6f 	isb	sy
90010d44:	f3bf 8f4f 	dsb	sy
90010d48:	e7fe      	b.n	90010d48 <pvPortMalloc+0xf0>
	uxAddress = ( size_t ) ucHeap;
90010d4a:	4b1f      	ldr	r3, [pc, #124]	; (90010dc8 <pvPortMalloc+0x170>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
90010d4c:	075e      	lsls	r6, r3, #29
90010d4e:	d117      	bne.n	90010d80 <pvPortMalloc+0x128>
90010d50:	4e1e      	ldr	r6, [pc, #120]	; (90010dcc <pvPortMalloc+0x174>)
90010d52:	4619      	mov	r1, r3
	uxAddress -= xHeapStructSize;
90010d54:	3e08      	subs	r6, #8
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
90010d56:	f04f 4700 	mov.w	r7, #2147483648	; 0x80000000
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
90010d5a:	4818      	ldr	r0, [pc, #96]	; (90010dbc <pvPortMalloc+0x164>)
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
90010d5c:	f026 0607 	bic.w	r6, r6, #7
	pxEnd = ( void * ) uxAddress;
90010d60:	6016      	str	r6, [r2, #0]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
90010d62:	1af3      	subs	r3, r6, r3
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
90010d64:	4a16      	ldr	r2, [pc, #88]	; (90010dc0 <pvPortMalloc+0x168>)
90010d66:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
90010d68:	4a19      	ldr	r2, [pc, #100]	; (90010dd0 <pvPortMalloc+0x178>)
90010d6a:	6013      	str	r3, [r2, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
90010d6c:	4a12      	ldr	r2, [pc, #72]	; (90010db8 <pvPortMalloc+0x160>)
90010d6e:	6017      	str	r7, [r2, #0]
	xStart.xBlockSize = ( size_t ) 0;
90010d70:	2200      	movs	r2, #0
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
90010d72:	e9c0 1200 	strd	r1, r2, [r0]
	pxEnd->pxNextFreeBlock = NULL;
90010d76:	e9c6 2200 	strd	r2, r2, [r6]
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
90010d7a:	e9c1 6300 	strd	r6, r3, [r1]
}
90010d7e:	e776      	b.n	90010c6e <pvPortMalloc+0x16>
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
90010d80:	3307      	adds	r3, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
90010d82:	4e12      	ldr	r6, [pc, #72]	; (90010dcc <pvPortMalloc+0x174>)
	pucAlignedHeap = ( uint8_t * ) uxAddress;
90010d84:	f023 0107 	bic.w	r1, r3, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
90010d88:	460b      	mov	r3, r1
90010d8a:	e7e3      	b.n	90010d54 <pvPortMalloc+0xfc>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
90010d8c:	6849      	ldr	r1, [r1, #4]
90010d8e:	eb00 0e01 	add.w	lr, r0, r1
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
90010d92:	eb04 010e 	add.w	r1, r4, lr
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
90010d96:	f8c4 e004 	str.w	lr, [r4, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
90010d9a:	428a      	cmp	r2, r1
90010d9c:	d001      	beq.n	90010da2 <pvPortMalloc+0x14a>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
90010d9e:	6022      	str	r2, [r4, #0]
	if( pxIterator != pxBlockToInsert )
90010da0:	e7b3      	b.n	90010d0a <pvPortMalloc+0xb2>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
90010da2:	4621      	mov	r1, r4
		if( pxIterator->pxNextFreeBlock != pxEnd )
90010da4:	42b2      	cmp	r2, r6
90010da6:	d0ac      	beq.n	90010d02 <pvPortMalloc+0xaa>
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
90010da8:	6850      	ldr	r0, [r2, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
90010daa:	6812      	ldr	r2, [r2, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
90010dac:	4470      	add	r0, lr
90010dae:	6048      	str	r0, [r1, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
90010db0:	e7a7      	b.n	90010d02 <pvPortMalloc+0xaa>
90010db2:	bf00      	nop
90010db4:	2400a990 	.word	0x2400a990
90010db8:	24023034 	.word	0x24023034
90010dbc:	24023048 	.word	0x24023048
90010dc0:	2402303c 	.word	0x2402303c
90010dc4:	24023040 	.word	0x24023040
90010dc8:	2400a994 	.word	0x2400a994
90010dcc:	24023034 	.word	0x24023034
90010dd0:	24023038 	.word	0x24023038

90010dd4 <vPortFree>:
	if( pv != NULL )
90010dd4:	b1d0      	cbz	r0, 90010e0c <vPortFree+0x38>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
90010dd6:	4a2c      	ldr	r2, [pc, #176]	; (90010e88 <vPortFree+0xb4>)
90010dd8:	f850 3c04 	ldr.w	r3, [r0, #-4]
90010ddc:	6812      	ldr	r2, [r2, #0]
90010dde:	4213      	tst	r3, r2
90010de0:	d00b      	beq.n	90010dfa <vPortFree+0x26>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
90010de2:	f850 1c08 	ldr.w	r1, [r0, #-8]
90010de6:	b191      	cbz	r1, 90010e0e <vPortFree+0x3a>
90010de8:	f04f 0350 	mov.w	r3, #80	; 0x50
90010dec:	f383 8811 	msr	BASEPRI, r3
90010df0:	f3bf 8f6f 	isb	sy
90010df4:	f3bf 8f4f 	dsb	sy
90010df8:	e7fe      	b.n	90010df8 <vPortFree+0x24>
90010dfa:	f04f 0350 	mov.w	r3, #80	; 0x50
90010dfe:	f383 8811 	msr	BASEPRI, r3
90010e02:	f3bf 8f6f 	isb	sy
90010e06:	f3bf 8f4f 	dsb	sy
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
90010e0a:	e7fe      	b.n	90010e0a <vPortFree+0x36>
90010e0c:	4770      	bx	lr
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
90010e0e:	ea23 0302 	bic.w	r3, r3, r2
{
90010e12:	b530      	push	{r4, r5, lr}
90010e14:	b083      	sub	sp, #12
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
90010e16:	f840 3c04 	str.w	r3, [r0, #-4]
		puc -= xHeapStructSize;
90010e1a:	f1a0 0408 	sub.w	r4, r0, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
90010e1e:	4d1b      	ldr	r5, [pc, #108]	; (90010e8c <vPortFree+0xb8>)
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
90010e20:	9001      	str	r0, [sp, #4]
				vTaskSuspendAll();
90010e22:	f001 ff9f 	bl	90012d64 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
90010e26:	9801      	ldr	r0, [sp, #4]
90010e28:	682a      	ldr	r2, [r5, #0]
90010e2a:	f850 1c04 	ldr.w	r1, [r0, #-4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
90010e2e:	4b18      	ldr	r3, [pc, #96]	; (90010e90 <vPortFree+0xbc>)
					xFreeBytesRemaining += pxLink->xBlockSize;
90010e30:	440a      	add	r2, r1
90010e32:	602a      	str	r2, [r5, #0]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
90010e34:	461a      	mov	r2, r3
90010e36:	681b      	ldr	r3, [r3, #0]
90010e38:	429c      	cmp	r4, r3
90010e3a:	d8fb      	bhi.n	90010e34 <vPortFree+0x60>
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
90010e3c:	6850      	ldr	r0, [r2, #4]
90010e3e:	eb02 0c00 	add.w	ip, r2, r0
90010e42:	4564      	cmp	r4, ip
90010e44:	d00f      	beq.n	90010e66 <vPortFree+0x92>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
90010e46:	1860      	adds	r0, r4, r1
90010e48:	4283      	cmp	r3, r0
90010e4a:	d014      	beq.n	90010e76 <vPortFree+0xa2>
	if( pxIterator != pxBlockToInsert )
90010e4c:	42a2      	cmp	r2, r4
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
90010e4e:	6023      	str	r3, [r4, #0]
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
90010e50:	bf18      	it	ne
90010e52:	6014      	strne	r4, [r2, #0]
					xNumberOfSuccessfulFrees++;
90010e54:	4a0f      	ldr	r2, [pc, #60]	; (90010e94 <vPortFree+0xc0>)
90010e56:	6813      	ldr	r3, [r2, #0]
90010e58:	3301      	adds	r3, #1
90010e5a:	6013      	str	r3, [r2, #0]
}
90010e5c:	b003      	add	sp, #12
90010e5e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
				( void ) xTaskResumeAll();
90010e62:	f001 bf87 	b.w	90012d74 <xTaskResumeAll>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
90010e66:	4401      	add	r1, r0
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
90010e68:	1850      	adds	r0, r2, r1
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
90010e6a:	6051      	str	r1, [r2, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
90010e6c:	4283      	cmp	r3, r0
90010e6e:	d001      	beq.n	90010e74 <vPortFree+0xa0>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
90010e70:	6013      	str	r3, [r2, #0]
	if( pxIterator != pxBlockToInsert )
90010e72:	e7ef      	b.n	90010e54 <vPortFree+0x80>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
90010e74:	4614      	mov	r4, r2
		if( pxIterator->pxNextFreeBlock != pxEnd )
90010e76:	4808      	ldr	r0, [pc, #32]	; (90010e98 <vPortFree+0xc4>)
90010e78:	6800      	ldr	r0, [r0, #0]
90010e7a:	4283      	cmp	r3, r0
90010e7c:	d0e6      	beq.n	90010e4c <vPortFree+0x78>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
90010e7e:	e9d3 3000 	ldrd	r3, r0, [r3]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
90010e82:	4401      	add	r1, r0
90010e84:	6061      	str	r1, [r4, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
90010e86:	e7e1      	b.n	90010e4c <vPortFree+0x78>
90010e88:	24023034 	.word	0x24023034
90010e8c:	24023038 	.word	0x24023038
90010e90:	24023048 	.word	0x24023048
90010e94:	24023044 	.word	0x24023044
90010e98:	2400a990 	.word	0x2400a990

90010e9c <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
90010e9c:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
90010ea0:	f04f 31ff 	mov.w	r1, #4294967295
	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
90010ea4:	2200      	movs	r2, #0
	pxList->xListEnd.xItemValue = portMAX_DELAY;
90010ea6:	6081      	str	r1, [r0, #8]
	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
90010ea8:	6002      	str	r2, [r0, #0]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
90010eaa:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
90010eac:	e9c0 3303 	strd	r3, r3, [r0, #12]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
90010eb0:	4770      	bx	lr
90010eb2:	bf00      	nop

90010eb4 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
90010eb4:	2300      	movs	r3, #0
90010eb6:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
90010eb8:	4770      	bx	lr
90010eba:	bf00      	nop

90010ebc <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
90010ebc:	6843      	ldr	r3, [r0, #4]
	pxIndex->pxPrevious = pxNewListItem;

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
90010ebe:	6802      	ldr	r2, [r0, #0]
{
90010ec0:	b410      	push	{r4}
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
90010ec2:	689c      	ldr	r4, [r3, #8]
	( pxList->uxNumberOfItems )++;
90010ec4:	3201      	adds	r2, #1
	pxNewListItem->pxNext = pxIndex;
90010ec6:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
90010ec8:	608c      	str	r4, [r1, #8]
	pxIndex->pxPrevious->pxNext = pxNewListItem;
90010eca:	689c      	ldr	r4, [r3, #8]
90010ecc:	6061      	str	r1, [r4, #4]
	pxIndex->pxPrevious = pxNewListItem;
90010ece:	6099      	str	r1, [r3, #8]
}
90010ed0:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxNewListItem->pxContainer = pxList;
90010ed4:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
90010ed6:	6002      	str	r2, [r0, #0]
}
90010ed8:	4770      	bx	lr
90010eda:	bf00      	nop

90010edc <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
90010edc:	b430      	push	{r4, r5}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
90010ede:	680d      	ldr	r5, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
90010ee0:	1c6b      	adds	r3, r5, #1
90010ee2:	d010      	beq.n	90010f06 <vListInsert+0x2a>
			4) Using a queue or semaphore before it has been initialised or
			   before the scheduler has been started (are interrupts firing
			   before vTaskStartScheduler() has been called?).
		**********************************************************************/

		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
90010ee4:	f100 0308 	add.w	r3, r0, #8
90010ee8:	461c      	mov	r4, r3
90010eea:	685b      	ldr	r3, [r3, #4]
90010eec:	681a      	ldr	r2, [r3, #0]
90010eee:	42aa      	cmp	r2, r5
90010ef0:	d9fa      	bls.n	90010ee8 <vListInsert+0xc>

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
90010ef2:	6802      	ldr	r2, [r0, #0]
	pxNewListItem->pxNext = pxIterator->pxNext;
90010ef4:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
90010ef6:	3201      	adds	r2, #1
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
90010ef8:	6099      	str	r1, [r3, #8]
	pxNewListItem->pxPrevious = pxIterator;
90010efa:	608c      	str	r4, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
90010efc:	6061      	str	r1, [r4, #4]
	pxNewListItem->pxContainer = pxList;
90010efe:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
90010f00:	6002      	str	r2, [r0, #0]
}
90010f02:	bc30      	pop	{r4, r5}
90010f04:	4770      	bx	lr
		pxIterator = pxList->xListEnd.pxPrevious;
90010f06:	6904      	ldr	r4, [r0, #16]
	pxNewListItem->pxNext = pxIterator->pxNext;
90010f08:	6863      	ldr	r3, [r4, #4]
90010f0a:	e7f2      	b.n	90010ef2 <vListInsert+0x16>

90010f0c <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
90010f0c:	6903      	ldr	r3, [r0, #16]
{
90010f0e:	b410      	push	{r4}

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
90010f10:	685c      	ldr	r4, [r3, #4]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
90010f12:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
	if( pxList->pxIndex == pxItemToRemove )
90010f16:	4284      	cmp	r4, r0

	pxItemToRemove->pxContainer = NULL;
	( pxList->uxNumberOfItems )--;

	return pxList->uxNumberOfItems;
}
90010f18:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
90010f1c:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
90010f1e:	6051      	str	r1, [r2, #4]
	pxItemToRemove->pxContainer = NULL;
90010f20:	f04f 0100 	mov.w	r1, #0
		pxList->pxIndex = pxItemToRemove->pxPrevious;
90010f24:	bf08      	it	eq
90010f26:	605a      	streq	r2, [r3, #4]
	( pxList->uxNumberOfItems )--;
90010f28:	681a      	ldr	r2, [r3, #0]
	pxItemToRemove->pxContainer = NULL;
90010f2a:	6101      	str	r1, [r0, #16]
	( pxList->uxNumberOfItems )--;
90010f2c:	3a01      	subs	r2, #1
90010f2e:	601a      	str	r2, [r3, #0]
	return pxList->uxNumberOfItems;
90010f30:	6818      	ldr	r0, [r3, #0]
}
90010f32:	4770      	bx	lr

90010f34 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
90010f34:	4808      	ldr	r0, [pc, #32]	; (90010f58 <prvPortStartFirstTask+0x24>)
90010f36:	6800      	ldr	r0, [r0, #0]
90010f38:	6800      	ldr	r0, [r0, #0]
90010f3a:	f380 8808 	msr	MSP, r0
90010f3e:	f04f 0000 	mov.w	r0, #0
90010f42:	f380 8814 	msr	CONTROL, r0
90010f46:	b662      	cpsie	i
90010f48:	b661      	cpsie	f
90010f4a:	f3bf 8f4f 	dsb	sy
90010f4e:	f3bf 8f6f 	isb	sy
90010f52:	df00      	svc	0
90010f54:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
90010f56:	0000      	.short	0x0000
90010f58:	e000ed08 	.word	0xe000ed08

90010f5c <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
90010f5c:	f8df 000c 	ldr.w	r0, [pc, #12]	; 90010f6c <vPortEnableVFP+0x10>
90010f60:	6801      	ldr	r1, [r0, #0]
90010f62:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
90010f66:	6001      	str	r1, [r0, #0]
90010f68:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
90010f6a:	0000      	.short	0x0000
90010f6c:	e000ed88 	.word	0xe000ed88

90010f70 <prvTaskExitError>:
	configASSERT( uxCriticalNesting == ~0UL );
90010f70:	4b0e      	ldr	r3, [pc, #56]	; (90010fac <prvTaskExitError+0x3c>)
{
90010f72:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
90010f74:	2200      	movs	r2, #0
	configASSERT( uxCriticalNesting == ~0UL );
90010f76:	681b      	ldr	r3, [r3, #0]
volatile uint32_t ulDummy = 0;
90010f78:	9201      	str	r2, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
90010f7a:	3301      	adds	r3, #1
90010f7c:	d008      	beq.n	90010f90 <prvTaskExitError+0x20>
90010f7e:	f04f 0350 	mov.w	r3, #80	; 0x50
90010f82:	f383 8811 	msr	BASEPRI, r3
90010f86:	f3bf 8f6f 	isb	sy
90010f8a:	f3bf 8f4f 	dsb	sy
90010f8e:	e7fe      	b.n	90010f8e <prvTaskExitError+0x1e>
90010f90:	f04f 0350 	mov.w	r3, #80	; 0x50
90010f94:	f383 8811 	msr	BASEPRI, r3
90010f98:	f3bf 8f6f 	isb	sy
90010f9c:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
90010fa0:	9b01      	ldr	r3, [sp, #4]
90010fa2:	2b00      	cmp	r3, #0
90010fa4:	d0fc      	beq.n	90010fa0 <prvTaskExitError+0x30>
}
90010fa6:	b002      	add	sp, #8
90010fa8:	4770      	bx	lr
90010faa:	bf00      	nop
90010fac:	24000070 	.word	0x24000070

90010fb0 <pxPortInitialiseStack>:
{
90010fb0:	4603      	mov	r3, r0
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
90010fb2:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
90010fb6:	4809      	ldr	r0, [pc, #36]	; (90010fdc <pxPortInitialiseStack+0x2c>)
{
90010fb8:	b410      	push	{r4}
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
90010fba:	f04f 7480 	mov.w	r4, #16777216	; 0x1000000
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
90010fbe:	f843 0c0c 	str.w	r0, [r3, #-12]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
90010fc2:	f843 2c20 	str.w	r2, [r3, #-32]
}
90010fc6:	f1a3 0044 	sub.w	r0, r3, #68	; 0x44
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
90010fca:	e943 1402 	strd	r1, r4, [r3, #-8]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
90010fce:	f06f 0102 	mvn.w	r1, #2
}
90010fd2:	f85d 4b04 	ldr.w	r4, [sp], #4
	*pxTopOfStack = portINITIAL_EXC_RETURN;
90010fd6:	f843 1c24 	str.w	r1, [r3, #-36]
}
90010fda:	4770      	bx	lr
90010fdc:	90010f71 	.word	0x90010f71

90010fe0 <SVC_Handler>:
	__asm volatile (
90010fe0:	4b07      	ldr	r3, [pc, #28]	; (90011000 <pxCurrentTCBConst2>)
90010fe2:	6819      	ldr	r1, [r3, #0]
90010fe4:	6808      	ldr	r0, [r1, #0]
90010fe6:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90010fea:	f380 8809 	msr	PSP, r0
90010fee:	f3bf 8f6f 	isb	sy
90010ff2:	f04f 0000 	mov.w	r0, #0
90010ff6:	f380 8811 	msr	BASEPRI, r0
90010ffa:	4770      	bx	lr
90010ffc:	f3af 8000 	nop.w

90011000 <pxCurrentTCBConst2>:
90011000:	24023098 	.word	0x24023098

90011004 <vPortEnterCritical>:
90011004:	f04f 0350 	mov.w	r3, #80	; 0x50
90011008:	f383 8811 	msr	BASEPRI, r3
9001100c:	f3bf 8f6f 	isb	sy
90011010:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
90011014:	4a0b      	ldr	r2, [pc, #44]	; (90011044 <vPortEnterCritical+0x40>)
90011016:	6813      	ldr	r3, [r2, #0]
90011018:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
9001101a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
9001101c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
9001101e:	d000      	beq.n	90011022 <vPortEnterCritical+0x1e>
}
90011020:	4770      	bx	lr
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
90011022:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
90011026:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
9001102a:	b2db      	uxtb	r3, r3
9001102c:	2b00      	cmp	r3, #0
9001102e:	d0f7      	beq.n	90011020 <vPortEnterCritical+0x1c>
90011030:	f04f 0350 	mov.w	r3, #80	; 0x50
90011034:	f383 8811 	msr	BASEPRI, r3
90011038:	f3bf 8f6f 	isb	sy
9001103c:	f3bf 8f4f 	dsb	sy
90011040:	e7fe      	b.n	90011040 <vPortEnterCritical+0x3c>
90011042:	bf00      	nop
90011044:	24000070 	.word	0x24000070

90011048 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
90011048:	4a08      	ldr	r2, [pc, #32]	; (9001106c <vPortExitCritical+0x24>)
9001104a:	6813      	ldr	r3, [r2, #0]
9001104c:	b943      	cbnz	r3, 90011060 <vPortExitCritical+0x18>
9001104e:	f04f 0350 	mov.w	r3, #80	; 0x50
90011052:	f383 8811 	msr	BASEPRI, r3
90011056:	f3bf 8f6f 	isb	sy
9001105a:	f3bf 8f4f 	dsb	sy
9001105e:	e7fe      	b.n	9001105e <vPortExitCritical+0x16>
	uxCriticalNesting--;
90011060:	3b01      	subs	r3, #1
90011062:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
90011064:	b90b      	cbnz	r3, 9001106a <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
90011066:	f383 8811 	msr	BASEPRI, r3
}
9001106a:	4770      	bx	lr
9001106c:	24000070 	.word	0x24000070

90011070 <PendSV_Handler>:
	__asm volatile
90011070:	f3ef 8009 	mrs	r0, PSP
90011074:	f3bf 8f6f 	isb	sy
90011078:	4b15      	ldr	r3, [pc, #84]	; (900110d0 <pxCurrentTCBConst>)
9001107a:	681a      	ldr	r2, [r3, #0]
9001107c:	f01e 0f10 	tst.w	lr, #16
90011080:	bf08      	it	eq
90011082:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
90011086:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001108a:	6010      	str	r0, [r2, #0]
9001108c:	e92d 0009 	stmdb	sp!, {r0, r3}
90011090:	f04f 0050 	mov.w	r0, #80	; 0x50
90011094:	f380 8811 	msr	BASEPRI, r0
90011098:	f3bf 8f4f 	dsb	sy
9001109c:	f3bf 8f6f 	isb	sy
900110a0:	f001 fea4 	bl	90012dec <vTaskSwitchContext>
900110a4:	f04f 0000 	mov.w	r0, #0
900110a8:	f380 8811 	msr	BASEPRI, r0
900110ac:	bc09      	pop	{r0, r3}
900110ae:	6819      	ldr	r1, [r3, #0]
900110b0:	6808      	ldr	r0, [r1, #0]
900110b2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900110b6:	f01e 0f10 	tst.w	lr, #16
900110ba:	bf08      	it	eq
900110bc:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
900110c0:	f380 8809 	msr	PSP, r0
900110c4:	f3bf 8f6f 	isb	sy
900110c8:	4770      	bx	lr
900110ca:	bf00      	nop
900110cc:	f3af 8000 	nop.w

900110d0 <pxCurrentTCBConst>:
900110d0:	24023098 	.word	0x24023098

900110d4 <xPortSysTickHandler>:
{
900110d4:	b508      	push	{r3, lr}
	__asm volatile
900110d6:	f04f 0350 	mov.w	r3, #80	; 0x50
900110da:	f383 8811 	msr	BASEPRI, r3
900110de:	f3bf 8f6f 	isb	sy
900110e2:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
900110e6:	f001 fe5b 	bl	90012da0 <xTaskIncrementTick>
900110ea:	b128      	cbz	r0, 900110f8 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
900110ec:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
900110f0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
900110f4:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
900110f8:	2300      	movs	r3, #0
900110fa:	f383 8811 	msr	BASEPRI, r3
}
900110fe:	bd08      	pop	{r3, pc}

90011100 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
90011100:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
90011104:	2300      	movs	r3, #0
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
90011106:	4806      	ldr	r0, [pc, #24]	; (90011120 <vPortSetupTimerInterrupt+0x20>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
90011108:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9001110a:	4906      	ldr	r1, [pc, #24]	; (90011124 <vPortSetupTimerInterrupt+0x24>)
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
9001110c:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9001110e:	6803      	ldr	r3, [r0, #0]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
90011110:	2007      	movs	r0, #7
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
90011112:	fba1 1303 	umull	r1, r3, r1, r3
90011116:	099b      	lsrs	r3, r3, #6
90011118:	3b01      	subs	r3, #1
9001111a:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
9001111c:	6110      	str	r0, [r2, #16]
}
9001111e:	4770      	bx	lr
90011120:	24000060 	.word	0x24000060
90011124:	10624dd3 	.word	0x10624dd3

90011128 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
90011128:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9001112c:	4a48      	ldr	r2, [pc, #288]	; (90011250 <xPortStartScheduler+0x128>)
9001112e:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
90011132:	4291      	cmp	r1, r2
90011134:	d041      	beq.n	900111ba <xPortStartScheduler+0x92>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
90011136:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
9001113a:	4b46      	ldr	r3, [pc, #280]	; (90011254 <xPortStartScheduler+0x12c>)
9001113c:	429a      	cmp	r2, r3
9001113e:	d033      	beq.n	900111a8 <xPortStartScheduler+0x80>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
90011140:	4b45      	ldr	r3, [pc, #276]	; (90011258 <xPortStartScheduler+0x130>)
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
90011142:	20ff      	movs	r0, #255	; 0xff
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
90011144:	4945      	ldr	r1, [pc, #276]	; (9001125c <xPortStartScheduler+0x134>)
{
90011146:	b570      	push	{r4, r5, r6, lr}
		ulOriginalPriority = *pucFirstUserPriorityRegister;
90011148:	781a      	ldrb	r2, [r3, #0]
{
9001114a:	b084      	sub	sp, #16
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
9001114c:	4c44      	ldr	r4, [pc, #272]	; (90011260 <xPortStartScheduler+0x138>)
		ulOriginalPriority = *pucFirstUserPriorityRegister;
9001114e:	b2d2      	uxtb	r2, r2
90011150:	9202      	str	r2, [sp, #8]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
90011152:	2207      	movs	r2, #7
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
90011154:	7018      	strb	r0, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
90011156:	781b      	ldrb	r3, [r3, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
90011158:	6022      	str	r2, [r4, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
9001115a:	b2db      	uxtb	r3, r3
9001115c:	f88d 3007 	strb.w	r3, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
90011160:	f89d 3007 	ldrb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
90011164:	f89d 2007 	ldrb.w	r2, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
90011168:	f003 0350 	and.w	r3, r3, #80	; 0x50
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9001116c:	0610      	lsls	r0, r2, #24
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9001116e:	700b      	strb	r3, [r1, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
90011170:	d511      	bpl.n	90011196 <xPortStartScheduler+0x6e>
90011172:	2206      	movs	r2, #6
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
90011174:	f89d 3007 	ldrb.w	r3, [sp, #7]
90011178:	4610      	mov	r0, r2
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9001117a:	3a01      	subs	r2, #1
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
9001117c:	005b      	lsls	r3, r3, #1
9001117e:	b2db      	uxtb	r3, r3
90011180:	f88d 3007 	strb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
90011184:	f89d 1007 	ldrb.w	r1, [sp, #7]
90011188:	0609      	lsls	r1, r1, #24
9001118a:	d4f3      	bmi.n	90011174 <xPortStartScheduler+0x4c>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
9001118c:	2803      	cmp	r0, #3
9001118e:	6020      	str	r0, [r4, #0]
90011190:	f88d 3007 	strb.w	r3, [sp, #7]
90011194:	d01a      	beq.n	900111cc <xPortStartScheduler+0xa4>
	__asm volatile
90011196:	f04f 0350 	mov.w	r3, #80	; 0x50
9001119a:	f383 8811 	msr	BASEPRI, r3
9001119e:	f3bf 8f6f 	isb	sy
900111a2:	f3bf 8f4f 	dsb	sy
900111a6:	e7fe      	b.n	900111a6 <xPortStartScheduler+0x7e>
900111a8:	f04f 0350 	mov.w	r3, #80	; 0x50
900111ac:	f383 8811 	msr	BASEPRI, r3
900111b0:	f3bf 8f6f 	isb	sy
900111b4:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
900111b8:	e7fe      	b.n	900111b8 <xPortStartScheduler+0x90>
900111ba:	f04f 0350 	mov.w	r3, #80	; 0x50
900111be:	f383 8811 	msr	BASEPRI, r3
900111c2:	f3bf 8f6f 	isb	sy
900111c6:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
900111ca:	e7fe      	b.n	900111ca <xPortStartScheduler+0xa2>
		*pucFirstUserPriorityRegister = ulOriginalPriority;
900111cc:	9b02      	ldr	r3, [sp, #8]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
900111ce:	f04f 25e0 	mov.w	r5, #3758153728	; 0xe000e000
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
900111d2:	f44f 7140 	mov.w	r1, #768	; 0x300
		*pucFirstUserPriorityRegister = ulOriginalPriority;
900111d6:	4a20      	ldr	r2, [pc, #128]	; (90011258 <xPortStartScheduler+0x130>)
900111d8:	b2db      	uxtb	r3, r3
	uxCriticalNesting = 0;
900111da:	4e22      	ldr	r6, [pc, #136]	; (90011264 <xPortStartScheduler+0x13c>)
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
900111dc:	6021      	str	r1, [r4, #0]
	uxCriticalNesting = 0;
900111de:	2400      	movs	r4, #0
		*pucFirstUserPriorityRegister = ulOriginalPriority;
900111e0:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
900111e2:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
900111e6:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
900111ea:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
900111ee:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
900111f2:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
900111f6:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	vPortSetupTimerInterrupt();
900111fa:	f7ff ff81 	bl	90011100 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
900111fe:	6034      	str	r4, [r6, #0]
	vPortEnableVFP();
90011200:	f7ff feac 	bl	90010f5c <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
90011204:	f8d5 3f34 	ldr.w	r3, [r5, #3892]	; 0xf34
90011208:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
9001120c:	f8c5 3f34 	str.w	r3, [r5, #3892]	; 0xf34
	prvPortStartFirstTask();
90011210:	f7ff fe90 	bl	90010f34 <prvPortStartFirstTask>
	vTaskSwitchContext();
90011214:	f001 fdea 	bl	90012dec <vTaskSwitchContext>
	configASSERT( uxCriticalNesting == ~0UL );
90011218:	6833      	ldr	r3, [r6, #0]
volatile uint32_t ulDummy = 0;
9001121a:	9403      	str	r4, [sp, #12]
	configASSERT( uxCriticalNesting == ~0UL );
9001121c:	3301      	adds	r3, #1
9001121e:	d008      	beq.n	90011232 <xPortStartScheduler+0x10a>
90011220:	f04f 0350 	mov.w	r3, #80	; 0x50
90011224:	f383 8811 	msr	BASEPRI, r3
90011228:	f3bf 8f6f 	isb	sy
9001122c:	f3bf 8f4f 	dsb	sy
90011230:	e7fe      	b.n	90011230 <xPortStartScheduler+0x108>
90011232:	f04f 0350 	mov.w	r3, #80	; 0x50
90011236:	f383 8811 	msr	BASEPRI, r3
9001123a:	f3bf 8f6f 	isb	sy
9001123e:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
90011242:	9b03      	ldr	r3, [sp, #12]
90011244:	2b00      	cmp	r3, #0
90011246:	d0fc      	beq.n	90011242 <xPortStartScheduler+0x11a>
}
90011248:	2000      	movs	r0, #0
9001124a:	b004      	add	sp, #16
9001124c:	bd70      	pop	{r4, r5, r6, pc}
9001124e:	bf00      	nop
90011250:	410fc271 	.word	0x410fc271
90011254:	410fc270 	.word	0x410fc270
90011258:	e000e400 	.word	0xe000e400
9001125c:	24023050 	.word	0x24023050
90011260:	24023054 	.word	0x24023054
90011264:	24000070 	.word	0x24000070

90011268 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
90011268:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
9001126c:	2b0f      	cmp	r3, #15
9001126e:	d90e      	bls.n	9001128e <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
90011270:	4911      	ldr	r1, [pc, #68]	; (900112b8 <vPortValidateInterruptPriority+0x50>)
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
90011272:	4a12      	ldr	r2, [pc, #72]	; (900112bc <vPortValidateInterruptPriority+0x54>)
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
90011274:	5c5b      	ldrb	r3, [r3, r1]
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
90011276:	7812      	ldrb	r2, [r2, #0]
90011278:	429a      	cmp	r2, r3
9001127a:	d908      	bls.n	9001128e <vPortValidateInterruptPriority+0x26>
9001127c:	f04f 0350 	mov.w	r3, #80	; 0x50
90011280:	f383 8811 	msr	BASEPRI, r3
90011284:	f3bf 8f6f 	isb	sy
90011288:	f3bf 8f4f 	dsb	sy
9001128c:	e7fe      	b.n	9001128c <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
9001128e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
90011292:	4a0b      	ldr	r2, [pc, #44]	; (900112c0 <vPortValidateInterruptPriority+0x58>)
90011294:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
90011298:	6812      	ldr	r2, [r2, #0]
9001129a:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
9001129e:	4293      	cmp	r3, r2
900112a0:	d908      	bls.n	900112b4 <vPortValidateInterruptPriority+0x4c>
900112a2:	f04f 0350 	mov.w	r3, #80	; 0x50
900112a6:	f383 8811 	msr	BASEPRI, r3
900112aa:	f3bf 8f6f 	isb	sy
900112ae:	f3bf 8f4f 	dsb	sy
900112b2:	e7fe      	b.n	900112b2 <vPortValidateInterruptPriority+0x4a>
	}
900112b4:	4770      	bx	lr
900112b6:	bf00      	nop
900112b8:	e000e3f0 	.word	0xe000e3f0
900112bc:	24023050 	.word	0x24023050
900112c0:	24023054 	.word	0x24023054

900112c4 <prvCopyDataToQueue>:

#endif /* configUSE_MUTEXES */
/*-----------------------------------------------------------*/

static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseType_t xPosition )
{
900112c4:	b570      	push	{r4, r5, r6, lr}
900112c6:	4615      	mov	r5, r2

	/* This function is called from a critical section. */

	uxMessagesWaiting = pxQueue->uxMessagesWaiting;

	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
900112c8:	6c02      	ldr	r2, [r0, #64]	; 0x40
{
900112ca:	4604      	mov	r4, r0
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
900112cc:	6b86      	ldr	r6, [r0, #56]	; 0x38
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
900112ce:	b92a      	cbnz	r2, 900112dc <prvCopyDataToQueue+0x18>
	{
		#if ( configUSE_MUTEXES == 1 )
		{
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
900112d0:	6805      	ldr	r5, [r0, #0]
900112d2:	b365      	cbz	r5, 9001132e <prvCopyDataToQueue+0x6a>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
900112d4:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
900112d6:	4610      	mov	r0, r2
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
900112d8:	63a6      	str	r6, [r4, #56]	; 0x38

	return xReturn;
}
900112da:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
900112dc:	b97d      	cbnz	r5, 900112fe <prvCopyDataToQueue+0x3a>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
900112de:	6840      	ldr	r0, [r0, #4]
900112e0:	f019 f8a5 	bl	9002a42e <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
900112e4:	6863      	ldr	r3, [r4, #4]
900112e6:	6c22      	ldr	r2, [r4, #64]	; 0x40
900112e8:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
900112ea:	68a2      	ldr	r2, [r4, #8]
900112ec:	4293      	cmp	r3, r2
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
900112ee:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
900112f0:	d319      	bcc.n	90011326 <prvCopyDataToQueue+0x62>
			pxQueue->pcWriteTo = pxQueue->pcHead;
900112f2:	6822      	ldr	r2, [r4, #0]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
900112f4:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
900112f6:	4628      	mov	r0, r5
			pxQueue->pcWriteTo = pxQueue->pcHead;
900112f8:	6062      	str	r2, [r4, #4]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
900112fa:	63a6      	str	r6, [r4, #56]	; 0x38
}
900112fc:	bd70      	pop	{r4, r5, r6, pc}
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
900112fe:	68c0      	ldr	r0, [r0, #12]
90011300:	f019 f895 	bl	9002a42e <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
90011304:	6c22      	ldr	r2, [r4, #64]	; 0x40
90011306:	68e3      	ldr	r3, [r4, #12]
90011308:	4251      	negs	r1, r2
9001130a:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9001130c:	6822      	ldr	r2, [r4, #0]
9001130e:	4293      	cmp	r3, r2
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
90011310:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
90011312:	d202      	bcs.n	9001131a <prvCopyDataToQueue+0x56>
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
90011314:	68a3      	ldr	r3, [r4, #8]
90011316:	440b      	add	r3, r1
90011318:	60e3      	str	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
9001131a:	2d02      	cmp	r5, #2
9001131c:	d00d      	beq.n	9001133a <prvCopyDataToQueue+0x76>
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9001131e:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
90011320:	2000      	movs	r0, #0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
90011322:	63a6      	str	r6, [r4, #56]	; 0x38
}
90011324:	bd70      	pop	{r4, r5, r6, pc}
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
90011326:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
90011328:	4628      	mov	r0, r5
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9001132a:	63a6      	str	r6, [r4, #56]	; 0x38
}
9001132c:	bd70      	pop	{r4, r5, r6, pc}
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
9001132e:	6880      	ldr	r0, [r0, #8]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
90011330:	3601      	adds	r6, #1
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
90011332:	f001 ffb1 	bl	90013298 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
90011336:	60a5      	str	r5, [r4, #8]
90011338:	e7ce      	b.n	900112d8 <prvCopyDataToQueue+0x14>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9001133a:	2e01      	cmp	r6, #1
BaseType_t xReturn = pdFALSE;
9001133c:	f04f 0000 	mov.w	r0, #0
90011340:	bf38      	it	cc
90011342:	2601      	movcc	r6, #1
90011344:	e7c8      	b.n	900112d8 <prvCopyDataToQueue+0x14>
90011346:	bf00      	nop

90011348 <xQueueGenericCreateStatic>:
	{
90011348:	b530      	push	{r4, r5, lr}
9001134a:	b083      	sub	sp, #12
9001134c:	f89d 4018 	ldrb.w	r4, [sp, #24]
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
90011350:	b940      	cbnz	r0, 90011364 <xQueueGenericCreateStatic+0x1c>
90011352:	f04f 0350 	mov.w	r3, #80	; 0x50
90011356:	f383 8811 	msr	BASEPRI, r3
9001135a:	f3bf 8f6f 	isb	sy
9001135e:	f3bf 8f4f 	dsb	sy
90011362:	e7fe      	b.n	90011362 <xQueueGenericCreateStatic+0x1a>
		configASSERT( pxStaticQueue != NULL );
90011364:	461d      	mov	r5, r3
90011366:	b153      	cbz	r3, 9001137e <xQueueGenericCreateStatic+0x36>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
90011368:	b30a      	cbz	r2, 900113ae <xQueueGenericCreateStatic+0x66>
9001136a:	b989      	cbnz	r1, 90011390 <xQueueGenericCreateStatic+0x48>
9001136c:	f04f 0350 	mov.w	r3, #80	; 0x50
90011370:	f383 8811 	msr	BASEPRI, r3
90011374:	f3bf 8f6f 	isb	sy
90011378:	f3bf 8f4f 	dsb	sy
9001137c:	e7fe      	b.n	9001137c <xQueueGenericCreateStatic+0x34>
9001137e:	f04f 0350 	mov.w	r3, #80	; 0x50
90011382:	f383 8811 	msr	BASEPRI, r3
90011386:	f3bf 8f6f 	isb	sy
9001138a:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
9001138e:	e7fe      	b.n	9001138e <xQueueGenericCreateStatic+0x46>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
90011390:	b16a      	cbz	r2, 900113ae <xQueueGenericCreateStatic+0x66>
			volatile size_t xSize = sizeof( StaticQueue_t );
90011392:	2350      	movs	r3, #80	; 0x50
90011394:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
90011396:	9b01      	ldr	r3, [sp, #4]
90011398:	2b50      	cmp	r3, #80	; 0x50
9001139a:	d013      	beq.n	900113c4 <xQueueGenericCreateStatic+0x7c>
9001139c:	f04f 0350 	mov.w	r3, #80	; 0x50
900113a0:	f383 8811 	msr	BASEPRI, r3
900113a4:	f3bf 8f6f 	isb	sy
900113a8:	f3bf 8f4f 	dsb	sy
900113ac:	e7fe      	b.n	900113ac <xQueueGenericCreateStatic+0x64>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
900113ae:	2900      	cmp	r1, #0
900113b0:	d0ef      	beq.n	90011392 <xQueueGenericCreateStatic+0x4a>
900113b2:	f04f 0350 	mov.w	r3, #80	; 0x50
900113b6:	f383 8811 	msr	BASEPRI, r3
900113ba:	f3bf 8f6f 	isb	sy
900113be:	f3bf 8f4f 	dsb	sy
900113c2:	e7fe      	b.n	900113c2 <xQueueGenericCreateStatic+0x7a>
	if( uxItemSize == ( UBaseType_t ) 0 )
900113c4:	2900      	cmp	r1, #0
900113c6:	bf08      	it	eq
900113c8:	462a      	moveq	r2, r5
	pxNewQueue->uxLength = uxQueueLength;
900113ca:	63e8      	str	r0, [r5, #60]	; 0x3c
	pxNewQueue->uxItemSize = uxItemSize;
900113cc:	6429      	str	r1, [r5, #64]	; 0x40
900113ce:	602a      	str	r2, [r5, #0]
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
900113d0:	9a01      	ldr	r2, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
900113d2:	2201      	movs	r2, #1
900113d4:	f885 2046 	strb.w	r2, [r5, #70]	; 0x46
	taskENTER_CRITICAL();
900113d8:	f7ff fe14 	bl	90011004 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
900113dc:	6829      	ldr	r1, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
900113de:	2300      	movs	r3, #0
		pxQueue->pcWriteTo = pxQueue->pcHead;
900113e0:	6069      	str	r1, [r5, #4]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
900113e2:	63ab      	str	r3, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
900113e4:	e9d5 200f 	ldrd	r2, r0, [r5, #60]	; 0x3c
900113e8:	fb00 f202 	mul.w	r2, r0, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
900113ec:	1a10      	subs	r0, r2, r0
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
900113ee:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
900113f0:	4401      	add	r1, r0
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
900113f2:	60aa      	str	r2, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
900113f4:	22ff      	movs	r2, #255	; 0xff
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
900113f6:	f105 0010 	add.w	r0, r5, #16
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
900113fa:	60e9      	str	r1, [r5, #12]
		pxQueue->cRxLock = queueUNLOCKED;
900113fc:	f885 2044 	strb.w	r2, [r5, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
90011400:	f885 2045 	strb.w	r2, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
90011404:	f7ff fd4a 	bl	90010e9c <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
90011408:	f105 0024 	add.w	r0, r5, #36	; 0x24
9001140c:	f7ff fd46 	bl	90010e9c <vListInitialise>
	taskEXIT_CRITICAL();
90011410:	f7ff fe1a 	bl	90011048 <vPortExitCritical>
	}
90011414:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
90011416:	f885 404c 	strb.w	r4, [r5, #76]	; 0x4c
	}
9001141a:	b003      	add	sp, #12
9001141c:	bd30      	pop	{r4, r5, pc}
9001141e:	bf00      	nop

90011420 <xQueueGenericCreate>:
	{
90011420:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
90011422:	b940      	cbnz	r0, 90011436 <xQueueGenericCreate+0x16>
90011424:	f04f 0350 	mov.w	r3, #80	; 0x50
90011428:	f383 8811 	msr	BASEPRI, r3
9001142c:	f3bf 8f6f 	isb	sy
90011430:	f3bf 8f4f 	dsb	sy
90011434:	e7fe      	b.n	90011434 <xQueueGenericCreate+0x14>
90011436:	4605      	mov	r5, r0
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90011438:	fb01 f000 	mul.w	r0, r1, r0
9001143c:	460e      	mov	r6, r1
9001143e:	4617      	mov	r7, r2
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
90011440:	3050      	adds	r0, #80	; 0x50
90011442:	f7ff fc09 	bl	90010c58 <pvPortMalloc>
		if( pxNewQueue != NULL )
90011446:	4604      	mov	r4, r0
90011448:	b340      	cbz	r0, 9001149c <xQueueGenericCreate+0x7c>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
9001144a:	2300      	movs	r3, #0
9001144c:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
90011450:	b336      	cbz	r6, 900114a0 <xQueueGenericCreate+0x80>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90011452:	f100 0350 	add.w	r3, r0, #80	; 0x50
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
90011456:	6023      	str	r3, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
90011458:	e9c4 560f 	strd	r5, r6, [r4, #60]	; 0x3c
	taskENTER_CRITICAL();
9001145c:	f7ff fdd2 	bl	90011004 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90011460:	6822      	ldr	r2, [r4, #0]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
90011462:	f104 0010 	add.w	r0, r4, #16
		pxQueue->pcWriteTo = pxQueue->pcHead;
90011466:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90011468:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	; 0x3c
9001146c:	fb01 f303 	mul.w	r3, r1, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90011470:	1a59      	subs	r1, r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90011472:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90011474:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90011476:	60a3      	str	r3, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
90011478:	2100      	movs	r1, #0
		pxQueue->cRxLock = queueUNLOCKED;
9001147a:	23ff      	movs	r3, #255	; 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9001147c:	60e2      	str	r2, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9001147e:	63a1      	str	r1, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
90011480:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
90011484:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
90011488:	f7ff fd08 	bl	90010e9c <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9001148c:	f104 0024 	add.w	r0, r4, #36	; 0x24
90011490:	f7ff fd04 	bl	90010e9c <vListInitialise>
	taskEXIT_CRITICAL();
90011494:	f7ff fdd8 	bl	90011048 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
90011498:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
9001149c:	4620      	mov	r0, r4
9001149e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
900114a0:	4603      	mov	r3, r0
900114a2:	e7d8      	b.n	90011456 <xQueueGenericCreate+0x36>

900114a4 <xQueueCreateCountingSemaphoreStatic>:
		configASSERT( uxMaxCount != 0 );
900114a4:	b940      	cbnz	r0, 900114b8 <xQueueCreateCountingSemaphoreStatic+0x14>
900114a6:	f04f 0350 	mov.w	r3, #80	; 0x50
900114aa:	f383 8811 	msr	BASEPRI, r3
900114ae:	f3bf 8f6f 	isb	sy
900114b2:	f3bf 8f4f 	dsb	sy
900114b6:	e7fe      	b.n	900114b6 <xQueueCreateCountingSemaphoreStatic+0x12>
		configASSERT( uxInitialCount <= uxMaxCount );
900114b8:	4288      	cmp	r0, r1
900114ba:	d208      	bcs.n	900114ce <xQueueCreateCountingSemaphoreStatic+0x2a>
900114bc:	f04f 0350 	mov.w	r3, #80	; 0x50
900114c0:	f383 8811 	msr	BASEPRI, r3
900114c4:	f3bf 8f6f 	isb	sy
900114c8:	f3bf 8f4f 	dsb	sy
900114cc:	e7fe      	b.n	900114cc <xQueueCreateCountingSemaphoreStatic+0x28>
	{
900114ce:	b530      	push	{r4, r5, lr}
900114d0:	4615      	mov	r5, r2
900114d2:	b085      	sub	sp, #20
		configASSERT( pxStaticQueue != NULL );
900114d4:	2a00      	cmp	r2, #0
900114d6:	d03d      	beq.n	90011554 <xQueueCreateCountingSemaphoreStatic+0xb0>
			volatile size_t xSize = sizeof( StaticQueue_t );
900114d8:	2350      	movs	r3, #80	; 0x50
900114da:	9303      	str	r3, [sp, #12]
			configASSERT( xSize == sizeof( Queue_t ) );
900114dc:	9b03      	ldr	r3, [sp, #12]
900114de:	2b50      	cmp	r3, #80	; 0x50
900114e0:	d008      	beq.n	900114f4 <xQueueCreateCountingSemaphoreStatic+0x50>
900114e2:	f04f 0350 	mov.w	r3, #80	; 0x50
900114e6:	f383 8811 	msr	BASEPRI, r3
900114ea:	f3bf 8f6f 	isb	sy
900114ee:	f3bf 8f4f 	dsb	sy
900114f2:	e7fe      	b.n	900114f2 <xQueueCreateCountingSemaphoreStatic+0x4e>
	pxNewQueue->uxItemSize = uxItemSize;
900114f4:	2400      	movs	r4, #0
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
900114f6:	2301      	movs	r3, #1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
900114f8:	602a      	str	r2, [r5, #0]
	pxNewQueue->uxLength = uxQueueLength;
900114fa:	63d0      	str	r0, [r2, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
900114fc:	f882 3046 	strb.w	r3, [r2, #70]	; 0x46
	pxNewQueue->uxItemSize = uxItemSize;
90011500:	6414      	str	r4, [r2, #64]	; 0x40
90011502:	9101      	str	r1, [sp, #4]
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
90011504:	9b03      	ldr	r3, [sp, #12]
	taskENTER_CRITICAL();
90011506:	f7ff fd7d 	bl	90011004 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9001150a:	6828      	ldr	r0, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9001150c:	63ac      	str	r4, [r5, #56]	; 0x38
		pxQueue->pcWriteTo = pxQueue->pcHead;
9001150e:	6068      	str	r0, [r5, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90011510:	e9d5 3c0f 	ldrd	r3, ip, [r5, #60]	; 0x3c
90011514:	fb03 f30c 	mul.w	r3, r3, ip
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90011518:	eba3 0c0c 	sub.w	ip, r3, ip
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9001151c:	4403      	add	r3, r0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9001151e:	4484      	add	ip, r0
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90011520:	60ab      	str	r3, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
90011522:	23ff      	movs	r3, #255	; 0xff
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
90011524:	f105 0010 	add.w	r0, r5, #16
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90011528:	f8c5 c00c 	str.w	ip, [r5, #12]
		pxQueue->cRxLock = queueUNLOCKED;
9001152c:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
90011530:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
90011534:	f7ff fcb2 	bl	90010e9c <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
90011538:	f105 0024 	add.w	r0, r5, #36	; 0x24
9001153c:	f7ff fcae 	bl	90010e9c <vListInitialise>
	taskEXIT_CRITICAL();
90011540:	f7ff fd82 	bl	90011048 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
90011544:	2302      	movs	r3, #2
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
90011546:	9901      	ldr	r1, [sp, #4]
	}
90011548:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
9001154a:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
9001154e:	63a9      	str	r1, [r5, #56]	; 0x38
	}
90011550:	b005      	add	sp, #20
90011552:	bd30      	pop	{r4, r5, pc}
90011554:	f04f 0350 	mov.w	r3, #80	; 0x50
90011558:	f383 8811 	msr	BASEPRI, r3
9001155c:	f3bf 8f6f 	isb	sy
90011560:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
90011564:	e7fe      	b.n	90011564 <xQueueCreateCountingSemaphoreStatic+0xc0>
90011566:	bf00      	nop

90011568 <xQueueCreateCountingSemaphore>:
	{
90011568:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxMaxCount != 0 );
9001156a:	b940      	cbnz	r0, 9001157e <xQueueCreateCountingSemaphore+0x16>
9001156c:	f04f 0350 	mov.w	r3, #80	; 0x50
90011570:	f383 8811 	msr	BASEPRI, r3
90011574:	f3bf 8f6f 	isb	sy
90011578:	f3bf 8f4f 	dsb	sy
9001157c:	e7fe      	b.n	9001157c <xQueueCreateCountingSemaphore+0x14>
		configASSERT( uxInitialCount <= uxMaxCount );
9001157e:	4288      	cmp	r0, r1
90011580:	4604      	mov	r4, r0
90011582:	460e      	mov	r6, r1
90011584:	d208      	bcs.n	90011598 <xQueueCreateCountingSemaphore+0x30>
90011586:	f04f 0350 	mov.w	r3, #80	; 0x50
9001158a:	f383 8811 	msr	BASEPRI, r3
9001158e:	f3bf 8f6f 	isb	sy
90011592:	f3bf 8f4f 	dsb	sy
90011596:	e7fe      	b.n	90011596 <xQueueCreateCountingSemaphore+0x2e>
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
90011598:	2050      	movs	r0, #80	; 0x50
9001159a:	f7ff fb5d 	bl	90010c58 <pvPortMalloc>
		if( pxNewQueue != NULL )
9001159e:	4605      	mov	r5, r0
900115a0:	b330      	cbz	r0, 900115f0 <xQueueCreateCountingSemaphore+0x88>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
900115a2:	2700      	movs	r7, #0
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
900115a4:	6000      	str	r0, [r0, #0]
	pxNewQueue->uxLength = uxQueueLength;
900115a6:	63c4      	str	r4, [r0, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
900115a8:	f880 7046 	strb.w	r7, [r0, #70]	; 0x46
	pxNewQueue->uxItemSize = uxItemSize;
900115ac:	6407      	str	r7, [r0, #64]	; 0x40
	taskENTER_CRITICAL();
900115ae:	f7ff fd29 	bl	90011004 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
900115b2:	682a      	ldr	r2, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
900115b4:	63af      	str	r7, [r5, #56]	; 0x38
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
900115b6:	f105 0010 	add.w	r0, r5, #16
		pxQueue->pcWriteTo = pxQueue->pcHead;
900115ba:	606a      	str	r2, [r5, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
900115bc:	e9d5 310f 	ldrd	r3, r1, [r5, #60]	; 0x3c
900115c0:	fb01 f303 	mul.w	r3, r1, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
900115c4:	1a59      	subs	r1, r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
900115c6:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
900115c8:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
900115ca:	60ab      	str	r3, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
900115cc:	23ff      	movs	r3, #255	; 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
900115ce:	60ea      	str	r2, [r5, #12]
		pxQueue->cRxLock = queueUNLOCKED;
900115d0:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
900115d4:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
900115d8:	f7ff fc60 	bl	90010e9c <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
900115dc:	f105 0024 	add.w	r0, r5, #36	; 0x24
900115e0:	f7ff fc5c 	bl	90010e9c <vListInitialise>
	taskEXIT_CRITICAL();
900115e4:	f7ff fd30 	bl	90011048 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
900115e8:	2302      	movs	r3, #2
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
900115ea:	63ae      	str	r6, [r5, #56]	; 0x38
		pxNewQueue->ucQueueType = ucQueueType;
900115ec:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
	}
900115f0:	4628      	mov	r0, r5
900115f2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

900115f4 <xQueueGenericSend>:
{
900115f4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900115f8:	b084      	sub	sp, #16
900115fa:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
900115fc:	2800      	cmp	r0, #0
900115fe:	f000 8103 	beq.w	90011808 <xQueueGenericSend+0x214>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
90011602:	4688      	mov	r8, r1
90011604:	4604      	mov	r4, r0
90011606:	461f      	mov	r7, r3
90011608:	2900      	cmp	r1, #0
9001160a:	f000 8097 	beq.w	9001173c <xQueueGenericSend+0x148>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
9001160e:	2f02      	cmp	r7, #2
90011610:	d10b      	bne.n	9001162a <xQueueGenericSend+0x36>
90011612:	6be3      	ldr	r3, [r4, #60]	; 0x3c
90011614:	2b01      	cmp	r3, #1
90011616:	d008      	beq.n	9001162a <xQueueGenericSend+0x36>
90011618:	f04f 0350 	mov.w	r3, #80	; 0x50
9001161c:	f383 8811 	msr	BASEPRI, r3
90011620:	f3bf 8f6f 	isb	sy
90011624:	f3bf 8f4f 	dsb	sy
90011628:	e7fe      	b.n	90011628 <xQueueGenericSend+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9001162a:	f001 fddf 	bl	900131ec <xTaskGetSchedulerState>
9001162e:	2800      	cmp	r0, #0
90011630:	f000 80f3 	beq.w	9001181a <xQueueGenericSend+0x226>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
90011634:	f1a7 0902 	sub.w	r9, r7, #2
90011638:	2500      	movs	r5, #0
			{
				/* Tasks that are removed from the event list will get added to
				the pending ready list as the scheduler is still suspended. */
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
				{
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9001163a:	f104 0624 	add.w	r6, r4, #36	; 0x24
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9001163e:	fab9 f989 	clz	r9, r9
90011642:	ea4f 1959 	mov.w	r9, r9, lsr #5
		taskENTER_CRITICAL();
90011646:	f7ff fcdd 	bl	90011004 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9001164a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
9001164c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
9001164e:	429a      	cmp	r2, r3
90011650:	f0c0 80f0 	bcc.w	90011834 <xQueueGenericSend+0x240>
90011654:	f1b9 0f00 	cmp.w	r9, #0
90011658:	f040 80ec 	bne.w	90011834 <xQueueGenericSend+0x240>
				if( xTicksToWait == ( TickType_t ) 0 )
9001165c:	9b01      	ldr	r3, [sp, #4]
9001165e:	2b00      	cmp	r3, #0
90011660:	f000 8101 	beq.w	90011866 <xQueueGenericSend+0x272>
				else if( xEntryTimeSet == pdFALSE )
90011664:	2d00      	cmp	r5, #0
90011666:	f000 80cb 	beq.w	90011800 <xQueueGenericSend+0x20c>
		taskEXIT_CRITICAL();
9001166a:	f7ff fced 	bl	90011048 <vPortExitCritical>
		vTaskSuspendAll();
9001166e:	f001 fb79 	bl	90012d64 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
90011672:	f7ff fcc7 	bl	90011004 <vPortEnterCritical>
90011676:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9001167a:	2bff      	cmp	r3, #255	; 0xff
9001167c:	d102      	bne.n	90011684 <xQueueGenericSend+0x90>
9001167e:	2300      	movs	r3, #0
90011680:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
90011684:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
90011688:	2bff      	cmp	r3, #255	; 0xff
9001168a:	d102      	bne.n	90011692 <xQueueGenericSend+0x9e>
9001168c:	2300      	movs	r3, #0
9001168e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
90011692:	f7ff fcd9 	bl	90011048 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
90011696:	a901      	add	r1, sp, #4
90011698:	a802      	add	r0, sp, #8
9001169a:	f001 fd53 	bl	90013144 <xTaskCheckForTimeOut>
9001169e:	2800      	cmp	r0, #0
900116a0:	f040 80e5 	bne.w	9001186e <xQueueGenericSend+0x27a>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
900116a4:	f7ff fcae 	bl	90011004 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
900116a8:	6ba2      	ldr	r2, [r4, #56]	; 0x38
900116aa:	6be3      	ldr	r3, [r4, #60]	; 0x3c
900116ac:	429a      	cmp	r2, r3
900116ae:	d052      	beq.n	90011756 <xQueueGenericSend+0x162>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
900116b0:	f7ff fcca 	bl	90011048 <vPortExitCritical>
	taskENTER_CRITICAL();
900116b4:	f7ff fca6 	bl	90011004 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
900116b8:	f894 2045 	ldrb.w	r2, [r4, #69]	; 0x45
900116bc:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
900116be:	2d00      	cmp	r5, #0
900116c0:	dc04      	bgt.n	900116cc <xQueueGenericSend+0xd8>
900116c2:	e011      	b.n	900116e8 <xQueueGenericSend+0xf4>
			--cTxLock;
900116c4:	1e6a      	subs	r2, r5, #1
900116c6:	b2d3      	uxtb	r3, r2
900116c8:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
900116ca:	b16b      	cbz	r3, 900116e8 <xQueueGenericSend+0xf4>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
900116cc:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
900116ce:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
900116d0:	b153      	cbz	r3, 900116e8 <xQueueGenericSend+0xf4>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
900116d2:	f001 fce1 	bl	90013098 <xTaskRemoveFromEventList>
900116d6:	2800      	cmp	r0, #0
900116d8:	d0f4      	beq.n	900116c4 <xQueueGenericSend+0xd0>
						vTaskMissedYield();
900116da:	f001 fd7b 	bl	900131d4 <vTaskMissedYield>
			--cTxLock;
900116de:	1e6a      	subs	r2, r5, #1
900116e0:	b2d3      	uxtb	r3, r2
900116e2:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
900116e4:	2b00      	cmp	r3, #0
900116e6:	d1f1      	bne.n	900116cc <xQueueGenericSend+0xd8>
		pxQueue->cTxLock = queueUNLOCKED;
900116e8:	23ff      	movs	r3, #255	; 0xff
900116ea:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
900116ee:	f7ff fcab 	bl	90011048 <vPortExitCritical>
	taskENTER_CRITICAL();
900116f2:	f7ff fc87 	bl	90011004 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
900116f6:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
900116fa:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
900116fc:	2d00      	cmp	r5, #0
900116fe:	dd14      	ble.n	9001172a <xQueueGenericSend+0x136>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90011700:	f104 0a10 	add.w	sl, r4, #16
90011704:	e003      	b.n	9001170e <xQueueGenericSend+0x11a>
				--cRxLock;
90011706:	1e6a      	subs	r2, r5, #1
90011708:	b2d3      	uxtb	r3, r2
9001170a:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
9001170c:	b16b      	cbz	r3, 9001172a <xQueueGenericSend+0x136>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9001170e:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90011710:	4650      	mov	r0, sl
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90011712:	b153      	cbz	r3, 9001172a <xQueueGenericSend+0x136>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90011714:	f001 fcc0 	bl	90013098 <xTaskRemoveFromEventList>
90011718:	2800      	cmp	r0, #0
9001171a:	d0f4      	beq.n	90011706 <xQueueGenericSend+0x112>
					vTaskMissedYield();
9001171c:	f001 fd5a 	bl	900131d4 <vTaskMissedYield>
				--cRxLock;
90011720:	1e6a      	subs	r2, r5, #1
90011722:	b2d3      	uxtb	r3, r2
90011724:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
90011726:	2b00      	cmp	r3, #0
90011728:	d1f1      	bne.n	9001170e <xQueueGenericSend+0x11a>
		pxQueue->cRxLock = queueUNLOCKED;
9001172a:	23ff      	movs	r3, #255	; 0xff
9001172c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
90011730:	f7ff fc8a 	bl	90011048 <vPortExitCritical>
				( void ) xTaskResumeAll();
90011734:	f001 fb1e 	bl	90012d74 <xTaskResumeAll>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
90011738:	2501      	movs	r5, #1
9001173a:	e784      	b.n	90011646 <xQueueGenericSend+0x52>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9001173c:	6c03      	ldr	r3, [r0, #64]	; 0x40
9001173e:	2b00      	cmp	r3, #0
90011740:	f43f af65 	beq.w	9001160e <xQueueGenericSend+0x1a>
90011744:	f04f 0350 	mov.w	r3, #80	; 0x50
90011748:	f383 8811 	msr	BASEPRI, r3
9001174c:	f3bf 8f6f 	isb	sy
90011750:	f3bf 8f4f 	dsb	sy
90011754:	e7fe      	b.n	90011754 <xQueueGenericSend+0x160>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
90011756:	f104 0a10 	add.w	sl, r4, #16
	taskEXIT_CRITICAL();
9001175a:	f7ff fc75 	bl	90011048 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
9001175e:	9901      	ldr	r1, [sp, #4]
90011760:	4650      	mov	r0, sl
90011762:	f001 fc0b 	bl	90012f7c <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
90011766:	f7ff fc4d 	bl	90011004 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9001176a:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9001176e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90011770:	2d00      	cmp	r5, #0
90011772:	dc04      	bgt.n	9001177e <xQueueGenericSend+0x18a>
90011774:	e011      	b.n	9001179a <xQueueGenericSend+0x1a6>
			--cTxLock;
90011776:	1e6b      	subs	r3, r5, #1
90011778:	b2da      	uxtb	r2, r3
9001177a:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9001177c:	b16a      	cbz	r2, 9001179a <xQueueGenericSend+0x1a6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9001177e:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90011780:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90011782:	b153      	cbz	r3, 9001179a <xQueueGenericSend+0x1a6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90011784:	f001 fc88 	bl	90013098 <xTaskRemoveFromEventList>
90011788:	2800      	cmp	r0, #0
9001178a:	d0f4      	beq.n	90011776 <xQueueGenericSend+0x182>
						vTaskMissedYield();
9001178c:	f001 fd22 	bl	900131d4 <vTaskMissedYield>
			--cTxLock;
90011790:	1e6b      	subs	r3, r5, #1
90011792:	b2da      	uxtb	r2, r3
90011794:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90011796:	2a00      	cmp	r2, #0
90011798:	d1f1      	bne.n	9001177e <xQueueGenericSend+0x18a>
		pxQueue->cTxLock = queueUNLOCKED;
9001179a:	23ff      	movs	r3, #255	; 0xff
9001179c:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
900117a0:	f7ff fc52 	bl	90011048 <vPortExitCritical>
	taskENTER_CRITICAL();
900117a4:	f7ff fc2e 	bl	90011004 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
900117a8:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
900117ac:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
900117ae:	2d00      	cmp	r5, #0
900117b0:	dc04      	bgt.n	900117bc <xQueueGenericSend+0x1c8>
900117b2:	e011      	b.n	900117d8 <xQueueGenericSend+0x1e4>
				--cRxLock;
900117b4:	1e6b      	subs	r3, r5, #1
900117b6:	b2da      	uxtb	r2, r3
900117b8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
900117ba:	b16a      	cbz	r2, 900117d8 <xQueueGenericSend+0x1e4>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
900117bc:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
900117be:	4650      	mov	r0, sl
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
900117c0:	b153      	cbz	r3, 900117d8 <xQueueGenericSend+0x1e4>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
900117c2:	f001 fc69 	bl	90013098 <xTaskRemoveFromEventList>
900117c6:	2800      	cmp	r0, #0
900117c8:	d0f4      	beq.n	900117b4 <xQueueGenericSend+0x1c0>
					vTaskMissedYield();
900117ca:	f001 fd03 	bl	900131d4 <vTaskMissedYield>
				--cRxLock;
900117ce:	1e6b      	subs	r3, r5, #1
900117d0:	b2da      	uxtb	r2, r3
900117d2:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
900117d4:	2a00      	cmp	r2, #0
900117d6:	d1f1      	bne.n	900117bc <xQueueGenericSend+0x1c8>
		pxQueue->cRxLock = queueUNLOCKED;
900117d8:	23ff      	movs	r3, #255	; 0xff
900117da:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
900117de:	f7ff fc33 	bl	90011048 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
900117e2:	f001 fac7 	bl	90012d74 <xTaskResumeAll>
900117e6:	2800      	cmp	r0, #0
900117e8:	d1a6      	bne.n	90011738 <xQueueGenericSend+0x144>
					portYIELD_WITHIN_API();
900117ea:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
900117ee:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
900117f2:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
900117f6:	f3bf 8f4f 	dsb	sy
900117fa:	f3bf 8f6f 	isb	sy
900117fe:	e79b      	b.n	90011738 <xQueueGenericSend+0x144>
					vTaskInternalSetTimeOutState( &xTimeOut );
90011800:	a802      	add	r0, sp, #8
90011802:	f001 fc93 	bl	9001312c <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
90011806:	e730      	b.n	9001166a <xQueueGenericSend+0x76>
90011808:	f04f 0350 	mov.w	r3, #80	; 0x50
9001180c:	f383 8811 	msr	BASEPRI, r3
90011810:	f3bf 8f6f 	isb	sy
90011814:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
90011818:	e7fe      	b.n	90011818 <xQueueGenericSend+0x224>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9001181a:	9b01      	ldr	r3, [sp, #4]
9001181c:	2b00      	cmp	r3, #0
9001181e:	f43f af09 	beq.w	90011634 <xQueueGenericSend+0x40>
90011822:	f04f 0350 	mov.w	r3, #80	; 0x50
90011826:	f383 8811 	msr	BASEPRI, r3
9001182a:	f3bf 8f6f 	isb	sy
9001182e:	f3bf 8f4f 	dsb	sy
90011832:	e7fe      	b.n	90011832 <xQueueGenericSend+0x23e>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
90011834:	463a      	mov	r2, r7
90011836:	4641      	mov	r1, r8
90011838:	4620      	mov	r0, r4
9001183a:	f7ff fd43 	bl	900112c4 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9001183e:	6a63      	ldr	r3, [r4, #36]	; 0x24
90011840:	2b00      	cmp	r3, #0
90011842:	d152      	bne.n	900118ea <xQueueGenericSend+0x2f6>
					else if( xYieldRequired != pdFALSE )
90011844:	b148      	cbz	r0, 9001185a <xQueueGenericSend+0x266>
						queueYIELD_IF_USING_PREEMPTION();
90011846:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9001184a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9001184e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
90011852:	f3bf 8f4f 	dsb	sy
90011856:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
9001185a:	f7ff fbf5 	bl	90011048 <vPortExitCritical>
				return pdPASS;
9001185e:	2001      	movs	r0, #1
}
90011860:	b004      	add	sp, #16
90011862:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
					taskEXIT_CRITICAL();
90011866:	f7ff fbef 	bl	90011048 <vPortExitCritical>
					return errQUEUE_FULL;
9001186a:	4648      	mov	r0, r9
9001186c:	e7f8      	b.n	90011860 <xQueueGenericSend+0x26c>
	taskENTER_CRITICAL();
9001186e:	f7ff fbc9 	bl	90011004 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
90011872:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
90011876:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90011878:	2d00      	cmp	r5, #0
9001187a:	dd10      	ble.n	9001189e <xQueueGenericSend+0x2aa>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9001187c:	f104 0624 	add.w	r6, r4, #36	; 0x24
90011880:	e003      	b.n	9001188a <xQueueGenericSend+0x296>
			--cTxLock;
90011882:	1e6b      	subs	r3, r5, #1
90011884:	b2da      	uxtb	r2, r3
90011886:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90011888:	b14a      	cbz	r2, 9001189e <xQueueGenericSend+0x2aa>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9001188a:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9001188c:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9001188e:	b133      	cbz	r3, 9001189e <xQueueGenericSend+0x2aa>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90011890:	f001 fc02 	bl	90013098 <xTaskRemoveFromEventList>
90011894:	2800      	cmp	r0, #0
90011896:	d0f4      	beq.n	90011882 <xQueueGenericSend+0x28e>
						vTaskMissedYield();
90011898:	f001 fc9c 	bl	900131d4 <vTaskMissedYield>
9001189c:	e7f1      	b.n	90011882 <xQueueGenericSend+0x28e>
		pxQueue->cTxLock = queueUNLOCKED;
9001189e:	23ff      	movs	r3, #255	; 0xff
900118a0:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
900118a4:	f7ff fbd0 	bl	90011048 <vPortExitCritical>
	taskENTER_CRITICAL();
900118a8:	f7ff fbac 	bl	90011004 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
900118ac:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
900118b0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
900118b2:	2d00      	cmp	r5, #0
900118b4:	dd10      	ble.n	900118d8 <xQueueGenericSend+0x2e4>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
900118b6:	f104 0610 	add.w	r6, r4, #16
900118ba:	e003      	b.n	900118c4 <xQueueGenericSend+0x2d0>
				--cRxLock;
900118bc:	1e6b      	subs	r3, r5, #1
900118be:	b2da      	uxtb	r2, r3
900118c0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
900118c2:	b14a      	cbz	r2, 900118d8 <xQueueGenericSend+0x2e4>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
900118c4:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
900118c6:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
900118c8:	b133      	cbz	r3, 900118d8 <xQueueGenericSend+0x2e4>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
900118ca:	f001 fbe5 	bl	90013098 <xTaskRemoveFromEventList>
900118ce:	2800      	cmp	r0, #0
900118d0:	d0f4      	beq.n	900118bc <xQueueGenericSend+0x2c8>
					vTaskMissedYield();
900118d2:	f001 fc7f 	bl	900131d4 <vTaskMissedYield>
900118d6:	e7f1      	b.n	900118bc <xQueueGenericSend+0x2c8>
		pxQueue->cRxLock = queueUNLOCKED;
900118d8:	23ff      	movs	r3, #255	; 0xff
900118da:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
900118de:	f7ff fbb3 	bl	90011048 <vPortExitCritical>
			( void ) xTaskResumeAll();
900118e2:	f001 fa47 	bl	90012d74 <xTaskResumeAll>
			return errQUEUE_FULL;
900118e6:	2000      	movs	r0, #0
900118e8:	e7ba      	b.n	90011860 <xQueueGenericSend+0x26c>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
900118ea:	f104 0024 	add.w	r0, r4, #36	; 0x24
900118ee:	f001 fbd3 	bl	90013098 <xTaskRemoveFromEventList>
900118f2:	2800      	cmp	r0, #0
900118f4:	d0b1      	beq.n	9001185a <xQueueGenericSend+0x266>
900118f6:	e7a6      	b.n	90011846 <xQueueGenericSend+0x252>

900118f8 <xQueueCreateMutexStatic>:
		configASSERT( pxStaticQueue != NULL );
900118f8:	b179      	cbz	r1, 9001191a <xQueueCreateMutexStatic+0x22>
			volatile size_t xSize = sizeof( StaticQueue_t );
900118fa:	2350      	movs	r3, #80	; 0x50
	{
900118fc:	b570      	push	{r4, r5, r6, lr}
900118fe:	b082      	sub	sp, #8
			volatile size_t xSize = sizeof( StaticQueue_t );
90011900:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
90011902:	9b01      	ldr	r3, [sp, #4]
90011904:	2b50      	cmp	r3, #80	; 0x50
90011906:	d011      	beq.n	9001192c <xQueueCreateMutexStatic+0x34>
90011908:	f04f 0350 	mov.w	r3, #80	; 0x50
9001190c:	f383 8811 	msr	BASEPRI, r3
90011910:	f3bf 8f6f 	isb	sy
90011914:	f3bf 8f4f 	dsb	sy
90011918:	e7fe      	b.n	90011918 <xQueueCreateMutexStatic+0x20>
9001191a:	f04f 0350 	mov.w	r3, #80	; 0x50
9001191e:	f383 8811 	msr	BASEPRI, r3
90011922:	f3bf 8f6f 	isb	sy
90011926:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
9001192a:	e7fe      	b.n	9001192a <xQueueCreateMutexStatic+0x32>
	pxNewQueue->uxItemSize = uxItemSize;
9001192c:	2600      	movs	r6, #0
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9001192e:	2301      	movs	r3, #1
90011930:	460c      	mov	r4, r1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
90011932:	6009      	str	r1, [r1, #0]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
90011934:	f881 3046 	strb.w	r3, [r1, #70]	; 0x46
90011938:	4605      	mov	r5, r0
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
9001193a:	9a01      	ldr	r2, [sp, #4]
	pxNewQueue->uxItemSize = uxItemSize;
9001193c:	e9c1 360f 	strd	r3, r6, [r1, #60]	; 0x3c
	taskENTER_CRITICAL();
90011940:	f7ff fb60 	bl	90011004 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90011944:	6821      	ldr	r1, [r4, #0]
		pxQueue->cRxLock = queueUNLOCKED;
90011946:	23ff      	movs	r3, #255	; 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
90011948:	63a6      	str	r6, [r4, #56]	; 0x38
		pxQueue->pcWriteTo = pxQueue->pcHead;
9001194a:	6061      	str	r1, [r4, #4]
		pxQueue->cRxLock = queueUNLOCKED;
9001194c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
90011950:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90011954:	e9d4 200f 	ldrd	r2, r0, [r4, #60]	; 0x3c
90011958:	fb00 f202 	mul.w	r2, r0, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9001195c:	1a10      	subs	r0, r2, r0
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9001195e:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90011960:	4401      	add	r1, r0
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
90011962:	f104 0010 	add.w	r0, r4, #16
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90011966:	e9c4 2102 	strd	r2, r1, [r4, #8]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9001196a:	f7ff fa97 	bl	90010e9c <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9001196e:	f104 0024 	add.w	r0, r4, #36	; 0x24
90011972:	f7ff fa93 	bl	90010e9c <vListInitialise>
	taskEXIT_CRITICAL();
90011976:	f7ff fb67 	bl	90011048 <vPortExitCritical>
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
9001197a:	4633      	mov	r3, r6
9001197c:	4632      	mov	r2, r6
9001197e:	4631      	mov	r1, r6
90011980:	4620      	mov	r0, r4
		pxNewQueue->ucQueueType = ucQueueType;
90011982:	f884 504c 	strb.w	r5, [r4, #76]	; 0x4c
			pxNewQueue->u.xSemaphore.xMutexHolder = NULL;
90011986:	60a6      	str	r6, [r4, #8]
			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
90011988:	6026      	str	r6, [r4, #0]
			pxNewQueue->u.xSemaphore.uxRecursiveCallCount = 0;
9001198a:	60e6      	str	r6, [r4, #12]
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
9001198c:	f7ff fe32 	bl	900115f4 <xQueueGenericSend>
	}
90011990:	4620      	mov	r0, r4
90011992:	b002      	add	sp, #8
90011994:	bd70      	pop	{r4, r5, r6, pc}
90011996:	bf00      	nop

90011998 <xQueueGiveMutexRecursive>:
	{
90011998:	b538      	push	{r3, r4, r5, lr}
		configASSERT( pxMutex );
9001199a:	b138      	cbz	r0, 900119ac <xQueueGiveMutexRecursive+0x14>
		if( pxMutex->u.xSemaphore.xMutexHolder == xTaskGetCurrentTaskHandle() )
9001199c:	6885      	ldr	r5, [r0, #8]
9001199e:	4604      	mov	r4, r0
900119a0:	f001 fc1e 	bl	900131e0 <xTaskGetCurrentTaskHandle>
900119a4:	4285      	cmp	r5, r0
900119a6:	d00a      	beq.n	900119be <xQueueGiveMutexRecursive+0x26>
			xReturn = pdFAIL;
900119a8:	2000      	movs	r0, #0
	}
900119aa:	bd38      	pop	{r3, r4, r5, pc}
900119ac:	f04f 0350 	mov.w	r3, #80	; 0x50
900119b0:	f383 8811 	msr	BASEPRI, r3
900119b4:	f3bf 8f6f 	isb	sy
900119b8:	f3bf 8f4f 	dsb	sy
		configASSERT( pxMutex );
900119bc:	e7fe      	b.n	900119bc <xQueueGiveMutexRecursive+0x24>
			( pxMutex->u.xSemaphore.uxRecursiveCallCount )--;
900119be:	68e3      	ldr	r3, [r4, #12]
900119c0:	3b01      	subs	r3, #1
900119c2:	60e3      	str	r3, [r4, #12]
			if( pxMutex->u.xSemaphore.uxRecursiveCallCount == ( UBaseType_t ) 0 )
900119c4:	b10b      	cbz	r3, 900119ca <xQueueGiveMutexRecursive+0x32>
			xReturn = pdPASS;
900119c6:	2001      	movs	r0, #1
	}
900119c8:	bd38      	pop	{r3, r4, r5, pc}
				( void ) xQueueGenericSend( pxMutex, NULL, queueMUTEX_GIVE_BLOCK_TIME, queueSEND_TO_BACK );
900119ca:	461a      	mov	r2, r3
900119cc:	4619      	mov	r1, r3
900119ce:	4620      	mov	r0, r4
900119d0:	f7ff fe10 	bl	900115f4 <xQueueGenericSend>
			xReturn = pdPASS;
900119d4:	2001      	movs	r0, #1
	}
900119d6:	bd38      	pop	{r3, r4, r5, pc}

900119d8 <xQueueCreateMutex>:
	{
900119d8:	b570      	push	{r4, r5, r6, lr}
900119da:	4605      	mov	r5, r0
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
900119dc:	2050      	movs	r0, #80	; 0x50
900119de:	f7ff f93b 	bl	90010c58 <pvPortMalloc>
		if( pxNewQueue != NULL )
900119e2:	4604      	mov	r4, r0
900119e4:	b370      	cbz	r0, 90011a44 <xQueueCreateMutex+0x6c>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
900119e6:	2600      	movs	r6, #0
	pxNewQueue->uxLength = uxQueueLength;
900119e8:	2301      	movs	r3, #1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
900119ea:	6020      	str	r0, [r4, #0]
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
900119ec:	f880 6046 	strb.w	r6, [r0, #70]	; 0x46
	pxNewQueue->uxItemSize = uxItemSize;
900119f0:	e9c0 360f 	strd	r3, r6, [r0, #60]	; 0x3c
	taskENTER_CRITICAL();
900119f4:	f7ff fb06 	bl	90011004 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
900119f8:	6821      	ldr	r1, [r4, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
900119fa:	63a6      	str	r6, [r4, #56]	; 0x38
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
900119fc:	f104 0010 	add.w	r0, r4, #16
		pxQueue->pcWriteTo = pxQueue->pcHead;
90011a00:	6061      	str	r1, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90011a02:	e9d4 230f 	ldrd	r2, r3, [r4, #60]	; 0x3c
90011a06:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90011a0a:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90011a0c:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90011a0e:	4419      	add	r1, r3
		pxQueue->cRxLock = queueUNLOCKED;
90011a10:	23ff      	movs	r3, #255	; 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90011a12:	e9c4 2102 	strd	r2, r1, [r4, #8]
		pxQueue->cRxLock = queueUNLOCKED;
90011a16:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
90011a1a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
90011a1e:	f7ff fa3d 	bl	90010e9c <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
90011a22:	f104 0024 	add.w	r0, r4, #36	; 0x24
90011a26:	f7ff fa39 	bl	90010e9c <vListInitialise>
	taskEXIT_CRITICAL();
90011a2a:	f7ff fb0d 	bl	90011048 <vPortExitCritical>
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
90011a2e:	4633      	mov	r3, r6
90011a30:	4632      	mov	r2, r6
90011a32:	4631      	mov	r1, r6
90011a34:	4620      	mov	r0, r4
		pxNewQueue->ucQueueType = ucQueueType;
90011a36:	f884 504c 	strb.w	r5, [r4, #76]	; 0x4c
			pxNewQueue->u.xSemaphore.xMutexHolder = NULL;
90011a3a:	60a6      	str	r6, [r4, #8]
			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
90011a3c:	6026      	str	r6, [r4, #0]
			pxNewQueue->u.xSemaphore.uxRecursiveCallCount = 0;
90011a3e:	60e6      	str	r6, [r4, #12]
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
90011a40:	f7ff fdd8 	bl	900115f4 <xQueueGenericSend>
	}
90011a44:	4620      	mov	r0, r4
90011a46:	bd70      	pop	{r4, r5, r6, pc}

90011a48 <xQueueGenericSendFromISR>:
	configASSERT( pxQueue );
90011a48:	2800      	cmp	r0, #0
90011a4a:	d04e      	beq.n	90011aea <xQueueGenericSendFromISR+0xa2>
{
90011a4c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90011a50:	460e      	mov	r6, r1
90011a52:	4604      	mov	r4, r0
90011a54:	4617      	mov	r7, r2
90011a56:	461d      	mov	r5, r3
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
90011a58:	b339      	cbz	r1, 90011aaa <xQueueGenericSendFromISR+0x62>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
90011a5a:	2d02      	cmp	r5, #2
90011a5c:	d10b      	bne.n	90011a76 <xQueueGenericSendFromISR+0x2e>
90011a5e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
90011a60:	2b01      	cmp	r3, #1
90011a62:	d008      	beq.n	90011a76 <xQueueGenericSendFromISR+0x2e>
90011a64:	f04f 0350 	mov.w	r3, #80	; 0x50
90011a68:	f383 8811 	msr	BASEPRI, r3
90011a6c:	f3bf 8f6f 	isb	sy
90011a70:	f3bf 8f4f 	dsb	sy
90011a74:	e7fe      	b.n	90011a74 <xQueueGenericSendFromISR+0x2c>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
90011a76:	f7ff fbf7 	bl	90011268 <vPortValidateInterruptPriority>
	__asm volatile
90011a7a:	f3ef 8811 	mrs	r8, BASEPRI
90011a7e:	f04f 0350 	mov.w	r3, #80	; 0x50
90011a82:	f383 8811 	msr	BASEPRI, r3
90011a86:	f3bf 8f6f 	isb	sy
90011a8a:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
90011a8e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
90011a90:	6be3      	ldr	r3, [r4, #60]	; 0x3c
90011a92:	429a      	cmp	r2, r3
90011a94:	d315      	bcc.n	90011ac2 <xQueueGenericSendFromISR+0x7a>
90011a96:	f1a5 0002 	sub.w	r0, r5, #2
90011a9a:	fab0 f080 	clz	r0, r0
90011a9e:	0940      	lsrs	r0, r0, #5
90011aa0:	b978      	cbnz	r0, 90011ac2 <xQueueGenericSendFromISR+0x7a>
	__asm volatile
90011aa2:	f388 8811 	msr	BASEPRI, r8
}
90011aa6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
90011aaa:	6c03      	ldr	r3, [r0, #64]	; 0x40
90011aac:	2b00      	cmp	r3, #0
90011aae:	d0d4      	beq.n	90011a5a <xQueueGenericSendFromISR+0x12>
	__asm volatile
90011ab0:	f04f 0350 	mov.w	r3, #80	; 0x50
90011ab4:	f383 8811 	msr	BASEPRI, r3
90011ab8:	f3bf 8f6f 	isb	sy
90011abc:	f3bf 8f4f 	dsb	sy
90011ac0:	e7fe      	b.n	90011ac0 <xQueueGenericSendFromISR+0x78>
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
90011ac2:	462a      	mov	r2, r5
			const int8_t cTxLock = pxQueue->cTxLock;
90011ac4:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
90011ac8:	4631      	mov	r1, r6
90011aca:	4620      	mov	r0, r4
			const int8_t cTxLock = pxQueue->cTxLock;
90011acc:	b26d      	sxtb	r5, r5
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
90011ace:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
90011ad0:	f7ff fbf8 	bl	900112c4 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
90011ad4:	1c6b      	adds	r3, r5, #1
90011ad6:	d011      	beq.n	90011afc <xQueueGenericSendFromISR+0xb4>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
90011ad8:	1c6b      	adds	r3, r5, #1
			xReturn = pdPASS;
90011ada:	2001      	movs	r0, #1
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
90011adc:	b25b      	sxtb	r3, r3
90011ade:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	__asm volatile
90011ae2:	f388 8811 	msr	BASEPRI, r8
}
90011ae6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	__asm volatile
90011aea:	f04f 0350 	mov.w	r3, #80	; 0x50
90011aee:	f383 8811 	msr	BASEPRI, r3
90011af2:	f3bf 8f6f 	isb	sy
90011af6:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
90011afa:	e7fe      	b.n	90011afa <xQueueGenericSendFromISR+0xb2>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90011afc:	6a63      	ldr	r3, [r4, #36]	; 0x24
90011afe:	b90b      	cbnz	r3, 90011b04 <xQueueGenericSendFromISR+0xbc>
			xReturn = pdPASS;
90011b00:	2001      	movs	r0, #1
90011b02:	e7ce      	b.n	90011aa2 <xQueueGenericSendFromISR+0x5a>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90011b04:	f104 0024 	add.w	r0, r4, #36	; 0x24
90011b08:	f001 fac6 	bl	90013098 <xTaskRemoveFromEventList>
							if( pxHigherPriorityTaskWoken != NULL )
90011b0c:	2800      	cmp	r0, #0
90011b0e:	d0f7      	beq.n	90011b00 <xQueueGenericSendFromISR+0xb8>
90011b10:	2f00      	cmp	r7, #0
90011b12:	d0f5      	beq.n	90011b00 <xQueueGenericSendFromISR+0xb8>
								*pxHigherPriorityTaskWoken = pdTRUE;
90011b14:	2301      	movs	r3, #1
			xReturn = pdPASS;
90011b16:	4618      	mov	r0, r3
								*pxHigherPriorityTaskWoken = pdTRUE;
90011b18:	603b      	str	r3, [r7, #0]
90011b1a:	e7c2      	b.n	90011aa2 <xQueueGenericSendFromISR+0x5a>

90011b1c <xQueueGiveFromISR>:
	configASSERT( pxQueue );
90011b1c:	b360      	cbz	r0, 90011b78 <xQueueGiveFromISR+0x5c>
	configASSERT( pxQueue->uxItemSize == 0 );
90011b1e:	6c03      	ldr	r3, [r0, #64]	; 0x40
{
90011b20:	b570      	push	{r4, r5, r6, lr}
90011b22:	4604      	mov	r4, r0
	configASSERT( pxQueue->uxItemSize == 0 );
90011b24:	b143      	cbz	r3, 90011b38 <xQueueGiveFromISR+0x1c>
90011b26:	f04f 0350 	mov.w	r3, #80	; 0x50
90011b2a:	f383 8811 	msr	BASEPRI, r3
90011b2e:	f3bf 8f6f 	isb	sy
90011b32:	f3bf 8f4f 	dsb	sy
90011b36:	e7fe      	b.n	90011b36 <xQueueGiveFromISR+0x1a>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
90011b38:	6803      	ldr	r3, [r0, #0]
90011b3a:	460d      	mov	r5, r1
90011b3c:	b32b      	cbz	r3, 90011b8a <xQueueGiveFromISR+0x6e>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
90011b3e:	f7ff fb93 	bl	90011268 <vPortValidateInterruptPriority>
	__asm volatile
90011b42:	f3ef 8611 	mrs	r6, BASEPRI
90011b46:	f04f 0350 	mov.w	r3, #80	; 0x50
90011b4a:	f383 8811 	msr	BASEPRI, r3
90011b4e:	f3bf 8f6f 	isb	sy
90011b52:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
90011b56:	6ba3      	ldr	r3, [r4, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
90011b58:	6be2      	ldr	r2, [r4, #60]	; 0x3c
90011b5a:	429a      	cmp	r2, r3
90011b5c:	d921      	bls.n	90011ba2 <xQueueGiveFromISR+0x86>
			const int8_t cTxLock = pxQueue->cTxLock;
90011b5e:	f894 2045 	ldrb.w	r2, [r4, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
90011b62:	3301      	adds	r3, #1
			if( cTxLock == queueUNLOCKED )
90011b64:	2aff      	cmp	r2, #255	; 0xff
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
90011b66:	63a3      	str	r3, [r4, #56]	; 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
90011b68:	b253      	sxtb	r3, r2
			if( cTxLock == queueUNLOCKED )
90011b6a:	d01e      	beq.n	90011baa <xQueueGiveFromISR+0x8e>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
90011b6c:	3301      	adds	r3, #1
			xReturn = pdPASS;
90011b6e:	2001      	movs	r0, #1
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
90011b70:	b25b      	sxtb	r3, r3
90011b72:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
90011b76:	e015      	b.n	90011ba4 <xQueueGiveFromISR+0x88>
	__asm volatile
90011b78:	f04f 0350 	mov.w	r3, #80	; 0x50
90011b7c:	f383 8811 	msr	BASEPRI, r3
90011b80:	f3bf 8f6f 	isb	sy
90011b84:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
90011b88:	e7fe      	b.n	90011b88 <xQueueGiveFromISR+0x6c>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
90011b8a:	6883      	ldr	r3, [r0, #8]
90011b8c:	2b00      	cmp	r3, #0
90011b8e:	d0d6      	beq.n	90011b3e <xQueueGiveFromISR+0x22>
90011b90:	f04f 0350 	mov.w	r3, #80	; 0x50
90011b94:	f383 8811 	msr	BASEPRI, r3
90011b98:	f3bf 8f6f 	isb	sy
90011b9c:	f3bf 8f4f 	dsb	sy
90011ba0:	e7fe      	b.n	90011ba0 <xQueueGiveFromISR+0x84>
			xReturn = errQUEUE_FULL;
90011ba2:	2000      	movs	r0, #0
	__asm volatile
90011ba4:	f386 8811 	msr	BASEPRI, r6
}
90011ba8:	bd70      	pop	{r4, r5, r6, pc}
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90011baa:	6a63      	ldr	r3, [r4, #36]	; 0x24
90011bac:	b90b      	cbnz	r3, 90011bb2 <xQueueGiveFromISR+0x96>
			xReturn = pdPASS;
90011bae:	2001      	movs	r0, #1
90011bb0:	e7f8      	b.n	90011ba4 <xQueueGiveFromISR+0x88>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90011bb2:	f104 0024 	add.w	r0, r4, #36	; 0x24
90011bb6:	f001 fa6f 	bl	90013098 <xTaskRemoveFromEventList>
							if( pxHigherPriorityTaskWoken != NULL )
90011bba:	2d00      	cmp	r5, #0
90011bbc:	d0f7      	beq.n	90011bae <xQueueGiveFromISR+0x92>
90011bbe:	2800      	cmp	r0, #0
90011bc0:	d0f5      	beq.n	90011bae <xQueueGiveFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
90011bc2:	2301      	movs	r3, #1
			xReturn = pdPASS;
90011bc4:	4618      	mov	r0, r3
								*pxHigherPriorityTaskWoken = pdTRUE;
90011bc6:	602b      	str	r3, [r5, #0]
90011bc8:	e7ec      	b.n	90011ba4 <xQueueGiveFromISR+0x88>
90011bca:	bf00      	nop

90011bcc <xQueueReceive>:
{
90011bcc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90011bd0:	b085      	sub	sp, #20
90011bd2:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
90011bd4:	2800      	cmp	r0, #0
90011bd6:	f000 815c 	beq.w	90011e92 <xQueueReceive+0x2c6>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
90011bda:	460f      	mov	r7, r1
90011bdc:	4604      	mov	r4, r0
90011bde:	2900      	cmp	r1, #0
90011be0:	d079      	beq.n	90011cd6 <xQueueReceive+0x10a>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
90011be2:	f001 fb03 	bl	900131ec <xTaskGetSchedulerState>
90011be6:	2800      	cmp	r0, #0
90011be8:	f000 8081 	beq.w	90011cee <xQueueReceive+0x122>
		taskENTER_CRITICAL();
90011bec:	f7ff fa0a 	bl	90011004 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
90011bf0:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
90011bf2:	2d00      	cmp	r5, #0
90011bf4:	f040 8138 	bne.w	90011e68 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
90011bf8:	9b01      	ldr	r3, [sp, #4]
90011bfa:	2b00      	cmp	r3, #0
90011bfc:	f000 80d5 	beq.w	90011daa <xQueueReceive+0x1de>
		prvLockQueue( pxQueue );
90011c00:	46a8      	mov	r8, r5
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90011c02:	f104 0624 	add.w	r6, r4, #36	; 0x24
					vTaskInternalSetTimeOutState( &xTimeOut );
90011c06:	a802      	add	r0, sp, #8
90011c08:	f001 fa90 	bl	9001312c <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
90011c0c:	f7ff fa1c 	bl	90011048 <vPortExitCritical>
		vTaskSuspendAll();
90011c10:	f001 f8a8 	bl	90012d64 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
90011c14:	f7ff f9f6 	bl	90011004 <vPortEnterCritical>
90011c18:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
90011c1c:	2bff      	cmp	r3, #255	; 0xff
90011c1e:	d101      	bne.n	90011c24 <xQueueReceive+0x58>
90011c20:	f884 8044 	strb.w	r8, [r4, #68]	; 0x44
90011c24:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
90011c28:	2bff      	cmp	r3, #255	; 0xff
90011c2a:	d101      	bne.n	90011c30 <xQueueReceive+0x64>
90011c2c:	f884 8045 	strb.w	r8, [r4, #69]	; 0x45
90011c30:	f7ff fa0a 	bl	90011048 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
90011c34:	a901      	add	r1, sp, #4
90011c36:	a802      	add	r0, sp, #8
90011c38:	f001 fa84 	bl	90013144 <xTaskCheckForTimeOut>
90011c3c:	2800      	cmp	r0, #0
90011c3e:	d163      	bne.n	90011d08 <xQueueReceive+0x13c>
	taskENTER_CRITICAL();
90011c40:	f7ff f9e0 	bl	90011004 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
90011c44:	6ba3      	ldr	r3, [r4, #56]	; 0x38
90011c46:	2b00      	cmp	r3, #0
90011c48:	f000 80b5 	beq.w	90011db6 <xQueueReceive+0x1ea>
	taskEXIT_CRITICAL();
90011c4c:	f7ff f9fc 	bl	90011048 <vPortExitCritical>
	taskENTER_CRITICAL();
90011c50:	f7ff f9d8 	bl	90011004 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
90011c54:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
90011c58:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90011c5a:	2d00      	cmp	r5, #0
90011c5c:	dc04      	bgt.n	90011c68 <xQueueReceive+0x9c>
90011c5e:	e011      	b.n	90011c84 <xQueueReceive+0xb8>
			--cTxLock;
90011c60:	1e6b      	subs	r3, r5, #1
90011c62:	b2da      	uxtb	r2, r3
90011c64:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90011c66:	b16a      	cbz	r2, 90011c84 <xQueueReceive+0xb8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90011c68:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90011c6a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90011c6c:	b153      	cbz	r3, 90011c84 <xQueueReceive+0xb8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90011c6e:	f001 fa13 	bl	90013098 <xTaskRemoveFromEventList>
90011c72:	2800      	cmp	r0, #0
90011c74:	d0f4      	beq.n	90011c60 <xQueueReceive+0x94>
						vTaskMissedYield();
90011c76:	f001 faad 	bl	900131d4 <vTaskMissedYield>
			--cTxLock;
90011c7a:	1e6b      	subs	r3, r5, #1
90011c7c:	b2da      	uxtb	r2, r3
90011c7e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90011c80:	2a00      	cmp	r2, #0
90011c82:	d1f1      	bne.n	90011c68 <xQueueReceive+0x9c>
		pxQueue->cTxLock = queueUNLOCKED;
90011c84:	23ff      	movs	r3, #255	; 0xff
90011c86:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
90011c8a:	f7ff f9dd 	bl	90011048 <vPortExitCritical>
	taskENTER_CRITICAL();
90011c8e:	f7ff f9b9 	bl	90011004 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
90011c92:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
90011c96:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90011c98:	2d00      	cmp	r5, #0
90011c9a:	dd14      	ble.n	90011cc6 <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90011c9c:	f104 0910 	add.w	r9, r4, #16
90011ca0:	e003      	b.n	90011caa <xQueueReceive+0xde>
				--cRxLock;
90011ca2:	1e6b      	subs	r3, r5, #1
90011ca4:	b2da      	uxtb	r2, r3
90011ca6:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90011ca8:	b16a      	cbz	r2, 90011cc6 <xQueueReceive+0xfa>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90011caa:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90011cac:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90011cae:	b153      	cbz	r3, 90011cc6 <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90011cb0:	f001 f9f2 	bl	90013098 <xTaskRemoveFromEventList>
90011cb4:	2800      	cmp	r0, #0
90011cb6:	d0f4      	beq.n	90011ca2 <xQueueReceive+0xd6>
					vTaskMissedYield();
90011cb8:	f001 fa8c 	bl	900131d4 <vTaskMissedYield>
				--cRxLock;
90011cbc:	1e6b      	subs	r3, r5, #1
90011cbe:	b2da      	uxtb	r2, r3
90011cc0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90011cc2:	2a00      	cmp	r2, #0
90011cc4:	d1f1      	bne.n	90011caa <xQueueReceive+0xde>
		pxQueue->cRxLock = queueUNLOCKED;
90011cc6:	23ff      	movs	r3, #255	; 0xff
90011cc8:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
90011ccc:	f7ff f9bc 	bl	90011048 <vPortExitCritical>
				( void ) xTaskResumeAll();
90011cd0:	f001 f850 	bl	90012d74 <xTaskResumeAll>
		taskENTER_CRITICAL();
90011cd4:	e060      	b.n	90011d98 <xQueueReceive+0x1cc>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
90011cd6:	6c03      	ldr	r3, [r0, #64]	; 0x40
90011cd8:	2b00      	cmp	r3, #0
90011cda:	d082      	beq.n	90011be2 <xQueueReceive+0x16>
	__asm volatile
90011cdc:	f04f 0350 	mov.w	r3, #80	; 0x50
90011ce0:	f383 8811 	msr	BASEPRI, r3
90011ce4:	f3bf 8f6f 	isb	sy
90011ce8:	f3bf 8f4f 	dsb	sy
90011cec:	e7fe      	b.n	90011cec <xQueueReceive+0x120>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
90011cee:	9b01      	ldr	r3, [sp, #4]
90011cf0:	2b00      	cmp	r3, #0
90011cf2:	f43f af7b 	beq.w	90011bec <xQueueReceive+0x20>
90011cf6:	f04f 0350 	mov.w	r3, #80	; 0x50
90011cfa:	f383 8811 	msr	BASEPRI, r3
90011cfe:	f3bf 8f6f 	isb	sy
90011d02:	f3bf 8f4f 	dsb	sy
90011d06:	e7fe      	b.n	90011d06 <xQueueReceive+0x13a>
	taskENTER_CRITICAL();
90011d08:	f7ff f97c 	bl	90011004 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
90011d0c:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
90011d10:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90011d12:	2d00      	cmp	r5, #0
90011d14:	dc04      	bgt.n	90011d20 <xQueueReceive+0x154>
90011d16:	e011      	b.n	90011d3c <xQueueReceive+0x170>
			--cTxLock;
90011d18:	1e6b      	subs	r3, r5, #1
90011d1a:	b2da      	uxtb	r2, r3
90011d1c:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90011d1e:	b16a      	cbz	r2, 90011d3c <xQueueReceive+0x170>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90011d20:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90011d22:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90011d24:	b153      	cbz	r3, 90011d3c <xQueueReceive+0x170>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90011d26:	f001 f9b7 	bl	90013098 <xTaskRemoveFromEventList>
90011d2a:	2800      	cmp	r0, #0
90011d2c:	d0f4      	beq.n	90011d18 <xQueueReceive+0x14c>
						vTaskMissedYield();
90011d2e:	f001 fa51 	bl	900131d4 <vTaskMissedYield>
			--cTxLock;
90011d32:	1e6b      	subs	r3, r5, #1
90011d34:	b2da      	uxtb	r2, r3
90011d36:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90011d38:	2a00      	cmp	r2, #0
90011d3a:	d1f1      	bne.n	90011d20 <xQueueReceive+0x154>
		pxQueue->cTxLock = queueUNLOCKED;
90011d3c:	23ff      	movs	r3, #255	; 0xff
90011d3e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
90011d42:	f7ff f981 	bl	90011048 <vPortExitCritical>
	taskENTER_CRITICAL();
90011d46:	f7ff f95d 	bl	90011004 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
90011d4a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
90011d4e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90011d50:	2d00      	cmp	r5, #0
90011d52:	dd14      	ble.n	90011d7e <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90011d54:	f104 0910 	add.w	r9, r4, #16
90011d58:	e003      	b.n	90011d62 <xQueueReceive+0x196>
				--cRxLock;
90011d5a:	1e6b      	subs	r3, r5, #1
90011d5c:	b2da      	uxtb	r2, r3
90011d5e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90011d60:	b16a      	cbz	r2, 90011d7e <xQueueReceive+0x1b2>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90011d62:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90011d64:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90011d66:	b153      	cbz	r3, 90011d7e <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90011d68:	f001 f996 	bl	90013098 <xTaskRemoveFromEventList>
90011d6c:	2800      	cmp	r0, #0
90011d6e:	d0f4      	beq.n	90011d5a <xQueueReceive+0x18e>
					vTaskMissedYield();
90011d70:	f001 fa30 	bl	900131d4 <vTaskMissedYield>
				--cRxLock;
90011d74:	1e6b      	subs	r3, r5, #1
90011d76:	b2da      	uxtb	r2, r3
90011d78:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90011d7a:	2a00      	cmp	r2, #0
90011d7c:	d1f1      	bne.n	90011d62 <xQueueReceive+0x196>
		pxQueue->cRxLock = queueUNLOCKED;
90011d7e:	23ff      	movs	r3, #255	; 0xff
90011d80:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
90011d84:	f7ff f960 	bl	90011048 <vPortExitCritical>
			( void ) xTaskResumeAll();
90011d88:	f000 fff4 	bl	90012d74 <xTaskResumeAll>
	taskENTER_CRITICAL();
90011d8c:	f7ff f93a 	bl	90011004 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
90011d90:	6ba3      	ldr	r3, [r4, #56]	; 0x38
90011d92:	b153      	cbz	r3, 90011daa <xQueueReceive+0x1de>
	taskEXIT_CRITICAL();
90011d94:	f7ff f958 	bl	90011048 <vPortExitCritical>
		taskENTER_CRITICAL();
90011d98:	f7ff f934 	bl	90011004 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
90011d9c:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
90011d9e:	2d00      	cmp	r5, #0
90011da0:	d162      	bne.n	90011e68 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
90011da2:	9b01      	ldr	r3, [sp, #4]
90011da4:	2b00      	cmp	r3, #0
90011da6:	f47f af31 	bne.w	90011c0c <xQueueReceive+0x40>
					taskEXIT_CRITICAL();
90011daa:	f7ff f94d 	bl	90011048 <vPortExitCritical>
					return errQUEUE_EMPTY;
90011dae:	2000      	movs	r0, #0
}
90011db0:	b005      	add	sp, #20
90011db2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
90011db6:	f7ff f947 	bl	90011048 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
90011dba:	9901      	ldr	r1, [sp, #4]
90011dbc:	4630      	mov	r0, r6
90011dbe:	f001 f8dd 	bl	90012f7c <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
90011dc2:	f7ff f91f 	bl	90011004 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
90011dc6:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
90011dca:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90011dcc:	2d00      	cmp	r5, #0
90011dce:	dc04      	bgt.n	90011dda <xQueueReceive+0x20e>
90011dd0:	e011      	b.n	90011df6 <xQueueReceive+0x22a>
			--cTxLock;
90011dd2:	1e6b      	subs	r3, r5, #1
90011dd4:	b2da      	uxtb	r2, r3
90011dd6:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90011dd8:	b16a      	cbz	r2, 90011df6 <xQueueReceive+0x22a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90011dda:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90011ddc:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90011dde:	b153      	cbz	r3, 90011df6 <xQueueReceive+0x22a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90011de0:	f001 f95a 	bl	90013098 <xTaskRemoveFromEventList>
90011de4:	2800      	cmp	r0, #0
90011de6:	d0f4      	beq.n	90011dd2 <xQueueReceive+0x206>
						vTaskMissedYield();
90011de8:	f001 f9f4 	bl	900131d4 <vTaskMissedYield>
			--cTxLock;
90011dec:	1e6b      	subs	r3, r5, #1
90011dee:	b2da      	uxtb	r2, r3
90011df0:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90011df2:	2a00      	cmp	r2, #0
90011df4:	d1f1      	bne.n	90011dda <xQueueReceive+0x20e>
		pxQueue->cTxLock = queueUNLOCKED;
90011df6:	23ff      	movs	r3, #255	; 0xff
90011df8:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
90011dfc:	f7ff f924 	bl	90011048 <vPortExitCritical>
	taskENTER_CRITICAL();
90011e00:	f7ff f900 	bl	90011004 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
90011e04:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
90011e08:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90011e0a:	2d00      	cmp	r5, #0
90011e0c:	dd14      	ble.n	90011e38 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90011e0e:	f104 0910 	add.w	r9, r4, #16
90011e12:	e003      	b.n	90011e1c <xQueueReceive+0x250>
				--cRxLock;
90011e14:	1e6b      	subs	r3, r5, #1
90011e16:	b2da      	uxtb	r2, r3
90011e18:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90011e1a:	b16a      	cbz	r2, 90011e38 <xQueueReceive+0x26c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90011e1c:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90011e1e:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90011e20:	b153      	cbz	r3, 90011e38 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90011e22:	f001 f939 	bl	90013098 <xTaskRemoveFromEventList>
90011e26:	2800      	cmp	r0, #0
90011e28:	d0f4      	beq.n	90011e14 <xQueueReceive+0x248>
					vTaskMissedYield();
90011e2a:	f001 f9d3 	bl	900131d4 <vTaskMissedYield>
				--cRxLock;
90011e2e:	1e6b      	subs	r3, r5, #1
90011e30:	b2da      	uxtb	r2, r3
90011e32:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90011e34:	2a00      	cmp	r2, #0
90011e36:	d1f1      	bne.n	90011e1c <xQueueReceive+0x250>
		pxQueue->cRxLock = queueUNLOCKED;
90011e38:	23ff      	movs	r3, #255	; 0xff
90011e3a:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
90011e3e:	f7ff f903 	bl	90011048 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
90011e42:	f000 ff97 	bl	90012d74 <xTaskResumeAll>
90011e46:	2800      	cmp	r0, #0
90011e48:	d1a6      	bne.n	90011d98 <xQueueReceive+0x1cc>
					portYIELD_WITHIN_API();
90011e4a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
90011e4e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
90011e52:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
90011e56:	f3bf 8f4f 	dsb	sy
90011e5a:	f3bf 8f6f 	isb	sy
		taskENTER_CRITICAL();
90011e5e:	f7ff f8d1 	bl	90011004 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
90011e62:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
90011e64:	2d00      	cmp	r5, #0
90011e66:	d09c      	beq.n	90011da2 <xQueueReceive+0x1d6>
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
90011e68:	6c22      	ldr	r2, [r4, #64]	; 0x40
90011e6a:	b152      	cbz	r2, 90011e82 <xQueueReceive+0x2b6>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
90011e6c:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
90011e6e:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
90011e70:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
90011e72:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
90011e74:	60e1      	str	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
90011e76:	d301      	bcc.n	90011e7c <xQueueReceive+0x2b0>
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
90011e78:	6821      	ldr	r1, [r4, #0]
90011e7a:	60e1      	str	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
90011e7c:	4638      	mov	r0, r7
90011e7e:	f018 fad6 	bl	9002a42e <memcpy>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
90011e82:	3d01      	subs	r5, #1
90011e84:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90011e86:	6923      	ldr	r3, [r4, #16]
90011e88:	b963      	cbnz	r3, 90011ea4 <xQueueReceive+0x2d8>
				taskEXIT_CRITICAL();
90011e8a:	f7ff f8dd 	bl	90011048 <vPortExitCritical>
				return pdPASS;
90011e8e:	2001      	movs	r0, #1
90011e90:	e78e      	b.n	90011db0 <xQueueReceive+0x1e4>
90011e92:	f04f 0350 	mov.w	r3, #80	; 0x50
90011e96:	f383 8811 	msr	BASEPRI, r3
90011e9a:	f3bf 8f6f 	isb	sy
90011e9e:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
90011ea2:	e7fe      	b.n	90011ea2 <xQueueReceive+0x2d6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90011ea4:	f104 0010 	add.w	r0, r4, #16
90011ea8:	f001 f8f6 	bl	90013098 <xTaskRemoveFromEventList>
90011eac:	2800      	cmp	r0, #0
90011eae:	d0ec      	beq.n	90011e8a <xQueueReceive+0x2be>
						queueYIELD_IF_USING_PREEMPTION();
90011eb0:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
90011eb4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
90011eb8:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
90011ebc:	f3bf 8f4f 	dsb	sy
90011ec0:	f3bf 8f6f 	isb	sy
90011ec4:	e7e1      	b.n	90011e8a <xQueueReceive+0x2be>
90011ec6:	bf00      	nop

90011ec8 <xQueueSemaphoreTake>:
{
90011ec8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90011ecc:	b084      	sub	sp, #16
90011ece:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
90011ed0:	2800      	cmp	r0, #0
90011ed2:	d05c      	beq.n	90011f8e <xQueueSemaphoreTake+0xc6>
	configASSERT( pxQueue->uxItemSize == 0 );
90011ed4:	6c07      	ldr	r7, [r0, #64]	; 0x40
90011ed6:	4604      	mov	r4, r0
90011ed8:	b147      	cbz	r7, 90011eec <xQueueSemaphoreTake+0x24>
90011eda:	f04f 0350 	mov.w	r3, #80	; 0x50
90011ede:	f383 8811 	msr	BASEPRI, r3
90011ee2:	f3bf 8f6f 	isb	sy
90011ee6:	f3bf 8f4f 	dsb	sy
90011eea:	e7fe      	b.n	90011eea <xQueueSemaphoreTake+0x22>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
90011eec:	f001 f97e 	bl	900131ec <xTaskGetSchedulerState>
90011ef0:	4605      	mov	r5, r0
90011ef2:	2800      	cmp	r0, #0
90011ef4:	d054      	beq.n	90011fa0 <xQueueSemaphoreTake+0xd8>
90011ef6:	463d      	mov	r5, r7
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90011ef8:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
90011efc:	f7ff f882 	bl	90011004 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
90011f00:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
90011f02:	2b00      	cmp	r3, #0
90011f04:	f040 8149 	bne.w	9001219a <xQueueSemaphoreTake+0x2d2>
				if( xTicksToWait == ( TickType_t ) 0 )
90011f08:	9b01      	ldr	r3, [sp, #4]
90011f0a:	2b00      	cmp	r3, #0
90011f0c:	f000 813a 	beq.w	90012184 <xQueueSemaphoreTake+0x2bc>
				else if( xEntryTimeSet == pdFALSE )
90011f10:	2d00      	cmp	r5, #0
90011f12:	f000 809d 	beq.w	90012050 <xQueueSemaphoreTake+0x188>
		taskEXIT_CRITICAL();
90011f16:	f7ff f897 	bl	90011048 <vPortExitCritical>
		vTaskSuspendAll();
90011f1a:	f000 ff23 	bl	90012d64 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
90011f1e:	f7ff f871 	bl	90011004 <vPortEnterCritical>
90011f22:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
90011f26:	2bff      	cmp	r3, #255	; 0xff
90011f28:	d102      	bne.n	90011f30 <xQueueSemaphoreTake+0x68>
90011f2a:	2300      	movs	r3, #0
90011f2c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
90011f30:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
90011f34:	2bff      	cmp	r3, #255	; 0xff
90011f36:	d102      	bne.n	90011f3e <xQueueSemaphoreTake+0x76>
90011f38:	2300      	movs	r3, #0
90011f3a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
90011f3e:	f7ff f883 	bl	90011048 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
90011f42:	a901      	add	r1, sp, #4
90011f44:	a802      	add	r0, sp, #8
90011f46:	f001 f8fd 	bl	90013144 <xTaskCheckForTimeOut>
90011f4a:	2800      	cmp	r0, #0
90011f4c:	d135      	bne.n	90011fba <xQueueSemaphoreTake+0xf2>
	taskENTER_CRITICAL();
90011f4e:	f7ff f859 	bl	90011004 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
90011f52:	6ba3      	ldr	r3, [r4, #56]	; 0x38
90011f54:	2b00      	cmp	r3, #0
90011f56:	f000 80a4 	beq.w	900120a2 <xQueueSemaphoreTake+0x1da>
	taskEXIT_CRITICAL();
90011f5a:	f7ff f875 	bl	90011048 <vPortExitCritical>
	taskENTER_CRITICAL();
90011f5e:	f7ff f851 	bl	90011004 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
90011f62:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
90011f66:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90011f68:	2d00      	cmp	r5, #0
90011f6a:	dc05      	bgt.n	90011f78 <xQueueSemaphoreTake+0xb0>
90011f6c:	e074      	b.n	90012058 <xQueueSemaphoreTake+0x190>
			--cTxLock;
90011f6e:	1e6b      	subs	r3, r5, #1
90011f70:	b2da      	uxtb	r2, r3
90011f72:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90011f74:	2a00      	cmp	r2, #0
90011f76:	d06f      	beq.n	90012058 <xQueueSemaphoreTake+0x190>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90011f78:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90011f7a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90011f7c:	2b00      	cmp	r3, #0
90011f7e:	d06b      	beq.n	90012058 <xQueueSemaphoreTake+0x190>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90011f80:	f001 f88a 	bl	90013098 <xTaskRemoveFromEventList>
90011f84:	2800      	cmp	r0, #0
90011f86:	d0f2      	beq.n	90011f6e <xQueueSemaphoreTake+0xa6>
						vTaskMissedYield();
90011f88:	f001 f924 	bl	900131d4 <vTaskMissedYield>
90011f8c:	e7ef      	b.n	90011f6e <xQueueSemaphoreTake+0xa6>
90011f8e:	f04f 0350 	mov.w	r3, #80	; 0x50
90011f92:	f383 8811 	msr	BASEPRI, r3
90011f96:	f3bf 8f6f 	isb	sy
90011f9a:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
90011f9e:	e7fe      	b.n	90011f9e <xQueueSemaphoreTake+0xd6>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
90011fa0:	9b01      	ldr	r3, [sp, #4]
90011fa2:	2b00      	cmp	r3, #0
90011fa4:	f000 80d4 	beq.w	90012150 <xQueueSemaphoreTake+0x288>
90011fa8:	f04f 0350 	mov.w	r3, #80	; 0x50
90011fac:	f383 8811 	msr	BASEPRI, r3
90011fb0:	f3bf 8f6f 	isb	sy
90011fb4:	f3bf 8f4f 	dsb	sy
90011fb8:	e7fe      	b.n	90011fb8 <xQueueSemaphoreTake+0xf0>
	taskENTER_CRITICAL();
90011fba:	f7ff f823 	bl	90011004 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
90011fbe:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
90011fc2:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90011fc4:	2d00      	cmp	r5, #0
90011fc6:	dc04      	bgt.n	90011fd2 <xQueueSemaphoreTake+0x10a>
90011fc8:	e011      	b.n	90011fee <xQueueSemaphoreTake+0x126>
			--cTxLock;
90011fca:	1e6b      	subs	r3, r5, #1
90011fcc:	b2da      	uxtb	r2, r3
90011fce:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90011fd0:	b16a      	cbz	r2, 90011fee <xQueueSemaphoreTake+0x126>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90011fd2:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90011fd4:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90011fd6:	b153      	cbz	r3, 90011fee <xQueueSemaphoreTake+0x126>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90011fd8:	f001 f85e 	bl	90013098 <xTaskRemoveFromEventList>
90011fdc:	2800      	cmp	r0, #0
90011fde:	d0f4      	beq.n	90011fca <xQueueSemaphoreTake+0x102>
						vTaskMissedYield();
90011fe0:	f001 f8f8 	bl	900131d4 <vTaskMissedYield>
			--cTxLock;
90011fe4:	1e6b      	subs	r3, r5, #1
90011fe6:	b2da      	uxtb	r2, r3
90011fe8:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90011fea:	2a00      	cmp	r2, #0
90011fec:	d1f1      	bne.n	90011fd2 <xQueueSemaphoreTake+0x10a>
		pxQueue->cTxLock = queueUNLOCKED;
90011fee:	23ff      	movs	r3, #255	; 0xff
90011ff0:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
90011ff4:	f7ff f828 	bl	90011048 <vPortExitCritical>
	taskENTER_CRITICAL();
90011ff8:	f7ff f804 	bl	90011004 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
90011ffc:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
90012000:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90012002:	2d00      	cmp	r5, #0
90012004:	dd14      	ble.n	90012030 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90012006:	f104 0810 	add.w	r8, r4, #16
9001200a:	e003      	b.n	90012014 <xQueueSemaphoreTake+0x14c>
				--cRxLock;
9001200c:	1e6b      	subs	r3, r5, #1
9001200e:	b2da      	uxtb	r2, r3
90012010:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90012012:	b16a      	cbz	r2, 90012030 <xQueueSemaphoreTake+0x168>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90012014:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90012016:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90012018:	b153      	cbz	r3, 90012030 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9001201a:	f001 f83d 	bl	90013098 <xTaskRemoveFromEventList>
9001201e:	2800      	cmp	r0, #0
90012020:	d0f4      	beq.n	9001200c <xQueueSemaphoreTake+0x144>
					vTaskMissedYield();
90012022:	f001 f8d7 	bl	900131d4 <vTaskMissedYield>
				--cRxLock;
90012026:	1e6b      	subs	r3, r5, #1
90012028:	b2da      	uxtb	r2, r3
9001202a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9001202c:	2a00      	cmp	r2, #0
9001202e:	d1f1      	bne.n	90012014 <xQueueSemaphoreTake+0x14c>
		pxQueue->cRxLock = queueUNLOCKED;
90012030:	23ff      	movs	r3, #255	; 0xff
90012032:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
90012036:	f7ff f807 	bl	90011048 <vPortExitCritical>
			( void ) xTaskResumeAll();
9001203a:	f000 fe9b 	bl	90012d74 <xTaskResumeAll>
	taskENTER_CRITICAL();
9001203e:	f7fe ffe1 	bl	90011004 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
90012042:	6ba3      	ldr	r3, [r4, #56]	; 0x38
90012044:	2b00      	cmp	r3, #0
90012046:	d07c      	beq.n	90012142 <xQueueSemaphoreTake+0x27a>
	taskEXIT_CRITICAL();
90012048:	f7fe fffe 	bl	90011048 <vPortExitCritical>
	return xReturn;
9001204c:	2501      	movs	r5, #1
9001204e:	e755      	b.n	90011efc <xQueueSemaphoreTake+0x34>
					vTaskInternalSetTimeOutState( &xTimeOut );
90012050:	a802      	add	r0, sp, #8
90012052:	f001 f86b 	bl	9001312c <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
90012056:	e75e      	b.n	90011f16 <xQueueSemaphoreTake+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
90012058:	23ff      	movs	r3, #255	; 0xff
9001205a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
9001205e:	f7fe fff3 	bl	90011048 <vPortExitCritical>
	taskENTER_CRITICAL();
90012062:	f7fe ffcf 	bl	90011004 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
90012066:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9001206a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9001206c:	2d00      	cmp	r5, #0
9001206e:	dd10      	ble.n	90012092 <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90012070:	f104 0810 	add.w	r8, r4, #16
90012074:	e003      	b.n	9001207e <xQueueSemaphoreTake+0x1b6>
				--cRxLock;
90012076:	1e6b      	subs	r3, r5, #1
90012078:	b2da      	uxtb	r2, r3
9001207a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9001207c:	b14a      	cbz	r2, 90012092 <xQueueSemaphoreTake+0x1ca>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9001207e:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90012080:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90012082:	b133      	cbz	r3, 90012092 <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90012084:	f001 f808 	bl	90013098 <xTaskRemoveFromEventList>
90012088:	2800      	cmp	r0, #0
9001208a:	d0f4      	beq.n	90012076 <xQueueSemaphoreTake+0x1ae>
					vTaskMissedYield();
9001208c:	f001 f8a2 	bl	900131d4 <vTaskMissedYield>
90012090:	e7f1      	b.n	90012076 <xQueueSemaphoreTake+0x1ae>
		pxQueue->cRxLock = queueUNLOCKED;
90012092:	23ff      	movs	r3, #255	; 0xff
90012094:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
90012098:	f7fe ffd6 	bl	90011048 <vPortExitCritical>
				( void ) xTaskResumeAll();
9001209c:	f000 fe6a 	bl	90012d74 <xTaskResumeAll>
900120a0:	e7d4      	b.n	9001204c <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
900120a2:	f7fe ffd1 	bl	90011048 <vPortExitCritical>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
900120a6:	6823      	ldr	r3, [r4, #0]
900120a8:	2b00      	cmp	r3, #0
900120aa:	d062      	beq.n	90012172 <xQueueSemaphoreTake+0x2aa>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
900120ac:	9901      	ldr	r1, [sp, #4]
900120ae:	4630      	mov	r0, r6
900120b0:	f000 ff64 	bl	90012f7c <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
900120b4:	f7fe ffa6 	bl	90011004 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
900120b8:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
900120bc:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
900120be:	2d00      	cmp	r5, #0
900120c0:	dc04      	bgt.n	900120cc <xQueueSemaphoreTake+0x204>
900120c2:	e00d      	b.n	900120e0 <xQueueSemaphoreTake+0x218>
			--cTxLock;
900120c4:	1e6b      	subs	r3, r5, #1
900120c6:	b2da      	uxtb	r2, r3
900120c8:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
900120ca:	b14a      	cbz	r2, 900120e0 <xQueueSemaphoreTake+0x218>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
900120cc:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
900120ce:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
900120d0:	b133      	cbz	r3, 900120e0 <xQueueSemaphoreTake+0x218>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
900120d2:	f000 ffe1 	bl	90013098 <xTaskRemoveFromEventList>
900120d6:	2800      	cmp	r0, #0
900120d8:	d0f4      	beq.n	900120c4 <xQueueSemaphoreTake+0x1fc>
						vTaskMissedYield();
900120da:	f001 f87b 	bl	900131d4 <vTaskMissedYield>
900120de:	e7f1      	b.n	900120c4 <xQueueSemaphoreTake+0x1fc>
		pxQueue->cTxLock = queueUNLOCKED;
900120e0:	23ff      	movs	r3, #255	; 0xff
900120e2:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
900120e6:	f7fe ffaf 	bl	90011048 <vPortExitCritical>
	taskENTER_CRITICAL();
900120ea:	f7fe ff8b 	bl	90011004 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
900120ee:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
900120f2:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
900120f4:	2d00      	cmp	r5, #0
900120f6:	dd10      	ble.n	9001211a <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
900120f8:	f104 0810 	add.w	r8, r4, #16
900120fc:	e003      	b.n	90012106 <xQueueSemaphoreTake+0x23e>
				--cRxLock;
900120fe:	1e6b      	subs	r3, r5, #1
90012100:	b2da      	uxtb	r2, r3
90012102:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90012104:	b14a      	cbz	r2, 9001211a <xQueueSemaphoreTake+0x252>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90012106:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90012108:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9001210a:	b133      	cbz	r3, 9001211a <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9001210c:	f000 ffc4 	bl	90013098 <xTaskRemoveFromEventList>
90012110:	2800      	cmp	r0, #0
90012112:	d0f4      	beq.n	900120fe <xQueueSemaphoreTake+0x236>
					vTaskMissedYield();
90012114:	f001 f85e 	bl	900131d4 <vTaskMissedYield>
90012118:	e7f1      	b.n	900120fe <xQueueSemaphoreTake+0x236>
		pxQueue->cRxLock = queueUNLOCKED;
9001211a:	23ff      	movs	r3, #255	; 0xff
9001211c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
90012120:	f7fe ff92 	bl	90011048 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
90012124:	f000 fe26 	bl	90012d74 <xTaskResumeAll>
90012128:	2800      	cmp	r0, #0
9001212a:	d18f      	bne.n	9001204c <xQueueSemaphoreTake+0x184>
					portYIELD_WITHIN_API();
9001212c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
90012130:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
90012134:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
90012138:	f3bf 8f4f 	dsb	sy
9001213c:	f3bf 8f6f 	isb	sy
90012140:	e784      	b.n	9001204c <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
90012142:	f7fe ff81 	bl	90011048 <vPortExitCritical>
					if( xInheritanceOccurred != pdFALSE )
90012146:	b92f      	cbnz	r7, 90012154 <xQueueSemaphoreTake+0x28c>
}
90012148:	4638      	mov	r0, r7
9001214a:	b004      	add	sp, #16
9001214c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90012150:	4607      	mov	r7, r0
90012152:	e6d1      	b.n	90011ef8 <xQueueSemaphoreTake+0x30>
						taskENTER_CRITICAL();
90012154:	f7fe ff56 	bl	90011004 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
90012158:	6a61      	ldr	r1, [r4, #36]	; 0x24
9001215a:	b119      	cbz	r1, 90012164 <xQueueSemaphoreTake+0x29c>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
9001215c:	6b23      	ldr	r3, [r4, #48]	; 0x30
9001215e:	6819      	ldr	r1, [r3, #0]
90012160:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
90012164:	68a0      	ldr	r0, [r4, #8]
				return errQUEUE_EMPTY;
90012166:	2700      	movs	r7, #0
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
90012168:	f001 f8dc 	bl	90013324 <vTaskPriorityDisinheritAfterTimeout>
						taskEXIT_CRITICAL();
9001216c:	f7fe ff6c 	bl	90011048 <vPortExitCritical>
90012170:	e7ea      	b.n	90012148 <xQueueSemaphoreTake+0x280>
						taskENTER_CRITICAL();
90012172:	f7fe ff47 	bl	90011004 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
90012176:	68a0      	ldr	r0, [r4, #8]
90012178:	f001 f848 	bl	9001320c <xTaskPriorityInherit>
9001217c:	4607      	mov	r7, r0
						taskEXIT_CRITICAL();
9001217e:	f7fe ff63 	bl	90011048 <vPortExitCritical>
90012182:	e793      	b.n	900120ac <xQueueSemaphoreTake+0x1e4>
						configASSERT( xInheritanceOccurred == pdFALSE );
90012184:	2f00      	cmp	r7, #0
90012186:	d0f1      	beq.n	9001216c <xQueueSemaphoreTake+0x2a4>
90012188:	f04f 0350 	mov.w	r3, #80	; 0x50
9001218c:	f383 8811 	msr	BASEPRI, r3
90012190:	f3bf 8f6f 	isb	sy
90012194:	f3bf 8f4f 	dsb	sy
90012198:	e7fe      	b.n	90012198 <xQueueSemaphoreTake+0x2d0>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
9001219a:	3b01      	subs	r3, #1
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9001219c:	6822      	ldr	r2, [r4, #0]
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
9001219e:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
900121a0:	b12a      	cbz	r2, 900121ae <xQueueSemaphoreTake+0x2e6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
900121a2:	6923      	ldr	r3, [r4, #16]
900121a4:	b93b      	cbnz	r3, 900121b6 <xQueueSemaphoreTake+0x2ee>
				return pdPASS;
900121a6:	2701      	movs	r7, #1
				taskEXIT_CRITICAL();
900121a8:	f7fe ff4e 	bl	90011048 <vPortExitCritical>
				return pdPASS;
900121ac:	e7cc      	b.n	90012148 <xQueueSemaphoreTake+0x280>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
900121ae:	f001 f90d 	bl	900133cc <pvTaskIncrementMutexHeldCount>
900121b2:	60a0      	str	r0, [r4, #8]
900121b4:	e7f5      	b.n	900121a2 <xQueueSemaphoreTake+0x2da>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
900121b6:	f104 0010 	add.w	r0, r4, #16
900121ba:	f000 ff6d 	bl	90013098 <xTaskRemoveFromEventList>
900121be:	2800      	cmp	r0, #0
900121c0:	d0f1      	beq.n	900121a6 <xQueueSemaphoreTake+0x2de>
						queueYIELD_IF_USING_PREEMPTION();
900121c2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
900121c6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
900121ca:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
900121ce:	f3bf 8f4f 	dsb	sy
900121d2:	f3bf 8f6f 	isb	sy
900121d6:	e7e6      	b.n	900121a6 <xQueueSemaphoreTake+0x2de>

900121d8 <xQueueTakeMutexRecursive>:
		configASSERT( pxMutex );
900121d8:	b1a8      	cbz	r0, 90012206 <xQueueTakeMutexRecursive+0x2e>
	{
900121da:	b570      	push	{r4, r5, r6, lr}
		if( pxMutex->u.xSemaphore.xMutexHolder == xTaskGetCurrentTaskHandle() )
900121dc:	6886      	ldr	r6, [r0, #8]
900121de:	4604      	mov	r4, r0
900121e0:	460d      	mov	r5, r1
900121e2:	f000 fffd 	bl	900131e0 <xTaskGetCurrentTaskHandle>
900121e6:	4286      	cmp	r6, r0
900121e8:	d008      	beq.n	900121fc <xQueueTakeMutexRecursive+0x24>
			xReturn = xQueueSemaphoreTake( pxMutex, xTicksToWait );
900121ea:	4629      	mov	r1, r5
900121ec:	4620      	mov	r0, r4
900121ee:	f7ff fe6b 	bl	90011ec8 <xQueueSemaphoreTake>
			if( xReturn != pdFAIL )
900121f2:	b110      	cbz	r0, 900121fa <xQueueTakeMutexRecursive+0x22>
				( pxMutex->u.xSemaphore.uxRecursiveCallCount )++;
900121f4:	68e3      	ldr	r3, [r4, #12]
900121f6:	3301      	adds	r3, #1
900121f8:	60e3      	str	r3, [r4, #12]
	}
900121fa:	bd70      	pop	{r4, r5, r6, pc}
			( pxMutex->u.xSemaphore.uxRecursiveCallCount )++;
900121fc:	68e3      	ldr	r3, [r4, #12]
			xReturn = pdPASS;
900121fe:	2001      	movs	r0, #1
			( pxMutex->u.xSemaphore.uxRecursiveCallCount )++;
90012200:	4403      	add	r3, r0
90012202:	60e3      	str	r3, [r4, #12]
	}
90012204:	bd70      	pop	{r4, r5, r6, pc}
90012206:	f04f 0350 	mov.w	r3, #80	; 0x50
9001220a:	f383 8811 	msr	BASEPRI, r3
9001220e:	f3bf 8f6f 	isb	sy
90012212:	f3bf 8f4f 	dsb	sy
		configASSERT( pxMutex );
90012216:	e7fe      	b.n	90012216 <xQueueTakeMutexRecursive+0x3e>

90012218 <xQueueReceiveFromISR>:
{
90012218:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	configASSERT( pxQueue );
9001221c:	b310      	cbz	r0, 90012264 <xQueueReceiveFromISR+0x4c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9001221e:	460e      	mov	r6, r1
90012220:	4604      	mov	r4, r0
90012222:	4617      	mov	r7, r2
90012224:	b191      	cbz	r1, 9001224c <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
90012226:	f7ff f81f 	bl	90011268 <vPortValidateInterruptPriority>
	__asm volatile
9001222a:	f3ef 8911 	mrs	r9, BASEPRI
9001222e:	f04f 0350 	mov.w	r3, #80	; 0x50
90012232:	f383 8811 	msr	BASEPRI, r3
90012236:	f3bf 8f6f 	isb	sy
9001223a:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9001223e:	6ba5      	ldr	r5, [r4, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
90012240:	b9cd      	cbnz	r5, 90012276 <xQueueReceiveFromISR+0x5e>
			xReturn = pdFAIL;
90012242:	4628      	mov	r0, r5
	__asm volatile
90012244:	f389 8811 	msr	BASEPRI, r9
}
90012248:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9001224c:	6c03      	ldr	r3, [r0, #64]	; 0x40
9001224e:	2b00      	cmp	r3, #0
90012250:	d0e9      	beq.n	90012226 <xQueueReceiveFromISR+0xe>
	__asm volatile
90012252:	f04f 0350 	mov.w	r3, #80	; 0x50
90012256:	f383 8811 	msr	BASEPRI, r3
9001225a:	f3bf 8f6f 	isb	sy
9001225e:	f3bf 8f4f 	dsb	sy
90012262:	e7fe      	b.n	90012262 <xQueueReceiveFromISR+0x4a>
90012264:	f04f 0350 	mov.w	r3, #80	; 0x50
90012268:	f383 8811 	msr	BASEPRI, r3
9001226c:	f3bf 8f6f 	isb	sy
90012270:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
90012274:	e7fe      	b.n	90012274 <xQueueReceiveFromISR+0x5c>
			const int8_t cRxLock = pxQueue->cRxLock;
90012276:	f894 8044 	ldrb.w	r8, [r4, #68]	; 0x44
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
9001227a:	6c22      	ldr	r2, [r4, #64]	; 0x40
			const int8_t cRxLock = pxQueue->cRxLock;
9001227c:	fa4f f888 	sxtb.w	r8, r8
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
90012280:	b142      	cbz	r2, 90012294 <xQueueReceiveFromISR+0x7c>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
90012282:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
90012284:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
90012286:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
90012288:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9001228a:	60e1      	str	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9001228c:	d215      	bcs.n	900122ba <xQueueReceiveFromISR+0xa2>
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
9001228e:	4630      	mov	r0, r6
90012290:	f018 f8cd 	bl	9002a42e <memcpy>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
90012294:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
90012296:	f1b8 3fff 	cmp.w	r8, #4294967295
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
9001229a:	63a5      	str	r5, [r4, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
9001229c:	d009      	beq.n	900122b2 <xQueueReceiveFromISR+0x9a>
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
9001229e:	f108 0301 	add.w	r3, r8, #1
			xReturn = pdPASS;
900122a2:	2001      	movs	r0, #1
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
900122a4:	b25b      	sxtb	r3, r3
900122a6:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	__asm volatile
900122aa:	f389 8811 	msr	BASEPRI, r9
}
900122ae:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
900122b2:	6923      	ldr	r3, [r4, #16]
900122b4:	b923      	cbnz	r3, 900122c0 <xQueueReceiveFromISR+0xa8>
			xReturn = pdPASS;
900122b6:	2001      	movs	r0, #1
900122b8:	e7c4      	b.n	90012244 <xQueueReceiveFromISR+0x2c>
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
900122ba:	6821      	ldr	r1, [r4, #0]
900122bc:	60e1      	str	r1, [r4, #12]
900122be:	e7e6      	b.n	9001228e <xQueueReceiveFromISR+0x76>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
900122c0:	f104 0010 	add.w	r0, r4, #16
900122c4:	f000 fee8 	bl	90013098 <xTaskRemoveFromEventList>
						if( pxHigherPriorityTaskWoken != NULL )
900122c8:	2f00      	cmp	r7, #0
900122ca:	d0f4      	beq.n	900122b6 <xQueueReceiveFromISR+0x9e>
900122cc:	2800      	cmp	r0, #0
900122ce:	d0f2      	beq.n	900122b6 <xQueueReceiveFromISR+0x9e>
							*pxHigherPriorityTaskWoken = pdTRUE;
900122d0:	2301      	movs	r3, #1
			xReturn = pdPASS;
900122d2:	4618      	mov	r0, r3
							*pxHigherPriorityTaskWoken = pdTRUE;
900122d4:	603b      	str	r3, [r7, #0]
900122d6:	e7b5      	b.n	90012244 <xQueueReceiveFromISR+0x2c>

900122d8 <uxQueueMessagesWaiting>:
	configASSERT( xQueue );
900122d8:	b158      	cbz	r0, 900122f2 <uxQueueMessagesWaiting+0x1a>
{
900122da:	b510      	push	{r4, lr}
900122dc:	4604      	mov	r4, r0
900122de:	b082      	sub	sp, #8
	taskENTER_CRITICAL();
900122e0:	f7fe fe90 	bl	90011004 <vPortEnterCritical>
		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
900122e4:	6ba0      	ldr	r0, [r4, #56]	; 0x38
900122e6:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
900122e8:	f7fe feae 	bl	90011048 <vPortExitCritical>
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
900122ec:	9801      	ldr	r0, [sp, #4]
900122ee:	b002      	add	sp, #8
900122f0:	bd10      	pop	{r4, pc}
	__asm volatile
900122f2:	f04f 0350 	mov.w	r3, #80	; 0x50
900122f6:	f383 8811 	msr	BASEPRI, r3
900122fa:	f3bf 8f6f 	isb	sy
900122fe:	f3bf 8f4f 	dsb	sy
	configASSERT( xQueue );
90012302:	e7fe      	b.n	90012302 <uxQueueMessagesWaiting+0x2a>

90012304 <uxQueueMessagesWaitingFromISR>:
	configASSERT( pxQueue );
90012304:	b108      	cbz	r0, 9001230a <uxQueueMessagesWaitingFromISR+0x6>
	uxReturn = pxQueue->uxMessagesWaiting;
90012306:	6b80      	ldr	r0, [r0, #56]	; 0x38
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
90012308:	4770      	bx	lr
9001230a:	f04f 0350 	mov.w	r3, #80	; 0x50
9001230e:	f383 8811 	msr	BASEPRI, r3
90012312:	f3bf 8f6f 	isb	sy
90012316:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9001231a:	e7fe      	b.n	9001231a <uxQueueMessagesWaitingFromISR+0x16>
9001231c:	0000      	movs	r0, r0
	...

90012320 <vQueueDelete>:
	configASSERT( pxQueue );
90012320:	b1e0      	cbz	r0, 9001235c <vQueueDelete+0x3c>

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
90012322:	4b21      	ldr	r3, [pc, #132]	; (900123a8 <vQueueDelete+0x88>)
90012324:	685a      	ldr	r2, [r3, #4]
90012326:	4290      	cmp	r0, r2
90012328:	d02b      	beq.n	90012382 <vQueueDelete+0x62>
9001232a:	68da      	ldr	r2, [r3, #12]
9001232c:	4290      	cmp	r0, r2
9001232e:	d02a      	beq.n	90012386 <vQueueDelete+0x66>
90012330:	695a      	ldr	r2, [r3, #20]
90012332:	4290      	cmp	r0, r2
90012334:	d029      	beq.n	9001238a <vQueueDelete+0x6a>
90012336:	69da      	ldr	r2, [r3, #28]
90012338:	4290      	cmp	r0, r2
9001233a:	d028      	beq.n	9001238e <vQueueDelete+0x6e>
9001233c:	6a5a      	ldr	r2, [r3, #36]	; 0x24
9001233e:	4290      	cmp	r0, r2
90012340:	d027      	beq.n	90012392 <vQueueDelete+0x72>
90012342:	6ada      	ldr	r2, [r3, #44]	; 0x2c
90012344:	4290      	cmp	r0, r2
90012346:	d014      	beq.n	90012372 <vQueueDelete+0x52>
90012348:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9001234a:	4290      	cmp	r0, r2
9001234c:	d023      	beq.n	90012396 <vQueueDelete+0x76>
9001234e:	6bda      	ldr	r2, [r3, #60]	; 0x3c
90012350:	4290      	cmp	r0, r2
90012352:	d022      	beq.n	9001239a <vQueueDelete+0x7a>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
90012354:	f890 3046 	ldrb.w	r3, [r0, #70]	; 0x46
90012358:	b14b      	cbz	r3, 9001236e <vQueueDelete+0x4e>
}
9001235a:	4770      	bx	lr
9001235c:	f04f 0350 	mov.w	r3, #80	; 0x50
90012360:	f383 8811 	msr	BASEPRI, r3
90012364:	f3bf 8f6f 	isb	sy
90012368:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9001236c:	e7fe      	b.n	9001236c <vQueueDelete+0x4c>
			vPortFree( pxQueue );
9001236e:	f7fe bd31 	b.w	90010dd4 <vPortFree>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
90012372:	2205      	movs	r2, #5
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
90012374:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
90012378:	ed9f 7b09 	vldr	d7, [pc, #36]	; 900123a0 <vQueueDelete+0x80>
9001237c:	ed83 7b00 	vstr	d7, [r3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
				break;
90012380:	e7e8      	b.n	90012354 <vQueueDelete+0x34>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
90012382:	2200      	movs	r2, #0
90012384:	e7f6      	b.n	90012374 <vQueueDelete+0x54>
90012386:	2201      	movs	r2, #1
90012388:	e7f4      	b.n	90012374 <vQueueDelete+0x54>
9001238a:	2202      	movs	r2, #2
9001238c:	e7f2      	b.n	90012374 <vQueueDelete+0x54>
9001238e:	2203      	movs	r2, #3
90012390:	e7f0      	b.n	90012374 <vQueueDelete+0x54>
90012392:	2204      	movs	r2, #4
90012394:	e7ee      	b.n	90012374 <vQueueDelete+0x54>
90012396:	2206      	movs	r2, #6
90012398:	e7ec      	b.n	90012374 <vQueueDelete+0x54>
9001239a:	2207      	movs	r2, #7
9001239c:	e7ea      	b.n	90012374 <vQueueDelete+0x54>
9001239e:	bf00      	nop
	...
900123a8:	24023058 	.word	0x24023058

900123ac <vQueueAddToRegistry>:
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
900123ac:	4b12      	ldr	r3, [pc, #72]	; (900123f8 <vQueueAddToRegistry+0x4c>)
900123ae:	681a      	ldr	r2, [r3, #0]
900123b0:	b17a      	cbz	r2, 900123d2 <vQueueAddToRegistry+0x26>
900123b2:	689a      	ldr	r2, [r3, #8]
900123b4:	b162      	cbz	r2, 900123d0 <vQueueAddToRegistry+0x24>
900123b6:	691a      	ldr	r2, [r3, #16]
900123b8:	b192      	cbz	r2, 900123e0 <vQueueAddToRegistry+0x34>
900123ba:	699a      	ldr	r2, [r3, #24]
900123bc:	b192      	cbz	r2, 900123e4 <vQueueAddToRegistry+0x38>
900123be:	6a1a      	ldr	r2, [r3, #32]
900123c0:	b192      	cbz	r2, 900123e8 <vQueueAddToRegistry+0x3c>
900123c2:	6a9a      	ldr	r2, [r3, #40]	; 0x28
900123c4:	b192      	cbz	r2, 900123ec <vQueueAddToRegistry+0x40>
900123c6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
900123c8:	b192      	cbz	r2, 900123f0 <vQueueAddToRegistry+0x44>
900123ca:	6b9a      	ldr	r2, [r3, #56]	; 0x38
900123cc:	b192      	cbz	r2, 900123f4 <vQueueAddToRegistry+0x48>
	}
900123ce:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
900123d0:	2201      	movs	r2, #1
				xQueueRegistry[ ux ].xHandle = xQueue;
900123d2:	eb03 0cc2 	add.w	ip, r3, r2, lsl #3
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
900123d6:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
900123da:	f8cc 0004 	str.w	r0, [ip, #4]
	}
900123de:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
900123e0:	2202      	movs	r2, #2
900123e2:	e7f6      	b.n	900123d2 <vQueueAddToRegistry+0x26>
900123e4:	2203      	movs	r2, #3
900123e6:	e7f4      	b.n	900123d2 <vQueueAddToRegistry+0x26>
900123e8:	2204      	movs	r2, #4
900123ea:	e7f2      	b.n	900123d2 <vQueueAddToRegistry+0x26>
900123ec:	2205      	movs	r2, #5
900123ee:	e7f0      	b.n	900123d2 <vQueueAddToRegistry+0x26>
900123f0:	2206      	movs	r2, #6
900123f2:	e7ee      	b.n	900123d2 <vQueueAddToRegistry+0x26>
900123f4:	2207      	movs	r2, #7
900123f6:	e7ec      	b.n	900123d2 <vQueueAddToRegistry+0x26>
900123f8:	24023058 	.word	0x24023058

900123fc <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
900123fc:	b570      	push	{r4, r5, r6, lr}
900123fe:	4605      	mov	r5, r0
90012400:	460e      	mov	r6, r1
90012402:	4614      	mov	r4, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
90012404:	f7fe fdfe 	bl	90011004 <vPortEnterCritical>
90012408:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
9001240c:	2bff      	cmp	r3, #255	; 0xff
9001240e:	d102      	bne.n	90012416 <vQueueWaitForMessageRestricted+0x1a>
90012410:	2300      	movs	r3, #0
90012412:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
90012416:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
9001241a:	2bff      	cmp	r3, #255	; 0xff
9001241c:	d102      	bne.n	90012424 <vQueueWaitForMessageRestricted+0x28>
9001241e:	2300      	movs	r3, #0
90012420:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
90012424:	f7fe fe10 	bl	90011048 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
90012428:	6bab      	ldr	r3, [r5, #56]	; 0x38
9001242a:	2b00      	cmp	r3, #0
9001242c:	d043      	beq.n	900124b6 <vQueueWaitForMessageRestricted+0xba>
	taskENTER_CRITICAL();
9001242e:	f7fe fde9 	bl	90011004 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
90012432:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
90012436:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90012438:	2c00      	cmp	r4, #0
9001243a:	dd14      	ble.n	90012466 <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9001243c:	f105 0624 	add.w	r6, r5, #36	; 0x24
90012440:	e003      	b.n	9001244a <vQueueWaitForMessageRestricted+0x4e>
			--cTxLock;
90012442:	1e63      	subs	r3, r4, #1
90012444:	b2da      	uxtb	r2, r3
90012446:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90012448:	b16a      	cbz	r2, 90012466 <vQueueWaitForMessageRestricted+0x6a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9001244a:	6a6b      	ldr	r3, [r5, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9001244c:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9001244e:	b153      	cbz	r3, 90012466 <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90012450:	f000 fe22 	bl	90013098 <xTaskRemoveFromEventList>
90012454:	2800      	cmp	r0, #0
90012456:	d0f4      	beq.n	90012442 <vQueueWaitForMessageRestricted+0x46>
						vTaskMissedYield();
90012458:	f000 febc 	bl	900131d4 <vTaskMissedYield>
			--cTxLock;
9001245c:	1e63      	subs	r3, r4, #1
9001245e:	b2da      	uxtb	r2, r3
90012460:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90012462:	2a00      	cmp	r2, #0
90012464:	d1f1      	bne.n	9001244a <vQueueWaitForMessageRestricted+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
90012466:	23ff      	movs	r3, #255	; 0xff
90012468:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
	taskEXIT_CRITICAL();
9001246c:	f7fe fdec 	bl	90011048 <vPortExitCritical>
	taskENTER_CRITICAL();
90012470:	f7fe fdc8 	bl	90011004 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
90012474:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
90012478:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9001247a:	2c00      	cmp	r4, #0
9001247c:	dd14      	ble.n	900124a8 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9001247e:	f105 0610 	add.w	r6, r5, #16
90012482:	e003      	b.n	9001248c <vQueueWaitForMessageRestricted+0x90>
				--cRxLock;
90012484:	1e63      	subs	r3, r4, #1
90012486:	b2da      	uxtb	r2, r3
90012488:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9001248a:	b16a      	cbz	r2, 900124a8 <vQueueWaitForMessageRestricted+0xac>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9001248c:	692b      	ldr	r3, [r5, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9001248e:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90012490:	b153      	cbz	r3, 900124a8 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90012492:	f000 fe01 	bl	90013098 <xTaskRemoveFromEventList>
90012496:	2800      	cmp	r0, #0
90012498:	d0f4      	beq.n	90012484 <vQueueWaitForMessageRestricted+0x88>
					vTaskMissedYield();
9001249a:	f000 fe9b 	bl	900131d4 <vTaskMissedYield>
				--cRxLock;
9001249e:	1e63      	subs	r3, r4, #1
900124a0:	b2da      	uxtb	r2, r3
900124a2:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
900124a4:	2a00      	cmp	r2, #0
900124a6:	d1f1      	bne.n	9001248c <vQueueWaitForMessageRestricted+0x90>
		pxQueue->cRxLock = queueUNLOCKED;
900124a8:	23ff      	movs	r3, #255	; 0xff
900124aa:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
	}
900124ae:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
900124b2:	f7fe bdc9 	b.w	90011048 <vPortExitCritical>
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
900124b6:	4622      	mov	r2, r4
900124b8:	4631      	mov	r1, r6
900124ba:	f105 0024 	add.w	r0, r5, #36	; 0x24
900124be:	f000 fda1 	bl	90013004 <vTaskPlaceOnEventListRestricted>
900124c2:	e7b4      	b.n	9001242e <vQueueWaitForMessageRestricted+0x32>

900124c4 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
900124c4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
900124c8:	4605      	mov	r5, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
900124ca:	f7fe fd9b 	bl	90011004 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
900124ce:	4a34      	ldr	r2, [pc, #208]	; (900125a0 <prvAddNewTaskToReadyList+0xdc>)
		if( pxCurrentTCB == NULL )
900124d0:	4e34      	ldr	r6, [pc, #208]	; (900125a4 <prvAddNewTaskToReadyList+0xe0>)
		uxCurrentNumberOfTasks++;
900124d2:	6813      	ldr	r3, [r2, #0]
900124d4:	3301      	adds	r3, #1
900124d6:	6013      	str	r3, [r2, #0]
		if( pxCurrentTCB == NULL )
900124d8:	6833      	ldr	r3, [r6, #0]
900124da:	2b00      	cmp	r3, #0
900124dc:	d032      	beq.n	90012544 <prvAddNewTaskToReadyList+0x80>
		else
		{
			/* If the scheduler is not already running, make this task the
			current task if it is the highest priority task to be created
			so far. */
			if( xSchedulerRunning == pdFALSE )
900124de:	4c32      	ldr	r4, [pc, #200]	; (900125a8 <prvAddNewTaskToReadyList+0xe4>)
900124e0:	6823      	ldr	r3, [r4, #0]
900124e2:	b33b      	cbz	r3, 90012534 <prvAddNewTaskToReadyList+0x70>
			{
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
900124e4:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
900124e6:	4f31      	ldr	r7, [pc, #196]	; (900125ac <prvAddNewTaskToReadyList+0xe8>)
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

		uxTaskNumber++;
900124e8:	4a31      	ldr	r2, [pc, #196]	; (900125b0 <prvAddNewTaskToReadyList+0xec>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
		}
		#endif /* configUSE_TRACE_FACILITY */
		traceTASK_CREATE( pxNewTCB );

		prvAddTaskToReadyList( pxNewTCB );
900124ea:	4932      	ldr	r1, [pc, #200]	; (900125b4 <prvAddNewTaskToReadyList+0xf0>)
		uxTaskNumber++;
900124ec:	6813      	ldr	r3, [r2, #0]
900124ee:	3301      	adds	r3, #1
900124f0:	6013      	str	r3, [r2, #0]
			pxNewTCB->uxTCBNumber = uxTaskNumber;
900124f2:	646b      	str	r3, [r5, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
900124f4:	680b      	ldr	r3, [r1, #0]
900124f6:	4283      	cmp	r3, r0
900124f8:	d200      	bcs.n	900124fc <prvAddNewTaskToReadyList+0x38>
900124fa:	6008      	str	r0, [r1, #0]
900124fc:	eb00 0080 	add.w	r0, r0, r0, lsl #2
90012500:	1d29      	adds	r1, r5, #4
90012502:	eb07 0080 	add.w	r0, r7, r0, lsl #2
90012506:	f7fe fcd9 	bl	90010ebc <vListInsertEnd>

		portSETUP_TCB( pxNewTCB );
	}
	taskEXIT_CRITICAL();
9001250a:	f7fe fd9d 	bl	90011048 <vPortExitCritical>

	if( xSchedulerRunning != pdFALSE )
9001250e:	6823      	ldr	r3, [r4, #0]
90012510:	b173      	cbz	r3, 90012530 <prvAddNewTaskToReadyList+0x6c>
	{
		/* If the created task is of a higher priority than the current task
		then it should run now. */
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
90012512:	6832      	ldr	r2, [r6, #0]
90012514:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
90012516:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
90012518:	429a      	cmp	r2, r3
9001251a:	d209      	bcs.n	90012530 <prvAddNewTaskToReadyList+0x6c>
		{
			taskYIELD_IF_USING_PREEMPTION();
9001251c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
90012520:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
90012524:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
90012528:	f3bf 8f4f 	dsb	sy
9001252c:	f3bf 8f6f 	isb	sy
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
90012530:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
90012534:	6833      	ldr	r3, [r6, #0]
90012536:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
90012538:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001253a:	4f1c      	ldr	r7, [pc, #112]	; (900125ac <prvAddNewTaskToReadyList+0xe8>)
9001253c:	4283      	cmp	r3, r0
9001253e:	d8d3      	bhi.n	900124e8 <prvAddNewTaskToReadyList+0x24>
					pxCurrentTCB = pxNewTCB;
90012540:	6035      	str	r5, [r6, #0]
90012542:	e7d1      	b.n	900124e8 <prvAddNewTaskToReadyList+0x24>
			pxCurrentTCB = pxNewTCB;
90012544:	6035      	str	r5, [r6, #0]
			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
90012546:	6813      	ldr	r3, [r2, #0]
90012548:	2b01      	cmp	r3, #1
9001254a:	d003      	beq.n	90012554 <prvAddNewTaskToReadyList+0x90>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
9001254c:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
9001254e:	4f17      	ldr	r7, [pc, #92]	; (900125ac <prvAddNewTaskToReadyList+0xe8>)
90012550:	4c15      	ldr	r4, [pc, #84]	; (900125a8 <prvAddNewTaskToReadyList+0xe4>)
90012552:	e7c9      	b.n	900124e8 <prvAddNewTaskToReadyList+0x24>
90012554:	4f15      	ldr	r7, [pc, #84]	; (900125ac <prvAddNewTaskToReadyList+0xe8>)
90012556:	463c      	mov	r4, r7
90012558:	f507 688c 	add.w	r8, r7, #1120	; 0x460
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
9001255c:	4620      	mov	r0, r4
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
9001255e:	3414      	adds	r4, #20
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
90012560:	f7fe fc9c 	bl	90010e9c <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
90012564:	45a0      	cmp	r8, r4
90012566:	d1f9      	bne.n	9001255c <prvAddNewTaskToReadyList+0x98>
	}

	vListInitialise( &xDelayedTaskList1 );
90012568:	f8df 9060 	ldr.w	r9, [pc, #96]	; 900125cc <prvAddNewTaskToReadyList+0x108>
	vListInitialise( &xDelayedTaskList2 );
9001256c:	f8df 8060 	ldr.w	r8, [pc, #96]	; 900125d0 <prvAddNewTaskToReadyList+0x10c>
	vListInitialise( &xDelayedTaskList1 );
90012570:	4648      	mov	r0, r9
90012572:	4c0d      	ldr	r4, [pc, #52]	; (900125a8 <prvAddNewTaskToReadyList+0xe4>)
90012574:	f7fe fc92 	bl	90010e9c <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
90012578:	4640      	mov	r0, r8
9001257a:	f7fe fc8f 	bl	90010e9c <vListInitialise>
	vListInitialise( &xPendingReadyList );
9001257e:	480e      	ldr	r0, [pc, #56]	; (900125b8 <prvAddNewTaskToReadyList+0xf4>)
90012580:	f7fe fc8c 	bl	90010e9c <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
90012584:	480d      	ldr	r0, [pc, #52]	; (900125bc <prvAddNewTaskToReadyList+0xf8>)
90012586:	f7fe fc89 	bl	90010e9c <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
9001258a:	480d      	ldr	r0, [pc, #52]	; (900125c0 <prvAddNewTaskToReadyList+0xfc>)
9001258c:	f7fe fc86 	bl	90010e9c <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
90012590:	4b0c      	ldr	r3, [pc, #48]	; (900125c4 <prvAddNewTaskToReadyList+0x100>)
		prvAddTaskToReadyList( pxNewTCB );
90012592:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
	pxDelayedTaskList = &xDelayedTaskList1;
90012594:	f8c3 9000 	str.w	r9, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
90012598:	4b0b      	ldr	r3, [pc, #44]	; (900125c8 <prvAddNewTaskToReadyList+0x104>)
9001259a:	f8c3 8000 	str.w	r8, [r3]
}
9001259e:	e7a3      	b.n	900124e8 <prvAddNewTaskToReadyList+0x24>
900125a0:	24023504 	.word	0x24023504
900125a4:	24023098 	.word	0x24023098
900125a8:	24023560 	.word	0x24023560
900125ac:	240230a4 	.word	0x240230a4
900125b0:	24023510 	.word	0x24023510
900125b4:	24023514 	.word	0x24023514
900125b8:	2402354c 	.word	0x2402354c
900125bc:	24023578 	.word	0x24023578
900125c0:	24023564 	.word	0x24023564
900125c4:	2402309c 	.word	0x2402309c
900125c8:	240230a0 	.word	0x240230a0
900125cc:	24023518 	.word	0x24023518
900125d0:	2402352c 	.word	0x2402352c

900125d4 <prvIdleTask>:
{
900125d4:	b580      	push	{r7, lr}
900125d6:	4c22      	ldr	r4, [pc, #136]	; (90012660 <prvIdleTask+0x8c>)
				taskYIELD();
900125d8:	f04f 29e0 	mov.w	r9, #3758153728	; 0xe000e000
900125dc:	4e21      	ldr	r6, [pc, #132]	; (90012664 <prvIdleTask+0x90>)
900125de:	f04f 5880 	mov.w	r8, #268435456	; 0x10000000
900125e2:	4d21      	ldr	r5, [pc, #132]	; (90012668 <prvIdleTask+0x94>)
900125e4:	4f21      	ldr	r7, [pc, #132]	; (9001266c <prvIdleTask+0x98>)
	{
		TCB_t *pxTCB;

		/* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
		being called too often in the idle task. */
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
900125e6:	6823      	ldr	r3, [r4, #0]
900125e8:	b353      	cbz	r3, 90012640 <prvIdleTask+0x6c>
		{
			taskENTER_CRITICAL();
900125ea:	f7fe fd0b 	bl	90011004 <vPortEnterCritical>
			{
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
900125ee:	68f3      	ldr	r3, [r6, #12]
900125f0:	f8d3 a00c 	ldr.w	sl, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
900125f4:	f10a 0004 	add.w	r0, sl, #4
900125f8:	f7fe fc88 	bl	90010f0c <uxListRemove>
				--uxCurrentNumberOfTasks;
900125fc:	682b      	ldr	r3, [r5, #0]
900125fe:	3b01      	subs	r3, #1
90012600:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
90012602:	6823      	ldr	r3, [r4, #0]
90012604:	3b01      	subs	r3, #1
90012606:	6023      	str	r3, [r4, #0]
			}
			taskEXIT_CRITICAL();
90012608:	f7fe fd1e 	bl	90011048 <vPortExitCritical>
		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolidated for readability reasons. */
		{
			/* The task could have been allocated statically or dynamically, so
			check what was statically allocated before trying to free the
			memory. */
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
9001260c:	f89a 305d 	ldrb.w	r3, [sl, #93]	; 0x5d
90012610:	b163      	cbz	r3, 9001262c <prvIdleTask+0x58>
				/* Both the stack and TCB were allocated dynamically, so both
				must be freed. */
				vPortFree( pxTCB->pxStack );
				vPortFree( pxTCB );
			}
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
90012612:	2b01      	cmp	r3, #1
90012614:	d020      	beq.n	90012658 <prvIdleTask+0x84>
			}
			else
			{
				/* Neither the stack nor the TCB were allocated dynamically, so
				nothing needs to be freed. */
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
90012616:	2b02      	cmp	r3, #2
90012618:	d0e5      	beq.n	900125e6 <prvIdleTask+0x12>
9001261a:	f04f 0350 	mov.w	r3, #80	; 0x50
9001261e:	f383 8811 	msr	BASEPRI, r3
90012622:	f3bf 8f6f 	isb	sy
90012626:	f3bf 8f4f 	dsb	sy
9001262a:	e7fe      	b.n	9001262a <prvIdleTask+0x56>
				vPortFree( pxTCB->pxStack );
9001262c:	f8da 0030 	ldr.w	r0, [sl, #48]	; 0x30
90012630:	f7fe fbd0 	bl	90010dd4 <vPortFree>
				vPortFree( pxTCB );
90012634:	4650      	mov	r0, sl
90012636:	f7fe fbcd 	bl	90010dd4 <vPortFree>
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
9001263a:	6823      	ldr	r3, [r4, #0]
9001263c:	2b00      	cmp	r3, #0
9001263e:	d1d4      	bne.n	900125ea <prvIdleTask+0x16>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
90012640:	683b      	ldr	r3, [r7, #0]
90012642:	2b01      	cmp	r3, #1
90012644:	d905      	bls.n	90012652 <prvIdleTask+0x7e>
				taskYIELD();
90012646:	f8c9 8d04 	str.w	r8, [r9, #3332]	; 0xd04
9001264a:	f3bf 8f4f 	dsb	sy
9001264e:	f3bf 8f6f 	isb	sy
			vApplicationIdleHook();
90012652:	f7f2 faf5 	bl	90004c40 <vApplicationIdleHook>
		prvCheckTasksWaitingTermination();
90012656:	e7c6      	b.n	900125e6 <prvIdleTask+0x12>
				vPortFree( pxTCB );
90012658:	4650      	mov	r0, sl
9001265a:	f7fe fbbb 	bl	90010dd4 <vPortFree>
9001265e:	e7c2      	b.n	900125e6 <prvIdleTask+0x12>
90012660:	24023508 	.word	0x24023508
90012664:	24023578 	.word	0x24023578
90012668:	24023504 	.word	0x24023504
9001266c:	240230a4 	.word	0x240230a4

90012670 <xTaskIncrementTick.part.0>:
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
90012670:	4b4a      	ldr	r3, [pc, #296]	; (9001279c <xTaskIncrementTick.part.0+0x12c>)
BaseType_t xTaskIncrementTick( void )
90012672:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
90012676:	681e      	ldr	r6, [r3, #0]
BaseType_t xTaskIncrementTick( void )
90012678:	b083      	sub	sp, #12
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
9001267a:	3601      	adds	r6, #1
		xTickCount = xConstTickCount;
9001267c:	601e      	str	r6, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
9001267e:	2e00      	cmp	r6, #0
90012680:	d040      	beq.n	90012704 <xTaskIncrementTick.part.0+0x94>
90012682:	f8df b12c 	ldr.w	fp, [pc, #300]	; 900127b0 <xTaskIncrementTick.part.0+0x140>
		if( xConstTickCount >= xNextTaskUnblockTime )
90012686:	f8db 3000 	ldr.w	r3, [fp]
9001268a:	429e      	cmp	r6, r3
9001268c:	d347      	bcc.n	9001271e <xTaskIncrementTick.part.0+0xae>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9001268e:	4f44      	ldr	r7, [pc, #272]	; (900127a0 <xTaskIncrementTick.part.0+0x130>)
90012690:	683b      	ldr	r3, [r7, #0]
90012692:	681d      	ldr	r5, [r3, #0]
90012694:	2d00      	cmp	r5, #0
90012696:	d077      	beq.n	90012788 <xTaskIncrementTick.part.0+0x118>
BaseType_t xSwitchRequired = pdFALSE;
90012698:	2500      	movs	r5, #0
9001269a:	f8df 9118 	ldr.w	r9, [pc, #280]	; 900127b4 <xTaskIncrementTick.part.0+0x144>
9001269e:	f8df a118 	ldr.w	sl, [pc, #280]	; 900127b8 <xTaskIncrementTick.part.0+0x148>
					prvAddTaskToReadyList( pxTCB );
900126a2:	f8df 8118 	ldr.w	r8, [pc, #280]	; 900127bc <xTaskIncrementTick.part.0+0x14c>
900126a6:	e022      	b.n	900126ee <xTaskIncrementTick.part.0+0x7e>
900126a8:	9101      	str	r1, [sp, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
900126aa:	f7fe fc2f 	bl	90010f0c <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
900126ae:	6aa3      	ldr	r3, [r4, #40]	; 0x28
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
900126b0:	f104 0018 	add.w	r0, r4, #24
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
900126b4:	9901      	ldr	r1, [sp, #4]
900126b6:	b113      	cbz	r3, 900126be <xTaskIncrementTick.part.0+0x4e>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
900126b8:	f7fe fc28 	bl	90010f0c <uxListRemove>
900126bc:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
900126be:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
900126c0:	f8d8 2000 	ldr.w	r2, [r8]
900126c4:	eb03 0083 	add.w	r0, r3, r3, lsl #2
900126c8:	4293      	cmp	r3, r2
900126ca:	eb09 0080 	add.w	r0, r9, r0, lsl #2
900126ce:	d901      	bls.n	900126d4 <xTaskIncrementTick.part.0+0x64>
900126d0:	f8c8 3000 	str.w	r3, [r8]
900126d4:	f7fe fbf2 	bl	90010ebc <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
900126d8:	f8da 2000 	ldr.w	r2, [sl]
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
900126dc:	683b      	ldr	r3, [r7, #0]
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
900126de:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
900126e0:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
900126e2:	681b      	ldr	r3, [r3, #0]
							xSwitchRequired = pdTRUE;
900126e4:	4291      	cmp	r1, r2
900126e6:	bf28      	it	cs
900126e8:	2501      	movcs	r5, #1
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
900126ea:	2b00      	cmp	r3, #0
900126ec:	d050      	beq.n	90012790 <xTaskIncrementTick.part.0+0x120>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
900126ee:	683b      	ldr	r3, [r7, #0]
900126f0:	68db      	ldr	r3, [r3, #12]
900126f2:	68dc      	ldr	r4, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
900126f4:	6863      	ldr	r3, [r4, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
900126f6:	1d21      	adds	r1, r4, #4
					if( xConstTickCount < xItemValue )
900126f8:	429e      	cmp	r6, r3
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
900126fa:	4608      	mov	r0, r1
					if( xConstTickCount < xItemValue )
900126fc:	d2d4      	bcs.n	900126a8 <xTaskIncrementTick.part.0+0x38>
						xNextTaskUnblockTime = xItemValue;
900126fe:	f8cb 3000 	str.w	r3, [fp]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
90012702:	e011      	b.n	90012728 <xTaskIncrementTick.part.0+0xb8>
			taskSWITCH_DELAYED_LISTS();
90012704:	4b26      	ldr	r3, [pc, #152]	; (900127a0 <xTaskIncrementTick.part.0+0x130>)
90012706:	681a      	ldr	r2, [r3, #0]
90012708:	6812      	ldr	r2, [r2, #0]
9001270a:	b30a      	cbz	r2, 90012750 <xTaskIncrementTick.part.0+0xe0>
9001270c:	f04f 0350 	mov.w	r3, #80	; 0x50
90012710:	f383 8811 	msr	BASEPRI, r3
90012714:	f3bf 8f6f 	isb	sy
90012718:	f3bf 8f4f 	dsb	sy
9001271c:	e7fe      	b.n	9001271c <xTaskIncrementTick.part.0+0xac>
BaseType_t xSwitchRequired = pdFALSE;
9001271e:	2500      	movs	r5, #0
90012720:	f8df 9090 	ldr.w	r9, [pc, #144]	; 900127b4 <xTaskIncrementTick.part.0+0x144>
90012724:	f8df a090 	ldr.w	sl, [pc, #144]	; 900127b8 <xTaskIncrementTick.part.0+0x148>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
90012728:	f8da 3000 	ldr.w	r3, [sl]
			if( xYieldPending != pdFALSE )
9001272c:	491d      	ldr	r1, [pc, #116]	; (900127a4 <xTaskIncrementTick.part.0+0x134>)
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
9001272e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90012730:	eb03 0383 	add.w	r3, r3, r3, lsl #2
90012734:	009b      	lsls	r3, r3, #2
90012736:	f859 2003 	ldr.w	r2, [r9, r3]
			if( xYieldPending != pdFALSE )
9001273a:	680b      	ldr	r3, [r1, #0]
				xSwitchRequired = pdTRUE;
9001273c:	2a02      	cmp	r2, #2
9001273e:	bf28      	it	cs
90012740:	2501      	movcs	r5, #1
				xSwitchRequired = pdTRUE;
90012742:	2b00      	cmp	r3, #0
}
90012744:	bf0c      	ite	eq
90012746:	4628      	moveq	r0, r5
90012748:	2001      	movne	r0, #1
9001274a:	b003      	add	sp, #12
9001274c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			taskSWITCH_DELAYED_LISTS();
90012750:	4a15      	ldr	r2, [pc, #84]	; (900127a8 <xTaskIncrementTick.part.0+0x138>)
90012752:	6818      	ldr	r0, [r3, #0]
90012754:	6811      	ldr	r1, [r2, #0]
90012756:	6019      	str	r1, [r3, #0]
90012758:	4914      	ldr	r1, [pc, #80]	; (900127ac <xTaskIncrementTick.part.0+0x13c>)
9001275a:	6010      	str	r0, [r2, #0]
9001275c:	680a      	ldr	r2, [r1, #0]
9001275e:	3201      	adds	r2, #1
90012760:	600a      	str	r2, [r1, #0]

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
90012762:	681a      	ldr	r2, [r3, #0]
90012764:	6812      	ldr	r2, [r2, #0]
90012766:	b932      	cbnz	r2, 90012776 <xTaskIncrementTick.part.0+0x106>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
90012768:	f8df b044 	ldr.w	fp, [pc, #68]	; 900127b0 <xTaskIncrementTick.part.0+0x140>
9001276c:	f04f 33ff 	mov.w	r3, #4294967295
90012770:	f8cb 3000 	str.w	r3, [fp]
90012774:	e787      	b.n	90012686 <xTaskIncrementTick.part.0+0x16>
	{
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90012776:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
90012778:	f8df b034 	ldr.w	fp, [pc, #52]	; 900127b0 <xTaskIncrementTick.part.0+0x140>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9001277c:	68db      	ldr	r3, [r3, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
9001277e:	68db      	ldr	r3, [r3, #12]
90012780:	685b      	ldr	r3, [r3, #4]
90012782:	f8cb 3000 	str.w	r3, [fp]
	}
}
90012786:	e77e      	b.n	90012686 <xTaskIncrementTick.part.0+0x16>
90012788:	f8df 9028 	ldr.w	r9, [pc, #40]	; 900127b4 <xTaskIncrementTick.part.0+0x144>
9001278c:	f8df a028 	ldr.w	sl, [pc, #40]	; 900127b8 <xTaskIncrementTick.part.0+0x148>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90012790:	f04f 33ff 	mov.w	r3, #4294967295
90012794:	f8cb 3000 	str.w	r3, [fp]
					break;
90012798:	e7c6      	b.n	90012728 <xTaskIncrementTick.part.0+0xb8>
9001279a:	bf00      	nop
9001279c:	2402358c 	.word	0x2402358c
900127a0:	2402309c 	.word	0x2402309c
900127a4:	24023590 	.word	0x24023590
900127a8:	240230a0 	.word	0x240230a0
900127ac:	24023544 	.word	0x24023544
900127b0:	24023540 	.word	0x24023540
900127b4:	240230a4 	.word	0x240230a4
900127b8:	24023098 	.word	0x24023098
900127bc:	24023514 	.word	0x24023514

900127c0 <xTaskResumeAll.part.0>:
BaseType_t xTaskResumeAll( void )
900127c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		--uxSchedulerSuspended;
900127c4:	4d41      	ldr	r5, [pc, #260]	; (900128cc <xTaskResumeAll.part.0+0x10c>)
BaseType_t xTaskResumeAll( void )
900127c6:	b083      	sub	sp, #12
	taskENTER_CRITICAL();
900127c8:	f7fe fc1c 	bl	90011004 <vPortEnterCritical>
		--uxSchedulerSuspended;
900127cc:	682b      	ldr	r3, [r5, #0]
900127ce:	3b01      	subs	r3, #1
900127d0:	602b      	str	r3, [r5, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
900127d2:	682b      	ldr	r3, [r5, #0]
900127d4:	2b00      	cmp	r3, #0
900127d6:	d161      	bne.n	9001289c <xTaskResumeAll.part.0+0xdc>
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
900127d8:	4b3d      	ldr	r3, [pc, #244]	; (900128d0 <xTaskResumeAll.part.0+0x110>)
900127da:	681b      	ldr	r3, [r3, #0]
900127dc:	2b00      	cmp	r3, #0
900127de:	d05d      	beq.n	9001289c <xTaskResumeAll.part.0+0xdc>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
900127e0:	4e3c      	ldr	r6, [pc, #240]	; (900128d4 <xTaskResumeAll.part.0+0x114>)
900127e2:	6833      	ldr	r3, [r6, #0]
900127e4:	2b00      	cmp	r3, #0
900127e6:	d06e      	beq.n	900128c6 <xTaskResumeAll.part.0+0x106>
900127e8:	4f3b      	ldr	r7, [pc, #236]	; (900128d8 <xTaskResumeAll.part.0+0x118>)
900127ea:	f8df 90fc 	ldr.w	r9, [pc, #252]	; 900128e8 <xTaskResumeAll.part.0+0x128>
900127ee:	f8df 80fc 	ldr.w	r8, [pc, #252]	; 900128ec <xTaskResumeAll.part.0+0x12c>
900127f2:	f8df a0fc 	ldr.w	sl, [pc, #252]	; 900128f0 <xTaskResumeAll.part.0+0x130>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
900127f6:	68f3      	ldr	r3, [r6, #12]
900127f8:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
900127fa:	f104 0b04 	add.w	fp, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
900127fe:	f104 0018 	add.w	r0, r4, #24
90012802:	f7fe fb83 	bl	90010f0c <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
90012806:	4658      	mov	r0, fp
90012808:	f7fe fb80 	bl	90010f0c <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
9001280c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9001280e:	683a      	ldr	r2, [r7, #0]
90012810:	4659      	mov	r1, fp
90012812:	eb03 0083 	add.w	r0, r3, r3, lsl #2
90012816:	4293      	cmp	r3, r2
90012818:	eb09 0080 	add.w	r0, r9, r0, lsl #2
9001281c:	d900      	bls.n	90012820 <xTaskResumeAll.part.0+0x60>
9001281e:	603b      	str	r3, [r7, #0]
90012820:	f7fe fb4c 	bl	90010ebc <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
90012824:	f8d8 3000 	ldr.w	r3, [r8]
90012828:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9001282a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001282c:	429a      	cmp	r2, r3
9001282e:	d33d      	bcc.n	900128ac <xTaskResumeAll.part.0+0xec>
						xYieldPending = pdTRUE;
90012830:	2301      	movs	r3, #1
90012832:	f8ca 3000 	str.w	r3, [sl]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
90012836:	6833      	ldr	r3, [r6, #0]
90012838:	2b00      	cmp	r3, #0
9001283a:	d1dc      	bne.n	900127f6 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9001283c:	4b27      	ldr	r3, [pc, #156]	; (900128dc <xTaskResumeAll.part.0+0x11c>)
9001283e:	681a      	ldr	r2, [r3, #0]
90012840:	6812      	ldr	r2, [r2, #0]
90012842:	2a00      	cmp	r2, #0
90012844:	d03a      	beq.n	900128bc <xTaskResumeAll.part.0+0xfc>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90012846:	681a      	ldr	r2, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
90012848:	4b25      	ldr	r3, [pc, #148]	; (900128e0 <xTaskResumeAll.part.0+0x120>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9001284a:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
9001284c:	68d2      	ldr	r2, [r2, #12]
9001284e:	6852      	ldr	r2, [r2, #4]
90012850:	601a      	str	r2, [r3, #0]
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
90012852:	4e24      	ldr	r6, [pc, #144]	; (900128e4 <xTaskResumeAll.part.0+0x124>)
90012854:	6834      	ldr	r4, [r6, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
90012856:	b194      	cbz	r4, 9001287e <xTaskResumeAll.part.0+0xbe>
								xYieldPending = pdTRUE;
90012858:	2701      	movs	r7, #1
9001285a:	e006      	b.n	9001286a <xTaskResumeAll.part.0+0xaa>
9001285c:	f7ff ff08 	bl	90012670 <xTaskIncrementTick.part.0>
							if( xTaskIncrementTick() != pdFALSE )
90012860:	b108      	cbz	r0, 90012866 <xTaskResumeAll.part.0+0xa6>
								xYieldPending = pdTRUE;
90012862:	f8ca 7000 	str.w	r7, [sl]
						} while( xPendedCounts > ( TickType_t ) 0U );
90012866:	3c01      	subs	r4, #1
90012868:	d008      	beq.n	9001287c <xTaskResumeAll.part.0+0xbc>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
9001286a:	682b      	ldr	r3, [r5, #0]
9001286c:	2b00      	cmp	r3, #0
9001286e:	d0f5      	beq.n	9001285c <xTaskResumeAll.part.0+0x9c>
		++xPendedTicks;
90012870:	6833      	ldr	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
90012872:	3c01      	subs	r4, #1
		++xPendedTicks;
90012874:	f103 0301 	add.w	r3, r3, #1
90012878:	6033      	str	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
9001287a:	d1f6      	bne.n	9001286a <xTaskResumeAll.part.0+0xaa>
						xPendedTicks = 0;
9001287c:	6034      	str	r4, [r6, #0]
				if( xYieldPending != pdFALSE )
9001287e:	f8da 3000 	ldr.w	r3, [sl]
90012882:	b15b      	cbz	r3, 9001289c <xTaskResumeAll.part.0+0xdc>
					taskYIELD_IF_USING_PREEMPTION();
90012884:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
90012888:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9001288c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
90012890:	f3bf 8f4f 	dsb	sy
90012894:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
90012898:	2001      	movs	r0, #1
9001289a:	e000      	b.n	9001289e <xTaskResumeAll.part.0+0xde>
BaseType_t xAlreadyYielded = pdFALSE;
9001289c:	2000      	movs	r0, #0
9001289e:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
900128a0:	f7fe fbd2 	bl	90011048 <vPortExitCritical>
}
900128a4:	9801      	ldr	r0, [sp, #4]
900128a6:	b003      	add	sp, #12
900128a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
900128ac:	6833      	ldr	r3, [r6, #0]
900128ae:	2b00      	cmp	r3, #0
900128b0:	d1a1      	bne.n	900127f6 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
900128b2:	4b0a      	ldr	r3, [pc, #40]	; (900128dc <xTaskResumeAll.part.0+0x11c>)
900128b4:	681a      	ldr	r2, [r3, #0]
900128b6:	6812      	ldr	r2, [r2, #0]
900128b8:	2a00      	cmp	r2, #0
900128ba:	d1c4      	bne.n	90012846 <xTaskResumeAll.part.0+0x86>
		xNextTaskUnblockTime = portMAX_DELAY;
900128bc:	4b08      	ldr	r3, [pc, #32]	; (900128e0 <xTaskResumeAll.part.0+0x120>)
900128be:	f04f 32ff 	mov.w	r2, #4294967295
900128c2:	601a      	str	r2, [r3, #0]
900128c4:	e7c5      	b.n	90012852 <xTaskResumeAll.part.0+0x92>
900128c6:	f8df a028 	ldr.w	sl, [pc, #40]	; 900128f0 <xTaskResumeAll.part.0+0x130>
900128ca:	e7c2      	b.n	90012852 <xTaskResumeAll.part.0+0x92>
900128cc:	2402350c 	.word	0x2402350c
900128d0:	24023504 	.word	0x24023504
900128d4:	2402354c 	.word	0x2402354c
900128d8:	24023514 	.word	0x24023514
900128dc:	2402309c 	.word	0x2402309c
900128e0:	24023540 	.word	0x24023540
900128e4:	24023548 	.word	0x24023548
900128e8:	240230a4 	.word	0x240230a4
900128ec:	24023098 	.word	0x24023098
900128f0:	24023590 	.word	0x24023590

900128f4 <xTaskCreateStatic>:
	{
900128f4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900128f8:	b083      	sub	sp, #12
900128fa:	4698      	mov	r8, r3
		configASSERT( puxStackBuffer != NULL );
900128fc:	e9dd 340b 	ldrd	r3, r4, [sp, #44]	; 0x2c
90012900:	b1bb      	cbz	r3, 90012932 <xTaskCreateStatic+0x3e>
		configASSERT( pxTaskBuffer != NULL );
90012902:	b16c      	cbz	r4, 90012920 <xTaskCreateStatic+0x2c>
			volatile size_t xSize = sizeof( StaticTask_t );
90012904:	2360      	movs	r3, #96	; 0x60
90012906:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( TCB_t ) );
90012908:	9b01      	ldr	r3, [sp, #4]
9001290a:	2b60      	cmp	r3, #96	; 0x60
9001290c:	d01a      	beq.n	90012944 <xTaskCreateStatic+0x50>
9001290e:	f04f 0350 	mov.w	r3, #80	; 0x50
90012912:	f383 8811 	msr	BASEPRI, r3
90012916:	f3bf 8f6f 	isb	sy
9001291a:	f3bf 8f4f 	dsb	sy
9001291e:	e7fe      	b.n	9001291e <xTaskCreateStatic+0x2a>
90012920:	f04f 0350 	mov.w	r3, #80	; 0x50
90012924:	f383 8811 	msr	BASEPRI, r3
90012928:	f3bf 8f6f 	isb	sy
9001292c:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
90012930:	e7fe      	b.n	90012930 <xTaskCreateStatic+0x3c>
90012932:	f04f 0350 	mov.w	r3, #80	; 0x50
90012936:	f383 8811 	msr	BASEPRI, r3
9001293a:	f3bf 8f6f 	isb	sy
9001293e:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
90012942:	e7fe      	b.n	90012942 <xTaskCreateStatic+0x4e>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
90012944:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
90012946:	0096      	lsls	r6, r2, #2
90012948:	4607      	mov	r7, r0
9001294a:	460d      	mov	r5, r1
9001294c:	4618      	mov	r0, r3
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
9001294e:	6323      	str	r3, [r4, #48]	; 0x30
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
90012950:	9b01      	ldr	r3, [sp, #4]
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
90012952:	2302      	movs	r3, #2
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
90012954:	4632      	mov	r2, r6
90012956:	21a5      	movs	r1, #165	; 0xa5
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
90012958:	f884 305d 	strb.w	r3, [r4, #93]	; 0x5d
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9001295c:	f017 fc86 	bl	9002a26c <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
90012960:	1f32      	subs	r2, r6, #4
90012962:	6b23      	ldr	r3, [r4, #48]	; 0x30
90012964:	4413      	add	r3, r2
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
90012966:	f023 0907 	bic.w	r9, r3, #7
	if( pcName != NULL )
9001296a:	2d00      	cmp	r5, #0
9001296c:	d069      	beq.n	90012a42 <xTaskCreateStatic+0x14e>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9001296e:	782b      	ldrb	r3, [r5, #0]
90012970:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
			if( pcName[ x ] == ( char ) 0x00 )
90012974:	2b00      	cmp	r3, #0
90012976:	d03b      	beq.n	900129f0 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90012978:	786b      	ldrb	r3, [r5, #1]
9001297a:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
			if( pcName[ x ] == ( char ) 0x00 )
9001297e:	2b00      	cmp	r3, #0
90012980:	d036      	beq.n	900129f0 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90012982:	78ab      	ldrb	r3, [r5, #2]
90012984:	f884 3036 	strb.w	r3, [r4, #54]	; 0x36
			if( pcName[ x ] == ( char ) 0x00 )
90012988:	b393      	cbz	r3, 900129f0 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9001298a:	78eb      	ldrb	r3, [r5, #3]
9001298c:	f884 3037 	strb.w	r3, [r4, #55]	; 0x37
			if( pcName[ x ] == ( char ) 0x00 )
90012990:	b373      	cbz	r3, 900129f0 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90012992:	792b      	ldrb	r3, [r5, #4]
90012994:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
			if( pcName[ x ] == ( char ) 0x00 )
90012998:	b353      	cbz	r3, 900129f0 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9001299a:	796b      	ldrb	r3, [r5, #5]
9001299c:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
			if( pcName[ x ] == ( char ) 0x00 )
900129a0:	b333      	cbz	r3, 900129f0 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
900129a2:	79ab      	ldrb	r3, [r5, #6]
900129a4:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
900129a8:	b313      	cbz	r3, 900129f0 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
900129aa:	79eb      	ldrb	r3, [r5, #7]
900129ac:	f884 303b 	strb.w	r3, [r4, #59]	; 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
900129b0:	b1f3      	cbz	r3, 900129f0 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
900129b2:	7a2b      	ldrb	r3, [r5, #8]
900129b4:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
900129b8:	b1d3      	cbz	r3, 900129f0 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
900129ba:	7a6b      	ldrb	r3, [r5, #9]
900129bc:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
900129c0:	b1b3      	cbz	r3, 900129f0 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
900129c2:	7aab      	ldrb	r3, [r5, #10]
900129c4:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
900129c8:	b193      	cbz	r3, 900129f0 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
900129ca:	7aeb      	ldrb	r3, [r5, #11]
900129cc:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
900129d0:	b173      	cbz	r3, 900129f0 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
900129d2:	7b2b      	ldrb	r3, [r5, #12]
900129d4:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
			if( pcName[ x ] == ( char ) 0x00 )
900129d8:	b153      	cbz	r3, 900129f0 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
900129da:	7b6b      	ldrb	r3, [r5, #13]
900129dc:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
			if( pcName[ x ] == ( char ) 0x00 )
900129e0:	b133      	cbz	r3, 900129f0 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
900129e2:	7bab      	ldrb	r3, [r5, #14]
900129e4:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
			if( pcName[ x ] == ( char ) 0x00 )
900129e8:	b113      	cbz	r3, 900129f0 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
900129ea:	7beb      	ldrb	r3, [r5, #15]
900129ec:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
900129f0:	2300      	movs	r3, #0
900129f2:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
900129f6:	9d0a      	ldr	r5, [sp, #40]	; 0x28
		pxNewTCB->uxMutexesHeld = 0;
900129f8:	2600      	movs	r6, #0
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
900129fa:	1d20      	adds	r0, r4, #4
900129fc:	2d37      	cmp	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
900129fe:	6526      	str	r6, [r4, #80]	; 0x50
90012a00:	bf28      	it	cs
90012a02:	2537      	movcs	r5, #55	; 0x37
	pxNewTCB->uxPriority = uxPriority;
90012a04:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
90012a06:	64e5      	str	r5, [r4, #76]	; 0x4c
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90012a08:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
90012a0c:	f7fe fa52 	bl	90010eb4 <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
90012a10:	f104 0018 	add.w	r0, r4, #24
90012a14:	f7fe fa4e 	bl	90010eb4 <vListInitialiseItem>
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
90012a18:	4642      	mov	r2, r8
90012a1a:	4639      	mov	r1, r7
		pxNewTCB->ulNotifiedValue = 0;
90012a1c:	65a6      	str	r6, [r4, #88]	; 0x58
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
90012a1e:	4648      	mov	r0, r9
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90012a20:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
90012a22:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
90012a24:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
90012a26:	6566      	str	r6, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
90012a28:	f884 605c 	strb.w	r6, [r4, #92]	; 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
90012a2c:	f7fe fac0 	bl	90010fb0 <pxPortInitialiseStack>
90012a30:	4603      	mov	r3, r0
			prvAddNewTaskToReadyList( pxNewTCB );
90012a32:	4620      	mov	r0, r4
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
90012a34:	6023      	str	r3, [r4, #0]
			prvAddNewTaskToReadyList( pxNewTCB );
90012a36:	f7ff fd45 	bl	900124c4 <prvAddNewTaskToReadyList>
	}
90012a3a:	4620      	mov	r0, r4
90012a3c:	b003      	add	sp, #12
90012a3e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
90012a42:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
90012a46:	e7d6      	b.n	900129f6 <xTaskCreateStatic+0x102>

90012a48 <xTaskCreate>:
	{
90012a48:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
90012a4c:	0096      	lsls	r6, r2, #2
	{
90012a4e:	4680      	mov	r8, r0
90012a50:	460d      	mov	r5, r1
90012a52:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
90012a54:	4630      	mov	r0, r6
90012a56:	f7fe f8ff 	bl	90010c58 <pvPortMalloc>
			if( pxStack != NULL )
90012a5a:	2800      	cmp	r0, #0
90012a5c:	f000 8083 	beq.w	90012b66 <xTaskCreate+0x11e>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
90012a60:	4607      	mov	r7, r0
90012a62:	2060      	movs	r0, #96	; 0x60
90012a64:	f7fe f8f8 	bl	90010c58 <pvPortMalloc>
				if( pxNewTCB != NULL )
90012a68:	4604      	mov	r4, r0
90012a6a:	2800      	cmp	r0, #0
90012a6c:	d07f      	beq.n	90012b6e <xTaskCreate+0x126>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
90012a6e:	2300      	movs	r3, #0
					pxNewTCB->pxStack = pxStack;
90012a70:	6307      	str	r7, [r0, #48]	; 0x30
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
90012a72:	4632      	mov	r2, r6
90012a74:	4638      	mov	r0, r7
90012a76:	21a5      	movs	r1, #165	; 0xa5
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
90012a78:	f884 305d 	strb.w	r3, [r4, #93]	; 0x5d
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
90012a7c:	f017 fbf6 	bl	9002a26c <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
90012a80:	f8d4 a030 	ldr.w	sl, [r4, #48]	; 0x30
	if( pcName != NULL )
90012a84:	2d00      	cmp	r5, #0
90012a86:	d078      	beq.n	90012b7a <xTaskCreate+0x132>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90012a88:	782b      	ldrb	r3, [r5, #0]
90012a8a:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
			if( pcName[ x ] == ( char ) 0x00 )
90012a8e:	2b00      	cmp	r3, #0
90012a90:	d03b      	beq.n	90012b0a <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90012a92:	786b      	ldrb	r3, [r5, #1]
90012a94:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
			if( pcName[ x ] == ( char ) 0x00 )
90012a98:	2b00      	cmp	r3, #0
90012a9a:	d036      	beq.n	90012b0a <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90012a9c:	78ab      	ldrb	r3, [r5, #2]
90012a9e:	f884 3036 	strb.w	r3, [r4, #54]	; 0x36
			if( pcName[ x ] == ( char ) 0x00 )
90012aa2:	b393      	cbz	r3, 90012b0a <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90012aa4:	78eb      	ldrb	r3, [r5, #3]
90012aa6:	f884 3037 	strb.w	r3, [r4, #55]	; 0x37
			if( pcName[ x ] == ( char ) 0x00 )
90012aaa:	b373      	cbz	r3, 90012b0a <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90012aac:	792b      	ldrb	r3, [r5, #4]
90012aae:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
			if( pcName[ x ] == ( char ) 0x00 )
90012ab2:	b353      	cbz	r3, 90012b0a <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90012ab4:	796b      	ldrb	r3, [r5, #5]
90012ab6:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
			if( pcName[ x ] == ( char ) 0x00 )
90012aba:	b333      	cbz	r3, 90012b0a <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90012abc:	79ab      	ldrb	r3, [r5, #6]
90012abe:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
90012ac2:	b313      	cbz	r3, 90012b0a <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90012ac4:	79eb      	ldrb	r3, [r5, #7]
90012ac6:	f884 303b 	strb.w	r3, [r4, #59]	; 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
90012aca:	b1f3      	cbz	r3, 90012b0a <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90012acc:	7a2b      	ldrb	r3, [r5, #8]
90012ace:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
90012ad2:	b1d3      	cbz	r3, 90012b0a <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90012ad4:	7a6b      	ldrb	r3, [r5, #9]
90012ad6:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
90012ada:	b1b3      	cbz	r3, 90012b0a <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90012adc:	7aab      	ldrb	r3, [r5, #10]
90012ade:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
90012ae2:	b193      	cbz	r3, 90012b0a <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90012ae4:	7aeb      	ldrb	r3, [r5, #11]
90012ae6:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
90012aea:	b173      	cbz	r3, 90012b0a <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90012aec:	7b2b      	ldrb	r3, [r5, #12]
90012aee:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
			if( pcName[ x ] == ( char ) 0x00 )
90012af2:	b153      	cbz	r3, 90012b0a <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90012af4:	7b6b      	ldrb	r3, [r5, #13]
90012af6:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
			if( pcName[ x ] == ( char ) 0x00 )
90012afa:	b133      	cbz	r3, 90012b0a <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90012afc:	7bab      	ldrb	r3, [r5, #14]
90012afe:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
			if( pcName[ x ] == ( char ) 0x00 )
90012b02:	b113      	cbz	r3, 90012b0a <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90012b04:	7beb      	ldrb	r3, [r5, #15]
90012b06:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
90012b0a:	2300      	movs	r3, #0
90012b0c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
90012b10:	9d08      	ldr	r5, [sp, #32]
		pxNewTCB->uxMutexesHeld = 0;
90012b12:	2700      	movs	r7, #0
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
90012b14:	1d20      	adds	r0, r4, #4
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
90012b16:	3e04      	subs	r6, #4
90012b18:	2d37      	cmp	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
90012b1a:	6527      	str	r7, [r4, #80]	; 0x50
90012b1c:	bf28      	it	cs
90012b1e:	2537      	movcs	r5, #55	; 0x37
	pxNewTCB->uxPriority = uxPriority;
90012b20:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
90012b22:	64e5      	str	r5, [r4, #76]	; 0x4c
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90012b24:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
90012b28:	f7fe f9c4 	bl	90010eb4 <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
90012b2c:	f104 0018 	add.w	r0, r4, #24
90012b30:	f7fe f9c0 	bl	90010eb4 <vListInitialiseItem>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
90012b34:	eb0a 0006 	add.w	r0, sl, r6
		pxNewTCB->ulNotifiedValue = 0;
90012b38:	65a7      	str	r7, [r4, #88]	; 0x58
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
90012b3a:	464a      	mov	r2, r9
90012b3c:	4641      	mov	r1, r8
90012b3e:	f020 0007 	bic.w	r0, r0, #7
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90012b42:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
90012b44:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
90012b46:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
90012b48:	6567      	str	r7, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
90012b4a:	f884 705c 	strb.w	r7, [r4, #92]	; 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
90012b4e:	f7fe fa2f 	bl	90010fb0 <pxPortInitialiseStack>
	if( pxCreatedTask != NULL )
90012b52:	9b09      	ldr	r3, [sp, #36]	; 0x24
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
90012b54:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
90012b56:	b103      	cbz	r3, 90012b5a <xTaskCreate+0x112>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
90012b58:	601c      	str	r4, [r3, #0]
			prvAddNewTaskToReadyList( pxNewTCB );
90012b5a:	4620      	mov	r0, r4
90012b5c:	f7ff fcb2 	bl	900124c4 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
90012b60:	2001      	movs	r0, #1
	}
90012b62:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
90012b66:	f04f 30ff 	mov.w	r0, #4294967295
	}
90012b6a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
					vPortFree( pxStack );
90012b6e:	4638      	mov	r0, r7
90012b70:	f7fe f930 	bl	90010dd4 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
90012b74:	f04f 30ff 	mov.w	r0, #4294967295
90012b78:	e7f3      	b.n	90012b62 <xTaskCreate+0x11a>
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
90012b7a:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
90012b7e:	e7c7      	b.n	90012b10 <xTaskCreate+0xc8>

90012b80 <vTaskDelay>:
	{
90012b80:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
90012b82:	b950      	cbnz	r0, 90012b9a <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
90012b84:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
90012b88:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
90012b8c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
90012b90:	f3bf 8f4f 	dsb	sy
90012b94:	f3bf 8f6f 	isb	sy
	}
90012b98:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			configASSERT( uxSchedulerSuspended == 0 );
90012b9a:	4d1e      	ldr	r5, [pc, #120]	; (90012c14 <vTaskDelay+0x94>)
90012b9c:	682b      	ldr	r3, [r5, #0]
90012b9e:	b143      	cbz	r3, 90012bb2 <vTaskDelay+0x32>
90012ba0:	f04f 0350 	mov.w	r3, #80	; 0x50
90012ba4:	f383 8811 	msr	BASEPRI, r3
90012ba8:	f3bf 8f6f 	isb	sy
90012bac:	f3bf 8f4f 	dsb	sy
90012bb0:	e7fe      	b.n	90012bb0 <vTaskDelay+0x30>
	++uxSchedulerSuspended;
90012bb2:	682b      	ldr	r3, [r5, #0]
90012bb4:	4604      	mov	r4, r0
90012bb6:	3301      	adds	r3, #1
90012bb8:	602b      	str	r3, [r5, #0]
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
90012bba:	4b17      	ldr	r3, [pc, #92]	; (90012c18 <vTaskDelay+0x98>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
90012bbc:	4e17      	ldr	r6, [pc, #92]	; (90012c1c <vTaskDelay+0x9c>)
const TickType_t xConstTickCount = xTickCount;
90012bbe:	681f      	ldr	r7, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
90012bc0:	6830      	ldr	r0, [r6, #0]
90012bc2:	3004      	adds	r0, #4
90012bc4:	f7fe f9a2 	bl	90010f0c <uxListRemove>
		else
		{
			/* Calculate the time at which the task should be woken if the event
			does not occur.  This may overflow but this doesn't matter, the
			kernel will manage it correctly. */
			xTimeToWake = xConstTickCount + xTicksToWait;
90012bc8:	19e4      	adds	r4, r4, r7

			/* The list item will be inserted in wake time order. */
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
90012bca:	6833      	ldr	r3, [r6, #0]
90012bcc:	605c      	str	r4, [r3, #4]

			if( xTimeToWake < xConstTickCount )
90012bce:	d315      	bcc.n	90012bfc <vTaskDelay+0x7c>
			{
				/* Wake time has overflowed.  Place this item in the overflow
				list. */
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
90012bd0:	4b13      	ldr	r3, [pc, #76]	; (90012c20 <vTaskDelay+0xa0>)
90012bd2:	6818      	ldr	r0, [r3, #0]
90012bd4:	6831      	ldr	r1, [r6, #0]
90012bd6:	3104      	adds	r1, #4
90012bd8:	f7fe f980 	bl	90010edc <vListInsert>
	configASSERT( uxSchedulerSuspended );
90012bdc:	682b      	ldr	r3, [r5, #0]
90012bde:	b943      	cbnz	r3, 90012bf2 <vTaskDelay+0x72>
90012be0:	f04f 0350 	mov.w	r3, #80	; 0x50
90012be4:	f383 8811 	msr	BASEPRI, r3
90012be8:	f3bf 8f6f 	isb	sy
90012bec:	f3bf 8f4f 	dsb	sy
90012bf0:	e7fe      	b.n	90012bf0 <vTaskDelay+0x70>
90012bf2:	f7ff fde5 	bl	900127c0 <xTaskResumeAll.part.0>
		if( xAlreadyYielded == pdFALSE )
90012bf6:	2800      	cmp	r0, #0
90012bf8:	d0c4      	beq.n	90012b84 <vTaskDelay+0x4>
	}
90012bfa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			}
			else
			{
				/* The wake time has not overflowed, so the current block list
				is used. */
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
90012bfc:	4b09      	ldr	r3, [pc, #36]	; (90012c24 <vTaskDelay+0xa4>)
90012bfe:	6818      	ldr	r0, [r3, #0]
90012c00:	6831      	ldr	r1, [r6, #0]
90012c02:	3104      	adds	r1, #4
90012c04:	f7fe f96a 	bl	90010edc <vListInsert>

				/* If the task entering the blocked state was placed at the
				head of the list of blocked tasks then xNextTaskUnblockTime
				needs to be updated too. */
				if( xTimeToWake < xNextTaskUnblockTime )
90012c08:	4b07      	ldr	r3, [pc, #28]	; (90012c28 <vTaskDelay+0xa8>)
90012c0a:	681a      	ldr	r2, [r3, #0]
90012c0c:	4294      	cmp	r4, r2
90012c0e:	d2e5      	bcs.n	90012bdc <vTaskDelay+0x5c>
				{
					xNextTaskUnblockTime = xTimeToWake;
90012c10:	601c      	str	r4, [r3, #0]
90012c12:	e7e3      	b.n	90012bdc <vTaskDelay+0x5c>
90012c14:	2402350c 	.word	0x2402350c
90012c18:	2402358c 	.word	0x2402358c
90012c1c:	24023098 	.word	0x24023098
90012c20:	240230a0 	.word	0x240230a0
90012c24:	2402309c 	.word	0x2402309c
90012c28:	24023540 	.word	0x24023540

90012c2c <vTaskStartScheduler>:
{
90012c2c:	b570      	push	{r4, r5, r6, lr}
90012c2e:	b084      	sub	sp, #16
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
90012c30:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
90012c32:	4668      	mov	r0, sp
90012c34:	aa02      	add	r2, sp, #8
90012c36:	a901      	add	r1, sp, #4
		StackType_t *pxIdleTaskStackBuffer = NULL;
90012c38:	e9cd 4400 	strd	r4, r4, [sp]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
90012c3c:	f7fd ffee 	bl	90010c1c <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
90012c40:	9d00      	ldr	r5, [sp, #0]
90012c42:	e9dd 0601 	ldrd	r0, r6, [sp, #4]
		configASSERT( puxStackBuffer != NULL );
90012c46:	b1b8      	cbz	r0, 90012c78 <vTaskStartScheduler+0x4c>
		configASSERT( pxTaskBuffer != NULL );
90012c48:	b16d      	cbz	r5, 90012c66 <vTaskStartScheduler+0x3a>
			volatile size_t xSize = sizeof( StaticTask_t );
90012c4a:	2260      	movs	r2, #96	; 0x60
90012c4c:	9203      	str	r2, [sp, #12]
			configASSERT( xSize == sizeof( TCB_t ) );
90012c4e:	9a03      	ldr	r2, [sp, #12]
90012c50:	2a60      	cmp	r2, #96	; 0x60
90012c52:	d01a      	beq.n	90012c8a <vTaskStartScheduler+0x5e>
90012c54:	f04f 0350 	mov.w	r3, #80	; 0x50
90012c58:	f383 8811 	msr	BASEPRI, r3
90012c5c:	f3bf 8f6f 	isb	sy
90012c60:	f3bf 8f4f 	dsb	sy
90012c64:	e7fe      	b.n	90012c64 <vTaskStartScheduler+0x38>
90012c66:	f04f 0350 	mov.w	r3, #80	; 0x50
90012c6a:	f383 8811 	msr	BASEPRI, r3
90012c6e:	f3bf 8f6f 	isb	sy
90012c72:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
90012c76:	e7fe      	b.n	90012c76 <vTaskStartScheduler+0x4a>
90012c78:	f04f 0350 	mov.w	r3, #80	; 0x50
90012c7c:	f383 8811 	msr	BASEPRI, r3
90012c80:	f3bf 8f6f 	isb	sy
90012c84:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
90012c88:	e7fe      	b.n	90012c88 <vTaskStartScheduler+0x5c>
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
90012c8a:	00b6      	lsls	r6, r6, #2
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
90012c8c:	2302      	movs	r3, #2
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
90012c8e:	21a5      	movs	r1, #165	; 0xa5
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
90012c90:	6328      	str	r0, [r5, #48]	; 0x30
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
90012c92:	4632      	mov	r2, r6
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
90012c94:	f885 305d 	strb.w	r3, [r5, #93]	; 0x5d
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
90012c98:	9b03      	ldr	r3, [sp, #12]
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
90012c9a:	f017 fae7 	bl	9002a26c <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
90012c9e:	1f33      	subs	r3, r6, #4
90012ca0:	6b2a      	ldr	r2, [r5, #48]	; 0x30
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90012ca2:	492a      	ldr	r1, [pc, #168]	; (90012d4c <vTaskStartScheduler+0x120>)
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
90012ca4:	1d28      	adds	r0, r5, #4
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
90012ca6:	441a      	add	r2, r3
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90012ca8:	f885 4038 	strb.w	r4, [r5, #56]	; 0x38
90012cac:	6369      	str	r1, [r5, #52]	; 0x34
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
90012cae:	f885 4043 	strb.w	r4, [r5, #67]	; 0x43
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
90012cb2:	f022 0607 	bic.w	r6, r2, #7
	pxNewTCB->uxPriority = uxPriority;
90012cb6:	62ec      	str	r4, [r5, #44]	; 0x2c
		pxNewTCB->uxMutexesHeld = 0;
90012cb8:	e9c5 4413 	strd	r4, r4, [r5, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
90012cbc:	f7fe f8fa 	bl	90010eb4 <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
90012cc0:	f105 0018 	add.w	r0, r5, #24
90012cc4:	f7fe f8f6 	bl	90010eb4 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90012cc8:	2338      	movs	r3, #56	; 0x38
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
90012cca:	4622      	mov	r2, r4
90012ccc:	4920      	ldr	r1, [pc, #128]	; (90012d50 <vTaskStartScheduler+0x124>)
		pxNewTCB->ulNotifiedValue = 0;
90012cce:	65ac      	str	r4, [r5, #88]	; 0x58
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
90012cd0:	4630      	mov	r0, r6
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90012cd2:	61ab      	str	r3, [r5, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
90012cd4:	612d      	str	r5, [r5, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
90012cd6:	626d      	str	r5, [r5, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
90012cd8:	656c      	str	r4, [r5, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
90012cda:	f885 405c 	strb.w	r4, [r5, #92]	; 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
90012cde:	f7fe f967 	bl	90010fb0 <pxPortInitialiseStack>
90012ce2:	4603      	mov	r3, r0
			prvAddNewTaskToReadyList( pxNewTCB );
90012ce4:	4628      	mov	r0, r5
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
90012ce6:	602b      	str	r3, [r5, #0]
			prvAddNewTaskToReadyList( pxNewTCB );
90012ce8:	f7ff fbec 	bl	900124c4 <prvAddNewTaskToReadyList>
			xReturn = xTimerCreateTimerTask();
90012cec:	f000 fd12 	bl	90013714 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
90012cf0:	2801      	cmp	r0, #1
90012cf2:	d00c      	beq.n	90012d0e <vTaskStartScheduler+0xe2>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
90012cf4:	3001      	adds	r0, #1
90012cf6:	d001      	beq.n	90012cfc <vTaskStartScheduler+0xd0>
}
90012cf8:	b004      	add	sp, #16
90012cfa:	bd70      	pop	{r4, r5, r6, pc}
90012cfc:	f04f 0350 	mov.w	r3, #80	; 0x50
90012d00:	f383 8811 	msr	BASEPRI, r3
90012d04:	f3bf 8f6f 	isb	sy
90012d08:	f3bf 8f4f 	dsb	sy
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
90012d0c:	e7fe      	b.n	90012d0c <vTaskStartScheduler+0xe0>
90012d0e:	f04f 0350 	mov.w	r3, #80	; 0x50
90012d12:	f383 8811 	msr	BASEPRI, r3
90012d16:	f3bf 8f6f 	isb	sy
90012d1a:	f3bf 8f4f 	dsb	sy
		xNextTaskUnblockTime = portMAX_DELAY;
90012d1e:	4b0d      	ldr	r3, [pc, #52]	; (90012d54 <vTaskStartScheduler+0x128>)
90012d20:	f04f 32ff 	mov.w	r2, #4294967295
		xSchedulerRunning = pdTRUE;
90012d24:	490c      	ldr	r1, [pc, #48]	; (90012d58 <vTaskStartScheduler+0x12c>)
		xNextTaskUnblockTime = portMAX_DELAY;
90012d26:	601a      	str	r2, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
90012d28:	4b0c      	ldr	r3, [pc, #48]	; (90012d5c <vTaskStartScheduler+0x130>)
		traceTASK_SWITCHED_IN();
90012d2a:	4a0d      	ldr	r2, [pc, #52]	; (90012d60 <vTaskStartScheduler+0x134>)
		xSchedulerRunning = pdTRUE;
90012d2c:	6008      	str	r0, [r1, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
90012d2e:	601c      	str	r4, [r3, #0]
		traceTASK_SWITCHED_IN();
90012d30:	6813      	ldr	r3, [r2, #0]
		if( xTask == NULL )
90012d32:	b143      	cbz	r3, 90012d46 <vTaskStartScheduler+0x11a>
		if( xTCB->pxTaskTag != NULL )
90012d34:	6d5b      	ldr	r3, [r3, #84]	; 0x54
90012d36:	b10b      	cbz	r3, 90012d3c <vTaskStartScheduler+0x110>
			xReturn = xTCB->pxTaskTag( pvParameter );
90012d38:	2000      	movs	r0, #0
90012d3a:	4798      	blx	r3
}
90012d3c:	b004      	add	sp, #16
90012d3e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		if( xPortStartScheduler() != pdFALSE )
90012d42:	f7fe b9f1 	b.w	90011128 <xPortStartScheduler>
			xTCB = pxCurrentTCB;
90012d46:	6813      	ldr	r3, [r2, #0]
90012d48:	e7f4      	b.n	90012d34 <vTaskStartScheduler+0x108>
90012d4a:	bf00      	nop
90012d4c:	454c4449 	.word	0x454c4449
90012d50:	900125d5 	.word	0x900125d5
90012d54:	24023540 	.word	0x24023540
90012d58:	24023560 	.word	0x24023560
90012d5c:	2402358c 	.word	0x2402358c
90012d60:	24023098 	.word	0x24023098

90012d64 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
90012d64:	4a02      	ldr	r2, [pc, #8]	; (90012d70 <vTaskSuspendAll+0xc>)
90012d66:	6813      	ldr	r3, [r2, #0]
90012d68:	3301      	adds	r3, #1
90012d6a:	6013      	str	r3, [r2, #0]
}
90012d6c:	4770      	bx	lr
90012d6e:	bf00      	nop
90012d70:	2402350c 	.word	0x2402350c

90012d74 <xTaskResumeAll>:
	configASSERT( uxSchedulerSuspended );
90012d74:	4b06      	ldr	r3, [pc, #24]	; (90012d90 <xTaskResumeAll+0x1c>)
90012d76:	681b      	ldr	r3, [r3, #0]
90012d78:	b943      	cbnz	r3, 90012d8c <xTaskResumeAll+0x18>
90012d7a:	f04f 0350 	mov.w	r3, #80	; 0x50
90012d7e:	f383 8811 	msr	BASEPRI, r3
90012d82:	f3bf 8f6f 	isb	sy
90012d86:	f3bf 8f4f 	dsb	sy
90012d8a:	e7fe      	b.n	90012d8a <xTaskResumeAll+0x16>
90012d8c:	f7ff bd18 	b.w	900127c0 <xTaskResumeAll.part.0>
90012d90:	2402350c 	.word	0x2402350c

90012d94 <xTaskGetTickCount>:
		xTicks = xTickCount;
90012d94:	4b01      	ldr	r3, [pc, #4]	; (90012d9c <xTaskGetTickCount+0x8>)
90012d96:	6818      	ldr	r0, [r3, #0]
}
90012d98:	4770      	bx	lr
90012d9a:	bf00      	nop
90012d9c:	2402358c 	.word	0x2402358c

90012da0 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
90012da0:	4b05      	ldr	r3, [pc, #20]	; (90012db8 <xTaskIncrementTick+0x18>)
90012da2:	681b      	ldr	r3, [r3, #0]
90012da4:	b90b      	cbnz	r3, 90012daa <xTaskIncrementTick+0xa>
90012da6:	f7ff bc63 	b.w	90012670 <xTaskIncrementTick.part.0>
		++xPendedTicks;
90012daa:	4a04      	ldr	r2, [pc, #16]	; (90012dbc <xTaskIncrementTick+0x1c>)
}
90012dac:	2000      	movs	r0, #0
		++xPendedTicks;
90012dae:	6813      	ldr	r3, [r2, #0]
90012db0:	3301      	adds	r3, #1
90012db2:	6013      	str	r3, [r2, #0]
}
90012db4:	4770      	bx	lr
90012db6:	bf00      	nop
90012db8:	2402350c 	.word	0x2402350c
90012dbc:	24023548 	.word	0x24023548

90012dc0 <vTaskSetApplicationTaskTag>:
	{
90012dc0:	b538      	push	{r3, r4, r5, lr}
90012dc2:	460d      	mov	r5, r1
		if( xTask == NULL )
90012dc4:	b138      	cbz	r0, 90012dd6 <vTaskSetApplicationTaskTag+0x16>
90012dc6:	4604      	mov	r4, r0
		taskENTER_CRITICAL();
90012dc8:	f7fe f91c 	bl	90011004 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
90012dcc:	6565      	str	r5, [r4, #84]	; 0x54
	}
90012dce:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
90012dd2:	f7fe b939 	b.w	90011048 <vPortExitCritical>
			xTCB = ( TCB_t * ) pxCurrentTCB;
90012dd6:	4b04      	ldr	r3, [pc, #16]	; (90012de8 <vTaskSetApplicationTaskTag+0x28>)
90012dd8:	681c      	ldr	r4, [r3, #0]
		taskENTER_CRITICAL();
90012dda:	f7fe f913 	bl	90011004 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
90012dde:	6565      	str	r5, [r4, #84]	; 0x54
	}
90012de0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
90012de4:	f7fe b930 	b.w	90011048 <vPortExitCritical>
90012de8:	24023098 	.word	0x24023098

90012dec <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
90012dec:	4b27      	ldr	r3, [pc, #156]	; (90012e8c <vTaskSwitchContext+0xa0>)
90012dee:	681b      	ldr	r3, [r3, #0]
90012df0:	b11b      	cbz	r3, 90012dfa <vTaskSwitchContext+0xe>
		xYieldPending = pdTRUE;
90012df2:	4b27      	ldr	r3, [pc, #156]	; (90012e90 <vTaskSwitchContext+0xa4>)
90012df4:	2201      	movs	r2, #1
90012df6:	601a      	str	r2, [r3, #0]
90012df8:	4770      	bx	lr
{
90012dfa:	b570      	push	{r4, r5, r6, lr}
		xYieldPending = pdFALSE;
90012dfc:	4a24      	ldr	r2, [pc, #144]	; (90012e90 <vTaskSwitchContext+0xa4>)
		traceTASK_SWITCHED_OUT();
90012dfe:	4c25      	ldr	r4, [pc, #148]	; (90012e94 <vTaskSwitchContext+0xa8>)
		xYieldPending = pdFALSE;
90012e00:	6013      	str	r3, [r2, #0]
		traceTASK_SWITCHED_OUT();
90012e02:	6823      	ldr	r3, [r4, #0]
		if( xTask == NULL )
90012e04:	2b00      	cmp	r3, #0
90012e06:	d036      	beq.n	90012e76 <vTaskSwitchContext+0x8a>
		if( xTCB->pxTaskTag != NULL )
90012e08:	6d5b      	ldr	r3, [r3, #84]	; 0x54
90012e0a:	b10b      	cbz	r3, 90012e10 <vTaskSwitchContext+0x24>
			xReturn = xTCB->pxTaskTag( pvParameter );
90012e0c:	2001      	movs	r0, #1
90012e0e:	4798      	blx	r3
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90012e10:	4d21      	ldr	r5, [pc, #132]	; (90012e98 <vTaskSwitchContext+0xac>)
90012e12:	4922      	ldr	r1, [pc, #136]	; (90012e9c <vTaskSwitchContext+0xb0>)
90012e14:	682b      	ldr	r3, [r5, #0]
90012e16:	eb03 0283 	add.w	r2, r3, r3, lsl #2
90012e1a:	0098      	lsls	r0, r3, #2
90012e1c:	0092      	lsls	r2, r2, #2
90012e1e:	588a      	ldr	r2, [r1, r2]
90012e20:	b942      	cbnz	r2, 90012e34 <vTaskSwitchContext+0x48>
90012e22:	b1fb      	cbz	r3, 90012e64 <vTaskSwitchContext+0x78>
90012e24:	3b01      	subs	r3, #1
90012e26:	eb03 0283 	add.w	r2, r3, r3, lsl #2
90012e2a:	0098      	lsls	r0, r3, #2
90012e2c:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
90012e30:	2a00      	cmp	r2, #0
90012e32:	d0f6      	beq.n	90012e22 <vTaskSwitchContext+0x36>
90012e34:	4418      	add	r0, r3
90012e36:	eb01 0c80 	add.w	ip, r1, r0, lsl #2
90012e3a:	f8dc 1004 	ldr.w	r1, [ip, #4]
90012e3e:	4662      	mov	r2, ip
90012e40:	6849      	ldr	r1, [r1, #4]
90012e42:	3208      	adds	r2, #8
90012e44:	4291      	cmp	r1, r2
90012e46:	f8cc 1004 	str.w	r1, [ip, #4]
90012e4a:	d01b      	beq.n	90012e84 <vTaskSwitchContext+0x98>
90012e4c:	68ca      	ldr	r2, [r1, #12]
90012e4e:	6022      	str	r2, [r4, #0]
90012e50:	602b      	str	r3, [r5, #0]
		traceTASK_SWITCHED_IN();
90012e52:	6823      	ldr	r3, [r4, #0]
		if( xTask == NULL )
90012e54:	b1a3      	cbz	r3, 90012e80 <vTaskSwitchContext+0x94>
		if( xTCB->pxTaskTag != NULL )
90012e56:	6d5b      	ldr	r3, [r3, #84]	; 0x54
90012e58:	b11b      	cbz	r3, 90012e62 <vTaskSwitchContext+0x76>
			xReturn = xTCB->pxTaskTag( pvParameter );
90012e5a:	2000      	movs	r0, #0
}
90012e5c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			xReturn = xTCB->pxTaskTag( pvParameter );
90012e60:	4718      	bx	r3
}
90012e62:	bd70      	pop	{r4, r5, r6, pc}
90012e64:	f04f 0350 	mov.w	r3, #80	; 0x50
90012e68:	f383 8811 	msr	BASEPRI, r3
90012e6c:	f3bf 8f6f 	isb	sy
90012e70:	f3bf 8f4f 	dsb	sy
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90012e74:	e7fe      	b.n	90012e74 <vTaskSwitchContext+0x88>
			xTCB = pxCurrentTCB;
90012e76:	6823      	ldr	r3, [r4, #0]
		if( xTCB->pxTaskTag != NULL )
90012e78:	6d5b      	ldr	r3, [r3, #84]	; 0x54
90012e7a:	2b00      	cmp	r3, #0
90012e7c:	d1c6      	bne.n	90012e0c <vTaskSwitchContext+0x20>
90012e7e:	e7c7      	b.n	90012e10 <vTaskSwitchContext+0x24>
			xTCB = pxCurrentTCB;
90012e80:	6823      	ldr	r3, [r4, #0]
90012e82:	e7e8      	b.n	90012e56 <vTaskSwitchContext+0x6a>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90012e84:	6849      	ldr	r1, [r1, #4]
90012e86:	f8cc 1004 	str.w	r1, [ip, #4]
90012e8a:	e7df      	b.n	90012e4c <vTaskSwitchContext+0x60>
90012e8c:	2402350c 	.word	0x2402350c
90012e90:	24023590 	.word	0x24023590
90012e94:	24023098 	.word	0x24023098
90012e98:	24023514 	.word	0x24023514
90012e9c:	240230a4 	.word	0x240230a4

90012ea0 <vTaskSuspend>:
	{
90012ea0:	b570      	push	{r4, r5, r6, lr}
90012ea2:	4604      	mov	r4, r0
			pxTCB = prvGetTCBFromHandle( xTaskToSuspend );
90012ea4:	4e2e      	ldr	r6, [pc, #184]	; (90012f60 <vTaskSuspend+0xc0>)
		taskENTER_CRITICAL();
90012ea6:	f7fe f8ad 	bl	90011004 <vPortEnterCritical>
			pxTCB = prvGetTCBFromHandle( xTaskToSuspend );
90012eaa:	2c00      	cmp	r4, #0
90012eac:	d03a      	beq.n	90012f24 <vTaskSuspend+0x84>
			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
90012eae:	1d25      	adds	r5, r4, #4
90012eb0:	4628      	mov	r0, r5
90012eb2:	f7fe f82b 	bl	90010f0c <uxListRemove>
			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
90012eb6:	6aa3      	ldr	r3, [r4, #40]	; 0x28
90012eb8:	b11b      	cbz	r3, 90012ec2 <vTaskSuspend+0x22>
				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
90012eba:	f104 0018 	add.w	r0, r4, #24
90012ebe:	f7fe f825 	bl	90010f0c <uxListRemove>
			vListInsertEnd( &xSuspendedTaskList, &( pxTCB->xStateListItem ) );
90012ec2:	4629      	mov	r1, r5
90012ec4:	4827      	ldr	r0, [pc, #156]	; (90012f64 <vTaskSuspend+0xc4>)
90012ec6:	f7fd fff9 	bl	90010ebc <vListInsertEnd>
				if( pxTCB->ucNotifyState == taskWAITING_NOTIFICATION )
90012eca:	f894 305c 	ldrb.w	r3, [r4, #92]	; 0x5c
90012ece:	2b01      	cmp	r3, #1
90012ed0:	d102      	bne.n	90012ed8 <vTaskSuspend+0x38>
					pxTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
90012ed2:	2300      	movs	r3, #0
90012ed4:	f884 305c 	strb.w	r3, [r4, #92]	; 0x5c
		if( xSchedulerRunning != pdFALSE )
90012ed8:	4d23      	ldr	r5, [pc, #140]	; (90012f68 <vTaskSuspend+0xc8>)
		taskEXIT_CRITICAL();
90012eda:	f7fe f8b5 	bl	90011048 <vPortExitCritical>
		if( xSchedulerRunning != pdFALSE )
90012ede:	682b      	ldr	r3, [r5, #0]
90012ee0:	b98b      	cbnz	r3, 90012f06 <vTaskSuspend+0x66>
		if( pxTCB == pxCurrentTCB )
90012ee2:	6833      	ldr	r3, [r6, #0]
90012ee4:	42a3      	cmp	r3, r4
90012ee6:	d000      	beq.n	90012eea <vTaskSuspend+0x4a>
	}
90012ee8:	bd70      	pop	{r4, r5, r6, pc}
			if( xSchedulerRunning != pdFALSE )
90012eea:	682b      	ldr	r3, [r5, #0]
90012eec:	b30b      	cbz	r3, 90012f32 <vTaskSuspend+0x92>
				configASSERT( uxSchedulerSuspended == 0 );
90012eee:	4b1f      	ldr	r3, [pc, #124]	; (90012f6c <vTaskSuspend+0xcc>)
90012ef0:	681b      	ldr	r3, [r3, #0]
90012ef2:	b333      	cbz	r3, 90012f42 <vTaskSuspend+0xa2>
90012ef4:	f04f 0350 	mov.w	r3, #80	; 0x50
90012ef8:	f383 8811 	msr	BASEPRI, r3
90012efc:	f3bf 8f6f 	isb	sy
90012f00:	f3bf 8f4f 	dsb	sy
90012f04:	e7fe      	b.n	90012f04 <vTaskSuspend+0x64>
			taskENTER_CRITICAL();
90012f06:	f7fe f87d 	bl	90011004 <vPortEnterCritical>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
90012f0a:	4b19      	ldr	r3, [pc, #100]	; (90012f70 <vTaskSuspend+0xd0>)
90012f0c:	681a      	ldr	r2, [r3, #0]
90012f0e:	6812      	ldr	r2, [r2, #0]
90012f10:	b152      	cbz	r2, 90012f28 <vTaskSuspend+0x88>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90012f12:	681a      	ldr	r2, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
90012f14:	4b17      	ldr	r3, [pc, #92]	; (90012f74 <vTaskSuspend+0xd4>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90012f16:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
90012f18:	68d2      	ldr	r2, [r2, #12]
90012f1a:	6852      	ldr	r2, [r2, #4]
90012f1c:	601a      	str	r2, [r3, #0]
			taskEXIT_CRITICAL();
90012f1e:	f7fe f893 	bl	90011048 <vPortExitCritical>
90012f22:	e7de      	b.n	90012ee2 <vTaskSuspend+0x42>
			pxTCB = prvGetTCBFromHandle( xTaskToSuspend );
90012f24:	6834      	ldr	r4, [r6, #0]
90012f26:	e7c2      	b.n	90012eae <vTaskSuspend+0xe>
		xNextTaskUnblockTime = portMAX_DELAY;
90012f28:	4b12      	ldr	r3, [pc, #72]	; (90012f74 <vTaskSuspend+0xd4>)
90012f2a:	f04f 32ff 	mov.w	r2, #4294967295
90012f2e:	601a      	str	r2, [r3, #0]
90012f30:	e7f5      	b.n	90012f1e <vTaskSuspend+0x7e>
				if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == uxCurrentNumberOfTasks ) /*lint !e931 Right has no side effect, just volatile. */
90012f32:	490c      	ldr	r1, [pc, #48]	; (90012f64 <vTaskSuspend+0xc4>)
90012f34:	4a10      	ldr	r2, [pc, #64]	; (90012f78 <vTaskSuspend+0xd8>)
90012f36:	6809      	ldr	r1, [r1, #0]
90012f38:	6812      	ldr	r2, [r2, #0]
90012f3a:	4291      	cmp	r1, r2
90012f3c:	d10c      	bne.n	90012f58 <vTaskSuspend+0xb8>
					pxCurrentTCB = NULL;
90012f3e:	6033      	str	r3, [r6, #0]
	}
90012f40:	bd70      	pop	{r4, r5, r6, pc}
				portYIELD_WITHIN_API();
90012f42:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
90012f46:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
90012f4a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
90012f4e:	f3bf 8f4f 	dsb	sy
90012f52:	f3bf 8f6f 	isb	sy
	}
90012f56:	bd70      	pop	{r4, r5, r6, pc}
90012f58:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
					vTaskSwitchContext();
90012f5c:	f7ff bf46 	b.w	90012dec <vTaskSwitchContext>
90012f60:	24023098 	.word	0x24023098
90012f64:	24023564 	.word	0x24023564
90012f68:	24023560 	.word	0x24023560
90012f6c:	2402350c 	.word	0x2402350c
90012f70:	2402309c 	.word	0x2402309c
90012f74:	24023540 	.word	0x24023540
90012f78:	24023504 	.word	0x24023504

90012f7c <vTaskPlaceOnEventList>:
	configASSERT( pxEventList );
90012f7c:	b1f0      	cbz	r0, 90012fbc <vTaskPlaceOnEventList+0x40>
{
90012f7e:	b570      	push	{r4, r5, r6, lr}
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
90012f80:	4d1a      	ldr	r5, [pc, #104]	; (90012fec <vTaskPlaceOnEventList+0x70>)
90012f82:	460c      	mov	r4, r1
90012f84:	6829      	ldr	r1, [r5, #0]
90012f86:	3118      	adds	r1, #24
90012f88:	f7fd ffa8 	bl	90010edc <vListInsert>
const TickType_t xConstTickCount = xTickCount;
90012f8c:	4b18      	ldr	r3, [pc, #96]	; (90012ff0 <vTaskPlaceOnEventList+0x74>)
90012f8e:	681e      	ldr	r6, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
90012f90:	6828      	ldr	r0, [r5, #0]
90012f92:	3004      	adds	r0, #4
90012f94:	f7fd ffba 	bl	90010f0c <uxListRemove>
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
90012f98:	1c63      	adds	r3, r4, #1
90012f9a:	d020      	beq.n	90012fde <vTaskPlaceOnEventList+0x62>
			xTimeToWake = xConstTickCount + xTicksToWait;
90012f9c:	19a4      	adds	r4, r4, r6
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
90012f9e:	682b      	ldr	r3, [r5, #0]
90012fa0:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
90012fa2:	d214      	bcs.n	90012fce <vTaskPlaceOnEventList+0x52>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
90012fa4:	4b13      	ldr	r3, [pc, #76]	; (90012ff4 <vTaskPlaceOnEventList+0x78>)
90012fa6:	6818      	ldr	r0, [r3, #0]
90012fa8:	6829      	ldr	r1, [r5, #0]
90012faa:	3104      	adds	r1, #4
90012fac:	f7fd ff96 	bl	90010edc <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
90012fb0:	4b11      	ldr	r3, [pc, #68]	; (90012ff8 <vTaskPlaceOnEventList+0x7c>)
90012fb2:	681a      	ldr	r2, [r3, #0]
90012fb4:	4294      	cmp	r4, r2
90012fb6:	d200      	bcs.n	90012fba <vTaskPlaceOnEventList+0x3e>
					xNextTaskUnblockTime = xTimeToWake;
90012fb8:	601c      	str	r4, [r3, #0]
}
90012fba:	bd70      	pop	{r4, r5, r6, pc}
90012fbc:	f04f 0350 	mov.w	r3, #80	; 0x50
90012fc0:	f383 8811 	msr	BASEPRI, r3
90012fc4:	f3bf 8f6f 	isb	sy
90012fc8:	f3bf 8f4f 	dsb	sy
	configASSERT( pxEventList );
90012fcc:	e7fe      	b.n	90012fcc <vTaskPlaceOnEventList+0x50>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
90012fce:	4b0b      	ldr	r3, [pc, #44]	; (90012ffc <vTaskPlaceOnEventList+0x80>)
90012fd0:	6818      	ldr	r0, [r3, #0]
90012fd2:	6829      	ldr	r1, [r5, #0]
}
90012fd4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
90012fd8:	3104      	adds	r1, #4
90012fda:	f7fd bf7f 	b.w	90010edc <vListInsert>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
90012fde:	6829      	ldr	r1, [r5, #0]
90012fe0:	4807      	ldr	r0, [pc, #28]	; (90013000 <vTaskPlaceOnEventList+0x84>)
90012fe2:	3104      	adds	r1, #4
}
90012fe4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
90012fe8:	f7fd bf68 	b.w	90010ebc <vListInsertEnd>
90012fec:	24023098 	.word	0x24023098
90012ff0:	2402358c 	.word	0x2402358c
90012ff4:	2402309c 	.word	0x2402309c
90012ff8:	24023540 	.word	0x24023540
90012ffc:	240230a0 	.word	0x240230a0
90013000:	24023564 	.word	0x24023564

90013004 <vTaskPlaceOnEventListRestricted>:
		configASSERT( pxEventList );
90013004:	b358      	cbz	r0, 9001305e <vTaskPlaceOnEventListRestricted+0x5a>
	{
90013006:	b570      	push	{r4, r5, r6, lr}
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
90013008:	4e1d      	ldr	r6, [pc, #116]	; (90013080 <vTaskPlaceOnEventListRestricted+0x7c>)
9001300a:	460c      	mov	r4, r1
9001300c:	4615      	mov	r5, r2
9001300e:	6831      	ldr	r1, [r6, #0]
90013010:	3118      	adds	r1, #24
90013012:	f7fd ff53 	bl	90010ebc <vListInsertEnd>
		if( xWaitIndefinitely != pdFALSE )
90013016:	b165      	cbz	r5, 90013032 <vTaskPlaceOnEventListRestricted+0x2e>
const TickType_t xConstTickCount = xTickCount;
90013018:	4b1a      	ldr	r3, [pc, #104]	; (90013084 <vTaskPlaceOnEventListRestricted+0x80>)
9001301a:	681b      	ldr	r3, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9001301c:	6830      	ldr	r0, [r6, #0]
9001301e:	3004      	adds	r0, #4
90013020:	f7fd ff74 	bl	90010f0c <uxListRemove>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
90013024:	6831      	ldr	r1, [r6, #0]
90013026:	4818      	ldr	r0, [pc, #96]	; (90013088 <vTaskPlaceOnEventListRestricted+0x84>)
90013028:	3104      	adds	r1, #4
	}
9001302a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
9001302e:	f7fd bf45 	b.w	90010ebc <vListInsertEnd>
const TickType_t xConstTickCount = xTickCount;
90013032:	4b14      	ldr	r3, [pc, #80]	; (90013084 <vTaskPlaceOnEventListRestricted+0x80>)
90013034:	681d      	ldr	r5, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
90013036:	6830      	ldr	r0, [r6, #0]
90013038:	3004      	adds	r0, #4
9001303a:	f7fd ff67 	bl	90010f0c <uxListRemove>
			xTimeToWake = xConstTickCount + xTicksToWait;
9001303e:	1964      	adds	r4, r4, r5
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
90013040:	6833      	ldr	r3, [r6, #0]
90013042:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
90013044:	d214      	bcs.n	90013070 <vTaskPlaceOnEventListRestricted+0x6c>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
90013046:	4b11      	ldr	r3, [pc, #68]	; (9001308c <vTaskPlaceOnEventListRestricted+0x88>)
90013048:	6818      	ldr	r0, [r3, #0]
9001304a:	6831      	ldr	r1, [r6, #0]
9001304c:	3104      	adds	r1, #4
9001304e:	f7fd ff45 	bl	90010edc <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
90013052:	4b0f      	ldr	r3, [pc, #60]	; (90013090 <vTaskPlaceOnEventListRestricted+0x8c>)
90013054:	681a      	ldr	r2, [r3, #0]
90013056:	4294      	cmp	r4, r2
90013058:	d200      	bcs.n	9001305c <vTaskPlaceOnEventListRestricted+0x58>
					xNextTaskUnblockTime = xTimeToWake;
9001305a:	601c      	str	r4, [r3, #0]
	}
9001305c:	bd70      	pop	{r4, r5, r6, pc}
9001305e:	f04f 0350 	mov.w	r3, #80	; 0x50
90013062:	f383 8811 	msr	BASEPRI, r3
90013066:	f3bf 8f6f 	isb	sy
9001306a:	f3bf 8f4f 	dsb	sy
		configASSERT( pxEventList );
9001306e:	e7fe      	b.n	9001306e <vTaskPlaceOnEventListRestricted+0x6a>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
90013070:	4b08      	ldr	r3, [pc, #32]	; (90013094 <vTaskPlaceOnEventListRestricted+0x90>)
90013072:	6818      	ldr	r0, [r3, #0]
90013074:	6831      	ldr	r1, [r6, #0]
	}
90013076:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9001307a:	3104      	adds	r1, #4
9001307c:	f7fd bf2e 	b.w	90010edc <vListInsert>
90013080:	24023098 	.word	0x24023098
90013084:	2402358c 	.word	0x2402358c
90013088:	24023564 	.word	0x24023564
9001308c:	2402309c 	.word	0x2402309c
90013090:	24023540 	.word	0x24023540
90013094:	240230a0 	.word	0x240230a0

90013098 <xTaskRemoveFromEventList>:
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90013098:	68c3      	ldr	r3, [r0, #12]
{
9001309a:	b530      	push	{r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9001309c:	68dc      	ldr	r4, [r3, #12]
{
9001309e:	b083      	sub	sp, #12
	configASSERT( pxUnblockedTCB );
900130a0:	b35c      	cbz	r4, 900130fa <xTaskRemoveFromEventList+0x62>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
900130a2:	f104 0518 	add.w	r5, r4, #24
900130a6:	4628      	mov	r0, r5
900130a8:	f7fd ff30 	bl	90010f0c <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
900130ac:	4b19      	ldr	r3, [pc, #100]	; (90013114 <xTaskRemoveFromEventList+0x7c>)
900130ae:	681b      	ldr	r3, [r3, #0]
900130b0:	b17b      	cbz	r3, 900130d2 <xTaskRemoveFromEventList+0x3a>
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
900130b2:	4629      	mov	r1, r5
900130b4:	4818      	ldr	r0, [pc, #96]	; (90013118 <xTaskRemoveFromEventList+0x80>)
900130b6:	f7fd ff01 	bl	90010ebc <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
900130ba:	4b18      	ldr	r3, [pc, #96]	; (9001311c <xTaskRemoveFromEventList+0x84>)
900130bc:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
900130be:	681b      	ldr	r3, [r3, #0]
900130c0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900130c2:	429a      	cmp	r2, r3
900130c4:	d922      	bls.n	9001310c <xTaskRemoveFromEventList+0x74>
		xYieldPending = pdTRUE;
900130c6:	2301      	movs	r3, #1
900130c8:	4a15      	ldr	r2, [pc, #84]	; (90013120 <xTaskRemoveFromEventList+0x88>)
		xReturn = pdTRUE;
900130ca:	4618      	mov	r0, r3
		xYieldPending = pdTRUE;
900130cc:	6013      	str	r3, [r2, #0]
}
900130ce:	b003      	add	sp, #12
900130d0:	bd30      	pop	{r4, r5, pc}
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
900130d2:	1d21      	adds	r1, r4, #4
900130d4:	4608      	mov	r0, r1
900130d6:	9101      	str	r1, [sp, #4]
900130d8:	f7fd ff18 	bl	90010f0c <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
900130dc:	4a11      	ldr	r2, [pc, #68]	; (90013124 <xTaskRemoveFromEventList+0x8c>)
900130de:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
900130e0:	6810      	ldr	r0, [r2, #0]
900130e2:	9901      	ldr	r1, [sp, #4]
900130e4:	4283      	cmp	r3, r0
900130e6:	d900      	bls.n	900130ea <xTaskRemoveFromEventList+0x52>
900130e8:	6013      	str	r3, [r2, #0]
900130ea:	eb03 0383 	add.w	r3, r3, r3, lsl #2
900130ee:	480e      	ldr	r0, [pc, #56]	; (90013128 <xTaskRemoveFromEventList+0x90>)
900130f0:	eb00 0083 	add.w	r0, r0, r3, lsl #2
900130f4:	f7fd fee2 	bl	90010ebc <vListInsertEnd>
900130f8:	e7df      	b.n	900130ba <xTaskRemoveFromEventList+0x22>
900130fa:	f04f 0350 	mov.w	r3, #80	; 0x50
900130fe:	f383 8811 	msr	BASEPRI, r3
90013102:	f3bf 8f6f 	isb	sy
90013106:	f3bf 8f4f 	dsb	sy
	configASSERT( pxUnblockedTCB );
9001310a:	e7fe      	b.n	9001310a <xTaskRemoveFromEventList+0x72>
		xReturn = pdFALSE;
9001310c:	2000      	movs	r0, #0
}
9001310e:	b003      	add	sp, #12
90013110:	bd30      	pop	{r4, r5, pc}
90013112:	bf00      	nop
90013114:	2402350c 	.word	0x2402350c
90013118:	2402354c 	.word	0x2402354c
9001311c:	24023098 	.word	0x24023098
90013120:	24023590 	.word	0x24023590
90013124:	24023514 	.word	0x24023514
90013128:	240230a4 	.word	0x240230a4

9001312c <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
9001312c:	4a03      	ldr	r2, [pc, #12]	; (9001313c <vTaskInternalSetTimeOutState+0x10>)
	pxTimeOut->xTimeOnEntering = xTickCount;
9001312e:	4b04      	ldr	r3, [pc, #16]	; (90013140 <vTaskInternalSetTimeOutState+0x14>)
	pxTimeOut->xOverflowCount = xNumOfOverflows;
90013130:	6812      	ldr	r2, [r2, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
90013132:	681b      	ldr	r3, [r3, #0]
90013134:	e9c0 2300 	strd	r2, r3, [r0]
}
90013138:	4770      	bx	lr
9001313a:	bf00      	nop
9001313c:	24023544 	.word	0x24023544
90013140:	2402358c 	.word	0x2402358c

90013144 <xTaskCheckForTimeOut>:
	configASSERT( pxTimeOut );
90013144:	b328      	cbz	r0, 90013192 <xTaskCheckForTimeOut+0x4e>
{
90013146:	b5f0      	push	{r4, r5, r6, r7, lr}
90013148:	460d      	mov	r5, r1
9001314a:	b083      	sub	sp, #12
	configASSERT( pxTicksToWait );
9001314c:	b1c1      	cbz	r1, 90013180 <xTaskCheckForTimeOut+0x3c>
9001314e:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
90013150:	f7fd ff58 	bl	90011004 <vPortEnterCritical>
			if( *pxTicksToWait == portMAX_DELAY )
90013154:	682b      	ldr	r3, [r5, #0]
		const TickType_t xConstTickCount = xTickCount;
90013156:	4a1d      	ldr	r2, [pc, #116]	; (900131cc <xTaskCheckForTimeOut+0x88>)
			if( *pxTicksToWait == portMAX_DELAY )
90013158:	1c58      	adds	r0, r3, #1
		const TickType_t xConstTickCount = xTickCount;
9001315a:	6811      	ldr	r1, [r2, #0]
			if( *pxTicksToWait == portMAX_DELAY )
9001315c:	d030      	beq.n	900131c0 <xTaskCheckForTimeOut+0x7c>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
9001315e:	f8df c070 	ldr.w	ip, [pc, #112]	; 900131d0 <xTaskCheckForTimeOut+0x8c>
90013162:	6826      	ldr	r6, [r4, #0]
90013164:	f8dc 7000 	ldr.w	r7, [ip]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
90013168:	6860      	ldr	r0, [r4, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
9001316a:	42be      	cmp	r6, r7
9001316c:	d01a      	beq.n	900131a4 <xTaskCheckForTimeOut+0x60>
9001316e:	4288      	cmp	r0, r1
90013170:	d818      	bhi.n	900131a4 <xTaskCheckForTimeOut+0x60>
			xReturn = pdTRUE;
90013172:	2001      	movs	r0, #1
90013174:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
90013176:	f7fd ff67 	bl	90011048 <vPortExitCritical>
}
9001317a:	9801      	ldr	r0, [sp, #4]
9001317c:	b003      	add	sp, #12
9001317e:	bdf0      	pop	{r4, r5, r6, r7, pc}
90013180:	f04f 0350 	mov.w	r3, #80	; 0x50
90013184:	f383 8811 	msr	BASEPRI, r3
90013188:	f3bf 8f6f 	isb	sy
9001318c:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTicksToWait );
90013190:	e7fe      	b.n	90013190 <xTaskCheckForTimeOut+0x4c>
90013192:	f04f 0350 	mov.w	r3, #80	; 0x50
90013196:	f383 8811 	msr	BASEPRI, r3
9001319a:	f3bf 8f6f 	isb	sy
9001319e:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTimeOut );
900131a2:	e7fe      	b.n	900131a2 <xTaskCheckForTimeOut+0x5e>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
900131a4:	eba1 0e00 	sub.w	lr, r1, r0
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
900131a8:	4573      	cmp	r3, lr
900131aa:	d90b      	bls.n	900131c4 <xTaskCheckForTimeOut+0x80>
			*pxTicksToWait -= xElapsedTime;
900131ac:	1a5b      	subs	r3, r3, r1
	pxTimeOut->xOverflowCount = xNumOfOverflows;
900131ae:	f8dc 1000 	ldr.w	r1, [ip]
	pxTimeOut->xTimeOnEntering = xTickCount;
900131b2:	6812      	ldr	r2, [r2, #0]
			*pxTicksToWait -= xElapsedTime;
900131b4:	4403      	add	r3, r0
			xReturn = pdFALSE;
900131b6:	2000      	movs	r0, #0
			*pxTicksToWait -= xElapsedTime;
900131b8:	602b      	str	r3, [r5, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
900131ba:	e9c4 1200 	strd	r1, r2, [r4]
			xReturn = pdFALSE;
900131be:	e7d9      	b.n	90013174 <xTaskCheckForTimeOut+0x30>
				xReturn = pdFALSE;
900131c0:	2000      	movs	r0, #0
900131c2:	e7d7      	b.n	90013174 <xTaskCheckForTimeOut+0x30>
			*pxTicksToWait = 0;
900131c4:	2300      	movs	r3, #0
			xReturn = pdTRUE;
900131c6:	2001      	movs	r0, #1
			*pxTicksToWait = 0;
900131c8:	602b      	str	r3, [r5, #0]
			xReturn = pdTRUE;
900131ca:	e7d3      	b.n	90013174 <xTaskCheckForTimeOut+0x30>
900131cc:	2402358c 	.word	0x2402358c
900131d0:	24023544 	.word	0x24023544

900131d4 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
900131d4:	4b01      	ldr	r3, [pc, #4]	; (900131dc <vTaskMissedYield+0x8>)
900131d6:	2201      	movs	r2, #1
900131d8:	601a      	str	r2, [r3, #0]
}
900131da:	4770      	bx	lr
900131dc:	24023590 	.word	0x24023590

900131e0 <xTaskGetCurrentTaskHandle>:
		xReturn = pxCurrentTCB;
900131e0:	4b01      	ldr	r3, [pc, #4]	; (900131e8 <xTaskGetCurrentTaskHandle+0x8>)
900131e2:	6818      	ldr	r0, [r3, #0]
	}
900131e4:	4770      	bx	lr
900131e6:	bf00      	nop
900131e8:	24023098 	.word	0x24023098

900131ec <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
900131ec:	4b05      	ldr	r3, [pc, #20]	; (90013204 <xTaskGetSchedulerState+0x18>)
900131ee:	681b      	ldr	r3, [r3, #0]
900131f0:	b133      	cbz	r3, 90013200 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
900131f2:	4b05      	ldr	r3, [pc, #20]	; (90013208 <xTaskGetSchedulerState+0x1c>)
900131f4:	6818      	ldr	r0, [r3, #0]
900131f6:	fab0 f080 	clz	r0, r0
900131fa:	0940      	lsrs	r0, r0, #5
900131fc:	0040      	lsls	r0, r0, #1
900131fe:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
90013200:	2001      	movs	r0, #1
	}
90013202:	4770      	bx	lr
90013204:	24023560 	.word	0x24023560
90013208:	2402350c 	.word	0x2402350c

9001320c <xTaskPriorityInherit>:
	{
9001320c:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
9001320e:	4604      	mov	r4, r0
	{
90013210:	b082      	sub	sp, #8
		if( pxMutexHolder != NULL )
90013212:	b1c8      	cbz	r0, 90013248 <xTaskPriorityInherit+0x3c>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
90013214:	4d1d      	ldr	r5, [pc, #116]	; (9001328c <xTaskPriorityInherit+0x80>)
90013216:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
90013218:	682a      	ldr	r2, [r5, #0]
9001321a:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
9001321c:	4293      	cmp	r3, r2
9001321e:	d215      	bcs.n	9001324c <xTaskPriorityInherit+0x40>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
90013220:	6982      	ldr	r2, [r0, #24]
90013222:	2a00      	cmp	r2, #0
90013224:	db04      	blt.n	90013230 <xTaskPriorityInherit+0x24>
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90013226:	682a      	ldr	r2, [r5, #0]
90013228:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
9001322a:	f1c2 0238 	rsb	r2, r2, #56	; 0x38
9001322e:	6182      	str	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
90013230:	4e17      	ldr	r6, [pc, #92]	; (90013290 <xTaskPriorityInherit+0x84>)
90013232:	eb03 0383 	add.w	r3, r3, r3, lsl #2
90013236:	6962      	ldr	r2, [r4, #20]
90013238:	eb06 0383 	add.w	r3, r6, r3, lsl #2
9001323c:	429a      	cmp	r2, r3
9001323e:	d00e      	beq.n	9001325e <xTaskPriorityInherit+0x52>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
90013240:	682b      	ldr	r3, [r5, #0]
				xReturn = pdTRUE;
90013242:	2001      	movs	r0, #1
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
90013244:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90013246:	62e3      	str	r3, [r4, #44]	; 0x2c
	}
90013248:	b002      	add	sp, #8
9001324a:	bd70      	pop	{r4, r5, r6, pc}
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
9001324c:	682b      	ldr	r3, [r5, #0]
9001324e:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
90013250:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90013252:	4298      	cmp	r0, r3
90013254:	bf2c      	ite	cs
90013256:	2000      	movcs	r0, #0
90013258:	2001      	movcc	r0, #1
	}
9001325a:	b002      	add	sp, #8
9001325c:	bd70      	pop	{r4, r5, r6, pc}
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9001325e:	1d21      	adds	r1, r4, #4
90013260:	4608      	mov	r0, r1
90013262:	9101      	str	r1, [sp, #4]
90013264:	f7fd fe52 	bl	90010f0c <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
90013268:	682a      	ldr	r2, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
9001326a:	4b0a      	ldr	r3, [pc, #40]	; (90013294 <xTaskPriorityInherit+0x88>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
9001326c:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
9001326e:	681a      	ldr	r2, [r3, #0]
90013270:	9901      	ldr	r1, [sp, #4]
90013272:	4290      	cmp	r0, r2
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
90013274:	62e0      	str	r0, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
90013276:	d900      	bls.n	9001327a <xTaskPriorityInherit+0x6e>
90013278:	6018      	str	r0, [r3, #0]
9001327a:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9001327e:	eb06 0080 	add.w	r0, r6, r0, lsl #2
90013282:	f7fd fe1b 	bl	90010ebc <vListInsertEnd>
				xReturn = pdTRUE;
90013286:	2001      	movs	r0, #1
90013288:	e7de      	b.n	90013248 <xTaskPriorityInherit+0x3c>
9001328a:	bf00      	nop
9001328c:	24023098 	.word	0x24023098
90013290:	240230a4 	.word	0x240230a4
90013294:	24023514 	.word	0x24023514

90013298 <xTaskPriorityDisinherit>:
		if( pxMutexHolder != NULL )
90013298:	b318      	cbz	r0, 900132e2 <xTaskPriorityDisinherit+0x4a>
			configASSERT( pxTCB == pxCurrentTCB );
9001329a:	4b1f      	ldr	r3, [pc, #124]	; (90013318 <xTaskPriorityDisinherit+0x80>)
	{
9001329c:	b510      	push	{r4, lr}
			configASSERT( pxTCB == pxCurrentTCB );
9001329e:	681c      	ldr	r4, [r3, #0]
	{
900132a0:	b082      	sub	sp, #8
			configASSERT( pxTCB == pxCurrentTCB );
900132a2:	4284      	cmp	r4, r0
900132a4:	d008      	beq.n	900132b8 <xTaskPriorityDisinherit+0x20>
900132a6:	f04f 0350 	mov.w	r3, #80	; 0x50
900132aa:	f383 8811 	msr	BASEPRI, r3
900132ae:	f3bf 8f6f 	isb	sy
900132b2:	f3bf 8f4f 	dsb	sy
900132b6:	e7fe      	b.n	900132b6 <xTaskPriorityDisinherit+0x1e>
			configASSERT( pxTCB->uxMutexesHeld );
900132b8:	6d23      	ldr	r3, [r4, #80]	; 0x50
900132ba:	b14b      	cbz	r3, 900132d0 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
900132bc:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
			( pxTCB->uxMutexesHeld )--;
900132be:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
900132c0:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
900132c2:	6523      	str	r3, [r4, #80]	; 0x50
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
900132c4:	4291      	cmp	r1, r2
900132c6:	d000      	beq.n	900132ca <xTaskPriorityDisinherit+0x32>
900132c8:	b16b      	cbz	r3, 900132e6 <xTaskPriorityDisinherit+0x4e>
	BaseType_t xReturn = pdFALSE;
900132ca:	2000      	movs	r0, #0
	}
900132cc:	b002      	add	sp, #8
900132ce:	bd10      	pop	{r4, pc}
900132d0:	f04f 0350 	mov.w	r3, #80	; 0x50
900132d4:	f383 8811 	msr	BASEPRI, r3
900132d8:	f3bf 8f6f 	isb	sy
900132dc:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
900132e0:	e7fe      	b.n	900132e0 <xTaskPriorityDisinherit+0x48>
	BaseType_t xReturn = pdFALSE;
900132e2:	2000      	movs	r0, #0
	}
900132e4:	4770      	bx	lr
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
900132e6:	1d21      	adds	r1, r4, #4
900132e8:	4608      	mov	r0, r1
900132ea:	9101      	str	r1, [sp, #4]
900132ec:	f7fd fe0e 	bl	90010f0c <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
900132f0:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
900132f2:	4b0a      	ldr	r3, [pc, #40]	; (9001331c <xTaskPriorityDisinherit+0x84>)
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
900132f4:	f1c0 0238 	rsb	r2, r0, #56	; 0x38
					prvAddTaskToReadyList( pxTCB );
900132f8:	9901      	ldr	r1, [sp, #4]
					pxTCB->uxPriority = pxTCB->uxBasePriority;
900132fa:	62e0      	str	r0, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
900132fc:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
900132fe:	681a      	ldr	r2, [r3, #0]
90013300:	4290      	cmp	r0, r2
90013302:	d900      	bls.n	90013306 <xTaskPriorityDisinherit+0x6e>
90013304:	6018      	str	r0, [r3, #0]
90013306:	4b06      	ldr	r3, [pc, #24]	; (90013320 <xTaskPriorityDisinherit+0x88>)
90013308:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9001330c:	eb03 0080 	add.w	r0, r3, r0, lsl #2
90013310:	f7fd fdd4 	bl	90010ebc <vListInsertEnd>
					xReturn = pdTRUE;
90013314:	2001      	movs	r0, #1
		return xReturn;
90013316:	e7d9      	b.n	900132cc <xTaskPriorityDisinherit+0x34>
90013318:	24023098 	.word	0x24023098
9001331c:	24023514 	.word	0x24023514
90013320:	240230a4 	.word	0x240230a4

90013324 <vTaskPriorityDisinheritAfterTimeout>:
		if( pxMutexHolder != NULL )
90013324:	2800      	cmp	r0, #0
90013326:	d040      	beq.n	900133aa <vTaskPriorityDisinheritAfterTimeout+0x86>
			configASSERT( pxTCB->uxMutexesHeld );
90013328:	6d03      	ldr	r3, [r0, #80]	; 0x50
	{
9001332a:	b530      	push	{r4, r5, lr}
9001332c:	4604      	mov	r4, r0
9001332e:	b083      	sub	sp, #12
			configASSERT( pxTCB->uxMutexesHeld );
90013330:	b153      	cbz	r3, 90013348 <vTaskPriorityDisinheritAfterTimeout+0x24>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
90013332:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
			if( pxTCB->uxPriority != uxPriorityToUse )
90013334:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
90013336:	4281      	cmp	r1, r0
90013338:	bf38      	it	cc
9001333a:	4601      	movcc	r1, r0
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
9001333c:	2b01      	cmp	r3, #1
9001333e:	d101      	bne.n	90013344 <vTaskPriorityDisinheritAfterTimeout+0x20>
90013340:	428a      	cmp	r2, r1
90013342:	d10a      	bne.n	9001335a <vTaskPriorityDisinheritAfterTimeout+0x36>
	}
90013344:	b003      	add	sp, #12
90013346:	bd30      	pop	{r4, r5, pc}
90013348:	f04f 0350 	mov.w	r3, #80	; 0x50
9001334c:	f383 8811 	msr	BASEPRI, r3
90013350:	f3bf 8f6f 	isb	sy
90013354:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
90013358:	e7fe      	b.n	90013358 <vTaskPriorityDisinheritAfterTimeout+0x34>
					configASSERT( pxTCB != pxCurrentTCB );
9001335a:	4b19      	ldr	r3, [pc, #100]	; (900133c0 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
9001335c:	681b      	ldr	r3, [r3, #0]
9001335e:	42a3      	cmp	r3, r4
90013360:	d024      	beq.n	900133ac <vTaskPriorityDisinheritAfterTimeout+0x88>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
90013362:	69a3      	ldr	r3, [r4, #24]
					pxTCB->uxPriority = uxPriorityToUse;
90013364:	62e1      	str	r1, [r4, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
90013366:	2b00      	cmp	r3, #0
90013368:	db02      	blt.n	90013370 <vTaskPriorityDisinheritAfterTimeout+0x4c>
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9001336a:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
9001336e:	61a1      	str	r1, [r4, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
90013370:	4d14      	ldr	r5, [pc, #80]	; (900133c4 <vTaskPriorityDisinheritAfterTimeout+0xa0>)
90013372:	eb02 0282 	add.w	r2, r2, r2, lsl #2
90013376:	6961      	ldr	r1, [r4, #20]
90013378:	eb05 0382 	add.w	r3, r5, r2, lsl #2
9001337c:	4299      	cmp	r1, r3
9001337e:	d1e1      	bne.n	90013344 <vTaskPriorityDisinheritAfterTimeout+0x20>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
90013380:	1d21      	adds	r1, r4, #4
90013382:	4608      	mov	r0, r1
90013384:	9101      	str	r1, [sp, #4]
90013386:	f7fd fdc1 	bl	90010f0c <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
9001338a:	4b0f      	ldr	r3, [pc, #60]	; (900133c8 <vTaskPriorityDisinheritAfterTimeout+0xa4>)
9001338c:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
9001338e:	681a      	ldr	r2, [r3, #0]
90013390:	9901      	ldr	r1, [sp, #4]
90013392:	4290      	cmp	r0, r2
90013394:	d900      	bls.n	90013398 <vTaskPriorityDisinheritAfterTimeout+0x74>
90013396:	6018      	str	r0, [r3, #0]
90013398:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9001339c:	eb05 0080 	add.w	r0, r5, r0, lsl #2
	}
900133a0:	b003      	add	sp, #12
900133a2:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
900133a6:	f7fd bd89 	b.w	90010ebc <vListInsertEnd>
900133aa:	4770      	bx	lr
900133ac:	f04f 0350 	mov.w	r3, #80	; 0x50
900133b0:	f383 8811 	msr	BASEPRI, r3
900133b4:	f3bf 8f6f 	isb	sy
900133b8:	f3bf 8f4f 	dsb	sy
					configASSERT( pxTCB != pxCurrentTCB );
900133bc:	e7fe      	b.n	900133bc <vTaskPriorityDisinheritAfterTimeout+0x98>
900133be:	bf00      	nop
900133c0:	24023098 	.word	0x24023098
900133c4:	240230a4 	.word	0x240230a4
900133c8:	24023514 	.word	0x24023514

900133cc <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
900133cc:	4b04      	ldr	r3, [pc, #16]	; (900133e0 <pvTaskIncrementMutexHeldCount+0x14>)
900133ce:	681a      	ldr	r2, [r3, #0]
900133d0:	b11a      	cbz	r2, 900133da <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
900133d2:	6819      	ldr	r1, [r3, #0]
900133d4:	6d0a      	ldr	r2, [r1, #80]	; 0x50
900133d6:	3201      	adds	r2, #1
900133d8:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
900133da:	6818      	ldr	r0, [r3, #0]
	}
900133dc:	4770      	bx	lr
900133de:	bf00      	nop
900133e0:	24023098 	.word	0x24023098

900133e4 <prvSwitchTimerLists>:
	}
}
/*-----------------------------------------------------------*/

static void prvSwitchTimerLists( void )
{
900133e4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900133e8:	4e22      	ldr	r6, [pc, #136]	; (90013474 <prvSwitchTimerLists+0x90>)
900133ea:	b085      	sub	sp, #20
	if( xTimerQueue != NULL )
900133ec:	f8df 908c 	ldr.w	r9, [pc, #140]	; 9001347c <prvSwitchTimerLists+0x98>
		xMessage.xMessageID = xCommandID;
900133f0:	f04f 0800 	mov.w	r8, #0

	/* The tick count has overflowed.  The timer lists must be switched.
	If there are any timers still referenced from the current timer list
	then they must have expired and should be processed before the lists
	are switched. */
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
900133f4:	e00d      	b.n	90013412 <prvSwitchTimerLists+0x2e>
	{
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
900133f6:	68db      	ldr	r3, [r3, #12]

		/* Remove the timer from the list. */
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
900133f8:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
900133fa:	681f      	ldr	r7, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
900133fc:	1d25      	adds	r5, r4, #4
900133fe:	4628      	mov	r0, r5
90013400:	f7fd fd84 	bl	90010f0c <uxListRemove>
		traceTIMER_EXPIRED( pxTimer );

		/* Execute its callback, then send a command to restart the timer if
		it is an auto-reload timer.  It cannot be restarted here as the lists
		have not yet been switched. */
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
90013404:	6a23      	ldr	r3, [r4, #32]
90013406:	4620      	mov	r0, r4
90013408:	4798      	blx	r3

		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
9001340a:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
9001340e:	075b      	lsls	r3, r3, #29
90013410:	d40a      	bmi.n	90013428 <prvSwitchTimerLists+0x44>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
90013412:	6833      	ldr	r3, [r6, #0]
90013414:	681a      	ldr	r2, [r3, #0]
90013416:	2a00      	cmp	r2, #0
90013418:	d1ed      	bne.n	900133f6 <prvSwitchTimerLists+0x12>
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxTemp = pxCurrentTimerList;
	pxCurrentTimerList = pxOverflowTimerList;
9001341a:	4a17      	ldr	r2, [pc, #92]	; (90013478 <prvSwitchTimerLists+0x94>)
9001341c:	6811      	ldr	r1, [r2, #0]
	pxOverflowTimerList = pxTemp;
9001341e:	6013      	str	r3, [r2, #0]
	pxCurrentTimerList = pxOverflowTimerList;
90013420:	6031      	str	r1, [r6, #0]
}
90013422:	b005      	add	sp, #20
90013424:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
90013428:	69a3      	ldr	r3, [r4, #24]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
9001342a:	4629      	mov	r1, r5
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
9001342c:	443b      	add	r3, r7
			if( xReloadTime > xNextExpireTime )
9001342e:	429f      	cmp	r7, r3
90013430:	d205      	bcs.n	9001343e <prvSwitchTimerLists+0x5a>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
90013432:	6830      	ldr	r0, [r6, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
90013434:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
90013436:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
90013438:	f7fd fd50 	bl	90010edc <vListInsert>
9001343c:	e7e9      	b.n	90013412 <prvSwitchTimerLists+0x2e>
	if( xTimerQueue != NULL )
9001343e:	f8d9 3000 	ldr.w	r3, [r9]
90013442:	b16b      	cbz	r3, 90013460 <prvSwitchTimerLists+0x7c>
		xMessage.u.xTimerParameters.pxTimer = xTimer;
90013444:	9402      	str	r4, [sp, #8]
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
90013446:	e9cd 8700 	strd	r8, r7, [sp]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
9001344a:	f7ff fecf 	bl	900131ec <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
9001344e:	2300      	movs	r3, #0
90013450:	4669      	mov	r1, sp
90013452:	f8d9 0000 	ldr.w	r0, [r9]
90013456:	461a      	mov	r2, r3
90013458:	f7fe f8cc 	bl	900115f4 <xQueueGenericSend>
				configASSERT( xResult );
9001345c:	2800      	cmp	r0, #0
9001345e:	d1d8      	bne.n	90013412 <prvSwitchTimerLists+0x2e>
90013460:	f04f 0350 	mov.w	r3, #80	; 0x50
90013464:	f383 8811 	msr	BASEPRI, r3
90013468:	f3bf 8f6f 	isb	sy
9001346c:	f3bf 8f4f 	dsb	sy
90013470:	e7fe      	b.n	90013470 <prvSwitchTimerLists+0x8c>
90013472:	bf00      	nop
90013474:	24023594 	.word	0x24023594
90013478:	24023598 	.word	0x24023598
9001347c:	240236b8 	.word	0x240236b8

90013480 <prvTimerTask>:
{
90013480:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90013484:	4e9f      	ldr	r6, [pc, #636]	; (90013704 <prvTimerTask+0x284>)
90013486:	b089      	sub	sp, #36	; 0x24
90013488:	4d9f      	ldr	r5, [pc, #636]	; (90013708 <prvTimerTask+0x288>)
					portYIELD_WITHIN_API();
9001348a:	f04f 29e0 	mov.w	r9, #3758153728	; 0xe000e000
9001348e:	4c9f      	ldr	r4, [pc, #636]	; (9001370c <prvTimerTask+0x28c>)
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
90013490:	6833      	ldr	r3, [r6, #0]
90013492:	681f      	ldr	r7, [r3, #0]
90013494:	2f00      	cmp	r7, #0
90013496:	f000 80b2 	beq.w	900135fe <prvTimerTask+0x17e>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
9001349a:	68db      	ldr	r3, [r3, #12]
9001349c:	681f      	ldr	r7, [r3, #0]
	vTaskSuspendAll();
9001349e:	f7ff fc61 	bl	90012d64 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
900134a2:	f7ff fc77 	bl	90012d94 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
900134a6:	682a      	ldr	r2, [r5, #0]
	xTimeNow = xTaskGetTickCount();
900134a8:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
900134aa:	4290      	cmp	r0, r2
900134ac:	f0c0 80af 	bcc.w	9001360e <prvTimerTask+0x18e>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
900134b0:	4287      	cmp	r7, r0
	xLastTime = xTimeNow;
900134b2:	6028      	str	r0, [r5, #0]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
900134b4:	f200 80d0 	bhi.w	90013658 <prvTimerTask+0x1d8>
				( void ) xTaskResumeAll();
900134b8:	f7ff fc5c 	bl	90012d74 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
900134bc:	6832      	ldr	r2, [r6, #0]
900134be:	68d2      	ldr	r2, [r2, #12]
900134c0:	f8d2 b00c 	ldr.w	fp, [r2, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
900134c4:	f10b 0804 	add.w	r8, fp, #4
900134c8:	4640      	mov	r0, r8
900134ca:	f7fd fd1f 	bl	90010f0c <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
900134ce:	f89b 0028 	ldrb.w	r0, [fp, #40]	; 0x28
900134d2:	0741      	lsls	r1, r0, #29
900134d4:	f100 80d0 	bmi.w	90013678 <prvTimerTask+0x1f8>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
900134d8:	f020 0001 	bic.w	r0, r0, #1
900134dc:	f88b 0028 	strb.w	r0, [fp, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
900134e0:	f8db 3020 	ldr.w	r3, [fp, #32]
900134e4:	4658      	mov	r0, fp
900134e6:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
900134e8:	2200      	movs	r2, #0
900134ea:	4669      	mov	r1, sp
900134ec:	6820      	ldr	r0, [r4, #0]
900134ee:	f7fe fb6d 	bl	90011bcc <xQueueReceive>
900134f2:	2800      	cmp	r0, #0
900134f4:	d0cc      	beq.n	90013490 <prvTimerTask+0x10>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
900134f6:	9b00      	ldr	r3, [sp, #0]
900134f8:	2b00      	cmp	r3, #0
900134fa:	db77      	blt.n	900135ec <prvTimerTask+0x16c>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
900134fc:	9f02      	ldr	r7, [sp, #8]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
900134fe:	697b      	ldr	r3, [r7, #20]
90013500:	b113      	cbz	r3, 90013508 <prvTimerTask+0x88>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
90013502:	1d38      	adds	r0, r7, #4
90013504:	f7fd fd02 	bl	90010f0c <uxListRemove>
	xTimeNow = xTaskGetTickCount();
90013508:	f7ff fc44 	bl	90012d94 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
9001350c:	682b      	ldr	r3, [r5, #0]
	xTimeNow = xTaskGetTickCount();
9001350e:	4680      	mov	r8, r0
	if( xTimeNow < xLastTime )
90013510:	4298      	cmp	r0, r3
90013512:	f0c0 8083 	bcc.w	9001361c <prvTimerTask+0x19c>
			switch( xMessage.xMessageID )
90013516:	9b00      	ldr	r3, [sp, #0]
	xLastTime = xTimeNow;
90013518:	f8c5 8000 	str.w	r8, [r5]
			switch( xMessage.xMessageID )
9001351c:	2b09      	cmp	r3, #9
9001351e:	d8e3      	bhi.n	900134e8 <prvTimerTask+0x68>
90013520:	e8df f003 	tbb	[pc, r3]
90013524:	54050505 	.word	0x54050505
90013528:	05055b3e 	.word	0x05055b3e
9001352c:	3e54      	.short	0x3e54
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
9001352e:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
90013532:	69ba      	ldr	r2, [r7, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
90013534:	f043 0301 	orr.w	r3, r3, #1
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
90013538:	613f      	str	r7, [r7, #16]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
9001353a:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
9001353e:	9b01      	ldr	r3, [sp, #4]
90013540:	1899      	adds	r1, r3, r2
90013542:	bf2c      	ite	cs
90013544:	2001      	movcs	r0, #1
90013546:	2000      	movcc	r0, #0
	if( xNextExpiryTime <= xTimeNow )
90013548:	4541      	cmp	r1, r8
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
9001354a:	6079      	str	r1, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
9001354c:	f200 8086 	bhi.w	9001365c <prvTimerTask+0x1dc>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90013550:	eba8 0303 	sub.w	r3, r8, r3
90013554:	429a      	cmp	r2, r3
90013556:	f200 80c0 	bhi.w	900136da <prvTimerTask+0x25a>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
9001355a:	6a3b      	ldr	r3, [r7, #32]
9001355c:	4638      	mov	r0, r7
9001355e:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
90013560:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
90013564:	075b      	lsls	r3, r3, #29
90013566:	d5bf      	bpl.n	900134e8 <prvTimerTask+0x68>
	if( xTimerQueue != NULL )
90013568:	6822      	ldr	r2, [r4, #0]
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
9001356a:	9901      	ldr	r1, [sp, #4]
9001356c:	69bb      	ldr	r3, [r7, #24]
	if( xTimerQueue != NULL )
9001356e:	b172      	cbz	r2, 9001358e <prvTimerTask+0x10e>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
90013570:	440b      	add	r3, r1
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
90013572:	e9cd 3705 	strd	r3, r7, [sp, #20]
		xMessage.xMessageID = xCommandID;
90013576:	2300      	movs	r3, #0
90013578:	9304      	str	r3, [sp, #16]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
9001357a:	f7ff fe37 	bl	900131ec <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
9001357e:	2300      	movs	r3, #0
90013580:	a904      	add	r1, sp, #16
90013582:	6820      	ldr	r0, [r4, #0]
90013584:	461a      	mov	r2, r3
90013586:	f7fe f835 	bl	900115f4 <xQueueGenericSend>
							configASSERT( xResult );
9001358a:	2800      	cmp	r0, #0
9001358c:	d1ac      	bne.n	900134e8 <prvTimerTask+0x68>
9001358e:	f04f 0350 	mov.w	r3, #80	; 0x50
90013592:	f383 8811 	msr	BASEPRI, r3
90013596:	f3bf 8f6f 	isb	sy
9001359a:	f3bf 8f4f 	dsb	sy
9001359e:	e7fe      	b.n	9001359e <prvTimerTask+0x11e>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
900135a0:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
900135a4:	f043 0301 	orr.w	r3, r3, #1
900135a8:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
900135ac:	9b01      	ldr	r3, [sp, #4]
900135ae:	61bb      	str	r3, [r7, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
900135b0:	2b00      	cmp	r3, #0
900135b2:	f000 809e 	beq.w	900136f2 <prvTimerTask+0x272>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
900135b6:	4443      	add	r3, r8
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
900135b8:	1d39      	adds	r1, r7, #4
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
900135ba:	613f      	str	r7, [r7, #16]
	if( xNextExpiryTime <= xTimeNow )
900135bc:	4543      	cmp	r3, r8
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
900135be:	607b      	str	r3, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
900135c0:	d856      	bhi.n	90013670 <prvTimerTask+0x1f0>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
900135c2:	4b53      	ldr	r3, [pc, #332]	; (90013710 <prvTimerTask+0x290>)
900135c4:	6818      	ldr	r0, [r3, #0]
900135c6:	f7fd fc89 	bl	90010edc <vListInsert>
	return xProcessTimerNow;
900135ca:	e78d      	b.n	900134e8 <prvTimerTask+0x68>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
900135cc:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
900135d0:	f023 0301 	bic.w	r3, r3, #1
900135d4:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					break;
900135d8:	e786      	b.n	900134e8 <prvTimerTask+0x68>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
900135da:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
900135de:	079a      	lsls	r2, r3, #30
900135e0:	d572      	bpl.n	900136c8 <prvTimerTask+0x248>
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
900135e2:	f023 0301 	bic.w	r3, r3, #1
900135e6:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
900135ea:	e77d      	b.n	900134e8 <prvTimerTask+0x68>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
900135ec:	9b01      	ldr	r3, [sp, #4]
900135ee:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
900135f2:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
900135f4:	9b00      	ldr	r3, [sp, #0]
900135f6:	2b00      	cmp	r3, #0
900135f8:	f6ff af76 	blt.w	900134e8 <prvTimerTask+0x68>
900135fc:	e77e      	b.n	900134fc <prvTimerTask+0x7c>
	vTaskSuspendAll();
900135fe:	f7ff fbb1 	bl	90012d64 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
90013602:	f7ff fbc7 	bl	90012d94 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
90013606:	682a      	ldr	r2, [r5, #0]
	xTimeNow = xTaskGetTickCount();
90013608:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
9001360a:	4282      	cmp	r2, r0
9001360c:	d909      	bls.n	90013622 <prvTimerTask+0x1a2>
		prvSwitchTimerLists();
9001360e:	f7ff fee9 	bl	900133e4 <prvSwitchTimerLists>
	xLastTime = xTimeNow;
90013612:	f8c5 a000 	str.w	sl, [r5]
			( void ) xTaskResumeAll();
90013616:	f7ff fbad 	bl	90012d74 <xTaskResumeAll>
9001361a:	e765      	b.n	900134e8 <prvTimerTask+0x68>
		prvSwitchTimerLists();
9001361c:	f7ff fee2 	bl	900133e4 <prvSwitchTimerLists>
		*pxTimerListsWereSwitched = pdTRUE;
90013620:	e779      	b.n	90013516 <prvTimerTask+0x96>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
90013622:	4b3b      	ldr	r3, [pc, #236]	; (90013710 <prvTimerTask+0x290>)
	xLastTime = xTimeNow;
90013624:	f8c5 a000 	str.w	sl, [r5]
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
90013628:	681a      	ldr	r2, [r3, #0]
9001362a:	6812      	ldr	r2, [r2, #0]
9001362c:	fab2 f282 	clz	r2, r2
90013630:	0952      	lsrs	r2, r2, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
90013632:	eba7 010a 	sub.w	r1, r7, sl
90013636:	6820      	ldr	r0, [r4, #0]
90013638:	f7fe fee0 	bl	900123fc <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
9001363c:	f7ff fb9a 	bl	90012d74 <xTaskResumeAll>
90013640:	2800      	cmp	r0, #0
90013642:	f47f af51 	bne.w	900134e8 <prvTimerTask+0x68>
					portYIELD_WITHIN_API();
90013646:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
9001364a:	f8c9 3d04 	str.w	r3, [r9, #3332]	; 0xd04
9001364e:	f3bf 8f4f 	dsb	sy
90013652:	f3bf 8f6f 	isb	sy
90013656:	e747      	b.n	900134e8 <prvTimerTask+0x68>
90013658:	2200      	movs	r2, #0
9001365a:	e7ea      	b.n	90013632 <prvTimerTask+0x1b2>
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
9001365c:	4543      	cmp	r3, r8
9001365e:	d902      	bls.n	90013666 <prvTimerTask+0x1e6>
90013660:	2800      	cmp	r0, #0
90013662:	f43f af7a 	beq.w	9001355a <prvTimerTask+0xda>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
90013666:	1d39      	adds	r1, r7, #4
90013668:	6830      	ldr	r0, [r6, #0]
9001366a:	f7fd fc37 	bl	90010edc <vListInsert>
	return xProcessTimerNow;
9001366e:	e73b      	b.n	900134e8 <prvTimerTask+0x68>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
90013670:	6830      	ldr	r0, [r6, #0]
90013672:	f7fd fc33 	bl	90010edc <vListInsert>
90013676:	e737      	b.n	900134e8 <prvTimerTask+0x68>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
90013678:	f8db 2018 	ldr.w	r2, [fp, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
9001367c:	f8cb b010 	str.w	fp, [fp, #16]
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
90013680:	18b8      	adds	r0, r7, r2
	if( xNextExpiryTime <= xTimeNow )
90013682:	4582      	cmp	sl, r0
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
90013684:	f8cb 0004 	str.w	r0, [fp, #4]
	if( xNextExpiryTime <= xTimeNow )
90013688:	d322      	bcc.n	900136d0 <prvTimerTask+0x250>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9001368a:	ebaa 0307 	sub.w	r3, sl, r7
9001368e:	429a      	cmp	r2, r3
90013690:	d829      	bhi.n	900136e6 <prvTimerTask+0x266>
	if( xTimerQueue != NULL )
90013692:	6823      	ldr	r3, [r4, #0]
90013694:	b17b      	cbz	r3, 900136b6 <prvTimerTask+0x236>
		xMessage.xMessageID = xCommandID;
90013696:	2300      	movs	r3, #0
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
90013698:	9705      	str	r7, [sp, #20]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
9001369a:	f8cd b018 	str.w	fp, [sp, #24]
		xMessage.xMessageID = xCommandID;
9001369e:	9304      	str	r3, [sp, #16]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
900136a0:	f7ff fda4 	bl	900131ec <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
900136a4:	2300      	movs	r3, #0
900136a6:	a904      	add	r1, sp, #16
900136a8:	6820      	ldr	r0, [r4, #0]
900136aa:	461a      	mov	r2, r3
900136ac:	f7fd ffa2 	bl	900115f4 <xQueueGenericSend>
			configASSERT( xResult );
900136b0:	2800      	cmp	r0, #0
900136b2:	f47f af15 	bne.w	900134e0 <prvTimerTask+0x60>
900136b6:	f04f 0350 	mov.w	r3, #80	; 0x50
900136ba:	f383 8811 	msr	BASEPRI, r3
900136be:	f3bf 8f6f 	isb	sy
900136c2:	f3bf 8f4f 	dsb	sy
900136c6:	e7fe      	b.n	900136c6 <prvTimerTask+0x246>
							vPortFree( pxTimer );
900136c8:	4638      	mov	r0, r7
900136ca:	f7fd fb83 	bl	90010dd4 <vPortFree>
900136ce:	e70b      	b.n	900134e8 <prvTimerTask+0x68>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
900136d0:	4641      	mov	r1, r8
900136d2:	6830      	ldr	r0, [r6, #0]
900136d4:	f7fd fc02 	bl	90010edc <vListInsert>
	return xProcessTimerNow;
900136d8:	e702      	b.n	900134e0 <prvTimerTask+0x60>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
900136da:	4b0d      	ldr	r3, [pc, #52]	; (90013710 <prvTimerTask+0x290>)
900136dc:	1d39      	adds	r1, r7, #4
900136de:	6818      	ldr	r0, [r3, #0]
900136e0:	f7fd fbfc 	bl	90010edc <vListInsert>
	return xProcessTimerNow;
900136e4:	e700      	b.n	900134e8 <prvTimerTask+0x68>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
900136e6:	4b0a      	ldr	r3, [pc, #40]	; (90013710 <prvTimerTask+0x290>)
900136e8:	4641      	mov	r1, r8
900136ea:	6818      	ldr	r0, [r3, #0]
900136ec:	f7fd fbf6 	bl	90010edc <vListInsert>
	return xProcessTimerNow;
900136f0:	e6f6      	b.n	900134e0 <prvTimerTask+0x60>
900136f2:	f04f 0350 	mov.w	r3, #80	; 0x50
900136f6:	f383 8811 	msr	BASEPRI, r3
900136fa:	f3bf 8f6f 	isb	sy
900136fe:	f3bf 8f4f 	dsb	sy
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
90013702:	e7fe      	b.n	90013702 <prvTimerTask+0x282>
90013704:	24023594 	.word	0x24023594
90013708:	24023664 	.word	0x24023664
9001370c:	240236b8 	.word	0x240236b8
90013710:	24023598 	.word	0x24023598

90013714 <xTimerCreateTimerTask>:
{
90013714:	b5f0      	push	{r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
90013716:	4c23      	ldr	r4, [pc, #140]	; (900137a4 <xTimerCreateTimerTask+0x90>)
{
90013718:	b089      	sub	sp, #36	; 0x24
	taskENTER_CRITICAL();
9001371a:	f7fd fc73 	bl	90011004 <vPortEnterCritical>
		if( xTimerQueue == NULL )
9001371e:	6825      	ldr	r5, [r4, #0]
90013720:	b335      	cbz	r5, 90013770 <xTimerCreateTimerTask+0x5c>
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
90013722:	f7fd fc91 	bl	90011048 <vPortExitCritical>
	if( xTimerQueue != NULL )
90013726:	6823      	ldr	r3, [r4, #0]
90013728:	b1cb      	cbz	r3, 9001375e <xTimerCreateTimerTask+0x4a>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
9001372a:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
9001372c:	aa07      	add	r2, sp, #28
9001372e:	a906      	add	r1, sp, #24
90013730:	a805      	add	r0, sp, #20
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
90013732:	2502      	movs	r5, #2
			StackType_t *pxTimerTaskStackBuffer = NULL;
90013734:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
90013738:	f7fd fa7e 	bl	90010c38 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
9001373c:	4623      	mov	r3, r4
9001373e:	9a07      	ldr	r2, [sp, #28]
90013740:	9500      	str	r5, [sp, #0]
90013742:	e9dd 0105 	ldrd	r0, r1, [sp, #20]
90013746:	e9cd 1001 	strd	r1, r0, [sp, #4]
9001374a:	4917      	ldr	r1, [pc, #92]	; (900137a8 <xTimerCreateTimerTask+0x94>)
9001374c:	4817      	ldr	r0, [pc, #92]	; (900137ac <xTimerCreateTimerTask+0x98>)
9001374e:	f7ff f8d1 	bl	900128f4 <xTaskCreateStatic>
90013752:	4b17      	ldr	r3, [pc, #92]	; (900137b0 <xTimerCreateTimerTask+0x9c>)
90013754:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
90013756:	b110      	cbz	r0, 9001375e <xTimerCreateTimerTask+0x4a>
}
90013758:	2001      	movs	r0, #1
9001375a:	b009      	add	sp, #36	; 0x24
9001375c:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001375e:	f04f 0350 	mov.w	r3, #80	; 0x50
90013762:	f383 8811 	msr	BASEPRI, r3
90013766:	f3bf 8f6f 	isb	sy
9001376a:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
9001376e:	e7fe      	b.n	9001376e <xTimerCreateTimerTask+0x5a>
			vListInitialise( &xActiveTimerList1 );
90013770:	4f10      	ldr	r7, [pc, #64]	; (900137b4 <xTimerCreateTimerTask+0xa0>)
			vListInitialise( &xActiveTimerList2 );
90013772:	4e11      	ldr	r6, [pc, #68]	; (900137b8 <xTimerCreateTimerTask+0xa4>)
			vListInitialise( &xActiveTimerList1 );
90013774:	4638      	mov	r0, r7
90013776:	f7fd fb91 	bl	90010e9c <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
9001377a:	4630      	mov	r0, r6
9001377c:	f7fd fb8e 	bl	90010e9c <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
90013780:	4a0e      	ldr	r2, [pc, #56]	; (900137bc <xTimerCreateTimerTask+0xa8>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
90013782:	9500      	str	r5, [sp, #0]
90013784:	2110      	movs	r1, #16
			pxCurrentTimerList = &xActiveTimerList1;
90013786:	6017      	str	r7, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
90013788:	200a      	movs	r0, #10
			pxOverflowTimerList = &xActiveTimerList2;
9001378a:	4a0d      	ldr	r2, [pc, #52]	; (900137c0 <xTimerCreateTimerTask+0xac>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
9001378c:	4b0d      	ldr	r3, [pc, #52]	; (900137c4 <xTimerCreateTimerTask+0xb0>)
			pxOverflowTimerList = &xActiveTimerList2;
9001378e:	6016      	str	r6, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
90013790:	4a0d      	ldr	r2, [pc, #52]	; (900137c8 <xTimerCreateTimerTask+0xb4>)
90013792:	f7fd fdd9 	bl	90011348 <xQueueGenericCreateStatic>
90013796:	6020      	str	r0, [r4, #0]
				if( xTimerQueue != NULL )
90013798:	2800      	cmp	r0, #0
9001379a:	d0c2      	beq.n	90013722 <xTimerCreateTimerTask+0xe>
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
9001379c:	490b      	ldr	r1, [pc, #44]	; (900137cc <xTimerCreateTimerTask+0xb8>)
9001379e:	f7fe fe05 	bl	900123ac <vQueueAddToRegistry>
900137a2:	e7be      	b.n	90013722 <xTimerCreateTimerTask+0xe>
900137a4:	240236b8 	.word	0x240236b8
900137a8:	9002dff0 	.word	0x9002dff0
900137ac:	90013481 	.word	0x90013481
900137b0:	240236bc 	.word	0x240236bc
900137b4:	2402363c 	.word	0x2402363c
900137b8:	24023650 	.word	0x24023650
900137bc:	24023594 	.word	0x24023594
900137c0:	24023598 	.word	0x24023598
900137c4:	24023668 	.word	0x24023668
900137c8:	2402359c 	.word	0x2402359c
900137cc:	9002dfe8 	.word	0x9002dfe8

900137d0 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
900137d0:	8880      	ldrh	r0, [r0, #4]
900137d2:	4770      	bx	lr

900137d4 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
900137d4:	b570      	push	{r4, r5, r6, lr}
900137d6:	6803      	ldr	r3, [r0, #0]
900137d8:	460c      	mov	r4, r1
900137da:	2100      	movs	r1, #0
900137dc:	4605      	mov	r5, r0
900137de:	6a5b      	ldr	r3, [r3, #36]	; 0x24
900137e0:	4798      	blx	r3
900137e2:	4606      	mov	r6, r0
900137e4:	682b      	ldr	r3, [r5, #0]
900137e6:	4628      	mov	r0, r5
900137e8:	1ba4      	subs	r4, r4, r6
900137ea:	6a1b      	ldr	r3, [r3, #32]
900137ec:	b2a4      	uxth	r4, r4
900137ee:	4798      	blx	r3
900137f0:	fbb4 f0f0 	udiv	r0, r4, r0
900137f4:	bd70      	pop	{r4, r5, r6, pc}

900137f6 <_ZN8touchgfx17AbstractPartition5clearEv>:
900137f6:	2300      	movs	r3, #0
900137f8:	8083      	strh	r3, [r0, #4]
900137fa:	4770      	bx	lr

900137fc <_ZN8touchgfx17AbstractPartition8allocateEt>:
900137fc:	b510      	push	{r4, lr}
900137fe:	6803      	ldr	r3, [r0, #0]
90013800:	4604      	mov	r4, r0
90013802:	8881      	ldrh	r1, [r0, #4]
90013804:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90013806:	4798      	blx	r3
90013808:	88a3      	ldrh	r3, [r4, #4]
9001380a:	3301      	adds	r3, #1
9001380c:	80a3      	strh	r3, [r4, #4]
9001380e:	bd10      	pop	{r4, pc}

90013810 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
90013810:	6803      	ldr	r3, [r0, #0]
90013812:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90013814:	4718      	bx	r3

90013816 <_ZN8touchgfx17AbstractPartitionD1Ev>:
90013816:	4770      	bx	lr

90013818 <_ZN8touchgfx17AbstractPartitionC1Ev>:
90013818:	4a02      	ldr	r2, [pc, #8]	; (90013824 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
9001381a:	6002      	str	r2, [r0, #0]
9001381c:	2200      	movs	r2, #0
9001381e:	8082      	strh	r2, [r0, #4]
90013820:	4770      	bx	lr
90013822:	bf00      	nop
90013824:	9002e000 	.word	0x9002e000

90013828 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
90013828:	6a83      	ldr	r3, [r0, #40]	; 0x28
9001382a:	2000      	movs	r0, #0
9001382c:	b12b      	cbz	r3, 9001383a <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
9001382e:	b920      	cbnz	r0, 9001383a <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
90013830:	1a5a      	subs	r2, r3, r1
90013832:	699b      	ldr	r3, [r3, #24]
90013834:	4250      	negs	r0, r2
90013836:	4150      	adcs	r0, r2
90013838:	e7f8      	b.n	9001382c <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
9001383a:	4770      	bx	lr

9001383c <_ZN8touchgfx9Container3addERNS_8DrawableE>:
9001383c:	2300      	movs	r3, #0
9001383e:	6148      	str	r0, [r1, #20]
90013840:	618b      	str	r3, [r1, #24]
90013842:	6a83      	ldr	r3, [r0, #40]	; 0x28
90013844:	b913      	cbnz	r3, 9001384c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
90013846:	6281      	str	r1, [r0, #40]	; 0x28
90013848:	4770      	bx	lr
9001384a:	4613      	mov	r3, r2
9001384c:	699a      	ldr	r2, [r3, #24]
9001384e:	2a00      	cmp	r2, #0
90013850:	d1fb      	bne.n	9001384a <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
90013852:	6199      	str	r1, [r3, #24]
90013854:	4770      	bx	lr

90013856 <_ZN8touchgfx9Container9removeAllEv>:
90013856:	2200      	movs	r2, #0
90013858:	6a83      	ldr	r3, [r0, #40]	; 0x28
9001385a:	b123      	cbz	r3, 90013866 <_ZN8touchgfx9Container9removeAllEv+0x10>
9001385c:	6999      	ldr	r1, [r3, #24]
9001385e:	6281      	str	r1, [r0, #40]	; 0x28
90013860:	e9c3 2205 	strd	r2, r2, [r3, #20]
90013864:	e7f8      	b.n	90013858 <_ZN8touchgfx9Container9removeAllEv+0x2>
90013866:	4770      	bx	lr

90013868 <_ZN8touchgfx9Container6unlinkEv>:
90013868:	2300      	movs	r3, #0
9001386a:	6283      	str	r3, [r0, #40]	; 0x28
9001386c:	4770      	bx	lr

9001386e <_ZNK8touchgfx9Container12getSolidRectEv>:
9001386e:	2200      	movs	r2, #0
90013870:	8002      	strh	r2, [r0, #0]
90013872:	8042      	strh	r2, [r0, #2]
90013874:	8082      	strh	r2, [r0, #4]
90013876:	80c2      	strh	r2, [r0, #6]
90013878:	4770      	bx	lr

9001387a <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
9001387a:	b570      	push	{r4, r5, r6, lr}
9001387c:	460d      	mov	r5, r1
9001387e:	4616      	mov	r6, r2
90013880:	6a84      	ldr	r4, [r0, #40]	; 0x28
90013882:	b13c      	cbz	r4, 90013894 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
90013884:	6823      	ldr	r3, [r4, #0]
90013886:	4620      	mov	r0, r4
90013888:	4632      	mov	r2, r6
9001388a:	4629      	mov	r1, r5
9001388c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
9001388e:	4798      	blx	r3
90013890:	69a4      	ldr	r4, [r4, #24]
90013892:	e7f6      	b.n	90013882 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
90013894:	bd70      	pop	{r4, r5, r6, pc}

90013896 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
90013896:	b538      	push	{r3, r4, r5, lr}
90013898:	460d      	mov	r5, r1
9001389a:	6a84      	ldr	r4, [r0, #40]	; 0x28
9001389c:	b134      	cbz	r4, 900138ac <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
9001389e:	682b      	ldr	r3, [r5, #0]
900138a0:	4621      	mov	r1, r4
900138a2:	4628      	mov	r0, r5
900138a4:	689b      	ldr	r3, [r3, #8]
900138a6:	4798      	blx	r3
900138a8:	69a4      	ldr	r4, [r4, #24]
900138aa:	e7f7      	b.n	9001389c <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
900138ac:	bd38      	pop	{r3, r4, r5, pc}

900138ae <_ZN8touchgfx9ContainerD1Ev>:
900138ae:	4770      	bx	lr

900138b0 <_ZN8touchgfx9ContainerD0Ev>:
900138b0:	b510      	push	{r4, lr}
900138b2:	4604      	mov	r4, r0
900138b4:	212c      	movs	r1, #44	; 0x2c
900138b6:	f016 f9b2 	bl	90029c1e <_ZdlPvj>
900138ba:	4620      	mov	r0, r4
900138bc:	bd10      	pop	{r4, pc}

900138be <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
900138be:	6a83      	ldr	r3, [r0, #40]	; 0x28
900138c0:	b19b      	cbz	r3, 900138ea <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
900138c2:	428b      	cmp	r3, r1
900138c4:	d109      	bne.n	900138da <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
900138c6:	699a      	ldr	r2, [r3, #24]
900138c8:	2100      	movs	r1, #0
900138ca:	6159      	str	r1, [r3, #20]
900138cc:	6282      	str	r2, [r0, #40]	; 0x28
900138ce:	b902      	cbnz	r2, 900138d2 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
900138d0:	4770      	bx	lr
900138d2:	6199      	str	r1, [r3, #24]
900138d4:	4770      	bx	lr
900138d6:	4613      	mov	r3, r2
900138d8:	b13a      	cbz	r2, 900138ea <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
900138da:	699a      	ldr	r2, [r3, #24]
900138dc:	428a      	cmp	r2, r1
900138de:	d1fa      	bne.n	900138d6 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
900138e0:	698a      	ldr	r2, [r1, #24]
900138e2:	619a      	str	r2, [r3, #24]
900138e4:	2300      	movs	r3, #0
900138e6:	e9c1 3305 	strd	r3, r3, [r1, #20]
900138ea:	4770      	bx	lr

900138ec <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
900138ec:	b410      	push	{r4}
900138ee:	6a83      	ldr	r3, [r0, #40]	; 0x28
900138f0:	4604      	mov	r4, r0
900138f2:	b92b      	cbnz	r3, 90013900 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
900138f4:	6803      	ldr	r3, [r0, #0]
900138f6:	4611      	mov	r1, r2
900138f8:	f85d 4b04 	ldr.w	r4, [sp], #4
900138fc:	6e1b      	ldr	r3, [r3, #96]	; 0x60
900138fe:	4718      	bx	r3
90013900:	b941      	cbnz	r1, 90013914 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
90013902:	6193      	str	r3, [r2, #24]
90013904:	6282      	str	r2, [r0, #40]	; 0x28
90013906:	6154      	str	r4, [r2, #20]
90013908:	f85d 4b04 	ldr.w	r4, [sp], #4
9001390c:	4770      	bx	lr
9001390e:	4603      	mov	r3, r0
90013910:	2800      	cmp	r0, #0
90013912:	d0f9      	beq.n	90013908 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
90013914:	4299      	cmp	r1, r3
90013916:	6998      	ldr	r0, [r3, #24]
90013918:	d1f9      	bne.n	9001390e <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
9001391a:	6190      	str	r0, [r2, #24]
9001391c:	618a      	str	r2, [r1, #24]
9001391e:	e7f2      	b.n	90013906 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

90013920 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
90013920:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90013924:	461f      	mov	r7, r3
90013926:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
9001392a:	460d      	mov	r5, r1
9001392c:	4616      	mov	r6, r2
9001392e:	b103      	cbz	r3, 90013932 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
90013930:	6038      	str	r0, [r7, #0]
90013932:	6a84      	ldr	r4, [r0, #40]	; 0x28
90013934:	b314      	cbz	r4, 9001397c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
90013936:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
9001393a:	b1eb      	cbz	r3, 90013978 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
9001393c:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
90013940:	428d      	cmp	r5, r1
90013942:	db19      	blt.n	90013978 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
90013944:	b289      	uxth	r1, r1
90013946:	8923      	ldrh	r3, [r4, #8]
90013948:	440b      	add	r3, r1
9001394a:	b21b      	sxth	r3, r3
9001394c:	429d      	cmp	r5, r3
9001394e:	da13      	bge.n	90013978 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
90013950:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
90013954:	4296      	cmp	r6, r2
90013956:	db0f      	blt.n	90013978 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
90013958:	b292      	uxth	r2, r2
9001395a:	8963      	ldrh	r3, [r4, #10]
9001395c:	4413      	add	r3, r2
9001395e:	b21b      	sxth	r3, r3
90013960:	429e      	cmp	r6, r3
90013962:	da09      	bge.n	90013978 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
90013964:	6823      	ldr	r3, [r4, #0]
90013966:	1ab2      	subs	r2, r6, r2
90013968:	1a69      	subs	r1, r5, r1
9001396a:	4620      	mov	r0, r4
9001396c:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
90013970:	b212      	sxth	r2, r2
90013972:	463b      	mov	r3, r7
90013974:	b209      	sxth	r1, r1
90013976:	47c0      	blx	r8
90013978:	69a4      	ldr	r4, [r4, #24]
9001397a:	e7db      	b.n	90013934 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
9001397c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

90013980 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
90013980:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90013984:	4c6d      	ldr	r4, [pc, #436]	; (90013b3c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1bc>)
90013986:	b0a1      	sub	sp, #132	; 0x84
90013988:	4606      	mov	r6, r0
9001398a:	6824      	ldr	r4, [r4, #0]
9001398c:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
9001398e:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
90013992:	2400      	movs	r4, #0
90013994:	9303      	str	r3, [sp, #12]
90013996:	802c      	strh	r4, [r5, #0]
90013998:	9d2b      	ldr	r5, [sp, #172]	; 0xac
9001399a:	802c      	strh	r4, [r5, #0]
9001399c:	601c      	str	r4, [r3, #0]
9001399e:	e9cd 1201 	strd	r1, r2, [sp, #4]
900139a2:	f7ff ffbd 	bl	90013920 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
900139a6:	f1b9 0f03 	cmp.w	r9, #3
900139aa:	f340 80c1 	ble.w	90013b30 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b0>
900139ae:	4631      	mov	r1, r6
900139b0:	a80c      	add	r0, sp, #48	; 0x30
900139b2:	f006 f8fb 	bl	90019bac <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900139b6:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
900139ba:	9306      	str	r3, [sp, #24]
900139bc:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
900139c0:	9307      	str	r3, [sp, #28]
900139c2:	9b03      	ldr	r3, [sp, #12]
900139c4:	f8d3 a000 	ldr.w	sl, [r3]
900139c8:	f1ba 0f00 	cmp.w	sl, #0
900139cc:	f000 80b3 	beq.w	90013b36 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b6>
900139d0:	4651      	mov	r1, sl
900139d2:	a810      	add	r0, sp, #64	; 0x40
900139d4:	f006 f8ea 	bl	90019bac <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900139d8:	2002      	movs	r0, #2
900139da:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
900139de:	9b01      	ldr	r3, [sp, #4]
900139e0:	9a06      	ldr	r2, [sp, #24]
900139e2:	fb91 f1f0 	sdiv	r1, r1, r0
900139e6:	189d      	adds	r5, r3, r2
900139e8:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
900139ec:	9a07      	ldr	r2, [sp, #28]
900139ee:	4419      	add	r1, r3
900139f0:	9b02      	ldr	r3, [sp, #8]
900139f2:	4413      	add	r3, r2
900139f4:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
900139f8:	1a6d      	subs	r5, r5, r1
900139fa:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
900139fe:	fb92 f2f0 	sdiv	r2, r2, r0
90013a02:	440a      	add	r2, r1
90013a04:	1a9b      	subs	r3, r3, r2
90013a06:	435b      	muls	r3, r3
90013a08:	fb05 3505 	mla	r5, r5, r5, r3
90013a0c:	4f4c      	ldr	r7, [pc, #304]	; (90013b40 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
90013a0e:	ac10      	add	r4, sp, #64	; 0x40
90013a10:	f1b9 0f0c 	cmp.w	r9, #12
90013a14:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
90013a16:	c40f      	stmia	r4!, {r0, r1, r2, r3}
90013a18:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
90013a1a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
90013a1c:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
90013a1e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
90013a20:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
90013a24:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
90013a28:	f04f 0303 	mov.w	r3, #3
90013a2c:	bfd8      	it	le
90013a2e:	f109 32ff 	addle.w	r2, r9, #4294967295
90013a32:	f04f 0400 	mov.w	r4, #0
90013a36:	f8cd 9000 	str.w	r9, [sp]
90013a3a:	bfcc      	ite	gt
90013a3c:	4698      	movgt	r8, r3
90013a3e:	fb92 f8f3 	sdivle	r8, r2, r3
90013a42:	1c63      	adds	r3, r4, #1
90013a44:	aa10      	add	r2, sp, #64	; 0x40
90013a46:	f004 0401 	and.w	r4, r4, #1
90013a4a:	f04f 0b00 	mov.w	fp, #0
90013a4e:	9308      	str	r3, [sp, #32]
90013a50:	9b00      	ldr	r3, [sp, #0]
90013a52:	eb02 1444 	add.w	r4, r2, r4, lsl #5
90013a56:	fb93 f3f8 	sdiv	r3, r3, r8
90013a5a:	3404      	adds	r4, #4
90013a5c:	b29b      	uxth	r3, r3
90013a5e:	9304      	str	r3, [sp, #16]
90013a60:	9a04      	ldr	r2, [sp, #16]
90013a62:	f854 3c04 	ldr.w	r3, [r4, #-4]
90013a66:	fb13 f302 	smulbb	r3, r3, r2
90013a6a:	9a01      	ldr	r2, [sp, #4]
90013a6c:	b29b      	uxth	r3, r3
90013a6e:	1899      	adds	r1, r3, r2
90013a70:	9305      	str	r3, [sp, #20]
90013a72:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
90013a76:	b209      	sxth	r1, r1
90013a78:	4299      	cmp	r1, r3
90013a7a:	db4d      	blt.n	90013b18 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
90013a7c:	8932      	ldrh	r2, [r6, #8]
90013a7e:	4413      	add	r3, r2
90013a80:	b21b      	sxth	r3, r3
90013a82:	4299      	cmp	r1, r3
90013a84:	da48      	bge.n	90013b18 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
90013a86:	9b04      	ldr	r3, [sp, #16]
90013a88:	6827      	ldr	r7, [r4, #0]
90013a8a:	fb17 f703 	smulbb	r7, r7, r3
90013a8e:	9b02      	ldr	r3, [sp, #8]
90013a90:	b2bf      	uxth	r7, r7
90013a92:	18fa      	adds	r2, r7, r3
90013a94:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
90013a98:	b212      	sxth	r2, r2
90013a9a:	429a      	cmp	r2, r3
90013a9c:	db3c      	blt.n	90013b18 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
90013a9e:	8970      	ldrh	r0, [r6, #10]
90013aa0:	4403      	add	r3, r0
90013aa2:	b21b      	sxth	r3, r3
90013aa4:	429a      	cmp	r2, r3
90013aa6:	da37      	bge.n	90013b18 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
90013aa8:	2300      	movs	r3, #0
90013aaa:	4630      	mov	r0, r6
90013aac:	930b      	str	r3, [sp, #44]	; 0x2c
90013aae:	ab0b      	add	r3, sp, #44	; 0x2c
90013ab0:	f7ff ff36 	bl	90013920 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
90013ab4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
90013ab6:	b37a      	cbz	r2, 90013b18 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
90013ab8:	4552      	cmp	r2, sl
90013aba:	d02d      	beq.n	90013b18 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
90013abc:	4611      	mov	r1, r2
90013abe:	a80e      	add	r0, sp, #56	; 0x38
90013ac0:	9209      	str	r2, [sp, #36]	; 0x24
90013ac2:	f006 f873 	bl	90019bac <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90013ac6:	f04f 0e02 	mov.w	lr, #2
90013aca:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
90013ace:	9a06      	ldr	r2, [sp, #24]
90013ad0:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
90013ad4:	9b01      	ldr	r3, [sp, #4]
90013ad6:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
90013ada:	4413      	add	r3, r2
90013adc:	9a07      	ldr	r2, [sp, #28]
90013ade:	fb91 f1fe 	sdiv	r1, r1, lr
90013ae2:	fb9c fcfe 	sdiv	ip, ip, lr
90013ae6:	4401      	add	r1, r0
90013ae8:	1a58      	subs	r0, r3, r1
90013aea:	9b02      	ldr	r3, [sp, #8]
90013aec:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
90013af0:	4413      	add	r3, r2
90013af2:	9a09      	ldr	r2, [sp, #36]	; 0x24
90013af4:	448c      	add	ip, r1
90013af6:	eba3 030c 	sub.w	r3, r3, ip
90013afa:	435b      	muls	r3, r3
90013afc:	fb00 3300 	mla	r3, r0, r0, r3
90013b00:	42ab      	cmp	r3, r5
90013b02:	d208      	bcs.n	90013b16 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
90013b04:	990b      	ldr	r1, [sp, #44]	; 0x2c
90013b06:	461d      	mov	r5, r3
90013b08:	9803      	ldr	r0, [sp, #12]
90013b0a:	6001      	str	r1, [r0, #0]
90013b0c:	992a      	ldr	r1, [sp, #168]	; 0xa8
90013b0e:	9805      	ldr	r0, [sp, #20]
90013b10:	8008      	strh	r0, [r1, #0]
90013b12:	992b      	ldr	r1, [sp, #172]	; 0xac
90013b14:	800f      	strh	r7, [r1, #0]
90013b16:	4692      	mov	sl, r2
90013b18:	f10b 0b01 	add.w	fp, fp, #1
90013b1c:	3408      	adds	r4, #8
90013b1e:	f1bb 0f04 	cmp.w	fp, #4
90013b22:	d19d      	bne.n	90013a60 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
90013b24:	9b00      	ldr	r3, [sp, #0]
90013b26:	9c08      	ldr	r4, [sp, #32]
90013b28:	444b      	add	r3, r9
90013b2a:	4544      	cmp	r4, r8
90013b2c:	9300      	str	r3, [sp, #0]
90013b2e:	d188      	bne.n	90013a42 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
90013b30:	b021      	add	sp, #132	; 0x84
90013b32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90013b36:	f04f 35ff 	mov.w	r5, #4294967295
90013b3a:	e767      	b.n	90013a0c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
90013b3c:	240236cc 	.word	0x240236cc
90013b40:	9002b134 	.word	0x9002b134

90013b44 <_ZN8touchgfx4RectaNERKS0_>:
90013b44:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90013b48:	f9b1 7000 	ldrsh.w	r7, [r1]
90013b4c:	888c      	ldrh	r4, [r1, #4]
90013b4e:	f9b0 9000 	ldrsh.w	r9, [r0]
90013b52:	443c      	add	r4, r7
90013b54:	b2a4      	uxth	r4, r4
90013b56:	fa0f f884 	sxth.w	r8, r4
90013b5a:	45c1      	cmp	r9, r8
90013b5c:	da2f      	bge.n	90013bbe <_ZN8touchgfx4RectaNERKS0_+0x7a>
90013b5e:	8882      	ldrh	r2, [r0, #4]
90013b60:	444a      	add	r2, r9
90013b62:	b292      	uxth	r2, r2
90013b64:	fa0f fe82 	sxth.w	lr, r2
90013b68:	4577      	cmp	r7, lr
90013b6a:	da28      	bge.n	90013bbe <_ZN8touchgfx4RectaNERKS0_+0x7a>
90013b6c:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
90013b70:	88cb      	ldrh	r3, [r1, #6]
90013b72:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
90013b76:	442b      	add	r3, r5
90013b78:	b21b      	sxth	r3, r3
90013b7a:	429e      	cmp	r6, r3
90013b7c:	da1f      	bge.n	90013bbe <_ZN8touchgfx4RectaNERKS0_+0x7a>
90013b7e:	88c3      	ldrh	r3, [r0, #6]
90013b80:	4433      	add	r3, r6
90013b82:	b29b      	uxth	r3, r3
90013b84:	fa0f fc83 	sxth.w	ip, r3
90013b88:	4565      	cmp	r5, ip
90013b8a:	da18      	bge.n	90013bbe <_ZN8touchgfx4RectaNERKS0_+0x7a>
90013b8c:	454f      	cmp	r7, r9
90013b8e:	bfb8      	it	lt
90013b90:	464f      	movlt	r7, r9
90013b92:	42b5      	cmp	r5, r6
90013b94:	bfb8      	it	lt
90013b96:	4635      	movlt	r5, r6
90013b98:	45f0      	cmp	r8, lr
90013b9a:	bfd8      	it	le
90013b9c:	4622      	movle	r2, r4
90013b9e:	1bd2      	subs	r2, r2, r7
90013ba0:	8082      	strh	r2, [r0, #4]
90013ba2:	884a      	ldrh	r2, [r1, #2]
90013ba4:	88c9      	ldrh	r1, [r1, #6]
90013ba6:	8007      	strh	r7, [r0, #0]
90013ba8:	440a      	add	r2, r1
90013baa:	8045      	strh	r5, [r0, #2]
90013bac:	b292      	uxth	r2, r2
90013bae:	b211      	sxth	r1, r2
90013bb0:	458c      	cmp	ip, r1
90013bb2:	bfa8      	it	ge
90013bb4:	4613      	movge	r3, r2
90013bb6:	1b5b      	subs	r3, r3, r5
90013bb8:	80c3      	strh	r3, [r0, #6]
90013bba:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90013bbe:	2300      	movs	r3, #0
90013bc0:	8003      	strh	r3, [r0, #0]
90013bc2:	8043      	strh	r3, [r0, #2]
90013bc4:	8083      	strh	r3, [r0, #4]
90013bc6:	80c3      	strh	r3, [r0, #6]
90013bc8:	e7f7      	b.n	90013bba <_ZN8touchgfx4RectaNERKS0_+0x76>

90013bca <_ZNK8touchgfx4Rect7isEmptyEv>:
90013bca:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
90013bce:	2b00      	cmp	r3, #0
90013bd0:	dd06      	ble.n	90013be0 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
90013bd2:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
90013bd6:	2800      	cmp	r0, #0
90013bd8:	bfcc      	ite	gt
90013bda:	2000      	movgt	r0, #0
90013bdc:	2001      	movle	r0, #1
90013bde:	4770      	bx	lr
90013be0:	2001      	movs	r0, #1
90013be2:	4770      	bx	lr

90013be4 <_ZNK8touchgfx9Container16getContainedAreaEv>:
90013be4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90013be8:	2300      	movs	r3, #0
90013bea:	4604      	mov	r4, r0
90013bec:	6a8d      	ldr	r5, [r1, #40]	; 0x28
90013bee:	8003      	strh	r3, [r0, #0]
90013bf0:	8043      	strh	r3, [r0, #2]
90013bf2:	8083      	strh	r3, [r0, #4]
90013bf4:	80c3      	strh	r3, [r0, #6]
90013bf6:	2d00      	cmp	r5, #0
90013bf8:	d040      	beq.n	90013c7c <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
90013bfa:	1d28      	adds	r0, r5, #4
90013bfc:	f7ff ffe5 	bl	90013bca <_ZNK8touchgfx4Rect7isEmptyEv>
90013c00:	b988      	cbnz	r0, 90013c26 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
90013c02:	4620      	mov	r0, r4
90013c04:	f7ff ffe1 	bl	90013bca <_ZNK8touchgfx4Rect7isEmptyEv>
90013c08:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
90013c0c:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
90013c10:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
90013c14:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
90013c18:	b138      	cbz	r0, 90013c2a <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
90013c1a:	8022      	strh	r2, [r4, #0]
90013c1c:	8063      	strh	r3, [r4, #2]
90013c1e:	f8a4 e004 	strh.w	lr, [r4, #4]
90013c22:	f8a4 c006 	strh.w	ip, [r4, #6]
90013c26:	69ad      	ldr	r5, [r5, #24]
90013c28:	e7e5      	b.n	90013bf6 <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
90013c2a:	f9b4 0000 	ldrsh.w	r0, [r4]
90013c2e:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
90013c32:	4290      	cmp	r0, r2
90013c34:	4607      	mov	r7, r0
90013c36:	f8b4 8004 	ldrh.w	r8, [r4, #4]
90013c3a:	460e      	mov	r6, r1
90013c3c:	bfa8      	it	ge
90013c3e:	4617      	movge	r7, r2
90013c40:	4299      	cmp	r1, r3
90013c42:	4472      	add	r2, lr
90013c44:	f8b4 e006 	ldrh.w	lr, [r4, #6]
90013c48:	bfa8      	it	ge
90013c4a:	461e      	movge	r6, r3
90013c4c:	4440      	add	r0, r8
90013c4e:	4471      	add	r1, lr
90013c50:	4463      	add	r3, ip
90013c52:	b200      	sxth	r0, r0
90013c54:	8027      	strh	r7, [r4, #0]
90013c56:	b212      	sxth	r2, r2
90013c58:	8066      	strh	r6, [r4, #2]
90013c5a:	b209      	sxth	r1, r1
90013c5c:	b21b      	sxth	r3, r3
90013c5e:	4290      	cmp	r0, r2
90013c60:	bfac      	ite	ge
90013c62:	ebc7 0200 	rsbge	r2, r7, r0
90013c66:	ebc7 0202 	rsblt	r2, r7, r2
90013c6a:	4299      	cmp	r1, r3
90013c6c:	bfac      	ite	ge
90013c6e:	ebc6 0301 	rsbge	r3, r6, r1
90013c72:	ebc6 0303 	rsblt	r3, r6, r3
90013c76:	80a2      	strh	r2, [r4, #4]
90013c78:	80e3      	strh	r3, [r4, #6]
90013c7a:	e7d4      	b.n	90013c26 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
90013c7c:	4620      	mov	r0, r4
90013c7e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

90013c82 <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
90013c82:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
90013c86:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
90013c8a:	b383      	cbz	r3, 90013cee <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
90013c8c:	6a84      	ldr	r4, [r0, #40]	; 0x28
90013c8e:	b374      	cbz	r4, 90013cee <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
90013c90:	f9b1 5000 	ldrsh.w	r5, [r1]
90013c94:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
90013c98:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
90013c9c:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
90013ca0:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
90013ca4:	b303      	cbz	r3, 90013ce8 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
90013ca6:	4668      	mov	r0, sp
90013ca8:	1d21      	adds	r1, r4, #4
90013caa:	f8ad 5000 	strh.w	r5, [sp]
90013cae:	f8ad 6002 	strh.w	r6, [sp, #2]
90013cb2:	f8ad 7004 	strh.w	r7, [sp, #4]
90013cb6:	f8ad 8006 	strh.w	r8, [sp, #6]
90013cba:	f7ff ff43 	bl	90013b44 <_ZN8touchgfx4RectaNERKS0_>
90013cbe:	4668      	mov	r0, sp
90013cc0:	f7ff ff83 	bl	90013bca <_ZNK8touchgfx4Rect7isEmptyEv>
90013cc4:	b980      	cbnz	r0, 90013ce8 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
90013cc6:	f8bd 3000 	ldrh.w	r3, [sp]
90013cca:	4669      	mov	r1, sp
90013ccc:	88a2      	ldrh	r2, [r4, #4]
90013cce:	4620      	mov	r0, r4
90013cd0:	1a9b      	subs	r3, r3, r2
90013cd2:	88e2      	ldrh	r2, [r4, #6]
90013cd4:	f8ad 3000 	strh.w	r3, [sp]
90013cd8:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90013cdc:	1a9b      	subs	r3, r3, r2
90013cde:	f8ad 3002 	strh.w	r3, [sp, #2]
90013ce2:	6823      	ldr	r3, [r4, #0]
90013ce4:	689b      	ldr	r3, [r3, #8]
90013ce6:	4798      	blx	r3
90013ce8:	69a4      	ldr	r4, [r4, #24]
90013cea:	2c00      	cmp	r4, #0
90013cec:	d1d8      	bne.n	90013ca0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
90013cee:	b002      	add	sp, #8
90013cf0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

90013cf4 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
90013cf4:	b573      	push	{r0, r1, r4, r5, r6, lr}
90013cf6:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
90013cfa:	460d      	mov	r5, r1
90013cfc:	4616      	mov	r6, r2
90013cfe:	b323      	cbz	r3, 90013d4a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
90013d00:	6a84      	ldr	r4, [r0, #40]	; 0x28
90013d02:	b314      	cbz	r4, 90013d4a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
90013d04:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
90013d08:	b1eb      	cbz	r3, 90013d46 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
90013d0a:	6828      	ldr	r0, [r5, #0]
90013d0c:	466b      	mov	r3, sp
90013d0e:	6869      	ldr	r1, [r5, #4]
90013d10:	c303      	stmia	r3!, {r0, r1}
90013d12:	4668      	mov	r0, sp
90013d14:	1d21      	adds	r1, r4, #4
90013d16:	f7ff ff15 	bl	90013b44 <_ZN8touchgfx4RectaNERKS0_>
90013d1a:	4668      	mov	r0, sp
90013d1c:	f7ff ff55 	bl	90013bca <_ZNK8touchgfx4Rect7isEmptyEv>
90013d20:	b988      	cbnz	r0, 90013d46 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
90013d22:	f8bd 3000 	ldrh.w	r3, [sp]
90013d26:	4669      	mov	r1, sp
90013d28:	88a2      	ldrh	r2, [r4, #4]
90013d2a:	4620      	mov	r0, r4
90013d2c:	1a9b      	subs	r3, r3, r2
90013d2e:	88e2      	ldrh	r2, [r4, #6]
90013d30:	f8ad 3000 	strh.w	r3, [sp]
90013d34:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90013d38:	1a9b      	subs	r3, r3, r2
90013d3a:	4632      	mov	r2, r6
90013d3c:	f8ad 3002 	strh.w	r3, [sp, #2]
90013d40:	6823      	ldr	r3, [r4, #0]
90013d42:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
90013d44:	4798      	blx	r3
90013d46:	69a4      	ldr	r4, [r4, #24]
90013d48:	e7db      	b.n	90013d02 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
90013d4a:	b002      	add	sp, #8
90013d4c:	bd70      	pop	{r4, r5, r6, pc}

90013d4e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
90013d4e:	6803      	ldr	r3, [r0, #0]
90013d50:	b513      	push	{r0, r1, r4, lr}
90013d52:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
90013d56:	2300      	movs	r3, #0
90013d58:	e9cd 3300 	strd	r3, r3, [sp]
90013d5c:	466b      	mov	r3, sp
90013d5e:	47a0      	blx	r4
90013d60:	b002      	add	sp, #8
90013d62:	bd10      	pop	{r4, pc}

90013d64 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
90013d64:	2301      	movs	r3, #1
90013d66:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
90013d6a:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
90013d6e:	4770      	bx	lr

90013d70 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
90013d70:	2301      	movs	r3, #1
90013d72:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
90013d76:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
90013d7a:	4770      	bx	lr

90013d7c <_ZN8touchgfx3HAL17allowDMATransfersEv>:
90013d7c:	6843      	ldr	r3, [r0, #4]
90013d7e:	2201      	movs	r2, #1
90013d80:	725a      	strb	r2, [r3, #9]
90013d82:	6840      	ldr	r0, [r0, #4]
90013d84:	6803      	ldr	r3, [r0, #0]
90013d86:	691b      	ldr	r3, [r3, #16]
90013d88:	4718      	bx	r3

90013d8a <_ZN8touchgfx3HAL8flushDMAEv>:
90013d8a:	6840      	ldr	r0, [r0, #4]
90013d8c:	6803      	ldr	r3, [r0, #0]
90013d8e:	689b      	ldr	r3, [r3, #8]
90013d90:	4718      	bx	r3

90013d92 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
90013d92:	b530      	push	{r4, r5, lr}
90013d94:	b08b      	sub	sp, #44	; 0x2c
90013d96:	6804      	ldr	r4, [r0, #0]
90013d98:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
90013d9c:	9509      	str	r5, [sp, #36]	; 0x24
90013d9e:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
90013da2:	9508      	str	r5, [sp, #32]
90013da4:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
90013da8:	9507      	str	r5, [sp, #28]
90013daa:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
90013dae:	9506      	str	r5, [sp, #24]
90013db0:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
90013db4:	9505      	str	r5, [sp, #20]
90013db6:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
90013dba:	9504      	str	r5, [sp, #16]
90013dbc:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
90013dc0:	9503      	str	r5, [sp, #12]
90013dc2:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
90013dc6:	9502      	str	r5, [sp, #8]
90013dc8:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
90013dcc:	e9cd 3500 	strd	r3, r5, [sp]
90013dd0:	4613      	mov	r3, r2
90013dd2:	6be4      	ldr	r4, [r4, #60]	; 0x3c
90013dd4:	2200      	movs	r2, #0
90013dd6:	47a0      	blx	r4
90013dd8:	b00b      	add	sp, #44	; 0x2c
90013dda:	bd30      	pop	{r4, r5, pc}

90013ddc <_ZN8touchgfx3HAL10beginFrameEv>:
90013ddc:	4b04      	ldr	r3, [pc, #16]	; (90013df0 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
90013dde:	781b      	ldrb	r3, [r3, #0]
90013de0:	b123      	cbz	r3, 90013dec <_ZN8touchgfx3HAL10beginFrameEv+0x10>
90013de2:	f890 006e 	ldrb.w	r0, [r0, #110]	; 0x6e
90013de6:	f080 0001 	eor.w	r0, r0, #1
90013dea:	4770      	bx	lr
90013dec:	2001      	movs	r0, #1
90013dee:	4770      	bx	lr
90013df0:	240236ca 	.word	0x240236ca

90013df4 <_ZN8touchgfx3HAL8endFrameEv>:
90013df4:	b510      	push	{r4, lr}
90013df6:	4604      	mov	r4, r0
90013df8:	6840      	ldr	r0, [r0, #4]
90013dfa:	6803      	ldr	r3, [r0, #0]
90013dfc:	689b      	ldr	r3, [r3, #8]
90013dfe:	4798      	blx	r3
90013e00:	f894 306d 	ldrb.w	r3, [r4, #109]	; 0x6d
90013e04:	b113      	cbz	r3, 90013e0c <_ZN8touchgfx3HAL8endFrameEv+0x18>
90013e06:	2301      	movs	r3, #1
90013e08:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
90013e0c:	bd10      	pop	{r4, pc}

90013e0e <_ZN8touchgfx3HAL10initializeEv>:
90013e0e:	b510      	push	{r4, lr}
90013e10:	4604      	mov	r4, r0
90013e12:	f7ef fe5d 	bl	90003ad0 <_ZN8touchgfx10OSWrappers10initializeEv>
90013e16:	f7ee fc0f 	bl	90002638 <_ZN8touchgfx4GPIO4initEv>
90013e1a:	6860      	ldr	r0, [r4, #4]
90013e1c:	6803      	ldr	r3, [r0, #0]
90013e1e:	68db      	ldr	r3, [r3, #12]
90013e20:	4798      	blx	r3
90013e22:	68e0      	ldr	r0, [r4, #12]
90013e24:	6803      	ldr	r3, [r0, #0]
90013e26:	689b      	ldr	r3, [r3, #8]
90013e28:	4798      	blx	r3
90013e2a:	6823      	ldr	r3, [r4, #0]
90013e2c:	4620      	mov	r0, r4
90013e2e:	6f5b      	ldr	r3, [r3, #116]	; 0x74
90013e30:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90013e34:	4718      	bx	r3
	...

90013e38 <_ZN8touchgfx3HAL4tickEv>:
90013e38:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
90013e3a:	6803      	ldr	r3, [r0, #0]
90013e3c:	4604      	mov	r4, r0
90013e3e:	4d5b      	ldr	r5, [pc, #364]	; (90013fac <_ZN8touchgfx3HAL4tickEv+0x174>)
90013e40:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
90013e44:	4798      	blx	r3
90013e46:	2800      	cmp	r0, #0
90013e48:	f000 8095 	beq.w	90013f76 <_ZN8touchgfx3HAL4tickEv+0x13e>
90013e4c:	2001      	movs	r0, #1
90013e4e:	2600      	movs	r6, #0
90013e50:	f7ee fc1c 	bl	9000268c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
90013e54:	f894 306a 	ldrb.w	r3, [r4, #106]	; 0x6a
90013e58:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
90013e5c:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
90013e60:	f894 3079 	ldrb.w	r3, [r4, #121]	; 0x79
90013e64:	f884 606a 	strb.w	r6, [r4, #106]	; 0x6a
90013e68:	b133      	cbz	r3, 90013e78 <_ZN8touchgfx3HAL4tickEv+0x40>
90013e6a:	6823      	ldr	r3, [r4, #0]
90013e6c:	4620      	mov	r0, r4
90013e6e:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
90013e72:	4798      	blx	r3
90013e74:	f884 6079 	strb.w	r6, [r4, #121]	; 0x79
90013e78:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
90013e7c:	2601      	movs	r6, #1
90013e7e:	6862      	ldr	r2, [r4, #4]
90013e80:	f083 0301 	eor.w	r3, r3, #1
90013e84:	702e      	strb	r6, [r5, #0]
90013e86:	7253      	strb	r3, [r2, #9]
90013e88:	f004 fd7c 	bl	90018984 <_ZN8touchgfx11Application11getInstanceEv>
90013e8c:	6803      	ldr	r3, [r0, #0]
90013e8e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90013e90:	4798      	blx	r3
90013e92:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
90013e96:	b90b      	cbnz	r3, 90013e9c <_ZN8touchgfx3HAL4tickEv+0x64>
90013e98:	f884 606b 	strb.w	r6, [r4, #107]	; 0x6b
90013e9c:	f004 fd72 	bl	90018984 <_ZN8touchgfx11Application11getInstanceEv>
90013ea0:	6803      	ldr	r3, [r0, #0]
90013ea2:	695b      	ldr	r3, [r3, #20]
90013ea4:	4798      	blx	r3
90013ea6:	6de0      	ldr	r0, [r4, #92]	; 0x5c
90013ea8:	6803      	ldr	r3, [r0, #0]
90013eaa:	691b      	ldr	r3, [r3, #16]
90013eac:	4798      	blx	r3
90013eae:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
90013eb2:	f894 206c 	ldrb.w	r2, [r4, #108]	; 0x6c
90013eb6:	3b01      	subs	r3, #1
90013eb8:	b2db      	uxtb	r3, r3
90013eba:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
90013ebe:	b10a      	cbz	r2, 90013ec4 <_ZN8touchgfx3HAL4tickEv+0x8c>
90013ec0:	2b00      	cmp	r3, #0
90013ec2:	d1eb      	bne.n	90013e9c <_ZN8touchgfx3HAL4tickEv+0x64>
90013ec4:	4a3a      	ldr	r2, [pc, #232]	; (90013fb0 <_ZN8touchgfx3HAL4tickEv+0x178>)
90013ec6:	f994 1068 	ldrsb.w	r1, [r4, #104]	; 0x68
90013eca:	7813      	ldrb	r3, [r2, #0]
90013ecc:	3301      	adds	r3, #1
90013ece:	b25b      	sxtb	r3, r3
90013ed0:	4299      	cmp	r1, r3
90013ed2:	7013      	strb	r3, [r2, #0]
90013ed4:	dc10      	bgt.n	90013ef8 <_ZN8touchgfx3HAL4tickEv+0xc0>
90013ed6:	2300      	movs	r3, #0
90013ed8:	68e0      	ldr	r0, [r4, #12]
90013eda:	a902      	add	r1, sp, #8
90013edc:	7013      	strb	r3, [r2, #0]
90013ede:	aa03      	add	r2, sp, #12
90013ee0:	6803      	ldr	r3, [r0, #0]
90013ee2:	68db      	ldr	r3, [r3, #12]
90013ee4:	4798      	blx	r3
90013ee6:	6823      	ldr	r3, [r4, #0]
90013ee8:	2800      	cmp	r0, #0
90013eea:	d050      	beq.n	90013f8e <_ZN8touchgfx3HAL4tickEv+0x156>
90013eec:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
90013ef0:	4620      	mov	r0, r4
90013ef2:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
90013ef6:	4798      	blx	r3
90013ef8:	2300      	movs	r3, #0
90013efa:	6960      	ldr	r0, [r4, #20]
90013efc:	f88d 3007 	strb.w	r3, [sp, #7]
90013f00:	b158      	cbz	r0, 90013f1a <_ZN8touchgfx3HAL4tickEv+0xe2>
90013f02:	6803      	ldr	r3, [r0, #0]
90013f04:	f10d 0107 	add.w	r1, sp, #7
90013f08:	68db      	ldr	r3, [r3, #12]
90013f0a:	4798      	blx	r3
90013f0c:	b128      	cbz	r0, 90013f1a <_ZN8touchgfx3HAL4tickEv+0xe2>
90013f0e:	6de0      	ldr	r0, [r4, #92]	; 0x5c
90013f10:	f89d 1007 	ldrb.w	r1, [sp, #7]
90013f14:	6803      	ldr	r3, [r0, #0]
90013f16:	68db      	ldr	r3, [r3, #12]
90013f18:	4798      	blx	r3
90013f1a:	f104 001c 	add.w	r0, r4, #28
90013f1e:	f015 fa0b 	bl	90029338 <_ZN8touchgfx8Gestures4tickEv>
90013f22:	f894 3070 	ldrb.w	r3, [r4, #112]	; 0x70
90013f26:	b30b      	cbz	r3, 90013f6c <_ZN8touchgfx3HAL4tickEv+0x134>
90013f28:	6920      	ldr	r0, [r4, #16]
90013f2a:	6803      	ldr	r3, [r0, #0]
90013f2c:	691b      	ldr	r3, [r3, #16]
90013f2e:	4798      	blx	r3
90013f30:	6f63      	ldr	r3, [r4, #116]	; 0x74
90013f32:	4606      	mov	r6, r0
90013f34:	b903      	cbnz	r3, 90013f38 <_ZN8touchgfx3HAL4tickEv+0x100>
90013f36:	6760      	str	r0, [r4, #116]	; 0x74
90013f38:	6f63      	ldr	r3, [r4, #116]	; 0x74
90013f3a:	4a1e      	ldr	r2, [pc, #120]	; (90013fb4 <_ZN8touchgfx3HAL4tickEv+0x17c>)
90013f3c:	1af3      	subs	r3, r6, r3
90013f3e:	4293      	cmp	r3, r2
90013f40:	d914      	bls.n	90013f6c <_ZN8touchgfx3HAL4tickEv+0x134>
90013f42:	6920      	ldr	r0, [r4, #16]
90013f44:	6803      	ldr	r3, [r0, #0]
90013f46:	699b      	ldr	r3, [r3, #24]
90013f48:	4798      	blx	r3
90013f4a:	6f63      	ldr	r3, [r4, #116]	; 0x74
90013f4c:	2264      	movs	r2, #100	; 0x64
90013f4e:	1af3      	subs	r3, r6, r3
90013f50:	fbb3 f3f2 	udiv	r3, r3, r2
90013f54:	fbb0 f0f3 	udiv	r0, r0, r3
90013f58:	2800      	cmp	r0, #0
90013f5a:	dc1d      	bgt.n	90013f98 <_ZN8touchgfx3HAL4tickEv+0x160>
90013f5c:	f884 2069 	strb.w	r2, [r4, #105]	; 0x69
90013f60:	6920      	ldr	r0, [r4, #16]
90013f62:	2100      	movs	r1, #0
90013f64:	6803      	ldr	r3, [r0, #0]
90013f66:	69db      	ldr	r3, [r3, #28]
90013f68:	4798      	blx	r3
90013f6a:	6766      	str	r6, [r4, #116]	; 0x74
90013f6c:	f004 fd0a 	bl	90018984 <_ZN8touchgfx11Application11getInstanceEv>
90013f70:	6803      	ldr	r3, [r0, #0]
90013f72:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90013f74:	4798      	blx	r3
90013f76:	6823      	ldr	r3, [r4, #0]
90013f78:	4620      	mov	r0, r4
90013f7a:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
90013f7e:	4798      	blx	r3
90013f80:	2001      	movs	r0, #1
90013f82:	f7ee fbb7 	bl	900026f4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
90013f86:	2300      	movs	r3, #0
90013f88:	702b      	strb	r3, [r5, #0]
90013f8a:	b004      	add	sp, #16
90013f8c:	bd70      	pop	{r4, r5, r6, pc}
90013f8e:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
90013f92:	4620      	mov	r0, r4
90013f94:	4798      	blx	r3
90013f96:	e7af      	b.n	90013ef8 <_ZN8touchgfx3HAL4tickEv+0xc0>
90013f98:	2863      	cmp	r0, #99	; 0x63
90013f9a:	bfcb      	itete	gt
90013f9c:	2300      	movgt	r3, #0
90013f9e:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
90013fa2:	f884 3069 	strbgt.w	r3, [r4, #105]	; 0x69
90013fa6:	f884 0069 	strble.w	r0, [r4, #105]	; 0x69
90013faa:	e7d9      	b.n	90013f60 <_ZN8touchgfx3HAL4tickEv+0x128>
90013fac:	240236d0 	.word	0x240236d0
90013fb0:	240236d1 	.word	0x240236d1
90013fb4:	05f5e100 	.word	0x05f5e100

90013fb8 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
90013fb8:	b510      	push	{r4, lr}
90013fba:	4604      	mov	r4, r0
90013fbc:	f7ef fdba 	bl	90003b34 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
90013fc0:	2200      	movs	r2, #0
90013fc2:	6863      	ldr	r3, [r4, #4]
90013fc4:	729a      	strb	r2, [r3, #10]
90013fc6:	bd10      	pop	{r4, pc}

90013fc8 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
90013fc8:	65c1      	str	r1, [r0, #92]	; 0x5c
90013fca:	301c      	adds	r0, #28
90013fcc:	f015 b9b2 	b.w	90029334 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

90013fd0 <_ZN8touchgfx3HAL5touchEll>:
90013fd0:	b530      	push	{r4, r5, lr}
90013fd2:	b087      	sub	sp, #28
90013fd4:	4604      	mov	r4, r0
90013fd6:	a804      	add	r0, sp, #16
90013fd8:	e9cd 1204 	strd	r1, r2, [sp, #16]
90013fdc:	f004 fa9c 	bl	90018518 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
90013fe0:	9b04      	ldr	r3, [sp, #16]
90013fe2:	a906      	add	r1, sp, #24
90013fe4:	a803      	add	r0, sp, #12
90013fe6:	f8ad 300c 	strh.w	r3, [sp, #12]
90013fea:	9b05      	ldr	r3, [sp, #20]
90013fec:	f821 3d0a 	strh.w	r3, [r1, #-10]!
90013ff0:	f004 fae4 	bl	900185bc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
90013ff4:	f894 106f 	ldrb.w	r1, [r4, #111]	; 0x6f
90013ff8:	f104 001c 	add.w	r0, r4, #28
90013ffc:	f8bd 200c 	ldrh.w	r2, [sp, #12]
90014000:	f8bd 300e 	ldrh.w	r3, [sp, #14]
90014004:	b189      	cbz	r1, 9001402a <_ZN8touchgfx3HAL5touchEll+0x5a>
90014006:	f8b4 5064 	ldrh.w	r5, [r4, #100]	; 0x64
9001400a:	9300      	str	r3, [sp, #0]
9001400c:	4613      	mov	r3, r2
9001400e:	f8b4 1060 	ldrh.w	r1, [r4, #96]	; 0x60
90014012:	462a      	mov	r2, r5
90014014:	f015 f99e 	bl	90029354 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
90014018:	b128      	cbz	r0, 90014026 <_ZN8touchgfx3HAL5touchEll+0x56>
9001401a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
9001401e:	6623      	str	r3, [r4, #96]	; 0x60
90014020:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
90014024:	6663      	str	r3, [r4, #100]	; 0x64
90014026:	b007      	add	sp, #28
90014028:	bd30      	pop	{r4, r5, pc}
9001402a:	f015 f9d3 	bl	900293d4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
9001402e:	2301      	movs	r3, #1
90014030:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
90014034:	e7f1      	b.n	9001401a <_ZN8touchgfx3HAL5touchEll+0x4a>

90014036 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
90014036:	b510      	push	{r4, lr}
90014038:	2b00      	cmp	r3, #0
9001403a:	d046      	beq.n	900140ca <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
9001403c:	ea81 0002 	eor.w	r0, r1, r2
90014040:	07c4      	lsls	r4, r0, #31
90014042:	d508      	bpl.n	90014056 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
90014044:	440b      	add	r3, r1
90014046:	3a01      	subs	r2, #1
90014048:	428b      	cmp	r3, r1
9001404a:	d93e      	bls.n	900140ca <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
9001404c:	f812 0f01 	ldrb.w	r0, [r2, #1]!
90014050:	f801 0b01 	strb.w	r0, [r1], #1
90014054:	e7f8      	b.n	90014048 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
90014056:	07d0      	lsls	r0, r2, #31
90014058:	bf42      	ittt	mi
9001405a:	f812 0b01 	ldrbmi.w	r0, [r2], #1
9001405e:	f103 33ff 	addmi.w	r3, r3, #4294967295
90014062:	f801 0b01 	strbmi.w	r0, [r1], #1
90014066:	2b01      	cmp	r3, #1
90014068:	d911      	bls.n	9001408e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
9001406a:	ea81 0402 	eor.w	r4, r1, r2
9001406e:	4610      	mov	r0, r2
90014070:	07a4      	lsls	r4, r4, #30
90014072:	d022      	beq.n	900140ba <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
90014074:	f023 0401 	bic.w	r4, r3, #1
90014078:	440c      	add	r4, r1
9001407a:	428c      	cmp	r4, r1
9001407c:	4602      	mov	r2, r0
9001407e:	d904      	bls.n	9001408a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
90014080:	8812      	ldrh	r2, [r2, #0]
90014082:	3002      	adds	r0, #2
90014084:	f821 2b02 	strh.w	r2, [r1], #2
90014088:	e7f7      	b.n	9001407a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
9001408a:	f003 0301 	and.w	r3, r3, #1
9001408e:	f023 0003 	bic.w	r0, r3, #3
90014092:	4408      	add	r0, r1
90014094:	4288      	cmp	r0, r1
90014096:	4614      	mov	r4, r2
90014098:	d904      	bls.n	900140a4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
9001409a:	6824      	ldr	r4, [r4, #0]
9001409c:	3204      	adds	r2, #4
9001409e:	f841 4b04 	str.w	r4, [r1], #4
900140a2:	e7f7      	b.n	90014094 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
900140a4:	f003 0303 	and.w	r3, r3, #3
900140a8:	3a01      	subs	r2, #1
900140aa:	440b      	add	r3, r1
900140ac:	428b      	cmp	r3, r1
900140ae:	d90c      	bls.n	900140ca <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
900140b0:	f812 0f01 	ldrb.w	r0, [r2, #1]!
900140b4:	f801 0b01 	strb.w	r0, [r1], #1
900140b8:	e7f8      	b.n	900140ac <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
900140ba:	0790      	lsls	r0, r2, #30
900140bc:	d0e7      	beq.n	9001408e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
900140be:	f832 0b02 	ldrh.w	r0, [r2], #2
900140c2:	3b02      	subs	r3, #2
900140c4:	f821 0b02 	strh.w	r0, [r1], #2
900140c8:	e7e1      	b.n	9001408e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
900140ca:	2001      	movs	r0, #1
900140cc:	bd10      	pop	{r4, pc}

900140ce <_ZN8touchgfx3HAL7noTouchEv>:
900140ce:	b510      	push	{r4, lr}
900140d0:	f890 306f 	ldrb.w	r3, [r0, #111]	; 0x6f
900140d4:	4604      	mov	r4, r0
900140d6:	b153      	cbz	r3, 900140ee <_ZN8touchgfx3HAL7noTouchEv+0x20>
900140d8:	f8b0 3064 	ldrh.w	r3, [r0, #100]	; 0x64
900140dc:	2101      	movs	r1, #1
900140de:	f8b0 2060 	ldrh.w	r2, [r0, #96]	; 0x60
900140e2:	301c      	adds	r0, #28
900140e4:	f015 f976 	bl	900293d4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
900140e8:	2300      	movs	r3, #0
900140ea:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
900140ee:	bd10      	pop	{r4, pc}

900140f0 <_ZN8touchgfx8Drawable5setXYEss>:
900140f0:	b570      	push	{r4, r5, r6, lr}
900140f2:	6803      	ldr	r3, [r0, #0]
900140f4:	4604      	mov	r4, r0
900140f6:	4615      	mov	r5, r2
900140f8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
900140fa:	4798      	blx	r3
900140fc:	6823      	ldr	r3, [r4, #0]
900140fe:	4629      	mov	r1, r5
90014100:	4620      	mov	r0, r4
90014102:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90014104:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90014108:	4718      	bx	r3
	...

9001410c <_ZN8touchgfx3HAL3lcdEv>:
9001410c:	4b04      	ldr	r3, [pc, #16]	; (90014120 <_ZN8touchgfx3HAL3lcdEv+0x14>)
9001410e:	681b      	ldr	r3, [r3, #0]
90014110:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
90014114:	b10a      	cbz	r2, 9001411a <_ZN8touchgfx3HAL3lcdEv+0xe>
90014116:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
90014118:	b900      	cbnz	r0, 9001411c <_ZN8touchgfx3HAL3lcdEv+0x10>
9001411a:	6898      	ldr	r0, [r3, #8]
9001411c:	4770      	bx	lr
9001411e:	bf00      	nop
90014120:	240236cc 	.word	0x240236cc

90014124 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
90014124:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90014128:	b085      	sub	sp, #20
9001412a:	4604      	mov	r4, r0
9001412c:	2000      	movs	r0, #0
9001412e:	4699      	mov	r9, r3
90014130:	ad04      	add	r5, sp, #16
90014132:	460f      	mov	r7, r1
90014134:	4690      	mov	r8, r2
90014136:	f845 0d04 	str.w	r0, [r5, #-4]!
9001413a:	69a0      	ldr	r0, [r4, #24]
9001413c:	6806      	ldr	r6, [r0, #0]
9001413e:	9501      	str	r5, [sp, #4]
90014140:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
90014144:	9500      	str	r5, [sp, #0]
90014146:	6835      	ldr	r5, [r6, #0]
90014148:	47a8      	blx	r5
9001414a:	4d10      	ldr	r5, [pc, #64]	; (9001418c <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
9001414c:	4606      	mov	r6, r0
9001414e:	f8a5 9000 	strh.w	r9, [r5]
90014152:	f7ff ffdb 	bl	9001410c <_ZN8touchgfx3HAL3lcdEv>
90014156:	6803      	ldr	r3, [r0, #0]
90014158:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001415a:	4798      	blx	r3
9001415c:	b128      	cbz	r0, 9001416a <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
9001415e:	2801      	cmp	r0, #1
90014160:	d00b      	beq.n	9001417a <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
90014162:	4630      	mov	r0, r6
90014164:	b005      	add	sp, #20
90014166:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9001416a:	882b      	ldrh	r3, [r5, #0]
9001416c:	fb08 7203 	mla	r2, r8, r3, r7
90014170:	9b03      	ldr	r3, [sp, #12]
90014172:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
90014176:	63e3      	str	r3, [r4, #60]	; 0x3c
90014178:	e7f3      	b.n	90014162 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
9001417a:	882a      	ldrh	r2, [r5, #0]
9001417c:	9b03      	ldr	r3, [sp, #12]
9001417e:	fb08 7202 	mla	r2, r8, r2, r7
90014182:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90014186:	1a9a      	subs	r2, r3, r2
90014188:	63e2      	str	r2, [r4, #60]	; 0x3c
9001418a:	e7ea      	b.n	90014162 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
9001418c:	240236c6 	.word	0x240236c6

90014190 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
90014190:	b5f0      	push	{r4, r5, r6, r7, lr}
90014192:	b08b      	sub	sp, #44	; 0x2c
90014194:	4617      	mov	r7, r2
90014196:	4604      	mov	r4, r0
90014198:	460e      	mov	r6, r1
9001419a:	461d      	mov	r5, r3
9001419c:	f7ff ffb6 	bl	9001410c <_ZN8touchgfx3HAL3lcdEv>
900141a0:	6803      	ldr	r3, [r0, #0]
900141a2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900141a4:	4798      	blx	r3
900141a6:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
900141aa:	9007      	str	r0, [sp, #28]
900141ac:	4631      	mov	r1, r6
900141ae:	6822      	ldr	r2, [r4, #0]
900141b0:	e9cd 0308 	strd	r0, r3, [sp, #32]
900141b4:	4b0c      	ldr	r3, [pc, #48]	; (900141e8 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
900141b6:	4620      	mov	r0, r4
900141b8:	881b      	ldrh	r3, [r3, #0]
900141ba:	9306      	str	r3, [sp, #24]
900141bc:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
900141c0:	9305      	str	r3, [sp, #20]
900141c2:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
900141c6:	9304      	str	r3, [sp, #16]
900141c8:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
900141cc:	9303      	str	r3, [sp, #12]
900141ce:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
900141d2:	9302      	str	r3, [sp, #8]
900141d4:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
900141d8:	e9cd 5300 	strd	r5, r3, [sp]
900141dc:	463b      	mov	r3, r7
900141de:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
900141e0:	2200      	movs	r2, #0
900141e2:	47a8      	blx	r5
900141e4:	b00b      	add	sp, #44	; 0x2c
900141e6:	bdf0      	pop	{r4, r5, r6, r7, pc}
900141e8:	240236c6 	.word	0x240236c6

900141ec <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
900141ec:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900141f0:	4698      	mov	r8, r3
900141f2:	6803      	ldr	r3, [r0, #0]
900141f4:	b08b      	sub	sp, #44	; 0x2c
900141f6:	4617      	mov	r7, r2
900141f8:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
900141fa:	460e      	mov	r6, r1
900141fc:	4b13      	ldr	r3, [pc, #76]	; (9001424c <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
900141fe:	4604      	mov	r4, r0
90014200:	f8b3 9000 	ldrh.w	r9, [r3]
90014204:	f7ff ff82 	bl	9001410c <_ZN8touchgfx3HAL3lcdEv>
90014208:	6803      	ldr	r3, [r0, #0]
9001420a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001420c:	4798      	blx	r3
9001420e:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
90014212:	2200      	movs	r2, #0
90014214:	4631      	mov	r1, r6
90014216:	e9cd 0308 	strd	r0, r3, [sp, #32]
9001421a:	2302      	movs	r3, #2
9001421c:	4620      	mov	r0, r4
9001421e:	e9cd 9306 	strd	r9, r3, [sp, #24]
90014222:	2301      	movs	r3, #1
90014224:	9305      	str	r3, [sp, #20]
90014226:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
9001422a:	9304      	str	r3, [sp, #16]
9001422c:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
90014230:	9303      	str	r3, [sp, #12]
90014232:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
90014236:	9302      	str	r3, [sp, #8]
90014238:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
9001423c:	e9cd 8300 	strd	r8, r3, [sp]
90014240:	463b      	mov	r3, r7
90014242:	47a8      	blx	r5
90014244:	b00b      	add	sp, #44	; 0x2c
90014246:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9001424a:	bf00      	nop
9001424c:	240236c6 	.word	0x240236c6

90014250 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
90014250:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90014254:	4698      	mov	r8, r3
90014256:	6803      	ldr	r3, [r0, #0]
90014258:	b087      	sub	sp, #28
9001425a:	460e      	mov	r6, r1
9001425c:	6d9d      	ldr	r5, [r3, #88]	; 0x58
9001425e:	4617      	mov	r7, r2
90014260:	4b0f      	ldr	r3, [pc, #60]	; (900142a0 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
90014262:	4604      	mov	r4, r0
90014264:	f8b3 9000 	ldrh.w	r9, [r3]
90014268:	f7ff ff50 	bl	9001410c <_ZN8touchgfx3HAL3lcdEv>
9001426c:	6803      	ldr	r3, [r0, #0]
9001426e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90014270:	4798      	blx	r3
90014272:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
90014276:	463a      	mov	r2, r7
90014278:	4631      	mov	r1, r6
9001427a:	f8cd 900c 	str.w	r9, [sp, #12]
9001427e:	e9cd 0304 	strd	r0, r3, [sp, #16]
90014282:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
90014286:	4620      	mov	r0, r4
90014288:	9302      	str	r3, [sp, #8]
9001428a:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
9001428e:	9301      	str	r3, [sp, #4]
90014290:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
90014294:	9300      	str	r3, [sp, #0]
90014296:	4643      	mov	r3, r8
90014298:	47a8      	blx	r5
9001429a:	b007      	add	sp, #28
9001429c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
900142a0:	240236c6 	.word	0x240236c6

900142a4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
900142a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900142a8:	4604      	mov	r4, r0
900142aa:	b08f      	sub	sp, #60	; 0x3c
900142ac:	4610      	mov	r0, r2
900142ae:	460d      	mov	r5, r1
900142b0:	4691      	mov	r9, r2
900142b2:	461e      	mov	r6, r3
900142b4:	f007 fc12 	bl	9001badc <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
900142b8:	2800      	cmp	r0, #0
900142ba:	f000 809d 	beq.w	900143f8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
900142be:	6823      	ldr	r3, [r4, #0]
900142c0:	4620      	mov	r0, r4
900142c2:	f8df b198 	ldr.w	fp, [pc, #408]	; 9001445c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
900142c6:	f10d 0838 	add.w	r8, sp, #56	; 0x38
900142ca:	6a9b      	ldr	r3, [r3, #40]	; 0x28
900142cc:	4798      	blx	r3
900142ce:	6823      	ldr	r3, [r4, #0]
900142d0:	4620      	mov	r0, r4
900142d2:	f8df a18c 	ldr.w	sl, [pc, #396]	; 90014460 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
900142d6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900142d8:	4798      	blx	r3
900142da:	f8bb 3000 	ldrh.w	r3, [fp]
900142de:	4f5c      	ldr	r7, [pc, #368]	; (90014450 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
900142e0:	9301      	str	r3, [sp, #4]
900142e2:	f8ba 3000 	ldrh.w	r3, [sl]
900142e6:	f828 9d1c 	strh.w	r9, [r8, #-28]!
900142ea:	4640      	mov	r0, r8
900142ec:	9302      	str	r3, [sp, #8]
900142ee:	883b      	ldrh	r3, [r7, #0]
900142f0:	9303      	str	r3, [sp, #12]
900142f2:	4b58      	ldr	r3, [pc, #352]	; (90014454 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
900142f4:	881a      	ldrh	r2, [r3, #0]
900142f6:	9305      	str	r3, [sp, #20]
900142f8:	9204      	str	r2, [sp, #16]
900142fa:	f007 fc83 	bl	9001bc04 <_ZNK8touchgfx6Bitmap8getWidthEv>
900142fe:	8038      	strh	r0, [r7, #0]
90014300:	4640      	mov	r0, r8
90014302:	f007 fcb3 	bl	9001bc6c <_ZNK8touchgfx6Bitmap9getHeightEv>
90014306:	9b05      	ldr	r3, [sp, #20]
90014308:	b280      	uxth	r0, r0
9001430a:	8018      	strh	r0, [r3, #0]
9001430c:	4b52      	ldr	r3, [pc, #328]	; (90014458 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
9001430e:	781b      	ldrb	r3, [r3, #0]
90014310:	2b00      	cmp	r3, #0
90014312:	d174      	bne.n	900143fe <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
90014314:	883b      	ldrh	r3, [r7, #0]
90014316:	f8aa 0000 	strh.w	r0, [sl]
9001431a:	f8ab 3000 	strh.w	r3, [fp]
9001431e:	4648      	mov	r0, r9
90014320:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
90014324:	f007 fbda 	bl	9001badc <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
90014328:	2200      	movs	r2, #0
9001432a:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
9001432e:	4611      	mov	r1, r2
90014330:	4628      	mov	r0, r5
90014332:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
90014336:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
9001433a:	f7ff fed9 	bl	900140f0 <_ZN8touchgfx8Drawable5setXYEss>
9001433e:	2301      	movs	r3, #1
90014340:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
90014344:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
90014348:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
9001434c:	2b00      	cmp	r3, #0
9001434e:	dd5c      	ble.n	9001440a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
90014350:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
90014354:	2b00      	cmp	r3, #0
90014356:	dd58      	ble.n	9001440a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
90014358:	462a      	mov	r2, r5
9001435a:	ab0a      	add	r3, sp, #40	; 0x28
9001435c:	f852 0f04 	ldr.w	r0, [r2, #4]!
90014360:	6851      	ldr	r1, [r2, #4]
90014362:	c303      	stmia	r3!, {r0, r1}
90014364:	4631      	mov	r1, r6
90014366:	a80a      	add	r0, sp, #40	; 0x28
90014368:	f7ff fbec 	bl	90013b44 <_ZN8touchgfx4RectaNERKS0_>
9001436c:	4b38      	ldr	r3, [pc, #224]	; (90014450 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
9001436e:	2100      	movs	r1, #0
90014370:	f9b3 2000 	ldrsh.w	r2, [r3]
90014374:	4b37      	ldr	r3, [pc, #220]	; (90014454 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
90014376:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
9001437a:	aa0a      	add	r2, sp, #40	; 0x28
9001437c:	f9b3 3000 	ldrsh.w	r3, [r3]
90014380:	910c      	str	r1, [sp, #48]	; 0x30
90014382:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
90014386:	ab08      	add	r3, sp, #32
90014388:	e892 0003 	ldmia.w	r2, {r0, r1}
9001438c:	e883 0003 	stmia.w	r3, {r0, r1}
90014390:	4618      	mov	r0, r3
90014392:	a90c      	add	r1, sp, #48	; 0x30
90014394:	f7ff fbd6 	bl	90013b44 <_ZN8touchgfx4RectaNERKS0_>
90014398:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
9001439a:	2b00      	cmp	r3, #0
9001439c:	d13c      	bne.n	90014418 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
9001439e:	2000      	movs	r0, #0
900143a0:	f884 0058 	strb.w	r0, [r4, #88]	; 0x58
900143a4:	2600      	movs	r6, #0
900143a6:	696b      	ldr	r3, [r5, #20]
900143a8:	a908      	add	r1, sp, #32
900143aa:	682a      	ldr	r2, [r5, #0]
900143ac:	4628      	mov	r0, r5
900143ae:	9305      	str	r3, [sp, #20]
900143b0:	616e      	str	r6, [r5, #20]
900143b2:	6892      	ldr	r2, [r2, #8]
900143b4:	4790      	blx	r2
900143b6:	9b05      	ldr	r3, [sp, #20]
900143b8:	4652      	mov	r2, sl
900143ba:	4649      	mov	r1, r9
900143bc:	616b      	str	r3, [r5, #20]
900143be:	4628      	mov	r0, r5
900143c0:	f884 6058 	strb.w	r6, [r4, #88]	; 0x58
900143c4:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
900143c8:	f7ff fe92 	bl	900140f0 <_ZN8touchgfx8Drawable5setXYEss>
900143cc:	9a01      	ldr	r2, [sp, #4]
900143ce:	4b23      	ldr	r3, [pc, #140]	; (9001445c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
900143d0:	4620      	mov	r0, r4
900143d2:	801a      	strh	r2, [r3, #0]
900143d4:	9a02      	ldr	r2, [sp, #8]
900143d6:	4b22      	ldr	r3, [pc, #136]	; (90014460 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
900143d8:	801a      	strh	r2, [r3, #0]
900143da:	9a03      	ldr	r2, [sp, #12]
900143dc:	4b1c      	ldr	r3, [pc, #112]	; (90014450 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
900143de:	801a      	strh	r2, [r3, #0]
900143e0:	4b1c      	ldr	r3, [pc, #112]	; (90014454 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
900143e2:	9a04      	ldr	r2, [sp, #16]
900143e4:	801a      	strh	r2, [r3, #0]
900143e6:	6823      	ldr	r3, [r4, #0]
900143e8:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
900143ec:	6a9b      	ldr	r3, [r3, #40]	; 0x28
900143ee:	4798      	blx	r3
900143f0:	6823      	ldr	r3, [r4, #0]
900143f2:	4620      	mov	r0, r4
900143f4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900143f6:	4798      	blx	r3
900143f8:	b00f      	add	sp, #60	; 0x3c
900143fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900143fe:	883b      	ldrh	r3, [r7, #0]
90014400:	f8ab 0000 	strh.w	r0, [fp]
90014404:	f8aa 3000 	strh.w	r3, [sl]
90014408:	e789      	b.n	9001431e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
9001440a:	462a      	mov	r2, r5
9001440c:	ab0a      	add	r3, sp, #40	; 0x28
9001440e:	f852 0f04 	ldr.w	r0, [r2, #4]!
90014412:	6851      	ldr	r1, [r2, #4]
90014414:	c303      	stmia	r3!, {r0, r1}
90014416:	e7a9      	b.n	9001436c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
90014418:	a807      	add	r0, sp, #28
9001441a:	f007 fd63 	bl	9001bee4 <_ZNK8touchgfx6Bitmap9getFormatEv>
9001441e:	4606      	mov	r6, r0
90014420:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
90014422:	6803      	ldr	r3, [r0, #0]
90014424:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90014426:	4798      	blx	r3
90014428:	4286      	cmp	r6, r0
9001442a:	d1b8      	bne.n	9001439e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
9001442c:	f7ff fe6e 	bl	9001410c <_ZN8touchgfx3HAL3lcdEv>
90014430:	6803      	ldr	r3, [r0, #0]
90014432:	4606      	mov	r6, r0
90014434:	a807      	add	r0, sp, #28
90014436:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90014438:	9305      	str	r3, [sp, #20]
9001443a:	f007 fd53 	bl	9001bee4 <_ZNK8touchgfx6Bitmap9getFormatEv>
9001443e:	9b05      	ldr	r3, [sp, #20]
90014440:	4601      	mov	r1, r0
90014442:	4630      	mov	r0, r6
90014444:	4798      	blx	r3
90014446:	f080 0001 	eor.w	r0, r0, #1
9001444a:	b2c0      	uxtb	r0, r0
9001444c:	e7a8      	b.n	900143a0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
9001444e:	bf00      	nop
90014450:	240236c0 	.word	0x240236c0
90014454:	240236c2 	.word	0x240236c2
90014458:	240236c4 	.word	0x240236c4
9001445c:	240236c6 	.word	0x240236c6
90014460:	240236c8 	.word	0x240236c8

90014464 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
90014464:	4b07      	ldr	r3, [pc, #28]	; (90014484 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
90014466:	b510      	push	{r4, lr}
90014468:	781b      	ldrb	r3, [r3, #0]
9001446a:	4604      	mov	r4, r0
9001446c:	b13b      	cbz	r3, 9001447e <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
9001446e:	6803      	ldr	r3, [r0, #0]
90014470:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90014472:	4798      	blx	r3
90014474:	6be3      	ldr	r3, [r4, #60]	; 0x3c
90014476:	4283      	cmp	r3, r0
90014478:	d101      	bne.n	9001447e <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
9001447a:	6c20      	ldr	r0, [r4, #64]	; 0x40
9001447c:	bd10      	pop	{r4, pc}
9001447e:	6be0      	ldr	r0, [r4, #60]	; 0x3c
90014480:	e7fc      	b.n	9001447c <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
90014482:	bf00      	nop
90014484:	240236ca 	.word	0x240236ca

90014488 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
90014488:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001448c:	461d      	mov	r5, r3
9001448e:	b08a      	sub	sp, #40	; 0x28
90014490:	f44f 6380 	mov.w	r3, #1024	; 0x400
90014494:	4690      	mov	r8, r2
90014496:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
9001449a:	2400      	movs	r4, #0
9001449c:	4607      	mov	r7, r0
9001449e:	fb06 8505 	mla	r5, r6, r5, r8
900144a2:	9404      	str	r4, [sp, #16]
900144a4:	f88d 4020 	strb.w	r4, [sp, #32]
900144a8:	e9cd 3101 	strd	r3, r1, [sp, #4]
900144ac:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
900144b0:	f8ad 3018 	strh.w	r3, [sp, #24]
900144b4:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
900144b8:	f8ad 301a 	strh.w	r3, [sp, #26]
900144bc:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
900144c0:	f8ad 301c 	strh.w	r3, [sp, #28]
900144c4:	f7ff ffce 	bl	90014464 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
900144c8:	eb00 0545 	add.w	r5, r0, r5, lsl #1
900144cc:	6878      	ldr	r0, [r7, #4]
900144ce:	f8ad 601e 	strh.w	r6, [sp, #30]
900144d2:	a901      	add	r1, sp, #4
900144d4:	9505      	str	r5, [sp, #20]
900144d6:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
900144da:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
900144de:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
900144e2:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
900144e6:	6803      	ldr	r3, [r0, #0]
900144e8:	685b      	ldr	r3, [r3, #4]
900144ea:	4798      	blx	r3
900144ec:	b00a      	add	sp, #40	; 0x28
900144ee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

900144f2 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
900144f2:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900144f6:	b08b      	sub	sp, #44	; 0x2c
900144f8:	2400      	movs	r4, #0
900144fa:	4691      	mov	r9, r2
900144fc:	461d      	mov	r5, r3
900144fe:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
90014502:	f44f 6300 	mov.w	r3, #2048	; 0x800
90014506:	4688      	mov	r8, r1
90014508:	4607      	mov	r7, r0
9001450a:	9404      	str	r4, [sp, #16]
9001450c:	fb06 9505 	mla	r5, r6, r5, r9
90014510:	e9cd 3401 	strd	r3, r4, [sp, #4]
90014514:	f7ff ffa6 	bl	90014464 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90014518:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
9001451c:	eb00 0545 	add.w	r5, r0, r5, lsl #1
90014520:	6878      	ldr	r0, [r7, #4]
90014522:	f8ad 3018 	strh.w	r3, [sp, #24]
90014526:	a901      	add	r1, sp, #4
90014528:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
9001452c:	9505      	str	r5, [sp, #20]
9001452e:	f8ad 301a 	strh.w	r3, [sp, #26]
90014532:	f8ad 401c 	strh.w	r4, [sp, #28]
90014536:	f8ad 601e 	strh.w	r6, [sp, #30]
9001453a:	f8cd 8010 	str.w	r8, [sp, #16]
9001453e:	f8ad 4020 	strh.w	r4, [sp, #32]
90014542:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
90014546:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
9001454a:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
9001454e:	6803      	ldr	r3, [r0, #0]
90014550:	685b      	ldr	r3, [r3, #4]
90014552:	4798      	blx	r3
90014554:	b00b      	add	sp, #44	; 0x2c
90014556:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

9001455c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
9001455c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90014560:	b08a      	sub	sp, #40	; 0x28
90014562:	4698      	mov	r8, r3
90014564:	2300      	movs	r3, #0
90014566:	4606      	mov	r6, r0
90014568:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
9001456c:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
90014570:	2d0b      	cmp	r5, #11
90014572:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
90014576:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
9001457a:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
9001457e:	9304      	str	r3, [sp, #16]
90014580:	d137      	bne.n	900145f2 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x96>
90014582:	2380      	movs	r3, #128	; 0x80
90014584:	f88d 0020 	strb.w	r0, [sp, #32]
90014588:	4630      	mov	r0, r6
9001458a:	9203      	str	r2, [sp, #12]
9001458c:	e9cd 3101 	strd	r3, r1, [sp, #4]
90014590:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
90014594:	f8ad 3018 	strh.w	r3, [sp, #24]
90014598:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
9001459c:	f8ad 301a 	strh.w	r3, [sp, #26]
900145a0:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
900145a4:	f8ad 301c 	strh.w	r3, [sp, #28]
900145a8:	f7ff ff5c 	bl	90014464 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
900145ac:	2c0b      	cmp	r4, #11
900145ae:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
900145b2:	f8ad 701e 	strh.w	r7, [sp, #30]
900145b6:	bf94      	ite	ls
900145b8:	4b19      	ldrls	r3, [pc, #100]	; (90014620 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
900145ba:	2100      	movhi	r1, #0
900145bc:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
900145c0:	bf98      	it	ls
900145c2:	5d19      	ldrbls	r1, [r3, r4]
900145c4:	fb02 8307 	mla	r3, r2, r7, r8
900145c8:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
900145cc:	10c9      	asrs	r1, r1, #3
900145ce:	fb01 0003 	mla	r0, r1, r3, r0
900145d2:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
900145d6:	a901      	add	r1, sp, #4
900145d8:	9005      	str	r0, [sp, #20]
900145da:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
900145de:	2300      	movs	r3, #0
900145e0:	6870      	ldr	r0, [r6, #4]
900145e2:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
900145e6:	6803      	ldr	r3, [r0, #0]
900145e8:	685b      	ldr	r3, [r3, #4]
900145ea:	4798      	blx	r3
900145ec:	b00a      	add	sp, #40	; 0x28
900145ee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900145f2:	2d02      	cmp	r5, #2
900145f4:	d109      	bne.n	9001460a <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xae>
900145f6:	28ff      	cmp	r0, #255	; 0xff
900145f8:	d105      	bne.n	90014606 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xaa>
900145fa:	f1bc 0f00 	cmp.w	ip, #0
900145fe:	bf14      	ite	ne
90014600:	2340      	movne	r3, #64	; 0x40
90014602:	2320      	moveq	r3, #32
90014604:	e7be      	b.n	90014584 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
90014606:	2340      	movs	r3, #64	; 0x40
90014608:	e7bc      	b.n	90014584 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
9001460a:	28ff      	cmp	r0, #255	; 0xff
9001460c:	d105      	bne.n	9001461a <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xbe>
9001460e:	f1bc 0f00 	cmp.w	ip, #0
90014612:	bf14      	ite	ne
90014614:	2304      	movne	r3, #4
90014616:	2301      	moveq	r3, #1
90014618:	e7b4      	b.n	90014584 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
9001461a:	2304      	movs	r3, #4
9001461c:	e7b2      	b.n	90014584 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
9001461e:	bf00      	nop
90014620:	9002e0bc 	.word	0x9002e0bc

90014624 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
90014624:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90014628:	b08b      	sub	sp, #44	; 0x2c
9001462a:	461d      	mov	r5, r3
9001462c:	2400      	movs	r4, #0
9001462e:	4688      	mov	r8, r1
90014630:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
90014634:	4693      	mov	fp, r2
90014636:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
9001463a:	4607      	mov	r7, r0
9001463c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
90014640:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
90014644:	9404      	str	r4, [sp, #16]
90014646:	bf14      	ite	ne
90014648:	2308      	movne	r3, #8
9001464a:	2302      	moveq	r3, #2
9001464c:	fb05 b50a 	mla	r5, r5, sl, fp
90014650:	e9cd 3401 	strd	r3, r4, [sp, #4]
90014654:	f7ff ff06 	bl	90014464 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90014658:	2e0b      	cmp	r6, #11
9001465a:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
9001465e:	a901      	add	r1, sp, #4
90014660:	bf98      	it	ls
90014662:	4b13      	ldrls	r3, [pc, #76]	; (900146b0 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
90014664:	f8ad a01e 	strh.w	sl, [sp, #30]
90014668:	bf98      	it	ls
9001466a:	5d9c      	ldrbls	r4, [r3, r6]
9001466c:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
90014670:	10e4      	asrs	r4, r4, #3
90014672:	f8cd 8010 	str.w	r8, [sp, #16]
90014676:	f8ad 3018 	strh.w	r3, [sp, #24]
9001467a:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
9001467e:	fb04 0405 	mla	r4, r4, r5, r0
90014682:	6878      	ldr	r0, [r7, #4]
90014684:	f8ad 301a 	strh.w	r3, [sp, #26]
90014688:	2300      	movs	r3, #0
9001468a:	9405      	str	r4, [sp, #20]
9001468c:	f8ad 301c 	strh.w	r3, [sp, #28]
90014690:	f88d 9020 	strb.w	r9, [sp, #32]
90014694:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
90014698:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
9001469c:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
900146a0:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
900146a4:	6803      	ldr	r3, [r0, #0]
900146a6:	685b      	ldr	r3, [r3, #4]
900146a8:	4798      	blx	r3
900146aa:	b00b      	add	sp, #44	; 0x2c
900146ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900146b0:	9002e0bc 	.word	0x9002e0bc

900146b4 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
900146b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900146b8:	461e      	mov	r6, r3
900146ba:	4b0a      	ldr	r3, [pc, #40]	; (900146e4 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
900146bc:	460f      	mov	r7, r1
900146be:	4690      	mov	r8, r2
900146c0:	881d      	ldrh	r5, [r3, #0]
900146c2:	f7ff fd23 	bl	9001410c <_ZN8touchgfx3HAL3lcdEv>
900146c6:	6803      	ldr	r3, [r0, #0]
900146c8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900146ca:	4798      	blx	r3
900146cc:	280b      	cmp	r0, #11
900146ce:	bf96      	itet	ls
900146d0:	4b05      	ldrls	r3, [pc, #20]	; (900146e8 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
900146d2:	2400      	movhi	r4, #0
900146d4:	5c1c      	ldrbls	r4, [r3, r0]
900146d6:	fb08 7005 	mla	r0, r8, r5, r7
900146da:	10e4      	asrs	r4, r4, #3
900146dc:	fb04 6000 	mla	r0, r4, r0, r6
900146e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900146e4:	240236c6 	.word	0x240236c6
900146e8:	9002e0bc 	.word	0x9002e0bc

900146ec <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
900146ec:	b5f0      	push	{r4, r5, r6, r7, lr}
900146ee:	b08b      	sub	sp, #44	; 0x2c
900146f0:	461f      	mov	r7, r3
900146f2:	4604      	mov	r4, r0
900146f4:	4616      	mov	r6, r2
900146f6:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
900146fa:	2500      	movs	r5, #0
900146fc:	e9cd 3101 	strd	r3, r1, [sp, #4]
90014700:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
90014704:	9504      	str	r5, [sp, #16]
90014706:	f8ad 3018 	strh.w	r3, [sp, #24]
9001470a:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
9001470e:	f8ad 301a 	strh.w	r3, [sp, #26]
90014712:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
90014716:	f8ad 301c 	strh.w	r3, [sp, #28]
9001471a:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
9001471e:	f88d 3020 	strb.w	r3, [sp, #32]
90014722:	f7ff fe9f 	bl	90014464 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90014726:	463a      	mov	r2, r7
90014728:	4631      	mov	r1, r6
9001472a:	4603      	mov	r3, r0
9001472c:	4620      	mov	r0, r4
9001472e:	f7ff ffc1 	bl	900146b4 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
90014732:	4b0e      	ldr	r3, [pc, #56]	; (9001476c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
90014734:	9005      	str	r0, [sp, #20]
90014736:	881b      	ldrh	r3, [r3, #0]
90014738:	f8ad 301e 	strh.w	r3, [sp, #30]
9001473c:	f7ff fce6 	bl	9001410c <_ZN8touchgfx3HAL3lcdEv>
90014740:	6803      	ldr	r3, [r0, #0]
90014742:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90014744:	4798      	blx	r3
90014746:	9b13      	ldr	r3, [sp, #76]	; 0x4c
90014748:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
9001474c:	a901      	add	r1, sp, #4
9001474e:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
90014752:	9304      	str	r3, [sp, #16]
90014754:	6860      	ldr	r0, [r4, #4]
90014756:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
9001475a:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
9001475e:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
90014762:	6803      	ldr	r3, [r0, #0]
90014764:	685b      	ldr	r3, [r3, #4]
90014766:	4798      	blx	r3
90014768:	b00b      	add	sp, #44	; 0x2c
9001476a:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001476c:	240236c6 	.word	0x240236c6

90014770 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
90014770:	b5f0      	push	{r4, r5, r6, r7, lr}
90014772:	b08d      	sub	sp, #52	; 0x34
90014774:	2501      	movs	r5, #1
90014776:	4604      	mov	r4, r0
90014778:	466b      	mov	r3, sp
9001477a:	9503      	str	r5, [sp, #12]
9001477c:	e883 0006 	stmia.w	r3, {r1, r2}
90014780:	2300      	movs	r3, #0
90014782:	f8bd 6000 	ldrh.w	r6, [sp]
90014786:	f8bd 7002 	ldrh.w	r7, [sp, #2]
9001478a:	9306      	str	r3, [sp, #24]
9001478c:	6803      	ldr	r3, [r0, #0]
9001478e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90014790:	4798      	blx	r3
90014792:	463a      	mov	r2, r7
90014794:	4631      	mov	r1, r6
90014796:	4603      	mov	r3, r0
90014798:	4620      	mov	r0, r4
9001479a:	f7ff ff8b 	bl	900146b4 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
9001479e:	6c63      	ldr	r3, [r4, #68]	; 0x44
900147a0:	9004      	str	r0, [sp, #16]
900147a2:	9307      	str	r3, [sp, #28]
900147a4:	f8bd 3004 	ldrh.w	r3, [sp, #4]
900147a8:	f8ad 3020 	strh.w	r3, [sp, #32]
900147ac:	f8bd 3006 	ldrh.w	r3, [sp, #6]
900147b0:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
900147b4:	4b0e      	ldr	r3, [pc, #56]	; (900147f0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
900147b6:	881b      	ldrh	r3, [r3, #0]
900147b8:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
900147bc:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
900147c0:	f7ff fca4 	bl	9001410c <_ZN8touchgfx3HAL3lcdEv>
900147c4:	6803      	ldr	r3, [r0, #0]
900147c6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900147c8:	4798      	blx	r3
900147ca:	23ff      	movs	r3, #255	; 0xff
900147cc:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
900147d0:	a903      	add	r1, sp, #12
900147d2:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
900147d6:	6860      	ldr	r0, [r4, #4]
900147d8:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
900147dc:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
900147e0:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
900147e4:	6803      	ldr	r3, [r0, #0]
900147e6:	685b      	ldr	r3, [r3, #4]
900147e8:	4798      	blx	r3
900147ea:	6c60      	ldr	r0, [r4, #68]	; 0x44
900147ec:	b00d      	add	sp, #52	; 0x34
900147ee:	bdf0      	pop	{r4, r5, r6, r7, pc}
900147f0:	240236c6 	.word	0x240236c6

900147f4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
900147f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900147f8:	b08c      	sub	sp, #48	; 0x30
900147fa:	461e      	mov	r6, r3
900147fc:	2300      	movs	r3, #0
900147fe:	4604      	mov	r4, r0
90014800:	466d      	mov	r5, sp
90014802:	9306      	str	r3, [sp, #24]
90014804:	6803      	ldr	r3, [r0, #0]
90014806:	e885 0006 	stmia.w	r5, {r1, r2}
9001480a:	2501      	movs	r5, #1
9001480c:	f8bd 7000 	ldrh.w	r7, [sp]
90014810:	f8bd 8002 	ldrh.w	r8, [sp, #2]
90014814:	9503      	str	r5, [sp, #12]
90014816:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90014818:	4798      	blx	r3
9001481a:	4642      	mov	r2, r8
9001481c:	4639      	mov	r1, r7
9001481e:	4603      	mov	r3, r0
90014820:	4620      	mov	r0, r4
90014822:	f7ff ff47 	bl	900146b4 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
90014826:	f8bd 3004 	ldrh.w	r3, [sp, #4]
9001482a:	9004      	str	r0, [sp, #16]
9001482c:	f8ad 3020 	strh.w	r3, [sp, #32]
90014830:	f8bd 3006 	ldrh.w	r3, [sp, #6]
90014834:	9607      	str	r6, [sp, #28]
90014836:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
9001483a:	4b10      	ldr	r3, [pc, #64]	; (9001487c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
9001483c:	881b      	ldrh	r3, [r3, #0]
9001483e:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
90014842:	9b12      	ldr	r3, [sp, #72]	; 0x48
90014844:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
90014848:	f7ff fc60 	bl	9001410c <_ZN8touchgfx3HAL3lcdEv>
9001484c:	6803      	ldr	r3, [r0, #0]
9001484e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90014850:	4798      	blx	r3
90014852:	23ff      	movs	r3, #255	; 0xff
90014854:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
90014858:	a903      	add	r1, sp, #12
9001485a:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
9001485e:	6860      	ldr	r0, [r4, #4]
90014860:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
90014864:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
90014868:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
9001486c:	6803      	ldr	r3, [r0, #0]
9001486e:	685b      	ldr	r3, [r3, #4]
90014870:	4798      	blx	r3
90014872:	4630      	mov	r0, r6
90014874:	b00c      	add	sp, #48	; 0x30
90014876:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9001487a:	bf00      	nop
9001487c:	240236c6 	.word	0x240236c6

90014880 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
90014880:	b5f0      	push	{r4, r5, r6, r7, lr}
90014882:	b085      	sub	sp, #20
90014884:	4605      	mov	r5, r0
90014886:	ac02      	add	r4, sp, #8
90014888:	e884 0006 	stmia.w	r4, {r1, r2}
9001488c:	f8bd 6008 	ldrh.w	r6, [sp, #8]
90014890:	f8bd 700a 	ldrh.w	r7, [sp, #10]
90014894:	f7ff fde6 	bl	90014464 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90014898:	4631      	mov	r1, r6
9001489a:	4603      	mov	r3, r0
9001489c:	463a      	mov	r2, r7
9001489e:	4628      	mov	r0, r5
900148a0:	f7ff ff08 	bl	900146b4 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
900148a4:	4a05      	ldr	r2, [pc, #20]	; (900148bc <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
900148a6:	682b      	ldr	r3, [r5, #0]
900148a8:	8812      	ldrh	r2, [r2, #0]
900148aa:	9200      	str	r2, [sp, #0]
900148ac:	6ede      	ldr	r6, [r3, #108]	; 0x6c
900148ae:	4603      	mov	r3, r0
900148b0:	4628      	mov	r0, r5
900148b2:	e894 0006 	ldmia.w	r4, {r1, r2}
900148b6:	47b0      	blx	r6
900148b8:	b005      	add	sp, #20
900148ba:	bdf0      	pop	{r4, r5, r6, r7, pc}
900148bc:	240236c6 	.word	0x240236c6

900148c0 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
900148c0:	b570      	push	{r4, r5, r6, lr}
900148c2:	f890 306e 	ldrb.w	r3, [r0, #110]	; 0x6e
900148c6:	4604      	mov	r4, r0
900148c8:	b19b      	cbz	r3, 900148f2 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
900148ca:	2002      	movs	r0, #2
900148cc:	f7ed ff46 	bl	9000275c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
900148d0:	2300      	movs	r3, #0
900148d2:	4620      	mov	r0, r4
900148d4:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
900148d8:	f884 306d 	strb.w	r3, [r4, #109]	; 0x6d
900148dc:	6823      	ldr	r3, [r4, #0]
900148de:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
900148e2:	f7ff fdbf 	bl	90014464 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
900148e6:	4601      	mov	r1, r0
900148e8:	4620      	mov	r0, r4
900148ea:	462b      	mov	r3, r5
900148ec:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900148f0:	4718      	bx	r3
900148f2:	bd70      	pop	{r4, r5, r6, pc}

900148f4 <_ZN8touchgfx3HAL12setMCUActiveEb>:
900148f4:	b570      	push	{r4, r5, r6, lr}
900148f6:	4605      	mov	r5, r0
900148f8:	460c      	mov	r4, r1
900148fa:	2003      	movs	r0, #3
900148fc:	b149      	cbz	r1, 90014912 <_ZN8touchgfx3HAL12setMCUActiveEb+0x1e>
900148fe:	f7ed fec5 	bl	9000268c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
90014902:	6928      	ldr	r0, [r5, #16]
90014904:	b168      	cbz	r0, 90014922 <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
90014906:	6803      	ldr	r3, [r0, #0]
90014908:	2101      	movs	r1, #1
9001490a:	695b      	ldr	r3, [r3, #20]
9001490c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90014910:	4718      	bx	r3
90014912:	f7ed feef 	bl	900026f4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
90014916:	6928      	ldr	r0, [r5, #16]
90014918:	b118      	cbz	r0, 90014922 <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
9001491a:	6803      	ldr	r3, [r0, #0]
9001491c:	4621      	mov	r1, r4
9001491e:	695b      	ldr	r3, [r3, #20]
90014920:	e7f4      	b.n	9001490c <_ZN8touchgfx3HAL12setMCUActiveEb+0x18>
90014922:	bd70      	pop	{r4, r5, r6, pc}

90014924 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
90014924:	b538      	push	{r3, r4, r5, lr}
90014926:	f890 307b 	ldrb.w	r3, [r0, #123]	; 0x7b
9001492a:	4604      	mov	r4, r0
9001492c:	460d      	mov	r5, r1
9001492e:	428b      	cmp	r3, r1
90014930:	d006      	beq.n	90014940 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
90014932:	6803      	ldr	r3, [r0, #0]
90014934:	b929      	cbnz	r1, 90014942 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
90014936:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
9001493a:	4798      	blx	r3
9001493c:	f884 507b 	strb.w	r5, [r4, #123]	; 0x7b
90014940:	bd38      	pop	{r3, r4, r5, pc}
90014942:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
90014946:	e7f8      	b.n	9001493a <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

90014948 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
90014948:	4b0d      	ldr	r3, [pc, #52]	; (90014980 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
9001494a:	b510      	push	{r4, lr}
9001494c:	781b      	ldrb	r3, [r3, #0]
9001494e:	4604      	mov	r4, r0
90014950:	b95b      	cbnz	r3, 9001496a <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
90014952:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
90014956:	2b02      	cmp	r3, #2
90014958:	d007      	beq.n	9001496a <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
9001495a:	6840      	ldr	r0, [r0, #4]
9001495c:	f000 f91a 	bl	90014b94 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
90014960:	b118      	cbz	r0, 9001496a <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
90014962:	6862      	ldr	r2, [r4, #4]
90014964:	7a53      	ldrb	r3, [r2, #9]
90014966:	2b00      	cmp	r3, #0
90014968:	d0fc      	beq.n	90014964 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
9001496a:	f7ef f8db 	bl	90003b24 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
9001496e:	4620      	mov	r0, r4
90014970:	2100      	movs	r1, #0
90014972:	f7ff ffd7 	bl	90014924 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
90014976:	4620      	mov	r0, r4
90014978:	f7ff fd74 	bl	90014464 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
9001497c:	bd10      	pop	{r4, pc}
9001497e:	bf00      	nop
90014980:	240236ca 	.word	0x240236ca

90014984 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
90014984:	b570      	push	{r4, r5, r6, lr}
90014986:	4604      	mov	r4, r0
90014988:	6803      	ldr	r3, [r0, #0]
9001498a:	b919      	cbnz	r1, 90014994 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
9001498c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001498e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90014992:	4718      	bx	r3
90014994:	2200      	movs	r2, #0
90014996:	f890 607b 	ldrb.w	r6, [r0, #123]	; 0x7b
9001499a:	f880 207b 	strb.w	r2, [r0, #123]	; 0x7b
9001499e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
900149a0:	4798      	blx	r3
900149a2:	6863      	ldr	r3, [r4, #4]
900149a4:	2101      	movs	r1, #1
900149a6:	4605      	mov	r5, r0
900149a8:	4620      	mov	r0, r4
900149aa:	7299      	strb	r1, [r3, #10]
900149ac:	f884 607b 	strb.w	r6, [r4, #123]	; 0x7b
900149b0:	f7ff ffb8 	bl	90014924 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
900149b4:	4628      	mov	r0, r5
900149b6:	bd70      	pop	{r4, r5, r6, pc}

900149b8 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
900149b8:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
900149bc:	1a13      	subs	r3, r2, r0
900149be:	4258      	negs	r0, r3
900149c0:	4158      	adcs	r0, r3
900149c2:	4770      	bx	lr

900149c4 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
900149c4:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
900149c8:	1a9b      	subs	r3, r3, r2
900149ca:	2b00      	cmp	r3, #0
900149cc:	bfdc      	itt	le
900149ce:	6882      	ldrle	r2, [r0, #8]
900149d0:	189b      	addle	r3, r3, r2
900149d2:	2b01      	cmp	r3, #1
900149d4:	bfcc      	ite	gt
900149d6:	2000      	movgt	r0, #0
900149d8:	2001      	movle	r0, #1
900149da:	4770      	bx	lr

900149dc <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
900149dc:	6902      	ldr	r2, [r0, #16]
900149de:	6843      	ldr	r3, [r0, #4]
900149e0:	2024      	movs	r0, #36	; 0x24
900149e2:	fb00 3002 	mla	r0, r0, r2, r3
900149e6:	4770      	bx	lr

900149e8 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
900149e8:	6803      	ldr	r3, [r0, #0]
900149ea:	691b      	ldr	r3, [r3, #16]
900149ec:	4718      	bx	r3

900149ee <_ZN8touchgfx13DMA_Interface7executeEv>:
900149ee:	2301      	movs	r3, #1
900149f0:	b570      	push	{r4, r5, r6, lr}
900149f2:	7203      	strb	r3, [r0, #8]
900149f4:	4604      	mov	r4, r0
900149f6:	6840      	ldr	r0, [r0, #4]
900149f8:	6803      	ldr	r3, [r0, #0]
900149fa:	699b      	ldr	r3, [r3, #24]
900149fc:	4798      	blx	r3
900149fe:	6803      	ldr	r3, [r0, #0]
90014a00:	4605      	mov	r5, r0
90014a02:	2b40      	cmp	r3, #64	; 0x40
90014a04:	d00c      	beq.n	90014a20 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90014a06:	d810      	bhi.n	90014a2a <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
90014a08:	2b04      	cmp	r3, #4
90014a0a:	d01d      	beq.n	90014a48 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
90014a0c:	d804      	bhi.n	90014a18 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
90014a0e:	2b01      	cmp	r3, #1
90014a10:	d006      	beq.n	90014a20 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90014a12:	2b02      	cmp	r3, #2
90014a14:	d02c      	beq.n	90014a70 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
90014a16:	bd70      	pop	{r4, r5, r6, pc}
90014a18:	2b08      	cmp	r3, #8
90014a1a:	d01d      	beq.n	90014a58 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
90014a1c:	2b20      	cmp	r3, #32
90014a1e:	d1fa      	bne.n	90014a16 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
90014a20:	6823      	ldr	r3, [r4, #0]
90014a22:	4620      	mov	r0, r4
90014a24:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90014a26:	4798      	blx	r3
90014a28:	e013      	b.n	90014a52 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
90014a2a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
90014a2e:	d0f7      	beq.n	90014a20 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90014a30:	d804      	bhi.n	90014a3c <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
90014a32:	2b80      	cmp	r3, #128	; 0x80
90014a34:	d0f4      	beq.n	90014a20 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90014a36:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
90014a3a:	e7f0      	b.n	90014a1e <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
90014a3c:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
90014a40:	d0ee      	beq.n	90014a20 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90014a42:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
90014a46:	e7e5      	b.n	90014a14 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
90014a48:	6823      	ldr	r3, [r4, #0]
90014a4a:	7f01      	ldrb	r1, [r0, #28]
90014a4c:	4620      	mov	r0, r4
90014a4e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90014a50:	4798      	blx	r3
90014a52:	6823      	ldr	r3, [r4, #0]
90014a54:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90014a56:	e006      	b.n	90014a66 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
90014a58:	6823      	ldr	r3, [r4, #0]
90014a5a:	7f01      	ldrb	r1, [r0, #28]
90014a5c:	4620      	mov	r0, r4
90014a5e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90014a60:	4798      	blx	r3
90014a62:	6823      	ldr	r3, [r4, #0]
90014a64:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90014a66:	4629      	mov	r1, r5
90014a68:	4620      	mov	r0, r4
90014a6a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90014a6e:	4718      	bx	r3
90014a70:	6823      	ldr	r3, [r4, #0]
90014a72:	4620      	mov	r0, r4
90014a74:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90014a76:	4798      	blx	r3
90014a78:	e7f3      	b.n	90014a62 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

90014a7a <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
90014a7a:	4770      	bx	lr

90014a7c <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
90014a7c:	4770      	bx	lr

90014a7e <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
90014a7e:	4770      	bx	lr

90014a80 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
90014a80:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
90014a84:	b510      	push	{r4, lr}
90014a86:	1ad2      	subs	r2, r2, r3
90014a88:	2a00      	cmp	r2, #0
90014a8a:	bfdc      	itt	le
90014a8c:	6884      	ldrle	r4, [r0, #8]
90014a8e:	1912      	addle	r2, r2, r4
90014a90:	2a01      	cmp	r2, #1
90014a92:	dd16      	ble.n	90014ac2 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
90014a94:	6842      	ldr	r2, [r0, #4]
90014a96:	2424      	movs	r4, #36	; 0x24
90014a98:	fb04 2303 	mla	r3, r4, r3, r2
90014a9c:	f101 0220 	add.w	r2, r1, #32
90014aa0:	f851 4b04 	ldr.w	r4, [r1], #4
90014aa4:	4291      	cmp	r1, r2
90014aa6:	f843 4b04 	str.w	r4, [r3], #4
90014aaa:	d1f9      	bne.n	90014aa0 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
90014aac:	780a      	ldrb	r2, [r1, #0]
90014aae:	701a      	strb	r2, [r3, #0]
90014ab0:	68c3      	ldr	r3, [r0, #12]
90014ab2:	6882      	ldr	r2, [r0, #8]
90014ab4:	f3bf 8f5b 	dmb	ish
90014ab8:	3301      	adds	r3, #1
90014aba:	429a      	cmp	r2, r3
90014abc:	bfd8      	it	le
90014abe:	1a9b      	suble	r3, r3, r2
90014ac0:	60c3      	str	r3, [r0, #12]
90014ac2:	bd10      	pop	{r4, pc}

90014ac4 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
90014ac4:	6903      	ldr	r3, [r0, #16]
90014ac6:	6882      	ldr	r2, [r0, #8]
90014ac8:	f3bf 8f5b 	dmb	ish
90014acc:	3301      	adds	r3, #1
90014ace:	429a      	cmp	r2, r3
90014ad0:	bfd8      	it	le
90014ad2:	1a9b      	suble	r3, r3, r2
90014ad4:	6103      	str	r3, [r0, #16]
90014ad6:	4770      	bx	lr

90014ad8 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
90014ad8:	b570      	push	{r4, r5, r6, lr}
90014ada:	4604      	mov	r4, r0
90014adc:	460e      	mov	r6, r1
90014ade:	6860      	ldr	r0, [r4, #4]
90014ae0:	6803      	ldr	r3, [r0, #0]
90014ae2:	685b      	ldr	r3, [r3, #4]
90014ae4:	4798      	blx	r3
90014ae6:	2800      	cmp	r0, #0
90014ae8:	d1f9      	bne.n	90014ade <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
90014aea:	4d0d      	ldr	r5, [pc, #52]	; (90014b20 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
90014aec:	6828      	ldr	r0, [r5, #0]
90014aee:	6803      	ldr	r3, [r0, #0]
90014af0:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
90014af2:	4798      	blx	r3
90014af4:	f7ef f824 	bl	90003b40 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
90014af8:	6828      	ldr	r0, [r5, #0]
90014afa:	2101      	movs	r1, #1
90014afc:	f7ff ff12 	bl	90014924 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
90014b00:	6860      	ldr	r0, [r4, #4]
90014b02:	4631      	mov	r1, r6
90014b04:	6803      	ldr	r3, [r0, #0]
90014b06:	689b      	ldr	r3, [r3, #8]
90014b08:	4798      	blx	r3
90014b0a:	6823      	ldr	r3, [r4, #0]
90014b0c:	4620      	mov	r0, r4
90014b0e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90014b10:	4798      	blx	r3
90014b12:	6828      	ldr	r0, [r5, #0]
90014b14:	6803      	ldr	r3, [r0, #0]
90014b16:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90014b1a:	6f9b      	ldr	r3, [r3, #120]	; 0x78
90014b1c:	4718      	bx	r3
90014b1e:	bf00      	nop
90014b20:	240236cc 	.word	0x240236cc

90014b24 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
90014b24:	b508      	push	{r3, lr}
90014b26:	f7ee fffd 	bl	90003b24 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
90014b2a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
90014b2e:	f7ef b801 	b.w	90003b34 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

90014b32 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
90014b32:	b510      	push	{r4, lr}
90014b34:	4604      	mov	r4, r0
90014b36:	2114      	movs	r1, #20
90014b38:	f015 f871 	bl	90029c1e <_ZdlPvj>
90014b3c:	4620      	mov	r0, r4
90014b3e:	bd10      	pop	{r4, pc}

90014b40 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
90014b40:	b570      	push	{r4, r5, r6, lr}
90014b42:	4604      	mov	r4, r0
90014b44:	6840      	ldr	r0, [r0, #4]
90014b46:	6803      	ldr	r3, [r0, #0]
90014b48:	681b      	ldr	r3, [r3, #0]
90014b4a:	4798      	blx	r3
90014b4c:	4605      	mov	r5, r0
90014b4e:	b930      	cbnz	r0, 90014b5e <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
90014b50:	7a23      	ldrb	r3, [r4, #8]
90014b52:	b123      	cbz	r3, 90014b5e <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
90014b54:	6860      	ldr	r0, [r4, #4]
90014b56:	6803      	ldr	r3, [r0, #0]
90014b58:	695b      	ldr	r3, [r3, #20]
90014b5a:	4798      	blx	r3
90014b5c:	7225      	strb	r5, [r4, #8]
90014b5e:	6860      	ldr	r0, [r4, #4]
90014b60:	6803      	ldr	r3, [r0, #0]
90014b62:	681b      	ldr	r3, [r3, #0]
90014b64:	4798      	blx	r3
90014b66:	b928      	cbnz	r0, 90014b74 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
90014b68:	6823      	ldr	r3, [r4, #0]
90014b6a:	4620      	mov	r0, r4
90014b6c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90014b6e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90014b72:	4718      	bx	r3
90014b74:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90014b78:	f7ee bfea 	b.w	90003b50 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

90014b7c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
90014b7c:	b510      	push	{r4, lr}
90014b7e:	6082      	str	r2, [r0, #8]
90014b80:	2200      	movs	r2, #0
90014b82:	4c03      	ldr	r4, [pc, #12]	; (90014b90 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
90014b84:	e9c0 2203 	strd	r2, r2, [r0, #12]
90014b88:	e9c0 4100 	strd	r4, r1, [r0]
90014b8c:	bd10      	pop	{r4, pc}
90014b8e:	bf00      	nop
90014b90:	9002e0d0 	.word	0x9002e0d0

90014b94 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
90014b94:	6840      	ldr	r0, [r0, #4]
90014b96:	6803      	ldr	r3, [r0, #0]
90014b98:	681b      	ldr	r3, [r3, #0]
90014b9a:	4718      	bx	r3

90014b9c <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
90014b9c:	094a      	lsrs	r2, r1, #5
90014b9e:	4b06      	ldr	r3, [pc, #24]	; (90014bb8 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
90014ba0:	60c1      	str	r1, [r0, #12]
90014ba2:	ea03 2311 	and.w	r3, r3, r1, lsr #8
90014ba6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90014baa:	f3c1 01c4 	ubfx	r1, r1, #3, #5
90014bae:	4313      	orrs	r3, r2
90014bb0:	4319      	orrs	r1, r3
90014bb2:	8201      	strh	r1, [r0, #16]
90014bb4:	4770      	bx	lr
90014bb6:	bf00      	nop
90014bb8:	fffff800 	.word	0xfffff800

90014bbc <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
90014bbc:	f1a0 0008 	sub.w	r0, r0, #8
90014bc0:	e7ec      	b.n	90014b9c <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
90014bc2:	bf00      	nop

90014bc4 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
90014bc4:	b508      	push	{r3, lr}
90014bc6:	4b05      	ldr	r3, [pc, #20]	; (90014bdc <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
90014bc8:	6818      	ldr	r0, [r3, #0]
90014bca:	6803      	ldr	r3, [r0, #0]
90014bcc:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
90014bd0:	4798      	blx	r3
90014bd2:	1e43      	subs	r3, r0, #1
90014bd4:	4258      	negs	r0, r3
90014bd6:	4158      	adcs	r0, r3
90014bd8:	bd08      	pop	{r3, pc}
90014bda:	bf00      	nop
90014bdc:	240236cc 	.word	0x240236cc

90014be0 <_ZN8touchgfx13PainterRGB565D1Ev>:
90014be0:	4770      	bx	lr

90014be2 <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
90014be2:	3808      	subs	r0, #8
90014be4:	4770      	bx	lr

90014be6 <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
90014be6:	b430      	push	{r4, r5}
90014be8:	eb01 0442 	add.w	r4, r1, r2, lsl #1
90014bec:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
90014bf0:	8a02      	ldrh	r2, [r0, #16]
90014bf2:	f89d 3010 	ldrb.w	r3, [sp, #16]
90014bf6:	4629      	mov	r1, r5
90014bf8:	9202      	str	r2, [sp, #8]
90014bfa:	68c2      	ldr	r2, [r0, #12]
90014bfc:	4620      	mov	r0, r4
90014bfe:	bc30      	pop	{r4, r5}
90014c00:	f7ef ba7e 	b.w	90004100 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

90014c04 <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
90014c04:	f7ef ba72 	b.w	900040ec <_ZN8touchgfx5paint8tearDownEv>

90014c08 <_ZN8touchgfx13PainterRGB565D0Ev>:
90014c08:	b510      	push	{r4, lr}
90014c0a:	4604      	mov	r4, r0
90014c0c:	2114      	movs	r1, #20
90014c0e:	f015 f806 	bl	90029c1e <_ZdlPvj>
90014c12:	4620      	mov	r0, r4
90014c14:	bd10      	pop	{r4, pc}

90014c16 <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
90014c16:	f1a0 0008 	sub.w	r0, r0, #8
90014c1a:	e7f5      	b.n	90014c08 <_ZN8touchgfx13PainterRGB565D0Ev>

90014c1c <_ZNK8touchgfx13AbstractShape14getMinimalRectEv>:
90014c1c:	f101 0344 	add.w	r3, r1, #68	; 0x44
90014c20:	4602      	mov	r2, r0
90014c22:	cb03      	ldmia	r3!, {r0, r1}
90014c24:	6010      	str	r0, [r2, #0]
90014c26:	4610      	mov	r0, r2
90014c28:	6051      	str	r1, [r2, #4]
90014c2a:	4770      	bx	lr

90014c2c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
90014c2c:	b507      	push	{r0, r1, r2, lr}
90014c2e:	f44f 4200 	mov.w	r2, #32768	; 0x8000
90014c32:	ab01      	add	r3, sp, #4
90014c34:	6809      	ldr	r1, [r1, #0]
90014c36:	6800      	ldr	r0, [r0, #0]
90014c38:	f005 f8ea 	bl	90019e10 <_ZN8touchgfx6muldivElllRl>
90014c3c:	b003      	add	sp, #12
90014c3e:	f85d fb04 	ldr.w	pc, [sp], #4
	...

90014c44 <_ZN8touchgfx7CWRUtil4sineEi>:
90014c44:	f44f 73b4 	mov.w	r3, #360	; 0x168
90014c48:	fb90 f2f3 	sdiv	r2, r0, r3
90014c4c:	fb02 0013 	mls	r0, r2, r3, r0
90014c50:	2800      	cmp	r0, #0
90014c52:	bfb8      	it	lt
90014c54:	18c0      	addlt	r0, r0, r3
90014c56:	4b0a      	ldr	r3, [pc, #40]	; (90014c80 <_ZN8touchgfx7CWRUtil4sineEi+0x3c>)
90014c58:	285a      	cmp	r0, #90	; 0x5a
90014c5a:	dc02      	bgt.n	90014c62 <_ZN8touchgfx7CWRUtil4sineEi+0x1e>
90014c5c:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
90014c60:	4770      	bx	lr
90014c62:	28b4      	cmp	r0, #180	; 0xb4
90014c64:	dc02      	bgt.n	90014c6c <_ZN8touchgfx7CWRUtil4sineEi+0x28>
90014c66:	f1c0 00b4 	rsb	r0, r0, #180	; 0xb4
90014c6a:	e7f7      	b.n	90014c5c <_ZN8touchgfx7CWRUtil4sineEi+0x18>
90014c6c:	f5b0 7f87 	cmp.w	r0, #270	; 0x10e
90014c70:	bfd4      	ite	le
90014c72:	38b4      	suble	r0, #180	; 0xb4
90014c74:	f5c0 70b4 	rsbgt	r0, r0, #360	; 0x168
90014c78:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
90014c7c:	4240      	negs	r0, r0
90014c7e:	4770      	bx	lr
90014c80:	9002e124 	.word	0x9002e124

90014c84 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>:
90014c84:	f44f 5334 	mov.w	r3, #11520	; 0x2d00
90014c88:	fb90 f2f3 	sdiv	r2, r0, r3
90014c8c:	b573      	push	{r0, r1, r4, r5, r6, lr}
90014c8e:	fb02 0013 	mls	r0, r2, r3, r0
90014c92:	2800      	cmp	r0, #0
90014c94:	bfb8      	it	lt
90014c96:	18c0      	addlt	r0, r0, r3
90014c98:	1144      	asrs	r4, r0, #5
90014c9a:	f000 061f 	and.w	r6, r0, #31
90014c9e:	4620      	mov	r0, r4
90014ca0:	f7ff ffd0 	bl	90014c44 <_ZN8touchgfx7CWRUtil4sineEi>
90014ca4:	4605      	mov	r5, r0
90014ca6:	b90e      	cbnz	r6, 90014cac <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x28>
90014ca8:	b002      	add	sp, #8
90014caa:	bd70      	pop	{r4, r5, r6, pc}
90014cac:	1c60      	adds	r0, r4, #1
90014cae:	f7ff ffc9 	bl	90014c44 <_ZN8touchgfx7CWRUtil4sineEi>
90014cb2:	ab01      	add	r3, sp, #4
90014cb4:	2220      	movs	r2, #32
90014cb6:	4631      	mov	r1, r6
90014cb8:	1b40      	subs	r0, r0, r5
90014cba:	f005 f8a9 	bl	90019e10 <_ZN8touchgfx6muldivElllRl>
90014cbe:	4428      	add	r0, r5
90014cc0:	e7f2      	b.n	90014ca8 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x24>

90014cc2 <_ZN8touchgfx7CWRUtil5mulQ5ENS0_2Q5ENS0_3Q10E>:
90014cc2:	b507      	push	{r0, r1, r2, lr}
90014cc4:	f44f 6280 	mov.w	r2, #1024	; 0x400
90014cc8:	ab01      	add	r3, sp, #4
90014cca:	0140      	lsls	r0, r0, #5
90014ccc:	f005 f8a0 	bl	90019e10 <_ZN8touchgfx6muldivElllRl>
90014cd0:	2320      	movs	r3, #32
90014cd2:	fb90 f0f3 	sdiv	r0, r0, r3
90014cd6:	b003      	add	sp, #12
90014cd8:	f85d fb04 	ldr.w	pc, [sp], #4

90014cdc <_ZN8touchgfx13AbstractShapeC1Ev>:
90014cdc:	b510      	push	{r4, lr}
90014cde:	4604      	mov	r4, r0
90014ce0:	f000 f9a0 	bl	90015024 <_ZN8touchgfx12CanvasWidgetC1Ev>
90014ce4:	4b08      	ldr	r3, [pc, #32]	; (90014d08 <_ZN8touchgfx13AbstractShapeC1Ev+0x2c>)
90014ce6:	f44f 6280 	mov.w	r2, #1024	; 0x400
90014cea:	4620      	mov	r0, r4
90014cec:	6023      	str	r3, [r4, #0]
90014cee:	2300      	movs	r3, #0
90014cf0:	e9c4 220f 	strd	r2, r2, [r4, #60]	; 0x3c
90014cf4:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
90014cf8:	63a3      	str	r3, [r4, #56]	; 0x38
90014cfa:	60a3      	str	r3, [r4, #8]
90014cfc:	e9c4 330c 	strd	r3, r3, [r4, #48]	; 0x30
90014d00:	e9c4 3311 	strd	r3, r3, [r4, #68]	; 0x44
90014d04:	bd10      	pop	{r4, pc}
90014d06:	bf00      	nop
90014d08:	9002e1e4 	.word	0x9002e1e4

90014d0c <_ZN8touchgfx13AbstractShape24updateAbstractShapeCacheEv>:
90014d0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90014d10:	6803      	ldr	r3, [r0, #0]
90014d12:	b087      	sub	sp, #28
90014d14:	4604      	mov	r4, r0
90014d16:	2500      	movs	r5, #0
90014d18:	6f1b      	ldr	r3, [r3, #112]	; 0x70
90014d1a:	4798      	blx	r3
90014d1c:	9000      	str	r0, [sp, #0]
90014d1e:	6ba0      	ldr	r0, [r4, #56]	; 0x38
90014d20:	462e      	mov	r6, r5
90014d22:	46a8      	mov	r8, r5
90014d24:	462f      	mov	r7, r5
90014d26:	f5c0 6034 	rsb	r0, r0, #2880	; 0xb40
90014d2a:	46a9      	mov	r9, r5
90014d2c:	f7ff ffaa 	bl	90014c84 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
90014d30:	9002      	str	r0, [sp, #8]
90014d32:	6ba0      	ldr	r0, [r4, #56]	; 0x38
90014d34:	f7ff ffa6 	bl	90014c84 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
90014d38:	9003      	str	r0, [sp, #12]
90014d3a:	9b00      	ldr	r3, [sp, #0]
90014d3c:	429d      	cmp	r5, r3
90014d3e:	da6d      	bge.n	90014e1c <_ZN8touchgfx13AbstractShape24updateAbstractShapeCacheEv+0x110>
90014d40:	6823      	ldr	r3, [r4, #0]
90014d42:	4629      	mov	r1, r5
90014d44:	4620      	mov	r0, r4
90014d46:	6f9b      	ldr	r3, [r3, #120]	; 0x78
90014d48:	4798      	blx	r3
90014d4a:	6823      	ldr	r3, [r4, #0]
90014d4c:	4682      	mov	sl, r0
90014d4e:	4629      	mov	r1, r5
90014d50:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
90014d52:	4620      	mov	r0, r4
90014d54:	4798      	blx	r3
90014d56:	6be1      	ldr	r1, [r4, #60]	; 0x3c
90014d58:	4683      	mov	fp, r0
90014d5a:	4650      	mov	r0, sl
90014d5c:	f7ff ffb1 	bl	90014cc2 <_ZN8touchgfx7CWRUtil5mulQ5ENS0_2Q5ENS0_3Q10E>
90014d60:	a902      	add	r1, sp, #8
90014d62:	9004      	str	r0, [sp, #16]
90014d64:	a804      	add	r0, sp, #16
90014d66:	f7ff ff61 	bl	90014c2c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90014d6a:	6b22      	ldr	r2, [r4, #48]	; 0x30
90014d6c:	6c21      	ldr	r1, [r4, #64]	; 0x40
90014d6e:	4402      	add	r2, r0
90014d70:	4658      	mov	r0, fp
90014d72:	9201      	str	r2, [sp, #4]
90014d74:	f7ff ffa5 	bl	90014cc2 <_ZN8touchgfx7CWRUtil5mulQ5ENS0_2Q5ENS0_3Q10E>
90014d78:	ab06      	add	r3, sp, #24
90014d7a:	a903      	add	r1, sp, #12
90014d7c:	f843 0d04 	str.w	r0, [r3, #-4]!
90014d80:	4618      	mov	r0, r3
90014d82:	f7ff ff53 	bl	90014c2c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90014d86:	9a01      	ldr	r2, [sp, #4]
90014d88:	1a12      	subs	r2, r2, r0
90014d8a:	b125      	cbz	r5, 90014d96 <_ZN8touchgfx13AbstractShape24updateAbstractShapeCacheEv+0x8a>
90014d8c:	2320      	movs	r3, #32
90014d8e:	fb92 f3f3 	sdiv	r3, r2, r3
90014d92:	429f      	cmp	r7, r3
90014d94:	da03      	bge.n	90014d9e <_ZN8touchgfx13AbstractShape24updateAbstractShapeCacheEv+0x92>
90014d96:	2720      	movs	r7, #32
90014d98:	fb92 f7f7 	sdiv	r7, r2, r7
90014d9c:	b125      	cbz	r5, 90014da8 <_ZN8touchgfx13AbstractShape24updateAbstractShapeCacheEv+0x9c>
90014d9e:	2320      	movs	r3, #32
90014da0:	fb92 f3f3 	sdiv	r3, r2, r3
90014da4:	4599      	cmp	r9, r3
90014da6:	dd03      	ble.n	90014db0 <_ZN8touchgfx13AbstractShape24updateAbstractShapeCacheEv+0xa4>
90014da8:	f04f 0920 	mov.w	r9, #32
90014dac:	fb92 f9f9 	sdiv	r9, r2, r9
90014db0:	6c21      	ldr	r1, [r4, #64]	; 0x40
90014db2:	4658      	mov	r0, fp
90014db4:	9201      	str	r2, [sp, #4]
90014db6:	f7ff ff84 	bl	90014cc2 <_ZN8touchgfx7CWRUtil5mulQ5ENS0_2Q5ENS0_3Q10E>
90014dba:	a902      	add	r1, sp, #8
90014dbc:	9004      	str	r0, [sp, #16]
90014dbe:	a804      	add	r0, sp, #16
90014dc0:	f7ff ff34 	bl	90014c2c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90014dc4:	6b63      	ldr	r3, [r4, #52]	; 0x34
90014dc6:	6be1      	ldr	r1, [r4, #60]	; 0x3c
90014dc8:	eb00 0b03 	add.w	fp, r0, r3
90014dcc:	4650      	mov	r0, sl
90014dce:	f7ff ff78 	bl	90014cc2 <_ZN8touchgfx7CWRUtil5mulQ5ENS0_2Q5ENS0_3Q10E>
90014dd2:	ab06      	add	r3, sp, #24
90014dd4:	a903      	add	r1, sp, #12
90014dd6:	f843 0d04 	str.w	r0, [r3, #-4]!
90014dda:	4618      	mov	r0, r3
90014ddc:	f7ff ff26 	bl	90014c2c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90014de0:	9a01      	ldr	r2, [sp, #4]
90014de2:	eb00 030b 	add.w	r3, r0, fp
90014de6:	b125      	cbz	r5, 90014df2 <_ZN8touchgfx13AbstractShape24updateAbstractShapeCacheEv+0xe6>
90014de8:	2120      	movs	r1, #32
90014dea:	fb93 f1f1 	sdiv	r1, r3, r1
90014dee:	428e      	cmp	r6, r1
90014df0:	da03      	bge.n	90014dfa <_ZN8touchgfx13AbstractShape24updateAbstractShapeCacheEv+0xee>
90014df2:	2620      	movs	r6, #32
90014df4:	fb93 f6f6 	sdiv	r6, r3, r6
90014df8:	b125      	cbz	r5, 90014e04 <_ZN8touchgfx13AbstractShape24updateAbstractShapeCacheEv+0xf8>
90014dfa:	2120      	movs	r1, #32
90014dfc:	fb93 f1f1 	sdiv	r1, r3, r1
90014e00:	4588      	cmp	r8, r1
90014e02:	dd03      	ble.n	90014e0c <_ZN8touchgfx13AbstractShape24updateAbstractShapeCacheEv+0x100>
90014e04:	f04f 0820 	mov.w	r8, #32
90014e08:	fb93 f8f8 	sdiv	r8, r3, r8
90014e0c:	6821      	ldr	r1, [r4, #0]
90014e0e:	4620      	mov	r0, r4
90014e10:	f8d1 a080 	ldr.w	sl, [r1, #128]	; 0x80
90014e14:	4629      	mov	r1, r5
90014e16:	47d0      	blx	sl
90014e18:	3501      	adds	r5, #1
90014e1a:	e78e      	b.n	90014d3a <_ZN8touchgfx13AbstractShape24updateAbstractShapeCacheEv+0x2e>
90014e1c:	3701      	adds	r7, #1
90014e1e:	3601      	adds	r6, #1
90014e20:	f8a4 9044 	strh.w	r9, [r4, #68]	; 0x44
90014e24:	f8a4 8046 	strh.w	r8, [r4, #70]	; 0x46
90014e28:	eba7 0909 	sub.w	r9, r7, r9
90014e2c:	eba6 0808 	sub.w	r8, r6, r8
90014e30:	f8a4 9048 	strh.w	r9, [r4, #72]	; 0x48
90014e34:	f8a4 804a 	strh.w	r8, [r4, #74]	; 0x4a
90014e38:	b007      	add	sp, #28
90014e3a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

90014e40 <_ZNK8touchgfx13AbstractShape16drawCanvasWidgetERKNS_4RectE>:
90014e40:	b5f0      	push	{r4, r5, r6, r7, lr}
90014e42:	6803      	ldr	r3, [r0, #0]
90014e44:	b0a3      	sub	sp, #140	; 0x8c
90014e46:	4604      	mov	r4, r0
90014e48:	460f      	mov	r7, r1
90014e4a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
90014e4c:	4798      	blx	r3
90014e4e:	4606      	mov	r6, r0
90014e50:	2800      	cmp	r0, #0
90014e52:	d04f      	beq.n	90014ef4 <_ZNK8touchgfx13AbstractShape16drawCanvasWidgetERKNS_4RectE+0xb4>
90014e54:	4621      	mov	r1, r4
90014e56:	a803      	add	r0, sp, #12
90014e58:	6aa5      	ldr	r5, [r4, #40]	; 0x28
90014e5a:	f004 fea7 	bl	90019bac <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90014e5e:	6823      	ldr	r3, [r4, #0]
90014e60:	4620      	mov	r0, r4
90014e62:	6e5b      	ldr	r3, [r3, #100]	; 0x64
90014e64:	4798      	blx	r3
90014e66:	aa03      	add	r2, sp, #12
90014e68:	4629      	mov	r1, r5
90014e6a:	9000      	str	r0, [sp, #0]
90014e6c:	463b      	mov	r3, r7
90014e6e:	a805      	add	r0, sp, #20
90014e70:	f014 fbfe 	bl	90029670 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
90014e74:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
90014e78:	2100      	movs	r1, #0
90014e7a:	4620      	mov	r0, r4
90014e7c:	f88d 3058 	strb.w	r3, [sp, #88]	; 0x58
90014e80:	6823      	ldr	r3, [r4, #0]
90014e82:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
90014e86:	4798      	blx	r3
90014e88:	6823      	ldr	r3, [r4, #0]
90014e8a:	4605      	mov	r5, r0
90014e8c:	2100      	movs	r1, #0
90014e8e:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
90014e92:	4620      	mov	r0, r4
90014e94:	4798      	blx	r3
90014e96:	4629      	mov	r1, r5
90014e98:	2501      	movs	r5, #1
90014e9a:	4602      	mov	r2, r0
90014e9c:	a805      	add	r0, sp, #20
90014e9e:	f014 fd33 	bl	90029908 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
90014ea2:	42b5      	cmp	r5, r6
90014ea4:	da17      	bge.n	90014ed6 <_ZNK8touchgfx13AbstractShape16drawCanvasWidgetERKNS_4RectE+0x96>
90014ea6:	6823      	ldr	r3, [r4, #0]
90014ea8:	4629      	mov	r1, r5
90014eaa:	4620      	mov	r0, r4
90014eac:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
90014eb0:	4798      	blx	r3
90014eb2:	6823      	ldr	r3, [r4, #0]
90014eb4:	4607      	mov	r7, r0
90014eb6:	4629      	mov	r1, r5
90014eb8:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
90014ebc:	4620      	mov	r0, r4
90014ebe:	4798      	blx	r3
90014ec0:	4639      	mov	r1, r7
90014ec2:	4602      	mov	r2, r0
90014ec4:	a805      	add	r0, sp, #20
90014ec6:	f014 fd6c 	bl	900299a2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
90014eca:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
90014ece:	429a      	cmp	r2, r3
90014ed0:	d30e      	bcc.n	90014ef0 <_ZNK8touchgfx13AbstractShape16drawCanvasWidgetERKNS_4RectE+0xb0>
90014ed2:	3501      	adds	r5, #1
90014ed4:	e7e5      	b.n	90014ea2 <_ZNK8touchgfx13AbstractShape16drawCanvasWidgetERKNS_4RectE+0x62>
90014ed6:	21ff      	movs	r1, #255	; 0xff
90014ed8:	a805      	add	r0, sp, #20
90014eda:	f014 fc5d 	bl	90029798 <_ZN8touchgfx6Canvas6renderEh>
90014ede:	4604      	mov	r4, r0
90014ee0:	4b05      	ldr	r3, [pc, #20]	; (90014ef8 <_ZNK8touchgfx13AbstractShape16drawCanvasWidgetERKNS_4RectE+0xb8>)
90014ee2:	a80a      	add	r0, sp, #40	; 0x28
90014ee4:	9305      	str	r3, [sp, #20]
90014ee6:	f001 f9af 	bl	90016248 <_ZN8touchgfx7OutlineD1Ev>
90014eea:	4620      	mov	r0, r4
90014eec:	b023      	add	sp, #140	; 0x8c
90014eee:	bdf0      	pop	{r4, r5, r6, r7, pc}
90014ef0:	2400      	movs	r4, #0
90014ef2:	e7f5      	b.n	90014ee0 <_ZNK8touchgfx13AbstractShape16drawCanvasWidgetERKNS_4RectE+0xa0>
90014ef4:	2401      	movs	r4, #1
90014ef6:	e7f8      	b.n	90014eea <_ZNK8touchgfx13AbstractShape16drawCanvasWidgetERKNS_4RectE+0xaa>
90014ef8:	9002ea30 	.word	0x9002ea30

90014efc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
90014efc:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
90014efe:	6803      	ldr	r3, [r0, #0]
90014f00:	460d      	mov	r5, r1
90014f02:	4604      	mov	r4, r0
90014f04:	4601      	mov	r1, r0
90014f06:	6e9b      	ldr	r3, [r3, #104]	; 0x68
90014f08:	a802      	add	r0, sp, #8
90014f0a:	4798      	blx	r3
90014f0c:	6828      	ldr	r0, [r5, #0]
90014f0e:	6869      	ldr	r1, [r5, #4]
90014f10:	466b      	mov	r3, sp
90014f12:	c303      	stmia	r3!, {r0, r1}
90014f14:	4668      	mov	r0, sp
90014f16:	4619      	mov	r1, r3
90014f18:	f7fe fe14 	bl	90013b44 <_ZN8touchgfx4RectaNERKS0_>
90014f1c:	6aa0      	ldr	r0, [r4, #40]	; 0x28
90014f1e:	b188      	cbz	r0, 90014f44 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90014f20:	6803      	ldr	r3, [r0, #0]
90014f22:	1d21      	adds	r1, r4, #4
90014f24:	68db      	ldr	r3, [r3, #12]
90014f26:	4798      	blx	r3
90014f28:	b160      	cbz	r0, 90014f44 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90014f2a:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
90014f2e:	2b00      	cmp	r3, #0
90014f30:	dd08      	ble.n	90014f44 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90014f32:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
90014f36:	2d00      	cmp	r5, #0
90014f38:	dd04      	ble.n	90014f44 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90014f3a:	4a2b      	ldr	r2, [pc, #172]	; (90014fe8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
90014f3c:	7812      	ldrb	r2, [r2, #0]
90014f3e:	b11a      	cbz	r2, 90014f48 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
90014f40:	2a01      	cmp	r2, #1
90014f42:	d029      	beq.n	90014f98 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
90014f44:	b004      	add	sp, #16
90014f46:	bd70      	pop	{r4, r5, r6, pc}
90014f48:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90014f4c:	441d      	add	r5, r3
90014f4e:	b2ad      	uxth	r5, r5
90014f50:	b22e      	sxth	r6, r5
90014f52:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
90014f56:	42b3      	cmp	r3, r6
90014f58:	daf4      	bge.n	90014f44 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90014f5a:	6823      	ldr	r3, [r4, #0]
90014f5c:	4669      	mov	r1, sp
90014f5e:	4620      	mov	r0, r4
90014f60:	6edb      	ldr	r3, [r3, #108]	; 0x6c
90014f62:	4798      	blx	r3
90014f64:	b940      	cbnz	r0, 90014f78 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
90014f66:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
90014f6a:	2b01      	cmp	r3, #1
90014f6c:	d004      	beq.n	90014f78 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
90014f6e:	3301      	adds	r3, #1
90014f70:	105b      	asrs	r3, r3, #1
90014f72:	f8ad 3006 	strh.w	r3, [sp, #6]
90014f76:	e7f0      	b.n	90014f5a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
90014f78:	f8bd 2006 	ldrh.w	r2, [sp, #6]
90014f7c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90014f80:	4413      	add	r3, r2
90014f82:	b29b      	uxth	r3, r3
90014f84:	441a      	add	r2, r3
90014f86:	f8ad 3002 	strh.w	r3, [sp, #2]
90014f8a:	b212      	sxth	r2, r2
90014f8c:	4296      	cmp	r6, r2
90014f8e:	dae0      	bge.n	90014f52 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
90014f90:	1aeb      	subs	r3, r5, r3
90014f92:	f8ad 3006 	strh.w	r3, [sp, #6]
90014f96:	e7dc      	b.n	90014f52 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
90014f98:	f8bd 5000 	ldrh.w	r5, [sp]
90014f9c:	441d      	add	r5, r3
90014f9e:	b2ad      	uxth	r5, r5
90014fa0:	b22e      	sxth	r6, r5
90014fa2:	f9bd 3000 	ldrsh.w	r3, [sp]
90014fa6:	42b3      	cmp	r3, r6
90014fa8:	dacc      	bge.n	90014f44 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90014faa:	6823      	ldr	r3, [r4, #0]
90014fac:	4669      	mov	r1, sp
90014fae:	4620      	mov	r0, r4
90014fb0:	6edb      	ldr	r3, [r3, #108]	; 0x6c
90014fb2:	4798      	blx	r3
90014fb4:	b940      	cbnz	r0, 90014fc8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
90014fb6:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
90014fba:	2b01      	cmp	r3, #1
90014fbc:	d004      	beq.n	90014fc8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
90014fbe:	3301      	adds	r3, #1
90014fc0:	105b      	asrs	r3, r3, #1
90014fc2:	f8ad 3004 	strh.w	r3, [sp, #4]
90014fc6:	e7f0      	b.n	90014faa <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
90014fc8:	f8bd 2004 	ldrh.w	r2, [sp, #4]
90014fcc:	f8bd 3000 	ldrh.w	r3, [sp]
90014fd0:	4413      	add	r3, r2
90014fd2:	b29b      	uxth	r3, r3
90014fd4:	441a      	add	r2, r3
90014fd6:	f8ad 3000 	strh.w	r3, [sp]
90014fda:	b212      	sxth	r2, r2
90014fdc:	4296      	cmp	r6, r2
90014fde:	dae0      	bge.n	90014fa2 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
90014fe0:	1aeb      	subs	r3, r5, r3
90014fe2:	f8ad 3004 	strh.w	r3, [sp, #4]
90014fe6:	e7dc      	b.n	90014fa2 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
90014fe8:	240236c4 	.word	0x240236c4

90014fec <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
90014fec:	b51f      	push	{r0, r1, r2, r3, r4, lr}
90014fee:	6803      	ldr	r3, [r0, #0]
90014ff0:	4604      	mov	r4, r0
90014ff2:	4601      	mov	r1, r0
90014ff4:	4668      	mov	r0, sp
90014ff6:	6e9b      	ldr	r3, [r3, #104]	; 0x68
90014ff8:	4798      	blx	r3
90014ffa:	2100      	movs	r1, #0
90014ffc:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
90015000:	4668      	mov	r0, sp
90015002:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
90015006:	9102      	str	r1, [sp, #8]
90015008:	a902      	add	r1, sp, #8
9001500a:	f8ad 200c 	strh.w	r2, [sp, #12]
9001500e:	f8ad 300e 	strh.w	r3, [sp, #14]
90015012:	f7fe fd97 	bl	90013b44 <_ZN8touchgfx4RectaNERKS0_>
90015016:	6823      	ldr	r3, [r4, #0]
90015018:	4669      	mov	r1, sp
9001501a:	4620      	mov	r0, r4
9001501c:	691b      	ldr	r3, [r3, #16]
9001501e:	4798      	blx	r3
90015020:	b004      	add	sp, #16
90015022:	bd10      	pop	{r4, pc}

90015024 <_ZN8touchgfx12CanvasWidgetC1Ev>:
90015024:	2101      	movs	r1, #1
90015026:	2200      	movs	r2, #0
90015028:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
9001502c:	490a      	ldr	r1, [pc, #40]	; (90015058 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
9001502e:	8082      	strh	r2, [r0, #4]
90015030:	6001      	str	r1, [r0, #0]
90015032:	21ff      	movs	r1, #255	; 0xff
90015034:	80c2      	strh	r2, [r0, #6]
90015036:	8102      	strh	r2, [r0, #8]
90015038:	8142      	strh	r2, [r0, #10]
9001503a:	8182      	strh	r2, [r0, #12]
9001503c:	81c2      	strh	r2, [r0, #14]
9001503e:	8202      	strh	r2, [r0, #16]
90015040:	8242      	strh	r2, [r0, #18]
90015042:	61c2      	str	r2, [r0, #28]
90015044:	8402      	strh	r2, [r0, #32]
90015046:	8442      	strh	r2, [r0, #34]	; 0x22
90015048:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
9001504c:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
90015050:	6282      	str	r2, [r0, #40]	; 0x28
90015052:	e9c0 2205 	strd	r2, r2, [r0, #20]
90015056:	4770      	bx	lr
90015058:	9002e278 	.word	0x9002e278

9001505c <_ZNK8touchgfx14SnapshotWidget17invalidateContentEv>:
9001505c:	b508      	push	{r3, lr}
9001505e:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
90015062:	b10b      	cbz	r3, 90015068 <_ZNK8touchgfx14SnapshotWidget17invalidateContentEv+0xc>
90015064:	f7ef fa58 	bl	90004518 <_ZNK8touchgfx8Drawable17invalidateContentEv>
90015068:	bd08      	pop	{r3, pc}

9001506a <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>:
9001506a:	6803      	ldr	r3, [r0, #0]
9001506c:	f64f 71fe 	movw	r1, #65534	; 0xfffe
90015070:	6e5b      	ldr	r3, [r3, #100]	; 0x64
90015072:	4718      	bx	r3

90015074 <_ZN8touchgfx14SnapshotWidgetD1Ev>:
90015074:	4770      	bx	lr

90015076 <_ZN8touchgfx14SnapshotWidgetD0Ev>:
90015076:	b510      	push	{r4, lr}
90015078:	4604      	mov	r4, r0
9001507a:	212c      	movs	r1, #44	; 0x2c
9001507c:	f014 fdcf 	bl	90029c1e <_ZdlPvj>
90015080:	4620      	mov	r0, r4
90015082:	bd10      	pop	{r4, pc}

90015084 <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv>:
90015084:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
90015088:	2bff      	cmp	r3, #255	; 0xff
9001508a:	b510      	push	{r4, lr}
9001508c:	d104      	bne.n	90015098 <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x14>
9001508e:	8cca      	ldrh	r2, [r1, #38]	; 0x26
90015090:	f64f 73ff 	movw	r3, #65535	; 0xffff
90015094:	429a      	cmp	r2, r3
90015096:	d105      	bne.n	900150a4 <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x20>
90015098:	2300      	movs	r3, #0
9001509a:	8003      	strh	r3, [r0, #0]
9001509c:	8043      	strh	r3, [r0, #2]
9001509e:	8083      	strh	r3, [r0, #4]
900150a0:	80c3      	strh	r3, [r0, #6]
900150a2:	bd10      	pop	{r4, pc}
900150a4:	2300      	movs	r3, #0
900150a6:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
900150aa:	f9b1 200a 	ldrsh.w	r2, [r1, #10]
900150ae:	8003      	strh	r3, [r0, #0]
900150b0:	8043      	strh	r3, [r0, #2]
900150b2:	8084      	strh	r4, [r0, #4]
900150b4:	80c2      	strh	r2, [r0, #6]
900150b6:	e7f4      	b.n	900150a2 <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x1e>

900150b8 <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE>:
900150b8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900150bc:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
900150c0:	b087      	sub	sp, #28
900150c2:	4604      	mov	r4, r0
900150c4:	4689      	mov	r9, r1
900150c6:	b363      	cbz	r3, 90015122 <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE+0x6a>
900150c8:	8cc2      	ldrh	r2, [r0, #38]	; 0x26
900150ca:	f64f 73ff 	movw	r3, #65535	; 0xffff
900150ce:	429a      	cmp	r2, r3
900150d0:	d027      	beq.n	90015122 <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE+0x6a>
900150d2:	ad06      	add	r5, sp, #24
900150d4:	2700      	movs	r7, #0
900150d6:	f825 2d0c 	strh.w	r2, [r5, #-12]!
900150da:	4628      	mov	r0, r5
900150dc:	f006 fd92 	bl	9001bc04 <_ZNK8touchgfx6Bitmap8getWidthEv>
900150e0:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
900150e4:	a904      	add	r1, sp, #16
900150e6:	f8ad 0014 	strh.w	r0, [sp, #20]
900150ea:	f8ad 3016 	strh.w	r3, [sp, #22]
900150ee:	4620      	mov	r0, r4
900150f0:	6823      	ldr	r3, [r4, #0]
900150f2:	9704      	str	r7, [sp, #16]
900150f4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900150f6:	4798      	blx	r3
900150f8:	f7ff f808 	bl	9001410c <_ZN8touchgfx3HAL3lcdEv>
900150fc:	6803      	ldr	r3, [r0, #0]
900150fe:	4606      	mov	r6, r0
90015100:	4628      	mov	r0, r5
90015102:	f8d3 800c 	ldr.w	r8, [r3, #12]
90015106:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
90015108:	f8ad 300c 	strh.w	r3, [sp, #12]
9001510c:	f006 fe66 	bl	9001bddc <_ZNK8touchgfx6Bitmap7getDataEv>
90015110:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
90015114:	4601      	mov	r1, r0
90015116:	9701      	str	r7, [sp, #4]
90015118:	aa04      	add	r2, sp, #16
9001511a:	9300      	str	r3, [sp, #0]
9001511c:	4630      	mov	r0, r6
9001511e:	464b      	mov	r3, r9
90015120:	47c0      	blx	r8
90015122:	b007      	add	sp, #28
90015124:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

90015128 <_ZN8touchgfx14SnapshotWidget12makeSnapshotEt>:
90015128:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
9001512a:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
9001512e:	460d      	mov	r5, r1
90015130:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
90015134:	2100      	movs	r1, #0
90015136:	f8ad 3006 	strh.w	r3, [sp, #6]
9001513a:	4604      	mov	r4, r0
9001513c:	6803      	ldr	r3, [r0, #0]
9001513e:	f8ad 2004 	strh.w	r2, [sp, #4]
90015142:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90015144:	9100      	str	r1, [sp, #0]
90015146:	4669      	mov	r1, sp
90015148:	4798      	blx	r3
9001514a:	4621      	mov	r1, r4
9001514c:	a802      	add	r0, sp, #8
9001514e:	f004 fd2d 	bl	90019bac <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90015152:	f7fe ffdb 	bl	9001410c <_ZN8touchgfx3HAL3lcdEv>
90015156:	6803      	ldr	r3, [r0, #0]
90015158:	aa02      	add	r2, sp, #8
9001515a:	4669      	mov	r1, sp
9001515c:	695e      	ldr	r6, [r3, #20]
9001515e:	462b      	mov	r3, r5
90015160:	47b0      	blx	r6
90015162:	f64f 73ff 	movw	r3, #65535	; 0xffff
90015166:	2800      	cmp	r0, #0
90015168:	bf08      	it	eq
9001516a:	461d      	moveq	r5, r3
9001516c:	84e5      	strh	r5, [r4, #38]	; 0x26
9001516e:	b004      	add	sp, #16
90015170:	bd70      	pop	{r4, r5, r6, pc}
	...

90015174 <_ZN8touchgfx14SnapshotWidgetC1Ev>:
90015174:	2200      	movs	r2, #0
90015176:	8082      	strh	r2, [r0, #4]
90015178:	80c2      	strh	r2, [r0, #6]
9001517a:	8102      	strh	r2, [r0, #8]
9001517c:	8142      	strh	r2, [r0, #10]
9001517e:	8182      	strh	r2, [r0, #12]
90015180:	81c2      	strh	r2, [r0, #14]
90015182:	8202      	strh	r2, [r0, #16]
90015184:	8242      	strh	r2, [r0, #18]
90015186:	61c2      	str	r2, [r0, #28]
90015188:	8402      	strh	r2, [r0, #32]
9001518a:	8442      	strh	r2, [r0, #34]	; 0x22
9001518c:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
90015190:	e9c0 2205 	strd	r2, r2, [r0, #20]
90015194:	2201      	movs	r2, #1
90015196:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
9001519a:	4a04      	ldr	r2, [pc, #16]	; (900151ac <_ZN8touchgfx14SnapshotWidgetC1Ev+0x38>)
9001519c:	6002      	str	r2, [r0, #0]
9001519e:	f64f 72ff 	movw	r2, #65535	; 0xffff
900151a2:	84c2      	strh	r2, [r0, #38]	; 0x26
900151a4:	f880 2028 	strb.w	r2, [r0, #40]	; 0x28
900151a8:	4770      	bx	lr
900151aa:	bf00      	nop
900151ac:	9002e2f0 	.word	0x9002e2f0

900151b0 <_ZNK8touchgfx5Image17invalidateContentEv>:
900151b0:	b508      	push	{r3, lr}
900151b2:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
900151b6:	b10b      	cbz	r3, 900151bc <_ZNK8touchgfx5Image17invalidateContentEv+0xc>
900151b8:	f7ef f9ae 	bl	90004518 <_ZNK8touchgfx8Drawable17invalidateContentEv>
900151bc:	bd08      	pop	{r3, pc}

900151be <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>:
900151be:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
900151c2:	4770      	bx	lr

900151c4 <_ZN8touchgfx13ScalableImage19getScalingAlgorithmEv>:
900151c4:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
900151c8:	4770      	bx	lr

900151ca <_ZN8touchgfx13ScalableImageD1Ev>:
900151ca:	4770      	bx	lr

900151cc <_ZN8touchgfx13ScalableImageD0Ev>:
900151cc:	b510      	push	{r4, lr}
900151ce:	4604      	mov	r4, r0
900151d0:	212c      	movs	r1, #44	; 0x2c
900151d2:	f014 fd24 	bl	90029c1e <_ZdlPvj>
900151d6:	4620      	mov	r0, r4
900151d8:	bd10      	pop	{r4, pc}

900151da <_ZNK8touchgfx13ScalableImage12getSolidRectEv>:
900151da:	b5f0      	push	{r4, r5, r6, r7, lr}
900151dc:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
900151e0:	b085      	sub	sp, #20
900151e2:	4604      	mov	r4, r0
900151e4:	460d      	mov	r5, r1
900151e6:	2bff      	cmp	r3, #255	; 0xff
900151e8:	d128      	bne.n	9001523c <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x62>
900151ea:	f101 0626 	add.w	r6, r1, #38	; 0x26
900151ee:	4668      	mov	r0, sp
900151f0:	4631      	mov	r1, r6
900151f2:	f006 fd6f 	bl	9001bcd4 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
900151f6:	f9bd 7004 	ldrsh.w	r7, [sp, #4]
900151fa:	4630      	mov	r0, r6
900151fc:	f006 fd02 	bl	9001bc04 <_ZNK8touchgfx6Bitmap8getWidthEv>
90015200:	4287      	cmp	r7, r0
90015202:	d11b      	bne.n	9001523c <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x62>
90015204:	f9bd 7006 	ldrsh.w	r7, [sp, #6]
90015208:	4630      	mov	r0, r6
9001520a:	f006 fd2f 	bl	9001bc6c <_ZNK8touchgfx6Bitmap9getHeightEv>
9001520e:	4287      	cmp	r7, r0
90015210:	d114      	bne.n	9001523c <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x62>
90015212:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
90015216:	2100      	movs	r1, #0
90015218:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
9001521c:	f8ad 300e 	strh.w	r3, [sp, #14]
90015220:	466b      	mov	r3, sp
90015222:	9102      	str	r1, [sp, #8]
90015224:	f8ad 200c 	strh.w	r2, [sp, #12]
90015228:	cb03      	ldmia	r3!, {r0, r1}
9001522a:	6020      	str	r0, [r4, #0]
9001522c:	4620      	mov	r0, r4
9001522e:	6061      	str	r1, [r4, #4]
90015230:	4619      	mov	r1, r3
90015232:	f7fe fc87 	bl	90013b44 <_ZN8touchgfx4RectaNERKS0_>
90015236:	4620      	mov	r0, r4
90015238:	b005      	add	sp, #20
9001523a:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001523c:	2300      	movs	r3, #0
9001523e:	8023      	strh	r3, [r4, #0]
90015240:	8063      	strh	r3, [r4, #2]
90015242:	80a3      	strh	r3, [r4, #4]
90015244:	80e3      	strh	r3, [r4, #6]
90015246:	e7f6      	b.n	90015236 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x5c>

90015248 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>:
90015248:	b538      	push	{r3, r4, r5, lr}
9001524a:	2300      	movs	r3, #0
9001524c:	2501      	movs	r5, #1
9001524e:	4604      	mov	r4, r0
90015250:	8083      	strh	r3, [r0, #4]
90015252:	80c3      	strh	r3, [r0, #6]
90015254:	8103      	strh	r3, [r0, #8]
90015256:	8143      	strh	r3, [r0, #10]
90015258:	8183      	strh	r3, [r0, #12]
9001525a:	81c3      	strh	r3, [r0, #14]
9001525c:	8203      	strh	r3, [r0, #16]
9001525e:	8243      	strh	r3, [r0, #18]
90015260:	61c3      	str	r3, [r0, #28]
90015262:	8403      	strh	r3, [r0, #32]
90015264:	8443      	strh	r3, [r0, #34]	; 0x22
90015266:	f880 3024 	strb.w	r3, [r0, #36]	; 0x24
9001526a:	f880 5025 	strb.w	r5, [r0, #37]	; 0x25
9001526e:	e9c0 3305 	strd	r3, r3, [r0, #20]
90015272:	4b07      	ldr	r3, [pc, #28]	; (90015290 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE+0x48>)
90015274:	6003      	str	r3, [r0, #0]
90015276:	880b      	ldrh	r3, [r1, #0]
90015278:	84c3      	strh	r3, [r0, #38]	; 0x26
9001527a:	23ff      	movs	r3, #255	; 0xff
9001527c:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
90015280:	f000 ff6f 	bl	90016162 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90015284:	4b03      	ldr	r3, [pc, #12]	; (90015294 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE+0x4c>)
90015286:	f884 5029 	strb.w	r5, [r4, #41]	; 0x29
9001528a:	4620      	mov	r0, r4
9001528c:	6023      	str	r3, [r4, #0]
9001528e:	bd38      	pop	{r3, r4, r5, pc}
90015290:	9002e5ac 	.word	0x9002e5ac
90015294:	9002e360 	.word	0x9002e360

90015298 <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv>:
90015298:	4603      	mov	r3, r0
9001529a:	3026      	adds	r0, #38	; 0x26
9001529c:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
900152a0:	b90b      	cbnz	r3, 900152a6 <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv+0xe>
900152a2:	f004 bd27 	b.w	90019cf4 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
900152a6:	f004 bd35 	b.w	90019d14 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>
	...

900152ac <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>:
900152ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900152b0:	4604      	mov	r4, r0
900152b2:	b0b3      	sub	sp, #204	; 0xcc
900152b4:	469b      	mov	fp, r3
900152b6:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
900152ba:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
900152be:	2500      	movs	r5, #0
900152c0:	f8ad 0048 	strh.w	r0, [sp, #72]	; 0x48
900152c4:	f8ad 304a 	strh.w	r3, [sp, #74]	; 0x4a
900152c8:	ab11      	add	r3, sp, #68	; 0x44
900152ca:	9206      	str	r2, [sp, #24]
900152cc:	4618      	mov	r0, r3
900152ce:	9511      	str	r5, [sp, #68]	; 0x44
900152d0:	9307      	str	r3, [sp, #28]
900152d2:	ad13      	add	r5, sp, #76	; 0x4c
900152d4:	e9dd a93c 	ldrd	sl, r9, [sp, #240]	; 0xf0
900152d8:	e9dd 873e 	ldrd	r8, r7, [sp, #248]	; 0xf8
900152dc:	f7fe fc32 	bl	90013b44 <_ZN8touchgfx4RectaNERKS0_>
900152e0:	9b07      	ldr	r3, [sp, #28]
900152e2:	e893 0003 	ldmia.w	r3, {r0, r1}
900152e6:	e885 0003 	stmia.w	r5, {r0, r1}
900152ea:	6821      	ldr	r1, [r4, #0]
900152ec:	4620      	mov	r0, r4
900152ee:	6ace      	ldr	r6, [r1, #44]	; 0x2c
900152f0:	4629      	mov	r1, r5
900152f2:	47b0      	blx	r6
900152f4:	4621      	mov	r1, r4
900152f6:	a815      	add	r0, sp, #84	; 0x54
900152f8:	1d26      	adds	r6, r4, #4
900152fa:	f004 fc57 	bl	90019bac <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900152fe:	a815      	add	r0, sp, #84	; 0x54
90015300:	f003 f98a 	bl	90018618 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90015304:	9b07      	ldr	r3, [sp, #28]
90015306:	4631      	mov	r1, r6
90015308:	4618      	mov	r0, r3
9001530a:	f003 f9c9 	bl	900186a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001530e:	4628      	mov	r0, r5
90015310:	f104 0526 	add.w	r5, r4, #38	; 0x26
90015314:	f003 f980 	bl	90018618 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90015318:	4628      	mov	r0, r5
9001531a:	f006 fd5f 	bl	9001bddc <_ZNK8touchgfx6Bitmap7getDataEv>
9001531e:	9007      	str	r0, [sp, #28]
90015320:	2800      	cmp	r0, #0
90015322:	f000 80ce 	beq.w	900154c2 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x216>
90015326:	f8db 200c 	ldr.w	r2, [fp, #12]
9001532a:	a809      	add	r0, sp, #36	; 0x24
9001532c:	f8db 1000 	ldr.w	r1, [fp]
90015330:	920c      	str	r2, [sp, #48]	; 0x30
90015332:	f8da 2000 	ldr.w	r2, [sl]
90015336:	9109      	str	r1, [sp, #36]	; 0x24
90015338:	920d      	str	r2, [sp, #52]	; 0x34
9001533a:	f8da 2004 	ldr.w	r2, [sl, #4]
9001533e:	f8db 1004 	ldr.w	r1, [fp, #4]
90015342:	920e      	str	r2, [sp, #56]	; 0x38
90015344:	f8da 2008 	ldr.w	r2, [sl, #8]
90015348:	910a      	str	r1, [sp, #40]	; 0x28
9001534a:	920f      	str	r2, [sp, #60]	; 0x3c
9001534c:	f8db 1008 	ldr.w	r1, [fp, #8]
90015350:	f8da 200c 	ldr.w	r2, [sl, #12]
90015354:	910b      	str	r1, [sp, #44]	; 0x2c
90015356:	a90d      	add	r1, sp, #52	; 0x34
90015358:	9210      	str	r2, [sp, #64]	; 0x40
9001535a:	4632      	mov	r2, r6
9001535c:	f003 f984 	bl	90018668 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
90015360:	4632      	mov	r2, r6
90015362:	a90e      	add	r1, sp, #56	; 0x38
90015364:	a80a      	add	r0, sp, #40	; 0x28
90015366:	f003 f97f 	bl	90018668 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
9001536a:	4632      	mov	r2, r6
9001536c:	a90f      	add	r1, sp, #60	; 0x3c
9001536e:	a80b      	add	r0, sp, #44	; 0x2c
90015370:	f003 f97a 	bl	90018668 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
90015374:	4632      	mov	r2, r6
90015376:	a910      	add	r1, sp, #64	; 0x40
90015378:	a80c      	add	r0, sp, #48	; 0x30
9001537a:	f003 f975 	bl	90018668 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
9001537e:	eddd 7a0d 	vldr	s15, [sp, #52]	; 0x34
90015382:	ed97 3a00 	vldr	s6, [r7]
90015386:	eef0 6a67 	vmov.f32	s13, s15
9001538a:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
9001538e:	edd7 4a01 	vldr	s9, [r7, #4]
90015392:	eeb0 7a67 	vmov.f32	s14, s15
90015396:	eddd 7a0e 	vldr	s15, [sp, #56]	; 0x38
9001539a:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
9001539e:	ed99 2a00 	vldr	s4, [r9]
900153a2:	eeb0 6a67 	vmov.f32	s12, s15
900153a6:	eddd 7a0b 	vldr	s15, [sp, #44]	; 0x2c
900153aa:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
900153ae:	edd8 2a00 	vldr	s5, [r8]
900153b2:	edd9 3a01 	vldr	s7, [r9, #4]
900153b6:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
900153ba:	ed98 4a01 	vldr	s8, [r8, #4]
900153be:	ed99 5a02 	vldr	s10, [r9, #8]
900153c2:	edd8 5a02 	vldr	s11, [r8, #8]
900153c6:	ee16 6a10 	vmov	r6, s12
900153ca:	eeb0 6a67 	vmov.f32	s12, s15
900153ce:	eddd 7a0f 	vldr	s15, [sp, #60]	; 0x3c
900153d2:	f8d9 e00c 	ldr.w	lr, [r9, #12]
900153d6:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
900153da:	f8d8 c00c 	ldr.w	ip, [r8, #12]
900153de:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
900153e2:	ed8d 2a20 	vstr	s4, [sp, #128]	; 0x80
900153e6:	ee16 0a10 	vmov	r0, s12
900153ea:	eeb0 6a67 	vmov.f32	s12, s15
900153ee:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
900153f2:	edcd 2a21 	vstr	s5, [sp, #132]	; 0x84
900153f6:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
900153fa:	ed8d 3a22 	vstr	s6, [sp, #136]	; 0x88
900153fe:	ed8d 7a23 	vstr	s14, [sp, #140]	; 0x8c
90015402:	edcd 3a25 	vstr	s7, [sp, #148]	; 0x94
90015406:	ee16 1a10 	vmov	r1, s12
9001540a:	eeb0 6a67 	vmov.f32	s12, s15
9001540e:	eddd 7a10 	vldr	s15, [sp, #64]	; 0x40
90015412:	ed8d 4a26 	vstr	s8, [sp, #152]	; 0x98
90015416:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
9001541a:	edcd 4a27 	vstr	s9, [sp, #156]	; 0x9c
9001541e:	f8d7 a008 	ldr.w	sl, [r7, #8]
90015422:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
90015426:	68ff      	ldr	r7, [r7, #12]
90015428:	ee16 2a10 	vmov	r2, s12
9001542c:	ed9d 6a09 	vldr	s12, [sp, #36]	; 0x24
90015430:	9624      	str	r6, [sp, #144]	; 0x90
90015432:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
90015436:	e9cd 0128 	strd	r0, r1, [sp, #160]	; 0xa0
9001543a:	ed8d 6a1e 	vstr	s12, [sp, #120]	; 0x78
9001543e:	4628      	mov	r0, r5
90015440:	ed8d 5a2a 	vstr	s10, [sp, #168]	; 0xa8
90015444:	9b06      	ldr	r3, [sp, #24]
90015446:	922d      	str	r2, [sp, #180]	; 0xb4
90015448:	4a1f      	ldr	r2, [pc, #124]	; (900154c8 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x21c>)
9001544a:	9317      	str	r3, [sp, #92]	; 0x5c
9001544c:	8812      	ldrh	r2, [r2, #0]
9001544e:	9b07      	ldr	r3, [sp, #28]
90015450:	9218      	str	r2, [sp, #96]	; 0x60
90015452:	9319      	str	r3, [sp, #100]	; 0x64
90015454:	edcd 5a2b 	vstr	s11, [sp, #172]	; 0xac
90015458:	edcd 7a2e 	vstr	s15, [sp, #184]	; 0xb8
9001545c:	f8cd e0bc 	str.w	lr, [sp, #188]	; 0xbc
90015460:	f8cd c0c0 	str.w	ip, [sp, #192]	; 0xc0
90015464:	f8cd a0b0 	str.w	sl, [sp, #176]	; 0xb0
90015468:	9731      	str	r7, [sp, #196]	; 0xc4
9001546a:	f006 fce7 	bl	9001be3c <_ZNK8touchgfx6Bitmap12getExtraDataEv>
9001546e:	901a      	str	r0, [sp, #104]	; 0x68
90015470:	4628      	mov	r0, r5
90015472:	f006 fbc7 	bl	9001bc04 <_ZNK8touchgfx6Bitmap8getWidthEv>
90015476:	901b      	str	r0, [sp, #108]	; 0x6c
90015478:	4628      	mov	r0, r5
9001547a:	f006 fbf7 	bl	9001bc6c <_ZNK8touchgfx6Bitmap9getHeightEv>
9001547e:	901c      	str	r0, [sp, #112]	; 0x70
90015480:	4628      	mov	r0, r5
90015482:	f006 fbbf 	bl	9001bc04 <_ZNK8touchgfx6Bitmap8getWidthEv>
90015486:	4b11      	ldr	r3, [pc, #68]	; (900154cc <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x220>)
90015488:	901d      	str	r0, [sp, #116]	; 0x74
9001548a:	681b      	ldr	r3, [r3, #0]
9001548c:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
90015490:	b10a      	cbz	r2, 90015496 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x1ea>
90015492:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
90015494:	b905      	cbnz	r5, 90015498 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x1ec>
90015496:	689d      	ldr	r5, [r3, #8]
90015498:	682b      	ldr	r3, [r5, #0]
9001549a:	4620      	mov	r0, r4
9001549c:	6c1e      	ldr	r6, [r3, #64]	; 0x40
9001549e:	f7ff fefb 	bl	90015298 <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv>
900154a2:	f64f 73ff 	movw	r3, #65535	; 0xffff
900154a6:	aa1e      	add	r2, sp, #120	; 0x78
900154a8:	a917      	add	r1, sp, #92	; 0x5c
900154aa:	9304      	str	r3, [sp, #16]
900154ac:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
900154b0:	e9cd 0302 	strd	r0, r3, [sp, #8]
900154b4:	ab13      	add	r3, sp, #76	; 0x4c
900154b6:	4628      	mov	r0, r5
900154b8:	9301      	str	r3, [sp, #4]
900154ba:	ab15      	add	r3, sp, #84	; 0x54
900154bc:	9300      	str	r3, [sp, #0]
900154be:	ab19      	add	r3, sp, #100	; 0x64
900154c0:	47b0      	blx	r6
900154c2:	b033      	add	sp, #204	; 0xcc
900154c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900154c8:	240236c6 	.word	0x240236c6
900154cc:	240236cc 	.word	0x240236cc

900154d0 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE>:
900154d0:	b570      	push	{r4, r5, r6, lr}
900154d2:	ed2d 8b04 	vpush	{d8-d9}
900154d6:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
900154da:	b098      	sub	sp, #96	; 0x60
900154dc:	4604      	mov	r4, r0
900154de:	460e      	mov	r6, r1
900154e0:	2b00      	cmp	r3, #0
900154e2:	d065      	beq.n	900155b0 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xe0>
900154e4:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
900154e8:	f100 0526 	add.w	r5, r0, #38	; 0x26
900154ec:	ed9f 8a37 	vldr	s16, [pc, #220]	; 900155cc <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xfc>
900154f0:	ee09 3a10 	vmov	s18, r3
900154f4:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
900154f8:	4628      	mov	r0, r5
900154fa:	ee08 3a90 	vmov	s17, r3
900154fe:	4b34      	ldr	r3, [pc, #208]	; (900155d0 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x100>)
90015500:	eeb8 9ac9 	vcvt.f32.s32	s18, s18
90015504:	930c      	str	r3, [sp, #48]	; 0x30
90015506:	eef8 8ae8 	vcvt.f32.s32	s17, s17
9001550a:	930d      	str	r3, [sp, #52]	; 0x34
9001550c:	930e      	str	r3, [sp, #56]	; 0x38
9001550e:	ee39 9a08 	vadd.f32	s18, s18, s16
90015512:	930f      	str	r3, [sp, #60]	; 0x3c
90015514:	f006 fb76 	bl	9001bc04 <_ZNK8touchgfx6Bitmap8getWidthEv>
90015518:	ee07 0a90 	vmov	s15, r0
9001551c:	4628      	mov	r0, r5
9001551e:	ee78 8a88 	vadd.f32	s17, s17, s16
90015522:	eef8 9ae7 	vcvt.f32.s32	s19, s15
90015526:	f006 fba1 	bl	9001bc6c <_ZNK8touchgfx6Bitmap9getHeightEv>
9001552a:	4b2a      	ldr	r3, [pc, #168]	; (900155d4 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x104>)
9001552c:	ee07 0a90 	vmov	s15, r0
90015530:	781b      	ldrb	r3, [r3, #0]
90015532:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
90015536:	eef0 7a48 	vmov.f32	s15, s16
9001553a:	2b01      	cmp	r3, #1
9001553c:	d13c      	bne.n	900155b8 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xe8>
9001553e:	eef0 6a69 	vmov.f32	s13, s19
90015542:	ee19 3a90 	vmov	r3, s19
90015546:	eeb0 6a47 	vmov.f32	s12, s14
9001554a:	eef0 5a47 	vmov.f32	s11, s14
9001554e:	eef0 9a48 	vmov.f32	s19, s16
90015552:	eeb0 7a48 	vmov.f32	s14, s16
90015556:	9314      	str	r3, [sp, #80]	; 0x50
90015558:	ab14      	add	r3, sp, #80	; 0x50
9001555a:	2200      	movs	r2, #0
9001555c:	4631      	mov	r1, r6
9001555e:	9303      	str	r3, [sp, #12]
90015560:	ab10      	add	r3, sp, #64	; 0x40
90015562:	4620      	mov	r0, r4
90015564:	edcd 7a04 	vstr	s15, [sp, #16]
90015568:	9302      	str	r3, [sp, #8]
9001556a:	ab0c      	add	r3, sp, #48	; 0x30
9001556c:	ed8d 9a05 	vstr	s18, [sp, #20]
90015570:	9301      	str	r3, [sp, #4]
90015572:	ab08      	add	r3, sp, #32
90015574:	ed8d 9a06 	vstr	s18, [sp, #24]
90015578:	9300      	str	r3, [sp, #0]
9001557a:	ab04      	add	r3, sp, #16
9001557c:	edcd 7a07 	vstr	s15, [sp, #28]
90015580:	edcd 7a08 	vstr	s15, [sp, #32]
90015584:	edcd 7a09 	vstr	s15, [sp, #36]	; 0x24
90015588:	edcd 8a0a 	vstr	s17, [sp, #40]	; 0x28
9001558c:	edcd 8a0b 	vstr	s17, [sp, #44]	; 0x2c
90015590:	edcd 7a10 	vstr	s15, [sp, #64]	; 0x40
90015594:	edcd 9a11 	vstr	s19, [sp, #68]	; 0x44
90015598:	edcd 5a12 	vstr	s11, [sp, #72]	; 0x48
9001559c:	ed8d 6a13 	vstr	s12, [sp, #76]	; 0x4c
900155a0:	edcd 7a15 	vstr	s15, [sp, #84]	; 0x54
900155a4:	ed8d 7a16 	vstr	s14, [sp, #88]	; 0x58
900155a8:	edcd 6a17 	vstr	s13, [sp, #92]	; 0x5c
900155ac:	f7ff fe7e 	bl	900152ac <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>
900155b0:	b018      	add	sp, #96	; 0x60
900155b2:	ecbd 8b04 	vpop	{d8-d9}
900155b6:	bd70      	pop	{r4, r5, r6, pc}
900155b8:	eef0 6a47 	vmov.f32	s13, s14
900155bc:	ee18 3a10 	vmov	r3, s16
900155c0:	eef0 5a69 	vmov.f32	s11, s19
900155c4:	eeb0 6a48 	vmov.f32	s12, s16
900155c8:	e7c5      	b.n	90015556 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x86>
900155ca:	bf00      	nop
900155cc:	00000000 	.word	0x00000000
900155d0:	42c80000 	.word	0x42c80000
900155d4:	240236c4 	.word	0x240236c4

900155d8 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
900155d8:	2000      	movs	r0, #0
900155da:	4770      	bx	lr

900155dc <_ZNK8touchgfx8TextArea12getAlignmentEv>:
900155dc:	4b07      	ldr	r3, [pc, #28]	; (900155fc <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
900155de:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
900155e0:	881b      	ldrh	r3, [r3, #0]
900155e2:	4293      	cmp	r3, r2
900155e4:	bf81      	itttt	hi
900155e6:	4b06      	ldrhi	r3, [pc, #24]	; (90015600 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
900155e8:	681b      	ldrhi	r3, [r3, #0]
900155ea:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
900155ee:	7858      	ldrbhi	r0, [r3, #1]
900155f0:	bf8c      	ite	hi
900155f2:	f000 0003 	andhi.w	r0, r0, #3
900155f6:	2000      	movls	r0, #0
900155f8:	4770      	bx	lr
900155fa:	bf00      	nop
900155fc:	24023728 	.word	0x24023728
90015600:	24023724 	.word	0x24023724

90015604 <_ZN8touchgfx8TextAreaD1Ev>:
90015604:	4770      	bx	lr
	...

90015608 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
90015608:	4b11      	ldr	r3, [pc, #68]	; (90015650 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
9001560a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001560e:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
90015610:	4604      	mov	r4, r0
90015612:	881b      	ldrh	r3, [r3, #0]
90015614:	428b      	cmp	r3, r1
90015616:	d918      	bls.n	9001564a <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
90015618:	6803      	ldr	r3, [r0, #0]
9001561a:	6f9d      	ldr	r5, [r3, #120]	; 0x78
9001561c:	4b0d      	ldr	r3, [pc, #52]	; (90015654 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
9001561e:	6818      	ldr	r0, [r3, #0]
90015620:	f7f1 fa72 	bl	90006b08 <_ZNK8touchgfx5Texts7getTextEt>
90015624:	6823      	ldr	r3, [r4, #0]
90015626:	4606      	mov	r6, r0
90015628:	4620      	mov	r0, r4
9001562a:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
9001562c:	4798      	blx	r3
9001562e:	6823      	ldr	r3, [r4, #0]
90015630:	4607      	mov	r7, r0
90015632:	4620      	mov	r0, r4
90015634:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
90015638:	4798      	blx	r3
9001563a:	463a      	mov	r2, r7
9001563c:	4603      	mov	r3, r0
9001563e:	4631      	mov	r1, r6
90015640:	4620      	mov	r0, r4
90015642:	46ac      	mov	ip, r5
90015644:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
90015648:	4760      	bx	ip
9001564a:	2000      	movs	r0, #0
9001564c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90015650:	24023728 	.word	0x24023728
90015654:	24023730 	.word	0x24023730

90015658 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
90015658:	4b18      	ldr	r3, [pc, #96]	; (900156bc <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
9001565a:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
9001565e:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
90015660:	4604      	mov	r4, r0
90015662:	881b      	ldrh	r3, [r3, #0]
90015664:	428b      	cmp	r3, r1
90015666:	d926      	bls.n	900156b6 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
90015668:	4b15      	ldr	r3, [pc, #84]	; (900156c0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
9001566a:	681b      	ldr	r3, [r3, #0]
9001566c:	eb03 0241 	add.w	r2, r3, r1, lsl #1
90015670:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
90015674:	4b13      	ldr	r3, [pc, #76]	; (900156c4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
90015676:	7855      	ldrb	r5, [r2, #1]
90015678:	681b      	ldr	r3, [r3, #0]
9001567a:	f3c5 0581 	ubfx	r5, r5, #2, #2
9001567e:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
90015682:	6833      	ldr	r3, [r6, #0]
90015684:	69df      	ldr	r7, [r3, #28]
90015686:	4b10      	ldr	r3, [pc, #64]	; (900156c8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
90015688:	6818      	ldr	r0, [r3, #0]
9001568a:	f7f1 fa3d 	bl	90006b08 <_ZNK8touchgfx5Texts7getTextEt>
9001568e:	6823      	ldr	r3, [r4, #0]
90015690:	4680      	mov	r8, r0
90015692:	4620      	mov	r0, r4
90015694:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
90015696:	4798      	blx	r3
90015698:	6823      	ldr	r3, [r4, #0]
9001569a:	4681      	mov	r9, r0
9001569c:	4620      	mov	r0, r4
9001569e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
900156a2:	4798      	blx	r3
900156a4:	464b      	mov	r3, r9
900156a6:	9000      	str	r0, [sp, #0]
900156a8:	4642      	mov	r2, r8
900156aa:	4629      	mov	r1, r5
900156ac:	4630      	mov	r0, r6
900156ae:	47b8      	blx	r7
900156b0:	b003      	add	sp, #12
900156b2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
900156b6:	2000      	movs	r0, #0
900156b8:	e7fa      	b.n	900156b0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
900156ba:	bf00      	nop
900156bc:	24023728 	.word	0x24023728
900156c0:	24023724 	.word	0x24023724
900156c4:	2402372c 	.word	0x2402372c
900156c8:	24023730 	.word	0x24023730

900156cc <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
900156cc:	b40e      	push	{r1, r2, r3}
900156ce:	4b30      	ldr	r3, [pc, #192]	; (90015790 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
900156d0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900156d4:	881a      	ldrh	r2, [r3, #0]
900156d6:	b09d      	sub	sp, #116	; 0x74
900156d8:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
900156da:	4604      	mov	r4, r0
900156dc:	429a      	cmp	r2, r3
900156de:	d954      	bls.n	9001578a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
900156e0:	aa26      	add	r2, sp, #152	; 0x98
900156e2:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 90015794 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
900156e6:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 90015798 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
900156ea:	9202      	str	r2, [sp, #8]
900156ec:	f8d9 2000 	ldr.w	r2, [r9]
900156f0:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
900156f4:	f8d8 3000 	ldr.w	r3, [r8]
900156f8:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
900156fc:	682b      	ldr	r3, [r5, #0]
900156fe:	4628      	mov	r0, r5
90015700:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90015702:	4798      	blx	r3
90015704:	4606      	mov	r6, r0
90015706:	b207      	sxth	r7, r0
90015708:	a803      	add	r0, sp, #12
9001570a:	f004 feee 	bl	9001a4ea <_ZN8touchgfx12TextProviderC1Ev>
9001570e:	682b      	ldr	r3, [r5, #0]
90015710:	4628      	mov	r0, r5
90015712:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
90015714:	4798      	blx	r3
90015716:	682b      	ldr	r3, [r5, #0]
90015718:	4682      	mov	sl, r0
9001571a:	4628      	mov	r0, r5
9001571c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
9001571e:	4798      	blx	r3
90015720:	4653      	mov	r3, sl
90015722:	9000      	str	r0, [sp, #0]
90015724:	a803      	add	r0, sp, #12
90015726:	9a02      	ldr	r2, [sp, #8]
90015728:	9925      	ldr	r1, [sp, #148]	; 0x94
9001572a:	f004 ff39 	bl	9001a5a0 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
9001572e:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
90015730:	f8d9 3000 	ldr.w	r3, [r9]
90015734:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
90015738:	8925      	ldrh	r5, [r4, #8]
9001573a:	eb03 0142 	add.w	r1, r3, r2, lsl #1
9001573e:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
90015742:	eba5 050c 	sub.w	r5, r5, ip
90015746:	784a      	ldrb	r2, [r1, #1]
90015748:	f8d8 3000 	ldr.w	r3, [r8]
9001574c:	b22d      	sxth	r5, r5
9001574e:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
90015752:	f3c2 0281 	ubfx	r2, r2, #2, #2
90015756:	9500      	str	r5, [sp, #0]
90015758:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
9001575c:	a803      	add	r0, sp, #12
9001575e:	f002 fc61 	bl	90018024 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
90015762:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
90015766:	b203      	sxth	r3, r0
90015768:	18b9      	adds	r1, r7, r2
9001576a:	2900      	cmp	r1, #0
9001576c:	dd0b      	ble.n	90015786 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
9001576e:	3b01      	subs	r3, #1
90015770:	fb13 f302 	smulbb	r3, r3, r2
90015774:	fb16 3300 	smlabb	r3, r6, r0, r3
90015778:	b21f      	sxth	r7, r3
9001577a:	4638      	mov	r0, r7
9001577c:	b01d      	add	sp, #116	; 0x74
9001577e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90015782:	b003      	add	sp, #12
90015784:	4770      	bx	lr
90015786:	2b00      	cmp	r3, #0
90015788:	dcf7      	bgt.n	9001577a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
9001578a:	2700      	movs	r7, #0
9001578c:	e7f5      	b.n	9001577a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
9001578e:	bf00      	nop
90015790:	24023728 	.word	0x24023728
90015794:	24023724 	.word	0x24023724
90015798:	2402372c 	.word	0x2402372c

9001579c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
9001579c:	4bbd      	ldr	r3, [pc, #756]	; (90015a94 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
9001579e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900157a2:	460c      	mov	r4, r1
900157a4:	881b      	ldrh	r3, [r3, #0]
900157a6:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
900157a8:	b0a9      	sub	sp, #164	; 0xa4
900157aa:	4680      	mov	r8, r0
900157ac:	428b      	cmp	r3, r1
900157ae:	d809      	bhi.n	900157c4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
900157b0:	2300      	movs	r3, #0
900157b2:	f04f 32ff 	mov.w	r2, #4294967295
900157b6:	6083      	str	r3, [r0, #8]
900157b8:	e9c0 3200 	strd	r3, r2, [r0]
900157bc:	4640      	mov	r0, r8
900157be:	b029      	add	sp, #164	; 0xa4
900157c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900157c4:	4eb4      	ldr	r6, [pc, #720]	; (90015a98 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
900157c6:	6833      	ldr	r3, [r6, #0]
900157c8:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
900157cc:	4bb3      	ldr	r3, [pc, #716]	; (90015a9c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
900157ce:	681b      	ldr	r3, [r3, #0]
900157d0:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
900157d4:	4bb2      	ldr	r3, [pc, #712]	; (90015aa0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
900157d6:	6818      	ldr	r0, [r3, #0]
900157d8:	f7f1 f996 	bl	90006b08 <_ZNK8touchgfx5Texts7getTextEt>
900157dc:	682b      	ldr	r3, [r5, #0]
900157de:	4681      	mov	r9, r0
900157e0:	4628      	mov	r0, r5
900157e2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
900157e4:	4798      	blx	r3
900157e6:	8ea7      	ldrh	r7, [r4, #52]	; 0x34
900157e8:	b203      	sxth	r3, r0
900157ea:	4682      	mov	sl, r0
900157ec:	4407      	add	r7, r0
900157ee:	a80f      	add	r0, sp, #60	; 0x3c
900157f0:	9304      	str	r3, [sp, #16]
900157f2:	b2bb      	uxth	r3, r7
900157f4:	9303      	str	r3, [sp, #12]
900157f6:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
900157fa:	2b00      	cmp	r3, #0
900157fc:	f040 80a5 	bne.w	9001594a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1ae>
90015800:	f004 fe73 	bl	9001a4ea <_ZN8touchgfx12TextProviderC1Ev>
90015804:	682b      	ldr	r3, [r5, #0]
90015806:	4628      	mov	r0, r5
90015808:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
9001580a:	4798      	blx	r3
9001580c:	682b      	ldr	r3, [r5, #0]
9001580e:	4606      	mov	r6, r0
90015810:	4628      	mov	r0, r5
90015812:	6d1b      	ldr	r3, [r3, #80]	; 0x50
90015814:	4798      	blx	r3
90015816:	6823      	ldr	r3, [r4, #0]
90015818:	4607      	mov	r7, r0
9001581a:	4620      	mov	r0, r4
9001581c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
9001581e:	4798      	blx	r3
90015820:	6823      	ldr	r3, [r4, #0]
90015822:	4683      	mov	fp, r0
90015824:	4620      	mov	r0, r4
90015826:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
9001582a:	4798      	blx	r3
9001582c:	463b      	mov	r3, r7
9001582e:	4649      	mov	r1, r9
90015830:	4632      	mov	r2, r6
90015832:	2600      	movs	r6, #0
90015834:	e9cd b000 	strd	fp, r0, [sp]
90015838:	a80f      	add	r0, sp, #60	; 0x3c
9001583a:	4637      	mov	r7, r6
9001583c:	f004 fec5 	bl	9001a5ca <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
90015840:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
90015844:	f8df b250 	ldr.w	fp, [pc, #592]	; 90015a98 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
90015848:	f013 0ffd 	tst.w	r3, #253	; 0xfd
9001584c:	bf0c      	ite	eq
9001584e:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
90015852:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
90015856:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
90015858:	4629      	mov	r1, r5
9001585a:	f8db 3000 	ldr.w	r3, [fp]
9001585e:	a80f      	add	r0, sp, #60	; 0x3c
90015860:	3701      	adds	r7, #1
90015862:	eb03 0342 	add.w	r3, r3, r2, lsl #1
90015866:	f647 72ff 	movw	r2, #32767	; 0x7fff
9001586a:	b2bf      	uxth	r7, r7
9001586c:	785b      	ldrb	r3, [r3, #1]
9001586e:	f3c3 0381 	ubfx	r3, r3, #2, #2
90015872:	f002 f8de 	bl	90017a32 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
90015876:	9b03      	ldr	r3, [sp, #12]
90015878:	4286      	cmp	r6, r0
9001587a:	eba9 0903 	sub.w	r9, r9, r3
9001587e:	bfb8      	it	lt
90015880:	4606      	movlt	r6, r0
90015882:	a80f      	add	r0, sp, #60	; 0x3c
90015884:	fa0f f989 	sxth.w	r9, r9
90015888:	b236      	sxth	r6, r6
9001588a:	f004 fe55 	bl	9001a538 <_ZN8touchgfx12TextProvider11endOfStringEv>
9001588e:	b918      	cbnz	r0, 90015898 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
90015890:	7a2b      	ldrb	r3, [r5, #8]
90015892:	444b      	add	r3, r9
90015894:	2b00      	cmp	r3, #0
90015896:	dcde      	bgt.n	90015856 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xba>
90015898:	9b03      	ldr	r3, [sp, #12]
9001589a:	4620      	mov	r0, r4
9001589c:	9a04      	ldr	r2, [sp, #16]
9001589e:	fb13 f707 	smulbb	r7, r3, r7
900158a2:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
900158a4:	f895 9009 	ldrb.w	r9, [r5, #9]
900158a8:	1aff      	subs	r7, r7, r3
900158aa:	b2bf      	uxth	r7, r7
900158ac:	b23b      	sxth	r3, r7
900158ae:	429a      	cmp	r2, r3
900158b0:	bfa8      	it	ge
900158b2:	4657      	movge	r7, sl
900158b4:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
900158b8:	f013 0ffd 	tst.w	r3, #253	; 0xfd
900158bc:	6823      	ldr	r3, [r4, #0]
900158be:	444f      	add	r7, r9
900158c0:	6edb      	ldr	r3, [r3, #108]	; 0x6c
900158c2:	bf08      	it	eq
900158c4:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
900158c8:	fa1f f987 	uxth.w	r9, r7
900158cc:	bf18      	it	ne
900158ce:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
900158d2:	4798      	blx	r3
900158d4:	2801      	cmp	r0, #1
900158d6:	fa0f f789 	sxth.w	r7, r9
900158da:	b2b3      	uxth	r3, r6
900158dc:	f000 80e2 	beq.w	90015aa4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
900158e0:	2802      	cmp	r0, #2
900158e2:	f894 6037 	ldrb.w	r6, [r4, #55]	; 0x37
900158e6:	f000 80e3 	beq.w	90015ab0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
900158ea:	7aea      	ldrb	r2, [r5, #11]
900158ec:	b236      	sxth	r6, r6
900158ee:	7b2d      	ldrb	r5, [r5, #12]
900158f0:	1ab6      	subs	r6, r6, r2
900158f2:	442a      	add	r2, r5
900158f4:	fa1f fa86 	uxth.w	sl, r6
900158f8:	4413      	add	r3, r2
900158fa:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
900158fe:	fa0f fb8a 	sxth.w	fp, sl
90015902:	b29b      	uxth	r3, r3
90015904:	2a02      	cmp	r2, #2
90015906:	b21e      	sxth	r6, r3
90015908:	f000 80d6 	beq.w	90015ab8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
9001590c:	2a03      	cmp	r2, #3
9001590e:	f000 80de 	beq.w	90015ace <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
90015912:	2a01      	cmp	r2, #1
90015914:	f040 80e6 	bne.w	90015ae4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
90015918:	8925      	ldrh	r5, [r4, #8]
9001591a:	4633      	mov	r3, r6
9001591c:	463e      	mov	r6, r7
9001591e:	eba5 0909 	sub.w	r9, r5, r9
90015922:	461f      	mov	r7, r3
90015924:	465d      	mov	r5, fp
90015926:	fa0f fb89 	sxth.w	fp, r9
9001592a:	4b5d      	ldr	r3, [pc, #372]	; (90015aa0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
9001592c:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
9001592e:	6818      	ldr	r0, [r3, #0]
90015930:	f7f1 f8ea 	bl	90006b08 <_ZNK8touchgfx5Texts7getTextEt>
90015934:	f8a8 b000 	strh.w	fp, [r8]
90015938:	f8a8 5002 	strh.w	r5, [r8, #2]
9001593c:	f8a8 6004 	strh.w	r6, [r8, #4]
90015940:	f8a8 7006 	strh.w	r7, [r8, #6]
90015944:	f8c8 0008 	str.w	r0, [r8, #8]
90015948:	e738      	b.n	900157bc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
9001594a:	f004 fdce 	bl	9001a4ea <_ZN8touchgfx12TextProviderC1Ev>
9001594e:	682b      	ldr	r3, [r5, #0]
90015950:	4628      	mov	r0, r5
90015952:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
90015954:	4798      	blx	r3
90015956:	682b      	ldr	r3, [r5, #0]
90015958:	4607      	mov	r7, r0
9001595a:	4628      	mov	r0, r5
9001595c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
9001595e:	4798      	blx	r3
90015960:	6823      	ldr	r3, [r4, #0]
90015962:	4683      	mov	fp, r0
90015964:	4620      	mov	r0, r4
90015966:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
90015968:	4798      	blx	r3
9001596a:	6822      	ldr	r2, [r4, #0]
9001596c:	9005      	str	r0, [sp, #20]
9001596e:	4620      	mov	r0, r4
90015970:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
90015974:	4790      	blx	r2
90015976:	9b05      	ldr	r3, [sp, #20]
90015978:	463a      	mov	r2, r7
9001597a:	4649      	mov	r1, r9
9001597c:	9001      	str	r0, [sp, #4]
9001597e:	a80f      	add	r0, sp, #60	; 0x3c
90015980:	9300      	str	r3, [sp, #0]
90015982:	465b      	mov	r3, fp
90015984:	f004 fe21 	bl	9001a5ca <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
90015988:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
9001598c:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
90015990:	af0f      	add	r7, sp, #60	; 0x3c
90015992:	f013 0ffd 	tst.w	r3, #253	; 0xfd
90015996:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
9001599a:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
9001599c:	bf0a      	itet	eq
9001599e:	464a      	moveq	r2, r9
900159a0:	461a      	movne	r2, r3
900159a2:	4699      	moveq	r9, r3
900159a4:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
900159a8:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
900159ac:	1ad2      	subs	r2, r2, r3
900159ae:	6833      	ldr	r3, [r6, #0]
900159b0:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	; 0x34
900159b4:	eb03 0341 	add.w	r3, r3, r1, lsl #1
900159b8:	7859      	ldrb	r1, [r3, #1]
900159ba:	2300      	movs	r3, #0
900159bc:	9707      	str	r7, [sp, #28]
900159be:	f3c1 0181 	ubfx	r1, r1, #2, #2
900159c2:	f8ad 3018 	strh.w	r3, [sp, #24]
900159c6:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
900159ca:	f88d 1020 	strb.w	r1, [sp, #32]
900159ce:	9509      	str	r5, [sp, #36]	; 0x24
900159d0:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
900159d4:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
900159d8:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
900159dc:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
900159e0:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
900159e4:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
900159e8:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
900159ec:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
900159f0:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
900159f4:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
900159f8:	b350      	cbz	r0, 90015a50 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
900159fa:	682b      	ldr	r3, [r5, #0]
900159fc:	4628      	mov	r0, r5
900159fe:	695b      	ldr	r3, [r3, #20]
90015a00:	4798      	blx	r3
90015a02:	4607      	mov	r7, r0
90015a04:	b320      	cbz	r0, 90015a50 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
90015a06:	9809      	ldr	r0, [sp, #36]	; 0x24
90015a08:	4639      	mov	r1, r7
90015a0a:	6803      	ldr	r3, [r0, #0]
90015a0c:	68db      	ldr	r3, [r3, #12]
90015a0e:	4798      	blx	r3
90015a10:	4606      	mov	r6, r0
90015a12:	b1e8      	cbz	r0, 90015a50 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
90015a14:	7b43      	ldrb	r3, [r0, #13]
90015a16:	7a82      	ldrb	r2, [r0, #10]
90015a18:	005b      	lsls	r3, r3, #1
90015a1a:	f403 7380 	and.w	r3, r3, #256	; 0x100
90015a1e:	4313      	orrs	r3, r2
90015a20:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
90015a24:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
90015a28:	2b06      	cmp	r3, #6
90015a2a:	d111      	bne.n	90015a50 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
90015a2c:	9809      	ldr	r0, [sp, #36]	; 0x24
90015a2e:	4632      	mov	r2, r6
90015a30:	4639      	mov	r1, r7
90015a32:	6803      	ldr	r3, [r0, #0]
90015a34:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90015a36:	4798      	blx	r3
90015a38:	7b73      	ldrb	r3, [r6, #13]
90015a3a:	005b      	lsls	r3, r3, #1
90015a3c:	f403 7280 	and.w	r2, r3, #256	; 0x100
90015a40:	7ab3      	ldrb	r3, [r6, #10]
90015a42:	4313      	orrs	r3, r2
90015a44:	4418      	add	r0, r3
90015a46:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
90015a4a:	4418      	add	r0, r3
90015a4c:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
90015a50:	2600      	movs	r6, #0
90015a52:	4637      	mov	r7, r6
90015a54:	a806      	add	r0, sp, #24
90015a56:	3701      	adds	r7, #1
90015a58:	f002 f9e1 	bl	90017e1e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
90015a5c:	f8bd 0036 	ldrh.w	r0, [sp, #54]	; 0x36
90015a60:	9b03      	ldr	r3, [sp, #12]
90015a62:	b2bf      	uxth	r7, r7
90015a64:	4286      	cmp	r6, r0
90015a66:	eba9 0903 	sub.w	r9, r9, r3
90015a6a:	f8bd 3018 	ldrh.w	r3, [sp, #24]
90015a6e:	bfb8      	it	lt
90015a70:	4606      	movlt	r6, r0
90015a72:	fa0f f989 	sxth.w	r9, r9
90015a76:	b236      	sxth	r6, r6
90015a78:	2b00      	cmp	r3, #0
90015a7a:	f43f af0d 	beq.w	90015898 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
90015a7e:	f89d 303a 	ldrb.w	r3, [sp, #58]	; 0x3a
90015a82:	2b00      	cmp	r3, #0
90015a84:	f47f af08 	bne.w	90015898 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
90015a88:	7a2b      	ldrb	r3, [r5, #8]
90015a8a:	444b      	add	r3, r9
90015a8c:	2b00      	cmp	r3, #0
90015a8e:	dce1      	bgt.n	90015a54 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b8>
90015a90:	e702      	b.n	90015898 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
90015a92:	bf00      	nop
90015a94:	24023728 	.word	0x24023728
90015a98:	24023724 	.word	0x24023724
90015a9c:	2402372c 	.word	0x2402372c
90015aa0:	24023730 	.word	0x24023730
90015aa4:	ebaa 0606 	sub.w	r6, sl, r6
90015aa8:	2002      	movs	r0, #2
90015aaa:	fb96 f6f0 	sdiv	r6, r6, r0
90015aae:	e71c      	b.n	900158ea <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14e>
90015ab0:	441e      	add	r6, r3
90015ab2:	ebaa 0606 	sub.w	r6, sl, r6
90015ab6:	e718      	b.n	900158ea <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14e>
90015ab8:	8925      	ldrh	r5, [r4, #8]
90015aba:	1aed      	subs	r5, r5, r3
90015abc:	eba5 050a 	sub.w	r5, r5, sl
90015ac0:	fa0f fb85 	sxth.w	fp, r5
90015ac4:	8965      	ldrh	r5, [r4, #10]
90015ac6:	eba5 0509 	sub.w	r5, r5, r9
90015aca:	b22d      	sxth	r5, r5
90015acc:	e72d      	b.n	9001592a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>
90015ace:	8965      	ldrh	r5, [r4, #10]
90015ad0:	f04f 0b00 	mov.w	fp, #0
90015ad4:	1aed      	subs	r5, r5, r3
90015ad6:	4633      	mov	r3, r6
90015ad8:	463e      	mov	r6, r7
90015ada:	eba5 050a 	sub.w	r5, r5, sl
90015ade:	461f      	mov	r7, r3
90015ae0:	b22d      	sxth	r5, r5
90015ae2:	e722      	b.n	9001592a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>
90015ae4:	2500      	movs	r5, #0
90015ae6:	e720      	b.n	9001592a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>

90015ae8 <_ZN8touchgfx8TextAreaD0Ev>:
90015ae8:	b510      	push	{r4, lr}
90015aea:	4604      	mov	r4, r0
90015aec:	2148      	movs	r1, #72	; 0x48
90015aee:	f014 f896 	bl	90029c1e <_ZdlPvj>
90015af2:	4620      	mov	r0, r4
90015af4:	bd10      	pop	{r4, pc}
	...

90015af8 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
90015af8:	b513      	push	{r0, r1, r4, lr}
90015afa:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
90015afe:	4604      	mov	r4, r0
90015b00:	b1fb      	cbz	r3, 90015b42 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
90015b02:	4b16      	ldr	r3, [pc, #88]	; (90015b5c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
90015b04:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
90015b06:	881b      	ldrh	r3, [r3, #0]
90015b08:	428b      	cmp	r3, r1
90015b0a:	d91a      	bls.n	90015b42 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
90015b0c:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
90015b10:	2b00      	cmp	r3, #0
90015b12:	dd16      	ble.n	90015b42 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
90015b14:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
90015b18:	2b00      	cmp	r3, #0
90015b1a:	dd12      	ble.n	90015b42 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
90015b1c:	4b10      	ldr	r3, [pc, #64]	; (90015b60 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
90015b1e:	6818      	ldr	r0, [r3, #0]
90015b20:	f7f0 fff2 	bl	90006b08 <_ZNK8touchgfx5Texts7getTextEt>
90015b24:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
90015b28:	6822      	ldr	r2, [r4, #0]
90015b2a:	2b00      	cmp	r3, #0
90015b2c:	db06      	blt.n	90015b3c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
90015b2e:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
90015b32:	2b00      	cmp	r3, #0
90015b34:	db02      	blt.n	90015b3c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
90015b36:	6c63      	ldr	r3, [r4, #68]	; 0x44
90015b38:	4298      	cmp	r0, r3
90015b3a:	d004      	beq.n	90015b46 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
90015b3c:	6953      	ldr	r3, [r2, #20]
90015b3e:	4620      	mov	r0, r4
90015b40:	4798      	blx	r3
90015b42:	b002      	add	sp, #8
90015b44:	bd10      	pop	{r4, pc}
90015b46:	f104 013c 	add.w	r1, r4, #60	; 0x3c
90015b4a:	466b      	mov	r3, sp
90015b4c:	6912      	ldr	r2, [r2, #16]
90015b4e:	c903      	ldmia	r1, {r0, r1}
90015b50:	e883 0003 	stmia.w	r3, {r0, r1}
90015b54:	4619      	mov	r1, r3
90015b56:	4620      	mov	r0, r4
90015b58:	4790      	blx	r2
90015b5a:	e7f2      	b.n	90015b42 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
90015b5c:	24023728 	.word	0x24023728
90015b60:	24023730 	.word	0x24023730

90015b64 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
90015b64:	4b45      	ldr	r3, [pc, #276]	; (90015c7c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
90015b66:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90015b6a:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
90015b6c:	b08e      	sub	sp, #56	; 0x38
90015b6e:	881b      	ldrh	r3, [r3, #0]
90015b70:	4604      	mov	r4, r0
90015b72:	4293      	cmp	r3, r2
90015b74:	d97e      	bls.n	90015c74 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
90015b76:	6808      	ldr	r0, [r1, #0]
90015b78:	ab05      	add	r3, sp, #20
90015b7a:	6849      	ldr	r1, [r1, #4]
90015b7c:	4d40      	ldr	r5, [pc, #256]	; (90015c80 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
90015b7e:	c303      	stmia	r3!, {r0, r1}
90015b80:	4611      	mov	r1, r2
90015b82:	6828      	ldr	r0, [r5, #0]
90015b84:	f7f0 ffc0 	bl	90006b08 <_ZNK8touchgfx5Texts7getTextEt>
90015b88:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
90015b8c:	2b00      	cmp	r3, #0
90015b8e:	db11      	blt.n	90015bb4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
90015b90:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
90015b94:	2b00      	cmp	r3, #0
90015b96:	db0d      	blt.n	90015bb4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
90015b98:	6c63      	ldr	r3, [r4, #68]	; 0x44
90015b9a:	4298      	cmp	r0, r3
90015b9c:	d10a      	bne.n	90015bb4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
90015b9e:	f104 023c 	add.w	r2, r4, #60	; 0x3c
90015ba2:	ab09      	add	r3, sp, #36	; 0x24
90015ba4:	e892 0003 	ldmia.w	r2, {r0, r1}
90015ba8:	e883 0003 	stmia.w	r3, {r0, r1}
90015bac:	4619      	mov	r1, r3
90015bae:	a805      	add	r0, sp, #20
90015bb0:	f7fd ffc8 	bl	90013b44 <_ZN8touchgfx4RectaNERKS0_>
90015bb4:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
90015bb8:	2b00      	cmp	r3, #0
90015bba:	dd5b      	ble.n	90015c74 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
90015bbc:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
90015bc0:	2b00      	cmp	r3, #0
90015bc2:	dd57      	ble.n	90015c74 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
90015bc4:	4f2f      	ldr	r7, [pc, #188]	; (90015c84 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
90015bc6:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
90015bc8:	683b      	ldr	r3, [r7, #0]
90015bca:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
90015bce:	4b2e      	ldr	r3, [pc, #184]	; (90015c88 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
90015bd0:	681b      	ldr	r3, [r3, #0]
90015bd2:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
90015bd6:	2e00      	cmp	r6, #0
90015bd8:	d04c      	beq.n	90015c74 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
90015bda:	6823      	ldr	r3, [r4, #0]
90015bdc:	4620      	mov	r0, r4
90015bde:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
90015be2:	6edb      	ldr	r3, [r3, #108]	; 0x6c
90015be4:	4798      	blx	r3
90015be6:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
90015be8:	683b      	ldr	r3, [r7, #0]
90015bea:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
90015bee:	eb03 0342 	add.w	r3, r3, r2, lsl #1
90015bf2:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
90015bf6:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
90015bfa:	785b      	ldrb	r3, [r3, #1]
90015bfc:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
90015c00:	f3c3 0381 	ubfx	r3, r3, #2, #2
90015c04:	6b21      	ldr	r1, [r4, #48]	; 0x30
90015c06:	9609      	str	r6, [sp, #36]	; 0x24
90015c08:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
90015c0c:	4b1f      	ldr	r3, [pc, #124]	; (90015c8c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
90015c0e:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
90015c12:	681b      	ldr	r3, [r3, #0]
90015c14:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
90015c18:	910b      	str	r1, [sp, #44]	; 0x2c
90015c1a:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
90015c1e:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
90015c22:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
90015c26:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
90015c2a:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
90015c2e:	b10a      	cbz	r2, 90015c34 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
90015c30:	6cde      	ldr	r6, [r3, #76]	; 0x4c
90015c32:	b906      	cbnz	r6, 90015c36 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
90015c34:	689e      	ldr	r6, [r3, #8]
90015c36:	af07      	add	r7, sp, #28
90015c38:	4621      	mov	r1, r4
90015c3a:	4638      	mov	r0, r7
90015c3c:	f003 ffb6 	bl	90019bac <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90015c40:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
90015c42:	6828      	ldr	r0, [r5, #0]
90015c44:	f7f0 ff60 	bl	90006b08 <_ZNK8touchgfx5Texts7getTextEt>
90015c48:	6823      	ldr	r3, [r4, #0]
90015c4a:	4605      	mov	r5, r0
90015c4c:	4620      	mov	r0, r4
90015c4e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
90015c50:	4798      	blx	r3
90015c52:	6823      	ldr	r3, [r4, #0]
90015c54:	4680      	mov	r8, r0
90015c56:	4620      	mov	r0, r4
90015c58:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
90015c5c:	4798      	blx	r3
90015c5e:	ab09      	add	r3, sp, #36	; 0x24
90015c60:	9501      	str	r5, [sp, #4]
90015c62:	9300      	str	r3, [sp, #0]
90015c64:	ab05      	add	r3, sp, #20
90015c66:	e9cd 8002 	strd	r8, r0, [sp, #8]
90015c6a:	4630      	mov	r0, r6
90015c6c:	e897 0006 	ldmia.w	r7, {r1, r2}
90015c70:	f7f0 fefa 	bl	90006a68 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
90015c74:	b00e      	add	sp, #56	; 0x38
90015c76:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90015c7a:	bf00      	nop
90015c7c:	24023728 	.word	0x24023728
90015c80:	24023730 	.word	0x24023730
90015c84:	24023724 	.word	0x24023724
90015c88:	2402372c 	.word	0x2402372c
90015c8c:	240236cc 	.word	0x240236cc

90015c90 <_ZN8touchgfx8Drawable14setWidthHeightEss>:
90015c90:	b570      	push	{r4, r5, r6, lr}
90015c92:	6803      	ldr	r3, [r0, #0]
90015c94:	4604      	mov	r4, r0
90015c96:	4615      	mov	r5, r2
90015c98:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90015c9a:	4798      	blx	r3
90015c9c:	6823      	ldr	r3, [r4, #0]
90015c9e:	4629      	mov	r1, r5
90015ca0:	4620      	mov	r0, r4
90015ca2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90015ca4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90015ca8:	4718      	bx	r3
	...

90015cac <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
90015cac:	b538      	push	{r3, r4, r5, lr}
90015cae:	4b0e      	ldr	r3, [pc, #56]	; (90015ce8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
90015cb0:	4604      	mov	r4, r0
90015cb2:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
90015cb4:	881b      	ldrh	r3, [r3, #0]
90015cb6:	429a      	cmp	r2, r3
90015cb8:	d214      	bcs.n	90015ce4 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
90015cba:	6803      	ldr	r3, [r0, #0]
90015cbc:	6f5b      	ldr	r3, [r3, #116]	; 0x74
90015cbe:	4798      	blx	r3
90015cc0:	6823      	ldr	r3, [r4, #0]
90015cc2:	4605      	mov	r5, r0
90015cc4:	4620      	mov	r0, r4
90015cc6:	6f1b      	ldr	r3, [r3, #112]	; 0x70
90015cc8:	4798      	blx	r3
90015cca:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
90015cce:	b22d      	sxth	r5, r5
90015cd0:	4601      	mov	r1, r0
90015cd2:	f013 0ffd 	tst.w	r3, #253	; 0xfd
90015cd6:	bf06      	itte	eq
90015cd8:	4602      	moveq	r2, r0
90015cda:	4629      	moveq	r1, r5
90015cdc:	462a      	movne	r2, r5
90015cde:	4620      	mov	r0, r4
90015ce0:	f7ff ffd6 	bl	90015c90 <_ZN8touchgfx8Drawable14setWidthHeightEss>
90015ce4:	bd38      	pop	{r3, r4, r5, pc}
90015ce6:	bf00      	nop
90015ce8:	24023728 	.word	0x24023728

90015cec <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
90015cec:	b530      	push	{r4, r5, lr}
90015cee:	888b      	ldrh	r3, [r1, #4]
90015cf0:	b085      	sub	sp, #20
90015cf2:	4604      	mov	r4, r0
90015cf4:	8583      	strh	r3, [r0, #44]	; 0x2c
90015cf6:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
90015cfa:	b923      	cbnz	r3, 90015d06 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
90015cfc:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
90015d00:	b90b      	cbnz	r3, 90015d06 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
90015d02:	f7ff ffd3 	bl	90015cac <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
90015d06:	6823      	ldr	r3, [r4, #0]
90015d08:	466d      	mov	r5, sp
90015d0a:	4621      	mov	r1, r4
90015d0c:	343c      	adds	r4, #60	; 0x3c
90015d0e:	4628      	mov	r0, r5
90015d10:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
90015d14:	4798      	blx	r3
90015d16:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90015d1a:	e884 0007 	stmia.w	r4, {r0, r1, r2}
90015d1e:	b005      	add	sp, #20
90015d20:	bd30      	pop	{r4, r5, pc}

90015d22 <_ZNK8touchgfx3Box12getSolidRectEv>:
90015d22:	2300      	movs	r3, #0
90015d24:	8083      	strh	r3, [r0, #4]
90015d26:	80c3      	strh	r3, [r0, #6]
90015d28:	8003      	strh	r3, [r0, #0]
90015d2a:	8043      	strh	r3, [r0, #2]
90015d2c:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
90015d30:	2bff      	cmp	r3, #255	; 0xff
90015d32:	bf01      	itttt	eq
90015d34:	890b      	ldrheq	r3, [r1, #8]
90015d36:	8083      	strheq	r3, [r0, #4]
90015d38:	894b      	ldrheq	r3, [r1, #10]
90015d3a:	80c3      	strheq	r3, [r0, #6]
90015d3c:	4770      	bx	lr
	...

90015d40 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
90015d40:	b537      	push	{r0, r1, r2, r4, r5, lr}
90015d42:	4604      	mov	r4, r0
90015d44:	466b      	mov	r3, sp
90015d46:	6808      	ldr	r0, [r1, #0]
90015d48:	6849      	ldr	r1, [r1, #4]
90015d4a:	c303      	stmia	r3!, {r0, r1}
90015d4c:	6823      	ldr	r3, [r4, #0]
90015d4e:	4669      	mov	r1, sp
90015d50:	4620      	mov	r0, r4
90015d52:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90015d54:	4798      	blx	r3
90015d56:	4b08      	ldr	r3, [pc, #32]	; (90015d78 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
90015d58:	681b      	ldr	r3, [r3, #0]
90015d5a:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
90015d5e:	b10a      	cbz	r2, 90015d64 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
90015d60:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
90015d62:	b900      	cbnz	r0, 90015d66 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
90015d64:	6898      	ldr	r0, [r3, #8]
90015d66:	6803      	ldr	r3, [r0, #0]
90015d68:	4669      	mov	r1, sp
90015d6a:	6aa2      	ldr	r2, [r4, #40]	; 0x28
90015d6c:	6a1d      	ldr	r5, [r3, #32]
90015d6e:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
90015d72:	47a8      	blx	r5
90015d74:	b003      	add	sp, #12
90015d76:	bd30      	pop	{r4, r5, pc}
90015d78:	240236cc 	.word	0x240236cc

90015d7c <_ZN8touchgfx3BoxD1Ev>:
90015d7c:	4770      	bx	lr

90015d7e <_ZN8touchgfx3BoxD0Ev>:
90015d7e:	b510      	push	{r4, lr}
90015d80:	4604      	mov	r4, r0
90015d82:	212c      	movs	r1, #44	; 0x2c
90015d84:	f013 ff4b 	bl	90029c1e <_ZdlPvj>
90015d88:	4620      	mov	r0, r4
90015d8a:	bd10      	pop	{r4, pc}

90015d8c <_ZNK8touchgfx3Box17invalidateContentEv>:
90015d8c:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
90015d90:	b12a      	cbz	r2, 90015d9e <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
90015d92:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
90015d96:	b112      	cbz	r2, 90015d9e <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
90015d98:	6803      	ldr	r3, [r0, #0]
90015d9a:	695b      	ldr	r3, [r3, #20]
90015d9c:	4718      	bx	r3
90015d9e:	4770      	bx	lr

90015da0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
90015da0:	4b30      	ldr	r3, [pc, #192]	; (90015e64 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
90015da2:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90015da6:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
90015da8:	b08d      	sub	sp, #52	; 0x34
90015daa:	881b      	ldrh	r3, [r3, #0]
90015dac:	4604      	mov	r4, r0
90015dae:	460f      	mov	r7, r1
90015db0:	4293      	cmp	r3, r2
90015db2:	d954      	bls.n	90015e5e <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
90015db4:	4b2c      	ldr	r3, [pc, #176]	; (90015e68 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
90015db6:	6819      	ldr	r1, [r3, #0]
90015db8:	eb01 0342 	add.w	r3, r1, r2, lsl #1
90015dbc:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
90015dc0:	4a2a      	ldr	r2, [pc, #168]	; (90015e6c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
90015dc2:	6812      	ldr	r2, [r2, #0]
90015dc4:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
90015dc8:	2900      	cmp	r1, #0
90015dca:	d048      	beq.n	90015e5e <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
90015dcc:	785a      	ldrb	r2, [r3, #1]
90015dce:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
90015dd2:	f3c2 0801 	ubfx	r8, r2, #0, #2
90015dd6:	f3c2 0281 	ubfx	r2, r2, #2, #2
90015dda:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
90015dde:	4b24      	ldr	r3, [pc, #144]	; (90015e70 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
90015de0:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
90015de4:	681a      	ldr	r2, [r3, #0]
90015de6:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
90015dea:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
90015dee:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
90015df2:	6b26      	ldr	r6, [r4, #48]	; 0x30
90015df4:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
90015df8:	f892 3058 	ldrb.w	r3, [r2, #88]	; 0x58
90015dfc:	9107      	str	r1, [sp, #28]
90015dfe:	f88d 8020 	strb.w	r8, [sp, #32]
90015e02:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
90015e06:	9609      	str	r6, [sp, #36]	; 0x24
90015e08:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
90015e0c:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
90015e10:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
90015e14:	b10b      	cbz	r3, 90015e1a <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
90015e16:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
90015e18:	b905      	cbnz	r5, 90015e1c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
90015e1a:	6895      	ldr	r5, [r2, #8]
90015e1c:	ae05      	add	r6, sp, #20
90015e1e:	4621      	mov	r1, r4
90015e20:	4630      	mov	r0, r6
90015e22:	f003 fec3 	bl	90019bac <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90015e26:	4b13      	ldr	r3, [pc, #76]	; (90015e74 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
90015e28:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
90015e2a:	6818      	ldr	r0, [r3, #0]
90015e2c:	f7f0 fe6c 	bl	90006b08 <_ZNK8touchgfx5Texts7getTextEt>
90015e30:	6823      	ldr	r3, [r4, #0]
90015e32:	4680      	mov	r8, r0
90015e34:	4620      	mov	r0, r4
90015e36:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
90015e38:	4798      	blx	r3
90015e3a:	6823      	ldr	r3, [r4, #0]
90015e3c:	4681      	mov	r9, r0
90015e3e:	4620      	mov	r0, r4
90015e40:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
90015e44:	4798      	blx	r3
90015e46:	ab07      	add	r3, sp, #28
90015e48:	f8cd 8004 	str.w	r8, [sp, #4]
90015e4c:	9300      	str	r3, [sp, #0]
90015e4e:	463b      	mov	r3, r7
90015e50:	e9cd 9002 	strd	r9, r0, [sp, #8]
90015e54:	4628      	mov	r0, r5
90015e56:	e896 0006 	ldmia.w	r6, {r1, r2}
90015e5a:	f7f0 fe05 	bl	90006a68 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
90015e5e:	b00d      	add	sp, #52	; 0x34
90015e60:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90015e64:	24023728 	.word	0x24023728
90015e68:	24023724 	.word	0x24023724
90015e6c:	2402372c 	.word	0x2402372c
90015e70:	240236cc 	.word	0x240236cc
90015e74:	24023730 	.word	0x24023730

90015e78 <_ZN8touchgfx13BoxWithBorderD1Ev>:
90015e78:	4770      	bx	lr

90015e7a <_ZN8touchgfx13BoxWithBorderD0Ev>:
90015e7a:	b510      	push	{r4, lr}
90015e7c:	4604      	mov	r4, r0
90015e7e:	2134      	movs	r1, #52	; 0x34
90015e80:	f013 fecd 	bl	90029c1e <_ZdlPvj>
90015e84:	4620      	mov	r0, r4
90015e86:	bd10      	pop	{r4, pc}

90015e88 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE>:
90015e88:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90015e8c:	8e03      	ldrh	r3, [r0, #48]	; 0x30
90015e8e:	4604      	mov	r4, r0
90015e90:	460e      	mov	r6, r1
90015e92:	b08e      	sub	sp, #56	; 0x38
90015e94:	b218      	sxth	r0, r3
90015e96:	8921      	ldrh	r1, [r4, #8]
90015e98:	005b      	lsls	r3, r3, #1
90015e9a:	8962      	ldrh	r2, [r4, #10]
90015e9c:	f8ad 0000 	strh.w	r0, [sp]
90015ea0:	b29b      	uxth	r3, r3
90015ea2:	f8ad 0002 	strh.w	r0, [sp, #2]
90015ea6:	1ac9      	subs	r1, r1, r3
90015ea8:	1ad3      	subs	r3, r2, r3
90015eaa:	b209      	sxth	r1, r1
90015eac:	b21b      	sxth	r3, r3
90015eae:	2900      	cmp	r1, #0
90015eb0:	f8ad 1004 	strh.w	r1, [sp, #4]
90015eb4:	f8ad 3006 	strh.w	r3, [sp, #6]
90015eb8:	dd5e      	ble.n	90015f78 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
90015eba:	2b00      	cmp	r3, #0
90015ebc:	dd5c      	ble.n	90015f78 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
90015ebe:	6830      	ldr	r0, [r6, #0]
90015ec0:	ab02      	add	r3, sp, #8
90015ec2:	6871      	ldr	r1, [r6, #4]
90015ec4:	c303      	stmia	r3!, {r0, r1}
90015ec6:	4669      	mov	r1, sp
90015ec8:	a802      	add	r0, sp, #8
90015eca:	f7fd fe3b 	bl	90013b44 <_ZN8touchgfx4RectaNERKS0_>
90015ece:	4620      	mov	r0, r4
90015ed0:	a902      	add	r1, sp, #8
90015ed2:	f7ff ff35 	bl	90015d40 <_ZNK8touchgfx3Box4drawERKNS_4RectE>
90015ed6:	8e20      	ldrh	r0, [r4, #48]	; 0x30
90015ed8:	2800      	cmp	r0, #0
90015eda:	d05f      	beq.n	90015f9c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
90015edc:	8963      	ldrh	r3, [r4, #10]
90015ede:	b202      	sxth	r2, r0
90015ee0:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
90015ee4:	2500      	movs	r5, #0
90015ee6:	1a1f      	subs	r7, r3, r0
90015ee8:	eba3 0340 	sub.w	r3, r3, r0, lsl #1
90015eec:	f8ad 101c 	strh.w	r1, [sp, #28]
90015ef0:	b21b      	sxth	r3, r3
90015ef2:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
90015ef6:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
90015efa:	af04      	add	r7, sp, #16
90015efc:	1a09      	subs	r1, r1, r0
90015efe:	9506      	str	r5, [sp, #24]
90015f00:	f8ad 201e 	strh.w	r2, [sp, #30]
90015f04:	f8ad 5020 	strh.w	r5, [sp, #32]
90015f08:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
90015f0c:	f8ad 5028 	strh.w	r5, [sp, #40]	; 0x28
90015f10:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
90015f14:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
90015f18:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
90015f1c:	f8ad 1030 	strh.w	r1, [sp, #48]	; 0x30
90015f20:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
90015f24:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
90015f28:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
90015f2c:	ab06      	add	r3, sp, #24
90015f2e:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
90015f32:	e893 0003 	ldmia.w	r3, {r0, r1}
90015f36:	e887 0003 	stmia.w	r7, {r0, r1}
90015f3a:	4631      	mov	r1, r6
90015f3c:	4638      	mov	r0, r7
90015f3e:	f7fd fe01 	bl	90013b44 <_ZN8touchgfx4RectaNERKS0_>
90015f42:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
90015f46:	2b00      	cmp	r3, #0
90015f48:	dd12      	ble.n	90015f70 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
90015f4a:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
90015f4e:	2b00      	cmp	r3, #0
90015f50:	dd0e      	ble.n	90015f70 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
90015f52:	6823      	ldr	r3, [r4, #0]
90015f54:	4639      	mov	r1, r7
90015f56:	4620      	mov	r0, r4
90015f58:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90015f5a:	4798      	blx	r3
90015f5c:	f7fe f8d6 	bl	9001410c <_ZN8touchgfx3HAL3lcdEv>
90015f60:	6803      	ldr	r3, [r0, #0]
90015f62:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
90015f64:	4639      	mov	r1, r7
90015f66:	f8d3 8020 	ldr.w	r8, [r3, #32]
90015f6a:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
90015f6e:	47c0      	blx	r8
90015f70:	3501      	adds	r5, #1
90015f72:	2d04      	cmp	r5, #4
90015f74:	d1da      	bne.n	90015f2c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xa4>
90015f76:	e011      	b.n	90015f9c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
90015f78:	6830      	ldr	r0, [r6, #0]
90015f7a:	ab06      	add	r3, sp, #24
90015f7c:	6871      	ldr	r1, [r6, #4]
90015f7e:	c303      	stmia	r3!, {r0, r1}
90015f80:	6823      	ldr	r3, [r4, #0]
90015f82:	a906      	add	r1, sp, #24
90015f84:	4620      	mov	r0, r4
90015f86:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90015f88:	4798      	blx	r3
90015f8a:	f7fe f8bf 	bl	9001410c <_ZN8touchgfx3HAL3lcdEv>
90015f8e:	6803      	ldr	r3, [r0, #0]
90015f90:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
90015f92:	a906      	add	r1, sp, #24
90015f94:	6a1d      	ldr	r5, [r3, #32]
90015f96:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
90015f9a:	47a8      	blx	r5
90015f9c:	b00e      	add	sp, #56	; 0x38
90015f9e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

90015fa2 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
90015fa2:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
90015fa6:	4770      	bx	lr

90015fa8 <_ZNK8touchgfx6Button17invalidateContentEv>:
90015fa8:	b508      	push	{r3, lr}
90015faa:	f890 3032 	ldrb.w	r3, [r0, #50]	; 0x32
90015fae:	b10b      	cbz	r3, 90015fb4 <_ZNK8touchgfx6Button17invalidateContentEv+0xc>
90015fb0:	f7ee fab2 	bl	90004518 <_ZNK8touchgfx8Drawable17invalidateContentEv>
90015fb4:	bd08      	pop	{r3, pc}

90015fb6 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_>:
90015fb6:	4770      	bx	lr

90015fb8 <_ZN8touchgfx14ButtonWithIconD1Ev>:
90015fb8:	4770      	bx	lr

90015fba <_ZN8touchgfx14ButtonWithIconD0Ev>:
90015fba:	b510      	push	{r4, lr}
90015fbc:	4604      	mov	r4, r0
90015fbe:	213c      	movs	r1, #60	; 0x3c
90015fc0:	f013 fe2d 	bl	90029c1e <_ZdlPvj>
90015fc4:	4620      	mov	r0, r4
90015fc6:	bd10      	pop	{r4, pc}

90015fc8 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>:
90015fc8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90015fcc:	461c      	mov	r4, r3
90015fce:	4606      	mov	r6, r0
90015fd0:	9f06      	ldr	r7, [sp, #24]
90015fd2:	f013 fd74 	bl	90029abe <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
90015fd6:	8823      	ldrh	r3, [r4, #0]
90015fd8:	f04f 0802 	mov.w	r8, #2
90015fdc:	f9b6 5008 	ldrsh.w	r5, [r6, #8]
90015fe0:	4638      	mov	r0, r7
90015fe2:	86b3      	strh	r3, [r6, #52]	; 0x34
90015fe4:	883b      	ldrh	r3, [r7, #0]
90015fe6:	fb95 f5f8 	sdiv	r5, r5, r8
90015fea:	86f3      	strh	r3, [r6, #54]	; 0x36
90015fec:	b2ad      	uxth	r5, r5
90015fee:	f005 fe09 	bl	9001bc04 <_ZNK8touchgfx6Bitmap8getWidthEv>
90015ff2:	f9b6 400a 	ldrsh.w	r4, [r6, #10]
90015ff6:	fb90 f0f8 	sdiv	r0, r0, r8
90015ffa:	1a2d      	subs	r5, r5, r0
90015ffc:	4638      	mov	r0, r7
90015ffe:	fb94 f4f8 	sdiv	r4, r4, r8
90016002:	8735      	strh	r5, [r6, #56]	; 0x38
90016004:	b2a4      	uxth	r4, r4
90016006:	f005 fe31 	bl	9001bc6c <_ZNK8touchgfx6Bitmap9getHeightEv>
9001600a:	fb90 f0f8 	sdiv	r0, r0, r8
9001600e:	1a24      	subs	r4, r4, r0
90016010:	8774      	strh	r4, [r6, #58]	; 0x3a
90016012:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

90016016 <_ZN8touchgfx14AbstractButton13executeActionEv>:
90016016:	b510      	push	{r4, lr}
90016018:	4604      	mov	r4, r0
9001601a:	6a80      	ldr	r0, [r0, #40]	; 0x28
9001601c:	b150      	cbz	r0, 90016034 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
9001601e:	6803      	ldr	r3, [r0, #0]
90016020:	68db      	ldr	r3, [r3, #12]
90016022:	4798      	blx	r3
90016024:	b130      	cbz	r0, 90016034 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
90016026:	6aa0      	ldr	r0, [r4, #40]	; 0x28
90016028:	4621      	mov	r1, r4
9001602a:	6803      	ldr	r3, [r0, #0]
9001602c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90016030:	689b      	ldr	r3, [r3, #8]
90016032:	4718      	bx	r3
90016034:	bd10      	pop	{r4, pc}
	...

90016038 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE>:
90016038:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001603c:	4604      	mov	r4, r0
9001603e:	b08c      	sub	sp, #48	; 0x30
90016040:	460d      	mov	r5, r1
90016042:	f013 fd6f 	bl	90029b24 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
90016046:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
9001604a:	2b00      	cmp	r3, #0
9001604c:	d05d      	beq.n	9001610a <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd2>
9001604e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
90016050:	a805      	add	r0, sp, #20
90016052:	f8ad 3014 	strh.w	r3, [sp, #20]
90016056:	f9b4 8038 	ldrsh.w	r8, [r4, #56]	; 0x38
9001605a:	f9b4 703a 	ldrsh.w	r7, [r4, #58]	; 0x3a
9001605e:	f005 fdd1 	bl	9001bc04 <_ZNK8touchgfx6Bitmap8getWidthEv>
90016062:	4606      	mov	r6, r0
90016064:	a805      	add	r0, sp, #20
90016066:	f005 fe01 	bl	9001bc6c <_ZNK8touchgfx6Bitmap9getHeightEv>
9001606a:	6869      	ldr	r1, [r5, #4]
9001606c:	f8ad 001e 	strh.w	r0, [sp, #30]
90016070:	ab08      	add	r3, sp, #32
90016072:	6828      	ldr	r0, [r5, #0]
90016074:	ad08      	add	r5, sp, #32
90016076:	f8ad 8018 	strh.w	r8, [sp, #24]
9001607a:	f8ad 701a 	strh.w	r7, [sp, #26]
9001607e:	f8ad 601c 	strh.w	r6, [sp, #28]
90016082:	c303      	stmia	r3!, {r0, r1}
90016084:	a906      	add	r1, sp, #24
90016086:	4628      	mov	r0, r5
90016088:	f7fd fd5c 	bl	90013b44 <_ZN8touchgfx4RectaNERKS0_>
9001608c:	f8bd 2014 	ldrh.w	r2, [sp, #20]
90016090:	f64f 73ff 	movw	r3, #65535	; 0xffff
90016094:	429a      	cmp	r2, r3
90016096:	d035      	beq.n	90016104 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
90016098:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
9001609c:	2b00      	cmp	r3, #0
9001609e:	dd31      	ble.n	90016104 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
900160a0:	f9bd 3026 	ldrsh.w	r3, [sp, #38]	; 0x26
900160a4:	2b00      	cmp	r3, #0
900160a6:	dd2d      	ble.n	90016104 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
900160a8:	2300      	movs	r3, #0
900160aa:	a90a      	add	r1, sp, #40	; 0x28
900160ac:	4620      	mov	r0, r4
900160ae:	e9cd 330a 	strd	r3, r3, [sp, #40]	; 0x28
900160b2:	6823      	ldr	r3, [r4, #0]
900160b4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900160b6:	4798      	blx	r3
900160b8:	f8bd 3020 	ldrh.w	r3, [sp, #32]
900160bc:	8f22      	ldrh	r2, [r4, #56]	; 0x38
900160be:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
900160c2:	1a9b      	subs	r3, r3, r2
900160c4:	f8ad 3020 	strh.w	r3, [sp, #32]
900160c8:	8f63      	ldrh	r3, [r4, #58]	; 0x3a
900160ca:	1ac9      	subs	r1, r1, r3
900160cc:	f8ad 1022 	strh.w	r1, [sp, #34]	; 0x22
900160d0:	490f      	ldr	r1, [pc, #60]	; (90016110 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd8>)
900160d2:	6809      	ldr	r1, [r1, #0]
900160d4:	f891 0058 	ldrb.w	r0, [r1, #88]	; 0x58
900160d8:	b108      	cbz	r0, 900160de <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa6>
900160da:	6cc8      	ldr	r0, [r1, #76]	; 0x4c
900160dc:	b900      	cbnz	r0, 900160e0 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa8>
900160de:	6888      	ldr	r0, [r1, #8]
900160e0:	f8bd 102a 	ldrh.w	r1, [sp, #42]	; 0x2a
900160e4:	2601      	movs	r6, #1
900160e6:	440b      	add	r3, r1
900160e8:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
900160ec:	440a      	add	r2, r1
900160ee:	6801      	ldr	r1, [r0, #0]
900160f0:	9602      	str	r6, [sp, #8]
900160f2:	b21b      	sxth	r3, r3
900160f4:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
900160f8:	b212      	sxth	r2, r2
900160fa:	e9cd 5400 	strd	r5, r4, [sp]
900160fe:	688c      	ldr	r4, [r1, #8]
90016100:	a905      	add	r1, sp, #20
90016102:	47a0      	blx	r4
90016104:	b00c      	add	sp, #48	; 0x30
90016106:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9001610a:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
9001610c:	e7a0      	b.n	90016050 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x18>
9001610e:	bf00      	nop
90016110:	240236cc 	.word	0x240236cc

90016114 <_ZN8touchgfx14ButtonWithIconC1Ev>:
90016114:	2101      	movs	r1, #1
90016116:	2200      	movs	r2, #0
90016118:	b510      	push	{r4, lr}
9001611a:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
9001611e:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
90016122:	f64f 71ff 	movw	r1, #65535	; 0xffff
90016126:	4c0d      	ldr	r4, [pc, #52]	; (9001615c <_ZN8touchgfx14ButtonWithIconC1Ev+0x48>)
90016128:	8082      	strh	r2, [r0, #4]
9001612a:	80c2      	strh	r2, [r0, #6]
9001612c:	8102      	strh	r2, [r0, #8]
9001612e:	8142      	strh	r2, [r0, #10]
90016130:	8182      	strh	r2, [r0, #12]
90016132:	81c2      	strh	r2, [r0, #14]
90016134:	8202      	strh	r2, [r0, #16]
90016136:	8242      	strh	r2, [r0, #18]
90016138:	61c2      	str	r2, [r0, #28]
9001613a:	8402      	strh	r2, [r0, #32]
9001613c:	8442      	strh	r2, [r0, #34]	; 0x22
9001613e:	6282      	str	r2, [r0, #40]	; 0x28
90016140:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
90016144:	85c1      	strh	r1, [r0, #46]	; 0x2e
90016146:	8601      	strh	r1, [r0, #48]	; 0x30
90016148:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
9001614c:	6004      	str	r4, [r0, #0]
9001614e:	8681      	strh	r1, [r0, #52]	; 0x34
90016150:	86c1      	strh	r1, [r0, #54]	; 0x36
90016152:	8702      	strh	r2, [r0, #56]	; 0x38
90016154:	8742      	strh	r2, [r0, #58]	; 0x3a
90016156:	e9c0 2205 	strd	r2, r2, [r0, #20]
9001615a:	bd10      	pop	{r4, pc}
9001615c:	9002e534 	.word	0x9002e534

90016160 <_ZN8touchgfx5ImageD1Ev>:
90016160:	4770      	bx	lr

90016162 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
90016162:	b570      	push	{r4, r5, r6, lr}
90016164:	880b      	ldrh	r3, [r1, #0]
90016166:	460d      	mov	r5, r1
90016168:	4604      	mov	r4, r0
9001616a:	84c3      	strh	r3, [r0, #38]	; 0x26
9001616c:	4608      	mov	r0, r1
9001616e:	f005 fd49 	bl	9001bc04 <_ZNK8touchgfx6Bitmap8getWidthEv>
90016172:	4606      	mov	r6, r0
90016174:	4628      	mov	r0, r5
90016176:	f005 fd79 	bl	9001bc6c <_ZNK8touchgfx6Bitmap9getHeightEv>
9001617a:	6823      	ldr	r3, [r4, #0]
9001617c:	4605      	mov	r5, r0
9001617e:	4631      	mov	r1, r6
90016180:	4620      	mov	r0, r4
90016182:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90016184:	4798      	blx	r3
90016186:	6823      	ldr	r3, [r4, #0]
90016188:	4629      	mov	r1, r5
9001618a:	4620      	mov	r0, r4
9001618c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
9001618e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90016192:	4718      	bx	r3

90016194 <_ZN8touchgfx5ImageD0Ev>:
90016194:	b510      	push	{r4, lr}
90016196:	4604      	mov	r4, r0
90016198:	212c      	movs	r1, #44	; 0x2c
9001619a:	f013 fd40 	bl	90029c1e <_ZdlPvj>
9001619e:	4620      	mov	r0, r4
900161a0:	bd10      	pop	{r4, pc}

900161a2 <_ZNK8touchgfx5Image12getSolidRectEv>:
900161a2:	b510      	push	{r4, lr}
900161a4:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
900161a8:	4604      	mov	r4, r0
900161aa:	2bff      	cmp	r3, #255	; 0xff
900161ac:	d006      	beq.n	900161bc <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
900161ae:	2300      	movs	r3, #0
900161b0:	8003      	strh	r3, [r0, #0]
900161b2:	8043      	strh	r3, [r0, #2]
900161b4:	8083      	strh	r3, [r0, #4]
900161b6:	80c3      	strh	r3, [r0, #6]
900161b8:	4620      	mov	r0, r4
900161ba:	bd10      	pop	{r4, pc}
900161bc:	3126      	adds	r1, #38	; 0x26
900161be:	f005 fd89 	bl	9001bcd4 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
900161c2:	e7f9      	b.n	900161b8 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

900161c4 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
900161c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900161c8:	4604      	mov	r4, r0
900161ca:	b088      	sub	sp, #32
900161cc:	2500      	movs	r5, #0
900161ce:	460f      	mov	r7, r1
900161d0:	f854 3b26 	ldr.w	r3, [r4], #38
900161d4:	a904      	add	r1, sp, #16
900161d6:	4606      	mov	r6, r0
900161d8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900161da:	e9cd 5504 	strd	r5, r5, [sp, #16]
900161de:	4798      	blx	r3
900161e0:	4620      	mov	r0, r4
900161e2:	f005 fd0f 	bl	9001bc04 <_ZNK8touchgfx6Bitmap8getWidthEv>
900161e6:	4680      	mov	r8, r0
900161e8:	4620      	mov	r0, r4
900161ea:	f005 fd3f 	bl	9001bc6c <_ZNK8touchgfx6Bitmap9getHeightEv>
900161ee:	9506      	str	r5, [sp, #24]
900161f0:	ad06      	add	r5, sp, #24
900161f2:	f8ad 001e 	strh.w	r0, [sp, #30]
900161f6:	4639      	mov	r1, r7
900161f8:	f8ad 801c 	strh.w	r8, [sp, #28]
900161fc:	4628      	mov	r0, r5
900161fe:	f7fd fca1 	bl	90013b44 <_ZN8touchgfx4RectaNERKS0_>
90016202:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
90016206:	2b00      	cmp	r3, #0
90016208:	dd19      	ble.n	9001623e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
9001620a:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
9001620e:	2b00      	cmp	r3, #0
90016210:	dd15      	ble.n	9001623e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
90016212:	4b0c      	ldr	r3, [pc, #48]	; (90016244 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
90016214:	681b      	ldr	r3, [r3, #0]
90016216:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
9001621a:	b10a      	cbz	r2, 90016220 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
9001621c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
9001621e:	b900      	cbnz	r0, 90016222 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
90016220:	6898      	ldr	r0, [r3, #8]
90016222:	2701      	movs	r7, #1
90016224:	6801      	ldr	r1, [r0, #0]
90016226:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9001622a:	9702      	str	r7, [sp, #8]
9001622c:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
90016230:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
90016234:	e9cd 5600 	strd	r5, r6, [sp]
90016238:	688d      	ldr	r5, [r1, #8]
9001623a:	4621      	mov	r1, r4
9001623c:	47a8      	blx	r5
9001623e:	b008      	add	sp, #32
90016240:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90016244:	240236cc 	.word	0x240236cc

90016248 <_ZN8touchgfx7OutlineD1Ev>:
90016248:	4770      	bx	lr

9001624a <_ZN8touchgfx7OutlineD0Ev>:
9001624a:	b510      	push	{r4, lr}
9001624c:	4604      	mov	r4, r0
9001624e:	2130      	movs	r1, #48	; 0x30
90016250:	f013 fce5 	bl	90029c1e <_ZdlPvj>
90016254:	4620      	mov	r0, r4
90016256:	bd10      	pop	{r4, pc}

90016258 <_ZN8touchgfx7Outline5resetEv>:
90016258:	b510      	push	{r4, lr}
9001625a:	4604      	mov	r4, r0
9001625c:	f000 fe86 	bl	90016f6c <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
90016260:	60e0      	str	r0, [r4, #12]
90016262:	f000 fe89 	bl	90016f78 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
90016266:	68e3      	ldr	r3, [r4, #12]
90016268:	08c0      	lsrs	r0, r0, #3
9001626a:	2200      	movs	r2, #0
9001626c:	f647 71ff 	movw	r1, #32767	; 0x7fff
90016270:	6123      	str	r3, [r4, #16]
90016272:	3801      	subs	r0, #1
90016274:	60a2      	str	r2, [r4, #8]
90016276:	6060      	str	r0, [r4, #4]
90016278:	8019      	strh	r1, [r3, #0]
9001627a:	8059      	strh	r1, [r3, #2]
9001627c:	809a      	strh	r2, [r3, #4]
9001627e:	80da      	strh	r2, [r3, #6]
90016280:	6a63      	ldr	r3, [r4, #36]	; 0x24
90016282:	f023 0301 	bic.w	r3, r3, #1
90016286:	f043 0302 	orr.w	r3, r3, #2
9001628a:	6263      	str	r3, [r4, #36]	; 0x24
9001628c:	bd10      	pop	{r4, pc}
	...

90016290 <_ZN8touchgfx7OutlineC1Ev>:
90016290:	4b0a      	ldr	r3, [pc, #40]	; (900162bc <_ZN8touchgfx7OutlineC1Ev+0x2c>)
90016292:	b510      	push	{r4, lr}
90016294:	6003      	str	r3, [r0, #0]
90016296:	2300      	movs	r3, #0
90016298:	4604      	mov	r4, r0
9001629a:	6243      	str	r3, [r0, #36]	; 0x24
9001629c:	e9c0 3301 	strd	r3, r3, [r0, #4]
900162a0:	e9c0 3303 	strd	r3, r3, [r0, #12]
900162a4:	e9c0 3305 	strd	r3, r3, [r0, #20]
900162a8:	e9c0 3307 	strd	r3, r3, [r0, #28]
900162ac:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
900162b0:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
900162b4:	f7ff ffd0 	bl	90016258 <_ZN8touchgfx7Outline5resetEv>
900162b8:	4620      	mov	r0, r4
900162ba:	bd10      	pop	{r4, pc}
900162bc:	9002e618 	.word	0x9002e618

900162c0 <_ZN8touchgfx7Outline10renderLineEiiii>:
900162c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900162c4:	b093      	sub	sp, #76	; 0x4c
900162c6:	1156      	asrs	r6, r2, #5
900162c8:	9c1c      	ldr	r4, [sp, #112]	; 0x70
900162ca:	9305      	str	r3, [sp, #20]
900162cc:	1153      	asrs	r3, r2, #5
900162ce:	f004 051f 	and.w	r5, r4, #31
900162d2:	9303      	str	r3, [sp, #12]
900162d4:	1163      	asrs	r3, r4, #5
900162d6:	9504      	str	r5, [sp, #16]
900162d8:	1165      	asrs	r5, r4, #5
900162da:	9306      	str	r3, [sp, #24]
900162dc:	f002 031f 	and.w	r3, r2, #31
900162e0:	42ae      	cmp	r6, r5
900162e2:	f040 80f4 	bne.w	900164ce <_ZN8touchgfx7Outline10renderLineEiiii+0x20e>
900162e6:	9c04      	ldr	r4, [sp, #16]
900162e8:	9a05      	ldr	r2, [sp, #20]
900162ea:	42a3      	cmp	r3, r4
900162ec:	ea4f 1e62 	mov.w	lr, r2, asr #5
900162f0:	6902      	ldr	r2, [r0, #16]
900162f2:	d125      	bne.n	90016340 <_ZN8touchgfx7Outline10renderLineEiiii+0x80>
900162f4:	f9b2 3000 	ldrsh.w	r3, [r2]
900162f8:	459e      	cmp	lr, r3
900162fa:	d103      	bne.n	90016304 <_ZN8touchgfx7Outline10renderLineEiiii+0x44>
900162fc:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
90016300:	429e      	cmp	r6, r3
90016302:	d035      	beq.n	90016370 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90016304:	88d1      	ldrh	r1, [r2, #6]
90016306:	8893      	ldrh	r3, [r2, #4]
90016308:	430b      	orrs	r3, r1
9001630a:	d010      	beq.n	9001632e <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
9001630c:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
90016310:	2b00      	cmp	r3, #0
90016312:	db0c      	blt.n	9001632e <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
90016314:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
90016316:	428b      	cmp	r3, r1
90016318:	da09      	bge.n	9001632e <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
9001631a:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
9001631e:	428b      	cmp	r3, r1
90016320:	f103 0301 	add.w	r3, r3, #1
90016324:	bf38      	it	cc
90016326:	3208      	addcc	r2, #8
90016328:	6083      	str	r3, [r0, #8]
9001632a:	bf38      	it	cc
9001632c:	6102      	strcc	r2, [r0, #16]
9001632e:	6903      	ldr	r3, [r0, #16]
90016330:	9a03      	ldr	r2, [sp, #12]
90016332:	f8a3 e000 	strh.w	lr, [r3]
90016336:	805a      	strh	r2, [r3, #2]
90016338:	2200      	movs	r2, #0
9001633a:	809a      	strh	r2, [r3, #4]
9001633c:	80da      	strh	r2, [r3, #6]
9001633e:	e017      	b.n	90016370 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90016340:	9c05      	ldr	r4, [sp, #20]
90016342:	114e      	asrs	r6, r1, #5
90016344:	f001 0c1f 	and.w	ip, r1, #31
90016348:	f8b2 8004 	ldrh.w	r8, [r2, #4]
9001634c:	f004 041f 	and.w	r4, r4, #31
90016350:	4576      	cmp	r6, lr
90016352:	f8b2 a006 	ldrh.w	sl, [r2, #6]
90016356:	9402      	str	r4, [sp, #8]
90016358:	9c04      	ldr	r4, [sp, #16]
9001635a:	eba4 0403 	sub.w	r4, r4, r3
9001635e:	d10a      	bne.n	90016376 <_ZN8touchgfx7Outline10renderLineEiiii+0xb6>
90016360:	9b02      	ldr	r3, [sp, #8]
90016362:	44a0      	add	r8, r4
90016364:	449c      	add	ip, r3
90016366:	f8a2 8004 	strh.w	r8, [r2, #4]
9001636a:	fb04 a40c 	mla	r4, r4, ip, sl
9001636e:	80d4      	strh	r4, [r2, #6]
90016370:	b013      	add	sp, #76	; 0x4c
90016372:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90016376:	9d05      	ldr	r5, [sp, #20]
90016378:	1a69      	subs	r1, r5, r1
9001637a:	bf51      	iteee	pl
9001637c:	f1cc 0520 	rsbpl	r5, ip, #32
90016380:	fb04 f40c 	mulmi.w	r4, r4, ip
90016384:	4249      	negmi	r1, r1
90016386:	2500      	movmi	r5, #0
90016388:	bf5d      	ittte	pl
9001638a:	436c      	mulpl	r4, r5
9001638c:	2520      	movpl	r5, #32
9001638e:	f04f 0901 	movpl.w	r9, #1
90016392:	f04f 39ff 	movmi.w	r9, #4294967295
90016396:	9501      	str	r5, [sp, #4]
90016398:	9f01      	ldr	r7, [sp, #4]
9001639a:	444e      	add	r6, r9
9001639c:	fb94 f5f1 	sdiv	r5, r4, r1
900163a0:	fb01 4415 	mls	r4, r1, r5, r4
900163a4:	44bc      	add	ip, r7
900163a6:	2c00      	cmp	r4, #0
900163a8:	bfbc      	itt	lt
900163aa:	f105 35ff 	addlt.w	r5, r5, #4294967295
900163ae:	1864      	addlt	r4, r4, r1
900163b0:	44a8      	add	r8, r5
900163b2:	fb05 ac0c 	mla	ip, r5, ip, sl
900163b6:	f8a2 8004 	strh.w	r8, [r2, #4]
900163ba:	f8a2 c006 	strh.w	ip, [r2, #6]
900163be:	f8d0 c010 	ldr.w	ip, [r0, #16]
900163c2:	f8bc 8006 	ldrh.w	r8, [ip, #6]
900163c6:	f8bc 2004 	ldrh.w	r2, [ip, #4]
900163ca:	ea58 0202 	orrs.w	r2, r8, r2
900163ce:	d011      	beq.n	900163f4 <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
900163d0:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
900163d4:	f1b8 0f00 	cmp.w	r8, #0
900163d8:	db0c      	blt.n	900163f4 <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
900163da:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
900163dc:	4590      	cmp	r8, r2
900163de:	da09      	bge.n	900163f4 <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
900163e0:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
900163e4:	4590      	cmp	r8, r2
900163e6:	bf3c      	itt	cc
900163e8:	f10c 0208 	addcc.w	r2, ip, #8
900163ec:	6102      	strcc	r2, [r0, #16]
900163ee:	f108 0201 	add.w	r2, r8, #1
900163f2:	6082      	str	r2, [r0, #8]
900163f4:	f8d0 c010 	ldr.w	ip, [r0, #16]
900163f8:	2700      	movs	r7, #0
900163fa:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
900163fe:	45b6      	cmp	lr, r6
90016400:	f8ac 6000 	strh.w	r6, [ip]
90016404:	442b      	add	r3, r5
90016406:	f8ac 2002 	strh.w	r2, [ip, #2]
9001640a:	f8ac 7004 	strh.w	r7, [ip, #4]
9001640e:	f8ac 7006 	strh.w	r7, [ip, #6]
90016412:	d04b      	beq.n	900164ac <_ZN8touchgfx7Outline10renderLineEiiii+0x1ec>
90016414:	9f04      	ldr	r7, [sp, #16]
90016416:	1a64      	subs	r4, r4, r1
90016418:	f04f 0a00 	mov.w	sl, #0
9001641c:	1aff      	subs	r7, r7, r3
9001641e:	443d      	add	r5, r7
90016420:	016d      	lsls	r5, r5, #5
90016422:	fb95 f8f1 	sdiv	r8, r5, r1
90016426:	fb01 5518 	mls	r5, r1, r8, r5
9001642a:	2d00      	cmp	r5, #0
9001642c:	bfbc      	itt	lt
9001642e:	f108 38ff 	addlt.w	r8, r8, #4294967295
90016432:	186d      	addlt	r5, r5, r1
90016434:	f108 0701 	add.w	r7, r8, #1
90016438:	9703      	str	r7, [sp, #12]
9001643a:	f8d0 c010 	ldr.w	ip, [r0, #16]
9001643e:	1964      	adds	r4, r4, r5
90016440:	444e      	add	r6, r9
90016442:	bf54      	ite	pl
90016444:	9f03      	ldrpl	r7, [sp, #12]
90016446:	4647      	movmi	r7, r8
90016448:	f8bc b004 	ldrh.w	fp, [ip, #4]
9001644c:	bf58      	it	pl
9001644e:	1a64      	subpl	r4, r4, r1
90016450:	443b      	add	r3, r7
90016452:	44bb      	add	fp, r7
90016454:	f8ac b004 	strh.w	fp, [ip, #4]
90016458:	f8bc b006 	ldrh.w	fp, [ip, #6]
9001645c:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
90016460:	f8ac b006 	strh.w	fp, [ip, #6]
90016464:	f8d0 c010 	ldr.w	ip, [r0, #16]
90016468:	f8bc b006 	ldrh.w	fp, [ip, #6]
9001646c:	f8bc 7004 	ldrh.w	r7, [ip, #4]
90016470:	ea5b 0707 	orrs.w	r7, fp, r7
90016474:	d011      	beq.n	9001649a <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
90016476:	f9bc b002 	ldrsh.w	fp, [ip, #2]
9001647a:	f1bb 0f00 	cmp.w	fp, #0
9001647e:	db0c      	blt.n	9001649a <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
90016480:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
90016482:	45bb      	cmp	fp, r7
90016484:	da09      	bge.n	9001649a <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
90016486:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
9001648a:	45bb      	cmp	fp, r7
9001648c:	bf3c      	itt	cc
9001648e:	f10c 0708 	addcc.w	r7, ip, #8
90016492:	6107      	strcc	r7, [r0, #16]
90016494:	f10b 0701 	add.w	r7, fp, #1
90016498:	6087      	str	r7, [r0, #8]
9001649a:	6907      	ldr	r7, [r0, #16]
9001649c:	45b6      	cmp	lr, r6
9001649e:	803e      	strh	r6, [r7, #0]
900164a0:	807a      	strh	r2, [r7, #2]
900164a2:	f8a7 a004 	strh.w	sl, [r7, #4]
900164a6:	f8a7 a006 	strh.w	sl, [r7, #6]
900164aa:	d1c6      	bne.n	9001643a <_ZN8touchgfx7Outline10renderLineEiiii+0x17a>
900164ac:	9a04      	ldr	r2, [sp, #16]
900164ae:	1ad3      	subs	r3, r2, r3
900164b0:	6902      	ldr	r2, [r0, #16]
900164b2:	8891      	ldrh	r1, [r2, #4]
900164b4:	88d6      	ldrh	r6, [r2, #6]
900164b6:	4419      	add	r1, r3
900164b8:	8091      	strh	r1, [r2, #4]
900164ba:	9902      	ldr	r1, [sp, #8]
900164bc:	f101 0c20 	add.w	ip, r1, #32
900164c0:	9901      	ldr	r1, [sp, #4]
900164c2:	ebac 0c01 	sub.w	ip, ip, r1
900164c6:	fb03 630c 	mla	r3, r3, ip, r6
900164ca:	80d3      	strh	r3, [r2, #6]
900164cc:	e750      	b.n	90016370 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
900164ce:	9d05      	ldr	r5, [sp, #20]
900164d0:	1aa2      	subs	r2, r4, r2
900164d2:	eba5 0501 	sub.w	r5, r5, r1
900164d6:	9202      	str	r2, [sp, #8]
900164d8:	9508      	str	r5, [sp, #32]
900164da:	f140 8128 	bpl.w	9001672e <_ZN8touchgfx7Outline10renderLineEiiii+0x46e>
900164de:	9a03      	ldr	r2, [sp, #12]
900164e0:	2a00      	cmp	r2, #0
900164e2:	f6ff af45 	blt.w	90016370 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
900164e6:	9a02      	ldr	r2, [sp, #8]
900164e8:	f04f 34ff 	mov.w	r4, #4294967295
900164ec:	4252      	negs	r2, r2
900164ee:	940b      	str	r4, [sp, #44]	; 0x2c
900164f0:	2400      	movs	r4, #0
900164f2:	9202      	str	r2, [sp, #8]
900164f4:	9a06      	ldr	r2, [sp, #24]
900164f6:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
900164fa:	9206      	str	r2, [sp, #24]
900164fc:	462a      	mov	r2, r5
900164fe:	435a      	muls	r2, r3
90016500:	9401      	str	r4, [sp, #4]
90016502:	9c02      	ldr	r4, [sp, #8]
90016504:	9d02      	ldr	r5, [sp, #8]
90016506:	fb92 f4f4 	sdiv	r4, r2, r4
9001650a:	fb05 2214 	mls	r2, r5, r4, r2
9001650e:	2a00      	cmp	r2, #0
90016510:	9207      	str	r2, [sp, #28]
90016512:	bfbc      	itt	lt
90016514:	1952      	addlt	r2, r2, r5
90016516:	f104 34ff 	addlt.w	r4, r4, #4294967295
9001651a:	6905      	ldr	r5, [r0, #16]
9001651c:	bfb8      	it	lt
9001651e:	9207      	strlt	r2, [sp, #28]
90016520:	eb04 0901 	add.w	r9, r4, r1
90016524:	9a01      	ldr	r2, [sp, #4]
90016526:	ea4f 1669 	mov.w	r6, r9, asr #5
9001652a:	429a      	cmp	r2, r3
9001652c:	f040 8111 	bne.w	90016752 <_ZN8touchgfx7Outline10renderLineEiiii+0x492>
90016530:	f9b5 3000 	ldrsh.w	r3, [r5]
90016534:	429e      	cmp	r6, r3
90016536:	d104      	bne.n	90016542 <_ZN8touchgfx7Outline10renderLineEiiii+0x282>
90016538:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
9001653c:	9a03      	ldr	r2, [sp, #12]
9001653e:	429a      	cmp	r2, r3
90016540:	d01b      	beq.n	9001657a <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
90016542:	88ea      	ldrh	r2, [r5, #6]
90016544:	88ab      	ldrh	r3, [r5, #4]
90016546:	4313      	orrs	r3, r2
90016548:	d010      	beq.n	9001656c <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
9001654a:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
9001654e:	2a00      	cmp	r2, #0
90016550:	db0c      	blt.n	9001656c <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
90016552:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
90016554:	429a      	cmp	r2, r3
90016556:	da09      	bge.n	9001656c <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
90016558:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
9001655c:	429a      	cmp	r2, r3
9001655e:	f102 0201 	add.w	r2, r2, #1
90016562:	bf38      	it	cc
90016564:	3508      	addcc	r5, #8
90016566:	6082      	str	r2, [r0, #8]
90016568:	bf38      	it	cc
9001656a:	6105      	strcc	r5, [r0, #16]
9001656c:	6903      	ldr	r3, [r0, #16]
9001656e:	9a03      	ldr	r2, [sp, #12]
90016570:	801e      	strh	r6, [r3, #0]
90016572:	805a      	strh	r2, [r3, #2]
90016574:	2200      	movs	r2, #0
90016576:	809a      	strh	r2, [r3, #4]
90016578:	80da      	strh	r2, [r3, #6]
9001657a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001657c:	9a03      	ldr	r2, [sp, #12]
9001657e:	6901      	ldr	r1, [r0, #16]
90016580:	441a      	add	r2, r3
90016582:	f9b1 3000 	ldrsh.w	r3, [r1]
90016586:	42b3      	cmp	r3, r6
90016588:	d103      	bne.n	90016592 <_ZN8touchgfx7Outline10renderLineEiiii+0x2d2>
9001658a:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
9001658e:	429a      	cmp	r2, r3
90016590:	d01a      	beq.n	900165c8 <_ZN8touchgfx7Outline10renderLineEiiii+0x308>
90016592:	88cc      	ldrh	r4, [r1, #6]
90016594:	888b      	ldrh	r3, [r1, #4]
90016596:	4323      	orrs	r3, r4
90016598:	d010      	beq.n	900165bc <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
9001659a:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
9001659e:	2c00      	cmp	r4, #0
900165a0:	db0c      	blt.n	900165bc <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
900165a2:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
900165a4:	429c      	cmp	r4, r3
900165a6:	da09      	bge.n	900165bc <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
900165a8:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
900165ac:	429c      	cmp	r4, r3
900165ae:	f104 0401 	add.w	r4, r4, #1
900165b2:	bf38      	it	cc
900165b4:	3108      	addcc	r1, #8
900165b6:	6084      	str	r4, [r0, #8]
900165b8:	bf38      	it	cc
900165ba:	6101      	strcc	r1, [r0, #16]
900165bc:	6903      	ldr	r3, [r0, #16]
900165be:	2100      	movs	r1, #0
900165c0:	801e      	strh	r6, [r3, #0]
900165c2:	805a      	strh	r2, [r3, #2]
900165c4:	8099      	strh	r1, [r3, #4]
900165c6:	80d9      	strh	r1, [r3, #6]
900165c8:	9b06      	ldr	r3, [sp, #24]
900165ca:	4293      	cmp	r3, r2
900165cc:	f000 8082 	beq.w	900166d4 <_ZN8touchgfx7Outline10renderLineEiiii+0x414>
900165d0:	9b08      	ldr	r3, [sp, #32]
900165d2:	9902      	ldr	r1, [sp, #8]
900165d4:	015b      	lsls	r3, r3, #5
900165d6:	9c02      	ldr	r4, [sp, #8]
900165d8:	fb93 f1f1 	sdiv	r1, r3, r1
900165dc:	fb04 3311 	mls	r3, r4, r1, r3
900165e0:	9103      	str	r1, [sp, #12]
900165e2:	2b00      	cmp	r3, #0
900165e4:	9308      	str	r3, [sp, #32]
900165e6:	da04      	bge.n	900165f2 <_ZN8touchgfx7Outline10renderLineEiiii+0x332>
900165e8:	1e4b      	subs	r3, r1, #1
900165ea:	9303      	str	r3, [sp, #12]
900165ec:	9b08      	ldr	r3, [sp, #32]
900165ee:	4423      	add	r3, r4
900165f0:	9308      	str	r3, [sp, #32]
900165f2:	9b07      	ldr	r3, [sp, #28]
900165f4:	464f      	mov	r7, r9
900165f6:	9902      	ldr	r1, [sp, #8]
900165f8:	2600      	movs	r6, #0
900165fa:	1a5b      	subs	r3, r3, r1
900165fc:	9307      	str	r3, [sp, #28]
900165fe:	9b01      	ldr	r3, [sp, #4]
90016600:	f1c3 0320 	rsb	r3, r3, #32
90016604:	930e      	str	r3, [sp, #56]	; 0x38
90016606:	990e      	ldr	r1, [sp, #56]	; 0x38
90016608:	9b01      	ldr	r3, [sp, #4]
9001660a:	1a5b      	subs	r3, r3, r1
9001660c:	930a      	str	r3, [sp, #40]	; 0x28
9001660e:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
90016612:	185b      	adds	r3, r3, r1
90016614:	bf58      	it	pl
90016616:	9902      	ldrpl	r1, [sp, #8]
90016618:	9307      	str	r3, [sp, #28]
9001661a:	bf57      	itett	pl
9001661c:	1a5b      	subpl	r3, r3, r1
9001661e:	9903      	ldrmi	r1, [sp, #12]
90016620:	9307      	strpl	r3, [sp, #28]
90016622:	9b03      	ldrpl	r3, [sp, #12]
90016624:	bf58      	it	pl
90016626:	1c59      	addpl	r1, r3, #1
90016628:	2a00      	cmp	r2, #0
9001662a:	4489      	add	r9, r1
9001662c:	ea4f 1a69 	mov.w	sl, r9, asr #5
90016630:	db2e      	blt.n	90016690 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90016632:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
90016634:	4293      	cmp	r3, r2
90016636:	dd2b      	ble.n	90016690 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90016638:	9c01      	ldr	r4, [sp, #4]
9001663a:	6905      	ldr	r5, [r0, #16]
9001663c:	46a0      	mov	r8, r4
9001663e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
90016640:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
90016644:	45a0      	cmp	r8, r4
90016646:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
9001664a:	f040 814c 	bne.w	900168e6 <_ZN8touchgfx7Outline10renderLineEiiii+0x626>
9001664e:	f9b5 1000 	ldrsh.w	r1, [r5]
90016652:	4551      	cmp	r1, sl
90016654:	d103      	bne.n	9001665e <_ZN8touchgfx7Outline10renderLineEiiii+0x39e>
90016656:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
9001665a:	4291      	cmp	r1, r2
9001665c:	d018      	beq.n	90016690 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
9001665e:	ea5c 010e 	orrs.w	r1, ip, lr
90016662:	d00f      	beq.n	90016684 <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
90016664:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
90016668:	2900      	cmp	r1, #0
9001666a:	db0b      	blt.n	90016684 <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
9001666c:	428b      	cmp	r3, r1
9001666e:	dd09      	ble.n	90016684 <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
90016670:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
90016674:	4299      	cmp	r1, r3
90016676:	f101 0101 	add.w	r1, r1, #1
9001667a:	bf38      	it	cc
9001667c:	3508      	addcc	r5, #8
9001667e:	6081      	str	r1, [r0, #8]
90016680:	bf38      	it	cc
90016682:	6105      	strcc	r5, [r0, #16]
90016684:	6903      	ldr	r3, [r0, #16]
90016686:	f8a3 a000 	strh.w	sl, [r3]
9001668a:	805a      	strh	r2, [r3, #2]
9001668c:	809e      	strh	r6, [r3, #4]
9001668e:	80de      	strh	r6, [r3, #6]
90016690:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90016692:	6901      	ldr	r1, [r0, #16]
90016694:	441a      	add	r2, r3
90016696:	88cc      	ldrh	r4, [r1, #6]
90016698:	888b      	ldrh	r3, [r1, #4]
9001669a:	4323      	orrs	r3, r4
9001669c:	d010      	beq.n	900166c0 <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
9001669e:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
900166a2:	2c00      	cmp	r4, #0
900166a4:	db0c      	blt.n	900166c0 <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
900166a6:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
900166a8:	429c      	cmp	r4, r3
900166aa:	da09      	bge.n	900166c0 <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
900166ac:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
900166b0:	429c      	cmp	r4, r3
900166b2:	f104 0401 	add.w	r4, r4, #1
900166b6:	bf38      	it	cc
900166b8:	3108      	addcc	r1, #8
900166ba:	6084      	str	r4, [r0, #8]
900166bc:	bf38      	it	cc
900166be:	6101      	strcc	r1, [r0, #16]
900166c0:	6903      	ldr	r3, [r0, #16]
900166c2:	464f      	mov	r7, r9
900166c4:	f8a3 a000 	strh.w	sl, [r3]
900166c8:	805a      	strh	r2, [r3, #2]
900166ca:	809e      	strh	r6, [r3, #4]
900166cc:	80de      	strh	r6, [r3, #6]
900166ce:	9b06      	ldr	r3, [sp, #24]
900166d0:	4293      	cmp	r3, r2
900166d2:	d19c      	bne.n	9001660e <_ZN8touchgfx7Outline10renderLineEiiii+0x34e>
900166d4:	9b01      	ldr	r3, [sp, #4]
900166d6:	6907      	ldr	r7, [r0, #16]
900166d8:	f1c3 0620 	rsb	r6, r3, #32
900166dc:	9b05      	ldr	r3, [sp, #20]
900166de:	ea4f 1e63 	mov.w	lr, r3, asr #5
900166e2:	9b04      	ldr	r3, [sp, #16]
900166e4:	429e      	cmp	r6, r3
900166e6:	f040 81c7 	bne.w	90016a78 <_ZN8touchgfx7Outline10renderLineEiiii+0x7b8>
900166ea:	f9b7 3000 	ldrsh.w	r3, [r7]
900166ee:	459e      	cmp	lr, r3
900166f0:	d104      	bne.n	900166fc <_ZN8touchgfx7Outline10renderLineEiiii+0x43c>
900166f2:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
900166f6:	429a      	cmp	r2, r3
900166f8:	f43f ae3a 	beq.w	90016370 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
900166fc:	88f9      	ldrh	r1, [r7, #6]
900166fe:	88bb      	ldrh	r3, [r7, #4]
90016700:	430b      	orrs	r3, r1
90016702:	d010      	beq.n	90016726 <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
90016704:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
90016708:	2b00      	cmp	r3, #0
9001670a:	db0c      	blt.n	90016726 <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
9001670c:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9001670e:	428b      	cmp	r3, r1
90016710:	da09      	bge.n	90016726 <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
90016712:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
90016716:	428b      	cmp	r3, r1
90016718:	f103 0301 	add.w	r3, r3, #1
9001671c:	bf38      	it	cc
9001671e:	3708      	addcc	r7, #8
90016720:	6083      	str	r3, [r0, #8]
90016722:	bf38      	it	cc
90016724:	6107      	strcc	r7, [r0, #16]
90016726:	6903      	ldr	r3, [r0, #16]
90016728:	f8a3 e000 	strh.w	lr, [r3]
9001672c:	e603      	b.n	90016336 <_ZN8touchgfx7Outline10renderLineEiiii+0x76>
9001672e:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
90016730:	9c03      	ldr	r4, [sp, #12]
90016732:	42a2      	cmp	r2, r4
90016734:	f6ff ae1c 	blt.w	90016370 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90016738:	9c06      	ldr	r4, [sp, #24]
9001673a:	42a2      	cmp	r2, r4
9001673c:	9c08      	ldr	r4, [sp, #32]
9001673e:	bfbc      	itt	lt
90016740:	3201      	addlt	r2, #1
90016742:	9206      	strlt	r2, [sp, #24]
90016744:	f1c3 0220 	rsb	r2, r3, #32
90016748:	4362      	muls	r2, r4
9001674a:	2401      	movs	r4, #1
9001674c:	940b      	str	r4, [sp, #44]	; 0x2c
9001674e:	2420      	movs	r4, #32
90016750:	e6d6      	b.n	90016500 <_ZN8touchgfx7Outline10renderLineEiiii+0x240>
90016752:	ea4f 1861 	mov.w	r8, r1, asr #5
90016756:	f009 021f 	and.w	r2, r9, #31
9001675a:	f001 011f 	and.w	r1, r1, #31
9001675e:	f8b5 e004 	ldrh.w	lr, [r5, #4]
90016762:	920c      	str	r2, [sp, #48]	; 0x30
90016764:	45b0      	cmp	r8, r6
90016766:	9a01      	ldr	r2, [sp, #4]
90016768:	f8b5 a006 	ldrh.w	sl, [r5, #6]
9001676c:	eba2 0203 	sub.w	r2, r2, r3
90016770:	d108      	bne.n	90016784 <_ZN8touchgfx7Outline10renderLineEiiii+0x4c4>
90016772:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90016774:	4496      	add	lr, r2
90016776:	4419      	add	r1, r3
90016778:	f8a5 e004 	strh.w	lr, [r5, #4]
9001677c:	fb02 a101 	mla	r1, r2, r1, sl
90016780:	80e9      	strh	r1, [r5, #6]
90016782:	e6fa      	b.n	9001657a <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
90016784:	2c00      	cmp	r4, #0
90016786:	f2c0 80a7 	blt.w	900168d8 <_ZN8touchgfx7Outline10renderLineEiiii+0x618>
9001678a:	2701      	movs	r7, #1
9001678c:	f1c1 0c20 	rsb	ip, r1, #32
90016790:	970a      	str	r7, [sp, #40]	; 0x28
90016792:	2720      	movs	r7, #32
90016794:	fb02 f20c 	mul.w	r2, r2, ip
90016798:	9709      	str	r7, [sp, #36]	; 0x24
9001679a:	9f09      	ldr	r7, [sp, #36]	; 0x24
9001679c:	fb92 fcf4 	sdiv	ip, r2, r4
900167a0:	fb04 221c 	mls	r2, r4, ip, r2
900167a4:	4439      	add	r1, r7
900167a6:	2a00      	cmp	r2, #0
900167a8:	bfbc      	itt	lt
900167aa:	f10c 3cff 	addlt.w	ip, ip, #4294967295
900167ae:	1912      	addlt	r2, r2, r4
900167b0:	fb0c a101 	mla	r1, ip, r1, sl
900167b4:	44e6      	add	lr, ip
900167b6:	80e9      	strh	r1, [r5, #6]
900167b8:	990a      	ldr	r1, [sp, #40]	; 0x28
900167ba:	f8a5 e004 	strh.w	lr, [r5, #4]
900167be:	eb08 0501 	add.w	r5, r8, r1
900167c2:	6901      	ldr	r1, [r0, #16]
900167c4:	f8b1 8006 	ldrh.w	r8, [r1, #6]
900167c8:	f8b1 e004 	ldrh.w	lr, [r1, #4]
900167cc:	ea58 070e 	orrs.w	r7, r8, lr
900167d0:	d010      	beq.n	900167f4 <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
900167d2:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
900167d6:	f1be 0f00 	cmp.w	lr, #0
900167da:	db0b      	blt.n	900167f4 <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
900167dc:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
900167de:	45be      	cmp	lr, r7
900167e0:	da08      	bge.n	900167f4 <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
900167e2:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
900167e6:	45be      	cmp	lr, r7
900167e8:	bf3c      	itt	cc
900167ea:	3108      	addcc	r1, #8
900167ec:	6101      	strcc	r1, [r0, #16]
900167ee:	f10e 0101 	add.w	r1, lr, #1
900167f2:	6081      	str	r1, [r0, #8]
900167f4:	6901      	ldr	r1, [r0, #16]
900167f6:	f04f 0e00 	mov.w	lr, #0
900167fa:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
900167fe:	42ae      	cmp	r6, r5
90016800:	800d      	strh	r5, [r1, #0]
90016802:	4463      	add	r3, ip
90016804:	f8a1 8002 	strh.w	r8, [r1, #2]
90016808:	f8a1 e004 	strh.w	lr, [r1, #4]
9001680c:	f8a1 e006 	strh.w	lr, [r1, #6]
90016810:	d053      	beq.n	900168ba <_ZN8touchgfx7Outline10renderLineEiiii+0x5fa>
90016812:	9901      	ldr	r1, [sp, #4]
90016814:	1b12      	subs	r2, r2, r4
90016816:	1ac9      	subs	r1, r1, r3
90016818:	4461      	add	r1, ip
9001681a:	0149      	lsls	r1, r1, #5
9001681c:	fb91 fef4 	sdiv	lr, r1, r4
90016820:	fb04 111e 	mls	r1, r4, lr, r1
90016824:	2900      	cmp	r1, #0
90016826:	bfbc      	itt	lt
90016828:	f10e 3eff 	addlt.w	lr, lr, #4294967295
9001682c:	1909      	addlt	r1, r1, r4
9001682e:	f10e 0701 	add.w	r7, lr, #1
90016832:	970d      	str	r7, [sp, #52]	; 0x34
90016834:	f8d0 a010 	ldr.w	sl, [r0, #16]
90016838:	1852      	adds	r2, r2, r1
9001683a:	9f0a      	ldr	r7, [sp, #40]	; 0x28
9001683c:	bf54      	ite	pl
9001683e:	f8dd c034 	ldrpl.w	ip, [sp, #52]	; 0x34
90016842:	46f4      	movmi	ip, lr
90016844:	f8ba b004 	ldrh.w	fp, [sl, #4]
90016848:	bf58      	it	pl
9001684a:	1b12      	subpl	r2, r2, r4
9001684c:	4463      	add	r3, ip
9001684e:	443d      	add	r5, r7
90016850:	44e3      	add	fp, ip
90016852:	f8aa b004 	strh.w	fp, [sl, #4]
90016856:	f8ba b006 	ldrh.w	fp, [sl, #6]
9001685a:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
9001685e:	f8aa b006 	strh.w	fp, [sl, #6]
90016862:	f8d0 c010 	ldr.w	ip, [r0, #16]
90016866:	f8bc b006 	ldrh.w	fp, [ip, #6]
9001686a:	f8bc a004 	ldrh.w	sl, [ip, #4]
9001686e:	ea5b 070a 	orrs.w	r7, fp, sl
90016872:	d014      	beq.n	9001689e <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
90016874:	f9bc a002 	ldrsh.w	sl, [ip, #2]
90016878:	f1ba 0f00 	cmp.w	sl, #0
9001687c:	db0f      	blt.n	9001689e <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
9001687e:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
90016880:	45ba      	cmp	sl, r7
90016882:	da0c      	bge.n	9001689e <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
90016884:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
90016888:	45ba      	cmp	sl, r7
9001688a:	f10a 0a01 	add.w	sl, sl, #1
9001688e:	bf38      	it	cc
90016890:	f10c 0c08 	addcc.w	ip, ip, #8
90016894:	f8c0 a008 	str.w	sl, [r0, #8]
90016898:	bf38      	it	cc
9001689a:	f8c0 c010 	strcc.w	ip, [r0, #16]
9001689e:	f8d0 c010 	ldr.w	ip, [r0, #16]
900168a2:	f04f 0700 	mov.w	r7, #0
900168a6:	42ae      	cmp	r6, r5
900168a8:	f8ac 5000 	strh.w	r5, [ip]
900168ac:	f8ac 8002 	strh.w	r8, [ip, #2]
900168b0:	f8ac 7004 	strh.w	r7, [ip, #4]
900168b4:	f8ac 7006 	strh.w	r7, [ip, #6]
900168b8:	d1bc      	bne.n	90016834 <_ZN8touchgfx7Outline10renderLineEiiii+0x574>
900168ba:	6904      	ldr	r4, [r0, #16]
900168bc:	9a01      	ldr	r2, [sp, #4]
900168be:	990c      	ldr	r1, [sp, #48]	; 0x30
900168c0:	1ad3      	subs	r3, r2, r3
900168c2:	88a2      	ldrh	r2, [r4, #4]
900168c4:	3120      	adds	r1, #32
900168c6:	441a      	add	r2, r3
900168c8:	80a2      	strh	r2, [r4, #4]
900168ca:	9a09      	ldr	r2, [sp, #36]	; 0x24
900168cc:	1a89      	subs	r1, r1, r2
900168ce:	88e2      	ldrh	r2, [r4, #6]
900168d0:	fb03 2301 	mla	r3, r3, r1, r2
900168d4:	80e3      	strh	r3, [r4, #6]
900168d6:	e650      	b.n	9001657a <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
900168d8:	f04f 37ff 	mov.w	r7, #4294967295
900168dc:	434a      	muls	r2, r1
900168de:	4264      	negs	r4, r4
900168e0:	970a      	str	r7, [sp, #40]	; 0x28
900168e2:	2700      	movs	r7, #0
900168e4:	e758      	b.n	90016798 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d8>
900168e6:	ea4f 1867 	mov.w	r8, r7, asr #5
900168ea:	f009 031f 	and.w	r3, r9, #31
900168ee:	f007 071f 	and.w	r7, r7, #31
900168f2:	fa1f fc8c 	uxth.w	ip, ip
900168f6:	45d0      	cmp	r8, sl
900168f8:	930f      	str	r3, [sp, #60]	; 0x3c
900168fa:	fa1f fe8e 	uxth.w	lr, lr
900168fe:	d10a      	bne.n	90016916 <_ZN8touchgfx7Outline10renderLineEiiii+0x656>
90016900:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90016902:	449c      	add	ip, r3
90016904:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90016906:	441f      	add	r7, r3
90016908:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001690a:	f8a5 c004 	strh.w	ip, [r5, #4]
9001690e:	fb03 e707 	mla	r7, r3, r7, lr
90016912:	80ef      	strh	r7, [r5, #6]
90016914:	e6bc      	b.n	90016690 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90016916:	2900      	cmp	r1, #0
90016918:	f2c0 80a6 	blt.w	90016a68 <_ZN8touchgfx7Outline10renderLineEiiii+0x7a8>
9001691c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
9001691e:	f1c7 0320 	rsb	r3, r7, #32
90016922:	4363      	muls	r3, r4
90016924:	2401      	movs	r4, #1
90016926:	940d      	str	r4, [sp, #52]	; 0x34
90016928:	2420      	movs	r4, #32
9001692a:	940c      	str	r4, [sp, #48]	; 0x30
9001692c:	fb93 f4f1 	sdiv	r4, r3, r1
90016930:	fb01 3b14 	mls	fp, r1, r4, r3
90016934:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90016936:	f1bb 0f00 	cmp.w	fp, #0
9001693a:	441f      	add	r7, r3
9001693c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001693e:	bfbc      	itt	lt
90016940:	f104 34ff 	addlt.w	r4, r4, #4294967295
90016944:	448b      	addlt	fp, r1
90016946:	fb04 e707 	mla	r7, r4, r7, lr
9001694a:	44a4      	add	ip, r4
9001694c:	80ef      	strh	r7, [r5, #6]
9001694e:	f8a5 c004 	strh.w	ip, [r5, #4]
90016952:	eb08 0503 	add.w	r5, r8, r3
90016956:	f8d0 c010 	ldr.w	ip, [r0, #16]
9001695a:	f8bc e006 	ldrh.w	lr, [ip, #6]
9001695e:	f8bc 7004 	ldrh.w	r7, [ip, #4]
90016962:	ea5e 0307 	orrs.w	r3, lr, r7
90016966:	d011      	beq.n	9001698c <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
90016968:	f9bc e002 	ldrsh.w	lr, [ip, #2]
9001696c:	f1be 0f00 	cmp.w	lr, #0
90016970:	db0c      	blt.n	9001698c <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
90016972:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
90016974:	45be      	cmp	lr, r7
90016976:	da09      	bge.n	9001698c <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
90016978:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
9001697c:	45be      	cmp	lr, r7
9001697e:	bf3c      	itt	cc
90016980:	f10c 0708 	addcc.w	r7, ip, #8
90016984:	6107      	strcc	r7, [r0, #16]
90016986:	f10e 0701 	add.w	r7, lr, #1
9001698a:	6087      	str	r7, [r0, #8]
9001698c:	6907      	ldr	r7, [r0, #16]
9001698e:	b213      	sxth	r3, r2
90016990:	4555      	cmp	r5, sl
90016992:	9310      	str	r3, [sp, #64]	; 0x40
90016994:	807b      	strh	r3, [r7, #2]
90016996:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90016998:	803d      	strh	r5, [r7, #0]
9001699a:	80be      	strh	r6, [r7, #4]
9001699c:	eb04 0c03 	add.w	ip, r4, r3
900169a0:	80fe      	strh	r6, [r7, #6]
900169a2:	d050      	beq.n	90016a46 <_ZN8touchgfx7Outline10renderLineEiiii+0x786>
900169a4:	9b01      	ldr	r3, [sp, #4]
900169a6:	eba3 070c 	sub.w	r7, r3, ip
900169aa:	ebab 0301 	sub.w	r3, fp, r1
900169ae:	443c      	add	r4, r7
900169b0:	9309      	str	r3, [sp, #36]	; 0x24
900169b2:	0164      	lsls	r4, r4, #5
900169b4:	fb94 f8f1 	sdiv	r8, r4, r1
900169b8:	fb01 4418 	mls	r4, r1, r8, r4
900169bc:	2c00      	cmp	r4, #0
900169be:	bfbc      	itt	lt
900169c0:	f108 38ff 	addlt.w	r8, r8, #4294967295
900169c4:	1864      	addlt	r4, r4, r1
900169c6:	f108 0701 	add.w	r7, r8, #1
900169ca:	9711      	str	r7, [sp, #68]	; 0x44
900169cc:	9b09      	ldr	r3, [sp, #36]	; 0x24
900169ce:	f8d0 e010 	ldr.w	lr, [r0, #16]
900169d2:	191b      	adds	r3, r3, r4
900169d4:	f8be b004 	ldrh.w	fp, [lr, #4]
900169d8:	bf54      	ite	pl
900169da:	9f11      	ldrpl	r7, [sp, #68]	; 0x44
900169dc:	4647      	movmi	r7, r8
900169de:	9309      	str	r3, [sp, #36]	; 0x24
900169e0:	bf58      	it	pl
900169e2:	1a5b      	subpl	r3, r3, r1
900169e4:	44bb      	add	fp, r7
900169e6:	44bc      	add	ip, r7
900169e8:	bf58      	it	pl
900169ea:	9309      	strpl	r3, [sp, #36]	; 0x24
900169ec:	f8ae b004 	strh.w	fp, [lr, #4]
900169f0:	f8be b006 	ldrh.w	fp, [lr, #6]
900169f4:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
900169f8:	9f0d      	ldr	r7, [sp, #52]	; 0x34
900169fa:	f8ae b006 	strh.w	fp, [lr, #6]
900169fe:	443d      	add	r5, r7
90016a00:	f8d0 e010 	ldr.w	lr, [r0, #16]
90016a04:	f8be b006 	ldrh.w	fp, [lr, #6]
90016a08:	f8be 7004 	ldrh.w	r7, [lr, #4]
90016a0c:	ea5b 0307 	orrs.w	r3, fp, r7
90016a10:	d011      	beq.n	90016a36 <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
90016a12:	f9be b002 	ldrsh.w	fp, [lr, #2]
90016a16:	f1bb 0f00 	cmp.w	fp, #0
90016a1a:	db0c      	blt.n	90016a36 <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
90016a1c:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
90016a1e:	45bb      	cmp	fp, r7
90016a20:	da09      	bge.n	90016a36 <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
90016a22:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
90016a26:	45bb      	cmp	fp, r7
90016a28:	bf3c      	itt	cc
90016a2a:	f10e 0708 	addcc.w	r7, lr, #8
90016a2e:	6107      	strcc	r7, [r0, #16]
90016a30:	f10b 0701 	add.w	r7, fp, #1
90016a34:	6087      	str	r7, [r0, #8]
90016a36:	6907      	ldr	r7, [r0, #16]
90016a38:	4555      	cmp	r5, sl
90016a3a:	9b10      	ldr	r3, [sp, #64]	; 0x40
90016a3c:	803d      	strh	r5, [r7, #0]
90016a3e:	807b      	strh	r3, [r7, #2]
90016a40:	80be      	strh	r6, [r7, #4]
90016a42:	80fe      	strh	r6, [r7, #6]
90016a44:	d1c2      	bne.n	900169cc <_ZN8touchgfx7Outline10renderLineEiiii+0x70c>
90016a46:	9b01      	ldr	r3, [sp, #4]
90016a48:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
90016a4a:	eba3 0c0c 	sub.w	ip, r3, ip
90016a4e:	6903      	ldr	r3, [r0, #16]
90016a50:	3720      	adds	r7, #32
90016a52:	8899      	ldrh	r1, [r3, #4]
90016a54:	4461      	add	r1, ip
90016a56:	8099      	strh	r1, [r3, #4]
90016a58:	990c      	ldr	r1, [sp, #48]	; 0x30
90016a5a:	1a7f      	subs	r7, r7, r1
90016a5c:	88d9      	ldrh	r1, [r3, #6]
90016a5e:	fb0c 1c07 	mla	ip, ip, r7, r1
90016a62:	f8a3 c006 	strh.w	ip, [r3, #6]
90016a66:	e613      	b.n	90016690 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90016a68:	f04f 34ff 	mov.w	r4, #4294967295
90016a6c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90016a6e:	4249      	negs	r1, r1
90016a70:	940d      	str	r4, [sp, #52]	; 0x34
90016a72:	2400      	movs	r4, #0
90016a74:	437b      	muls	r3, r7
90016a76:	e758      	b.n	9001692a <_ZN8touchgfx7Outline10renderLineEiiii+0x66a>
90016a78:	9905      	ldr	r1, [sp, #20]
90016a7a:	ea4f 1b69 	mov.w	fp, r9, asr #5
90016a7e:	f009 0c1f 	and.w	ip, r9, #31
90016a82:	f8b7 8004 	ldrh.w	r8, [r7, #4]
90016a86:	f001 011f 	and.w	r1, r1, #31
90016a8a:	45f3      	cmp	fp, lr
90016a8c:	f8b7 a006 	ldrh.w	sl, [r7, #6]
90016a90:	9102      	str	r1, [sp, #8]
90016a92:	9904      	ldr	r1, [sp, #16]
90016a94:	eba1 0406 	sub.w	r4, r1, r6
90016a98:	d108      	bne.n	90016aac <_ZN8touchgfx7Outline10renderLineEiiii+0x7ec>
90016a9a:	9b02      	ldr	r3, [sp, #8]
90016a9c:	44a0      	add	r8, r4
90016a9e:	449c      	add	ip, r3
90016aa0:	f8a7 8004 	strh.w	r8, [r7, #4]
90016aa4:	fb04 a40c 	mla	r4, r4, ip, sl
90016aa8:	80fc      	strh	r4, [r7, #6]
90016aaa:	e461      	b.n	90016370 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90016aac:	9905      	ldr	r1, [sp, #20]
90016aae:	ebb1 0109 	subs.w	r1, r1, r9
90016ab2:	bf51      	iteee	pl
90016ab4:	f1cc 0520 	rsbpl	r5, ip, #32
90016ab8:	fb04 f40c 	mulmi.w	r4, r4, ip
90016abc:	4249      	negmi	r1, r1
90016abe:	2500      	movmi	r5, #0
90016ac0:	bf5d      	ittte	pl
90016ac2:	436c      	mulpl	r4, r5
90016ac4:	2520      	movpl	r5, #32
90016ac6:	f04f 0901 	movpl.w	r9, #1
90016aca:	f04f 39ff 	movmi.w	r9, #4294967295
90016ace:	9501      	str	r5, [sp, #4]
90016ad0:	9b01      	ldr	r3, [sp, #4]
90016ad2:	fb94 f5f1 	sdiv	r5, r4, r1
90016ad6:	fb01 4415 	mls	r4, r1, r5, r4
90016ada:	449c      	add	ip, r3
90016adc:	eb0b 0309 	add.w	r3, fp, r9
90016ae0:	2c00      	cmp	r4, #0
90016ae2:	bfbc      	itt	lt
90016ae4:	f105 35ff 	addlt.w	r5, r5, #4294967295
90016ae8:	1864      	addlt	r4, r4, r1
90016aea:	44a8      	add	r8, r5
90016aec:	fb05 ac0c 	mla	ip, r5, ip, sl
90016af0:	f8a7 8004 	strh.w	r8, [r7, #4]
90016af4:	f8a7 c006 	strh.w	ip, [r7, #6]
90016af8:	f8d0 c010 	ldr.w	ip, [r0, #16]
90016afc:	f8bc 8006 	ldrh.w	r8, [ip, #6]
90016b00:	f8bc 7004 	ldrh.w	r7, [ip, #4]
90016b04:	ea58 0707 	orrs.w	r7, r8, r7
90016b08:	d011      	beq.n	90016b2e <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
90016b0a:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
90016b0e:	f1b8 0f00 	cmp.w	r8, #0
90016b12:	db0c      	blt.n	90016b2e <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
90016b14:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
90016b16:	45b8      	cmp	r8, r7
90016b18:	da09      	bge.n	90016b2e <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
90016b1a:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
90016b1e:	45b8      	cmp	r8, r7
90016b20:	bf3c      	itt	cc
90016b22:	f10c 0708 	addcc.w	r7, ip, #8
90016b26:	6107      	strcc	r7, [r0, #16]
90016b28:	f108 0701 	add.w	r7, r8, #1
90016b2c:	6087      	str	r7, [r0, #8]
90016b2e:	6907      	ldr	r7, [r0, #16]
90016b30:	f04f 0c00 	mov.w	ip, #0
90016b34:	b212      	sxth	r2, r2
90016b36:	459e      	cmp	lr, r3
90016b38:	803b      	strh	r3, [r7, #0]
90016b3a:	442e      	add	r6, r5
90016b3c:	807a      	strh	r2, [r7, #2]
90016b3e:	f8a7 c004 	strh.w	ip, [r7, #4]
90016b42:	f8a7 c006 	strh.w	ip, [r7, #6]
90016b46:	d04b      	beq.n	90016be0 <_ZN8touchgfx7Outline10renderLineEiiii+0x920>
90016b48:	9f04      	ldr	r7, [sp, #16]
90016b4a:	1a64      	subs	r4, r4, r1
90016b4c:	f04f 0a00 	mov.w	sl, #0
90016b50:	1bbf      	subs	r7, r7, r6
90016b52:	443d      	add	r5, r7
90016b54:	016d      	lsls	r5, r5, #5
90016b56:	fb95 f8f1 	sdiv	r8, r5, r1
90016b5a:	fb01 5518 	mls	r5, r1, r8, r5
90016b5e:	4565      	cmp	r5, ip
90016b60:	bfbc      	itt	lt
90016b62:	f108 38ff 	addlt.w	r8, r8, #4294967295
90016b66:	186d      	addlt	r5, r5, r1
90016b68:	f108 0701 	add.w	r7, r8, #1
90016b6c:	9703      	str	r7, [sp, #12]
90016b6e:	f8d0 c010 	ldr.w	ip, [r0, #16]
90016b72:	1964      	adds	r4, r4, r5
90016b74:	444b      	add	r3, r9
90016b76:	bf54      	ite	pl
90016b78:	9f03      	ldrpl	r7, [sp, #12]
90016b7a:	4647      	movmi	r7, r8
90016b7c:	f8bc b004 	ldrh.w	fp, [ip, #4]
90016b80:	bf58      	it	pl
90016b82:	1a64      	subpl	r4, r4, r1
90016b84:	443e      	add	r6, r7
90016b86:	44bb      	add	fp, r7
90016b88:	f8ac b004 	strh.w	fp, [ip, #4]
90016b8c:	f8bc b006 	ldrh.w	fp, [ip, #6]
90016b90:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
90016b94:	f8ac b006 	strh.w	fp, [ip, #6]
90016b98:	f8d0 c010 	ldr.w	ip, [r0, #16]
90016b9c:	f8bc b006 	ldrh.w	fp, [ip, #6]
90016ba0:	f8bc 7004 	ldrh.w	r7, [ip, #4]
90016ba4:	ea5b 0707 	orrs.w	r7, fp, r7
90016ba8:	d011      	beq.n	90016bce <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
90016baa:	f9bc b002 	ldrsh.w	fp, [ip, #2]
90016bae:	f1bb 0f00 	cmp.w	fp, #0
90016bb2:	db0c      	blt.n	90016bce <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
90016bb4:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
90016bb6:	45bb      	cmp	fp, r7
90016bb8:	da09      	bge.n	90016bce <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
90016bba:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
90016bbe:	45bb      	cmp	fp, r7
90016bc0:	bf3c      	itt	cc
90016bc2:	f10c 0708 	addcc.w	r7, ip, #8
90016bc6:	6107      	strcc	r7, [r0, #16]
90016bc8:	f10b 0701 	add.w	r7, fp, #1
90016bcc:	6087      	str	r7, [r0, #8]
90016bce:	6907      	ldr	r7, [r0, #16]
90016bd0:	459e      	cmp	lr, r3
90016bd2:	803b      	strh	r3, [r7, #0]
90016bd4:	807a      	strh	r2, [r7, #2]
90016bd6:	f8a7 a004 	strh.w	sl, [r7, #4]
90016bda:	f8a7 a006 	strh.w	sl, [r7, #6]
90016bde:	d1c6      	bne.n	90016b6e <_ZN8touchgfx7Outline10renderLineEiiii+0x8ae>
90016be0:	9b04      	ldr	r3, [sp, #16]
90016be2:	1b9e      	subs	r6, r3, r6
90016be4:	6903      	ldr	r3, [r0, #16]
90016be6:	889a      	ldrh	r2, [r3, #4]
90016be8:	4432      	add	r2, r6
90016bea:	809a      	strh	r2, [r3, #4]
90016bec:	9a02      	ldr	r2, [sp, #8]
90016bee:	f102 0c20 	add.w	ip, r2, #32
90016bf2:	9a01      	ldr	r2, [sp, #4]
90016bf4:	ebac 0c02 	sub.w	ip, ip, r2
90016bf8:	88da      	ldrh	r2, [r3, #6]
90016bfa:	fb06 260c 	mla	r6, r6, ip, r2
90016bfe:	80de      	strh	r6, [r3, #6]
90016c00:	f7ff bbb6 	b.w	90016370 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>

90016c04 <_ZN8touchgfx7Outline6lineToEii>:
90016c04:	6a43      	ldr	r3, [r0, #36]	; 0x24
90016c06:	079b      	lsls	r3, r3, #30
90016c08:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
90016c0a:	460e      	mov	r6, r1
90016c0c:	4615      	mov	r5, r2
90016c0e:	d511      	bpl.n	90016c34 <_ZN8touchgfx7Outline6lineToEii+0x30>
90016c10:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
90016c14:	ea86 0701 	eor.w	r7, r6, r1
90016c18:	ea85 0302 	eor.w	r3, r5, r2
90016c1c:	433b      	orrs	r3, r7
90016c1e:	d009      	beq.n	90016c34 <_ZN8touchgfx7Outline6lineToEii+0x30>
90016c20:	4633      	mov	r3, r6
90016c22:	9500      	str	r5, [sp, #0]
90016c24:	f7ff fb4c 	bl	900162c0 <_ZN8touchgfx7Outline10renderLineEiiii>
90016c28:	6a43      	ldr	r3, [r0, #36]	; 0x24
90016c2a:	f043 0301 	orr.w	r3, r3, #1
90016c2e:	e9c0 6505 	strd	r6, r5, [r0, #20]
90016c32:	6243      	str	r3, [r0, #36]	; 0x24
90016c34:	b003      	add	sp, #12
90016c36:	bdf0      	pop	{r4, r5, r6, r7, pc}

90016c38 <_ZN8touchgfx7Outline6moveToEii>:
90016c38:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90016c3a:	6a43      	ldr	r3, [r0, #36]	; 0x24
90016c3c:	4615      	mov	r5, r2
90016c3e:	4604      	mov	r4, r0
90016c40:	460e      	mov	r6, r1
90016c42:	079a      	lsls	r2, r3, #30
90016c44:	d401      	bmi.n	90016c4a <_ZN8touchgfx7Outline6moveToEii+0x12>
90016c46:	f7ff fb07 	bl	90016258 <_ZN8touchgfx7Outline5resetEv>
90016c4a:	6a63      	ldr	r3, [r4, #36]	; 0x24
90016c4c:	07db      	lsls	r3, r3, #31
90016c4e:	d504      	bpl.n	90016c5a <_ZN8touchgfx7Outline6moveToEii+0x22>
90016c50:	4620      	mov	r0, r4
90016c52:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
90016c56:	f7ff ffd5 	bl	90016c04 <_ZN8touchgfx7Outline6lineToEii>
90016c5a:	6923      	ldr	r3, [r4, #16]
90016c5c:	1170      	asrs	r0, r6, #5
90016c5e:	1169      	asrs	r1, r5, #5
90016c60:	f9b3 2000 	ldrsh.w	r2, [r3]
90016c64:	4290      	cmp	r0, r2
90016c66:	d103      	bne.n	90016c70 <_ZN8touchgfx7Outline6moveToEii+0x38>
90016c68:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
90016c6c:	4291      	cmp	r1, r2
90016c6e:	d01a      	beq.n	90016ca6 <_ZN8touchgfx7Outline6moveToEii+0x6e>
90016c70:	88df      	ldrh	r7, [r3, #6]
90016c72:	889a      	ldrh	r2, [r3, #4]
90016c74:	433a      	orrs	r2, r7
90016c76:	d010      	beq.n	90016c9a <_ZN8touchgfx7Outline6moveToEii+0x62>
90016c78:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
90016c7c:	2a00      	cmp	r2, #0
90016c7e:	db0c      	blt.n	90016c9a <_ZN8touchgfx7Outline6moveToEii+0x62>
90016c80:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
90016c82:	42ba      	cmp	r2, r7
90016c84:	da09      	bge.n	90016c9a <_ZN8touchgfx7Outline6moveToEii+0x62>
90016c86:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
90016c8a:	42ba      	cmp	r2, r7
90016c8c:	f102 0201 	add.w	r2, r2, #1
90016c90:	bf38      	it	cc
90016c92:	3308      	addcc	r3, #8
90016c94:	60a2      	str	r2, [r4, #8]
90016c96:	bf38      	it	cc
90016c98:	6123      	strcc	r3, [r4, #16]
90016c9a:	6923      	ldr	r3, [r4, #16]
90016c9c:	2200      	movs	r2, #0
90016c9e:	8018      	strh	r0, [r3, #0]
90016ca0:	8059      	strh	r1, [r3, #2]
90016ca2:	809a      	strh	r2, [r3, #4]
90016ca4:	80da      	strh	r2, [r3, #6]
90016ca6:	6166      	str	r6, [r4, #20]
90016ca8:	6225      	str	r5, [r4, #32]
90016caa:	e9c4 5606 	strd	r5, r6, [r4, #24]
90016cae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

90016cb0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
90016cb0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90016cb4:	b0d0      	sub	sp, #320	; 0x140
90016cb6:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
90016cba:	466c      	mov	r4, sp
90016cbc:	4627      	mov	r7, r4
90016cbe:	1a0d      	subs	r5, r1, r0
90016cc0:	f100 0308 	add.w	r3, r0, #8
90016cc4:	2d48      	cmp	r5, #72	; 0x48
90016cc6:	f340 80d5 	ble.w	90016e74 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
90016cca:	112d      	asrs	r5, r5, #4
90016ccc:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
90016cd0:	f9b0 9000 	ldrsh.w	r9, [r0]
90016cd4:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
90016cd8:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
90016cdc:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
90016ce0:	6816      	ldr	r6, [r2, #0]
90016ce2:	6006      	str	r6, [r0, #0]
90016ce4:	6856      	ldr	r6, [r2, #4]
90016ce6:	6046      	str	r6, [r0, #4]
90016ce8:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
90016cec:	f8a2 8002 	strh.w	r8, [r2, #2]
90016cf0:	f8a2 e004 	strh.w	lr, [r2, #4]
90016cf4:	f8a2 c006 	strh.w	ip, [r2, #6]
90016cf8:	f1a1 0208 	sub.w	r2, r1, #8
90016cfc:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
90016d00:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
90016d04:	4565      	cmp	r5, ip
90016d06:	db06      	blt.n	90016d16 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
90016d08:	d119      	bne.n	90016d3e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
90016d0a:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
90016d0e:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
90016d12:	42ae      	cmp	r6, r5
90016d14:	dd13      	ble.n	90016d3e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
90016d16:	460e      	mov	r6, r1
90016d18:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
90016d1c:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
90016d20:	f856 5d08 	ldr.w	r5, [r6, #-8]!
90016d24:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
90016d28:	601d      	str	r5, [r3, #0]
90016d2a:	6875      	ldr	r5, [r6, #4]
90016d2c:	605d      	str	r5, [r3, #4]
90016d2e:	f821 9c08 	strh.w	r9, [r1, #-8]
90016d32:	f821 cc06 	strh.w	ip, [r1, #-6]
90016d36:	f821 8c04 	strh.w	r8, [r1, #-4]
90016d3a:	f821 ec02 	strh.w	lr, [r1, #-2]
90016d3e:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
90016d42:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
90016d46:	42ae      	cmp	r6, r5
90016d48:	db06      	blt.n	90016d58 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
90016d4a:	d116      	bne.n	90016d7a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
90016d4c:	f9b0 c000 	ldrsh.w	ip, [r0]
90016d50:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
90016d54:	45ac      	cmp	ip, r5
90016d56:	da10      	bge.n	90016d7a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
90016d58:	681d      	ldr	r5, [r3, #0]
90016d5a:	f9b0 8000 	ldrsh.w	r8, [r0]
90016d5e:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
90016d62:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
90016d66:	6005      	str	r5, [r0, #0]
90016d68:	685d      	ldr	r5, [r3, #4]
90016d6a:	f8a0 8008 	strh.w	r8, [r0, #8]
90016d6e:	6045      	str	r5, [r0, #4]
90016d70:	8146      	strh	r6, [r0, #10]
90016d72:	f8a0 e00c 	strh.w	lr, [r0, #12]
90016d76:	f8a0 c00e 	strh.w	ip, [r0, #14]
90016d7a:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
90016d7e:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
90016d82:	4565      	cmp	r5, ip
90016d84:	db06      	blt.n	90016d94 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
90016d86:	d119      	bne.n	90016dbc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
90016d88:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
90016d8c:	f9b0 5000 	ldrsh.w	r5, [r0]
90016d90:	42ae      	cmp	r6, r5
90016d92:	da13      	bge.n	90016dbc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
90016d94:	460e      	mov	r6, r1
90016d96:	f9b0 9000 	ldrsh.w	r9, [r0]
90016d9a:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
90016d9e:	f856 5d08 	ldr.w	r5, [r6, #-8]!
90016da2:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
90016da6:	6005      	str	r5, [r0, #0]
90016da8:	6875      	ldr	r5, [r6, #4]
90016daa:	6045      	str	r5, [r0, #4]
90016dac:	f821 9c08 	strh.w	r9, [r1, #-8]
90016db0:	f821 cc06 	strh.w	ip, [r1, #-6]
90016db4:	f821 8c04 	strh.w	r8, [r1, #-4]
90016db8:	f821 ec02 	strh.w	lr, [r1, #-2]
90016dbc:	3308      	adds	r3, #8
90016dbe:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
90016dc2:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
90016dc6:	45e6      	cmp	lr, ip
90016dc8:	dbf8      	blt.n	90016dbc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
90016dca:	d105      	bne.n	90016dd8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
90016dcc:	f9b3 6000 	ldrsh.w	r6, [r3]
90016dd0:	f9b0 5000 	ldrsh.w	r5, [r0]
90016dd4:	42ae      	cmp	r6, r5
90016dd6:	dbf1      	blt.n	90016dbc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
90016dd8:	4615      	mov	r5, r2
90016dda:	3a08      	subs	r2, #8
90016ddc:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
90016de0:	45b4      	cmp	ip, r6
90016de2:	dbf9      	blt.n	90016dd8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
90016de4:	d105      	bne.n	90016df2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
90016de6:	f9b0 8000 	ldrsh.w	r8, [r0]
90016dea:	f9b2 6000 	ldrsh.w	r6, [r2]
90016dee:	45b0      	cmp	r8, r6
90016df0:	dbf2      	blt.n	90016dd8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
90016df2:	4293      	cmp	r3, r2
90016df4:	f1a5 0608 	sub.w	r6, r5, #8
90016df8:	d816      	bhi.n	90016e28 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
90016dfa:	f8d6 c000 	ldr.w	ip, [r6]
90016dfe:	f9b3 a000 	ldrsh.w	sl, [r3]
90016e02:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
90016e06:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
90016e0a:	f8c3 c000 	str.w	ip, [r3]
90016e0e:	f8d6 c004 	ldr.w	ip, [r6, #4]
90016e12:	f8c3 c004 	str.w	ip, [r3, #4]
90016e16:	f825 ac08 	strh.w	sl, [r5, #-8]
90016e1a:	f825 ec06 	strh.w	lr, [r5, #-6]
90016e1e:	f825 9c04 	strh.w	r9, [r5, #-4]
90016e22:	f825 8c02 	strh.w	r8, [r5, #-2]
90016e26:	e7c9      	b.n	90016dbc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
90016e28:	f8d6 e000 	ldr.w	lr, [r6]
90016e2c:	f9b0 a000 	ldrsh.w	sl, [r0]
90016e30:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
90016e34:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
90016e38:	f8c0 e000 	str.w	lr, [r0]
90016e3c:	f8d6 e004 	ldr.w	lr, [r6, #4]
90016e40:	1a16      	subs	r6, r2, r0
90016e42:	f8c0 e004 	str.w	lr, [r0, #4]
90016e46:	f825 ac08 	strh.w	sl, [r5, #-8]
90016e4a:	f825 cc06 	strh.w	ip, [r5, #-6]
90016e4e:	f825 9c04 	strh.w	r9, [r5, #-4]
90016e52:	f825 8c02 	strh.w	r8, [r5, #-2]
90016e56:	1acd      	subs	r5, r1, r3
90016e58:	10ed      	asrs	r5, r5, #3
90016e5a:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
90016e5e:	bfb5      	itete	lt
90016e60:	e9c4 0200 	strdlt	r0, r2, [r4]
90016e64:	e9c4 3100 	strdge	r3, r1, [r4]
90016e68:	460a      	movlt	r2, r1
90016e6a:	4603      	movge	r3, r0
90016e6c:	3408      	adds	r4, #8
90016e6e:	4618      	mov	r0, r3
90016e70:	4611      	mov	r1, r2
90016e72:	e724      	b.n	90016cbe <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
90016e74:	4299      	cmp	r1, r3
90016e76:	d927      	bls.n	90016ec8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x218>
90016e78:	f1a3 0210 	sub.w	r2, r3, #16
90016e7c:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
90016e80:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
90016e84:	45ac      	cmp	ip, r5
90016e86:	db06      	blt.n	90016e96 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
90016e88:	d11c      	bne.n	90016ec4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x214>
90016e8a:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
90016e8e:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
90016e92:	42ae      	cmp	r6, r5
90016e94:	da16      	bge.n	90016ec4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x214>
90016e96:	4615      	mov	r5, r2
90016e98:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
90016e9c:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
90016ea0:	3a08      	subs	r2, #8
90016ea2:	f855 6f08 	ldr.w	r6, [r5, #8]!
90016ea6:	f9b2 e01e 	ldrsh.w	lr, [r2, #30]
90016eaa:	6196      	str	r6, [r2, #24]
90016eac:	42a8      	cmp	r0, r5
90016eae:	686e      	ldr	r6, [r5, #4]
90016eb0:	f8a2 9010 	strh.w	r9, [r2, #16]
90016eb4:	61d6      	str	r6, [r2, #28]
90016eb6:	f8a2 c012 	strh.w	ip, [r2, #18]
90016eba:	f8a2 8014 	strh.w	r8, [r2, #20]
90016ebe:	f8a2 e016 	strh.w	lr, [r2, #22]
90016ec2:	d1db      	bne.n	90016e7c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
90016ec4:	3308      	adds	r3, #8
90016ec6:	e7d5      	b.n	90016e74 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
90016ec8:	42bc      	cmp	r4, r7
90016eca:	d903      	bls.n	90016ed4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x224>
90016ecc:	e954 0102 	ldrd	r0, r1, [r4, #-8]
90016ed0:	3c08      	subs	r4, #8
90016ed2:	e6f4      	b.n	90016cbe <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
90016ed4:	b050      	add	sp, #320	; 0x140
90016ed6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

90016eda <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
90016eda:	b510      	push	{r4, lr}
90016edc:	6a43      	ldr	r3, [r0, #36]	; 0x24
90016ede:	4604      	mov	r4, r0
90016ee0:	07da      	lsls	r2, r3, #31
90016ee2:	d507      	bpl.n	90016ef4 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
90016ee4:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
90016ee8:	f7ff fe8c 	bl	90016c04 <_ZN8touchgfx7Outline6lineToEii>
90016eec:	6a43      	ldr	r3, [r0, #36]	; 0x24
90016eee:	f023 0301 	bic.w	r3, r3, #1
90016ef2:	6243      	str	r3, [r0, #36]	; 0x24
90016ef4:	6a63      	ldr	r3, [r4, #36]	; 0x24
90016ef6:	079b      	lsls	r3, r3, #30
90016ef8:	d521      	bpl.n	90016f3e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
90016efa:	6923      	ldr	r3, [r4, #16]
90016efc:	88d9      	ldrh	r1, [r3, #6]
90016efe:	889a      	ldrh	r2, [r3, #4]
90016f00:	430a      	orrs	r2, r1
90016f02:	d010      	beq.n	90016f26 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
90016f04:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
90016f08:	2a00      	cmp	r2, #0
90016f0a:	db0c      	blt.n	90016f26 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
90016f0c:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
90016f0e:	428a      	cmp	r2, r1
90016f10:	da09      	bge.n	90016f26 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
90016f12:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
90016f16:	4291      	cmp	r1, r2
90016f18:	f102 0201 	add.w	r2, r2, #1
90016f1c:	bf88      	it	hi
90016f1e:	3308      	addhi	r3, #8
90016f20:	60a2      	str	r2, [r4, #8]
90016f22:	bf88      	it	hi
90016f24:	6123      	strhi	r3, [r4, #16]
90016f26:	68a1      	ldr	r1, [r4, #8]
90016f28:	b129      	cbz	r1, 90016f36 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
90016f2a:	6863      	ldr	r3, [r4, #4]
90016f2c:	4299      	cmp	r1, r3
90016f2e:	d802      	bhi.n	90016f36 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
90016f30:	68e0      	ldr	r0, [r4, #12]
90016f32:	f7ff febd 	bl	90016cb0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
90016f36:	6a63      	ldr	r3, [r4, #36]	; 0x24
90016f38:	f023 0302 	bic.w	r3, r3, #2
90016f3c:	6263      	str	r3, [r4, #36]	; 0x24
90016f3e:	68e0      	ldr	r0, [r4, #12]
90016f40:	bd10      	pop	{r4, pc}
	...

90016f44 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
90016f44:	4b02      	ldr	r3, [pc, #8]	; (90016f50 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
90016f46:	6018      	str	r0, [r3, #0]
90016f48:	4b02      	ldr	r3, [pc, #8]	; (90016f54 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
90016f4a:	6019      	str	r1, [r3, #0]
90016f4c:	4770      	bx	lr
90016f4e:	bf00      	nop
90016f50:	240236d4 	.word	0x240236d4
90016f54:	240236d8 	.word	0x240236d8

90016f58 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>:
90016f58:	2300      	movs	r3, #0
90016f5a:	4a02      	ldr	r2, [pc, #8]	; (90016f64 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0xc>)
90016f5c:	6013      	str	r3, [r2, #0]
90016f5e:	4a02      	ldr	r2, [pc, #8]	; (90016f68 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0x10>)
90016f60:	6013      	str	r3, [r2, #0]
90016f62:	4770      	bx	lr
90016f64:	240236d4 	.word	0x240236d4
90016f68:	240236d8 	.word	0x240236d8

90016f6c <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
90016f6c:	4b01      	ldr	r3, [pc, #4]	; (90016f74 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
90016f6e:	6818      	ldr	r0, [r3, #0]
90016f70:	4770      	bx	lr
90016f72:	bf00      	nop
90016f74:	240236d4 	.word	0x240236d4

90016f78 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
90016f78:	4b01      	ldr	r3, [pc, #4]	; (90016f80 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
90016f7a:	6818      	ldr	r0, [r3, #0]
90016f7c:	4770      	bx	lr
90016f7e:	bf00      	nop
90016f80:	240236d8 	.word	0x240236d8

90016f84 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
90016f84:	b510      	push	{r4, lr}
90016f86:	6803      	ldr	r3, [r0, #0]
90016f88:	460c      	mov	r4, r1
90016f8a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90016f8c:	4798      	blx	r3
90016f8e:	1b03      	subs	r3, r0, r4
90016f90:	4258      	negs	r0, r3
90016f92:	4158      	adcs	r0, r3
90016f94:	bd10      	pop	{r4, pc}
	...

90016f98 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
90016f98:	4b01      	ldr	r3, [pc, #4]	; (90016fa0 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
90016f9a:	6019      	str	r1, [r3, #0]
90016f9c:	4770      	bx	lr
90016f9e:	bf00      	nop
90016fa0:	240236dc 	.word	0x240236dc

90016fa4 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
90016fa4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90016fa8:	4696      	mov	lr, r2
90016faa:	b097      	sub	sp, #92	; 0x5c
90016fac:	4605      	mov	r5, r0
90016fae:	4614      	mov	r4, r2
90016fb0:	460e      	mov	r6, r1
90016fb2:	461f      	mov	r7, r3
90016fb4:	f10d 0c1c 	add.w	ip, sp, #28
90016fb8:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
90016fbc:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
90016fc0:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
90016fc4:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
90016fc8:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90016fcc:	f8de 3000 	ldr.w	r3, [lr]
90016fd0:	f104 0e14 	add.w	lr, r4, #20
90016fd4:	f8cc 3000 	str.w	r3, [ip]
90016fd8:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
90016fdc:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
90016fe0:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90016fe4:	f8de 3000 	ldr.w	r3, [lr]
90016fe8:	f104 0e28 	add.w	lr, r4, #40	; 0x28
90016fec:	f8cc 3000 	str.w	r3, [ip]
90016ff0:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
90016ff4:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
90016ff8:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90016ffc:	f8de 3000 	ldr.w	r3, [lr]
90017000:	4631      	mov	r1, r6
90017002:	9a21      	ldr	r2, [sp, #132]	; 0x84
90017004:	4628      	mov	r0, r5
90017006:	f8cc 3000 	str.w	r3, [ip]
9001700a:	682b      	ldr	r3, [r5, #0]
9001700c:	9201      	str	r2, [sp, #4]
9001700e:	9a20      	ldr	r2, [sp, #128]	; 0x80
90017010:	f8cd 8008 	str.w	r8, [sp, #8]
90017014:	9200      	str	r2, [sp, #0]
90017016:	aa07      	add	r2, sp, #28
90017018:	e9cd 9a03 	strd	r9, sl, [sp, #12]
9001701c:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
90017020:	463b      	mov	r3, r7
90017022:	47d8      	blx	fp
90017024:	46a6      	mov	lr, r4
90017026:	f10d 0c1c 	add.w	ip, sp, #28
9001702a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
9001702e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90017032:	f8de 3000 	ldr.w	r3, [lr]
90017036:	f104 0e28 	add.w	lr, r4, #40	; 0x28
9001703a:	343c      	adds	r4, #60	; 0x3c
9001703c:	f8cc 3000 	str.w	r3, [ip]
90017040:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
90017044:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
90017048:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
9001704c:	f8de 3000 	ldr.w	r3, [lr]
90017050:	f8cc 3000 	str.w	r3, [ip]
90017054:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
90017058:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
9001705a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
9001705e:	6823      	ldr	r3, [r4, #0]
90017060:	4631      	mov	r1, r6
90017062:	4628      	mov	r0, r5
90017064:	f8cc 3000 	str.w	r3, [ip]
90017068:	682b      	ldr	r3, [r5, #0]
9001706a:	e9cd 9a03 	strd	r9, sl, [sp, #12]
9001706e:	9a21      	ldr	r2, [sp, #132]	; 0x84
90017070:	f8cd 8008 	str.w	r8, [sp, #8]
90017074:	9201      	str	r2, [sp, #4]
90017076:	9a20      	ldr	r2, [sp, #128]	; 0x80
90017078:	9200      	str	r2, [sp, #0]
9001707a:	aa07      	add	r2, sp, #28
9001707c:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
9001707e:	463b      	mov	r3, r7
90017080:	47a0      	blx	r4
90017082:	b017      	add	sp, #92	; 0x5c
90017084:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90017088 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
90017088:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001708c:	b08d      	sub	sp, #52	; 0x34
9001708e:	4688      	mov	r8, r1
90017090:	f8d3 c000 	ldr.w	ip, [r3]
90017094:	9916      	ldr	r1, [sp, #88]	; 0x58
90017096:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
9001709a:	680f      	ldr	r7, [r1, #0]
9001709c:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
900170a0:	eba7 070c 	sub.w	r7, r7, ip
900170a4:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
900170a8:	edd3 6a07 	vldr	s13, [r3, #28]
900170ac:	42bc      	cmp	r4, r7
900170ae:	9918      	ldr	r1, [sp, #96]	; 0x60
900170b0:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
900170b4:	bfa8      	it	ge
900170b6:	463c      	movge	r4, r7
900170b8:	f9b1 9000 	ldrsh.w	r9, [r1]
900170bc:	f9ba 1000 	ldrsh.w	r1, [sl]
900170c0:	ee07 4a90 	vmov	s15, r4
900170c4:	eb09 0e0c 	add.w	lr, r9, ip
900170c8:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
900170cc:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
900170d0:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
900170d4:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
900170d8:	4571      	cmp	r1, lr
900170da:	ee25 4a04 	vmul.f32	s8, s10, s8
900170de:	ee65 4a24 	vmul.f32	s9, s10, s9
900170e2:	ee25 5a27 	vmul.f32	s10, s10, s15
900170e6:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
900170ea:	ee71 0aa4 	vadd.f32	s1, s3, s9
900170ee:	ee32 1a05 	vadd.f32	s2, s4, s10
900170f2:	ee87 7aa6 	vdiv.f32	s14, s15, s13
900170f6:	ee36 0a84 	vadd.f32	s0, s13, s8
900170fa:	ee61 1a87 	vmul.f32	s3, s3, s14
900170fe:	ee22 2a07 	vmul.f32	s4, s4, s14
90017102:	f340 808c 	ble.w	9001721e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x196>
90017106:	eba1 060e 	sub.w	r6, r1, lr
9001710a:	fb96 f5f4 	sdiv	r5, r6, r4
9001710e:	ee07 5a10 	vmov	s14, r5
90017112:	2d00      	cmp	r5, #0
90017114:	fb04 6615 	mls	r6, r4, r5, r6
90017118:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001711c:	eea7 0a04 	vfma.f32	s0, s14, s8
90017120:	eee7 0a24 	vfma.f32	s1, s14, s9
90017124:	eea7 1a05 	vfma.f32	s2, s14, s10
90017128:	dd12      	ble.n	90017150 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xc8>
9001712a:	ee70 6a44 	vsub.f32	s13, s0, s8
9001712e:	ee70 1ae4 	vsub.f32	s3, s1, s9
90017132:	ee31 2a45 	vsub.f32	s4, s2, s10
90017136:	eef5 6a40 	vcmp.f32	s13, #0.0
9001713a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001713e:	bf14      	ite	ne
90017140:	ee87 7aa6 	vdivne.f32	s14, s15, s13
90017144:	eeb0 7a67 	vmoveq.f32	s14, s15
90017148:	ee61 1a87 	vmul.f32	s3, s3, s14
9001714c:	ee22 2a07 	vmul.f32	s4, s4, s14
90017150:	fb05 f204 	mul.w	r2, r5, r4
90017154:	1abf      	subs	r7, r7, r2
90017156:	4494      	add	ip, r2
90017158:	f8ba 2004 	ldrh.w	r2, [sl, #4]
9001715c:	4411      	add	r1, r2
9001715e:	eb09 020c 	add.w	r2, r9, ip
90017162:	b209      	sxth	r1, r1
90017164:	443a      	add	r2, r7
90017166:	428a      	cmp	r2, r1
90017168:	bfc4      	itt	gt
9001716a:	eba1 0209 	subgt.w	r2, r1, r9
9001716e:	eba2 070c 	subgt.w	r7, r2, ip
90017172:	2f00      	cmp	r7, #0
90017174:	dd50      	ble.n	90017218 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x190>
90017176:	fb97 f1f4 	sdiv	r1, r7, r4
9001717a:	fb04 7211 	mls	r2, r4, r1, r7
9001717e:	b90a      	cbnz	r2, 90017184 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfc>
90017180:	3901      	subs	r1, #1
90017182:	4622      	mov	r2, r4
90017184:	eec7 3a80 	vdiv.f32	s7, s15, s0
90017188:	6840      	ldr	r0, [r0, #4]
9001718a:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
9001718e:	44b6      	add	lr, r6
90017190:	f8d0 a000 	ldr.w	sl, [r0]
90017194:	2900      	cmp	r1, #0
90017196:	bfcc      	ite	gt
90017198:	46a1      	movgt	r9, r4
9001719a:	4691      	movle	r9, r2
9001719c:	900b      	str	r0, [sp, #44]	; 0x2c
9001719e:	9817      	ldr	r0, [sp, #92]	; 0x5c
900171a0:	fb04 e505 	mla	r5, r4, r5, lr
900171a4:	eef0 6a42 	vmov.f32	s13, s4
900171a8:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
900171ac:	9008      	str	r0, [sp, #32]
900171ae:	eeb0 7a61 	vmov.f32	s14, s3
900171b2:	9818      	ldr	r0, [sp, #96]	; 0x60
900171b4:	695b      	ldr	r3, [r3, #20]
900171b6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900171ba:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
900171be:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
900171c2:	980b      	ldr	r0, [sp, #44]	; 0x2c
900171c4:	445b      	add	r3, fp
900171c6:	9307      	str	r3, [sp, #28]
900171c8:	ee16 3a90 	vmov	r3, s13
900171cc:	e9cd 8505 	strd	r8, r5, [sp, #20]
900171d0:	ee60 2aa3 	vmul.f32	s5, s1, s7
900171d4:	ee21 3a23 	vmul.f32	s6, s2, s7
900171d8:	ee72 7ae1 	vsub.f32	s15, s5, s3
900171dc:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
900171e0:	ee17 7a90 	vmov	r7, s15
900171e4:	ee73 7a42 	vsub.f32	s15, s6, s4
900171e8:	fb97 f7f4 	sdiv	r7, r7, r4
900171ec:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
900171f0:	ee17 ca90 	vmov	ip, s15
900171f4:	fb9c fcf4 	sdiv	ip, ip, r4
900171f8:	fb0c 3306 	mla	r3, ip, r6, r3
900171fc:	9302      	str	r3, [sp, #8]
900171fe:	ee17 3a10 	vmov	r3, s14
90017202:	e9cd 7c03 	strd	r7, ip, [sp, #12]
90017206:	fb07 3706 	mla	r7, r7, r6, r3
9001720a:	eba9 0306 	sub.w	r3, r9, r6
9001720e:	e9cd 4700 	strd	r4, r7, [sp]
90017212:	f8da 4008 	ldr.w	r4, [sl, #8]
90017216:	47a0      	blx	r4
90017218:	b00d      	add	sp, #52	; 0x34
9001721a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001721e:	2500      	movs	r5, #0
90017220:	462e      	mov	r6, r5
90017222:	e799      	b.n	90017158 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd0>

90017224 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
90017224:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90017228:	b0db      	sub	sp, #364	; 0x16c
9001722a:	461d      	mov	r5, r3
9001722c:	4614      	mov	r4, r2
9001722e:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
90017232:	910f      	str	r1, [sp, #60]	; 0x3c
90017234:	4629      	mov	r1, r5
90017236:	930a      	str	r3, [sp, #40]	; 0x28
90017238:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
9001723c:	9009      	str	r0, [sp, #36]	; 0x24
9001723e:	930b      	str	r3, [sp, #44]	; 0x2c
90017240:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
90017244:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
90017248:	9310      	str	r3, [sp, #64]	; 0x40
9001724a:	6803      	ldr	r3, [r0, #0]
9001724c:	6c5f      	ldr	r7, [r3, #68]	; 0x44
9001724e:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
90017252:	47b8      	blx	r7
90017254:	9b09      	ldr	r3, [sp, #36]	; 0x24
90017256:	6058      	str	r0, [r3, #4]
90017258:	2800      	cmp	r0, #0
9001725a:	f000 83a1 	beq.w	900179a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
9001725e:	682b      	ldr	r3, [r5, #0]
90017260:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
90017264:	ed94 7a02 	vldr	s14, [r4, #8]
90017268:	9314      	str	r3, [sp, #80]	; 0x50
9001726a:	686b      	ldr	r3, [r5, #4]
9001726c:	eeb4 7ae7 	vcmpe.f32	s14, s15
90017270:	9315      	str	r3, [sp, #84]	; 0x54
90017272:	4bc1      	ldr	r3, [pc, #772]	; (90017578 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
90017274:	7819      	ldrb	r1, [r3, #0]
90017276:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
9001727a:	2900      	cmp	r1, #0
9001727c:	bf16      	itet	ne
9001727e:	4619      	movne	r1, r3
90017280:	4611      	moveq	r1, r2
90017282:	4613      	movne	r3, r2
90017284:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90017288:	9116      	str	r1, [sp, #88]	; 0x58
9001728a:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
9001728e:	f240 8387 	bls.w	900179a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90017292:	ed94 7a07 	vldr	s14, [r4, #28]
90017296:	eeb4 7ae7 	vcmpe.f32	s14, s15
9001729a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001729e:	f240 837f 	bls.w	900179a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
900172a2:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
900172a6:	eeb4 7ae7 	vcmpe.f32	s14, s15
900172aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900172ae:	f240 8377 	bls.w	900179a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
900172b2:	6822      	ldr	r2, [r4, #0]
900172b4:	4bb1      	ldr	r3, [pc, #708]	; (9001757c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
900172b6:	429a      	cmp	r2, r3
900172b8:	f2c0 8372 	blt.w	900179a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
900172bc:	49b0      	ldr	r1, [pc, #704]	; (90017580 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
900172be:	6963      	ldr	r3, [r4, #20]
900172c0:	428a      	cmp	r2, r1
900172c2:	f300 836d 	bgt.w	900179a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
900172c6:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
900172ca:	48ae      	ldr	r0, [pc, #696]	; (90017584 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
900172cc:	33ff      	adds	r3, #255	; 0xff
900172ce:	4283      	cmp	r3, r0
900172d0:	f200 8366 	bhi.w	900179a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
900172d4:	6aa3      	ldr	r3, [r4, #40]	; 0x28
900172d6:	4dac      	ldr	r5, [pc, #688]	; (90017588 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
900172d8:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
900172dc:	33ff      	adds	r3, #255	; 0xff
900172de:	42ab      	cmp	r3, r5
900172e0:	f200 835e 	bhi.w	900179a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
900172e4:	6862      	ldr	r2, [r4, #4]
900172e6:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
900172ea:	33ff      	adds	r3, #255	; 0xff
900172ec:	4283      	cmp	r3, r0
900172ee:	f200 8357 	bhi.w	900179a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
900172f2:	69a1      	ldr	r1, [r4, #24]
900172f4:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
900172f8:	33ff      	adds	r3, #255	; 0xff
900172fa:	4283      	cmp	r3, r0
900172fc:	f200 8350 	bhi.w	900179a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90017300:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
90017302:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
90017306:	30ff      	adds	r0, #255	; 0xff
90017308:	42a8      	cmp	r0, r5
9001730a:	f200 8349 	bhi.w	900179a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
9001730e:	428a      	cmp	r2, r1
90017310:	f280 8110 	bge.w	90017534 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
90017314:	429a      	cmp	r2, r3
90017316:	f300 8119 	bgt.w	9001754c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
9001731a:	4299      	cmp	r1, r3
9001731c:	f280 811d 	bge.w	9001755a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
90017320:	2502      	movs	r5, #2
90017322:	2701      	movs	r7, #1
90017324:	46a9      	mov	r9, r5
90017326:	46b8      	mov	r8, r7
90017328:	f04f 0a00 	mov.w	sl, #0
9001732c:	4621      	mov	r1, r4
9001732e:	a849      	add	r0, sp, #292	; 0x124
90017330:	f003 fe26 	bl	9001af80 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
90017334:	4622      	mov	r2, r4
90017336:	4653      	mov	r3, sl
90017338:	a949      	add	r1, sp, #292	; 0x124
9001733a:	f8cd 9000 	str.w	r9, [sp]
9001733e:	a819      	add	r0, sp, #100	; 0x64
90017340:	f003 ff4e 	bl	9001b1e0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
90017344:	4622      	mov	r2, r4
90017346:	4653      	mov	r3, sl
90017348:	a949      	add	r1, sp, #292	; 0x124
9001734a:	f8cd 8000 	str.w	r8, [sp]
9001734e:	a829      	add	r0, sp, #164	; 0xa4
90017350:	f003 ff46 	bl	9001b1e0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
90017354:	4643      	mov	r3, r8
90017356:	4622      	mov	r2, r4
90017358:	a949      	add	r1, sp, #292	; 0x124
9001735a:	f8cd 9000 	str.w	r9, [sp]
9001735e:	a839      	add	r0, sp, #228	; 0xe4
90017360:	f003 ff3e 	bl	9001b1e0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
90017364:	42af      	cmp	r7, r5
90017366:	af12      	add	r7, sp, #72	; 0x48
90017368:	bfb7      	itett	lt
9001736a:	2300      	movlt	r3, #0
9001736c:	2301      	movge	r3, #1
9001736e:	ad29      	addlt	r5, sp, #164	; 0xa4
90017370:	ac19      	addlt	r4, sp, #100	; 0x64
90017372:	bfb1      	iteee	lt
90017374:	930e      	strlt	r3, [sp, #56]	; 0x38
90017376:	ad19      	addge	r5, sp, #100	; 0x64
90017378:	930e      	strge	r3, [sp, #56]	; 0x38
9001737a:	ac29      	addge	r4, sp, #164	; 0xa4
9001737c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
9001737e:	e893 0003 	ldmia.w	r3, {r0, r1}
90017382:	e887 0003 	stmia.w	r7, {r0, r1}
90017386:	b928      	cbnz	r0, 90017394 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
90017388:	4b80      	ldr	r3, [pc, #512]	; (9001758c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
9001738a:	6818      	ldr	r0, [r3, #0]
9001738c:	6803      	ldr	r3, [r0, #0]
9001738e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90017390:	4798      	blx	r3
90017392:	6038      	str	r0, [r7, #0]
90017394:	9b64      	ldr	r3, [sp, #400]	; 0x190
90017396:	f8bb 0006 	ldrh.w	r0, [fp, #6]
9001739a:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
9001739e:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
900173a0:	930c      	str	r3, [sp, #48]	; 0x30
900173a2:	990c      	ldr	r1, [sp, #48]	; 0x30
900173a4:	6963      	ldr	r3, [r4, #20]
900173a6:	440b      	add	r3, r1
900173a8:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
900173ac:	4408      	add	r0, r1
900173ae:	b200      	sxth	r0, r0
900173b0:	4283      	cmp	r3, r0
900173b2:	900d      	str	r0, [sp, #52]	; 0x34
900173b4:	f280 80dd 	bge.w	90017572 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
900173b8:	428b      	cmp	r3, r1
900173ba:	da08      	bge.n	900173ce <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
900173bc:	2a00      	cmp	r2, #0
900173be:	dd06      	ble.n	900173ce <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
900173c0:	1acb      	subs	r3, r1, r3
900173c2:	429a      	cmp	r2, r3
900173c4:	f2c0 80e4 	blt.w	90017590 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
900173c8:	2b00      	cmp	r3, #0
900173ca:	f300 80e2 	bgt.w	90017592 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
900173ce:	6967      	ldr	r7, [r4, #20]
900173d0:	f10d 0850 	add.w	r8, sp, #80	; 0x50
900173d4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
900173d6:	443b      	add	r3, r7
900173d8:	461f      	mov	r7, r3
900173da:	9b0d      	ldr	r3, [sp, #52]	; 0x34
900173dc:	1bdf      	subs	r7, r3, r7
900173de:	4297      	cmp	r7, r2
900173e0:	bfa8      	it	ge
900173e2:	4617      	movge	r7, r2
900173e4:	2f00      	cmp	r7, #0
900173e6:	f340 8166 	ble.w	900176b6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
900173ea:	9b64      	ldr	r3, [sp, #400]	; 0x190
900173ec:	6829      	ldr	r1, [r5, #0]
900173ee:	f9b3 2000 	ldrsh.w	r2, [r3]
900173f2:	f9bb 3000 	ldrsh.w	r3, [fp]
900173f6:	4411      	add	r1, r2
900173f8:	6820      	ldr	r0, [r4, #0]
900173fa:	4299      	cmp	r1, r3
900173fc:	dd1a      	ble.n	90017434 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
900173fe:	f8bb 1004 	ldrh.w	r1, [fp, #4]
90017402:	4402      	add	r2, r0
90017404:	440b      	add	r3, r1
90017406:	b21b      	sxth	r3, r3
90017408:	429a      	cmp	r2, r3
9001740a:	dc13      	bgt.n	90017434 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
9001740c:	9a10      	ldr	r2, [sp, #64]	; 0x40
9001740e:	a912      	add	r1, sp, #72	; 0x48
90017410:	9b09      	ldr	r3, [sp, #36]	; 0x24
90017412:	9809      	ldr	r0, [sp, #36]	; 0x24
90017414:	681b      	ldr	r3, [r3, #0]
90017416:	9206      	str	r2, [sp, #24]
90017418:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
9001741a:	9500      	str	r5, [sp, #0]
9001741c:	9205      	str	r2, [sp, #20]
9001741e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
90017420:	e9cd b203 	strd	fp, r2, [sp, #12]
90017424:	9a64      	ldr	r2, [sp, #400]	; 0x190
90017426:	e9cd 8201 	strd	r8, r2, [sp, #4]
9001742a:	aa49      	add	r2, sp, #292	; 0x124
9001742c:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
90017430:	4623      	mov	r3, r4
90017432:	47c8      	blx	r9
90017434:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
90017438:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
9001743c:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
90017440:	ee37 7a27 	vadd.f32	s14, s14, s15
90017444:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
90017448:	68a1      	ldr	r1, [r4, #8]
9001744a:	ee77 7aa6 	vadd.f32	s15, s15, s13
9001744e:	ed94 6a08 	vldr	s12, [r4, #32]
90017452:	edd4 6a07 	vldr	s13, [r4, #28]
90017456:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
9001745a:	ee76 6a86 	vadd.f32	s13, s13, s12
9001745e:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
90017462:	e9d4 2300 	ldrd	r2, r3, [r4]
90017466:	edc4 6a07 	vstr	s13, [r4, #28]
9001746a:	441a      	add	r2, r3
9001746c:	6963      	ldr	r3, [r4, #20]
9001746e:	3301      	adds	r3, #1
90017470:	6022      	str	r2, [r4, #0]
90017472:	6163      	str	r3, [r4, #20]
90017474:	69a3      	ldr	r3, [r4, #24]
90017476:	3b01      	subs	r3, #1
90017478:	61a3      	str	r3, [r4, #24]
9001747a:	6923      	ldr	r3, [r4, #16]
9001747c:	440b      	add	r3, r1
9001747e:	68e1      	ldr	r1, [r4, #12]
90017480:	428b      	cmp	r3, r1
90017482:	6123      	str	r3, [r4, #16]
90017484:	db15      	blt.n	900174b2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
90017486:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
9001748a:	3201      	adds	r2, #1
9001748c:	1a5b      	subs	r3, r3, r1
9001748e:	ee76 6a26 	vadd.f32	s13, s12, s13
90017492:	6022      	str	r2, [r4, #0]
90017494:	6123      	str	r3, [r4, #16]
90017496:	edc4 6a07 	vstr	s13, [r4, #28]
9001749a:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
9001749e:	ee36 7a87 	vadd.f32	s14, s13, s14
900174a2:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
900174a6:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
900174aa:	ee77 7a27 	vadd.f32	s15, s14, s15
900174ae:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
900174b2:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
900174b6:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
900174ba:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
900174be:	ee37 7a27 	vadd.f32	s14, s14, s15
900174c2:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
900174c6:	68a9      	ldr	r1, [r5, #8]
900174c8:	ee77 7aa6 	vadd.f32	s15, s15, s13
900174cc:	ed95 6a08 	vldr	s12, [r5, #32]
900174d0:	edd5 6a07 	vldr	s13, [r5, #28]
900174d4:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
900174d8:	ee76 6a86 	vadd.f32	s13, s13, s12
900174dc:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
900174e0:	e9d5 2300 	ldrd	r2, r3, [r5]
900174e4:	edc5 6a07 	vstr	s13, [r5, #28]
900174e8:	441a      	add	r2, r3
900174ea:	696b      	ldr	r3, [r5, #20]
900174ec:	3301      	adds	r3, #1
900174ee:	602a      	str	r2, [r5, #0]
900174f0:	616b      	str	r3, [r5, #20]
900174f2:	69ab      	ldr	r3, [r5, #24]
900174f4:	3b01      	subs	r3, #1
900174f6:	61ab      	str	r3, [r5, #24]
900174f8:	692b      	ldr	r3, [r5, #16]
900174fa:	440b      	add	r3, r1
900174fc:	68e9      	ldr	r1, [r5, #12]
900174fe:	428b      	cmp	r3, r1
90017500:	612b      	str	r3, [r5, #16]
90017502:	db15      	blt.n	90017530 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
90017504:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
90017508:	3201      	adds	r2, #1
9001750a:	1a5b      	subs	r3, r3, r1
9001750c:	ee76 6a26 	vadd.f32	s13, s12, s13
90017510:	602a      	str	r2, [r5, #0]
90017512:	612b      	str	r3, [r5, #16]
90017514:	edc5 6a07 	vstr	s13, [r5, #28]
90017518:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
9001751c:	ee36 7a87 	vadd.f32	s14, s13, s14
90017520:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
90017524:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
90017528:	ee77 7a27 	vadd.f32	s15, s14, s15
9001752c:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
90017530:	3f01      	subs	r7, #1
90017532:	e757      	b.n	900173e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
90017534:	4299      	cmp	r1, r3
90017536:	dc13      	bgt.n	90017560 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
90017538:	429a      	cmp	r2, r3
9001753a:	da14      	bge.n	90017566 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
9001753c:	2502      	movs	r5, #2
9001753e:	2703      	movs	r7, #3
90017540:	f04f 0800 	mov.w	r8, #0
90017544:	46a9      	mov	r9, r5
90017546:	f04f 0a01 	mov.w	sl, #1
9001754a:	e6ef      	b.n	9001732c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
9001754c:	2501      	movs	r5, #1
9001754e:	2700      	movs	r7, #0
90017550:	46a9      	mov	r9, r5
90017552:	46b8      	mov	r8, r7
90017554:	f04f 0a02 	mov.w	sl, #2
90017558:	e6e8      	b.n	9001732c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
9001755a:	2501      	movs	r5, #1
9001755c:	2702      	movs	r7, #2
9001755e:	e6e1      	b.n	90017324 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
90017560:	2500      	movs	r5, #0
90017562:	2701      	movs	r7, #1
90017564:	e7f4      	b.n	90017550 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
90017566:	2702      	movs	r7, #2
90017568:	2503      	movs	r5, #3
9001756a:	f04f 0900 	mov.w	r9, #0
9001756e:	46b8      	mov	r8, r7
90017570:	e7e9      	b.n	90017546 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
90017572:	4613      	mov	r3, r2
90017574:	e728      	b.n	900173c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
90017576:	bf00      	nop
90017578:	240236c4 	.word	0x240236c4
9001757c:	fffd8f01 	.word	0xfffd8f01
90017580:	00027100 	.word	0x00027100
90017584:	0004e1ff 	.word	0x0004e1ff
90017588:	0004e1fe 	.word	0x0004e1fe
9001758c:	240236cc 	.word	0x240236cc
90017590:	4613      	mov	r3, r2
90017592:	992b      	ldr	r1, [sp, #172]	; 0xac
90017594:	469e      	mov	lr, r3
90017596:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
90017598:	469c      	mov	ip, r3
9001759a:	9111      	str	r1, [sp, #68]	; 0x44
9001759c:	f04f 0900 	mov.w	r9, #0
900175a0:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
900175a4:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
900175a8:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
900175ac:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
900175b0:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
900175b4:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
900175b8:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
900175bc:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
900175c0:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
900175c4:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
900175c8:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
900175cc:	f1bc 0f00 	cmp.w	ip, #0
900175d0:	d147      	bne.n	90017662 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
900175d2:	eb03 0c07 	add.w	ip, r3, r7
900175d6:	1ad7      	subs	r7, r2, r3
900175d8:	f1b9 0f00 	cmp.w	r9, #0
900175dc:	d009      	beq.n	900175f2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
900175de:	9029      	str	r0, [sp, #164]	; 0xa4
900175e0:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
900175e4:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
900175e8:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
900175ec:	912d      	str	r1, [sp, #180]	; 0xb4
900175ee:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
900175f2:	991b      	ldr	r1, [sp, #108]	; 0x6c
900175f4:	f04f 0800 	mov.w	r8, #0
900175f8:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
900175fc:	9111      	str	r1, [sp, #68]	; 0x44
900175fe:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
90017602:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
90017606:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
9001760a:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
9001760e:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
90017612:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
90017616:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
9001761a:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
9001761e:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
90017622:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
90017626:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
9001762a:	f1be 0f00 	cmp.w	lr, #0
9001762e:	d031      	beq.n	90017694 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
90017630:	9e11      	ldr	r6, [sp, #68]	; 0x44
90017632:	4450      	add	r0, sl
90017634:	ee76 6aa4 	vadd.f32	s13, s13, s9
90017638:	4431      	add	r1, r6
9001763a:	ee37 7a04 	vadd.f32	s14, s14, s8
9001763e:	ee77 7aa3 	vadd.f32	s15, s15, s7
90017642:	4549      	cmp	r1, r9
90017644:	db08      	blt.n	90017658 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
90017646:	ee77 7a85 	vadd.f32	s15, s15, s10
9001764a:	3001      	adds	r0, #1
9001764c:	ee76 6aa5 	vadd.f32	s13, s13, s11
90017650:	eba1 0109 	sub.w	r1, r1, r9
90017654:	ee37 7a06 	vadd.f32	s14, s14, s12
90017658:	f10e 3eff 	add.w	lr, lr, #4294967295
9001765c:	f04f 0801 	mov.w	r8, #1
90017660:	e7e3      	b.n	9001762a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
90017662:	9e11      	ldr	r6, [sp, #68]	; 0x44
90017664:	4450      	add	r0, sl
90017666:	ee37 7a24 	vadd.f32	s14, s14, s9
9001766a:	4431      	add	r1, r6
9001766c:	ee77 7a84 	vadd.f32	s15, s15, s8
90017670:	ee76 6aa3 	vadd.f32	s13, s13, s7
90017674:	4541      	cmp	r1, r8
90017676:	db08      	blt.n	9001768a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
90017678:	ee76 6a85 	vadd.f32	s13, s13, s10
9001767c:	3001      	adds	r0, #1
9001767e:	ee37 7a25 	vadd.f32	s14, s14, s11
90017682:	eba1 0108 	sub.w	r1, r1, r8
90017686:	ee77 7a86 	vadd.f32	s15, s15, s12
9001768a:	f10c 3cff 	add.w	ip, ip, #4294967295
9001768e:	f04f 0901 	mov.w	r9, #1
90017692:	e79b      	b.n	900175cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
90017694:	449c      	add	ip, r3
90017696:	1aff      	subs	r7, r7, r3
90017698:	f1b8 0f00 	cmp.w	r8, #0
9001769c:	d009      	beq.n	900176b2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
9001769e:	9019      	str	r0, [sp, #100]	; 0x64
900176a0:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
900176a4:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
900176a8:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
900176ac:	911d      	str	r1, [sp, #116]	; 0x74
900176ae:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
900176b2:	1ad2      	subs	r2, r2, r3
900176b4:	e68b      	b.n	900173ce <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
900176b6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
900176b8:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
900176ba:	2b00      	cmp	r3, #0
900176bc:	f000 80d1 	beq.w	90017862 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
900176c0:	ad19      	add	r5, sp, #100	; 0x64
900176c2:	ac39      	add	r4, sp, #228	; 0xe4
900176c4:	9b64      	ldr	r3, [sp, #400]	; 0x190
900176c6:	f8bb 0006 	ldrh.w	r0, [fp, #6]
900176ca:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
900176ce:	930c      	str	r3, [sp, #48]	; 0x30
900176d0:	990c      	ldr	r1, [sp, #48]	; 0x30
900176d2:	6963      	ldr	r3, [r4, #20]
900176d4:	440b      	add	r3, r1
900176d6:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
900176da:	4408      	add	r0, r1
900176dc:	b200      	sxth	r0, r0
900176de:	4283      	cmp	r3, r0
900176e0:	900d      	str	r0, [sp, #52]	; 0x34
900176e2:	f280 80c1 	bge.w	90017868 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
900176e6:	428b      	cmp	r3, r1
900176e8:	da08      	bge.n	900176fc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
900176ea:	2a00      	cmp	r2, #0
900176ec:	dd06      	ble.n	900176fc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
900176ee:	1acb      	subs	r3, r1, r3
900176f0:	429a      	cmp	r2, r3
900176f2:	f2c0 80bb 	blt.w	9001786c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
900176f6:	2b00      	cmp	r3, #0
900176f8:	f300 80b9 	bgt.w	9001786e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
900176fc:	6967      	ldr	r7, [r4, #20]
900176fe:	f10d 0850 	add.w	r8, sp, #80	; 0x50
90017702:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90017704:	443b      	add	r3, r7
90017706:	461f      	mov	r7, r3
90017708:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001770a:	1bdf      	subs	r7, r3, r7
9001770c:	4297      	cmp	r7, r2
9001770e:	bfa8      	it	ge
90017710:	4617      	movge	r7, r2
90017712:	2f00      	cmp	r7, #0
90017714:	f340 813c 	ble.w	90017990 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
90017718:	9b64      	ldr	r3, [sp, #400]	; 0x190
9001771a:	6829      	ldr	r1, [r5, #0]
9001771c:	f9b3 2000 	ldrsh.w	r2, [r3]
90017720:	f9bb 3000 	ldrsh.w	r3, [fp]
90017724:	4411      	add	r1, r2
90017726:	6820      	ldr	r0, [r4, #0]
90017728:	4299      	cmp	r1, r3
9001772a:	dd1a      	ble.n	90017762 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
9001772c:	f8bb 1004 	ldrh.w	r1, [fp, #4]
90017730:	4402      	add	r2, r0
90017732:	440b      	add	r3, r1
90017734:	b21b      	sxth	r3, r3
90017736:	429a      	cmp	r2, r3
90017738:	dc13      	bgt.n	90017762 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
9001773a:	9a10      	ldr	r2, [sp, #64]	; 0x40
9001773c:	a912      	add	r1, sp, #72	; 0x48
9001773e:	9b09      	ldr	r3, [sp, #36]	; 0x24
90017740:	9809      	ldr	r0, [sp, #36]	; 0x24
90017742:	681b      	ldr	r3, [r3, #0]
90017744:	9206      	str	r2, [sp, #24]
90017746:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
90017748:	9500      	str	r5, [sp, #0]
9001774a:	9205      	str	r2, [sp, #20]
9001774c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
9001774e:	e9cd b203 	strd	fp, r2, [sp, #12]
90017752:	9a64      	ldr	r2, [sp, #400]	; 0x190
90017754:	e9cd 8201 	strd	r8, r2, [sp, #4]
90017758:	aa49      	add	r2, sp, #292	; 0x124
9001775a:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
9001775e:	4623      	mov	r3, r4
90017760:	47c8      	blx	r9
90017762:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
90017766:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
9001776a:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
9001776e:	ee37 7a27 	vadd.f32	s14, s14, s15
90017772:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
90017776:	68a1      	ldr	r1, [r4, #8]
90017778:	ee77 7aa6 	vadd.f32	s15, s15, s13
9001777c:	ed94 6a08 	vldr	s12, [r4, #32]
90017780:	edd4 6a07 	vldr	s13, [r4, #28]
90017784:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
90017788:	ee76 6a86 	vadd.f32	s13, s13, s12
9001778c:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
90017790:	e9d4 2300 	ldrd	r2, r3, [r4]
90017794:	edc4 6a07 	vstr	s13, [r4, #28]
90017798:	441a      	add	r2, r3
9001779a:	6963      	ldr	r3, [r4, #20]
9001779c:	3301      	adds	r3, #1
9001779e:	6022      	str	r2, [r4, #0]
900177a0:	6163      	str	r3, [r4, #20]
900177a2:	69a3      	ldr	r3, [r4, #24]
900177a4:	3b01      	subs	r3, #1
900177a6:	61a3      	str	r3, [r4, #24]
900177a8:	6923      	ldr	r3, [r4, #16]
900177aa:	440b      	add	r3, r1
900177ac:	68e1      	ldr	r1, [r4, #12]
900177ae:	428b      	cmp	r3, r1
900177b0:	6123      	str	r3, [r4, #16]
900177b2:	db15      	blt.n	900177e0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
900177b4:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
900177b8:	3201      	adds	r2, #1
900177ba:	1a5b      	subs	r3, r3, r1
900177bc:	ee76 6a26 	vadd.f32	s13, s12, s13
900177c0:	6022      	str	r2, [r4, #0]
900177c2:	6123      	str	r3, [r4, #16]
900177c4:	edc4 6a07 	vstr	s13, [r4, #28]
900177c8:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
900177cc:	ee36 7a87 	vadd.f32	s14, s13, s14
900177d0:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
900177d4:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
900177d8:	ee77 7a27 	vadd.f32	s15, s14, s15
900177dc:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
900177e0:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
900177e4:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
900177e8:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
900177ec:	ee37 7a27 	vadd.f32	s14, s14, s15
900177f0:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
900177f4:	68a9      	ldr	r1, [r5, #8]
900177f6:	ee77 7aa6 	vadd.f32	s15, s15, s13
900177fa:	ed95 6a08 	vldr	s12, [r5, #32]
900177fe:	edd5 6a07 	vldr	s13, [r5, #28]
90017802:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
90017806:	ee76 6a86 	vadd.f32	s13, s13, s12
9001780a:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
9001780e:	e9d5 2300 	ldrd	r2, r3, [r5]
90017812:	edc5 6a07 	vstr	s13, [r5, #28]
90017816:	441a      	add	r2, r3
90017818:	696b      	ldr	r3, [r5, #20]
9001781a:	3301      	adds	r3, #1
9001781c:	602a      	str	r2, [r5, #0]
9001781e:	616b      	str	r3, [r5, #20]
90017820:	69ab      	ldr	r3, [r5, #24]
90017822:	3b01      	subs	r3, #1
90017824:	61ab      	str	r3, [r5, #24]
90017826:	692b      	ldr	r3, [r5, #16]
90017828:	440b      	add	r3, r1
9001782a:	68e9      	ldr	r1, [r5, #12]
9001782c:	428b      	cmp	r3, r1
9001782e:	612b      	str	r3, [r5, #16]
90017830:	db15      	blt.n	9001785e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
90017832:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
90017836:	3201      	adds	r2, #1
90017838:	1a5b      	subs	r3, r3, r1
9001783a:	ee76 6a26 	vadd.f32	s13, s12, s13
9001783e:	602a      	str	r2, [r5, #0]
90017840:	612b      	str	r3, [r5, #16]
90017842:	edc5 6a07 	vstr	s13, [r5, #28]
90017846:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
9001784a:	ee36 7a87 	vadd.f32	s14, s13, s14
9001784e:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
90017852:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
90017856:	ee77 7a27 	vadd.f32	s15, s14, s15
9001785a:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
9001785e:	3f01      	subs	r7, #1
90017860:	e757      	b.n	90017712 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
90017862:	ad39      	add	r5, sp, #228	; 0xe4
90017864:	ac19      	add	r4, sp, #100	; 0x64
90017866:	e72d      	b.n	900176c4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
90017868:	4613      	mov	r3, r2
9001786a:	e744      	b.n	900176f6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
9001786c:	4613      	mov	r3, r2
9001786e:	9e3b      	ldr	r6, [sp, #236]	; 0xec
90017870:	469e      	mov	lr, r3
90017872:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
90017876:	461f      	mov	r7, r3
90017878:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
9001787c:	f04f 0900 	mov.w	r9, #0
90017880:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
90017884:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
90017888:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
9001788c:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
90017890:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
90017894:	993d      	ldr	r1, [sp, #244]	; 0xf4
90017896:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
9001789a:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
9001789e:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
900178a2:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
900178a6:	960e      	str	r6, [sp, #56]	; 0x38
900178a8:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
900178ac:	2f00      	cmp	r7, #0
900178ae:	d146      	bne.n	9001793e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
900178b0:	449c      	add	ip, r3
900178b2:	1ad7      	subs	r7, r2, r3
900178b4:	f1b9 0f00 	cmp.w	r9, #0
900178b8:	d009      	beq.n	900178ce <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
900178ba:	9039      	str	r0, [sp, #228]	; 0xe4
900178bc:	913d      	str	r1, [sp, #244]	; 0xf4
900178be:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
900178c2:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
900178c6:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
900178ca:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
900178ce:	991b      	ldr	r1, [sp, #108]	; 0x6c
900178d0:	f04f 0800 	mov.w	r8, #0
900178d4:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
900178d8:	910e      	str	r1, [sp, #56]	; 0x38
900178da:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
900178de:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
900178e2:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
900178e6:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
900178ea:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
900178ee:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
900178f2:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
900178f6:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
900178fa:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
900178fe:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
90017902:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
90017906:	f1be 0f00 	cmp.w	lr, #0
9001790a:	d030      	beq.n	9001796e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
9001790c:	9e0e      	ldr	r6, [sp, #56]	; 0x38
9001790e:	4450      	add	r0, sl
90017910:	ee76 6aa4 	vadd.f32	s13, s13, s9
90017914:	4431      	add	r1, r6
90017916:	ee37 7a04 	vadd.f32	s14, s14, s8
9001791a:	ee77 7aa3 	vadd.f32	s15, s15, s7
9001791e:	4549      	cmp	r1, r9
90017920:	db08      	blt.n	90017934 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
90017922:	ee77 7a85 	vadd.f32	s15, s15, s10
90017926:	3001      	adds	r0, #1
90017928:	ee76 6aa5 	vadd.f32	s13, s13, s11
9001792c:	eba1 0109 	sub.w	r1, r1, r9
90017930:	ee37 7a06 	vadd.f32	s14, s14, s12
90017934:	f10e 3eff 	add.w	lr, lr, #4294967295
90017938:	f04f 0801 	mov.w	r8, #1
9001793c:	e7e3      	b.n	90017906 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
9001793e:	9e0e      	ldr	r6, [sp, #56]	; 0x38
90017940:	4450      	add	r0, sl
90017942:	ee37 7a24 	vadd.f32	s14, s14, s9
90017946:	4431      	add	r1, r6
90017948:	ee77 7a84 	vadd.f32	s15, s15, s8
9001794c:	ee76 6aa3 	vadd.f32	s13, s13, s7
90017950:	4541      	cmp	r1, r8
90017952:	db08      	blt.n	90017966 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
90017954:	ee76 6a85 	vadd.f32	s13, s13, s10
90017958:	3001      	adds	r0, #1
9001795a:	ee37 7a25 	vadd.f32	s14, s14, s11
9001795e:	eba1 0108 	sub.w	r1, r1, r8
90017962:	ee77 7a86 	vadd.f32	s15, s15, s12
90017966:	3f01      	subs	r7, #1
90017968:	f04f 0901 	mov.w	r9, #1
9001796c:	e79e      	b.n	900178ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
9001796e:	449c      	add	ip, r3
90017970:	1aff      	subs	r7, r7, r3
90017972:	f1b8 0f00 	cmp.w	r8, #0
90017976:	d009      	beq.n	9001798c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
90017978:	9019      	str	r0, [sp, #100]	; 0x64
9001797a:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
9001797e:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
90017982:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
90017986:	911d      	str	r1, [sp, #116]	; 0x74
90017988:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
9001798c:	1ad2      	subs	r2, r2, r3
9001798e:	e6b5      	b.n	900176fc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
90017990:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90017992:	681b      	ldr	r3, [r3, #0]
90017994:	b923      	cbnz	r3, 900179a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90017996:	4b04      	ldr	r3, [pc, #16]	; (900179a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
90017998:	6818      	ldr	r0, [r3, #0]
9001799a:	6803      	ldr	r3, [r0, #0]
9001799c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001799e:	4798      	blx	r3
900179a0:	b05b      	add	sp, #364	; 0x16c
900179a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900179a6:	bf00      	nop
900179a8:	240236cc 	.word	0x240236cc

900179ac <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
900179ac:	b570      	push	{r4, r5, r6, lr}
900179ae:	4604      	mov	r4, r0
900179b0:	2500      	movs	r5, #0
900179b2:	9805      	ldr	r0, [sp, #20]
900179b4:	f89d 601c 	ldrb.w	r6, [sp, #28]
900179b8:	6061      	str	r1, [r4, #4]
900179ba:	8263      	strh	r3, [r4, #18]
900179bc:	f89d 1010 	ldrb.w	r1, [sp, #16]
900179c0:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
900179c4:	8025      	strh	r5, [r4, #0]
900179c6:	7221      	strb	r1, [r4, #8]
900179c8:	7266      	strb	r6, [r4, #9]
900179ca:	60e0      	str	r0, [r4, #12]
900179cc:	8222      	strh	r2, [r4, #16]
900179ce:	82a3      	strh	r3, [r4, #20]
900179d0:	82e5      	strh	r5, [r4, #22]
900179d2:	8325      	strh	r5, [r4, #24]
900179d4:	8365      	strh	r5, [r4, #26]
900179d6:	83a5      	strh	r5, [r4, #28]
900179d8:	83e5      	strh	r5, [r4, #30]
900179da:	8425      	strh	r5, [r4, #32]
900179dc:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
900179e0:	b32e      	cbz	r6, 90017a2e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
900179e2:	6803      	ldr	r3, [r0, #0]
900179e4:	695b      	ldr	r3, [r3, #20]
900179e6:	4798      	blx	r3
900179e8:	4606      	mov	r6, r0
900179ea:	b300      	cbz	r0, 90017a2e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
900179ec:	68e0      	ldr	r0, [r4, #12]
900179ee:	4631      	mov	r1, r6
900179f0:	6803      	ldr	r3, [r0, #0]
900179f2:	68db      	ldr	r3, [r3, #12]
900179f4:	4798      	blx	r3
900179f6:	4605      	mov	r5, r0
900179f8:	b1c8      	cbz	r0, 90017a2e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
900179fa:	7b43      	ldrb	r3, [r0, #13]
900179fc:	7a82      	ldrb	r2, [r0, #10]
900179fe:	005b      	lsls	r3, r3, #1
90017a00:	f403 7380 	and.w	r3, r3, #256	; 0x100
90017a04:	4313      	orrs	r3, r2
90017a06:	8423      	strh	r3, [r4, #32]
90017a08:	7a63      	ldrb	r3, [r4, #9]
90017a0a:	2b06      	cmp	r3, #6
90017a0c:	d10f      	bne.n	90017a2e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
90017a0e:	68e0      	ldr	r0, [r4, #12]
90017a10:	462a      	mov	r2, r5
90017a12:	4631      	mov	r1, r6
90017a14:	6803      	ldr	r3, [r0, #0]
90017a16:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90017a18:	4798      	blx	r3
90017a1a:	7b6b      	ldrb	r3, [r5, #13]
90017a1c:	005b      	lsls	r3, r3, #1
90017a1e:	f403 7280 	and.w	r2, r3, #256	; 0x100
90017a22:	7aab      	ldrb	r3, [r5, #10]
90017a24:	4313      	orrs	r3, r2
90017a26:	4418      	add	r0, r3
90017a28:	8c23      	ldrh	r3, [r4, #32]
90017a2a:	4418      	add	r0, r3
90017a2c:	8420      	strh	r0, [r4, #32]
90017a2e:	4620      	mov	r0, r4
90017a30:	bd70      	pop	{r4, r5, r6, pc}

90017a32 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
90017a32:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90017a36:	2400      	movs	r4, #0
90017a38:	b085      	sub	sp, #20
90017a3a:	4681      	mov	r9, r0
90017a3c:	4688      	mov	r8, r1
90017a3e:	4692      	mov	sl, r2
90017a40:	469b      	mov	fp, r3
90017a42:	4627      	mov	r7, r4
90017a44:	4625      	mov	r5, r4
90017a46:	4626      	mov	r6, r4
90017a48:	4554      	cmp	r4, sl
90017a4a:	da2a      	bge.n	90017aa2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
90017a4c:	2300      	movs	r3, #0
90017a4e:	9303      	str	r3, [sp, #12]
90017a50:	f64f 63ff 	movw	r3, #65279	; 0xfeff
90017a54:	429d      	cmp	r5, r3
90017a56:	d004      	beq.n	90017a62 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
90017a58:	f242 030b 	movw	r3, #8203	; 0x200b
90017a5c:	429d      	cmp	r5, r3
90017a5e:	bf18      	it	ne
90017a60:	462f      	movne	r7, r5
90017a62:	ab03      	add	r3, sp, #12
90017a64:	4642      	mov	r2, r8
90017a66:	4659      	mov	r1, fp
90017a68:	4648      	mov	r0, r9
90017a6a:	f003 f89f 	bl	9001abac <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
90017a6e:	4605      	mov	r5, r0
90017a70:	b1b8      	cbz	r0, 90017aa2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
90017a72:	280a      	cmp	r0, #10
90017a74:	d015      	beq.n	90017aa2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
90017a76:	9a03      	ldr	r2, [sp, #12]
90017a78:	b18a      	cbz	r2, 90017a9e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
90017a7a:	7b50      	ldrb	r0, [r2, #13]
90017a7c:	4639      	mov	r1, r7
90017a7e:	7a93      	ldrb	r3, [r2, #10]
90017a80:	0040      	lsls	r0, r0, #1
90017a82:	8895      	ldrh	r5, [r2, #4]
90017a84:	f400 7080 	and.w	r0, r0, #256	; 0x100
90017a88:	4303      	orrs	r3, r0
90017a8a:	4640      	mov	r0, r8
90017a8c:	9301      	str	r3, [sp, #4]
90017a8e:	f8d8 3000 	ldr.w	r3, [r8]
90017a92:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90017a94:	4798      	blx	r3
90017a96:	9b01      	ldr	r3, [sp, #4]
90017a98:	4418      	add	r0, r3
90017a9a:	4406      	add	r6, r0
90017a9c:	b2b6      	uxth	r6, r6
90017a9e:	3401      	adds	r4, #1
90017aa0:	e7d2      	b.n	90017a48 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
90017aa2:	4630      	mov	r0, r6
90017aa4:	b005      	add	sp, #20
90017aa6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90017aaa <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
90017aaa:	2a02      	cmp	r2, #2
90017aac:	b530      	push	{r4, r5, lr}
90017aae:	d011      	beq.n	90017ad4 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
90017ab0:	2a03      	cmp	r2, #3
90017ab2:	d01c      	beq.n	90017aee <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
90017ab4:	2a01      	cmp	r2, #1
90017ab6:	d10c      	bne.n	90017ad2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
90017ab8:	888b      	ldrh	r3, [r1, #4]
90017aba:	8801      	ldrh	r1, [r0, #0]
90017abc:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
90017ac0:	1a5b      	subs	r3, r3, r1
90017ac2:	8844      	ldrh	r4, [r0, #2]
90017ac4:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
90017ac8:	1a9b      	subs	r3, r3, r2
90017aca:	8004      	strh	r4, [r0, #0]
90017acc:	8081      	strh	r1, [r0, #4]
90017ace:	8043      	strh	r3, [r0, #2]
90017ad0:	80c2      	strh	r2, [r0, #6]
90017ad2:	bd30      	pop	{r4, r5, pc}
90017ad4:	88cb      	ldrh	r3, [r1, #6]
90017ad6:	8842      	ldrh	r2, [r0, #2]
90017ad8:	1a9b      	subs	r3, r3, r2
90017ada:	88c2      	ldrh	r2, [r0, #6]
90017adc:	1a9b      	subs	r3, r3, r2
90017ade:	888a      	ldrh	r2, [r1, #4]
90017ae0:	8801      	ldrh	r1, [r0, #0]
90017ae2:	8043      	strh	r3, [r0, #2]
90017ae4:	1a52      	subs	r2, r2, r1
90017ae6:	8881      	ldrh	r1, [r0, #4]
90017ae8:	1a52      	subs	r2, r2, r1
90017aea:	8002      	strh	r2, [r0, #0]
90017aec:	e7f1      	b.n	90017ad2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
90017aee:	88cb      	ldrh	r3, [r1, #6]
90017af0:	8841      	ldrh	r1, [r0, #2]
90017af2:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
90017af6:	1a5b      	subs	r3, r3, r1
90017af8:	f9b0 5000 	ldrsh.w	r5, [r0]
90017afc:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
90017b00:	1a9b      	subs	r3, r3, r2
90017b02:	8045      	strh	r5, [r0, #2]
90017b04:	8082      	strh	r2, [r0, #4]
90017b06:	8003      	strh	r3, [r0, #0]
90017b08:	80c4      	strh	r4, [r0, #6]
90017b0a:	e7e2      	b.n	90017ad2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

90017b0c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
90017b0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90017b10:	b09f      	sub	sp, #124	; 0x7c
90017b12:	920f      	str	r2, [sp, #60]	; 0x3c
90017b14:	9312      	str	r3, [sp, #72]	; 0x48
90017b16:	9a29      	ldr	r2, [sp, #164]	; 0xa4
90017b18:	9b29      	ldr	r3, [sp, #164]	; 0xa4
90017b1a:	8812      	ldrh	r2, [r2, #0]
90017b1c:	889b      	ldrh	r3, [r3, #4]
90017b1e:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
90017b20:	4413      	add	r3, r2
90017b22:	900e      	str	r0, [sp, #56]	; 0x38
90017b24:	6828      	ldr	r0, [r5, #0]
90017b26:	b21b      	sxth	r3, r3
90017b28:	9117      	str	r1, [sp, #92]	; 0x5c
90017b2a:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
90017b2e:	9311      	str	r3, [sp, #68]	; 0x44
90017b30:	6803      	ldr	r3, [r0, #0]
90017b32:	f89d 40b8 	ldrb.w	r4, [sp, #184]	; 0xb8
90017b36:	6d5b      	ldr	r3, [r3, #84]	; 0x54
90017b38:	4798      	blx	r3
90017b3a:	682b      	ldr	r3, [r5, #0]
90017b3c:	9013      	str	r0, [sp, #76]	; 0x4c
90017b3e:	7b1a      	ldrb	r2, [r3, #12]
90017b40:	7adb      	ldrb	r3, [r3, #11]
90017b42:	9215      	str	r2, [sp, #84]	; 0x54
90017b44:	9316      	str	r3, [sp, #88]	; 0x58
90017b46:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	; 0xa0
90017b4a:	2c00      	cmp	r4, #0
90017b4c:	d067      	beq.n	90017c1e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
90017b4e:	7c2b      	ldrb	r3, [r5, #16]
90017b50:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
90017b52:	2b06      	cmp	r3, #6
90017b54:	bf14      	ite	ne
90017b56:	2301      	movne	r3, #1
90017b58:	2302      	moveq	r3, #2
90017b5a:	4413      	add	r3, r2
90017b5c:	f04f 0900 	mov.w	r9, #0
90017b60:	9310      	str	r3, [sp, #64]	; 0x40
90017b62:	464c      	mov	r4, r9
90017b64:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
90017b68:	f8cd 9030 	str.w	r9, [sp, #48]	; 0x30
90017b6c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90017b6e:	9a10      	ldr	r2, [sp, #64]	; 0x40
90017b70:	4293      	cmp	r3, r2
90017b72:	f280 808b 	bge.w	90017c8c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
90017b76:	2300      	movs	r3, #0
90017b78:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
90017b7c:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
90017b80:	f64f 63ff 	movw	r3, #65279	; 0xfeff
90017b84:	429c      	cmp	r4, r3
90017b86:	d006      	beq.n	90017b96 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x8a>
90017b88:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90017b8a:	f242 020b 	movw	r2, #8203	; 0x200b
90017b8e:	4294      	cmp	r4, r2
90017b90:	bf18      	it	ne
90017b92:	4623      	movne	r3, r4
90017b94:	930c      	str	r3, [sp, #48]	; 0x30
90017b96:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90017b98:	992d      	ldr	r1, [sp, #180]	; 0xb4
90017b9a:	682a      	ldr	r2, [r5, #0]
90017b9c:	428b      	cmp	r3, r1
90017b9e:	db40      	blt.n	90017c22 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
90017ba0:	6813      	ldr	r3, [r2, #0]
90017ba2:	4610      	mov	r0, r2
90017ba4:	695b      	ldr	r3, [r3, #20]
90017ba6:	4798      	blx	r3
90017ba8:	4604      	mov	r4, r0
90017baa:	6828      	ldr	r0, [r5, #0]
90017bac:	aa1d      	add	r2, sp, #116	; 0x74
90017bae:	4621      	mov	r1, r4
90017bb0:	6803      	ldr	r3, [r0, #0]
90017bb2:	689f      	ldr	r7, [r3, #8]
90017bb4:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
90017bb8:	47b8      	blx	r7
90017bba:	901c      	str	r0, [sp, #112]	; 0x70
90017bbc:	f64f 63ff 	movw	r3, #65279	; 0xfeff
90017bc0:	429c      	cmp	r4, r3
90017bc2:	f000 80eb 	beq.w	90017d9c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90017bc6:	f242 030b 	movw	r3, #8203	; 0x200b
90017bca:	429c      	cmp	r4, r3
90017bcc:	f000 80e6 	beq.w	90017d9c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90017bd0:	2c00      	cmp	r4, #0
90017bd2:	f000 810d 	beq.w	90017df0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e4>
90017bd6:	2c0a      	cmp	r4, #10
90017bd8:	d05e      	beq.n	90017c98 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
90017bda:	9a1c      	ldr	r2, [sp, #112]	; 0x70
90017bdc:	b36a      	cbz	r2, 90017c3a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
90017bde:	8894      	ldrh	r4, [r2, #4]
90017be0:	f1bb 0f00 	cmp.w	fp, #0
90017be4:	d03a      	beq.n	90017c5c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x150>
90017be6:	f892 900d 	ldrb.w	r9, [r2, #13]
90017bea:	f1bb 0f01 	cmp.w	fp, #1
90017bee:	ea4f 0949 	mov.w	r9, r9, lsl #1
90017bf2:	f409 7380 	and.w	r3, r9, #256	; 0x100
90017bf6:	f892 900a 	ldrb.w	r9, [r2, #10]
90017bfa:	ea49 0903 	orr.w	r9, r9, r3
90017bfe:	d133      	bne.n	90017c68 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15c>
90017c00:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90017c02:	eba6 0609 	sub.w	r6, r6, r9
90017c06:	2b00      	cmp	r3, #0
90017c08:	d14d      	bne.n	90017ca6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
90017c0a:	9a15      	ldr	r2, [sp, #84]	; 0x54
90017c0c:	eb09 0306 	add.w	r3, r9, r6
90017c10:	4413      	add	r3, r2
90017c12:	9a29      	ldr	r2, [sp, #164]	; 0xa4
90017c14:	f9b2 2000 	ldrsh.w	r2, [r2]
90017c18:	4293      	cmp	r3, r2
90017c1a:	da4e      	bge.n	90017cba <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
90017c1c:	e036      	b.n	90017c8c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
90017c1e:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
90017c20:	e79c      	b.n	90017b5c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x50>
90017c22:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
90017c26:	4659      	mov	r1, fp
90017c28:	982c      	ldr	r0, [sp, #176]	; 0xb0
90017c2a:	9301      	str	r3, [sp, #4]
90017c2c:	ab1d      	add	r3, sp, #116	; 0x74
90017c2e:	9300      	str	r3, [sp, #0]
90017c30:	ab1c      	add	r3, sp, #112	; 0x70
90017c32:	f003 f804 	bl	9001ac3e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
90017c36:	4604      	mov	r4, r0
90017c38:	e7c0      	b.n	90017bbc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
90017c3a:	6828      	ldr	r0, [r5, #0]
90017c3c:	6803      	ldr	r3, [r0, #0]
90017c3e:	691b      	ldr	r3, [r3, #16]
90017c40:	4798      	blx	r3
90017c42:	f64f 63ff 	movw	r3, #65279	; 0xfeff
90017c46:	4298      	cmp	r0, r3
90017c48:	f000 80a8 	beq.w	90017d9c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90017c4c:	f242 030b 	movw	r3, #8203	; 0x200b
90017c50:	4298      	cmp	r0, r3
90017c52:	f000 80a3 	beq.w	90017d9c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90017c56:	f1bb 0f00 	cmp.w	fp, #0
90017c5a:	d100      	bne.n	90017c5e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
90017c5c:	444e      	add	r6, r9
90017c5e:	9a1c      	ldr	r2, [sp, #112]	; 0x70
90017c60:	2a00      	cmp	r2, #0
90017c62:	d1c0      	bne.n	90017be6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
90017c64:	4691      	mov	r9, r2
90017c66:	e099      	b.n	90017d9c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90017c68:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90017c6a:	2b00      	cmp	r3, #0
90017c6c:	f000 80c2 	beq.w	90017df4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e8>
90017c70:	f1bb 0f00 	cmp.w	fp, #0
90017c74:	d117      	bne.n	90017ca6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
90017c76:	6828      	ldr	r0, [r5, #0]
90017c78:	990c      	ldr	r1, [sp, #48]	; 0x30
90017c7a:	6803      	ldr	r3, [r0, #0]
90017c7c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90017c7e:	4798      	blx	r3
90017c80:	4406      	add	r6, r0
90017c82:	9b16      	ldr	r3, [sp, #88]	; 0x58
90017c84:	9a11      	ldr	r2, [sp, #68]	; 0x44
90017c86:	1af3      	subs	r3, r6, r3
90017c88:	4293      	cmp	r3, r2
90017c8a:	dd16      	ble.n	90017cba <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
90017c8c:	2c00      	cmp	r4, #0
90017c8e:	f000 80af 	beq.w	90017df0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e4>
90017c92:	2c0a      	cmp	r4, #10
90017c94:	f040 809d 	bne.w	90017dd2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c6>
90017c98:	240a      	movs	r4, #10
90017c9a:	fab4 f084 	clz	r0, r4
90017c9e:	0940      	lsrs	r0, r0, #5
90017ca0:	b01f      	add	sp, #124	; 0x7c
90017ca2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90017ca6:	6828      	ldr	r0, [r5, #0]
90017ca8:	990c      	ldr	r1, [sp, #48]	; 0x30
90017caa:	6803      	ldr	r3, [r0, #0]
90017cac:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90017cae:	4798      	blx	r3
90017cb0:	f1bb 0f01 	cmp.w	fp, #1
90017cb4:	eba6 0600 	sub.w	r6, r6, r0
90017cb8:	d0a7      	beq.n	90017c0a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
90017cba:	981c      	ldr	r0, [sp, #112]	; 0x70
90017cbc:	9b29      	ldr	r3, [sp, #164]	; 0xa4
90017cbe:	f990 1009 	ldrsb.w	r1, [r0, #9]
90017cc2:	f9b3 8000 	ldrsh.w	r8, [r3]
90017cc6:	7b43      	ldrb	r3, [r0, #13]
90017cc8:	4431      	add	r1, r6
90017cca:	015b      	lsls	r3, r3, #5
90017ccc:	f403 7280 	and.w	r2, r3, #256	; 0x100
90017cd0:	7983      	ldrb	r3, [r0, #6]
90017cd2:	4313      	orrs	r3, r2
90017cd4:	440b      	add	r3, r1
90017cd6:	4543      	cmp	r3, r8
90017cd8:	db60      	blt.n	90017d9c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90017cda:	9b11      	ldr	r3, [sp, #68]	; 0x44
90017cdc:	4299      	cmp	r1, r3
90017cde:	da5d      	bge.n	90017d9c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90017ce0:	6828      	ldr	r0, [r5, #0]
90017ce2:	45b0      	cmp	r8, r6
90017ce4:	6803      	ldr	r3, [r0, #0]
90017ce6:	bfcc      	ite	gt
90017ce8:	eba8 0806 	subgt.w	r8, r8, r6
90017cec:	f04f 0800 	movle.w	r8, #0
90017cf0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90017cf2:	bfc8      	it	gt
90017cf4:	fa1f f888 	uxthgt.w	r8, r8
90017cf8:	4798      	blx	r3
90017cfa:	9a1c      	ldr	r2, [sp, #112]	; 0x70
90017cfc:	7b53      	ldrb	r3, [r2, #13]
90017cfe:	00d9      	lsls	r1, r3, #3
90017d00:	f401 7780 	and.w	r7, r1, #256	; 0x100
90017d04:	7a11      	ldrb	r1, [r2, #8]
90017d06:	4339      	orrs	r1, r7
90017d08:	065f      	lsls	r7, r3, #25
90017d0a:	9f12      	ldr	r7, [sp, #72]	; 0x48
90017d0c:	bf48      	it	mi
90017d0e:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
90017d12:	4407      	add	r7, r0
90017d14:	bf48      	it	mi
90017d16:	b209      	sxthmi	r1, r1
90017d18:	1a7f      	subs	r7, r7, r1
90017d1a:	9929      	ldr	r1, [sp, #164]	; 0xa4
90017d1c:	b2bf      	uxth	r7, r7
90017d1e:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
90017d22:	fa0f fa87 	sxth.w	sl, r7
90017d26:	4551      	cmp	r1, sl
90017d28:	dd3c      	ble.n	90017da4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
90017d2a:	011b      	lsls	r3, r3, #4
90017d2c:	79d0      	ldrb	r0, [r2, #7]
90017d2e:	f403 7380 	and.w	r3, r3, #256	; 0x100
90017d32:	4303      	orrs	r3, r0
90017d34:	449a      	add	sl, r3
90017d36:	4551      	cmp	r1, sl
90017d38:	dc30      	bgt.n	90017d9c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90017d3a:	1bcf      	subs	r7, r1, r7
90017d3c:	468a      	mov	sl, r1
90017d3e:	b23f      	sxth	r7, r7
90017d40:	9219      	str	r2, [sp, #100]	; 0x64
90017d42:	9a13      	ldr	r2, [sp, #76]	; 0x4c
90017d44:	9b1d      	ldr	r3, [sp, #116]	; 0x74
90017d46:	6828      	ldr	r0, [r5, #0]
90017d48:	2a00      	cmp	r2, #0
90017d4a:	d12d      	bne.n	90017da8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29c>
90017d4c:	9318      	str	r3, [sp, #96]	; 0x60
90017d4e:	b2bf      	uxth	r7, r7
90017d50:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90017d52:	6819      	ldr	r1, [r3, #0]
90017d54:	6ccb      	ldr	r3, [r1, #76]	; 0x4c
90017d56:	6801      	ldr	r1, [r0, #0]
90017d58:	9314      	str	r3, [sp, #80]	; 0x50
90017d5a:	6c09      	ldr	r1, [r1, #64]	; 0x40
90017d5c:	4788      	blx	r1
90017d5e:	79a9      	ldrb	r1, [r5, #6]
90017d60:	9b18      	ldr	r3, [sp, #96]	; 0x60
90017d62:	910b      	str	r1, [sp, #44]	; 0x2c
90017d64:	7ba9      	ldrb	r1, [r5, #14]
90017d66:	9a19      	ldr	r2, [sp, #100]	; 0x64
90017d68:	910a      	str	r1, [sp, #40]	; 0x28
90017d6a:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
90017d6e:	9109      	str	r1, [sp, #36]	; 0x24
90017d70:	68a9      	ldr	r1, [r5, #8]
90017d72:	9306      	str	r3, [sp, #24]
90017d74:	9b29      	ldr	r3, [sp, #164]	; 0xa4
90017d76:	9205      	str	r2, [sp, #20]
90017d78:	9304      	str	r3, [sp, #16]
90017d7a:	f8cd a004 	str.w	sl, [sp, #4]
90017d7e:	e9cd 8702 	strd	r8, r7, [sp, #8]
90017d82:	44b0      	add	r8, r6
90017d84:	9f14      	ldr	r7, [sp, #80]	; 0x50
90017d86:	fa0f f388 	sxth.w	r3, r8
90017d8a:	9300      	str	r3, [sp, #0]
90017d8c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90017d8e:	e9cd 0107 	strd	r0, r1, [sp, #28]
90017d92:	9917      	ldr	r1, [sp, #92]	; 0x5c
90017d94:	681a      	ldr	r2, [r3, #0]
90017d96:	980e      	ldr	r0, [sp, #56]	; 0x38
90017d98:	685b      	ldr	r3, [r3, #4]
90017d9a:	47b8      	blx	r7
90017d9c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90017d9e:	3301      	adds	r3, #1
90017da0:	930d      	str	r3, [sp, #52]	; 0x34
90017da2:	e6e3      	b.n	90017b6c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x60>
90017da4:	2700      	movs	r7, #0
90017da6:	e7cb      	b.n	90017d40 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
90017da8:	9a0e      	ldr	r2, [sp, #56]	; 0x38
90017daa:	f8d2 c008 	ldr.w	ip, [r2, #8]
90017dae:	9a12      	ldr	r2, [sp, #72]	; 0x48
90017db0:	f8dc 1000 	ldr.w	r1, [ip]
90017db4:	e9cd 6204 	strd	r6, r2, [sp, #16]
90017db8:	79aa      	ldrb	r2, [r5, #6]
90017dba:	9203      	str	r2, [sp, #12]
90017dbc:	7baa      	ldrb	r2, [r5, #14]
90017dbe:	9202      	str	r2, [sp, #8]
90017dc0:	68aa      	ldr	r2, [r5, #8]
90017dc2:	e9cd 0200 	strd	r0, r2, [sp]
90017dc6:	9a29      	ldr	r2, [sp, #164]	; 0xa4
90017dc8:	4660      	mov	r0, ip
90017dca:	688f      	ldr	r7, [r1, #8]
90017dcc:	990f      	ldr	r1, [sp, #60]	; 0x3c
90017dce:	47b8      	blx	r7
90017dd0:	e7e4      	b.n	90017d9c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90017dd2:	9d0d      	ldr	r5, [sp, #52]	; 0x34
90017dd4:	3501      	adds	r5, #1
90017dd6:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
90017dd8:	429d      	cmp	r5, r3
90017dda:	f6bf af5e 	bge.w	90017c9a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
90017dde:	4659      	mov	r1, fp
90017de0:	982c      	ldr	r0, [sp, #176]	; 0xb0
90017de2:	f7ee fdef 	bl	900069c4 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
90017de6:	4604      	mov	r4, r0
90017de8:	b110      	cbz	r0, 90017df0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e4>
90017dea:	280a      	cmp	r0, #10
90017dec:	d1f2      	bne.n	90017dd4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c8>
90017dee:	e753      	b.n	90017c98 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
90017df0:	2400      	movs	r4, #0
90017df2:	e752      	b.n	90017c9a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
90017df4:	f1bb 0f00 	cmp.w	fp, #0
90017df8:	f43f af43 	beq.w	90017c82 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
90017dfc:	e75d      	b.n	90017cba <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>

90017dfe <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
90017dfe:	b530      	push	{r4, r5, lr}
90017e00:	8ac4      	ldrh	r4, [r0, #22]
90017e02:	8b45      	ldrh	r5, [r0, #26]
90017e04:	8343      	strh	r3, [r0, #26]
90017e06:	442c      	add	r4, r5
90017e08:	1ae4      	subs	r4, r4, r3
90017e0a:	8b83      	ldrh	r3, [r0, #28]
90017e0c:	82c4      	strh	r4, [r0, #22]
90017e0e:	8b04      	ldrh	r4, [r0, #24]
90017e10:	4422      	add	r2, r4
90017e12:	440c      	add	r4, r1
90017e14:	1a59      	subs	r1, r3, r1
90017e16:	83c2      	strh	r2, [r0, #30]
90017e18:	8304      	strh	r4, [r0, #24]
90017e1a:	8381      	strh	r1, [r0, #28]
90017e1c:	bd30      	pop	{r4, r5, pc}

90017e1e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
90017e1e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90017e22:	4604      	mov	r4, r0
90017e24:	8a47      	ldrh	r7, [r0, #18]
90017e26:	68c0      	ldr	r0, [r0, #12]
90017e28:	b085      	sub	sp, #20
90017e2a:	6803      	ldr	r3, [r0, #0]
90017e2c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90017e2e:	4798      	blx	r3
90017e30:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
90017e34:	7a63      	ldrb	r3, [r4, #9]
90017e36:	eb06 0640 	add.w	r6, r6, r0, lsl #1
90017e3a:	3b01      	subs	r3, #1
90017e3c:	42b7      	cmp	r7, r6
90017e3e:	bfac      	ite	ge
90017e40:	f04f 0900 	movge.w	r9, #0
90017e44:	f04f 0901 	movlt.w	r9, #1
90017e48:	2b05      	cmp	r3, #5
90017e4a:	d804      	bhi.n	90017e56 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x38>
90017e4c:	e8df f003 	tbb	[pc, r3]
90017e50:	470f0854 	.word	0x470f0854
90017e54:	4c4c      	.short	0x4c4c
90017e56:	2500      	movs	r5, #0
90017e58:	46a9      	mov	r9, r5
90017e5a:	462e      	mov	r6, r5
90017e5c:	462f      	mov	r7, r5
90017e5e:	e00e      	b.n	90017e7e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
90017e60:	42b7      	cmp	r7, r6
90017e62:	f04f 0500 	mov.w	r5, #0
90017e66:	bfb4      	ite	lt
90017e68:	2600      	movlt	r6, #0
90017e6a:	2601      	movge	r6, #1
90017e6c:	e7f6      	b.n	90017e5c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
90017e6e:	42b7      	cmp	r7, r6
90017e70:	464d      	mov	r5, r9
90017e72:	f04f 0900 	mov.w	r9, #0
90017e76:	bfb4      	ite	lt
90017e78:	2600      	movlt	r6, #0
90017e7a:	2601      	movge	r6, #1
90017e7c:	464f      	mov	r7, r9
90017e7e:	f04f 0800 	mov.w	r8, #0
90017e82:	f8a4 8016 	strh.w	r8, [r4, #22]
90017e86:	f8a4 8018 	strh.w	r8, [r4, #24]
90017e8a:	f8cd 8004 	str.w	r8, [sp, #4]
90017e8e:	2300      	movs	r3, #0
90017e90:	9303      	str	r3, [sp, #12]
90017e92:	8823      	ldrh	r3, [r4, #0]
90017e94:	2b20      	cmp	r3, #32
90017e96:	d033      	beq.n	90017f00 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe2>
90017e98:	f242 010b 	movw	r1, #8203	; 0x200b
90017e9c:	1a5a      	subs	r2, r3, r1
90017e9e:	f1d2 0a00 	rsbs	sl, r2, #0
90017ea2:	eb4a 0a02 	adc.w	sl, sl, r2
90017ea6:	f64f 62ff 	movw	r2, #65279	; 0xfeff
90017eaa:	4293      	cmp	r3, r2
90017eac:	d008      	beq.n	90017ec0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
90017eae:	428b      	cmp	r3, r1
90017eb0:	9a01      	ldr	r2, [sp, #4]
90017eb2:	bf0e      	itee	eq
90017eb4:	f04f 0a01 	moveq.w	sl, #1
90017eb8:	461a      	movne	r2, r3
90017eba:	f04f 0a00 	movne.w	sl, #0
90017ebe:	9201      	str	r2, [sp, #4]
90017ec0:	ab03      	add	r3, sp, #12
90017ec2:	68e2      	ldr	r2, [r4, #12]
90017ec4:	7a21      	ldrb	r1, [r4, #8]
90017ec6:	6860      	ldr	r0, [r4, #4]
90017ec8:	f002 fe70 	bl	9001abac <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
90017ecc:	8020      	strh	r0, [r4, #0]
90017ece:	b9d8      	cbnz	r0, 90017f08 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xea>
90017ed0:	8ba2      	ldrh	r2, [r4, #28]
90017ed2:	2300      	movs	r3, #0
90017ed4:	4611      	mov	r1, r2
90017ed6:	4620      	mov	r0, r4
90017ed8:	f7ff ff91 	bl	90017dfe <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
90017edc:	e06e      	b.n	90017fbc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
90017ede:	2500      	movs	r5, #0
90017ee0:	2701      	movs	r7, #1
90017ee2:	46a9      	mov	r9, r5
90017ee4:	462e      	mov	r6, r5
90017ee6:	e7ca      	b.n	90017e7e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
90017ee8:	42b7      	cmp	r7, r6
90017eea:	f04f 0500 	mov.w	r5, #0
90017eee:	bfb4      	ite	lt
90017ef0:	2700      	movlt	r7, #0
90017ef2:	2701      	movge	r7, #1
90017ef4:	462e      	mov	r6, r5
90017ef6:	e7c2      	b.n	90017e7e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
90017ef8:	2500      	movs	r5, #0
90017efa:	2601      	movs	r6, #1
90017efc:	46a9      	mov	r9, r5
90017efe:	e7ad      	b.n	90017e5c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
90017f00:	9301      	str	r3, [sp, #4]
90017f02:	f04f 0a01 	mov.w	sl, #1
90017f06:	e7db      	b.n	90017ec0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
90017f08:	8b63      	ldrh	r3, [r4, #26]
90017f0a:	280a      	cmp	r0, #10
90017f0c:	f103 0301 	add.w	r3, r3, #1
90017f10:	8363      	strh	r3, [r4, #26]
90017f12:	d0dd      	beq.n	90017ed0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb2>
90017f14:	9a03      	ldr	r2, [sp, #12]
90017f16:	bb62      	cbnz	r2, 90017f72 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x154>
90017f18:	f64f 63ff 	movw	r3, #65279	; 0xfeff
90017f1c:	4298      	cmp	r0, r3
90017f1e:	d003      	beq.n	90017f28 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
90017f20:	f242 030b 	movw	r3, #8203	; 0x200b
90017f24:	4298      	cmp	r0, r3
90017f26:	d1b2      	bne.n	90017e8e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90017f28:	8823      	ldrh	r3, [r4, #0]
90017f2a:	8ba1      	ldrh	r1, [r4, #28]
90017f2c:	2b20      	cmp	r3, #32
90017f2e:	d003      	beq.n	90017f38 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11a>
90017f30:	f242 000b 	movw	r0, #8203	; 0x200b
90017f34:	4283      	cmp	r3, r0
90017f36:	d131      	bne.n	90017f9c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x17e>
90017f38:	f1ba 0f00 	cmp.w	sl, #0
90017f3c:	bf0a      	itet	eq
90017f3e:	4688      	moveq	r8, r1
90017f40:	4650      	movne	r0, sl
90017f42:	2001      	moveq	r0, #1
90017f44:	440a      	add	r2, r1
90017f46:	8b23      	ldrh	r3, [r4, #24]
90017f48:	f8b4 c010 	ldrh.w	ip, [r4, #16]
90017f4c:	b292      	uxth	r2, r2
90017f4e:	83a2      	strh	r2, [r4, #28]
90017f50:	4413      	add	r3, r2
90017f52:	f1b9 0f00 	cmp.w	r9, #0
90017f56:	d102      	bne.n	90017f5e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x140>
90017f58:	2d00      	cmp	r5, #0
90017f5a:	d042      	beq.n	90017fe2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c4>
90017f5c:	b300      	cbz	r0, 90017fa0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x182>
90017f5e:	8c21      	ldrh	r1, [r4, #32]
90017f60:	4419      	add	r1, r3
90017f62:	458c      	cmp	ip, r1
90017f64:	da37      	bge.n	90017fd6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
90017f66:	8ae1      	ldrh	r1, [r4, #22]
90017f68:	2900      	cmp	r1, #0
90017f6a:	d034      	beq.n	90017fd6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
90017f6c:	4563      	cmp	r3, ip
90017f6e:	dd8e      	ble.n	90017e8e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90017f70:	e01d      	b.n	90017fae <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x190>
90017f72:	8893      	ldrh	r3, [r2, #4]
90017f74:	9901      	ldr	r1, [sp, #4]
90017f76:	8023      	strh	r3, [r4, #0]
90017f78:	f892 b00d 	ldrb.w	fp, [r2, #13]
90017f7c:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
90017f80:	f40b 7080 	and.w	r0, fp, #256	; 0x100
90017f84:	f892 b00a 	ldrb.w	fp, [r2, #10]
90017f88:	ea4b 0b00 	orr.w	fp, fp, r0
90017f8c:	68e0      	ldr	r0, [r4, #12]
90017f8e:	6803      	ldr	r3, [r0, #0]
90017f90:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90017f92:	4798      	blx	r3
90017f94:	eb0b 0200 	add.w	r2, fp, r0
90017f98:	b292      	uxth	r2, r2
90017f9a:	e7c5      	b.n	90017f28 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
90017f9c:	2000      	movs	r0, #0
90017f9e:	e7d1      	b.n	90017f44 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x126>
90017fa0:	4563      	cmp	r3, ip
90017fa2:	f77f af74 	ble.w	90017e8e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90017fa6:	8ae3      	ldrh	r3, [r4, #22]
90017fa8:	2b00      	cmp	r3, #0
90017faa:	f43f af70 	beq.w	90017e8e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90017fae:	2301      	movs	r3, #1
90017fb0:	8c22      	ldrh	r2, [r4, #32]
90017fb2:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
90017fb6:	8be3      	ldrh	r3, [r4, #30]
90017fb8:	4413      	add	r3, r2
90017fba:	83e3      	strh	r3, [r4, #30]
90017fbc:	68e0      	ldr	r0, [r4, #12]
90017fbe:	6803      	ldr	r3, [r0, #0]
90017fc0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90017fc2:	4798      	blx	r3
90017fc4:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
90017fc8:	4418      	add	r0, r3
90017fca:	8a63      	ldrh	r3, [r4, #18]
90017fcc:	1a18      	subs	r0, r3, r0
90017fce:	8260      	strh	r0, [r4, #18]
90017fd0:	b005      	add	sp, #20
90017fd2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90017fd6:	2300      	movs	r3, #0
90017fd8:	4611      	mov	r1, r2
90017fda:	4620      	mov	r0, r4
90017fdc:	f7ff ff0f 	bl	90017dfe <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
90017fe0:	e755      	b.n	90017e8e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90017fe2:	4563      	cmp	r3, ip
90017fe4:	dd14      	ble.n	90018010 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f2>
90017fe6:	b117      	cbz	r7, 90017fee <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d0>
90017fe8:	2301      	movs	r3, #1
90017fea:	460a      	mov	r2, r1
90017fec:	e772      	b.n	90017ed4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb6>
90017fee:	2e00      	cmp	r6, #0
90017ff0:	f43f af4d 	beq.w	90017e8e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90017ff4:	2800      	cmp	r0, #0
90017ff6:	f47f af4a 	bne.w	90017e8e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90017ffa:	f1ba 0f00 	cmp.w	sl, #0
90017ffe:	d002      	beq.n	90018006 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1e8>
90018000:	2301      	movs	r3, #1
90018002:	4642      	mov	r2, r8
90018004:	e767      	b.n	90017ed6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
90018006:	8ae3      	ldrh	r3, [r4, #22]
90018008:	2b00      	cmp	r3, #0
9001800a:	f43f af40 	beq.w	90017e8e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
9001800e:	e7d5      	b.n	90017fbc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
90018010:	2800      	cmp	r0, #0
90018012:	f47f af3c 	bne.w	90017e8e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90018016:	f1ba 0f00 	cmp.w	sl, #0
9001801a:	f43f af38 	beq.w	90017e8e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
9001801e:	2301      	movs	r3, #1
90018020:	4642      	mov	r2, r8
90018022:	e7da      	b.n	90017fda <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1bc>

90018024 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
90018024:	b5f0      	push	{r4, r5, r6, r7, lr}
90018026:	4605      	mov	r5, r0
90018028:	b08f      	sub	sp, #60	; 0x3c
9001802a:	4617      	mov	r7, r2
9001802c:	461c      	mov	r4, r3
9001802e:	460e      	mov	r6, r1
90018030:	b1d1      	cbz	r1, 90018068 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
90018032:	681b      	ldr	r3, [r3, #0]
90018034:	4620      	mov	r0, r4
90018036:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90018038:	4798      	blx	r3
9001803a:	4240      	negs	r0, r0
9001803c:	9603      	str	r6, [sp, #12]
9001803e:	f64f 73ff 	movw	r3, #65535	; 0xffff
90018042:	b200      	sxth	r0, r0
90018044:	9700      	str	r7, [sp, #0]
90018046:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
9001804a:	4629      	mov	r1, r5
9001804c:	e9cd 4001 	strd	r4, r0, [sp, #4]
90018050:	2401      	movs	r4, #1
90018052:	a805      	add	r0, sp, #20
90018054:	f7ff fcaa 	bl	900179ac <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
90018058:	a805      	add	r0, sp, #20
9001805a:	f7ff fee0 	bl	90017e1e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
9001805e:	f8bd 3014 	ldrh.w	r3, [sp, #20]
90018062:	b163      	cbz	r3, 9001807e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
90018064:	3401      	adds	r4, #1
90018066:	e7f7      	b.n	90018058 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
90018068:	2401      	movs	r4, #1
9001806a:	f002 fe6b 	bl	9001ad44 <_ZN8touchgfx12TextProvider11getNextCharEv>
9001806e:	280a      	cmp	r0, #10
90018070:	4628      	mov	r0, r5
90018072:	bf08      	it	eq
90018074:	3401      	addeq	r4, #1
90018076:	f002 fe65 	bl	9001ad44 <_ZN8touchgfx12TextProvider11getNextCharEv>
9001807a:	2800      	cmp	r0, #0
9001807c:	d1f7      	bne.n	9001806e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
9001807e:	b2a0      	uxth	r0, r4
90018080:	b00f      	add	sp, #60	; 0x3c
90018082:	bdf0      	pop	{r4, r5, r6, r7, pc}

90018084 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
90018084:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90018088:	b0e3      	sub	sp, #396	; 0x18c
9001808a:	461c      	mov	r4, r3
9001808c:	4683      	mov	fp, r0
9001808e:	4688      	mov	r8, r1
90018090:	9b6c      	ldr	r3, [sp, #432]	; 0x1b0
90018092:	2b00      	cmp	r3, #0
90018094:	f000 8112 	beq.w	900182bc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90018098:	6823      	ldr	r3, [r4, #0]
9001809a:	2b00      	cmp	r3, #0
9001809c:	f000 810e 	beq.w	900182bc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
900180a0:	7ba3      	ldrb	r3, [r4, #14]
900180a2:	2b00      	cmp	r3, #0
900180a4:	f000 810a 	beq.w	900182bc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
900180a8:	ad0a      	add	r5, sp, #40	; 0x28
900180aa:	6810      	ldr	r0, [r2, #0]
900180ac:	6851      	ldr	r1, [r2, #4]
900180ae:	462b      	mov	r3, r5
900180b0:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
900180b4:	c303      	stmia	r3!, {r0, r1}
900180b6:	2100      	movs	r1, #0
900180b8:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
900180bc:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
900180c0:	4628      	mov	r0, r5
900180c2:	910c      	str	r1, [sp, #48]	; 0x30
900180c4:	a90c      	add	r1, sp, #48	; 0x30
900180c6:	79a2      	ldrb	r2, [r4, #6]
900180c8:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
900180cc:	f7ff fced 	bl	90017aaa <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
900180d0:	a90c      	add	r1, sp, #48	; 0x30
900180d2:	79a2      	ldrb	r2, [r4, #6]
900180d4:	4608      	mov	r0, r1
900180d6:	f7ff fce8 	bl	90017aaa <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
900180da:	a817      	add	r0, sp, #92	; 0x5c
900180dc:	f002 fa05 	bl	9001a4ea <_ZN8touchgfx12TextProviderC1Ev>
900180e0:	6820      	ldr	r0, [r4, #0]
900180e2:	6803      	ldr	r3, [r0, #0]
900180e4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
900180e6:	4798      	blx	r3
900180e8:	4606      	mov	r6, r0
900180ea:	6820      	ldr	r0, [r4, #0]
900180ec:	6803      	ldr	r3, [r0, #0]
900180ee:	6d1b      	ldr	r3, [r3, #80]	; 0x50
900180f0:	4798      	blx	r3
900180f2:	4633      	mov	r3, r6
900180f4:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
900180f6:	996c      	ldr	r1, [sp, #432]	; 0x1b0
900180f8:	9000      	str	r0, [sp, #0]
900180fa:	a817      	add	r0, sp, #92	; 0x5c
900180fc:	f002 fa50 	bl	9001a5a0 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90018100:	6820      	ldr	r0, [r4, #0]
90018102:	f894 a004 	ldrb.w	sl, [r4, #4]
90018106:	6803      	ldr	r3, [r0, #0]
90018108:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001810a:	4798      	blx	r3
9001810c:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
90018110:	6823      	ldr	r3, [r4, #0]
90018112:	4607      	mov	r7, r0
90018114:	4406      	add	r6, r0
90018116:	a830      	add	r0, sp, #192	; 0xc0
90018118:	f893 9009 	ldrb.w	r9, [r3, #9]
9001811c:	f002 f9e5 	bl	9001a4ea <_ZN8touchgfx12TextProviderC1Ev>
90018120:	7c23      	ldrb	r3, [r4, #16]
90018122:	b17b      	cbz	r3, 90018144 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
90018124:	6820      	ldr	r0, [r4, #0]
90018126:	6803      	ldr	r3, [r0, #0]
90018128:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
9001812a:	4798      	blx	r3
9001812c:	9009      	str	r0, [sp, #36]	; 0x24
9001812e:	6820      	ldr	r0, [r4, #0]
90018130:	6802      	ldr	r2, [r0, #0]
90018132:	6d12      	ldr	r2, [r2, #80]	; 0x50
90018134:	4790      	blx	r2
90018136:	9b09      	ldr	r3, [sp, #36]	; 0x24
90018138:	9000      	str	r0, [sp, #0]
9001813a:	a830      	add	r0, sp, #192	; 0xc0
9001813c:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
9001813e:	996c      	ldr	r1, [sp, #432]	; 0x1b0
90018140:	f002 fa2e 	bl	9001a5a0 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90018144:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
90018148:	a80e      	add	r0, sp, #56	; 0x38
9001814a:	7be2      	ldrb	r2, [r4, #15]
9001814c:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
90018150:	1a8a      	subs	r2, r1, r2
90018152:	7c21      	ldrb	r1, [r4, #16]
90018154:	9103      	str	r1, [sp, #12]
90018156:	b292      	uxth	r2, r2
90018158:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
9001815c:	9102      	str	r1, [sp, #8]
9001815e:	6821      	ldr	r1, [r4, #0]
90018160:	9101      	str	r1, [sp, #4]
90018162:	7961      	ldrb	r1, [r4, #5]
90018164:	9100      	str	r1, [sp, #0]
90018166:	a930      	add	r1, sp, #192	; 0xc0
90018168:	f7ff fc20 	bl	900179ac <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
9001816c:	2e00      	cmp	r6, #0
9001816e:	dc5b      	bgt.n	90018228 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
90018170:	af17      	add	r7, sp, #92	; 0x5c
90018172:	f04f 0900 	mov.w	r9, #0
90018176:	7c23      	ldrb	r3, [r4, #16]
90018178:	2b00      	cmp	r3, #0
9001817a:	f000 80b1 	beq.w	900182e0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
9001817e:	a80e      	add	r0, sp, #56	; 0x38
90018180:	f7ff fe4d 	bl	90017e1e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
90018184:	f1ba 0f00 	cmp.w	sl, #0
90018188:	f000 80a5 	beq.w	900182d6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
9001818c:	7c23      	ldrb	r3, [r4, #16]
9001818e:	2264      	movs	r2, #100	; 0x64
90018190:	4639      	mov	r1, r7
90018192:	a849      	add	r0, sp, #292	; 0x124
90018194:	9309      	str	r3, [sp, #36]	; 0x24
90018196:	f012 f94a 	bl	9002a42e <memcpy>
9001819a:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001819c:	2b00      	cmp	r3, #0
9001819e:	f000 80a7 	beq.w	900182f0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
900181a2:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
900181a6:	7922      	ldrb	r2, [r4, #4]
900181a8:	2a01      	cmp	r2, #1
900181aa:	f040 808a 	bne.w	900182c2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
900181ae:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	; 0x34
900181b2:	1ac0      	subs	r0, r0, r3
900181b4:	2302      	movs	r3, #2
900181b6:	fb90 f0f3 	sdiv	r0, r0, r3
900181ba:	b200      	sxth	r0, r0
900181bc:	7c23      	ldrb	r3, [r4, #16]
900181be:	2b00      	cmp	r3, #0
900181c0:	f000 808b 	beq.w	900182da <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
900181c4:	f8bd 204e 	ldrh.w	r2, [sp, #78]	; 0x4e
900181c8:	f89d 105a 	ldrb.w	r1, [sp, #90]	; 0x5a
900181cc:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
900181d0:	e9cd 2105 	strd	r2, r1, [sp, #20]
900181d4:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
900181d8:	2100      	movs	r1, #0
900181da:	4410      	add	r0, r2
900181dc:	4642      	mov	r2, r8
900181de:	b200      	sxth	r0, r0
900181e0:	e9cd 9703 	strd	r9, r7, [sp, #12]
900181e4:	9000      	str	r0, [sp, #0]
900181e6:	4658      	mov	r0, fp
900181e8:	e9cd 5401 	strd	r5, r4, [sp, #4]
900181ec:	f7ff fc8e 	bl	90017b0c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
900181f0:	2800      	cmp	r0, #0
900181f2:	d163      	bne.n	900182bc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
900181f4:	b2b2      	uxth	r2, r6
900181f6:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
900181fa:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
900181fe:	4413      	add	r3, r2
90018200:	1a8a      	subs	r2, r1, r2
90018202:	b21b      	sxth	r3, r3
90018204:	f8ad 2036 	strh.w	r2, [sp, #54]	; 0x36
90018208:	f89d 205a 	ldrb.w	r2, [sp, #90]	; 0x5a
9001820c:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
90018210:	2a00      	cmp	r2, #0
90018212:	d153      	bne.n	900182bc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90018214:	6822      	ldr	r2, [r4, #0]
90018216:	8869      	ldrh	r1, [r5, #2]
90018218:	7a12      	ldrb	r2, [r2, #8]
9001821a:	1a9b      	subs	r3, r3, r2
9001821c:	88ea      	ldrh	r2, [r5, #6]
9001821e:	440a      	add	r2, r1
90018220:	b212      	sxth	r2, r2
90018222:	4293      	cmp	r3, r2
90018224:	dda7      	ble.n	90018176 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
90018226:	e049      	b.n	900182bc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90018228:	7c23      	ldrb	r3, [r4, #16]
9001822a:	444f      	add	r7, r9
9001822c:	b1c3      	cbz	r3, 90018260 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
9001822e:	f64f 79ff 	movw	r9, #65535	; 0xffff
90018232:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
90018236:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
9001823a:	443b      	add	r3, r7
9001823c:	4293      	cmp	r3, r2
9001823e:	da97      	bge.n	90018170 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
90018240:	a80e      	add	r0, sp, #56	; 0x38
90018242:	f7ff fdec 	bl	90017e1e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
90018246:	f8bd 304e 	ldrh.w	r3, [sp, #78]	; 0x4e
9001824a:	3b01      	subs	r3, #1
9001824c:	b29b      	uxth	r3, r3
9001824e:	454b      	cmp	r3, r9
90018250:	9309      	str	r3, [sp, #36]	; 0x24
90018252:	d021      	beq.n	90018298 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
90018254:	7961      	ldrb	r1, [r4, #5]
90018256:	a817      	add	r0, sp, #92	; 0x5c
90018258:	f7ee fbb4 	bl	900069c4 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
9001825c:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001825e:	e7f4      	b.n	9001824a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
90018260:	fa1f f986 	uxth.w	r9, r6
90018264:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
90018268:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
9001826c:	443b      	add	r3, r7
9001826e:	4293      	cmp	r3, r2
90018270:	f6bf af7e 	bge.w	90018170 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
90018274:	a817      	add	r0, sp, #92	; 0x5c
90018276:	f002 fd65 	bl	9001ad44 <_ZN8touchgfx12TextProvider11getNextCharEv>
9001827a:	b1f8      	cbz	r0, 900182bc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
9001827c:	280a      	cmp	r0, #10
9001827e:	d1f1      	bne.n	90018264 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
90018280:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
90018284:	444b      	add	r3, r9
90018286:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
9001828a:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
9001828e:	eba3 0309 	sub.w	r3, r3, r9
90018292:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
90018296:	e7e5      	b.n	90018264 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
90018298:	b2b3      	uxth	r3, r6
9001829a:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
9001829e:	441a      	add	r2, r3
900182a0:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
900182a4:	f8bd 2036 	ldrh.w	r2, [sp, #54]	; 0x36
900182a8:	1ad3      	subs	r3, r2, r3
900182aa:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
900182ae:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
900182b2:	b11b      	cbz	r3, 900182bc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
900182b4:	f89d 305a 	ldrb.w	r3, [sp, #90]	; 0x5a
900182b8:	2b00      	cmp	r3, #0
900182ba:	d0ba      	beq.n	90018232 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
900182bc:	b063      	add	sp, #396	; 0x18c
900182be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900182c2:	2a02      	cmp	r2, #2
900182c4:	d105      	bne.n	900182d2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
900182c6:	7be2      	ldrb	r2, [r4, #15]
900182c8:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
900182cc:	1a80      	subs	r0, r0, r2
900182ce:	1ac0      	subs	r0, r0, r3
900182d0:	e773      	b.n	900181ba <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
900182d2:	2000      	movs	r0, #0
900182d4:	e772      	b.n	900181bc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
900182d6:	7be0      	ldrb	r0, [r4, #15]
900182d8:	e770      	b.n	900181bc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
900182da:	f647 72ff 	movw	r2, #32767	; 0x7fff
900182de:	e773      	b.n	900181c8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
900182e0:	f1ba 0f00 	cmp.w	sl, #0
900182e4:	d0f7      	beq.n	900182d6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
900182e6:	2264      	movs	r2, #100	; 0x64
900182e8:	4639      	mov	r1, r7
900182ea:	a849      	add	r0, sp, #292	; 0x124
900182ec:	f012 f89f 	bl	9002a42e <memcpy>
900182f0:	2300      	movs	r3, #0
900182f2:	f647 72ff 	movw	r2, #32767	; 0x7fff
900182f6:	6821      	ldr	r1, [r4, #0]
900182f8:	a849      	add	r0, sp, #292	; 0x124
900182fa:	f7ff fb9a 	bl	90017a32 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
900182fe:	b203      	sxth	r3, r0
90018300:	e751      	b.n	900181a6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

90018302 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
90018302:	2b03      	cmp	r3, #3
90018304:	d818      	bhi.n	90018338 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
90018306:	e8df f003 	tbb	[pc, r3]
9001830a:	0602      	.short	0x0602
9001830c:	130d      	.short	0x130d
9001830e:	f9b0 2000 	ldrsh.w	r2, [r0]
90018312:	1850      	adds	r0, r2, r1
90018314:	4770      	bx	lr
90018316:	8803      	ldrh	r3, [r0, #0]
90018318:	8880      	ldrh	r0, [r0, #4]
9001831a:	4418      	add	r0, r3
9001831c:	b200      	sxth	r0, r0
9001831e:	1a80      	subs	r0, r0, r2
90018320:	3801      	subs	r0, #1
90018322:	4770      	bx	lr
90018324:	8803      	ldrh	r3, [r0, #0]
90018326:	8880      	ldrh	r0, [r0, #4]
90018328:	4418      	add	r0, r3
9001832a:	b200      	sxth	r0, r0
9001832c:	1a40      	subs	r0, r0, r1
9001832e:	e7f7      	b.n	90018320 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
90018330:	f9b0 0000 	ldrsh.w	r0, [r0]
90018334:	4410      	add	r0, r2
90018336:	4770      	bx	lr
90018338:	2000      	movs	r0, #0
9001833a:	4770      	bx	lr

9001833c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
9001833c:	2b03      	cmp	r3, #3
9001833e:	d817      	bhi.n	90018370 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
90018340:	e8df f003 	tbb	[pc, r3]
90018344:	10090602 	.word	0x10090602
90018348:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
9001834c:	1850      	adds	r0, r2, r1
9001834e:	4770      	bx	lr
90018350:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
90018354:	e7fa      	b.n	9001834c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
90018356:	8843      	ldrh	r3, [r0, #2]
90018358:	88c0      	ldrh	r0, [r0, #6]
9001835a:	4418      	add	r0, r3
9001835c:	b200      	sxth	r0, r0
9001835e:	1a80      	subs	r0, r0, r2
90018360:	3801      	subs	r0, #1
90018362:	4770      	bx	lr
90018364:	8843      	ldrh	r3, [r0, #2]
90018366:	88c0      	ldrh	r0, [r0, #6]
90018368:	4418      	add	r0, r3
9001836a:	b200      	sxth	r0, r0
9001836c:	1a40      	subs	r0, r0, r1
9001836e:	e7f7      	b.n	90018360 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
90018370:	2000      	movs	r0, #0
90018372:	4770      	bx	lr

90018374 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
90018374:	4b01      	ldr	r3, [pc, #4]	; (9001837c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
90018376:	2200      	movs	r2, #0
90018378:	601a      	str	r2, [r3, #0]
9001837a:	4770      	bx	lr
9001837c:	240236dc 	.word	0x240236dc

90018380 <_ZN8touchgfx16TouchCalibration4clzuEm>:
90018380:	4603      	mov	r3, r0
90018382:	b1c8      	cbz	r0, 900183b8 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
90018384:	0c02      	lsrs	r2, r0, #16
90018386:	0412      	lsls	r2, r2, #16
90018388:	b9a2      	cbnz	r2, 900183b4 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
9001838a:	0403      	lsls	r3, r0, #16
9001838c:	2010      	movs	r0, #16
9001838e:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
90018392:	bf04      	itt	eq
90018394:	021b      	lsleq	r3, r3, #8
90018396:	3008      	addeq	r0, #8
90018398:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
9001839c:	bf04      	itt	eq
9001839e:	011b      	lsleq	r3, r3, #4
900183a0:	3004      	addeq	r0, #4
900183a2:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
900183a6:	bf04      	itt	eq
900183a8:	009b      	lsleq	r3, r3, #2
900183aa:	3002      	addeq	r0, #2
900183ac:	2b00      	cmp	r3, #0
900183ae:	db04      	blt.n	900183ba <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
900183b0:	3001      	adds	r0, #1
900183b2:	4770      	bx	lr
900183b4:	2000      	movs	r0, #0
900183b6:	e7ea      	b.n	9001838e <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
900183b8:	2020      	movs	r0, #32
900183ba:	4770      	bx	lr

900183bc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
900183bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900183c0:	b087      	sub	sp, #28
900183c2:	460d      	mov	r5, r1
900183c4:	4616      	mov	r6, r2
900183c6:	4698      	mov	r8, r3
900183c8:	4601      	mov	r1, r0
900183ca:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
900183ce:	b120      	cbz	r0, 900183da <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
900183d0:	b11a      	cbz	r2, 900183da <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
900183d2:	2d1f      	cmp	r5, #31
900183d4:	d801      	bhi.n	900183da <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
900183d6:	2b1f      	cmp	r3, #31
900183d8:	d904      	bls.n	900183e4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
900183da:	2000      	movs	r0, #0
900183dc:	6038      	str	r0, [r7, #0]
900183de:	b007      	add	sp, #28
900183e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900183e4:	b97d      	cbnz	r5, 90018406 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
900183e6:	b143      	cbz	r3, 900183fa <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
900183e8:	4602      	mov	r2, r0
900183ea:	462b      	mov	r3, r5
900183ec:	4641      	mov	r1, r8
900183ee:	4630      	mov	r0, r6
900183f0:	e9cd 4700 	strd	r4, r7, [sp]
900183f4:	f7ff ffe2 	bl	900183bc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
900183f8:	e7f1      	b.n	900183de <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
900183fa:	f04f 33ff 	mov.w	r3, #4294967295
900183fe:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
90018402:	603b      	str	r3, [r7, #0]
90018404:	e7eb      	b.n	900183de <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
90018406:	fa32 fa05 	lsrs.w	sl, r2, r5
9001840a:	d106      	bne.n	9001841a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
9001840c:	4346      	muls	r6, r0
9001840e:	fbb6 f0f4 	udiv	r0, r6, r4
90018412:	fb04 6610 	mls	r6, r4, r0, r6
90018416:	603e      	str	r6, [r7, #0]
90018418:	e7e1      	b.n	900183de <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
9001841a:	2201      	movs	r2, #1
9001841c:	fa00 fb05 	lsl.w	fp, r0, r5
90018420:	40aa      	lsls	r2, r5
90018422:	fbbb f9f4 	udiv	r9, fp, r4
90018426:	3a01      	subs	r2, #1
90018428:	fb0a f309 	mul.w	r3, sl, r9
9001842c:	fb04 b919 	mls	r9, r4, r9, fp
90018430:	4016      	ands	r6, r2
90018432:	9303      	str	r3, [sp, #12]
90018434:	4630      	mov	r0, r6
90018436:	f7ff ffa3 	bl	90018380 <_ZN8touchgfx16TouchCalibration4clzuEm>
9001843a:	462b      	mov	r3, r5
9001843c:	460a      	mov	r2, r1
9001843e:	4601      	mov	r1, r0
90018440:	4630      	mov	r0, r6
90018442:	e9cd 4700 	strd	r4, r7, [sp]
90018446:	f7ff ffb9 	bl	900183bc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
9001844a:	4606      	mov	r6, r0
9001844c:	4648      	mov	r0, r9
9001844e:	eb05 0108 	add.w	r1, r5, r8
90018452:	f7ff ff95 	bl	90018380 <_ZN8touchgfx16TouchCalibration4clzuEm>
90018456:	ab05      	add	r3, sp, #20
90018458:	464a      	mov	r2, r9
9001845a:	e9cd 4300 	strd	r4, r3, [sp]
9001845e:	4603      	mov	r3, r0
90018460:	4650      	mov	r0, sl
90018462:	f7ff ffab 	bl	900183bc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
90018466:	6839      	ldr	r1, [r7, #0]
90018468:	9a05      	ldr	r2, [sp, #20]
9001846a:	9b03      	ldr	r3, [sp, #12]
9001846c:	4411      	add	r1, r2
9001846e:	fbb1 f2f4 	udiv	r2, r1, r4
90018472:	18d3      	adds	r3, r2, r3
90018474:	fb04 1412 	mls	r4, r4, r2, r1
90018478:	441e      	add	r6, r3
9001847a:	603c      	str	r4, [r7, #0]
9001847c:	4430      	add	r0, r6
9001847e:	e7ae      	b.n	900183de <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

90018480 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
90018480:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90018484:	b085      	sub	sp, #20
90018486:	f1b0 0900 	subs.w	r9, r0, #0
9001848a:	461d      	mov	r5, r3
9001848c:	4617      	mov	r7, r2
9001848e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
90018490:	bfbb      	ittet	lt
90018492:	f1c9 0900 	rsblt	r9, r9, #0
90018496:	f04f 36ff 	movlt.w	r6, #4294967295
9001849a:	2601      	movge	r6, #1
9001849c:	6823      	ldrlt	r3, [r4, #0]
9001849e:	bfbc      	itt	lt
900184a0:	425b      	neglt	r3, r3
900184a2:	6023      	strlt	r3, [r4, #0]
900184a4:	2a00      	cmp	r2, #0
900184a6:	da04      	bge.n	900184b2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
900184a8:	6823      	ldr	r3, [r4, #0]
900184aa:	4257      	negs	r7, r2
900184ac:	4276      	negs	r6, r6
900184ae:	425b      	negs	r3, r3
900184b0:	6023      	str	r3, [r4, #0]
900184b2:	2d00      	cmp	r5, #0
900184b4:	4638      	mov	r0, r7
900184b6:	bfba      	itte	lt
900184b8:	426d      	neglt	r5, r5
900184ba:	f04f 38ff 	movlt.w	r8, #4294967295
900184be:	f04f 0801 	movge.w	r8, #1
900184c2:	f7ff ff5d 	bl	90018380 <_ZN8touchgfx16TouchCalibration4clzuEm>
900184c6:	ab03      	add	r3, sp, #12
900184c8:	463a      	mov	r2, r7
900184ca:	e9cd 5300 	strd	r5, r3, [sp]
900184ce:	4603      	mov	r3, r0
900184d0:	4648      	mov	r0, r9
900184d2:	f7ff ff73 	bl	900183bc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
900184d6:	6823      	ldr	r3, [r4, #0]
900184d8:	9a03      	ldr	r2, [sp, #12]
900184da:	4546      	cmp	r6, r8
900184dc:	441a      	add	r2, r3
900184de:	fb92 f3f5 	sdiv	r3, r2, r5
900184e2:	4418      	add	r0, r3
900184e4:	fb05 2313 	mls	r3, r5, r3, r2
900184e8:	bf18      	it	ne
900184ea:	4240      	negne	r0, r0
900184ec:	1c72      	adds	r2, r6, #1
900184ee:	6023      	str	r3, [r4, #0]
900184f0:	d105      	bne.n	900184fe <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
900184f2:	2b00      	cmp	r3, #0
900184f4:	f1c3 0200 	rsb	r2, r3, #0
900184f8:	db0b      	blt.n	90018512 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
900184fa:	6022      	str	r2, [r4, #0]
900184fc:	e006      	b.n	9001850c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
900184fe:	2e01      	cmp	r6, #1
90018500:	d104      	bne.n	9001850c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
90018502:	2b00      	cmp	r3, #0
90018504:	da02      	bge.n	9001850c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
90018506:	442b      	add	r3, r5
90018508:	3801      	subs	r0, #1
9001850a:	6023      	str	r3, [r4, #0]
9001850c:	b005      	add	sp, #20
9001850e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90018512:	3801      	subs	r0, #1
90018514:	1b52      	subs	r2, r2, r5
90018516:	e7f0      	b.n	900184fa <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

90018518 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
90018518:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
9001851c:	4c1c      	ldr	r4, [pc, #112]	; (90018590 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
9001851e:	4605      	mov	r5, r0
90018520:	6807      	ldr	r7, [r0, #0]
90018522:	69a3      	ldr	r3, [r4, #24]
90018524:	b92b      	cbnz	r3, 90018532 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
90018526:	6840      	ldr	r0, [r0, #4]
90018528:	e9c5 7000 	strd	r7, r0, [r5]
9001852c:	b004      	add	sp, #16
9001852e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90018532:	f04f 0802 	mov.w	r8, #2
90018536:	68a2      	ldr	r2, [r4, #8]
90018538:	ae04      	add	r6, sp, #16
9001853a:	6820      	ldr	r0, [r4, #0]
9001853c:	fb93 f1f8 	sdiv	r1, r3, r8
90018540:	440a      	add	r2, r1
90018542:	69e1      	ldr	r1, [r4, #28]
90018544:	f846 2d04 	str.w	r2, [r6, #-4]!
90018548:	463a      	mov	r2, r7
9001854a:	9600      	str	r6, [sp, #0]
9001854c:	f7ff ff98 	bl	90018480 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
90018550:	69a3      	ldr	r3, [r4, #24]
90018552:	4607      	mov	r7, r0
90018554:	686a      	ldr	r2, [r5, #4]
90018556:	6a21      	ldr	r1, [r4, #32]
90018558:	9600      	str	r6, [sp, #0]
9001855a:	6860      	ldr	r0, [r4, #4]
9001855c:	f7ff ff90 	bl	90018480 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
90018560:	69a3      	ldr	r3, [r4, #24]
90018562:	6962      	ldr	r2, [r4, #20]
90018564:	4407      	add	r7, r0
90018566:	6a61      	ldr	r1, [r4, #36]	; 0x24
90018568:	9600      	str	r6, [sp, #0]
9001856a:	68e0      	ldr	r0, [r4, #12]
9001856c:	fb93 f8f8 	sdiv	r8, r3, r8
90018570:	4442      	add	r2, r8
90018572:	9203      	str	r2, [sp, #12]
90018574:	682a      	ldr	r2, [r5, #0]
90018576:	f7ff ff83 	bl	90018480 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
9001857a:	4680      	mov	r8, r0
9001857c:	9600      	str	r6, [sp, #0]
9001857e:	69a3      	ldr	r3, [r4, #24]
90018580:	686a      	ldr	r2, [r5, #4]
90018582:	6aa1      	ldr	r1, [r4, #40]	; 0x28
90018584:	6920      	ldr	r0, [r4, #16]
90018586:	f7ff ff7b 	bl	90018480 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
9001858a:	4440      	add	r0, r8
9001858c:	e7cc      	b.n	90018528 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
9001858e:	bf00      	nop
90018590:	240236e0 	.word	0x240236e0

90018594 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
90018594:	4b07      	ldr	r3, [pc, #28]	; (900185b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
90018596:	781b      	ldrb	r3, [r3, #0]
90018598:	2b01      	cmp	r3, #1
9001859a:	d109      	bne.n	900185b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
9001859c:	f9b1 3000 	ldrsh.w	r3, [r1]
900185a0:	f9b0 2000 	ldrsh.w	r2, [r0]
900185a4:	8003      	strh	r3, [r0, #0]
900185a6:	4b04      	ldr	r3, [pc, #16]	; (900185b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
900185a8:	881b      	ldrh	r3, [r3, #0]
900185aa:	3b01      	subs	r3, #1
900185ac:	1a9b      	subs	r3, r3, r2
900185ae:	800b      	strh	r3, [r1, #0]
900185b0:	4770      	bx	lr
900185b2:	bf00      	nop
900185b4:	240236c4 	.word	0x240236c4
900185b8:	240236c0 	.word	0x240236c0

900185bc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
900185bc:	4b07      	ldr	r3, [pc, #28]	; (900185dc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
900185be:	b510      	push	{r4, lr}
900185c0:	781b      	ldrb	r3, [r3, #0]
900185c2:	2b01      	cmp	r3, #1
900185c4:	d108      	bne.n	900185d8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
900185c6:	4b06      	ldr	r3, [pc, #24]	; (900185e0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
900185c8:	880c      	ldrh	r4, [r1, #0]
900185ca:	881b      	ldrh	r3, [r3, #0]
900185cc:	f9b0 2000 	ldrsh.w	r2, [r0]
900185d0:	3b01      	subs	r3, #1
900185d2:	1b1b      	subs	r3, r3, r4
900185d4:	8003      	strh	r3, [r0, #0]
900185d6:	800a      	strh	r2, [r1, #0]
900185d8:	bd10      	pop	{r4, pc}
900185da:	bf00      	nop
900185dc:	240236c4 	.word	0x240236c4
900185e0:	240236c0 	.word	0x240236c0

900185e4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
900185e4:	4b0a      	ldr	r3, [pc, #40]	; (90018610 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
900185e6:	b510      	push	{r4, lr}
900185e8:	781b      	ldrb	r3, [r3, #0]
900185ea:	2b01      	cmp	r3, #1
900185ec:	d10e      	bne.n	9001860c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
900185ee:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
900185f2:	8843      	ldrh	r3, [r0, #2]
900185f4:	f9b0 4000 	ldrsh.w	r4, [r0]
900185f8:	18ca      	adds	r2, r1, r3
900185fa:	4b06      	ldr	r3, [pc, #24]	; (90018614 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
900185fc:	8044      	strh	r4, [r0, #2]
900185fe:	881b      	ldrh	r3, [r3, #0]
90018600:	1a9b      	subs	r3, r3, r2
90018602:	8003      	strh	r3, [r0, #0]
90018604:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
90018608:	8081      	strh	r1, [r0, #4]
9001860a:	80c3      	strh	r3, [r0, #6]
9001860c:	bd10      	pop	{r4, pc}
9001860e:	bf00      	nop
90018610:	240236c4 	.word	0x240236c4
90018614:	240236c0 	.word	0x240236c0

90018618 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
90018618:	4b08      	ldr	r3, [pc, #32]	; (9001863c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
9001861a:	781b      	ldrb	r3, [r3, #0]
9001861c:	2b01      	cmp	r3, #1
9001861e:	d10c      	bne.n	9001863a <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
90018620:	8803      	ldrh	r3, [r0, #0]
90018622:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
90018626:	8842      	ldrh	r2, [r0, #2]
90018628:	8002      	strh	r2, [r0, #0]
9001862a:	185a      	adds	r2, r3, r1
9001862c:	4b04      	ldr	r3, [pc, #16]	; (90018640 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
9001862e:	881b      	ldrh	r3, [r3, #0]
90018630:	1a9b      	subs	r3, r3, r2
90018632:	8043      	strh	r3, [r0, #2]
90018634:	88c3      	ldrh	r3, [r0, #6]
90018636:	80c1      	strh	r1, [r0, #6]
90018638:	8083      	strh	r3, [r0, #4]
9001863a:	4770      	bx	lr
9001863c:	240236c4 	.word	0x240236c4
90018640:	240236c0 	.word	0x240236c0

90018644 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
90018644:	4b07      	ldr	r3, [pc, #28]	; (90018664 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
90018646:	b510      	push	{r4, lr}
90018648:	781b      	ldrb	r3, [r3, #0]
9001864a:	2b01      	cmp	r3, #1
9001864c:	d108      	bne.n	90018660 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
9001864e:	f9b1 3000 	ldrsh.w	r3, [r1]
90018652:	f9b0 4000 	ldrsh.w	r4, [r0]
90018656:	8003      	strh	r3, [r0, #0]
90018658:	8893      	ldrh	r3, [r2, #4]
9001865a:	3b01      	subs	r3, #1
9001865c:	1b1b      	subs	r3, r3, r4
9001865e:	800b      	strh	r3, [r1, #0]
90018660:	bd10      	pop	{r4, pc}
90018662:	bf00      	nop
90018664:	240236c4 	.word	0x240236c4

90018668 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
90018668:	4b0b      	ldr	r3, [pc, #44]	; (90018698 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
9001866a:	781b      	ldrb	r3, [r3, #0]
9001866c:	2b01      	cmp	r3, #1
9001866e:	d111      	bne.n	90018694 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
90018670:	680b      	ldr	r3, [r1, #0]
90018672:	ed90 7a00 	vldr	s14, [r0]
90018676:	6003      	str	r3, [r0, #0]
90018678:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
9001867c:	eddf 6a07 	vldr	s13, [pc, #28]	; 9001869c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
90018680:	ee07 3a90 	vmov	s15, r3
90018684:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90018688:	ee77 7ae6 	vsub.f32	s15, s15, s13
9001868c:	ee77 7ac7 	vsub.f32	s15, s15, s14
90018690:	edc1 7a00 	vstr	s15, [r1]
90018694:	4770      	bx	lr
90018696:	bf00      	nop
90018698:	240236c4 	.word	0x240236c4
9001869c:	38d1b717 	.word	0x38d1b717

900186a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
900186a0:	4b0a      	ldr	r3, [pc, #40]	; (900186cc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
900186a2:	460a      	mov	r2, r1
900186a4:	b510      	push	{r4, lr}
900186a6:	781b      	ldrb	r3, [r3, #0]
900186a8:	2b01      	cmp	r3, #1
900186aa:	d10d      	bne.n	900186c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
900186ac:	8881      	ldrh	r1, [r0, #4]
900186ae:	8803      	ldrh	r3, [r0, #0]
900186b0:	440b      	add	r3, r1
900186b2:	4601      	mov	r1, r0
900186b4:	3b01      	subs	r3, #1
900186b6:	f821 3b02 	strh.w	r3, [r1], #2
900186ba:	f7ff ffc3 	bl	90018644 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
900186be:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
900186c2:	88c2      	ldrh	r2, [r0, #6]
900186c4:	80c3      	strh	r3, [r0, #6]
900186c6:	8082      	strh	r2, [r0, #4]
900186c8:	bd10      	pop	{r4, pc}
900186ca:	bf00      	nop
900186cc:	240236c4 	.word	0x240236c4

900186d0 <_ZN8touchgfx11Application19changeToStartScreenEv>:
900186d0:	4770      	bx	lr
	...

900186d4 <_ZN8touchgfx11Application13requestRedrawEv>:
900186d4:	4b06      	ldr	r3, [pc, #24]	; (900186f0 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
900186d6:	2100      	movs	r1, #0
900186d8:	f9b3 2000 	ldrsh.w	r2, [r3]
900186dc:	4b05      	ldr	r3, [pc, #20]	; (900186f4 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
900186de:	f8c0 1130 	str.w	r1, [r0, #304]	; 0x130
900186e2:	f9b3 3000 	ldrsh.w	r3, [r3]
900186e6:	f8a0 2134 	strh.w	r2, [r0, #308]	; 0x134
900186ea:	f8a0 3136 	strh.w	r3, [r0, #310]	; 0x136
900186ee:	4770      	bx	lr
900186f0:	240236c0 	.word	0x240236c0
900186f4:	240236c2 	.word	0x240236c2

900186f8 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
900186f8:	4b03      	ldr	r3, [pc, #12]	; (90018708 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
900186fa:	6818      	ldr	r0, [r3, #0]
900186fc:	b110      	cbz	r0, 90018704 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
900186fe:	6803      	ldr	r3, [r0, #0]
90018700:	699b      	ldr	r3, [r3, #24]
90018702:	4718      	bx	r3
90018704:	4770      	bx	lr
90018706:	bf00      	nop
90018708:	24023710 	.word	0x24023710

9001870c <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
9001870c:	4770      	bx	lr
	...

90018710 <_ZN8touchgfx11Application4drawEv>:
90018710:	4b09      	ldr	r3, [pc, #36]	; (90018738 <_ZN8touchgfx11Application4drawEv+0x28>)
90018712:	b507      	push	{r0, r1, r2, lr}
90018714:	f9b3 2000 	ldrsh.w	r2, [r3]
90018718:	2100      	movs	r1, #0
9001871a:	4b08      	ldr	r3, [pc, #32]	; (9001873c <_ZN8touchgfx11Application4drawEv+0x2c>)
9001871c:	9100      	str	r1, [sp, #0]
9001871e:	4669      	mov	r1, sp
90018720:	f9b3 3000 	ldrsh.w	r3, [r3]
90018724:	f8ad 2004 	strh.w	r2, [sp, #4]
90018728:	f8ad 3006 	strh.w	r3, [sp, #6]
9001872c:	6803      	ldr	r3, [r0, #0]
9001872e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
90018730:	4798      	blx	r3
90018732:	b003      	add	sp, #12
90018734:	f85d fb04 	ldr.w	pc, [sp], #4
90018738:	240236c0 	.word	0x240236c0
9001873c:	240236c2 	.word	0x240236c2

90018740 <_ZN8touchgfx11Application10invalidateEv>:
90018740:	4b09      	ldr	r3, [pc, #36]	; (90018768 <_ZN8touchgfx11Application10invalidateEv+0x28>)
90018742:	b082      	sub	sp, #8
90018744:	2100      	movs	r1, #0
90018746:	f9b3 2000 	ldrsh.w	r2, [r3]
9001874a:	4b08      	ldr	r3, [pc, #32]	; (9001876c <_ZN8touchgfx11Application10invalidateEv+0x2c>)
9001874c:	f8ad 2004 	strh.w	r2, [sp, #4]
90018750:	aa02      	add	r2, sp, #8
90018752:	f9b3 3000 	ldrsh.w	r3, [r3]
90018756:	9100      	str	r1, [sp, #0]
90018758:	f8ad 3006 	strh.w	r3, [sp, #6]
9001875c:	6803      	ldr	r3, [r0, #0]
9001875e:	e912 0006 	ldmdb	r2, {r1, r2}
90018762:	6c1b      	ldr	r3, [r3, #64]	; 0x40
90018764:	b002      	add	sp, #8
90018766:	4718      	bx	r3
90018768:	240236c0 	.word	0x240236c0
9001876c:	240236c2 	.word	0x240236c2

90018770 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
90018770:	4b03      	ldr	r3, [pc, #12]	; (90018780 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
90018772:	6818      	ldr	r0, [r3, #0]
90018774:	b110      	cbz	r0, 9001877c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
90018776:	6803      	ldr	r3, [r0, #0]
90018778:	69db      	ldr	r3, [r3, #28]
9001877a:	4718      	bx	r3
9001877c:	4770      	bx	lr
9001877e:	bf00      	nop
90018780:	24023710 	.word	0x24023710

90018784 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
90018784:	4b03      	ldr	r3, [pc, #12]	; (90018794 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
90018786:	6818      	ldr	r0, [r3, #0]
90018788:	b110      	cbz	r0, 90018790 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
9001878a:	6803      	ldr	r3, [r0, #0]
9001878c:	6a1b      	ldr	r3, [r3, #32]
9001878e:	4718      	bx	r3
90018790:	4770      	bx	lr
90018792:	bf00      	nop
90018794:	24023710 	.word	0x24023710

90018798 <_ZN8touchgfx11Application16clearCachedAreasEv>:
90018798:	2300      	movs	r3, #0
9001879a:	f8a0 30ec 	strh.w	r3, [r0, #236]	; 0xec
9001879e:	4770      	bx	lr

900187a0 <_ZN8touchgfx11Application14handleKeyEventEh>:
900187a0:	4b03      	ldr	r3, [pc, #12]	; (900187b0 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
900187a2:	6818      	ldr	r0, [r3, #0]
900187a4:	b110      	cbz	r0, 900187ac <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
900187a6:	6803      	ldr	r3, [r0, #0]
900187a8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
900187aa:	4718      	bx	r3
900187ac:	4770      	bx	lr
900187ae:	bf00      	nop
900187b0:	24023710 	.word	0x24023710

900187b4 <_ZN8touchgfx11ApplicationD1Ev>:
900187b4:	4770      	bx	lr

900187b6 <_ZN8touchgfx11ApplicationD0Ev>:
900187b6:	b510      	push	{r4, lr}
900187b8:	4604      	mov	r4, r0
900187ba:	f44f 719e 	mov.w	r1, #316	; 0x13c
900187be:	f011 fa2e 	bl	90029c1e <_ZdlPvj>
900187c2:	4620      	mov	r0, r4
900187c4:	bd10      	pop	{r4, pc}

900187c6 <_ZNK8touchgfx4Rect9intersectERKS0_>:
900187c6:	b510      	push	{r4, lr}
900187c8:	f9b1 4000 	ldrsh.w	r4, [r1]
900187cc:	888a      	ldrh	r2, [r1, #4]
900187ce:	f9b0 3000 	ldrsh.w	r3, [r0]
900187d2:	4422      	add	r2, r4
900187d4:	b212      	sxth	r2, r2
900187d6:	4293      	cmp	r3, r2
900187d8:	da15      	bge.n	90018806 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
900187da:	8882      	ldrh	r2, [r0, #4]
900187dc:	4413      	add	r3, r2
900187de:	b21b      	sxth	r3, r3
900187e0:	429c      	cmp	r4, r3
900187e2:	da10      	bge.n	90018806 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
900187e4:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
900187e8:	88c9      	ldrh	r1, [r1, #6]
900187ea:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
900187ee:	4419      	add	r1, r3
900187f0:	b209      	sxth	r1, r1
900187f2:	428a      	cmp	r2, r1
900187f4:	da07      	bge.n	90018806 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
900187f6:	88c0      	ldrh	r0, [r0, #6]
900187f8:	4410      	add	r0, r2
900187fa:	b200      	sxth	r0, r0
900187fc:	4283      	cmp	r3, r0
900187fe:	bfac      	ite	ge
90018800:	2000      	movge	r0, #0
90018802:	2001      	movlt	r0, #1
90018804:	bd10      	pop	{r4, pc}
90018806:	2000      	movs	r0, #0
90018808:	e7fc      	b.n	90018804 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

9001880a <_ZN8touchgfx4Rect10restrictToEss>:
9001880a:	f9b0 3000 	ldrsh.w	r3, [r0]
9001880e:	2b00      	cmp	r3, #0
90018810:	b510      	push	{r4, lr}
90018812:	da04      	bge.n	9001881e <_ZN8touchgfx4Rect10restrictToEss+0x14>
90018814:	8884      	ldrh	r4, [r0, #4]
90018816:	4423      	add	r3, r4
90018818:	8083      	strh	r3, [r0, #4]
9001881a:	2300      	movs	r3, #0
9001881c:	8003      	strh	r3, [r0, #0]
9001881e:	f9b0 4000 	ldrsh.w	r4, [r0]
90018822:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
90018826:	1b09      	subs	r1, r1, r4
90018828:	428b      	cmp	r3, r1
9001882a:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
9001882e:	bfc8      	it	gt
90018830:	8081      	strhgt	r1, [r0, #4]
90018832:	2b00      	cmp	r3, #0
90018834:	da04      	bge.n	90018840 <_ZN8touchgfx4Rect10restrictToEss+0x36>
90018836:	88c1      	ldrh	r1, [r0, #6]
90018838:	440b      	add	r3, r1
9001883a:	80c3      	strh	r3, [r0, #6]
9001883c:	2300      	movs	r3, #0
9001883e:	8043      	strh	r3, [r0, #2]
90018840:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
90018844:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
90018848:	1a52      	subs	r2, r2, r1
9001884a:	4293      	cmp	r3, r2
9001884c:	bfc8      	it	gt
9001884e:	80c2      	strhgt	r2, [r0, #6]
90018850:	bd10      	pop	{r4, pc}
	...

90018854 <_ZN8touchgfx11Application4drawERNS_4RectE>:
90018854:	4b10      	ldr	r3, [pc, #64]	; (90018898 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
90018856:	b510      	push	{r4, lr}
90018858:	460c      	mov	r4, r1
9001885a:	f9b3 2000 	ldrsh.w	r2, [r3]
9001885e:	4b0f      	ldr	r3, [pc, #60]	; (9001889c <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
90018860:	4620      	mov	r0, r4
90018862:	f9b3 1000 	ldrsh.w	r1, [r3]
90018866:	f7ff ffd0 	bl	9001880a <_ZN8touchgfx4Rect10restrictToEss>
9001886a:	4b0d      	ldr	r3, [pc, #52]	; (900188a0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
9001886c:	6818      	ldr	r0, [r3, #0]
9001886e:	b190      	cbz	r0, 90018896 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
90018870:	6803      	ldr	r3, [r0, #0]
90018872:	4621      	mov	r1, r4
90018874:	689b      	ldr	r3, [r3, #8]
90018876:	4798      	blx	r3
90018878:	4b0a      	ldr	r3, [pc, #40]	; (900188a4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
9001887a:	6818      	ldr	r0, [r3, #0]
9001887c:	b118      	cbz	r0, 90018886 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
9001887e:	6803      	ldr	r3, [r0, #0]
90018880:	4621      	mov	r1, r4
90018882:	689b      	ldr	r3, [r3, #8]
90018884:	4798      	blx	r3
90018886:	4b08      	ldr	r3, [pc, #32]	; (900188a8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
90018888:	4621      	mov	r1, r4
9001888a:	6818      	ldr	r0, [r3, #0]
9001888c:	6803      	ldr	r3, [r0, #0]
9001888e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90018892:	69db      	ldr	r3, [r3, #28]
90018894:	4718      	bx	r3
90018896:	bd10      	pop	{r4, pc}
90018898:	240236c2 	.word	0x240236c2
9001889c:	240236c0 	.word	0x240236c0
900188a0:	24023710 	.word	0x24023710
900188a4:	2402370c 	.word	0x2402370c
900188a8:	240236cc 	.word	0x240236cc

900188ac <_ZNK8touchgfx4Rect8includesERKS0_>:
900188ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
900188ae:	4606      	mov	r6, r0
900188b0:	4608      	mov	r0, r1
900188b2:	460f      	mov	r7, r1
900188b4:	f7fb f989 	bl	90013bca <_ZNK8touchgfx4Rect7isEmptyEv>
900188b8:	b9e8      	cbnz	r0, 900188f6 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
900188ba:	f9b7 5000 	ldrsh.w	r5, [r7]
900188be:	f9b6 4000 	ldrsh.w	r4, [r6]
900188c2:	42a5      	cmp	r5, r4
900188c4:	db17      	blt.n	900188f6 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
900188c6:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
900188ca:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
900188ce:	429a      	cmp	r2, r3
900188d0:	db11      	blt.n	900188f6 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
900188d2:	88b9      	ldrh	r1, [r7, #4]
900188d4:	440d      	add	r5, r1
900188d6:	88b1      	ldrh	r1, [r6, #4]
900188d8:	440c      	add	r4, r1
900188da:	b22d      	sxth	r5, r5
900188dc:	b224      	sxth	r4, r4
900188de:	42a5      	cmp	r5, r4
900188e0:	dc09      	bgt.n	900188f6 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
900188e2:	88f8      	ldrh	r0, [r7, #6]
900188e4:	4410      	add	r0, r2
900188e6:	88f2      	ldrh	r2, [r6, #6]
900188e8:	4413      	add	r3, r2
900188ea:	b200      	sxth	r0, r0
900188ec:	b21b      	sxth	r3, r3
900188ee:	4298      	cmp	r0, r3
900188f0:	bfcc      	ite	gt
900188f2:	2000      	movgt	r0, #0
900188f4:	2001      	movle	r0, #1
900188f6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

900188f8 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
900188f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
900188fa:	4604      	mov	r4, r0
900188fc:	4608      	mov	r0, r1
900188fe:	460d      	mov	r5, r1
90018900:	f7fb f963 	bl	90013bca <_ZNK8touchgfx4Rect7isEmptyEv>
90018904:	b978      	cbnz	r0, 90018926 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
90018906:	4620      	mov	r0, r4
90018908:	f7fb f95f 	bl	90013bca <_ZNK8touchgfx4Rect7isEmptyEv>
9001890c:	f9b5 6000 	ldrsh.w	r6, [r5]
90018910:	b150      	cbz	r0, 90018928 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
90018912:	8026      	strh	r6, [r4, #0]
90018914:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
90018918:	8063      	strh	r3, [r4, #2]
9001891a:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
9001891e:	80a3      	strh	r3, [r4, #4]
90018920:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
90018924:	80e3      	strh	r3, [r4, #6]
90018926:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90018928:	f9b4 1000 	ldrsh.w	r1, [r4]
9001892c:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
90018930:	42b1      	cmp	r1, r6
90018932:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
90018936:	f8b5 c004 	ldrh.w	ip, [r5, #4]
9001893a:	460f      	mov	r7, r1
9001893c:	88ed      	ldrh	r5, [r5, #6]
9001893e:	bfa8      	it	ge
90018940:	4637      	movge	r7, r6
90018942:	4293      	cmp	r3, r2
90018944:	4618      	mov	r0, r3
90018946:	4466      	add	r6, ip
90018948:	f8b4 c004 	ldrh.w	ip, [r4, #4]
9001894c:	bfa8      	it	ge
9001894e:	4610      	movge	r0, r2
90018950:	442a      	add	r2, r5
90018952:	88e5      	ldrh	r5, [r4, #6]
90018954:	4461      	add	r1, ip
90018956:	b236      	sxth	r6, r6
90018958:	8027      	strh	r7, [r4, #0]
9001895a:	442b      	add	r3, r5
9001895c:	b209      	sxth	r1, r1
9001895e:	b212      	sxth	r2, r2
90018960:	8060      	strh	r0, [r4, #2]
90018962:	b21b      	sxth	r3, r3
90018964:	428e      	cmp	r6, r1
90018966:	bfac      	ite	ge
90018968:	ebc7 0106 	rsbge	r1, r7, r6
9001896c:	ebc7 0101 	rsblt	r1, r7, r1
90018970:	429a      	cmp	r2, r3
90018972:	bfac      	ite	ge
90018974:	ebc0 0202 	rsbge	r2, r0, r2
90018978:	ebc0 0203 	rsblt	r2, r0, r3
9001897c:	80a1      	strh	r1, [r4, #4]
9001897e:	80e2      	strh	r2, [r4, #6]
90018980:	e7d1      	b.n	90018926 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

90018984 <_ZN8touchgfx11Application11getInstanceEv>:
90018984:	4b01      	ldr	r3, [pc, #4]	; (9001898c <_ZN8touchgfx11Application11getInstanceEv+0x8>)
90018986:	6818      	ldr	r0, [r3, #0]
90018988:	4770      	bx	lr
9001898a:	bf00      	nop
9001898c:	24023720 	.word	0x24023720

90018990 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
90018990:	2300      	movs	r3, #0
90018992:	b510      	push	{r4, lr}
90018994:	f8a0 30a4 	strh.w	r3, [r0, #164]	; 0xa4
90018998:	4604      	mov	r4, r0
9001899a:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
9001899e:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
900189a2:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
900189a6:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	; 0xa6
900189aa:	429a      	cmp	r2, r3
900189ac:	d90e      	bls.n	900189cc <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
900189ae:	18e2      	adds	r2, r4, r3
900189b0:	f892 2084 	ldrb.w	r2, [r2, #132]	; 0x84
900189b4:	b122      	cbz	r2, 900189c0 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
900189b6:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
900189ba:	6803      	ldr	r3, [r0, #0]
900189bc:	6d1b      	ldr	r3, [r3, #80]	; 0x50
900189be:	4798      	blx	r3
900189c0:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
900189c4:	3301      	adds	r3, #1
900189c6:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
900189ca:	e7ea      	b.n	900189a2 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
900189cc:	bd10      	pop	{r4, pc}

900189ce <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
900189ce:	2300      	movs	r3, #0
900189d0:	f100 0284 	add.w	r2, r0, #132	; 0x84
900189d4:	30a4      	adds	r0, #164	; 0xa4
900189d6:	f820 3c24 	strh.w	r3, [r0, #-36]
900189da:	f802 3b01 	strb.w	r3, [r2], #1
900189de:	4282      	cmp	r2, r0
900189e0:	d1fb      	bne.n	900189da <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
900189e2:	4770      	bx	lr

900189e4 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
900189e4:	b570      	push	{r4, r5, r6, lr}
900189e6:	4c0b      	ldr	r4, [pc, #44]	; (90018a14 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
900189e8:	4605      	mov	r5, r0
900189ea:	460e      	mov	r6, r1
900189ec:	6820      	ldr	r0, [r4, #0]
900189ee:	b110      	cbz	r0, 900189f6 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
900189f0:	6803      	ldr	r3, [r0, #0]
900189f2:	695b      	ldr	r3, [r3, #20]
900189f4:	4798      	blx	r3
900189f6:	1d28      	adds	r0, r5, #4
900189f8:	f7ff ffe9 	bl	900189ce <_ZN8touchgfx11Application12TimerWidgets5clearEv>
900189fc:	6026      	str	r6, [r4, #0]
900189fe:	6833      	ldr	r3, [r6, #0]
90018a00:	4630      	mov	r0, r6
90018a02:	68db      	ldr	r3, [r3, #12]
90018a04:	4798      	blx	r3
90018a06:	682b      	ldr	r3, [r5, #0]
90018a08:	4628      	mov	r0, r5
90018a0a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90018a0c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90018a10:	4718      	bx	r3
90018a12:	bf00      	nop
90018a14:	24023710 	.word	0x24023710

90018a18 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
90018a18:	2300      	movs	r3, #0
90018a1a:	f8b0 c080 	ldrh.w	ip, [r0, #128]	; 0x80
90018a1e:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	; 0xa4
90018a22:	461a      	mov	r2, r3
90018a24:	b5f0      	push	{r4, r5, r6, r7, lr}
90018a26:	461c      	mov	r4, r3
90018a28:	461d      	mov	r5, r3
90018a2a:	459c      	cmp	ip, r3
90018a2c:	dd1a      	ble.n	90018a64 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
90018a2e:	18c6      	adds	r6, r0, r3
90018a30:	f896 6084 	ldrb.w	r6, [r6, #132]	; 0x84
90018a34:	b16e      	cbz	r6, 90018a52 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
90018a36:	429a      	cmp	r2, r3
90018a38:	d008      	beq.n	90018a4c <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
90018a3a:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
90018a3e:	fa1f fe82 	uxth.w	lr, r2
90018a42:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
90018a46:	1887      	adds	r7, r0, r2
90018a48:	f887 6084 	strb.w	r6, [r7, #132]	; 0x84
90018a4c:	3201      	adds	r2, #1
90018a4e:	3301      	adds	r3, #1
90018a50:	e7eb      	b.n	90018a2a <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
90018a52:	4299      	cmp	r1, r3
90018a54:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	; 0xa6
90018a58:	bfa8      	it	ge
90018a5a:	3501      	addge	r5, #1
90018a5c:	429e      	cmp	r6, r3
90018a5e:	bfc8      	it	gt
90018a60:	3401      	addgt	r4, #1
90018a62:	e7f4      	b.n	90018a4e <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
90018a64:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	; 0xa6
90018a68:	1b49      	subs	r1, r1, r5
90018a6a:	1b1b      	subs	r3, r3, r4
90018a6c:	f8a0 10a4 	strh.w	r1, [r0, #164]	; 0xa4
90018a70:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
90018a74:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
90018a78:	4293      	cmp	r3, r2
90018a7a:	dd03      	ble.n	90018a84 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
90018a7c:	3b01      	subs	r3, #1
90018a7e:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
90018a82:	e7f7      	b.n	90018a74 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
90018a84:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

90018a88 <_ZN8touchgfx11Application15handleTickEventEv>:
90018a88:	b570      	push	{r4, r5, r6, lr}
90018a8a:	4d16      	ldr	r5, [pc, #88]	; (90018ae4 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
90018a8c:	4604      	mov	r4, r0
90018a8e:	6828      	ldr	r0, [r5, #0]
90018a90:	b140      	cbz	r0, 90018aa4 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
90018a92:	7a03      	ldrb	r3, [r0, #8]
90018a94:	b933      	cbnz	r3, 90018aa4 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
90018a96:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
90018a9a:	6803      	ldr	r3, [r0, #0]
90018a9c:	689b      	ldr	r3, [r3, #8]
90018a9e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90018aa2:	4718      	bx	r3
90018aa4:	f894 3138 	ldrb.w	r3, [r4, #312]	; 0x138
90018aa8:	4e0f      	ldr	r6, [pc, #60]	; (90018ae8 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
90018aaa:	b973      	cbnz	r3, 90018aca <_ZN8touchgfx11Application15handleTickEventEv+0x42>
90018aac:	b168      	cbz	r0, 90018aca <_ZN8touchgfx11Application15handleTickEventEv+0x42>
90018aae:	7a03      	ldrb	r3, [r0, #8]
90018ab0:	b15b      	cbz	r3, 90018aca <_ZN8touchgfx11Application15handleTickEventEv+0x42>
90018ab2:	6830      	ldr	r0, [r6, #0]
90018ab4:	b110      	cbz	r0, 90018abc <_ZN8touchgfx11Application15handleTickEventEv+0x34>
90018ab6:	6803      	ldr	r3, [r0, #0]
90018ab8:	691b      	ldr	r3, [r3, #16]
90018aba:	4798      	blx	r3
90018abc:	6828      	ldr	r0, [r5, #0]
90018abe:	6803      	ldr	r3, [r0, #0]
90018ac0:	68db      	ldr	r3, [r3, #12]
90018ac2:	4798      	blx	r3
90018ac4:	2301      	movs	r3, #1
90018ac6:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
90018aca:	3404      	adds	r4, #4
90018acc:	4620      	mov	r0, r4
90018ace:	f7ff ff5f 	bl	90018990 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
90018ad2:	4620      	mov	r0, r4
90018ad4:	f7ff ffa0 	bl	90018a18 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
90018ad8:	6830      	ldr	r0, [r6, #0]
90018ada:	b110      	cbz	r0, 90018ae2 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
90018adc:	6803      	ldr	r3, [r0, #0]
90018ade:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90018ae0:	e7dd      	b.n	90018a9e <_ZN8touchgfx11Application15handleTickEventEv+0x16>
90018ae2:	bd70      	pop	{r4, r5, r6, pc}
90018ae4:	24023714 	.word	0x24023714
90018ae8:	24023710 	.word	0x24023710

90018aec <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
90018aec:	4603      	mov	r3, r0
90018aee:	f100 0140 	add.w	r1, r0, #64	; 0x40
90018af2:	2200      	movs	r2, #0
90018af4:	801a      	strh	r2, [r3, #0]
90018af6:	3308      	adds	r3, #8
90018af8:	f823 2c06 	strh.w	r2, [r3, #-6]
90018afc:	f823 2c04 	strh.w	r2, [r3, #-4]
90018b00:	f823 2c02 	strh.w	r2, [r3, #-2]
90018b04:	428b      	cmp	r3, r1
90018b06:	d1f5      	bne.n	90018af4 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
90018b08:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
90018b0c:	4770      	bx	lr
	...

90018b10 <_ZN8touchgfx11ApplicationC1Ev>:
90018b10:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90018b12:	4b1d      	ldr	r3, [pc, #116]	; (90018b88 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
90018b14:	4606      	mov	r6, r0
90018b16:	4604      	mov	r4, r0
90018b18:	2500      	movs	r5, #0
90018b1a:	f846 3b04 	str.w	r3, [r6], #4
90018b1e:	22a8      	movs	r2, #168	; 0xa8
90018b20:	2100      	movs	r1, #0
90018b22:	4630      	mov	r0, r6
90018b24:	f011 fba2 	bl	9002a26c <memset>
90018b28:	f8a4 5084 	strh.w	r5, [r4, #132]	; 0x84
90018b2c:	f104 00ac 	add.w	r0, r4, #172	; 0xac
90018b30:	4f16      	ldr	r7, [pc, #88]	; (90018b8c <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
90018b32:	f7ff ffdb 	bl	90018aec <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
90018b36:	f104 00ee 	add.w	r0, r4, #238	; 0xee
90018b3a:	f7ff ffd7 	bl	90018aec <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
90018b3e:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
90018b42:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
90018b46:	f8a4 5134 	strh.w	r5, [r4, #308]	; 0x134
90018b4a:	f8a4 5136 	strh.w	r5, [r4, #310]	; 0x136
90018b4e:	f884 5138 	strb.w	r5, [r4, #312]	; 0x138
90018b52:	490f      	ldr	r1, [pc, #60]	; (90018b90 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
90018b54:	480f      	ldr	r0, [pc, #60]	; (90018b94 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
90018b56:	f010 fb9b 	bl	90029290 <CRC_Lock>
90018b5a:	4b0f      	ldr	r3, [pc, #60]	; (90018b98 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
90018b5c:	b158      	cbz	r0, 90018b76 <_ZN8touchgfx11ApplicationC1Ev+0x66>
90018b5e:	801d      	strh	r5, [r3, #0]
90018b60:	2300      	movs	r3, #0
90018b62:	4a0e      	ldr	r2, [pc, #56]	; (90018b9c <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
90018b64:	4630      	mov	r0, r6
90018b66:	6013      	str	r3, [r2, #0]
90018b68:	4a0d      	ldr	r2, [pc, #52]	; (90018ba0 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
90018b6a:	603b      	str	r3, [r7, #0]
90018b6c:	6013      	str	r3, [r2, #0]
90018b6e:	f7ff ff2e 	bl	900189ce <_ZN8touchgfx11Application12TimerWidgets5clearEv>
90018b72:	4620      	mov	r0, r4
90018b74:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90018b76:	f44f 6280 	mov.w	r2, #1024	; 0x400
90018b7a:	2002      	movs	r0, #2
90018b7c:	801a      	strh	r2, [r3, #0]
90018b7e:	6038      	str	r0, [r7, #0]
90018b80:	f001 fb06 	bl	9001a190 <_ZN8touchgfx6Screen4drawEv>
90018b84:	e7ec      	b.n	90018b60 <_ZN8touchgfx11ApplicationC1Ev+0x50>
90018b86:	bf00      	nop
90018b88:	9002e628 	.word	0x9002e628
90018b8c:	24023710 	.word	0x24023710
90018b90:	b5e8b5cd 	.word	0xb5e8b5cd
90018b94:	f407a5c2 	.word	0xf407a5c2
90018b98:	24000074 	.word	0x24000074
90018b9c:	24023720 	.word	0x24023720
90018ba0:	24023714 	.word	0x24023714

90018ba4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
90018ba4:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
90018ba8:	3b01      	subs	r3, #1
90018baa:	b29b      	uxth	r3, r3
90018bac:	428b      	cmp	r3, r1
90018bae:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
90018bb2:	b510      	push	{r4, lr}
90018bb4:	d908      	bls.n	90018bc8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
90018bb6:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
90018bba:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
90018bbe:	681a      	ldr	r2, [r3, #0]
90018bc0:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
90018bc4:	685a      	ldr	r2, [r3, #4]
90018bc6:	6062      	str	r2, [r4, #4]
90018bc8:	bd10      	pop	{r4, pc}
	...

90018bcc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
90018bcc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90018bd0:	b08f      	sub	sp, #60	; 0x3c
90018bd2:	4b8f      	ldr	r3, [pc, #572]	; (90018e10 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
90018bd4:	4683      	mov	fp, r0
90018bd6:	ac0a      	add	r4, sp, #40	; 0x28
90018bd8:	e884 0006 	stmia.w	r4, {r1, r2}
90018bdc:	f9b3 2000 	ldrsh.w	r2, [r3]
90018be0:	4620      	mov	r0, r4
90018be2:	4b8c      	ldr	r3, [pc, #560]	; (90018e14 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
90018be4:	f9b3 1000 	ldrsh.w	r1, [r3]
90018be8:	f7ff fe0f 	bl	9001880a <_ZN8touchgfx4Rect10restrictToEss>
90018bec:	4620      	mov	r0, r4
90018bee:	f7fa ffec 	bl	90013bca <_ZNK8touchgfx4Rect7isEmptyEv>
90018bf2:	2800      	cmp	r0, #0
90018bf4:	d16a      	bne.n	90018ccc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
90018bf6:	9403      	str	r4, [sp, #12]
90018bf8:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
90018bfc:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
90018c00:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
90018c04:	9301      	str	r3, [sp, #4]
90018c06:	35a4      	adds	r5, #164	; 0xa4
90018c08:	b15c      	cbz	r4, 90018c22 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
90018c0a:	4629      	mov	r1, r5
90018c0c:	9803      	ldr	r0, [sp, #12]
90018c0e:	f7ff fe4d 	bl	900188ac <_ZNK8touchgfx4Rect8includesERKS0_>
90018c12:	3c01      	subs	r4, #1
90018c14:	b118      	cbz	r0, 90018c1e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
90018c16:	b2a1      	uxth	r1, r4
90018c18:	9801      	ldr	r0, [sp, #4]
90018c1a:	f7ff ffc3 	bl	90018ba4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90018c1e:	3d08      	subs	r5, #8
90018c20:	e7f2      	b.n	90018c08 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
90018c22:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	; 0xec
90018c26:	f10a 33ff 	add.w	r3, sl, #4294967295
90018c2a:	f8cd a010 	str.w	sl, [sp, #16]
90018c2e:	9302      	str	r3, [sp, #8]
90018c30:	ea4f 03ca 	mov.w	r3, sl, lsl #3
90018c34:	f103 04a4 	add.w	r4, r3, #164	; 0xa4
90018c38:	9306      	str	r3, [sp, #24]
90018c3a:	445c      	add	r4, fp
90018c3c:	2500      	movs	r5, #0
90018c3e:	4626      	mov	r6, r4
90018c40:	f8cd a014 	str.w	sl, [sp, #20]
90018c44:	462f      	mov	r7, r5
90018c46:	9b05      	ldr	r3, [sp, #20]
90018c48:	2b00      	cmp	r3, #0
90018c4a:	d073      	beq.n	90018d34 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
90018c4c:	9903      	ldr	r1, [sp, #12]
90018c4e:	4630      	mov	r0, r6
90018c50:	f7ff fdb9 	bl	900187c6 <_ZNK8touchgfx4Rect9intersectERKS0_>
90018c54:	b350      	cbz	r0, 90018cac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
90018c56:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
90018c5a:	f9b6 c000 	ldrsh.w	ip, [r6]
90018c5e:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	; 0x2a
90018c62:	45e6      	cmp	lr, ip
90018c64:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
90018c68:	db33      	blt.n	90018cd2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
90018c6a:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
90018c6e:	88b3      	ldrh	r3, [r6, #4]
90018c70:	4472      	add	r2, lr
90018c72:	4463      	add	r3, ip
90018c74:	b212      	sxth	r2, r2
90018c76:	b21b      	sxth	r3, r3
90018c78:	429a      	cmp	r2, r3
90018c7a:	dc2a      	bgt.n	90018cd2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
90018c7c:	fa1f f289 	uxth.w	r2, r9
90018c80:	88f3      	ldrh	r3, [r6, #6]
90018c82:	45c8      	cmp	r8, r9
90018c84:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
90018c88:	4413      	add	r3, r2
90018c8a:	fa1f fc88 	uxth.w	ip, r8
90018c8e:	b29b      	uxth	r3, r3
90018c90:	fa0f fe83 	sxth.w	lr, r3
90018c94:	db0f      	blt.n	90018cb6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
90018c96:	eba3 030c 	sub.w	r3, r3, ip
90018c9a:	1ac9      	subs	r1, r1, r3
90018c9c:	b209      	sxth	r1, r1
90018c9e:	2900      	cmp	r1, #0
90018ca0:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
90018ca4:	dd12      	ble.n	90018ccc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
90018ca6:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
90018caa:	4605      	mov	r5, r0
90018cac:	9b05      	ldr	r3, [sp, #20]
90018cae:	3e08      	subs	r6, #8
90018cb0:	3b01      	subs	r3, #1
90018cb2:	9305      	str	r3, [sp, #20]
90018cb4:	e7c7      	b.n	90018c46 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
90018cb6:	4461      	add	r1, ip
90018cb8:	b209      	sxth	r1, r1
90018cba:	4571      	cmp	r1, lr
90018cbc:	dc38      	bgt.n	90018d30 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
90018cbe:	eba2 020c 	sub.w	r2, r2, ip
90018cc2:	b212      	sxth	r2, r2
90018cc4:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
90018cc8:	2a00      	cmp	r2, #0
90018cca:	dcee      	bgt.n	90018caa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
90018ccc:	b00f      	add	sp, #60	; 0x3c
90018cce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90018cd2:	45c8      	cmp	r8, r9
90018cd4:	db2c      	blt.n	90018d30 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
90018cd6:	88f3      	ldrh	r3, [r6, #6]
90018cd8:	4499      	add	r9, r3
90018cda:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
90018cde:	4498      	add	r8, r3
90018ce0:	fa0f f989 	sxth.w	r9, r9
90018ce4:	fa0f f888 	sxth.w	r8, r8
90018ce8:	45c1      	cmp	r9, r8
90018cea:	db21      	blt.n	90018d30 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
90018cec:	fa1f f28c 	uxth.w	r2, ip
90018cf0:	88b3      	ldrh	r3, [r6, #4]
90018cf2:	45e6      	cmp	lr, ip
90018cf4:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
90018cf8:	4413      	add	r3, r2
90018cfa:	fa1f f88e 	uxth.w	r8, lr
90018cfe:	b29b      	uxth	r3, r3
90018d00:	fa0f f983 	sxth.w	r9, r3
90018d04:	db0a      	blt.n	90018d1c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
90018d06:	eba3 0308 	sub.w	r3, r3, r8
90018d0a:	1ac9      	subs	r1, r1, r3
90018d0c:	b209      	sxth	r1, r1
90018d0e:	2900      	cmp	r1, #0
90018d10:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
90018d14:	ddda      	ble.n	90018ccc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
90018d16:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
90018d1a:	e7c6      	b.n	90018caa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
90018d1c:	4441      	add	r1, r8
90018d1e:	b209      	sxth	r1, r1
90018d20:	4549      	cmp	r1, r9
90018d22:	dc05      	bgt.n	90018d30 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
90018d24:	eba2 0208 	sub.w	r2, r2, r8
90018d28:	b212      	sxth	r2, r2
90018d2a:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
90018d2e:	e7cb      	b.n	90018cc8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
90018d30:	4607      	mov	r7, r0
90018d32:	e7bb      	b.n	90018cac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
90018d34:	2d00      	cmp	r5, #0
90018d36:	d181      	bne.n	90018c3c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
90018d38:	2f00      	cmp	r7, #0
90018d3a:	f000 81dd 	beq.w	900190f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
90018d3e:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
90018d42:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
90018d46:	b2b3      	uxth	r3, r6
90018d48:	f8bd a02e 	ldrh.w	sl, [sp, #46]	; 0x2e
90018d4c:	9305      	str	r3, [sp, #20]
90018d4e:	9a05      	ldr	r2, [sp, #20]
90018d50:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
90018d54:	4413      	add	r3, r2
90018d56:	b2ba      	uxth	r2, r7
90018d58:	4492      	add	sl, r2
90018d5a:	b29b      	uxth	r3, r3
90018d5c:	fa1f fa8a 	uxth.w	sl, sl
90018d60:	fa0f f883 	sxth.w	r8, r3
90018d64:	fa0f f98a 	sxth.w	r9, sl
90018d68:	e9cd 2307 	strd	r2, r3, [sp, #28]
90018d6c:	9b04      	ldr	r3, [sp, #16]
90018d6e:	2b00      	cmp	r3, #0
90018d70:	d052      	beq.n	90018e18 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
90018d72:	9903      	ldr	r1, [sp, #12]
90018d74:	4620      	mov	r0, r4
90018d76:	f7ff fd26 	bl	900187c6 <_ZNK8touchgfx4Rect9intersectERKS0_>
90018d7a:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
90018d7e:	b1c0      	cbz	r0, 90018db2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
90018d80:	f9b4 e000 	ldrsh.w	lr, [r4]
90018d84:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
90018d88:	4576      	cmp	r6, lr
90018d8a:	dc22      	bgt.n	90018dd2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
90018d8c:	f8b4 c004 	ldrh.w	ip, [r4, #4]
90018d90:	44f4      	add	ip, lr
90018d92:	fa0f fc8c 	sxth.w	ip, ip
90018d96:	45e0      	cmp	r8, ip
90018d98:	db1b      	blt.n	90018dd2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
90018d9a:	428f      	cmp	r7, r1
90018d9c:	fa1f fc81 	uxth.w	ip, r1
90018da0:	88e1      	ldrh	r1, [r4, #6]
90018da2:	dc0d      	bgt.n	90018dc0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
90018da4:	ebaa 0c0c 	sub.w	ip, sl, ip
90018da8:	f8a4 9002 	strh.w	r9, [r4, #2]
90018dac:	eba1 010c 	sub.w	r1, r1, ip
90018db0:	80e1      	strh	r1, [r4, #6]
90018db2:	4628      	mov	r0, r5
90018db4:	9904      	ldr	r1, [sp, #16]
90018db6:	3c08      	subs	r4, #8
90018db8:	4605      	mov	r5, r0
90018dba:	3901      	subs	r1, #1
90018dbc:	9104      	str	r1, [sp, #16]
90018dbe:	e7d3      	b.n	90018d68 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
90018dc0:	4461      	add	r1, ip
90018dc2:	b209      	sxth	r1, r1
90018dc4:	4549      	cmp	r1, r9
90018dc6:	dcf5      	bgt.n	90018db4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
90018dc8:	eba2 0c0c 	sub.w	ip, r2, ip
90018dcc:	f8a4 c006 	strh.w	ip, [r4, #6]
90018dd0:	e7ef      	b.n	90018db2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
90018dd2:	428f      	cmp	r7, r1
90018dd4:	dcee      	bgt.n	90018db4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
90018dd6:	f8b4 c006 	ldrh.w	ip, [r4, #6]
90018dda:	4461      	add	r1, ip
90018ddc:	b209      	sxth	r1, r1
90018dde:	4589      	cmp	r9, r1
90018de0:	dbe8      	blt.n	90018db4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
90018de2:	4576      	cmp	r6, lr
90018de4:	fa1f fc8e 	uxth.w	ip, lr
90018de8:	88a1      	ldrh	r1, [r4, #4]
90018dea:	dc07      	bgt.n	90018dfc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
90018dec:	eba3 0c0c 	sub.w	ip, r3, ip
90018df0:	f8a4 8000 	strh.w	r8, [r4]
90018df4:	eba1 010c 	sub.w	r1, r1, ip
90018df8:	80a1      	strh	r1, [r4, #4]
90018dfa:	e7da      	b.n	90018db2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
90018dfc:	4461      	add	r1, ip
90018dfe:	b209      	sxth	r1, r1
90018e00:	4588      	cmp	r8, r1
90018e02:	dbd7      	blt.n	90018db4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
90018e04:	9905      	ldr	r1, [sp, #20]
90018e06:	eba1 0c0c 	sub.w	ip, r1, ip
90018e0a:	f8a4 c004 	strh.w	ip, [r4, #4]
90018e0e:	e7d0      	b.n	90018db2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
90018e10:	240236c2 	.word	0x240236c2
90018e14:	240236c0 	.word	0x240236c0
90018e18:	2d00      	cmp	r5, #0
90018e1a:	f000 816d 	beq.w	900190f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
90018e1e:	9b06      	ldr	r3, [sp, #24]
90018e20:	445b      	add	r3, fp
90018e22:	461c      	mov	r4, r3
90018e24:	9b02      	ldr	r3, [sp, #8]
90018e26:	3301      	adds	r3, #1
90018e28:	f000 8166 	beq.w	900190f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
90018e2c:	f104 05a4 	add.w	r5, r4, #164	; 0xa4
90018e30:	9803      	ldr	r0, [sp, #12]
90018e32:	4629      	mov	r1, r5
90018e34:	f7ff fd3a 	bl	900188ac <_ZNK8touchgfx4Rect8includesERKS0_>
90018e38:	b120      	cbz	r0, 90018e44 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
90018e3a:	f8bd 1008 	ldrh.w	r1, [sp, #8]
90018e3e:	9801      	ldr	r0, [sp, #4]
90018e40:	f7ff feb0 	bl	90018ba4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90018e44:	9903      	ldr	r1, [sp, #12]
90018e46:	4628      	mov	r0, r5
90018e48:	f7ff fcbd 	bl	900187c6 <_ZNK8touchgfx4Rect9intersectERKS0_>
90018e4c:	2800      	cmp	r0, #0
90018e4e:	f000 809c 	beq.w	90018f8a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
90018e52:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	; 0xa4
90018e56:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
90018e5a:	fa1f f189 	uxth.w	r1, r9
90018e5e:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
90018e62:	9309      	str	r3, [sp, #36]	; 0x24
90018e64:	eb01 0c03 	add.w	ip, r1, r3
90018e68:	b283      	uxth	r3, r0
90018e6a:	4548      	cmp	r0, r9
90018e6c:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
90018e70:	fa1f fa8c 	uxth.w	sl, ip
90018e74:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
90018e78:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	; 0xa6
90018e7c:	eb03 050c 	add.w	r5, r3, ip
90018e80:	b2ad      	uxth	r5, r5
90018e82:	9505      	str	r5, [sp, #20]
90018e84:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
90018e88:	9504      	str	r5, [sp, #16]
90018e8a:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	; 0xec
90018e8e:	f340 8099 	ble.w	90018fc4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
90018e92:	1a5b      	subs	r3, r3, r1
90018e94:	4596      	cmp	lr, r2
90018e96:	fa0f f08a 	sxth.w	r0, sl
90018e9a:	b29b      	uxth	r3, r3
90018e9c:	b21e      	sxth	r6, r3
90018e9e:	dd2e      	ble.n	90018efe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
90018ea0:	9f02      	ldr	r7, [sp, #8]
90018ea2:	fa1f fe8e 	uxth.w	lr, lr
90018ea6:	b292      	uxth	r2, r2
90018ea8:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
90018eac:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
90018eb0:	9f04      	ldr	r7, [sp, #16]
90018eb2:	ebae 0102 	sub.w	r1, lr, r2
90018eb6:	44a6      	add	lr, r4
90018eb8:	1a3f      	subs	r7, r7, r0
90018eba:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	; 0xb2
90018ebe:	b289      	uxth	r1, r1
90018ec0:	4402      	add	r2, r0
90018ec2:	fa0f fe8e 	sxth.w	lr, lr
90018ec6:	b20d      	sxth	r5, r1
90018ec8:	b212      	sxth	r2, r2
90018eca:	436f      	muls	r7, r5
90018ecc:	ebae 0202 	sub.w	r2, lr, r2
90018ed0:	4372      	muls	r2, r6
90018ed2:	4297      	cmp	r7, r2
90018ed4:	db09      	blt.n	90018eea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
90018ed6:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	; 0xac
90018eda:	f8a8 50b2 	strh.w	r5, [r8, #178]	; 0xb2
90018ede:	449c      	add	ip, r3
90018ee0:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
90018ee4:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
90018ee8:	e686      	b.n	90018bf8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
90018eea:	4421      	add	r1, r4
90018eec:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
90018ef0:	f8a8 60b0 	strh.w	r6, [r8, #176]	; 0xb0
90018ef4:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
90018ef8:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
90018efc:	e67c      	b.n	90018bf8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
90018efe:	9f04      	ldr	r7, [sp, #16]
90018f00:	42b8      	cmp	r0, r7
90018f02:	da27      	bge.n	90018f54 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
90018f04:	9902      	ldr	r1, [sp, #8]
90018f06:	1a3f      	subs	r7, r7, r0
90018f08:	f8bd 502e 	ldrh.w	r5, [sp, #46]	; 0x2e
90018f0c:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
90018f10:	eb05 010e 	add.w	r1, r5, lr
90018f14:	fa1f f881 	uxth.w	r8, r1
90018f18:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	; 0xb2
90018f1c:	4411      	add	r1, r2
90018f1e:	fa0f f988 	sxth.w	r9, r8
90018f22:	eba2 020e 	sub.w	r2, r2, lr
90018f26:	eba1 0108 	sub.w	r1, r1, r8
90018f2a:	4372      	muls	r2, r6
90018f2c:	b289      	uxth	r1, r1
90018f2e:	fa0f f881 	sxth.w	r8, r1
90018f32:	fb08 f707 	mul.w	r7, r8, r7
90018f36:	42ba      	cmp	r2, r7
90018f38:	dc06      	bgt.n	90018f48 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
90018f3a:	f8a4 90ae 	strh.w	r9, [r4, #174]	; 0xae
90018f3e:	f8a4 80b2 	strh.w	r8, [r4, #178]	; 0xb2
90018f42:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	; 0xac
90018f46:	e7ca      	b.n	90018ede <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
90018f48:	4429      	add	r1, r5
90018f4a:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
90018f4e:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
90018f52:	e651      	b.n	90018bf8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
90018f54:	9805      	ldr	r0, [sp, #20]
90018f56:	2d06      	cmp	r5, #6
90018f58:	ebaa 0000 	sub.w	r0, sl, r0
90018f5c:	b280      	uxth	r0, r0
90018f5e:	fa0f fe80 	sxth.w	lr, r0
90018f62:	d817      	bhi.n	90018f94 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
90018f64:	9b04      	ldr	r3, [sp, #16]
90018f66:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	; 0xaa
90018f6a:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
90018f6e:	1c6b      	adds	r3, r5, #1
90018f70:	f8a4 e0a8 	strh.w	lr, [r4, #168]	; 0xa8
90018f74:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
90018f78:	9b01      	ldr	r3, [sp, #4]
90018f7a:	9801      	ldr	r0, [sp, #4]
90018f7c:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
90018f80:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
90018f84:	805a      	strh	r2, [r3, #2]
90018f86:	809e      	strh	r6, [r3, #4]
90018f88:	80d9      	strh	r1, [r3, #6]
90018f8a:	9b02      	ldr	r3, [sp, #8]
90018f8c:	3c08      	subs	r4, #8
90018f8e:	3b01      	subs	r3, #1
90018f90:	9302      	str	r3, [sp, #8]
90018f92:	e747      	b.n	90018e24 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
90018f94:	9a02      	ldr	r2, [sp, #8]
90018f96:	45b6      	cmp	lr, r6
90018f98:	ea4f 02c2 	mov.w	r2, r2, lsl #3
90018f9c:	db0d      	blt.n	90018fba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
90018f9e:	449c      	add	ip, r3
90018fa0:	445a      	add	r2, fp
90018fa2:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
90018fa6:	fa1f fc8c 	uxth.w	ip, ip
90018faa:	f8a2 e0b0 	strh.w	lr, [r2, #176]	; 0xb0
90018fae:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
90018fb2:	448c      	add	ip, r1
90018fb4:	f8a2 c0ac 	strh.w	ip, [r2, #172]	; 0xac
90018fb8:	e61e      	b.n	90018bf8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
90018fba:	445a      	add	r2, fp
90018fbc:	4484      	add	ip, r0
90018fbe:	f8a2 60b0 	strh.w	r6, [r2, #176]	; 0xb0
90018fc2:	e78f      	b.n	90018ee4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
90018fc4:	fa1f f18e 	uxth.w	r1, lr
90018fc8:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
90018fcc:	b293      	uxth	r3, r2
90018fce:	4596      	cmp	lr, r2
90018fd0:	eb01 0806 	add.w	r8, r1, r6
90018fd4:	9306      	str	r3, [sp, #24]
90018fd6:	fa1f f888 	uxth.w	r8, r8
90018fda:	9f06      	ldr	r7, [sp, #24]
90018fdc:	fa0f f388 	sxth.w	r3, r8
90018fe0:	9307      	str	r3, [sp, #28]
90018fe2:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
90018fe6:	443b      	add	r3, r7
90018fe8:	b29b      	uxth	r3, r3
90018fea:	9308      	str	r3, [sp, #32]
90018fec:	da24      	bge.n	90019038 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
90018fee:	9905      	ldr	r1, [sp, #20]
90018ff0:	eba3 0308 	sub.w	r3, r3, r8
90018ff4:	eba2 020e 	sub.w	r2, r2, lr
90018ff8:	eba9 0000 	sub.w	r0, r9, r0
90018ffc:	ebaa 0401 	sub.w	r4, sl, r1
90019000:	b29b      	uxth	r3, r3
90019002:	b2a4      	uxth	r4, r4
90019004:	b219      	sxth	r1, r3
90019006:	b225      	sxth	r5, r4
90019008:	4348      	muls	r0, r1
9001900a:	436a      	muls	r2, r5
9001900c:	4282      	cmp	r2, r0
9001900e:	9a02      	ldr	r2, [sp, #8]
90019010:	ea4f 02c2 	mov.w	r2, r2, lsl #3
90019014:	445a      	add	r2, fp
90019016:	dc06      	bgt.n	90019026 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
90019018:	9b07      	ldr	r3, [sp, #28]
9001901a:	44a4      	add	ip, r4
9001901c:	f8a2 10b2 	strh.w	r1, [r2, #178]	; 0xb2
90019020:	f8a2 30ae 	strh.w	r3, [r2, #174]	; 0xae
90019024:	e75e      	b.n	90018ee4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
90019026:	9904      	ldr	r1, [sp, #16]
90019028:	f8a2 50b0 	strh.w	r5, [r2, #176]	; 0xb0
9001902c:	f8a2 10ac 	strh.w	r1, [r2, #172]	; 0xac
90019030:	4433      	add	r3, r6
90019032:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
90019036:	e5df      	b.n	90018bf8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
90019038:	9f06      	ldr	r7, [sp, #24]
9001903a:	9b04      	ldr	r3, [sp, #16]
9001903c:	1bc9      	subs	r1, r1, r7
9001903e:	fa0f f78a 	sxth.w	r7, sl
90019042:	b289      	uxth	r1, r1
90019044:	429f      	cmp	r7, r3
90019046:	fa0f fe81 	sxth.w	lr, r1
9001904a:	dd23      	ble.n	90019094 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
9001904c:	9a05      	ldr	r2, [sp, #20]
9001904e:	eba9 0000 	sub.w	r0, r9, r0
90019052:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
90019056:	ebaa 0202 	sub.w	r2, sl, r2
9001905a:	9d07      	ldr	r5, [sp, #28]
9001905c:	fb0e f000 	mul.w	r0, lr, r0
90019060:	b292      	uxth	r2, r2
90019062:	eba5 0a03 	sub.w	sl, r5, r3
90019066:	9b02      	ldr	r3, [sp, #8]
90019068:	b214      	sxth	r4, r2
9001906a:	00db      	lsls	r3, r3, #3
9001906c:	fb04 fa0a 	mul.w	sl, r4, sl
90019070:	445b      	add	r3, fp
90019072:	4550      	cmp	r0, sl
90019074:	db03      	blt.n	9001907e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
90019076:	f8a3 e0b2 	strh.w	lr, [r3, #178]	; 0xb2
9001907a:	4494      	add	ip, r2
9001907c:	e732      	b.n	90018ee4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
9001907e:	9a04      	ldr	r2, [sp, #16]
90019080:	4431      	add	r1, r6
90019082:	f8a3 40b0 	strh.w	r4, [r3, #176]	; 0xb0
90019086:	f8a3 20ac 	strh.w	r2, [r3, #172]	; 0xac
9001908a:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	; 0xae
9001908e:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
90019092:	e75c      	b.n	90018f4e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
90019094:	9b08      	ldr	r3, [sp, #32]
90019096:	2d06      	cmp	r5, #6
90019098:	eba3 0308 	sub.w	r3, r3, r8
9001909c:	b29b      	uxth	r3, r3
9001909e:	b218      	sxth	r0, r3
900190a0:	d813      	bhi.n	900190ca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
900190a2:	9b07      	ldr	r3, [sp, #28]
900190a4:	f8a4 00aa 	strh.w	r0, [r4, #170]	; 0xaa
900190a8:	f8a4 30a6 	strh.w	r3, [r4, #166]	; 0xa6
900190ac:	1c6b      	adds	r3, r5, #1
900190ae:	9901      	ldr	r1, [sp, #4]
900190b0:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
900190b4:	9b01      	ldr	r3, [sp, #4]
900190b6:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
900190ba:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
900190be:	805a      	strh	r2, [r3, #2]
900190c0:	9a09      	ldr	r2, [sp, #36]	; 0x24
900190c2:	f8a3 e006 	strh.w	lr, [r3, #6]
900190c6:	809a      	strh	r2, [r3, #4]
900190c8:	e75f      	b.n	90018f8a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
900190ca:	9c02      	ldr	r4, [sp, #8]
900190cc:	4570      	cmp	r0, lr
900190ce:	ea4f 04c4 	mov.w	r4, r4, lsl #3
900190d2:	db0d      	blt.n	900190f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
900190d4:	4431      	add	r1, r6
900190d6:	9b06      	ldr	r3, [sp, #24]
900190d8:	445c      	add	r4, fp
900190da:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
900190de:	b289      	uxth	r1, r1
900190e0:	f8a4 00b2 	strh.w	r0, [r4, #178]	; 0xb2
900190e4:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
900190e8:	4419      	add	r1, r3
900190ea:	f8a4 10ae 	strh.w	r1, [r4, #174]	; 0xae
900190ee:	e583      	b.n	90018bf8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
900190f0:	445c      	add	r4, fp
900190f2:	f8a4 e0b2 	strh.w	lr, [r4, #178]	; 0xb2
900190f6:	e79b      	b.n	90019030 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
900190f8:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
900190fc:	f64f 76ff 	movw	r6, #65535	; 0xffff
90019100:	1e65      	subs	r5, r4, #1
90019102:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
90019106:	b2ad      	uxth	r5, r5
90019108:	42b5      	cmp	r5, r6
9001910a:	d044      	beq.n	90019196 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
9001910c:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
90019110:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	; 0xa6
90019114:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
90019118:	4282      	cmp	r2, r0
9001911a:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	; 0xa4
9001911e:	d11f      	bne.n	90019160 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
90019120:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
90019124:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
90019128:	459c      	cmp	ip, r3
9001912a:	d119      	bne.n	90019160 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
9001912c:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	; 0xa8
90019130:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
90019134:	19d8      	adds	r0, r3, r7
90019136:	b200      	sxth	r0, r0
90019138:	4288      	cmp	r0, r1
9001913a:	d109      	bne.n	90019150 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
9001913c:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
90019140:	4413      	add	r3, r2
90019142:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
90019146:	4629      	mov	r1, r5
90019148:	9801      	ldr	r0, [sp, #4]
9001914a:	f7ff fd2b 	bl	90018ba4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
9001914e:	e003      	b.n	90019158 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
90019150:	4411      	add	r1, r2
90019152:	b209      	sxth	r1, r1
90019154:	42b9      	cmp	r1, r7
90019156:	d0f3      	beq.n	90019140 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
90019158:	3d01      	subs	r5, #1
9001915a:	3c08      	subs	r4, #8
9001915c:	b2ad      	uxth	r5, r5
9001915e:	e7d3      	b.n	90019108 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
90019160:	42b9      	cmp	r1, r7
90019162:	d1f9      	bne.n	90019158 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
90019164:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	; 0x2c
90019168:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
9001916c:	4299      	cmp	r1, r3
9001916e:	d1f3      	bne.n	90019158 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
90019170:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
90019174:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
90019178:	181f      	adds	r7, r3, r0
9001917a:	b23f      	sxth	r7, r7
9001917c:	42ba      	cmp	r2, r7
9001917e:	d105      	bne.n	9001918c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
90019180:	f8ad 002a 	strh.w	r0, [sp, #42]	; 0x2a
90019184:	440b      	add	r3, r1
90019186:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
9001918a:	e7dc      	b.n	90019146 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
9001918c:	440a      	add	r2, r1
9001918e:	b212      	sxth	r2, r2
90019190:	4290      	cmp	r0, r2
90019192:	d1e1      	bne.n	90019158 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
90019194:	e7f6      	b.n	90019184 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
90019196:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	; 0xec
9001919a:	2e07      	cmp	r6, #7
9001919c:	ea4f 04c6 	mov.w	r4, r6, lsl #3
900191a0:	d812      	bhi.n	900191c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
900191a2:	1c75      	adds	r5, r6, #1
900191a4:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
900191a8:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
900191ac:	f8ab 50ec 	strh.w	r5, [fp, #236]	; 0xec
900191b0:	9d01      	ldr	r5, [sp, #4]
900191b2:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
900191b6:	442c      	add	r4, r5
900191b8:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
900191bc:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
900191c0:	8061      	strh	r1, [r4, #2]
900191c2:	80a2      	strh	r2, [r4, #4]
900191c4:	80e3      	strh	r3, [r4, #6]
900191c6:	e581      	b.n	90018ccc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
900191c8:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
900191cc:	3e01      	subs	r6, #1
900191ce:	445c      	add	r4, fp
900191d0:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
900191d4:	f04f 37ff 	mov.w	r7, #4294967295
900191d8:	2500      	movs	r5, #0
900191da:	9305      	str	r3, [sp, #20]
900191dc:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
900191e0:	1e72      	subs	r2, r6, #1
900191e2:	9302      	str	r3, [sp, #8]
900191e4:	4691      	mov	r9, r2
900191e6:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
900191ea:	9304      	str	r3, [sp, #16]
900191ec:	f104 03a4 	add.w	r3, r4, #164	; 0xa4
900191f0:	f1b9 3fff 	cmp.w	r9, #4294967295
900191f4:	6818      	ldr	r0, [r3, #0]
900191f6:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
900191fa:	9207      	str	r2, [sp, #28]
900191fc:	bf16      	itet	ne
900191fe:	9905      	ldrne	r1, [sp, #20]
90019200:	f8dd e00c 	ldreq.w	lr, [sp, #12]
90019204:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
90019208:	9306      	str	r3, [sp, #24]
9001920a:	f8be 1006 	ldrh.w	r1, [lr, #6]
9001920e:	f8be 8004 	ldrh.w	r8, [lr, #4]
90019212:	fb18 f801 	smulbb	r8, r8, r1
90019216:	6859      	ldr	r1, [r3, #4]
90019218:	e8ac 0003 	stmia.w	ip!, {r0, r1}
9001921c:	4671      	mov	r1, lr
9001921e:	a80c      	add	r0, sp, #48	; 0x30
90019220:	f7ff fb6a 	bl	900188f8 <_ZN8touchgfx4Rect11expandToFitERKS0_>
90019224:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
90019228:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
9001922c:	f04f 0c08 	mov.w	ip, #8
90019230:	9b04      	ldr	r3, [sp, #16]
90019232:	9a02      	ldr	r2, [sp, #8]
90019234:	fb10 f001 	smulbb	r0, r0, r1
90019238:	fb02 8803 	mla	r8, r2, r3, r8
9001923c:	eba0 0108 	sub.w	r1, r0, r8
90019240:	fb90 f0fc 	sdiv	r0, r0, ip
90019244:	4288      	cmp	r0, r1
90019246:	dc20      	bgt.n	9001928a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6be>
90019248:	4551      	cmp	r1, sl
9001924a:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
9001924e:	da03      	bge.n	90019258 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68c>
90019250:	b1d9      	cbz	r1, 9001928a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6be>
90019252:	468a      	mov	sl, r1
90019254:	464f      	mov	r7, r9
90019256:	4635      	mov	r5, r6
90019258:	f109 39ff 	add.w	r9, r9, #4294967295
9001925c:	f119 0f02 	cmn.w	r9, #2
90019260:	d1c6      	bne.n	900191f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
90019262:	4616      	mov	r6, r2
90019264:	3201      	adds	r2, #1
90019266:	f1a4 0408 	sub.w	r4, r4, #8
9001926a:	d1b7      	bne.n	900191dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
9001926c:	9b01      	ldr	r3, [sp, #4]
9001926e:	b2ac      	uxth	r4, r5
90019270:	00ed      	lsls	r5, r5, #3
90019272:	1958      	adds	r0, r3, r5
90019274:	1c7b      	adds	r3, r7, #1
90019276:	d10b      	bne.n	90019290 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c4>
90019278:	4601      	mov	r1, r0
9001927a:	9803      	ldr	r0, [sp, #12]
9001927c:	f7ff fb3c 	bl	900188f8 <_ZN8touchgfx4Rect11expandToFitERKS0_>
90019280:	4621      	mov	r1, r4
90019282:	9801      	ldr	r0, [sp, #4]
90019284:	f7ff fc8e 	bl	90018ba4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90019288:	e4b6      	b.n	90018bf8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
9001928a:	464f      	mov	r7, r9
9001928c:	4635      	mov	r5, r6
9001928e:	e7ed      	b.n	9001926c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a0>
90019290:	9b01      	ldr	r3, [sp, #4]
90019292:	00ff      	lsls	r7, r7, #3
90019294:	445d      	add	r5, fp
90019296:	19d9      	adds	r1, r3, r7
90019298:	445f      	add	r7, fp
9001929a:	f7ff fb2d 	bl	900188f8 <_ZN8touchgfx4Rect11expandToFitERKS0_>
9001929e:	9b03      	ldr	r3, [sp, #12]
900192a0:	cb03      	ldmia	r3!, {r0, r1}
900192a2:	9b03      	ldr	r3, [sp, #12]
900192a4:	f8c7 00ac 	str.w	r0, [r7, #172]	; 0xac
900192a8:	f8c7 10b0 	str.w	r1, [r7, #176]	; 0xb0
900192ac:	f855 0fac 	ldr.w	r0, [r5, #172]!
900192b0:	6869      	ldr	r1, [r5, #4]
900192b2:	c303      	stmia	r3!, {r0, r1}
900192b4:	e7e4      	b.n	90019280 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b4>
900192b6:	bf00      	nop

900192b8 <_ZN8touchgfx11Application15drawCachedAreasEv>:
900192b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900192bc:	f500 7698 	add.w	r6, r0, #304	; 0x130
900192c0:	b09b      	sub	sp, #108	; 0x6c
900192c2:	4604      	mov	r4, r0
900192c4:	4630      	mov	r0, r6
900192c6:	f7fa fc80 	bl	90013bca <_ZNK8touchgfx4Rect7isEmptyEv>
900192ca:	4605      	mov	r5, r0
900192cc:	b948      	cbnz	r0, 900192e2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
900192ce:	6823      	ldr	r3, [r4, #0]
900192d0:	4620      	mov	r0, r4
900192d2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
900192d4:	e896 0006 	ldmia.w	r6, {r1, r2}
900192d8:	4798      	blx	r3
900192da:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
900192de:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
900192e2:	4bc5      	ldr	r3, [pc, #788]	; (900195f8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x340>)
900192e4:	681b      	ldr	r3, [r3, #0]
900192e6:	2b00      	cmp	r3, #0
900192e8:	d03f      	beq.n	9001936a <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
900192ea:	4dc4      	ldr	r5, [pc, #784]	; (900195fc <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
900192ec:	4628      	mov	r0, r5
900192ee:	f7fa fc6c 	bl	90013bca <_ZNK8touchgfx4Rect7isEmptyEv>
900192f2:	4606      	mov	r6, r0
900192f4:	2800      	cmp	r0, #0
900192f6:	d138      	bne.n	9001936a <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
900192f8:	4628      	mov	r0, r5
900192fa:	f7ff f973 	bl	900185e4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
900192fe:	6823      	ldr	r3, [r4, #0]
90019300:	6829      	ldr	r1, [r5, #0]
90019302:	4620      	mov	r0, r4
90019304:	6c1b      	ldr	r3, [r3, #64]	; 0x40
90019306:	686a      	ldr	r2, [r5, #4]
90019308:	4798      	blx	r3
9001930a:	802e      	strh	r6, [r5, #0]
9001930c:	806e      	strh	r6, [r5, #2]
9001930e:	80ae      	strh	r6, [r5, #4]
90019310:	80ee      	strh	r6, [r5, #6]
90019312:	f10d 0824 	add.w	r8, sp, #36	; 0x24
90019316:	4dba      	ldr	r5, [pc, #744]	; (90019600 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
90019318:	4640      	mov	r0, r8
9001931a:	f7ff fbe7 	bl	90018aec <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
9001931e:	882e      	ldrh	r6, [r5, #0]
90019320:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
90019324:	f104 00ac 	add.w	r0, r4, #172	; 0xac
90019328:	4633      	mov	r3, r6
9001932a:	42bb      	cmp	r3, r7
9001932c:	d224      	bcs.n	90019378 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
9001932e:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
90019332:	2907      	cmp	r1, #7
90019334:	d816      	bhi.n	90019364 <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
90019336:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
9001933a:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
9001933e:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
90019342:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
90019346:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
9001934a:	1c4a      	adds	r2, r1, #1
9001934c:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
90019350:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
90019354:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
90019358:	f8a2 a002 	strh.w	sl, [r2, #2]
9001935c:	f8a2 e004 	strh.w	lr, [r2, #4]
90019360:	f8a2 c006 	strh.w	ip, [r2, #6]
90019364:	3301      	adds	r3, #1
90019366:	b29b      	uxth	r3, r3
90019368:	e7df      	b.n	9001932a <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
9001936a:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
9001936e:	2b00      	cmp	r3, #0
90019370:	d1cf      	bne.n	90019312 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
90019372:	b01b      	add	sp, #108	; 0x6c
90019374:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90019378:	f8b4 312e 	ldrh.w	r3, [r4, #302]	; 0x12e
9001937c:	42b3      	cmp	r3, r6
9001937e:	d90c      	bls.n	9001939a <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
90019380:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
90019384:	6822      	ldr	r2, [r4, #0]
90019386:	3601      	adds	r6, #1
90019388:	4620      	mov	r0, r4
9001938a:	6c17      	ldr	r7, [r2, #64]	; 0x40
9001938c:	f8d3 10ee 	ldr.w	r1, [r3, #238]	; 0xee
90019390:	b2b6      	uxth	r6, r6
90019392:	f8d3 20f2 	ldr.w	r2, [r3, #242]	; 0xf2
90019396:	47b8      	blx	r7
90019398:	e7ee      	b.n	90019378 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
9001939a:	4a9a      	ldr	r2, [pc, #616]	; (90019604 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
9001939c:	6813      	ldr	r3, [r2, #0]
9001939e:	4691      	mov	r9, r2
900193a0:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
900193a4:	2b01      	cmp	r3, #1
900193a6:	f040 80e0 	bne.w	9001956a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b2>
900193aa:	8829      	ldrh	r1, [r5, #0]
900193ac:	2600      	movs	r6, #0
900193ae:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
900193b2:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
900193b6:	33ae      	adds	r3, #174	; 0xae
900193b8:	428f      	cmp	r7, r1
900193ba:	f103 0308 	add.w	r3, r3, #8
900193be:	dd0a      	ble.n	900193d6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
900193c0:	f833 2c04 	ldrh.w	r2, [r3, #-4]
900193c4:	3101      	adds	r1, #1
900193c6:	f833 0c08 	ldrh.w	r0, [r3, #-8]
900193ca:	4402      	add	r2, r0
900193cc:	b212      	sxth	r2, r2
900193ce:	4296      	cmp	r6, r2
900193d0:	bfb8      	it	lt
900193d2:	4616      	movlt	r6, r2
900193d4:	e7f0      	b.n	900193b8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
900193d6:	4b8c      	ldr	r3, [pc, #560]	; (90019608 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
900193d8:	f8df 9228 	ldr.w	r9, [pc, #552]	; 90019604 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>
900193dc:	881b      	ldrh	r3, [r3, #0]
900193de:	2b0f      	cmp	r3, #15
900193e0:	bf8c      	ite	hi
900193e2:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
900193e6:	f04f 0b01 	movls.w	fp, #1
900193ea:	2300      	movs	r3, #0
900193ec:	e9cd 3305 	strd	r3, r3, [sp, #20]
900193f0:	f8bd 7016 	ldrh.w	r7, [sp, #22]
900193f4:	f8bd 001a 	ldrh.w	r0, [sp, #26]
900193f8:	4b82      	ldr	r3, [pc, #520]	; (90019604 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
900193fa:	4438      	add	r0, r7
900193fc:	b207      	sxth	r7, r0
900193fe:	6818      	ldr	r0, [r3, #0]
90019400:	42b7      	cmp	r7, r6
90019402:	6803      	ldr	r3, [r0, #0]
90019404:	f280 8083 	bge.w	9001950e <_ZN8touchgfx11Application15drawCachedAreasEv+0x256>
90019408:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
9001940c:	4798      	blx	r3
9001940e:	eb07 030b 	add.w	r3, r7, fp
90019412:	4298      	cmp	r0, r3
90019414:	da07      	bge.n	90019426 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
90019416:	42b0      	cmp	r0, r6
90019418:	da05      	bge.n	90019426 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
9001941a:	4287      	cmp	r7, r0
9001941c:	dd6c      	ble.n	900194f8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
9001941e:	2f00      	cmp	r7, #0
90019420:	dd6a      	ble.n	900194f8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
90019422:	4630      	mov	r0, r6
90019424:	e004      	b.n	90019430 <_ZN8touchgfx11Application15drawCachedAreasEv+0x178>
90019426:	4287      	cmp	r7, r0
90019428:	dcfb      	bgt.n	90019422 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16a>
9001942a:	42b0      	cmp	r0, r6
9001942c:	bfa8      	it	ge
9001942e:	4630      	movge	r0, r6
90019430:	4b76      	ldr	r3, [pc, #472]	; (9001960c <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
90019432:	1bc0      	subs	r0, r0, r7
90019434:	2200      	movs	r2, #0
90019436:	f8ad 7016 	strh.w	r7, [sp, #22]
9001943a:	f9b3 3000 	ldrsh.w	r3, [r3]
9001943e:	882f      	ldrh	r7, [r5, #0]
90019440:	f8ad 2014 	strh.w	r2, [sp, #20]
90019444:	f8ad 3018 	strh.w	r3, [sp, #24]
90019448:	f8ad 001a 	strh.w	r0, [sp, #26]
9001944c:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
90019450:	42bb      	cmp	r3, r7
90019452:	d9cd      	bls.n	900193f0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x138>
90019454:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
90019458:	ab07      	add	r3, sp, #28
9001945a:	f852 0fac 	ldr.w	r0, [r2, #172]!
9001945e:	6851      	ldr	r1, [r2, #4]
90019460:	c303      	stmia	r3!, {r0, r1}
90019462:	a905      	add	r1, sp, #20
90019464:	a807      	add	r0, sp, #28
90019466:	f7ff f9ae 	bl	900187c6 <_ZNK8touchgfx4Rect9intersectERKS0_>
9001946a:	2800      	cmp	r0, #0
9001946c:	d04c      	beq.n	90019508 <_ZN8touchgfx11Application15drawCachedAreasEv+0x250>
9001946e:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
90019472:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
90019476:	f8bd a020 	ldrh.w	sl, [sp, #32]
9001947a:	4686      	mov	lr, r0
9001947c:	4290      	cmp	r0, r2
9001947e:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
90019482:	4450      	add	r0, sl
90019484:	f8bd a018 	ldrh.w	sl, [sp, #24]
90019488:	bfb8      	it	lt
9001948a:	4696      	movlt	lr, r2
9001948c:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
90019490:	4452      	add	r2, sl
90019492:	b280      	uxth	r0, r0
90019494:	4299      	cmp	r1, r3
90019496:	468c      	mov	ip, r1
90019498:	b292      	uxth	r2, r2
9001949a:	9302      	str	r3, [sp, #8]
9001949c:	bfb8      	it	lt
9001949e:	469c      	movlt	ip, r3
900194a0:	b203      	sxth	r3, r0
900194a2:	fa0f fa82 	sxth.w	sl, r2
900194a6:	f8ad e01c 	strh.w	lr, [sp, #28]
900194aa:	f8ad c01e 	strh.w	ip, [sp, #30]
900194ae:	4553      	cmp	r3, sl
900194b0:	bfb8      	it	lt
900194b2:	4602      	movlt	r2, r0
900194b4:	9b02      	ldr	r3, [sp, #8]
900194b6:	eba2 020e 	sub.w	r2, r2, lr
900194ba:	f8ad 2020 	strh.w	r2, [sp, #32]
900194be:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
900194c2:	4411      	add	r1, r2
900194c4:	f8bd 201a 	ldrh.w	r2, [sp, #26]
900194c8:	4413      	add	r3, r2
900194ca:	b289      	uxth	r1, r1
900194cc:	b29b      	uxth	r3, r3
900194ce:	b208      	sxth	r0, r1
900194d0:	b21a      	sxth	r2, r3
900194d2:	4290      	cmp	r0, r2
900194d4:	bfb8      	it	lt
900194d6:	460b      	movlt	r3, r1
900194d8:	eba3 030c 	sub.w	r3, r3, ip
900194dc:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
900194e0:	a807      	add	r0, sp, #28
900194e2:	f7fa fb72 	bl	90013bca <_ZNK8touchgfx4Rect7isEmptyEv>
900194e6:	b920      	cbnz	r0, 900194f2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x23a>
900194e8:	6823      	ldr	r3, [r4, #0]
900194ea:	a907      	add	r1, sp, #28
900194ec:	4620      	mov	r0, r4
900194ee:	6c9b      	ldr	r3, [r3, #72]	; 0x48
900194f0:	4798      	blx	r3
900194f2:	3701      	adds	r7, #1
900194f4:	b2bf      	uxth	r7, r7
900194f6:	e7a9      	b.n	9001944c <_ZN8touchgfx11Application15drawCachedAreasEv+0x194>
900194f8:	f8d9 0000 	ldr.w	r0, [r9]
900194fc:	2101      	movs	r1, #1
900194fe:	6803      	ldr	r3, [r0, #0]
90019500:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
90019504:	4798      	blx	r3
90019506:	e773      	b.n	900193f0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x138>
90019508:	e9cd 0007 	strd	r0, r0, [sp, #28]
9001950c:	e7e8      	b.n	900194e0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x228>
9001950e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90019510:	4798      	blx	r3
90019512:	4b3f      	ldr	r3, [pc, #252]	; (90019610 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
90019514:	781b      	ldrb	r3, [r3, #0]
90019516:	2b00      	cmp	r3, #0
90019518:	f43f af2b 	beq.w	90019372 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
9001951c:	2300      	movs	r3, #0
9001951e:	f104 00ee 	add.w	r0, r4, #238	; 0xee
90019522:	f8a4 312e 	strh.w	r3, [r4, #302]	; 0x12e
90019526:	882b      	ldrh	r3, [r5, #0]
90019528:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
9001952c:	42ab      	cmp	r3, r5
9001952e:	f4bf af20 	bcs.w	90019372 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
90019532:	f8b4 112e 	ldrh.w	r1, [r4, #302]	; 0x12e
90019536:	2907      	cmp	r1, #7
90019538:	d814      	bhi.n	90019564 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ac>
9001953a:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
9001953e:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
90019542:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
90019546:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
9001954a:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
9001954e:	1c4a      	adds	r2, r1, #1
90019550:	f8a4 212e 	strh.w	r2, [r4, #302]	; 0x12e
90019554:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
90019558:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
9001955c:	f8a2 c002 	strh.w	ip, [r2, #2]
90019560:	8097      	strh	r7, [r2, #4]
90019562:	80d6      	strh	r6, [r2, #6]
90019564:	3301      	adds	r3, #1
90019566:	b29b      	uxth	r3, r3
90019568:	e7e0      	b.n	9001952c <_ZN8touchgfx11Application15drawCachedAreasEv+0x274>
9001956a:	2b02      	cmp	r3, #2
9001956c:	f040 8133 	bne.w	900197d6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x51e>
90019570:	4b28      	ldr	r3, [pc, #160]	; (90019614 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
90019572:	f104 0aac 	add.w	sl, r4, #172	; 0xac
90019576:	781b      	ldrb	r3, [r3, #0]
90019578:	2b01      	cmp	r3, #1
9001957a:	f000 8098 	beq.w	900196ae <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
9001957e:	882a      	ldrh	r2, [r5, #0]
90019580:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	; 0xec
90019584:	3201      	adds	r2, #1
90019586:	b292      	uxth	r2, r2
90019588:	2900      	cmp	r1, #0
9001958a:	d0c2      	beq.n	90019512 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
9001958c:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	; 0xae
90019590:	4694      	mov	ip, r2
90019592:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	; 0xb2
90019596:	f04f 0900 	mov.w	r9, #0
9001959a:	441e      	add	r6, r3
9001959c:	b236      	sxth	r6, r6
9001959e:	fa1f f38c 	uxth.w	r3, ip
900195a2:	ea4f 07c9 	mov.w	r7, r9, lsl #3
900195a6:	4299      	cmp	r1, r3
900195a8:	f240 80be 	bls.w	90019728 <_ZN8touchgfx11Application15drawCachedAreasEv+0x470>
900195ac:	4427      	add	r7, r4
900195ae:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
900195b2:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	; 0xae
900195b6:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	; 0xae
900195ba:	4283      	cmp	r3, r0
900195bc:	f340 80a0 	ble.w	90019700 <_ZN8touchgfx11Application15drawCachedAreasEv+0x448>
900195c0:	f8be 60b2 	ldrh.w	r6, [lr, #178]	; 0xb2
900195c4:	46e1      	mov	r9, ip
900195c6:	4406      	add	r6, r0
900195c8:	b236      	sxth	r6, r6
900195ca:	429e      	cmp	r6, r3
900195cc:	bfa8      	it	ge
900195ce:	461e      	movge	r6, r3
900195d0:	f10c 0c01 	add.w	ip, ip, #1
900195d4:	e7e3      	b.n	9001959e <_ZN8touchgfx11Application15drawCachedAreasEv+0x2e6>
900195d6:	d10a      	bne.n	900195ee <_ZN8touchgfx11Application15drawCachedAreasEv+0x336>
900195d8:	4562      	cmp	r2, ip
900195da:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	; 0xb2
900195de:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	; 0xb2
900195e2:	bfb8      	it	lt
900195e4:	4662      	movlt	r2, ip
900195e6:	4288      	cmp	r0, r1
900195e8:	bfb8      	it	lt
900195ea:	461f      	movlt	r7, r3
900195ec:	e086      	b.n	900196fc <_ZN8touchgfx11Application15drawCachedAreasEv+0x444>
900195ee:	428a      	cmp	r2, r1
900195f0:	bfb8      	it	lt
900195f2:	460a      	movlt	r2, r1
900195f4:	e082      	b.n	900196fc <_ZN8touchgfx11Application15drawCachedAreasEv+0x444>
900195f6:	bf00      	nop
900195f8:	2402370c 	.word	0x2402370c
900195fc:	24023718 	.word	0x24023718
90019600:	24000074 	.word	0x24000074
90019604:	240236cc 	.word	0x240236cc
90019608:	240236c2 	.word	0x240236c2
9001960c:	240236c0 	.word	0x240236c0
90019610:	240236ca 	.word	0x240236ca
90019614:	240236c4 	.word	0x240236c4
90019618:	19a1      	adds	r1, r4, r6
9001961a:	ab07      	add	r3, sp, #28
9001961c:	f851 0fac 	ldr.w	r0, [r1, #172]!
90019620:	6849      	ldr	r1, [r1, #4]
90019622:	c303      	stmia	r3!, {r0, r1}
90019624:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
90019628:	a807      	add	r0, sp, #28
9001962a:	f8bd 101c 	ldrh.w	r1, [sp, #28]
9001962e:	2b13      	cmp	r3, #19
90019630:	440b      	add	r3, r1
90019632:	bfd8      	it	le
90019634:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
90019638:	1a9b      	subs	r3, r3, r2
9001963a:	f8ad 201c 	strh.w	r2, [sp, #28]
9001963e:	f8ad 3020 	strh.w	r3, [sp, #32]
90019642:	f7fe ffe9 	bl	90018618 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90019646:	a807      	add	r0, sp, #28
90019648:	f7fa fabf 	bl	90013bca <_ZNK8touchgfx4Rect7isEmptyEv>
9001964c:	bb78      	cbnz	r0, 900196ae <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
9001964e:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
90019652:	4426      	add	r6, r4
90019654:	f8d9 0000 	ldr.w	r0, [r9]
90019658:	f1bc 0f14 	cmp.w	ip, #20
9001965c:	f8bd 3020 	ldrh.w	r3, [sp, #32]
90019660:	f8d0 e000 	ldr.w	lr, [r0]
90019664:	bfa8      	it	ge
90019666:	f04f 0c14 	movge.w	ip, #20
9001966a:	f8bd 201e 	ldrh.w	r2, [sp, #30]
9001966e:	f8bd 101c 	ldrh.w	r1, [sp, #28]
90019672:	fa1f fc8c 	uxth.w	ip, ip
90019676:	f8cd c000 	str.w	ip, [sp]
9001967a:	f8de b090 	ldr.w	fp, [lr, #144]	; 0x90
9001967e:	47d8      	blx	fp
90019680:	4683      	mov	fp, r0
90019682:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
90019686:	a807      	add	r0, sp, #28
90019688:	f7fe ffac 	bl	900185e4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
9001968c:	6823      	ldr	r3, [r4, #0]
9001968e:	4620      	mov	r0, r4
90019690:	a907      	add	r1, sp, #28
90019692:	6c9b      	ldr	r3, [r3, #72]	; 0x48
90019694:	4798      	blx	r3
90019696:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
9001969a:	eba0 000b 	sub.w	r0, r0, fp
9001969e:	b200      	sxth	r0, r0
900196a0:	f8a6 00b0 	strh.w	r0, [r6, #176]	; 0xb0
900196a4:	b918      	cbnz	r0, 900196ae <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
900196a6:	b2b9      	uxth	r1, r7
900196a8:	4650      	mov	r0, sl
900196aa:	f7ff fa7b 	bl	90018ba4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
900196ae:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	; 0xec
900196b2:	f1bb 0f00 	cmp.w	fp, #0
900196b6:	f43f af2c 	beq.w	90019512 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
900196ba:	882b      	ldrh	r3, [r5, #0]
900196bc:	2700      	movs	r7, #0
900196be:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	; 0xac
900196c2:	3301      	adds	r3, #1
900196c4:	b29b      	uxth	r3, r3
900196c6:	b299      	uxth	r1, r3
900196c8:	00fe      	lsls	r6, r7, #3
900196ca:	458b      	cmp	fp, r1
900196cc:	d9a4      	bls.n	90019618 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>
900196ce:	4426      	add	r6, r4
900196d0:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
900196d4:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	; 0xac
900196d8:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
900196dc:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	; 0xac
900196e0:	4408      	add	r0, r1
900196e2:	f8be 10b0 	ldrh.w	r1, [lr, #176]	; 0xb0
900196e6:	4461      	add	r1, ip
900196e8:	b200      	sxth	r0, r0
900196ea:	b209      	sxth	r1, r1
900196ec:	4288      	cmp	r0, r1
900196ee:	f6bf af72 	bge.w	900195d6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31e>
900196f2:	4584      	cmp	ip, r0
900196f4:	4662      	mov	r2, ip
900196f6:	461f      	mov	r7, r3
900196f8:	bfb8      	it	lt
900196fa:	4602      	movlt	r2, r0
900196fc:	3301      	adds	r3, #1
900196fe:	e7e2      	b.n	900196c6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x40e>
90019700:	d10e      	bne.n	90019720 <_ZN8touchgfx11Application15drawCachedAreasEv+0x468>
90019702:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	; 0xb0
90019706:	f8be e0b2 	ldrh.w	lr, [lr, #178]	; 0xb2
9001970a:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	; 0xb0
9001970e:	4473      	add	r3, lr
90019710:	b21b      	sxth	r3, r3
90019712:	429e      	cmp	r6, r3
90019714:	bfa8      	it	ge
90019716:	461e      	movge	r6, r3
90019718:	4287      	cmp	r7, r0
9001971a:	bfb8      	it	lt
9001971c:	46e1      	movlt	r9, ip
9001971e:	e757      	b.n	900195d0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
90019720:	4286      	cmp	r6, r0
90019722:	bfa8      	it	ge
90019724:	4606      	movge	r6, r0
90019726:	e753      	b.n	900195d0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
90019728:	eb0a 0007 	add.w	r0, sl, r7
9001972c:	4427      	add	r7, r4
9001972e:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	; 0xb2
90019732:	f1bb 0f13 	cmp.w	fp, #19
90019736:	bfdc      	itt	le
90019738:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	; 0xae
9001973c:	445e      	addle	r6, fp
9001973e:	e9cd 2102 	strd	r2, r1, [sp, #8]
90019742:	bfd8      	it	le
90019744:	b236      	sxthle	r6, r6
90019746:	f7fa fa40 	bl	90013bca <_ZNK8touchgfx4Rect7isEmptyEv>
9001974a:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
9001974e:	2800      	cmp	r0, #0
90019750:	f47f af1a 	bne.w	90019588 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d0>
90019754:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	; 0xae
90019758:	fa1f fb8b 	uxth.w	fp, fp
9001975c:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
90019760:	1ab6      	subs	r6, r6, r2
90019762:	4829      	ldr	r0, [pc, #164]	; (90019808 <_ZN8touchgfx11Application15drawCachedAreasEv+0x550>)
90019764:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	; 0xac
90019768:	2e14      	cmp	r6, #20
9001976a:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	; 0xb0
9001976e:	6800      	ldr	r0, [r0, #0]
90019770:	bfa8      	it	ge
90019772:	2614      	movge	r6, #20
90019774:	f8ad 101c 	strh.w	r1, [sp, #28]
90019778:	f8ad 201e 	strh.w	r2, [sp, #30]
9001977c:	b289      	uxth	r1, r1
9001977e:	f8ad 3020 	strh.w	r3, [sp, #32]
90019782:	b2b6      	uxth	r6, r6
90019784:	f8d0 c000 	ldr.w	ip, [r0]
90019788:	b292      	uxth	r2, r2
9001978a:	455e      	cmp	r6, fp
9001978c:	bf94      	ite	ls
9001978e:	9600      	strls	r6, [sp, #0]
90019790:	f8cd b000 	strhi.w	fp, [sp]
90019794:	b29b      	uxth	r3, r3
90019796:	f8dc 6090 	ldr.w	r6, [ip, #144]	; 0x90
9001979a:	47b0      	blx	r6
9001979c:	6823      	ldr	r3, [r4, #0]
9001979e:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
900197a2:	a907      	add	r1, sp, #28
900197a4:	6c9b      	ldr	r3, [r3, #72]	; 0x48
900197a6:	4620      	mov	r0, r4
900197a8:	4798      	blx	r3
900197aa:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
900197ae:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	; 0xb2
900197b2:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	; 0xae
900197b6:	1a5b      	subs	r3, r3, r1
900197b8:	440a      	add	r2, r1
900197ba:	b21b      	sxth	r3, r3
900197bc:	f8a7 20ae 	strh.w	r2, [r7, #174]	; 0xae
900197c0:	f8a7 30b2 	strh.w	r3, [r7, #178]	; 0xb2
900197c4:	2b00      	cmp	r3, #0
900197c6:	f47f aeda 	bne.w	9001957e <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c6>
900197ca:	fa1f f189 	uxth.w	r1, r9
900197ce:	4650      	mov	r0, sl
900197d0:	f7ff f9e8 	bl	90018ba4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
900197d4:	e6d3      	b.n	9001957e <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c6>
900197d6:	882e      	ldrh	r6, [r5, #0]
900197d8:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
900197dc:	42b3      	cmp	r3, r6
900197de:	f67f ae98 	bls.w	90019512 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
900197e2:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
900197e6:	ab07      	add	r3, sp, #28
900197e8:	f852 0fac 	ldr.w	r0, [r2, #172]!
900197ec:	6851      	ldr	r1, [r2, #4]
900197ee:	c303      	stmia	r3!, {r0, r1}
900197f0:	a807      	add	r0, sp, #28
900197f2:	f7fa f9ea 	bl	90013bca <_ZNK8touchgfx4Rect7isEmptyEv>
900197f6:	b920      	cbnz	r0, 90019802 <_ZN8touchgfx11Application15drawCachedAreasEv+0x54a>
900197f8:	6823      	ldr	r3, [r4, #0]
900197fa:	a907      	add	r1, sp, #28
900197fc:	4620      	mov	r0, r4
900197fe:	6c9b      	ldr	r3, [r3, #72]	; 0x48
90019800:	4798      	blx	r3
90019802:	3601      	adds	r6, #1
90019804:	b2b6      	uxth	r6, r6
90019806:	e7e7      	b.n	900197d8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x520>
90019808:	240236cc 	.word	0x240236cc

9001980c <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
9001980c:	4b03      	ldr	r3, [pc, #12]	; (9001981c <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
9001980e:	2200      	movs	r2, #0
90019810:	801a      	strh	r2, [r3, #0]
90019812:	805a      	strh	r2, [r3, #2]
90019814:	809a      	strh	r2, [r3, #4]
90019816:	80da      	strh	r2, [r3, #6]
90019818:	4770      	bx	lr
9001981a:	bf00      	nop
9001981c:	24023718 	.word	0x24023718

90019820 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
90019820:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90019824:	b09d      	sub	sp, #116	; 0x74
90019826:	4606      	mov	r6, r0
90019828:	4614      	mov	r4, r2
9001982a:	468a      	mov	sl, r1
9001982c:	a803      	add	r0, sp, #12
9001982e:	461d      	mov	r5, r3
90019830:	f000 fe5b 	bl	9001a4ea <_ZN8touchgfx12TextProviderC1Ev>
90019834:	6833      	ldr	r3, [r6, #0]
90019836:	4630      	mov	r0, r6
90019838:	f242 0b0b 	movw	fp, #8203	; 0x200b
9001983c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
9001983e:	4798      	blx	r3
90019840:	6833      	ldr	r3, [r6, #0]
90019842:	4607      	mov	r7, r0
90019844:	4630      	mov	r0, r6
90019846:	6d1b      	ldr	r3, [r3, #80]	; 0x50
90019848:	4798      	blx	r3
9001984a:	462a      	mov	r2, r5
9001984c:	2500      	movs	r5, #0
9001984e:	4621      	mov	r1, r4
90019850:	9000      	str	r0, [sp, #0]
90019852:	463b      	mov	r3, r7
90019854:	462c      	mov	r4, r5
90019856:	46a9      	mov	r9, r5
90019858:	46a8      	mov	r8, r5
9001985a:	a803      	add	r0, sp, #12
9001985c:	f000 fea0 	bl	9001a5a0 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90019860:	2300      	movs	r3, #0
90019862:	9302      	str	r3, [sp, #8]
90019864:	f64f 63ff 	movw	r3, #65279	; 0xfeff
90019868:	429c      	cmp	r4, r3
9001986a:	d002      	beq.n	90019872 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
9001986c:	455c      	cmp	r4, fp
9001986e:	bf18      	it	ne
90019870:	4625      	movne	r5, r4
90019872:	ab02      	add	r3, sp, #8
90019874:	4632      	mov	r2, r6
90019876:	4651      	mov	r1, sl
90019878:	a803      	add	r0, sp, #12
9001987a:	f001 f997 	bl	9001abac <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
9001987e:	4604      	mov	r4, r0
90019880:	b108      	cbz	r0, 90019886 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
90019882:	280a      	cmp	r0, #10
90019884:	d10a      	bne.n	9001989c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
90019886:	45c1      	cmp	r9, r8
90019888:	bf38      	it	cc
9001988a:	46c1      	movcc	r9, r8
9001988c:	f04f 0800 	mov.w	r8, #0
90019890:	2c00      	cmp	r4, #0
90019892:	d1e5      	bne.n	90019860 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
90019894:	4648      	mov	r0, r9
90019896:	b01d      	add	sp, #116	; 0x74
90019898:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001989c:	9a02      	ldr	r2, [sp, #8]
9001989e:	2a00      	cmp	r2, #0
900198a0:	d0de      	beq.n	90019860 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
900198a2:	7b57      	ldrb	r7, [r2, #13]
900198a4:	4629      	mov	r1, r5
900198a6:	6833      	ldr	r3, [r6, #0]
900198a8:	007f      	lsls	r7, r7, #1
900198aa:	8894      	ldrh	r4, [r2, #4]
900198ac:	6c5b      	ldr	r3, [r3, #68]	; 0x44
900198ae:	f407 7080 	and.w	r0, r7, #256	; 0x100
900198b2:	7a97      	ldrb	r7, [r2, #10]
900198b4:	4307      	orrs	r7, r0
900198b6:	4630      	mov	r0, r6
900198b8:	4798      	blx	r3
900198ba:	4438      	add	r0, r7
900198bc:	4480      	add	r8, r0
900198be:	fa1f f888 	uxth.w	r8, r8
900198c2:	e7e5      	b.n	90019890 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

900198c4 <_ZNK8touchgfx4Font12getCharWidthEt>:
900198c4:	b508      	push	{r3, lr}
900198c6:	6803      	ldr	r3, [r0, #0]
900198c8:	68db      	ldr	r3, [r3, #12]
900198ca:	4798      	blx	r3
900198cc:	b128      	cbz	r0, 900198da <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
900198ce:	7b43      	ldrb	r3, [r0, #13]
900198d0:	7a80      	ldrb	r0, [r0, #10]
900198d2:	005b      	lsls	r3, r3, #1
900198d4:	f403 7380 	and.w	r3, r3, #256	; 0x100
900198d8:	4318      	orrs	r0, r3
900198da:	bd08      	pop	{r3, pc}

900198dc <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
900198dc:	b40e      	push	{r1, r2, r3}
900198de:	b5f0      	push	{r4, r5, r6, r7, lr}
900198e0:	b09e      	sub	sp, #120	; 0x78
900198e2:	4605      	mov	r5, r0
900198e4:	ab23      	add	r3, sp, #140	; 0x8c
900198e6:	a805      	add	r0, sp, #20
900198e8:	f853 4b04 	ldr.w	r4, [r3], #4
900198ec:	9303      	str	r3, [sp, #12]
900198ee:	f000 fdfc 	bl	9001a4ea <_ZN8touchgfx12TextProviderC1Ev>
900198f2:	682b      	ldr	r3, [r5, #0]
900198f4:	4628      	mov	r0, r5
900198f6:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
900198f8:	4798      	blx	r3
900198fa:	682b      	ldr	r3, [r5, #0]
900198fc:	4606      	mov	r6, r0
900198fe:	4628      	mov	r0, r5
90019900:	6d1b      	ldr	r3, [r3, #80]	; 0x50
90019902:	4798      	blx	r3
90019904:	4633      	mov	r3, r6
90019906:	4621      	mov	r1, r4
90019908:	ae1e      	add	r6, sp, #120	; 0x78
9001990a:	2400      	movs	r4, #0
9001990c:	9000      	str	r0, [sp, #0]
9001990e:	9a03      	ldr	r2, [sp, #12]
90019910:	a805      	add	r0, sp, #20
90019912:	f000 fe45 	bl	9001a5a0 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90019916:	f846 4d68 	str.w	r4, [r6, #-104]!
9001991a:	462a      	mov	r2, r5
9001991c:	4633      	mov	r3, r6
9001991e:	4621      	mov	r1, r4
90019920:	a805      	add	r0, sp, #20
90019922:	f001 f943 	bl	9001abac <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
90019926:	b300      	cbz	r0, 9001996a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8e>
90019928:	280a      	cmp	r0, #10
9001992a:	d01a      	beq.n	90019962 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
9001992c:	9f04      	ldr	r7, [sp, #16]
9001992e:	b1c7      	cbz	r7, 90019962 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
90019930:	7b78      	ldrb	r0, [r7, #13]
90019932:	7a3b      	ldrb	r3, [r7, #8]
90019934:	00c1      	lsls	r1, r0, #3
90019936:	88ea      	ldrh	r2, [r5, #6]
90019938:	f401 7180 	and.w	r1, r1, #256	; 0x100
9001993c:	4319      	orrs	r1, r3
9001993e:	0643      	lsls	r3, r0, #25
90019940:	ea4f 1000 	mov.w	r0, r0, lsl #4
90019944:	bf48      	it	mi
90019946:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
9001994a:	f400 7080 	and.w	r0, r0, #256	; 0x100
9001994e:	bf48      	it	mi
90019950:	b219      	sxthmi	r1, r3
90019952:	79fb      	ldrb	r3, [r7, #7]
90019954:	4303      	orrs	r3, r0
90019956:	4413      	add	r3, r2
90019958:	1a5b      	subs	r3, r3, r1
9001995a:	b21b      	sxth	r3, r3
9001995c:	429c      	cmp	r4, r3
9001995e:	bfb8      	it	lt
90019960:	461c      	movlt	r4, r3
90019962:	4633      	mov	r3, r6
90019964:	462a      	mov	r2, r5
90019966:	2100      	movs	r1, #0
90019968:	e7da      	b.n	90019920 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
9001996a:	b2a0      	uxth	r0, r4
9001996c:	b01e      	add	sp, #120	; 0x78
9001996e:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
90019972:	b003      	add	sp, #12
90019974:	4770      	bx	lr

90019976 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
90019976:	7a43      	ldrb	r3, [r0, #9]
90019978:	8880      	ldrh	r0, [r0, #4]
9001997a:	4418      	add	r0, r3
9001997c:	b280      	uxth	r0, r0
9001997e:	4770      	bx	lr

90019980 <_ZNK8touchgfx4Font13getFontHeightEv>:
90019980:	6803      	ldr	r3, [r0, #0]
90019982:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90019984:	4718      	bx	r3

90019986 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
90019986:	b40e      	push	{r1, r2, r3}
90019988:	b570      	push	{r4, r5, r6, lr}
9001998a:	b09d      	sub	sp, #116	; 0x74
9001998c:	4604      	mov	r4, r0
9001998e:	ab21      	add	r3, sp, #132	; 0x84
90019990:	a803      	add	r0, sp, #12
90019992:	f853 5b04 	ldr.w	r5, [r3], #4
90019996:	9302      	str	r3, [sp, #8]
90019998:	f000 fda7 	bl	9001a4ea <_ZN8touchgfx12TextProviderC1Ev>
9001999c:	6823      	ldr	r3, [r4, #0]
9001999e:	4620      	mov	r0, r4
900199a0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
900199a2:	4798      	blx	r3
900199a4:	6823      	ldr	r3, [r4, #0]
900199a6:	4606      	mov	r6, r0
900199a8:	4620      	mov	r0, r4
900199aa:	6d1b      	ldr	r3, [r3, #80]	; 0x50
900199ac:	2401      	movs	r4, #1
900199ae:	4798      	blx	r3
900199b0:	4633      	mov	r3, r6
900199b2:	9000      	str	r0, [sp, #0]
900199b4:	4629      	mov	r1, r5
900199b6:	9a02      	ldr	r2, [sp, #8]
900199b8:	a803      	add	r0, sp, #12
900199ba:	f000 fdf1 	bl	9001a5a0 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
900199be:	a803      	add	r0, sp, #12
900199c0:	f001 f9c0 	bl	9001ad44 <_ZN8touchgfx12TextProvider11getNextCharEv>
900199c4:	b2a3      	uxth	r3, r4
900199c6:	b138      	cbz	r0, 900199d8 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x52>
900199c8:	280a      	cmp	r0, #10
900199ca:	a803      	add	r0, sp, #12
900199cc:	bf04      	itt	eq
900199ce:	3301      	addeq	r3, #1
900199d0:	b21c      	sxtheq	r4, r3
900199d2:	f001 f9b7 	bl	9001ad44 <_ZN8touchgfx12TextProvider11getNextCharEv>
900199d6:	e7f5      	b.n	900199c4 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
900199d8:	4618      	mov	r0, r3
900199da:	b01d      	add	sp, #116	; 0x74
900199dc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900199e0:	b003      	add	sp, #12
900199e2:	4770      	bx	lr

900199e4 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
900199e4:	b40e      	push	{r1, r2, r3}
900199e6:	b5f0      	push	{r4, r5, r6, r7, lr}
900199e8:	b09e      	sub	sp, #120	; 0x78
900199ea:	4604      	mov	r4, r0
900199ec:	ab23      	add	r3, sp, #140	; 0x8c
900199ee:	a805      	add	r0, sp, #20
900199f0:	f853 5b04 	ldr.w	r5, [r3], #4
900199f4:	9303      	str	r3, [sp, #12]
900199f6:	f000 fd78 	bl	9001a4ea <_ZN8touchgfx12TextProviderC1Ev>
900199fa:	6823      	ldr	r3, [r4, #0]
900199fc:	4620      	mov	r0, r4
900199fe:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
90019a00:	4798      	blx	r3
90019a02:	6823      	ldr	r3, [r4, #0]
90019a04:	4606      	mov	r6, r0
90019a06:	4620      	mov	r0, r4
90019a08:	6d1b      	ldr	r3, [r3, #80]	; 0x50
90019a0a:	4798      	blx	r3
90019a0c:	4633      	mov	r3, r6
90019a0e:	4629      	mov	r1, r5
90019a10:	9000      	str	r0, [sp, #0]
90019a12:	9a03      	ldr	r2, [sp, #12]
90019a14:	a805      	add	r0, sp, #20
90019a16:	f000 fdc3 	bl	9001a5a0 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90019a1a:	ad1e      	add	r5, sp, #120	; 0x78
90019a1c:	2100      	movs	r1, #0
90019a1e:	f647 76ff 	movw	r6, #32767	; 0x7fff
90019a22:	4622      	mov	r2, r4
90019a24:	a805      	add	r0, sp, #20
90019a26:	f845 1d68 	str.w	r1, [r5, #-104]!
90019a2a:	462b      	mov	r3, r5
90019a2c:	f001 f8be 	bl	9001abac <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
90019a30:	b1d8      	cbz	r0, 90019a6a <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
90019a32:	280a      	cmp	r0, #10
90019a34:	d012      	beq.n	90019a5c <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
90019a36:	9804      	ldr	r0, [sp, #16]
90019a38:	b180      	cbz	r0, 90019a5c <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
90019a3a:	7b47      	ldrb	r7, [r0, #13]
90019a3c:	88e2      	ldrh	r2, [r4, #6]
90019a3e:	00fb      	lsls	r3, r7, #3
90019a40:	f403 7180 	and.w	r1, r3, #256	; 0x100
90019a44:	7a03      	ldrb	r3, [r0, #8]
90019a46:	430b      	orrs	r3, r1
90019a48:	0679      	lsls	r1, r7, #25
90019a4a:	bf44      	itt	mi
90019a4c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
90019a50:	b21b      	sxthmi	r3, r3
90019a52:	1ad3      	subs	r3, r2, r3
90019a54:	b21b      	sxth	r3, r3
90019a56:	429e      	cmp	r6, r3
90019a58:	bfa8      	it	ge
90019a5a:	461e      	movge	r6, r3
90019a5c:	462b      	mov	r3, r5
90019a5e:	4622      	mov	r2, r4
90019a60:	2100      	movs	r1, #0
90019a62:	a805      	add	r0, sp, #20
90019a64:	f001 f8a2 	bl	9001abac <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
90019a68:	e7e2      	b.n	90019a30 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
90019a6a:	4630      	mov	r0, r6
90019a6c:	b01e      	add	sp, #120	; 0x78
90019a6e:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
90019a72:	b003      	add	sp, #12
90019a74:	4770      	bx	lr

90019a76 <_ZNK8touchgfx8Drawable10invalidateEv>:
90019a76:	b513      	push	{r0, r1, r4, lr}
90019a78:	6803      	ldr	r3, [r0, #0]
90019a7a:	2400      	movs	r4, #0
90019a7c:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
90019a80:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
90019a84:	f8ad 1004 	strh.w	r1, [sp, #4]
90019a88:	4669      	mov	r1, sp
90019a8a:	691b      	ldr	r3, [r3, #16]
90019a8c:	9400      	str	r4, [sp, #0]
90019a8e:	f8ad 2006 	strh.w	r2, [sp, #6]
90019a92:	4798      	blx	r3
90019a94:	b002      	add	sp, #8
90019a96:	bd10      	pop	{r4, pc}

90019a98 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
90019a98:	b538      	push	{r3, r4, r5, lr}
90019a9a:	680b      	ldr	r3, [r1, #0]
90019a9c:	460c      	mov	r4, r1
90019a9e:	4605      	mov	r5, r0
90019aa0:	68db      	ldr	r3, [r3, #12]
90019aa2:	4798      	blx	r3
90019aa4:	6823      	ldr	r3, [r4, #0]
90019aa6:	4620      	mov	r0, r4
90019aa8:	4629      	mov	r1, r5
90019aaa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90019aac:	4798      	blx	r3
90019aae:	4628      	mov	r0, r5
90019ab0:	bd38      	pop	{r3, r4, r5, pc}

90019ab2 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
90019ab2:	b410      	push	{r4}
90019ab4:	880a      	ldrh	r2, [r1, #0]
90019ab6:	8884      	ldrh	r4, [r0, #4]
90019ab8:	4422      	add	r2, r4
90019aba:	800a      	strh	r2, [r1, #0]
90019abc:	884a      	ldrh	r2, [r1, #2]
90019abe:	88c4      	ldrh	r4, [r0, #6]
90019ac0:	4422      	add	r2, r4
90019ac2:	804a      	strh	r2, [r1, #2]
90019ac4:	6940      	ldr	r0, [r0, #20]
90019ac6:	b120      	cbz	r0, 90019ad2 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
90019ac8:	6803      	ldr	r3, [r0, #0]
90019aca:	f85d 4b04 	ldr.w	r4, [sp], #4
90019ace:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90019ad0:	4718      	bx	r3
90019ad2:	f85d 4b04 	ldr.w	r4, [sp], #4
90019ad6:	4770      	bx	lr

90019ad8 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
90019ad8:	b570      	push	{r4, r5, r6, lr}
90019ada:	8882      	ldrh	r2, [r0, #4]
90019adc:	460c      	mov	r4, r1
90019ade:	880b      	ldrh	r3, [r1, #0]
90019ae0:	4605      	mov	r5, r0
90019ae2:	4413      	add	r3, r2
90019ae4:	800b      	strh	r3, [r1, #0]
90019ae6:	884b      	ldrh	r3, [r1, #2]
90019ae8:	88c2      	ldrh	r2, [r0, #6]
90019aea:	4413      	add	r3, r2
90019aec:	804b      	strh	r3, [r1, #2]
90019aee:	1d01      	adds	r1, r0, #4
90019af0:	4620      	mov	r0, r4
90019af2:	f7fa f827 	bl	90013b44 <_ZN8touchgfx4RectaNERKS0_>
90019af6:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
90019afa:	2b00      	cmp	r3, #0
90019afc:	dd0b      	ble.n	90019b16 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
90019afe:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
90019b02:	2b00      	cmp	r3, #0
90019b04:	dd07      	ble.n	90019b16 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
90019b06:	6968      	ldr	r0, [r5, #20]
90019b08:	b128      	cbz	r0, 90019b16 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
90019b0a:	6803      	ldr	r3, [r0, #0]
90019b0c:	4621      	mov	r1, r4
90019b0e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90019b10:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90019b14:	4718      	bx	r3
90019b16:	bd70      	pop	{r4, r5, r6, pc}

90019b18 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
90019b18:	b570      	push	{r4, r5, r6, lr}
90019b1a:	8882      	ldrh	r2, [r0, #4]
90019b1c:	460c      	mov	r4, r1
90019b1e:	880b      	ldrh	r3, [r1, #0]
90019b20:	4605      	mov	r5, r0
90019b22:	4413      	add	r3, r2
90019b24:	800b      	strh	r3, [r1, #0]
90019b26:	884b      	ldrh	r3, [r1, #2]
90019b28:	88c2      	ldrh	r2, [r0, #6]
90019b2a:	4413      	add	r3, r2
90019b2c:	804b      	strh	r3, [r1, #2]
90019b2e:	1d01      	adds	r1, r0, #4
90019b30:	4620      	mov	r0, r4
90019b32:	f7fa f807 	bl	90013b44 <_ZN8touchgfx4RectaNERKS0_>
90019b36:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
90019b3a:	2b00      	cmp	r3, #0
90019b3c:	dd19      	ble.n	90019b72 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
90019b3e:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
90019b42:	2b00      	cmp	r3, #0
90019b44:	dd15      	ble.n	90019b72 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
90019b46:	6968      	ldr	r0, [r5, #20]
90019b48:	b128      	cbz	r0, 90019b56 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
90019b4a:	6803      	ldr	r3, [r0, #0]
90019b4c:	4621      	mov	r1, r4
90019b4e:	691b      	ldr	r3, [r3, #16]
90019b50:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90019b54:	4718      	bx	r3
90019b56:	4b07      	ldr	r3, [pc, #28]	; (90019b74 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
90019b58:	681b      	ldr	r3, [r3, #0]
90019b5a:	3304      	adds	r3, #4
90019b5c:	429d      	cmp	r5, r3
90019b5e:	d108      	bne.n	90019b72 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
90019b60:	f7fe ff10 	bl	90018984 <_ZN8touchgfx11Application11getInstanceEv>
90019b64:	6803      	ldr	r3, [r0, #0]
90019b66:	6821      	ldr	r1, [r4, #0]
90019b68:	6862      	ldr	r2, [r4, #4]
90019b6a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
90019b6c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90019b70:	4718      	bx	r3
90019b72:	bd70      	pop	{r4, r5, r6, pc}
90019b74:	24023710 	.word	0x24023710

90019b78 <_ZN8touchgfx8Drawable12moveRelativeEss>:
90019b78:	b570      	push	{r4, r5, r6, lr}
90019b7a:	4604      	mov	r4, r0
90019b7c:	4616      	mov	r6, r2
90019b7e:	460d      	mov	r5, r1
90019b80:	b901      	cbnz	r1, 90019b84 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
90019b82:	b192      	cbz	r2, 90019baa <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
90019b84:	6823      	ldr	r3, [r4, #0]
90019b86:	4620      	mov	r0, r4
90019b88:	699b      	ldr	r3, [r3, #24]
90019b8a:	4798      	blx	r3
90019b8c:	88e2      	ldrh	r2, [r4, #6]
90019b8e:	88a1      	ldrh	r1, [r4, #4]
90019b90:	4620      	mov	r0, r4
90019b92:	4432      	add	r2, r6
90019b94:	4429      	add	r1, r5
90019b96:	b212      	sxth	r2, r2
90019b98:	b209      	sxth	r1, r1
90019b9a:	f7fa faa9 	bl	900140f0 <_ZN8touchgfx8Drawable5setXYEss>
90019b9e:	6823      	ldr	r3, [r4, #0]
90019ba0:	4620      	mov	r0, r4
90019ba2:	699b      	ldr	r3, [r3, #24]
90019ba4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90019ba8:	4718      	bx	r3
90019baa:	bd70      	pop	{r4, r5, r6, pc}

90019bac <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
90019bac:	b510      	push	{r4, lr}
90019bae:	2300      	movs	r3, #0
90019bb0:	4604      	mov	r4, r0
90019bb2:	4608      	mov	r0, r1
90019bb4:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
90019bb8:	8023      	strh	r3, [r4, #0]
90019bba:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
90019bbe:	8063      	strh	r3, [r4, #2]
90019bc0:	6803      	ldr	r3, [r0, #0]
90019bc2:	80a1      	strh	r1, [r4, #4]
90019bc4:	4621      	mov	r1, r4
90019bc6:	80e2      	strh	r2, [r4, #6]
90019bc8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90019bca:	4798      	blx	r3
90019bcc:	4620      	mov	r0, r4
90019bce:	bd10      	pop	{r4, pc}

90019bd0 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
90019bd0:	b530      	push	{r4, r5, lr}
90019bd2:	8083      	strh	r3, [r0, #4]
90019bd4:	f8bd 300c 	ldrh.w	r3, [sp, #12]
90019bd8:	f89d 5018 	ldrb.w	r5, [sp, #24]
90019bdc:	80c3      	strh	r3, [r0, #6]
90019bde:	f89d 3010 	ldrb.w	r3, [sp, #16]
90019be2:	6141      	str	r1, [r0, #20]
90019be4:	7203      	strb	r3, [r0, #8]
90019be6:	f89d 3014 	ldrb.w	r3, [sp, #20]
90019bea:	8302      	strh	r2, [r0, #24]
90019bec:	7243      	strb	r3, [r0, #9]
90019bee:	7a83      	ldrb	r3, [r0, #10]
90019bf0:	f365 0306 	bfi	r3, r5, #0, #7
90019bf4:	f89d 501c 	ldrb.w	r5, [sp, #28]
90019bf8:	f365 13c7 	bfi	r3, r5, #7, #1
90019bfc:	7283      	strb	r3, [r0, #10]
90019bfe:	f89d 3020 	ldrb.w	r3, [sp, #32]
90019c02:	72c3      	strb	r3, [r0, #11]
90019c04:	f89d 3024 	ldrb.w	r3, [sp, #36]	; 0x24
90019c08:	7303      	strb	r3, [r0, #12]
90019c0a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
90019c0e:	81c3      	strh	r3, [r0, #14]
90019c10:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
90019c14:	8203      	strh	r3, [r0, #16]
90019c16:	4b01      	ldr	r3, [pc, #4]	; (90019c1c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
90019c18:	6003      	str	r3, [r0, #0]
90019c1a:	bd30      	pop	{r4, r5, pc}
90019c1c:	9002e67c 	.word	0x9002e67c

90019c20 <_ZNK8touchgfx9ConstFont4findEt>:
90019c20:	b5f0      	push	{r4, r5, r6, r7, lr}
90019c22:	6944      	ldr	r4, [r0, #20]
90019c24:	b3bc      	cbz	r4, 90019c96 <_ZNK8touchgfx9ConstFont4findEt+0x76>
90019c26:	88a3      	ldrh	r3, [r4, #4]
90019c28:	8b02      	ldrh	r2, [r0, #24]
90019c2a:	1acb      	subs	r3, r1, r3
90019c2c:	f102 32ff 	add.w	r2, r2, #4294967295
90019c30:	d431      	bmi.n	90019c96 <_ZNK8touchgfx9ConstFont4findEt+0x76>
90019c32:	4293      	cmp	r3, r2
90019c34:	dd0c      	ble.n	90019c50 <_ZNK8touchgfx9ConstFont4findEt+0x30>
90019c36:	230e      	movs	r3, #14
90019c38:	fb03 4302 	mla	r3, r3, r2, r4
90019c3c:	889b      	ldrh	r3, [r3, #4]
90019c3e:	1a5b      	subs	r3, r3, r1
90019c40:	1ad3      	subs	r3, r2, r3
90019c42:	429a      	cmp	r2, r3
90019c44:	db27      	blt.n	90019c96 <_ZNK8touchgfx9ConstFont4findEt+0x76>
90019c46:	2b00      	cmp	r3, #0
90019c48:	bfbc      	itt	lt
90019c4a:	2302      	movlt	r3, #2
90019c4c:	fb92 f3f3 	sdivlt	r3, r2, r3
90019c50:	2500      	movs	r5, #0
90019c52:	260e      	movs	r6, #14
90019c54:	4295      	cmp	r5, r2
90019c56:	dc1e      	bgt.n	90019c96 <_ZNK8touchgfx9ConstFont4findEt+0x76>
90019c58:	fb06 4003 	mla	r0, r6, r3, r4
90019c5c:	8887      	ldrh	r7, [r0, #4]
90019c5e:	42b9      	cmp	r1, r7
90019c60:	d01a      	beq.n	90019c98 <_ZNK8touchgfx9ConstFont4findEt+0x78>
90019c62:	d20d      	bcs.n	90019c80 <_ZNK8touchgfx9ConstFont4findEt+0x60>
90019c64:	1e5a      	subs	r2, r3, #1
90019c66:	4295      	cmp	r5, r2
90019c68:	dc15      	bgt.n	90019c96 <_ZNK8touchgfx9ConstFont4findEt+0x76>
90019c6a:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
90019c6e:	1a5b      	subs	r3, r3, r1
90019c70:	1ad3      	subs	r3, r2, r3
90019c72:	429a      	cmp	r2, r3
90019c74:	db0f      	blt.n	90019c96 <_ZNK8touchgfx9ConstFont4findEt+0x76>
90019c76:	429d      	cmp	r5, r3
90019c78:	ddec      	ble.n	90019c54 <_ZNK8touchgfx9ConstFont4findEt+0x34>
90019c7a:	1953      	adds	r3, r2, r5
90019c7c:	105b      	asrs	r3, r3, #1
90019c7e:	e7e9      	b.n	90019c54 <_ZNK8touchgfx9ConstFont4findEt+0x34>
90019c80:	1c5d      	adds	r5, r3, #1
90019c82:	42aa      	cmp	r2, r5
90019c84:	db07      	blt.n	90019c96 <_ZNK8touchgfx9ConstFont4findEt+0x76>
90019c86:	8a43      	ldrh	r3, [r0, #18]
90019c88:	1acb      	subs	r3, r1, r3
90019c8a:	442b      	add	r3, r5
90019c8c:	429d      	cmp	r5, r3
90019c8e:	dc02      	bgt.n	90019c96 <_ZNK8touchgfx9ConstFont4findEt+0x76>
90019c90:	429a      	cmp	r2, r3
90019c92:	dadf      	bge.n	90019c54 <_ZNK8touchgfx9ConstFont4findEt+0x34>
90019c94:	e7f1      	b.n	90019c7a <_ZNK8touchgfx9ConstFont4findEt+0x5a>
90019c96:	2000      	movs	r0, #0
90019c98:	bdf0      	pop	{r4, r5, r6, r7, pc}

90019c9a <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
90019c9a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90019c9c:	4604      	mov	r4, r0
90019c9e:	4617      	mov	r7, r2
90019ca0:	461e      	mov	r6, r3
90019ca2:	b911      	cbnz	r1, 90019caa <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
90019ca4:	2500      	movs	r5, #0
90019ca6:	4628      	mov	r0, r5
90019ca8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90019caa:	290a      	cmp	r1, #10
90019cac:	d0fa      	beq.n	90019ca4 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
90019cae:	f64f 62ff 	movw	r2, #65279	; 0xfeff
90019cb2:	4291      	cmp	r1, r2
90019cb4:	d0f6      	beq.n	90019ca4 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
90019cb6:	f242 020b 	movw	r2, #8203	; 0x200b
90019cba:	4291      	cmp	r1, r2
90019cbc:	d0f2      	beq.n	90019ca4 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
90019cbe:	f7ff ffaf 	bl	90019c20 <_ZNK8touchgfx9ConstFont4findEt>
90019cc2:	4605      	mov	r5, r0
90019cc4:	b950      	cbnz	r0, 90019cdc <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
90019cc6:	6823      	ldr	r3, [r4, #0]
90019cc8:	4620      	mov	r0, r4
90019cca:	691b      	ldr	r3, [r3, #16]
90019ccc:	4798      	blx	r3
90019cce:	4601      	mov	r1, r0
90019cd0:	4620      	mov	r0, r4
90019cd2:	f7ff ffa5 	bl	90019c20 <_ZNK8touchgfx9ConstFont4findEt>
90019cd6:	4605      	mov	r5, r0
90019cd8:	2800      	cmp	r0, #0
90019cda:	d0e3      	beq.n	90019ca4 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
90019cdc:	6823      	ldr	r3, [r4, #0]
90019cde:	4629      	mov	r1, r5
90019ce0:	4620      	mov	r0, r4
90019ce2:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
90019ce4:	4798      	blx	r3
90019ce6:	6038      	str	r0, [r7, #0]
90019ce8:	6823      	ldr	r3, [r4, #0]
90019cea:	4620      	mov	r0, r4
90019cec:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90019cee:	4798      	blx	r3
90019cf0:	7030      	strb	r0, [r6, #0]
90019cf2:	e7d8      	b.n	90019ca6 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

90019cf4 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
90019cf4:	b538      	push	{r3, r4, r5, lr}
90019cf6:	4605      	mov	r5, r0
90019cf8:	f002 f8f4 	bl	9001bee4 <_ZNK8touchgfx6Bitmap9getFormatEv>
90019cfc:	4604      	mov	r4, r0
90019cfe:	4628      	mov	r0, r5
90019d00:	f002 f834 	bl	9001bd6c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
90019d04:	2800      	cmp	r0, #0
90019d06:	bf14      	ite	ne
90019d08:	2002      	movne	r0, #2
90019d0a:	2000      	moveq	r0, #0
90019d0c:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
90019d10:	b280      	uxth	r0, r0
90019d12:	bd38      	pop	{r3, r4, r5, pc}

90019d14 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
90019d14:	b538      	push	{r3, r4, r5, lr}
90019d16:	4605      	mov	r5, r0
90019d18:	f002 f8e4 	bl	9001bee4 <_ZNK8touchgfx6Bitmap9getFormatEv>
90019d1c:	4604      	mov	r4, r0
90019d1e:	4628      	mov	r0, r5
90019d20:	f002 f824 	bl	9001bd6c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
90019d24:	2800      	cmp	r0, #0
90019d26:	bf14      	ite	ne
90019d28:	2002      	movne	r0, #2
90019d2a:	2000      	moveq	r0, #0
90019d2c:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
90019d30:	f040 0001 	orr.w	r0, r0, #1
90019d34:	b280      	uxth	r0, r0
90019d36:	bd38      	pop	{r3, r4, r5, pc}

90019d38 <_ZN8touchgfx4clzuEm>:
90019d38:	4603      	mov	r3, r0
90019d3a:	b1c8      	cbz	r0, 90019d70 <_ZN8touchgfx4clzuEm+0x38>
90019d3c:	0c02      	lsrs	r2, r0, #16
90019d3e:	0412      	lsls	r2, r2, #16
90019d40:	b9a2      	cbnz	r2, 90019d6c <_ZN8touchgfx4clzuEm+0x34>
90019d42:	0403      	lsls	r3, r0, #16
90019d44:	2010      	movs	r0, #16
90019d46:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
90019d4a:	bf04      	itt	eq
90019d4c:	021b      	lsleq	r3, r3, #8
90019d4e:	3008      	addeq	r0, #8
90019d50:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
90019d54:	bf04      	itt	eq
90019d56:	011b      	lsleq	r3, r3, #4
90019d58:	3004      	addeq	r0, #4
90019d5a:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
90019d5e:	bf04      	itt	eq
90019d60:	009b      	lsleq	r3, r3, #2
90019d62:	3002      	addeq	r0, #2
90019d64:	2b00      	cmp	r3, #0
90019d66:	db04      	blt.n	90019d72 <_ZN8touchgfx4clzuEm+0x3a>
90019d68:	3001      	adds	r0, #1
90019d6a:	4770      	bx	lr
90019d6c:	2000      	movs	r0, #0
90019d6e:	e7ea      	b.n	90019d46 <_ZN8touchgfx4clzuEm+0xe>
90019d70:	2020      	movs	r0, #32
90019d72:	4770      	bx	lr

90019d74 <_ZN8touchgfx7muldivuEmmmRm>:
90019d74:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
90019d78:	460f      	mov	r7, r1
90019d7a:	4615      	mov	r5, r2
90019d7c:	461e      	mov	r6, r3
90019d7e:	4601      	mov	r1, r0
90019d80:	b100      	cbz	r0, 90019d84 <_ZN8touchgfx7muldivuEmmmRm+0x10>
90019d82:	b927      	cbnz	r7, 90019d8e <_ZN8touchgfx7muldivuEmmmRm+0x1a>
90019d84:	2000      	movs	r0, #0
90019d86:	6030      	str	r0, [r6, #0]
90019d88:	b002      	add	sp, #8
90019d8a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90019d8e:	f7ff ffd3 	bl	90019d38 <_ZN8touchgfx4clzuEm>
90019d92:	b980      	cbnz	r0, 90019db6 <_ZN8touchgfx7muldivuEmmmRm+0x42>
90019d94:	4638      	mov	r0, r7
90019d96:	f7ff ffcf 	bl	90019d38 <_ZN8touchgfx4clzuEm>
90019d9a:	2800      	cmp	r0, #0
90019d9c:	dd05      	ble.n	90019daa <_ZN8touchgfx7muldivuEmmmRm+0x36>
90019d9e:	4633      	mov	r3, r6
90019da0:	462a      	mov	r2, r5
90019da2:	4638      	mov	r0, r7
90019da4:	f7ff ffe6 	bl	90019d74 <_ZN8touchgfx7muldivuEmmmRm>
90019da8:	e7ee      	b.n	90019d88 <_ZN8touchgfx7muldivuEmmmRm+0x14>
90019daa:	f04f 33ff 	mov.w	r3, #4294967295
90019dae:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
90019db2:	6033      	str	r3, [r6, #0]
90019db4:	e7e8      	b.n	90019d88 <_ZN8touchgfx7muldivuEmmmRm+0x14>
90019db6:	fa37 f800 	lsrs.w	r8, r7, r0
90019dba:	fb07 f301 	mul.w	r3, r7, r1
90019dbe:	d105      	bne.n	90019dcc <_ZN8touchgfx7muldivuEmmmRm+0x58>
90019dc0:	fbb3 f0f5 	udiv	r0, r3, r5
90019dc4:	fb05 3510 	mls	r5, r5, r0, r3
90019dc8:	6035      	str	r5, [r6, #0]
90019dca:	e7dd      	b.n	90019d88 <_ZN8touchgfx7muldivuEmmmRm+0x14>
90019dcc:	2301      	movs	r3, #1
90019dce:	fa01 fa00 	lsl.w	sl, r1, r0
90019dd2:	462a      	mov	r2, r5
90019dd4:	fa03 f000 	lsl.w	r0, r3, r0
90019dd8:	4633      	mov	r3, r6
90019dda:	fbba f9f5 	udiv	r9, sl, r5
90019dde:	3801      	subs	r0, #1
90019de0:	fb08 f409 	mul.w	r4, r8, r9
90019de4:	4038      	ands	r0, r7
90019de6:	f7ff ffc5 	bl	90019d74 <_ZN8touchgfx7muldivuEmmmRm>
90019dea:	462a      	mov	r2, r5
90019dec:	4607      	mov	r7, r0
90019dee:	ab01      	add	r3, sp, #4
90019df0:	fb05 a119 	mls	r1, r5, r9, sl
90019df4:	4640      	mov	r0, r8
90019df6:	f7ff ffbd 	bl	90019d74 <_ZN8touchgfx7muldivuEmmmRm>
90019dfa:	9b01      	ldr	r3, [sp, #4]
90019dfc:	6832      	ldr	r2, [r6, #0]
90019dfe:	441a      	add	r2, r3
90019e00:	fbb2 f3f5 	udiv	r3, r2, r5
90019e04:	441c      	add	r4, r3
90019e06:	fb05 2513 	mls	r5, r5, r3, r2
90019e0a:	443c      	add	r4, r7
90019e0c:	4420      	add	r0, r4
90019e0e:	e7db      	b.n	90019dc8 <_ZN8touchgfx7muldivuEmmmRm+0x54>

90019e10 <_ZN8touchgfx6muldivElllRl>:
90019e10:	b573      	push	{r0, r1, r4, r5, r6, lr}
90019e12:	2800      	cmp	r0, #0
90019e14:	461e      	mov	r6, r3
90019e16:	bfba      	itte	lt
90019e18:	4240      	neglt	r0, r0
90019e1a:	f04f 34ff 	movlt.w	r4, #4294967295
90019e1e:	2401      	movge	r4, #1
90019e20:	2900      	cmp	r1, #0
90019e22:	bfbc      	itt	lt
90019e24:	4249      	neglt	r1, r1
90019e26:	4264      	neglt	r4, r4
90019e28:	2a00      	cmp	r2, #0
90019e2a:	bfb6      	itet	lt
90019e2c:	4265      	neglt	r5, r4
90019e2e:	4625      	movge	r5, r4
90019e30:	4252      	neglt	r2, r2
90019e32:	4288      	cmp	r0, r1
90019e34:	bfc2      	ittt	gt
90019e36:	4603      	movgt	r3, r0
90019e38:	4608      	movgt	r0, r1
90019e3a:	4619      	movgt	r1, r3
90019e3c:	ab01      	add	r3, sp, #4
90019e3e:	f7ff ff99 	bl	90019d74 <_ZN8touchgfx7muldivuEmmmRm>
90019e42:	9b01      	ldr	r3, [sp, #4]
90019e44:	4368      	muls	r0, r5
90019e46:	435c      	muls	r4, r3
90019e48:	6034      	str	r4, [r6, #0]
90019e4a:	b002      	add	sp, #8
90019e4c:	bd70      	pop	{r4, r5, r6, pc}

90019e4e <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
90019e4e:	2000      	movs	r0, #0
90019e50:	4770      	bx	lr

90019e52 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
90019e52:	2001      	movs	r0, #1
90019e54:	4770      	bx	lr

90019e56 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
90019e56:	2002      	movs	r0, #2
90019e58:	4770      	bx	lr

90019e5a <_ZN8touchgfx6ScreenD1Ev>:
90019e5a:	4770      	bx	lr

90019e5c <_ZN8touchgfx6Screen11setupScreenEv>:
90019e5c:	4770      	bx	lr

90019e5e <_ZN8touchgfx12GestureEventD1Ev>:
90019e5e:	4770      	bx	lr

90019e60 <_ZN8touchgfx9DragEventD1Ev>:
90019e60:	4770      	bx	lr

90019e62 <_ZN8touchgfx10ClickEventD1Ev>:
90019e62:	4770      	bx	lr

90019e64 <_ZN8touchgfx10ClickEventD0Ev>:
90019e64:	b510      	push	{r4, lr}
90019e66:	4604      	mov	r4, r0
90019e68:	210c      	movs	r1, #12
90019e6a:	f00f fed8 	bl	90029c1e <_ZdlPvj>
90019e6e:	4620      	mov	r0, r4
90019e70:	bd10      	pop	{r4, pc}

90019e72 <_ZN8touchgfx9DragEventD0Ev>:
90019e72:	b510      	push	{r4, lr}
90019e74:	4604      	mov	r4, r0
90019e76:	2110      	movs	r1, #16
90019e78:	f00f fed1 	bl	90029c1e <_ZdlPvj>
90019e7c:	4620      	mov	r0, r4
90019e7e:	bd10      	pop	{r4, pc}

90019e80 <_ZN8touchgfx12GestureEventD0Ev>:
90019e80:	b510      	push	{r4, lr}
90019e82:	4604      	mov	r4, r0
90019e84:	210c      	movs	r1, #12
90019e86:	f00f feca 	bl	90029c1e <_ZdlPvj>
90019e8a:	4620      	mov	r0, r4
90019e8c:	bd10      	pop	{r4, pc}

90019e8e <_ZN8touchgfx6ScreenD0Ev>:
90019e8e:	b510      	push	{r4, lr}
90019e90:	4604      	mov	r4, r0
90019e92:	213c      	movs	r1, #60	; 0x3c
90019e94:	f00f fec3 	bl	90029c1e <_ZdlPvj>
90019e98:	4620      	mov	r0, r4
90019e9a:	bd10      	pop	{r4, pc}

90019e9c <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
90019e9c:	b530      	push	{r4, r5, lr}
90019e9e:	460d      	mov	r5, r1
90019ea0:	6b01      	ldr	r1, [r0, #48]	; 0x30
90019ea2:	b087      	sub	sp, #28
90019ea4:	4604      	mov	r4, r0
90019ea6:	b301      	cbz	r1, 90019eea <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
90019ea8:	a801      	add	r0, sp, #4
90019eaa:	f7ff fe7f 	bl	90019bac <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90019eae:	892a      	ldrh	r2, [r5, #8]
90019eb0:	f8bd 3004 	ldrh.w	r3, [sp, #4]
90019eb4:	7928      	ldrb	r0, [r5, #4]
90019eb6:	1ad2      	subs	r2, r2, r3
90019eb8:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
90019eba:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
90019ebe:	441a      	add	r2, r3
90019ec0:	896b      	ldrh	r3, [r5, #10]
90019ec2:	f8bd 5006 	ldrh.w	r5, [sp, #6]
90019ec6:	f88d 0010 	strb.w	r0, [sp, #16]
90019eca:	1b5b      	subs	r3, r3, r5
90019ecc:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
90019ece:	6b20      	ldr	r0, [r4, #48]	; 0x30
90019ed0:	442b      	add	r3, r5
90019ed2:	4d07      	ldr	r5, [pc, #28]	; (90019ef0 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
90019ed4:	f8ad 1012 	strh.w	r1, [sp, #18]
90019ed8:	a903      	add	r1, sp, #12
90019eda:	9503      	str	r5, [sp, #12]
90019edc:	f8ad 2014 	strh.w	r2, [sp, #20]
90019ee0:	f8ad 3016 	strh.w	r3, [sp, #22]
90019ee4:	6803      	ldr	r3, [r0, #0]
90019ee6:	6c9b      	ldr	r3, [r3, #72]	; 0x48
90019ee8:	4798      	blx	r3
90019eea:	b007      	add	sp, #28
90019eec:	bd30      	pop	{r4, r5, pc}
90019eee:	bf00      	nop
90019ef0:	9002e70c 	.word	0x9002e70c

90019ef4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
90019ef4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90019ef8:	6b03      	ldr	r3, [r0, #48]	; 0x30
90019efa:	b08a      	sub	sp, #40	; 0x28
90019efc:	4604      	mov	r4, r0
90019efe:	460d      	mov	r5, r1
90019f00:	b113      	cbz	r3, 90019f08 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
90019f02:	790b      	ldrb	r3, [r1, #4]
90019f04:	2b00      	cmp	r3, #0
90019f06:	d044      	beq.n	90019f92 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
90019f08:	f104 0804 	add.w	r8, r4, #4
90019f0c:	a803      	add	r0, sp, #12
90019f0e:	4641      	mov	r1, r8
90019f10:	f7ff fe4c 	bl	90019bac <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90019f14:	792b      	ldrb	r3, [r5, #4]
90019f16:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
90019f1a:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
90019f1e:	b983      	cbnz	r3, 90019f42 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
90019f20:	f104 0336 	add.w	r3, r4, #54	; 0x36
90019f24:	892a      	ldrh	r2, [r5, #8]
90019f26:	88e9      	ldrh	r1, [r5, #6]
90019f28:	4640      	mov	r0, r8
90019f2a:	1b92      	subs	r2, r2, r6
90019f2c:	9301      	str	r3, [sp, #4]
90019f2e:	1bc9      	subs	r1, r1, r7
90019f30:	f104 0334 	add.w	r3, r4, #52	; 0x34
90019f34:	b212      	sxth	r2, r2
90019f36:	9300      	str	r3, [sp, #0]
90019f38:	b209      	sxth	r1, r1
90019f3a:	f104 0330 	add.w	r3, r4, #48	; 0x30
90019f3e:	f7f9 fd1f 	bl	90013980 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
90019f42:	6b21      	ldr	r1, [r4, #48]	; 0x30
90019f44:	b329      	cbz	r1, 90019f92 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
90019f46:	a805      	add	r0, sp, #20
90019f48:	f7ff fe30 	bl	90019bac <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90019f4c:	f8bd 2014 	ldrh.w	r2, [sp, #20]
90019f50:	792b      	ldrb	r3, [r5, #4]
90019f52:	a907      	add	r1, sp, #28
90019f54:	1abf      	subs	r7, r7, r2
90019f56:	88ea      	ldrh	r2, [r5, #6]
90019f58:	6b20      	ldr	r0, [r4, #48]	; 0x30
90019f5a:	4417      	add	r7, r2
90019f5c:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
90019f5e:	f88d 3020 	strb.w	r3, [sp, #32]
90019f62:	4417      	add	r7, r2
90019f64:	f8bd 2016 	ldrh.w	r2, [sp, #22]
90019f68:	1ab6      	subs	r6, r6, r2
90019f6a:	892a      	ldrh	r2, [r5, #8]
90019f6c:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
90019f70:	4416      	add	r6, r2
90019f72:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
90019f74:	4416      	add	r6, r2
90019f76:	4a08      	ldr	r2, [pc, #32]	; (90019f98 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
90019f78:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
90019f7c:	2600      	movs	r6, #0
90019f7e:	9207      	str	r2, [sp, #28]
90019f80:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
90019f84:	6803      	ldr	r3, [r0, #0]
90019f86:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90019f88:	4798      	blx	r3
90019f8a:	792b      	ldrb	r3, [r5, #4]
90019f8c:	b10b      	cbz	r3, 90019f92 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
90019f8e:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
90019f92:	b00a      	add	sp, #40	; 0x28
90019f94:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90019f98:	9002e6e4 	.word	0x9002e6e4

90019f9c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
90019f9c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90019fa0:	460c      	mov	r4, r1
90019fa2:	6b01      	ldr	r1, [r0, #48]	; 0x30
90019fa4:	b088      	sub	sp, #32
90019fa6:	4605      	mov	r5, r0
90019fa8:	2900      	cmp	r1, #0
90019faa:	d06d      	beq.n	9001a088 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
90019fac:	4668      	mov	r0, sp
90019fae:	f7ff fdfd 	bl	90019bac <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90019fb2:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
90019fb4:	88e3      	ldrh	r3, [r4, #6]
90019fb6:	f9bd 8000 	ldrsh.w	r8, [sp]
90019fba:	440b      	add	r3, r1
90019fbc:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
90019fc0:	b21b      	sxth	r3, r3
90019fc2:	4543      	cmp	r3, r8
90019fc4:	db31      	blt.n	9001a02a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
90019fc6:	f8bd c004 	ldrh.w	ip, [sp, #4]
90019fca:	44c4      	add	ip, r8
90019fcc:	fa0f fc8c 	sxth.w	ip, ip
90019fd0:	4563      	cmp	r3, ip
90019fd2:	da2a      	bge.n	9001a02a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
90019fd4:	8eea      	ldrh	r2, [r5, #54]	; 0x36
90019fd6:	8926      	ldrh	r6, [r4, #8]
90019fd8:	4416      	add	r6, r2
90019fda:	b236      	sxth	r6, r6
90019fdc:	42be      	cmp	r6, r7
90019fde:	db24      	blt.n	9001a02a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
90019fe0:	f8bd 0006 	ldrh.w	r0, [sp, #6]
90019fe4:	4438      	add	r0, r7
90019fe6:	b200      	sxth	r0, r0
90019fe8:	4286      	cmp	r6, r0
90019fea:	da1e      	bge.n	9001a02a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
90019fec:	8963      	ldrh	r3, [r4, #10]
90019fee:	4419      	add	r1, r3
90019ff0:	b209      	sxth	r1, r1
90019ff2:	4541      	cmp	r1, r8
90019ff4:	db08      	blt.n	9001a008 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
90019ff6:	4561      	cmp	r1, ip
90019ff8:	da06      	bge.n	9001a008 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
90019ffa:	89a3      	ldrh	r3, [r4, #12]
90019ffc:	441a      	add	r2, r3
90019ffe:	b212      	sxth	r2, r2
9001a000:	42ba      	cmp	r2, r7
9001a002:	db01      	blt.n	9001a008 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
9001a004:	4282      	cmp	r2, r0
9001a006:	db10      	blt.n	9001a02a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
9001a008:	4b21      	ldr	r3, [pc, #132]	; (9001a090 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
9001a00a:	a904      	add	r1, sp, #16
9001a00c:	6b28      	ldr	r0, [r5, #48]	; 0x30
9001a00e:	9304      	str	r3, [sp, #16]
9001a010:	2302      	movs	r3, #2
9001a012:	f88d 3014 	strb.w	r3, [sp, #20]
9001a016:	2300      	movs	r3, #0
9001a018:	f8ad 3016 	strh.w	r3, [sp, #22]
9001a01c:	f8ad 3018 	strh.w	r3, [sp, #24]
9001a020:	f8ad 301a 	strh.w	r3, [sp, #26]
9001a024:	6803      	ldr	r3, [r0, #0]
9001a026:	6c5b      	ldr	r3, [r3, #68]	; 0x44
9001a028:	4798      	blx	r3
9001a02a:	1d29      	adds	r1, r5, #4
9001a02c:	a802      	add	r0, sp, #8
9001a02e:	f7ff fdbd 	bl	90019bac <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001a032:	f8bd 3008 	ldrh.w	r3, [sp, #8]
9001a036:	88e0      	ldrh	r0, [r4, #6]
9001a038:	eba3 0808 	sub.w	r8, r3, r8
9001a03c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
9001a040:	7921      	ldrb	r1, [r4, #4]
9001a042:	fa1f f888 	uxth.w	r8, r8
9001a046:	1bdf      	subs	r7, r3, r7
9001a048:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
9001a04c:	b2bb      	uxth	r3, r7
9001a04e:	4440      	add	r0, r8
9001a050:	8922      	ldrh	r2, [r4, #8]
9001a052:	8967      	ldrh	r7, [r4, #10]
9001a054:	4460      	add	r0, ip
9001a056:	89a4      	ldrh	r4, [r4, #12]
9001a058:	441a      	add	r2, r3
9001a05a:	8eee      	ldrh	r6, [r5, #54]	; 0x36
9001a05c:	44b8      	add	r8, r7
9001a05e:	4423      	add	r3, r4
9001a060:	f8ad 0016 	strh.w	r0, [sp, #22]
9001a064:	4432      	add	r2, r6
9001a066:	44e0      	add	r8, ip
9001a068:	4433      	add	r3, r6
9001a06a:	4c0a      	ldr	r4, [pc, #40]	; (9001a094 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
9001a06c:	6b28      	ldr	r0, [r5, #48]	; 0x30
9001a06e:	f88d 1014 	strb.w	r1, [sp, #20]
9001a072:	a904      	add	r1, sp, #16
9001a074:	9404      	str	r4, [sp, #16]
9001a076:	f8ad 2018 	strh.w	r2, [sp, #24]
9001a07a:	f8ad 801a 	strh.w	r8, [sp, #26]
9001a07e:	f8ad 301c 	strh.w	r3, [sp, #28]
9001a082:	6803      	ldr	r3, [r0, #0]
9001a084:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
9001a086:	4798      	blx	r3
9001a088:	b008      	add	sp, #32
9001a08a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9001a08e:	bf00      	nop
9001a090:	9002e6e4 	.word	0x9002e6e4
9001a094:	9002e6f8 	.word	0x9002e6f8

9001a098 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
9001a098:	b537      	push	{r0, r1, r2, r4, r5, lr}
9001a09a:	4604      	mov	r4, r0
9001a09c:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
9001a0a0:	3201      	adds	r2, #1
9001a0a2:	d112      	bne.n	9001a0ca <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
9001a0a4:	2500      	movs	r5, #0
9001a0a6:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
9001a0aa:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
9001a0ae:	6803      	ldr	r3, [r0, #0]
9001a0b0:	9500      	str	r5, [sp, #0]
9001a0b2:	466d      	mov	r5, sp
9001a0b4:	f8ad 1004 	strh.w	r1, [sp, #4]
9001a0b8:	f8ad 2006 	strh.w	r2, [sp, #6]
9001a0bc:	4629      	mov	r1, r5
9001a0be:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001a0c0:	4798      	blx	r3
9001a0c2:	e895 0003 	ldmia.w	r5, {r0, r1}
9001a0c6:	e884 0003 	stmia.w	r4, {r0, r1}
9001a0ca:	4620      	mov	r0, r4
9001a0cc:	b003      	add	sp, #12
9001a0ce:	bd30      	pop	{r4, r5, pc}

9001a0d0 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
9001a0d0:	b513      	push	{r0, r1, r4, lr}
9001a0d2:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
9001a0d6:	4604      	mov	r4, r0
9001a0d8:	3301      	adds	r3, #1
9001a0da:	d109      	bne.n	9001a0f0 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
9001a0dc:	4601      	mov	r1, r0
9001a0de:	4668      	mov	r0, sp
9001a0e0:	f7ff fd64 	bl	90019bac <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001a0e4:	f8bd 3000 	ldrh.w	r3, [sp]
9001a0e8:	8423      	strh	r3, [r4, #32]
9001a0ea:	f8bd 3002 	ldrh.w	r3, [sp, #2]
9001a0ee:	8463      	strh	r3, [r4, #34]	; 0x22
9001a0f0:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
9001a0f4:	b002      	add	sp, #8
9001a0f6:	bd10      	pop	{r4, pc}

9001a0f8 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
9001a0f8:	b513      	push	{r0, r1, r4, lr}
9001a0fa:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
9001a0fe:	4604      	mov	r4, r0
9001a100:	3301      	adds	r3, #1
9001a102:	d109      	bne.n	9001a118 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
9001a104:	4601      	mov	r1, r0
9001a106:	4668      	mov	r0, sp
9001a108:	f7ff fd50 	bl	90019bac <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001a10c:	f8bd 3000 	ldrh.w	r3, [sp]
9001a110:	8423      	strh	r3, [r4, #32]
9001a112:	f8bd 3002 	ldrh.w	r3, [sp, #2]
9001a116:	8463      	strh	r3, [r4, #34]	; 0x22
9001a118:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
9001a11c:	b002      	add	sp, #8
9001a11e:	bd10      	pop	{r4, pc}

9001a120 <_ZN8touchgfx6ScreenC1Ev>:
9001a120:	b570      	push	{r4, r5, r6, lr}
9001a122:	4b17      	ldr	r3, [pc, #92]	; (9001a180 <_ZN8touchgfx6ScreenC1Ev+0x60>)
9001a124:	4605      	mov	r5, r0
9001a126:	4a17      	ldr	r2, [pc, #92]	; (9001a184 <_ZN8touchgfx6ScreenC1Ev+0x64>)
9001a128:	2101      	movs	r1, #1
9001a12a:	f845 3b04 	str.w	r3, [r5], #4
9001a12e:	2300      	movs	r3, #0
9001a130:	6042      	str	r2, [r0, #4]
9001a132:	4604      	mov	r4, r0
9001a134:	8103      	strh	r3, [r0, #8]
9001a136:	8143      	strh	r3, [r0, #10]
9001a138:	8183      	strh	r3, [r0, #12]
9001a13a:	81c3      	strh	r3, [r0, #14]
9001a13c:	8203      	strh	r3, [r0, #16]
9001a13e:	8243      	strh	r3, [r0, #18]
9001a140:	8283      	strh	r3, [r0, #20]
9001a142:	82c3      	strh	r3, [r0, #22]
9001a144:	6203      	str	r3, [r0, #32]
9001a146:	8483      	strh	r3, [r0, #36]	; 0x24
9001a148:	84c3      	strh	r3, [r0, #38]	; 0x26
9001a14a:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
9001a14e:	6343      	str	r3, [r0, #52]	; 0x34
9001a150:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
9001a154:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
9001a158:	e9c0 3306 	strd	r3, r3, [r0, #24]
9001a15c:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
9001a160:	4b09      	ldr	r3, [pc, #36]	; (9001a188 <_ZN8touchgfx6ScreenC1Ev+0x68>)
9001a162:	4628      	mov	r0, r5
9001a164:	f9b3 6000 	ldrsh.w	r6, [r3]
9001a168:	6b93      	ldr	r3, [r2, #56]	; 0x38
9001a16a:	4a08      	ldr	r2, [pc, #32]	; (9001a18c <_ZN8touchgfx6ScreenC1Ev+0x6c>)
9001a16c:	f9b2 1000 	ldrsh.w	r1, [r2]
9001a170:	4798      	blx	r3
9001a172:	6863      	ldr	r3, [r4, #4]
9001a174:	4628      	mov	r0, r5
9001a176:	4631      	mov	r1, r6
9001a178:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
9001a17a:	4798      	blx	r3
9001a17c:	4620      	mov	r0, r4
9001a17e:	bd70      	pop	{r4, r5, r6, pc}
9001a180:	9002e720 	.word	0x9002e720
9001a184:	9002e034 	.word	0x9002e034
9001a188:	240236c2 	.word	0x240236c2
9001a18c:	240236c0 	.word	0x240236c0

9001a190 <_ZN8touchgfx6Screen4drawEv>:
9001a190:	4b09      	ldr	r3, [pc, #36]	; (9001a1b8 <_ZN8touchgfx6Screen4drawEv+0x28>)
9001a192:	b507      	push	{r0, r1, r2, lr}
9001a194:	f9b3 2000 	ldrsh.w	r2, [r3]
9001a198:	2100      	movs	r1, #0
9001a19a:	4b08      	ldr	r3, [pc, #32]	; (9001a1bc <_ZN8touchgfx6Screen4drawEv+0x2c>)
9001a19c:	9100      	str	r1, [sp, #0]
9001a19e:	4669      	mov	r1, sp
9001a1a0:	f9b3 3000 	ldrsh.w	r3, [r3]
9001a1a4:	f8ad 2004 	strh.w	r2, [sp, #4]
9001a1a8:	f8ad 3006 	strh.w	r3, [sp, #6]
9001a1ac:	6803      	ldr	r3, [r0, #0]
9001a1ae:	689b      	ldr	r3, [r3, #8]
9001a1b0:	4798      	blx	r3
9001a1b2:	b003      	add	sp, #12
9001a1b4:	f85d fb04 	ldr.w	pc, [sp], #4
9001a1b8:	240236c0 	.word	0x240236c0
9001a1bc:	240236c2 	.word	0x240236c2

9001a1c0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
9001a1c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001a1c4:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
9001a1c8:	b089      	sub	sp, #36	; 0x24
9001a1ca:	4680      	mov	r8, r0
9001a1cc:	460c      	mov	r4, r1
9001a1ce:	2b00      	cmp	r3, #0
9001a1d0:	4615      	mov	r5, r2
9001a1d2:	dd0e      	ble.n	9001a1f2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
9001a1d4:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
9001a1d8:	2b00      	cmp	r3, #0
9001a1da:	dd0a      	ble.n	9001a1f2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
9001a1dc:	4628      	mov	r0, r5
9001a1de:	f7ff ff5b 	bl	9001a098 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
9001a1e2:	4621      	mov	r1, r4
9001a1e4:	f7fe faef 	bl	900187c6 <_ZNK8touchgfx4Rect9intersectERKS0_>
9001a1e8:	69eb      	ldr	r3, [r5, #28]
9001a1ea:	b928      	cbnz	r0, 9001a1f8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
9001a1ec:	461d      	mov	r5, r3
9001a1ee:	2b00      	cmp	r3, #0
9001a1f0:	d1f4      	bne.n	9001a1dc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
9001a1f2:	b009      	add	sp, #36	; 0x24
9001a1f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001a1f8:	ae04      	add	r6, sp, #16
9001a1fa:	2b00      	cmp	r3, #0
9001a1fc:	f000 80b5 	beq.w	9001a36a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
9001a200:	682b      	ldr	r3, [r5, #0]
9001a202:	4629      	mov	r1, r5
9001a204:	a802      	add	r0, sp, #8
9001a206:	68db      	ldr	r3, [r3, #12]
9001a208:	4798      	blx	r3
9001a20a:	4628      	mov	r0, r5
9001a20c:	f7ff ff60 	bl	9001a0d0 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
9001a210:	f8bd 7008 	ldrh.w	r7, [sp, #8]
9001a214:	4407      	add	r7, r0
9001a216:	4628      	mov	r0, r5
9001a218:	f7ff ff6e 	bl	9001a0f8 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
9001a21c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
9001a220:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
9001a224:	b23f      	sxth	r7, r7
9001a226:	4418      	add	r0, r3
9001a228:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
9001a22c:	4621      	mov	r1, r4
9001a22e:	f8ad 2014 	strh.w	r2, [sp, #20]
9001a232:	f8ad 0012 	strh.w	r0, [sp, #18]
9001a236:	4630      	mov	r0, r6
9001a238:	f8ad 3016 	strh.w	r3, [sp, #22]
9001a23c:	f8ad 7010 	strh.w	r7, [sp, #16]
9001a240:	f7f9 fc80 	bl	90013b44 <_ZN8touchgfx4RectaNERKS0_>
9001a244:	4628      	mov	r0, r5
9001a246:	f7ff ff27 	bl	9001a098 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
9001a24a:	ab06      	add	r3, sp, #24
9001a24c:	4602      	mov	r2, r0
9001a24e:	e896 0003 	ldmia.w	r6, {r0, r1}
9001a252:	e883 0003 	stmia.w	r3, {r0, r1}
9001a256:	4611      	mov	r1, r2
9001a258:	4618      	mov	r0, r3
9001a25a:	f7f9 fc73 	bl	90013b44 <_ZN8touchgfx4RectaNERKS0_>
9001a25e:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
9001a262:	f9b4 1000 	ldrsh.w	r1, [r4]
9001a266:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
9001a26a:	4299      	cmp	r1, r3
9001a26c:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
9001a270:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
9001a274:	d10b      	bne.n	9001a28e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
9001a276:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
9001a27a:	4552      	cmp	r2, sl
9001a27c:	d107      	bne.n	9001a28e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
9001a27e:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
9001a282:	455a      	cmp	r2, fp
9001a284:	d103      	bne.n	9001a28e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
9001a286:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
9001a28a:	454a      	cmp	r2, r9
9001a28c:	d06d      	beq.n	9001a36a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
9001a28e:	f1bb 0f00 	cmp.w	fp, #0
9001a292:	dd65      	ble.n	9001a360 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
9001a294:	f1b9 0f00 	cmp.w	r9, #0
9001a298:	dd62      	ble.n	9001a360 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
9001a29a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
9001a29e:	fa1f f08a 	uxth.w	r0, sl
9001a2a2:	4552      	cmp	r2, sl
9001a2a4:	9000      	str	r0, [sp, #0]
9001a2a6:	da12      	bge.n	9001a2ce <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
9001a2a8:	9301      	str	r3, [sp, #4]
9001a2aa:	9b00      	ldr	r3, [sp, #0]
9001a2ac:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
9001a2b0:	f8ad 2012 	strh.w	r2, [sp, #18]
9001a2b4:	1a9a      	subs	r2, r3, r2
9001a2b6:	f8ad 1010 	strh.w	r1, [sp, #16]
9001a2ba:	4631      	mov	r1, r6
9001a2bc:	f8ad 0014 	strh.w	r0, [sp, #20]
9001a2c0:	4640      	mov	r0, r8
9001a2c2:	f8ad 2016 	strh.w	r2, [sp, #22]
9001a2c6:	69ea      	ldr	r2, [r5, #28]
9001a2c8:	f7ff ff7a 	bl	9001a1c0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
9001a2cc:	9b01      	ldr	r3, [sp, #4]
9001a2ce:	f9b4 2000 	ldrsh.w	r2, [r4]
9001a2d2:	b29f      	uxth	r7, r3
9001a2d4:	429a      	cmp	r2, r3
9001a2d6:	da0d      	bge.n	9001a2f4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
9001a2d8:	f8ad 2010 	strh.w	r2, [sp, #16]
9001a2dc:	1aba      	subs	r2, r7, r2
9001a2de:	f8ad a012 	strh.w	sl, [sp, #18]
9001a2e2:	4631      	mov	r1, r6
9001a2e4:	f8ad 2014 	strh.w	r2, [sp, #20]
9001a2e8:	4640      	mov	r0, r8
9001a2ea:	f8ad 9016 	strh.w	r9, [sp, #22]
9001a2ee:	69ea      	ldr	r2, [r5, #28]
9001a2f0:	f7ff ff66 	bl	9001a1c0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
9001a2f4:	8822      	ldrh	r2, [r4, #0]
9001a2f6:	445f      	add	r7, fp
9001a2f8:	88a3      	ldrh	r3, [r4, #4]
9001a2fa:	b2bf      	uxth	r7, r7
9001a2fc:	4413      	add	r3, r2
9001a2fe:	b23a      	sxth	r2, r7
9001a300:	b29b      	uxth	r3, r3
9001a302:	b219      	sxth	r1, r3
9001a304:	4291      	cmp	r1, r2
9001a306:	dd0d      	ble.n	9001a324 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
9001a308:	1bdb      	subs	r3, r3, r7
9001a30a:	f8ad 2010 	strh.w	r2, [sp, #16]
9001a30e:	f8ad a012 	strh.w	sl, [sp, #18]
9001a312:	4631      	mov	r1, r6
9001a314:	f8ad 3014 	strh.w	r3, [sp, #20]
9001a318:	4640      	mov	r0, r8
9001a31a:	f8ad 9016 	strh.w	r9, [sp, #22]
9001a31e:	69ea      	ldr	r2, [r5, #28]
9001a320:	f7ff ff4e 	bl	9001a1c0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
9001a324:	88e2      	ldrh	r2, [r4, #6]
9001a326:	8863      	ldrh	r3, [r4, #2]
9001a328:	4413      	add	r3, r2
9001a32a:	9a00      	ldr	r2, [sp, #0]
9001a32c:	444a      	add	r2, r9
9001a32e:	b29b      	uxth	r3, r3
9001a330:	fa1f f982 	uxth.w	r9, r2
9001a334:	b219      	sxth	r1, r3
9001a336:	fa0f f289 	sxth.w	r2, r9
9001a33a:	428a      	cmp	r2, r1
9001a33c:	da15      	bge.n	9001a36a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
9001a33e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
9001a342:	eba3 0309 	sub.w	r3, r3, r9
9001a346:	f9b4 0000 	ldrsh.w	r0, [r4]
9001a34a:	f8ad 1014 	strh.w	r1, [sp, #20]
9001a34e:	4631      	mov	r1, r6
9001a350:	f8ad 0010 	strh.w	r0, [sp, #16]
9001a354:	f8ad 2012 	strh.w	r2, [sp, #18]
9001a358:	f8ad 3016 	strh.w	r3, [sp, #22]
9001a35c:	69ea      	ldr	r2, [r5, #28]
9001a35e:	e001      	b.n	9001a364 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
9001a360:	69ea      	ldr	r2, [r5, #28]
9001a362:	4621      	mov	r1, r4
9001a364:	4640      	mov	r0, r8
9001a366:	f7ff ff2b 	bl	9001a1c0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
9001a36a:	4628      	mov	r0, r5
9001a36c:	f7ff fe94 	bl	9001a098 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
9001a370:	6861      	ldr	r1, [r4, #4]
9001a372:	4602      	mov	r2, r0
9001a374:	4633      	mov	r3, r6
9001a376:	6820      	ldr	r0, [r4, #0]
9001a378:	c303      	stmia	r3!, {r0, r1}
9001a37a:	4611      	mov	r1, r2
9001a37c:	4630      	mov	r0, r6
9001a37e:	f7f9 fbe1 	bl	90013b44 <_ZN8touchgfx4RectaNERKS0_>
9001a382:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
9001a386:	2b00      	cmp	r3, #0
9001a388:	f77f af33 	ble.w	9001a1f2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
9001a38c:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
9001a390:	2b00      	cmp	r3, #0
9001a392:	f77f af2e 	ble.w	9001a1f2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
9001a396:	4628      	mov	r0, r5
9001a398:	f7ff fe9a 	bl	9001a0d0 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
9001a39c:	f8bd 3010 	ldrh.w	r3, [sp, #16]
9001a3a0:	1a18      	subs	r0, r3, r0
9001a3a2:	f8ad 0010 	strh.w	r0, [sp, #16]
9001a3a6:	4628      	mov	r0, r5
9001a3a8:	f7ff fea6 	bl	9001a0f8 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
9001a3ac:	f8bd 3012 	ldrh.w	r3, [sp, #18]
9001a3b0:	4631      	mov	r1, r6
9001a3b2:	1a18      	subs	r0, r3, r0
9001a3b4:	f8ad 0012 	strh.w	r0, [sp, #18]
9001a3b8:	4628      	mov	r0, r5
9001a3ba:	682b      	ldr	r3, [r5, #0]
9001a3bc:	689b      	ldr	r3, [r3, #8]
9001a3be:	4798      	blx	r3
9001a3c0:	e717      	b.n	9001a1f2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

9001a3c2 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
9001a3c2:	b570      	push	{r4, r5, r6, lr}
9001a3c4:	1d06      	adds	r6, r0, #4
9001a3c6:	b086      	sub	sp, #24
9001a3c8:	460c      	mov	r4, r1
9001a3ca:	2300      	movs	r3, #0
9001a3cc:	4631      	mov	r1, r6
9001a3ce:	4605      	mov	r5, r0
9001a3d0:	a802      	add	r0, sp, #8
9001a3d2:	9301      	str	r3, [sp, #4]
9001a3d4:	f7ff fbea 	bl	90019bac <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001a3d8:	f8bd 3008 	ldrh.w	r3, [sp, #8]
9001a3dc:	8822      	ldrh	r2, [r4, #0]
9001a3de:	f8bd 100a 	ldrh.w	r1, [sp, #10]
9001a3e2:	1ad2      	subs	r2, r2, r3
9001a3e4:	8863      	ldrh	r3, [r4, #2]
9001a3e6:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
9001a3ea:	1a5b      	subs	r3, r3, r1
9001a3ec:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
9001a3f0:	f8ad 2010 	strh.w	r2, [sp, #16]
9001a3f4:	aa01      	add	r2, sp, #4
9001a3f6:	f8ad 0014 	strh.w	r0, [sp, #20]
9001a3fa:	4630      	mov	r0, r6
9001a3fc:	f8ad 1016 	strh.w	r1, [sp, #22]
9001a400:	a904      	add	r1, sp, #16
9001a402:	f8ad 3012 	strh.w	r3, [sp, #18]
9001a406:	f7f9 fc75 	bl	90013cf4 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
9001a40a:	9a01      	ldr	r2, [sp, #4]
9001a40c:	b11a      	cbz	r2, 9001a416 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
9001a40e:	4621      	mov	r1, r4
9001a410:	4628      	mov	r0, r5
9001a412:	f7ff fed5 	bl	9001a1c0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
9001a416:	b006      	add	sp, #24
9001a418:	bd70      	pop	{r4, r5, r6, pc}

9001a41a <_ZN8touchgfx6Screen4drawERNS_4RectE>:
9001a41a:	4602      	mov	r2, r0
9001a41c:	b530      	push	{r4, r5, lr}
9001a41e:	4604      	mov	r4, r0
9001a420:	b085      	sub	sp, #20
9001a422:	f852 0f08 	ldr.w	r0, [r2, #8]!
9001a426:	460d      	mov	r5, r1
9001a428:	466b      	mov	r3, sp
9001a42a:	6851      	ldr	r1, [r2, #4]
9001a42c:	c303      	stmia	r3!, {r0, r1}
9001a42e:	4629      	mov	r1, r5
9001a430:	4668      	mov	r0, sp
9001a432:	f7f9 fb87 	bl	90013b44 <_ZN8touchgfx4RectaNERKS0_>
9001a436:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
9001a43a:	b12b      	cbz	r3, 9001a448 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
9001a43c:	4669      	mov	r1, sp
9001a43e:	4620      	mov	r0, r4
9001a440:	f7ff ffbf 	bl	9001a3c2 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
9001a444:	b005      	add	sp, #20
9001a446:	bd30      	pop	{r4, r5, pc}
9001a448:	3404      	adds	r4, #4
9001a44a:	a802      	add	r0, sp, #8
9001a44c:	4621      	mov	r1, r4
9001a44e:	f7ff fbad 	bl	90019bac <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001a452:	f8bd 3000 	ldrh.w	r3, [sp]
9001a456:	f8bd 2008 	ldrh.w	r2, [sp, #8]
9001a45a:	4669      	mov	r1, sp
9001a45c:	4620      	mov	r0, r4
9001a45e:	1a9b      	subs	r3, r3, r2
9001a460:	f8bd 200a 	ldrh.w	r2, [sp, #10]
9001a464:	f8ad 3000 	strh.w	r3, [sp]
9001a468:	f8bd 3002 	ldrh.w	r3, [sp, #2]
9001a46c:	1a9b      	subs	r3, r3, r2
9001a46e:	f8ad 3002 	strh.w	r3, [sp, #2]
9001a472:	f7f9 fc06 	bl	90013c82 <_ZNK8touchgfx9Container4drawERKNS_4RectE>
9001a476:	e7e5      	b.n	9001a444 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

9001a478 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
9001a478:	460b      	mov	r3, r1
9001a47a:	680a      	ldr	r2, [r1, #0]
9001a47c:	1d01      	adds	r1, r0, #4
9001a47e:	6992      	ldr	r2, [r2, #24]
9001a480:	4618      	mov	r0, r3
9001a482:	4710      	bx	r2

9001a484 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
9001a484:	4298      	cmp	r0, r3
9001a486:	d200      	bcs.n	9001a48a <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
9001a488:	b913      	cbnz	r3, 9001a490 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
9001a48a:	440a      	add	r2, r1
9001a48c:	b210      	sxth	r0, r2
9001a48e:	4770      	bx	lr
9001a490:	ee07 0a90 	vmov	s15, r0
9001a494:	eef8 6a67 	vcvt.f32.u32	s13, s15
9001a498:	ee07 3a90 	vmov	s15, r3
9001a49c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001a4a0:	ee86 7aa7 	vdiv.f32	s14, s13, s15
9001a4a4:	ee07 2a90 	vmov	s15, r2
9001a4a8:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001a4ac:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
9001a4b0:	ee07 1a90 	vmov	s15, r1
9001a4b4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001a4b8:	ee37 7a66 	vsub.f32	s14, s14, s13
9001a4bc:	ee67 5a07 	vmul.f32	s11, s14, s14
9001a4c0:	eee5 6a87 	vfma.f32	s13, s11, s14
9001a4c4:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
9001a4c8:	eee6 7a26 	vfma.f32	s15, s12, s13
9001a4cc:	eef5 7ac0 	vcmpe.f32	s15, #0.0
9001a4d0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001a4d4:	bfcc      	ite	gt
9001a4d6:	ee77 7a87 	vaddgt.f32	s15, s15, s14
9001a4da:	ee77 7ac7 	vsuble.f32	s15, s15, s14
9001a4de:	eefd 7ae7 	vcvt.s32.f32	s15, s15
9001a4e2:	ee17 3a90 	vmov	r3, s15
9001a4e6:	b218      	sxth	r0, r3
9001a4e8:	4770      	bx	lr

9001a4ea <_ZN8touchgfx12TextProviderC1Ev>:
9001a4ea:	b538      	push	{r3, r4, r5, lr}
9001a4ec:	2500      	movs	r5, #0
9001a4ee:	2302      	movs	r3, #2
9001a4f0:	4604      	mov	r4, r0
9001a4f2:	220e      	movs	r2, #14
9001a4f4:	7403      	strb	r3, [r0, #16]
9001a4f6:	4629      	mov	r1, r5
9001a4f8:	6145      	str	r5, [r0, #20]
9001a4fa:	7605      	strb	r5, [r0, #24]
9001a4fc:	83c5      	strh	r5, [r0, #30]
9001a4fe:	8405      	strh	r5, [r0, #32]
9001a500:	86c5      	strh	r5, [r0, #54]	; 0x36
9001a502:	8705      	strh	r5, [r0, #56]	; 0x38
9001a504:	87c5      	strh	r5, [r0, #62]	; 0x3e
9001a506:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
9001a50a:	e9c0 5500 	strd	r5, r5, [r0]
9001a50e:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
9001a512:	304c      	adds	r0, #76	; 0x4c
9001a514:	f00f feaa 	bl	9002a26c <memset>
9001a518:	2301      	movs	r3, #1
9001a51a:	4620      	mov	r0, r4
9001a51c:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
9001a520:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
9001a524:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
9001a528:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
9001a52c:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
9001a530:	f7ec fa98 	bl	90006a64 <_ZN8touchgfx12TextProvider18initializeInternalEv>
9001a534:	4620      	mov	r0, r4
9001a536:	bd38      	pop	{r3, r4, r5, pc}

9001a538 <_ZN8touchgfx12TextProvider11endOfStringEv>:
9001a538:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
9001a53a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001a53e:	8c40      	ldrh	r0, [r0, #34]	; 0x22
9001a540:	fab0 f080 	clz	r0, r0
9001a544:	0940      	lsrs	r0, r0, #5
9001a546:	4770      	bx	lr

9001a548 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
9001a548:	b530      	push	{r4, r5, lr}
9001a54a:	2500      	movs	r5, #0
9001a54c:	2401      	movs	r4, #1
9001a54e:	6843      	ldr	r3, [r0, #4]
9001a550:	b913      	cbnz	r3, 9001a558 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
9001a552:	6803      	ldr	r3, [r0, #0]
9001a554:	b313      	cbz	r3, 9001a59c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
9001a556:	6043      	str	r3, [r0, #4]
9001a558:	7e03      	ldrb	r3, [r0, #24]
9001a55a:	b143      	cbz	r3, 9001a56e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
9001a55c:	6943      	ldr	r3, [r0, #20]
9001a55e:	b12b      	cbz	r3, 9001a56c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
9001a560:	881a      	ldrh	r2, [r3, #0]
9001a562:	b11a      	cbz	r2, 9001a56c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
9001a564:	1c9a      	adds	r2, r3, #2
9001a566:	6142      	str	r2, [r0, #20]
9001a568:	8818      	ldrh	r0, [r3, #0]
9001a56a:	bd30      	pop	{r4, r5, pc}
9001a56c:	7605      	strb	r5, [r0, #24]
9001a56e:	6843      	ldr	r3, [r0, #4]
9001a570:	8819      	ldrh	r1, [r3, #0]
9001a572:	b199      	cbz	r1, 9001a59c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
9001a574:	1c9a      	adds	r2, r3, #2
9001a576:	2902      	cmp	r1, #2
9001a578:	6042      	str	r2, [r0, #4]
9001a57a:	d1f5      	bne.n	9001a568 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
9001a57c:	7c03      	ldrb	r3, [r0, #16]
9001a57e:	2b01      	cmp	r3, #1
9001a580:	d8e5      	bhi.n	9001a54e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
9001a582:	1c5a      	adds	r2, r3, #1
9001a584:	3302      	adds	r3, #2
9001a586:	7402      	strb	r2, [r0, #16]
9001a588:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
9001a58c:	6143      	str	r3, [r0, #20]
9001a58e:	2b00      	cmp	r3, #0
9001a590:	d0dd      	beq.n	9001a54e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
9001a592:	881b      	ldrh	r3, [r3, #0]
9001a594:	2b00      	cmp	r3, #0
9001a596:	d0da      	beq.n	9001a54e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
9001a598:	7604      	strb	r4, [r0, #24]
9001a59a:	e7d8      	b.n	9001a54e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
9001a59c:	2000      	movs	r0, #0
9001a59e:	e7e4      	b.n	9001a56a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

9001a5a0 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
9001a5a0:	6001      	str	r1, [r0, #0]
9001a5a2:	2100      	movs	r1, #0
9001a5a4:	b430      	push	{r4, r5}
9001a5a6:	6041      	str	r1, [r0, #4]
9001a5a8:	6815      	ldr	r5, [r2, #0]
9001a5aa:	6085      	str	r5, [r0, #8]
9001a5ac:	6852      	ldr	r2, [r2, #4]
9001a5ae:	6443      	str	r3, [r0, #68]	; 0x44
9001a5b0:	9b02      	ldr	r3, [sp, #8]
9001a5b2:	60c2      	str	r2, [r0, #12]
9001a5b4:	7401      	strb	r1, [r0, #16]
9001a5b6:	6141      	str	r1, [r0, #20]
9001a5b8:	7601      	strb	r1, [r0, #24]
9001a5ba:	8701      	strh	r1, [r0, #56]	; 0x38
9001a5bc:	8401      	strh	r1, [r0, #32]
9001a5be:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
9001a5c2:	6483      	str	r3, [r0, #72]	; 0x48
9001a5c4:	bc30      	pop	{r4, r5}
9001a5c6:	f7ec ba4d 	b.w	90006a64 <_ZN8touchgfx12TextProvider18initializeInternalEv>

9001a5ca <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
9001a5ca:	b408      	push	{r3}
9001a5cc:	b510      	push	{r4, lr}
9001a5ce:	b085      	sub	sp, #20
9001a5d0:	ac07      	add	r4, sp, #28
9001a5d2:	f854 3b04 	ldr.w	r3, [r4], #4
9001a5d6:	9300      	str	r3, [sp, #0]
9001a5d8:	4613      	mov	r3, r2
9001a5da:	4622      	mov	r2, r4
9001a5dc:	9403      	str	r4, [sp, #12]
9001a5de:	f7ff ffdf 	bl	9001a5a0 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
9001a5e2:	b005      	add	sp, #20
9001a5e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001a5e8:	b001      	add	sp, #4
9001a5ea:	4770      	bx	lr

9001a5ec <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
9001a5ec:	b5f0      	push	{r4, r5, r6, r7, lr}
9001a5ee:	4605      	mov	r5, r0
9001a5f0:	4608      	mov	r0, r1
9001a5f2:	b1f1      	cbz	r1, 9001a632 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x46>
9001a5f4:	f105 044c 	add.w	r4, r5, #76	; 0x4c
9001a5f8:	460b      	mov	r3, r1
9001a5fa:	f101 0708 	add.w	r7, r1, #8
9001a5fe:	4622      	mov	r2, r4
9001a600:	6818      	ldr	r0, [r3, #0]
9001a602:	3308      	adds	r3, #8
9001a604:	f853 1c04 	ldr.w	r1, [r3, #-4]
9001a608:	4626      	mov	r6, r4
9001a60a:	42bb      	cmp	r3, r7
9001a60c:	c603      	stmia	r6!, {r0, r1}
9001a60e:	4634      	mov	r4, r6
9001a610:	d1f6      	bne.n	9001a600 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
9001a612:	6818      	ldr	r0, [r3, #0]
9001a614:	6030      	str	r0, [r6, #0]
9001a616:	4610      	mov	r0, r2
9001a618:	889b      	ldrh	r3, [r3, #4]
9001a61a:	80b3      	strh	r3, [r6, #4]
9001a61c:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
9001a620:	015b      	lsls	r3, r3, #5
9001a622:	f403 7180 	and.w	r1, r3, #256	; 0x100
9001a626:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
9001a62a:	430b      	orrs	r3, r1
9001a62c:	425b      	negs	r3, r3
9001a62e:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
9001a632:	bdf0      	pop	{r4, r5, r6, r7, pc}

9001a634 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
9001a634:	b538      	push	{r3, r4, r5, lr}
9001a636:	460c      	mov	r4, r1
9001a638:	6811      	ldr	r1, [r2, #0]
9001a63a:	4610      	mov	r0, r2
9001a63c:	68cd      	ldr	r5, [r1, #12]
9001a63e:	4619      	mov	r1, r3
9001a640:	47a8      	blx	r5
9001a642:	2800      	cmp	r0, #0
9001a644:	bf08      	it	eq
9001a646:	4620      	moveq	r0, r4
9001a648:	bd38      	pop	{r3, r4, r5, pc}
	...

9001a64c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
9001a64c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9001a64e:	4604      	mov	r4, r0
9001a650:	4615      	mov	r5, r2
9001a652:	4608      	mov	r0, r1
9001a654:	b93a      	cbnz	r2, 9001a666 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
9001a656:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
9001a65a:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
9001a65e:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
9001a662:	4628      	mov	r0, r5
9001a664:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9001a666:	f892 c00d 	ldrb.w	ip, [r2, #13]
9001a66a:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
9001a66e:	8893      	ldrh	r3, [r2, #4]
9001a670:	ea4f 160c 	mov.w	r6, ip, lsl #4
9001a674:	f406 7280 	and.w	r2, r6, #256	; 0x100
9001a678:	79ee      	ldrb	r6, [r5, #7]
9001a67a:	4316      	orrs	r6, r2
9001a67c:	19da      	adds	r2, r3, r7
9001a67e:	b291      	uxth	r1, r2
9001a680:	b2b7      	uxth	r7, r6
9001a682:	291d      	cmp	r1, #29
9001a684:	d87b      	bhi.n	9001a77e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x132>
9001a686:	2201      	movs	r2, #1
9001a688:	10f6      	asrs	r6, r6, #3
9001a68a:	408a      	lsls	r2, r1
9001a68c:	4974      	ldr	r1, [pc, #464]	; (9001a860 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
9001a68e:	420a      	tst	r2, r1
9001a690:	d12e      	bne.n	9001a6f0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
9001a692:	f412 7f60 	tst.w	r2, #896	; 0x380
9001a696:	d072      	beq.n	9001a77e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x132>
9001a698:	f104 024c 	add.w	r2, r4, #76	; 0x4c
9001a69c:	462b      	mov	r3, r5
9001a69e:	f105 0e08 	add.w	lr, r5, #8
9001a6a2:	4615      	mov	r5, r2
9001a6a4:	6818      	ldr	r0, [r3, #0]
9001a6a6:	3308      	adds	r3, #8
9001a6a8:	f853 1c04 	ldr.w	r1, [r3, #-4]
9001a6ac:	4694      	mov	ip, r2
9001a6ae:	4573      	cmp	r3, lr
9001a6b0:	e8ac 0003 	stmia.w	ip!, {r0, r1}
9001a6b4:	4662      	mov	r2, ip
9001a6b6:	d1f5      	bne.n	9001a6a4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x58>
9001a6b8:	6818      	ldr	r0, [r3, #0]
9001a6ba:	f8cc 0000 	str.w	r0, [ip]
9001a6be:	889b      	ldrh	r3, [r3, #4]
9001a6c0:	f8ac 3004 	strh.w	r3, [ip, #4]
9001a6c4:	b2b3      	uxth	r3, r6
9001a6c6:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
9001a6ca:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
9001a6ce:	1aca      	subs	r2, r1, r3
9001a6d0:	1bcf      	subs	r7, r1, r7
9001a6d2:	f020 0060 	bic.w	r0, r0, #96	; 0x60
9001a6d6:	b292      	uxth	r2, r2
9001a6d8:	1afb      	subs	r3, r7, r3
9001a6da:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
9001a6de:	10d2      	asrs	r2, r2, #3
9001a6e0:	f002 0260 	and.w	r2, r2, #96	; 0x60
9001a6e4:	4302      	orrs	r2, r0
9001a6e6:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
9001a6ea:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
9001a6ee:	e7b8      	b.n	9001a662 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
9001a6f0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
9001a6f2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001a6f6:	8c59      	ldrh	r1, [r3, #34]	; 0x22
9001a6f8:	f640 6333 	movw	r3, #3635	; 0xe33
9001a6fc:	4299      	cmp	r1, r3
9001a6fe:	d110      	bne.n	9001a722 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
9001a700:	6803      	ldr	r3, [r0, #0]
9001a702:	68db      	ldr	r3, [r3, #12]
9001a704:	4798      	blx	r3
9001a706:	7b41      	ldrb	r1, [r0, #13]
9001a708:	00cb      	lsls	r3, r1, #3
9001a70a:	f403 7280 	and.w	r2, r3, #256	; 0x100
9001a70e:	7a03      	ldrb	r3, [r0, #8]
9001a710:	0648      	lsls	r0, r1, #25
9001a712:	ea43 0302 	orr.w	r3, r3, r2
9001a716:	bf44      	itt	mi
9001a718:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
9001a71c:	b21b      	sxthmi	r3, r3
9001a71e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
9001a722:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
9001a726:	462a      	mov	r2, r5
9001a728:	f105 0c08 	add.w	ip, r5, #8
9001a72c:	443b      	add	r3, r7
9001a72e:	4433      	add	r3, r6
9001a730:	f104 064c 	add.w	r6, r4, #76	; 0x4c
9001a734:	b29b      	uxth	r3, r3
9001a736:	4635      	mov	r5, r6
9001a738:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
9001a73c:	6810      	ldr	r0, [r2, #0]
9001a73e:	3208      	adds	r2, #8
9001a740:	f852 1c04 	ldr.w	r1, [r2, #-4]
9001a744:	4637      	mov	r7, r6
9001a746:	4562      	cmp	r2, ip
9001a748:	c703      	stmia	r7!, {r0, r1}
9001a74a:	463e      	mov	r6, r7
9001a74c:	d1f6      	bne.n	9001a73c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
9001a74e:	6810      	ldr	r0, [r2, #0]
9001a750:	6038      	str	r0, [r7, #0]
9001a752:	8892      	ldrh	r2, [r2, #4]
9001a754:	80ba      	strh	r2, [r7, #4]
9001a756:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
9001a75a:	10db      	asrs	r3, r3, #3
9001a75c:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
9001a760:	f003 0360 	and.w	r3, r3, #96	; 0x60
9001a764:	f022 0260 	bic.w	r2, r2, #96	; 0x60
9001a768:	4313      	orrs	r3, r2
9001a76a:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
9001a76e:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
9001a772:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
9001a776:	1a9b      	subs	r3, r3, r2
9001a778:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
9001a77c:	e771      	b.n	9001a662 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
9001a77e:	f023 0204 	bic.w	r2, r3, #4
9001a782:	f640 611b 	movw	r1, #3611	; 0xe1b
9001a786:	428a      	cmp	r2, r1
9001a788:	d003      	beq.n	9001a792 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x146>
9001a78a:	f640 621d 	movw	r2, #3613	; 0xe1d
9001a78e:	4293      	cmp	r3, r2
9001a790:	d120      	bne.n	9001a7d4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x188>
9001a792:	3b01      	subs	r3, #1
9001a794:	4602      	mov	r2, r0
9001a796:	4629      	mov	r1, r5
9001a798:	4620      	mov	r0, r4
9001a79a:	b29b      	uxth	r3, r3
9001a79c:	f7ff ff4a 	bl	9001a634 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
9001a7a0:	7b41      	ldrb	r1, [r0, #13]
9001a7a2:	00cb      	lsls	r3, r1, #3
9001a7a4:	0649      	lsls	r1, r1, #25
9001a7a6:	f403 7280 	and.w	r2, r3, #256	; 0x100
9001a7aa:	7a03      	ldrb	r3, [r0, #8]
9001a7ac:	ea43 0302 	orr.w	r3, r3, r2
9001a7b0:	bf44      	itt	mi
9001a7b2:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
9001a7b6:	b21b      	sxthmi	r3, r3
9001a7b8:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
9001a7bc:	7b6b      	ldrb	r3, [r5, #13]
9001a7be:	7aaa      	ldrb	r2, [r5, #10]
9001a7c0:	005b      	lsls	r3, r3, #1
9001a7c2:	f403 7380 	and.w	r3, r3, #256	; 0x100
9001a7c6:	4313      	orrs	r3, r2
9001a7c8:	115a      	asrs	r2, r3, #5
9001a7ca:	eb02 0393 	add.w	r3, r2, r3, lsr #2
9001a7ce:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
9001a7d2:	e035      	b.n	9001a840 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
9001a7d4:	ea4f 02cc 	mov.w	r2, ip, lsl #3
9001a7d8:	f01c 0f40 	tst.w	ip, #64	; 0x40
9001a7dc:	f402 7180 	and.w	r1, r2, #256	; 0x100
9001a7e0:	7a2a      	ldrb	r2, [r5, #8]
9001a7e2:	ea42 0201 	orr.w	r2, r2, r1
9001a7e6:	f640 6109 	movw	r1, #3593	; 0xe09
9001a7ea:	bf1c      	itt	ne
9001a7ec:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
9001a7f0:	b212      	sxthne	r2, r2
9001a7f2:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
9001a7f6:	f023 0210 	bic.w	r2, r3, #16
9001a7fa:	428a      	cmp	r2, r1
9001a7fc:	d003      	beq.n	9001a806 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ba>
9001a7fe:	f640 6213 	movw	r2, #3603	; 0xe13
9001a802:	4293      	cmp	r3, r2
9001a804:	d129      	bne.n	9001a85a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
9001a806:	7b6e      	ldrb	r6, [r5, #13]
9001a808:	4629      	mov	r1, r5
9001a80a:	0076      	lsls	r6, r6, #1
9001a80c:	f406 7280 	and.w	r2, r6, #256	; 0x100
9001a810:	7aae      	ldrb	r6, [r5, #10]
9001a812:	4316      	orrs	r6, r2
9001a814:	f640 6213 	movw	r2, #3603	; 0xe13
9001a818:	4293      	cmp	r3, r2
9001a81a:	4602      	mov	r2, r0
9001a81c:	4620      	mov	r0, r4
9001a81e:	bf16      	itet	ne
9001a820:	f103 33ff 	addne.w	r3, r3, #4294967295
9001a824:	f640 630c 	movweq	r3, #3596	; 0xe0c
9001a828:	b29b      	uxthne	r3, r3
9001a82a:	f7ff ff03 	bl	9001a634 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
9001a82e:	7b43      	ldrb	r3, [r0, #13]
9001a830:	7a82      	ldrb	r2, [r0, #10]
9001a832:	005b      	lsls	r3, r3, #1
9001a834:	f403 7380 	and.w	r3, r3, #256	; 0x100
9001a838:	4313      	orrs	r3, r2
9001a83a:	1af6      	subs	r6, r6, r3
9001a83c:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
9001a840:	7b69      	ldrb	r1, [r5, #13]
9001a842:	00cb      	lsls	r3, r1, #3
9001a844:	f403 7280 	and.w	r2, r3, #256	; 0x100
9001a848:	7a2b      	ldrb	r3, [r5, #8]
9001a84a:	4313      	orrs	r3, r2
9001a84c:	064a      	lsls	r2, r1, #25
9001a84e:	bf44      	itt	mi
9001a850:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
9001a854:	b21b      	sxthmi	r3, r3
9001a856:	1bdb      	subs	r3, r3, r7
9001a858:	e747      	b.n	9001a6ea <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
9001a85a:	2300      	movs	r3, #0
9001a85c:	e7b7      	b.n	9001a7ce <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x182>
9001a85e:	bf00      	nop
9001a860:	3fc00079 	.word	0x3fc00079

9001a864 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
9001a864:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9001a868:	4604      	mov	r4, r0
9001a86a:	b942      	cbnz	r2, 9001a87e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
9001a86c:	f44f 4300 	mov.w	r3, #32768	; 0x8000
9001a870:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
9001a874:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
9001a878:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
9001a87c:	e047      	b.n	9001a90e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
9001a87e:	7b51      	ldrb	r1, [r2, #13]
9001a880:	8893      	ldrh	r3, [r2, #4]
9001a882:	010d      	lsls	r5, r1, #4
9001a884:	f405 7080 	and.w	r0, r5, #256	; 0x100
9001a888:	79d5      	ldrb	r5, [r2, #7]
9001a88a:	4305      	orrs	r5, r0
9001a88c:	2d04      	cmp	r5, #4
9001a88e:	bfcc      	ite	gt
9001a890:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
9001a894:	f04f 0e01 	movle.w	lr, #1
9001a898:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
9001a89c:	f200 80ab 	bhi.w	9001a9f6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
9001a8a0:	f240 60e7 	movw	r0, #1767	; 0x6e7
9001a8a4:	4283      	cmp	r3, r0
9001a8a6:	d216      	bcs.n	9001a8d6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001a8a8:	f240 605b 	movw	r0, #1627	; 0x65b
9001a8ac:	4283      	cmp	r3, r0
9001a8ae:	d859      	bhi.n	9001a964 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
9001a8b0:	f240 6057 	movw	r0, #1623	; 0x657
9001a8b4:	4283      	cmp	r3, r0
9001a8b6:	d20e      	bcs.n	9001a8d6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001a8b8:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
9001a8bc:	d24a      	bcs.n	9001a954 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
9001a8be:	f240 604e 	movw	r0, #1614	; 0x64e
9001a8c2:	4283      	cmp	r3, r0
9001a8c4:	d207      	bcs.n	9001a8d6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001a8c6:	f240 601a 	movw	r0, #1562	; 0x61a
9001a8ca:	4283      	cmp	r3, r0
9001a8cc:	d02a      	beq.n	9001a924 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001a8ce:	d821      	bhi.n	9001a914 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
9001a8d0:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
9001a8d4:	d35b      	bcc.n	9001a98e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
9001a8d6:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
9001a8da:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
9001a8de:	f040 80d0 	bne.w	9001aa82 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
9001a8e2:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
9001a8e6:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
9001a8ea:	f040 80ca 	bne.w	9001aa82 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
9001a8ee:	00cb      	lsls	r3, r1, #3
9001a8f0:	0649      	lsls	r1, r1, #25
9001a8f2:	f403 7080 	and.w	r0, r3, #256	; 0x100
9001a8f6:	7a13      	ldrb	r3, [r2, #8]
9001a8f8:	ea43 0300 	orr.w	r3, r3, r0
9001a8fc:	bf44      	itt	mi
9001a8fe:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
9001a902:	b21b      	sxthmi	r3, r3
9001a904:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
9001a908:	1b5d      	subs	r5, r3, r5
9001a90a:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
9001a90e:	4610      	mov	r0, r2
9001a910:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9001a914:	f240 604b 	movw	r0, #1611	; 0x64b
9001a918:	4283      	cmp	r3, r0
9001a91a:	d338      	bcc.n	9001a98e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
9001a91c:	f240 604c 	movw	r0, #1612	; 0x64c
9001a920:	4283      	cmp	r3, r0
9001a922:	d9d8      	bls.n	9001a8d6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001a924:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
9001a928:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
9001a92c:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
9001a930:	f040 80f3 	bne.w	9001ab1a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
9001a934:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
9001a938:	f040 80ef 	bne.w	9001ab1a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
9001a93c:	00cb      	lsls	r3, r1, #3
9001a93e:	064e      	lsls	r6, r1, #25
9001a940:	f403 7080 	and.w	r0, r3, #256	; 0x100
9001a944:	7a13      	ldrb	r3, [r2, #8]
9001a946:	ea43 0300 	orr.w	r3, r3, r0
9001a94a:	bf44      	itt	mi
9001a94c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
9001a950:	b21b      	sxthmi	r3, r3
9001a952:	e7d9      	b.n	9001a908 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
9001a954:	f240 6054 	movw	r0, #1620	; 0x654
9001a958:	4283      	cmp	r3, r0
9001a95a:	d8e3      	bhi.n	9001a924 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001a95c:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
9001a960:	d9e0      	bls.n	9001a924 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001a962:	e7b8      	b.n	9001a8d6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001a964:	f240 6074 	movw	r0, #1652	; 0x674
9001a968:	4283      	cmp	r3, r0
9001a96a:	d0b4      	beq.n	9001a8d6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001a96c:	d82d      	bhi.n	9001a9ca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
9001a96e:	f240 605e 	movw	r0, #1630	; 0x65e
9001a972:	4283      	cmp	r3, r0
9001a974:	d804      	bhi.n	9001a980 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
9001a976:	f240 605d 	movw	r0, #1629	; 0x65d
9001a97a:	4283      	cmp	r3, r0
9001a97c:	d3d2      	bcc.n	9001a924 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001a97e:	e7aa      	b.n	9001a8d6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001a980:	f240 605f 	movw	r0, #1631	; 0x65f
9001a984:	4283      	cmp	r3, r0
9001a986:	d0cd      	beq.n	9001a924 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001a988:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
9001a98c:	d0a3      	beq.n	9001a8d6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001a98e:	00cb      	lsls	r3, r1, #3
9001a990:	0649      	lsls	r1, r1, #25
9001a992:	f403 7080 	and.w	r0, r3, #256	; 0x100
9001a996:	7a13      	ldrb	r3, [r2, #8]
9001a998:	ea43 0300 	orr.w	r3, r3, r0
9001a99c:	bf44      	itt	mi
9001a99e:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
9001a9a2:	b21b      	sxthmi	r3, r3
9001a9a4:	1b5d      	subs	r5, r3, r5
9001a9a6:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
9001a9aa:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
9001a9ae:	7b53      	ldrb	r3, [r2, #13]
9001a9b0:	015b      	lsls	r3, r3, #5
9001a9b2:	f403 7180 	and.w	r1, r3, #256	; 0x100
9001a9b6:	7993      	ldrb	r3, [r2, #6]
9001a9b8:	430b      	orrs	r3, r1
9001a9ba:	2105      	movs	r1, #5
9001a9bc:	005b      	lsls	r3, r3, #1
9001a9be:	fb93 f3f1 	sdiv	r3, r3, r1
9001a9c2:	f992 1009 	ldrsb.w	r1, [r2, #9]
9001a9c6:	440b      	add	r3, r1
9001a9c8:	e756      	b.n	9001a878 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
9001a9ca:	f240 60e2 	movw	r0, #1762	; 0x6e2
9001a9ce:	4283      	cmp	r3, r0
9001a9d0:	d809      	bhi.n	9001a9e6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
9001a9d2:	f240 60df 	movw	r0, #1759	; 0x6df
9001a9d6:	4283      	cmp	r3, r0
9001a9d8:	f4bf af7d 	bcs.w	9001a8d6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001a9dc:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
9001a9e0:	2b05      	cmp	r3, #5
9001a9e2:	d8d4      	bhi.n	9001a98e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
9001a9e4:	e777      	b.n	9001a8d6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001a9e6:	f240 60e3 	movw	r0, #1763	; 0x6e3
9001a9ea:	4283      	cmp	r3, r0
9001a9ec:	d09a      	beq.n	9001a924 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001a9ee:	f240 60e4 	movw	r0, #1764	; 0x6e4
9001a9f2:	4283      	cmp	r3, r0
9001a9f4:	e7ca      	b.n	9001a98c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
9001a9f6:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
9001a9fa:	d22b      	bcs.n	9001aa54 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
9001a9fc:	f640 00ed 	movw	r0, #2285	; 0x8ed
9001aa00:	4283      	cmp	r3, r0
9001aa02:	d28f      	bcs.n	9001a924 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001aa04:	f640 00e5 	movw	r0, #2277	; 0x8e5
9001aa08:	4283      	cmp	r3, r0
9001aa0a:	d816      	bhi.n	9001aa3a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
9001aa0c:	f640 00e4 	movw	r0, #2276	; 0x8e4
9001aa10:	4283      	cmp	r3, r0
9001aa12:	f4bf af60 	bcs.w	9001a8d6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001aa16:	f240 60ec 	movw	r0, #1772	; 0x6ec
9001aa1a:	4283      	cmp	r3, r0
9001aa1c:	d80a      	bhi.n	9001aa34 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
9001aa1e:	f240 60eb 	movw	r0, #1771	; 0x6eb
9001aa22:	4283      	cmp	r3, r0
9001aa24:	f4bf af57 	bcs.w	9001a8d6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001aa28:	f240 60ea 	movw	r0, #1770	; 0x6ea
9001aa2c:	4283      	cmp	r3, r0
9001aa2e:	f43f af79 	beq.w	9001a924 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001aa32:	e7ac      	b.n	9001a98e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
9001aa34:	f240 60ed 	movw	r0, #1773	; 0x6ed
9001aa38:	e7f8      	b.n	9001aa2c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
9001aa3a:	f640 00e8 	movw	r0, #2280	; 0x8e8
9001aa3e:	4283      	cmp	r3, r0
9001aa40:	d802      	bhi.n	9001aa48 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
9001aa42:	f640 00e7 	movw	r0, #2279	; 0x8e7
9001aa46:	e798      	b.n	9001a97a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
9001aa48:	f640 00e9 	movw	r0, #2281	; 0x8e9
9001aa4c:	4283      	cmp	r3, r0
9001aa4e:	f47f af42 	bne.w	9001a8d6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001aa52:	e767      	b.n	9001a924 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001aa54:	f640 00f6 	movw	r0, #2294	; 0x8f6
9001aa58:	4283      	cmp	r3, r0
9001aa5a:	f43f af63 	beq.w	9001a924 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001aa5e:	d802      	bhi.n	9001aa66 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
9001aa60:	f640 00f2 	movw	r0, #2290	; 0x8f2
9001aa64:	e7f2      	b.n	9001aa4c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
9001aa66:	f640 00fa 	movw	r0, #2298	; 0x8fa
9001aa6a:	4283      	cmp	r3, r0
9001aa6c:	d805      	bhi.n	9001aa7a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
9001aa6e:	f640 00f9 	movw	r0, #2297	; 0x8f9
9001aa72:	4283      	cmp	r3, r0
9001aa74:	f4ff af2f 	bcc.w	9001a8d6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001aa78:	e754      	b.n	9001a924 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001aa7a:	f640 00fe 	movw	r0, #2302	; 0x8fe
9001aa7e:	4283      	cmp	r3, r0
9001aa80:	e7af      	b.n	9001a9e2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
9001aa82:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
9001aa86:	4617      	mov	r7, r2
9001aa88:	f102 0808 	add.w	r8, r2, #8
9001aa8c:	4666      	mov	r6, ip
9001aa8e:	6838      	ldr	r0, [r7, #0]
9001aa90:	3708      	adds	r7, #8
9001aa92:	f857 1c04 	ldr.w	r1, [r7, #-4]
9001aa96:	46e6      	mov	lr, ip
9001aa98:	4547      	cmp	r7, r8
9001aa9a:	e8ae 0003 	stmia.w	lr!, {r0, r1}
9001aa9e:	46f4      	mov	ip, lr
9001aaa0:	d1f5      	bne.n	9001aa8e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
9001aaa2:	6838      	ldr	r0, [r7, #0]
9001aaa4:	f8ce 0000 	str.w	r0, [lr]
9001aaa8:	88b9      	ldrh	r1, [r7, #4]
9001aaaa:	f8ae 1004 	strh.w	r1, [lr, #4]
9001aaae:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
9001aab2:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
9001aab6:	d009      	beq.n	9001aacc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x268>
9001aab8:	7b51      	ldrb	r1, [r2, #13]
9001aaba:	7992      	ldrb	r2, [r2, #6]
9001aabc:	0149      	lsls	r1, r1, #5
9001aabe:	f401 7180 	and.w	r1, r1, #256	; 0x100
9001aac2:	4311      	orrs	r1, r2
9001aac4:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
9001aac8:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
9001aacc:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
9001aad0:	b2ad      	uxth	r5, r5
9001aad2:	d00d      	beq.n	9001aaf0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28c>
9001aad4:	442b      	add	r3, r5
9001aad6:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
9001aada:	b29b      	uxth	r3, r3
9001aadc:	f022 0260 	bic.w	r2, r2, #96	; 0x60
9001aae0:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
9001aae4:	10db      	asrs	r3, r3, #3
9001aae6:	f003 0360 	and.w	r3, r3, #96	; 0x60
9001aaea:	4313      	orrs	r3, r2
9001aaec:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
9001aaf0:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
9001aaf4:	00cb      	lsls	r3, r1, #3
9001aaf6:	064f      	lsls	r7, r1, #25
9001aaf8:	f403 7280 	and.w	r2, r3, #256	; 0x100
9001aafc:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
9001ab00:	ea43 0302 	orr.w	r3, r3, r2
9001ab04:	bf44      	itt	mi
9001ab06:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
9001ab0a:	b21b      	sxthmi	r3, r3
9001ab0c:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
9001ab10:	1b5b      	subs	r3, r3, r5
9001ab12:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
9001ab16:	4632      	mov	r2, r6
9001ab18:	e6f9      	b.n	9001a90e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
9001ab1a:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
9001ab1e:	4617      	mov	r7, r2
9001ab20:	f102 0908 	add.w	r9, r2, #8
9001ab24:	4666      	mov	r6, ip
9001ab26:	6838      	ldr	r0, [r7, #0]
9001ab28:	3708      	adds	r7, #8
9001ab2a:	f857 1c04 	ldr.w	r1, [r7, #-4]
9001ab2e:	46e0      	mov	r8, ip
9001ab30:	454f      	cmp	r7, r9
9001ab32:	e8a8 0003 	stmia.w	r8!, {r0, r1}
9001ab36:	46c4      	mov	ip, r8
9001ab38:	d1f5      	bne.n	9001ab26 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c2>
9001ab3a:	6838      	ldr	r0, [r7, #0]
9001ab3c:	f8c8 0000 	str.w	r0, [r8]
9001ab40:	88b9      	ldrh	r1, [r7, #4]
9001ab42:	f8a8 1004 	strh.w	r1, [r8, #4]
9001ab46:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
9001ab4a:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
9001ab4e:	d009      	beq.n	9001ab64 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x300>
9001ab50:	7b51      	ldrb	r1, [r2, #13]
9001ab52:	7992      	ldrb	r2, [r2, #6]
9001ab54:	0149      	lsls	r1, r1, #5
9001ab56:	f401 7180 	and.w	r1, r1, #256	; 0x100
9001ab5a:	4311      	orrs	r1, r2
9001ab5c:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
9001ab60:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
9001ab64:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
9001ab68:	d00e      	beq.n	9001ab88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x324>
9001ab6a:	eba3 030e 	sub.w	r3, r3, lr
9001ab6e:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
9001ab72:	b29b      	uxth	r3, r3
9001ab74:	f022 0260 	bic.w	r2, r2, #96	; 0x60
9001ab78:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
9001ab7c:	10db      	asrs	r3, r3, #3
9001ab7e:	f003 0360 	and.w	r3, r3, #96	; 0x60
9001ab82:	4313      	orrs	r3, r2
9001ab84:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
9001ab88:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
9001ab8c:	00cb      	lsls	r3, r1, #3
9001ab8e:	0648      	lsls	r0, r1, #25
9001ab90:	f403 7280 	and.w	r2, r3, #256	; 0x100
9001ab94:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
9001ab98:	ea43 0302 	orr.w	r3, r3, r2
9001ab9c:	bf44      	itt	mi
9001ab9e:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
9001aba2:	b21b      	sxthmi	r3, r3
9001aba4:	1b5d      	subs	r5, r3, r5
9001aba6:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
9001abaa:	e7b4      	b.n	9001ab16 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b2>

9001abac <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
9001abac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001abb0:	461e      	mov	r6, r3
9001abb2:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
9001abb4:	4604      	mov	r4, r0
9001abb6:	4617      	mov	r7, r2
9001abb8:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001abbc:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
9001abc0:	f7eb ff00 	bl	900069c4 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
9001abc4:	4605      	mov	r5, r0
9001abc6:	b918      	cbnz	r0, 9001abd0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
9001abc8:	6030      	str	r0, [r6, #0]
9001abca:	4628      	mov	r0, r5
9001abcc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9001abd0:	683b      	ldr	r3, [r7, #0]
9001abd2:	4601      	mov	r1, r0
9001abd4:	4638      	mov	r0, r7
9001abd6:	68db      	ldr	r3, [r3, #12]
9001abd8:	4798      	blx	r3
9001abda:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
9001abde:	4602      	mov	r2, r0
9001abe0:	6030      	str	r0, [r6, #0]
9001abe2:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
9001abe6:	d213      	bcs.n	9001ac10 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
9001abe8:	4643      	mov	r3, r8
9001abea:	4639      	mov	r1, r7
9001abec:	4620      	mov	r0, r4
9001abee:	f7ff fe39 	bl	9001a864 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
9001abf2:	6030      	str	r0, [r6, #0]
9001abf4:	6833      	ldr	r3, [r6, #0]
9001abf6:	b143      	cbz	r3, 9001ac0a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
9001abf8:	7b5a      	ldrb	r2, [r3, #13]
9001abfa:	7a9b      	ldrb	r3, [r3, #10]
9001abfc:	0052      	lsls	r2, r2, #1
9001abfe:	f402 7280 	and.w	r2, r2, #256	; 0x100
9001ac02:	4313      	orrs	r3, r2
9001ac04:	bf0c      	ite	eq
9001ac06:	2301      	moveq	r3, #1
9001ac08:	2300      	movne	r3, #0
9001ac0a:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
9001ac0e:	e7dc      	b.n	9001abca <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
9001ac10:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
9001ac14:	b29b      	uxth	r3, r3
9001ac16:	2b7f      	cmp	r3, #127	; 0x7f
9001ac18:	d804      	bhi.n	9001ac24 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
9001ac1a:	4639      	mov	r1, r7
9001ac1c:	4620      	mov	r0, r4
9001ac1e:	f7ff fd15 	bl	9001a64c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
9001ac22:	e7e6      	b.n	9001abf2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
9001ac24:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
9001ac28:	2b00      	cmp	r3, #0
9001ac2a:	d0e3      	beq.n	9001abf4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
9001ac2c:	f640 1302 	movw	r3, #2306	; 0x902
9001ac30:	429d      	cmp	r5, r3
9001ac32:	d1df      	bne.n	9001abf4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
9001ac34:	4601      	mov	r1, r0
9001ac36:	4620      	mov	r0, r4
9001ac38:	f7ff fcd8 	bl	9001a5ec <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
9001ac3c:	e7d9      	b.n	9001abf2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

9001ac3e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
9001ac3e:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9001ac42:	461e      	mov	r6, r3
9001ac44:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
9001ac46:	4604      	mov	r4, r0
9001ac48:	4617      	mov	r7, r2
9001ac4a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001ac4e:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
9001ac52:	f7eb feb7 	bl	900069c4 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
9001ac56:	4605      	mov	r5, r0
9001ac58:	b918      	cbnz	r0, 9001ac62 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
9001ac5a:	6030      	str	r0, [r6, #0]
9001ac5c:	4628      	mov	r0, r5
9001ac5e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
9001ac62:	683b      	ldr	r3, [r7, #0]
9001ac64:	4601      	mov	r1, r0
9001ac66:	4638      	mov	r0, r7
9001ac68:	f8d3 9008 	ldr.w	r9, [r3, #8]
9001ac6c:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
9001ac70:	47c8      	blx	r9
9001ac72:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
9001ac76:	4602      	mov	r2, r0
9001ac78:	6030      	str	r0, [r6, #0]
9001ac7a:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
9001ac7e:	d213      	bcs.n	9001aca8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
9001ac80:	4643      	mov	r3, r8
9001ac82:	4639      	mov	r1, r7
9001ac84:	4620      	mov	r0, r4
9001ac86:	f7ff fded 	bl	9001a864 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
9001ac8a:	6030      	str	r0, [r6, #0]
9001ac8c:	6833      	ldr	r3, [r6, #0]
9001ac8e:	b143      	cbz	r3, 9001aca2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
9001ac90:	7b5a      	ldrb	r2, [r3, #13]
9001ac92:	7a9b      	ldrb	r3, [r3, #10]
9001ac94:	0052      	lsls	r2, r2, #1
9001ac96:	f402 7280 	and.w	r2, r2, #256	; 0x100
9001ac9a:	4313      	orrs	r3, r2
9001ac9c:	bf0c      	ite	eq
9001ac9e:	2301      	moveq	r3, #1
9001aca0:	2300      	movne	r3, #0
9001aca2:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
9001aca6:	e7d9      	b.n	9001ac5c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
9001aca8:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
9001acac:	b29b      	uxth	r3, r3
9001acae:	2b7f      	cmp	r3, #127	; 0x7f
9001acb0:	d804      	bhi.n	9001acbc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
9001acb2:	4639      	mov	r1, r7
9001acb4:	4620      	mov	r0, r4
9001acb6:	f7ff fcc9 	bl	9001a64c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
9001acba:	e7e6      	b.n	9001ac8a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
9001acbc:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
9001acc0:	2b00      	cmp	r3, #0
9001acc2:	d0e3      	beq.n	9001ac8c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
9001acc4:	f640 1302 	movw	r3, #2306	; 0x902
9001acc8:	429d      	cmp	r5, r3
9001acca:	d1df      	bne.n	9001ac8c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
9001accc:	4601      	mov	r1, r0
9001acce:	4620      	mov	r0, r4
9001acd0:	f7ff fc8c 	bl	9001a5ec <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
9001acd4:	e7d9      	b.n	9001ac8a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

9001acd6 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
9001acd6:	b510      	push	{r4, lr}
9001acd8:	4604      	mov	r4, r0
9001acda:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
9001acde:	8f23      	ldrh	r3, [r4, #56]	; 0x38
9001ace0:	b1e1      	cbz	r1, 9001ad1c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
9001ace2:	2b0a      	cmp	r3, #10
9001ace4:	d02d      	beq.n	9001ad42 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
9001ace6:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
9001ace8:	3901      	subs	r1, #1
9001acea:	eb04 0042 	add.w	r0, r4, r2, lsl #1
9001acee:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
9001acf0:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
9001acf4:	1c51      	adds	r1, r2, #1
9001acf6:	b289      	uxth	r1, r1
9001acf8:	2901      	cmp	r1, #1
9001acfa:	bf8a      	itet	hi
9001acfc:	f102 32ff 	addhi.w	r2, r2, #4294967295
9001ad00:	87e1      	strhls	r1, [r4, #62]	; 0x3e
9001ad02:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
9001ad04:	1c5a      	adds	r2, r3, #1
9001ad06:	8722      	strh	r2, [r4, #56]	; 0x38
9001ad08:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
9001ad0a:	4413      	add	r3, r2
9001ad0c:	b29b      	uxth	r3, r3
9001ad0e:	2b09      	cmp	r3, #9
9001ad10:	bf88      	it	hi
9001ad12:	3b0a      	subhi	r3, #10
9001ad14:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001ad18:	8458      	strh	r0, [r3, #34]	; 0x22
9001ad1a:	e7de      	b.n	9001acda <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
9001ad1c:	8f23      	ldrh	r3, [r4, #56]	; 0x38
9001ad1e:	2b0a      	cmp	r3, #10
9001ad20:	d00f      	beq.n	9001ad42 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
9001ad22:	4620      	mov	r0, r4
9001ad24:	f7ff fc10 	bl	9001a548 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
9001ad28:	8f23      	ldrh	r3, [r4, #56]	; 0x38
9001ad2a:	1c5a      	adds	r2, r3, #1
9001ad2c:	8722      	strh	r2, [r4, #56]	; 0x38
9001ad2e:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
9001ad30:	4413      	add	r3, r2
9001ad32:	b29b      	uxth	r3, r3
9001ad34:	2b09      	cmp	r3, #9
9001ad36:	bf88      	it	hi
9001ad38:	3b0a      	subhi	r3, #10
9001ad3a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001ad3e:	8458      	strh	r0, [r3, #34]	; 0x22
9001ad40:	e7ec      	b.n	9001ad1c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
9001ad42:	bd10      	pop	{r4, pc}

9001ad44 <_ZN8touchgfx12TextProvider11getNextCharEv>:
9001ad44:	b538      	push	{r3, r4, r5, lr}
9001ad46:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
9001ad48:	4604      	mov	r4, r0
9001ad4a:	eb00 0243 	add.w	r2, r0, r3, lsl #1
9001ad4e:	8c55      	ldrh	r5, [r2, #34]	; 0x22
9001ad50:	8f02      	ldrh	r2, [r0, #56]	; 0x38
9001ad52:	3a01      	subs	r2, #1
9001ad54:	8702      	strh	r2, [r0, #56]	; 0x38
9001ad56:	1c5a      	adds	r2, r3, #1
9001ad58:	b292      	uxth	r2, r2
9001ad5a:	2a09      	cmp	r2, #9
9001ad5c:	bf8a      	itet	hi
9001ad5e:	3b09      	subhi	r3, #9
9001ad60:	86c2      	strhls	r2, [r0, #54]	; 0x36
9001ad62:	86c3      	strhhi	r3, [r0, #54]	; 0x36
9001ad64:	f7ff ffb7 	bl	9001acd6 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
9001ad68:	8c23      	ldrh	r3, [r4, #32]
9001ad6a:	2b01      	cmp	r3, #1
9001ad6c:	bf9c      	itt	ls
9001ad6e:	3301      	addls	r3, #1
9001ad70:	8423      	strhls	r3, [r4, #32]
9001ad72:	8be3      	ldrh	r3, [r4, #30]
9001ad74:	b90b      	cbnz	r3, 9001ad7a <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
9001ad76:	2302      	movs	r3, #2
9001ad78:	83e3      	strh	r3, [r4, #30]
9001ad7a:	8be3      	ldrh	r3, [r4, #30]
9001ad7c:	4628      	mov	r0, r5
9001ad7e:	3b01      	subs	r3, #1
9001ad80:	b29b      	uxth	r3, r3
9001ad82:	83e3      	strh	r3, [r4, #30]
9001ad84:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001ad88:	8365      	strh	r5, [r4, #26]
9001ad8a:	bd38      	pop	{r3, r4, r5, pc}

9001ad8c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
9001ad8c:	428a      	cmp	r2, r1
9001ad8e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001ad92:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
9001ad94:	d932      	bls.n	9001adfc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x70>
9001ad96:	8f05      	ldrh	r5, [r0, #56]	; 0x38
9001ad98:	1a54      	subs	r4, r2, r1
9001ad9a:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
9001ad9e:	19ee      	adds	r6, r5, r7
9001ada0:	fa1f fe84 	uxth.w	lr, r4
9001ada4:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
9001ada8:	3e01      	subs	r6, #1
9001adaa:	b2b4      	uxth	r4, r6
9001adac:	eba4 090e 	sub.w	r9, r4, lr
9001adb0:	fa1f f989 	uxth.w	r9, r9
9001adb4:	2c09      	cmp	r4, #9
9001adb6:	4626      	mov	r6, r4
9001adb8:	bf88      	it	hi
9001adba:	f1a4 060a 	subhi.w	r6, r4, #10
9001adbe:	f1bc 0f00 	cmp.w	ip, #0
9001adc2:	f104 34ff 	add.w	r4, r4, #4294967295
9001adc6:	bf08      	it	eq
9001adc8:	f04f 0c02 	moveq.w	ip, #2
9001adcc:	eb00 0646 	add.w	r6, r0, r6, lsl #1
9001add0:	b2a4      	uxth	r4, r4
9001add2:	f10c 3cff 	add.w	ip, ip, #4294967295
9001add6:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
9001adda:	454c      	cmp	r4, r9
9001addc:	fa1f fc8c 	uxth.w	ip, ip
9001ade0:	eb00 064c 	add.w	r6, r0, ip, lsl #1
9001ade4:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
9001ade8:	d1e4      	bne.n	9001adb4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
9001adea:	eba5 050e 	sub.w	r5, r5, lr
9001adee:	eb0e 0408 	add.w	r4, lr, r8
9001adf2:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
9001adf6:	8705      	strh	r5, [r0, #56]	; 0x38
9001adf8:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
9001adfc:	8f04      	ldrh	r4, [r0, #56]	; 0x38
9001adfe:	250a      	movs	r5, #10
9001ae00:	1a64      	subs	r4, r4, r1
9001ae02:	4439      	add	r1, r7
9001ae04:	b289      	uxth	r1, r1
9001ae06:	8704      	strh	r4, [r0, #56]	; 0x38
9001ae08:	2909      	cmp	r1, #9
9001ae0a:	bf88      	it	hi
9001ae0c:	390a      	subhi	r1, #10
9001ae0e:	86c1      	strh	r1, [r0, #54]	; 0x36
9001ae10:	b18a      	cbz	r2, 9001ae36 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xaa>
9001ae12:	8f01      	ldrh	r1, [r0, #56]	; 0x38
9001ae14:	3a01      	subs	r2, #1
9001ae16:	3101      	adds	r1, #1
9001ae18:	b292      	uxth	r2, r2
9001ae1a:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
9001ae1e:	8701      	strh	r1, [r0, #56]	; 0x38
9001ae20:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
9001ae22:	b901      	cbnz	r1, 9001ae26 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9a>
9001ae24:	86c5      	strh	r5, [r0, #54]	; 0x36
9001ae26:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
9001ae28:	3901      	subs	r1, #1
9001ae2a:	b289      	uxth	r1, r1
9001ae2c:	86c1      	strh	r1, [r0, #54]	; 0x36
9001ae2e:	eb00 0141 	add.w	r1, r0, r1, lsl #1
9001ae32:	844c      	strh	r4, [r1, #34]	; 0x22
9001ae34:	e7ec      	b.n	9001ae10 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>
9001ae36:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001ae3a:	f7ff bf4c 	b.w	9001acd6 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

9001ae3e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
9001ae3e:	b570      	push	{r4, r5, r6, lr}
9001ae40:	2500      	movs	r5, #0
9001ae42:	4295      	cmp	r5, r2
9001ae44:	d011      	beq.n	9001ae6a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
9001ae46:	8bc4      	ldrh	r4, [r0, #30]
9001ae48:	f831 6b02 	ldrh.w	r6, [r1], #2
9001ae4c:	4414      	add	r4, r2
9001ae4e:	3c01      	subs	r4, #1
9001ae50:	1b64      	subs	r4, r4, r5
9001ae52:	b2a4      	uxth	r4, r4
9001ae54:	2c01      	cmp	r4, #1
9001ae56:	bf88      	it	hi
9001ae58:	3c02      	subhi	r4, #2
9001ae5a:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9001ae5e:	8b64      	ldrh	r4, [r4, #26]
9001ae60:	42b4      	cmp	r4, r6
9001ae62:	d117      	bne.n	9001ae94 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
9001ae64:	3501      	adds	r5, #1
9001ae66:	b2ad      	uxth	r5, r5
9001ae68:	e7eb      	b.n	9001ae42 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
9001ae6a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001ae6e:	2400      	movs	r4, #0
9001ae70:	4413      	add	r3, r2
9001ae72:	b2a2      	uxth	r2, r4
9001ae74:	429a      	cmp	r2, r3
9001ae76:	da0f      	bge.n	9001ae98 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
9001ae78:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
9001ae7a:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
9001ae7e:	3401      	adds	r4, #1
9001ae80:	4432      	add	r2, r6
9001ae82:	b292      	uxth	r2, r2
9001ae84:	2a09      	cmp	r2, #9
9001ae86:	bf88      	it	hi
9001ae88:	3a0a      	subhi	r2, #10
9001ae8a:	eb00 0242 	add.w	r2, r0, r2, lsl #1
9001ae8e:	8c52      	ldrh	r2, [r2, #34]	; 0x22
9001ae90:	42aa      	cmp	r2, r5
9001ae92:	d0ee      	beq.n	9001ae72 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
9001ae94:	2000      	movs	r0, #0
9001ae96:	bd70      	pop	{r4, r5, r6, pc}
9001ae98:	2001      	movs	r0, #1
9001ae9a:	e7fc      	b.n	9001ae96 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

9001ae9c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
9001ae9c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001aea0:	4605      	mov	r5, r0
9001aea2:	4616      	mov	r6, r2
9001aea4:	1c8c      	adds	r4, r1, #2
9001aea6:	8809      	ldrh	r1, [r1, #0]
9001aea8:	ea4f 3a11 	mov.w	sl, r1, lsr #12
9001aeac:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
9001aeb0:	42b3      	cmp	r3, r6
9001aeb2:	d124      	bne.n	9001aefe <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
9001aeb4:	f3c1 2903 	ubfx	r9, r1, #8, #4
9001aeb8:	f3c1 1803 	ubfx	r8, r1, #4, #4
9001aebc:	f001 070f 	and.w	r7, r1, #15
9001aec0:	4652      	mov	r2, sl
9001aec2:	f8cd 8000 	str.w	r8, [sp]
9001aec6:	464b      	mov	r3, r9
9001aec8:	4621      	mov	r1, r4
9001aeca:	4628      	mov	r0, r5
9001aecc:	f7ff ffb7 	bl	9001ae3e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
9001aed0:	4683      	mov	fp, r0
9001aed2:	b168      	cbz	r0, 9001aef0 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
9001aed4:	eb0a 0109 	add.w	r1, sl, r9
9001aed8:	463a      	mov	r2, r7
9001aeda:	4628      	mov	r0, r5
9001aedc:	4441      	add	r1, r8
9001aede:	eb04 0341 	add.w	r3, r4, r1, lsl #1
9001aee2:	4649      	mov	r1, r9
9001aee4:	f7ff ff52 	bl	9001ad8c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
9001aee8:	4658      	mov	r0, fp
9001aeea:	b003      	add	sp, #12
9001aeec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001aef0:	eb07 010a 	add.w	r1, r7, sl
9001aef4:	4449      	add	r1, r9
9001aef6:	4441      	add	r1, r8
9001aef8:	eb04 0141 	add.w	r1, r4, r1, lsl #1
9001aefc:	e7d2      	b.n	9001aea4 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
9001aefe:	f04f 0b00 	mov.w	fp, #0
9001af02:	e7f1      	b.n	9001aee8 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

9001af04 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
9001af04:	b570      	push	{r4, r5, r6, lr}
9001af06:	8810      	ldrh	r0, [r2, #0]
9001af08:	4298      	cmp	r0, r3
9001af0a:	d817      	bhi.n	9001af3c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
9001af0c:	1e48      	subs	r0, r1, #1
9001af0e:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
9001af12:	4298      	cmp	r0, r3
9001af14:	d312      	bcc.n	9001af3c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
9001af16:	2400      	movs	r4, #0
9001af18:	428c      	cmp	r4, r1
9001af1a:	d20f      	bcs.n	9001af3c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
9001af1c:	1860      	adds	r0, r4, r1
9001af1e:	1040      	asrs	r0, r0, #1
9001af20:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
9001af24:	0085      	lsls	r5, r0, #2
9001af26:	42b3      	cmp	r3, r6
9001af28:	d902      	bls.n	9001af30 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
9001af2a:	3001      	adds	r0, #1
9001af2c:	b284      	uxth	r4, r0
9001af2e:	e7f3      	b.n	9001af18 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
9001af30:	d201      	bcs.n	9001af36 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
9001af32:	b281      	uxth	r1, r0
9001af34:	e7f0      	b.n	9001af18 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
9001af36:	442a      	add	r2, r5
9001af38:	8850      	ldrh	r0, [r2, #2]
9001af3a:	bd70      	pop	{r4, r5, r6, pc}
9001af3c:	2000      	movs	r0, #0
9001af3e:	e7fc      	b.n	9001af3a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

9001af40 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
9001af40:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001af44:	6c45      	ldr	r5, [r0, #68]	; 0x44
9001af46:	4604      	mov	r4, r0
9001af48:	260b      	movs	r6, #11
9001af4a:	886f      	ldrh	r7, [r5, #2]
9001af4c:	087f      	lsrs	r7, r7, #1
9001af4e:	3e01      	subs	r6, #1
9001af50:	d013      	beq.n	9001af7a <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
9001af52:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
9001af54:	462a      	mov	r2, r5
9001af56:	4639      	mov	r1, r7
9001af58:	4620      	mov	r0, r4
9001af5a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001af5e:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
9001af62:	4643      	mov	r3, r8
9001af64:	f7ff ffce 	bl	9001af04 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
9001af68:	b138      	cbz	r0, 9001af7a <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
9001af6a:	eb05 0140 	add.w	r1, r5, r0, lsl #1
9001af6e:	4642      	mov	r2, r8
9001af70:	4620      	mov	r0, r4
9001af72:	f7ff ff93 	bl	9001ae9c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
9001af76:	2800      	cmp	r0, #0
9001af78:	d1e9      	bne.n	9001af4e <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
9001af7a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

9001af80 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
9001af80:	b570      	push	{r4, r5, r6, lr}
9001af82:	694a      	ldr	r2, [r1, #20]
9001af84:	6a8d      	ldr	r5, [r1, #40]	; 0x28
9001af86:	684b      	ldr	r3, [r1, #4]
9001af88:	1b54      	subs	r4, r2, r5
9001af8a:	6ace      	ldr	r6, [r1, #44]	; 0x2c
9001af8c:	f000 8106 	beq.w	9001b19c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
9001af90:	1b9b      	subs	r3, r3, r6
9001af92:	d003      	beq.n	9001af9c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
9001af94:	4363      	muls	r3, r4
9001af96:	2210      	movs	r2, #16
9001af98:	fb93 f3f2 	sdiv	r3, r3, r2
9001af9c:	680c      	ldr	r4, [r1, #0]
9001af9e:	698a      	ldr	r2, [r1, #24]
9001afa0:	1b65      	subs	r5, r4, r5
9001afa2:	f000 80fd 	beq.w	9001b1a0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
9001afa6:	1b92      	subs	r2, r2, r6
9001afa8:	d003      	beq.n	9001afb2 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
9001afaa:	436a      	muls	r2, r5
9001afac:	2410      	movs	r4, #16
9001afae:	fb92 f2f4 	sdiv	r2, r2, r4
9001afb2:	1a9b      	subs	r3, r3, r2
9001afb4:	ed9f 4a89 	vldr	s8, [pc, #548]	; 9001b1dc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
9001afb8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
9001afbc:	460a      	mov	r2, r1
9001afbe:	ee07 3a90 	vmov	s15, r3
9001afc2:	f100 040c 	add.w	r4, r0, #12
9001afc6:	4603      	mov	r3, r0
9001afc8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001afcc:	ee67 7a84 	vmul.f32	s15, s15, s8
9001afd0:	ee87 3a27 	vdiv.f32	s6, s14, s15
9001afd4:	eeb1 6a43 	vneg.f32	s12, s6
9001afd8:	edd2 7a02 	vldr	s15, [r2, #8]
9001afdc:	3214      	adds	r2, #20
9001afde:	eec7 6a27 	vdiv.f32	s13, s14, s15
9001afe2:	ece3 6a01 	vstmia	r3!, {s13}
9001afe6:	429c      	cmp	r4, r3
9001afe8:	ed52 7a02 	vldr	s15, [r2, #-8]
9001afec:	ee67 7aa6 	vmul.f32	s15, s15, s13
9001aff0:	edc3 7a02 	vstr	s15, [r3, #8]
9001aff4:	ed52 7a01 	vldr	s15, [r2, #-4]
9001aff8:	ee67 7aa6 	vmul.f32	s15, s15, s13
9001affc:	edc3 7a05 	vstr	s15, [r3, #20]
9001b000:	d1ea      	bne.n	9001afd8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
9001b002:	6aca      	ldr	r2, [r1, #44]	; 0x2c
9001b004:	698b      	ldr	r3, [r1, #24]
9001b006:	edd0 4a02 	vldr	s9, [r0, #8]
9001b00a:	1a9b      	subs	r3, r3, r2
9001b00c:	edd0 3a00 	vldr	s7, [r0]
9001b010:	edd0 6a01 	vldr	s13, [r0, #4]
9001b014:	ee07 3a90 	vmov	s15, r3
9001b018:	684b      	ldr	r3, [r1, #4]
9001b01a:	ee76 6ae4 	vsub.f32	s13, s13, s9
9001b01e:	ed90 5a05 	vldr	s10, [r0, #20]
9001b022:	1a9b      	subs	r3, r3, r2
9001b024:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001b028:	ee73 4ae4 	vsub.f32	s9, s7, s9
9001b02c:	ed90 2a03 	vldr	s4, [r0, #12]
9001b030:	ee07 3a10 	vmov	s14, r3
9001b034:	edd0 5a04 	vldr	s11, [r0, #16]
9001b038:	ee67 7a84 	vmul.f32	s15, s15, s8
9001b03c:	ed90 1a07 	vldr	s2, [r0, #28]
9001b040:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001b044:	edd0 2a06 	vldr	s5, [r0, #24]
9001b048:	ee75 5ac5 	vsub.f32	s11, s11, s10
9001b04c:	ee64 7ae7 	vnmul.f32	s15, s9, s15
9001b050:	ee27 7a04 	vmul.f32	s14, s14, s8
9001b054:	ee32 5a45 	vsub.f32	s10, s4, s10
9001b058:	eee6 7a87 	vfma.f32	s15, s13, s14
9001b05c:	ee67 7a83 	vmul.f32	s15, s15, s6
9001b060:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
9001b064:	6a8c      	ldr	r4, [r1, #40]	; 0x28
9001b066:	694a      	ldr	r2, [r1, #20]
9001b068:	1b13      	subs	r3, r2, r4
9001b06a:	ee07 3a10 	vmov	s14, r3
9001b06e:	680b      	ldr	r3, [r1, #0]
9001b070:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001b074:	1b1b      	subs	r3, r3, r4
9001b076:	ee27 7a04 	vmul.f32	s14, s14, s8
9001b07a:	ee64 4ac7 	vnmul.f32	s9, s9, s14
9001b07e:	ee07 3a10 	vmov	s14, r3
9001b082:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001b086:	ee27 7a04 	vmul.f32	s14, s14, s8
9001b08a:	eee6 4a87 	vfma.f32	s9, s13, s14
9001b08e:	ee64 4a86 	vmul.f32	s9, s9, s12
9001b092:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
9001b096:	6aca      	ldr	r2, [r1, #44]	; 0x2c
9001b098:	698b      	ldr	r3, [r1, #24]
9001b09a:	1a9b      	subs	r3, r3, r2
9001b09c:	ee06 3a90 	vmov	s13, r3
9001b0a0:	684b      	ldr	r3, [r1, #4]
9001b0a2:	1a9b      	subs	r3, r3, r2
9001b0a4:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9001b0a8:	ee07 3a10 	vmov	s14, r3
9001b0ac:	ee66 6a84 	vmul.f32	s13, s13, s8
9001b0b0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001b0b4:	ee65 6a66 	vnmul.f32	s13, s10, s13
9001b0b8:	ee27 7a04 	vmul.f32	s14, s14, s8
9001b0bc:	eee5 6a87 	vfma.f32	s13, s11, s14
9001b0c0:	ee66 6a83 	vmul.f32	s13, s13, s6
9001b0c4:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
9001b0c8:	6a8c      	ldr	r4, [r1, #40]	; 0x28
9001b0ca:	694a      	ldr	r2, [r1, #20]
9001b0cc:	1b13      	subs	r3, r2, r4
9001b0ce:	ee07 3a10 	vmov	s14, r3
9001b0d2:	680b      	ldr	r3, [r1, #0]
9001b0d4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001b0d8:	1b1b      	subs	r3, r3, r4
9001b0da:	ee27 7a04 	vmul.f32	s14, s14, s8
9001b0de:	ee25 5a47 	vnmul.f32	s10, s10, s14
9001b0e2:	ee07 3a10 	vmov	s14, r3
9001b0e6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001b0ea:	ee27 7a04 	vmul.f32	s14, s14, s8
9001b0ee:	eea5 5a87 	vfma.f32	s10, s11, s14
9001b0f2:	edd0 5a08 	vldr	s11, [r0, #32]
9001b0f6:	ee31 1a65 	vsub.f32	s2, s2, s11
9001b0fa:	ee72 5ae5 	vsub.f32	s11, s5, s11
9001b0fe:	ee25 5a06 	vmul.f32	s10, s10, s12
9001b102:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
9001b106:	6aca      	ldr	r2, [r1, #44]	; 0x2c
9001b108:	698b      	ldr	r3, [r1, #24]
9001b10a:	1a9b      	subs	r3, r3, r2
9001b10c:	ee07 3a10 	vmov	s14, r3
9001b110:	684b      	ldr	r3, [r1, #4]
9001b112:	1a9b      	subs	r3, r3, r2
9001b114:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001b118:	ee01 3a90 	vmov	s3, r3
9001b11c:	ee27 7a04 	vmul.f32	s14, s14, s8
9001b120:	eef8 1ae1 	vcvt.f32.s32	s3, s3
9001b124:	ee25 7ac7 	vnmul.f32	s14, s11, s14
9001b128:	ee61 1a84 	vmul.f32	s3, s3, s8
9001b12c:	eea1 7a21 	vfma.f32	s14, s2, s3
9001b130:	ee27 7a03 	vmul.f32	s14, s14, s6
9001b134:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
9001b138:	6a8c      	ldr	r4, [r1, #40]	; 0x28
9001b13a:	694a      	ldr	r2, [r1, #20]
9001b13c:	1b13      	subs	r3, r2, r4
9001b13e:	ee03 3a10 	vmov	s6, r3
9001b142:	680b      	ldr	r3, [r1, #0]
9001b144:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
9001b148:	1b1b      	subs	r3, r3, r4
9001b14a:	ee23 3a04 	vmul.f32	s6, s6, s8
9001b14e:	ee65 5ac3 	vnmul.f32	s11, s11, s6
9001b152:	ee03 3a10 	vmov	s6, r3
9001b156:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
9001b15a:	ee23 4a04 	vmul.f32	s8, s6, s8
9001b15e:	eee1 5a04 	vfma.f32	s11, s2, s8
9001b162:	ee25 6a86 	vmul.f32	s12, s11, s12
9001b166:	ee62 5a67 	vnmul.f32	s11, s4, s15
9001b16a:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
9001b16e:	eee3 5aa6 	vfma.f32	s11, s7, s13
9001b172:	eef5 5ac0 	vcmpe.f32	s11, #0.0
9001b176:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001b17a:	dd13      	ble.n	9001b1a4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
9001b17c:	f44f 4300 	mov.w	r3, #32768	; 0x8000
9001b180:	ee62 7ae7 	vnmul.f32	s15, s5, s15
9001b184:	63c3      	str	r3, [r0, #60]	; 0x3c
9001b186:	eee3 7a87 	vfma.f32	s15, s7, s14
9001b18a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
9001b18e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001b192:	dd15      	ble.n	9001b1c0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
9001b194:	f44f 4300 	mov.w	r3, #32768	; 0x8000
9001b198:	6403      	str	r3, [r0, #64]	; 0x40
9001b19a:	bd70      	pop	{r4, r5, r6, pc}
9001b19c:	4623      	mov	r3, r4
9001b19e:	e6fd      	b.n	9001af9c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
9001b1a0:	462a      	mov	r2, r5
9001b1a2:	e706      	b.n	9001afb2 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
9001b1a4:	d502      	bpl.n	9001b1ac <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
9001b1a6:	f647 73ff 	movw	r3, #32767	; 0x7fff
9001b1aa:	e7e9      	b.n	9001b180 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
9001b1ac:	ee22 2a64 	vnmul.f32	s4, s4, s9
9001b1b0:	eea3 2a85 	vfma.f32	s4, s7, s10
9001b1b4:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
9001b1b8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001b1bc:	dade      	bge.n	9001b17c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
9001b1be:	e7f2      	b.n	9001b1a6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
9001b1c0:	d502      	bpl.n	9001b1c8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
9001b1c2:	f647 73ff 	movw	r3, #32767	; 0x7fff
9001b1c6:	e7e7      	b.n	9001b198 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
9001b1c8:	ee62 4ae4 	vnmul.f32	s9, s5, s9
9001b1cc:	eee3 4a86 	vfma.f32	s9, s7, s12
9001b1d0:	eef5 4ac0 	vcmpe.f32	s9, #0.0
9001b1d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001b1d8:	dadc      	bge.n	9001b194 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
9001b1da:	e7f2      	b.n	9001b1c2 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
9001b1dc:	3d800000 	.word	0x3d800000

9001b1e0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
9001b1e0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001b1e4:	2714      	movs	r7, #20
9001b1e6:	435f      	muls	r7, r3
9001b1e8:	eb02 0c07 	add.w	ip, r2, r7
9001b1ec:	f8dc 5004 	ldr.w	r5, [ip, #4]
9001b1f0:	f115 0e0f 	adds.w	lr, r5, #15
9001b1f4:	f100 80a2 	bmi.w	9001b33c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
9001b1f8:	ea4f 1e2e 	mov.w	lr, lr, asr #4
9001b1fc:	9c08      	ldr	r4, [sp, #32]
9001b1fe:	2614      	movs	r6, #20
9001b200:	f8c0 e014 	str.w	lr, [r0, #20]
9001b204:	4366      	muls	r6, r4
9001b206:	eb02 0806 	add.w	r8, r2, r6
9001b20a:	f8d8 5004 	ldr.w	r5, [r8, #4]
9001b20e:	f115 040f 	adds.w	r4, r5, #15
9001b212:	f100 809f 	bmi.w	9001b354 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
9001b216:	1124      	asrs	r4, r4, #4
9001b218:	eba4 040e 	sub.w	r4, r4, lr
9001b21c:	6184      	str	r4, [r0, #24]
9001b21e:	2c00      	cmp	r4, #0
9001b220:	f000 808a 	beq.w	9001b338 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
9001b224:	f8dc 9004 	ldr.w	r9, [ip, #4]
9001b228:	f8d8 4004 	ldr.w	r4, [r8, #4]
9001b22c:	5995      	ldr	r5, [r2, r6]
9001b22e:	eba4 0809 	sub.w	r8, r4, r9
9001b232:	59d4      	ldr	r4, [r2, r7]
9001b234:	eba5 0a04 	sub.w	sl, r5, r4
9001b238:	ea4f 1608 	mov.w	r6, r8, lsl #4
9001b23c:	ea4f 150a 	mov.w	r5, sl, lsl #4
9001b240:	fb0e fe05 	mul.w	lr, lr, r5
9001b244:	fb0a ee19 	mls	lr, sl, r9, lr
9001b248:	fb08 e404 	mla	r4, r8, r4, lr
9001b24c:	3c01      	subs	r4, #1
9001b24e:	19a4      	adds	r4, r4, r6
9001b250:	f100 808c 	bmi.w	9001b36c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
9001b254:	fb94 fef6 	sdiv	lr, r4, r6
9001b258:	fb06 441e 	mls	r4, r6, lr, r4
9001b25c:	f8c0 e000 	str.w	lr, [r0]
9001b260:	6104      	str	r4, [r0, #16]
9001b262:	2d00      	cmp	r5, #0
9001b264:	f2c0 8095 	blt.w	9001b392 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
9001b268:	fb95 f4f6 	sdiv	r4, r5, r6
9001b26c:	fb06 5514 	mls	r5, r6, r4, r5
9001b270:	6044      	str	r4, [r0, #4]
9001b272:	6085      	str	r5, [r0, #8]
9001b274:	60c6      	str	r6, [r0, #12]
9001b276:	eb01 0383 	add.w	r3, r1, r3, lsl #2
9001b27a:	f8dc 4004 	ldr.w	r4, [ip, #4]
9001b27e:	6945      	ldr	r5, [r0, #20]
9001b280:	59d2      	ldr	r2, [r2, r7]
9001b282:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
9001b286:	eddf 6a4b 	vldr	s13, [pc, #300]	; 9001b3b4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
9001b28a:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
9001b28e:	ee07 4a10 	vmov	s14, r4
9001b292:	6804      	ldr	r4, [r0, #0]
9001b294:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
9001b298:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001b29c:	ee07 2a90 	vmov	s15, r2
9001b2a0:	ee27 7a26 	vmul.f32	s14, s14, s13
9001b2a4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001b2a8:	ee67 7aa6 	vmul.f32	s15, s15, s13
9001b2ac:	edd3 6a00 	vldr	s13, [r3]
9001b2b0:	eee6 6a07 	vfma.f32	s13, s12, s14
9001b2b4:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
9001b2b8:	eee6 6a27 	vfma.f32	s13, s12, s15
9001b2bc:	edc0 6a07 	vstr	s13, [r0, #28]
9001b2c0:	edd0 6a01 	vldr	s13, [r0, #4]
9001b2c4:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
9001b2c8:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9001b2cc:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
9001b2d0:	eea6 6aa5 	vfma.f32	s12, s13, s11
9001b2d4:	ed80 6a08 	vstr	s12, [r0, #32]
9001b2d8:	6a4a      	ldr	r2, [r1, #36]	; 0x24
9001b2da:	6242      	str	r2, [r0, #36]	; 0x24
9001b2dc:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
9001b2e0:	ed93 6a03 	vldr	s12, [r3, #12]
9001b2e4:	eea5 6a87 	vfma.f32	s12, s11, s14
9001b2e8:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
9001b2ec:	eea5 6aa7 	vfma.f32	s12, s11, s15
9001b2f0:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
9001b2f4:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
9001b2f8:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
9001b2fc:	eea6 6aa5 	vfma.f32	s12, s13, s11
9001b300:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
9001b304:	6aca      	ldr	r2, [r1, #44]	; 0x2c
9001b306:	6302      	str	r2, [r0, #48]	; 0x30
9001b308:	ed93 6a06 	vldr	s12, [r3, #24]
9001b30c:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
9001b310:	eea5 6a87 	vfma.f32	s12, s11, s14
9001b314:	eeb0 7a46 	vmov.f32	s14, s12
9001b318:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
9001b31c:	eea6 7a27 	vfma.f32	s14, s12, s15
9001b320:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
9001b324:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
9001b328:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
9001b32c:	eee6 7a87 	vfma.f32	s15, s13, s14
9001b330:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
9001b334:	6b4b      	ldr	r3, [r1, #52]	; 0x34
9001b336:	63c3      	str	r3, [r0, #60]	; 0x3c
9001b338:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001b33c:	2410      	movs	r4, #16
9001b33e:	f1c5 0501 	rsb	r5, r5, #1
9001b342:	fb9e fef4 	sdiv	lr, lr, r4
9001b346:	f015 050f 	ands.w	r5, r5, #15
9001b34a:	bf18      	it	ne
9001b34c:	2501      	movne	r5, #1
9001b34e:	ebae 0e05 	sub.w	lr, lr, r5
9001b352:	e753      	b.n	9001b1fc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
9001b354:	f04f 0910 	mov.w	r9, #16
9001b358:	f1c5 0501 	rsb	r5, r5, #1
9001b35c:	fb94 f4f9 	sdiv	r4, r4, r9
9001b360:	f015 050f 	ands.w	r5, r5, #15
9001b364:	bf18      	it	ne
9001b366:	2501      	movne	r5, #1
9001b368:	1b64      	subs	r4, r4, r5
9001b36a:	e755      	b.n	9001b218 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
9001b36c:	4264      	negs	r4, r4
9001b36e:	fb94 fef6 	sdiv	lr, r4, r6
9001b372:	f1ce 0800 	rsb	r8, lr, #0
9001b376:	fb06 441e 	mls	r4, r6, lr, r4
9001b37a:	f8c0 8000 	str.w	r8, [r0]
9001b37e:	6104      	str	r4, [r0, #16]
9001b380:	2c00      	cmp	r4, #0
9001b382:	f43f af6e 	beq.w	9001b262 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
9001b386:	ea6f 0e0e 	mvn.w	lr, lr
9001b38a:	1b34      	subs	r4, r6, r4
9001b38c:	f8c0 e000 	str.w	lr, [r0]
9001b390:	e766      	b.n	9001b260 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
9001b392:	426d      	negs	r5, r5
9001b394:	fb95 f4f6 	sdiv	r4, r5, r6
9001b398:	f1c4 0e00 	rsb	lr, r4, #0
9001b39c:	fb06 5514 	mls	r5, r6, r4, r5
9001b3a0:	f8c0 e004 	str.w	lr, [r0, #4]
9001b3a4:	6085      	str	r5, [r0, #8]
9001b3a6:	2d00      	cmp	r5, #0
9001b3a8:	f43f af64 	beq.w	9001b274 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
9001b3ac:	43e4      	mvns	r4, r4
9001b3ae:	1b75      	subs	r5, r6, r5
9001b3b0:	6044      	str	r4, [r0, #4]
9001b3b2:	e75e      	b.n	9001b272 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
9001b3b4:	3d800000 	.word	0x3d800000

9001b3b8 <_ZN8touchgfx7Unicode6strlenEPKt>:
9001b3b8:	4602      	mov	r2, r0
9001b3ba:	b148      	cbz	r0, 9001b3d0 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
9001b3bc:	2300      	movs	r3, #0
9001b3be:	b298      	uxth	r0, r3
9001b3c0:	3301      	adds	r3, #1
9001b3c2:	eb02 0143 	add.w	r1, r2, r3, lsl #1
9001b3c6:	f831 1c02 	ldrh.w	r1, [r1, #-2]
9001b3ca:	2900      	cmp	r1, #0
9001b3cc:	d1f7      	bne.n	9001b3be <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
9001b3ce:	4770      	bx	lr
9001b3d0:	4770      	bx	lr

9001b3d2 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
9001b3d2:	b530      	push	{r4, r5, lr}
9001b3d4:	4604      	mov	r4, r0
9001b3d6:	b159      	cbz	r1, 9001b3f0 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
9001b3d8:	b148      	cbz	r0, 9001b3ee <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
9001b3da:	2300      	movs	r3, #0
9001b3dc:	b298      	uxth	r0, r3
9001b3de:	4282      	cmp	r2, r0
9001b3e0:	d905      	bls.n	9001b3ee <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
9001b3e2:	5ccd      	ldrb	r5, [r1, r3]
9001b3e4:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
9001b3e8:	3301      	adds	r3, #1
9001b3ea:	2d00      	cmp	r5, #0
9001b3ec:	d1f6      	bne.n	9001b3dc <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
9001b3ee:	bd30      	pop	{r4, r5, pc}
9001b3f0:	4608      	mov	r0, r1
9001b3f2:	e7fc      	b.n	9001b3ee <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

9001b3f4 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
9001b3f4:	b5f0      	push	{r4, r5, r6, r7, lr}
9001b3f6:	b08b      	sub	sp, #44	; 0x2c
9001b3f8:	468c      	mov	ip, r1
9001b3fa:	4604      	mov	r4, r0
9001b3fc:	2100      	movs	r1, #0
9001b3fe:	261f      	movs	r6, #31
9001b400:	af01      	add	r7, sp, #4
9001b402:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
9001b406:	1e71      	subs	r1, r6, #1
9001b408:	fb94 fef3 	sdiv	lr, r4, r3
9001b40c:	fb03 441e 	mls	r4, r3, lr, r4
9001b410:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
9001b414:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
9001b418:	b2ec      	uxtb	r4, r5
9001b41a:	2d09      	cmp	r5, #9
9001b41c:	bfd4      	ite	le
9001b41e:	3430      	addle	r4, #48	; 0x30
9001b420:	3457      	addgt	r4, #87	; 0x57
9001b422:	b2e4      	uxtb	r4, r4
9001b424:	55bc      	strb	r4, [r7, r6]
9001b426:	4674      	mov	r4, lr
9001b428:	b974      	cbnz	r4, 9001b448 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
9001b42a:	2800      	cmp	r0, #0
9001b42c:	da05      	bge.n	9001b43a <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
9001b42e:	ab0a      	add	r3, sp, #40	; 0x28
9001b430:	4419      	add	r1, r3
9001b432:	232d      	movs	r3, #45	; 0x2d
9001b434:	f801 3c24 	strb.w	r3, [r1, #-36]
9001b438:	1eb1      	subs	r1, r6, #2
9001b43a:	3101      	adds	r1, #1
9001b43c:	4660      	mov	r0, ip
9001b43e:	4439      	add	r1, r7
9001b440:	f7ff ffc7 	bl	9001b3d2 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
9001b444:	b00b      	add	sp, #44	; 0x2c
9001b446:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001b448:	460e      	mov	r6, r1
9001b44a:	e7dc      	b.n	9001b406 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

9001b44c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
9001b44c:	b5f0      	push	{r4, r5, r6, r7, lr}
9001b44e:	468c      	mov	ip, r1
9001b450:	b08b      	sub	sp, #44	; 0x2c
9001b452:	2100      	movs	r1, #0
9001b454:	ae01      	add	r6, sp, #4
9001b456:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
9001b45a:	211f      	movs	r1, #31
9001b45c:	fbb0 f7f3 	udiv	r7, r0, r3
9001b460:	fb03 0517 	mls	r5, r3, r7, r0
9001b464:	4638      	mov	r0, r7
9001b466:	b2ec      	uxtb	r4, r5
9001b468:	2d09      	cmp	r5, #9
9001b46a:	bfd4      	ite	le
9001b46c:	3430      	addle	r4, #48	; 0x30
9001b46e:	3457      	addgt	r4, #87	; 0x57
9001b470:	b2e4      	uxtb	r4, r4
9001b472:	558c      	strb	r4, [r1, r6]
9001b474:	1e4c      	subs	r4, r1, #1
9001b476:	b92f      	cbnz	r7, 9001b484 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
9001b478:	4431      	add	r1, r6
9001b47a:	4660      	mov	r0, ip
9001b47c:	f7ff ffa9 	bl	9001b3d2 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
9001b480:	b00b      	add	sp, #44	; 0x2c
9001b482:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001b484:	4621      	mov	r1, r4
9001b486:	e7e9      	b.n	9001b45c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

9001b488 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
9001b488:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001b48c:	b085      	sub	sp, #20
9001b48e:	4691      	mov	r9, r2
9001b490:	6802      	ldr	r2, [r0, #0]
9001b492:	4688      	mov	r8, r1
9001b494:	461c      	mov	r4, r3
9001b496:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
9001b49a:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
9001b49e:	4683      	mov	fp, r0
9001b4a0:	4610      	mov	r0, r2
9001b4a2:	9103      	str	r1, [sp, #12]
9001b4a4:	9302      	str	r3, [sp, #8]
9001b4a6:	9201      	str	r2, [sp, #4]
9001b4a8:	f7ff ff86 	bl	9001b3b8 <_ZN8touchgfx7Unicode6strlenEPKt>
9001b4ac:	f1b8 0f00 	cmp.w	r8, #0
9001b4b0:	bf0c      	ite	eq
9001b4b2:	4684      	moveq	ip, r0
9001b4b4:	f100 0c01 	addne.w	ip, r0, #1
9001b4b8:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
9001b4bc:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
9001b4c0:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
9001b4c2:	fa1f fc8c 	uxth.w	ip, ip
9001b4c6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
9001b4c8:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
9001b4cc:	9903      	ldr	r1, [sp, #12]
9001b4ce:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
9001b4d2:	d041      	beq.n	9001b558 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
9001b4d4:	d834      	bhi.n	9001b540 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
9001b4d6:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
9001b4da:	d059      	beq.n	9001b590 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
9001b4dc:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
9001b4e0:	d03a      	beq.n	9001b558 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
9001b4e2:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
9001b4e6:	d034      	beq.n	9001b552 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
9001b4e8:	2400      	movs	r4, #0
9001b4ea:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
9001b4ee:	3a01      	subs	r2, #1
9001b4f0:	b169      	cbz	r1, 9001b50e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
9001b4f2:	9911      	ldr	r1, [sp, #68]	; 0x44
9001b4f4:	458c      	cmp	ip, r1
9001b4f6:	da09      	bge.n	9001b50c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
9001b4f8:	eba1 010c 	sub.w	r1, r1, ip
9001b4fc:	b289      	uxth	r1, r1
9001b4fe:	b933      	cbnz	r3, 9001b50e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
9001b500:	2e00      	cmp	r6, #0
9001b502:	d051      	beq.n	9001b5a8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
9001b504:	2800      	cmp	r0, #0
9001b506:	d04f      	beq.n	9001b5a8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
9001b508:	440c      	add	r4, r1
9001b50a:	b2a4      	uxth	r4, r4
9001b50c:	2100      	movs	r1, #0
9001b50e:	682b      	ldr	r3, [r5, #0]
9001b510:	4293      	cmp	r3, r2
9001b512:	da07      	bge.n	9001b524 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
9001b514:	f1b8 0f00 	cmp.w	r8, #0
9001b518:	d004      	beq.n	9001b524 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
9001b51a:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
9001b51e:	682b      	ldr	r3, [r5, #0]
9001b520:	3301      	adds	r3, #1
9001b522:	602b      	str	r3, [r5, #0]
9001b524:	2730      	movs	r7, #48	; 0x30
9001b526:	2c00      	cmp	r4, #0
9001b528:	d04e      	beq.n	9001b5c8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
9001b52a:	682e      	ldr	r6, [r5, #0]
9001b52c:	3c01      	subs	r4, #1
9001b52e:	42b2      	cmp	r2, r6
9001b530:	b2a4      	uxth	r4, r4
9001b532:	dd49      	ble.n	9001b5c8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
9001b534:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
9001b538:	682b      	ldr	r3, [r5, #0]
9001b53a:	3301      	adds	r3, #1
9001b53c:	602b      	str	r3, [r5, #0]
9001b53e:	e7f2      	b.n	9001b526 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
9001b540:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
9001b544:	d01d      	beq.n	9001b582 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
9001b546:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
9001b54a:	d002      	beq.n	9001b552 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
9001b54c:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
9001b550:	e7c9      	b.n	9001b4e6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
9001b552:	4684      	mov	ip, r0
9001b554:	f04f 0800 	mov.w	r8, #0
9001b558:	2c00      	cmp	r4, #0
9001b55a:	d0c6      	beq.n	9001b4ea <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
9001b55c:	b947      	cbnz	r7, 9001b570 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
9001b55e:	2801      	cmp	r0, #1
9001b560:	d106      	bne.n	9001b570 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
9001b562:	8814      	ldrh	r4, [r2, #0]
9001b564:	2c30      	cmp	r4, #48	; 0x30
9001b566:	bf02      	ittt	eq
9001b568:	3202      	addeq	r2, #2
9001b56a:	4638      	moveq	r0, r7
9001b56c:	f8cb 2000 	streq.w	r2, [fp]
9001b570:	45bc      	cmp	ip, r7
9001b572:	da14      	bge.n	9001b59e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
9001b574:	b2bf      	uxth	r7, r7
9001b576:	eba7 040c 	sub.w	r4, r7, ip
9001b57a:	46bc      	mov	ip, r7
9001b57c:	b2a4      	uxth	r4, r4
9001b57e:	2600      	movs	r6, #0
9001b580:	e7b3      	b.n	9001b4ea <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
9001b582:	4684      	mov	ip, r0
9001b584:	b16c      	cbz	r4, 9001b5a2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
9001b586:	42b8      	cmp	r0, r7
9001b588:	dd00      	ble.n	9001b58c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
9001b58a:	b2b8      	uxth	r0, r7
9001b58c:	2400      	movs	r4, #0
9001b58e:	e003      	b.n	9001b598 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
9001b590:	f04f 0c01 	mov.w	ip, #1
9001b594:	2400      	movs	r4, #0
9001b596:	4660      	mov	r0, ip
9001b598:	4626      	mov	r6, r4
9001b59a:	46a0      	mov	r8, r4
9001b59c:	e7a5      	b.n	9001b4ea <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
9001b59e:	2400      	movs	r4, #0
9001b5a0:	e7ed      	b.n	9001b57e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
9001b5a2:	4626      	mov	r6, r4
9001b5a4:	46a0      	mov	r8, r4
9001b5a6:	e7a0      	b.n	9001b4ea <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
9001b5a8:	2900      	cmp	r1, #0
9001b5aa:	d0b0      	beq.n	9001b50e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
9001b5ac:	2720      	movs	r7, #32
9001b5ae:	682e      	ldr	r6, [r5, #0]
9001b5b0:	2900      	cmp	r1, #0
9001b5b2:	d0ac      	beq.n	9001b50e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
9001b5b4:	3901      	subs	r1, #1
9001b5b6:	4296      	cmp	r6, r2
9001b5b8:	b289      	uxth	r1, r1
9001b5ba:	daa7      	bge.n	9001b50c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
9001b5bc:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
9001b5c0:	682b      	ldr	r3, [r5, #0]
9001b5c2:	3301      	adds	r3, #1
9001b5c4:	602b      	str	r3, [r5, #0]
9001b5c6:	e7f2      	b.n	9001b5ae <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
9001b5c8:	b188      	cbz	r0, 9001b5ee <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
9001b5ca:	682b      	ldr	r3, [r5, #0]
9001b5cc:	3801      	subs	r0, #1
9001b5ce:	429a      	cmp	r2, r3
9001b5d0:	b280      	uxth	r0, r0
9001b5d2:	dd0c      	ble.n	9001b5ee <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
9001b5d4:	f8db 3000 	ldr.w	r3, [fp]
9001b5d8:	1c9c      	adds	r4, r3, #2
9001b5da:	f8cb 4000 	str.w	r4, [fp]
9001b5de:	881c      	ldrh	r4, [r3, #0]
9001b5e0:	682b      	ldr	r3, [r5, #0]
9001b5e2:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
9001b5e6:	682b      	ldr	r3, [r5, #0]
9001b5e8:	3301      	adds	r3, #1
9001b5ea:	602b      	str	r3, [r5, #0]
9001b5ec:	e7ec      	b.n	9001b5c8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
9001b5ee:	2620      	movs	r6, #32
9001b5f0:	b151      	cbz	r1, 9001b608 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
9001b5f2:	6828      	ldr	r0, [r5, #0]
9001b5f4:	3901      	subs	r1, #1
9001b5f6:	4282      	cmp	r2, r0
9001b5f8:	b289      	uxth	r1, r1
9001b5fa:	dd05      	ble.n	9001b608 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
9001b5fc:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
9001b600:	682b      	ldr	r3, [r5, #0]
9001b602:	3301      	adds	r3, #1
9001b604:	602b      	str	r3, [r5, #0]
9001b606:	e7f3      	b.n	9001b5f0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
9001b608:	b005      	add	sp, #20
9001b60a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001b60e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
9001b60e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9001b612:	2400      	movs	r4, #0
9001b614:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
9001b618:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
9001b61c:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
9001b620:	8014      	strh	r4, [r2, #0]
9001b622:	701c      	strb	r4, [r3, #0]
9001b624:	f888 4000 	strb.w	r4, [r8]
9001b628:	f88c 4000 	strb.w	r4, [ip]
9001b62c:	f88e 4000 	strb.w	r4, [lr]
9001b630:	703c      	strb	r4, [r7, #0]
9001b632:	6804      	ldr	r4, [r0, #0]
9001b634:	b1a4      	cbz	r4, 9001b660 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
9001b636:	8824      	ldrh	r4, [r4, #0]
9001b638:	f04f 0901 	mov.w	r9, #1
9001b63c:	b314      	cbz	r4, 9001b684 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
9001b63e:	2c2b      	cmp	r4, #43	; 0x2b
9001b640:	d001      	beq.n	9001b646 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
9001b642:	2c20      	cmp	r4, #32
9001b644:	d110      	bne.n	9001b668 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
9001b646:	8014      	strh	r4, [r2, #0]
9001b648:	6804      	ldr	r4, [r0, #0]
9001b64a:	b10c      	cbz	r4, 9001b650 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
9001b64c:	3402      	adds	r4, #2
9001b64e:	6004      	str	r4, [r0, #0]
9001b650:	680c      	ldr	r4, [r1, #0]
9001b652:	b10c      	cbz	r4, 9001b658 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
9001b654:	3401      	adds	r4, #1
9001b656:	600c      	str	r4, [r1, #0]
9001b658:	6804      	ldr	r4, [r0, #0]
9001b65a:	b17c      	cbz	r4, 9001b67c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
9001b65c:	8824      	ldrh	r4, [r4, #0]
9001b65e:	e7ed      	b.n	9001b63c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
9001b660:	680c      	ldr	r4, [r1, #0]
9001b662:	b17c      	cbz	r4, 9001b684 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
9001b664:	7824      	ldrb	r4, [r4, #0]
9001b666:	e7e7      	b.n	9001b638 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
9001b668:	2c2d      	cmp	r4, #45	; 0x2d
9001b66a:	d102      	bne.n	9001b672 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
9001b66c:	f883 9000 	strb.w	r9, [r3]
9001b670:	e7ea      	b.n	9001b648 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
9001b672:	2c23      	cmp	r4, #35	; 0x23
9001b674:	d107      	bne.n	9001b686 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
9001b676:	f888 9000 	strb.w	r9, [r8]
9001b67a:	e7e5      	b.n	9001b648 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
9001b67c:	680c      	ldr	r4, [r1, #0]
9001b67e:	b10c      	cbz	r4, 9001b684 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
9001b680:	7824      	ldrb	r4, [r4, #0]
9001b682:	e7db      	b.n	9001b63c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
9001b684:	2400      	movs	r4, #0
9001b686:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
9001b68a:	2b09      	cmp	r3, #9
9001b68c:	d901      	bls.n	9001b692 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
9001b68e:	2c2a      	cmp	r4, #42	; 0x2a
9001b690:	d122      	bne.n	9001b6d8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
9001b692:	2301      	movs	r3, #1
9001b694:	2c30      	cmp	r4, #48	; 0x30
9001b696:	f88e 3000 	strb.w	r3, [lr]
9001b69a:	d10d      	bne.n	9001b6b8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
9001b69c:	f88c 3000 	strb.w	r3, [ip]
9001b6a0:	6803      	ldr	r3, [r0, #0]
9001b6a2:	b10b      	cbz	r3, 9001b6a8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
9001b6a4:	3302      	adds	r3, #2
9001b6a6:	6003      	str	r3, [r0, #0]
9001b6a8:	680b      	ldr	r3, [r1, #0]
9001b6aa:	b10b      	cbz	r3, 9001b6b0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
9001b6ac:	3301      	adds	r3, #1
9001b6ae:	600b      	str	r3, [r1, #0]
9001b6b0:	6803      	ldr	r3, [r0, #0]
9001b6b2:	2b00      	cmp	r3, #0
9001b6b4:	d02f      	beq.n	9001b716 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
9001b6b6:	881c      	ldrh	r4, [r3, #0]
9001b6b8:	2c2a      	cmp	r4, #42	; 0x2a
9001b6ba:	d135      	bne.n	9001b728 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
9001b6bc:	f04f 33ff 	mov.w	r3, #4294967295
9001b6c0:	6033      	str	r3, [r6, #0]
9001b6c2:	6803      	ldr	r3, [r0, #0]
9001b6c4:	b10b      	cbz	r3, 9001b6ca <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
9001b6c6:	3302      	adds	r3, #2
9001b6c8:	6003      	str	r3, [r0, #0]
9001b6ca:	680b      	ldr	r3, [r1, #0]
9001b6cc:	b10b      	cbz	r3, 9001b6d2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
9001b6ce:	3301      	adds	r3, #1
9001b6d0:	600b      	str	r3, [r1, #0]
9001b6d2:	6803      	ldr	r3, [r0, #0]
9001b6d4:	b31b      	cbz	r3, 9001b71e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
9001b6d6:	881c      	ldrh	r4, [r3, #0]
9001b6d8:	2c2e      	cmp	r4, #46	; 0x2e
9001b6da:	d11a      	bne.n	9001b712 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
9001b6dc:	2301      	movs	r3, #1
9001b6de:	703b      	strb	r3, [r7, #0]
9001b6e0:	6803      	ldr	r3, [r0, #0]
9001b6e2:	b10b      	cbz	r3, 9001b6e8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
9001b6e4:	3302      	adds	r3, #2
9001b6e6:	6003      	str	r3, [r0, #0]
9001b6e8:	680b      	ldr	r3, [r1, #0]
9001b6ea:	b10b      	cbz	r3, 9001b6f0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
9001b6ec:	3301      	adds	r3, #1
9001b6ee:	600b      	str	r3, [r1, #0]
9001b6f0:	6803      	ldr	r3, [r0, #0]
9001b6f2:	2b00      	cmp	r3, #0
9001b6f4:	d036      	beq.n	9001b764 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
9001b6f6:	881b      	ldrh	r3, [r3, #0]
9001b6f8:	2b2a      	cmp	r3, #42	; 0x2a
9001b6fa:	d137      	bne.n	9001b76c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
9001b6fc:	f04f 33ff 	mov.w	r3, #4294967295
9001b700:	602b      	str	r3, [r5, #0]
9001b702:	6803      	ldr	r3, [r0, #0]
9001b704:	b10b      	cbz	r3, 9001b70a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
9001b706:	3302      	adds	r3, #2
9001b708:	6003      	str	r3, [r0, #0]
9001b70a:	680b      	ldr	r3, [r1, #0]
9001b70c:	b10b      	cbz	r3, 9001b712 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
9001b70e:	3301      	adds	r3, #1
9001b710:	600b      	str	r3, [r1, #0]
9001b712:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9001b716:	680c      	ldr	r4, [r1, #0]
9001b718:	b134      	cbz	r4, 9001b728 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
9001b71a:	7824      	ldrb	r4, [r4, #0]
9001b71c:	e7cc      	b.n	9001b6b8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
9001b71e:	680b      	ldr	r3, [r1, #0]
9001b720:	2b00      	cmp	r3, #0
9001b722:	d0f6      	beq.n	9001b712 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
9001b724:	781c      	ldrb	r4, [r3, #0]
9001b726:	e7d7      	b.n	9001b6d8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
9001b728:	2300      	movs	r3, #0
9001b72a:	220a      	movs	r2, #10
9001b72c:	6033      	str	r3, [r6, #0]
9001b72e:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
9001b732:	fa1f f38c 	uxth.w	r3, ip
9001b736:	2b09      	cmp	r3, #9
9001b738:	d8ce      	bhi.n	9001b6d8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
9001b73a:	6833      	ldr	r3, [r6, #0]
9001b73c:	fb02 c303 	mla	r3, r2, r3, ip
9001b740:	6033      	str	r3, [r6, #0]
9001b742:	6803      	ldr	r3, [r0, #0]
9001b744:	b10b      	cbz	r3, 9001b74a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
9001b746:	3302      	adds	r3, #2
9001b748:	6003      	str	r3, [r0, #0]
9001b74a:	680b      	ldr	r3, [r1, #0]
9001b74c:	b10b      	cbz	r3, 9001b752 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
9001b74e:	3301      	adds	r3, #1
9001b750:	600b      	str	r3, [r1, #0]
9001b752:	6803      	ldr	r3, [r0, #0]
9001b754:	b10b      	cbz	r3, 9001b75a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
9001b756:	881c      	ldrh	r4, [r3, #0]
9001b758:	e7e9      	b.n	9001b72e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
9001b75a:	680c      	ldr	r4, [r1, #0]
9001b75c:	2c00      	cmp	r4, #0
9001b75e:	d0e6      	beq.n	9001b72e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
9001b760:	7824      	ldrb	r4, [r4, #0]
9001b762:	e7e4      	b.n	9001b72e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
9001b764:	680b      	ldr	r3, [r1, #0]
9001b766:	b10b      	cbz	r3, 9001b76c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
9001b768:	781b      	ldrb	r3, [r3, #0]
9001b76a:	e7c5      	b.n	9001b6f8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
9001b76c:	2200      	movs	r2, #0
9001b76e:	240a      	movs	r4, #10
9001b770:	602a      	str	r2, [r5, #0]
9001b772:	3b30      	subs	r3, #48	; 0x30
9001b774:	682a      	ldr	r2, [r5, #0]
9001b776:	b29e      	uxth	r6, r3
9001b778:	2e09      	cmp	r6, #9
9001b77a:	d813      	bhi.n	9001b7a4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
9001b77c:	fb04 3302 	mla	r3, r4, r2, r3
9001b780:	602b      	str	r3, [r5, #0]
9001b782:	6803      	ldr	r3, [r0, #0]
9001b784:	b10b      	cbz	r3, 9001b78a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
9001b786:	3302      	adds	r3, #2
9001b788:	6003      	str	r3, [r0, #0]
9001b78a:	680b      	ldr	r3, [r1, #0]
9001b78c:	b10b      	cbz	r3, 9001b792 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
9001b78e:	3301      	adds	r3, #1
9001b790:	600b      	str	r3, [r1, #0]
9001b792:	6803      	ldr	r3, [r0, #0]
9001b794:	b10b      	cbz	r3, 9001b79a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
9001b796:	881b      	ldrh	r3, [r3, #0]
9001b798:	e7eb      	b.n	9001b772 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
9001b79a:	680b      	ldr	r3, [r1, #0]
9001b79c:	2b00      	cmp	r3, #0
9001b79e:	d0e8      	beq.n	9001b772 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
9001b7a0:	781b      	ldrb	r3, [r3, #0]
9001b7a2:	e7e6      	b.n	9001b772 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
9001b7a4:	2a06      	cmp	r2, #6
9001b7a6:	bfa8      	it	ge
9001b7a8:	2206      	movge	r2, #6
9001b7aa:	602a      	str	r2, [r5, #0]
9001b7ac:	e7b1      	b.n	9001b712 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

9001b7ae <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
9001b7ae:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001b7b2:	b0a3      	sub	sp, #140	; 0x8c
9001b7b4:	2600      	movs	r6, #0
9001b7b6:	4607      	mov	r7, r0
9001b7b8:	4688      	mov	r8, r1
9001b7ba:	f10d 0944 	add.w	r9, sp, #68	; 0x44
9001b7be:	4631      	mov	r1, r6
9001b7c0:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
9001b7c2:	4648      	mov	r0, r9
9001b7c4:	960d      	str	r6, [sp, #52]	; 0x34
9001b7c6:	e9cd 3208 	strd	r3, r2, [sp, #32]
9001b7ca:	2242      	movs	r2, #66	; 0x42
9001b7cc:	f00e fd4e 	bl	9002a26c <memset>
9001b7d0:	b15f      	cbz	r7, 9001b7ea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
9001b7d2:	f108 3aff 	add.w	sl, r8, #4294967295
9001b7d6:	9a09      	ldr	r2, [sp, #36]	; 0x24
9001b7d8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001b7da:	b152      	cbz	r2, 9001b7f2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
9001b7dc:	8812      	ldrh	r2, [r2, #0]
9001b7de:	b10a      	cbz	r2, 9001b7e4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
9001b7e0:	459a      	cmp	sl, r3
9001b7e2:	dc2e      	bgt.n	9001b842 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
9001b7e4:	2200      	movs	r2, #0
9001b7e6:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
9001b7ea:	4638      	mov	r0, r7
9001b7ec:	b023      	add	sp, #140	; 0x8c
9001b7ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001b7f2:	9a08      	ldr	r2, [sp, #32]
9001b7f4:	2a00      	cmp	r2, #0
9001b7f6:	d0f5      	beq.n	9001b7e4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
9001b7f8:	7812      	ldrb	r2, [r2, #0]
9001b7fa:	e7f0      	b.n	9001b7de <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
9001b7fc:	2d00      	cmp	r5, #0
9001b7fe:	d0ea      	beq.n	9001b7d6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
9001b800:	782a      	ldrb	r2, [r5, #0]
9001b802:	b142      	cbz	r2, 9001b816 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
9001b804:	2a25      	cmp	r2, #37	; 0x25
9001b806:	d001      	beq.n	9001b80c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
9001b808:	459a      	cmp	sl, r3
9001b80a:	dc08      	bgt.n	9001b81e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
9001b80c:	f1bb 0f00 	cmp.w	fp, #0
9001b810:	d121      	bne.n	9001b856 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
9001b812:	2d00      	cmp	r5, #0
9001b814:	d0df      	beq.n	9001b7d6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
9001b816:	782a      	ldrb	r2, [r5, #0]
9001b818:	f04f 0b00 	mov.w	fp, #0
9001b81c:	e01d      	b.n	9001b85a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
9001b81e:	f1bb 0f00 	cmp.w	fp, #0
9001b822:	d077      	beq.n	9001b914 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x166>
9001b824:	f8bb 2000 	ldrh.w	r2, [fp]
9001b828:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
9001b82c:	f1bb 0f00 	cmp.w	fp, #0
9001b830:	d002      	beq.n	9001b838 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
9001b832:	f10b 0202 	add.w	r2, fp, #2
9001b836:	9209      	str	r2, [sp, #36]	; 0x24
9001b838:	b10d      	cbz	r5, 9001b83e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
9001b83a:	3501      	adds	r5, #1
9001b83c:	9508      	str	r5, [sp, #32]
9001b83e:	3301      	adds	r3, #1
9001b840:	930d      	str	r3, [sp, #52]	; 0x34
9001b842:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001b844:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
9001b848:	f1bb 0f00 	cmp.w	fp, #0
9001b84c:	d0d6      	beq.n	9001b7fc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
9001b84e:	f8bb 2000 	ldrh.w	r2, [fp]
9001b852:	2a00      	cmp	r2, #0
9001b854:	d1d6      	bne.n	9001b804 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
9001b856:	f8bb 2000 	ldrh.w	r2, [fp]
9001b85a:	2a00      	cmp	r2, #0
9001b85c:	d0bb      	beq.n	9001b7d6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
9001b85e:	459a      	cmp	sl, r3
9001b860:	ddb9      	ble.n	9001b7d6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
9001b862:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
9001b866:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
9001b86a:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
9001b86e:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
9001b872:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
9001b876:	960e      	str	r6, [sp, #56]	; 0x38
9001b878:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
9001b87c:	960f      	str	r6, [sp, #60]	; 0x3c
9001b87e:	f1bb 0f00 	cmp.w	fp, #0
9001b882:	d002      	beq.n	9001b88a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
9001b884:	f10b 0302 	add.w	r3, fp, #2
9001b888:	9309      	str	r3, [sp, #36]	; 0x24
9001b88a:	b10d      	cbz	r5, 9001b890 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
9001b88c:	1c6b      	adds	r3, r5, #1
9001b88e:	9308      	str	r3, [sp, #32]
9001b890:	ab0f      	add	r3, sp, #60	; 0x3c
9001b892:	f10d 0232 	add.w	r2, sp, #50	; 0x32
9001b896:	a908      	add	r1, sp, #32
9001b898:	a809      	add	r0, sp, #36	; 0x24
9001b89a:	9305      	str	r3, [sp, #20]
9001b89c:	f10d 0331 	add.w	r3, sp, #49	; 0x31
9001b8a0:	9304      	str	r3, [sp, #16]
9001b8a2:	ab0e      	add	r3, sp, #56	; 0x38
9001b8a4:	9303      	str	r3, [sp, #12]
9001b8a6:	ab0c      	add	r3, sp, #48	; 0x30
9001b8a8:	9302      	str	r3, [sp, #8]
9001b8aa:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
9001b8ae:	9301      	str	r3, [sp, #4]
9001b8b0:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
9001b8b4:	9300      	str	r3, [sp, #0]
9001b8b6:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
9001b8ba:	f7ff fea8 	bl	9001b60e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
9001b8be:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001b8c0:	2b00      	cmp	r3, #0
9001b8c2:	bfbf      	itttt	lt
9001b8c4:	6823      	ldrlt	r3, [r4, #0]
9001b8c6:	3404      	addlt	r4, #4
9001b8c8:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
9001b8cc:	930e      	strlt	r3, [sp, #56]	; 0x38
9001b8ce:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
9001b8d0:	2b00      	cmp	r3, #0
9001b8d2:	bfbe      	ittt	lt
9001b8d4:	6823      	ldrlt	r3, [r4, #0]
9001b8d6:	3404      	addlt	r4, #4
9001b8d8:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
9001b8dc:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
9001b8e0:	bfb8      	it	lt
9001b8e2:	930f      	strlt	r3, [sp, #60]	; 0x3c
9001b8e4:	b1d9      	cbz	r1, 9001b91e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x170>
9001b8e6:	880b      	ldrh	r3, [r1, #0]
9001b8e8:	2b69      	cmp	r3, #105	; 0x69
9001b8ea:	d01f      	beq.n	9001b92c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
9001b8ec:	d82f      	bhi.n	9001b94e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a0>
9001b8ee:	2b58      	cmp	r3, #88	; 0x58
9001b8f0:	d01c      	beq.n	9001b92c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
9001b8f2:	d818      	bhi.n	9001b926 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x178>
9001b8f4:	2b25      	cmp	r3, #37	; 0x25
9001b8f6:	d034      	beq.n	9001b962 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b4>
9001b8f8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001b8fa:	e9cd 5b08 	strd	r5, fp, [sp, #32]
9001b8fe:	f1bb 0f00 	cmp.w	fp, #0
9001b902:	f000 80b7 	beq.w	9001ba74 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c6>
9001b906:	f8bb 5000 	ldrh.w	r5, [fp]
9001b90a:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
9001b90e:	3301      	adds	r3, #1
9001b910:	930d      	str	r3, [sp, #52]	; 0x34
9001b912:	e029      	b.n	9001b968 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ba>
9001b914:	b10d      	cbz	r5, 9001b91a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16c>
9001b916:	782a      	ldrb	r2, [r5, #0]
9001b918:	e786      	b.n	9001b828 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
9001b91a:	462a      	mov	r2, r5
9001b91c:	e784      	b.n	9001b828 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
9001b91e:	2a00      	cmp	r2, #0
9001b920:	d0ea      	beq.n	9001b8f8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
9001b922:	7813      	ldrb	r3, [r2, #0]
9001b924:	e7e0      	b.n	9001b8e8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13a>
9001b926:	3b63      	subs	r3, #99	; 0x63
9001b928:	2b01      	cmp	r3, #1
9001b92a:	d8e5      	bhi.n	9001b8f8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
9001b92c:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
9001b930:	b329      	cbz	r1, 9001b97e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d0>
9001b932:	880b      	ldrh	r3, [r1, #0]
9001b934:	2b69      	cmp	r3, #105	; 0x69
9001b936:	d063      	beq.n	9001ba00 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x252>
9001b938:	d825      	bhi.n	9001b986 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d8>
9001b93a:	2b63      	cmp	r3, #99	; 0x63
9001b93c:	d038      	beq.n	9001b9b0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x202>
9001b93e:	2b64      	cmp	r3, #100	; 0x64
9001b940:	d05e      	beq.n	9001ba00 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x252>
9001b942:	2b58      	cmp	r3, #88	; 0x58
9001b944:	d07a      	beq.n	9001ba3c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28e>
9001b946:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
9001b94a:	4625      	mov	r5, r4
9001b94c:	e036      	b.n	9001b9bc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
9001b94e:	2b73      	cmp	r3, #115	; 0x73
9001b950:	d0ec      	beq.n	9001b92c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
9001b952:	d802      	bhi.n	9001b95a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ac>
9001b954:	2b6f      	cmp	r3, #111	; 0x6f
9001b956:	d1cf      	bne.n	9001b8f8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
9001b958:	e7e8      	b.n	9001b92c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
9001b95a:	2b75      	cmp	r3, #117	; 0x75
9001b95c:	d0e6      	beq.n	9001b92c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
9001b95e:	2b78      	cmp	r3, #120	; 0x78
9001b960:	e7f9      	b.n	9001b956 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a8>
9001b962:	9a0d      	ldr	r2, [sp, #52]	; 0x34
9001b964:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
9001b968:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001b96a:	b10b      	cbz	r3, 9001b970 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c2>
9001b96c:	3302      	adds	r3, #2
9001b96e:	9309      	str	r3, [sp, #36]	; 0x24
9001b970:	9b08      	ldr	r3, [sp, #32]
9001b972:	2b00      	cmp	r3, #0
9001b974:	f43f af2f 	beq.w	9001b7d6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
9001b978:	3301      	adds	r3, #1
9001b97a:	9308      	str	r3, [sp, #32]
9001b97c:	e72b      	b.n	9001b7d6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
9001b97e:	2a00      	cmp	r2, #0
9001b980:	d0e1      	beq.n	9001b946 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
9001b982:	7813      	ldrb	r3, [r2, #0]
9001b984:	e7d6      	b.n	9001b934 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x186>
9001b986:	2b73      	cmp	r3, #115	; 0x73
9001b988:	d036      	beq.n	9001b9f8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24a>
9001b98a:	d807      	bhi.n	9001b99c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ee>
9001b98c:	2b6f      	cmp	r3, #111	; 0x6f
9001b98e:	d1da      	bne.n	9001b946 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
9001b990:	9a0d      	ldr	r2, [sp, #52]	; 0x34
9001b992:	1d25      	adds	r5, r4, #4
9001b994:	2308      	movs	r3, #8
9001b996:	eba8 0202 	sub.w	r2, r8, r2
9001b99a:	e049      	b.n	9001ba30 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x282>
9001b99c:	2b75      	cmp	r3, #117	; 0x75
9001b99e:	d042      	beq.n	9001ba26 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x278>
9001b9a0:	2b78      	cmp	r3, #120	; 0x78
9001b9a2:	d1d0      	bne.n	9001b946 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
9001b9a4:	9a0d      	ldr	r2, [sp, #52]	; 0x34
9001b9a6:	1d25      	adds	r5, r4, #4
9001b9a8:	2310      	movs	r3, #16
9001b9aa:	eba8 0202 	sub.w	r2, r8, r2
9001b9ae:	e03f      	b.n	9001ba30 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x282>
9001b9b0:	6823      	ldr	r3, [r4, #0]
9001b9b2:	1d25      	adds	r5, r4, #4
9001b9b4:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
9001b9b8:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
9001b9bc:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001b9be:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
9001b9c2:	2b00      	cmp	r3, #0
9001b9c4:	d051      	beq.n	9001ba6a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2bc>
9001b9c6:	881a      	ldrh	r2, [r3, #0]
9001b9c8:	a80d      	add	r0, sp, #52	; 0x34
9001b9ca:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
9001b9ce:	462c      	mov	r4, r5
9001b9d0:	9005      	str	r0, [sp, #20]
9001b9d2:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
9001b9d6:	9004      	str	r0, [sp, #16]
9001b9d8:	980e      	ldr	r0, [sp, #56]	; 0x38
9001b9da:	9003      	str	r0, [sp, #12]
9001b9dc:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
9001b9e0:	9002      	str	r0, [sp, #8]
9001b9e2:	980f      	ldr	r0, [sp, #60]	; 0x3c
9001b9e4:	9001      	str	r0, [sp, #4]
9001b9e6:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
9001b9ea:	e9cd 8706 	strd	r8, r7, [sp, #24]
9001b9ee:	9000      	str	r0, [sp, #0]
9001b9f0:	a810      	add	r0, sp, #64	; 0x40
9001b9f2:	f7ff fd49 	bl	9001b488 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
9001b9f6:	e7b7      	b.n	9001b968 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ba>
9001b9f8:	1d25      	adds	r5, r4, #4
9001b9fa:	6823      	ldr	r3, [r4, #0]
9001b9fc:	9310      	str	r3, [sp, #64]	; 0x40
9001b9fe:	e7dd      	b.n	9001b9bc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
9001ba00:	9a0d      	ldr	r2, [sp, #52]	; 0x34
9001ba02:	230a      	movs	r3, #10
9001ba04:	4649      	mov	r1, r9
9001ba06:	6820      	ldr	r0, [r4, #0]
9001ba08:	eba8 0202 	sub.w	r2, r8, r2
9001ba0c:	1d25      	adds	r5, r4, #4
9001ba0e:	b292      	uxth	r2, r2
9001ba10:	f7ff fcf0 	bl	9001b3f4 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
9001ba14:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
9001ba18:	2b2d      	cmp	r3, #45	; 0x2d
9001ba1a:	d1cf      	bne.n	9001b9bc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
9001ba1c:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
9001ba20:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001ba22:	3302      	adds	r3, #2
9001ba24:	e7ea      	b.n	9001b9fc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24e>
9001ba26:	9a0d      	ldr	r2, [sp, #52]	; 0x34
9001ba28:	1d25      	adds	r5, r4, #4
9001ba2a:	230a      	movs	r3, #10
9001ba2c:	eba8 0202 	sub.w	r2, r8, r2
9001ba30:	b292      	uxth	r2, r2
9001ba32:	4649      	mov	r1, r9
9001ba34:	6820      	ldr	r0, [r4, #0]
9001ba36:	f7ff fd09 	bl	9001b44c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
9001ba3a:	e7bf      	b.n	9001b9bc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
9001ba3c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
9001ba3e:	2310      	movs	r3, #16
9001ba40:	4649      	mov	r1, r9
9001ba42:	6820      	ldr	r0, [r4, #0]
9001ba44:	eba8 0202 	sub.w	r2, r8, r2
9001ba48:	1d25      	adds	r5, r4, #4
9001ba4a:	b292      	uxth	r2, r2
9001ba4c:	f7ff fcfe 	bl	9001b44c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
9001ba50:	f10d 0242 	add.w	r2, sp, #66	; 0x42
9001ba54:	f832 3f02 	ldrh.w	r3, [r2, #2]!
9001ba58:	2b00      	cmp	r3, #0
9001ba5a:	d0af      	beq.n	9001b9bc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
9001ba5c:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
9001ba60:	2919      	cmp	r1, #25
9001ba62:	d8f7      	bhi.n	9001ba54 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2a6>
9001ba64:	3b20      	subs	r3, #32
9001ba66:	8013      	strh	r3, [r2, #0]
9001ba68:	e7f4      	b.n	9001ba54 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2a6>
9001ba6a:	9a08      	ldr	r2, [sp, #32]
9001ba6c:	2a00      	cmp	r2, #0
9001ba6e:	d0ab      	beq.n	9001b9c8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21a>
9001ba70:	7812      	ldrb	r2, [r2, #0]
9001ba72:	e7a9      	b.n	9001b9c8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21a>
9001ba74:	2d00      	cmp	r5, #0
9001ba76:	f43f af48 	beq.w	9001b90a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15c>
9001ba7a:	782d      	ldrb	r5, [r5, #0]
9001ba7c:	e745      	b.n	9001b90a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15c>

9001ba7e <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
9001ba7e:	b507      	push	{r0, r1, r2, lr}
9001ba80:	9300      	str	r3, [sp, #0]
9001ba82:	4613      	mov	r3, r2
9001ba84:	2200      	movs	r2, #0
9001ba86:	f7ff fe92 	bl	9001b7ae <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
9001ba8a:	b003      	add	sp, #12
9001ba8c:	f85d fb04 	ldr.w	pc, [sp], #4

9001ba90 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
9001ba90:	b40c      	push	{r2, r3}
9001ba92:	b507      	push	{r0, r1, r2, lr}
9001ba94:	ab04      	add	r3, sp, #16
9001ba96:	f853 2b04 	ldr.w	r2, [r3], #4
9001ba9a:	9301      	str	r3, [sp, #4]
9001ba9c:	f7ff ffef 	bl	9001ba7e <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
9001baa0:	b003      	add	sp, #12
9001baa2:	f85d eb04 	ldr.w	lr, [sp], #4
9001baa6:	b002      	add	sp, #8
9001baa8:	4770      	bx	lr
	...

9001baac <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
9001baac:	4b01      	ldr	r3, [pc, #4]	; (9001bab4 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
9001baae:	6018      	str	r0, [r3, #0]
9001bab0:	4770      	bx	lr
9001bab2:	bf00      	nop
9001bab4:	24023734 	.word	0x24023734

9001bab8 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
9001bab8:	4b06      	ldr	r3, [pc, #24]	; (9001bad4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
9001baba:	881a      	ldrh	r2, [r3, #0]
9001babc:	4282      	cmp	r2, r0
9001babe:	d807      	bhi.n	9001bad0 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
9001bac0:	4b05      	ldr	r3, [pc, #20]	; (9001bad8 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
9001bac2:	881b      	ldrh	r3, [r3, #0]
9001bac4:	4413      	add	r3, r2
9001bac6:	4298      	cmp	r0, r3
9001bac8:	bfac      	ite	ge
9001baca:	2000      	movge	r0, #0
9001bacc:	2001      	movlt	r0, #1
9001bace:	4770      	bx	lr
9001bad0:	2000      	movs	r0, #0
9001bad2:	4770      	bx	lr
9001bad4:	24023754 	.word	0x24023754
9001bad8:	24023758 	.word	0x24023758

9001badc <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
9001badc:	b508      	push	{r3, lr}
9001bade:	4601      	mov	r1, r0
9001bae0:	f7ff ffea 	bl	9001bab8 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
9001bae4:	b118      	cbz	r0, 9001baee <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
9001bae6:	4b02      	ldr	r3, [pc, #8]	; (9001baf0 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
9001bae8:	681b      	ldr	r3, [r3, #0]
9001baea:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
9001baee:	bd08      	pop	{r3, pc}
9001baf0:	24023738 	.word	0x24023738

9001baf4 <_ZN8touchgfx6Bitmap10clearCacheEv>:
9001baf4:	b5f0      	push	{r4, r5, r6, r7, lr}
9001baf6:	4c24      	ldr	r4, [pc, #144]	; (9001bb88 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
9001baf8:	6823      	ldr	r3, [r4, #0]
9001bafa:	2b00      	cmp	r3, #0
9001bafc:	d042      	beq.n	9001bb84 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
9001bafe:	4a23      	ldr	r2, [pc, #140]	; (9001bb8c <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
9001bb00:	4d23      	ldr	r5, [pc, #140]	; (9001bb90 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
9001bb02:	8811      	ldrh	r1, [r2, #0]
9001bb04:	f8b5 c000 	ldrh.w	ip, [r5]
9001bb08:	4822      	ldr	r0, [pc, #136]	; (9001bb94 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
9001bb0a:	4461      	add	r1, ip
9001bb0c:	1c4a      	adds	r2, r1, #1
9001bb0e:	008f      	lsls	r7, r1, #2
9001bb10:	f022 0201 	bic.w	r2, r2, #1
9001bb14:	19de      	adds	r6, r3, r7
9001bb16:	0412      	lsls	r2, r2, #16
9001bb18:	6006      	str	r6, [r0, #0]
9001bb1a:	4e1f      	ldr	r6, [pc, #124]	; (9001bb98 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
9001bb1c:	0c12      	lsrs	r2, r2, #16
9001bb1e:	eb07 0742 	add.w	r7, r7, r2, lsl #1
9001bb22:	19da      	adds	r2, r3, r7
9001bb24:	6032      	str	r2, [r6, #0]
9001bb26:	220e      	movs	r2, #14
9001bb28:	fb02 f20c 	mul.w	r2, r2, ip
9001bb2c:	3203      	adds	r2, #3
9001bb2e:	f022 0203 	bic.w	r2, r2, #3
9001bb32:	443a      	add	r2, r7
9001bb34:	4f19      	ldr	r7, [pc, #100]	; (9001bb9c <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
9001bb36:	4413      	add	r3, r2
9001bb38:	603b      	str	r3, [r7, #0]
9001bb3a:	2300      	movs	r3, #0
9001bb3c:	4f18      	ldr	r7, [pc, #96]	; (9001bba0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
9001bb3e:	469c      	mov	ip, r3
9001bb40:	803b      	strh	r3, [r7, #0]
9001bb42:	4f18      	ldr	r7, [pc, #96]	; (9001bba4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
9001bb44:	683f      	ldr	r7, [r7, #0]
9001bb46:	1aba      	subs	r2, r7, r2
9001bb48:	4f17      	ldr	r7, [pc, #92]	; (9001bba8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
9001bb4a:	603a      	str	r2, [r7, #0]
9001bb4c:	f64f 77ff 	movw	r7, #65535	; 0xffff
9001bb50:	4a16      	ldr	r2, [pc, #88]	; (9001bbac <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
9001bb52:	8013      	strh	r3, [r2, #0]
9001bb54:	428b      	cmp	r3, r1
9001bb56:	d10d      	bne.n	9001bb74 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
9001bb58:	882d      	ldrh	r5, [r5, #0]
9001bb5a:	2300      	movs	r3, #0
9001bb5c:	6830      	ldr	r0, [r6, #0]
9001bb5e:	240e      	movs	r4, #14
9001bb60:	429d      	cmp	r5, r3
9001bb62:	d90f      	bls.n	9001bb84 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
9001bb64:	fb04 0203 	mla	r2, r4, r3, r0
9001bb68:	3301      	adds	r3, #1
9001bb6a:	7b11      	ldrb	r1, [r2, #12]
9001bb6c:	f36f 1145 	bfc	r1, #5, #1
9001bb70:	7311      	strb	r1, [r2, #12]
9001bb72:	e7f5      	b.n	9001bb60 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
9001bb74:	6822      	ldr	r2, [r4, #0]
9001bb76:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
9001bb7a:	6802      	ldr	r2, [r0, #0]
9001bb7c:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
9001bb80:	3301      	adds	r3, #1
9001bb82:	e7e7      	b.n	9001bb54 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
9001bb84:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001bb86:	bf00      	nop
9001bb88:	24023738 	.word	0x24023738
9001bb8c:	24023754 	.word	0x24023754
9001bb90:	24023758 	.word	0x24023758
9001bb94:	2402374c 	.word	0x2402374c
9001bb98:	2402373c 	.word	0x2402373c
9001bb9c:	24023744 	.word	0x24023744
9001bba0:	24023756 	.word	0x24023756
9001bba4:	24023740 	.word	0x24023740
9001bba8:	24023750 	.word	0x24023750
9001bbac:	24023748 	.word	0x24023748

9001bbb0 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
9001bbb0:	4b06      	ldr	r3, [pc, #24]	; (9001bbcc <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
9001bbb2:	681b      	ldr	r3, [r3, #0]
9001bbb4:	b943      	cbnz	r3, 9001bbc8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
9001bbb6:	b139      	cbz	r1, 9001bbc8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
9001bbb8:	4b05      	ldr	r3, [pc, #20]	; (9001bbd0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
9001bbba:	801a      	strh	r2, [r3, #0]
9001bbbc:	4b05      	ldr	r3, [pc, #20]	; (9001bbd4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
9001bbbe:	6019      	str	r1, [r3, #0]
9001bbc0:	4b05      	ldr	r3, [pc, #20]	; (9001bbd8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
9001bbc2:	6018      	str	r0, [r3, #0]
9001bbc4:	f7ff bf96 	b.w	9001baf4 <_ZN8touchgfx6Bitmap10clearCacheEv>
9001bbc8:	4770      	bx	lr
9001bbca:	bf00      	nop
9001bbcc:	24023744 	.word	0x24023744
9001bbd0:	24023758 	.word	0x24023758
9001bbd4:	24023740 	.word	0x24023740
9001bbd8:	24023738 	.word	0x24023738

9001bbdc <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
9001bbdc:	b470      	push	{r4, r5, r6}
9001bbde:	4c07      	ldr	r4, [pc, #28]	; (9001bbfc <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
9001bbe0:	4605      	mov	r5, r0
9001bbe2:	4610      	mov	r0, r2
9001bbe4:	9a03      	ldr	r2, [sp, #12]
9001bbe6:	6826      	ldr	r6, [r4, #0]
9001bbe8:	b936      	cbnz	r6, 9001bbf8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
9001bbea:	6025      	str	r5, [r4, #0]
9001bbec:	4c04      	ldr	r4, [pc, #16]	; (9001bc00 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
9001bbee:	8021      	strh	r1, [r4, #0]
9001bbf0:	4619      	mov	r1, r3
9001bbf2:	bc70      	pop	{r4, r5, r6}
9001bbf4:	f7ff bfdc 	b.w	9001bbb0 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
9001bbf8:	bc70      	pop	{r4, r5, r6}
9001bbfa:	4770      	bx	lr
9001bbfc:	2402375c 	.word	0x2402375c
9001bc00:	24023754 	.word	0x24023754

9001bc04 <_ZNK8touchgfx6Bitmap8getWidthEv>:
9001bc04:	4a12      	ldr	r2, [pc, #72]	; (9001bc50 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
9001bc06:	8803      	ldrh	r3, [r0, #0]
9001bc08:	8812      	ldrh	r2, [r2, #0]
9001bc0a:	4293      	cmp	r3, r2
9001bc0c:	d207      	bcs.n	9001bc1e <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
9001bc0e:	4a11      	ldr	r2, [pc, #68]	; (9001bc54 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
9001bc10:	2114      	movs	r1, #20
9001bc12:	6812      	ldr	r2, [r2, #0]
9001bc14:	fb01 2303 	mla	r3, r1, r3, r2
9001bc18:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
9001bc1c:	4770      	bx	lr
9001bc1e:	490e      	ldr	r1, [pc, #56]	; (9001bc58 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
9001bc20:	8809      	ldrh	r1, [r1, #0]
9001bc22:	4411      	add	r1, r2
9001bc24:	428b      	cmp	r3, r1
9001bc26:	da04      	bge.n	9001bc32 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
9001bc28:	1a9b      	subs	r3, r3, r2
9001bc2a:	4a0c      	ldr	r2, [pc, #48]	; (9001bc5c <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
9001bc2c:	210e      	movs	r1, #14
9001bc2e:	6812      	ldr	r2, [r2, #0]
9001bc30:	e7f0      	b.n	9001bc14 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
9001bc32:	f64f 72fe 	movw	r2, #65534	; 0xfffe
9001bc36:	4293      	cmp	r3, r2
9001bc38:	d108      	bne.n	9001bc4c <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
9001bc3a:	4b09      	ldr	r3, [pc, #36]	; (9001bc60 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
9001bc3c:	781b      	ldrb	r3, [r3, #0]
9001bc3e:	b91b      	cbnz	r3, 9001bc48 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
9001bc40:	4b08      	ldr	r3, [pc, #32]	; (9001bc64 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
9001bc42:	f9b3 0000 	ldrsh.w	r0, [r3]
9001bc46:	4770      	bx	lr
9001bc48:	4b07      	ldr	r3, [pc, #28]	; (9001bc68 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
9001bc4a:	e7fa      	b.n	9001bc42 <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
9001bc4c:	2000      	movs	r0, #0
9001bc4e:	4770      	bx	lr
9001bc50:	24023754 	.word	0x24023754
9001bc54:	2402375c 	.word	0x2402375c
9001bc58:	24023758 	.word	0x24023758
9001bc5c:	2402373c 	.word	0x2402373c
9001bc60:	240236c4 	.word	0x240236c4
9001bc64:	240236c6 	.word	0x240236c6
9001bc68:	240236c8 	.word	0x240236c8

9001bc6c <_ZNK8touchgfx6Bitmap9getHeightEv>:
9001bc6c:	4a12      	ldr	r2, [pc, #72]	; (9001bcb8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
9001bc6e:	8803      	ldrh	r3, [r0, #0]
9001bc70:	8812      	ldrh	r2, [r2, #0]
9001bc72:	4293      	cmp	r3, r2
9001bc74:	d207      	bcs.n	9001bc86 <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
9001bc76:	4a11      	ldr	r2, [pc, #68]	; (9001bcbc <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
9001bc78:	2114      	movs	r1, #20
9001bc7a:	6812      	ldr	r2, [r2, #0]
9001bc7c:	fb01 2303 	mla	r3, r1, r3, r2
9001bc80:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
9001bc84:	4770      	bx	lr
9001bc86:	490e      	ldr	r1, [pc, #56]	; (9001bcc0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
9001bc88:	8809      	ldrh	r1, [r1, #0]
9001bc8a:	4411      	add	r1, r2
9001bc8c:	428b      	cmp	r3, r1
9001bc8e:	da04      	bge.n	9001bc9a <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
9001bc90:	1a9b      	subs	r3, r3, r2
9001bc92:	4a0c      	ldr	r2, [pc, #48]	; (9001bcc4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
9001bc94:	210e      	movs	r1, #14
9001bc96:	6812      	ldr	r2, [r2, #0]
9001bc98:	e7f0      	b.n	9001bc7c <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
9001bc9a:	f64f 72fe 	movw	r2, #65534	; 0xfffe
9001bc9e:	4293      	cmp	r3, r2
9001bca0:	d108      	bne.n	9001bcb4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
9001bca2:	4b09      	ldr	r3, [pc, #36]	; (9001bcc8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
9001bca4:	781b      	ldrb	r3, [r3, #0]
9001bca6:	b91b      	cbnz	r3, 9001bcb0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
9001bca8:	4b08      	ldr	r3, [pc, #32]	; (9001bccc <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
9001bcaa:	f9b3 0000 	ldrsh.w	r0, [r3]
9001bcae:	4770      	bx	lr
9001bcb0:	4b07      	ldr	r3, [pc, #28]	; (9001bcd0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
9001bcb2:	e7fa      	b.n	9001bcaa <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
9001bcb4:	2000      	movs	r0, #0
9001bcb6:	4770      	bx	lr
9001bcb8:	24023754 	.word	0x24023754
9001bcbc:	2402375c 	.word	0x2402375c
9001bcc0:	24023758 	.word	0x24023758
9001bcc4:	2402373c 	.word	0x2402373c
9001bcc8:	240236c4 	.word	0x240236c4
9001bccc:	240236c8 	.word	0x240236c8
9001bcd0:	240236c6 	.word	0x240236c6

9001bcd4 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
9001bcd4:	4a1f      	ldr	r2, [pc, #124]	; (9001bd54 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
9001bcd6:	b510      	push	{r4, lr}
9001bcd8:	880b      	ldrh	r3, [r1, #0]
9001bcda:	8812      	ldrh	r2, [r2, #0]
9001bcdc:	4293      	cmp	r3, r2
9001bcde:	d213      	bcs.n	9001bd08 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
9001bce0:	4a1d      	ldr	r2, [pc, #116]	; (9001bd58 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
9001bce2:	2114      	movs	r1, #20
9001bce4:	6812      	ldr	r2, [r2, #0]
9001bce6:	fb01 2303 	mla	r3, r1, r3, r2
9001bcea:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
9001bcee:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
9001bcf2:	8a1a      	ldrh	r2, [r3, #16]
9001bcf4:	8a5b      	ldrh	r3, [r3, #18]
9001bcf6:	f3c2 020c 	ubfx	r2, r2, #0, #13
9001bcfa:	8004      	strh	r4, [r0, #0]
9001bcfc:	f3c3 030c 	ubfx	r3, r3, #0, #13
9001bd00:	8041      	strh	r1, [r0, #2]
9001bd02:	8082      	strh	r2, [r0, #4]
9001bd04:	80c3      	strh	r3, [r0, #6]
9001bd06:	e00e      	b.n	9001bd26 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
9001bd08:	4914      	ldr	r1, [pc, #80]	; (9001bd5c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
9001bd0a:	8809      	ldrh	r1, [r1, #0]
9001bd0c:	4411      	add	r1, r2
9001bd0e:	428b      	cmp	r3, r1
9001bd10:	da0a      	bge.n	9001bd28 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
9001bd12:	1a9b      	subs	r3, r3, r2
9001bd14:	4a12      	ldr	r2, [pc, #72]	; (9001bd60 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
9001bd16:	210e      	movs	r1, #14
9001bd18:	6812      	ldr	r2, [r2, #0]
9001bd1a:	fb01 2303 	mla	r3, r1, r3, r2
9001bd1e:	681a      	ldr	r2, [r3, #0]
9001bd20:	6002      	str	r2, [r0, #0]
9001bd22:	685a      	ldr	r2, [r3, #4]
9001bd24:	6042      	str	r2, [r0, #4]
9001bd26:	bd10      	pop	{r4, pc}
9001bd28:	f64f 72fe 	movw	r2, #65534	; 0xfffe
9001bd2c:	4293      	cmp	r3, r2
9001bd2e:	d10b      	bne.n	9001bd48 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
9001bd30:	4b0c      	ldr	r3, [pc, #48]	; (9001bd64 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
9001bd32:	f9b3 1000 	ldrsh.w	r1, [r3]
9001bd36:	4b0c      	ldr	r3, [pc, #48]	; (9001bd68 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
9001bd38:	8081      	strh	r1, [r0, #4]
9001bd3a:	f9b3 2000 	ldrsh.w	r2, [r3]
9001bd3e:	2300      	movs	r3, #0
9001bd40:	80c2      	strh	r2, [r0, #6]
9001bd42:	8003      	strh	r3, [r0, #0]
9001bd44:	8043      	strh	r3, [r0, #2]
9001bd46:	e7ee      	b.n	9001bd26 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
9001bd48:	2300      	movs	r3, #0
9001bd4a:	8003      	strh	r3, [r0, #0]
9001bd4c:	8043      	strh	r3, [r0, #2]
9001bd4e:	8083      	strh	r3, [r0, #4]
9001bd50:	e7d8      	b.n	9001bd04 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
9001bd52:	bf00      	nop
9001bd54:	24023754 	.word	0x24023754
9001bd58:	2402375c 	.word	0x2402375c
9001bd5c:	24023758 	.word	0x24023758
9001bd60:	2402373c 	.word	0x2402373c
9001bd64:	240236c0 	.word	0x240236c0
9001bd68:	240236c2 	.word	0x240236c2

9001bd6c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
9001bd6c:	4a17      	ldr	r2, [pc, #92]	; (9001bdcc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
9001bd6e:	8803      	ldrh	r3, [r0, #0]
9001bd70:	8812      	ldrh	r2, [r2, #0]
9001bd72:	4293      	cmp	r3, r2
9001bd74:	d213      	bcs.n	9001bd9e <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
9001bd76:	4a16      	ldr	r2, [pc, #88]	; (9001bdd0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
9001bd78:	2114      	movs	r1, #20
9001bd7a:	6812      	ldr	r2, [r2, #0]
9001bd7c:	fb01 2303 	mla	r3, r1, r3, r2
9001bd80:	8a1a      	ldrh	r2, [r3, #16]
9001bd82:	8919      	ldrh	r1, [r3, #8]
9001bd84:	f3c2 020c 	ubfx	r2, r2, #0, #13
9001bd88:	428a      	cmp	r2, r1
9001bd8a:	db1d      	blt.n	9001bdc8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
9001bd8c:	8a58      	ldrh	r0, [r3, #18]
9001bd8e:	f3c0 000c 	ubfx	r0, r0, #0, #13
9001bd92:	895b      	ldrh	r3, [r3, #10]
9001bd94:	4298      	cmp	r0, r3
9001bd96:	bfac      	ite	ge
9001bd98:	2000      	movge	r0, #0
9001bd9a:	2001      	movlt	r0, #1
9001bd9c:	4770      	bx	lr
9001bd9e:	490d      	ldr	r1, [pc, #52]	; (9001bdd4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
9001bda0:	8809      	ldrh	r1, [r1, #0]
9001bda2:	4411      	add	r1, r2
9001bda4:	428b      	cmp	r3, r1
9001bda6:	da0d      	bge.n	9001bdc4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
9001bda8:	1a9b      	subs	r3, r3, r2
9001bdaa:	4a0b      	ldr	r2, [pc, #44]	; (9001bdd8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
9001bdac:	210e      	movs	r1, #14
9001bdae:	6812      	ldr	r2, [r2, #0]
9001bdb0:	fb01 2303 	mla	r3, r1, r3, r2
9001bdb4:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
9001bdb8:	891a      	ldrh	r2, [r3, #8]
9001bdba:	4291      	cmp	r1, r2
9001bdbc:	db04      	blt.n	9001bdc8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
9001bdbe:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
9001bdc2:	e7e6      	b.n	9001bd92 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
9001bdc4:	2000      	movs	r0, #0
9001bdc6:	4770      	bx	lr
9001bdc8:	2001      	movs	r0, #1
9001bdca:	4770      	bx	lr
9001bdcc:	24023754 	.word	0x24023754
9001bdd0:	2402375c 	.word	0x2402375c
9001bdd4:	24023758 	.word	0x24023758
9001bdd8:	2402373c 	.word	0x2402373c

9001bddc <_ZNK8touchgfx6Bitmap7getDataEv>:
9001bddc:	4a12      	ldr	r2, [pc, #72]	; (9001be28 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
9001bdde:	8803      	ldrh	r3, [r0, #0]
9001bde0:	8811      	ldrh	r1, [r2, #0]
9001bde2:	428b      	cmp	r3, r1
9001bde4:	d20b      	bcs.n	9001bdfe <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
9001bde6:	4a11      	ldr	r2, [pc, #68]	; (9001be2c <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
9001bde8:	6812      	ldr	r2, [r2, #0]
9001bdea:	b112      	cbz	r2, 9001bdf2 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
9001bdec:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
9001bdf0:	b9c0      	cbnz	r0, 9001be24 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
9001bdf2:	4a0f      	ldr	r2, [pc, #60]	; (9001be30 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
9001bdf4:	6811      	ldr	r1, [r2, #0]
9001bdf6:	2214      	movs	r2, #20
9001bdf8:	4353      	muls	r3, r2
9001bdfa:	58c8      	ldr	r0, [r1, r3]
9001bdfc:	4770      	bx	lr
9001bdfe:	4a0d      	ldr	r2, [pc, #52]	; (9001be34 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
9001be00:	8812      	ldrh	r2, [r2, #0]
9001be02:	440a      	add	r2, r1
9001be04:	4293      	cmp	r3, r2
9001be06:	da04      	bge.n	9001be12 <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
9001be08:	4a08      	ldr	r2, [pc, #32]	; (9001be2c <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
9001be0a:	6812      	ldr	r2, [r2, #0]
9001be0c:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
9001be10:	4770      	bx	lr
9001be12:	f64f 72fe 	movw	r2, #65534	; 0xfffe
9001be16:	4293      	cmp	r3, r2
9001be18:	d103      	bne.n	9001be22 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
9001be1a:	4b07      	ldr	r3, [pc, #28]	; (9001be38 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
9001be1c:	681b      	ldr	r3, [r3, #0]
9001be1e:	6c58      	ldr	r0, [r3, #68]	; 0x44
9001be20:	4770      	bx	lr
9001be22:	2000      	movs	r0, #0
9001be24:	4770      	bx	lr
9001be26:	bf00      	nop
9001be28:	24023754 	.word	0x24023754
9001be2c:	24023738 	.word	0x24023738
9001be30:	2402375c 	.word	0x2402375c
9001be34:	24023758 	.word	0x24023758
9001be38:	240236cc 	.word	0x240236cc

9001be3c <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
9001be3c:	4b24      	ldr	r3, [pc, #144]	; (9001bed0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
9001be3e:	8802      	ldrh	r2, [r0, #0]
9001be40:	8818      	ldrh	r0, [r3, #0]
9001be42:	4282      	cmp	r2, r0
9001be44:	d221      	bcs.n	9001be8a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
9001be46:	4b23      	ldr	r3, [pc, #140]	; (9001bed4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
9001be48:	6819      	ldr	r1, [r3, #0]
9001be4a:	2314      	movs	r3, #20
9001be4c:	fb03 1302 	mla	r3, r3, r2, r1
9001be50:	6858      	ldr	r0, [r3, #4]
9001be52:	2800      	cmp	r0, #0
9001be54:	d03a      	beq.n	9001becc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
9001be56:	4920      	ldr	r1, [pc, #128]	; (9001bed8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
9001be58:	6809      	ldr	r1, [r1, #0]
9001be5a:	2900      	cmp	r1, #0
9001be5c:	d036      	beq.n	9001becc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
9001be5e:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
9001be62:	2900      	cmp	r1, #0
9001be64:	d032      	beq.n	9001becc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
9001be66:	891a      	ldrh	r2, [r3, #8]
9001be68:	8958      	ldrh	r0, [r3, #10]
9001be6a:	4350      	muls	r0, r2
9001be6c:	7c5a      	ldrb	r2, [r3, #17]
9001be6e:	7cdb      	ldrb	r3, [r3, #19]
9001be70:	0952      	lsrs	r2, r2, #5
9001be72:	f3c3 1342 	ubfx	r3, r3, #5, #3
9001be76:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
9001be7a:	2b0b      	cmp	r3, #11
9001be7c:	bf18      	it	ne
9001be7e:	0040      	lslne	r0, r0, #1
9001be80:	3003      	adds	r0, #3
9001be82:	f020 0003 	bic.w	r0, r0, #3
9001be86:	4408      	add	r0, r1
9001be88:	4770      	bx	lr
9001be8a:	4b14      	ldr	r3, [pc, #80]	; (9001bedc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
9001be8c:	881b      	ldrh	r3, [r3, #0]
9001be8e:	4403      	add	r3, r0
9001be90:	429a      	cmp	r2, r3
9001be92:	da1a      	bge.n	9001beca <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
9001be94:	4b12      	ldr	r3, [pc, #72]	; (9001bee0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
9001be96:	1a10      	subs	r0, r2, r0
9001be98:	210e      	movs	r1, #14
9001be9a:	681b      	ldr	r3, [r3, #0]
9001be9c:	fb01 3000 	mla	r0, r1, r0, r3
9001bea0:	7b03      	ldrb	r3, [r0, #12]
9001bea2:	f003 031f 	and.w	r3, r3, #31
9001bea6:	2b0b      	cmp	r3, #11
9001bea8:	d10b      	bne.n	9001bec2 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
9001beaa:	8903      	ldrh	r3, [r0, #8]
9001beac:	8940      	ldrh	r0, [r0, #10]
9001beae:	4358      	muls	r0, r3
9001beb0:	4b09      	ldr	r3, [pc, #36]	; (9001bed8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
9001beb2:	3003      	adds	r0, #3
9001beb4:	6819      	ldr	r1, [r3, #0]
9001beb6:	f020 0303 	bic.w	r3, r0, #3
9001beba:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
9001bebe:	4418      	add	r0, r3
9001bec0:	4770      	bx	lr
9001bec2:	2b0d      	cmp	r3, #13
9001bec4:	d101      	bne.n	9001beca <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
9001bec6:	300d      	adds	r0, #13
9001bec8:	4770      	bx	lr
9001beca:	2000      	movs	r0, #0
9001becc:	4770      	bx	lr
9001bece:	bf00      	nop
9001bed0:	24023754 	.word	0x24023754
9001bed4:	2402375c 	.word	0x2402375c
9001bed8:	24023738 	.word	0x24023738
9001bedc:	24023758 	.word	0x24023758
9001bee0:	2402373c 	.word	0x2402373c

9001bee4 <_ZNK8touchgfx6Bitmap9getFormatEv>:
9001bee4:	4a17      	ldr	r2, [pc, #92]	; (9001bf44 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
9001bee6:	b510      	push	{r4, lr}
9001bee8:	8803      	ldrh	r3, [r0, #0]
9001beea:	8812      	ldrh	r2, [r2, #0]
9001beec:	4293      	cmp	r3, r2
9001beee:	d20c      	bcs.n	9001bf0a <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
9001bef0:	4a15      	ldr	r2, [pc, #84]	; (9001bf48 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
9001bef2:	2114      	movs	r1, #20
9001bef4:	6812      	ldr	r2, [r2, #0]
9001bef6:	fb01 2303 	mla	r3, r1, r3, r2
9001befa:	7c58      	ldrb	r0, [r3, #17]
9001befc:	0942      	lsrs	r2, r0, #5
9001befe:	7cd8      	ldrb	r0, [r3, #19]
9001bf00:	f3c0 1042 	ubfx	r0, r0, #5, #3
9001bf04:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
9001bf08:	bd10      	pop	{r4, pc}
9001bf0a:	4910      	ldr	r1, [pc, #64]	; (9001bf4c <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
9001bf0c:	8809      	ldrh	r1, [r1, #0]
9001bf0e:	4411      	add	r1, r2
9001bf10:	428b      	cmp	r3, r1
9001bf12:	da09      	bge.n	9001bf28 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
9001bf14:	1a9b      	subs	r3, r3, r2
9001bf16:	4a0e      	ldr	r2, [pc, #56]	; (9001bf50 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
9001bf18:	210e      	movs	r1, #14
9001bf1a:	6812      	ldr	r2, [r2, #0]
9001bf1c:	fb01 2303 	mla	r3, r1, r3, r2
9001bf20:	7b18      	ldrb	r0, [r3, #12]
9001bf22:	f000 001f 	and.w	r0, r0, #31
9001bf26:	e7ef      	b.n	9001bf08 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
9001bf28:	f64f 72fe 	movw	r2, #65534	; 0xfffe
9001bf2c:	4293      	cmp	r3, r2
9001bf2e:	d106      	bne.n	9001bf3e <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
9001bf30:	f7f8 f8ec 	bl	9001410c <_ZN8touchgfx3HAL3lcdEv>
9001bf34:	6803      	ldr	r3, [r0, #0]
9001bf36:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001bf3a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001bf3c:	4718      	bx	r3
9001bf3e:	2000      	movs	r0, #0
9001bf40:	e7e2      	b.n	9001bf08 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
9001bf42:	bf00      	nop
9001bf44:	24023754 	.word	0x24023754
9001bf48:	2402375c 	.word	0x2402375c
9001bf4c:	24023758 	.word	0x24023758
9001bf50:	2402373c 	.word	0x2402373c

9001bf54 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
9001bf54:	2010      	movs	r0, #16
9001bf56:	4770      	bx	lr

9001bf58 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
9001bf58:	4b02      	ldr	r3, [pc, #8]	; (9001bf64 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
9001bf5a:	8818      	ldrh	r0, [r3, #0]
9001bf5c:	0040      	lsls	r0, r0, #1
9001bf5e:	b280      	uxth	r0, r0
9001bf60:	4770      	bx	lr
9001bf62:	bf00      	nop
9001bf64:	240236c6 	.word	0x240236c6

9001bf68 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
9001bf68:	2bff      	cmp	r3, #255	; 0xff
9001bf6a:	d050      	beq.n	9001c00e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
9001bf6c:	2a0b      	cmp	r2, #11
9001bf6e:	d04a      	beq.n	9001c006 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
9001bf70:	d80e      	bhi.n	9001bf90 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
9001bf72:	2a03      	cmp	r2, #3
9001bf74:	d03f      	beq.n	9001bff6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
9001bf76:	d804      	bhi.n	9001bf82 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
9001bf78:	2a01      	cmp	r2, #1
9001bf7a:	d03e      	beq.n	9001bffa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
9001bf7c:	d93f      	bls.n	9001bffe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
9001bf7e:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
9001bf80:	4770      	bx	lr
9001bf82:	2a09      	cmp	r2, #9
9001bf84:	d03f      	beq.n	9001c006 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
9001bf86:	d83c      	bhi.n	9001c002 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
9001bf88:	2a08      	cmp	r2, #8
9001bf8a:	d03a      	beq.n	9001c002 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
9001bf8c:	2000      	movs	r0, #0
9001bf8e:	4770      	bx	lr
9001bf90:	2a2f      	cmp	r2, #47	; 0x2f
9001bf92:	d024      	beq.n	9001bfde <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
9001bf94:	d80d      	bhi.n	9001bfb2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
9001bf96:	2a2d      	cmp	r2, #45	; 0x2d
9001bf98:	d014      	beq.n	9001bfc4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
9001bf9a:	d826      	bhi.n	9001bfea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
9001bf9c:	2a2c      	cmp	r2, #44	; 0x2c
9001bf9e:	d1f5      	bne.n	9001bf8c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001bfa0:	684b      	ldr	r3, [r1, #4]
9001bfa2:	781b      	ldrb	r3, [r3, #0]
9001bfa4:	2b01      	cmp	r3, #1
9001bfa6:	d018      	beq.n	9001bfda <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
9001bfa8:	d323      	bcc.n	9001bff2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
9001bfaa:	2b02      	cmp	r3, #2
9001bfac:	d1ee      	bne.n	9001bf8c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001bfae:	68c0      	ldr	r0, [r0, #12]
9001bfb0:	4770      	bx	lr
9001bfb2:	2a31      	cmp	r2, #49	; 0x31
9001bfb4:	d004      	beq.n	9001bfc0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
9001bfb6:	d328      	bcc.n	9001c00a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
9001bfb8:	2a32      	cmp	r2, #50	; 0x32
9001bfba:	d026      	beq.n	9001c00a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
9001bfbc:	2a33      	cmp	r2, #51	; 0x33
9001bfbe:	d1e5      	bne.n	9001bf8c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001bfc0:	6f40      	ldr	r0, [r0, #116]	; 0x74
9001bfc2:	4770      	bx	lr
9001bfc4:	684b      	ldr	r3, [r1, #4]
9001bfc6:	781b      	ldrb	r3, [r3, #0]
9001bfc8:	2b01      	cmp	r3, #1
9001bfca:	d004      	beq.n	9001bfd6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
9001bfcc:	d30b      	bcc.n	9001bfe6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001bfce:	2b02      	cmp	r3, #2
9001bfd0:	d1dc      	bne.n	9001bf8c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001bfd2:	6940      	ldr	r0, [r0, #20]
9001bfd4:	4770      	bx	lr
9001bfd6:	6a40      	ldr	r0, [r0, #36]	; 0x24
9001bfd8:	4770      	bx	lr
9001bfda:	69c0      	ldr	r0, [r0, #28]
9001bfdc:	4770      	bx	lr
9001bfde:	684b      	ldr	r3, [r1, #4]
9001bfe0:	781b      	ldrb	r3, [r3, #0]
9001bfe2:	2b00      	cmp	r3, #0
9001bfe4:	d1d2      	bne.n	9001bf8c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001bfe6:	6b40      	ldr	r0, [r0, #52]	; 0x34
9001bfe8:	4770      	bx	lr
9001bfea:	684b      	ldr	r3, [r1, #4]
9001bfec:	781b      	ldrb	r3, [r3, #0]
9001bfee:	2b00      	cmp	r3, #0
9001bff0:	d1cc      	bne.n	9001bf8c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001bff2:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
9001bff4:	4770      	bx	lr
9001bff6:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
9001bff8:	4770      	bx	lr
9001bffa:	6d40      	ldr	r0, [r0, #84]	; 0x54
9001bffc:	4770      	bx	lr
9001bffe:	6c40      	ldr	r0, [r0, #68]	; 0x44
9001c000:	4770      	bx	lr
9001c002:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
9001c004:	4770      	bx	lr
9001c006:	6e40      	ldr	r0, [r0, #100]	; 0x64
9001c008:	4770      	bx	lr
9001c00a:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
9001c00c:	4770      	bx	lr
9001c00e:	2a0b      	cmp	r2, #11
9001c010:	d049      	beq.n	9001c0a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
9001c012:	d80e      	bhi.n	9001c032 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
9001c014:	2a03      	cmp	r2, #3
9001c016:	d040      	beq.n	9001c09a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
9001c018:	d804      	bhi.n	9001c024 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
9001c01a:	2a01      	cmp	r2, #1
9001c01c:	d03f      	beq.n	9001c09e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
9001c01e:	d940      	bls.n	9001c0a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
9001c020:	6c00      	ldr	r0, [r0, #64]	; 0x40
9001c022:	4770      	bx	lr
9001c024:	2a09      	cmp	r2, #9
9001c026:	d03e      	beq.n	9001c0a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
9001c028:	d801      	bhi.n	9001c02e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
9001c02a:	2a08      	cmp	r2, #8
9001c02c:	d1ae      	bne.n	9001bf8c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001c02e:	6e00      	ldr	r0, [r0, #96]	; 0x60
9001c030:	4770      	bx	lr
9001c032:	2a2f      	cmp	r2, #47	; 0x2f
9001c034:	d024      	beq.n	9001c080 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
9001c036:	d80d      	bhi.n	9001c054 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
9001c038:	2a2d      	cmp	r2, #45	; 0x2d
9001c03a:	d014      	beq.n	9001c066 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
9001c03c:	d826      	bhi.n	9001c08c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
9001c03e:	2a2c      	cmp	r2, #44	; 0x2c
9001c040:	d1a4      	bne.n	9001bf8c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001c042:	684b      	ldr	r3, [r1, #4]
9001c044:	781b      	ldrb	r3, [r3, #0]
9001c046:	2b01      	cmp	r3, #1
9001c048:	d018      	beq.n	9001c07c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
9001c04a:	d324      	bcc.n	9001c096 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
9001c04c:	2b02      	cmp	r3, #2
9001c04e:	d19d      	bne.n	9001bf8c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001c050:	6900      	ldr	r0, [r0, #16]
9001c052:	4770      	bx	lr
9001c054:	2a31      	cmp	r2, #49	; 0x31
9001c056:	d004      	beq.n	9001c062 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
9001c058:	d327      	bcc.n	9001c0aa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
9001c05a:	2a32      	cmp	r2, #50	; 0x32
9001c05c:	d025      	beq.n	9001c0aa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
9001c05e:	2a33      	cmp	r2, #51	; 0x33
9001c060:	d194      	bne.n	9001bf8c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001c062:	6f80      	ldr	r0, [r0, #120]	; 0x78
9001c064:	4770      	bx	lr
9001c066:	684b      	ldr	r3, [r1, #4]
9001c068:	781b      	ldrb	r3, [r3, #0]
9001c06a:	2b01      	cmp	r3, #1
9001c06c:	d004      	beq.n	9001c078 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
9001c06e:	d30b      	bcc.n	9001c088 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
9001c070:	2b02      	cmp	r3, #2
9001c072:	d18b      	bne.n	9001bf8c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001c074:	6980      	ldr	r0, [r0, #24]
9001c076:	4770      	bx	lr
9001c078:	6a80      	ldr	r0, [r0, #40]	; 0x28
9001c07a:	4770      	bx	lr
9001c07c:	6a00      	ldr	r0, [r0, #32]
9001c07e:	4770      	bx	lr
9001c080:	684b      	ldr	r3, [r1, #4]
9001c082:	781b      	ldrb	r3, [r3, #0]
9001c084:	2b00      	cmp	r3, #0
9001c086:	d181      	bne.n	9001bf8c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001c088:	6b80      	ldr	r0, [r0, #56]	; 0x38
9001c08a:	4770      	bx	lr
9001c08c:	684b      	ldr	r3, [r1, #4]
9001c08e:	781b      	ldrb	r3, [r3, #0]
9001c090:	2b00      	cmp	r3, #0
9001c092:	f47f af7b 	bne.w	9001bf8c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001c096:	6b00      	ldr	r0, [r0, #48]	; 0x30
9001c098:	4770      	bx	lr
9001c09a:	6d00      	ldr	r0, [r0, #80]	; 0x50
9001c09c:	4770      	bx	lr
9001c09e:	6d80      	ldr	r0, [r0, #88]	; 0x58
9001c0a0:	4770      	bx	lr
9001c0a2:	6c80      	ldr	r0, [r0, #72]	; 0x48
9001c0a4:	4770      	bx	lr
9001c0a6:	6e80      	ldr	r0, [r0, #104]	; 0x68
9001c0a8:	4770      	bx	lr
9001c0aa:	6f00      	ldr	r0, [r0, #112]	; 0x70
9001c0ac:	4770      	bx	lr

9001c0ae <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001c0ae:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c0b2:	b087      	sub	sp, #28
9001c0b4:	9815      	ldr	r0, [sp, #84]	; 0x54
9001c0b6:	9205      	str	r2, [sp, #20]
9001c0b8:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
9001c0bc:	9101      	str	r1, [sp, #4]
9001c0be:	9202      	str	r2, [sp, #8]
9001c0c0:	6841      	ldr	r1, [r0, #4]
9001c0c2:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
9001c0c6:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
9001c0ca:	fb01 2404 	mla	r4, r1, r4, r2
9001c0ce:	6802      	ldr	r2, [r0, #0]
9001c0d0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001c0d4:	f8de 2000 	ldr.w	r2, [lr]
9001c0d8:	9203      	str	r2, [sp, #12]
9001c0da:	f8de 2004 	ldr.w	r2, [lr, #4]
9001c0de:	3204      	adds	r2, #4
9001c0e0:	9204      	str	r2, [sp, #16]
9001c0e2:	9a02      	ldr	r2, [sp, #8]
9001c0e4:	43d6      	mvns	r6, r2
9001c0e6:	b2f6      	uxtb	r6, r6
9001c0e8:	9a01      	ldr	r2, [sp, #4]
9001c0ea:	2a00      	cmp	r2, #0
9001c0ec:	dc03      	bgt.n	9001c0f6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
9001c0ee:	9a05      	ldr	r2, [sp, #20]
9001c0f0:	2a00      	cmp	r2, #0
9001c0f2:	f340 8129 	ble.w	9001c348 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
9001c0f6:	9a11      	ldr	r2, [sp, #68]	; 0x44
9001c0f8:	f9be c008 	ldrsh.w	ip, [lr, #8]
9001c0fc:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001c100:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001c102:	f9be 700c 	ldrsh.w	r7, [lr, #12]
9001c106:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001c10a:	2b00      	cmp	r3, #0
9001c10c:	dd0e      	ble.n	9001c12c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001c10e:	1408      	asrs	r0, r1, #16
9001c110:	d405      	bmi.n	9001c11e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001c112:	4560      	cmp	r0, ip
9001c114:	da03      	bge.n	9001c11e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001c116:	1410      	asrs	r0, r2, #16
9001c118:	d401      	bmi.n	9001c11e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001c11a:	42b8      	cmp	r0, r7
9001c11c:	db07      	blt.n	9001c12e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
9001c11e:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001c120:	3b01      	subs	r3, #1
9001c122:	3402      	adds	r4, #2
9001c124:	4401      	add	r1, r0
9001c126:	9814      	ldr	r0, [sp, #80]	; 0x50
9001c128:	4402      	add	r2, r0
9001c12a:	e7ee      	b.n	9001c10a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
9001c12c:	d071      	beq.n	9001c212 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001c12e:	1e58      	subs	r0, r3, #1
9001c130:	9d13      	ldr	r5, [sp, #76]	; 0x4c
9001c132:	fb05 1500 	mla	r5, r5, r0, r1
9001c136:	142d      	asrs	r5, r5, #16
9001c138:	d45f      	bmi.n	9001c1fa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
9001c13a:	4565      	cmp	r5, ip
9001c13c:	da5d      	bge.n	9001c1fa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
9001c13e:	9d14      	ldr	r5, [sp, #80]	; 0x50
9001c140:	fb05 2000 	mla	r0, r5, r0, r2
9001c144:	1400      	asrs	r0, r0, #16
9001c146:	d458      	bmi.n	9001c1fa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
9001c148:	42b8      	cmp	r0, r7
9001c14a:	da56      	bge.n	9001c1fa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
9001c14c:	4699      	mov	r9, r3
9001c14e:	46a2      	mov	sl, r4
9001c150:	f8bd b008 	ldrh.w	fp, [sp, #8]
9001c154:	f1b9 0f00 	cmp.w	r9, #0
9001c158:	dd57      	ble.n	9001c20a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
9001c15a:	ea4f 4c22 	mov.w	ip, r2, asr #16
9001c15e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001c162:	9803      	ldr	r0, [sp, #12]
9001c164:	140d      	asrs	r5, r1, #16
9001c166:	f109 39ff 	add.w	r9, r9, #4294967295
9001c16a:	fb07 000c 	mla	r0, r7, ip, r0
9001c16e:	5d40      	ldrb	r0, [r0, r5]
9001c170:	9d04      	ldr	r5, [sp, #16]
9001c172:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
9001c176:	f8ba 5000 	ldrh.w	r5, [sl]
9001c17a:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001c17e:	122f      	asrs	r7, r5, #8
9001c180:	ea4f 08e5 	mov.w	r8, r5, asr #3
9001c184:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001c188:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001c18c:	00ed      	lsls	r5, r5, #3
9001c18e:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
9001c192:	fb17 f706 	smulbb	r7, r7, r6
9001c196:	b2ed      	uxtb	r5, r5
9001c198:	fb18 f806 	smulbb	r8, r8, r6
9001c19c:	fb0c 7c0b 	mla	ip, ip, fp, r7
9001c1a0:	10c7      	asrs	r7, r0, #3
9001c1a2:	fb15 f506 	smulbb	r5, r5, r6
9001c1a6:	00c0      	lsls	r0, r0, #3
9001c1a8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001c1ac:	fa1f fc8c 	uxth.w	ip, ip
9001c1b0:	b2c0      	uxtb	r0, r0
9001c1b2:	fb07 870b 	mla	r7, r7, fp, r8
9001c1b6:	fb00 500b 	mla	r0, r0, fp, r5
9001c1ba:	f10c 0501 	add.w	r5, ip, #1
9001c1be:	b2bf      	uxth	r7, r7
9001c1c0:	b280      	uxth	r0, r0
9001c1c2:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001c1c6:	f107 0801 	add.w	r8, r7, #1
9001c1ca:	1c45      	adds	r5, r0, #1
9001c1cc:	eb08 2817 	add.w	r8, r8, r7, lsr #8
9001c1d0:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001c1d4:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001c1d8:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001c1da:	ea4f 1858 	mov.w	r8, r8, lsr #5
9001c1de:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001c1e2:	4401      	add	r1, r0
9001c1e4:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
9001c1e8:	9814      	ldr	r0, [sp, #80]	; 0x50
9001c1ea:	ea45 0c0c 	orr.w	ip, r5, ip
9001c1ee:	4402      	add	r2, r0
9001c1f0:	ea4c 0c08 	orr.w	ip, ip, r8
9001c1f4:	f82a cb02 	strh.w	ip, [sl], #2
9001c1f8:	e7ac      	b.n	9001c154 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
9001c1fa:	f04f 0800 	mov.w	r8, #0
9001c1fe:	f8bd a008 	ldrh.w	sl, [sp, #8]
9001c202:	eb03 0008 	add.w	r0, r3, r8
9001c206:	2800      	cmp	r0, #0
9001c208:	dc41      	bgt.n	9001c28e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
9001c20a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001c20e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001c212:	9b01      	ldr	r3, [sp, #4]
9001c214:	2b00      	cmp	r3, #0
9001c216:	f340 8097 	ble.w	9001c348 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
9001c21a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
9001c21e:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001c220:	ee30 0a04 	vadd.f32	s0, s0, s8
9001c224:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001c228:	eef0 6a62 	vmov.f32	s13, s5
9001c22c:	eec7 7a00 	vdiv.f32	s15, s14, s0
9001c230:	ee31 1a05 	vadd.f32	s2, s2, s10
9001c234:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001c238:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
9001c23c:	eef0 6a43 	vmov.f32	s13, s6
9001c240:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001c244:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
9001c248:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001c24c:	ee61 7a27 	vmul.f32	s15, s2, s15
9001c250:	ee77 2a62 	vsub.f32	s5, s14, s5
9001c254:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001c258:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001c25c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001c260:	ee12 2a90 	vmov	r2, s5
9001c264:	eef0 2a47 	vmov.f32	s5, s14
9001c268:	fb92 f3f3 	sdiv	r3, r2, r3
9001c26c:	ee13 2a10 	vmov	r2, s6
9001c270:	9313      	str	r3, [sp, #76]	; 0x4c
9001c272:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001c274:	eeb0 3a67 	vmov.f32	s6, s15
9001c278:	fb92 f3f3 	sdiv	r3, r2, r3
9001c27c:	9314      	str	r3, [sp, #80]	; 0x50
9001c27e:	9b01      	ldr	r3, [sp, #4]
9001c280:	9a05      	ldr	r2, [sp, #20]
9001c282:	3b01      	subs	r3, #1
9001c284:	9301      	str	r3, [sp, #4]
9001c286:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001c288:	bf08      	it	eq
9001c28a:	4613      	moveq	r3, r2
9001c28c:	e72c      	b.n	9001c0e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
9001c28e:	140f      	asrs	r7, r1, #16
9001c290:	d453      	bmi.n	9001c33a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
9001c292:	f8de 5008 	ldr.w	r5, [lr, #8]
9001c296:	42bd      	cmp	r5, r7
9001c298:	dd4f      	ble.n	9001c33a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
9001c29a:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001c29e:	d44c      	bmi.n	9001c33a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
9001c2a0:	f8de 000c 	ldr.w	r0, [lr, #12]
9001c2a4:	4560      	cmp	r0, ip
9001c2a6:	dd48      	ble.n	9001c33a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
9001c2a8:	9803      	ldr	r0, [sp, #12]
9001c2aa:	b22d      	sxth	r5, r5
9001c2ac:	fb0c 0505 	mla	r5, ip, r5, r0
9001c2b0:	5de8      	ldrb	r0, [r5, r7]
9001c2b2:	9d04      	ldr	r5, [sp, #16]
9001c2b4:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
9001c2b8:	f06f 0501 	mvn.w	r5, #1
9001c2bc:	fb05 fb08 	mul.w	fp, r5, r8
9001c2c0:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001c2c4:	f834 500b 	ldrh.w	r5, [r4, fp]
9001c2c8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001c2cc:	122f      	asrs	r7, r5, #8
9001c2ce:	ea4f 09e5 	mov.w	r9, r5, asr #3
9001c2d2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001c2d6:	00ed      	lsls	r5, r5, #3
9001c2d8:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
9001c2dc:	fb17 f706 	smulbb	r7, r7, r6
9001c2e0:	b2ed      	uxtb	r5, r5
9001c2e2:	fb19 f906 	smulbb	r9, r9, r6
9001c2e6:	fb0c 7c0a 	mla	ip, ip, sl, r7
9001c2ea:	10c7      	asrs	r7, r0, #3
9001c2ec:	fb15 f506 	smulbb	r5, r5, r6
9001c2f0:	00c0      	lsls	r0, r0, #3
9001c2f2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001c2f6:	fa1f fc8c 	uxth.w	ip, ip
9001c2fa:	b2c0      	uxtb	r0, r0
9001c2fc:	fb07 970a 	mla	r7, r7, sl, r9
9001c300:	fb00 500a 	mla	r0, r0, sl, r5
9001c304:	f10c 0501 	add.w	r5, ip, #1
9001c308:	b2bf      	uxth	r7, r7
9001c30a:	b280      	uxth	r0, r0
9001c30c:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001c310:	f107 0901 	add.w	r9, r7, #1
9001c314:	1c45      	adds	r5, r0, #1
9001c316:	eb09 2917 	add.w	r9, r9, r7, lsr #8
9001c31a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001c31e:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001c322:	ea4f 1959 	mov.w	r9, r9, lsr #5
9001c326:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001c32a:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
9001c32e:	ea45 0c0c 	orr.w	ip, r5, ip
9001c332:	ea4c 0c09 	orr.w	ip, ip, r9
9001c336:	f824 c00b 	strh.w	ip, [r4, fp]
9001c33a:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001c33c:	f108 38ff 	add.w	r8, r8, #4294967295
9001c340:	4401      	add	r1, r0
9001c342:	9814      	ldr	r0, [sp, #80]	; 0x50
9001c344:	4402      	add	r2, r0
9001c346:	e75c      	b.n	9001c202 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
9001c348:	b007      	add	sp, #28
9001c34a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001c34e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001c34e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c352:	b085      	sub	sp, #20
9001c354:	4693      	mov	fp, r2
9001c356:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001c35a:	9e13      	ldr	r6, [sp, #76]	; 0x4c
9001c35c:	9d16      	ldr	r5, [sp, #88]	; 0x58
9001c35e:	6870      	ldr	r0, [r6, #4]
9001c360:	9100      	str	r1, [sp, #0]
9001c362:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
9001c366:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
9001c36a:	fb00 2404 	mla	r4, r0, r4, r2
9001c36e:	6832      	ldr	r2, [r6, #0]
9001c370:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001c374:	682a      	ldr	r2, [r5, #0]
9001c376:	9201      	str	r2, [sp, #4]
9001c378:	686a      	ldr	r2, [r5, #4]
9001c37a:	3204      	adds	r2, #4
9001c37c:	9202      	str	r2, [sp, #8]
9001c37e:	9a00      	ldr	r2, [sp, #0]
9001c380:	2a00      	cmp	r2, #0
9001c382:	dc03      	bgt.n	9001c38c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
9001c384:	f1bb 0f00 	cmp.w	fp, #0
9001c388:	f340 80a0 	ble.w	9001c4cc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
9001c38c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001c38e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001c392:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
9001c396:	9a10      	ldr	r2, [sp, #64]	; 0x40
9001c398:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
9001c39c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001c3a0:	2b00      	cmp	r3, #0
9001c3a2:	dd0c      	ble.n	9001c3be <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001c3a4:	1406      	asrs	r6, r0, #16
9001c3a6:	d405      	bmi.n	9001c3b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001c3a8:	454e      	cmp	r6, r9
9001c3aa:	da03      	bge.n	9001c3b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001c3ac:	1416      	asrs	r6, r2, #16
9001c3ae:	d401      	bmi.n	9001c3b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001c3b0:	4546      	cmp	r6, r8
9001c3b2:	db05      	blt.n	9001c3c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001c3b4:	4470      	add	r0, lr
9001c3b6:	4462      	add	r2, ip
9001c3b8:	3b01      	subs	r3, #1
9001c3ba:	3402      	adds	r4, #2
9001c3bc:	e7f0      	b.n	9001c3a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9001c3be:	d00f      	beq.n	9001c3e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001c3c0:	1e5e      	subs	r6, r3, #1
9001c3c2:	fb0e 0706 	mla	r7, lr, r6, r0
9001c3c6:	143f      	asrs	r7, r7, #16
9001c3c8:	d541      	bpl.n	9001c44e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
9001c3ca:	eb04 0643 	add.w	r6, r4, r3, lsl #1
9001c3ce:	4698      	mov	r8, r3
9001c3d0:	9603      	str	r6, [sp, #12]
9001c3d2:	f1b8 0f00 	cmp.w	r8, #0
9001c3d6:	dc59      	bgt.n	9001c48c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001c3d8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001c3dc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001c3e0:	9b00      	ldr	r3, [sp, #0]
9001c3e2:	2b00      	cmp	r3, #0
9001c3e4:	dd72      	ble.n	9001c4cc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
9001c3e6:	ee30 0a04 	vadd.f32	s0, s0, s8
9001c3ea:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001c3ec:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001c3f0:	eeb0 6a62 	vmov.f32	s12, s5
9001c3f4:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001c3f8:	ee31 1a05 	vadd.f32	s2, s2, s10
9001c3fc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001c400:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
9001c404:	eeb0 6a43 	vmov.f32	s12, s6
9001c408:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001c40c:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
9001c410:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001c414:	ee61 7a27 	vmul.f32	s15, s2, s15
9001c418:	ee77 2a62 	vsub.f32	s5, s14, s5
9001c41c:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001c420:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001c424:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001c428:	ee12 2a90 	vmov	r2, s5
9001c42c:	eef0 2a47 	vmov.f32	s5, s14
9001c430:	fb92 fef3 	sdiv	lr, r2, r3
9001c434:	ee13 2a10 	vmov	r2, s6
9001c438:	eeb0 3a67 	vmov.f32	s6, s15
9001c43c:	fb92 fcf3 	sdiv	ip, r2, r3
9001c440:	9b00      	ldr	r3, [sp, #0]
9001c442:	3b01      	subs	r3, #1
9001c444:	9300      	str	r3, [sp, #0]
9001c446:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001c448:	bf08      	it	eq
9001c44a:	465b      	moveq	r3, fp
9001c44c:	e797      	b.n	9001c37e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
9001c44e:	454f      	cmp	r7, r9
9001c450:	dabb      	bge.n	9001c3ca <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001c452:	fb0c 2606 	mla	r6, ip, r6, r2
9001c456:	1436      	asrs	r6, r6, #16
9001c458:	d4b7      	bmi.n	9001c3ca <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001c45a:	4546      	cmp	r6, r8
9001c45c:	dab5      	bge.n	9001c3ca <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001c45e:	461e      	mov	r6, r3
9001c460:	46a0      	mov	r8, r4
9001c462:	2e00      	cmp	r6, #0
9001c464:	ddb8      	ble.n	9001c3d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
9001c466:	1417      	asrs	r7, r2, #16
9001c468:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
9001c46c:	9901      	ldr	r1, [sp, #4]
9001c46e:	ea4f 4920 	mov.w	r9, r0, asr #16
9001c472:	4462      	add	r2, ip
9001c474:	4470      	add	r0, lr
9001c476:	fb0a 1707 	mla	r7, sl, r7, r1
9001c47a:	9902      	ldr	r1, [sp, #8]
9001c47c:	3e01      	subs	r6, #1
9001c47e:	f817 7009 	ldrb.w	r7, [r7, r9]
9001c482:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
9001c486:	f828 7b02 	strh.w	r7, [r8], #2
9001c48a:	e7ea      	b.n	9001c462 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
9001c48c:	ea5f 4920 	movs.w	r9, r0, asr #16
9001c490:	d417      	bmi.n	9001c4c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
9001c492:	68ae      	ldr	r6, [r5, #8]
9001c494:	454e      	cmp	r6, r9
9001c496:	dd14      	ble.n	9001c4c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
9001c498:	ea5f 4a22 	movs.w	sl, r2, asr #16
9001c49c:	d411      	bmi.n	9001c4c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
9001c49e:	68ef      	ldr	r7, [r5, #12]
9001c4a0:	4557      	cmp	r7, sl
9001c4a2:	dd0e      	ble.n	9001c4c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
9001c4a4:	9f01      	ldr	r7, [sp, #4]
9001c4a6:	b236      	sxth	r6, r6
9001c4a8:	f06f 0101 	mvn.w	r1, #1
9001c4ac:	fb0a 7606 	mla	r6, sl, r6, r7
9001c4b0:	9f02      	ldr	r7, [sp, #8]
9001c4b2:	f816 6009 	ldrb.w	r6, [r6, r9]
9001c4b6:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
9001c4ba:	fb01 f608 	mul.w	r6, r1, r8
9001c4be:	9903      	ldr	r1, [sp, #12]
9001c4c0:	538f      	strh	r7, [r1, r6]
9001c4c2:	4470      	add	r0, lr
9001c4c4:	4462      	add	r2, ip
9001c4c6:	f108 38ff 	add.w	r8, r8, #4294967295
9001c4ca:	e782      	b.n	9001c3d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9001c4cc:	b005      	add	sp, #20
9001c4ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001c4d2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001c4d2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c4d6:	b087      	sub	sp, #28
9001c4d8:	9c15      	ldr	r4, [sp, #84]	; 0x54
9001c4da:	9205      	str	r2, [sp, #20]
9001c4dc:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
9001c4e0:	9102      	str	r1, [sp, #8]
9001c4e2:	9203      	str	r2, [sp, #12]
9001c4e4:	6861      	ldr	r1, [r4, #4]
9001c4e6:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
9001c4ea:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
9001c4ee:	fb01 2000 	mla	r0, r1, r0, r2
9001c4f2:	6822      	ldr	r2, [r4, #0]
9001c4f4:	eb02 0240 	add.w	r2, r2, r0, lsl #1
9001c4f8:	9200      	str	r2, [sp, #0]
9001c4fa:	f8dc 2000 	ldr.w	r2, [ip]
9001c4fe:	9204      	str	r2, [sp, #16]
9001c500:	f8dc 2004 	ldr.w	r2, [ip, #4]
9001c504:	3204      	adds	r2, #4
9001c506:	9201      	str	r2, [sp, #4]
9001c508:	9a03      	ldr	r2, [sp, #12]
9001c50a:	43d5      	mvns	r5, r2
9001c50c:	b2ed      	uxtb	r5, r5
9001c50e:	9a02      	ldr	r2, [sp, #8]
9001c510:	2a00      	cmp	r2, #0
9001c512:	dc03      	bgt.n	9001c51c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
9001c514:	9a05      	ldr	r2, [sp, #20]
9001c516:	2a00      	cmp	r2, #0
9001c518:	f340 812c 	ble.w	9001c774 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
9001c51c:	9a11      	ldr	r2, [sp, #68]	; 0x44
9001c51e:	f9bc e008 	ldrsh.w	lr, [ip, #8]
9001c522:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001c526:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001c528:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
9001c52c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001c530:	2b00      	cmp	r3, #0
9001c532:	dd10      	ble.n	9001c556 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9001c534:	140c      	asrs	r4, r1, #16
9001c536:	d405      	bmi.n	9001c544 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001c538:	4574      	cmp	r4, lr
9001c53a:	da03      	bge.n	9001c544 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001c53c:	1414      	asrs	r4, r2, #16
9001c53e:	d401      	bmi.n	9001c544 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001c540:	42bc      	cmp	r4, r7
9001c542:	db09      	blt.n	9001c558 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
9001c544:	9c13      	ldr	r4, [sp, #76]	; 0x4c
9001c546:	3b01      	subs	r3, #1
9001c548:	9800      	ldr	r0, [sp, #0]
9001c54a:	4421      	add	r1, r4
9001c54c:	9c14      	ldr	r4, [sp, #80]	; 0x50
9001c54e:	3002      	adds	r0, #2
9001c550:	4422      	add	r2, r4
9001c552:	9000      	str	r0, [sp, #0]
9001c554:	e7ec      	b.n	9001c530 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
9001c556:	d071      	beq.n	9001c63c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
9001c558:	1e5c      	subs	r4, r3, #1
9001c55a:	9e13      	ldr	r6, [sp, #76]	; 0x4c
9001c55c:	fb06 1604 	mla	r6, r6, r4, r1
9001c560:	1436      	asrs	r6, r6, #16
9001c562:	d45d      	bmi.n	9001c620 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001c564:	4576      	cmp	r6, lr
9001c566:	da5b      	bge.n	9001c620 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001c568:	9e14      	ldr	r6, [sp, #80]	; 0x50
9001c56a:	fb06 2404 	mla	r4, r6, r4, r2
9001c56e:	1424      	asrs	r4, r4, #16
9001c570:	d456      	bmi.n	9001c620 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001c572:	42bc      	cmp	r4, r7
9001c574:	da54      	bge.n	9001c620 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001c576:	4698      	mov	r8, r3
9001c578:	f8dd 9000 	ldr.w	r9, [sp]
9001c57c:	f8bd a00c 	ldrh.w	sl, [sp, #12]
9001c580:	f1b8 0f00 	cmp.w	r8, #0
9001c584:	dd54      	ble.n	9001c630 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
9001c586:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
9001c58a:	1414      	asrs	r4, r2, #16
9001c58c:	9804      	ldr	r0, [sp, #16]
9001c58e:	140e      	asrs	r6, r1, #16
9001c590:	f108 38ff 	add.w	r8, r8, #4294967295
9001c594:	fb07 0404 	mla	r4, r7, r4, r0
9001c598:	9801      	ldr	r0, [sp, #4]
9001c59a:	f814 e006 	ldrb.w	lr, [r4, r6]
9001c59e:	f8b9 4000 	ldrh.w	r4, [r9]
9001c5a2:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001c5a6:	1227      	asrs	r7, r4, #8
9001c5a8:	eb00 0b0e 	add.w	fp, r0, lr
9001c5ac:	f810 e00e 	ldrb.w	lr, [r0, lr]
9001c5b0:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001c5b4:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001c5b6:	f89b 6002 	ldrb.w	r6, [fp, #2]
9001c5ba:	f89b b001 	ldrb.w	fp, [fp, #1]
9001c5be:	4401      	add	r1, r0
9001c5c0:	fb16 f60a 	smulbb	r6, r6, sl
9001c5c4:	9814      	ldr	r0, [sp, #80]	; 0x50
9001c5c6:	fb1b fb0a 	smulbb	fp, fp, sl
9001c5ca:	fb07 6705 	mla	r7, r7, r5, r6
9001c5ce:	10e6      	asrs	r6, r4, #3
9001c5d0:	00e4      	lsls	r4, r4, #3
9001c5d2:	4402      	add	r2, r0
9001c5d4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001c5d8:	b2bf      	uxth	r7, r7
9001c5da:	b2e4      	uxtb	r4, r4
9001c5dc:	fb06 b605 	mla	r6, r6, r5, fp
9001c5e0:	fb14 f405 	smulbb	r4, r4, r5
9001c5e4:	b2b6      	uxth	r6, r6
9001c5e6:	fb0e 4e0a 	mla	lr, lr, sl, r4
9001c5ea:	1c7c      	adds	r4, r7, #1
9001c5ec:	f106 0b01 	add.w	fp, r6, #1
9001c5f0:	fa1f fe8e 	uxth.w	lr, lr
9001c5f4:	eb04 2717 	add.w	r7, r4, r7, lsr #8
9001c5f8:	f10e 0401 	add.w	r4, lr, #1
9001c5fc:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
9001c600:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
9001c604:	eb04 241e 	add.w	r4, r4, lr, lsr #8
9001c608:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
9001c60c:	f3c4 24c4 	ubfx	r4, r4, #11, #5
9001c610:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
9001c614:	4327      	orrs	r7, r4
9001c616:	ea47 070b 	orr.w	r7, r7, fp
9001c61a:	f829 7b02 	strh.w	r7, [r9], #2
9001c61e:	e7af      	b.n	9001c580 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
9001c620:	f04f 0e00 	mov.w	lr, #0
9001c624:	f8bd 900c 	ldrh.w	r9, [sp, #12]
9001c628:	eb03 040e 	add.w	r4, r3, lr
9001c62c:	2c00      	cmp	r4, #0
9001c62e:	dc43      	bgt.n	9001c6b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
9001c630:	9a00      	ldr	r2, [sp, #0]
9001c632:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001c636:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9001c63a:	9300      	str	r3, [sp, #0]
9001c63c:	9b02      	ldr	r3, [sp, #8]
9001c63e:	2b00      	cmp	r3, #0
9001c640:	f340 8098 	ble.w	9001c774 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
9001c644:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
9001c648:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001c64a:	ee30 0a04 	vadd.f32	s0, s0, s8
9001c64e:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001c652:	eef0 6a62 	vmov.f32	s13, s5
9001c656:	eec7 7a00 	vdiv.f32	s15, s14, s0
9001c65a:	ee31 1a05 	vadd.f32	s2, s2, s10
9001c65e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001c662:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
9001c666:	eef0 6a43 	vmov.f32	s13, s6
9001c66a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001c66e:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
9001c672:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001c676:	ee61 7a27 	vmul.f32	s15, s2, s15
9001c67a:	ee77 2a62 	vsub.f32	s5, s14, s5
9001c67e:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001c682:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001c686:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001c68a:	ee12 2a90 	vmov	r2, s5
9001c68e:	eef0 2a47 	vmov.f32	s5, s14
9001c692:	fb92 f3f3 	sdiv	r3, r2, r3
9001c696:	ee13 2a10 	vmov	r2, s6
9001c69a:	9313      	str	r3, [sp, #76]	; 0x4c
9001c69c:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001c69e:	eeb0 3a67 	vmov.f32	s6, s15
9001c6a2:	fb92 f3f3 	sdiv	r3, r2, r3
9001c6a6:	9314      	str	r3, [sp, #80]	; 0x50
9001c6a8:	9b02      	ldr	r3, [sp, #8]
9001c6aa:	9a05      	ldr	r2, [sp, #20]
9001c6ac:	3b01      	subs	r3, #1
9001c6ae:	9302      	str	r3, [sp, #8]
9001c6b0:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001c6b2:	bf08      	it	eq
9001c6b4:	4613      	moveq	r3, r2
9001c6b6:	e72a      	b.n	9001c50e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9001c6b8:	140f      	asrs	r7, r1, #16
9001c6ba:	d454      	bmi.n	9001c766 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001c6bc:	f8dc 6008 	ldr.w	r6, [ip, #8]
9001c6c0:	42be      	cmp	r6, r7
9001c6c2:	dd50      	ble.n	9001c766 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001c6c4:	ea5f 4822 	movs.w	r8, r2, asr #16
9001c6c8:	d44d      	bmi.n	9001c766 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001c6ca:	f8dc 400c 	ldr.w	r4, [ip, #12]
9001c6ce:	4544      	cmp	r4, r8
9001c6d0:	dd49      	ble.n	9001c766 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001c6d2:	9c04      	ldr	r4, [sp, #16]
9001c6d4:	b236      	sxth	r6, r6
9001c6d6:	f06f 0001 	mvn.w	r0, #1
9001c6da:	fb08 4606 	mla	r6, r8, r6, r4
9001c6de:	9c01      	ldr	r4, [sp, #4]
9001c6e0:	fb00 fa0e 	mul.w	sl, r0, lr
9001c6e4:	9800      	ldr	r0, [sp, #0]
9001c6e6:	f816 8007 	ldrb.w	r8, [r6, r7]
9001c6ea:	eb08 0848 	add.w	r8, r8, r8, lsl #1
9001c6ee:	eb04 0b08 	add.w	fp, r4, r8
9001c6f2:	f830 400a 	ldrh.w	r4, [r0, sl]
9001c6f6:	9801      	ldr	r0, [sp, #4]
9001c6f8:	f89b 6002 	ldrb.w	r6, [fp, #2]
9001c6fc:	1227      	asrs	r7, r4, #8
9001c6fe:	f89b b001 	ldrb.w	fp, [fp, #1]
9001c702:	fb16 f609 	smulbb	r6, r6, r9
9001c706:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001c70a:	f810 8008 	ldrb.w	r8, [r0, r8]
9001c70e:	fb1b fb09 	smulbb	fp, fp, r9
9001c712:	fb07 6705 	mla	r7, r7, r5, r6
9001c716:	10e6      	asrs	r6, r4, #3
9001c718:	00e4      	lsls	r4, r4, #3
9001c71a:	9800      	ldr	r0, [sp, #0]
9001c71c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001c720:	b2bf      	uxth	r7, r7
9001c722:	b2e4      	uxtb	r4, r4
9001c724:	fb06 b605 	mla	r6, r6, r5, fp
9001c728:	fb14 f405 	smulbb	r4, r4, r5
9001c72c:	b2b6      	uxth	r6, r6
9001c72e:	fb08 4809 	mla	r8, r8, r9, r4
9001c732:	1c7c      	adds	r4, r7, #1
9001c734:	f106 0b01 	add.w	fp, r6, #1
9001c738:	fa1f f888 	uxth.w	r8, r8
9001c73c:	eb04 2717 	add.w	r7, r4, r7, lsr #8
9001c740:	f108 0401 	add.w	r4, r8, #1
9001c744:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
9001c748:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
9001c74c:	eb04 2418 	add.w	r4, r4, r8, lsr #8
9001c750:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
9001c754:	f3c4 24c4 	ubfx	r4, r4, #11, #5
9001c758:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
9001c75c:	4327      	orrs	r7, r4
9001c75e:	ea47 070b 	orr.w	r7, r7, fp
9001c762:	f820 700a 	strh.w	r7, [r0, sl]
9001c766:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001c768:	f10e 3eff 	add.w	lr, lr, #4294967295
9001c76c:	4401      	add	r1, r0
9001c76e:	9814      	ldr	r0, [sp, #80]	; 0x50
9001c770:	4402      	add	r2, r0
9001c772:	e759      	b.n	9001c628 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
9001c774:	b007      	add	sp, #28
9001c776:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

9001c77c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001c77c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c780:	b085      	sub	sp, #20
9001c782:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001c786:	9e13      	ldr	r6, [sp, #76]	; 0x4c
9001c788:	9d16      	ldr	r5, [sp, #88]	; 0x58
9001c78a:	9203      	str	r2, [sp, #12]
9001c78c:	6870      	ldr	r0, [r6, #4]
9001c78e:	686f      	ldr	r7, [r5, #4]
9001c790:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
9001c794:	3704      	adds	r7, #4
9001c796:	9101      	str	r1, [sp, #4]
9001c798:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
9001c79c:	fb00 2404 	mla	r4, r0, r4, r2
9001c7a0:	6832      	ldr	r2, [r6, #0]
9001c7a2:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001c7a6:	682a      	ldr	r2, [r5, #0]
9001c7a8:	9202      	str	r2, [sp, #8]
9001c7aa:	9a01      	ldr	r2, [sp, #4]
9001c7ac:	2a00      	cmp	r2, #0
9001c7ae:	dc03      	bgt.n	9001c7b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9001c7b0:	9a03      	ldr	r2, [sp, #12]
9001c7b2:	2a00      	cmp	r2, #0
9001c7b4:	f340 80cc 	ble.w	9001c950 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
9001c7b8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001c7ba:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001c7be:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
9001c7c2:	9a10      	ldr	r2, [sp, #64]	; 0x40
9001c7c4:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
9001c7c8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001c7cc:	2b00      	cmp	r3, #0
9001c7ce:	dd0d      	ble.n	9001c7ec <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001c7d0:	1406      	asrs	r6, r0, #16
9001c7d2:	d405      	bmi.n	9001c7e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
9001c7d4:	454e      	cmp	r6, r9
9001c7d6:	da03      	bge.n	9001c7e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
9001c7d8:	1416      	asrs	r6, r2, #16
9001c7da:	d401      	bmi.n	9001c7e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
9001c7dc:	4546      	cmp	r6, r8
9001c7de:	db06      	blt.n	9001c7ee <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001c7e0:	9e12      	ldr	r6, [sp, #72]	; 0x48
9001c7e2:	4460      	add	r0, ip
9001c7e4:	3b01      	subs	r3, #1
9001c7e6:	3402      	adds	r4, #2
9001c7e8:	4432      	add	r2, r6
9001c7ea:	e7ef      	b.n	9001c7cc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
9001c7ec:	d00f      	beq.n	9001c80e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001c7ee:	1e5e      	subs	r6, r3, #1
9001c7f0:	fb0c 0e06 	mla	lr, ip, r6, r0
9001c7f4:	ea5f 4e2e 	movs.w	lr, lr, asr #16
9001c7f8:	d543      	bpl.n	9001c882 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
9001c7fa:	4698      	mov	r8, r3
9001c7fc:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
9001c800:	f1b8 0f00 	cmp.w	r8, #0
9001c804:	dc71      	bgt.n	9001c8ea <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
9001c806:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001c80a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001c80e:	9b01      	ldr	r3, [sp, #4]
9001c810:	2b00      	cmp	r3, #0
9001c812:	f340 809d 	ble.w	9001c950 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
9001c816:	ee30 0a04 	vadd.f32	s0, s0, s8
9001c81a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001c81c:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001c820:	eeb0 6a62 	vmov.f32	s12, s5
9001c824:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001c828:	ee31 1a05 	vadd.f32	s2, s2, s10
9001c82c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001c830:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
9001c834:	eeb0 6a43 	vmov.f32	s12, s6
9001c838:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001c83c:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
9001c840:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001c844:	ee61 7a27 	vmul.f32	s15, s2, s15
9001c848:	ee77 2a62 	vsub.f32	s5, s14, s5
9001c84c:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001c850:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001c854:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001c858:	ee12 2a90 	vmov	r2, s5
9001c85c:	eef0 2a47 	vmov.f32	s5, s14
9001c860:	fb92 fcf3 	sdiv	ip, r2, r3
9001c864:	ee13 2a10 	vmov	r2, s6
9001c868:	eeb0 3a67 	vmov.f32	s6, s15
9001c86c:	fb92 f3f3 	sdiv	r3, r2, r3
9001c870:	9312      	str	r3, [sp, #72]	; 0x48
9001c872:	9b01      	ldr	r3, [sp, #4]
9001c874:	9a03      	ldr	r2, [sp, #12]
9001c876:	3b01      	subs	r3, #1
9001c878:	9301      	str	r3, [sp, #4]
9001c87a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001c87c:	bf08      	it	eq
9001c87e:	4613      	moveq	r3, r2
9001c880:	e793      	b.n	9001c7aa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
9001c882:	45ce      	cmp	lr, r9
9001c884:	dab9      	bge.n	9001c7fa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001c886:	9912      	ldr	r1, [sp, #72]	; 0x48
9001c888:	fb01 2606 	mla	r6, r1, r6, r2
9001c88c:	1436      	asrs	r6, r6, #16
9001c88e:	d4b4      	bmi.n	9001c7fa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001c890:	4546      	cmp	r6, r8
9001c892:	dab2      	bge.n	9001c7fa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001c894:	4698      	mov	r8, r3
9001c896:	46a2      	mov	sl, r4
9001c898:	f1b8 0f00 	cmp.w	r8, #0
9001c89c:	ddb3      	ble.n	9001c806 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
9001c89e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001c8a2:	1416      	asrs	r6, r2, #16
9001c8a4:	9902      	ldr	r1, [sp, #8]
9001c8a6:	ea4f 4e20 	mov.w	lr, r0, asr #16
9001c8aa:	f108 38ff 	add.w	r8, r8, #4294967295
9001c8ae:	4460      	add	r0, ip
9001c8b0:	fb09 1606 	mla	r6, r9, r6, r1
9001c8b4:	4928      	ldr	r1, [pc, #160]	; (9001c958 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
9001c8b6:	f816 e00e 	ldrb.w	lr, [r6, lr]
9001c8ba:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001c8be:	eb07 0b0e 	add.w	fp, r7, lr
9001c8c2:	f89b 6001 	ldrb.w	r6, [fp, #1]
9001c8c6:	f89b 9002 	ldrb.w	r9, [fp, #2]
9001c8ca:	00f6      	lsls	r6, r6, #3
9001c8cc:	ea01 2909 	and.w	r9, r1, r9, lsl #8
9001c8d0:	9912      	ldr	r1, [sp, #72]	; 0x48
9001c8d2:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
9001c8d6:	440a      	add	r2, r1
9001c8d8:	ea49 0606 	orr.w	r6, r9, r6
9001c8dc:	f817 900e 	ldrb.w	r9, [r7, lr]
9001c8e0:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
9001c8e4:	f82a 6b02 	strh.w	r6, [sl], #2
9001c8e8:	e7d6      	b.n	9001c898 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
9001c8ea:	ea5f 4920 	movs.w	r9, r0, asr #16
9001c8ee:	d429      	bmi.n	9001c944 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001c8f0:	68ae      	ldr	r6, [r5, #8]
9001c8f2:	454e      	cmp	r6, r9
9001c8f4:	dd26      	ble.n	9001c944 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001c8f6:	ea5f 4b22 	movs.w	fp, r2, asr #16
9001c8fa:	d423      	bmi.n	9001c944 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001c8fc:	68e9      	ldr	r1, [r5, #12]
9001c8fe:	4559      	cmp	r1, fp
9001c900:	dd20      	ble.n	9001c944 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001c902:	fa0f fe86 	sxth.w	lr, r6
9001c906:	9902      	ldr	r1, [sp, #8]
9001c908:	fb0b 1e0e 	mla	lr, fp, lr, r1
9001c90c:	f06f 0101 	mvn.w	r1, #1
9001c910:	f81e e009 	ldrb.w	lr, [lr, r9]
9001c914:	fb01 f908 	mul.w	r9, r1, r8
9001c918:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
9001c91c:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001c920:	eb07 060e 	add.w	r6, r7, lr
9001c924:	f896 b002 	ldrb.w	fp, [r6, #2]
9001c928:	7876      	ldrb	r6, [r6, #1]
9001c92a:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
9001c92e:	00f6      	lsls	r6, r6, #3
9001c930:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
9001c934:	ea4b 0606 	orr.w	r6, fp, r6
9001c938:	f817 b00e 	ldrb.w	fp, [r7, lr]
9001c93c:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
9001c940:	f82a 6009 	strh.w	r6, [sl, r9]
9001c944:	9912      	ldr	r1, [sp, #72]	; 0x48
9001c946:	4460      	add	r0, ip
9001c948:	f108 38ff 	add.w	r8, r8, #4294967295
9001c94c:	440a      	add	r2, r1
9001c94e:	e757      	b.n	9001c800 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9001c950:	b005      	add	sp, #20
9001c952:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001c956:	bf00      	nop
9001c958:	fffff800 	.word	0xfffff800

9001c95c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001c95c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c960:	b087      	sub	sp, #28
9001c962:	468b      	mov	fp, r1
9001c964:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001c968:	9815      	ldr	r0, [sp, #84]	; 0x54
9001c96a:	9204      	str	r2, [sp, #16]
9001c96c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
9001c970:	6841      	ldr	r1, [r0, #4]
9001c972:	9205      	str	r2, [sp, #20]
9001c974:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
9001c978:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
9001c97c:	fb01 2404 	mla	r4, r1, r4, r2
9001c980:	6802      	ldr	r2, [r0, #0]
9001c982:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001c986:	f8dc 2000 	ldr.w	r2, [ip]
9001c98a:	9201      	str	r2, [sp, #4]
9001c98c:	f8dc 2004 	ldr.w	r2, [ip, #4]
9001c990:	3204      	adds	r2, #4
9001c992:	9202      	str	r2, [sp, #8]
9001c994:	f1bb 0f00 	cmp.w	fp, #0
9001c998:	dc03      	bgt.n	9001c9a2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
9001c99a:	9a04      	ldr	r2, [sp, #16]
9001c99c:	2a00      	cmp	r2, #0
9001c99e:	f340 8138 	ble.w	9001cc12 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
9001c9a2:	9a11      	ldr	r2, [sp, #68]	; 0x44
9001c9a4:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
9001c9a8:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
9001c9ac:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001c9ae:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
9001c9b2:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001c9b6:	2b00      	cmp	r3, #0
9001c9b8:	dd0e      	ble.n	9001c9d8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001c9ba:	1402      	asrs	r2, r0, #16
9001c9bc:	d405      	bmi.n	9001c9ca <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001c9be:	42ba      	cmp	r2, r7
9001c9c0:	da03      	bge.n	9001c9ca <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001c9c2:	140a      	asrs	r2, r1, #16
9001c9c4:	d401      	bmi.n	9001c9ca <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001c9c6:	42b2      	cmp	r2, r6
9001c9c8:	db07      	blt.n	9001c9da <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001c9ca:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001c9cc:	3b01      	subs	r3, #1
9001c9ce:	3402      	adds	r4, #2
9001c9d0:	4410      	add	r0, r2
9001c9d2:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001c9d4:	4411      	add	r1, r2
9001c9d6:	e7ee      	b.n	9001c9b6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
9001c9d8:	d019      	beq.n	9001ca0e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
9001c9da:	1e5a      	subs	r2, r3, #1
9001c9dc:	9d13      	ldr	r5, [sp, #76]	; 0x4c
9001c9de:	fb05 0502 	mla	r5, r5, r2, r0
9001c9e2:	142d      	asrs	r5, r5, #16
9001c9e4:	d409      	bmi.n	9001c9fa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001c9e6:	42bd      	cmp	r5, r7
9001c9e8:	da07      	bge.n	9001c9fa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001c9ea:	9d14      	ldr	r5, [sp, #80]	; 0x50
9001c9ec:	fb05 1202 	mla	r2, r5, r2, r1
9001c9f0:	1412      	asrs	r2, r2, #16
9001c9f2:	d402      	bmi.n	9001c9fa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001c9f4:	42b2      	cmp	r2, r6
9001c9f6:	f2c0 80ac 	blt.w	9001cb52 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
9001c9fa:	f04f 0e00 	mov.w	lr, #0
9001c9fe:	eb03 020e 	add.w	r2, r3, lr
9001ca02:	2a00      	cmp	r2, #0
9001ca04:	dc3e      	bgt.n	9001ca84 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
9001ca06:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001ca0a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001ca0e:	f1bb 0f00 	cmp.w	fp, #0
9001ca12:	f340 80fe 	ble.w	9001cc12 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
9001ca16:	ee30 0a04 	vadd.f32	s0, s0, s8
9001ca1a:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001ca1c:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001ca20:	f1bb 0b01 	subs.w	fp, fp, #1
9001ca24:	eeb0 6a62 	vmov.f32	s12, s5
9001ca28:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001ca2c:	ee31 1a05 	vadd.f32	s2, s2, s10
9001ca30:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001ca34:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
9001ca38:	eeb0 6a43 	vmov.f32	s12, s6
9001ca3c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001ca40:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
9001ca44:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001ca48:	ee61 7a27 	vmul.f32	s15, s2, s15
9001ca4c:	ee77 2a62 	vsub.f32	s5, s14, s5
9001ca50:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001ca54:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001ca58:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001ca5c:	ee12 2a90 	vmov	r2, s5
9001ca60:	eef0 2a47 	vmov.f32	s5, s14
9001ca64:	fb92 f3f3 	sdiv	r3, r2, r3
9001ca68:	ee13 2a10 	vmov	r2, s6
9001ca6c:	9313      	str	r3, [sp, #76]	; 0x4c
9001ca6e:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001ca70:	eeb0 3a67 	vmov.f32	s6, s15
9001ca74:	fb92 f3f3 	sdiv	r3, r2, r3
9001ca78:	9a04      	ldr	r2, [sp, #16]
9001ca7a:	9314      	str	r3, [sp, #80]	; 0x50
9001ca7c:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001ca7e:	bf08      	it	eq
9001ca80:	4613      	moveq	r3, r2
9001ca82:	e787      	b.n	9001c994 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
9001ca84:	1406      	asrs	r6, r0, #16
9001ca86:	d45d      	bmi.n	9001cb44 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001ca88:	f8dc 5008 	ldr.w	r5, [ip, #8]
9001ca8c:	42b5      	cmp	r5, r6
9001ca8e:	dd59      	ble.n	9001cb44 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001ca90:	140f      	asrs	r7, r1, #16
9001ca92:	d457      	bmi.n	9001cb44 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001ca94:	f8dc 200c 	ldr.w	r2, [ip, #12]
9001ca98:	42ba      	cmp	r2, r7
9001ca9a:	dd53      	ble.n	9001cb44 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001ca9c:	9a01      	ldr	r2, [sp, #4]
9001ca9e:	b22d      	sxth	r5, r5
9001caa0:	fb07 2505 	mla	r5, r7, r5, r2
9001caa4:	5daa      	ldrb	r2, [r5, r6]
9001caa6:	9d02      	ldr	r5, [sp, #8]
9001caa8:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
9001caac:	0e2e      	lsrs	r6, r5, #24
9001caae:	d049      	beq.n	9001cb44 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001cab0:	f06f 0201 	mvn.w	r2, #1
9001cab4:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001cab8:	fb02 f20e 	mul.w	r2, r2, lr
9001cabc:	f834 8002 	ldrh.w	r8, [r4, r2]
9001cac0:	9203      	str	r2, [sp, #12]
9001cac2:	9a05      	ldr	r2, [sp, #20]
9001cac4:	ea4f 2728 	mov.w	r7, r8, asr #8
9001cac8:	4356      	muls	r6, r2
9001caca:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001cace:	1c72      	adds	r2, r6, #1
9001cad0:	eb02 2226 	add.w	r2, r2, r6, asr #8
9001cad4:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001cad8:	b2ed      	uxtb	r5, r5
9001cada:	1212      	asrs	r2, r2, #8
9001cadc:	fa1f f982 	uxth.w	r9, r2
9001cae0:	43d2      	mvns	r2, r2
9001cae2:	fb16 f609 	smulbb	r6, r6, r9
9001cae6:	b2d2      	uxtb	r2, r2
9001cae8:	fb15 f509 	smulbb	r5, r5, r9
9001caec:	fb07 6702 	mla	r7, r7, r2, r6
9001caf0:	ea4f 06e8 	mov.w	r6, r8, asr #3
9001caf4:	fb1a fa09 	smulbb	sl, sl, r9
9001caf8:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001cafc:	b2bf      	uxth	r7, r7
9001cafe:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001cb02:	fa5f f888 	uxtb.w	r8, r8
9001cb06:	fb06 a602 	mla	r6, r6, r2, sl
9001cb0a:	fb08 5502 	mla	r5, r8, r2, r5
9001cb0e:	1c7a      	adds	r2, r7, #1
9001cb10:	b2b6      	uxth	r6, r6
9001cb12:	b2ad      	uxth	r5, r5
9001cb14:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001cb18:	9a03      	ldr	r2, [sp, #12]
9001cb1a:	f105 0a01 	add.w	sl, r5, #1
9001cb1e:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
9001cb22:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001cb26:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001cb2a:	ea4a 0707 	orr.w	r7, sl, r7
9001cb2e:	f106 0a01 	add.w	sl, r6, #1
9001cb32:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001cb36:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001cb3a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001cb3e:	ea47 070a 	orr.w	r7, r7, sl
9001cb42:	52a7      	strh	r7, [r4, r2]
9001cb44:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001cb46:	f10e 3eff 	add.w	lr, lr, #4294967295
9001cb4a:	4410      	add	r0, r2
9001cb4c:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001cb4e:	4411      	add	r1, r2
9001cb50:	e755      	b.n	9001c9fe <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001cb52:	f04f 0800 	mov.w	r8, #0
9001cb56:	eba3 0208 	sub.w	r2, r3, r8
9001cb5a:	2a00      	cmp	r2, #0
9001cb5c:	f77f af53 	ble.w	9001ca06 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
9001cb60:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
9001cb64:	140a      	asrs	r2, r1, #16
9001cb66:	9f01      	ldr	r7, [sp, #4]
9001cb68:	1405      	asrs	r5, r0, #16
9001cb6a:	fb06 7202 	mla	r2, r6, r2, r7
9001cb6e:	5d52      	ldrb	r2, [r2, r5]
9001cb70:	9d02      	ldr	r5, [sp, #8]
9001cb72:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
9001cb76:	0e2e      	lsrs	r6, r5, #24
9001cb78:	d044      	beq.n	9001cc04 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
9001cb7a:	9a05      	ldr	r2, [sp, #20]
9001cb7c:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001cb80:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
9001cb84:	4356      	muls	r6, r2
9001cb86:	ea4f 272e 	mov.w	r7, lr, asr #8
9001cb8a:	1c72      	adds	r2, r6, #1
9001cb8c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001cb90:	eb02 2226 	add.w	r2, r2, r6, asr #8
9001cb94:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001cb98:	b2ed      	uxtb	r5, r5
9001cb9a:	1212      	asrs	r2, r2, #8
9001cb9c:	fa1f f982 	uxth.w	r9, r2
9001cba0:	43d2      	mvns	r2, r2
9001cba2:	fb16 f609 	smulbb	r6, r6, r9
9001cba6:	b2d2      	uxtb	r2, r2
9001cba8:	fb15 f509 	smulbb	r5, r5, r9
9001cbac:	fb07 6702 	mla	r7, r7, r2, r6
9001cbb0:	ea4f 06ee 	mov.w	r6, lr, asr #3
9001cbb4:	fb1a fa09 	smulbb	sl, sl, r9
9001cbb8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001cbbc:	b2bf      	uxth	r7, r7
9001cbbe:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001cbc2:	fa5f fe8e 	uxtb.w	lr, lr
9001cbc6:	fb06 a602 	mla	r6, r6, r2, sl
9001cbca:	fb0e 5502 	mla	r5, lr, r2, r5
9001cbce:	1c7a      	adds	r2, r7, #1
9001cbd0:	b2b6      	uxth	r6, r6
9001cbd2:	b2ad      	uxth	r5, r5
9001cbd4:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001cbd8:	f105 0a01 	add.w	sl, r5, #1
9001cbdc:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
9001cbe0:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001cbe4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001cbe8:	ea4a 0707 	orr.w	r7, sl, r7
9001cbec:	f106 0a01 	add.w	sl, r6, #1
9001cbf0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001cbf4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001cbf8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001cbfc:	ea47 070a 	orr.w	r7, r7, sl
9001cc00:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
9001cc04:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001cc06:	f108 0801 	add.w	r8, r8, #1
9001cc0a:	4410      	add	r0, r2
9001cc0c:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001cc0e:	4411      	add	r1, r2
9001cc10:	e7a1      	b.n	9001cb56 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
9001cc12:	b007      	add	sp, #28
9001cc14:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001cc18 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001cc18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001cc1c:	b085      	sub	sp, #20
9001cc1e:	468b      	mov	fp, r1
9001cc20:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001cc24:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001cc26:	9203      	str	r2, [sp, #12]
9001cc28:	6841      	ldr	r1, [r0, #4]
9001cc2a:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
9001cc2e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
9001cc32:	fb01 2404 	mla	r4, r1, r4, r2
9001cc36:	6802      	ldr	r2, [r0, #0]
9001cc38:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001cc3c:	f8de 2000 	ldr.w	r2, [lr]
9001cc40:	9200      	str	r2, [sp, #0]
9001cc42:	f8de 2004 	ldr.w	r2, [lr, #4]
9001cc46:	3204      	adds	r2, #4
9001cc48:	9201      	str	r2, [sp, #4]
9001cc4a:	f1bb 0f00 	cmp.w	fp, #0
9001cc4e:	dc03      	bgt.n	9001cc58 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
9001cc50:	9a03      	ldr	r2, [sp, #12]
9001cc52:	2a00      	cmp	r2, #0
9001cc54:	f340 8153 	ble.w	9001cefe <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
9001cc58:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001cc5a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001cc5e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001cc62:	9a10      	ldr	r2, [sp, #64]	; 0x40
9001cc64:	f9be 600c 	ldrsh.w	r6, [lr, #12]
9001cc68:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001cc6c:	2b00      	cmp	r3, #0
9001cc6e:	dd0e      	ble.n	9001cc8e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001cc70:	1408      	asrs	r0, r1, #16
9001cc72:	d405      	bmi.n	9001cc80 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001cc74:	42b8      	cmp	r0, r7
9001cc76:	da03      	bge.n	9001cc80 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001cc78:	1410      	asrs	r0, r2, #16
9001cc7a:	d401      	bmi.n	9001cc80 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001cc7c:	42b0      	cmp	r0, r6
9001cc7e:	db07      	blt.n	9001cc90 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9001cc80:	9811      	ldr	r0, [sp, #68]	; 0x44
9001cc82:	3b01      	subs	r3, #1
9001cc84:	3402      	adds	r4, #2
9001cc86:	4401      	add	r1, r0
9001cc88:	9812      	ldr	r0, [sp, #72]	; 0x48
9001cc8a:	4402      	add	r2, r0
9001cc8c:	e7ee      	b.n	9001cc6c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
9001cc8e:	d017      	beq.n	9001ccc0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
9001cc90:	1e58      	subs	r0, r3, #1
9001cc92:	9d11      	ldr	r5, [sp, #68]	; 0x44
9001cc94:	fb05 1500 	mla	r5, r5, r0, r1
9001cc98:	142d      	asrs	r5, r5, #16
9001cc9a:	d409      	bmi.n	9001ccb0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001cc9c:	42bd      	cmp	r5, r7
9001cc9e:	da07      	bge.n	9001ccb0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001cca0:	9d12      	ldr	r5, [sp, #72]	; 0x48
9001cca2:	fb05 2000 	mla	r0, r5, r0, r2
9001cca6:	1400      	asrs	r0, r0, #16
9001cca8:	d402      	bmi.n	9001ccb0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001ccaa:	42b0      	cmp	r0, r6
9001ccac:	f2c0 80bc 	blt.w	9001ce28 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
9001ccb0:	2600      	movs	r6, #0
9001ccb2:	1998      	adds	r0, r3, r6
9001ccb4:	2800      	cmp	r0, #0
9001ccb6:	dc3e      	bgt.n	9001cd36 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
9001ccb8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001ccbc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001ccc0:	f1bb 0f00 	cmp.w	fp, #0
9001ccc4:	f340 811b 	ble.w	9001cefe <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
9001ccc8:	ee30 0a04 	vadd.f32	s0, s0, s8
9001cccc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001ccce:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001ccd2:	f1bb 0b01 	subs.w	fp, fp, #1
9001ccd6:	eeb0 6a62 	vmov.f32	s12, s5
9001ccda:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001ccde:	ee31 1a05 	vadd.f32	s2, s2, s10
9001cce2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001cce6:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
9001ccea:	eeb0 6a43 	vmov.f32	s12, s6
9001ccee:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001ccf2:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
9001ccf6:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001ccfa:	ee61 7a27 	vmul.f32	s15, s2, s15
9001ccfe:	ee77 2a62 	vsub.f32	s5, s14, s5
9001cd02:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001cd06:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001cd0a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001cd0e:	ee12 2a90 	vmov	r2, s5
9001cd12:	eef0 2a47 	vmov.f32	s5, s14
9001cd16:	fb92 f3f3 	sdiv	r3, r2, r3
9001cd1a:	ee13 2a10 	vmov	r2, s6
9001cd1e:	9311      	str	r3, [sp, #68]	; 0x44
9001cd20:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001cd22:	eeb0 3a67 	vmov.f32	s6, s15
9001cd26:	fb92 f3f3 	sdiv	r3, r2, r3
9001cd2a:	9a03      	ldr	r2, [sp, #12]
9001cd2c:	9312      	str	r3, [sp, #72]	; 0x48
9001cd2e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001cd30:	bf08      	it	eq
9001cd32:	4613      	moveq	r3, r2
9001cd34:	e789      	b.n	9001cc4a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
9001cd36:	140f      	asrs	r7, r1, #16
9001cd38:	d426      	bmi.n	9001cd88 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001cd3a:	f8de 5008 	ldr.w	r5, [lr, #8]
9001cd3e:	42bd      	cmp	r5, r7
9001cd40:	dd22      	ble.n	9001cd88 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001cd42:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001cd46:	d41f      	bmi.n	9001cd88 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001cd48:	f8de 000c 	ldr.w	r0, [lr, #12]
9001cd4c:	4560      	cmp	r0, ip
9001cd4e:	dd1b      	ble.n	9001cd88 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001cd50:	9800      	ldr	r0, [sp, #0]
9001cd52:	b22d      	sxth	r5, r5
9001cd54:	fb0c 0505 	mla	r5, ip, r5, r0
9001cd58:	5de8      	ldrb	r0, [r5, r7]
9001cd5a:	9d01      	ldr	r5, [sp, #4]
9001cd5c:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
9001cd60:	0e07      	lsrs	r7, r0, #24
9001cd62:	2fff      	cmp	r7, #255	; 0xff
9001cd64:	d116      	bne.n	9001cd94 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001cd66:	f06f 0501 	mvn.w	r5, #1
9001cd6a:	fb05 f706 	mul.w	r7, r5, r6
9001cd6e:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
9001cd72:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
9001cd76:	0945      	lsrs	r5, r0, #5
9001cd78:	f3c0 00c4 	ubfx	r0, r0, #3, #5
9001cd7c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001cd80:	ea4c 0505 	orr.w	r5, ip, r5
9001cd84:	4305      	orrs	r5, r0
9001cd86:	53e5      	strh	r5, [r4, r7]
9001cd88:	9811      	ldr	r0, [sp, #68]	; 0x44
9001cd8a:	3e01      	subs	r6, #1
9001cd8c:	4401      	add	r1, r0
9001cd8e:	9812      	ldr	r0, [sp, #72]	; 0x48
9001cd90:	4402      	add	r2, r0
9001cd92:	e78e      	b.n	9001ccb2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
9001cd94:	b2fd      	uxtb	r5, r7
9001cd96:	2f00      	cmp	r7, #0
9001cd98:	d0f6      	beq.n	9001cd88 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001cd9a:	f06f 0701 	mvn.w	r7, #1
9001cd9e:	fa1f f985 	uxth.w	r9, r5
9001cda2:	43ed      	mvns	r5, r5
9001cda4:	f3c0 2a07 	ubfx	sl, r0, #8, #8
9001cda8:	4377      	muls	r7, r6
9001cdaa:	fb1a fa09 	smulbb	sl, sl, r9
9001cdae:	b2ed      	uxtb	r5, r5
9001cdb0:	f834 8007 	ldrh.w	r8, [r4, r7]
9001cdb4:	9702      	str	r7, [sp, #8]
9001cdb6:	f3c0 4707 	ubfx	r7, r0, #16, #8
9001cdba:	ea4f 2c28 	mov.w	ip, r8, asr #8
9001cdbe:	fb17 f709 	smulbb	r7, r7, r9
9001cdc2:	b2c0      	uxtb	r0, r0
9001cdc4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001cdc8:	fb10 f009 	smulbb	r0, r0, r9
9001cdcc:	fb0c 7c05 	mla	ip, ip, r5, r7
9001cdd0:	ea4f 07e8 	mov.w	r7, r8, asr #3
9001cdd4:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001cdd8:	fa1f fc8c 	uxth.w	ip, ip
9001cddc:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001cde0:	fa5f f888 	uxtb.w	r8, r8
9001cde4:	fb07 a705 	mla	r7, r7, r5, sl
9001cde8:	fb08 0005 	mla	r0, r8, r5, r0
9001cdec:	f10c 0501 	add.w	r5, ip, #1
9001cdf0:	b2bf      	uxth	r7, r7
9001cdf2:	b280      	uxth	r0, r0
9001cdf4:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001cdf8:	f100 0a01 	add.w	sl, r0, #1
9001cdfc:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001ce00:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
9001ce04:	9802      	ldr	r0, [sp, #8]
9001ce06:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001ce0a:	ea4a 0c0c 	orr.w	ip, sl, ip
9001ce0e:	f107 0a01 	add.w	sl, r7, #1
9001ce12:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001ce16:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001ce1a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001ce1e:	ea4c 0c0a 	orr.w	ip, ip, sl
9001ce22:	f824 c000 	strh.w	ip, [r4, r0]
9001ce26:	e7af      	b.n	9001cd88 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001ce28:	f04f 0800 	mov.w	r8, #0
9001ce2c:	eba3 0008 	sub.w	r0, r3, r8
9001ce30:	2800      	cmp	r0, #0
9001ce32:	f77f af41 	ble.w	9001ccb8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001ce36:	f9be 6008 	ldrsh.w	r6, [lr, #8]
9001ce3a:	1410      	asrs	r0, r2, #16
9001ce3c:	9f00      	ldr	r7, [sp, #0]
9001ce3e:	140d      	asrs	r5, r1, #16
9001ce40:	fb06 7000 	mla	r0, r6, r0, r7
9001ce44:	5d40      	ldrb	r0, [r0, r5]
9001ce46:	9d01      	ldr	r5, [sp, #4]
9001ce48:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
9001ce4c:	0e2e      	lsrs	r6, r5, #24
9001ce4e:	2eff      	cmp	r6, #255	; 0xff
9001ce50:	d112      	bne.n	9001ce78 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
9001ce52:	482c      	ldr	r0, [pc, #176]	; (9001cf04 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
9001ce54:	ea00 2615 	and.w	r6, r0, r5, lsr #8
9001ce58:	0968      	lsrs	r0, r5, #5
9001ce5a:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001ce5e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9001ce62:	4330      	orrs	r0, r6
9001ce64:	4328      	orrs	r0, r5
9001ce66:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
9001ce6a:	9811      	ldr	r0, [sp, #68]	; 0x44
9001ce6c:	f108 0801 	add.w	r8, r8, #1
9001ce70:	4401      	add	r1, r0
9001ce72:	9812      	ldr	r0, [sp, #72]	; 0x48
9001ce74:	4402      	add	r2, r0
9001ce76:	e7d9      	b.n	9001ce2c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9001ce78:	b2f0      	uxtb	r0, r6
9001ce7a:	2e00      	cmp	r6, #0
9001ce7c:	d0f5      	beq.n	9001ce6a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
9001ce7e:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
9001ce82:	fa1f f980 	uxth.w	r9, r0
9001ce86:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001ce8a:	43c0      	mvns	r0, r0
9001ce8c:	ea4f 272c 	mov.w	r7, ip, asr #8
9001ce90:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001ce94:	fb16 f609 	smulbb	r6, r6, r9
9001ce98:	b2c0      	uxtb	r0, r0
9001ce9a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001ce9e:	b2ed      	uxtb	r5, r5
9001cea0:	fb1a fa09 	smulbb	sl, sl, r9
9001cea4:	fb07 6700 	mla	r7, r7, r0, r6
9001cea8:	ea4f 06ec 	mov.w	r6, ip, asr #3
9001ceac:	fb15 f509 	smulbb	r5, r5, r9
9001ceb0:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001ceb4:	b2bf      	uxth	r7, r7
9001ceb6:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001ceba:	fa5f fc8c 	uxtb.w	ip, ip
9001cebe:	fb06 a600 	mla	r6, r6, r0, sl
9001cec2:	fb0c 5500 	mla	r5, ip, r0, r5
9001cec6:	1c78      	adds	r0, r7, #1
9001cec8:	b2b6      	uxth	r6, r6
9001ceca:	b2ad      	uxth	r5, r5
9001cecc:	eb00 2717 	add.w	r7, r0, r7, lsr #8
9001ced0:	f105 0a01 	add.w	sl, r5, #1
9001ced4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
9001ced8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001cedc:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001cee0:	ea4a 0707 	orr.w	r7, sl, r7
9001cee4:	f106 0a01 	add.w	sl, r6, #1
9001cee8:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001ceec:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001cef0:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001cef4:	ea47 070a 	orr.w	r7, r7, sl
9001cef8:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
9001cefc:	e7b5      	b.n	9001ce6a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
9001cefe:	b005      	add	sp, #20
9001cf00:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001cf04:	fffff800 	.word	0xfffff800

9001cf08 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001cf08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001cf0c:	b087      	sub	sp, #28
9001cf0e:	468b      	mov	fp, r1
9001cf10:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001cf14:	9c15      	ldr	r4, [sp, #84]	; 0x54
9001cf16:	9204      	str	r2, [sp, #16]
9001cf18:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
9001cf1c:	6861      	ldr	r1, [r4, #4]
9001cf1e:	9205      	str	r2, [sp, #20]
9001cf20:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
9001cf24:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
9001cf28:	fb01 2000 	mla	r0, r1, r0, r2
9001cf2c:	6822      	ldr	r2, [r4, #0]
9001cf2e:	eb02 0040 	add.w	r0, r2, r0, lsl #1
9001cf32:	f8de 2000 	ldr.w	r2, [lr]
9001cf36:	9201      	str	r2, [sp, #4]
9001cf38:	f8de 2004 	ldr.w	r2, [lr, #4]
9001cf3c:	9202      	str	r2, [sp, #8]
9001cf3e:	f1bb 0f00 	cmp.w	fp, #0
9001cf42:	dc03      	bgt.n	9001cf4c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
9001cf44:	9a04      	ldr	r2, [sp, #16]
9001cf46:	2a00      	cmp	r2, #0
9001cf48:	f340 8142 	ble.w	9001d1d0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
9001cf4c:	9a11      	ldr	r2, [sp, #68]	; 0x44
9001cf4e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001cf52:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001cf56:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001cf58:	f9be 600c 	ldrsh.w	r6, [lr, #12]
9001cf5c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001cf60:	2b00      	cmp	r3, #0
9001cf62:	dd0e      	ble.n	9001cf82 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
9001cf64:	140c      	asrs	r4, r1, #16
9001cf66:	d405      	bmi.n	9001cf74 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001cf68:	42bc      	cmp	r4, r7
9001cf6a:	da03      	bge.n	9001cf74 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001cf6c:	1414      	asrs	r4, r2, #16
9001cf6e:	d401      	bmi.n	9001cf74 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001cf70:	42b4      	cmp	r4, r6
9001cf72:	db07      	blt.n	9001cf84 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001cf74:	9c13      	ldr	r4, [sp, #76]	; 0x4c
9001cf76:	3b01      	subs	r3, #1
9001cf78:	3002      	adds	r0, #2
9001cf7a:	4421      	add	r1, r4
9001cf7c:	9c14      	ldr	r4, [sp, #80]	; 0x50
9001cf7e:	4422      	add	r2, r4
9001cf80:	e7ee      	b.n	9001cf60 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
9001cf82:	d019      	beq.n	9001cfb8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
9001cf84:	1e5c      	subs	r4, r3, #1
9001cf86:	9d13      	ldr	r5, [sp, #76]	; 0x4c
9001cf88:	fb05 1504 	mla	r5, r5, r4, r1
9001cf8c:	142d      	asrs	r5, r5, #16
9001cf8e:	d409      	bmi.n	9001cfa4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
9001cf90:	42bd      	cmp	r5, r7
9001cf92:	da07      	bge.n	9001cfa4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
9001cf94:	9d14      	ldr	r5, [sp, #80]	; 0x50
9001cf96:	fb05 2404 	mla	r4, r5, r4, r2
9001cf9a:	1424      	asrs	r4, r4, #16
9001cf9c:	d402      	bmi.n	9001cfa4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
9001cf9e:	42b4      	cmp	r4, r6
9001cfa0:	f2c0 80b1 	blt.w	9001d106 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
9001cfa4:	f04f 0800 	mov.w	r8, #0
9001cfa8:	eb03 0408 	add.w	r4, r3, r8
9001cfac:	2c00      	cmp	r4, #0
9001cfae:	dc3e      	bgt.n	9001d02e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
9001cfb0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001cfb4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001cfb8:	f1bb 0f00 	cmp.w	fp, #0
9001cfbc:	f340 8108 	ble.w	9001d1d0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
9001cfc0:	ee30 0a04 	vadd.f32	s0, s0, s8
9001cfc4:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001cfc6:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001cfca:	f1bb 0b01 	subs.w	fp, fp, #1
9001cfce:	eeb0 6a62 	vmov.f32	s12, s5
9001cfd2:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001cfd6:	ee31 1a05 	vadd.f32	s2, s2, s10
9001cfda:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001cfde:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
9001cfe2:	eeb0 6a43 	vmov.f32	s12, s6
9001cfe6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001cfea:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
9001cfee:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001cff2:	ee61 7a27 	vmul.f32	s15, s2, s15
9001cff6:	ee77 2a62 	vsub.f32	s5, s14, s5
9001cffa:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001cffe:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001d002:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001d006:	ee12 2a90 	vmov	r2, s5
9001d00a:	eef0 2a47 	vmov.f32	s5, s14
9001d00e:	fb92 f3f3 	sdiv	r3, r2, r3
9001d012:	ee13 2a10 	vmov	r2, s6
9001d016:	9313      	str	r3, [sp, #76]	; 0x4c
9001d018:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001d01a:	eeb0 3a67 	vmov.f32	s6, s15
9001d01e:	fb92 f3f3 	sdiv	r3, r2, r3
9001d022:	9a04      	ldr	r2, [sp, #16]
9001d024:	9314      	str	r3, [sp, #80]	; 0x50
9001d026:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001d028:	bf08      	it	eq
9001d02a:	4613      	moveq	r3, r2
9001d02c:	e787      	b.n	9001cf3e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
9001d02e:	140e      	asrs	r6, r1, #16
9001d030:	d462      	bmi.n	9001d0f8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001d032:	f8de 5008 	ldr.w	r5, [lr, #8]
9001d036:	42b5      	cmp	r5, r6
9001d038:	dd5e      	ble.n	9001d0f8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001d03a:	1417      	asrs	r7, r2, #16
9001d03c:	d45c      	bmi.n	9001d0f8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001d03e:	f8de 400c 	ldr.w	r4, [lr, #12]
9001d042:	42bc      	cmp	r4, r7
9001d044:	dd58      	ble.n	9001d0f8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001d046:	b22d      	sxth	r5, r5
9001d048:	9c02      	ldr	r4, [sp, #8]
9001d04a:	fb07 6505 	mla	r5, r7, r5, r6
9001d04e:	5d66      	ldrb	r6, [r4, r5]
9001d050:	2e00      	cmp	r6, #0
9001d052:	d051      	beq.n	9001d0f8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001d054:	9c01      	ldr	r4, [sp, #4]
9001d056:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
9001d05a:	f06f 0401 	mvn.w	r4, #1
9001d05e:	fb04 f408 	mul.w	r4, r4, r8
9001d062:	ea4f 2c29 	mov.w	ip, r9, asr #8
9001d066:	5b05      	ldrh	r5, [r0, r4]
9001d068:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001d06c:	9403      	str	r4, [sp, #12]
9001d06e:	9c05      	ldr	r4, [sp, #20]
9001d070:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001d074:	4366      	muls	r6, r4
9001d076:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
9001d07a:	1c74      	adds	r4, r6, #1
9001d07c:	eb04 2416 	add.w	r4, r4, r6, lsr #8
9001d080:	122e      	asrs	r6, r5, #8
9001d082:	1224      	asrs	r4, r4, #8
9001d084:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001d088:	00ed      	lsls	r5, r5, #3
9001d08a:	b2a7      	uxth	r7, r4
9001d08c:	43e4      	mvns	r4, r4
9001d08e:	b2ed      	uxtb	r5, r5
9001d090:	b2e4      	uxtb	r4, r4
9001d092:	fb16 f604 	smulbb	r6, r6, r4
9001d096:	fb15 f504 	smulbb	r5, r5, r4
9001d09a:	fb0c 6c07 	mla	ip, ip, r7, r6
9001d09e:	ea4f 06e9 	mov.w	r6, r9, asr #3
9001d0a2:	fb1a fa04 	smulbb	sl, sl, r4
9001d0a6:	ea4f 09c9 	mov.w	r9, r9, lsl #3
9001d0aa:	fa1f fc8c 	uxth.w	ip, ip
9001d0ae:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001d0b2:	fa5f f989 	uxtb.w	r9, r9
9001d0b6:	fb06 a607 	mla	r6, r6, r7, sl
9001d0ba:	f10c 0401 	add.w	r4, ip, #1
9001d0be:	fb09 5507 	mla	r5, r9, r7, r5
9001d0c2:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
9001d0c6:	9c03      	ldr	r4, [sp, #12]
9001d0c8:	b2ad      	uxth	r5, r5
9001d0ca:	b2b6      	uxth	r6, r6
9001d0cc:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001d0d0:	f105 0a01 	add.w	sl, r5, #1
9001d0d4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001d0d8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001d0dc:	ea4a 0c0c 	orr.w	ip, sl, ip
9001d0e0:	f106 0a01 	add.w	sl, r6, #1
9001d0e4:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001d0e8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001d0ec:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001d0f0:	ea4c 0c0a 	orr.w	ip, ip, sl
9001d0f4:	f820 c004 	strh.w	ip, [r0, r4]
9001d0f8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
9001d0fa:	f108 38ff 	add.w	r8, r8, #4294967295
9001d0fe:	4421      	add	r1, r4
9001d100:	9c14      	ldr	r4, [sp, #80]	; 0x50
9001d102:	4422      	add	r2, r4
9001d104:	e750      	b.n	9001cfa8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001d106:	f04f 0900 	mov.w	r9, #0
9001d10a:	eba3 0409 	sub.w	r4, r3, r9
9001d10e:	2c00      	cmp	r4, #0
9001d110:	f77f af4e 	ble.w	9001cfb0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
9001d114:	f9be 6008 	ldrsh.w	r6, [lr, #8]
9001d118:	140d      	asrs	r5, r1, #16
9001d11a:	1414      	asrs	r4, r2, #16
9001d11c:	fb06 5404 	mla	r4, r6, r4, r5
9001d120:	9d02      	ldr	r5, [sp, #8]
9001d122:	5d2e      	ldrb	r6, [r5, r4]
9001d124:	2e00      	cmp	r6, #0
9001d126:	d04c      	beq.n	9001d1c2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
9001d128:	9d01      	ldr	r5, [sp, #4]
9001d12a:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
9001d12e:	9c05      	ldr	r4, [sp, #20]
9001d130:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
9001d134:	ea4f 2c28 	mov.w	ip, r8, asr #8
9001d138:	4366      	muls	r6, r4
9001d13a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001d13e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001d142:	1c74      	adds	r4, r6, #1
9001d144:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
9001d148:	eb04 2416 	add.w	r4, r4, r6, lsr #8
9001d14c:	122e      	asrs	r6, r5, #8
9001d14e:	1224      	asrs	r4, r4, #8
9001d150:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001d154:	00ed      	lsls	r5, r5, #3
9001d156:	b2a7      	uxth	r7, r4
9001d158:	43e4      	mvns	r4, r4
9001d15a:	b2ed      	uxtb	r5, r5
9001d15c:	b2e4      	uxtb	r4, r4
9001d15e:	fb16 f604 	smulbb	r6, r6, r4
9001d162:	fb15 f504 	smulbb	r5, r5, r4
9001d166:	fb0c 6c07 	mla	ip, ip, r7, r6
9001d16a:	ea4f 06e8 	mov.w	r6, r8, asr #3
9001d16e:	fb1a fa04 	smulbb	sl, sl, r4
9001d172:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001d176:	fa1f fc8c 	uxth.w	ip, ip
9001d17a:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001d17e:	fa5f f888 	uxtb.w	r8, r8
9001d182:	fb06 a607 	mla	r6, r6, r7, sl
9001d186:	f10c 0401 	add.w	r4, ip, #1
9001d18a:	fb08 5507 	mla	r5, r8, r7, r5
9001d18e:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
9001d192:	b2ad      	uxth	r5, r5
9001d194:	b2b6      	uxth	r6, r6
9001d196:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001d19a:	f105 0a01 	add.w	sl, r5, #1
9001d19e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001d1a2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001d1a6:	ea4a 0c0c 	orr.w	ip, sl, ip
9001d1aa:	f106 0a01 	add.w	sl, r6, #1
9001d1ae:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001d1b2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001d1b6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001d1ba:	ea4c 0c0a 	orr.w	ip, ip, sl
9001d1be:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
9001d1c2:	9c13      	ldr	r4, [sp, #76]	; 0x4c
9001d1c4:	f109 0901 	add.w	r9, r9, #1
9001d1c8:	4421      	add	r1, r4
9001d1ca:	9c14      	ldr	r4, [sp, #80]	; 0x50
9001d1cc:	4422      	add	r2, r4
9001d1ce:	e79c      	b.n	9001d10a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
9001d1d0:	b007      	add	sp, #28
9001d1d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001d1d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001d1d6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d1da:	b085      	sub	sp, #20
9001d1dc:	468b      	mov	fp, r1
9001d1de:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001d1e2:	9c13      	ldr	r4, [sp, #76]	; 0x4c
9001d1e4:	9203      	str	r2, [sp, #12]
9001d1e6:	6861      	ldr	r1, [r4, #4]
9001d1e8:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
9001d1ec:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
9001d1f0:	fb01 2000 	mla	r0, r1, r0, r2
9001d1f4:	6822      	ldr	r2, [r4, #0]
9001d1f6:	eb02 0040 	add.w	r0, r2, r0, lsl #1
9001d1fa:	f8d8 2000 	ldr.w	r2, [r8]
9001d1fe:	9200      	str	r2, [sp, #0]
9001d200:	f8d8 2004 	ldr.w	r2, [r8, #4]
9001d204:	9201      	str	r2, [sp, #4]
9001d206:	f1bb 0f00 	cmp.w	fp, #0
9001d20a:	dc03      	bgt.n	9001d214 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
9001d20c:	9a03      	ldr	r2, [sp, #12]
9001d20e:	2a00      	cmp	r2, #0
9001d210:	f340 8146 	ble.w	9001d4a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
9001d214:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001d216:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
9001d21a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001d21e:	9a10      	ldr	r2, [sp, #64]	; 0x40
9001d220:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
9001d224:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001d228:	2b00      	cmp	r3, #0
9001d22a:	dd0e      	ble.n	9001d24a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
9001d22c:	140c      	asrs	r4, r1, #16
9001d22e:	d405      	bmi.n	9001d23c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001d230:	42bc      	cmp	r4, r7
9001d232:	da03      	bge.n	9001d23c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001d234:	1414      	asrs	r4, r2, #16
9001d236:	d401      	bmi.n	9001d23c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001d238:	42b4      	cmp	r4, r6
9001d23a:	db07      	blt.n	9001d24c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001d23c:	9c11      	ldr	r4, [sp, #68]	; 0x44
9001d23e:	3b01      	subs	r3, #1
9001d240:	3002      	adds	r0, #2
9001d242:	4421      	add	r1, r4
9001d244:	9c12      	ldr	r4, [sp, #72]	; 0x48
9001d246:	4422      	add	r2, r4
9001d248:	e7ee      	b.n	9001d228 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9001d24a:	d017      	beq.n	9001d27c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
9001d24c:	1e5c      	subs	r4, r3, #1
9001d24e:	9d11      	ldr	r5, [sp, #68]	; 0x44
9001d250:	fb05 1504 	mla	r5, r5, r4, r1
9001d254:	142d      	asrs	r5, r5, #16
9001d256:	d409      	bmi.n	9001d26c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001d258:	42bd      	cmp	r5, r7
9001d25a:	da07      	bge.n	9001d26c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001d25c:	9d12      	ldr	r5, [sp, #72]	; 0x48
9001d25e:	fb05 2404 	mla	r4, r5, r4, r2
9001d262:	1424      	asrs	r4, r4, #16
9001d264:	d402      	bmi.n	9001d26c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001d266:	42b4      	cmp	r4, r6
9001d268:	f2c0 80b3 	blt.w	9001d3d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
9001d26c:	2600      	movs	r6, #0
9001d26e:	199c      	adds	r4, r3, r6
9001d270:	2c00      	cmp	r4, #0
9001d272:	dc3e      	bgt.n	9001d2f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
9001d274:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001d278:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001d27c:	f1bb 0f00 	cmp.w	fp, #0
9001d280:	f340 810e 	ble.w	9001d4a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
9001d284:	ee30 0a04 	vadd.f32	s0, s0, s8
9001d288:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001d28a:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001d28e:	f1bb 0b01 	subs.w	fp, fp, #1
9001d292:	eeb0 6a62 	vmov.f32	s12, s5
9001d296:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001d29a:	ee31 1a05 	vadd.f32	s2, s2, s10
9001d29e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001d2a2:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
9001d2a6:	eeb0 6a43 	vmov.f32	s12, s6
9001d2aa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001d2ae:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
9001d2b2:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001d2b6:	ee61 7a27 	vmul.f32	s15, s2, s15
9001d2ba:	ee77 2a62 	vsub.f32	s5, s14, s5
9001d2be:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001d2c2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001d2c6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001d2ca:	ee12 2a90 	vmov	r2, s5
9001d2ce:	eef0 2a47 	vmov.f32	s5, s14
9001d2d2:	fb92 f3f3 	sdiv	r3, r2, r3
9001d2d6:	ee13 2a10 	vmov	r2, s6
9001d2da:	9311      	str	r3, [sp, #68]	; 0x44
9001d2dc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001d2de:	eeb0 3a67 	vmov.f32	s6, s15
9001d2e2:	fb92 f3f3 	sdiv	r3, r2, r3
9001d2e6:	9a03      	ldr	r2, [sp, #12]
9001d2e8:	9312      	str	r3, [sp, #72]	; 0x48
9001d2ea:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001d2ec:	bf08      	it	eq
9001d2ee:	4613      	moveq	r3, r2
9001d2f0:	e789      	b.n	9001d206 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
9001d2f2:	140f      	asrs	r7, r1, #16
9001d2f4:	d418      	bmi.n	9001d328 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001d2f6:	f8d8 5008 	ldr.w	r5, [r8, #8]
9001d2fa:	42bd      	cmp	r5, r7
9001d2fc:	dd14      	ble.n	9001d328 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001d2fe:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001d302:	d411      	bmi.n	9001d328 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001d304:	f8d8 400c 	ldr.w	r4, [r8, #12]
9001d308:	4564      	cmp	r4, ip
9001d30a:	dd0d      	ble.n	9001d328 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001d30c:	b22d      	sxth	r5, r5
9001d30e:	9c01      	ldr	r4, [sp, #4]
9001d310:	fb0c 7505 	mla	r5, ip, r5, r7
9001d314:	5d64      	ldrb	r4, [r4, r5]
9001d316:	2cff      	cmp	r4, #255	; 0xff
9001d318:	d10c      	bne.n	9001d334 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
9001d31a:	9c00      	ldr	r4, [sp, #0]
9001d31c:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
9001d320:	f06f 0401 	mvn.w	r4, #1
9001d324:	4374      	muls	r4, r6
9001d326:	5305      	strh	r5, [r0, r4]
9001d328:	9c11      	ldr	r4, [sp, #68]	; 0x44
9001d32a:	3e01      	subs	r6, #1
9001d32c:	4421      	add	r1, r4
9001d32e:	9c12      	ldr	r4, [sp, #72]	; 0x48
9001d330:	4422      	add	r2, r4
9001d332:	e79c      	b.n	9001d26e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001d334:	2c00      	cmp	r4, #0
9001d336:	d0f7      	beq.n	9001d328 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001d338:	9f00      	ldr	r7, [sp, #0]
9001d33a:	fa1f fc84 	uxth.w	ip, r4
9001d33e:	43e4      	mvns	r4, r4
9001d340:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
9001d344:	f06f 0501 	mvn.w	r5, #1
9001d348:	b2e4      	uxtb	r4, r4
9001d34a:	4375      	muls	r5, r6
9001d34c:	ea4f 2e29 	mov.w	lr, r9, asr #8
9001d350:	9502      	str	r5, [sp, #8]
9001d352:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
9001d356:	5b45      	ldrh	r5, [r0, r5]
9001d358:	122f      	asrs	r7, r5, #8
9001d35a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001d35e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001d362:	00ed      	lsls	r5, r5, #3
9001d364:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
9001d368:	fb17 f704 	smulbb	r7, r7, r4
9001d36c:	b2ed      	uxtb	r5, r5
9001d36e:	fb1a fa04 	smulbb	sl, sl, r4
9001d372:	fb0e 7e0c 	mla	lr, lr, ip, r7
9001d376:	ea4f 07e9 	mov.w	r7, r9, asr #3
9001d37a:	fb15 f504 	smulbb	r5, r5, r4
9001d37e:	ea4f 09c9 	mov.w	r9, r9, lsl #3
9001d382:	fa1f fe8e 	uxth.w	lr, lr
9001d386:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001d38a:	fa5f f989 	uxtb.w	r9, r9
9001d38e:	fb07 a70c 	mla	r7, r7, ip, sl
9001d392:	f10e 0401 	add.w	r4, lr, #1
9001d396:	fb09 550c 	mla	r5, r9, ip, r5
9001d39a:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
9001d39e:	9c02      	ldr	r4, [sp, #8]
9001d3a0:	b2ad      	uxth	r5, r5
9001d3a2:	b2bf      	uxth	r7, r7
9001d3a4:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
9001d3a8:	f105 0a01 	add.w	sl, r5, #1
9001d3ac:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001d3b0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001d3b4:	ea4a 0e0e 	orr.w	lr, sl, lr
9001d3b8:	f107 0a01 	add.w	sl, r7, #1
9001d3bc:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001d3c0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001d3c4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001d3c8:	ea4e 0e0a 	orr.w	lr, lr, sl
9001d3cc:	f820 e004 	strh.w	lr, [r0, r4]
9001d3d0:	e7aa      	b.n	9001d328 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001d3d2:	f04f 0900 	mov.w	r9, #0
9001d3d6:	eba3 0409 	sub.w	r4, r3, r9
9001d3da:	2c00      	cmp	r4, #0
9001d3dc:	f77f af4a 	ble.w	9001d274 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001d3e0:	1414      	asrs	r4, r2, #16
9001d3e2:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
9001d3e6:	140d      	asrs	r5, r1, #16
9001d3e8:	fb06 5504 	mla	r5, r6, r4, r5
9001d3ec:	9c01      	ldr	r4, [sp, #4]
9001d3ee:	5d64      	ldrb	r4, [r4, r5]
9001d3f0:	2cff      	cmp	r4, #255	; 0xff
9001d3f2:	d10b      	bne.n	9001d40c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
9001d3f4:	9c00      	ldr	r4, [sp, #0]
9001d3f6:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
9001d3fa:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
9001d3fe:	9c11      	ldr	r4, [sp, #68]	; 0x44
9001d400:	f109 0901 	add.w	r9, r9, #1
9001d404:	4421      	add	r1, r4
9001d406:	9c12      	ldr	r4, [sp, #72]	; 0x48
9001d408:	4422      	add	r2, r4
9001d40a:	e7e4      	b.n	9001d3d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
9001d40c:	2c00      	cmp	r4, #0
9001d40e:	d0f6      	beq.n	9001d3fe <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
9001d410:	9e00      	ldr	r6, [sp, #0]
9001d412:	b2a7      	uxth	r7, r4
9001d414:	43e4      	mvns	r4, r4
9001d416:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
9001d41a:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
9001d41e:	b2e4      	uxtb	r4, r4
9001d420:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001d424:	122e      	asrs	r6, r5, #8
9001d426:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001d42a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001d42e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001d432:	00ed      	lsls	r5, r5, #3
9001d434:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
9001d438:	fb16 f604 	smulbb	r6, r6, r4
9001d43c:	b2ed      	uxtb	r5, r5
9001d43e:	fb1a fa04 	smulbb	sl, sl, r4
9001d442:	fb0c 6c07 	mla	ip, ip, r7, r6
9001d446:	ea4f 06ee 	mov.w	r6, lr, asr #3
9001d44a:	fb15 f504 	smulbb	r5, r5, r4
9001d44e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001d452:	fa1f fc8c 	uxth.w	ip, ip
9001d456:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001d45a:	fa5f fe8e 	uxtb.w	lr, lr
9001d45e:	fb06 a607 	mla	r6, r6, r7, sl
9001d462:	f10c 0401 	add.w	r4, ip, #1
9001d466:	fb0e 5507 	mla	r5, lr, r7, r5
9001d46a:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
9001d46e:	b2ad      	uxth	r5, r5
9001d470:	b2b6      	uxth	r6, r6
9001d472:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001d476:	f105 0a01 	add.w	sl, r5, #1
9001d47a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001d47e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001d482:	ea4a 0c0c 	orr.w	ip, sl, ip
9001d486:	f106 0a01 	add.w	sl, r6, #1
9001d48a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001d48e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001d492:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001d496:	ea4c 0c0a 	orr.w	ip, ip, sl
9001d49a:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
9001d49e:	e7ae      	b.n	9001d3fe <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
9001d4a0:	b005      	add	sp, #20
9001d4a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001d4a6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001d4a6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d4aa:	b085      	sub	sp, #20
9001d4ac:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001d4ae:	9203      	str	r2, [sp, #12]
9001d4b0:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
9001d4b4:	9100      	str	r1, [sp, #0]
9001d4b6:	9201      	str	r2, [sp, #4]
9001d4b8:	6841      	ldr	r1, [r0, #4]
9001d4ba:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
9001d4be:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
9001d4c2:	fb01 2404 	mla	r4, r1, r4, r2
9001d4c6:	6802      	ldr	r2, [r0, #0]
9001d4c8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001d4cc:	f8de 2000 	ldr.w	r2, [lr]
9001d4d0:	9202      	str	r2, [sp, #8]
9001d4d2:	9a01      	ldr	r2, [sp, #4]
9001d4d4:	43d6      	mvns	r6, r2
9001d4d6:	b2f6      	uxtb	r6, r6
9001d4d8:	9a00      	ldr	r2, [sp, #0]
9001d4da:	2a00      	cmp	r2, #0
9001d4dc:	dc03      	bgt.n	9001d4e6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
9001d4de:	9a03      	ldr	r2, [sp, #12]
9001d4e0:	2a00      	cmp	r2, #0
9001d4e2:	f340 8124 	ble.w	9001d72e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
9001d4e6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001d4e8:	f9be c008 	ldrsh.w	ip, [lr, #8]
9001d4ec:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001d4f0:	9a10      	ldr	r2, [sp, #64]	; 0x40
9001d4f2:	f9be 700c 	ldrsh.w	r7, [lr, #12]
9001d4f6:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001d4fa:	2b00      	cmp	r3, #0
9001d4fc:	dd0e      	ble.n	9001d51c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001d4fe:	1408      	asrs	r0, r1, #16
9001d500:	d405      	bmi.n	9001d50e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001d502:	4560      	cmp	r0, ip
9001d504:	da03      	bge.n	9001d50e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001d506:	1410      	asrs	r0, r2, #16
9001d508:	d401      	bmi.n	9001d50e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001d50a:	42b8      	cmp	r0, r7
9001d50c:	db07      	blt.n	9001d51e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9001d50e:	9811      	ldr	r0, [sp, #68]	; 0x44
9001d510:	3b01      	subs	r3, #1
9001d512:	3402      	adds	r4, #2
9001d514:	4401      	add	r1, r0
9001d516:	9812      	ldr	r0, [sp, #72]	; 0x48
9001d518:	4402      	add	r2, r0
9001d51a:	e7ee      	b.n	9001d4fa <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
9001d51c:	d06e      	beq.n	9001d5fc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
9001d51e:	1e58      	subs	r0, r3, #1
9001d520:	9d11      	ldr	r5, [sp, #68]	; 0x44
9001d522:	fb05 1500 	mla	r5, r5, r0, r1
9001d526:	142d      	asrs	r5, r5, #16
9001d528:	d45c      	bmi.n	9001d5e4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001d52a:	4565      	cmp	r5, ip
9001d52c:	da5a      	bge.n	9001d5e4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001d52e:	9d12      	ldr	r5, [sp, #72]	; 0x48
9001d530:	fb05 2000 	mla	r0, r5, r0, r2
9001d534:	1400      	asrs	r0, r0, #16
9001d536:	d455      	bmi.n	9001d5e4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001d538:	42b8      	cmp	r0, r7
9001d53a:	da53      	bge.n	9001d5e4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001d53c:	4699      	mov	r9, r3
9001d53e:	46a2      	mov	sl, r4
9001d540:	f8bd b004 	ldrh.w	fp, [sp, #4]
9001d544:	f1b9 0f00 	cmp.w	r9, #0
9001d548:	dd54      	ble.n	9001d5f4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001d54a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001d54e:	140d      	asrs	r5, r1, #16
9001d550:	1410      	asrs	r0, r2, #16
9001d552:	f109 39ff 	add.w	r9, r9, #4294967295
9001d556:	fb07 5000 	mla	r0, r7, r0, r5
9001d55a:	9d02      	ldr	r5, [sp, #8]
9001d55c:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
9001d560:	f8ba 5000 	ldrh.w	r5, [sl]
9001d564:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001d568:	122f      	asrs	r7, r5, #8
9001d56a:	ea4f 08e5 	mov.w	r8, r5, asr #3
9001d56e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001d572:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001d576:	00ed      	lsls	r5, r5, #3
9001d578:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
9001d57c:	fb17 f706 	smulbb	r7, r7, r6
9001d580:	b2ed      	uxtb	r5, r5
9001d582:	fb18 f806 	smulbb	r8, r8, r6
9001d586:	fb0c 7c0b 	mla	ip, ip, fp, r7
9001d58a:	10c7      	asrs	r7, r0, #3
9001d58c:	fb15 f506 	smulbb	r5, r5, r6
9001d590:	00c0      	lsls	r0, r0, #3
9001d592:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001d596:	fa1f fc8c 	uxth.w	ip, ip
9001d59a:	b2c0      	uxtb	r0, r0
9001d59c:	fb07 870b 	mla	r7, r7, fp, r8
9001d5a0:	fb00 500b 	mla	r0, r0, fp, r5
9001d5a4:	f10c 0501 	add.w	r5, ip, #1
9001d5a8:	b2bf      	uxth	r7, r7
9001d5aa:	b280      	uxth	r0, r0
9001d5ac:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001d5b0:	f107 0801 	add.w	r8, r7, #1
9001d5b4:	1c45      	adds	r5, r0, #1
9001d5b6:	eb08 2817 	add.w	r8, r8, r7, lsr #8
9001d5ba:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001d5be:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001d5c2:	9811      	ldr	r0, [sp, #68]	; 0x44
9001d5c4:	ea4f 1858 	mov.w	r8, r8, lsr #5
9001d5c8:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001d5cc:	4401      	add	r1, r0
9001d5ce:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
9001d5d2:	9812      	ldr	r0, [sp, #72]	; 0x48
9001d5d4:	ea45 0c0c 	orr.w	ip, r5, ip
9001d5d8:	4402      	add	r2, r0
9001d5da:	ea4c 0c08 	orr.w	ip, ip, r8
9001d5de:	f82a cb02 	strh.w	ip, [sl], #2
9001d5e2:	e7af      	b.n	9001d544 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001d5e4:	f04f 0800 	mov.w	r8, #0
9001d5e8:	f8bd a004 	ldrh.w	sl, [sp, #4]
9001d5ec:	eb03 0008 	add.w	r0, r3, r8
9001d5f0:	2800      	cmp	r0, #0
9001d5f2:	dc41      	bgt.n	9001d678 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
9001d5f4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001d5f8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001d5fc:	9b00      	ldr	r3, [sp, #0]
9001d5fe:	2b00      	cmp	r3, #0
9001d600:	f340 8095 	ble.w	9001d72e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
9001d604:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
9001d608:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001d60a:	ee30 0a04 	vadd.f32	s0, s0, s8
9001d60e:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001d612:	eef0 6a62 	vmov.f32	s13, s5
9001d616:	eec7 7a00 	vdiv.f32	s15, s14, s0
9001d61a:	ee31 1a05 	vadd.f32	s2, s2, s10
9001d61e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001d622:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
9001d626:	eef0 6a43 	vmov.f32	s13, s6
9001d62a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001d62e:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
9001d632:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001d636:	ee61 7a27 	vmul.f32	s15, s2, s15
9001d63a:	ee77 2a62 	vsub.f32	s5, s14, s5
9001d63e:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001d642:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001d646:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001d64a:	ee12 2a90 	vmov	r2, s5
9001d64e:	eef0 2a47 	vmov.f32	s5, s14
9001d652:	fb92 f3f3 	sdiv	r3, r2, r3
9001d656:	ee13 2a10 	vmov	r2, s6
9001d65a:	9311      	str	r3, [sp, #68]	; 0x44
9001d65c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001d65e:	eeb0 3a67 	vmov.f32	s6, s15
9001d662:	fb92 f3f3 	sdiv	r3, r2, r3
9001d666:	9312      	str	r3, [sp, #72]	; 0x48
9001d668:	9b00      	ldr	r3, [sp, #0]
9001d66a:	9a03      	ldr	r2, [sp, #12]
9001d66c:	3b01      	subs	r3, #1
9001d66e:	9300      	str	r3, [sp, #0]
9001d670:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001d672:	bf08      	it	eq
9001d674:	4613      	moveq	r3, r2
9001d676:	e72f      	b.n	9001d4d8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
9001d678:	140f      	asrs	r7, r1, #16
9001d67a:	d451      	bmi.n	9001d720 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001d67c:	f8de 5008 	ldr.w	r5, [lr, #8]
9001d680:	42bd      	cmp	r5, r7
9001d682:	dd4d      	ble.n	9001d720 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001d684:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001d688:	d44a      	bmi.n	9001d720 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001d68a:	f8de 000c 	ldr.w	r0, [lr, #12]
9001d68e:	4560      	cmp	r0, ip
9001d690:	dd46      	ble.n	9001d720 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001d692:	b22d      	sxth	r5, r5
9001d694:	9802      	ldr	r0, [sp, #8]
9001d696:	fb0c 7505 	mla	r5, ip, r5, r7
9001d69a:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
9001d69e:	f06f 0501 	mvn.w	r5, #1
9001d6a2:	fb05 fb08 	mul.w	fp, r5, r8
9001d6a6:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001d6aa:	f834 500b 	ldrh.w	r5, [r4, fp]
9001d6ae:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001d6b2:	122f      	asrs	r7, r5, #8
9001d6b4:	ea4f 09e5 	mov.w	r9, r5, asr #3
9001d6b8:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001d6bc:	00ed      	lsls	r5, r5, #3
9001d6be:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
9001d6c2:	fb17 f706 	smulbb	r7, r7, r6
9001d6c6:	b2ed      	uxtb	r5, r5
9001d6c8:	fb19 f906 	smulbb	r9, r9, r6
9001d6cc:	fb0c 7c0a 	mla	ip, ip, sl, r7
9001d6d0:	10c7      	asrs	r7, r0, #3
9001d6d2:	fb15 f506 	smulbb	r5, r5, r6
9001d6d6:	00c0      	lsls	r0, r0, #3
9001d6d8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001d6dc:	fa1f fc8c 	uxth.w	ip, ip
9001d6e0:	b2c0      	uxtb	r0, r0
9001d6e2:	fb07 970a 	mla	r7, r7, sl, r9
9001d6e6:	fb00 500a 	mla	r0, r0, sl, r5
9001d6ea:	f10c 0501 	add.w	r5, ip, #1
9001d6ee:	b2bf      	uxth	r7, r7
9001d6f0:	b280      	uxth	r0, r0
9001d6f2:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001d6f6:	f107 0901 	add.w	r9, r7, #1
9001d6fa:	1c45      	adds	r5, r0, #1
9001d6fc:	eb09 2917 	add.w	r9, r9, r7, lsr #8
9001d700:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001d704:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001d708:	ea4f 1959 	mov.w	r9, r9, lsr #5
9001d70c:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001d710:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
9001d714:	ea45 0c0c 	orr.w	ip, r5, ip
9001d718:	ea4c 0c09 	orr.w	ip, ip, r9
9001d71c:	f824 c00b 	strh.w	ip, [r4, fp]
9001d720:	9811      	ldr	r0, [sp, #68]	; 0x44
9001d722:	f108 38ff 	add.w	r8, r8, #4294967295
9001d726:	4401      	add	r1, r0
9001d728:	9812      	ldr	r0, [sp, #72]	; 0x48
9001d72a:	4402      	add	r2, r0
9001d72c:	e75e      	b.n	9001d5ec <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
9001d72e:	b005      	add	sp, #20
9001d730:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001d734 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001d734:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d738:	b085      	sub	sp, #20
9001d73a:	4693      	mov	fp, r2
9001d73c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001d740:	9e13      	ldr	r6, [sp, #76]	; 0x4c
9001d742:	9d16      	ldr	r5, [sp, #88]	; 0x58
9001d744:	6870      	ldr	r0, [r6, #4]
9001d746:	9101      	str	r1, [sp, #4]
9001d748:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
9001d74c:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
9001d750:	fb00 2404 	mla	r4, r0, r4, r2
9001d754:	6832      	ldr	r2, [r6, #0]
9001d756:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001d75a:	682a      	ldr	r2, [r5, #0]
9001d75c:	9202      	str	r2, [sp, #8]
9001d75e:	9a01      	ldr	r2, [sp, #4]
9001d760:	2a00      	cmp	r2, #0
9001d762:	dc03      	bgt.n	9001d76c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
9001d764:	f1bb 0f00 	cmp.w	fp, #0
9001d768:	f340 809a 	ble.w	9001d8a0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
9001d76c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001d76e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001d772:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
9001d776:	9a10      	ldr	r2, [sp, #64]	; 0x40
9001d778:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
9001d77c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001d780:	2b00      	cmp	r3, #0
9001d782:	dd0c      	ble.n	9001d79e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
9001d784:	1406      	asrs	r6, r0, #16
9001d786:	d405      	bmi.n	9001d794 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001d788:	454e      	cmp	r6, r9
9001d78a:	da03      	bge.n	9001d794 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001d78c:	1416      	asrs	r6, r2, #16
9001d78e:	d401      	bmi.n	9001d794 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001d790:	4546      	cmp	r6, r8
9001d792:	db05      	blt.n	9001d7a0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001d794:	4470      	add	r0, lr
9001d796:	4462      	add	r2, ip
9001d798:	3b01      	subs	r3, #1
9001d79a:	3402      	adds	r4, #2
9001d79c:	e7f0      	b.n	9001d780 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
9001d79e:	d00f      	beq.n	9001d7c0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
9001d7a0:	1e5e      	subs	r6, r3, #1
9001d7a2:	fb0e 0706 	mla	r7, lr, r6, r0
9001d7a6:	143f      	asrs	r7, r7, #16
9001d7a8:	d541      	bpl.n	9001d82e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
9001d7aa:	eb04 0643 	add.w	r6, r4, r3, lsl #1
9001d7ae:	4698      	mov	r8, r3
9001d7b0:	9603      	str	r6, [sp, #12]
9001d7b2:	f1b8 0f00 	cmp.w	r8, #0
9001d7b6:	dc56      	bgt.n	9001d866 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
9001d7b8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001d7bc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001d7c0:	9b01      	ldr	r3, [sp, #4]
9001d7c2:	2b00      	cmp	r3, #0
9001d7c4:	dd6c      	ble.n	9001d8a0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
9001d7c6:	ee30 0a04 	vadd.f32	s0, s0, s8
9001d7ca:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001d7cc:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001d7d0:	eeb0 6a62 	vmov.f32	s12, s5
9001d7d4:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001d7d8:	ee31 1a05 	vadd.f32	s2, s2, s10
9001d7dc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001d7e0:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
9001d7e4:	eeb0 6a43 	vmov.f32	s12, s6
9001d7e8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001d7ec:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
9001d7f0:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001d7f4:	ee61 7a27 	vmul.f32	s15, s2, s15
9001d7f8:	ee77 2a62 	vsub.f32	s5, s14, s5
9001d7fc:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001d800:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001d804:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001d808:	ee12 2a90 	vmov	r2, s5
9001d80c:	eef0 2a47 	vmov.f32	s5, s14
9001d810:	fb92 fef3 	sdiv	lr, r2, r3
9001d814:	ee13 2a10 	vmov	r2, s6
9001d818:	eeb0 3a67 	vmov.f32	s6, s15
9001d81c:	fb92 fcf3 	sdiv	ip, r2, r3
9001d820:	9b01      	ldr	r3, [sp, #4]
9001d822:	3b01      	subs	r3, #1
9001d824:	9301      	str	r3, [sp, #4]
9001d826:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001d828:	bf08      	it	eq
9001d82a:	465b      	moveq	r3, fp
9001d82c:	e797      	b.n	9001d75e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
9001d82e:	454f      	cmp	r7, r9
9001d830:	dabb      	bge.n	9001d7aa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001d832:	fb0c 2606 	mla	r6, ip, r6, r2
9001d836:	1436      	asrs	r6, r6, #16
9001d838:	d4b7      	bmi.n	9001d7aa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001d83a:	4546      	cmp	r6, r8
9001d83c:	dab5      	bge.n	9001d7aa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001d83e:	461e      	mov	r6, r3
9001d840:	46a0      	mov	r8, r4
9001d842:	2e00      	cmp	r6, #0
9001d844:	ddb8      	ble.n	9001d7b8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9001d846:	1417      	asrs	r7, r2, #16
9001d848:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
9001d84c:	ea4f 4920 	mov.w	r9, r0, asr #16
9001d850:	9902      	ldr	r1, [sp, #8]
9001d852:	4470      	add	r0, lr
9001d854:	4462      	add	r2, ip
9001d856:	fb0a 9707 	mla	r7, sl, r7, r9
9001d85a:	3e01      	subs	r6, #1
9001d85c:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
9001d860:	f828 7b02 	strh.w	r7, [r8], #2
9001d864:	e7ed      	b.n	9001d842 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
9001d866:	ea5f 4920 	movs.w	r9, r0, asr #16
9001d86a:	d414      	bmi.n	9001d896 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001d86c:	68ae      	ldr	r6, [r5, #8]
9001d86e:	454e      	cmp	r6, r9
9001d870:	dd11      	ble.n	9001d896 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001d872:	ea5f 4a22 	movs.w	sl, r2, asr #16
9001d876:	d40e      	bmi.n	9001d896 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001d878:	68ef      	ldr	r7, [r5, #12]
9001d87a:	4557      	cmp	r7, sl
9001d87c:	dd0b      	ble.n	9001d896 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001d87e:	b236      	sxth	r6, r6
9001d880:	f06f 0101 	mvn.w	r1, #1
9001d884:	9f02      	ldr	r7, [sp, #8]
9001d886:	fb0a 9606 	mla	r6, sl, r6, r9
9001d88a:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
9001d88e:	fb01 f608 	mul.w	r6, r1, r8
9001d892:	9903      	ldr	r1, [sp, #12]
9001d894:	538f      	strh	r7, [r1, r6]
9001d896:	4470      	add	r0, lr
9001d898:	4462      	add	r2, ip
9001d89a:	f108 38ff 	add.w	r8, r8, #4294967295
9001d89e:	e788      	b.n	9001d7b2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001d8a0:	b005      	add	sp, #20
9001d8a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001d8a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001d8a6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d8aa:	b087      	sub	sp, #28
9001d8ac:	468b      	mov	fp, r1
9001d8ae:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001d8b2:	9815      	ldr	r0, [sp, #84]	; 0x54
9001d8b4:	9203      	str	r2, [sp, #12]
9001d8b6:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
9001d8ba:	6841      	ldr	r1, [r0, #4]
9001d8bc:	9204      	str	r2, [sp, #16]
9001d8be:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
9001d8c2:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
9001d8c6:	fb01 2505 	mla	r5, r1, r5, r2
9001d8ca:	6802      	ldr	r2, [r0, #0]
9001d8cc:	eb02 0545 	add.w	r5, r2, r5, lsl #1
9001d8d0:	f8d9 2000 	ldr.w	r2, [r9]
9001d8d4:	9201      	str	r2, [sp, #4]
9001d8d6:	f1bb 0f00 	cmp.w	fp, #0
9001d8da:	dc03      	bgt.n	9001d8e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
9001d8dc:	9a03      	ldr	r2, [sp, #12]
9001d8de:	2a00      	cmp	r2, #0
9001d8e0:	f340 8158 	ble.w	9001db94 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
9001d8e4:	9a11      	ldr	r2, [sp, #68]	; 0x44
9001d8e6:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
9001d8ea:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
9001d8ee:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001d8f0:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
9001d8f4:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001d8f8:	2b00      	cmp	r3, #0
9001d8fa:	dd0e      	ble.n	9001d91a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
9001d8fc:	1402      	asrs	r2, r0, #16
9001d8fe:	d405      	bmi.n	9001d90c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001d900:	42ba      	cmp	r2, r7
9001d902:	da03      	bge.n	9001d90c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001d904:	140a      	asrs	r2, r1, #16
9001d906:	d401      	bmi.n	9001d90c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001d908:	42b2      	cmp	r2, r6
9001d90a:	db07      	blt.n	9001d91c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001d90c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001d90e:	3b01      	subs	r3, #1
9001d910:	3502      	adds	r5, #2
9001d912:	4410      	add	r0, r2
9001d914:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001d916:	4411      	add	r1, r2
9001d918:	e7ee      	b.n	9001d8f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9001d91a:	d017      	beq.n	9001d94c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
9001d91c:	1e5a      	subs	r2, r3, #1
9001d91e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
9001d920:	fb04 0402 	mla	r4, r4, r2, r0
9001d924:	1424      	asrs	r4, r4, #16
9001d926:	d409      	bmi.n	9001d93c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001d928:	42bc      	cmp	r4, r7
9001d92a:	da07      	bge.n	9001d93c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001d92c:	9c14      	ldr	r4, [sp, #80]	; 0x50
9001d92e:	fb04 1202 	mla	r2, r4, r2, r1
9001d932:	1412      	asrs	r2, r2, #16
9001d934:	d402      	bmi.n	9001d93c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001d936:	42b2      	cmp	r2, r6
9001d938:	f2c0 80bf 	blt.w	9001daba <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9001d93c:	2700      	movs	r7, #0
9001d93e:	19da      	adds	r2, r3, r7
9001d940:	2a00      	cmp	r2, #0
9001d942:	dc3e      	bgt.n	9001d9c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
9001d944:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001d948:	eb05 0543 	add.w	r5, r5, r3, lsl #1
9001d94c:	f1bb 0f00 	cmp.w	fp, #0
9001d950:	f340 8120 	ble.w	9001db94 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
9001d954:	ee30 0a04 	vadd.f32	s0, s0, s8
9001d958:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001d95a:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001d95e:	f1bb 0b01 	subs.w	fp, fp, #1
9001d962:	eeb0 6a62 	vmov.f32	s12, s5
9001d966:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001d96a:	ee31 1a05 	vadd.f32	s2, s2, s10
9001d96e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001d972:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
9001d976:	eeb0 6a43 	vmov.f32	s12, s6
9001d97a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001d97e:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
9001d982:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001d986:	ee61 7a27 	vmul.f32	s15, s2, s15
9001d98a:	ee77 2a62 	vsub.f32	s5, s14, s5
9001d98e:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001d992:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001d996:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001d99a:	ee12 2a90 	vmov	r2, s5
9001d99e:	eef0 2a47 	vmov.f32	s5, s14
9001d9a2:	fb92 f3f3 	sdiv	r3, r2, r3
9001d9a6:	ee13 2a10 	vmov	r2, s6
9001d9aa:	9313      	str	r3, [sp, #76]	; 0x4c
9001d9ac:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001d9ae:	eeb0 3a67 	vmov.f32	s6, s15
9001d9b2:	fb92 f3f3 	sdiv	r3, r2, r3
9001d9b6:	9a03      	ldr	r2, [sp, #12]
9001d9b8:	9314      	str	r3, [sp, #80]	; 0x50
9001d9ba:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001d9bc:	bf08      	it	eq
9001d9be:	4613      	moveq	r3, r2
9001d9c0:	e789      	b.n	9001d8d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
9001d9c2:	1406      	asrs	r6, r0, #16
9001d9c4:	d42d      	bmi.n	9001da22 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001d9c6:	f8d9 4008 	ldr.w	r4, [r9, #8]
9001d9ca:	42b4      	cmp	r4, r6
9001d9cc:	dd29      	ble.n	9001da22 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001d9ce:	ea5f 4c21 	movs.w	ip, r1, asr #16
9001d9d2:	d426      	bmi.n	9001da22 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001d9d4:	f8d9 200c 	ldr.w	r2, [r9, #12]
9001d9d8:	4562      	cmp	r2, ip
9001d9da:	dd22      	ble.n	9001da22 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001d9dc:	b224      	sxth	r4, r4
9001d9de:	9a01      	ldr	r2, [sp, #4]
9001d9e0:	fb0c 6404 	mla	r4, ip, r4, r6
9001d9e4:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
9001d9e8:	0e22      	lsrs	r2, r4, #24
9001d9ea:	d01a      	beq.n	9001da22 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001d9ec:	9e04      	ldr	r6, [sp, #16]
9001d9ee:	4372      	muls	r2, r6
9001d9f0:	1c56      	adds	r6, r2, #1
9001d9f2:	eb06 2222 	add.w	r2, r6, r2, asr #8
9001d9f6:	0a26      	lsrs	r6, r4, #8
9001d9f8:	1212      	asrs	r2, r2, #8
9001d9fa:	9605      	str	r6, [sp, #20]
9001d9fc:	2aff      	cmp	r2, #255	; 0xff
9001d9fe:	d116      	bne.n	9001da2e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
9001da00:	f06f 0201 	mvn.w	r2, #1
9001da04:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
9001da08:	fb02 fc07 	mul.w	ip, r2, r7
9001da0c:	0962      	lsrs	r2, r4, #5
9001da0e:	f026 0607 	bic.w	r6, r6, #7
9001da12:	f3c4 04c4 	ubfx	r4, r4, #3, #5
9001da16:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001da1a:	4316      	orrs	r6, r2
9001da1c:	4326      	orrs	r6, r4
9001da1e:	f825 600c 	strh.w	r6, [r5, ip]
9001da22:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001da24:	3f01      	subs	r7, #1
9001da26:	4410      	add	r0, r2
9001da28:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001da2a:	4411      	add	r1, r2
9001da2c:	e787      	b.n	9001d93e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001da2e:	f06f 0601 	mvn.w	r6, #1
9001da32:	fa1f fa82 	uxth.w	sl, r2
9001da36:	f3c4 4c07 	ubfx	ip, r4, #16, #8
9001da3a:	43d2      	mvns	r2, r2
9001da3c:	437e      	muls	r6, r7
9001da3e:	b2e4      	uxtb	r4, r4
9001da40:	fb1c fc0a 	smulbb	ip, ip, sl
9001da44:	b2d2      	uxtb	r2, r2
9001da46:	f835 8006 	ldrh.w	r8, [r5, r6]
9001da4a:	fb14 f40a 	smulbb	r4, r4, sl
9001da4e:	9602      	str	r6, [sp, #8]
9001da50:	ea4f 2e28 	mov.w	lr, r8, asr #8
9001da54:	f89d 6014 	ldrb.w	r6, [sp, #20]
9001da58:	fb16 f60a 	smulbb	r6, r6, sl
9001da5c:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
9001da60:	fb0e ce02 	mla	lr, lr, r2, ip
9001da64:	ea4f 0ce8 	mov.w	ip, r8, asr #3
9001da68:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001da6c:	fa1f fe8e 	uxth.w	lr, lr
9001da70:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
9001da74:	fa5f f888 	uxtb.w	r8, r8
9001da78:	fb0c 6c02 	mla	ip, ip, r2, r6
9001da7c:	fb08 4402 	mla	r4, r8, r2, r4
9001da80:	f10e 0201 	add.w	r2, lr, #1
9001da84:	fa1f fc8c 	uxth.w	ip, ip
9001da88:	b2a4      	uxth	r4, r4
9001da8a:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
9001da8e:	9a02      	ldr	r2, [sp, #8]
9001da90:	1c66      	adds	r6, r4, #1
9001da92:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
9001da96:	eb06 2614 	add.w	r6, r6, r4, lsr #8
9001da9a:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001da9e:	ea46 0e0e 	orr.w	lr, r6, lr
9001daa2:	f10c 0601 	add.w	r6, ip, #1
9001daa6:	eb06 261c 	add.w	r6, r6, ip, lsr #8
9001daaa:	0976      	lsrs	r6, r6, #5
9001daac:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
9001dab0:	ea4e 0e06 	orr.w	lr, lr, r6
9001dab4:	f825 e002 	strh.w	lr, [r5, r2]
9001dab8:	e7b3      	b.n	9001da22 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001daba:	f04f 0800 	mov.w	r8, #0
9001dabe:	eba3 0208 	sub.w	r2, r3, r8
9001dac2:	2a00      	cmp	r2, #0
9001dac4:	f77f af3e 	ble.w	9001d944 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001dac8:	1404      	asrs	r4, r0, #16
9001daca:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
9001dace:	140a      	asrs	r2, r1, #16
9001dad0:	fb06 4202 	mla	r2, r6, r2, r4
9001dad4:	9c01      	ldr	r4, [sp, #4]
9001dad6:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
9001dada:	0e22      	lsrs	r2, r4, #24
9001dadc:	d015      	beq.n	9001db0a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
9001dade:	9e04      	ldr	r6, [sp, #16]
9001dae0:	4372      	muls	r2, r6
9001dae2:	1c56      	adds	r6, r2, #1
9001dae4:	eb06 2222 	add.w	r2, r6, r2, asr #8
9001dae8:	0a26      	lsrs	r6, r4, #8
9001daea:	1212      	asrs	r2, r2, #8
9001daec:	2aff      	cmp	r2, #255	; 0xff
9001daee:	d113      	bne.n	9001db18 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
9001daf0:	0962      	lsrs	r2, r4, #5
9001daf2:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
9001daf6:	f3c4 04c4 	ubfx	r4, r4, #3, #5
9001dafa:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001dafe:	f026 0607 	bic.w	r6, r6, #7
9001db02:	4316      	orrs	r6, r2
9001db04:	4326      	orrs	r6, r4
9001db06:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
9001db0a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001db0c:	f108 0801 	add.w	r8, r8, #1
9001db10:	4410      	add	r0, r2
9001db12:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001db14:	4411      	add	r1, r2
9001db16:	e7d2      	b.n	9001dabe <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
9001db18:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
9001db1c:	fa1f fa82 	uxth.w	sl, r2
9001db20:	f3c4 4707 	ubfx	r7, r4, #16, #8
9001db24:	43d2      	mvns	r2, r2
9001db26:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001db2a:	fb17 f70a 	smulbb	r7, r7, sl
9001db2e:	b2d2      	uxtb	r2, r2
9001db30:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001db34:	b2e4      	uxtb	r4, r4
9001db36:	b2f6      	uxtb	r6, r6
9001db38:	fb0c 7c02 	mla	ip, ip, r2, r7
9001db3c:	ea4f 07ee 	mov.w	r7, lr, asr #3
9001db40:	fb14 f40a 	smulbb	r4, r4, sl
9001db44:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001db48:	fa1f fc8c 	uxth.w	ip, ip
9001db4c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001db50:	fb16 f60a 	smulbb	r6, r6, sl
9001db54:	fa5f fe8e 	uxtb.w	lr, lr
9001db58:	fb0e 4402 	mla	r4, lr, r2, r4
9001db5c:	fb07 6702 	mla	r7, r7, r2, r6
9001db60:	f10c 0201 	add.w	r2, ip, #1
9001db64:	b2a4      	uxth	r4, r4
9001db66:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
9001db6a:	1c66      	adds	r6, r4, #1
9001db6c:	b2bf      	uxth	r7, r7
9001db6e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001db72:	eb06 2614 	add.w	r6, r6, r4, lsr #8
9001db76:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001db7a:	ea46 0c0c 	orr.w	ip, r6, ip
9001db7e:	1c7e      	adds	r6, r7, #1
9001db80:	eb06 2617 	add.w	r6, r6, r7, lsr #8
9001db84:	0976      	lsrs	r6, r6, #5
9001db86:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
9001db8a:	ea4c 0c06 	orr.w	ip, ip, r6
9001db8e:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
9001db92:	e7ba      	b.n	9001db0a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
9001db94:	b007      	add	sp, #28
9001db96:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

9001db9c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001db9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001dba0:	b085      	sub	sp, #20
9001dba2:	468b      	mov	fp, r1
9001dba4:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001dba8:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001dbaa:	9203      	str	r2, [sp, #12]
9001dbac:	6841      	ldr	r1, [r0, #4]
9001dbae:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
9001dbb2:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
9001dbb6:	fb01 2404 	mla	r4, r1, r4, r2
9001dbba:	6802      	ldr	r2, [r0, #0]
9001dbbc:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001dbc0:	f8d8 2000 	ldr.w	r2, [r8]
9001dbc4:	9201      	str	r2, [sp, #4]
9001dbc6:	f1bb 0f00 	cmp.w	fp, #0
9001dbca:	dc03      	bgt.n	9001dbd4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
9001dbcc:	9a03      	ldr	r2, [sp, #12]
9001dbce:	2a00      	cmp	r2, #0
9001dbd0:	f340 814f 	ble.w	9001de72 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
9001dbd4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001dbd6:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
9001dbda:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001dbde:	9a10      	ldr	r2, [sp, #64]	; 0x40
9001dbe0:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
9001dbe4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001dbe8:	2b00      	cmp	r3, #0
9001dbea:	dd0e      	ble.n	9001dc0a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001dbec:	1408      	asrs	r0, r1, #16
9001dbee:	d405      	bmi.n	9001dbfc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001dbf0:	42b8      	cmp	r0, r7
9001dbf2:	da03      	bge.n	9001dbfc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001dbf4:	1410      	asrs	r0, r2, #16
9001dbf6:	d401      	bmi.n	9001dbfc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001dbf8:	42b0      	cmp	r0, r6
9001dbfa:	db07      	blt.n	9001dc0c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001dbfc:	9811      	ldr	r0, [sp, #68]	; 0x44
9001dbfe:	3b01      	subs	r3, #1
9001dc00:	3402      	adds	r4, #2
9001dc02:	4401      	add	r1, r0
9001dc04:	9812      	ldr	r0, [sp, #72]	; 0x48
9001dc06:	4402      	add	r2, r0
9001dc08:	e7ee      	b.n	9001dbe8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
9001dc0a:	d017      	beq.n	9001dc3c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001dc0c:	1e58      	subs	r0, r3, #1
9001dc0e:	9d11      	ldr	r5, [sp, #68]	; 0x44
9001dc10:	fb05 1500 	mla	r5, r5, r0, r1
9001dc14:	142d      	asrs	r5, r5, #16
9001dc16:	d409      	bmi.n	9001dc2c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001dc18:	42bd      	cmp	r5, r7
9001dc1a:	da07      	bge.n	9001dc2c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001dc1c:	9d12      	ldr	r5, [sp, #72]	; 0x48
9001dc1e:	fb05 2000 	mla	r0, r5, r0, r2
9001dc22:	1400      	asrs	r0, r0, #16
9001dc24:	d402      	bmi.n	9001dc2c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001dc26:	42b0      	cmp	r0, r6
9001dc28:	f2c0 80ba 	blt.w	9001dda0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9001dc2c:	2600      	movs	r6, #0
9001dc2e:	1998      	adds	r0, r3, r6
9001dc30:	2800      	cmp	r0, #0
9001dc32:	dc3e      	bgt.n	9001dcb2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
9001dc34:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001dc38:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001dc3c:	f1bb 0f00 	cmp.w	fp, #0
9001dc40:	f340 8117 	ble.w	9001de72 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
9001dc44:	ee30 0a04 	vadd.f32	s0, s0, s8
9001dc48:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001dc4a:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001dc4e:	f1bb 0b01 	subs.w	fp, fp, #1
9001dc52:	eeb0 6a62 	vmov.f32	s12, s5
9001dc56:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001dc5a:	ee31 1a05 	vadd.f32	s2, s2, s10
9001dc5e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001dc62:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
9001dc66:	eeb0 6a43 	vmov.f32	s12, s6
9001dc6a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001dc6e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
9001dc72:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001dc76:	ee61 7a27 	vmul.f32	s15, s2, s15
9001dc7a:	ee77 2a62 	vsub.f32	s5, s14, s5
9001dc7e:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001dc82:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001dc86:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001dc8a:	ee12 2a90 	vmov	r2, s5
9001dc8e:	eef0 2a47 	vmov.f32	s5, s14
9001dc92:	fb92 f3f3 	sdiv	r3, r2, r3
9001dc96:	ee13 2a10 	vmov	r2, s6
9001dc9a:	9311      	str	r3, [sp, #68]	; 0x44
9001dc9c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001dc9e:	eeb0 3a67 	vmov.f32	s6, s15
9001dca2:	fb92 f3f3 	sdiv	r3, r2, r3
9001dca6:	9a03      	ldr	r2, [sp, #12]
9001dca8:	9312      	str	r3, [sp, #72]	; 0x48
9001dcaa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001dcac:	bf08      	it	eq
9001dcae:	4613      	moveq	r3, r2
9001dcb0:	e789      	b.n	9001dbc6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
9001dcb2:	140f      	asrs	r7, r1, #16
9001dcb4:	d424      	bmi.n	9001dd00 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001dcb6:	f8d8 5008 	ldr.w	r5, [r8, #8]
9001dcba:	42bd      	cmp	r5, r7
9001dcbc:	dd20      	ble.n	9001dd00 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001dcbe:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001dcc2:	d41d      	bmi.n	9001dd00 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001dcc4:	f8d8 000c 	ldr.w	r0, [r8, #12]
9001dcc8:	4560      	cmp	r0, ip
9001dcca:	dd19      	ble.n	9001dd00 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001dccc:	b22d      	sxth	r5, r5
9001dcce:	9801      	ldr	r0, [sp, #4]
9001dcd0:	fb0c 7505 	mla	r5, ip, r5, r7
9001dcd4:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
9001dcd8:	0e07      	lsrs	r7, r0, #24
9001dcda:	2fff      	cmp	r7, #255	; 0xff
9001dcdc:	d116      	bne.n	9001dd0c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001dcde:	f06f 0501 	mvn.w	r5, #1
9001dce2:	fb05 f706 	mul.w	r7, r5, r6
9001dce6:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
9001dcea:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
9001dcee:	0945      	lsrs	r5, r0, #5
9001dcf0:	f3c0 00c4 	ubfx	r0, r0, #3, #5
9001dcf4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001dcf8:	ea4c 0505 	orr.w	r5, ip, r5
9001dcfc:	4305      	orrs	r5, r0
9001dcfe:	53e5      	strh	r5, [r4, r7]
9001dd00:	9811      	ldr	r0, [sp, #68]	; 0x44
9001dd02:	3e01      	subs	r6, #1
9001dd04:	4401      	add	r1, r0
9001dd06:	9812      	ldr	r0, [sp, #72]	; 0x48
9001dd08:	4402      	add	r2, r0
9001dd0a:	e790      	b.n	9001dc2e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001dd0c:	b2fd      	uxtb	r5, r7
9001dd0e:	2f00      	cmp	r7, #0
9001dd10:	d0f6      	beq.n	9001dd00 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001dd12:	f06f 0701 	mvn.w	r7, #1
9001dd16:	fa1f f985 	uxth.w	r9, r5
9001dd1a:	43ed      	mvns	r5, r5
9001dd1c:	f3c0 2a07 	ubfx	sl, r0, #8, #8
9001dd20:	4377      	muls	r7, r6
9001dd22:	fb1a fa09 	smulbb	sl, sl, r9
9001dd26:	b2ed      	uxtb	r5, r5
9001dd28:	f834 e007 	ldrh.w	lr, [r4, r7]
9001dd2c:	9702      	str	r7, [sp, #8]
9001dd2e:	f3c0 4707 	ubfx	r7, r0, #16, #8
9001dd32:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001dd36:	fb17 f709 	smulbb	r7, r7, r9
9001dd3a:	b2c0      	uxtb	r0, r0
9001dd3c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001dd40:	fb10 f009 	smulbb	r0, r0, r9
9001dd44:	fb0c 7c05 	mla	ip, ip, r5, r7
9001dd48:	ea4f 07ee 	mov.w	r7, lr, asr #3
9001dd4c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001dd50:	fa1f fc8c 	uxth.w	ip, ip
9001dd54:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001dd58:	fa5f fe8e 	uxtb.w	lr, lr
9001dd5c:	fb07 a705 	mla	r7, r7, r5, sl
9001dd60:	fb0e 0005 	mla	r0, lr, r5, r0
9001dd64:	f10c 0501 	add.w	r5, ip, #1
9001dd68:	b2bf      	uxth	r7, r7
9001dd6a:	b280      	uxth	r0, r0
9001dd6c:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001dd70:	f100 0a01 	add.w	sl, r0, #1
9001dd74:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001dd78:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
9001dd7c:	9802      	ldr	r0, [sp, #8]
9001dd7e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001dd82:	ea4a 0c0c 	orr.w	ip, sl, ip
9001dd86:	f107 0a01 	add.w	sl, r7, #1
9001dd8a:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001dd8e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001dd92:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001dd96:	ea4c 0c0a 	orr.w	ip, ip, sl
9001dd9a:	f824 c000 	strh.w	ip, [r4, r0]
9001dd9e:	e7af      	b.n	9001dd00 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001dda0:	f04f 0e00 	mov.w	lr, #0
9001dda4:	eba3 000e 	sub.w	r0, r3, lr
9001dda8:	2800      	cmp	r0, #0
9001ddaa:	f77f af43 	ble.w	9001dc34 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001ddae:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
9001ddb2:	140d      	asrs	r5, r1, #16
9001ddb4:	1410      	asrs	r0, r2, #16
9001ddb6:	fb06 5000 	mla	r0, r6, r0, r5
9001ddba:	9d01      	ldr	r5, [sp, #4]
9001ddbc:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
9001ddc0:	0e2e      	lsrs	r6, r5, #24
9001ddc2:	2eff      	cmp	r6, #255	; 0xff
9001ddc4:	d112      	bne.n	9001ddec <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
9001ddc6:	482c      	ldr	r0, [pc, #176]	; (9001de78 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
9001ddc8:	ea00 2615 	and.w	r6, r0, r5, lsr #8
9001ddcc:	0968      	lsrs	r0, r5, #5
9001ddce:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001ddd2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9001ddd6:	4330      	orrs	r0, r6
9001ddd8:	4328      	orrs	r0, r5
9001ddda:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
9001ddde:	9811      	ldr	r0, [sp, #68]	; 0x44
9001dde0:	f10e 0e01 	add.w	lr, lr, #1
9001dde4:	4401      	add	r1, r0
9001dde6:	9812      	ldr	r0, [sp, #72]	; 0x48
9001dde8:	4402      	add	r2, r0
9001ddea:	e7db      	b.n	9001dda4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
9001ddec:	b2f0      	uxtb	r0, r6
9001ddee:	2e00      	cmp	r6, #0
9001ddf0:	d0f5      	beq.n	9001ddde <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
9001ddf2:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
9001ddf6:	fa1f f980 	uxth.w	r9, r0
9001ddfa:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001ddfe:	43c0      	mvns	r0, r0
9001de00:	ea4f 272c 	mov.w	r7, ip, asr #8
9001de04:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001de08:	fb16 f609 	smulbb	r6, r6, r9
9001de0c:	b2c0      	uxtb	r0, r0
9001de0e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001de12:	b2ed      	uxtb	r5, r5
9001de14:	fb1a fa09 	smulbb	sl, sl, r9
9001de18:	fb07 6700 	mla	r7, r7, r0, r6
9001de1c:	ea4f 06ec 	mov.w	r6, ip, asr #3
9001de20:	fb15 f509 	smulbb	r5, r5, r9
9001de24:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001de28:	b2bf      	uxth	r7, r7
9001de2a:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001de2e:	fa5f fc8c 	uxtb.w	ip, ip
9001de32:	fb06 a600 	mla	r6, r6, r0, sl
9001de36:	fb0c 5500 	mla	r5, ip, r0, r5
9001de3a:	1c78      	adds	r0, r7, #1
9001de3c:	b2b6      	uxth	r6, r6
9001de3e:	b2ad      	uxth	r5, r5
9001de40:	eb00 2717 	add.w	r7, r0, r7, lsr #8
9001de44:	f105 0a01 	add.w	sl, r5, #1
9001de48:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
9001de4c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001de50:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001de54:	ea4a 0707 	orr.w	r7, sl, r7
9001de58:	f106 0a01 	add.w	sl, r6, #1
9001de5c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001de60:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001de64:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001de68:	ea47 070a 	orr.w	r7, r7, sl
9001de6c:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
9001de70:	e7b5      	b.n	9001ddde <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
9001de72:	b005      	add	sp, #20
9001de74:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001de78:	fffff800 	.word	0xfffff800

9001de7c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001de7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001de80:	b087      	sub	sp, #28
9001de82:	468b      	mov	fp, r1
9001de84:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001de88:	9815      	ldr	r0, [sp, #84]	; 0x54
9001de8a:	9203      	str	r2, [sp, #12]
9001de8c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
9001de90:	6841      	ldr	r1, [r0, #4]
9001de92:	9204      	str	r2, [sp, #16]
9001de94:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
9001de98:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
9001de9c:	fb01 2404 	mla	r4, r1, r4, r2
9001dea0:	6802      	ldr	r2, [r0, #0]
9001dea2:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001dea6:	f8d9 2008 	ldr.w	r2, [r9, #8]
9001deaa:	3201      	adds	r2, #1
9001deac:	f022 0201 	bic.w	r2, r2, #1
9001deb0:	9200      	str	r2, [sp, #0]
9001deb2:	f8d9 2000 	ldr.w	r2, [r9]
9001deb6:	9201      	str	r2, [sp, #4]
9001deb8:	f1bb 0f00 	cmp.w	fp, #0
9001debc:	dc03      	bgt.n	9001dec6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
9001debe:	9a03      	ldr	r2, [sp, #12]
9001dec0:	2a00      	cmp	r2, #0
9001dec2:	f340 816a 	ble.w	9001e19a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
9001dec6:	9a11      	ldr	r2, [sp, #68]	; 0x44
9001dec8:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
9001decc:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
9001ded0:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001ded2:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
9001ded6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001deda:	2b00      	cmp	r3, #0
9001dedc:	dd0e      	ble.n	9001defc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
9001dede:	1402      	asrs	r2, r0, #16
9001dee0:	d405      	bmi.n	9001deee <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001dee2:	42ba      	cmp	r2, r7
9001dee4:	da03      	bge.n	9001deee <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001dee6:	140a      	asrs	r2, r1, #16
9001dee8:	d401      	bmi.n	9001deee <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001deea:	42b2      	cmp	r2, r6
9001deec:	db07      	blt.n	9001defe <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
9001deee:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001def0:	3b01      	subs	r3, #1
9001def2:	3402      	adds	r4, #2
9001def4:	4410      	add	r0, r2
9001def6:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001def8:	4411      	add	r1, r2
9001defa:	e7ee      	b.n	9001deda <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
9001defc:	d017      	beq.n	9001df2e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
9001defe:	1e5a      	subs	r2, r3, #1
9001df00:	9d13      	ldr	r5, [sp, #76]	; 0x4c
9001df02:	fb05 0502 	mla	r5, r5, r2, r0
9001df06:	142d      	asrs	r5, r5, #16
9001df08:	d409      	bmi.n	9001df1e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001df0a:	42bd      	cmp	r5, r7
9001df0c:	da07      	bge.n	9001df1e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001df0e:	9d14      	ldr	r5, [sp, #80]	; 0x50
9001df10:	fb05 1202 	mla	r2, r5, r2, r1
9001df14:	1412      	asrs	r2, r2, #16
9001df16:	d402      	bmi.n	9001df1e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001df18:	42b2      	cmp	r2, r6
9001df1a:	f2c0 80c8 	blt.w	9001e0ae <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
9001df1e:	2700      	movs	r7, #0
9001df20:	19da      	adds	r2, r3, r7
9001df22:	2a00      	cmp	r2, #0
9001df24:	dc3e      	bgt.n	9001dfa4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
9001df26:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001df2a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001df2e:	f1bb 0f00 	cmp.w	fp, #0
9001df32:	f340 8132 	ble.w	9001e19a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
9001df36:	ee30 0a04 	vadd.f32	s0, s0, s8
9001df3a:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001df3c:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001df40:	f1bb 0b01 	subs.w	fp, fp, #1
9001df44:	eeb0 6a62 	vmov.f32	s12, s5
9001df48:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001df4c:	ee31 1a05 	vadd.f32	s2, s2, s10
9001df50:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001df54:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
9001df58:	eeb0 6a43 	vmov.f32	s12, s6
9001df5c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001df60:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
9001df64:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001df68:	ee61 7a27 	vmul.f32	s15, s2, s15
9001df6c:	ee77 2a62 	vsub.f32	s5, s14, s5
9001df70:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001df74:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001df78:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001df7c:	ee12 2a90 	vmov	r2, s5
9001df80:	eef0 2a47 	vmov.f32	s5, s14
9001df84:	fb92 f3f3 	sdiv	r3, r2, r3
9001df88:	ee13 2a10 	vmov	r2, s6
9001df8c:	9313      	str	r3, [sp, #76]	; 0x4c
9001df8e:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001df90:	eeb0 3a67 	vmov.f32	s6, s15
9001df94:	fb92 f3f3 	sdiv	r3, r2, r3
9001df98:	9a03      	ldr	r2, [sp, #12]
9001df9a:	9314      	str	r3, [sp, #80]	; 0x50
9001df9c:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001df9e:	bf08      	it	eq
9001dfa0:	4613      	moveq	r3, r2
9001dfa2:	e789      	b.n	9001deb8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9001dfa4:	1405      	asrs	r5, r0, #16
9001dfa6:	d436      	bmi.n	9001e016 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001dfa8:	f8d9 2008 	ldr.w	r2, [r9, #8]
9001dfac:	42aa      	cmp	r2, r5
9001dfae:	dd32      	ble.n	9001e016 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001dfb0:	140e      	asrs	r6, r1, #16
9001dfb2:	d430      	bmi.n	9001e016 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001dfb4:	f8d9 200c 	ldr.w	r2, [r9, #12]
9001dfb8:	42b2      	cmp	r2, r6
9001dfba:	dd2c      	ble.n	9001e016 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001dfbc:	9a00      	ldr	r2, [sp, #0]
9001dfbe:	fb06 5502 	mla	r5, r6, r2, r5
9001dfc2:	9e01      	ldr	r6, [sp, #4]
9001dfc4:	086a      	lsrs	r2, r5, #1
9001dfc6:	5cb2      	ldrb	r2, [r6, r2]
9001dfc8:	07ee      	lsls	r6, r5, #31
9001dfca:	bf54      	ite	pl
9001dfcc:	f002 020f 	andpl.w	r2, r2, #15
9001dfd0:	1112      	asrmi	r2, r2, #4
9001dfd2:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001dfd6:	b2d2      	uxtb	r2, r2
9001dfd8:	b1ea      	cbz	r2, 9001e016 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001dfda:	9d04      	ldr	r5, [sp, #16]
9001dfdc:	436a      	muls	r2, r5
9001dfde:	1c55      	adds	r5, r2, #1
9001dfe0:	eb05 2222 	add.w	r2, r5, r2, asr #8
9001dfe4:	4d6e      	ldr	r5, [pc, #440]	; (9001e1a0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
9001dfe6:	1212      	asrs	r2, r2, #8
9001dfe8:	682d      	ldr	r5, [r5, #0]
9001dfea:	2aff      	cmp	r2, #255	; 0xff
9001dfec:	ea4f 2615 	mov.w	r6, r5, lsr #8
9001dff0:	9605      	str	r6, [sp, #20]
9001dff2:	d116      	bne.n	9001e022 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
9001dff4:	f06f 0201 	mvn.w	r2, #1
9001dff8:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
9001dffc:	fb02 fc07 	mul.w	ip, r2, r7
9001e000:	096a      	lsrs	r2, r5, #5
9001e002:	f026 0607 	bic.w	r6, r6, #7
9001e006:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001e00a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001e00e:	4316      	orrs	r6, r2
9001e010:	432e      	orrs	r6, r5
9001e012:	f824 600c 	strh.w	r6, [r4, ip]
9001e016:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001e018:	3f01      	subs	r7, #1
9001e01a:	4410      	add	r0, r2
9001e01c:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001e01e:	4411      	add	r1, r2
9001e020:	e77e      	b.n	9001df20 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
9001e022:	f06f 0601 	mvn.w	r6, #1
9001e026:	fa1f fa82 	uxth.w	sl, r2
9001e02a:	f3c5 4c07 	ubfx	ip, r5, #16, #8
9001e02e:	43d2      	mvns	r2, r2
9001e030:	437e      	muls	r6, r7
9001e032:	b2ed      	uxtb	r5, r5
9001e034:	fb1c fc0a 	smulbb	ip, ip, sl
9001e038:	b2d2      	uxtb	r2, r2
9001e03a:	f834 8006 	ldrh.w	r8, [r4, r6]
9001e03e:	fb15 f50a 	smulbb	r5, r5, sl
9001e042:	9602      	str	r6, [sp, #8]
9001e044:	ea4f 2e28 	mov.w	lr, r8, asr #8
9001e048:	f89d 6014 	ldrb.w	r6, [sp, #20]
9001e04c:	fb16 f60a 	smulbb	r6, r6, sl
9001e050:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
9001e054:	fb0e ce02 	mla	lr, lr, r2, ip
9001e058:	ea4f 0ce8 	mov.w	ip, r8, asr #3
9001e05c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001e060:	fa1f fe8e 	uxth.w	lr, lr
9001e064:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
9001e068:	fa5f f888 	uxtb.w	r8, r8
9001e06c:	fb0c 6c02 	mla	ip, ip, r2, r6
9001e070:	fb08 5502 	mla	r5, r8, r2, r5
9001e074:	f10e 0201 	add.w	r2, lr, #1
9001e078:	fa1f fc8c 	uxth.w	ip, ip
9001e07c:	b2ad      	uxth	r5, r5
9001e07e:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
9001e082:	9a02      	ldr	r2, [sp, #8]
9001e084:	1c6e      	adds	r6, r5, #1
9001e086:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
9001e08a:	eb06 2615 	add.w	r6, r6, r5, lsr #8
9001e08e:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001e092:	ea46 0e0e 	orr.w	lr, r6, lr
9001e096:	f10c 0601 	add.w	r6, ip, #1
9001e09a:	eb06 261c 	add.w	r6, r6, ip, lsr #8
9001e09e:	0976      	lsrs	r6, r6, #5
9001e0a0:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
9001e0a4:	ea4e 0e06 	orr.w	lr, lr, r6
9001e0a8:	f824 e002 	strh.w	lr, [r4, r2]
9001e0ac:	e7b3      	b.n	9001e016 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001e0ae:	f04f 0800 	mov.w	r8, #0
9001e0b2:	eba3 0208 	sub.w	r2, r3, r8
9001e0b6:	2a00      	cmp	r2, #0
9001e0b8:	f77f af35 	ble.w	9001df26 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
9001e0bc:	1402      	asrs	r2, r0, #16
9001e0be:	9e00      	ldr	r6, [sp, #0]
9001e0c0:	140d      	asrs	r5, r1, #16
9001e0c2:	fb06 2505 	mla	r5, r6, r5, r2
9001e0c6:	9e01      	ldr	r6, [sp, #4]
9001e0c8:	086a      	lsrs	r2, r5, #1
9001e0ca:	07ed      	lsls	r5, r5, #31
9001e0cc:	5cb2      	ldrb	r2, [r6, r2]
9001e0ce:	bf54      	ite	pl
9001e0d0:	f002 020f 	andpl.w	r2, r2, #15
9001e0d4:	1112      	asrmi	r2, r2, #4
9001e0d6:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001e0da:	b2d2      	uxtb	r2, r2
9001e0dc:	b1c2      	cbz	r2, 9001e110 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001e0de:	9d04      	ldr	r5, [sp, #16]
9001e0e0:	436a      	muls	r2, r5
9001e0e2:	1c55      	adds	r5, r2, #1
9001e0e4:	eb05 2222 	add.w	r2, r5, r2, asr #8
9001e0e8:	4d2d      	ldr	r5, [pc, #180]	; (9001e1a0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
9001e0ea:	1212      	asrs	r2, r2, #8
9001e0ec:	682e      	ldr	r6, [r5, #0]
9001e0ee:	2aff      	cmp	r2, #255	; 0xff
9001e0f0:	ea4f 2516 	mov.w	r5, r6, lsr #8
9001e0f4:	d113      	bne.n	9001e11e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
9001e0f6:	0972      	lsrs	r2, r6, #5
9001e0f8:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
9001e0fc:	f3c6 06c4 	ubfx	r6, r6, #3, #5
9001e100:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001e104:	f025 0507 	bic.w	r5, r5, #7
9001e108:	4315      	orrs	r5, r2
9001e10a:	4335      	orrs	r5, r6
9001e10c:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
9001e110:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001e112:	f108 0801 	add.w	r8, r8, #1
9001e116:	4410      	add	r0, r2
9001e118:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001e11a:	4411      	add	r1, r2
9001e11c:	e7c9      	b.n	9001e0b2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
9001e11e:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
9001e122:	fa1f fa82 	uxth.w	sl, r2
9001e126:	f3c6 4707 	ubfx	r7, r6, #16, #8
9001e12a:	43d2      	mvns	r2, r2
9001e12c:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001e130:	fb17 f70a 	smulbb	r7, r7, sl
9001e134:	b2d2      	uxtb	r2, r2
9001e136:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001e13a:	b2f6      	uxtb	r6, r6
9001e13c:	b2ed      	uxtb	r5, r5
9001e13e:	fb0c 7c02 	mla	ip, ip, r2, r7
9001e142:	ea4f 07ee 	mov.w	r7, lr, asr #3
9001e146:	fb16 f60a 	smulbb	r6, r6, sl
9001e14a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001e14e:	fa1f fc8c 	uxth.w	ip, ip
9001e152:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001e156:	fb15 f50a 	smulbb	r5, r5, sl
9001e15a:	fa5f fe8e 	uxtb.w	lr, lr
9001e15e:	fb0e 6602 	mla	r6, lr, r2, r6
9001e162:	fb07 5702 	mla	r7, r7, r2, r5
9001e166:	f10c 0201 	add.w	r2, ip, #1
9001e16a:	b2b6      	uxth	r6, r6
9001e16c:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
9001e170:	1c75      	adds	r5, r6, #1
9001e172:	b2bf      	uxth	r7, r7
9001e174:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001e178:	eb05 2516 	add.w	r5, r5, r6, lsr #8
9001e17c:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001e180:	ea45 0c0c 	orr.w	ip, r5, ip
9001e184:	1c7d      	adds	r5, r7, #1
9001e186:	eb05 2517 	add.w	r5, r5, r7, lsr #8
9001e18a:	096d      	lsrs	r5, r5, #5
9001e18c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001e190:	ea4c 0c05 	orr.w	ip, ip, r5
9001e194:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
9001e198:	e7ba      	b.n	9001e110 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001e19a:	b007      	add	sp, #28
9001e19c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001e1a0:	240236dc 	.word	0x240236dc

9001e1a4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001e1a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001e1a8:	b087      	sub	sp, #28
9001e1aa:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001e1ae:	f8df 8308 	ldr.w	r8, [pc, #776]	; 9001e4b8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
9001e1b2:	9815      	ldr	r0, [sp, #84]	; 0x54
9001e1b4:	9101      	str	r1, [sp, #4]
9001e1b6:	9205      	str	r2, [sp, #20]
9001e1b8:	6841      	ldr	r1, [r0, #4]
9001e1ba:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
9001e1be:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
9001e1c2:	fb01 2404 	mla	r4, r1, r4, r2
9001e1c6:	6802      	ldr	r2, [r0, #0]
9001e1c8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001e1cc:	f8db 2008 	ldr.w	r2, [fp, #8]
9001e1d0:	3201      	adds	r2, #1
9001e1d2:	f022 0201 	bic.w	r2, r2, #1
9001e1d6:	9202      	str	r2, [sp, #8]
9001e1d8:	f8db 2000 	ldr.w	r2, [fp]
9001e1dc:	9203      	str	r2, [sp, #12]
9001e1de:	9a01      	ldr	r2, [sp, #4]
9001e1e0:	2a00      	cmp	r2, #0
9001e1e2:	dc03      	bgt.n	9001e1ec <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
9001e1e4:	9a05      	ldr	r2, [sp, #20]
9001e1e6:	2a00      	cmp	r2, #0
9001e1e8:	f340 8162 	ble.w	9001e4b0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
9001e1ec:	9a11      	ldr	r2, [sp, #68]	; 0x44
9001e1ee:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
9001e1f2:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
9001e1f6:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001e1f8:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
9001e1fc:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001e200:	2b00      	cmp	r3, #0
9001e202:	dd0e      	ble.n	9001e222 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001e204:	1402      	asrs	r2, r0, #16
9001e206:	d405      	bmi.n	9001e214 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001e208:	42ba      	cmp	r2, r7
9001e20a:	da03      	bge.n	9001e214 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001e20c:	140a      	asrs	r2, r1, #16
9001e20e:	d401      	bmi.n	9001e214 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001e210:	42b2      	cmp	r2, r6
9001e212:	db07      	blt.n	9001e224 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
9001e214:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001e216:	3b01      	subs	r3, #1
9001e218:	3402      	adds	r4, #2
9001e21a:	4410      	add	r0, r2
9001e21c:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001e21e:	4411      	add	r1, r2
9001e220:	e7ee      	b.n	9001e200 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
9001e222:	d017      	beq.n	9001e254 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
9001e224:	1e5a      	subs	r2, r3, #1
9001e226:	9d13      	ldr	r5, [sp, #76]	; 0x4c
9001e228:	fb05 0502 	mla	r5, r5, r2, r0
9001e22c:	142d      	asrs	r5, r5, #16
9001e22e:	d409      	bmi.n	9001e244 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001e230:	42bd      	cmp	r5, r7
9001e232:	da07      	bge.n	9001e244 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001e234:	9d14      	ldr	r5, [sp, #80]	; 0x50
9001e236:	fb05 1202 	mla	r2, r5, r2, r1
9001e23a:	1412      	asrs	r2, r2, #16
9001e23c:	d402      	bmi.n	9001e244 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001e23e:	42b2      	cmp	r2, r6
9001e240:	f2c0 80c3 	blt.w	9001e3ca <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
9001e244:	2500      	movs	r5, #0
9001e246:	195a      	adds	r2, r3, r5
9001e248:	2a00      	cmp	r2, #0
9001e24a:	dc3f      	bgt.n	9001e2cc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
9001e24c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001e250:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001e254:	9b01      	ldr	r3, [sp, #4]
9001e256:	2b00      	cmp	r3, #0
9001e258:	f340 812a 	ble.w	9001e4b0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
9001e25c:	ee30 0a04 	vadd.f32	s0, s0, s8
9001e260:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001e262:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001e266:	eeb0 6a62 	vmov.f32	s12, s5
9001e26a:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001e26e:	ee31 1a05 	vadd.f32	s2, s2, s10
9001e272:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001e276:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
9001e27a:	eeb0 6a43 	vmov.f32	s12, s6
9001e27e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001e282:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
9001e286:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001e28a:	ee61 7a27 	vmul.f32	s15, s2, s15
9001e28e:	ee77 2a62 	vsub.f32	s5, s14, s5
9001e292:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001e296:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001e29a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001e29e:	ee12 2a90 	vmov	r2, s5
9001e2a2:	eef0 2a47 	vmov.f32	s5, s14
9001e2a6:	fb92 f3f3 	sdiv	r3, r2, r3
9001e2aa:	ee13 2a10 	vmov	r2, s6
9001e2ae:	9313      	str	r3, [sp, #76]	; 0x4c
9001e2b0:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001e2b2:	eeb0 3a67 	vmov.f32	s6, s15
9001e2b6:	fb92 f3f3 	sdiv	r3, r2, r3
9001e2ba:	9314      	str	r3, [sp, #80]	; 0x50
9001e2bc:	9b01      	ldr	r3, [sp, #4]
9001e2be:	9a05      	ldr	r2, [sp, #20]
9001e2c0:	3b01      	subs	r3, #1
9001e2c2:	9301      	str	r3, [sp, #4]
9001e2c4:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001e2c6:	bf08      	it	eq
9001e2c8:	4613      	moveq	r3, r2
9001e2ca:	e788      	b.n	9001e1de <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
9001e2cc:	1406      	asrs	r6, r0, #16
9001e2ce:	d42c      	bmi.n	9001e32a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001e2d0:	f8db 2008 	ldr.w	r2, [fp, #8]
9001e2d4:	42b2      	cmp	r2, r6
9001e2d6:	dd28      	ble.n	9001e32a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001e2d8:	140f      	asrs	r7, r1, #16
9001e2da:	d426      	bmi.n	9001e32a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001e2dc:	f8db 200c 	ldr.w	r2, [fp, #12]
9001e2e0:	42ba      	cmp	r2, r7
9001e2e2:	dd22      	ble.n	9001e32a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001e2e4:	9a02      	ldr	r2, [sp, #8]
9001e2e6:	fb07 6602 	mla	r6, r7, r2, r6
9001e2ea:	9f03      	ldr	r7, [sp, #12]
9001e2ec:	0872      	lsrs	r2, r6, #1
9001e2ee:	07f6      	lsls	r6, r6, #31
9001e2f0:	5cba      	ldrb	r2, [r7, r2]
9001e2f2:	bf54      	ite	pl
9001e2f4:	f002 020f 	andpl.w	r2, r2, #15
9001e2f8:	1112      	asrmi	r2, r2, #4
9001e2fa:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001e2fe:	b2d2      	uxtb	r2, r2
9001e300:	2aff      	cmp	r2, #255	; 0xff
9001e302:	d118      	bne.n	9001e336 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
9001e304:	f06f 0601 	mvn.w	r6, #1
9001e308:	f8d8 2000 	ldr.w	r2, [r8]
9001e30c:	fb06 f705 	mul.w	r7, r6, r5
9001e310:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
9001e314:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
9001e318:	0956      	lsrs	r6, r2, #5
9001e31a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9001e31e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
9001e322:	ea4c 0606 	orr.w	r6, ip, r6
9001e326:	4316      	orrs	r6, r2
9001e328:	53e6      	strh	r6, [r4, r7]
9001e32a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001e32c:	3d01      	subs	r5, #1
9001e32e:	4410      	add	r0, r2
9001e330:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001e332:	4411      	add	r1, r2
9001e334:	e787      	b.n	9001e246 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001e336:	2a00      	cmp	r2, #0
9001e338:	d0f7      	beq.n	9001e32a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001e33a:	f06f 0601 	mvn.w	r6, #1
9001e33e:	f8d8 c000 	ldr.w	ip, [r8]
9001e342:	fa1f f982 	uxth.w	r9, r2
9001e346:	43d2      	mvns	r2, r2
9001e348:	436e      	muls	r6, r5
9001e34a:	f3cc 2a07 	ubfx	sl, ip, #8, #8
9001e34e:	b2d2      	uxtb	r2, r2
9001e350:	f834 e006 	ldrh.w	lr, [r4, r6]
9001e354:	fb1a fa09 	smulbb	sl, sl, r9
9001e358:	9604      	str	r6, [sp, #16]
9001e35a:	f3cc 4607 	ubfx	r6, ip, #16, #8
9001e35e:	ea4f 272e 	mov.w	r7, lr, asr #8
9001e362:	fb16 f609 	smulbb	r6, r6, r9
9001e366:	fa5f fc8c 	uxtb.w	ip, ip
9001e36a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001e36e:	fb1c fc09 	smulbb	ip, ip, r9
9001e372:	fb07 6702 	mla	r7, r7, r2, r6
9001e376:	ea4f 06ee 	mov.w	r6, lr, asr #3
9001e37a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001e37e:	b2bf      	uxth	r7, r7
9001e380:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001e384:	fa5f fe8e 	uxtb.w	lr, lr
9001e388:	fb06 a602 	mla	r6, r6, r2, sl
9001e38c:	fb0e cc02 	mla	ip, lr, r2, ip
9001e390:	1c7a      	adds	r2, r7, #1
9001e392:	b2b6      	uxth	r6, r6
9001e394:	fa1f fc8c 	uxth.w	ip, ip
9001e398:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001e39c:	9a04      	ldr	r2, [sp, #16]
9001e39e:	f10c 0a01 	add.w	sl, ip, #1
9001e3a2:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
9001e3a6:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
9001e3aa:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001e3ae:	ea4a 0707 	orr.w	r7, sl, r7
9001e3b2:	f106 0a01 	add.w	sl, r6, #1
9001e3b6:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001e3ba:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001e3be:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001e3c2:	ea47 070a 	orr.w	r7, r7, sl
9001e3c6:	52a7      	strh	r7, [r4, r2]
9001e3c8:	e7af      	b.n	9001e32a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001e3ca:	f04f 0e00 	mov.w	lr, #0
9001e3ce:	eba3 020e 	sub.w	r2, r3, lr
9001e3d2:	2a00      	cmp	r2, #0
9001e3d4:	f77f af3a 	ble.w	9001e24c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
9001e3d8:	1402      	asrs	r2, r0, #16
9001e3da:	9e02      	ldr	r6, [sp, #8]
9001e3dc:	140d      	asrs	r5, r1, #16
9001e3de:	fb06 2505 	mla	r5, r6, r5, r2
9001e3e2:	9e03      	ldr	r6, [sp, #12]
9001e3e4:	086a      	lsrs	r2, r5, #1
9001e3e6:	07ed      	lsls	r5, r5, #31
9001e3e8:	5cb2      	ldrb	r2, [r6, r2]
9001e3ea:	bf54      	ite	pl
9001e3ec:	f002 020f 	andpl.w	r2, r2, #15
9001e3f0:	1112      	asrmi	r2, r2, #4
9001e3f2:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001e3f6:	b2d2      	uxtb	r2, r2
9001e3f8:	2aff      	cmp	r2, #255	; 0xff
9001e3fa:	d115      	bne.n	9001e428 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
9001e3fc:	f8d8 5000 	ldr.w	r5, [r8]
9001e400:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
9001e404:	ea02 2615 	and.w	r6, r2, r5, lsr #8
9001e408:	096a      	lsrs	r2, r5, #5
9001e40a:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001e40e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001e412:	4332      	orrs	r2, r6
9001e414:	432a      	orrs	r2, r5
9001e416:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
9001e41a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001e41c:	f10e 0e01 	add.w	lr, lr, #1
9001e420:	4410      	add	r0, r2
9001e422:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001e424:	4411      	add	r1, r2
9001e426:	e7d2      	b.n	9001e3ce <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
9001e428:	2a00      	cmp	r2, #0
9001e42a:	d0f6      	beq.n	9001e41a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
9001e42c:	f8d8 7000 	ldr.w	r7, [r8]
9001e430:	fa1f f982 	uxth.w	r9, r2
9001e434:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
9001e438:	43d2      	mvns	r2, r2
9001e43a:	f3c7 4507 	ubfx	r5, r7, #16, #8
9001e43e:	f3c7 2a07 	ubfx	sl, r7, #8, #8
9001e442:	ea4f 262c 	mov.w	r6, ip, asr #8
9001e446:	fb15 f509 	smulbb	r5, r5, r9
9001e44a:	b2d2      	uxtb	r2, r2
9001e44c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001e450:	b2ff      	uxtb	r7, r7
9001e452:	fb1a fa09 	smulbb	sl, sl, r9
9001e456:	fb06 5602 	mla	r6, r6, r2, r5
9001e45a:	ea4f 05ec 	mov.w	r5, ip, asr #3
9001e45e:	fb17 f709 	smulbb	r7, r7, r9
9001e462:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001e466:	b2b6      	uxth	r6, r6
9001e468:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
9001e46c:	fa5f fc8c 	uxtb.w	ip, ip
9001e470:	fb05 a502 	mla	r5, r5, r2, sl
9001e474:	fb0c 7702 	mla	r7, ip, r2, r7
9001e478:	1c72      	adds	r2, r6, #1
9001e47a:	b2ad      	uxth	r5, r5
9001e47c:	b2bf      	uxth	r7, r7
9001e47e:	eb02 2616 	add.w	r6, r2, r6, lsr #8
9001e482:	f107 0a01 	add.w	sl, r7, #1
9001e486:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
9001e48a:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001e48e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001e492:	ea4a 0606 	orr.w	r6, sl, r6
9001e496:	f105 0a01 	add.w	sl, r5, #1
9001e49a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001e49e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001e4a2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001e4a6:	ea46 060a 	orr.w	r6, r6, sl
9001e4aa:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
9001e4ae:	e7b4      	b.n	9001e41a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
9001e4b0:	b007      	add	sp, #28
9001e4b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001e4b6:	bf00      	nop
9001e4b8:	240236dc 	.word	0x240236dc

9001e4bc <_ZN8touchgfx8LCD16bppD1Ev>:
9001e4bc:	4770      	bx	lr

9001e4be <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
9001e4be:	4770      	bx	lr

9001e4c0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
9001e4c0:	4770      	bx	lr

9001e4c2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
9001e4c2:	4770      	bx	lr

9001e4c4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
9001e4c4:	4770      	bx	lr

9001e4c6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
9001e4c6:	4770      	bx	lr

9001e4c8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
9001e4c8:	4770      	bx	lr

9001e4ca <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
9001e4ca:	4770      	bx	lr

9001e4cc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
9001e4cc:	4770      	bx	lr

9001e4ce <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
9001e4ce:	4770      	bx	lr

9001e4d0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
9001e4d0:	4770      	bx	lr

9001e4d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
9001e4d2:	4770      	bx	lr

9001e4d4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
9001e4d4:	4770      	bx	lr

9001e4d6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
9001e4d6:	4770      	bx	lr

9001e4d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
9001e4d8:	4770      	bx	lr

9001e4da <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
9001e4da:	4770      	bx	lr

9001e4dc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
9001e4dc:	4770      	bx	lr

9001e4de <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
9001e4de:	4770      	bx	lr

9001e4e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
9001e4e0:	4770      	bx	lr

9001e4e2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
9001e4e2:	4770      	bx	lr

9001e4e4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
9001e4e4:	4770      	bx	lr

9001e4e6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
9001e4e6:	4770      	bx	lr

9001e4e8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
9001e4e8:	4770      	bx	lr

9001e4ea <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
9001e4ea:	4770      	bx	lr

9001e4ec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
9001e4ec:	4770      	bx	lr

9001e4ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
9001e4ee:	4770      	bx	lr

9001e4f0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
9001e4f0:	4770      	bx	lr

9001e4f2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
9001e4f2:	4770      	bx	lr

9001e4f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
9001e4f4:	4770      	bx	lr

9001e4f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
9001e4f6:	4770      	bx	lr

9001e4f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
9001e4f8:	4770      	bx	lr

9001e4fa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
9001e4fa:	4770      	bx	lr

9001e4fc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
9001e4fc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001e500:	b088      	sub	sp, #32
9001e502:	4606      	mov	r6, r0
9001e504:	4688      	mov	r8, r1
9001e506:	4691      	mov	r9, r2
9001e508:	ac08      	add	r4, sp, #32
9001e50a:	f824 3d0c 	strh.w	r3, [r4, #-12]!
9001e50e:	4620      	mov	r0, r4
9001e510:	f7fd fc64 	bl	9001bddc <_ZNK8touchgfx6Bitmap7getDataEv>
9001e514:	6833      	ldr	r3, [r6, #0]
9001e516:	4605      	mov	r5, r0
9001e518:	4620      	mov	r0, r4
9001e51a:	699f      	ldr	r7, [r3, #24]
9001e51c:	f7fd fb72 	bl	9001bc04 <_ZNK8touchgfx6Bitmap8getWidthEv>
9001e520:	4682      	mov	sl, r0
9001e522:	4620      	mov	r0, r4
9001e524:	f7fd fba2 	bl	9001bc6c <_ZNK8touchgfx6Bitmap9getHeightEv>
9001e528:	9500      	str	r5, [sp, #0]
9001e52a:	464b      	mov	r3, r9
9001e52c:	4642      	mov	r2, r8
9001e52e:	4631      	mov	r1, r6
9001e530:	e9cd a001 	strd	sl, r0, [sp, #4]
9001e534:	a806      	add	r0, sp, #24
9001e536:	47b8      	blx	r7
9001e538:	4628      	mov	r0, r5
9001e53a:	b008      	add	sp, #32
9001e53c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

9001e540 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
9001e540:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
9001e544:	2300      	movs	r3, #0
9001e546:	9300      	str	r3, [sp, #0]
9001e548:	4b3d      	ldr	r3, [pc, #244]	; (9001e640 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
9001e54a:	781b      	ldrb	r3, [r3, #0]
9001e54c:	2b00      	cmp	r3, #0
9001e54e:	d137      	bne.n	9001e5c0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
9001e550:	4a3c      	ldr	r2, [pc, #240]	; (9001e644 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
9001e552:	f9b2 2000 	ldrsh.w	r2, [r2]
9001e556:	f8ad 2004 	strh.w	r2, [sp, #4]
9001e55a:	2b00      	cmp	r3, #0
9001e55c:	d132      	bne.n	9001e5c4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
9001e55e:	4b3a      	ldr	r3, [pc, #232]	; (9001e648 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
9001e560:	f9b3 3000 	ldrsh.w	r3, [r3]
9001e564:	ac02      	add	r4, sp, #8
9001e566:	6808      	ldr	r0, [r1, #0]
9001e568:	f8ad 3006 	strh.w	r3, [sp, #6]
9001e56c:	ab02      	add	r3, sp, #8
9001e56e:	6849      	ldr	r1, [r1, #4]
9001e570:	4d36      	ldr	r5, [pc, #216]	; (9001e64c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
9001e572:	c303      	stmia	r3!, {r0, r1}
9001e574:	4669      	mov	r1, sp
9001e576:	4620      	mov	r0, r4
9001e578:	f7fa f892 	bl	900186a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001e57c:	4668      	mov	r0, sp
9001e57e:	f7fa f84b 	bl	90018618 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001e582:	f8bd 3008 	ldrh.w	r3, [sp, #8]
9001e586:	f8bd 2000 	ldrh.w	r2, [sp]
9001e58a:	462f      	mov	r7, r5
9001e58c:	6828      	ldr	r0, [r5, #0]
9001e58e:	4413      	add	r3, r2
9001e590:	f8bd 2002 	ldrh.w	r2, [sp, #2]
9001e594:	f8ad 3008 	strh.w	r3, [sp, #8]
9001e598:	f8bd 300a 	ldrh.w	r3, [sp, #10]
9001e59c:	4413      	add	r3, r2
9001e59e:	f8ad 300a 	strh.w	r3, [sp, #10]
9001e5a2:	6803      	ldr	r3, [r0, #0]
9001e5a4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001e5a6:	4798      	blx	r3
9001e5a8:	f010 0f01 	tst.w	r0, #1
9001e5ac:	d00c      	beq.n	9001e5c8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
9001e5ae:	6828      	ldr	r0, [r5, #0]
9001e5b0:	6803      	ldr	r3, [r0, #0]
9001e5b2:	e894 0006 	ldmia.w	r4, {r1, r2}
9001e5b6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
9001e5b8:	4798      	blx	r3
9001e5ba:	b004      	add	sp, #16
9001e5bc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001e5c0:	4a21      	ldr	r2, [pc, #132]	; (9001e648 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
9001e5c2:	e7c6      	b.n	9001e552 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
9001e5c4:	4b1f      	ldr	r3, [pc, #124]	; (9001e644 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
9001e5c6:	e7cb      	b.n	9001e560 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
9001e5c8:	6838      	ldr	r0, [r7, #0]
9001e5ca:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
9001e5ce:	6803      	ldr	r3, [r0, #0]
9001e5d0:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
9001e5d4:	ea4f 0848 	mov.w	r8, r8, lsl #1
9001e5d8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9001e5da:	4798      	blx	r3
9001e5dc:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
9001e5e0:	f8bd 200a 	ldrh.w	r2, [sp, #10]
9001e5e4:	f8bd 6004 	ldrh.w	r6, [sp, #4]
9001e5e8:	fb16 3602 	smlabb	r6, r6, r2, r3
9001e5ec:	eb00 0646 	add.w	r6, r0, r6, lsl #1
9001e5f0:	6838      	ldr	r0, [r7, #0]
9001e5f2:	6803      	ldr	r3, [r0, #0]
9001e5f4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001e5f6:	4798      	blx	r3
9001e5f8:	4a12      	ldr	r2, [pc, #72]	; (9001e644 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
9001e5fa:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
9001e5fe:	8813      	ldrh	r3, [r2, #0]
9001e600:	4691      	mov	r9, r2
9001e602:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
9001e606:	435d      	muls	r5, r3
9001e608:	fb03 1404 	mla	r4, r3, r4, r1
9001e60c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9001e610:	eb04 0545 	add.w	r5, r4, r5, lsl #1
9001e614:	6838      	ldr	r0, [r7, #0]
9001e616:	42ac      	cmp	r4, r5
9001e618:	6803      	ldr	r3, [r0, #0]
9001e61a:	d20e      	bcs.n	9001e63a <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
9001e61c:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
9001e620:	4632      	mov	r2, r6
9001e622:	4643      	mov	r3, r8
9001e624:	4621      	mov	r1, r4
9001e626:	47d0      	blx	sl
9001e628:	f8b9 3000 	ldrh.w	r3, [r9]
9001e62c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001e630:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
9001e634:	eb06 0643 	add.w	r6, r6, r3, lsl #1
9001e638:	e7ec      	b.n	9001e614 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
9001e63a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001e63c:	4798      	blx	r3
9001e63e:	e7bc      	b.n	9001e5ba <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
9001e640:	240236c4 	.word	0x240236c4
9001e644:	240236c6 	.word	0x240236c6
9001e648:	240236c8 	.word	0x240236c8
9001e64c:	240236cc 	.word	0x240236cc

9001e650 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
9001e650:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001e654:	b08b      	sub	sp, #44	; 0x2c
9001e656:	460f      	mov	r7, r1
9001e658:	4616      	mov	r6, r2
9001e65a:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
9001e65e:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
9001e662:	f1bb 0f00 	cmp.w	fp, #0
9001e666:	d04a      	beq.n	9001e6fe <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
9001e668:	6810      	ldr	r0, [r2, #0]
9001e66a:	ad06      	add	r5, sp, #24
9001e66c:	6851      	ldr	r1, [r2, #4]
9001e66e:	c503      	stmia	r5!, {r0, r1}
9001e670:	6818      	ldr	r0, [r3, #0]
9001e672:	ad08      	add	r5, sp, #32
9001e674:	6859      	ldr	r1, [r3, #4]
9001e676:	c503      	stmia	r5!, {r0, r1}
9001e678:	a806      	add	r0, sp, #24
9001e67a:	f7f9 ffcd 	bl	90018618 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001e67e:	4631      	mov	r1, r6
9001e680:	a808      	add	r0, sp, #32
9001e682:	f7fa f80d 	bl	900186a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001e686:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
9001e68a:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
9001e68e:	f8bd 601c 	ldrh.w	r6, [sp, #28]
9001e692:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
9001e696:	fb16 2103 	smlabb	r1, r6, r3, r2
9001e69a:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
9001e69e:	eb07 0641 	add.w	r6, r7, r1, lsl #1
9001e6a2:	f8bd 1018 	ldrh.w	r1, [sp, #24]
9001e6a6:	4f5f      	ldr	r7, [pc, #380]	; (9001e824 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
9001e6a8:	440a      	add	r2, r1
9001e6aa:	6838      	ldr	r0, [r7, #0]
9001e6ac:	46b9      	mov	r9, r7
9001e6ae:	f8ad 2020 	strh.w	r2, [sp, #32]
9001e6b2:	f8bd 201a 	ldrh.w	r2, [sp, #26]
9001e6b6:	4413      	add	r3, r2
9001e6b8:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
9001e6bc:	6803      	ldr	r3, [r0, #0]
9001e6be:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001e6c0:	4798      	blx	r3
9001e6c2:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
9001e6c6:	d11d      	bne.n	9001e704 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
9001e6c8:	b9fc      	cbnz	r4, 9001e70a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
9001e6ca:	f010 0f01 	tst.w	r0, #1
9001e6ce:	d01c      	beq.n	9001e70a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
9001e6d0:	f8d9 0000 	ldr.w	r0, [r9]
9001e6d4:	2700      	movs	r7, #0
9001e6d6:	b2ad      	uxth	r5, r5
9001e6d8:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
9001e6dc:	6801      	ldr	r1, [r0, #0]
9001e6de:	f8bd 2020 	ldrh.w	r2, [sp, #32]
9001e6e2:	f8cd b00c 	str.w	fp, [sp, #12]
9001e6e6:	9501      	str	r5, [sp, #4]
9001e6e8:	e9cd 4704 	strd	r4, r7, [sp, #16]
9001e6ec:	f8bd 401c 	ldrh.w	r4, [sp, #28]
9001e6f0:	9402      	str	r4, [sp, #8]
9001e6f2:	fa1f f488 	uxth.w	r4, r8
9001e6f6:	9400      	str	r4, [sp, #0]
9001e6f8:	6c4c      	ldr	r4, [r1, #68]	; 0x44
9001e6fa:	4631      	mov	r1, r6
9001e6fc:	47a0      	blx	r4
9001e6fe:	b00b      	add	sp, #44	; 0x2c
9001e700:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001e704:	f010 0f04 	tst.w	r0, #4
9001e708:	e7e1      	b.n	9001e6ce <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
9001e70a:	f8d9 0000 	ldr.w	r0, [r9]
9001e70e:	ea4f 0748 	mov.w	r7, r8, lsl #1
9001e712:	6803      	ldr	r3, [r0, #0]
9001e714:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001e716:	4798      	blx	r3
9001e718:	4b43      	ldr	r3, [pc, #268]	; (9001e828 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
9001e71a:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
9001e71e:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
9001e722:	881a      	ldrh	r2, [r3, #0]
9001e724:	469a      	mov	sl, r3
9001e726:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
9001e72a:	fb05 f502 	mul.w	r5, r5, r2
9001e72e:	fb02 1404 	mla	r4, r2, r4, r1
9001e732:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9001e736:	d059      	beq.n	9001e7ec <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
9001e738:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
9001e73c:	eb04 0545 	add.w	r5, r4, r5, lsl #1
9001e740:	fa1f f28b 	uxth.w	r2, fp
9001e744:	469e      	mov	lr, r3
9001e746:	fa1f f989 	uxth.w	r9, r9
9001e74a:	42ac      	cmp	r4, r5
9001e74c:	d264      	bcs.n	9001e818 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
9001e74e:	eb04 0a07 	add.w	sl, r4, r7
9001e752:	4554      	cmp	r4, sl
9001e754:	d23d      	bcs.n	9001e7d2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
9001e756:	8821      	ldrh	r1, [r4, #0]
9001e758:	f836 3b02 	ldrh.w	r3, [r6], #2
9001e75c:	1208      	asrs	r0, r1, #8
9001e75e:	ea4f 2c23 	mov.w	ip, r3, asr #8
9001e762:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
9001e766:	ea4f 0be1 	mov.w	fp, r1, asr #3
9001e76a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001e76e:	00c9      	lsls	r1, r1, #3
9001e770:	fb10 f009 	smulbb	r0, r0, r9
9001e774:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
9001e778:	b2c9      	uxtb	r1, r1
9001e77a:	fb0c 0c02 	mla	ip, ip, r2, r0
9001e77e:	10d8      	asrs	r0, r3, #3
9001e780:	fb1b fb09 	smulbb	fp, fp, r9
9001e784:	00db      	lsls	r3, r3, #3
9001e786:	fa1f fc8c 	uxth.w	ip, ip
9001e78a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
9001e78e:	fb11 f109 	smulbb	r1, r1, r9
9001e792:	b2db      	uxtb	r3, r3
9001e794:	fb00 b002 	mla	r0, r0, r2, fp
9001e798:	f10c 0b01 	add.w	fp, ip, #1
9001e79c:	fb03 1302 	mla	r3, r3, r2, r1
9001e7a0:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
9001e7a4:	b29b      	uxth	r3, r3
9001e7a6:	b280      	uxth	r0, r0
9001e7a8:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
9001e7ac:	f103 0c01 	add.w	ip, r3, #1
9001e7b0:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
9001e7b4:	1c43      	adds	r3, r0, #1
9001e7b6:	eb03 2010 	add.w	r0, r3, r0, lsr #8
9001e7ba:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9001e7be:	0940      	lsrs	r0, r0, #5
9001e7c0:	ea4c 0c0b 	orr.w	ip, ip, fp
9001e7c4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9001e7c8:	ea4c 0c00 	orr.w	ip, ip, r0
9001e7cc:	f824 cb02 	strh.w	ip, [r4], #2
9001e7d0:	e7bf      	b.n	9001e752 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
9001e7d2:	f8be 3000 	ldrh.w	r3, [lr]
9001e7d6:	eba3 0308 	sub.w	r3, r3, r8
9001e7da:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001e7de:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
9001e7e2:	eba3 0308 	sub.w	r3, r3, r8
9001e7e6:	eb06 0643 	add.w	r6, r6, r3, lsl #1
9001e7ea:	e7ae      	b.n	9001e74a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
9001e7ec:	eb04 0545 	add.w	r5, r4, r5, lsl #1
9001e7f0:	f8d9 0000 	ldr.w	r0, [r9]
9001e7f4:	42ac      	cmp	r4, r5
9001e7f6:	6803      	ldr	r3, [r0, #0]
9001e7f8:	d20e      	bcs.n	9001e818 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
9001e7fa:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
9001e7fe:	4632      	mov	r2, r6
9001e800:	463b      	mov	r3, r7
9001e802:	4621      	mov	r1, r4
9001e804:	47c0      	blx	r8
9001e806:	f8ba 3000 	ldrh.w	r3, [sl]
9001e80a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001e80e:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
9001e812:	eb06 0643 	add.w	r6, r6, r3, lsl #1
9001e816:	e7eb      	b.n	9001e7f0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
9001e818:	4b02      	ldr	r3, [pc, #8]	; (9001e824 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
9001e81a:	6818      	ldr	r0, [r3, #0]
9001e81c:	6803      	ldr	r3, [r0, #0]
9001e81e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001e820:	4798      	blx	r3
9001e822:	e76c      	b.n	9001e6fe <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
9001e824:	240236cc 	.word	0x240236cc
9001e828:	240236c6 	.word	0x240236c6

9001e82c <_ZN8touchgfx8LCD16bppD0Ev>:
9001e82c:	b510      	push	{r4, lr}
9001e82e:	4604      	mov	r4, r0
9001e830:	2188      	movs	r1, #136	; 0x88
9001e832:	f00b f9f4 	bl	90029c1e <_ZdlPvj>
9001e836:	4620      	mov	r0, r4
9001e838:	bd10      	pop	{r4, pc}

9001e83a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
9001e83a:	b510      	push	{r4, lr}
9001e83c:	4604      	mov	r4, r0
9001e83e:	2104      	movs	r1, #4
9001e840:	f00b f9ed 	bl	90029c1e <_ZdlPvj>
9001e844:	4620      	mov	r0, r4
9001e846:	bd10      	pop	{r4, pc}

9001e848 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
9001e848:	b510      	push	{r4, lr}
9001e84a:	4604      	mov	r4, r0
9001e84c:	2104      	movs	r1, #4
9001e84e:	f00b f9e6 	bl	90029c1e <_ZdlPvj>
9001e852:	4620      	mov	r0, r4
9001e854:	bd10      	pop	{r4, pc}

9001e856 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
9001e856:	b510      	push	{r4, lr}
9001e858:	4604      	mov	r4, r0
9001e85a:	f640 0144 	movw	r1, #2116	; 0x844
9001e85e:	f00b f9de 	bl	90029c1e <_ZdlPvj>
9001e862:	4620      	mov	r0, r4
9001e864:	bd10      	pop	{r4, pc}

9001e866 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
9001e866:	b510      	push	{r4, lr}
9001e868:	4604      	mov	r4, r0
9001e86a:	2104      	movs	r1, #4
9001e86c:	f00b f9d7 	bl	90029c1e <_ZdlPvj>
9001e870:	4620      	mov	r0, r4
9001e872:	bd10      	pop	{r4, pc}

9001e874 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
9001e874:	b510      	push	{r4, lr}
9001e876:	4604      	mov	r4, r0
9001e878:	2104      	movs	r1, #4
9001e87a:	f00b f9d0 	bl	90029c1e <_ZdlPvj>
9001e87e:	4620      	mov	r0, r4
9001e880:	bd10      	pop	{r4, pc}

9001e882 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
9001e882:	b510      	push	{r4, lr}
9001e884:	4604      	mov	r4, r0
9001e886:	2104      	movs	r1, #4
9001e888:	f00b f9c9 	bl	90029c1e <_ZdlPvj>
9001e88c:	4620      	mov	r0, r4
9001e88e:	bd10      	pop	{r4, pc}

9001e890 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
9001e890:	b510      	push	{r4, lr}
9001e892:	4604      	mov	r4, r0
9001e894:	2104      	movs	r1, #4
9001e896:	f00b f9c2 	bl	90029c1e <_ZdlPvj>
9001e89a:	4620      	mov	r0, r4
9001e89c:	bd10      	pop	{r4, pc}

9001e89e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
9001e89e:	b510      	push	{r4, lr}
9001e8a0:	4604      	mov	r4, r0
9001e8a2:	2104      	movs	r1, #4
9001e8a4:	f00b f9bb 	bl	90029c1e <_ZdlPvj>
9001e8a8:	4620      	mov	r0, r4
9001e8aa:	bd10      	pop	{r4, pc}

9001e8ac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
9001e8ac:	b510      	push	{r4, lr}
9001e8ae:	4604      	mov	r4, r0
9001e8b0:	2104      	movs	r1, #4
9001e8b2:	f00b f9b4 	bl	90029c1e <_ZdlPvj>
9001e8b6:	4620      	mov	r0, r4
9001e8b8:	bd10      	pop	{r4, pc}

9001e8ba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
9001e8ba:	b510      	push	{r4, lr}
9001e8bc:	4604      	mov	r4, r0
9001e8be:	2104      	movs	r1, #4
9001e8c0:	f00b f9ad 	bl	90029c1e <_ZdlPvj>
9001e8c4:	4620      	mov	r0, r4
9001e8c6:	bd10      	pop	{r4, pc}

9001e8c8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
9001e8c8:	b510      	push	{r4, lr}
9001e8ca:	4604      	mov	r4, r0
9001e8cc:	2104      	movs	r1, #4
9001e8ce:	f00b f9a6 	bl	90029c1e <_ZdlPvj>
9001e8d2:	4620      	mov	r0, r4
9001e8d4:	bd10      	pop	{r4, pc}

9001e8d6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
9001e8d6:	b510      	push	{r4, lr}
9001e8d8:	4604      	mov	r4, r0
9001e8da:	2104      	movs	r1, #4
9001e8dc:	f00b f99f 	bl	90029c1e <_ZdlPvj>
9001e8e0:	4620      	mov	r0, r4
9001e8e2:	bd10      	pop	{r4, pc}

9001e8e4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
9001e8e4:	b510      	push	{r4, lr}
9001e8e6:	4604      	mov	r4, r0
9001e8e8:	2104      	movs	r1, #4
9001e8ea:	f00b f998 	bl	90029c1e <_ZdlPvj>
9001e8ee:	4620      	mov	r0, r4
9001e8f0:	bd10      	pop	{r4, pc}

9001e8f2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
9001e8f2:	b510      	push	{r4, lr}
9001e8f4:	4604      	mov	r4, r0
9001e8f6:	2104      	movs	r1, #4
9001e8f8:	f00b f991 	bl	90029c1e <_ZdlPvj>
9001e8fc:	4620      	mov	r0, r4
9001e8fe:	bd10      	pop	{r4, pc}

9001e900 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
9001e900:	b510      	push	{r4, lr}
9001e902:	4604      	mov	r4, r0
9001e904:	2104      	movs	r1, #4
9001e906:	f00b f98a 	bl	90029c1e <_ZdlPvj>
9001e90a:	4620      	mov	r0, r4
9001e90c:	bd10      	pop	{r4, pc}

9001e90e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
9001e90e:	b510      	push	{r4, lr}
9001e910:	4604      	mov	r4, r0
9001e912:	2104      	movs	r1, #4
9001e914:	f00b f983 	bl	90029c1e <_ZdlPvj>
9001e918:	4620      	mov	r0, r4
9001e91a:	bd10      	pop	{r4, pc}

9001e91c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
9001e91c:	b510      	push	{r4, lr}
9001e91e:	4604      	mov	r4, r0
9001e920:	2104      	movs	r1, #4
9001e922:	f00b f97c 	bl	90029c1e <_ZdlPvj>
9001e926:	4620      	mov	r0, r4
9001e928:	bd10      	pop	{r4, pc}

9001e92a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
9001e92a:	b510      	push	{r4, lr}
9001e92c:	4604      	mov	r4, r0
9001e92e:	2104      	movs	r1, #4
9001e930:	f00b f975 	bl	90029c1e <_ZdlPvj>
9001e934:	4620      	mov	r0, r4
9001e936:	bd10      	pop	{r4, pc}

9001e938 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
9001e938:	b510      	push	{r4, lr}
9001e93a:	4604      	mov	r4, r0
9001e93c:	2104      	movs	r1, #4
9001e93e:	f00b f96e 	bl	90029c1e <_ZdlPvj>
9001e942:	4620      	mov	r0, r4
9001e944:	bd10      	pop	{r4, pc}

9001e946 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
9001e946:	b510      	push	{r4, lr}
9001e948:	4604      	mov	r4, r0
9001e94a:	2104      	movs	r1, #4
9001e94c:	f00b f967 	bl	90029c1e <_ZdlPvj>
9001e950:	4620      	mov	r0, r4
9001e952:	bd10      	pop	{r4, pc}

9001e954 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
9001e954:	b510      	push	{r4, lr}
9001e956:	4604      	mov	r4, r0
9001e958:	2104      	movs	r1, #4
9001e95a:	f00b f960 	bl	90029c1e <_ZdlPvj>
9001e95e:	4620      	mov	r0, r4
9001e960:	bd10      	pop	{r4, pc}

9001e962 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
9001e962:	b510      	push	{r4, lr}
9001e964:	4604      	mov	r4, r0
9001e966:	2104      	movs	r1, #4
9001e968:	f00b f959 	bl	90029c1e <_ZdlPvj>
9001e96c:	4620      	mov	r0, r4
9001e96e:	bd10      	pop	{r4, pc}

9001e970 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
9001e970:	b510      	push	{r4, lr}
9001e972:	4604      	mov	r4, r0
9001e974:	2104      	movs	r1, #4
9001e976:	f00b f952 	bl	90029c1e <_ZdlPvj>
9001e97a:	4620      	mov	r0, r4
9001e97c:	bd10      	pop	{r4, pc}

9001e97e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
9001e97e:	b510      	push	{r4, lr}
9001e980:	4604      	mov	r4, r0
9001e982:	2104      	movs	r1, #4
9001e984:	f00b f94b 	bl	90029c1e <_ZdlPvj>
9001e988:	4620      	mov	r0, r4
9001e98a:	bd10      	pop	{r4, pc}

9001e98c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
9001e98c:	b510      	push	{r4, lr}
9001e98e:	4604      	mov	r4, r0
9001e990:	2104      	movs	r1, #4
9001e992:	f00b f944 	bl	90029c1e <_ZdlPvj>
9001e996:	4620      	mov	r0, r4
9001e998:	bd10      	pop	{r4, pc}

9001e99a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
9001e99a:	b510      	push	{r4, lr}
9001e99c:	4604      	mov	r4, r0
9001e99e:	2104      	movs	r1, #4
9001e9a0:	f00b f93d 	bl	90029c1e <_ZdlPvj>
9001e9a4:	4620      	mov	r0, r4
9001e9a6:	bd10      	pop	{r4, pc}

9001e9a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
9001e9a8:	b510      	push	{r4, lr}
9001e9aa:	4604      	mov	r4, r0
9001e9ac:	2104      	movs	r1, #4
9001e9ae:	f00b f936 	bl	90029c1e <_ZdlPvj>
9001e9b2:	4620      	mov	r0, r4
9001e9b4:	bd10      	pop	{r4, pc}

9001e9b6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
9001e9b6:	b510      	push	{r4, lr}
9001e9b8:	4604      	mov	r4, r0
9001e9ba:	2104      	movs	r1, #4
9001e9bc:	f00b f92f 	bl	90029c1e <_ZdlPvj>
9001e9c0:	4620      	mov	r0, r4
9001e9c2:	bd10      	pop	{r4, pc}

9001e9c4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
9001e9c4:	b510      	push	{r4, lr}
9001e9c6:	4604      	mov	r4, r0
9001e9c8:	2104      	movs	r1, #4
9001e9ca:	f00b f928 	bl	90029c1e <_ZdlPvj>
9001e9ce:	4620      	mov	r0, r4
9001e9d0:	bd10      	pop	{r4, pc}

9001e9d2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
9001e9d2:	b510      	push	{r4, lr}
9001e9d4:	4604      	mov	r4, r0
9001e9d6:	2104      	movs	r1, #4
9001e9d8:	f00b f921 	bl	90029c1e <_ZdlPvj>
9001e9dc:	4620      	mov	r0, r4
9001e9de:	bd10      	pop	{r4, pc}

9001e9e0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
9001e9e0:	b510      	push	{r4, lr}
9001e9e2:	4604      	mov	r4, r0
9001e9e4:	2104      	movs	r1, #4
9001e9e6:	f00b f91a 	bl	90029c1e <_ZdlPvj>
9001e9ea:	4620      	mov	r0, r4
9001e9ec:	bd10      	pop	{r4, pc}
	...

9001e9f0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
9001e9f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001e9f4:	b08f      	sub	sp, #60	; 0x3c
9001e9f6:	461c      	mov	r4, r3
9001e9f8:	9205      	str	r2, [sp, #20]
9001e9fa:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
9001e9fe:	9100      	str	r1, [sp, #0]
9001ea00:	9b18      	ldr	r3, [sp, #96]	; 0x60
9001ea02:	9201      	str	r2, [sp, #4]
9001ea04:	2a00      	cmp	r2, #0
9001ea06:	f000 8116 	beq.w	9001ec36 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x246>
9001ea0a:	6820      	ldr	r0, [r4, #0]
9001ea0c:	aa0a      	add	r2, sp, #40	; 0x28
9001ea0e:	6861      	ldr	r1, [r4, #4]
9001ea10:	c203      	stmia	r2!, {r0, r1}
9001ea12:	6818      	ldr	r0, [r3, #0]
9001ea14:	aa0c      	add	r2, sp, #48	; 0x30
9001ea16:	6859      	ldr	r1, [r3, #4]
9001ea18:	c203      	stmia	r2!, {r0, r1}
9001ea1a:	a80a      	add	r0, sp, #40	; 0x28
9001ea1c:	f7f9 fdfc 	bl	90018618 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001ea20:	4621      	mov	r1, r4
9001ea22:	a80c      	add	r0, sp, #48	; 0x30
9001ea24:	f7f9 fe3c 	bl	900186a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001ea28:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
9001ea2c:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
9001ea30:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
9001ea34:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
9001ea38:	bfdb      	ittet	le
9001ea3a:	b2b3      	uxthle	r3, r6
9001ea3c:	f44f 6280 	movle.w	r2, #1024	; 0x400
9001ea40:	2301      	movgt	r3, #1
9001ea42:	fb92 f3f3 	sdivle	r3, r2, r3
9001ea46:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
9001ea4a:	441d      	add	r5, r3
9001ea4c:	fb92 f1f3 	sdiv	r1, r2, r3
9001ea50:	fa1f fc81 	uxth.w	ip, r1
9001ea54:	3d01      	subs	r5, #1
9001ea56:	fb0c 2413 	mls	r4, ip, r3, r2
9001ea5a:	4661      	mov	r1, ip
9001ea5c:	fb14 f406 	smulbb	r4, r4, r6
9001ea60:	4404      	add	r4, r0
9001ea62:	fb95 f5f3 	sdiv	r5, r5, r3
9001ea66:	b2a4      	uxth	r4, r4
9001ea68:	b131      	cbz	r1, 9001ea78 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x88>
9001ea6a:	9b05      	ldr	r3, [sp, #20]
9001ea6c:	9900      	ldr	r1, [sp, #0]
9001ea6e:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
9001ea72:	ba1b      	rev	r3, r3
9001ea74:	4419      	add	r1, r3
9001ea76:	9100      	str	r1, [sp, #0]
9001ea78:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
9001ea7c:	b2ad      	uxth	r5, r5
9001ea7e:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
9001ea82:	4418      	add	r0, r3
9001ea84:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
9001ea88:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
9001ea8c:	00ad      	lsls	r5, r5, #2
9001ea8e:	441a      	add	r2, r3
9001ea90:	4b6a      	ldr	r3, [pc, #424]	; (9001ec3c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
9001ea92:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
9001ea96:	6818      	ldr	r0, [r3, #0]
9001ea98:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
9001ea9c:	6803      	ldr	r3, [r0, #0]
9001ea9e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001eaa0:	4798      	blx	r3
9001eaa2:	4967      	ldr	r1, [pc, #412]	; (9001ec40 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
9001eaa4:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
9001eaa8:	2c00      	cmp	r4, #0
9001eaaa:	880b      	ldrh	r3, [r1, #0]
9001eaac:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
9001eab0:	bf0c      	ite	eq
9001eab2:	46c6      	moveq	lr, r8
9001eab4:	f04f 0e00 	movne.w	lr, #0
9001eab8:	9109      	str	r1, [sp, #36]	; 0x24
9001eaba:	fb03 c202 	mla	r2, r3, r2, ip
9001eabe:	f8bd 1004 	ldrh.w	r1, [sp, #4]
9001eac2:	4373      	muls	r3, r6
9001eac4:	fa1f fe8e 	uxth.w	lr, lr
9001eac8:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001eacc:	9103      	str	r1, [sp, #12]
9001eace:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001ead2:	9306      	str	r3, [sp, #24]
9001ead4:	1d2b      	adds	r3, r5, #4
9001ead6:	9307      	str	r3, [sp, #28]
9001ead8:	9b01      	ldr	r3, [sp, #4]
9001eada:	f1c3 02ff 	rsb	r2, r3, #255	; 0xff
9001eade:	2300      	movs	r3, #0
9001eae0:	b292      	uxth	r2, r2
9001eae2:	9302      	str	r3, [sp, #8]
9001eae4:	9204      	str	r2, [sp, #16]
9001eae6:	9a06      	ldr	r2, [sp, #24]
9001eae8:	4282      	cmp	r2, r0
9001eaea:	f240 809f 	bls.w	9001ec2c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23c>
9001eaee:	b963      	cbnz	r3, 9001eb0a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
9001eaf0:	9b00      	ldr	r3, [sp, #0]
9001eaf2:	781a      	ldrb	r2, [r3, #0]
9001eaf4:	0993      	lsrs	r3, r2, #6
9001eaf6:	f002 023f 	and.w	r2, r2, #63	; 0x3f
9001eafa:	9202      	str	r2, [sp, #8]
9001eafc:	1e5a      	subs	r2, r3, #1
9001eafe:	2a02      	cmp	r2, #2
9001eb00:	d815      	bhi.n	9001eb2e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
9001eb02:	9a00      	ldr	r2, [sp, #0]
9001eb04:	b29b      	uxth	r3, r3
9001eb06:	3201      	adds	r2, #1
9001eb08:	9200      	str	r2, [sp, #0]
9001eb0a:	b1b4      	cbz	r4, 9001eb3a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14a>
9001eb0c:	429c      	cmp	r4, r3
9001eb0e:	bf91      	iteee	ls
9001eb10:	1b1c      	subls	r4, r3, r4
9001eb12:	1ae4      	subhi	r4, r4, r3
9001eb14:	4671      	movhi	r1, lr
9001eb16:	f04f 0a00 	movhi.w	sl, #0
9001eb1a:	bf9b      	ittet	ls
9001eb1c:	fa1f fa84 	uxthls.w	sl, r4
9001eb20:	2400      	movls	r4, #0
9001eb22:	b2a4      	uxthhi	r4, r4
9001eb24:	fa1f f188 	uxthls.w	r1, r8
9001eb28:	4653      	mov	r3, sl
9001eb2a:	468e      	mov	lr, r1
9001eb2c:	e7db      	b.n	9001eae6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf6>
9001eb2e:	9a00      	ldr	r2, [sp, #0]
9001eb30:	9b00      	ldr	r3, [sp, #0]
9001eb32:	3202      	adds	r2, #2
9001eb34:	785b      	ldrb	r3, [r3, #1]
9001eb36:	9200      	str	r2, [sp, #0]
9001eb38:	e7e7      	b.n	9001eb0a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
9001eb3a:	2202      	movs	r2, #2
9001eb3c:	9907      	ldr	r1, [sp, #28]
9001eb3e:	4573      	cmp	r3, lr
9001eb40:	4615      	mov	r5, r2
9001eb42:	9a02      	ldr	r2, [sp, #8]
9001eb44:	bf24      	itt	cs
9001eb46:	eba3 0a0e 	subcs.w	sl, r3, lr
9001eb4a:	46f1      	movcs	r9, lr
9001eb4c:	fb15 1202 	smlabb	r2, r5, r2, r1
9001eb50:	9905      	ldr	r1, [sp, #20]
9001eb52:	bf34      	ite	cc
9001eb54:	4699      	movcc	r9, r3
9001eb56:	fa1f fa8a 	uxthcs.w	sl, sl
9001eb5a:	f831 c002 	ldrh.w	ip, [r1, r2]
9001eb5e:	bf38      	it	cc
9001eb60:	ebae 0103 	subcc.w	r1, lr, r3
9001eb64:	9a01      	ldr	r2, [sp, #4]
9001eb66:	bf2e      	itee	cs
9001eb68:	4621      	movcs	r1, r4
9001eb6a:	b289      	uxthcc	r1, r1
9001eb6c:	46a2      	movcc	sl, r4
9001eb6e:	2aff      	cmp	r2, #255	; 0xff
9001eb70:	ea4f 0949 	mov.w	r9, r9, lsl #1
9001eb74:	d105      	bne.n	9001eb82 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x192>
9001eb76:	4481      	add	r9, r0
9001eb78:	4581      	cmp	r9, r0
9001eb7a:	d045      	beq.n	9001ec08 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
9001eb7c:	f820 cb02 	strh.w	ip, [r0], #2
9001eb80:	e7fa      	b.n	9001eb78 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x188>
9001eb82:	ea4f 222c 	mov.w	r2, ip, asr #8
9001eb86:	9d03      	ldr	r5, [sp, #12]
9001eb88:	ea4f 0bec 	mov.w	fp, ip, asr #3
9001eb8c:	4481      	add	r9, r0
9001eb8e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001eb92:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
9001eb96:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
9001eb9a:	fa5f fc8c 	uxtb.w	ip, ip
9001eb9e:	436a      	muls	r2, r5
9001eba0:	fb0b fb05 	mul.w	fp, fp, r5
9001eba4:	fb0c fc05 	mul.w	ip, ip, r5
9001eba8:	9208      	str	r2, [sp, #32]
9001ebaa:	4581      	cmp	r9, r0
9001ebac:	d02c      	beq.n	9001ec08 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
9001ebae:	8802      	ldrh	r2, [r0, #0]
9001ebb0:	9d04      	ldr	r5, [sp, #16]
9001ebb2:	1216      	asrs	r6, r2, #8
9001ebb4:	9f04      	ldr	r7, [sp, #16]
9001ebb6:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001ebba:	fb16 f605 	smulbb	r6, r6, r5
9001ebbe:	9d08      	ldr	r5, [sp, #32]
9001ebc0:	442e      	add	r6, r5
9001ebc2:	10d5      	asrs	r5, r2, #3
9001ebc4:	00d2      	lsls	r2, r2, #3
9001ebc6:	b2b6      	uxth	r6, r6
9001ebc8:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
9001ebcc:	b2d2      	uxtb	r2, r2
9001ebce:	fb15 f507 	smulbb	r5, r5, r7
9001ebd2:	fb12 f207 	smulbb	r2, r2, r7
9001ebd6:	1c77      	adds	r7, r6, #1
9001ebd8:	445d      	add	r5, fp
9001ebda:	4462      	add	r2, ip
9001ebdc:	eb07 2616 	add.w	r6, r7, r6, lsr #8
9001ebe0:	b2ad      	uxth	r5, r5
9001ebe2:	b292      	uxth	r2, r2
9001ebe4:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
9001ebe8:	1c57      	adds	r7, r2, #1
9001ebea:	eb07 2212 	add.w	r2, r7, r2, lsr #8
9001ebee:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001ebf2:	4316      	orrs	r6, r2
9001ebf4:	1c6a      	adds	r2, r5, #1
9001ebf6:	eb02 2515 	add.w	r5, r2, r5, lsr #8
9001ebfa:	096d      	lsrs	r5, r5, #5
9001ebfc:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001ec00:	432e      	orrs	r6, r5
9001ec02:	f820 6b02 	strh.w	r6, [r0], #2
9001ec06:	e7d0      	b.n	9001ebaa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ba>
9001ec08:	4573      	cmp	r3, lr
9001ec0a:	d38d      	bcc.n	9001eb28 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
9001ec0c:	fa1f f188 	uxth.w	r1, r8
9001ec10:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
9001ec14:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001ec16:	1a64      	subs	r4, r4, r1
9001ec18:	881b      	ldrh	r3, [r3, #0]
9001ec1a:	b2a4      	uxth	r4, r4
9001ec1c:	eba3 0308 	sub.w	r3, r3, r8
9001ec20:	2c00      	cmp	r4, #0
9001ec22:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001ec26:	bf18      	it	ne
9001ec28:	2100      	movne	r1, #0
9001ec2a:	e77d      	b.n	9001eb28 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
9001ec2c:	4b03      	ldr	r3, [pc, #12]	; (9001ec3c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
9001ec2e:	6818      	ldr	r0, [r3, #0]
9001ec30:	6803      	ldr	r3, [r0, #0]
9001ec32:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001ec34:	4798      	blx	r3
9001ec36:	b00f      	add	sp, #60	; 0x3c
9001ec38:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001ec3c:	240236cc 	.word	0x240236cc
9001ec40:	240236c6 	.word	0x240236c6

9001ec44 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
9001ec44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001ec48:	b09f      	sub	sp, #124	; 0x7c
9001ec4a:	461d      	mov	r5, r3
9001ec4c:	4604      	mov	r4, r0
9001ec4e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9001ec50:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
9001ec54:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
9001ec58:	9209      	str	r2, [sp, #36]	; 0x24
9001ec5a:	2a00      	cmp	r2, #0
9001ec5c:	f000 81ed 	beq.w	9001f03a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f6>
9001ec60:	6828      	ldr	r0, [r5, #0]
9001ec62:	aa1a      	add	r2, sp, #104	; 0x68
9001ec64:	6869      	ldr	r1, [r5, #4]
9001ec66:	c203      	stmia	r2!, {r0, r1}
9001ec68:	6818      	ldr	r0, [r3, #0]
9001ec6a:	aa1c      	add	r2, sp, #112	; 0x70
9001ec6c:	6859      	ldr	r1, [r3, #4]
9001ec6e:	c203      	stmia	r2!, {r0, r1}
9001ec70:	a81a      	add	r0, sp, #104	; 0x68
9001ec72:	f7f9 fcd1 	bl	90018618 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001ec76:	4629      	mov	r1, r5
9001ec78:	a81c      	add	r0, sp, #112	; 0x70
9001ec7a:	f7f9 fd11 	bl	900186a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001ec7e:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
9001ec82:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	; 0x6e
9001ec86:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
9001ec8a:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	; 0x76
9001ec8e:	bfdb      	ittet	le
9001ec90:	b29a      	uxthle	r2, r3
9001ec92:	f44f 6180 	movle.w	r1, #1024	; 0x400
9001ec96:	2201      	movgt	r2, #1
9001ec98:	fb91 f2f2 	sdivle	r2, r1, r2
9001ec9c:	9202      	str	r2, [sp, #8]
9001ec9e:	9802      	ldr	r0, [sp, #8]
9001eca0:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
9001eca4:	9902      	ldr	r1, [sp, #8]
9001eca6:	fb92 f0f0 	sdiv	r0, r2, r0
9001ecaa:	b280      	uxth	r0, r0
9001ecac:	4488      	add	r8, r1
9001ecae:	9010      	str	r0, [sp, #64]	; 0x40
9001ecb0:	f108 38ff 	add.w	r8, r8, #4294967295
9001ecb4:	9802      	ldr	r0, [sp, #8]
9001ecb6:	9d10      	ldr	r5, [sp, #64]	; 0x40
9001ecb8:	fb05 2510 	mls	r5, r5, r0, r2
9001ecbc:	fb98 f8f1 	sdiv	r8, r8, r1
9001ecc0:	fb15 f503 	smulbb	r5, r5, r3
9001ecc4:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
9001ecc8:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
9001eccc:	f108 0801 	add.w	r8, r8, #1
9001ecd0:	440d      	add	r5, r1
9001ecd2:	4419      	add	r1, r3
9001ecd4:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
9001ecd8:	fa1f f888 	uxth.w	r8, r8
9001ecdc:	441a      	add	r2, r3
9001ecde:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
9001ece2:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
9001ece6:	b2ad      	uxth	r5, r5
9001ece8:	9304      	str	r3, [sp, #16]
9001ecea:	4b94      	ldr	r3, [pc, #592]	; (9001ef3c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
9001ecec:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
9001ecf0:	6818      	ldr	r0, [r3, #0]
9001ecf2:	6803      	ldr	r3, [r0, #0]
9001ecf4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001ecf6:	4798      	blx	r3
9001ecf8:	4b91      	ldr	r3, [pc, #580]	; (9001ef40 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
9001ecfa:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
9001ecfe:	2d00      	cmp	r5, #0
9001ed00:	881a      	ldrh	r2, [r3, #0]
9001ed02:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
9001ed06:	fb02 f606 	mul.w	r6, r2, r6
9001ed0a:	fb02 7101 	mla	r1, r2, r1, r7
9001ed0e:	9318      	str	r3, [sp, #96]	; 0x60
9001ed10:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001ed14:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
9001ed18:	f04f 0100 	mov.w	r1, #0
9001ed1c:	eb00 0246 	add.w	r2, r0, r6, lsl #1
9001ed20:	930f      	str	r3, [sp, #60]	; 0x3c
9001ed22:	4b88      	ldr	r3, [pc, #544]	; (9001ef44 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>)
9001ed24:	920a      	str	r2, [sp, #40]	; 0x28
9001ed26:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001ed28:	eba3 0304 	sub.w	r3, r3, r4
9001ed2c:	910d      	str	r1, [sp, #52]	; 0x34
9001ed2e:	eb02 0888 	add.w	r8, r2, r8, lsl #2
9001ed32:	9319      	str	r3, [sp, #100]	; 0x64
9001ed34:	f108 0204 	add.w	r2, r8, #4
9001ed38:	9211      	str	r2, [sp, #68]	; 0x44
9001ed3a:	9a09      	ldr	r2, [sp, #36]	; 0x24
9001ed3c:	f1c2 02ff 	rsb	r2, r2, #255	; 0xff
9001ed40:	9215      	str	r2, [sp, #84]	; 0x54
9001ed42:	9a04      	ldr	r2, [sp, #16]
9001ed44:	bf18      	it	ne
9001ed46:	2200      	movne	r2, #0
9001ed48:	b292      	uxth	r2, r2
9001ed4a:	9910      	ldr	r1, [sp, #64]	; 0x40
9001ed4c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001ed4e:	fa11 f383 	uxtah	r3, r1, r3
9001ed52:	9914      	ldr	r1, [sp, #80]	; 0x50
9001ed54:	eb01 0383 	add.w	r3, r1, r3, lsl #2
9001ed58:	3304      	adds	r3, #4
9001ed5a:	9306      	str	r3, [sp, #24]
9001ed5c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001ed5e:	4283      	cmp	r3, r0
9001ed60:	f240 8166 	bls.w	9001f030 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3ec>
9001ed64:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
9001ed68:	f04f 0a01 	mov.w	sl, #1
9001ed6c:	9902      	ldr	r1, [sp, #8]
9001ed6e:	9e06      	ldr	r6, [sp, #24]
9001ed70:	46d3      	mov	fp, sl
9001ed72:	4657      	mov	r7, sl
9001ed74:	7836      	ldrb	r6, [r6, #0]
9001ed76:	fbb5 f3f3 	udiv	r3, r5, r3
9001ed7a:	1acb      	subs	r3, r1, r3
9001ed7c:	9612      	str	r6, [sp, #72]	; 0x48
9001ed7e:	3601      	adds	r6, #1
9001ed80:	b29b      	uxth	r3, r3
9001ed82:	9605      	str	r6, [sp, #20]
9001ed84:	9316      	str	r3, [sp, #88]	; 0x58
9001ed86:	9b06      	ldr	r3, [sp, #24]
9001ed88:	7859      	ldrb	r1, [r3, #1]
9001ed8a:	789b      	ldrb	r3, [r3, #2]
9001ed8c:	021b      	lsls	r3, r3, #8
9001ed8e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
9001ed92:	9906      	ldr	r1, [sp, #24]
9001ed94:	78c9      	ldrb	r1, [r1, #3]
9001ed96:	430b      	orrs	r3, r1
9001ed98:	9913      	ldr	r1, [sp, #76]	; 0x4c
9001ed9a:	4419      	add	r1, r3
9001ed9c:	1c4e      	adds	r6, r1, #1
9001ed9e:	7849      	ldrb	r1, [r1, #1]
9001eda0:	9603      	str	r6, [sp, #12]
9001eda2:	0209      	lsls	r1, r1, #8
9001eda4:	9e13      	ldr	r6, [sp, #76]	; 0x4c
9001eda6:	f401 71ff 	and.w	r1, r1, #510	; 0x1fe
9001edaa:	5cf3      	ldrb	r3, [r6, r3]
9001edac:	4319      	orrs	r1, r3
9001edae:	b28b      	uxth	r3, r1
9001edb0:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
9001edb4:	930c      	str	r3, [sp, #48]	; 0x30
9001edb6:	2300      	movs	r3, #0
9001edb8:	9307      	str	r3, [sp, #28]
9001edba:	469c      	mov	ip, r3
9001edbc:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
9001edc0:	930e      	str	r3, [sp, #56]	; 0x38
9001edc2:	2d00      	cmp	r5, #0
9001edc4:	d07e      	beq.n	9001eec4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x280>
9001edc6:	42af      	cmp	r7, r5
9001edc8:	d26e      	bcs.n	9001eea8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x264>
9001edca:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001edcc:	1bed      	subs	r5, r5, r7
9001edce:	9201      	str	r2, [sp, #4]
9001edd0:	4283      	cmp	r3, r0
9001edd2:	b2ad      	uxth	r5, r5
9001edd4:	d802      	bhi.n	9001eddc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x198>
9001edd6:	e073      	b.n	9001eec0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
9001edd8:	2b00      	cmp	r3, #0
9001edda:	d15f      	bne.n	9001ee9c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x258>
9001eddc:	9b03      	ldr	r3, [sp, #12]
9001edde:	f1cb 0207 	rsb	r2, fp, #7
9001ede2:	785b      	ldrb	r3, [r3, #1]
9001ede4:	4093      	lsls	r3, r2
9001ede6:	005b      	lsls	r3, r3, #1
9001ede8:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
9001edec:	9b03      	ldr	r3, [sp, #12]
9001edee:	781b      	ldrb	r3, [r3, #0]
9001edf0:	fa43 f30b 	asr.w	r3, r3, fp
9001edf4:	b2db      	uxtb	r3, r3
9001edf6:	4313      	orrs	r3, r2
9001edf8:	f10b 0201 	add.w	r2, fp, #1
9001edfc:	fa5f fb82 	uxtb.w	fp, r2
9001ee00:	9a03      	ldr	r2, [sp, #12]
9001ee02:	b29f      	uxth	r7, r3
9001ee04:	f1bb 0f08 	cmp.w	fp, #8
9001ee08:	bf13      	iteet	ne
9001ee0a:	3201      	addne	r2, #1
9001ee0c:	3202      	addeq	r2, #2
9001ee0e:	f04f 0b00 	moveq.w	fp, #0
9001ee12:	9203      	strne	r2, [sp, #12]
9001ee14:	bf08      	it	eq
9001ee16:	9203      	streq	r2, [sp, #12]
9001ee18:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001ee1a:	42ba      	cmp	r2, r7
9001ee1c:	d309      	bcc.n	9001ee32 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ee>
9001ee1e:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
9001ee22:	2301      	movs	r3, #1
9001ee24:	9a05      	ldr	r2, [sp, #20]
9001ee26:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
9001ee2a:	d30e      	bcc.n	9001ee4a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
9001ee2c:	469a      	mov	sl, r3
9001ee2e:	2600      	movs	r6, #0
9001ee30:	e035      	b.n	9001ee9e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x25a>
9001ee32:	9b05      	ldr	r3, [sp, #20]
9001ee34:	429f      	cmp	r7, r3
9001ee36:	d318      	bcc.n	9001ee6a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x226>
9001ee38:	eb04 030a 	add.w	r3, r4, sl
9001ee3c:	f894 2804 	ldrb.w	r2, [r4, #2052]	; 0x804
9001ee40:	f883 2804 	strb.w	r2, [r3, #2052]	; 0x804
9001ee44:	f10a 0301 	add.w	r3, sl, #1
9001ee48:	b29b      	uxth	r3, r3
9001ee4a:	9a05      	ldr	r2, [sp, #20]
9001ee4c:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
9001ee50:	eb04 0282 	add.w	r2, r4, r2, lsl #2
9001ee54:	990c      	ldr	r1, [sp, #48]	; 0x30
9001ee56:	7116      	strb	r6, [r2, #4]
9001ee58:	f10a 0601 	add.w	r6, sl, #1
9001ee5c:	80d1      	strh	r1, [r2, #6]
9001ee5e:	7156      	strb	r6, [r2, #5]
9001ee60:	9a05      	ldr	r2, [sp, #20]
9001ee62:	3201      	adds	r2, #1
9001ee64:	b292      	uxth	r2, r2
9001ee66:	9205      	str	r2, [sp, #20]
9001ee68:	e7e0      	b.n	9001ee2c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e8>
9001ee6a:	eb04 0387 	add.w	r3, r4, r7, lsl #2
9001ee6e:	463a      	mov	r2, r7
9001ee70:	795b      	ldrb	r3, [r3, #5]
9001ee72:	f603 0604 	addw	r6, r3, #2052	; 0x804
9001ee76:	4426      	add	r6, r4
9001ee78:	9919      	ldr	r1, [sp, #100]	; 0x64
9001ee7a:	eb01 0c06 	add.w	ip, r1, r6
9001ee7e:	f1bc 0f00 	cmp.w	ip, #0
9001ee82:	dd07      	ble.n	9001ee94 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>
9001ee84:	eb04 0282 	add.w	r2, r4, r2, lsl #2
9001ee88:	f892 c004 	ldrb.w	ip, [r2, #4]
9001ee8c:	f806 cd01 	strb.w	ip, [r6, #-1]!
9001ee90:	88d2      	ldrh	r2, [r2, #6]
9001ee92:	e7f1      	b.n	9001ee78 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x234>
9001ee94:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
9001ee98:	b29b      	uxth	r3, r3
9001ee9a:	e7c3      	b.n	9001ee24 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e0>
9001ee9c:	9f0c      	ldr	r7, [sp, #48]	; 0x30
9001ee9e:	970c      	str	r7, [sp, #48]	; 0x30
9001eea0:	46b4      	mov	ip, r6
9001eea2:	9a01      	ldr	r2, [sp, #4]
9001eea4:	461f      	mov	r7, r3
9001eea6:	e78c      	b.n	9001edc2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17e>
9001eea8:	1b7b      	subs	r3, r7, r5
9001eeaa:	eb0c 0605 	add.w	r6, ip, r5
9001eeae:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001eeb2:	b29b      	uxth	r3, r3
9001eeb4:	b2b6      	uxth	r6, r6
9001eeb6:	9201      	str	r2, [sp, #4]
9001eeb8:	2500      	movs	r5, #0
9001eeba:	9a0a      	ldr	r2, [sp, #40]	; 0x28
9001eebc:	4282      	cmp	r2, r0
9001eebe:	d88b      	bhi.n	9001edd8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
9001eec0:	9a01      	ldr	r2, [sp, #4]
9001eec2:	e74b      	b.n	9001ed5c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x118>
9001eec4:	4297      	cmp	r7, r2
9001eec6:	d332      	bcc.n	9001ef2e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2ea>
9001eec8:	1abb      	subs	r3, r7, r2
9001eeca:	9208      	str	r2, [sp, #32]
9001eecc:	9501      	str	r5, [sp, #4]
9001eece:	b29b      	uxth	r3, r3
9001eed0:	9909      	ldr	r1, [sp, #36]	; 0x24
9001eed2:	29ff      	cmp	r1, #255	; 0xff
9001eed4:	9908      	ldr	r1, [sp, #32]
9001eed6:	eb0c 0601 	add.w	r6, ip, r1
9001eeda:	d135      	bne.n	9001ef48 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
9001eedc:	f1a0 0e02 	sub.w	lr, r0, #2
9001eee0:	b2b6      	uxth	r6, r6
9001eee2:	45b4      	cmp	ip, r6
9001eee4:	f040 808c 	bne.w	9001f000 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3bc>
9001eee8:	9908      	ldr	r1, [sp, #32]
9001eeea:	4297      	cmp	r7, r2
9001eeec:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001eef0:	d3e2      	bcc.n	9001eeb8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x274>
9001eef2:	9a18      	ldr	r2, [sp, #96]	; 0x60
9001eef4:	9904      	ldr	r1, [sp, #16]
9001eef6:	8812      	ldrh	r2, [r2, #0]
9001eef8:	1a52      	subs	r2, r2, r1
9001eefa:	9916      	ldr	r1, [sp, #88]	; 0x58
9001eefc:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001ef00:	9a07      	ldr	r2, [sp, #28]
9001ef02:	3201      	adds	r2, #1
9001ef04:	428a      	cmp	r2, r1
9001ef06:	9207      	str	r2, [sp, #28]
9001ef08:	f040 8087 	bne.w	9001f01a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d6>
9001ef0c:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
9001ef10:	f8bd 7068 	ldrh.w	r7, [sp, #104]	; 0x68
9001ef14:	9b04      	ldr	r3, [sp, #16]
9001ef16:	1bed      	subs	r5, r5, r7
9001ef18:	b2ad      	uxth	r5, r5
9001ef1a:	2d00      	cmp	r5, #0
9001ef1c:	bf08      	it	eq
9001ef1e:	461a      	moveq	r2, r3
9001ef20:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001ef22:	bf18      	it	ne
9001ef24:	2200      	movne	r2, #0
9001ef26:	3301      	adds	r3, #1
9001ef28:	b292      	uxth	r2, r2
9001ef2a:	930d      	str	r3, [sp, #52]	; 0x34
9001ef2c:	e70d      	b.n	9001ed4a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x106>
9001ef2e:	1bd1      	subs	r1, r2, r7
9001ef30:	9708      	str	r7, [sp, #32]
9001ef32:	b28b      	uxth	r3, r1
9001ef34:	9301      	str	r3, [sp, #4]
9001ef36:	462b      	mov	r3, r5
9001ef38:	e7ca      	b.n	9001eed0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x28c>
9001ef3a:	bf00      	nop
9001ef3c:	240236cc 	.word	0x240236cc
9001ef40:	240236c6 	.word	0x240236c6
9001ef44:	fffff7fb 	.word	0xfffff7fb
9001ef48:	b2b6      	uxth	r6, r6
9001ef4a:	900b      	str	r0, [sp, #44]	; 0x2c
9001ef4c:	45b4      	cmp	ip, r6
9001ef4e:	d0cb      	beq.n	9001eee8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a4>
9001ef50:	f10c 0101 	add.w	r1, ip, #1
9001ef54:	44a4      	add	ip, r4
9001ef56:	9117      	str	r1, [sp, #92]	; 0x5c
9001ef58:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
9001ef5c:	9911      	ldr	r1, [sp, #68]	; 0x44
9001ef5e:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
9001ef62:	990b      	ldr	r1, [sp, #44]	; 0x2c
9001ef64:	ea4f 2825 	mov.w	r8, r5, asr #8
9001ef68:	f8b1 c000 	ldrh.w	ip, [r1]
9001ef6c:	990e      	ldr	r1, [sp, #56]	; 0x38
9001ef6e:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
9001ef72:	ea4f 2e2c 	mov.w	lr, ip, asr #8
9001ef76:	ea4f 09ec 	mov.w	r9, ip, asr #3
9001ef7a:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
9001ef7e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001ef82:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
9001ef86:	fb1e fe01 	smulbb	lr, lr, r1
9001ef8a:	990f      	ldr	r1, [sp, #60]	; 0x3c
9001ef8c:	fa5f fc8c 	uxtb.w	ip, ip
9001ef90:	fb08 e801 	mla	r8, r8, r1, lr
9001ef94:	ea4f 0ee5 	mov.w	lr, r5, asr #3
9001ef98:	990e      	ldr	r1, [sp, #56]	; 0x38
9001ef9a:	00ed      	lsls	r5, r5, #3
9001ef9c:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
9001efa0:	fa1f f888 	uxth.w	r8, r8
9001efa4:	fb19 f901 	smulbb	r9, r9, r1
9001efa8:	990f      	ldr	r1, [sp, #60]	; 0x3c
9001efaa:	b2ed      	uxtb	r5, r5
9001efac:	fb0e 9e01 	mla	lr, lr, r1, r9
9001efb0:	990e      	ldr	r1, [sp, #56]	; 0x38
9001efb2:	fb1c fc01 	smulbb	ip, ip, r1
9001efb6:	990f      	ldr	r1, [sp, #60]	; 0x3c
9001efb8:	fa1f fe8e 	uxth.w	lr, lr
9001efbc:	fb05 c501 	mla	r5, r5, r1, ip
9001efc0:	f108 0c01 	add.w	ip, r8, #1
9001efc4:	f10e 0901 	add.w	r9, lr, #1
9001efc8:	990b      	ldr	r1, [sp, #44]	; 0x2c
9001efca:	b2ad      	uxth	r5, r5
9001efcc:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
9001efd0:	f105 0c01 	add.w	ip, r5, #1
9001efd4:	eb09 291e 	add.w	r9, r9, lr, lsr #8
9001efd8:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
9001efdc:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
9001efe0:	ea4f 1959 	mov.w	r9, r9, lsr #5
9001efe4:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9001efe8:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
9001efec:	ea4c 0808 	orr.w	r8, ip, r8
9001eff0:	f8bd c05c 	ldrh.w	ip, [sp, #92]	; 0x5c
9001eff4:	ea48 0809 	orr.w	r8, r8, r9
9001eff8:	f821 8b02 	strh.w	r8, [r1], #2
9001effc:	910b      	str	r1, [sp, #44]	; 0x2c
9001effe:	e7a5      	b.n	9001ef4c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x308>
9001f000:	f10c 0801 	add.w	r8, ip, #1
9001f004:	44a4      	add	ip, r4
9001f006:	9911      	ldr	r1, [sp, #68]	; 0x44
9001f008:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
9001f00c:	fa1f fc88 	uxth.w	ip, r8
9001f010:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
9001f014:	f82e 5f02 	strh.w	r5, [lr, #2]!
9001f018:	e763      	b.n	9001eee2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29e>
9001f01a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001f01e:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
9001f022:	1aad      	subs	r5, r5, r2
9001f024:	b2ad      	uxth	r5, r5
9001f026:	2d00      	cmp	r5, #0
9001f028:	bf18      	it	ne
9001f02a:	2200      	movne	r2, #0
9001f02c:	9201      	str	r2, [sp, #4]
9001f02e:	e744      	b.n	9001eeba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x276>
9001f030:	4b03      	ldr	r3, [pc, #12]	; (9001f040 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3fc>)
9001f032:	6818      	ldr	r0, [r3, #0]
9001f034:	6803      	ldr	r3, [r0, #0]
9001f036:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001f038:	4798      	blx	r3
9001f03a:	b01f      	add	sp, #124	; 0x7c
9001f03c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001f040:	240236cc 	.word	0x240236cc

9001f044 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
9001f044:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001f048:	b08f      	sub	sp, #60	; 0x3c
9001f04a:	461c      	mov	r4, r3
9001f04c:	460f      	mov	r7, r1
9001f04e:	9203      	str	r2, [sp, #12]
9001f050:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
9001f054:	9b18      	ldr	r3, [sp, #96]	; 0x60
9001f056:	9202      	str	r2, [sp, #8]
9001f058:	2a00      	cmp	r2, #0
9001f05a:	f000 8128 	beq.w	9001f2ae <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
9001f05e:	6820      	ldr	r0, [r4, #0]
9001f060:	aa0a      	add	r2, sp, #40	; 0x28
9001f062:	6861      	ldr	r1, [r4, #4]
9001f064:	c203      	stmia	r2!, {r0, r1}
9001f066:	6818      	ldr	r0, [r3, #0]
9001f068:	aa0c      	add	r2, sp, #48	; 0x30
9001f06a:	6859      	ldr	r1, [r3, #4]
9001f06c:	c203      	stmia	r2!, {r0, r1}
9001f06e:	a80a      	add	r0, sp, #40	; 0x28
9001f070:	f7f9 fad2 	bl	90018618 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001f074:	4621      	mov	r1, r4
9001f076:	a80c      	add	r0, sp, #48	; 0x30
9001f078:	f7f9 fb12 	bl	900186a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001f07c:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
9001f080:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
9001f084:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
9001f088:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
9001f08c:	bfdb      	ittet	le
9001f08e:	b2b3      	uxthle	r3, r6
9001f090:	f44f 6280 	movle.w	r2, #1024	; 0x400
9001f094:	2301      	movgt	r3, #1
9001f096:	fb92 f3f3 	sdivle	r3, r2, r3
9001f09a:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
9001f09e:	441d      	add	r5, r3
9001f0a0:	fb92 f1f3 	sdiv	r1, r2, r3
9001f0a4:	fa1f fc81 	uxth.w	ip, r1
9001f0a8:	3d01      	subs	r5, #1
9001f0aa:	fb0c 2413 	mls	r4, ip, r3, r2
9001f0ae:	4661      	mov	r1, ip
9001f0b0:	fb14 f406 	smulbb	r4, r4, r6
9001f0b4:	4404      	add	r4, r0
9001f0b6:	fb95 f5f3 	sdiv	r5, r5, r3
9001f0ba:	b2a4      	uxth	r4, r4
9001f0bc:	b121      	cbz	r1, 9001f0c8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x84>
9001f0be:	9b03      	ldr	r3, [sp, #12]
9001f0c0:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
9001f0c4:	ba1b      	rev	r3, r3
9001f0c6:	441f      	add	r7, r3
9001f0c8:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
9001f0cc:	b2ad      	uxth	r5, r5
9001f0ce:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
9001f0d2:	4418      	add	r0, r3
9001f0d4:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
9001f0d8:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
9001f0dc:	00ad      	lsls	r5, r5, #2
9001f0de:	441a      	add	r2, r3
9001f0e0:	4b74      	ldr	r3, [pc, #464]	; (9001f2b4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
9001f0e2:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
9001f0e6:	6818      	ldr	r0, [r3, #0]
9001f0e8:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
9001f0ec:	6803      	ldr	r3, [r0, #0]
9001f0ee:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001f0f0:	4798      	blx	r3
9001f0f2:	4a71      	ldr	r2, [pc, #452]	; (9001f2b8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
9001f0f4:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
9001f0f8:	2c00      	cmp	r4, #0
9001f0fa:	8813      	ldrh	r3, [r2, #0]
9001f0fc:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
9001f100:	bf0c      	ite	eq
9001f102:	46c8      	moveq	r8, r9
9001f104:	f04f 0800 	movne.w	r8, #0
9001f108:	9209      	str	r2, [sp, #36]	; 0x24
9001f10a:	fb03 c101 	mla	r1, r3, r1, ip
9001f10e:	4373      	muls	r3, r6
9001f110:	fa1f f888 	uxth.w	r8, r8
9001f114:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001f118:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001f11c:	9304      	str	r3, [sp, #16]
9001f11e:	1d2b      	adds	r3, r5, #4
9001f120:	9305      	str	r3, [sp, #20]
9001f122:	2300      	movs	r3, #0
9001f124:	9301      	str	r3, [sp, #4]
9001f126:	9a04      	ldr	r2, [sp, #16]
9001f128:	4282      	cmp	r2, r0
9001f12a:	f240 80bb 	bls.w	9001f2a4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
9001f12e:	b95b      	cbnz	r3, 9001f148 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x104>
9001f130:	783a      	ldrb	r2, [r7, #0]
9001f132:	0993      	lsrs	r3, r2, #6
9001f134:	f002 023f 	and.w	r2, r2, #63	; 0x3f
9001f138:	9201      	str	r2, [sp, #4]
9001f13a:	1e5a      	subs	r2, r3, #1
9001f13c:	2a02      	cmp	r2, #2
9001f13e:	bf8d      	iteet	hi
9001f140:	787b      	ldrbhi	r3, [r7, #1]
9001f142:	3701      	addls	r7, #1
9001f144:	b29b      	uxthls	r3, r3
9001f146:	3702      	addhi	r7, #2
9001f148:	b184      	cbz	r4, 9001f16c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x128>
9001f14a:	429c      	cmp	r4, r3
9001f14c:	bf91      	iteee	ls
9001f14e:	1b1c      	subls	r4, r3, r4
9001f150:	1ae4      	subhi	r4, r4, r3
9001f152:	46c4      	movhi	ip, r8
9001f154:	f04f 0a00 	movhi.w	sl, #0
9001f158:	bf9b      	ittet	ls
9001f15a:	fa1f fa84 	uxthls.w	sl, r4
9001f15e:	2400      	movls	r4, #0
9001f160:	b2a4      	uxthhi	r4, r4
9001f162:	fa1f fc89 	uxthls.w	ip, r9
9001f166:	4653      	mov	r3, sl
9001f168:	46e0      	mov	r8, ip
9001f16a:	e7dc      	b.n	9001f126 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe2>
9001f16c:	2204      	movs	r2, #4
9001f16e:	9905      	ldr	r1, [sp, #20]
9001f170:	4543      	cmp	r3, r8
9001f172:	4615      	mov	r5, r2
9001f174:	9a01      	ldr	r2, [sp, #4]
9001f176:	bf24      	itt	cs
9001f178:	eba3 0a08 	subcs.w	sl, r3, r8
9001f17c:	46c6      	movcs	lr, r8
9001f17e:	fb15 1202 	smlabb	r2, r5, r2, r1
9001f182:	9903      	ldr	r1, [sp, #12]
9001f184:	bf3c      	itt	cc
9001f186:	eba8 0c03 	subcc.w	ip, r8, r3
9001f18a:	469e      	movcc	lr, r3
9001f18c:	588a      	ldr	r2, [r1, r2]
9001f18e:	bf26      	itte	cs
9001f190:	fa1f fa8a 	uxthcs.w	sl, sl
9001f194:	46a4      	movcs	ip, r4
9001f196:	fa1f fc8c 	uxthcc.w	ip, ip
9001f19a:	ea4f 6112 	mov.w	r1, r2, lsr #24
9001f19e:	bf38      	it	cc
9001f1a0:	46a2      	movcc	sl, r4
9001f1a2:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
9001f1a6:	2900      	cmp	r1, #0
9001f1a8:	d066      	beq.n	9001f278 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
9001f1aa:	29ff      	cmp	r1, #255	; 0xff
9001f1ac:	ea4f 2612 	mov.w	r6, r2, lsr #8
9001f1b0:	d114      	bne.n	9001f1dc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
9001f1b2:	9d02      	ldr	r5, [sp, #8]
9001f1b4:	2dff      	cmp	r5, #255	; 0xff
9001f1b6:	d111      	bne.n	9001f1dc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
9001f1b8:	0951      	lsrs	r1, r2, #5
9001f1ba:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
9001f1be:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9001f1c2:	4486      	add	lr, r0
9001f1c4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
9001f1c8:	f026 0607 	bic.w	r6, r6, #7
9001f1cc:	430e      	orrs	r6, r1
9001f1ce:	4316      	orrs	r6, r2
9001f1d0:	b2b6      	uxth	r6, r6
9001f1d2:	4586      	cmp	lr, r0
9001f1d4:	d051      	beq.n	9001f27a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
9001f1d6:	f820 6b02 	strh.w	r6, [r0], #2
9001f1da:	e7fa      	b.n	9001f1d2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
9001f1dc:	9d02      	ldr	r5, [sp, #8]
9001f1de:	b2f6      	uxtb	r6, r6
9001f1e0:	4486      	add	lr, r0
9001f1e2:	4369      	muls	r1, r5
9001f1e4:	1c4d      	adds	r5, r1, #1
9001f1e6:	eb05 2521 	add.w	r5, r5, r1, asr #8
9001f1ea:	f3c2 4107 	ubfx	r1, r2, #16, #8
9001f1ee:	b2d2      	uxtb	r2, r2
9001f1f0:	122d      	asrs	r5, r5, #8
9001f1f2:	ea6f 0b05 	mvn.w	fp, r5
9001f1f6:	b2ad      	uxth	r5, r5
9001f1f8:	fb11 f105 	smulbb	r1, r1, r5
9001f1fc:	fa5f fb8b 	uxtb.w	fp, fp
9001f200:	fb16 f605 	smulbb	r6, r6, r5
9001f204:	fb12 f205 	smulbb	r2, r2, r5
9001f208:	b289      	uxth	r1, r1
9001f20a:	b2b6      	uxth	r6, r6
9001f20c:	b292      	uxth	r2, r2
9001f20e:	9106      	str	r1, [sp, #24]
9001f210:	9607      	str	r6, [sp, #28]
9001f212:	9208      	str	r2, [sp, #32]
9001f214:	4586      	cmp	lr, r0
9001f216:	d030      	beq.n	9001f27a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
9001f218:	8802      	ldrh	r2, [r0, #0]
9001f21a:	9906      	ldr	r1, [sp, #24]
9001f21c:	1216      	asrs	r6, r2, #8
9001f21e:	10d5      	asrs	r5, r2, #3
9001f220:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001f224:	00d2      	lsls	r2, r2, #3
9001f226:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
9001f22a:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9001f22e:	b2d2      	uxtb	r2, r2
9001f230:	fb06 160b 	mla	r6, r6, fp, r1
9001f234:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9001f238:	9907      	ldr	r1, [sp, #28]
9001f23a:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001f23e:	b2b6      	uxth	r6, r6
9001f240:	fb05 150b 	mla	r5, r5, fp, r1
9001f244:	9908      	ldr	r1, [sp, #32]
9001f246:	fb02 120b 	mla	r2, r2, fp, r1
9001f24a:	1c71      	adds	r1, r6, #1
9001f24c:	b2ad      	uxth	r5, r5
9001f24e:	b292      	uxth	r2, r2
9001f250:	eb01 2616 	add.w	r6, r1, r6, lsr #8
9001f254:	1c51      	adds	r1, r2, #1
9001f256:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
9001f25a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
9001f25e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001f262:	4316      	orrs	r6, r2
9001f264:	1c6a      	adds	r2, r5, #1
9001f266:	eb02 2515 	add.w	r5, r2, r5, lsr #8
9001f26a:	096d      	lsrs	r5, r5, #5
9001f26c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001f270:	432e      	orrs	r6, r5
9001f272:	f820 6b02 	strh.w	r6, [r0], #2
9001f276:	e7cd      	b.n	9001f214 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
9001f278:	4470      	add	r0, lr
9001f27a:	4543      	cmp	r3, r8
9001f27c:	f4ff af73 	bcc.w	9001f166 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
9001f280:	fa1f fc89 	uxth.w	ip, r9
9001f284:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
9001f288:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001f28a:	eba4 040c 	sub.w	r4, r4, ip
9001f28e:	881b      	ldrh	r3, [r3, #0]
9001f290:	b2a4      	uxth	r4, r4
9001f292:	eba3 0309 	sub.w	r3, r3, r9
9001f296:	2c00      	cmp	r4, #0
9001f298:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001f29c:	bf18      	it	ne
9001f29e:	f04f 0c00 	movne.w	ip, #0
9001f2a2:	e760      	b.n	9001f166 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
9001f2a4:	4b03      	ldr	r3, [pc, #12]	; (9001f2b4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
9001f2a6:	6818      	ldr	r0, [r3, #0]
9001f2a8:	6803      	ldr	r3, [r0, #0]
9001f2aa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001f2ac:	4798      	blx	r3
9001f2ae:	b00f      	add	sp, #60	; 0x3c
9001f2b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001f2b4:	240236cc 	.word	0x240236cc
9001f2b8:	240236c6 	.word	0x240236c6

9001f2bc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
9001f2bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001f2c0:	b093      	sub	sp, #76	; 0x4c
9001f2c2:	461c      	mov	r4, r3
9001f2c4:	9205      	str	r2, [sp, #20]
9001f2c6:	f89d 2074 	ldrb.w	r2, [sp, #116]	; 0x74
9001f2ca:	9101      	str	r1, [sp, #4]
9001f2cc:	9b1c      	ldr	r3, [sp, #112]	; 0x70
9001f2ce:	9202      	str	r2, [sp, #8]
9001f2d0:	2a00      	cmp	r2, #0
9001f2d2:	f000 812e 	beq.w	9001f532 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
9001f2d6:	6820      	ldr	r0, [r4, #0]
9001f2d8:	aa0e      	add	r2, sp, #56	; 0x38
9001f2da:	6861      	ldr	r1, [r4, #4]
9001f2dc:	c203      	stmia	r2!, {r0, r1}
9001f2de:	6818      	ldr	r0, [r3, #0]
9001f2e0:	aa10      	add	r2, sp, #64	; 0x40
9001f2e2:	6859      	ldr	r1, [r3, #4]
9001f2e4:	c203      	stmia	r2!, {r0, r1}
9001f2e6:	a80e      	add	r0, sp, #56	; 0x38
9001f2e8:	f7f9 f996 	bl	90018618 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001f2ec:	4621      	mov	r1, r4
9001f2ee:	a810      	add	r0, sp, #64	; 0x40
9001f2f0:	f7f9 f9d6 	bl	900186a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001f2f4:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
9001f2f8:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	; 0x3e
9001f2fc:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
9001f300:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
9001f304:	bfdb      	ittet	le
9001f306:	b2b3      	uxthle	r3, r6
9001f308:	f44f 6280 	movle.w	r2, #1024	; 0x400
9001f30c:	2301      	movgt	r3, #1
9001f30e:	fb92 f3f3 	sdivle	r3, r2, r3
9001f312:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
9001f316:	441d      	add	r5, r3
9001f318:	fb92 f1f3 	sdiv	r1, r2, r3
9001f31c:	fa1f fc81 	uxth.w	ip, r1
9001f320:	3d01      	subs	r5, #1
9001f322:	fb0c 2413 	mls	r4, ip, r3, r2
9001f326:	4661      	mov	r1, ip
9001f328:	fb14 f406 	smulbb	r4, r4, r6
9001f32c:	4404      	add	r4, r0
9001f32e:	fb95 f5f3 	sdiv	r5, r5, r3
9001f332:	b2a4      	uxth	r4, r4
9001f334:	b131      	cbz	r1, 9001f344 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x88>
9001f336:	9b05      	ldr	r3, [sp, #20]
9001f338:	9901      	ldr	r1, [sp, #4]
9001f33a:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
9001f33e:	ba1b      	rev	r3, r3
9001f340:	4419      	add	r1, r3
9001f342:	9101      	str	r1, [sp, #4]
9001f344:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
9001f348:	b2ad      	uxth	r5, r5
9001f34a:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
9001f34e:	4418      	add	r0, r3
9001f350:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
9001f354:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	; 0x46
9001f358:	00ad      	lsls	r5, r5, #2
9001f35a:	441a      	add	r2, r3
9001f35c:	4b76      	ldr	r3, [pc, #472]	; (9001f538 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
9001f35e:	f8ad 0040 	strh.w	r0, [sp, #64]	; 0x40
9001f362:	6818      	ldr	r0, [r3, #0]
9001f364:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
9001f368:	6803      	ldr	r3, [r0, #0]
9001f36a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001f36c:	4798      	blx	r3
9001f36e:	4973      	ldr	r1, [pc, #460]	; (9001f53c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
9001f370:	f9bd c040 	ldrsh.w	ip, [sp, #64]	; 0x40
9001f374:	2c00      	cmp	r4, #0
9001f376:	880b      	ldrh	r3, [r1, #0]
9001f378:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
9001f37c:	910d      	str	r1, [sp, #52]	; 0x34
9001f37e:	fb03 c202 	mla	r2, r3, r2, ip
9001f382:	bf08      	it	eq
9001f384:	46dc      	moveq	ip, fp
9001f386:	fb03 f306 	mul.w	r3, r3, r6
9001f38a:	bf18      	it	ne
9001f38c:	f04f 0c00 	movne.w	ip, #0
9001f390:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001f394:	f8bd 1008 	ldrh.w	r1, [sp, #8]
9001f398:	fa1f fc8c 	uxth.w	ip, ip
9001f39c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001f3a0:	9106      	str	r1, [sp, #24]
9001f3a2:	9308      	str	r3, [sp, #32]
9001f3a4:	1d2b      	adds	r3, r5, #4
9001f3a6:	9309      	str	r3, [sp, #36]	; 0x24
9001f3a8:	9b02      	ldr	r3, [sp, #8]
9001f3aa:	43da      	mvns	r2, r3
9001f3ac:	2300      	movs	r3, #0
9001f3ae:	b2d2      	uxtb	r2, r2
9001f3b0:	9303      	str	r3, [sp, #12]
9001f3b2:	9207      	str	r2, [sp, #28]
9001f3b4:	9a08      	ldr	r2, [sp, #32]
9001f3b6:	4282      	cmp	r2, r0
9001f3b8:	f240 80b6 	bls.w	9001f528 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26c>
9001f3bc:	b963      	cbnz	r3, 9001f3d8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
9001f3be:	9b01      	ldr	r3, [sp, #4]
9001f3c0:	781a      	ldrb	r2, [r3, #0]
9001f3c2:	0993      	lsrs	r3, r2, #6
9001f3c4:	f002 023f 	and.w	r2, r2, #63	; 0x3f
9001f3c8:	9203      	str	r2, [sp, #12]
9001f3ca:	1e5a      	subs	r2, r3, #1
9001f3cc:	2a02      	cmp	r2, #2
9001f3ce:	d815      	bhi.n	9001f3fc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x140>
9001f3d0:	9a01      	ldr	r2, [sp, #4]
9001f3d2:	b29b      	uxth	r3, r3
9001f3d4:	3201      	adds	r2, #1
9001f3d6:	9201      	str	r2, [sp, #4]
9001f3d8:	b1b4      	cbz	r4, 9001f408 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14c>
9001f3da:	429c      	cmp	r4, r3
9001f3dc:	bf91      	iteee	ls
9001f3de:	1b1c      	subls	r4, r3, r4
9001f3e0:	1ae4      	subhi	r4, r4, r3
9001f3e2:	4666      	movhi	r6, ip
9001f3e4:	f04f 0800 	movhi.w	r8, #0
9001f3e8:	bf9b      	ittet	ls
9001f3ea:	fa1f f884 	uxthls.w	r8, r4
9001f3ee:	2400      	movls	r4, #0
9001f3f0:	b2a4      	uxthhi	r4, r4
9001f3f2:	fa1f f68b 	uxthls.w	r6, fp
9001f3f6:	4643      	mov	r3, r8
9001f3f8:	46b4      	mov	ip, r6
9001f3fa:	e7db      	b.n	9001f3b4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf8>
9001f3fc:	9a01      	ldr	r2, [sp, #4]
9001f3fe:	9b01      	ldr	r3, [sp, #4]
9001f400:	3202      	adds	r2, #2
9001f402:	785b      	ldrb	r3, [r3, #1]
9001f404:	9201      	str	r2, [sp, #4]
9001f406:	e7e7      	b.n	9001f3d8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
9001f408:	2203      	movs	r2, #3
9001f40a:	9909      	ldr	r1, [sp, #36]	; 0x24
9001f40c:	4563      	cmp	r3, ip
9001f40e:	4615      	mov	r5, r2
9001f410:	9a03      	ldr	r2, [sp, #12]
9001f412:	bf2c      	ite	cs
9001f414:	eba3 080c 	subcs.w	r8, r3, ip
9001f418:	ebac 0603 	subcc.w	r6, ip, r3
9001f41c:	fb15 1202 	smlabb	r2, r5, r2, r1
9001f420:	9905      	ldr	r1, [sp, #20]
9001f422:	bf24      	itt	cs
9001f424:	fa1f f888 	uxthcs.w	r8, r8
9001f428:	46e1      	movcs	r9, ip
9001f42a:	eb01 0502 	add.w	r5, r1, r2
9001f42e:	9902      	ldr	r1, [sp, #8]
9001f430:	bf2f      	iteee	cs
9001f432:	4626      	movcs	r6, r4
9001f434:	b2b6      	uxthcc	r6, r6
9001f436:	4699      	movcc	r9, r3
9001f438:	46a0      	movcc	r8, r4
9001f43a:	29ff      	cmp	r1, #255	; 0xff
9001f43c:	d04a      	beq.n	9001f4d4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
9001f43e:	9f06      	ldr	r7, [sp, #24]
9001f440:	46ca      	mov	sl, r9
9001f442:	78a9      	ldrb	r1, [r5, #2]
9001f444:	9004      	str	r0, [sp, #16]
9001f446:	4379      	muls	r1, r7
9001f448:	910a      	str	r1, [sp, #40]	; 0x28
9001f44a:	7869      	ldrb	r1, [r5, #1]
9001f44c:	4379      	muls	r1, r7
9001f44e:	910b      	str	r1, [sp, #44]	; 0x2c
9001f450:	9905      	ldr	r1, [sp, #20]
9001f452:	5c8a      	ldrb	r2, [r1, r2]
9001f454:	437a      	muls	r2, r7
9001f456:	920c      	str	r2, [sp, #48]	; 0x30
9001f458:	f1ba 0f00 	cmp.w	sl, #0
9001f45c:	d03d      	beq.n	9001f4da <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
9001f45e:	9a04      	ldr	r2, [sp, #16]
9001f460:	f10a 3aff 	add.w	sl, sl, #4294967295
9001f464:	9f07      	ldr	r7, [sp, #28]
9001f466:	8812      	ldrh	r2, [r2, #0]
9001f468:	fa1f fa8a 	uxth.w	sl, sl
9001f46c:	46be      	mov	lr, r7
9001f46e:	9f0a      	ldr	r7, [sp, #40]	; 0x28
9001f470:	1215      	asrs	r5, r2, #8
9001f472:	10d1      	asrs	r1, r2, #3
9001f474:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
9001f478:	00d2      	lsls	r2, r2, #3
9001f47a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
9001f47e:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
9001f482:	b2d2      	uxtb	r2, r2
9001f484:	fb05 750e 	mla	r5, r5, lr, r7
9001f488:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
9001f48c:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
9001f48e:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001f492:	b2ad      	uxth	r5, r5
9001f494:	fb01 710e 	mla	r1, r1, lr, r7
9001f498:	9f0c      	ldr	r7, [sp, #48]	; 0x30
9001f49a:	fb02 720e 	mla	r2, r2, lr, r7
9001f49e:	f105 0e01 	add.w	lr, r5, #1
9001f4a2:	b289      	uxth	r1, r1
9001f4a4:	b292      	uxth	r2, r2
9001f4a6:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
9001f4aa:	f102 0e01 	add.w	lr, r2, #1
9001f4ae:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
9001f4b2:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
9001f4b6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001f4ba:	4315      	orrs	r5, r2
9001f4bc:	1c4a      	adds	r2, r1, #1
9001f4be:	eb02 2111 	add.w	r1, r2, r1, lsr #8
9001f4c2:	9a04      	ldr	r2, [sp, #16]
9001f4c4:	0949      	lsrs	r1, r1, #5
9001f4c6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
9001f4ca:	430d      	orrs	r5, r1
9001f4cc:	f822 5b02 	strh.w	r5, [r2], #2
9001f4d0:	9204      	str	r2, [sp, #16]
9001f4d2:	e7c1      	b.n	9001f458 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19c>
9001f4d4:	4649      	mov	r1, r9
9001f4d6:	4686      	mov	lr, r0
9001f4d8:	b999      	cbnz	r1, 9001f502 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x246>
9001f4da:	4563      	cmp	r3, ip
9001f4dc:	eb00 0049 	add.w	r0, r0, r9, lsl #1
9001f4e0:	d389      	bcc.n	9001f3f6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
9001f4e2:	fa1f f68b 	uxth.w	r6, fp
9001f4e6:	f8bd 403c 	ldrh.w	r4, [sp, #60]	; 0x3c
9001f4ea:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001f4ec:	1ba4      	subs	r4, r4, r6
9001f4ee:	881b      	ldrh	r3, [r3, #0]
9001f4f0:	b2a4      	uxth	r4, r4
9001f4f2:	eba3 030b 	sub.w	r3, r3, fp
9001f4f6:	2c00      	cmp	r4, #0
9001f4f8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001f4fc:	bf18      	it	ne
9001f4fe:	2600      	movne	r6, #0
9001f500:	e779      	b.n	9001f3f6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
9001f502:	78aa      	ldrb	r2, [r5, #2]
9001f504:	3901      	subs	r1, #1
9001f506:	4f0e      	ldr	r7, [pc, #56]	; (9001f540 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x284>)
9001f508:	b289      	uxth	r1, r1
9001f50a:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
9001f50e:	786a      	ldrb	r2, [r5, #1]
9001f510:	00d2      	lsls	r2, r2, #3
9001f512:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001f516:	ea4a 0202 	orr.w	r2, sl, r2
9001f51a:	f895 a000 	ldrb.w	sl, [r5]
9001f51e:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
9001f522:	f82e 2b02 	strh.w	r2, [lr], #2
9001f526:	e7d7      	b.n	9001f4d8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21c>
9001f528:	4b03      	ldr	r3, [pc, #12]	; (9001f538 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
9001f52a:	6818      	ldr	r0, [r3, #0]
9001f52c:	6803      	ldr	r3, [r0, #0]
9001f52e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001f530:	4798      	blx	r3
9001f532:	b013      	add	sp, #76	; 0x4c
9001f534:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001f538:	240236cc 	.word	0x240236cc
9001f53c:	240236c6 	.word	0x240236c6
9001f540:	fffff800 	.word	0xfffff800

9001f544 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
9001f544:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001f548:	b09d      	sub	sp, #116	; 0x74
9001f54a:	461c      	mov	r4, r3
9001f54c:	4683      	mov	fp, r0
9001f54e:	9b26      	ldr	r3, [sp, #152]	; 0x98
9001f550:	e9cd 1211 	strd	r1, r2, [sp, #68]	; 0x44
9001f554:	f89d 209c 	ldrb.w	r2, [sp, #156]	; 0x9c
9001f558:	920e      	str	r2, [sp, #56]	; 0x38
9001f55a:	2a00      	cmp	r2, #0
9001f55c:	f000 81e4 	beq.w	9001f928 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>
9001f560:	6820      	ldr	r0, [r4, #0]
9001f562:	aa18      	add	r2, sp, #96	; 0x60
9001f564:	6861      	ldr	r1, [r4, #4]
9001f566:	c203      	stmia	r2!, {r0, r1}
9001f568:	6818      	ldr	r0, [r3, #0]
9001f56a:	aa1a      	add	r2, sp, #104	; 0x68
9001f56c:	6859      	ldr	r1, [r3, #4]
9001f56e:	c203      	stmia	r2!, {r0, r1}
9001f570:	a818      	add	r0, sp, #96	; 0x60
9001f572:	f7f9 f851 	bl	90018618 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001f576:	4621      	mov	r1, r4
9001f578:	a81a      	add	r0, sp, #104	; 0x68
9001f57a:	f7f9 f891 	bl	900186a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001f57e:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	; 0x64
9001f582:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	; 0x66
9001f586:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
9001f58a:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
9001f58e:	bfdb      	ittet	le
9001f590:	b29a      	uxthle	r2, r3
9001f592:	f44f 6180 	movle.w	r1, #1024	; 0x400
9001f596:	2201      	movgt	r2, #1
9001f598:	fb91 f2f2 	sdivle	r2, r1, r2
9001f59c:	9202      	str	r2, [sp, #8]
9001f59e:	9802      	ldr	r0, [sp, #8]
9001f5a0:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	; 0x6a
9001f5a4:	9902      	ldr	r1, [sp, #8]
9001f5a6:	fb92 f0f0 	sdiv	r0, r2, r0
9001f5aa:	b280      	uxth	r0, r0
9001f5ac:	440c      	add	r4, r1
9001f5ae:	900f      	str	r0, [sp, #60]	; 0x3c
9001f5b0:	3c01      	subs	r4, #1
9001f5b2:	9802      	ldr	r0, [sp, #8]
9001f5b4:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
9001f5b6:	fb05 2510 	mls	r5, r5, r0, r2
9001f5ba:	fb94 f4f1 	sdiv	r4, r4, r1
9001f5be:	fb15 f503 	smulbb	r5, r5, r3
9001f5c2:	f8bd 1068 	ldrh.w	r1, [sp, #104]	; 0x68
9001f5c6:	f8bd 3060 	ldrh.w	r3, [sp, #96]	; 0x60
9001f5ca:	3401      	adds	r4, #1
9001f5cc:	440d      	add	r5, r1
9001f5ce:	4419      	add	r1, r3
9001f5d0:	f8bd 3062 	ldrh.w	r3, [sp, #98]	; 0x62
9001f5d4:	b2a4      	uxth	r4, r4
9001f5d6:	441a      	add	r2, r3
9001f5d8:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
9001f5dc:	f8ad 1068 	strh.w	r1, [sp, #104]	; 0x68
9001f5e0:	00a4      	lsls	r4, r4, #2
9001f5e2:	9306      	str	r3, [sp, #24]
9001f5e4:	b2ad      	uxth	r5, r5
9001f5e6:	4bb3      	ldr	r3, [pc, #716]	; (9001f8b4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
9001f5e8:	f8ad 206a 	strh.w	r2, [sp, #106]	; 0x6a
9001f5ec:	6818      	ldr	r0, [r3, #0]
9001f5ee:	6803      	ldr	r3, [r0, #0]
9001f5f0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001f5f2:	4798      	blx	r3
9001f5f4:	4bb0      	ldr	r3, [pc, #704]	; (9001f8b8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>)
9001f5f6:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	; 0x6a
9001f5fa:	2d00      	cmp	r5, #0
9001f5fc:	881a      	ldrh	r2, [r3, #0]
9001f5fe:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	; 0x68
9001f602:	fb02 f606 	mul.w	r6, r2, r6
9001f606:	fb02 7101 	mla	r1, r2, r1, r7
9001f60a:	9316      	str	r3, [sp, #88]	; 0x58
9001f60c:	eb00 0841 	add.w	r8, r0, r1, lsl #1
9001f610:	4baa      	ldr	r3, [pc, #680]	; (9001f8bc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x378>)
9001f612:	bf18      	it	ne
9001f614:	2100      	movne	r1, #0
9001f616:	eb08 0246 	add.w	r2, r8, r6, lsl #1
9001f61a:	eba3 030b 	sub.w	r3, r3, fp
9001f61e:	920a      	str	r2, [sp, #40]	; 0x28
9001f620:	f104 0204 	add.w	r2, r4, #4
9001f624:	9317      	str	r3, [sp, #92]	; 0x5c
9001f626:	9213      	str	r2, [sp, #76]	; 0x4c
9001f628:	9a06      	ldr	r2, [sp, #24]
9001f62a:	bf08      	it	eq
9001f62c:	4611      	moveq	r1, r2
9001f62e:	2200      	movs	r2, #0
9001f630:	b289      	uxth	r1, r1
9001f632:	920d      	str	r2, [sp, #52]	; 0x34
9001f634:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001f636:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001f638:	fa12 f383 	uxtah	r3, r2, r3
9001f63c:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001f63e:	eb02 0383 	add.w	r3, r2, r3, lsl #2
9001f642:	3304      	adds	r3, #4
9001f644:	9308      	str	r3, [sp, #32]
9001f646:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001f648:	4543      	cmp	r3, r8
9001f64a:	f240 8168 	bls.w	9001f91e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3da>
9001f64e:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
9001f652:	f04f 0e01 	mov.w	lr, #1
9001f656:	9a02      	ldr	r2, [sp, #8]
9001f658:	9808      	ldr	r0, [sp, #32]
9001f65a:	fbb5 f3f3 	udiv	r3, r5, r3
9001f65e:	1ad3      	subs	r3, r2, r3
9001f660:	7800      	ldrb	r0, [r0, #0]
9001f662:	b29b      	uxth	r3, r3
9001f664:	9010      	str	r0, [sp, #64]	; 0x40
9001f666:	3001      	adds	r0, #1
9001f668:	9314      	str	r3, [sp, #80]	; 0x50
9001f66a:	9b08      	ldr	r3, [sp, #32]
9001f66c:	9007      	str	r0, [sp, #28]
9001f66e:	785a      	ldrb	r2, [r3, #1]
9001f670:	789b      	ldrb	r3, [r3, #2]
9001f672:	021b      	lsls	r3, r3, #8
9001f674:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9001f678:	9a08      	ldr	r2, [sp, #32]
9001f67a:	78d2      	ldrb	r2, [r2, #3]
9001f67c:	4313      	orrs	r3, r2
9001f67e:	9a11      	ldr	r2, [sp, #68]	; 0x44
9001f680:	441a      	add	r2, r3
9001f682:	1c50      	adds	r0, r2, #1
9001f684:	7852      	ldrb	r2, [r2, #1]
9001f686:	9005      	str	r0, [sp, #20]
9001f688:	0212      	lsls	r2, r2, #8
9001f68a:	9811      	ldr	r0, [sp, #68]	; 0x44
9001f68c:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
9001f690:	5cc3      	ldrb	r3, [r0, r3]
9001f692:	431a      	orrs	r2, r3
9001f694:	b293      	uxth	r3, r2
9001f696:	f88b 2804 	strb.w	r2, [fp, #2052]	; 0x804
9001f69a:	930b      	str	r3, [sp, #44]	; 0x2c
9001f69c:	2300      	movs	r3, #0
9001f69e:	9309      	str	r3, [sp, #36]	; 0x24
9001f6a0:	2301      	movs	r3, #1
9001f6a2:	9301      	str	r3, [sp, #4]
9001f6a4:	9304      	str	r3, [sp, #16]
9001f6a6:	2300      	movs	r3, #0
9001f6a8:	9303      	str	r3, [sp, #12]
9001f6aa:	2d00      	cmp	r5, #0
9001f6ac:	d07d      	beq.n	9001f7aa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x266>
9001f6ae:	45ae      	cmp	lr, r5
9001f6b0:	d26c      	bcs.n	9001f78c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x248>
9001f6b2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001f6b4:	eba5 050e 	sub.w	r5, r5, lr
9001f6b8:	460c      	mov	r4, r1
9001f6ba:	4543      	cmp	r3, r8
9001f6bc:	b2ad      	uxth	r5, r5
9001f6be:	d802      	bhi.n	9001f6c6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x182>
9001f6c0:	e071      	b.n	9001f7a6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x262>
9001f6c2:	2b00      	cmp	r3, #0
9001f6c4:	d15d      	bne.n	9001f782 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x23e>
9001f6c6:	9b05      	ldr	r3, [sp, #20]
9001f6c8:	9a04      	ldr	r2, [sp, #16]
9001f6ca:	785b      	ldrb	r3, [r3, #1]
9001f6cc:	f1c2 0207 	rsb	r2, r2, #7
9001f6d0:	9904      	ldr	r1, [sp, #16]
9001f6d2:	4093      	lsls	r3, r2
9001f6d4:	005b      	lsls	r3, r3, #1
9001f6d6:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
9001f6da:	9b05      	ldr	r3, [sp, #20]
9001f6dc:	781b      	ldrb	r3, [r3, #0]
9001f6de:	410b      	asrs	r3, r1
9001f6e0:	3101      	adds	r1, #1
9001f6e2:	b2c9      	uxtb	r1, r1
9001f6e4:	b2db      	uxtb	r3, r3
9001f6e6:	2908      	cmp	r1, #8
9001f6e8:	9104      	str	r1, [sp, #16]
9001f6ea:	9905      	ldr	r1, [sp, #20]
9001f6ec:	ea43 0302 	orr.w	r3, r3, r2
9001f6f0:	bf0c      	ite	eq
9001f6f2:	3102      	addeq	r1, #2
9001f6f4:	3101      	addne	r1, #1
9001f6f6:	b29a      	uxth	r2, r3
9001f6f8:	bf05      	ittet	eq
9001f6fa:	9105      	streq	r1, [sp, #20]
9001f6fc:	2100      	moveq	r1, #0
9001f6fe:	9105      	strne	r1, [sp, #20]
9001f700:	9104      	streq	r1, [sp, #16]
9001f702:	9910      	ldr	r1, [sp, #64]	; 0x40
9001f704:	4291      	cmp	r1, r2
9001f706:	d30a      	bcc.n	9001f71e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1da>
9001f708:	f88b 3804 	strb.w	r3, [fp, #2052]	; 0x804
9001f70c:	2301      	movs	r3, #1
9001f70e:	9907      	ldr	r1, [sp, #28]
9001f710:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
9001f714:	d30f      	bcc.n	9001f736 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1f2>
9001f716:	2100      	movs	r1, #0
9001f718:	9301      	str	r3, [sp, #4]
9001f71a:	9103      	str	r1, [sp, #12]
9001f71c:	e032      	b.n	9001f784 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
9001f71e:	9b07      	ldr	r3, [sp, #28]
9001f720:	429a      	cmp	r2, r3
9001f722:	d318      	bcc.n	9001f756 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x212>
9001f724:	9b01      	ldr	r3, [sp, #4]
9001f726:	f89b 1804 	ldrb.w	r1, [fp, #2052]	; 0x804
9001f72a:	445b      	add	r3, fp
9001f72c:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
9001f730:	9b01      	ldr	r3, [sp, #4]
9001f732:	3301      	adds	r3, #1
9001f734:	b29b      	uxth	r3, r3
9001f736:	9907      	ldr	r1, [sp, #28]
9001f738:	f89b 0804 	ldrb.w	r0, [fp, #2052]	; 0x804
9001f73c:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
9001f740:	7108      	strb	r0, [r1, #4]
9001f742:	980b      	ldr	r0, [sp, #44]	; 0x2c
9001f744:	80c8      	strh	r0, [r1, #6]
9001f746:	9801      	ldr	r0, [sp, #4]
9001f748:	3001      	adds	r0, #1
9001f74a:	7148      	strb	r0, [r1, #5]
9001f74c:	9907      	ldr	r1, [sp, #28]
9001f74e:	3101      	adds	r1, #1
9001f750:	b289      	uxth	r1, r1
9001f752:	9107      	str	r1, [sp, #28]
9001f754:	e7df      	b.n	9001f716 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
9001f756:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
9001f75a:	4611      	mov	r1, r2
9001f75c:	795b      	ldrb	r3, [r3, #5]
9001f75e:	f603 0004 	addw	r0, r3, #2052	; 0x804
9001f762:	4458      	add	r0, fp
9001f764:	9e17      	ldr	r6, [sp, #92]	; 0x5c
9001f766:	4406      	add	r6, r0
9001f768:	2e00      	cmp	r6, #0
9001f76a:	dd06      	ble.n	9001f77a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
9001f76c:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
9001f770:	790e      	ldrb	r6, [r1, #4]
9001f772:	f800 6d01 	strb.w	r6, [r0, #-1]!
9001f776:	88c9      	ldrh	r1, [r1, #6]
9001f778:	e7f4      	b.n	9001f764 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x220>
9001f77a:	f88b 1804 	strb.w	r1, [fp, #2052]	; 0x804
9001f77e:	b29b      	uxth	r3, r3
9001f780:	e7c5      	b.n	9001f70e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
9001f782:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
9001f784:	4621      	mov	r1, r4
9001f786:	920b      	str	r2, [sp, #44]	; 0x2c
9001f788:	469e      	mov	lr, r3
9001f78a:	e78e      	b.n	9001f6aa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x166>
9001f78c:	9a03      	ldr	r2, [sp, #12]
9001f78e:	ebae 0305 	sub.w	r3, lr, r5
9001f792:	f8bd 4018 	ldrh.w	r4, [sp, #24]
9001f796:	442a      	add	r2, r5
9001f798:	b29b      	uxth	r3, r3
9001f79a:	b292      	uxth	r2, r2
9001f79c:	9203      	str	r2, [sp, #12]
9001f79e:	2500      	movs	r5, #0
9001f7a0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
9001f7a2:	4542      	cmp	r2, r8
9001f7a4:	d88d      	bhi.n	9001f6c2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17e>
9001f7a6:	4621      	mov	r1, r4
9001f7a8:	e74d      	b.n	9001f646 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x102>
9001f7aa:	458e      	cmp	lr, r1
9001f7ac:	f04f 0900 	mov.w	r9, #0
9001f7b0:	bf2b      	itete	cs
9001f7b2:	ebae 0301 	subcs.w	r3, lr, r1
9001f7b6:	eba1 040e 	subcc.w	r4, r1, lr
9001f7ba:	462c      	movcs	r4, r5
9001f7bc:	462b      	movcc	r3, r5
9001f7be:	bf27      	ittee	cs
9001f7c0:	b29b      	uxthcs	r3, r3
9001f7c2:	910c      	strcs	r1, [sp, #48]	; 0x30
9001f7c4:	b2a4      	uxthcc	r4, r4
9001f7c6:	f8cd e030 	strcc.w	lr, [sp, #48]	; 0x30
9001f7ca:	9a03      	ldr	r2, [sp, #12]
9001f7cc:	980c      	ldr	r0, [sp, #48]	; 0x30
9001f7ce:	444a      	add	r2, r9
9001f7d0:	4548      	cmp	r0, r9
9001f7d2:	b292      	uxth	r2, r2
9001f7d4:	d074      	beq.n	9001f8c0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x37c>
9001f7d6:	2004      	movs	r0, #4
9001f7d8:	445a      	add	r2, fp
9001f7da:	4605      	mov	r5, r0
9001f7dc:	f892 2804 	ldrb.w	r2, [r2, #2052]	; 0x804
9001f7e0:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001f7e2:	fb15 0202 	smlabb	r2, r5, r2, r0
9001f7e6:	9812      	ldr	r0, [sp, #72]	; 0x48
9001f7e8:	5880      	ldr	r0, [r0, r2]
9001f7ea:	ea5f 6a10 	movs.w	sl, r0, lsr #24
9001f7ee:	d014      	beq.n	9001f81a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
9001f7f0:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
9001f7f4:	ea4f 2510 	mov.w	r5, r0, lsr #8
9001f7f8:	d112      	bne.n	9001f820 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
9001f7fa:	9a0e      	ldr	r2, [sp, #56]	; 0x38
9001f7fc:	2aff      	cmp	r2, #255	; 0xff
9001f7fe:	d10f      	bne.n	9001f820 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
9001f800:	0942      	lsrs	r2, r0, #5
9001f802:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
9001f806:	f3c0 00c4 	ubfx	r0, r0, #3, #5
9001f80a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001f80e:	f025 0507 	bic.w	r5, r5, #7
9001f812:	4315      	orrs	r5, r2
9001f814:	4305      	orrs	r5, r0
9001f816:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
9001f81a:	f109 0901 	add.w	r9, r9, #1
9001f81e:	e7d4      	b.n	9001f7ca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x286>
9001f820:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
9001f824:	b2ed      	uxtb	r5, r5
9001f826:	ea4f 06ec 	mov.w	r6, ip, asr #3
9001f82a:	ea4f 272c 	mov.w	r7, ip, asr #8
9001f82e:	f006 02fc 	and.w	r2, r6, #252	; 0xfc
9001f832:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001f836:	f3c0 4607 	ubfx	r6, r0, #16, #8
9001f83a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001f83e:	9215      	str	r2, [sp, #84]	; 0x54
9001f840:	fa5f fc8c 	uxtb.w	ip, ip
9001f844:	9a0e      	ldr	r2, [sp, #56]	; 0x38
9001f846:	b2c0      	uxtb	r0, r0
9001f848:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
9001f84c:	fb02 fa0a 	mul.w	sl, r2, sl
9001f850:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
9001f854:	f10a 0201 	add.w	r2, sl, #1
9001f858:	eb02 222a 	add.w	r2, r2, sl, asr #8
9001f85c:	1212      	asrs	r2, r2, #8
9001f85e:	fa1f fa82 	uxth.w	sl, r2
9001f862:	43d2      	mvns	r2, r2
9001f864:	fb16 f60a 	smulbb	r6, r6, sl
9001f868:	b2d2      	uxtb	r2, r2
9001f86a:	fb10 f00a 	smulbb	r0, r0, sl
9001f86e:	fb07 6702 	mla	r7, r7, r2, r6
9001f872:	9e15      	ldr	r6, [sp, #84]	; 0x54
9001f874:	fb0c 0002 	mla	r0, ip, r2, r0
9001f878:	fb15 f50a 	smulbb	r5, r5, sl
9001f87c:	b2bf      	uxth	r7, r7
9001f87e:	b280      	uxth	r0, r0
9001f880:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
9001f884:	fb06 5602 	mla	r6, r6, r2, r5
9001f888:	1c7a      	adds	r2, r7, #1
9001f88a:	1c45      	adds	r5, r0, #1
9001f88c:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001f890:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001f894:	b2b6      	uxth	r6, r6
9001f896:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
9001f89a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001f89e:	432f      	orrs	r7, r5
9001f8a0:	1c75      	adds	r5, r6, #1
9001f8a2:	eb05 2516 	add.w	r5, r5, r6, lsr #8
9001f8a6:	096d      	lsrs	r5, r5, #5
9001f8a8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001f8ac:	432f      	orrs	r7, r5
9001f8ae:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
9001f8b2:	e7b2      	b.n	9001f81a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
9001f8b4:	240236cc 	.word	0x240236cc
9001f8b8:	240236c6 	.word	0x240236c6
9001f8bc:	fffff7fb 	.word	0xfffff7fb
9001f8c0:	9203      	str	r2, [sp, #12]
9001f8c2:	458e      	cmp	lr, r1
9001f8c4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
9001f8c6:	eb08 0842 	add.w	r8, r8, r2, lsl #1
9001f8ca:	f4ff af68 	bcc.w	9001f79e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
9001f8ce:	9a16      	ldr	r2, [sp, #88]	; 0x58
9001f8d0:	9906      	ldr	r1, [sp, #24]
9001f8d2:	8812      	ldrh	r2, [r2, #0]
9001f8d4:	1a52      	subs	r2, r2, r1
9001f8d6:	9914      	ldr	r1, [sp, #80]	; 0x50
9001f8d8:	eb08 0842 	add.w	r8, r8, r2, lsl #1
9001f8dc:	9a09      	ldr	r2, [sp, #36]	; 0x24
9001f8de:	3201      	adds	r2, #1
9001f8e0:	428a      	cmp	r2, r1
9001f8e2:	9209      	str	r2, [sp, #36]	; 0x24
9001f8e4:	d111      	bne.n	9001f90a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3c6>
9001f8e6:	f8bd 5068 	ldrh.w	r5, [sp, #104]	; 0x68
9001f8ea:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
9001f8ee:	9b06      	ldr	r3, [sp, #24]
9001f8f0:	eba5 0509 	sub.w	r5, r5, r9
9001f8f4:	b2ad      	uxth	r5, r5
9001f8f6:	2d00      	cmp	r5, #0
9001f8f8:	bf08      	it	eq
9001f8fa:	4619      	moveq	r1, r3
9001f8fc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001f8fe:	bf18      	it	ne
9001f900:	2100      	movne	r1, #0
9001f902:	3301      	adds	r3, #1
9001f904:	b289      	uxth	r1, r1
9001f906:	930d      	str	r3, [sp, #52]	; 0x34
9001f908:	e694      	b.n	9001f634 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf0>
9001f90a:	f8bd 4018 	ldrh.w	r4, [sp, #24]
9001f90e:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
9001f912:	1b2d      	subs	r5, r5, r4
9001f914:	b2ad      	uxth	r5, r5
9001f916:	2d00      	cmp	r5, #0
9001f918:	bf18      	it	ne
9001f91a:	2400      	movne	r4, #0
9001f91c:	e740      	b.n	9001f7a0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25c>
9001f91e:	4b04      	ldr	r3, [pc, #16]	; (9001f930 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3ec>)
9001f920:	6818      	ldr	r0, [r3, #0]
9001f922:	6803      	ldr	r3, [r0, #0]
9001f924:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001f926:	4798      	blx	r3
9001f928:	b01d      	add	sp, #116	; 0x74
9001f92a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001f92e:	bf00      	nop
9001f930:	240236cc 	.word	0x240236cc

9001f934 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
9001f934:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001f938:	b09f      	sub	sp, #124	; 0x7c
9001f93a:	461d      	mov	r5, r3
9001f93c:	4604      	mov	r4, r0
9001f93e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9001f940:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
9001f944:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
9001f948:	920a      	str	r2, [sp, #40]	; 0x28
9001f94a:	2a00      	cmp	r2, #0
9001f94c:	f000 81fe 	beq.w	9001fd4c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>
9001f950:	6828      	ldr	r0, [r5, #0]
9001f952:	aa1a      	add	r2, sp, #104	; 0x68
9001f954:	6869      	ldr	r1, [r5, #4]
9001f956:	c203      	stmia	r2!, {r0, r1}
9001f958:	6818      	ldr	r0, [r3, #0]
9001f95a:	aa1c      	add	r2, sp, #112	; 0x70
9001f95c:	6859      	ldr	r1, [r3, #4]
9001f95e:	c203      	stmia	r2!, {r0, r1}
9001f960:	a81a      	add	r0, sp, #104	; 0x68
9001f962:	f7f8 fe59 	bl	90018618 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001f966:	4629      	mov	r1, r5
9001f968:	a81c      	add	r0, sp, #112	; 0x70
9001f96a:	f7f8 fe99 	bl	900186a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001f96e:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
9001f972:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
9001f976:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
9001f97a:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	; 0x76
9001f97e:	bfdb      	ittet	le
9001f980:	b29a      	uxthle	r2, r3
9001f982:	f44f 6180 	movle.w	r1, #1024	; 0x400
9001f986:	2201      	movgt	r2, #1
9001f988:	fb91 f2f2 	sdivle	r2, r1, r2
9001f98c:	9201      	str	r2, [sp, #4]
9001f98e:	9801      	ldr	r0, [sp, #4]
9001f990:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
9001f994:	9901      	ldr	r1, [sp, #4]
9001f996:	fb92 f0f0 	sdiv	r0, r2, r0
9001f99a:	b280      	uxth	r0, r0
9001f99c:	440e      	add	r6, r1
9001f99e:	9010      	str	r0, [sp, #64]	; 0x40
9001f9a0:	3e01      	subs	r6, #1
9001f9a2:	9801      	ldr	r0, [sp, #4]
9001f9a4:	9d10      	ldr	r5, [sp, #64]	; 0x40
9001f9a6:	fb05 2510 	mls	r5, r5, r0, r2
9001f9aa:	fb96 f6f1 	sdiv	r6, r6, r1
9001f9ae:	fb15 f503 	smulbb	r5, r5, r3
9001f9b2:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
9001f9b6:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
9001f9ba:	3601      	adds	r6, #1
9001f9bc:	440d      	add	r5, r1
9001f9be:	4419      	add	r1, r3
9001f9c0:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
9001f9c4:	b2b6      	uxth	r6, r6
9001f9c6:	441a      	add	r2, r3
9001f9c8:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
9001f9cc:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
9001f9d0:	b2ad      	uxth	r5, r5
9001f9d2:	9304      	str	r3, [sp, #16]
9001f9d4:	4b96      	ldr	r3, [pc, #600]	; (9001fc30 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
9001f9d6:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
9001f9da:	6818      	ldr	r0, [r3, #0]
9001f9dc:	6803      	ldr	r3, [r0, #0]
9001f9de:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001f9e0:	4798      	blx	r3
9001f9e2:	4b94      	ldr	r3, [pc, #592]	; (9001fc34 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>)
9001f9e4:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
9001f9e8:	2d00      	cmp	r5, #0
9001f9ea:	881a      	ldrh	r2, [r3, #0]
9001f9ec:	f9bd c070 	ldrsh.w	ip, [sp, #112]	; 0x70
9001f9f0:	fb02 f707 	mul.w	r7, r2, r7
9001f9f4:	fb02 c101 	mla	r1, r2, r1, ip
9001f9f8:	9318      	str	r3, [sp, #96]	; 0x60
9001f9fa:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
9001f9fe:	4b8e      	ldr	r3, [pc, #568]	; (9001fc38 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x304>)
9001fa00:	bf18      	it	ne
9001fa02:	2100      	movne	r1, #0
9001fa04:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
9001fa08:	eba3 0304 	sub.w	r3, r3, r4
9001fa0c:	920b      	str	r2, [sp, #44]	; 0x2c
9001fa0e:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001fa10:	9319      	str	r3, [sp, #100]	; 0x64
9001fa12:	eb02 0686 	add.w	r6, r2, r6, lsl #2
9001fa16:	f106 0204 	add.w	r2, r6, #4
9001fa1a:	9206      	str	r2, [sp, #24]
9001fa1c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
9001fa1e:	ea6f 0202 	mvn.w	r2, r2
9001fa22:	b2d2      	uxtb	r2, r2
9001fa24:	9215      	str	r2, [sp, #84]	; 0x54
9001fa26:	9a04      	ldr	r2, [sp, #16]
9001fa28:	bf08      	it	eq
9001fa2a:	4611      	moveq	r1, r2
9001fa2c:	2200      	movs	r2, #0
9001fa2e:	b289      	uxth	r1, r1
9001fa30:	920d      	str	r2, [sp, #52]	; 0x34
9001fa32:	9a10      	ldr	r2, [sp, #64]	; 0x40
9001fa34:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001fa36:	fa12 f383 	uxtah	r3, r2, r3
9001fa3a:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001fa3c:	eb02 0383 	add.w	r3, r2, r3, lsl #2
9001fa40:	3304      	adds	r3, #4
9001fa42:	9307      	str	r3, [sp, #28]
9001fa44:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001fa46:	455b      	cmp	r3, fp
9001fa48:	f240 817b 	bls.w	9001fd42 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x40e>
9001fa4c:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
9001fa50:	f04f 0801 	mov.w	r8, #1
9001fa54:	9a01      	ldr	r2, [sp, #4]
9001fa56:	9807      	ldr	r0, [sp, #28]
9001fa58:	46c4      	mov	ip, r8
9001fa5a:	f8cd 8008 	str.w	r8, [sp, #8]
9001fa5e:	7800      	ldrb	r0, [r0, #0]
9001fa60:	fbb5 f3f3 	udiv	r3, r5, r3
9001fa64:	1ad3      	subs	r3, r2, r3
9001fa66:	9011      	str	r0, [sp, #68]	; 0x44
9001fa68:	3001      	adds	r0, #1
9001fa6a:	b29b      	uxth	r3, r3
9001fa6c:	9005      	str	r0, [sp, #20]
9001fa6e:	9316      	str	r3, [sp, #88]	; 0x58
9001fa70:	9b07      	ldr	r3, [sp, #28]
9001fa72:	785a      	ldrb	r2, [r3, #1]
9001fa74:	789b      	ldrb	r3, [r3, #2]
9001fa76:	021b      	lsls	r3, r3, #8
9001fa78:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9001fa7c:	9a07      	ldr	r2, [sp, #28]
9001fa7e:	78d2      	ldrb	r2, [r2, #3]
9001fa80:	4313      	orrs	r3, r2
9001fa82:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001fa84:	441a      	add	r2, r3
9001fa86:	1c50      	adds	r0, r2, #1
9001fa88:	7852      	ldrb	r2, [r2, #1]
9001fa8a:	9003      	str	r0, [sp, #12]
9001fa8c:	0212      	lsls	r2, r2, #8
9001fa8e:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001fa90:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
9001fa94:	5cc3      	ldrb	r3, [r0, r3]
9001fa96:	431a      	orrs	r2, r3
9001fa98:	b293      	uxth	r3, r2
9001fa9a:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
9001fa9e:	930c      	str	r3, [sp, #48]	; 0x30
9001faa0:	2300      	movs	r3, #0
9001faa2:	9308      	str	r3, [sp, #32]
9001faa4:	461a      	mov	r2, r3
9001faa6:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
9001faaa:	930e      	str	r3, [sp, #56]	; 0x38
9001faac:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
9001fab0:	930f      	str	r3, [sp, #60]	; 0x3c
9001fab2:	2d00      	cmp	r5, #0
9001fab4:	d07d      	beq.n	9001fbb2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27e>
9001fab6:	45ac      	cmp	ip, r5
9001fab8:	d26d      	bcs.n	9001fb96 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x262>
9001faba:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001fabc:	eba5 050c 	sub.w	r5, r5, ip
9001fac0:	4608      	mov	r0, r1
9001fac2:	455b      	cmp	r3, fp
9001fac4:	b2ad      	uxth	r5, r5
9001fac6:	d802      	bhi.n	9001face <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19a>
9001fac8:	e071      	b.n	9001fbae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27a>
9001faca:	2b00      	cmp	r3, #0
9001facc:	d15d      	bne.n	9001fb8a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
9001face:	9b03      	ldr	r3, [sp, #12]
9001fad0:	9a02      	ldr	r2, [sp, #8]
9001fad2:	785b      	ldrb	r3, [r3, #1]
9001fad4:	f1c2 0207 	rsb	r2, r2, #7
9001fad8:	9902      	ldr	r1, [sp, #8]
9001fada:	4093      	lsls	r3, r2
9001fadc:	005b      	lsls	r3, r3, #1
9001fade:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
9001fae2:	9b03      	ldr	r3, [sp, #12]
9001fae4:	781b      	ldrb	r3, [r3, #0]
9001fae6:	410b      	asrs	r3, r1
9001fae8:	3101      	adds	r1, #1
9001faea:	b2c9      	uxtb	r1, r1
9001faec:	b2db      	uxtb	r3, r3
9001faee:	2908      	cmp	r1, #8
9001faf0:	9102      	str	r1, [sp, #8]
9001faf2:	9903      	ldr	r1, [sp, #12]
9001faf4:	ea43 0302 	orr.w	r3, r3, r2
9001faf8:	bf0c      	ite	eq
9001fafa:	3102      	addeq	r1, #2
9001fafc:	3101      	addne	r1, #1
9001fafe:	b29a      	uxth	r2, r3
9001fb00:	bf05      	ittet	eq
9001fb02:	9103      	streq	r1, [sp, #12]
9001fb04:	2100      	moveq	r1, #0
9001fb06:	9103      	strne	r1, [sp, #12]
9001fb08:	9102      	streq	r1, [sp, #8]
9001fb0a:	9911      	ldr	r1, [sp, #68]	; 0x44
9001fb0c:	4291      	cmp	r1, r2
9001fb0e:	d30a      	bcc.n	9001fb26 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1f2>
9001fb10:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
9001fb14:	2301      	movs	r3, #1
9001fb16:	9905      	ldr	r1, [sp, #20]
9001fb18:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
9001fb1c:	d30f      	bcc.n	9001fb3e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x20a>
9001fb1e:	2100      	movs	r1, #0
9001fb20:	4698      	mov	r8, r3
9001fb22:	9100      	str	r1, [sp, #0]
9001fb24:	e032      	b.n	9001fb8c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x258>
9001fb26:	9b05      	ldr	r3, [sp, #20]
9001fb28:	429a      	cmp	r2, r3
9001fb2a:	d318      	bcc.n	9001fb5e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22a>
9001fb2c:	eb04 0308 	add.w	r3, r4, r8
9001fb30:	f894 1804 	ldrb.w	r1, [r4, #2052]	; 0x804
9001fb34:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
9001fb38:	f108 0301 	add.w	r3, r8, #1
9001fb3c:	b29b      	uxth	r3, r3
9001fb3e:	9905      	ldr	r1, [sp, #20]
9001fb40:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
9001fb44:	eb04 0181 	add.w	r1, r4, r1, lsl #2
9001fb48:	710e      	strb	r6, [r1, #4]
9001fb4a:	9e0c      	ldr	r6, [sp, #48]	; 0x30
9001fb4c:	80ce      	strh	r6, [r1, #6]
9001fb4e:	f108 0601 	add.w	r6, r8, #1
9001fb52:	714e      	strb	r6, [r1, #5]
9001fb54:	9905      	ldr	r1, [sp, #20]
9001fb56:	3101      	adds	r1, #1
9001fb58:	b289      	uxth	r1, r1
9001fb5a:	9105      	str	r1, [sp, #20]
9001fb5c:	e7df      	b.n	9001fb1e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1ea>
9001fb5e:	eb04 0382 	add.w	r3, r4, r2, lsl #2
9001fb62:	4611      	mov	r1, r2
9001fb64:	795b      	ldrb	r3, [r3, #5]
9001fb66:	f603 0604 	addw	r6, r3, #2052	; 0x804
9001fb6a:	4426      	add	r6, r4
9001fb6c:	9f19      	ldr	r7, [sp, #100]	; 0x64
9001fb6e:	4437      	add	r7, r6
9001fb70:	2f00      	cmp	r7, #0
9001fb72:	dd06      	ble.n	9001fb82 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24e>
9001fb74:	eb04 0181 	add.w	r1, r4, r1, lsl #2
9001fb78:	790f      	ldrb	r7, [r1, #4]
9001fb7a:	f806 7d01 	strb.w	r7, [r6, #-1]!
9001fb7e:	88c9      	ldrh	r1, [r1, #6]
9001fb80:	e7f4      	b.n	9001fb6c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x238>
9001fb82:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
9001fb86:	b29b      	uxth	r3, r3
9001fb88:	e7c5      	b.n	9001fb16 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e2>
9001fb8a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
9001fb8c:	920c      	str	r2, [sp, #48]	; 0x30
9001fb8e:	4601      	mov	r1, r0
9001fb90:	9a00      	ldr	r2, [sp, #0]
9001fb92:	469c      	mov	ip, r3
9001fb94:	e78d      	b.n	9001fab2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x17e>
9001fb96:	ebac 0305 	sub.w	r3, ip, r5
9001fb9a:	1957      	adds	r7, r2, r5
9001fb9c:	f8bd 0010 	ldrh.w	r0, [sp, #16]
9001fba0:	b2ba      	uxth	r2, r7
9001fba2:	b29b      	uxth	r3, r3
9001fba4:	9200      	str	r2, [sp, #0]
9001fba6:	2500      	movs	r5, #0
9001fba8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
9001fbaa:	455a      	cmp	r2, fp
9001fbac:	d88d      	bhi.n	9001faca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
9001fbae:	4601      	mov	r1, r0
9001fbb0:	e748      	b.n	9001fa44 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x110>
9001fbb2:	458c      	cmp	ip, r1
9001fbb4:	bf27      	ittee	cs
9001fbb6:	ebac 0301 	subcs.w	r3, ip, r1
9001fbba:	4628      	movcs	r0, r5
9001fbbc:	eba1 000c 	subcc.w	r0, r1, ip
9001fbc0:	462b      	movcc	r3, r5
9001fbc2:	9d0a      	ldr	r5, [sp, #40]	; 0x28
9001fbc4:	bf27      	ittee	cs
9001fbc6:	b29b      	uxthcs	r3, r3
9001fbc8:	9109      	strcs	r1, [sp, #36]	; 0x24
9001fbca:	b280      	uxthcc	r0, r0
9001fbcc:	f8cd c024 	strcc.w	ip, [sp, #36]	; 0x24
9001fbd0:	2dff      	cmp	r5, #255	; 0xff
9001fbd2:	9d09      	ldr	r5, [sp, #36]	; 0x24
9001fbd4:	eb02 0705 	add.w	r7, r2, r5
9001fbd8:	b2bd      	uxth	r5, r7
9001fbda:	9500      	str	r5, [sp, #0]
9001fbdc:	d12e      	bne.n	9001fc3c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x308>
9001fbde:	465e      	mov	r6, fp
9001fbe0:	9d00      	ldr	r5, [sp, #0]
9001fbe2:	42aa      	cmp	r2, r5
9001fbe4:	f040 8083 	bne.w	9001fcee <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3ba>
9001fbe8:	9a09      	ldr	r2, [sp, #36]	; 0x24
9001fbea:	458c      	cmp	ip, r1
9001fbec:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
9001fbf0:	d3d9      	bcc.n	9001fba6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
9001fbf2:	9a18      	ldr	r2, [sp, #96]	; 0x60
9001fbf4:	9904      	ldr	r1, [sp, #16]
9001fbf6:	8812      	ldrh	r2, [r2, #0]
9001fbf8:	1a52      	subs	r2, r2, r1
9001fbfa:	9916      	ldr	r1, [sp, #88]	; 0x58
9001fbfc:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
9001fc00:	9a08      	ldr	r2, [sp, #32]
9001fc02:	3201      	adds	r2, #1
9001fc04:	428a      	cmp	r2, r1
9001fc06:	9208      	str	r2, [sp, #32]
9001fc08:	f040 8091 	bne.w	9001fd2e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3fa>
9001fc0c:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
9001fc10:	f8bd c068 	ldrh.w	ip, [sp, #104]	; 0x68
9001fc14:	9b04      	ldr	r3, [sp, #16]
9001fc16:	eba5 050c 	sub.w	r5, r5, ip
9001fc1a:	b2ad      	uxth	r5, r5
9001fc1c:	2d00      	cmp	r5, #0
9001fc1e:	bf08      	it	eq
9001fc20:	4619      	moveq	r1, r3
9001fc22:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001fc24:	bf18      	it	ne
9001fc26:	2100      	movne	r1, #0
9001fc28:	3301      	adds	r3, #1
9001fc2a:	b289      	uxth	r1, r1
9001fc2c:	930d      	str	r3, [sp, #52]	; 0x34
9001fc2e:	e700      	b.n	9001fa32 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xfe>
9001fc30:	240236cc 	.word	0x240236cc
9001fc34:	240236c6 	.word	0x240236c6
9001fc38:	fffff7fb 	.word	0xfffff7fb
9001fc3c:	46d9      	mov	r9, fp
9001fc3e:	9d00      	ldr	r5, [sp, #0]
9001fc40:	42aa      	cmp	r2, r5
9001fc42:	d0d1      	beq.n	9001fbe8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2b4>
9001fc44:	1c55      	adds	r5, r2, #1
9001fc46:	4422      	add	r2, r4
9001fc48:	f892 e804 	ldrb.w	lr, [r2, #2052]	; 0x804
9001fc4c:	9a06      	ldr	r2, [sp, #24]
9001fc4e:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001fc52:	9517      	str	r5, [sp, #92]	; 0x5c
9001fc54:	4472      	add	r2, lr
9001fc56:	9212      	str	r2, [sp, #72]	; 0x48
9001fc58:	f8b9 2000 	ldrh.w	r2, [r9]
9001fc5c:	9f12      	ldr	r7, [sp, #72]	; 0x48
9001fc5e:	1216      	asrs	r6, r2, #8
9001fc60:	f897 a002 	ldrb.w	sl, [r7, #2]
9001fc64:	10d5      	asrs	r5, r2, #3
9001fc66:	9f0e      	ldr	r7, [sp, #56]	; 0x38
9001fc68:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001fc6c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
9001fc70:	00d2      	lsls	r2, r2, #3
9001fc72:	fb1a fa07 	smulbb	sl, sl, r7
9001fc76:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9001fc7a:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
9001fc7c:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9001fc80:	b2d2      	uxtb	r2, r2
9001fc82:	fb06 a607 	mla	r6, r6, r7, sl
9001fc86:	9f12      	ldr	r7, [sp, #72]	; 0x48
9001fc88:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001fc8c:	f897 a001 	ldrb.w	sl, [r7, #1]
9001fc90:	b2b6      	uxth	r6, r6
9001fc92:	9f0e      	ldr	r7, [sp, #56]	; 0x38
9001fc94:	fb1a fa07 	smulbb	sl, sl, r7
9001fc98:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
9001fc9a:	fb05 a507 	mla	r5, r5, r7, sl
9001fc9e:	9f06      	ldr	r7, [sp, #24]
9001fca0:	f106 0a01 	add.w	sl, r6, #1
9001fca4:	f817 e00e 	ldrb.w	lr, [r7, lr]
9001fca8:	b2ad      	uxth	r5, r5
9001fcaa:	9f0e      	ldr	r7, [sp, #56]	; 0x38
9001fcac:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
9001fcb0:	f105 0a01 	add.w	sl, r5, #1
9001fcb4:	fb1e fe07 	smulbb	lr, lr, r7
9001fcb8:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
9001fcba:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001fcbe:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
9001fcc2:	fb02 e207 	mla	r2, r2, r7, lr
9001fcc6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001fcca:	b292      	uxth	r2, r2
9001fccc:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001fcd0:	f102 0e01 	add.w	lr, r2, #1
9001fcd4:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
9001fcd8:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
9001fcdc:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
9001fce0:	ea4e 0606 	orr.w	r6, lr, r6
9001fce4:	ea46 060a 	orr.w	r6, r6, sl
9001fce8:	f829 6b02 	strh.w	r6, [r9], #2
9001fcec:	e7a7      	b.n	9001fc3e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x30a>
9001fcee:	f102 0e01 	add.w	lr, r2, #1
9001fcf2:	4422      	add	r2, r4
9001fcf4:	9f06      	ldr	r7, [sp, #24]
9001fcf6:	f892 5804 	ldrb.w	r5, [r2, #2052]	; 0x804
9001fcfa:	9a06      	ldr	r2, [sp, #24]
9001fcfc:	eb05 0545 	add.w	r5, r5, r5, lsl #1
9001fd00:	eb02 0a05 	add.w	sl, r2, r5
9001fd04:	4a13      	ldr	r2, [pc, #76]	; (9001fd54 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x420>)
9001fd06:	f89a 9002 	ldrb.w	r9, [sl, #2]
9001fd0a:	ea02 2909 	and.w	r9, r2, r9, lsl #8
9001fd0e:	f89a 2001 	ldrb.w	r2, [sl, #1]
9001fd12:	00d2      	lsls	r2, r2, #3
9001fd14:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001fd18:	ea49 0202 	orr.w	r2, r9, r2
9001fd1c:	f817 9005 	ldrb.w	r9, [r7, r5]
9001fd20:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
9001fd24:	f826 2b02 	strh.w	r2, [r6], #2
9001fd28:	fa1f f28e 	uxth.w	r2, lr
9001fd2c:	e758      	b.n	9001fbe0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>
9001fd2e:	f8bd 0010 	ldrh.w	r0, [sp, #16]
9001fd32:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
9001fd36:	1a2d      	subs	r5, r5, r0
9001fd38:	b2ad      	uxth	r5, r5
9001fd3a:	2d00      	cmp	r5, #0
9001fd3c:	bf18      	it	ne
9001fd3e:	2000      	movne	r0, #0
9001fd40:	e732      	b.n	9001fba8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x274>
9001fd42:	4b05      	ldr	r3, [pc, #20]	; (9001fd58 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x424>)
9001fd44:	6818      	ldr	r0, [r3, #0]
9001fd46:	6803      	ldr	r3, [r0, #0]
9001fd48:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001fd4a:	4798      	blx	r3
9001fd4c:	b01f      	add	sp, #124	; 0x7c
9001fd4e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001fd52:	bf00      	nop
9001fd54:	fffff800 	.word	0xfffff800
9001fd58:	240236cc 	.word	0x240236cc

9001fd5c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
9001fd5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001fd60:	b091      	sub	sp, #68	; 0x44
9001fd62:	469b      	mov	fp, r3
9001fd64:	4616      	mov	r6, r2
9001fd66:	f9b3 2000 	ldrsh.w	r2, [r3]
9001fd6a:	f10d 0828 	add.w	r8, sp, #40	; 0x28
9001fd6e:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
9001fd72:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
9001fd76:	4604      	mov	r4, r0
9001fd78:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
9001fd7c:	4640      	mov	r0, r8
9001fd7e:	460d      	mov	r5, r1
9001fd80:	4659      	mov	r1, fp
9001fd82:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
9001fd86:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
9001fd8a:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
9001fd8e:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
9001fd92:	f7f3 fed7 	bl	90013b44 <_ZN8touchgfx4RectaNERKS0_>
9001fd96:	4631      	mov	r1, r6
9001fd98:	4640      	mov	r0, r8
9001fd9a:	f7f3 fed3 	bl	90013b44 <_ZN8touchgfx4RectaNERKS0_>
9001fd9e:	4b74      	ldr	r3, [pc, #464]	; (9001ff70 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
9001fda0:	8818      	ldrh	r0, [r3, #0]
9001fda2:	4b74      	ldr	r3, [pc, #464]	; (9001ff74 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
9001fda4:	b202      	sxth	r2, r0
9001fda6:	8819      	ldrh	r1, [r3, #0]
9001fda8:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
9001fdac:	b20e      	sxth	r6, r1
9001fdae:	2b00      	cmp	r3, #0
9001fdb0:	da07      	bge.n	9001fdc2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
9001fdb2:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
9001fdb6:	4463      	add	r3, ip
9001fdb8:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
9001fdbc:	2300      	movs	r3, #0
9001fdbe:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
9001fdc2:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
9001fdc6:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
9001fdca:	1ad2      	subs	r2, r2, r3
9001fdcc:	4594      	cmp	ip, r2
9001fdce:	bfc4      	itt	gt
9001fdd0:	1ac2      	subgt	r2, r0, r3
9001fdd2:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
9001fdd6:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
9001fdda:	2a00      	cmp	r2, #0
9001fddc:	da07      	bge.n	9001fdee <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
9001fdde:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
9001fde2:	4462      	add	r2, ip
9001fde4:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
9001fde8:	2200      	movs	r2, #0
9001fdea:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
9001fdee:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
9001fdf2:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
9001fdf6:	eba6 060a 	sub.w	r6, r6, sl
9001fdfa:	42b2      	cmp	r2, r6
9001fdfc:	bfc4      	itt	gt
9001fdfe:	eba1 020a 	subgt.w	r2, r1, sl
9001fe02:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
9001fe06:	4a5c      	ldr	r2, [pc, #368]	; (9001ff78 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
9001fe08:	7812      	ldrb	r2, [r2, #0]
9001fe0a:	b9a2      	cbnz	r2, 9001fe36 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
9001fe0c:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
9001fe10:	4286      	cmp	r6, r0
9001fe12:	4640      	mov	r0, r8
9001fe14:	9303      	str	r3, [sp, #12]
9001fe16:	bf14      	ite	ne
9001fe18:	2600      	movne	r6, #0
9001fe1a:	2601      	moveq	r6, #1
9001fe1c:	f7f3 fed5 	bl	90013bca <_ZNK8touchgfx4Rect7isEmptyEv>
9001fe20:	9b03      	ldr	r3, [sp, #12]
9001fe22:	b160      	cbz	r0, 9001fe3e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
9001fe24:	2300      	movs	r3, #0
9001fe26:	8023      	strh	r3, [r4, #0]
9001fe28:	8063      	strh	r3, [r4, #2]
9001fe2a:	80a3      	strh	r3, [r4, #4]
9001fe2c:	4620      	mov	r0, r4
9001fe2e:	80e3      	strh	r3, [r4, #6]
9001fe30:	b011      	add	sp, #68	; 0x44
9001fe32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001fe36:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
9001fe3a:	428e      	cmp	r6, r1
9001fe3c:	e7e9      	b.n	9001fe12 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
9001fe3e:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
9001fe42:	a90e      	add	r1, sp, #56	; 0x38
9001fe44:	900e      	str	r0, [sp, #56]	; 0x38
9001fe46:	a80c      	add	r0, sp, #48	; 0x30
9001fe48:	9205      	str	r2, [sp, #20]
9001fe4a:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
9001fe4e:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
9001fe52:	9206      	str	r2, [sp, #24]
9001fe54:	f8bb 2000 	ldrh.w	r2, [fp]
9001fe58:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
9001fe5c:	1a9b      	subs	r3, r3, r2
9001fe5e:	b21b      	sxth	r3, r3
9001fe60:	9303      	str	r3, [sp, #12]
9001fe62:	f8bb 3002 	ldrh.w	r3, [fp, #2]
9001fe66:	f8df b118 	ldr.w	fp, [pc, #280]	; 9001ff80 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
9001fe6a:	ebaa 0a03 	sub.w	sl, sl, r3
9001fe6e:	fa0f f38a 	sxth.w	r3, sl
9001fe72:	9304      	str	r3, [sp, #16]
9001fe74:	9b03      	ldr	r3, [sp, #12]
9001fe76:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
9001fe7a:	9b04      	ldr	r3, [sp, #16]
9001fe7c:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
9001fe80:	9b05      	ldr	r3, [sp, #20]
9001fe82:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
9001fe86:	9b06      	ldr	r3, [sp, #24]
9001fe88:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
9001fe8c:	f7f8 fc08 	bl	900186a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001fe90:	4640      	mov	r0, r8
9001fe92:	f7f8 fbc1 	bl	90018618 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001fe96:	a80e      	add	r0, sp, #56	; 0x38
9001fe98:	f7f8 fbbe 	bl	90018618 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001fe9c:	4b37      	ldr	r3, [pc, #220]	; (9001ff7c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
9001fe9e:	4628      	mov	r0, r5
9001fea0:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
9001fea4:	881b      	ldrh	r3, [r3, #0]
9001fea6:	9307      	str	r3, [sp, #28]
9001fea8:	682b      	ldr	r3, [r5, #0]
9001feaa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9001feac:	4798      	blx	r3
9001feae:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
9001feb2:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
9001feb6:	4681      	mov	r9, r0
9001feb8:	f8db 0000 	ldr.w	r0, [fp]
9001febc:	fb1a 3305 	smlabb	r3, sl, r5, r3
9001fec0:	9d1a      	ldr	r5, [sp, #104]	; 0x68
9001fec2:	eb05 0543 	add.w	r5, r5, r3, lsl #1
9001fec6:	6803      	ldr	r3, [r0, #0]
9001fec8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9001feca:	4798      	blx	r3
9001fecc:	4607      	mov	r7, r0
9001fece:	f8db 0000 	ldr.w	r0, [fp]
9001fed2:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
9001fed6:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
9001feda:	6803      	ldr	r3, [r0, #0]
9001fedc:	9109      	str	r1, [sp, #36]	; 0x24
9001fede:	9208      	str	r2, [sp, #32]
9001fee0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001fee2:	4798      	blx	r3
9001fee4:	f010 0f01 	tst.w	r0, #1
9001fee8:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
9001feec:	d012      	beq.n	9001ff14 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
9001feee:	f8db 0000 	ldr.w	r0, [fp]
9001fef2:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
9001fef6:	6803      	ldr	r3, [r0, #0]
9001fef8:	9200      	str	r2, [sp, #0]
9001fefa:	6ede      	ldr	r6, [r3, #108]	; 0x6c
9001fefc:	462b      	mov	r3, r5
9001fefe:	e898 0006 	ldmia.w	r8, {r1, r2}
9001ff02:	47b0      	blx	r6
9001ff04:	9b03      	ldr	r3, [sp, #12]
9001ff06:	8023      	strh	r3, [r4, #0]
9001ff08:	9b04      	ldr	r3, [sp, #16]
9001ff0a:	8063      	strh	r3, [r4, #2]
9001ff0c:	9b05      	ldr	r3, [sp, #20]
9001ff0e:	80a3      	strh	r3, [r4, #4]
9001ff10:	9b06      	ldr	r3, [sp, #24]
9001ff12:	e78b      	b.n	9001fe2c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
9001ff14:	fb09 f202 	mul.w	r2, r9, r2
9001ff18:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
9001ff1c:	eb02 0141 	add.w	r1, r2, r1, lsl #1
9001ff20:	440f      	add	r7, r1
9001ff22:	b166      	cbz	r6, 9001ff3e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
9001ff24:	9a07      	ldr	r2, [sp, #28]
9001ff26:	4592      	cmp	sl, r2
9001ff28:	d109      	bne.n	9001ff3e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
9001ff2a:	f8db 0000 	ldr.w	r0, [fp]
9001ff2e:	fb09 f303 	mul.w	r3, r9, r3
9001ff32:	4629      	mov	r1, r5
9001ff34:	6802      	ldr	r2, [r0, #0]
9001ff36:	6b56      	ldr	r6, [r2, #52]	; 0x34
9001ff38:	463a      	mov	r2, r7
9001ff3a:	47b0      	blx	r6
9001ff3c:	e7e2      	b.n	9001ff04 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
9001ff3e:	fb0a f303 	mul.w	r3, sl, r3
9001ff42:	ea4f 064a 	mov.w	r6, sl, lsl #1
9001ff46:	f8df b038 	ldr.w	fp, [pc, #56]	; 9001ff80 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
9001ff4a:	eb05 0843 	add.w	r8, r5, r3, lsl #1
9001ff4e:	4545      	cmp	r5, r8
9001ff50:	d2d8      	bcs.n	9001ff04 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
9001ff52:	f8db 0000 	ldr.w	r0, [fp]
9001ff56:	4629      	mov	r1, r5
9001ff58:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
9001ff5c:	4435      	add	r5, r6
9001ff5e:	6802      	ldr	r2, [r0, #0]
9001ff60:	005b      	lsls	r3, r3, #1
9001ff62:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
9001ff66:	463a      	mov	r2, r7
9001ff68:	47d0      	blx	sl
9001ff6a:	444f      	add	r7, r9
9001ff6c:	e7ef      	b.n	9001ff4e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
9001ff6e:	bf00      	nop
9001ff70:	240236c0 	.word	0x240236c0
9001ff74:	240236c2 	.word	0x240236c2
9001ff78:	240236c4 	.word	0x240236c4
9001ff7c:	240236c6 	.word	0x240236c6
9001ff80:	240236cc 	.word	0x240236cc

9001ff84 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
9001ff84:	b5f0      	push	{r4, r5, r6, r7, lr}
9001ff86:	4606      	mov	r6, r0
9001ff88:	b087      	sub	sp, #28
9001ff8a:	460c      	mov	r4, r1
9001ff8c:	4617      	mov	r7, r2
9001ff8e:	461d      	mov	r5, r3
9001ff90:	b333      	cbz	r3, 9001ffe0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
9001ff92:	4608      	mov	r0, r1
9001ff94:	f7f3 fe19 	bl	90013bca <_ZNK8touchgfx4Rect7isEmptyEv>
9001ff98:	bb10      	cbnz	r0, 9001ffe0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
9001ff9a:	6820      	ldr	r0, [r4, #0]
9001ff9c:	ab04      	add	r3, sp, #16
9001ff9e:	6861      	ldr	r1, [r4, #4]
9001ffa0:	4c1b      	ldr	r4, [pc, #108]	; (90020010 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
9001ffa2:	c303      	stmia	r3!, {r0, r1}
9001ffa4:	a804      	add	r0, sp, #16
9001ffa6:	f7f8 fb37 	bl	90018618 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001ffaa:	6820      	ldr	r0, [r4, #0]
9001ffac:	6803      	ldr	r3, [r0, #0]
9001ffae:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001ffb0:	4798      	blx	r3
9001ffb2:	2dff      	cmp	r5, #255	; 0xff
9001ffb4:	d016      	beq.n	9001ffe4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
9001ffb6:	f010 0f08 	tst.w	r0, #8
9001ffba:	6820      	ldr	r0, [r4, #0]
9001ffbc:	d015      	beq.n	9001ffea <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
9001ffbe:	2400      	movs	r4, #0
9001ffc0:	6801      	ldr	r1, [r0, #0]
9001ffc2:	f8bd 3012 	ldrh.w	r3, [sp, #18]
9001ffc6:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001ffca:	e9cd 5402 	strd	r5, r4, [sp, #8]
9001ffce:	f8bd 4016 	ldrh.w	r4, [sp, #22]
9001ffd2:	9401      	str	r4, [sp, #4]
9001ffd4:	f8bd 4014 	ldrh.w	r4, [sp, #20]
9001ffd8:	9400      	str	r4, [sp, #0]
9001ffda:	6e0c      	ldr	r4, [r1, #96]	; 0x60
9001ffdc:	4639      	mov	r1, r7
9001ffde:	47a0      	blx	r4
9001ffe0:	b007      	add	sp, #28
9001ffe2:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001ffe4:	f010 0f02 	tst.w	r0, #2
9001ffe8:	e7e7      	b.n	9001ffba <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
9001ffea:	6803      	ldr	r3, [r0, #0]
9001ffec:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001ffee:	4798      	blx	r3
9001fff0:	4b08      	ldr	r3, [pc, #32]	; (90020014 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
9001fff2:	4601      	mov	r1, r0
9001fff4:	4630      	mov	r0, r6
9001fff6:	881a      	ldrh	r2, [r3, #0]
9001fff8:	6833      	ldr	r3, [r6, #0]
9001fffa:	e9cd 7500 	strd	r7, r5, [sp]
9001fffe:	6a5d      	ldr	r5, [r3, #36]	; 0x24
90020000:	ab04      	add	r3, sp, #16
90020002:	47a8      	blx	r5
90020004:	6820      	ldr	r0, [r4, #0]
90020006:	6803      	ldr	r3, [r0, #0]
90020008:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9002000a:	4798      	blx	r3
9002000c:	e7e8      	b.n	9001ffe0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
9002000e:	bf00      	nop
90020010:	240236cc 	.word	0x240236cc
90020014:	240236c6 	.word	0x240236c6

90020018 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
90020018:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9002001c:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
90020020:	4688      	mov	r8, r1
90020022:	4614      	mov	r4, r2
90020024:	461d      	mov	r5, r3
90020026:	9e08      	ldr	r6, [sp, #32]
90020028:	2f00      	cmp	r7, #0
9002002a:	f000 80ab 	beq.w	90020184 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9002002e:	4618      	mov	r0, r3
90020030:	f7f3 fdcb 	bl	90013bca <_ZNK8touchgfx4Rect7isEmptyEv>
90020034:	2800      	cmp	r0, #0
90020036:	f040 80a5 	bne.w	90020184 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9002003a:	f9b5 1000 	ldrsh.w	r1, [r5]
9002003e:	2fff      	cmp	r7, #255	; 0xff
90020040:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
90020044:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
90020048:	fb04 1303 	mla	r3, r4, r3, r1
9002004c:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
90020050:	eba4 0200 	sub.w	r2, r4, r0
90020054:	eb08 0143 	add.w	r1, r8, r3, lsl #1
90020058:	fb04 f505 	mul.w	r5, r4, r5
9002005c:	ea4f 2816 	mov.w	r8, r6, lsr #8
90020060:	eb01 0545 	add.w	r5, r1, r5, lsl #1
90020064:	d04a      	beq.n	900200fc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe4>
90020066:	b2bc      	uxth	r4, r7
90020068:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
9002006c:	f3c6 4e07 	ubfx	lr, r6, #16, #8
90020070:	fa5f f788 	uxtb.w	r7, r8
90020074:	b2f3      	uxtb	r3, r6
90020076:	0040      	lsls	r0, r0, #1
90020078:	fb0e fe04 	mul.w	lr, lr, r4
9002007c:	4367      	muls	r7, r4
9002007e:	ea4f 0842 	mov.w	r8, r2, lsl #1
90020082:	4363      	muls	r3, r4
90020084:	fa1f fc8c 	uxth.w	ip, ip
90020088:	42a9      	cmp	r1, r5
9002008a:	d27b      	bcs.n	90020184 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9002008c:	eb01 0900 	add.w	r9, r1, r0
90020090:	4549      	cmp	r1, r9
90020092:	d231      	bcs.n	900200f8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe0>
90020094:	880a      	ldrh	r2, [r1, #0]
90020096:	1214      	asrs	r4, r2, #8
90020098:	10d6      	asrs	r6, r2, #3
9002009a:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
9002009e:	00d2      	lsls	r2, r2, #3
900200a0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
900200a4:	b2d2      	uxtb	r2, r2
900200a6:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
900200aa:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
900200ae:	fb14 f40c 	smulbb	r4, r4, ip
900200b2:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
900200b6:	fb12 f20c 	smulbb	r2, r2, ip
900200ba:	fb16 f60c 	smulbb	r6, r6, ip
900200be:	4474      	add	r4, lr
900200c0:	441a      	add	r2, r3
900200c2:	b2a4      	uxth	r4, r4
900200c4:	443e      	add	r6, r7
900200c6:	b292      	uxth	r2, r2
900200c8:	f104 0a01 	add.w	sl, r4, #1
900200cc:	b2b6      	uxth	r6, r6
900200ce:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
900200d2:	f102 0a01 	add.w	sl, r2, #1
900200d6:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
900200da:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
900200de:	f3c2 22c4 	ubfx	r2, r2, #11, #5
900200e2:	4322      	orrs	r2, r4
900200e4:	1c74      	adds	r4, r6, #1
900200e6:	eb04 2616 	add.w	r6, r4, r6, lsr #8
900200ea:	0976      	lsrs	r6, r6, #5
900200ec:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
900200f0:	4332      	orrs	r2, r6
900200f2:	f821 2b02 	strh.w	r2, [r1], #2
900200f6:	e7cb      	b.n	90020090 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x78>
900200f8:	4441      	add	r1, r8
900200fa:	e7c5      	b.n	90020088 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x70>
900200fc:	0973      	lsrs	r3, r6, #5
900200fe:	4f22      	ldr	r7, [pc, #136]	; (90020188 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x170>)
90020100:	f3c6 06c4 	ubfx	r6, r6, #3, #5
90020104:	ea08 0707 	and.w	r7, r8, r7
90020108:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9002010c:	433b      	orrs	r3, r7
9002010e:	07e7      	lsls	r7, r4, #31
90020110:	ea43 0306 	orr.w	r3, r3, r6
90020114:	b29b      	uxth	r3, r3
90020116:	d50b      	bpl.n	90020130 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x118>
90020118:	0040      	lsls	r0, r0, #1
9002011a:	0052      	lsls	r2, r2, #1
9002011c:	42a9      	cmp	r1, r5
9002011e:	d231      	bcs.n	90020184 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
90020120:	180c      	adds	r4, r1, r0
90020122:	42a1      	cmp	r1, r4
90020124:	d202      	bcs.n	9002012c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
90020126:	f821 3b02 	strh.w	r3, [r1], #2
9002012a:	e7fa      	b.n	90020122 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x10a>
9002012c:	4411      	add	r1, r2
9002012e:	e7f5      	b.n	9002011c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x104>
90020130:	078e      	lsls	r6, r1, #30
90020132:	d008      	beq.n	90020146 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12e>
90020134:	0066      	lsls	r6, r4, #1
90020136:	460a      	mov	r2, r1
90020138:	42aa      	cmp	r2, r5
9002013a:	d202      	bcs.n	90020142 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
9002013c:	8013      	strh	r3, [r2, #0]
9002013e:	4432      	add	r2, r6
90020140:	e7fa      	b.n	90020138 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x120>
90020142:	3102      	adds	r1, #2
90020144:	3801      	subs	r0, #1
90020146:	07c2      	lsls	r2, r0, #31
90020148:	d50b      	bpl.n	90020162 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x14a>
9002014a:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
9002014e:	0066      	lsls	r6, r4, #1
90020150:	3a01      	subs	r2, #1
90020152:	eb01 0242 	add.w	r2, r1, r2, lsl #1
90020156:	42aa      	cmp	r2, r5
90020158:	d202      	bcs.n	90020160 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x148>
9002015a:	8013      	strh	r3, [r2, #0]
9002015c:	4432      	add	r2, r6
9002015e:	e7fa      	b.n	90020156 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13e>
90020160:	3801      	subs	r0, #1
90020162:	b178      	cbz	r0, 90020184 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
90020164:	1040      	asrs	r0, r0, #1
90020166:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
9002016a:	0080      	lsls	r0, r0, #2
9002016c:	0064      	lsls	r4, r4, #1
9002016e:	42a9      	cmp	r1, r5
90020170:	d208      	bcs.n	90020184 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
90020172:	180e      	adds	r6, r1, r0
90020174:	460a      	mov	r2, r1
90020176:	42b2      	cmp	r2, r6
90020178:	d202      	bcs.n	90020180 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
9002017a:	f842 3b04 	str.w	r3, [r2], #4
9002017e:	e7fa      	b.n	90020176 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15e>
90020180:	4421      	add	r1, r4
90020182:	e7f4      	b.n	9002016e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x156>
90020184:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90020188:	00fff800 	.word	0x00fff800

9002018c <_ZN8touchgfx8LCD16bppC1Ev>:
9002018c:	2200      	movs	r2, #0
9002018e:	4912      	ldr	r1, [pc, #72]	; (900201d8 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
90020190:	e9c0 2201 	strd	r2, r2, [r0, #4]
90020194:	6001      	str	r1, [r0, #0]
90020196:	e9c0 2203 	strd	r2, r2, [r0, #12]
9002019a:	e9c0 2205 	strd	r2, r2, [r0, #20]
9002019e:	e9c0 2207 	strd	r2, r2, [r0, #28]
900201a2:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
900201a6:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
900201aa:	e9c0 220d 	strd	r2, r2, [r0, #52]	; 0x34
900201ae:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
900201b2:	e9c0 2211 	strd	r2, r2, [r0, #68]	; 0x44
900201b6:	e9c0 2213 	strd	r2, r2, [r0, #76]	; 0x4c
900201ba:	e9c0 2215 	strd	r2, r2, [r0, #84]	; 0x54
900201be:	e9c0 2217 	strd	r2, r2, [r0, #92]	; 0x5c
900201c2:	e9c0 2219 	strd	r2, r2, [r0, #100]	; 0x64
900201c6:	e9c0 221b 	strd	r2, r2, [r0, #108]	; 0x6c
900201ca:	e9c0 221d 	strd	r2, r2, [r0, #116]	; 0x74
900201ce:	e9c0 221f 	strd	r2, r2, [r0, #124]	; 0x7c
900201d2:	f8c0 2084 	str.w	r2, [r0, #132]	; 0x84
900201d6:	4770      	bx	lr
900201d8:	9002e9d8 	.word	0x9002e9d8

900201dc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
900201dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900201e0:	b08d      	sub	sp, #52	; 0x34
900201e2:	460d      	mov	r5, r1
900201e4:	4604      	mov	r4, r0
900201e6:	4699      	mov	r9, r3
900201e8:	6808      	ldr	r0, [r1, #0]
900201ea:	ab08      	add	r3, sp, #32
900201ec:	6849      	ldr	r1, [r1, #4]
900201ee:	c303      	stmia	r3!, {r0, r1}
900201f0:	6810      	ldr	r0, [r2, #0]
900201f2:	ab0a      	add	r3, sp, #40	; 0x28
900201f4:	6851      	ldr	r1, [r2, #4]
900201f6:	c303      	stmia	r3!, {r0, r1}
900201f8:	a808      	add	r0, sp, #32
900201fa:	f7f8 fa0d 	bl	90018618 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
900201fe:	4629      	mov	r1, r5
90020200:	a80a      	add	r0, sp, #40	; 0x28
90020202:	4d67      	ldr	r5, [pc, #412]	; (900203a0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
90020204:	f7f8 fa4c 	bl	900186a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90020208:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
9002020c:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
90020210:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
90020214:	6828      	ldr	r0, [r5, #0]
90020216:	fb11 2103 	smlabb	r1, r1, r3, r2
9002021a:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
9002021e:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
90020222:	eb04 0481 	add.w	r4, r4, r1, lsl #2
90020226:	f8bd 1020 	ldrh.w	r1, [sp, #32]
9002022a:	440a      	add	r2, r1
9002022c:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
90020230:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
90020234:	4413      	add	r3, r2
90020236:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
9002023a:	6803      	ldr	r3, [r0, #0]
9002023c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9002023e:	4798      	blx	r3
90020240:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
90020244:	d119      	bne.n	9002027a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
90020246:	f010 0f20 	tst.w	r0, #32
9002024a:	6828      	ldr	r0, [r5, #0]
9002024c:	d018      	beq.n	90020280 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
9002024e:	2500      	movs	r5, #0
90020250:	6801      	ldr	r1, [r0, #0]
90020252:	b2b6      	uxth	r6, r6
90020254:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
90020258:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
9002025c:	9601      	str	r6, [sp, #4]
9002025e:	e9cd 9503 	strd	r9, r5, [sp, #12]
90020262:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
90020266:	9502      	str	r5, [sp, #8]
90020268:	fa1f f588 	uxth.w	r5, r8
9002026c:	9500      	str	r5, [sp, #0]
9002026e:	6d0d      	ldr	r5, [r1, #80]	; 0x50
90020270:	4621      	mov	r1, r4
90020272:	47a8      	blx	r5
90020274:	b00d      	add	sp, #52	; 0x34
90020276:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002027a:	f010 0f40 	tst.w	r0, #64	; 0x40
9002027e:	e7e4      	b.n	9002024a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
90020280:	6803      	ldr	r3, [r0, #0]
90020282:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90020284:	4798      	blx	r3
90020286:	4947      	ldr	r1, [pc, #284]	; (900203a4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
90020288:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
9002028c:	880b      	ldrh	r3, [r1, #0]
9002028e:	468a      	mov	sl, r1
90020290:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
90020294:	fb03 5202 	mla	r2, r3, r2, r5
90020298:	4373      	muls	r3, r6
9002029a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9002029e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
900202a2:	9307      	str	r3, [sp, #28]
900202a4:	ea4f 0348 	mov.w	r3, r8, lsl #1
900202a8:	9306      	str	r3, [sp, #24]
900202aa:	9b07      	ldr	r3, [sp, #28]
900202ac:	4298      	cmp	r0, r3
900202ae:	d270      	bcs.n	90020392 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
900202b0:	9b06      	ldr	r3, [sp, #24]
900202b2:	4621      	mov	r1, r4
900202b4:	eb00 0b03 	add.w	fp, r0, r3
900202b8:	4558      	cmp	r0, fp
900202ba:	d25d      	bcs.n	90020378 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
900202bc:	f851 4b04 	ldr.w	r4, [r1], #4
900202c0:	0e23      	lsrs	r3, r4, #24
900202c2:	d014      	beq.n	900202ee <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
900202c4:	2bff      	cmp	r3, #255	; 0xff
900202c6:	ea4f 2c14 	mov.w	ip, r4, lsr #8
900202ca:	d112      	bne.n	900202f2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
900202cc:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
900202d0:	d10f      	bne.n	900202f2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
900202d2:	0963      	lsrs	r3, r4, #5
900202d4:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
900202d8:	f3c4 04c4 	ubfx	r4, r4, #3, #5
900202dc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
900202e0:	f02c 0c07 	bic.w	ip, ip, #7
900202e4:	ea43 0c0c 	orr.w	ip, r3, ip
900202e8:	ea4c 0404 	orr.w	r4, ip, r4
900202ec:	8004      	strh	r4, [r0, #0]
900202ee:	3002      	adds	r0, #2
900202f0:	e7e2      	b.n	900202b8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
900202f2:	fb09 f303 	mul.w	r3, r9, r3
900202f6:	8807      	ldrh	r7, [r0, #0]
900202f8:	f3c4 4e07 	ubfx	lr, r4, #16, #8
900202fc:	fa5f fc8c 	uxtb.w	ip, ip
90020300:	1c5a      	adds	r2, r3, #1
90020302:	123e      	asrs	r6, r7, #8
90020304:	10fd      	asrs	r5, r7, #3
90020306:	eb02 2223 	add.w	r2, r2, r3, asr #8
9002030a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9002030e:	00ff      	lsls	r7, r7, #3
90020310:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
90020314:	1212      	asrs	r2, r2, #8
90020316:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9002031a:	b293      	uxth	r3, r2
9002031c:	43d2      	mvns	r2, r2
9002031e:	b2ff      	uxtb	r7, r7
90020320:	fb1e fe03 	smulbb	lr, lr, r3
90020324:	b2d2      	uxtb	r2, r2
90020326:	fb1c fc03 	smulbb	ip, ip, r3
9002032a:	b2e4      	uxtb	r4, r4
9002032c:	fb06 e602 	mla	r6, r6, r2, lr
90020330:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
90020334:	fb14 f403 	smulbb	r4, r4, r3
90020338:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
9002033c:	b2b6      	uxth	r6, r6
9002033e:	fb05 c502 	mla	r5, r5, r2, ip
90020342:	fb07 4702 	mla	r7, r7, r2, r4
90020346:	f106 0e01 	add.w	lr, r6, #1
9002034a:	b2ad      	uxth	r5, r5
9002034c:	b2bf      	uxth	r7, r7
9002034e:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
90020352:	f105 0c01 	add.w	ip, r5, #1
90020356:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
9002035a:	1c7e      	adds	r6, r7, #1
9002035c:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
90020360:	eb06 2617 	add.w	r6, r6, r7, lsr #8
90020364:	096d      	lsrs	r5, r5, #5
90020366:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9002036a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9002036e:	ea46 060e 	orr.w	r6, r6, lr
90020372:	432e      	orrs	r6, r5
90020374:	8006      	strh	r6, [r0, #0]
90020376:	e7ba      	b.n	900202ee <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
90020378:	f8ba 3000 	ldrh.w	r3, [sl]
9002037c:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
90020380:	eba3 0308 	sub.w	r3, r3, r8
90020384:	eba4 0408 	sub.w	r4, r4, r8
90020388:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9002038c:	eb01 0484 	add.w	r4, r1, r4, lsl #2
90020390:	e78b      	b.n	900202aa <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
90020392:	4b03      	ldr	r3, [pc, #12]	; (900203a0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
90020394:	6818      	ldr	r0, [r3, #0]
90020396:	6803      	ldr	r3, [r0, #0]
90020398:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9002039a:	4798      	blx	r3
9002039c:	e76a      	b.n	90020274 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
9002039e:	bf00      	nop
900203a0:	240236cc 	.word	0x240236cc
900203a4:	240236c6 	.word	0x240236c6

900203a8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
900203a8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900203ac:	b085      	sub	sp, #20
900203ae:	6810      	ldr	r0, [r2, #0]
900203b0:	460c      	mov	r4, r1
900203b2:	6851      	ldr	r1, [r2, #4]
900203b4:	466d      	mov	r5, sp
900203b6:	4616      	mov	r6, r2
900203b8:	c503      	stmia	r5!, {r0, r1}
900203ba:	6818      	ldr	r0, [r3, #0]
900203bc:	6859      	ldr	r1, [r3, #4]
900203be:	c503      	stmia	r5!, {r0, r1}
900203c0:	4668      	mov	r0, sp
900203c2:	4d2e      	ldr	r5, [pc, #184]	; (9002047c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
900203c4:	f7f8 f928 	bl	90018618 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
900203c8:	4631      	mov	r1, r6
900203ca:	a802      	add	r0, sp, #8
900203cc:	4e2c      	ldr	r6, [pc, #176]	; (90020480 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
900203ce:	f7f8 f967 	bl	900186a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
900203d2:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
900203d6:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
900203da:	f8bd 1004 	ldrh.w	r1, [sp, #4]
900203de:	6828      	ldr	r0, [r5, #0]
900203e0:	fb11 2103 	smlabb	r1, r1, r3, r2
900203e4:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
900203e8:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
900203ec:	eb04 0481 	add.w	r4, r4, r1, lsl #2
900203f0:	f8bd 1000 	ldrh.w	r1, [sp]
900203f4:	440a      	add	r2, r1
900203f6:	f8ad 2008 	strh.w	r2, [sp, #8]
900203fa:	f8bd 2002 	ldrh.w	r2, [sp, #2]
900203fe:	4413      	add	r3, r2
90020400:	f8ad 300a 	strh.w	r3, [sp, #10]
90020404:	6803      	ldr	r3, [r0, #0]
90020406:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90020408:	4798      	blx	r3
9002040a:	8833      	ldrh	r3, [r6, #0]
9002040c:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
90020410:	ea4f 0c47 	mov.w	ip, r7, lsl #1
90020414:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
90020418:	f8df e068 	ldr.w	lr, [pc, #104]	; 90020484 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
9002041c:	fb03 1202 	mla	r2, r3, r2, r1
90020420:	fb08 f303 	mul.w	r3, r8, r3
90020424:	eb00 0042 	add.w	r0, r0, r2, lsl #1
90020428:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9002042c:	4298      	cmp	r0, r3
9002042e:	d21d      	bcs.n	9002046c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
90020430:	eb00 080c 	add.w	r8, r0, ip
90020434:	4540      	cmp	r0, r8
90020436:	d20f      	bcs.n	90020458 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
90020438:	f854 1b04 	ldr.w	r1, [r4], #4
9002043c:	ea4f 1951 	mov.w	r9, r1, lsr #5
90020440:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
90020444:	f3c1 01c4 	ubfx	r1, r1, #3, #5
90020448:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
9002044c:	ea42 0209 	orr.w	r2, r2, r9
90020450:	430a      	orrs	r2, r1
90020452:	f820 2b02 	strh.w	r2, [r0], #2
90020456:	e7ed      	b.n	90020434 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
90020458:	8832      	ldrh	r2, [r6, #0]
9002045a:	1bd2      	subs	r2, r2, r7
9002045c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
90020460:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
90020464:	1bd2      	subs	r2, r2, r7
90020466:	eb04 0482 	add.w	r4, r4, r2, lsl #2
9002046a:	e7df      	b.n	9002042c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
9002046c:	6828      	ldr	r0, [r5, #0]
9002046e:	6803      	ldr	r3, [r0, #0]
90020470:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90020472:	4798      	blx	r3
90020474:	b005      	add	sp, #20
90020476:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9002047a:	bf00      	nop
9002047c:	240236cc 	.word	0x240236cc
90020480:	240236c6 	.word	0x240236c6
90020484:	fffff800 	.word	0xfffff800

90020488 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
90020488:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9002048c:	b08e      	sub	sp, #56	; 0x38
9002048e:	460e      	mov	r6, r1
90020490:	4604      	mov	r4, r0
90020492:	461d      	mov	r5, r3
90020494:	6808      	ldr	r0, [r1, #0]
90020496:	ab0a      	add	r3, sp, #40	; 0x28
90020498:	6849      	ldr	r1, [r1, #4]
9002049a:	f8df 81d4 	ldr.w	r8, [pc, #468]	; 90020670 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
9002049e:	f8df 91d4 	ldr.w	r9, [pc, #468]	; 90020674 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
900204a2:	c303      	stmia	r3!, {r0, r1}
900204a4:	6810      	ldr	r0, [r2, #0]
900204a6:	ab0c      	add	r3, sp, #48	; 0x30
900204a8:	6851      	ldr	r1, [r2, #4]
900204aa:	c303      	stmia	r3!, {r0, r1}
900204ac:	a80a      	add	r0, sp, #40	; 0x28
900204ae:	f7f8 f8b3 	bl	90018618 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
900204b2:	4631      	mov	r1, r6
900204b4:	a80c      	add	r0, sp, #48	; 0x30
900204b6:	f7f8 f8f3 	bl	900186a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
900204ba:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
900204be:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
900204c2:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
900204c6:	f8d8 0000 	ldr.w	r0, [r8]
900204ca:	fb11 2103 	smlabb	r1, r1, r3, r2
900204ce:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
900204d2:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
900204d6:	eb01 0141 	add.w	r1, r1, r1, lsl #1
900204da:	440c      	add	r4, r1
900204dc:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
900204e0:	440a      	add	r2, r1
900204e2:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
900204e6:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
900204ea:	4413      	add	r3, r2
900204ec:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
900204f0:	6803      	ldr	r3, [r0, #0]
900204f2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
900204f4:	4798      	blx	r3
900204f6:	2dff      	cmp	r5, #255	; 0xff
900204f8:	d124      	bne.n	90020544 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
900204fa:	f010 0f01 	tst.w	r0, #1
900204fe:	f8d8 0000 	ldr.w	r0, [r8]
90020502:	d022      	beq.n	9002054a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
90020504:	2100      	movs	r1, #0
90020506:	f04f 0e01 	mov.w	lr, #1
9002050a:	f8d0 c000 	ldr.w	ip, [r0]
9002050e:	b2b6      	uxth	r6, r6
90020510:	f8cd e018 	str.w	lr, [sp, #24]
90020514:	b2bf      	uxth	r7, r7
90020516:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
9002051a:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
9002051e:	e9cd 1107 	strd	r1, r1, [sp, #28]
90020522:	f8b9 e000 	ldrh.w	lr, [r9]
90020526:	9503      	str	r5, [sp, #12]
90020528:	9601      	str	r6, [sp, #4]
9002052a:	9700      	str	r7, [sp, #0]
9002052c:	e9cd 1e04 	strd	r1, lr, [sp, #16]
90020530:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
90020534:	9102      	str	r1, [sp, #8]
90020536:	4621      	mov	r1, r4
90020538:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
9002053c:	47a8      	blx	r5
9002053e:	b00e      	add	sp, #56	; 0x38
90020540:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90020544:	f010 0f04 	tst.w	r0, #4
90020548:	e7d9      	b.n	900204fe <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
9002054a:	6803      	ldr	r3, [r0, #0]
9002054c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9002054e:	4798      	blx	r3
90020550:	f8b9 3000 	ldrh.w	r3, [r9]
90020554:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
90020558:	ea4f 0e47 	mov.w	lr, r7, lsl #1
9002055c:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
90020560:	435e      	muls	r6, r3
90020562:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
90020566:	2dff      	cmp	r5, #255	; 0xff
90020568:	fb03 1202 	mla	r2, r3, r2, r1
9002056c:	ebac 0c07 	sub.w	ip, ip, r7
90020570:	eba3 0707 	sub.w	r7, r3, r7
90020574:	eb00 0042 	add.w	r0, r0, r2, lsl #1
90020578:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
9002057c:	eb00 0646 	add.w	r6, r0, r6, lsl #1
90020580:	ea4f 0747 	mov.w	r7, r7, lsl #1
90020584:	d049      	beq.n	9002061a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
90020586:	43eb      	mvns	r3, r5
90020588:	fa1f f985 	uxth.w	r9, r5
9002058c:	b2db      	uxtb	r3, r3
9002058e:	42b0      	cmp	r0, r6
90020590:	d266      	bcs.n	90020660 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
90020592:	eb00 0a0e 	add.w	sl, r0, lr
90020596:	4550      	cmp	r0, sl
90020598:	4621      	mov	r1, r4
9002059a:	f104 0403 	add.w	r4, r4, #3
9002059e:	d25b      	bcs.n	90020658 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
900205a0:	8802      	ldrh	r2, [r0, #0]
900205a2:	f814 1c01 	ldrb.w	r1, [r4, #-1]
900205a6:	ea4f 2822 	mov.w	r8, r2, asr #8
900205aa:	fb11 f109 	smulbb	r1, r1, r9
900205ae:	10d5      	asrs	r5, r2, #3
900205b0:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
900205b4:	00d2      	lsls	r2, r2, #3
900205b6:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
900205ba:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
900205be:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
900205c2:	fb08 1803 	mla	r8, r8, r3, r1
900205c6:	f814 1c02 	ldrb.w	r1, [r4, #-2]
900205ca:	b2d2      	uxtb	r2, r2
900205cc:	fb11 f109 	smulbb	r1, r1, r9
900205d0:	fa1f f888 	uxth.w	r8, r8
900205d4:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
900205d8:	fb05 1503 	mla	r5, r5, r3, r1
900205dc:	f814 1c03 	ldrb.w	r1, [r4, #-3]
900205e0:	fb11 f109 	smulbb	r1, r1, r9
900205e4:	b2ad      	uxth	r5, r5
900205e6:	fb02 1203 	mla	r2, r2, r3, r1
900205ea:	f108 0101 	add.w	r1, r8, #1
900205ee:	b292      	uxth	r2, r2
900205f0:	eb01 2818 	add.w	r8, r1, r8, lsr #8
900205f4:	1c51      	adds	r1, r2, #1
900205f6:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
900205fa:	eb01 2212 	add.w	r2, r1, r2, lsr #8
900205fe:	1c69      	adds	r1, r5, #1
90020600:	eb01 2515 	add.w	r5, r1, r5, lsr #8
90020604:	f3c2 22c4 	ubfx	r2, r2, #11, #5
90020608:	096d      	lsrs	r5, r5, #5
9002060a:	ea42 0208 	orr.w	r2, r2, r8
9002060e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90020612:	432a      	orrs	r2, r5
90020614:	f820 2b02 	strh.w	r2, [r0], #2
90020618:	e7bd      	b.n	90020596 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
9002061a:	4a14      	ldr	r2, [pc, #80]	; (9002066c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
9002061c:	42b0      	cmp	r0, r6
9002061e:	d21f      	bcs.n	90020660 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
90020620:	eb00 050e 	add.w	r5, r0, lr
90020624:	42a8      	cmp	r0, r5
90020626:	4621      	mov	r1, r4
90020628:	f104 0403 	add.w	r4, r4, #3
9002062c:	d210      	bcs.n	90020650 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
9002062e:	f814 3c02 	ldrb.w	r3, [r4, #-2]
90020632:	f814 1c01 	ldrb.w	r1, [r4, #-1]
90020636:	00db      	lsls	r3, r3, #3
90020638:	ea02 2101 	and.w	r1, r2, r1, lsl #8
9002063c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90020640:	430b      	orrs	r3, r1
90020642:	f814 1c03 	ldrb.w	r1, [r4, #-3]
90020646:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
9002064a:	f820 3b02 	strh.w	r3, [r0], #2
9002064e:	e7e9      	b.n	90020624 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
90020650:	4438      	add	r0, r7
90020652:	eb01 040c 	add.w	r4, r1, ip
90020656:	e7e1      	b.n	9002061c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
90020658:	4438      	add	r0, r7
9002065a:	eb01 040c 	add.w	r4, r1, ip
9002065e:	e796      	b.n	9002058e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
90020660:	4b03      	ldr	r3, [pc, #12]	; (90020670 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
90020662:	6818      	ldr	r0, [r3, #0]
90020664:	6803      	ldr	r3, [r0, #0]
90020666:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90020668:	4798      	blx	r3
9002066a:	e768      	b.n	9002053e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
9002066c:	fffff800 	.word	0xfffff800
90020670:	240236cc 	.word	0x240236cc
90020674:	240236c6 	.word	0x240236c6

90020678 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
90020678:	b4f0      	push	{r4, r5, r6, r7}
9002067a:	4616      	mov	r6, r2
9002067c:	461c      	mov	r4, r3
9002067e:	460d      	mov	r5, r1
90020680:	9a04      	ldr	r2, [sp, #16]
90020682:	2e01      	cmp	r6, #1
90020684:	f89d 3014 	ldrb.w	r3, [sp, #20]
90020688:	f89d 7018 	ldrb.w	r7, [sp, #24]
9002068c:	d012      	beq.n	900206b4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
9002068e:	d303      	bcc.n	90020698 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
90020690:	2e02      	cmp	r6, #2
90020692:	d00a      	beq.n	900206aa <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
90020694:	bcf0      	pop	{r4, r5, r6, r7}
90020696:	4770      	bx	lr
90020698:	6805      	ldr	r5, [r0, #0]
9002069a:	e9cd 3704 	strd	r3, r7, [sp, #16]
9002069e:	68ed      	ldr	r5, [r5, #12]
900206a0:	4613      	mov	r3, r2
900206a2:	4622      	mov	r2, r4
900206a4:	46ac      	mov	ip, r5
900206a6:	bcf0      	pop	{r4, r5, r6, r7}
900206a8:	4760      	bx	ip
900206aa:	4621      	mov	r1, r4
900206ac:	4628      	mov	r0, r5
900206ae:	bcf0      	pop	{r4, r5, r6, r7}
900206b0:	f7ff bd94 	b.w	900201dc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
900206b4:	4621      	mov	r1, r4
900206b6:	4628      	mov	r0, r5
900206b8:	bcf0      	pop	{r4, r5, r6, r7}
900206ba:	f7ff bee5 	b.w	90020488 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

900206c0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
900206c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900206c4:	b093      	sub	sp, #76	; 0x4c
900206c6:	4681      	mov	r9, r0
900206c8:	4688      	mov	r8, r1
900206ca:	6810      	ldr	r0, [r2, #0]
900206cc:	6851      	ldr	r1, [r2, #4]
900206ce:	ac0e      	add	r4, sp, #56	; 0x38
900206d0:	4616      	mov	r6, r2
900206d2:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
900206d6:	4f6b      	ldr	r7, [pc, #428]	; (90020884 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
900206d8:	c403      	stmia	r4!, {r0, r1}
900206da:	6818      	ldr	r0, [r3, #0]
900206dc:	ac10      	add	r4, sp, #64	; 0x40
900206de:	6859      	ldr	r1, [r3, #4]
900206e0:	c403      	stmia	r4!, {r0, r1}
900206e2:	a80e      	add	r0, sp, #56	; 0x38
900206e4:	f7f7 ff98 	bl	90018618 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
900206e8:	4631      	mov	r1, r6
900206ea:	a810      	add	r0, sp, #64	; 0x40
900206ec:	4e66      	ldr	r6, [pc, #408]	; (90020888 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
900206ee:	f7f7 ffd7 	bl	900186a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
900206f2:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
900206f6:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
900206fa:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
900206fe:	6830      	ldr	r0, [r6, #0]
90020700:	fb11 2103 	smlabb	r1, r1, r3, r2
90020704:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
90020708:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
9002070c:	4489      	add	r9, r1
9002070e:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
90020712:	440a      	add	r2, r1
90020714:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
90020718:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
9002071c:	4413      	add	r3, r2
9002071e:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
90020722:	6803      	ldr	r3, [r0, #0]
90020724:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90020726:	4798      	blx	r3
90020728:	f010 0f80 	tst.w	r0, #128	; 0x80
9002072c:	6830      	ldr	r0, [r6, #0]
9002072e:	d01d      	beq.n	9002076c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
90020730:	2200      	movs	r2, #0
90020732:	6801      	ldr	r1, [r0, #0]
90020734:	b2a4      	uxth	r4, r4
90020736:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
9002073a:	b2ad      	uxth	r5, r5
9002073c:	e9cd 2208 	strd	r2, r2, [sp, #32]
90020740:	220b      	movs	r2, #11
90020742:	9207      	str	r2, [sp, #28]
90020744:	883a      	ldrh	r2, [r7, #0]
90020746:	9502      	str	r5, [sp, #8]
90020748:	9206      	str	r2, [sp, #24]
9002074a:	2201      	movs	r2, #1
9002074c:	9401      	str	r4, [sp, #4]
9002074e:	e9cd a204 	strd	sl, r2, [sp, #16]
90020752:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
90020756:	9203      	str	r2, [sp, #12]
90020758:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
9002075c:	9200      	str	r2, [sp, #0]
9002075e:	4642      	mov	r2, r8
90020760:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
90020762:	4649      	mov	r1, r9
90020764:	47a0      	blx	r4
90020766:	b013      	add	sp, #76	; 0x4c
90020768:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002076c:	6803      	ldr	r3, [r0, #0]
9002076e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90020770:	4798      	blx	r3
90020772:	883b      	ldrh	r3, [r7, #0]
90020774:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
90020778:	f04f 0e04 	mov.w	lr, #4
9002077c:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
90020780:	435d      	muls	r5, r3
90020782:	fb03 1202 	mla	r2, r3, r2, r1
90020786:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9002078a:	eb00 0245 	add.w	r2, r0, r5, lsl #1
9002078e:	920c      	str	r2, [sp, #48]	; 0x30
90020790:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
90020794:	1b12      	subs	r2, r2, r4
90020796:	920d      	str	r2, [sp, #52]	; 0x34
90020798:	0062      	lsls	r2, r4, #1
9002079a:	1b1c      	subs	r4, r3, r4
9002079c:	920a      	str	r2, [sp, #40]	; 0x28
9002079e:	0063      	lsls	r3, r4, #1
900207a0:	930b      	str	r3, [sp, #44]	; 0x2c
900207a2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
900207a4:	4298      	cmp	r0, r3
900207a6:	d266      	bcs.n	90020876 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
900207a8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
900207aa:	eb00 0b03 	add.w	fp, r0, r3
900207ae:	4558      	cmp	r0, fp
900207b0:	d25c      	bcs.n	9002086c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
900207b2:	f819 3b01 	ldrb.w	r3, [r9], #1
900207b6:	fb1e e303 	smlabb	r3, lr, r3, lr
900207ba:	f858 2003 	ldr.w	r2, [r8, r3]
900207be:	0e11      	lsrs	r1, r2, #24
900207c0:	d012      	beq.n	900207e8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
900207c2:	29ff      	cmp	r1, #255	; 0xff
900207c4:	ea4f 2712 	mov.w	r7, r2, lsr #8
900207c8:	d110      	bne.n	900207ec <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
900207ca:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
900207ce:	d10d      	bne.n	900207ec <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
900207d0:	0953      	lsrs	r3, r2, #5
900207d2:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
900207d6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
900207da:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
900207de:	f027 0707 	bic.w	r7, r7, #7
900207e2:	431f      	orrs	r7, r3
900207e4:	433a      	orrs	r2, r7
900207e6:	8002      	strh	r2, [r0, #0]
900207e8:	3002      	adds	r0, #2
900207ea:	e7e0      	b.n	900207ae <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
900207ec:	fb0a f101 	mul.w	r1, sl, r1
900207f0:	8806      	ldrh	r6, [r0, #0]
900207f2:	f3c2 4c07 	ubfx	ip, r2, #16, #8
900207f6:	b2d2      	uxtb	r2, r2
900207f8:	1c4b      	adds	r3, r1, #1
900207fa:	1235      	asrs	r5, r6, #8
900207fc:	10f4      	asrs	r4, r6, #3
900207fe:	eb03 2321 	add.w	r3, r3, r1, asr #8
90020802:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
90020806:	00f6      	lsls	r6, r6, #3
90020808:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
9002080c:	121b      	asrs	r3, r3, #8
9002080e:	b2f6      	uxtb	r6, r6
90020810:	b299      	uxth	r1, r3
90020812:	43db      	mvns	r3, r3
90020814:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
90020818:	fb1c fc01 	smulbb	ip, ip, r1
9002081c:	b2db      	uxtb	r3, r3
9002081e:	fb12 f201 	smulbb	r2, r2, r1
90020822:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
90020826:	fb05 c503 	mla	r5, r5, r3, ip
9002082a:	b2ff      	uxtb	r7, r7
9002082c:	fb06 2203 	mla	r2, r6, r3, r2
90020830:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
90020834:	fb17 f701 	smulbb	r7, r7, r1
90020838:	b2ad      	uxth	r5, r5
9002083a:	b292      	uxth	r2, r2
9002083c:	fb04 7403 	mla	r4, r4, r3, r7
90020840:	f105 0c01 	add.w	ip, r5, #1
90020844:	1c57      	adds	r7, r2, #1
90020846:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
9002084a:	eb07 2712 	add.w	r7, r7, r2, lsr #8
9002084e:	b2a4      	uxth	r4, r4
90020850:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
90020854:	f3c7 27c4 	ubfx	r7, r7, #11, #5
90020858:	433d      	orrs	r5, r7
9002085a:	1c67      	adds	r7, r4, #1
9002085c:	eb07 2414 	add.w	r4, r7, r4, lsr #8
90020860:	0964      	lsrs	r4, r4, #5
90020862:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
90020866:	4325      	orrs	r5, r4
90020868:	8005      	strh	r5, [r0, #0]
9002086a:	e7bd      	b.n	900207e8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
9002086c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9002086e:	4418      	add	r0, r3
90020870:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90020872:	4499      	add	r9, r3
90020874:	e795      	b.n	900207a2 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
90020876:	4b04      	ldr	r3, [pc, #16]	; (90020888 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
90020878:	6818      	ldr	r0, [r3, #0]
9002087a:	6803      	ldr	r3, [r0, #0]
9002087c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9002087e:	4798      	blx	r3
90020880:	e771      	b.n	90020766 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
90020882:	bf00      	nop
90020884:	240236c6 	.word	0x240236c6
90020888:	240236cc 	.word	0x240236cc

9002088c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
9002088c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020890:	b087      	sub	sp, #28
90020892:	4680      	mov	r8, r0
90020894:	460d      	mov	r5, r1
90020896:	4614      	mov	r4, r2
90020898:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
9002089c:	2e00      	cmp	r6, #0
9002089e:	f000 80b9 	beq.w	90020a14 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
900208a2:	6810      	ldr	r0, [r2, #0]
900208a4:	af02      	add	r7, sp, #8
900208a6:	6851      	ldr	r1, [r2, #4]
900208a8:	c703      	stmia	r7!, {r0, r1}
900208aa:	6818      	ldr	r0, [r3, #0]
900208ac:	af04      	add	r7, sp, #16
900208ae:	6859      	ldr	r1, [r3, #4]
900208b0:	c703      	stmia	r7!, {r0, r1}
900208b2:	a802      	add	r0, sp, #8
900208b4:	f7f7 feb0 	bl	90018618 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
900208b8:	4621      	mov	r1, r4
900208ba:	a804      	add	r0, sp, #16
900208bc:	f7f7 fef0 	bl	900186a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
900208c0:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
900208c4:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
900208c8:	f8bd 400c 	ldrh.w	r4, [sp, #12]
900208cc:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
900208d0:	fb14 2103 	smlabb	r1, r4, r3, r2
900208d4:	eb08 0401 	add.w	r4, r8, r1
900208d8:	f8bd 1008 	ldrh.w	r1, [sp, #8]
900208dc:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
900208e0:	440a      	add	r2, r1
900208e2:	ea4f 0a48 	mov.w	sl, r8, lsl #1
900208e6:	f8ad 2010 	strh.w	r2, [sp, #16]
900208ea:	f8bd 200a 	ldrh.w	r2, [sp, #10]
900208ee:	4413      	add	r3, r2
900208f0:	f8ad 3012 	strh.w	r3, [sp, #18]
900208f4:	4b49      	ldr	r3, [pc, #292]	; (90020a1c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
900208f6:	6818      	ldr	r0, [r3, #0]
900208f8:	6803      	ldr	r3, [r0, #0]
900208fa:	6a9b      	ldr	r3, [r3, #40]	; 0x28
900208fc:	4798      	blx	r3
900208fe:	4b48      	ldr	r3, [pc, #288]	; (90020a20 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
90020900:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
90020904:	2eff      	cmp	r6, #255	; 0xff
90020906:	881a      	ldrh	r2, [r3, #0]
90020908:	f9bd c010 	ldrsh.w	ip, [sp, #16]
9002090c:	fb02 c101 	mla	r1, r2, r1, ip
90020910:	fb02 f207 	mul.w	r2, r2, r7
90020914:	eb00 0041 	add.w	r0, r0, r1, lsl #1
90020918:	f105 0104 	add.w	r1, r5, #4
9002091c:	461d      	mov	r5, r3
9002091e:	d05a      	beq.n	900209d6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
90020920:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
90020924:	eb00 0242 	add.w	r2, r0, r2, lsl #1
90020928:	b2b6      	uxth	r6, r6
9002092a:	9301      	str	r3, [sp, #4]
9002092c:	fa1f fe8e 	uxth.w	lr, lr
90020930:	4282      	cmp	r2, r0
90020932:	d96a      	bls.n	90020a0a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
90020934:	eb00 0b0a 	add.w	fp, r0, sl
90020938:	4583      	cmp	fp, r0
9002093a:	d940      	bls.n	900209be <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
9002093c:	8805      	ldrh	r5, [r0, #0]
9002093e:	f814 3b01 	ldrb.w	r3, [r4], #1
90020942:	122f      	asrs	r7, r5, #8
90020944:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
90020948:	ea4f 09e5 	mov.w	r9, r5, asr #3
9002094c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
90020950:	00ed      	lsls	r5, r5, #3
90020952:	ea4f 2c23 	mov.w	ip, r3, asr #8
90020956:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
9002095a:	fb17 f70e 	smulbb	r7, r7, lr
9002095e:	b2ed      	uxtb	r5, r5
90020960:	fb19 f90e 	smulbb	r9, r9, lr
90020964:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
90020968:	fb15 f50e 	smulbb	r5, r5, lr
9002096c:	fb0c 7c06 	mla	ip, ip, r6, r7
90020970:	10df      	asrs	r7, r3, #3
90020972:	00db      	lsls	r3, r3, #3
90020974:	fa1f fc8c 	uxth.w	ip, ip
90020978:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9002097c:	b2db      	uxtb	r3, r3
9002097e:	fb07 9706 	mla	r7, r7, r6, r9
90020982:	f10c 0901 	add.w	r9, ip, #1
90020986:	fb03 5306 	mla	r3, r3, r6, r5
9002098a:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
9002098e:	b29b      	uxth	r3, r3
90020990:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
90020994:	b2bf      	uxth	r7, r7
90020996:	f103 0c01 	add.w	ip, r3, #1
9002099a:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
9002099e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
900209a2:	ea4c 0c09 	orr.w	ip, ip, r9
900209a6:	f107 0901 	add.w	r9, r7, #1
900209aa:	eb09 2717 	add.w	r7, r9, r7, lsr #8
900209ae:	097f      	lsrs	r7, r7, #5
900209b0:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
900209b4:	ea4c 0c07 	orr.w	ip, ip, r7
900209b8:	f820 cb02 	strh.w	ip, [r0], #2
900209bc:	e7bc      	b.n	90020938 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
900209be:	9b01      	ldr	r3, [sp, #4]
900209c0:	881b      	ldrh	r3, [r3, #0]
900209c2:	eba3 0308 	sub.w	r3, r3, r8
900209c6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
900209ca:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
900209ce:	eba3 0308 	sub.w	r3, r3, r8
900209d2:	441c      	add	r4, r3
900209d4:	e7ac      	b.n	90020930 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
900209d6:	eb00 0242 	add.w	r2, r0, r2, lsl #1
900209da:	4282      	cmp	r2, r0
900209dc:	d915      	bls.n	90020a0a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
900209de:	eb00 060a 	add.w	r6, r0, sl
900209e2:	4286      	cmp	r6, r0
900209e4:	d906      	bls.n	900209f4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
900209e6:	f814 3b01 	ldrb.w	r3, [r4], #1
900209ea:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
900209ee:	f820 3b02 	strh.w	r3, [r0], #2
900209f2:	e7f6      	b.n	900209e2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
900209f4:	882b      	ldrh	r3, [r5, #0]
900209f6:	eba3 0308 	sub.w	r3, r3, r8
900209fa:	eb00 0043 	add.w	r0, r0, r3, lsl #1
900209fe:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
90020a02:	eba3 0308 	sub.w	r3, r3, r8
90020a06:	441c      	add	r4, r3
90020a08:	e7e7      	b.n	900209da <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
90020a0a:	4b04      	ldr	r3, [pc, #16]	; (90020a1c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
90020a0c:	6818      	ldr	r0, [r3, #0]
90020a0e:	6803      	ldr	r3, [r0, #0]
90020a10:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90020a12:	4798      	blx	r3
90020a14:	b007      	add	sp, #28
90020a16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90020a1a:	bf00      	nop
90020a1c:	240236cc 	.word	0x240236cc
90020a20:	240236c6 	.word	0x240236c6

90020a24 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
90020a24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020a28:	b091      	sub	sp, #68	; 0x44
90020a2a:	4680      	mov	r8, r0
90020a2c:	460f      	mov	r7, r1
90020a2e:	4614      	mov	r4, r2
90020a30:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
90020a34:	2d00      	cmp	r5, #0
90020a36:	d051      	beq.n	90020adc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
90020a38:	6810      	ldr	r0, [r2, #0]
90020a3a:	ae0c      	add	r6, sp, #48	; 0x30
90020a3c:	6851      	ldr	r1, [r2, #4]
90020a3e:	f8df 9200 	ldr.w	r9, [pc, #512]	; 90020c40 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
90020a42:	c603      	stmia	r6!, {r0, r1}
90020a44:	6818      	ldr	r0, [r3, #0]
90020a46:	ae0e      	add	r6, sp, #56	; 0x38
90020a48:	6859      	ldr	r1, [r3, #4]
90020a4a:	c603      	stmia	r6!, {r0, r1}
90020a4c:	a80c      	add	r0, sp, #48	; 0x30
90020a4e:	f7f7 fde3 	bl	90018618 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90020a52:	4621      	mov	r1, r4
90020a54:	a80e      	add	r0, sp, #56	; 0x38
90020a56:	f7f7 fe23 	bl	900186a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90020a5a:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
90020a5e:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
90020a62:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
90020a66:	f8d9 0000 	ldr.w	r0, [r9]
90020a6a:	fb11 2103 	smlabb	r1, r1, r3, r2
90020a6e:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
90020a72:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
90020a76:	eb08 0401 	add.w	r4, r8, r1
90020a7a:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
90020a7e:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 90020c44 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
90020a82:	440a      	add	r2, r1
90020a84:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
90020a88:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
90020a8c:	4413      	add	r3, r2
90020a8e:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
90020a92:	6803      	ldr	r3, [r0, #0]
90020a94:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90020a96:	4798      	blx	r3
90020a98:	f010 0f80 	tst.w	r0, #128	; 0x80
90020a9c:	f8d9 0000 	ldr.w	r0, [r9]
90020aa0:	d01f      	beq.n	90020ae2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
90020aa2:	2200      	movs	r2, #0
90020aa4:	6801      	ldr	r1, [r0, #0]
90020aa6:	b2b6      	uxth	r6, r6
90020aa8:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
90020aac:	e9cd 2208 	strd	r2, r2, [sp, #32]
90020ab0:	220b      	movs	r2, #11
90020ab2:	9207      	str	r2, [sp, #28]
90020ab4:	f8b8 2000 	ldrh.w	r2, [r8]
90020ab8:	9601      	str	r6, [sp, #4]
90020aba:	9206      	str	r2, [sp, #24]
90020abc:	2201      	movs	r2, #1
90020abe:	e9cd 5204 	strd	r5, r2, [sp, #16]
90020ac2:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
90020ac6:	9203      	str	r2, [sp, #12]
90020ac8:	fa1f f28a 	uxth.w	r2, sl
90020acc:	9202      	str	r2, [sp, #8]
90020ace:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
90020ad2:	9200      	str	r2, [sp, #0]
90020ad4:	463a      	mov	r2, r7
90020ad6:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
90020ad8:	4621      	mov	r1, r4
90020ada:	47a8      	blx	r5
90020adc:	b011      	add	sp, #68	; 0x44
90020ade:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90020ae2:	6803      	ldr	r3, [r0, #0]
90020ae4:	ea4f 0946 	mov.w	r9, r6, lsl #1
90020ae8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90020aea:	4798      	blx	r3
90020aec:	f8b8 2000 	ldrh.w	r2, [r8]
90020af0:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
90020af4:	2dff      	cmp	r5, #255	; 0xff
90020af6:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
90020afa:	fb0a fa02 	mul.w	sl, sl, r2
90020afe:	fb02 1303 	mla	r3, r2, r3, r1
90020b02:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90020b06:	d062      	beq.n	90020bce <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
90020b08:	ea6f 0c05 	mvn.w	ip, r5
90020b0c:	eb00 034a 	add.w	r3, r0, sl, lsl #1
90020b10:	b2ad      	uxth	r5, r5
90020b12:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
90020b16:	fa5f fc8c 	uxtb.w	ip, ip
90020b1a:	930a      	str	r3, [sp, #40]	; 0x28
90020b1c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90020b1e:	4298      	cmp	r0, r3
90020b20:	f080 8085 	bcs.w	90020c2e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
90020b24:	eb00 0b09 	add.w	fp, r0, r9
90020b28:	4558      	cmp	r0, fp
90020b2a:	d246      	bcs.n	90020bba <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
90020b2c:	f814 eb01 	ldrb.w	lr, [r4], #1
90020b30:	2303      	movs	r3, #3
90020b32:	2204      	movs	r2, #4
90020b34:	fb13 2e0e 	smlabb	lr, r3, lr, r2
90020b38:	8803      	ldrh	r3, [r0, #0]
90020b3a:	eb07 0a0e 	add.w	sl, r7, lr
90020b3e:	1219      	asrs	r1, r3, #8
90020b40:	10da      	asrs	r2, r3, #3
90020b42:	f817 e00e 	ldrb.w	lr, [r7, lr]
90020b46:	f89a 8002 	ldrb.w	r8, [sl, #2]
90020b4a:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
90020b4e:	00db      	lsls	r3, r3, #3
90020b50:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
90020b54:	fb18 f805 	smulbb	r8, r8, r5
90020b58:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
90020b5c:	fb1e fe05 	smulbb	lr, lr, r5
90020b60:	b2db      	uxtb	r3, r3
90020b62:	fb01 810c 	mla	r1, r1, ip, r8
90020b66:	f89a 8001 	ldrb.w	r8, [sl, #1]
90020b6a:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
90020b6e:	fb18 f805 	smulbb	r8, r8, r5
90020b72:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
90020b76:	b289      	uxth	r1, r1
90020b78:	fb02 820c 	mla	r2, r2, ip, r8
90020b7c:	fb03 e30c 	mla	r3, r3, ip, lr
90020b80:	f101 0801 	add.w	r8, r1, #1
90020b84:	b292      	uxth	r2, r2
90020b86:	b29b      	uxth	r3, r3
90020b88:	eb08 2111 	add.w	r1, r8, r1, lsr #8
90020b8c:	f102 0801 	add.w	r8, r2, #1
90020b90:	f103 0e01 	add.w	lr, r3, #1
90020b94:	eb08 2812 	add.w	r8, r8, r2, lsr #8
90020b98:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
90020b9c:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
90020ba0:	ea4f 1858 	mov.w	r8, r8, lsr #5
90020ba4:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
90020ba8:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
90020bac:	ea4e 0101 	orr.w	r1, lr, r1
90020bb0:	ea41 0108 	orr.w	r1, r1, r8
90020bb4:	f820 1b02 	strh.w	r1, [r0], #2
90020bb8:	e7b6      	b.n	90020b28 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
90020bba:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90020bbc:	881b      	ldrh	r3, [r3, #0]
90020bbe:	1b9b      	subs	r3, r3, r6
90020bc0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90020bc4:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
90020bc8:	1b9b      	subs	r3, r3, r6
90020bca:	441c      	add	r4, r3
90020bcc:	e7a6      	b.n	90020b1c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
90020bce:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
90020bd2:	2203      	movs	r2, #3
90020bd4:	2504      	movs	r5, #4
90020bd6:	4919      	ldr	r1, [pc, #100]	; (90020c3c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
90020bd8:	4550      	cmp	r0, sl
90020bda:	d228      	bcs.n	90020c2e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
90020bdc:	eb00 0c09 	add.w	ip, r0, r9
90020be0:	4560      	cmp	r0, ip
90020be2:	4623      	mov	r3, r4
90020be4:	d219      	bcs.n	90020c1a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
90020be6:	f893 e000 	ldrb.w	lr, [r3]
90020bea:	3401      	adds	r4, #1
90020bec:	fb12 5e0e 	smlabb	lr, r2, lr, r5
90020bf0:	eb07 0b0e 	add.w	fp, r7, lr
90020bf4:	f817 e00e 	ldrb.w	lr, [r7, lr]
90020bf8:	f89b 3002 	ldrb.w	r3, [fp, #2]
90020bfc:	f89b b001 	ldrb.w	fp, [fp, #1]
90020c00:	ea01 2303 	and.w	r3, r1, r3, lsl #8
90020c04:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
90020c08:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
90020c0c:	ea43 030b 	orr.w	r3, r3, fp
90020c10:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
90020c14:	f820 3b02 	strh.w	r3, [r0], #2
90020c18:	e7e2      	b.n	90020be0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
90020c1a:	f8b8 3000 	ldrh.w	r3, [r8]
90020c1e:	1b9b      	subs	r3, r3, r6
90020c20:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90020c24:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
90020c28:	1b9b      	subs	r3, r3, r6
90020c2a:	441c      	add	r4, r3
90020c2c:	e7d4      	b.n	90020bd8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
90020c2e:	4b04      	ldr	r3, [pc, #16]	; (90020c40 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
90020c30:	6818      	ldr	r0, [r3, #0]
90020c32:	6803      	ldr	r3, [r0, #0]
90020c34:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90020c36:	4798      	blx	r3
90020c38:	e750      	b.n	90020adc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
90020c3a:	bf00      	nop
90020c3c:	fffff800 	.word	0xfffff800
90020c40:	240236cc 	.word	0x240236cc
90020c44:	240236c6 	.word	0x240236c6

90020c48 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
90020c48:	b4f0      	push	{r4, r5, r6, r7}
90020c4a:	460c      	mov	r4, r1
90020c4c:	4611      	mov	r1, r2
90020c4e:	f89d 5014 	ldrb.w	r5, [sp, #20]
90020c52:	461a      	mov	r2, r3
90020c54:	780f      	ldrb	r7, [r1, #0]
90020c56:	9b04      	ldr	r3, [sp, #16]
90020c58:	2f01      	cmp	r7, #1
90020c5a:	784e      	ldrb	r6, [r1, #1]
90020c5c:	d038      	beq.n	90020cd0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x88>
90020c5e:	d31f      	bcc.n	90020ca0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x58>
90020c60:	2f02      	cmp	r7, #2
90020c62:	d14d      	bne.n	90020d00 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
90020c64:	2e03      	cmp	r6, #3
90020c66:	d84b      	bhi.n	90020d00 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
90020c68:	e8df f006 	tbb	[pc, r6]
90020c6c:	17140702 	.word	0x17140702
90020c70:	9504      	str	r5, [sp, #16]
90020c72:	4620      	mov	r0, r4
90020c74:	bcf0      	pop	{r4, r5, r6, r7}
90020c76:	f7ff be09 	b.w	9002088c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
90020c7a:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
90020c7c:	2800      	cmp	r0, #0
90020c7e:	d03f      	beq.n	90020d00 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
90020c80:	6806      	ldr	r6, [r0, #0]
90020c82:	e9cd 3504 	strd	r3, r5, [sp, #16]
90020c86:	68b5      	ldr	r5, [r6, #8]
90020c88:	4613      	mov	r3, r2
90020c8a:	46ac      	mov	ip, r5
90020c8c:	460a      	mov	r2, r1
90020c8e:	4621      	mov	r1, r4
90020c90:	bcf0      	pop	{r4, r5, r6, r7}
90020c92:	4760      	bx	ip
90020c94:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
90020c98:	e7f0      	b.n	90020c7c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
90020c9a:	f8d0 0084 	ldr.w	r0, [r0, #132]	; 0x84
90020c9e:	e7ed      	b.n	90020c7c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
90020ca0:	2e03      	cmp	r6, #3
90020ca2:	d82d      	bhi.n	90020d00 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
90020ca4:	e8df f006 	tbb	[pc, r6]
90020ca8:	110e0702 	.word	0x110e0702
90020cac:	9504      	str	r5, [sp, #16]
90020cae:	4620      	mov	r0, r4
90020cb0:	bcf0      	pop	{r4, r5, r6, r7}
90020cb2:	f7ff bd05 	b.w	900206c0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
90020cb6:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
90020cb8:	b310      	cbz	r0, 90020d00 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
90020cba:	6806      	ldr	r6, [r0, #0]
90020cbc:	e9cd 3504 	strd	r3, r5, [sp, #16]
90020cc0:	68f5      	ldr	r5, [r6, #12]
90020cc2:	e7e1      	b.n	90020c88 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
90020cc4:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
90020cc8:	e7f6      	b.n	90020cb8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
90020cca:	f8d0 0084 	ldr.w	r0, [r0, #132]	; 0x84
90020cce:	e7f3      	b.n	90020cb8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
90020cd0:	2e03      	cmp	r6, #3
90020cd2:	d815      	bhi.n	90020d00 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
90020cd4:	e8df f006 	tbb	[pc, r6]
90020cd8:	110e0702 	.word	0x110e0702
90020cdc:	9504      	str	r5, [sp, #16]
90020cde:	4620      	mov	r0, r4
90020ce0:	bcf0      	pop	{r4, r5, r6, r7}
90020ce2:	f7ff be9f 	b.w	90020a24 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
90020ce6:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
90020ce8:	b150      	cbz	r0, 90020d00 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
90020cea:	6806      	ldr	r6, [r0, #0]
90020cec:	e9cd 3504 	strd	r3, r5, [sp, #16]
90020cf0:	6935      	ldr	r5, [r6, #16]
90020cf2:	e7c9      	b.n	90020c88 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
90020cf4:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
90020cf8:	e7f6      	b.n	90020ce8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
90020cfa:	f8d0 0084 	ldr.w	r0, [r0, #132]	; 0x84
90020cfe:	e7f3      	b.n	90020ce8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
90020d00:	bcf0      	pop	{r4, r5, r6, r7}
90020d02:	4770      	bx	lr

90020d04 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
90020d04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020d08:	b087      	sub	sp, #28
90020d0a:	4604      	mov	r4, r0
90020d0c:	460e      	mov	r6, r1
90020d0e:	6810      	ldr	r0, [r2, #0]
90020d10:	6851      	ldr	r1, [r2, #4]
90020d12:	ad02      	add	r5, sp, #8
90020d14:	4617      	mov	r7, r2
90020d16:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
90020d1a:	f8df 9230 	ldr.w	r9, [pc, #560]	; 90020f4c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
90020d1e:	c503      	stmia	r5!, {r0, r1}
90020d20:	6818      	ldr	r0, [r3, #0]
90020d22:	ad04      	add	r5, sp, #16
90020d24:	6859      	ldr	r1, [r3, #4]
90020d26:	c503      	stmia	r5!, {r0, r1}
90020d28:	a802      	add	r0, sp, #8
90020d2a:	f7f7 fc75 	bl	90018618 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90020d2e:	4639      	mov	r1, r7
90020d30:	a804      	add	r0, sp, #16
90020d32:	f7f7 fcb5 	bl	900186a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90020d36:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
90020d3a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
90020d3e:	f8bd 100c 	ldrh.w	r1, [sp, #12]
90020d42:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
90020d46:	fb11 2103 	smlabb	r1, r1, r3, r2
90020d4a:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
90020d4e:	eb04 0441 	add.w	r4, r4, r1, lsl #1
90020d52:	440e      	add	r6, r1
90020d54:	f8bd 1008 	ldrh.w	r1, [sp, #8]
90020d58:	440a      	add	r2, r1
90020d5a:	f8ad 2010 	strh.w	r2, [sp, #16]
90020d5e:	f8bd 200a 	ldrh.w	r2, [sp, #10]
90020d62:	4413      	add	r3, r2
90020d64:	f8ad 3012 	strh.w	r3, [sp, #18]
90020d68:	4b77      	ldr	r3, [pc, #476]	; (90020f48 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
90020d6a:	6818      	ldr	r0, [r3, #0]
90020d6c:	6803      	ldr	r3, [r0, #0]
90020d6e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90020d70:	4798      	blx	r3
90020d72:	f8b9 b000 	ldrh.w	fp, [r9]
90020d76:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
90020d7a:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
90020d7e:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
90020d82:	fb05 f50b 	mul.w	r5, r5, fp
90020d86:	fb0b 2303 	mla	r3, fp, r3, r2
90020d8a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90020d8e:	ea4f 0348 	mov.w	r3, r8, lsl #1
90020d92:	9300      	str	r3, [sp, #0]
90020d94:	d069      	beq.n	90020e6a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
90020d96:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
90020d9a:	4558      	cmp	r0, fp
90020d9c:	f080 80cc 	bcs.w	90020f38 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
90020da0:	9b00      	ldr	r3, [sp, #0]
90020da2:	4631      	mov	r1, r6
90020da4:	18c3      	adds	r3, r0, r3
90020da6:	9301      	str	r3, [sp, #4]
90020da8:	9b01      	ldr	r3, [sp, #4]
90020daa:	4298      	cmp	r0, r3
90020dac:	d24f      	bcs.n	90020e4e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
90020dae:	f811 2b01 	ldrb.w	r2, [r1], #1
90020db2:	2a00      	cmp	r2, #0
90020db4:	d048      	beq.n	90020e48 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
90020db6:	fb0a f202 	mul.w	r2, sl, r2
90020dba:	1c53      	adds	r3, r2, #1
90020dbc:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90020dc0:	121b      	asrs	r3, r3, #8
90020dc2:	d041      	beq.n	90020e48 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
90020dc4:	8802      	ldrh	r2, [r0, #0]
90020dc6:	b29e      	uxth	r6, r3
90020dc8:	f8b4 c000 	ldrh.w	ip, [r4]
90020dcc:	43db      	mvns	r3, r3
90020dce:	1215      	asrs	r5, r2, #8
90020dd0:	b2db      	uxtb	r3, r3
90020dd2:	ea4f 272c 	mov.w	r7, ip, asr #8
90020dd6:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
90020dda:	ea4f 0ee2 	mov.w	lr, r2, asr #3
90020dde:	fb15 f503 	smulbb	r5, r5, r3
90020de2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
90020de6:	00d2      	lsls	r2, r2, #3
90020de8:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
90020dec:	fb07 5706 	mla	r7, r7, r6, r5
90020df0:	ea4f 05ec 	mov.w	r5, ip, asr #3
90020df4:	b2d2      	uxtb	r2, r2
90020df6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
90020dfa:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
90020dfe:	fb1e fe03 	smulbb	lr, lr, r3
90020e02:	b2bf      	uxth	r7, r7
90020e04:	fb12 f203 	smulbb	r2, r2, r3
90020e08:	fa5f fc8c 	uxtb.w	ip, ip
90020e0c:	fb05 e506 	mla	r5, r5, r6, lr
90020e10:	f107 0e01 	add.w	lr, r7, #1
90020e14:	fb0c 2c06 	mla	ip, ip, r6, r2
90020e18:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
90020e1c:	fa1f fc8c 	uxth.w	ip, ip
90020e20:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
90020e24:	b2ad      	uxth	r5, r5
90020e26:	f10c 0701 	add.w	r7, ip, #1
90020e2a:	eb07 271c 	add.w	r7, r7, ip, lsr #8
90020e2e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
90020e32:	ea47 070e 	orr.w	r7, r7, lr
90020e36:	f105 0e01 	add.w	lr, r5, #1
90020e3a:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
90020e3e:	096d      	lsrs	r5, r5, #5
90020e40:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90020e44:	432f      	orrs	r7, r5
90020e46:	8007      	strh	r7, [r0, #0]
90020e48:	3002      	adds	r0, #2
90020e4a:	3402      	adds	r4, #2
90020e4c:	e7ac      	b.n	90020da8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
90020e4e:	f8b9 3000 	ldrh.w	r3, [r9]
90020e52:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
90020e56:	eba3 0308 	sub.w	r3, r3, r8
90020e5a:	eba6 0608 	sub.w	r6, r6, r8
90020e5e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90020e62:	eb04 0446 	add.w	r4, r4, r6, lsl #1
90020e66:	440e      	add	r6, r1
90020e68:	e797      	b.n	90020d9a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
90020e6a:	eb00 0545 	add.w	r5, r0, r5, lsl #1
90020e6e:	42a8      	cmp	r0, r5
90020e70:	d262      	bcs.n	90020f38 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
90020e72:	9b00      	ldr	r3, [sp, #0]
90020e74:	4631      	mov	r1, r6
90020e76:	eb00 0b03 	add.w	fp, r0, r3
90020e7a:	4558      	cmp	r0, fp
90020e7c:	d24e      	bcs.n	90020f1c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
90020e7e:	f811 3b01 	ldrb.w	r3, [r1], #1
90020e82:	b12b      	cbz	r3, 90020e90 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
90020e84:	2bff      	cmp	r3, #255	; 0xff
90020e86:	f8b4 e000 	ldrh.w	lr, [r4]
90020e8a:	d104      	bne.n	90020e96 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
90020e8c:	f8a0 e000 	strh.w	lr, [r0]
90020e90:	3002      	adds	r0, #2
90020e92:	3402      	adds	r4, #2
90020e94:	e7f1      	b.n	90020e7a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
90020e96:	8802      	ldrh	r2, [r0, #0]
90020e98:	b29f      	uxth	r7, r3
90020e9a:	43db      	mvns	r3, r3
90020e9c:	ea4f 2c2e 	mov.w	ip, lr, asr #8
90020ea0:	1216      	asrs	r6, r2, #8
90020ea2:	b2db      	uxtb	r3, r3
90020ea4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
90020ea8:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
90020eac:	ea4f 0ae2 	mov.w	sl, r2, asr #3
90020eb0:	00d2      	lsls	r2, r2, #3
90020eb2:	fb16 f603 	smulbb	r6, r6, r3
90020eb6:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
90020eba:	b2d2      	uxtb	r2, r2
90020ebc:	fb0c 6c07 	mla	ip, ip, r7, r6
90020ec0:	ea4f 06ee 	mov.w	r6, lr, asr #3
90020ec4:	fb1a fa03 	smulbb	sl, sl, r3
90020ec8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90020ecc:	fa1f fc8c 	uxth.w	ip, ip
90020ed0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
90020ed4:	fb12 f303 	smulbb	r3, r2, r3
90020ed8:	fa5f fe8e 	uxtb.w	lr, lr
90020edc:	fb06 a607 	mla	r6, r6, r7, sl
90020ee0:	f10c 0201 	add.w	r2, ip, #1
90020ee4:	fb0e 3307 	mla	r3, lr, r7, r3
90020ee8:	b2b6      	uxth	r6, r6
90020eea:	b29b      	uxth	r3, r3
90020eec:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
90020ef0:	f106 0a01 	add.w	sl, r6, #1
90020ef4:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
90020ef8:	f103 0c01 	add.w	ip, r3, #1
90020efc:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
90020f00:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
90020f04:	0976      	lsrs	r6, r6, #5
90020f06:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
90020f0a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
90020f0e:	ea4c 0c02 	orr.w	ip, ip, r2
90020f12:	ea4c 0c06 	orr.w	ip, ip, r6
90020f16:	f8a0 c000 	strh.w	ip, [r0]
90020f1a:	e7b9      	b.n	90020e90 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
90020f1c:	f8b9 3000 	ldrh.w	r3, [r9]
90020f20:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
90020f24:	eba3 0308 	sub.w	r3, r3, r8
90020f28:	eba6 0608 	sub.w	r6, r6, r8
90020f2c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90020f30:	eb04 0446 	add.w	r4, r4, r6, lsl #1
90020f34:	440e      	add	r6, r1
90020f36:	e79a      	b.n	90020e6e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
90020f38:	4b03      	ldr	r3, [pc, #12]	; (90020f48 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
90020f3a:	6818      	ldr	r0, [r3, #0]
90020f3c:	6803      	ldr	r3, [r0, #0]
90020f3e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90020f40:	4798      	blx	r3
90020f42:	b007      	add	sp, #28
90020f44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90020f48:	240236cc 	.word	0x240236cc
90020f4c:	240236c6 	.word	0x240236c6

90020f50 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
90020f50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020f54:	b089      	sub	sp, #36	; 0x24
90020f56:	4682      	mov	sl, r0
90020f58:	460f      	mov	r7, r1
90020f5a:	4691      	mov	r9, r2
90020f5c:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
90020f60:	4698      	mov	r8, r3
90020f62:	9c12      	ldr	r4, [sp, #72]	; 0x48
90020f64:	2e00      	cmp	r6, #0
90020f66:	d03d      	beq.n	90020fe4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
90020f68:	4608      	mov	r0, r1
90020f6a:	f7fa fe4b 	bl	9001bc04 <_ZNK8touchgfx6Bitmap8getWidthEv>
90020f6e:	4605      	mov	r5, r0
90020f70:	4638      	mov	r0, r7
90020f72:	f7fa fe7b 	bl	9001bc6c <_ZNK8touchgfx6Bitmap9getHeightEv>
90020f76:	f8ad 000e 	strh.w	r0, [sp, #14]
90020f7a:	4638      	mov	r0, r7
90020f7c:	f8ad 9008 	strh.w	r9, [sp, #8]
90020f80:	f8ad 500c 	strh.w	r5, [sp, #12]
90020f84:	f8ad 800a 	strh.w	r8, [sp, #10]
90020f88:	f7fa ff28 	bl	9001bddc <_ZNK8touchgfx6Bitmap7getDataEv>
90020f8c:	4605      	mov	r5, r0
90020f8e:	4638      	mov	r0, r7
90020f90:	f7fa ff54 	bl	9001be3c <_ZNK8touchgfx6Bitmap12getExtraDataEv>
90020f94:	4681      	mov	r9, r0
90020f96:	4638      	mov	r0, r7
90020f98:	f7fa ffa4 	bl	9001bee4 <_ZNK8touchgfx6Bitmap9getFormatEv>
90020f9c:	280b      	cmp	r0, #11
90020f9e:	d821      	bhi.n	90020fe4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
90020fa0:	e8df f000 	tbb	[pc, r0]
90020fa4:	2006aebe 	.word	0x2006aebe
90020fa8:	20202020 	.word	0x20202020
90020fac:	b5202020 	.word	0xb5202020
90020fb0:	4bb0      	ldr	r3, [pc, #704]	; (90021274 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
90020fb2:	6818      	ldr	r0, [r3, #0]
90020fb4:	6803      	ldr	r3, [r0, #0]
90020fb6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90020fb8:	4798      	blx	r3
90020fba:	2eff      	cmp	r6, #255	; 0xff
90020fbc:	d101      	bne.n	90020fc2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
90020fbe:	0683      	lsls	r3, r0, #26
90020fc0:	d506      	bpl.n	90020fd0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x80>
90020fc2:	4633      	mov	r3, r6
90020fc4:	4622      	mov	r2, r4
90020fc6:	a902      	add	r1, sp, #8
90020fc8:	4628      	mov	r0, r5
90020fca:	f7ff f907 	bl	900201dc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
90020fce:	e009      	b.n	90020fe4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
90020fd0:	4638      	mov	r0, r7
90020fd2:	f7fa fecb 	bl	9001bd6c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
90020fd6:	b940      	cbnz	r0, 90020fea <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
90020fd8:	4623      	mov	r3, r4
90020fda:	aa02      	add	r2, sp, #8
90020fdc:	4629      	mov	r1, r5
90020fde:	4650      	mov	r0, sl
90020fe0:	f7ff f9e2 	bl	900203a8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
90020fe4:	b009      	add	sp, #36	; 0x24
90020fe6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90020fea:	f10d 0818 	add.w	r8, sp, #24
90020fee:	4639      	mov	r1, r7
90020ff0:	af04      	add	r7, sp, #16
90020ff2:	4640      	mov	r0, r8
90020ff4:	f7fa fe6e 	bl	9001bcd4 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
90020ff8:	e898 0003 	ldmia.w	r8, {r0, r1}
90020ffc:	e887 0003 	stmia.w	r7, {r0, r1}
90021000:	4638      	mov	r0, r7
90021002:	4621      	mov	r1, r4
90021004:	f7f2 fd9e 	bl	90013b44 <_ZN8touchgfx4RectaNERKS0_>
90021008:	4638      	mov	r0, r7
9002100a:	f7f2 fdde 	bl	90013bca <_ZNK8touchgfx4Rect7isEmptyEv>
9002100e:	2800      	cmp	r0, #0
90021010:	d1d7      	bne.n	90020fc2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
90021012:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
90021016:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
9002101a:	4293      	cmp	r3, r2
9002101c:	dd12      	ble.n	90021044 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf4>
9002101e:	1a9b      	subs	r3, r3, r2
90021020:	f9b4 0000 	ldrsh.w	r0, [r4]
90021024:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
90021028:	f8ad 0018 	strh.w	r0, [sp, #24]
9002102c:	4628      	mov	r0, r5
9002102e:	f8ad 201a 	strh.w	r2, [sp, #26]
90021032:	4642      	mov	r2, r8
90021034:	f8ad 101c 	strh.w	r1, [sp, #28]
90021038:	a902      	add	r1, sp, #8
9002103a:	f8ad 301e 	strh.w	r3, [sp, #30]
9002103e:	4633      	mov	r3, r6
90021040:	f7ff f8cc 	bl	900201dc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
90021044:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
90021048:	f9b4 2000 	ldrsh.w	r2, [r4]
9002104c:	4293      	cmp	r3, r2
9002104e:	dd12      	ble.n	90021076 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x126>
90021050:	1a9b      	subs	r3, r3, r2
90021052:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
90021056:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
9002105a:	f8ad 2018 	strh.w	r2, [sp, #24]
9002105e:	4642      	mov	r2, r8
90021060:	f8ad 001a 	strh.w	r0, [sp, #26]
90021064:	4628      	mov	r0, r5
90021066:	f8ad 301c 	strh.w	r3, [sp, #28]
9002106a:	23ff      	movs	r3, #255	; 0xff
9002106c:	f8ad 101e 	strh.w	r1, [sp, #30]
90021070:	a902      	add	r1, sp, #8
90021072:	f7ff f8b3 	bl	900201dc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
90021076:	463b      	mov	r3, r7
90021078:	aa02      	add	r2, sp, #8
9002107a:	4629      	mov	r1, r5
9002107c:	4650      	mov	r0, sl
9002107e:	f7ff f993 	bl	900203a8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
90021082:	88a2      	ldrh	r2, [r4, #4]
90021084:	8823      	ldrh	r3, [r4, #0]
90021086:	f8bd 1014 	ldrh.w	r1, [sp, #20]
9002108a:	4413      	add	r3, r2
9002108c:	f8bd 2010 	ldrh.w	r2, [sp, #16]
90021090:	440a      	add	r2, r1
90021092:	b29b      	uxth	r3, r3
90021094:	b292      	uxth	r2, r2
90021096:	b218      	sxth	r0, r3
90021098:	b211      	sxth	r1, r2
9002109a:	4288      	cmp	r0, r1
9002109c:	dd12      	ble.n	900210c4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
9002109e:	1a9b      	subs	r3, r3, r2
900210a0:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
900210a4:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
900210a8:	4642      	mov	r2, r8
900210aa:	f8ad 1018 	strh.w	r1, [sp, #24]
900210ae:	a902      	add	r1, sp, #8
900210b0:	f8ad 301c 	strh.w	r3, [sp, #28]
900210b4:	23ff      	movs	r3, #255	; 0xff
900210b6:	f8ad 001e 	strh.w	r0, [sp, #30]
900210ba:	4628      	mov	r0, r5
900210bc:	f8ad 601a 	strh.w	r6, [sp, #26]
900210c0:	f7ff f88c 	bl	900201dc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
900210c4:	88e2      	ldrh	r2, [r4, #6]
900210c6:	8863      	ldrh	r3, [r4, #2]
900210c8:	f8bd 1016 	ldrh.w	r1, [sp, #22]
900210cc:	4413      	add	r3, r2
900210ce:	f8bd 2012 	ldrh.w	r2, [sp, #18]
900210d2:	440a      	add	r2, r1
900210d4:	b29b      	uxth	r3, r3
900210d6:	b292      	uxth	r2, r2
900210d8:	b218      	sxth	r0, r3
900210da:	b211      	sxth	r1, r2
900210dc:	4288      	cmp	r0, r1
900210de:	dd81      	ble.n	90020fe4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
900210e0:	1a9b      	subs	r3, r3, r2
900210e2:	f9b4 6000 	ldrsh.w	r6, [r4]
900210e6:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
900210ea:	4642      	mov	r2, r8
900210ec:	f8ad 301e 	strh.w	r3, [sp, #30]
900210f0:	23ff      	movs	r3, #255	; 0xff
900210f2:	f8ad 6018 	strh.w	r6, [sp, #24]
900210f6:	f8ad 101a 	strh.w	r1, [sp, #26]
900210fa:	f8ad 001c 	strh.w	r0, [sp, #28]
900210fe:	e762      	b.n	90020fc6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x76>
90021100:	4633      	mov	r3, r6
90021102:	4622      	mov	r2, r4
90021104:	a902      	add	r1, sp, #8
90021106:	4628      	mov	r0, r5
90021108:	f7ff f9be 	bl	90020488 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
9002110c:	e76a      	b.n	90020fe4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
9002110e:	e9cd 4600 	strd	r4, r6, [sp]
90021112:	ab02      	add	r3, sp, #8
90021114:	464a      	mov	r2, r9
90021116:	4629      	mov	r1, r5
90021118:	4650      	mov	r0, sl
9002111a:	f7ff fd95 	bl	90020c48 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
9002111e:	e761      	b.n	90020fe4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
90021120:	4638      	mov	r0, r7
90021122:	f7fa fe23 	bl	9001bd6c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
90021126:	b950      	cbnz	r0, 9002113e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ee>
90021128:	f8da 3000 	ldr.w	r3, [sl]
9002112c:	aa02      	add	r2, sp, #8
9002112e:	4629      	mov	r1, r5
90021130:	e9cd 6000 	strd	r6, r0, [sp]
90021134:	4650      	mov	r0, sl
90021136:	68de      	ldr	r6, [r3, #12]
90021138:	4623      	mov	r3, r4
9002113a:	47b0      	blx	r6
9002113c:	e752      	b.n	90020fe4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
9002113e:	f10d 0818 	add.w	r8, sp, #24
90021142:	4639      	mov	r1, r7
90021144:	af04      	add	r7, sp, #16
90021146:	4640      	mov	r0, r8
90021148:	f7fa fdc4 	bl	9001bcd4 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
9002114c:	e898 0003 	ldmia.w	r8, {r0, r1}
90021150:	e887 0003 	stmia.w	r7, {r0, r1}
90021154:	4638      	mov	r0, r7
90021156:	4621      	mov	r1, r4
90021158:	f7f2 fcf4 	bl	90013b44 <_ZN8touchgfx4RectaNERKS0_>
9002115c:	4638      	mov	r0, r7
9002115e:	f7f2 fd34 	bl	90013bca <_ZNK8touchgfx4Rect7isEmptyEv>
90021162:	b138      	cbz	r0, 90021174 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
90021164:	4623      	mov	r3, r4
90021166:	9600      	str	r6, [sp, #0]
90021168:	aa02      	add	r2, sp, #8
9002116a:	4649      	mov	r1, r9
9002116c:	4628      	mov	r0, r5
9002116e:	f7ff fdc9 	bl	90020d04 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
90021172:	e737      	b.n	90020fe4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
90021174:	f8da 3000 	ldr.w	r3, [sl]
90021178:	aa02      	add	r2, sp, #8
9002117a:	4629      	mov	r1, r5
9002117c:	e9cd 6000 	strd	r6, r0, [sp]
90021180:	4650      	mov	r0, sl
90021182:	f8d3 b00c 	ldr.w	fp, [r3, #12]
90021186:	463b      	mov	r3, r7
90021188:	47d8      	blx	fp
9002118a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9002118e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
90021192:	4293      	cmp	r3, r2
90021194:	dd13      	ble.n	900211be <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26e>
90021196:	f9b4 0000 	ldrsh.w	r0, [r4]
9002119a:	1a9b      	subs	r3, r3, r2
9002119c:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
900211a0:	f8ad 0018 	strh.w	r0, [sp, #24]
900211a4:	4628      	mov	r0, r5
900211a6:	f8ad 201a 	strh.w	r2, [sp, #26]
900211aa:	aa02      	add	r2, sp, #8
900211ac:	f8ad 101c 	strh.w	r1, [sp, #28]
900211b0:	4649      	mov	r1, r9
900211b2:	f8ad 301e 	strh.w	r3, [sp, #30]
900211b6:	4643      	mov	r3, r8
900211b8:	9600      	str	r6, [sp, #0]
900211ba:	f7ff fda3 	bl	90020d04 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
900211be:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
900211c2:	f9b4 2000 	ldrsh.w	r2, [r4]
900211c6:	4293      	cmp	r3, r2
900211c8:	dd13      	ble.n	900211f2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a2>
900211ca:	1a9b      	subs	r3, r3, r2
900211cc:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
900211d0:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
900211d4:	f8ad 2018 	strh.w	r2, [sp, #24]
900211d8:	aa02      	add	r2, sp, #8
900211da:	f8ad 001a 	strh.w	r0, [sp, #26]
900211de:	4628      	mov	r0, r5
900211e0:	f8ad 301c 	strh.w	r3, [sp, #28]
900211e4:	4643      	mov	r3, r8
900211e6:	f8ad 101e 	strh.w	r1, [sp, #30]
900211ea:	4649      	mov	r1, r9
900211ec:	9600      	str	r6, [sp, #0]
900211ee:	f7ff fd89 	bl	90020d04 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
900211f2:	88a2      	ldrh	r2, [r4, #4]
900211f4:	8823      	ldrh	r3, [r4, #0]
900211f6:	f8bd 1014 	ldrh.w	r1, [sp, #20]
900211fa:	4413      	add	r3, r2
900211fc:	f8bd 2010 	ldrh.w	r2, [sp, #16]
90021200:	440a      	add	r2, r1
90021202:	b29b      	uxth	r3, r3
90021204:	b292      	uxth	r2, r2
90021206:	b218      	sxth	r0, r3
90021208:	b211      	sxth	r1, r2
9002120a:	4288      	cmp	r0, r1
9002120c:	dd13      	ble.n	90021236 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e6>
9002120e:	1a9b      	subs	r3, r3, r2
90021210:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
90021214:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
90021218:	aa02      	add	r2, sp, #8
9002121a:	f8ad 1018 	strh.w	r1, [sp, #24]
9002121e:	4649      	mov	r1, r9
90021220:	f8ad 301c 	strh.w	r3, [sp, #28]
90021224:	4643      	mov	r3, r8
90021226:	f8ad 001e 	strh.w	r0, [sp, #30]
9002122a:	4628      	mov	r0, r5
9002122c:	9600      	str	r6, [sp, #0]
9002122e:	f8ad 701a 	strh.w	r7, [sp, #26]
90021232:	f7ff fd67 	bl	90020d04 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
90021236:	88e2      	ldrh	r2, [r4, #6]
90021238:	8863      	ldrh	r3, [r4, #2]
9002123a:	f8bd 1016 	ldrh.w	r1, [sp, #22]
9002123e:	4413      	add	r3, r2
90021240:	f8bd 2012 	ldrh.w	r2, [sp, #18]
90021244:	440a      	add	r2, r1
90021246:	b29b      	uxth	r3, r3
90021248:	b292      	uxth	r2, r2
9002124a:	b218      	sxth	r0, r3
9002124c:	b211      	sxth	r1, r2
9002124e:	4288      	cmp	r0, r1
90021250:	f77f aec8 	ble.w	90020fe4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
90021254:	f9b4 7000 	ldrsh.w	r7, [r4]
90021258:	1a9b      	subs	r3, r3, r2
9002125a:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
9002125e:	f8ad 301e 	strh.w	r3, [sp, #30]
90021262:	4643      	mov	r3, r8
90021264:	f8ad 7018 	strh.w	r7, [sp, #24]
90021268:	f8ad 101a 	strh.w	r1, [sp, #26]
9002126c:	f8ad 001c 	strh.w	r0, [sp, #28]
90021270:	9600      	str	r6, [sp, #0]
90021272:	e779      	b.n	90021168 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x218>
90021274:	240236cc 	.word	0x240236cc

90021278 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
90021278:	b180      	cbz	r0, 9002129c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
9002127a:	2903      	cmp	r1, #3
9002127c:	d81c      	bhi.n	900212b8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
9002127e:	e8df f001 	tbb	[pc, r1]
90021282:	1d02      	.short	0x1d02
90021284:	1f08      	.short	0x1f08
90021286:	4b10      	ldr	r3, [pc, #64]	; (900212c8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
90021288:	8818      	ldrh	r0, [r3, #0]
9002128a:	f3c0 000e 	ubfx	r0, r0, #0, #15
9002128e:	4240      	negs	r0, r0
90021290:	4770      	bx	lr
90021292:	4b0d      	ldr	r3, [pc, #52]	; (900212c8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
90021294:	8818      	ldrh	r0, [r3, #0]
90021296:	f3c0 000e 	ubfx	r0, r0, #0, #15
9002129a:	4770      	bx	lr
9002129c:	2903      	cmp	r1, #3
9002129e:	d80b      	bhi.n	900212b8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
900212a0:	a301      	add	r3, pc, #4	; (adr r3, 900212a8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
900212a2:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
900212a6:	bf00      	nop
900212a8:	900212bd 	.word	0x900212bd
900212ac:	90021293 	.word	0x90021293
900212b0:	900212c1 	.word	0x900212c1
900212b4:	90021287 	.word	0x90021287
900212b8:	2000      	movs	r0, #0
900212ba:	4770      	bx	lr
900212bc:	2001      	movs	r0, #1
900212be:	4770      	bx	lr
900212c0:	f04f 30ff 	mov.w	r0, #4294967295
900212c4:	4770      	bx	lr
900212c6:	bf00      	nop
900212c8:	240236c6 	.word	0x240236c6

900212cc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
900212cc:	b180      	cbz	r0, 900212f0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
900212ce:	2903      	cmp	r1, #3
900212d0:	d81c      	bhi.n	9002130c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
900212d2:	e8df f001 	tbb	[pc, r1]
900212d6:	021d      	.short	0x021d
900212d8:	071f      	.short	0x071f
900212da:	4b10      	ldr	r3, [pc, #64]	; (9002131c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
900212dc:	8818      	ldrh	r0, [r3, #0]
900212de:	f3c0 000e 	ubfx	r0, r0, #0, #15
900212e2:	4770      	bx	lr
900212e4:	4b0d      	ldr	r3, [pc, #52]	; (9002131c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
900212e6:	8818      	ldrh	r0, [r3, #0]
900212e8:	f3c0 000e 	ubfx	r0, r0, #0, #15
900212ec:	4240      	negs	r0, r0
900212ee:	4770      	bx	lr
900212f0:	2903      	cmp	r1, #3
900212f2:	d80b      	bhi.n	9002130c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
900212f4:	a301      	add	r3, pc, #4	; (adr r3, 900212fc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
900212f6:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
900212fa:	bf00      	nop
900212fc:	900212db 	.word	0x900212db
90021300:	90021315 	.word	0x90021315
90021304:	900212e5 	.word	0x900212e5
90021308:	90021311 	.word	0x90021311
9002130c:	2000      	movs	r0, #0
9002130e:	4770      	bx	lr
90021310:	2001      	movs	r0, #1
90021312:	4770      	bx	lr
90021314:	f04f 30ff 	mov.w	r0, #4294967295
90021318:	4770      	bx	lr
9002131a:	bf00      	nop
9002131c:	240236c6 	.word	0x240236c6

90021320 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
90021320:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90021324:	b099      	sub	sp, #100	; 0x64
90021326:	910b      	str	r1, [sp, #44]	; 0x2c
90021328:	a914      	add	r1, sp, #80	; 0x50
9002132a:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
9002132e:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
90021332:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
90021336:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
9002133a:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
9002133e:	e881 000c 	stmia.w	r1, {r2, r3}
90021342:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
90021346:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
9002134a:	9309      	str	r3, [sp, #36]	; 0x24
9002134c:	f891 900d 	ldrb.w	r9, [r1, #13]
90021350:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
90021354:	ea4f 1749 	mov.w	r7, r9, lsl #5
90021358:	9310      	str	r3, [sp, #64]	; 0x40
9002135a:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
9002135e:	930c      	str	r3, [sp, #48]	; 0x30
90021360:	f407 7380 	and.w	r3, r7, #256	; 0x100
90021364:	798f      	ldrb	r7, [r1, #6]
90021366:	431f      	orrs	r7, r3
90021368:	f000 8195 	beq.w	90021696 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
9002136c:	ea4f 1909 	mov.w	r9, r9, lsl #4
90021370:	f409 7380 	and.w	r3, r9, #256	; 0x100
90021374:	f891 9007 	ldrb.w	r9, [r1, #7]
90021378:	ea59 0903 	orrs.w	r9, r9, r3
9002137c:	f000 818b 	beq.w	90021696 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
90021380:	f991 3009 	ldrsb.w	r3, [r1, #9]
90021384:	b29b      	uxth	r3, r3
90021386:	2d00      	cmp	r5, #0
90021388:	f000 812e 	beq.w	900215e8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
9002138c:	1aed      	subs	r5, r5, r3
9002138e:	b2ad      	uxth	r5, r5
90021390:	042b      	lsls	r3, r5, #16
90021392:	d502      	bpl.n	9002139a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
90021394:	1b64      	subs	r4, r4, r5
90021396:	2500      	movs	r5, #0
90021398:	b224      	sxth	r4, r4
9002139a:	f9b2 1000 	ldrsh.w	r1, [r2]
9002139e:	a814      	add	r0, sp, #80	; 0x50
900213a0:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
900213a4:	428c      	cmp	r4, r1
900213a6:	b28b      	uxth	r3, r1
900213a8:	bfbf      	itttt	lt
900213aa:	18ed      	addlt	r5, r5, r3
900213ac:	1b2c      	sublt	r4, r5, r4
900213ae:	b2a5      	uxthlt	r5, r4
900213b0:	460c      	movlt	r4, r1
900213b2:	8891      	ldrh	r1, [r2, #4]
900213b4:	440b      	add	r3, r1
900213b6:	4621      	mov	r1, r4
900213b8:	b21b      	sxth	r3, r3
900213ba:	930f      	str	r3, [sp, #60]	; 0x3c
900213bc:	88d3      	ldrh	r3, [r2, #6]
900213be:	8852      	ldrh	r2, [r2, #2]
900213c0:	4413      	add	r3, r2
900213c2:	9a09      	ldr	r2, [sp, #36]	; 0x24
900213c4:	b21b      	sxth	r3, r3
900213c6:	930d      	str	r3, [sp, #52]	; 0x34
900213c8:	4bbd      	ldr	r3, [pc, #756]	; (900216c0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
900213ca:	f893 b000 	ldrb.w	fp, [r3]
900213ce:	f10b 3cff 	add.w	ip, fp, #4294967295
900213d2:	f1dc 0300 	rsbs	r3, ip, #0
900213d6:	eb43 030c 	adc.w	r3, r3, ip
900213da:	930e      	str	r3, [sp, #56]	; 0x38
900213dc:	4653      	mov	r3, sl
900213de:	f7f6 ff90 	bl	90018302 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
900213e2:	4621      	mov	r1, r4
900213e4:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
900213e8:	4653      	mov	r3, sl
900213ea:	9a09      	ldr	r2, [sp, #36]	; 0x24
900213ec:	a814      	add	r0, sp, #80	; 0x50
900213ee:	f7f6 ffa5 	bl	9001833c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
900213f2:	a918      	add	r1, sp, #96	; 0x60
900213f4:	f821 0d02 	strh.w	r0, [r1, #-2]!
900213f8:	a817      	add	r0, sp, #92	; 0x5c
900213fa:	f7f7 f8cb 	bl	90018594 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
900213fe:	f1ba 0f00 	cmp.w	sl, #0
90021402:	f040 80f4 	bne.w	900215ee <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
90021406:	f1bb 0f01 	cmp.w	fp, #1
9002140a:	f040 80f8 	bne.w	900215fe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
9002140e:	9b10      	ldr	r3, [sp, #64]	; 0x40
90021410:	2b00      	cmp	r3, #0
90021412:	f040 8145 	bne.w	900216a0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
90021416:	b2ba      	uxth	r2, r7
90021418:	b905      	cbnz	r5, 9002141c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
9002141a:	b16e      	cbz	r6, 90021438 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
9002141c:	fb06 5302 	mla	r3, r6, r2, r5
90021420:	9828      	ldr	r0, [sp, #160]	; 0xa0
90021422:	4631      	mov	r1, r6
90021424:	fb08 f303 	mul.w	r3, r8, r3
90021428:	f003 0607 	and.w	r6, r3, #7
9002142c:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
90021430:	9328      	str	r3, [sp, #160]	; 0xa0
90021432:	eba9 0301 	sub.w	r3, r9, r1
90021436:	930a      	str	r3, [sp, #40]	; 0x28
90021438:	4651      	mov	r1, sl
9002143a:	980e      	ldr	r0, [sp, #56]	; 0x38
9002143c:	f7ff ff1c 	bl	90021278 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
90021440:	4681      	mov	r9, r0
90021442:	980e      	ldr	r0, [sp, #56]	; 0x38
90021444:	f7ff ff42 	bl	900212cc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
90021448:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9002144a:	9909      	ldr	r1, [sp, #36]	; 0x24
9002144c:	4683      	mov	fp, r0
9002144e:	eba3 0a01 	sub.w	sl, r3, r1
90021452:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90021454:	459a      	cmp	sl, r3
90021456:	bfa8      	it	ge
90021458:	469a      	movge	sl, r3
9002145a:	f1ba 0f00 	cmp.w	sl, #0
9002145e:	f340 811a 	ble.w	90021696 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
90021462:	1b64      	subs	r4, r4, r5
90021464:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90021466:	1b1c      	subs	r4, r3, r4
90021468:	42bc      	cmp	r4, r7
9002146a:	bfd4      	ite	le
9002146c:	ebc5 0504 	rsble	r5, r5, r4
90021470:	ebc5 0507 	rsbgt	r5, r5, r7
90021474:	2d00      	cmp	r5, #0
90021476:	f340 810e 	ble.w	90021696 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
9002147a:	1b52      	subs	r2, r2, r5
9002147c:	fb08 f302 	mul.w	r3, r8, r2
90021480:	930f      	str	r3, [sp, #60]	; 0x3c
90021482:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90021484:	2b00      	cmp	r3, #0
90021486:	f040 8116 	bne.w	900216b6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
9002148a:	4b8e      	ldr	r3, [pc, #568]	; (900216c4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
9002148c:	6818      	ldr	r0, [r3, #0]
9002148e:	6803      	ldr	r3, [r0, #0]
90021490:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90021492:	4798      	blx	r3
90021494:	2301      	movs	r3, #1
90021496:	4a8c      	ldr	r2, [pc, #560]	; (900216c8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
90021498:	fa03 f308 	lsl.w	r3, r3, r8
9002149c:	8811      	ldrh	r1, [r2, #0]
9002149e:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
900214a2:	3b01      	subs	r3, #1
900214a4:	b2db      	uxtb	r3, r3
900214a6:	930e      	str	r3, [sp, #56]	; 0x38
900214a8:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
900214ac:	fb01 2303 	mla	r3, r1, r3, r2
900214b0:	eb00 0343 	add.w	r3, r0, r3, lsl #1
900214b4:	930a      	str	r3, [sp, #40]	; 0x28
900214b6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
900214b8:	f3c3 4307 	ubfx	r3, r3, #16, #8
900214bc:	9313      	str	r3, [sp, #76]	; 0x4c
900214be:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
900214c0:	0a19      	lsrs	r1, r3, #8
900214c2:	b2cb      	uxtb	r3, r1
900214c4:	9312      	str	r3, [sp, #72]	; 0x48
900214c6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
900214c8:	b2db      	uxtb	r3, r3
900214ca:	9311      	str	r3, [sp, #68]	; 0x44
900214cc:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
900214ce:	095a      	lsrs	r2, r3, #5
900214d0:	4b7e      	ldr	r3, [pc, #504]	; (900216cc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>)
900214d2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
900214d6:	400b      	ands	r3, r1
900214d8:	4313      	orrs	r3, r2
900214da:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
900214dc:	f3c2 02c4 	ubfx	r2, r2, #3, #5
900214e0:	4313      	orrs	r3, r2
900214e2:	b29b      	uxth	r3, r3
900214e4:	9310      	str	r3, [sp, #64]	; 0x40
900214e6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
900214e8:	781a      	ldrb	r2, [r3, #0]
900214ea:	ea4f 0349 	mov.w	r3, r9, lsl #1
900214ee:	fb05 b919 	mls	r9, r5, r9, fp
900214f2:	4132      	asrs	r2, r6
900214f4:	fb03 fb05 	mul.w	fp, r3, r5
900214f8:	930d      	str	r3, [sp, #52]	; 0x34
900214fa:	b2d2      	uxtb	r2, r2
900214fc:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
90021500:	f11a 3aff 	adds.w	sl, sl, #4294967295
90021504:	f0c0 80f5 	bcc.w	900216f2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
90021508:	46ae      	mov	lr, r5
9002150a:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
9002150e:	f11e 3eff 	adds.w	lr, lr, #4294967295
90021512:	f0c0 80dd 	bcc.w	900216d0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
90021516:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90021518:	4013      	ands	r3, r2
9002151a:	d055      	beq.n	900215c8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
9002151c:	20ff      	movs	r0, #255	; 0xff
9002151e:	990e      	ldr	r1, [sp, #56]	; 0x38
90021520:	fb90 f1f1 	sdiv	r1, r0, r1
90021524:	434b      	muls	r3, r1
90021526:	2bfe      	cmp	r3, #254	; 0xfe
90021528:	dd03      	ble.n	90021532 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
9002152a:	990c      	ldr	r1, [sp, #48]	; 0x30
9002152c:	4281      	cmp	r1, r0
9002152e:	f000 80c4 	beq.w	900216ba <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39a>
90021532:	990c      	ldr	r1, [sp, #48]	; 0x30
90021534:	f8bc 4000 	ldrh.w	r4, [ip]
90021538:	fb11 f303 	smulbb	r3, r1, r3
9002153c:	1220      	asrs	r0, r4, #8
9002153e:	b29b      	uxth	r3, r3
90021540:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
90021544:	1c59      	adds	r1, r3, #1
90021546:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
9002154a:	eb01 2313 	add.w	r3, r1, r3, lsr #8
9002154e:	10e1      	asrs	r1, r4, #3
90021550:	f3c3 2307 	ubfx	r3, r3, #8, #8
90021554:	00e4      	lsls	r4, r4, #3
90021556:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
9002155a:	b29f      	uxth	r7, r3
9002155c:	43db      	mvns	r3, r3
9002155e:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
90021562:	b2db      	uxtb	r3, r3
90021564:	b2e4      	uxtb	r4, r4
90021566:	9309      	str	r3, [sp, #36]	; 0x24
90021568:	9b13      	ldr	r3, [sp, #76]	; 0x4c
9002156a:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
9002156e:	fb13 f907 	smulbb	r9, r3, r7
90021572:	9b09      	ldr	r3, [sp, #36]	; 0x24
90021574:	fb00 9003 	mla	r0, r0, r3, r9
90021578:	9b12      	ldr	r3, [sp, #72]	; 0x48
9002157a:	fb13 f907 	smulbb	r9, r3, r7
9002157e:	9b09      	ldr	r3, [sp, #36]	; 0x24
90021580:	b280      	uxth	r0, r0
90021582:	fb01 9103 	mla	r1, r1, r3, r9
90021586:	9b11      	ldr	r3, [sp, #68]	; 0x44
90021588:	fb13 f707 	smulbb	r7, r3, r7
9002158c:	9b09      	ldr	r3, [sp, #36]	; 0x24
9002158e:	b289      	uxth	r1, r1
90021590:	fb04 7403 	mla	r4, r4, r3, r7
90021594:	1c43      	adds	r3, r0, #1
90021596:	b2a4      	uxth	r4, r4
90021598:	eb03 2010 	add.w	r0, r3, r0, lsr #8
9002159c:	f104 0901 	add.w	r9, r4, #1
900215a0:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
900215a4:	eb09 2914 	add.w	r9, r9, r4, lsr #8
900215a8:	f3c9 29c4 	ubfx	r9, r9, #11, #5
900215ac:	ea49 0000 	orr.w	r0, r9, r0
900215b0:	f101 0901 	add.w	r9, r1, #1
900215b4:	eb09 2911 	add.w	r9, r9, r1, lsr #8
900215b8:	ea4f 1959 	mov.w	r9, r9, lsr #5
900215bc:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
900215c0:	ea40 0009 	orr.w	r0, r0, r9
900215c4:	f8ac 0000 	strh.w	r0, [ip]
900215c8:	4446      	add	r6, r8
900215ca:	b2b6      	uxth	r6, r6
900215cc:	2e07      	cmp	r6, #7
900215ce:	bf89      	itett	hi
900215d0:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
900215d2:	fa42 f208 	asrls.w	r2, r2, r8
900215d6:	2600      	movhi	r6, #0
900215d8:	785a      	ldrbhi	r2, [r3, #1]
900215da:	bf8a      	itet	hi
900215dc:	3301      	addhi	r3, #1
900215de:	b2d2      	uxtbls	r2, r2
900215e0:	9328      	strhi	r3, [sp, #160]	; 0xa0
900215e2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
900215e4:	449c      	add	ip, r3
900215e6:	e792      	b.n	9002150e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
900215e8:	441c      	add	r4, r3
900215ea:	b224      	sxth	r4, r4
900215ec:	e6d5      	b.n	9002139a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
900215ee:	f1ba 0f01 	cmp.w	sl, #1
900215f2:	f47f af0c 	bne.w	9002140e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
900215f6:	f1bb 0f01 	cmp.w	fp, #1
900215fa:	f47f af08 	bne.w	9002140e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
900215fe:	f8df b0c4 	ldr.w	fp, [pc, #196]	; 900216c4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>
90021602:	f8db 0000 	ldr.w	r0, [fp]
90021606:	6803      	ldr	r3, [r0, #0]
90021608:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9002160a:	4798      	blx	r3
9002160c:	f410 7380 	ands.w	r3, r0, #256	; 0x100
90021610:	465a      	mov	r2, fp
90021612:	d006      	beq.n	90021622 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
90021614:	f1b8 0f04 	cmp.w	r8, #4
90021618:	d140      	bne.n	9002169c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
9002161a:	9b10      	ldr	r3, [sp, #64]	; 0x40
9002161c:	3300      	adds	r3, #0
9002161e:	bf18      	it	ne
90021620:	2301      	movne	r3, #1
90021622:	0580      	lsls	r0, r0, #22
90021624:	d56e      	bpl.n	90021704 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
90021626:	f1b8 0f08 	cmp.w	r8, #8
9002162a:	d16b      	bne.n	90021704 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
9002162c:	2b00      	cmp	r3, #0
9002162e:	bf0c      	ite	eq
90021630:	f44f 7100 	moveq.w	r1, #512	; 0x200
90021634:	f44f 7180 	movne.w	r1, #256	; 0x100
90021638:	2d00      	cmp	r5, #0
9002163a:	f47f aee8 	bne.w	9002140e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
9002163e:	2e00      	cmp	r6, #0
90021640:	f47f aee5 	bne.w	9002140e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
90021644:	19e3      	adds	r3, r4, r7
90021646:	980f      	ldr	r0, [sp, #60]	; 0x3c
90021648:	4283      	cmp	r3, r0
9002164a:	f73f aee0 	bgt.w	9002140e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
9002164e:	9b09      	ldr	r3, [sp, #36]	; 0x24
90021650:	980d      	ldr	r0, [sp, #52]	; 0x34
90021652:	444b      	add	r3, r9
90021654:	4283      	cmp	r3, r0
90021656:	f73f aeda 	bgt.w	9002140e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
9002165a:	b2bf      	uxth	r7, r7
9002165c:	f1b8 0f08 	cmp.w	r8, #8
90021660:	6810      	ldr	r0, [r2, #0]
90021662:	f04f 0500 	mov.w	r5, #0
90021666:	bf18      	it	ne
90021668:	3701      	addne	r7, #1
9002166a:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
9002166e:	6804      	ldr	r4, [r0, #0]
90021670:	bf18      	it	ne
90021672:	f027 0701 	bicne.w	r7, r7, #1
90021676:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
9002167a:	e9cd 1505 	strd	r1, r5, [sp, #20]
9002167e:	990c      	ldr	r1, [sp, #48]	; 0x30
90021680:	bf18      	it	ne
90021682:	b2bf      	uxthne	r7, r7
90021684:	9104      	str	r1, [sp, #16]
90021686:	992a      	ldr	r1, [sp, #168]	; 0xa8
90021688:	e9cd 7900 	strd	r7, r9, [sp]
9002168c:	e9cd 7102 	strd	r7, r1, [sp, #8]
90021690:	9928      	ldr	r1, [sp, #160]	; 0xa0
90021692:	6d64      	ldr	r4, [r4, #84]	; 0x54
90021694:	47a0      	blx	r4
90021696:	b019      	add	sp, #100	; 0x64
90021698:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002169c:	2300      	movs	r3, #0
9002169e:	e7c0      	b.n	90021622 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
900216a0:	2208      	movs	r2, #8
900216a2:	fb92 f3f8 	sdiv	r3, r2, r8
900216a6:	1e5a      	subs	r2, r3, #1
900216a8:	443a      	add	r2, r7
900216aa:	fb92 f2f3 	sdiv	r2, r2, r3
900216ae:	fb12 f203 	smulbb	r2, r2, r3
900216b2:	b292      	uxth	r2, r2
900216b4:	e6b0      	b.n	90021418 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
900216b6:	980b      	ldr	r0, [sp, #44]	; 0x2c
900216b8:	e6ec      	b.n	90021494 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
900216ba:	9810      	ldr	r0, [sp, #64]	; 0x40
900216bc:	e782      	b.n	900215c4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
900216be:	bf00      	nop
900216c0:	240236c4 	.word	0x240236c4
900216c4:	240236cc 	.word	0x240236cc
900216c8:	240236c6 	.word	0x240236c6
900216cc:	00fff800 	.word	0x00fff800
900216d0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
900216d2:	b153      	cbz	r3, 900216ea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
900216d4:	441e      	add	r6, r3
900216d6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
900216d8:	b2b6      	uxth	r6, r6
900216da:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
900216de:	f006 0607 	and.w	r6, r6, #7
900216e2:	781a      	ldrb	r2, [r3, #0]
900216e4:	9328      	str	r3, [sp, #160]	; 0xa0
900216e6:	4132      	asrs	r2, r6
900216e8:	b2d2      	uxtb	r2, r2
900216ea:	9b0a      	ldr	r3, [sp, #40]	; 0x28
900216ec:	445b      	add	r3, fp
900216ee:	930a      	str	r3, [sp, #40]	; 0x28
900216f0:	e706      	b.n	90021500 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
900216f2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
900216f4:	2b00      	cmp	r3, #0
900216f6:	d1ce      	bne.n	90021696 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
900216f8:	4b05      	ldr	r3, [pc, #20]	; (90021710 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
900216fa:	6818      	ldr	r0, [r3, #0]
900216fc:	6803      	ldr	r3, [r0, #0]
900216fe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90021700:	4798      	blx	r3
90021702:	e7c8      	b.n	90021696 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
90021704:	2b00      	cmp	r3, #0
90021706:	f43f ae82 	beq.w	9002140e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
9002170a:	f44f 7180 	mov.w	r1, #256	; 0x100
9002170e:	e793      	b.n	90021638 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
90021710:	240236cc 	.word	0x240236cc

90021714 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
90021714:	b538      	push	{r3, r4, r5, lr}
90021716:	4c15      	ldr	r4, [pc, #84]	; (9002176c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
90021718:	4605      	mov	r5, r0
9002171a:	7823      	ldrb	r3, [r4, #0]
9002171c:	f3bf 8f5b 	dmb	ish
90021720:	07da      	lsls	r2, r3, #31
90021722:	d40b      	bmi.n	9002173c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
90021724:	4620      	mov	r0, r4
90021726:	f008 fa7c 	bl	90029c22 <__cxa_guard_acquire>
9002172a:	b138      	cbz	r0, 9002173c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
9002172c:	4620      	mov	r0, r4
9002172e:	f008 fa84 	bl	90029c3a <__cxa_guard_release>
90021732:	4a0f      	ldr	r2, [pc, #60]	; (90021770 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
90021734:	490f      	ldr	r1, [pc, #60]	; (90021774 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
90021736:	4810      	ldr	r0, [pc, #64]	; (90021778 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
90021738:	f008 fa6c 	bl	90029c14 <__aeabi_atexit>
9002173c:	4c0f      	ldr	r4, [pc, #60]	; (9002177c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
9002173e:	7823      	ldrb	r3, [r4, #0]
90021740:	f3bf 8f5b 	dmb	ish
90021744:	07db      	lsls	r3, r3, #31
90021746:	d40b      	bmi.n	90021760 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
90021748:	4620      	mov	r0, r4
9002174a:	f008 fa6a 	bl	90029c22 <__cxa_guard_acquire>
9002174e:	b138      	cbz	r0, 90021760 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
90021750:	4620      	mov	r0, r4
90021752:	f008 fa72 	bl	90029c3a <__cxa_guard_release>
90021756:	4a06      	ldr	r2, [pc, #24]	; (90021770 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
90021758:	4909      	ldr	r1, [pc, #36]	; (90021780 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
9002175a:	480a      	ldr	r0, [pc, #40]	; (90021784 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
9002175c:	f008 fa5a 	bl	90029c14 <__aeabi_atexit>
90021760:	4b05      	ldr	r3, [pc, #20]	; (90021778 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
90021762:	616b      	str	r3, [r5, #20]
90021764:	4b07      	ldr	r3, [pc, #28]	; (90021784 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
90021766:	61ab      	str	r3, [r5, #24]
90021768:	bd38      	pop	{r3, r4, r5, pc}
9002176a:	bf00      	nop
9002176c:	240237ac 	.word	0x240237ac
90021770:	24000000 	.word	0x24000000
90021774:	9001e4f7 	.word	0x9001e4f7
90021778:	240000c0 	.word	0x240000c0
9002177c:	240237b0 	.word	0x240237b0
90021780:	9001e4f5 	.word	0x9001e4f5
90021784:	240000c4 	.word	0x240000c4

90021788 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
90021788:	b538      	push	{r3, r4, r5, lr}
9002178a:	4c15      	ldr	r4, [pc, #84]	; (900217e0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
9002178c:	4605      	mov	r5, r0
9002178e:	7823      	ldrb	r3, [r4, #0]
90021790:	f3bf 8f5b 	dmb	ish
90021794:	07da      	lsls	r2, r3, #31
90021796:	d40b      	bmi.n	900217b0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
90021798:	4620      	mov	r0, r4
9002179a:	f008 fa42 	bl	90029c22 <__cxa_guard_acquire>
9002179e:	b138      	cbz	r0, 900217b0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
900217a0:	4620      	mov	r0, r4
900217a2:	f008 fa4a 	bl	90029c3a <__cxa_guard_release>
900217a6:	4a0f      	ldr	r2, [pc, #60]	; (900217e4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
900217a8:	490f      	ldr	r1, [pc, #60]	; (900217e8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
900217aa:	4810      	ldr	r0, [pc, #64]	; (900217ec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
900217ac:	f008 fa32 	bl	90029c14 <__aeabi_atexit>
900217b0:	4c0f      	ldr	r4, [pc, #60]	; (900217f0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
900217b2:	7823      	ldrb	r3, [r4, #0]
900217b4:	f3bf 8f5b 	dmb	ish
900217b8:	07db      	lsls	r3, r3, #31
900217ba:	d40b      	bmi.n	900217d4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
900217bc:	4620      	mov	r0, r4
900217be:	f008 fa30 	bl	90029c22 <__cxa_guard_acquire>
900217c2:	b138      	cbz	r0, 900217d4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
900217c4:	4620      	mov	r0, r4
900217c6:	f008 fa38 	bl	90029c3a <__cxa_guard_release>
900217ca:	4a06      	ldr	r2, [pc, #24]	; (900217e4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
900217cc:	4909      	ldr	r1, [pc, #36]	; (900217f4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
900217ce:	480a      	ldr	r0, [pc, #40]	; (900217f8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
900217d0:	f008 fa20 	bl	90029c14 <__aeabi_atexit>
900217d4:	4b05      	ldr	r3, [pc, #20]	; (900217ec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
900217d6:	60eb      	str	r3, [r5, #12]
900217d8:	4b07      	ldr	r3, [pc, #28]	; (900217f8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
900217da:	612b      	str	r3, [r5, #16]
900217dc:	bd38      	pop	{r3, r4, r5, pc}
900217de:	bf00      	nop
900217e0:	24023784 	.word	0x24023784
900217e4:	24000000 	.word	0x24000000
900217e8:	9001e4fb 	.word	0x9001e4fb
900217ec:	24000098 	.word	0x24000098
900217f0:	24023788 	.word	0x24023788
900217f4:	9001e4f9 	.word	0x9001e4f9
900217f8:	2400009c 	.word	0x2400009c

900217fc <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
900217fc:	b510      	push	{r4, lr}
900217fe:	4604      	mov	r4, r0
90021800:	f7ff ff88 	bl	90021714 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
90021804:	4620      	mov	r0, r4
90021806:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9002180a:	f7ff bfbd 	b.w	90021788 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

90021810 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
90021810:	b538      	push	{r3, r4, r5, lr}
90021812:	4c15      	ldr	r4, [pc, #84]	; (90021868 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
90021814:	4605      	mov	r5, r0
90021816:	7823      	ldrb	r3, [r4, #0]
90021818:	f3bf 8f5b 	dmb	ish
9002181c:	07da      	lsls	r2, r3, #31
9002181e:	d40b      	bmi.n	90021838 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
90021820:	4620      	mov	r0, r4
90021822:	f008 f9fe 	bl	90029c22 <__cxa_guard_acquire>
90021826:	b138      	cbz	r0, 90021838 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
90021828:	4620      	mov	r0, r4
9002182a:	f008 fa06 	bl	90029c3a <__cxa_guard_release>
9002182e:	4a0f      	ldr	r2, [pc, #60]	; (9002186c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
90021830:	490f      	ldr	r1, [pc, #60]	; (90021870 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
90021832:	4810      	ldr	r0, [pc, #64]	; (90021874 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
90021834:	f008 f9ee 	bl	90029c14 <__aeabi_atexit>
90021838:	4c0f      	ldr	r4, [pc, #60]	; (90021878 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
9002183a:	7823      	ldrb	r3, [r4, #0]
9002183c:	f3bf 8f5b 	dmb	ish
90021840:	07db      	lsls	r3, r3, #31
90021842:	d40b      	bmi.n	9002185c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
90021844:	4620      	mov	r0, r4
90021846:	f008 f9ec 	bl	90029c22 <__cxa_guard_acquire>
9002184a:	b138      	cbz	r0, 9002185c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
9002184c:	4620      	mov	r0, r4
9002184e:	f008 f9f4 	bl	90029c3a <__cxa_guard_release>
90021852:	4a06      	ldr	r2, [pc, #24]	; (9002186c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
90021854:	4909      	ldr	r1, [pc, #36]	; (9002187c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
90021856:	480a      	ldr	r0, [pc, #40]	; (90021880 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
90021858:	f008 f9dc 	bl	90029c14 <__aeabi_atexit>
9002185c:	4b05      	ldr	r3, [pc, #20]	; (90021874 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
9002185e:	626b      	str	r3, [r5, #36]	; 0x24
90021860:	4b07      	ldr	r3, [pc, #28]	; (90021880 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
90021862:	62ab      	str	r3, [r5, #40]	; 0x28
90021864:	bd38      	pop	{r3, r4, r5, pc}
90021866:	bf00      	nop
90021868:	240237b4 	.word	0x240237b4
9002186c:	24000000 	.word	0x24000000
90021870:	9001e4ef 	.word	0x9001e4ef
90021874:	240000c8 	.word	0x240000c8
90021878:	240237b8 	.word	0x240237b8
9002187c:	9001e4ed 	.word	0x9001e4ed
90021880:	240000cc 	.word	0x240000cc

90021884 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
90021884:	b538      	push	{r3, r4, r5, lr}
90021886:	4c15      	ldr	r4, [pc, #84]	; (900218dc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
90021888:	4605      	mov	r5, r0
9002188a:	7823      	ldrb	r3, [r4, #0]
9002188c:	f3bf 8f5b 	dmb	ish
90021890:	07da      	lsls	r2, r3, #31
90021892:	d40b      	bmi.n	900218ac <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
90021894:	4620      	mov	r0, r4
90021896:	f008 f9c4 	bl	90029c22 <__cxa_guard_acquire>
9002189a:	b138      	cbz	r0, 900218ac <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
9002189c:	4620      	mov	r0, r4
9002189e:	f008 f9cc 	bl	90029c3a <__cxa_guard_release>
900218a2:	4a0f      	ldr	r2, [pc, #60]	; (900218e0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
900218a4:	490f      	ldr	r1, [pc, #60]	; (900218e4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
900218a6:	4810      	ldr	r0, [pc, #64]	; (900218e8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
900218a8:	f008 f9b4 	bl	90029c14 <__aeabi_atexit>
900218ac:	4c0f      	ldr	r4, [pc, #60]	; (900218ec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
900218ae:	7823      	ldrb	r3, [r4, #0]
900218b0:	f3bf 8f5b 	dmb	ish
900218b4:	07db      	lsls	r3, r3, #31
900218b6:	d40b      	bmi.n	900218d0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
900218b8:	4620      	mov	r0, r4
900218ba:	f008 f9b2 	bl	90029c22 <__cxa_guard_acquire>
900218be:	b138      	cbz	r0, 900218d0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
900218c0:	4620      	mov	r0, r4
900218c2:	f008 f9ba 	bl	90029c3a <__cxa_guard_release>
900218c6:	4a06      	ldr	r2, [pc, #24]	; (900218e0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
900218c8:	4909      	ldr	r1, [pc, #36]	; (900218f0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
900218ca:	480a      	ldr	r0, [pc, #40]	; (900218f4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
900218cc:	f008 f9a2 	bl	90029c14 <__aeabi_atexit>
900218d0:	4b05      	ldr	r3, [pc, #20]	; (900218e8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
900218d2:	61eb      	str	r3, [r5, #28]
900218d4:	4b07      	ldr	r3, [pc, #28]	; (900218f4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
900218d6:	622b      	str	r3, [r5, #32]
900218d8:	bd38      	pop	{r3, r4, r5, pc}
900218da:	bf00      	nop
900218dc:	2402378c 	.word	0x2402378c
900218e0:	24000000 	.word	0x24000000
900218e4:	9001e4f3 	.word	0x9001e4f3
900218e8:	240000a0 	.word	0x240000a0
900218ec:	24023790 	.word	0x24023790
900218f0:	9001e4f1 	.word	0x9001e4f1
900218f4:	240000a4 	.word	0x240000a4

900218f8 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
900218f8:	b510      	push	{r4, lr}
900218fa:	4604      	mov	r4, r0
900218fc:	f7ff ff88 	bl	90021810 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
90021900:	4620      	mov	r0, r4
90021902:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90021906:	f7ff bfbd 	b.w	90021884 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

9002190c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
9002190c:	b538      	push	{r3, r4, r5, lr}
9002190e:	4c15      	ldr	r4, [pc, #84]	; (90021964 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
90021910:	4605      	mov	r5, r0
90021912:	7823      	ldrb	r3, [r4, #0]
90021914:	f3bf 8f5b 	dmb	ish
90021918:	07da      	lsls	r2, r3, #31
9002191a:	d40b      	bmi.n	90021934 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
9002191c:	4620      	mov	r0, r4
9002191e:	f008 f980 	bl	90029c22 <__cxa_guard_acquire>
90021922:	b138      	cbz	r0, 90021934 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
90021924:	4620      	mov	r0, r4
90021926:	f008 f988 	bl	90029c3a <__cxa_guard_release>
9002192a:	4a0f      	ldr	r2, [pc, #60]	; (90021968 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
9002192c:	490f      	ldr	r1, [pc, #60]	; (9002196c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
9002192e:	4810      	ldr	r0, [pc, #64]	; (90021970 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
90021930:	f008 f970 	bl	90029c14 <__aeabi_atexit>
90021934:	4c0f      	ldr	r4, [pc, #60]	; (90021974 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
90021936:	7823      	ldrb	r3, [r4, #0]
90021938:	f3bf 8f5b 	dmb	ish
9002193c:	07db      	lsls	r3, r3, #31
9002193e:	d40b      	bmi.n	90021958 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
90021940:	4620      	mov	r0, r4
90021942:	f008 f96e 	bl	90029c22 <__cxa_guard_acquire>
90021946:	b138      	cbz	r0, 90021958 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
90021948:	4620      	mov	r0, r4
9002194a:	f008 f976 	bl	90029c3a <__cxa_guard_release>
9002194e:	4a06      	ldr	r2, [pc, #24]	; (90021968 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
90021950:	4909      	ldr	r1, [pc, #36]	; (90021978 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
90021952:	480a      	ldr	r0, [pc, #40]	; (9002197c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
90021954:	f008 f95e 	bl	90029c14 <__aeabi_atexit>
90021958:	4b05      	ldr	r3, [pc, #20]	; (90021970 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
9002195a:	636b      	str	r3, [r5, #52]	; 0x34
9002195c:	4b07      	ldr	r3, [pc, #28]	; (9002197c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
9002195e:	63ab      	str	r3, [r5, #56]	; 0x38
90021960:	bd38      	pop	{r3, r4, r5, pc}
90021962:	bf00      	nop
90021964:	240237c4 	.word	0x240237c4
90021968:	24000000 	.word	0x24000000
9002196c:	9001e4e7 	.word	0x9001e4e7
90021970:	240000d8 	.word	0x240000d8
90021974:	240237c8 	.word	0x240237c8
90021978:	9001e4e5 	.word	0x9001e4e5
9002197c:	240000dc 	.word	0x240000dc

90021980 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
90021980:	b538      	push	{r3, r4, r5, lr}
90021982:	4c15      	ldr	r4, [pc, #84]	; (900219d8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
90021984:	4605      	mov	r5, r0
90021986:	7823      	ldrb	r3, [r4, #0]
90021988:	f3bf 8f5b 	dmb	ish
9002198c:	07da      	lsls	r2, r3, #31
9002198e:	d40b      	bmi.n	900219a8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
90021990:	4620      	mov	r0, r4
90021992:	f008 f946 	bl	90029c22 <__cxa_guard_acquire>
90021996:	b138      	cbz	r0, 900219a8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
90021998:	4620      	mov	r0, r4
9002199a:	f008 f94e 	bl	90029c3a <__cxa_guard_release>
9002199e:	4a0f      	ldr	r2, [pc, #60]	; (900219dc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
900219a0:	490f      	ldr	r1, [pc, #60]	; (900219e0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
900219a2:	4810      	ldr	r0, [pc, #64]	; (900219e4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
900219a4:	f008 f936 	bl	90029c14 <__aeabi_atexit>
900219a8:	4c0f      	ldr	r4, [pc, #60]	; (900219e8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
900219aa:	7823      	ldrb	r3, [r4, #0]
900219ac:	f3bf 8f5b 	dmb	ish
900219b0:	07db      	lsls	r3, r3, #31
900219b2:	d40b      	bmi.n	900219cc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
900219b4:	4620      	mov	r0, r4
900219b6:	f008 f934 	bl	90029c22 <__cxa_guard_acquire>
900219ba:	b138      	cbz	r0, 900219cc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
900219bc:	4620      	mov	r0, r4
900219be:	f008 f93c 	bl	90029c3a <__cxa_guard_release>
900219c2:	4a06      	ldr	r2, [pc, #24]	; (900219dc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
900219c4:	4909      	ldr	r1, [pc, #36]	; (900219ec <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
900219c6:	480a      	ldr	r0, [pc, #40]	; (900219f0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
900219c8:	f008 f924 	bl	90029c14 <__aeabi_atexit>
900219cc:	4b05      	ldr	r3, [pc, #20]	; (900219e4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
900219ce:	62eb      	str	r3, [r5, #44]	; 0x2c
900219d0:	4b07      	ldr	r3, [pc, #28]	; (900219f0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
900219d2:	632b      	str	r3, [r5, #48]	; 0x30
900219d4:	bd38      	pop	{r3, r4, r5, pc}
900219d6:	bf00      	nop
900219d8:	24023794 	.word	0x24023794
900219dc:	24000000 	.word	0x24000000
900219e0:	9001e4eb 	.word	0x9001e4eb
900219e4:	240000a8 	.word	0x240000a8
900219e8:	24023798 	.word	0x24023798
900219ec:	9001e4e9 	.word	0x9001e4e9
900219f0:	240000ac 	.word	0x240000ac

900219f4 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
900219f4:	b510      	push	{r4, lr}
900219f6:	4604      	mov	r4, r0
900219f8:	f7ff ff88 	bl	9002190c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
900219fc:	4620      	mov	r0, r4
900219fe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90021a02:	f7ff bfbd 	b.w	90021980 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

90021a08 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
90021a08:	b538      	push	{r3, r4, r5, lr}
90021a0a:	4c15      	ldr	r4, [pc, #84]	; (90021a60 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
90021a0c:	4605      	mov	r5, r0
90021a0e:	7823      	ldrb	r3, [r4, #0]
90021a10:	f3bf 8f5b 	dmb	ish
90021a14:	07da      	lsls	r2, r3, #31
90021a16:	d40b      	bmi.n	90021a30 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
90021a18:	4620      	mov	r0, r4
90021a1a:	f008 f902 	bl	90029c22 <__cxa_guard_acquire>
90021a1e:	b138      	cbz	r0, 90021a30 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
90021a20:	4620      	mov	r0, r4
90021a22:	f008 f90a 	bl	90029c3a <__cxa_guard_release>
90021a26:	4a0f      	ldr	r2, [pc, #60]	; (90021a64 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
90021a28:	490f      	ldr	r1, [pc, #60]	; (90021a68 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
90021a2a:	4810      	ldr	r0, [pc, #64]	; (90021a6c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
90021a2c:	f008 f8f2 	bl	90029c14 <__aeabi_atexit>
90021a30:	4c0f      	ldr	r4, [pc, #60]	; (90021a70 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
90021a32:	7823      	ldrb	r3, [r4, #0]
90021a34:	f3bf 8f5b 	dmb	ish
90021a38:	07db      	lsls	r3, r3, #31
90021a3a:	d40b      	bmi.n	90021a54 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
90021a3c:	4620      	mov	r0, r4
90021a3e:	f008 f8f0 	bl	90029c22 <__cxa_guard_acquire>
90021a42:	b138      	cbz	r0, 90021a54 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
90021a44:	4620      	mov	r0, r4
90021a46:	f008 f8f8 	bl	90029c3a <__cxa_guard_release>
90021a4a:	4a06      	ldr	r2, [pc, #24]	; (90021a64 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
90021a4c:	4909      	ldr	r1, [pc, #36]	; (90021a74 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
90021a4e:	480a      	ldr	r0, [pc, #40]	; (90021a78 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
90021a50:	f008 f8e0 	bl	90029c14 <__aeabi_atexit>
90021a54:	4b05      	ldr	r3, [pc, #20]	; (90021a6c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
90021a56:	656b      	str	r3, [r5, #84]	; 0x54
90021a58:	4b07      	ldr	r3, [pc, #28]	; (90021a78 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
90021a5a:	65ab      	str	r3, [r5, #88]	; 0x58
90021a5c:	bd38      	pop	{r3, r4, r5, pc}
90021a5e:	bf00      	nop
90021a60:	240237cc 	.word	0x240237cc
90021a64:	24000000 	.word	0x24000000
90021a68:	9001e4d7 	.word	0x9001e4d7
90021a6c:	240000e0 	.word	0x240000e0
90021a70:	240237d0 	.word	0x240237d0
90021a74:	9001e4d5 	.word	0x9001e4d5
90021a78:	240000e4 	.word	0x240000e4

90021a7c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
90021a7c:	b538      	push	{r3, r4, r5, lr}
90021a7e:	4c15      	ldr	r4, [pc, #84]	; (90021ad4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
90021a80:	4605      	mov	r5, r0
90021a82:	7823      	ldrb	r3, [r4, #0]
90021a84:	f3bf 8f5b 	dmb	ish
90021a88:	07da      	lsls	r2, r3, #31
90021a8a:	d40b      	bmi.n	90021aa4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
90021a8c:	4620      	mov	r0, r4
90021a8e:	f008 f8c8 	bl	90029c22 <__cxa_guard_acquire>
90021a92:	b138      	cbz	r0, 90021aa4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
90021a94:	4620      	mov	r0, r4
90021a96:	f008 f8d0 	bl	90029c3a <__cxa_guard_release>
90021a9a:	4a0f      	ldr	r2, [pc, #60]	; (90021ad8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
90021a9c:	490f      	ldr	r1, [pc, #60]	; (90021adc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
90021a9e:	4810      	ldr	r0, [pc, #64]	; (90021ae0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
90021aa0:	f008 f8b8 	bl	90029c14 <__aeabi_atexit>
90021aa4:	4c0f      	ldr	r4, [pc, #60]	; (90021ae4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
90021aa6:	7823      	ldrb	r3, [r4, #0]
90021aa8:	f3bf 8f5b 	dmb	ish
90021aac:	07db      	lsls	r3, r3, #31
90021aae:	d40b      	bmi.n	90021ac8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
90021ab0:	4620      	mov	r0, r4
90021ab2:	f008 f8b6 	bl	90029c22 <__cxa_guard_acquire>
90021ab6:	b138      	cbz	r0, 90021ac8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
90021ab8:	4620      	mov	r0, r4
90021aba:	f008 f8be 	bl	90029c3a <__cxa_guard_release>
90021abe:	4a06      	ldr	r2, [pc, #24]	; (90021ad8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
90021ac0:	4909      	ldr	r1, [pc, #36]	; (90021ae8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
90021ac2:	480a      	ldr	r0, [pc, #40]	; (90021aec <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
90021ac4:	f008 f8a6 	bl	90029c14 <__aeabi_atexit>
90021ac8:	4b05      	ldr	r3, [pc, #20]	; (90021ae0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
90021aca:	64eb      	str	r3, [r5, #76]	; 0x4c
90021acc:	4b07      	ldr	r3, [pc, #28]	; (90021aec <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
90021ace:	652b      	str	r3, [r5, #80]	; 0x50
90021ad0:	bd38      	pop	{r3, r4, r5, pc}
90021ad2:	bf00      	nop
90021ad4:	240237d4 	.word	0x240237d4
90021ad8:	24000000 	.word	0x24000000
90021adc:	9001e4db 	.word	0x9001e4db
90021ae0:	240000e8 	.word	0x240000e8
90021ae4:	240237d8 	.word	0x240237d8
90021ae8:	9001e4d9 	.word	0x9001e4d9
90021aec:	240000ec 	.word	0x240000ec

90021af0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
90021af0:	b538      	push	{r3, r4, r5, lr}
90021af2:	4c15      	ldr	r4, [pc, #84]	; (90021b48 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
90021af4:	4605      	mov	r5, r0
90021af6:	7823      	ldrb	r3, [r4, #0]
90021af8:	f3bf 8f5b 	dmb	ish
90021afc:	07da      	lsls	r2, r3, #31
90021afe:	d40b      	bmi.n	90021b18 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
90021b00:	4620      	mov	r0, r4
90021b02:	f008 f88e 	bl	90029c22 <__cxa_guard_acquire>
90021b06:	b138      	cbz	r0, 90021b18 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
90021b08:	4620      	mov	r0, r4
90021b0a:	f008 f896 	bl	90029c3a <__cxa_guard_release>
90021b0e:	4a0f      	ldr	r2, [pc, #60]	; (90021b4c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
90021b10:	490f      	ldr	r1, [pc, #60]	; (90021b50 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
90021b12:	4810      	ldr	r0, [pc, #64]	; (90021b54 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
90021b14:	f008 f87e 	bl	90029c14 <__aeabi_atexit>
90021b18:	4c0f      	ldr	r4, [pc, #60]	; (90021b58 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
90021b1a:	7823      	ldrb	r3, [r4, #0]
90021b1c:	f3bf 8f5b 	dmb	ish
90021b20:	07db      	lsls	r3, r3, #31
90021b22:	d40b      	bmi.n	90021b3c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
90021b24:	4620      	mov	r0, r4
90021b26:	f008 f87c 	bl	90029c22 <__cxa_guard_acquire>
90021b2a:	b138      	cbz	r0, 90021b3c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
90021b2c:	4620      	mov	r0, r4
90021b2e:	f008 f884 	bl	90029c3a <__cxa_guard_release>
90021b32:	4a06      	ldr	r2, [pc, #24]	; (90021b4c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
90021b34:	4909      	ldr	r1, [pc, #36]	; (90021b5c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
90021b36:	480a      	ldr	r0, [pc, #40]	; (90021b60 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
90021b38:	f008 f86c 	bl	90029c14 <__aeabi_atexit>
90021b3c:	4b05      	ldr	r3, [pc, #20]	; (90021b54 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
90021b3e:	646b      	str	r3, [r5, #68]	; 0x44
90021b40:	4b07      	ldr	r3, [pc, #28]	; (90021b60 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
90021b42:	64ab      	str	r3, [r5, #72]	; 0x48
90021b44:	bd38      	pop	{r3, r4, r5, pc}
90021b46:	bf00      	nop
90021b48:	2402379c 	.word	0x2402379c
90021b4c:	24000000 	.word	0x24000000
90021b50:	9001e4df 	.word	0x9001e4df
90021b54:	240000b0 	.word	0x240000b0
90021b58:	240237a0 	.word	0x240237a0
90021b5c:	9001e4dd 	.word	0x9001e4dd
90021b60:	240000b4 	.word	0x240000b4

90021b64 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
90021b64:	b538      	push	{r3, r4, r5, lr}
90021b66:	4c15      	ldr	r4, [pc, #84]	; (90021bbc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
90021b68:	4605      	mov	r5, r0
90021b6a:	7823      	ldrb	r3, [r4, #0]
90021b6c:	f3bf 8f5b 	dmb	ish
90021b70:	07da      	lsls	r2, r3, #31
90021b72:	d40b      	bmi.n	90021b8c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
90021b74:	4620      	mov	r0, r4
90021b76:	f008 f854 	bl	90029c22 <__cxa_guard_acquire>
90021b7a:	b138      	cbz	r0, 90021b8c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
90021b7c:	4620      	mov	r0, r4
90021b7e:	f008 f85c 	bl	90029c3a <__cxa_guard_release>
90021b82:	4a0f      	ldr	r2, [pc, #60]	; (90021bc0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
90021b84:	490f      	ldr	r1, [pc, #60]	; (90021bc4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
90021b86:	4810      	ldr	r0, [pc, #64]	; (90021bc8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
90021b88:	f008 f844 	bl	90029c14 <__aeabi_atexit>
90021b8c:	4c0f      	ldr	r4, [pc, #60]	; (90021bcc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
90021b8e:	7823      	ldrb	r3, [r4, #0]
90021b90:	f3bf 8f5b 	dmb	ish
90021b94:	07db      	lsls	r3, r3, #31
90021b96:	d40b      	bmi.n	90021bb0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
90021b98:	4620      	mov	r0, r4
90021b9a:	f008 f842 	bl	90029c22 <__cxa_guard_acquire>
90021b9e:	b138      	cbz	r0, 90021bb0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
90021ba0:	4620      	mov	r0, r4
90021ba2:	f008 f84a 	bl	90029c3a <__cxa_guard_release>
90021ba6:	4a06      	ldr	r2, [pc, #24]	; (90021bc0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
90021ba8:	4909      	ldr	r1, [pc, #36]	; (90021bd0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
90021baa:	480a      	ldr	r0, [pc, #40]	; (90021bd4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
90021bac:	f008 f832 	bl	90029c14 <__aeabi_atexit>
90021bb0:	4b05      	ldr	r3, [pc, #20]	; (90021bc8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
90021bb2:	63eb      	str	r3, [r5, #60]	; 0x3c
90021bb4:	4b07      	ldr	r3, [pc, #28]	; (90021bd4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
90021bb6:	642b      	str	r3, [r5, #64]	; 0x40
90021bb8:	bd38      	pop	{r3, r4, r5, pc}
90021bba:	bf00      	nop
90021bbc:	240237bc 	.word	0x240237bc
90021bc0:	24000000 	.word	0x24000000
90021bc4:	9001e4e3 	.word	0x9001e4e3
90021bc8:	240000d0 	.word	0x240000d0
90021bcc:	240237c0 	.word	0x240237c0
90021bd0:	9001e4e1 	.word	0x9001e4e1
90021bd4:	240000d4 	.word	0x240000d4

90021bd8 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
90021bd8:	b510      	push	{r4, lr}
90021bda:	4604      	mov	r4, r0
90021bdc:	f7ff ff14 	bl	90021a08 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
90021be0:	4620      	mov	r0, r4
90021be2:	f7ff ff85 	bl	90021af0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
90021be6:	4620      	mov	r0, r4
90021be8:	f7ff ff48 	bl	90021a7c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
90021bec:	4620      	mov	r0, r4
90021bee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90021bf2:	f7ff bfb7 	b.w	90021b64 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

90021bf8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
90021bf8:	b538      	push	{r3, r4, r5, lr}
90021bfa:	4c15      	ldr	r4, [pc, #84]	; (90021c50 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
90021bfc:	4605      	mov	r5, r0
90021bfe:	7823      	ldrb	r3, [r4, #0]
90021c00:	f3bf 8f5b 	dmb	ish
90021c04:	07da      	lsls	r2, r3, #31
90021c06:	d40b      	bmi.n	90021c20 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
90021c08:	4620      	mov	r0, r4
90021c0a:	f008 f80a 	bl	90029c22 <__cxa_guard_acquire>
90021c0e:	b138      	cbz	r0, 90021c20 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
90021c10:	4620      	mov	r0, r4
90021c12:	f008 f812 	bl	90029c3a <__cxa_guard_release>
90021c16:	4a0f      	ldr	r2, [pc, #60]	; (90021c54 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
90021c18:	490f      	ldr	r1, [pc, #60]	; (90021c58 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
90021c1a:	4810      	ldr	r0, [pc, #64]	; (90021c5c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
90021c1c:	f007 fffa 	bl	90029c14 <__aeabi_atexit>
90021c20:	4c0f      	ldr	r4, [pc, #60]	; (90021c60 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
90021c22:	7823      	ldrb	r3, [r4, #0]
90021c24:	f3bf 8f5b 	dmb	ish
90021c28:	07db      	lsls	r3, r3, #31
90021c2a:	d40b      	bmi.n	90021c44 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
90021c2c:	4620      	mov	r0, r4
90021c2e:	f007 fff8 	bl	90029c22 <__cxa_guard_acquire>
90021c32:	b138      	cbz	r0, 90021c44 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
90021c34:	4620      	mov	r0, r4
90021c36:	f008 f800 	bl	90029c3a <__cxa_guard_release>
90021c3a:	4a06      	ldr	r2, [pc, #24]	; (90021c54 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
90021c3c:	4909      	ldr	r1, [pc, #36]	; (90021c64 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
90021c3e:	480a      	ldr	r0, [pc, #40]	; (90021c68 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
90021c40:	f007 ffe8 	bl	90029c14 <__aeabi_atexit>
90021c44:	4b05      	ldr	r3, [pc, #20]	; (90021c5c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
90021c46:	666b      	str	r3, [r5, #100]	; 0x64
90021c48:	4b07      	ldr	r3, [pc, #28]	; (90021c68 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
90021c4a:	66ab      	str	r3, [r5, #104]	; 0x68
90021c4c:	bd38      	pop	{r3, r4, r5, pc}
90021c4e:	bf00      	nop
90021c50:	240237a4 	.word	0x240237a4
90021c54:	24000000 	.word	0x24000000
90021c58:	9001e4cf 	.word	0x9001e4cf
90021c5c:	240000b8 	.word	0x240000b8
90021c60:	240237a8 	.word	0x240237a8
90021c64:	9001e4cd 	.word	0x9001e4cd
90021c68:	240000bc 	.word	0x240000bc

90021c6c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
90021c6c:	b538      	push	{r3, r4, r5, lr}
90021c6e:	4c15      	ldr	r4, [pc, #84]	; (90021cc4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
90021c70:	4605      	mov	r5, r0
90021c72:	7823      	ldrb	r3, [r4, #0]
90021c74:	f3bf 8f5b 	dmb	ish
90021c78:	07da      	lsls	r2, r3, #31
90021c7a:	d40b      	bmi.n	90021c94 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
90021c7c:	4620      	mov	r0, r4
90021c7e:	f007 ffd0 	bl	90029c22 <__cxa_guard_acquire>
90021c82:	b138      	cbz	r0, 90021c94 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
90021c84:	4620      	mov	r0, r4
90021c86:	f007 ffd8 	bl	90029c3a <__cxa_guard_release>
90021c8a:	4a0f      	ldr	r2, [pc, #60]	; (90021cc8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
90021c8c:	490f      	ldr	r1, [pc, #60]	; (90021ccc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
90021c8e:	4810      	ldr	r0, [pc, #64]	; (90021cd0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
90021c90:	f007 ffc0 	bl	90029c14 <__aeabi_atexit>
90021c94:	4c0f      	ldr	r4, [pc, #60]	; (90021cd4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
90021c96:	7823      	ldrb	r3, [r4, #0]
90021c98:	f3bf 8f5b 	dmb	ish
90021c9c:	07db      	lsls	r3, r3, #31
90021c9e:	d40b      	bmi.n	90021cb8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
90021ca0:	4620      	mov	r0, r4
90021ca2:	f007 ffbe 	bl	90029c22 <__cxa_guard_acquire>
90021ca6:	b138      	cbz	r0, 90021cb8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
90021ca8:	4620      	mov	r0, r4
90021caa:	f007 ffc6 	bl	90029c3a <__cxa_guard_release>
90021cae:	4a06      	ldr	r2, [pc, #24]	; (90021cc8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
90021cb0:	4909      	ldr	r1, [pc, #36]	; (90021cd8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
90021cb2:	480a      	ldr	r0, [pc, #40]	; (90021cdc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
90021cb4:	f007 ffae 	bl	90029c14 <__aeabi_atexit>
90021cb8:	4b05      	ldr	r3, [pc, #20]	; (90021cd0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
90021cba:	65eb      	str	r3, [r5, #92]	; 0x5c
90021cbc:	4b07      	ldr	r3, [pc, #28]	; (90021cdc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
90021cbe:	662b      	str	r3, [r5, #96]	; 0x60
90021cc0:	bd38      	pop	{r3, r4, r5, pc}
90021cc2:	bf00      	nop
90021cc4:	2402377c 	.word	0x2402377c
90021cc8:	24000000 	.word	0x24000000
90021ccc:	9001e4d3 	.word	0x9001e4d3
90021cd0:	24000090 	.word	0x24000090
90021cd4:	24023780 	.word	0x24023780
90021cd8:	9001e4d1 	.word	0x9001e4d1
90021cdc:	24000094 	.word	0x24000094

90021ce0 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
90021ce0:	b510      	push	{r4, lr}
90021ce2:	4604      	mov	r4, r0
90021ce4:	f7ff ff88 	bl	90021bf8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
90021ce8:	4620      	mov	r0, r4
90021cea:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90021cee:	f7ff bfbd 	b.w	90021c6c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

90021cf4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
90021cf4:	b538      	push	{r3, r4, r5, lr}
90021cf6:	4c15      	ldr	r4, [pc, #84]	; (90021d4c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
90021cf8:	4605      	mov	r5, r0
90021cfa:	7823      	ldrb	r3, [r4, #0]
90021cfc:	f3bf 8f5b 	dmb	ish
90021d00:	07da      	lsls	r2, r3, #31
90021d02:	d40b      	bmi.n	90021d1c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
90021d04:	4620      	mov	r0, r4
90021d06:	f007 ff8c 	bl	90029c22 <__cxa_guard_acquire>
90021d0a:	b138      	cbz	r0, 90021d1c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
90021d0c:	4620      	mov	r0, r4
90021d0e:	f007 ff94 	bl	90029c3a <__cxa_guard_release>
90021d12:	4a0f      	ldr	r2, [pc, #60]	; (90021d50 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
90021d14:	490f      	ldr	r1, [pc, #60]	; (90021d54 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
90021d16:	4810      	ldr	r0, [pc, #64]	; (90021d58 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
90021d18:	f007 ff7c 	bl	90029c14 <__aeabi_atexit>
90021d1c:	4c0f      	ldr	r4, [pc, #60]	; (90021d5c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
90021d1e:	7823      	ldrb	r3, [r4, #0]
90021d20:	f3bf 8f5b 	dmb	ish
90021d24:	07db      	lsls	r3, r3, #31
90021d26:	d40b      	bmi.n	90021d40 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
90021d28:	4620      	mov	r0, r4
90021d2a:	f007 ff7a 	bl	90029c22 <__cxa_guard_acquire>
90021d2e:	b138      	cbz	r0, 90021d40 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
90021d30:	4620      	mov	r0, r4
90021d32:	f007 ff82 	bl	90029c3a <__cxa_guard_release>
90021d36:	4a06      	ldr	r2, [pc, #24]	; (90021d50 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
90021d38:	4909      	ldr	r1, [pc, #36]	; (90021d60 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
90021d3a:	480a      	ldr	r0, [pc, #40]	; (90021d64 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
90021d3c:	f007 ff6a 	bl	90029c14 <__aeabi_atexit>
90021d40:	4b05      	ldr	r3, [pc, #20]	; (90021d58 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
90021d42:	676b      	str	r3, [r5, #116]	; 0x74
90021d44:	4b07      	ldr	r3, [pc, #28]	; (90021d64 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
90021d46:	67ab      	str	r3, [r5, #120]	; 0x78
90021d48:	bd38      	pop	{r3, r4, r5, pc}
90021d4a:	bf00      	nop
90021d4c:	24023774 	.word	0x24023774
90021d50:	24000000 	.word	0x24000000
90021d54:	9001e4c7 	.word	0x9001e4c7
90021d58:	24000088 	.word	0x24000088
90021d5c:	24023778 	.word	0x24023778
90021d60:	9001e4c5 	.word	0x9001e4c5
90021d64:	2400008c 	.word	0x2400008c

90021d68 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
90021d68:	b538      	push	{r3, r4, r5, lr}
90021d6a:	4c15      	ldr	r4, [pc, #84]	; (90021dc0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
90021d6c:	4605      	mov	r5, r0
90021d6e:	7823      	ldrb	r3, [r4, #0]
90021d70:	f3bf 8f5b 	dmb	ish
90021d74:	07da      	lsls	r2, r3, #31
90021d76:	d40b      	bmi.n	90021d90 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
90021d78:	4620      	mov	r0, r4
90021d7a:	f007 ff52 	bl	90029c22 <__cxa_guard_acquire>
90021d7e:	b138      	cbz	r0, 90021d90 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
90021d80:	4620      	mov	r0, r4
90021d82:	f007 ff5a 	bl	90029c3a <__cxa_guard_release>
90021d86:	4a0f      	ldr	r2, [pc, #60]	; (90021dc4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
90021d88:	490f      	ldr	r1, [pc, #60]	; (90021dc8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
90021d8a:	4810      	ldr	r0, [pc, #64]	; (90021dcc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
90021d8c:	f007 ff42 	bl	90029c14 <__aeabi_atexit>
90021d90:	4c0f      	ldr	r4, [pc, #60]	; (90021dd0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
90021d92:	7823      	ldrb	r3, [r4, #0]
90021d94:	f3bf 8f5b 	dmb	ish
90021d98:	07db      	lsls	r3, r3, #31
90021d9a:	d40b      	bmi.n	90021db4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
90021d9c:	4620      	mov	r0, r4
90021d9e:	f007 ff40 	bl	90029c22 <__cxa_guard_acquire>
90021da2:	b138      	cbz	r0, 90021db4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
90021da4:	4620      	mov	r0, r4
90021da6:	f007 ff48 	bl	90029c3a <__cxa_guard_release>
90021daa:	4a06      	ldr	r2, [pc, #24]	; (90021dc4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
90021dac:	4909      	ldr	r1, [pc, #36]	; (90021dd4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
90021dae:	480a      	ldr	r0, [pc, #40]	; (90021dd8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
90021db0:	f007 ff30 	bl	90029c14 <__aeabi_atexit>
90021db4:	4b05      	ldr	r3, [pc, #20]	; (90021dcc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
90021db6:	66eb      	str	r3, [r5, #108]	; 0x6c
90021db8:	4b07      	ldr	r3, [pc, #28]	; (90021dd8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
90021dba:	672b      	str	r3, [r5, #112]	; 0x70
90021dbc:	bd38      	pop	{r3, r4, r5, pc}
90021dbe:	bf00      	nop
90021dc0:	2402376c 	.word	0x2402376c
90021dc4:	24000000 	.word	0x24000000
90021dc8:	9001e4cb 	.word	0x9001e4cb
90021dcc:	24000080 	.word	0x24000080
90021dd0:	24023770 	.word	0x24023770
90021dd4:	9001e4c9 	.word	0x9001e4c9
90021dd8:	24000084 	.word	0x24000084

90021ddc <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
90021ddc:	b510      	push	{r4, lr}
90021dde:	4604      	mov	r4, r0
90021de0:	f7ff ff88 	bl	90021cf4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
90021de4:	4620      	mov	r0, r4
90021de6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90021dea:	f7ff bfbd 	b.w	90021d68 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

90021dee <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
90021dee:	b510      	push	{r4, lr}
90021df0:	4604      	mov	r4, r0
90021df2:	f7ff fff3 	bl	90021ddc <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
90021df6:	4620      	mov	r0, r4
90021df8:	f7ff ff72 	bl	90021ce0 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
90021dfc:	4620      	mov	r0, r4
90021dfe:	f7ff fdf9 	bl	900219f4 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
90021e02:	4620      	mov	r0, r4
90021e04:	f7ff fcfa 	bl	900217fc <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
90021e08:	4620      	mov	r0, r4
90021e0a:	f7ff fd75 	bl	900218f8 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
90021e0e:	4620      	mov	r0, r4
90021e10:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90021e14:	f7ff bee0 	b.w	90021bd8 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

90021e18 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
90021e18:	b538      	push	{r3, r4, r5, lr}
90021e1a:	4c0b      	ldr	r4, [pc, #44]	; (90021e48 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
90021e1c:	4605      	mov	r5, r0
90021e1e:	7823      	ldrb	r3, [r4, #0]
90021e20:	f3bf 8f5b 	dmb	ish
90021e24:	07db      	lsls	r3, r3, #31
90021e26:	d40b      	bmi.n	90021e40 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
90021e28:	4620      	mov	r0, r4
90021e2a:	f007 fefa 	bl	90029c22 <__cxa_guard_acquire>
90021e2e:	b138      	cbz	r0, 90021e40 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
90021e30:	4620      	mov	r0, r4
90021e32:	f007 ff02 	bl	90029c3a <__cxa_guard_release>
90021e36:	4a05      	ldr	r2, [pc, #20]	; (90021e4c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
90021e38:	4905      	ldr	r1, [pc, #20]	; (90021e50 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
90021e3a:	4806      	ldr	r0, [pc, #24]	; (90021e54 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
90021e3c:	f007 feea 	bl	90029c14 <__aeabi_atexit>
90021e40:	4b04      	ldr	r3, [pc, #16]	; (90021e54 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
90021e42:	67eb      	str	r3, [r5, #124]	; 0x7c
90021e44:	bd38      	pop	{r3, r4, r5, pc}
90021e46:	bf00      	nop
90021e48:	24023760 	.word	0x24023760
90021e4c:	24000000 	.word	0x24000000
90021e50:	9001e4c3 	.word	0x9001e4c3
90021e54:	24000078 	.word	0x24000078

90021e58 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
90021e58:	b538      	push	{r3, r4, r5, lr}
90021e5a:	4c0b      	ldr	r4, [pc, #44]	; (90021e88 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
90021e5c:	4605      	mov	r5, r0
90021e5e:	7823      	ldrb	r3, [r4, #0]
90021e60:	f3bf 8f5b 	dmb	ish
90021e64:	07db      	lsls	r3, r3, #31
90021e66:	d40b      	bmi.n	90021e80 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
90021e68:	4620      	mov	r0, r4
90021e6a:	f007 feda 	bl	90029c22 <__cxa_guard_acquire>
90021e6e:	b138      	cbz	r0, 90021e80 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
90021e70:	4620      	mov	r0, r4
90021e72:	f007 fee2 	bl	90029c3a <__cxa_guard_release>
90021e76:	4a05      	ldr	r2, [pc, #20]	; (90021e8c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
90021e78:	4905      	ldr	r1, [pc, #20]	; (90021e90 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
90021e7a:	4806      	ldr	r0, [pc, #24]	; (90021e94 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
90021e7c:	f007 feca 	bl	90029c14 <__aeabi_atexit>
90021e80:	4b04      	ldr	r3, [pc, #16]	; (90021e94 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
90021e82:	f8c5 3080 	str.w	r3, [r5, #128]	; 0x80
90021e86:	bd38      	pop	{r3, r4, r5, pc}
90021e88:	24023764 	.word	0x24023764
90021e8c:	24000000 	.word	0x24000000
90021e90:	9001e4c1 	.word	0x9001e4c1
90021e94:	2400007c 	.word	0x2400007c

90021e98 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
90021e98:	b570      	push	{r4, r5, r6, lr}
90021e9a:	4d0d      	ldr	r5, [pc, #52]	; (90021ed0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
90021e9c:	4606      	mov	r6, r0
90021e9e:	4c0d      	ldr	r4, [pc, #52]	; (90021ed4 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
90021ea0:	782b      	ldrb	r3, [r5, #0]
90021ea2:	f3bf 8f5b 	dmb	ish
90021ea6:	f013 0f01 	tst.w	r3, #1
90021eaa:	d10d      	bne.n	90021ec8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
90021eac:	4628      	mov	r0, r5
90021eae:	f007 feb8 	bl	90029c22 <__cxa_guard_acquire>
90021eb2:	b148      	cbz	r0, 90021ec8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
90021eb4:	4b08      	ldr	r3, [pc, #32]	; (90021ed8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
90021eb6:	4628      	mov	r0, r5
90021eb8:	6023      	str	r3, [r4, #0]
90021eba:	f007 febe 	bl	90029c3a <__cxa_guard_release>
90021ebe:	4a07      	ldr	r2, [pc, #28]	; (90021edc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
90021ec0:	4620      	mov	r0, r4
90021ec2:	4907      	ldr	r1, [pc, #28]	; (90021ee0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
90021ec4:	f007 fea6 	bl	90029c14 <__aeabi_atexit>
90021ec8:	f8c6 4084 	str.w	r4, [r6, #132]	; 0x84
90021ecc:	bd70      	pop	{r4, r5, r6, pc}
90021ece:	bf00      	nop
90021ed0:	24023768 	.word	0x24023768
90021ed4:	240237dc 	.word	0x240237dc
90021ed8:	9002e78c 	.word	0x9002e78c
90021edc:	24000000 	.word	0x24000000
90021ee0:	9001e4bf 	.word	0x9001e4bf

90021ee4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
90021ee4:	b510      	push	{r4, lr}
90021ee6:	4604      	mov	r4, r0
90021ee8:	f7ff ff96 	bl	90021e18 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
90021eec:	4620      	mov	r0, r4
90021eee:	f7ff ffb3 	bl	90021e58 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
90021ef2:	4620      	mov	r0, r4
90021ef4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90021ef8:	f7ff bfce 	b.w	90021e98 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

90021efc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
90021efc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90021f00:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
90021f04:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
90021f08:	2d00      	cmp	r5, #0
90021f0a:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
90021f0e:	fb05 4c0e 	mla	ip, r5, lr, r4
90021f12:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
90021f16:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
90021f1a:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
90021f1e:	eb02 0a0c 	add.w	sl, r2, ip
90021f22:	8808      	ldrh	r0, [r1, #0]
90021f24:	f2c0 80b0 	blt.w	90022088 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
90021f28:	45ab      	cmp	fp, r5
90021f2a:	f340 80ad 	ble.w	90022088 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
90021f2e:	2c00      	cmp	r4, #0
90021f30:	f2c0 80a8 	blt.w	90022084 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
90021f34:	45a6      	cmp	lr, r4
90021f36:	f340 80a5 	ble.w	90022084 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
90021f3a:	f812 200c 	ldrb.w	r2, [r2, ip]
90021f3e:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
90021f42:	1c62      	adds	r2, r4, #1
90021f44:	f100 80a3 	bmi.w	9002208e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
90021f48:	4596      	cmp	lr, r2
90021f4a:	f340 80a0 	ble.w	9002208e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
90021f4e:	f1b9 0f00 	cmp.w	r9, #0
90021f52:	f000 809c 	beq.w	9002208e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
90021f56:	f89a 2001 	ldrb.w	r2, [sl, #1]
90021f5a:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
90021f5e:	3501      	adds	r5, #1
90021f60:	f100 8099 	bmi.w	90022096 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
90021f64:	45ab      	cmp	fp, r5
90021f66:	f340 8096 	ble.w	90022096 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
90021f6a:	2f00      	cmp	r7, #0
90021f6c:	f000 8093 	beq.w	90022096 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
90021f70:	2c00      	cmp	r4, #0
90021f72:	f2c0 808e 	blt.w	90022092 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
90021f76:	45a6      	cmp	lr, r4
90021f78:	f340 808b 	ble.w	90022092 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
90021f7c:	f81a 200e 	ldrb.w	r2, [sl, lr]
90021f80:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
90021f84:	3401      	adds	r4, #1
90021f86:	f100 8089 	bmi.w	9002209c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
90021f8a:	45a6      	cmp	lr, r4
90021f8c:	f340 8086 	ble.w	9002209c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
90021f90:	f1b9 0f00 	cmp.w	r9, #0
90021f94:	f000 8082 	beq.w	9002209c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
90021f98:	44d6      	add	lr, sl
90021f9a:	f89e 2001 	ldrb.w	r2, [lr, #1]
90021f9e:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
90021fa2:	ea4f 4408 	mov.w	r4, r8, lsl #16
90021fa6:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
90021faa:	fb19 fe07 	smulbb	lr, r9, r7
90021fae:	f1c7 0210 	rsb	r2, r7, #16
90021fb2:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
90021fb6:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
90021fba:	eba2 0209 	sub.w	r2, r2, r9
90021fbe:	ea44 0808 	orr.w	r8, r4, r8
90021fc2:	ea4f 440c 	mov.w	r4, ip, lsl #16
90021fc6:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
90021fca:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
90021fce:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
90021fd2:	ebce 0747 	rsb	r7, lr, r7, lsl #1
90021fd6:	ea44 0c0c 	orr.w	ip, r4, ip
90021fda:	ebce 0449 	rsb	r4, lr, r9, lsl #1
90021fde:	fb04 f40c 	mul.w	r4, r4, ip
90021fe2:	fb02 4808 	mla	r8, r2, r8, r4
90021fe6:	041a      	lsls	r2, r3, #16
90021fe8:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
90021fec:	b2b4      	uxth	r4, r6
90021fee:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
90021ff2:	43f6      	mvns	r6, r6
90021ff4:	4313      	orrs	r3, r2
90021ff6:	042a      	lsls	r2, r5, #16
90021ff8:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
90021ffc:	b2f6      	uxtb	r6, r6
90021ffe:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
90022002:	fb0e 8303 	mla	r3, lr, r3, r8
90022006:	432a      	orrs	r2, r5
90022008:	fb07 3202 	mla	r2, r7, r2, r3
9002200c:	10c7      	asrs	r7, r0, #3
9002200e:	0d53      	lsrs	r3, r2, #21
90022010:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
90022014:	0952      	lsrs	r2, r2, #5
90022016:	fb17 f706 	smulbb	r7, r7, r6
9002201a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9002201e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90022022:	431a      	orrs	r2, r3
90022024:	b293      	uxth	r3, r2
90022026:	1202      	asrs	r2, r0, #8
90022028:	121d      	asrs	r5, r3, #8
9002202a:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
9002202e:	00c0      	lsls	r0, r0, #3
90022030:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
90022034:	fb12 f206 	smulbb	r2, r2, r6
90022038:	b2c0      	uxtb	r0, r0
9002203a:	fb05 2504 	mla	r5, r5, r4, r2
9002203e:	10da      	asrs	r2, r3, #3
90022040:	fb10 f006 	smulbb	r0, r0, r6
90022044:	00db      	lsls	r3, r3, #3
90022046:	b2ad      	uxth	r5, r5
90022048:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
9002204c:	b2db      	uxtb	r3, r3
9002204e:	fb02 7204 	mla	r2, r2, r4, r7
90022052:	fb03 0004 	mla	r0, r3, r4, r0
90022056:	1c6b      	adds	r3, r5, #1
90022058:	b292      	uxth	r2, r2
9002205a:	b280      	uxth	r0, r0
9002205c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90022060:	1c43      	adds	r3, r0, #1
90022062:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
90022066:	eb03 2310 	add.w	r3, r3, r0, lsr #8
9002206a:	1c50      	adds	r0, r2, #1
9002206c:	eb00 2212 	add.w	r2, r0, r2, lsr #8
90022070:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90022074:	0952      	lsrs	r2, r2, #5
90022076:	432b      	orrs	r3, r5
90022078:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9002207c:	4313      	orrs	r3, r2
9002207e:	800b      	strh	r3, [r1, #0]
90022080:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90022084:	4680      	mov	r8, r0
90022086:	e75c      	b.n	90021f42 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
90022088:	4684      	mov	ip, r0
9002208a:	4680      	mov	r8, r0
9002208c:	e767      	b.n	90021f5e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
9002208e:	4684      	mov	ip, r0
90022090:	e765      	b.n	90021f5e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
90022092:	4605      	mov	r5, r0
90022094:	e776      	b.n	90021f84 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
90022096:	4603      	mov	r3, r0
90022098:	4605      	mov	r5, r0
9002209a:	e782      	b.n	90021fa2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
9002209c:	4603      	mov	r3, r0
9002209e:	e780      	b.n	90021fa2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

900220a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900220a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900220a4:	b099      	sub	sp, #100	; 0x64
900220a6:	9215      	str	r2, [sp, #84]	; 0x54
900220a8:	9309      	str	r3, [sp, #36]	; 0x24
900220aa:	9a27      	ldr	r2, [sp, #156]	; 0x9c
900220ac:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
900220b0:	9016      	str	r0, [sp, #88]	; 0x58
900220b2:	930d      	str	r3, [sp, #52]	; 0x34
900220b4:	6850      	ldr	r0, [r2, #4]
900220b6:	910c      	str	r1, [sp, #48]	; 0x30
900220b8:	6812      	ldr	r2, [r2, #0]
900220ba:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
900220be:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
900220c2:	fb00 1303 	mla	r3, r0, r3, r1
900220c6:	eb02 0843 	add.w	r8, r2, r3, lsl #1
900220ca:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
900220cc:	681b      	ldr	r3, [r3, #0]
900220ce:	930b      	str	r3, [sp, #44]	; 0x2c
900220d0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
900220d2:	685e      	ldr	r6, [r3, #4]
900220d4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
900220d6:	3604      	adds	r6, #4
900220d8:	43db      	mvns	r3, r3
900220da:	b2db      	uxtb	r3, r3
900220dc:	930a      	str	r3, [sp, #40]	; 0x28
900220de:	9b0c      	ldr	r3, [sp, #48]	; 0x30
900220e0:	2b00      	cmp	r3, #0
900220e2:	dc03      	bgt.n	900220ec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
900220e4:	9b15      	ldr	r3, [sp, #84]	; 0x54
900220e6:	2b00      	cmp	r3, #0
900220e8:	f340 8225 	ble.w	90022536 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
900220ec:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
900220ee:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900220f2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900220f6:	1e48      	subs	r0, r1, #1
900220f8:	1e57      	subs	r7, r2, #1
900220fa:	9b09      	ldr	r3, [sp, #36]	; 0x24
900220fc:	2b00      	cmp	r3, #0
900220fe:	f340 80e3 	ble.w	900222c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
90022102:	ea5f 4c2a 	movs.w	ip, sl, asr #16
90022106:	ea4f 4325 	mov.w	r3, r5, asr #16
9002210a:	d406      	bmi.n	9002211a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
9002210c:	4584      	cmp	ip, r0
9002210e:	da04      	bge.n	9002211a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
90022110:	2b00      	cmp	r3, #0
90022112:	db02      	blt.n	9002211a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
90022114:	42bb      	cmp	r3, r7
90022116:	f2c0 80d8 	blt.w	900222ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
9002211a:	f11c 0c01 	adds.w	ip, ip, #1
9002211e:	f100 80c9 	bmi.w	900222b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
90022122:	4561      	cmp	r1, ip
90022124:	f2c0 80c6 	blt.w	900222b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
90022128:	3301      	adds	r3, #1
9002212a:	f100 80c3 	bmi.w	900222b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9002212e:	429a      	cmp	r2, r3
90022130:	f2c0 80c0 	blt.w	900222b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
90022134:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
90022138:	4647      	mov	r7, r8
9002213a:	f1bb 0f00 	cmp.w	fp, #0
9002213e:	f340 80e3 	ble.w	90022308 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
90022142:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
90022144:	ea4f 4c25 	mov.w	ip, r5, asr #16
90022148:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
9002214a:	f3ca 3003 	ubfx	r0, sl, #12, #4
9002214e:	f8d2 e00c 	ldr.w	lr, [r2, #12]
90022152:	ea5f 422a 	movs.w	r2, sl, asr #16
90022156:	f3c5 3103 	ubfx	r1, r5, #12, #4
9002215a:	689b      	ldr	r3, [r3, #8]
9002215c:	f100 8121 	bmi.w	900223a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
90022160:	f103 39ff 	add.w	r9, r3, #4294967295
90022164:	454a      	cmp	r2, r9
90022166:	f280 811c 	bge.w	900223a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
9002216a:	f1bc 0f00 	cmp.w	ip, #0
9002216e:	f2c0 8118 	blt.w	900223a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
90022172:	f10e 39ff 	add.w	r9, lr, #4294967295
90022176:	45cc      	cmp	ip, r9
90022178:	f280 8113 	bge.w	900223a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
9002217c:	b21b      	sxth	r3, r3
9002217e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90022180:	fb0c 2203 	mla	r2, ip, r3, r2
90022184:	eb04 0902 	add.w	r9, r4, r2
90022188:	5ca2      	ldrb	r2, [r4, r2]
9002218a:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
9002218e:	2800      	cmp	r0, #0
90022190:	f000 80fe 	beq.w	90022390 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
90022194:	f899 2001 	ldrb.w	r2, [r9, #1]
90022198:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
9002219c:	9211      	str	r2, [sp, #68]	; 0x44
9002219e:	b151      	cbz	r1, 900221b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
900221a0:	eb09 0203 	add.w	r2, r9, r3
900221a4:	f819 3003 	ldrb.w	r3, [r9, r3]
900221a8:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
900221ac:	930f      	str	r3, [sp, #60]	; 0x3c
900221ae:	7853      	ldrb	r3, [r2, #1]
900221b0:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
900221b4:	9312      	str	r3, [sp, #72]	; 0x48
900221b6:	9b11      	ldr	r3, [sp, #68]	; 0x44
900221b8:	fb10 f201 	smulbb	r2, r0, r1
900221bc:	9c12      	ldr	r4, [sp, #72]	; 0x48
900221be:	ea4f 4c03 	mov.w	ip, r3, lsl #16
900221c2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
900221c6:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
900221ca:	10d2      	asrs	r2, r2, #3
900221cc:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
900221d0:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
900221d4:	ea4c 0c03 	orr.w	ip, ip, r3
900221d8:	9b12      	ldr	r3, [sp, #72]	; 0x48
900221da:	041b      	lsls	r3, r3, #16
900221dc:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
900221e0:	4323      	orrs	r3, r4
900221e2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
900221e4:	4353      	muls	r3, r2
900221e6:	fb09 330c 	mla	r3, r9, ip, r3
900221ea:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
900221ee:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
900221f2:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
900221f6:	ea4c 0e0e 	orr.w	lr, ip, lr
900221fa:	f1c1 0c10 	rsb	ip, r1, #16
900221fe:	ebac 0c00 	sub.w	ip, ip, r0
90022202:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
90022206:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
9002220a:	fb0c 3c0e 	mla	ip, ip, lr, r3
9002220e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90022210:	0418      	lsls	r0, r3, #16
90022212:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
90022216:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
9002221a:	4318      	orrs	r0, r3
9002221c:	fb02 c200 	mla	r2, r2, r0, ip
90022220:	8838      	ldrh	r0, [r7, #0]
90022222:	0d53      	lsrs	r3, r2, #21
90022224:	0952      	lsrs	r2, r2, #5
90022226:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9002222a:	1201      	asrs	r1, r0, #8
9002222c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90022230:	ea4f 0ee0 	mov.w	lr, r0, asr #3
90022234:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
90022238:	00c0      	lsls	r0, r0, #3
9002223a:	431a      	orrs	r2, r3
9002223c:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
90022240:	fb11 f104 	smulbb	r1, r1, r4
90022244:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
90022248:	b292      	uxth	r2, r2
9002224a:	fb1e fe04 	smulbb	lr, lr, r4
9002224e:	b2c0      	uxtb	r0, r0
90022250:	ea4f 2c22 	mov.w	ip, r2, asr #8
90022254:	fb10 f004 	smulbb	r0, r0, r4
90022258:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9002225c:	fb0c 1c03 	mla	ip, ip, r3, r1
90022260:	10d1      	asrs	r1, r2, #3
90022262:	00d2      	lsls	r2, r2, #3
90022264:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
90022268:	fa1f fc8c 	uxth.w	ip, ip
9002226c:	b2d2      	uxtb	r2, r2
9002226e:	fb01 e103 	mla	r1, r1, r3, lr
90022272:	fb02 0303 	mla	r3, r2, r3, r0
90022276:	b289      	uxth	r1, r1
90022278:	b29a      	uxth	r2, r3
9002227a:	f10c 0301 	add.w	r3, ip, #1
9002227e:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
90022282:	1c53      	adds	r3, r2, #1
90022284:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90022288:	1c4a      	adds	r2, r1, #1
9002228a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9002228e:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90022292:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90022296:	0949      	lsrs	r1, r1, #5
90022298:	ea43 030c 	orr.w	r3, r3, ip
9002229c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
900222a0:	430b      	orrs	r3, r1
900222a2:	803b      	strh	r3, [r7, #0]
900222a4:	9b25      	ldr	r3, [sp, #148]	; 0x94
900222a6:	3702      	adds	r7, #2
900222a8:	f10b 3bff 	add.w	fp, fp, #4294967295
900222ac:	449a      	add	sl, r3
900222ae:	9b26      	ldr	r3, [sp, #152]	; 0x98
900222b0:	441d      	add	r5, r3
900222b2:	e742      	b.n	9002213a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
900222b4:	9b25      	ldr	r3, [sp, #148]	; 0x94
900222b6:	f108 0802 	add.w	r8, r8, #2
900222ba:	449a      	add	sl, r3
900222bc:	9b26      	ldr	r3, [sp, #152]	; 0x98
900222be:	441d      	add	r5, r3
900222c0:	9b09      	ldr	r3, [sp, #36]	; 0x24
900222c2:	3b01      	subs	r3, #1
900222c4:	9309      	str	r3, [sp, #36]	; 0x24
900222c6:	e718      	b.n	900220fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
900222c8:	d023      	beq.n	90022312 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
900222ca:	9b09      	ldr	r3, [sp, #36]	; 0x24
900222cc:	9825      	ldr	r0, [sp, #148]	; 0x94
900222ce:	3b01      	subs	r3, #1
900222d0:	fb00 a003 	mla	r0, r0, r3, sl
900222d4:	1400      	asrs	r0, r0, #16
900222d6:	f53f af2d 	bmi.w	90022134 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
900222da:	3901      	subs	r1, #1
900222dc:	4288      	cmp	r0, r1
900222de:	f6bf af29 	bge.w	90022134 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
900222e2:	9926      	ldr	r1, [sp, #152]	; 0x98
900222e4:	fb01 5303 	mla	r3, r1, r3, r5
900222e8:	141b      	asrs	r3, r3, #16
900222ea:	f53f af23 	bmi.w	90022134 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
900222ee:	3a01      	subs	r2, #1
900222f0:	4293      	cmp	r3, r2
900222f2:	f6bf af1f 	bge.w	90022134 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
900222f6:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
900222fa:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
900222fe:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
90022302:	f1be 0f00 	cmp.w	lr, #0
90022306:	dc6c      	bgt.n	900223e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90022308:	9b09      	ldr	r3, [sp, #36]	; 0x24
9002230a:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
9002230e:	eb08 0844 	add.w	r8, r8, r4, lsl #1
90022312:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90022314:	2b00      	cmp	r3, #0
90022316:	f340 810e 	ble.w	90022536 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
9002231a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
9002231e:	9b22      	ldr	r3, [sp, #136]	; 0x88
90022320:	ee30 0a04 	vadd.f32	s0, s0, s8
90022324:	ee70 0aa4 	vadd.f32	s1, s1, s9
90022328:	eef0 6a62 	vmov.f32	s13, s5
9002232c:	eec7 7a00 	vdiv.f32	s15, s14, s0
90022330:	ee31 1a05 	vadd.f32	s2, s2, s10
90022334:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90022338:	ee16 aa90 	vmov	sl, s13
9002233c:	eef0 6a43 	vmov.f32	s13, s6
90022340:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90022344:	ee16 5a90 	vmov	r5, s13
90022348:	ee20 7aa7 	vmul.f32	s14, s1, s15
9002234c:	ee61 7a27 	vmul.f32	s15, s2, s15
90022350:	ee77 2a62 	vsub.f32	s5, s14, s5
90022354:	ee37 3ac3 	vsub.f32	s6, s15, s6
90022358:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9002235c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90022360:	ee12 2a90 	vmov	r2, s5
90022364:	eef0 2a47 	vmov.f32	s5, s14
90022368:	fb92 f3f3 	sdiv	r3, r2, r3
9002236c:	ee13 2a10 	vmov	r2, s6
90022370:	9325      	str	r3, [sp, #148]	; 0x94
90022372:	9b22      	ldr	r3, [sp, #136]	; 0x88
90022374:	eeb0 3a67 	vmov.f32	s6, s15
90022378:	fb92 f3f3 	sdiv	r3, r2, r3
9002237c:	9326      	str	r3, [sp, #152]	; 0x98
9002237e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90022380:	9a15      	ldr	r2, [sp, #84]	; 0x54
90022382:	3b01      	subs	r3, #1
90022384:	930c      	str	r3, [sp, #48]	; 0x30
90022386:	9b22      	ldr	r3, [sp, #136]	; 0x88
90022388:	bf08      	it	eq
9002238a:	4613      	moveq	r3, r2
9002238c:	9309      	str	r3, [sp, #36]	; 0x24
9002238e:	e6a6      	b.n	900220de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
90022390:	2900      	cmp	r1, #0
90022392:	f43f af10 	beq.w	900221b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
90022396:	f819 3003 	ldrb.w	r3, [r9, r3]
9002239a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
9002239e:	930f      	str	r3, [sp, #60]	; 0x3c
900223a0:	e709      	b.n	900221b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
900223a2:	f112 0901 	adds.w	r9, r2, #1
900223a6:	f53f af7d 	bmi.w	900222a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
900223aa:	454b      	cmp	r3, r9
900223ac:	f6ff af7a 	blt.w	900222a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
900223b0:	f11c 0901 	adds.w	r9, ip, #1
900223b4:	f53f af76 	bmi.w	900222a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
900223b8:	45ce      	cmp	lr, r9
900223ba:	f6ff af73 	blt.w	900222a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
900223be:	9c0d      	ldr	r4, [sp, #52]	; 0x34
900223c0:	b21b      	sxth	r3, r3
900223c2:	9202      	str	r2, [sp, #8]
900223c4:	fa0f f28e 	sxth.w	r2, lr
900223c8:	9300      	str	r3, [sp, #0]
900223ca:	4633      	mov	r3, r6
900223cc:	9201      	str	r2, [sp, #4]
900223ce:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
900223d0:	e9cd 1405 	strd	r1, r4, [sp, #20]
900223d4:	e9cd c003 	strd	ip, r0, [sp, #12]
900223d8:	4639      	mov	r1, r7
900223da:	9816      	ldr	r0, [sp, #88]	; 0x58
900223dc:	f7ff fd8e 	bl	90021efc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
900223e0:	e760      	b.n	900222a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
900223e2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
900223e4:	ea4f 422a 	mov.w	r2, sl, asr #16
900223e8:	1429      	asrs	r1, r5, #16
900223ea:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
900223ec:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
900223f0:	f3ca 3c03 	ubfx	ip, sl, #12, #4
900223f4:	f3c5 3003 	ubfx	r0, r5, #12, #4
900223f8:	fb03 2101 	mla	r1, r3, r1, r2
900223fc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
900223fe:	440a      	add	r2, r1
90022400:	5c61      	ldrb	r1, [r4, r1]
90022402:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
90022406:	f1bc 0f00 	cmp.w	ip, #0
9002240a:	f000 808c 	beq.w	90022526 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
9002240e:	7857      	ldrb	r7, [r2, #1]
90022410:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
90022414:	9413      	str	r4, [sp, #76]	; 0x4c
90022416:	b140      	cbz	r0, 9002242a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90022418:	18d7      	adds	r7, r2, r3
9002241a:	5cd3      	ldrb	r3, [r2, r3]
9002241c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90022420:	9310      	str	r3, [sp, #64]	; 0x40
90022422:	787b      	ldrb	r3, [r7, #1]
90022424:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90022428:	9314      	str	r3, [sp, #80]	; 0x50
9002242a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
9002242c:	fb1c f200 	smulbb	r2, ip, r0
90022430:	9c14      	ldr	r4, [sp, #80]	; 0x50
90022432:	f10e 3eff 	add.w	lr, lr, #4294967295
90022436:	041f      	lsls	r7, r3, #16
90022438:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
9002243c:	10d2      	asrs	r2, r2, #3
9002243e:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
90022442:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
90022446:	431f      	orrs	r7, r3
90022448:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
9002244c:	9317      	str	r3, [sp, #92]	; 0x5c
9002244e:	9b14      	ldr	r3, [sp, #80]	; 0x50
90022450:	9c17      	ldr	r4, [sp, #92]	; 0x5c
90022452:	041b      	lsls	r3, r3, #16
90022454:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
90022458:	ea43 030b 	orr.w	r3, r3, fp
9002245c:	ea4f 4b01 	mov.w	fp, r1, lsl #16
90022460:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
90022464:	4353      	muls	r3, r2
90022466:	fb04 3707 	mla	r7, r4, r7, r3
9002246a:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
9002246e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
90022470:	ea43 0b01 	orr.w	fp, r3, r1
90022474:	f1c0 0110 	rsb	r1, r0, #16
90022478:	9b10      	ldr	r3, [sp, #64]	; 0x40
9002247a:	eba1 0c0c 	sub.w	ip, r1, ip
9002247e:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
90022482:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
90022486:	fb0c 770b 	mla	r7, ip, fp, r7
9002248a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
9002248e:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
90022492:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
90022496:	ea4c 0c0b 	orr.w	ip, ip, fp
9002249a:	fb02 770c 	mla	r7, r2, ip, r7
9002249e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
900224a0:	0d79      	lsrs	r1, r7, #21
900224a2:	8812      	ldrh	r2, [r2, #0]
900224a4:	097f      	lsrs	r7, r7, #5
900224a6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
900224aa:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
900224ae:	430f      	orrs	r7, r1
900224b0:	1211      	asrs	r1, r2, #8
900224b2:	b2bb      	uxth	r3, r7
900224b4:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
900224b8:	10d7      	asrs	r7, r2, #3
900224ba:	fb11 f104 	smulbb	r1, r1, r4
900224be:	1218      	asrs	r0, r3, #8
900224c0:	00d2      	lsls	r2, r2, #3
900224c2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
900224c6:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
900224ca:	fb17 f704 	smulbb	r7, r7, r4
900224ce:	b2d2      	uxtb	r2, r2
900224d0:	fb00 1009 	mla	r0, r0, r9, r1
900224d4:	10d9      	asrs	r1, r3, #3
900224d6:	fb12 f204 	smulbb	r2, r2, r4
900224da:	00db      	lsls	r3, r3, #3
900224dc:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
900224e0:	b280      	uxth	r0, r0
900224e2:	b2db      	uxtb	r3, r3
900224e4:	fb01 7109 	mla	r1, r1, r9, r7
900224e8:	fb03 2309 	mla	r3, r3, r9, r2
900224ec:	1c42      	adds	r2, r0, #1
900224ee:	b289      	uxth	r1, r1
900224f0:	b29b      	uxth	r3, r3
900224f2:	eb02 2010 	add.w	r0, r2, r0, lsr #8
900224f6:	1c4f      	adds	r7, r1, #1
900224f8:	1c5a      	adds	r2, r3, #1
900224fa:	eb07 2111 	add.w	r1, r7, r1, lsr #8
900224fe:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
90022502:	eb02 2213 	add.w	r2, r2, r3, lsr #8
90022506:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90022508:	0949      	lsrs	r1, r1, #5
9002250a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9002250e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90022512:	4310      	orrs	r0, r2
90022514:	4308      	orrs	r0, r1
90022516:	f823 0b02 	strh.w	r0, [r3], #2
9002251a:	930e      	str	r3, [sp, #56]	; 0x38
9002251c:	9b25      	ldr	r3, [sp, #148]	; 0x94
9002251e:	449a      	add	sl, r3
90022520:	9b26      	ldr	r3, [sp, #152]	; 0x98
90022522:	441d      	add	r5, r3
90022524:	e6ed      	b.n	90022302 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
90022526:	2800      	cmp	r0, #0
90022528:	f43f af7f 	beq.w	9002242a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
9002252c:	5cd3      	ldrb	r3, [r2, r3]
9002252e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90022532:	9310      	str	r3, [sp, #64]	; 0x40
90022534:	e779      	b.n	9002242a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90022536:	b019      	add	sp, #100	; 0x64
90022538:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9002253c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
9002253c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90022540:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
90022544:	f9bd e020 	ldrsh.w	lr, [sp, #32]
90022548:	f1b8 0f00 	cmp.w	r8, #0
9002254c:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
90022550:	fb08 470e 	mla	r7, r8, lr, r4
90022554:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
90022558:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
9002255c:	eb02 0907 	add.w	r9, r2, r7
90022560:	8808      	ldrh	r0, [r1, #0]
90022562:	db67      	blt.n	90022634 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
90022564:	45c2      	cmp	sl, r8
90022566:	dd65      	ble.n	90022634 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
90022568:	2c00      	cmp	r4, #0
9002256a:	db61      	blt.n	90022630 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
9002256c:	45a6      	cmp	lr, r4
9002256e:	dd5f      	ble.n	90022630 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
90022570:	5dd2      	ldrb	r2, [r2, r7]
90022572:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
90022576:	1c62      	adds	r2, r4, #1
90022578:	d45f      	bmi.n	9002263a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
9002257a:	4596      	cmp	lr, r2
9002257c:	dd5d      	ble.n	9002263a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
9002257e:	2d00      	cmp	r5, #0
90022580:	d05b      	beq.n	9002263a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
90022582:	f899 2001 	ldrb.w	r2, [r9, #1]
90022586:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
9002258a:	f118 0801 	adds.w	r8, r8, #1
9002258e:	d458      	bmi.n	90022642 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
90022590:	45c2      	cmp	sl, r8
90022592:	dd56      	ble.n	90022642 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
90022594:	2e00      	cmp	r6, #0
90022596:	d054      	beq.n	90022642 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
90022598:	2c00      	cmp	r4, #0
9002259a:	db50      	blt.n	9002263e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
9002259c:	45a6      	cmp	lr, r4
9002259e:	dd4e      	ble.n	9002263e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
900225a0:	f819 200e 	ldrb.w	r2, [r9, lr]
900225a4:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
900225a8:	3401      	adds	r4, #1
900225aa:	d407      	bmi.n	900225bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
900225ac:	45a6      	cmp	lr, r4
900225ae:	dd05      	ble.n	900225bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
900225b0:	b125      	cbz	r5, 900225bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
900225b2:	44ce      	add	lr, r9
900225b4:	f89e 0001 	ldrb.w	r0, [lr, #1]
900225b8:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
900225bc:	fb15 f406 	smulbb	r4, r5, r6
900225c0:	ea4f 430c 	mov.w	r3, ip, lsl #16
900225c4:	ea4f 4e07 	mov.w	lr, r7, lsl #16
900225c8:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
900225cc:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
900225d0:	f3c4 04c7 	ubfx	r4, r4, #3, #8
900225d4:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
900225d8:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
900225dc:	ea43 0c0c 	orr.w	ip, r3, ip
900225e0:	f1c6 0310 	rsb	r3, r6, #16
900225e4:	ea4e 0707 	orr.w	r7, lr, r7
900225e8:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
900225ec:	1b5b      	subs	r3, r3, r5
900225ee:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
900225f2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
900225f6:	437d      	muls	r5, r7
900225f8:	fb03 5c0c 	mla	ip, r3, ip, r5
900225fc:	0403      	lsls	r3, r0, #16
900225fe:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90022602:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
90022606:	4318      	orrs	r0, r3
90022608:	0413      	lsls	r3, r2, #16
9002260a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
9002260e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
90022612:	fb04 c000 	mla	r0, r4, r0, ip
90022616:	4313      	orrs	r3, r2
90022618:	fb06 0003 	mla	r0, r6, r3, r0
9002261c:	0d43      	lsrs	r3, r0, #21
9002261e:	0940      	lsrs	r0, r0, #5
90022620:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90022624:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90022628:	4318      	orrs	r0, r3
9002262a:	8008      	strh	r0, [r1, #0]
9002262c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90022630:	4684      	mov	ip, r0
90022632:	e7a0      	b.n	90022576 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
90022634:	4607      	mov	r7, r0
90022636:	4684      	mov	ip, r0
90022638:	e7a7      	b.n	9002258a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
9002263a:	4607      	mov	r7, r0
9002263c:	e7a5      	b.n	9002258a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
9002263e:	4602      	mov	r2, r0
90022640:	e7b2      	b.n	900225a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
90022642:	4602      	mov	r2, r0
90022644:	e7ba      	b.n	900225bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

90022646 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90022646:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002264a:	b093      	sub	sp, #76	; 0x4c
9002264c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
90022650:	920f      	str	r2, [sp, #60]	; 0x3c
90022652:	9a21      	ldr	r2, [sp, #132]	; 0x84
90022654:	9010      	str	r0, [sp, #64]	; 0x40
90022656:	9108      	str	r1, [sp, #32]
90022658:	6850      	ldr	r0, [r2, #4]
9002265a:	9306      	str	r3, [sp, #24]
9002265c:	6812      	ldr	r2, [r2, #0]
9002265e:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
90022662:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
90022666:	fb00 1303 	mla	r3, r0, r3, r1
9002266a:	eb02 0943 	add.w	r9, r2, r3, lsl #1
9002266e:	9b24      	ldr	r3, [sp, #144]	; 0x90
90022670:	681b      	ldr	r3, [r3, #0]
90022672:	9307      	str	r3, [sp, #28]
90022674:	9b24      	ldr	r3, [sp, #144]	; 0x90
90022676:	685f      	ldr	r7, [r3, #4]
90022678:	3704      	adds	r7, #4
9002267a:	9b08      	ldr	r3, [sp, #32]
9002267c:	2b00      	cmp	r3, #0
9002267e:	dc03      	bgt.n	90022688 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
90022680:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90022682:	2b00      	cmp	r3, #0
90022684:	f340 81b2 	ble.w	900229ec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
90022688:	9b24      	ldr	r3, [sp, #144]	; 0x90
9002268a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002268e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90022692:	1e48      	subs	r0, r1, #1
90022694:	f102 3cff 	add.w	ip, r2, #4294967295
90022698:	9b06      	ldr	r3, [sp, #24]
9002269a:	2b00      	cmp	r3, #0
9002269c:	f340 80a9 	ble.w	900227f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
900226a0:	ea5f 4e24 	movs.w	lr, r4, asr #16
900226a4:	ea4f 4326 	mov.w	r3, r6, asr #16
900226a8:	d406      	bmi.n	900226b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
900226aa:	4586      	cmp	lr, r0
900226ac:	da04      	bge.n	900226b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
900226ae:	2b00      	cmp	r3, #0
900226b0:	db02      	blt.n	900226b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
900226b2:	4563      	cmp	r3, ip
900226b4:	f2c0 809e 	blt.w	900227f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
900226b8:	f11e 0e01 	adds.w	lr, lr, #1
900226bc:	f100 808f 	bmi.w	900227de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
900226c0:	4571      	cmp	r1, lr
900226c2:	f2c0 808c 	blt.w	900227de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
900226c6:	3301      	adds	r3, #1
900226c8:	f100 8089 	bmi.w	900227de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
900226cc:	429a      	cmp	r2, r3
900226ce:	f2c0 8086 	blt.w	900227de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
900226d2:	f8dd b018 	ldr.w	fp, [sp, #24]
900226d6:	46c8      	mov	r8, r9
900226d8:	f1bb 0f00 	cmp.w	fp, #0
900226dc:	f340 80a6 	ble.w	9002282c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
900226e0:	9a24      	ldr	r2, [sp, #144]	; 0x90
900226e2:	ea4f 4c26 	mov.w	ip, r6, asr #16
900226e6:	9b24      	ldr	r3, [sp, #144]	; 0x90
900226e8:	f3c4 3003 	ubfx	r0, r4, #12, #4
900226ec:	f8d2 e00c 	ldr.w	lr, [r2, #12]
900226f0:	1422      	asrs	r2, r4, #16
900226f2:	f3c6 3103 	ubfx	r1, r6, #12, #4
900226f6:	689b      	ldr	r3, [r3, #8]
900226f8:	f100 80e3 	bmi.w	900228c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
900226fc:	f103 3aff 	add.w	sl, r3, #4294967295
90022700:	4552      	cmp	r2, sl
90022702:	f280 80de 	bge.w	900228c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
90022706:	f1bc 0f00 	cmp.w	ip, #0
9002270a:	f2c0 80da 	blt.w	900228c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
9002270e:	f10e 3aff 	add.w	sl, lr, #4294967295
90022712:	45d4      	cmp	ip, sl
90022714:	f280 80d5 	bge.w	900228c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
90022718:	b21b      	sxth	r3, r3
9002271a:	9d07      	ldr	r5, [sp, #28]
9002271c:	fb0c 2203 	mla	r2, ip, r3, r2
90022720:	eb05 0a02 	add.w	sl, r5, r2
90022724:	5caa      	ldrb	r2, [r5, r2]
90022726:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
9002272a:	2800      	cmp	r0, #0
9002272c:	f000 80c0 	beq.w	900228b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
90022730:	f89a 2001 	ldrb.w	r2, [sl, #1]
90022734:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
90022738:	920b      	str	r2, [sp, #44]	; 0x2c
9002273a:	b151      	cbz	r1, 90022752 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
9002273c:	eb0a 0203 	add.w	r2, sl, r3
90022740:	f81a 3003 	ldrb.w	r3, [sl, r3]
90022744:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
90022748:	9309      	str	r3, [sp, #36]	; 0x24
9002274a:	7853      	ldrb	r3, [r2, #1]
9002274c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
90022750:	930c      	str	r3, [sp, #48]	; 0x30
90022752:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90022754:	fb10 f201 	smulbb	r2, r0, r1
90022758:	9d0c      	ldr	r5, [sp, #48]	; 0x30
9002275a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
9002275e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
90022762:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
90022766:	10d2      	asrs	r2, r2, #3
90022768:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
9002276c:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
90022770:	ea4c 0c03 	orr.w	ip, ip, r3
90022774:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90022776:	041b      	lsls	r3, r3, #16
90022778:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
9002277c:	432b      	orrs	r3, r5
9002277e:	4353      	muls	r3, r2
90022780:	fb0a 330c 	mla	r3, sl, ip, r3
90022784:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
90022788:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
9002278c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
90022790:	ea4c 0e0e 	orr.w	lr, ip, lr
90022794:	f1c1 0c10 	rsb	ip, r1, #16
90022798:	ebac 0c00 	sub.w	ip, ip, r0
9002279c:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
900227a0:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
900227a4:	fb0c 3c0e 	mla	ip, ip, lr, r3
900227a8:	9b09      	ldr	r3, [sp, #36]	; 0x24
900227aa:	0418      	lsls	r0, r3, #16
900227ac:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
900227b0:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
900227b4:	4318      	orrs	r0, r3
900227b6:	fb02 c200 	mla	r2, r2, r0, ip
900227ba:	0d53      	lsrs	r3, r2, #21
900227bc:	0952      	lsrs	r2, r2, #5
900227be:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
900227c2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
900227c6:	431a      	orrs	r2, r3
900227c8:	f8a8 2000 	strh.w	r2, [r8]
900227cc:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
900227ce:	f108 0802 	add.w	r8, r8, #2
900227d2:	f10b 3bff 	add.w	fp, fp, #4294967295
900227d6:	441c      	add	r4, r3
900227d8:	9b20      	ldr	r3, [sp, #128]	; 0x80
900227da:	441e      	add	r6, r3
900227dc:	e77c      	b.n	900226d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900227de:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
900227e0:	f109 0902 	add.w	r9, r9, #2
900227e4:	441c      	add	r4, r3
900227e6:	9b20      	ldr	r3, [sp, #128]	; 0x80
900227e8:	441e      	add	r6, r3
900227ea:	9b06      	ldr	r3, [sp, #24]
900227ec:	3b01      	subs	r3, #1
900227ee:	9306      	str	r3, [sp, #24]
900227f0:	e752      	b.n	90022698 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
900227f2:	d020      	beq.n	90022836 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
900227f4:	9b06      	ldr	r3, [sp, #24]
900227f6:	981f      	ldr	r0, [sp, #124]	; 0x7c
900227f8:	3b01      	subs	r3, #1
900227fa:	fb00 4003 	mla	r0, r0, r3, r4
900227fe:	1400      	asrs	r0, r0, #16
90022800:	f53f af67 	bmi.w	900226d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
90022804:	3901      	subs	r1, #1
90022806:	4288      	cmp	r0, r1
90022808:	f6bf af63 	bge.w	900226d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
9002280c:	9920      	ldr	r1, [sp, #128]	; 0x80
9002280e:	fb01 6303 	mla	r3, r1, r3, r6
90022812:	141b      	asrs	r3, r3, #16
90022814:	f53f af5d 	bmi.w	900226d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
90022818:	3a01      	subs	r2, #1
9002281a:	4293      	cmp	r3, r2
9002281c:	f6bf af59 	bge.w	900226d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
90022820:	f8dd 8018 	ldr.w	r8, [sp, #24]
90022824:	46ca      	mov	sl, r9
90022826:	f1b8 0f00 	cmp.w	r8, #0
9002282a:	dc67      	bgt.n	900228fc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
9002282c:	9b06      	ldr	r3, [sp, #24]
9002282e:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
90022832:	eb09 0945 	add.w	r9, r9, r5, lsl #1
90022836:	9b08      	ldr	r3, [sp, #32]
90022838:	2b00      	cmp	r3, #0
9002283a:	f340 80d7 	ble.w	900229ec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
9002283e:	ee30 0a04 	vadd.f32	s0, s0, s8
90022842:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90022844:	ee70 0aa4 	vadd.f32	s1, s1, s9
90022848:	eeb0 6a62 	vmov.f32	s12, s5
9002284c:	eec6 7a80 	vdiv.f32	s15, s13, s0
90022850:	ee31 1a05 	vadd.f32	s2, s2, s10
90022854:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90022858:	ee16 4a10 	vmov	r4, s12
9002285c:	eeb0 6a43 	vmov.f32	s12, s6
90022860:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90022864:	ee16 6a10 	vmov	r6, s12
90022868:	ee20 7aa7 	vmul.f32	s14, s1, s15
9002286c:	ee61 7a27 	vmul.f32	s15, s2, s15
90022870:	ee77 2a62 	vsub.f32	s5, s14, s5
90022874:	ee37 3ac3 	vsub.f32	s6, s15, s6
90022878:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9002287c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90022880:	ee12 2a90 	vmov	r2, s5
90022884:	eef0 2a47 	vmov.f32	s5, s14
90022888:	fb92 f3f3 	sdiv	r3, r2, r3
9002288c:	ee13 2a10 	vmov	r2, s6
90022890:	931f      	str	r3, [sp, #124]	; 0x7c
90022892:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90022894:	eeb0 3a67 	vmov.f32	s6, s15
90022898:	fb92 f3f3 	sdiv	r3, r2, r3
9002289c:	9320      	str	r3, [sp, #128]	; 0x80
9002289e:	9b08      	ldr	r3, [sp, #32]
900228a0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
900228a2:	3b01      	subs	r3, #1
900228a4:	9308      	str	r3, [sp, #32]
900228a6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
900228a8:	bf08      	it	eq
900228aa:	4613      	moveq	r3, r2
900228ac:	9306      	str	r3, [sp, #24]
900228ae:	e6e4      	b.n	9002267a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
900228b0:	2900      	cmp	r1, #0
900228b2:	f43f af4e 	beq.w	90022752 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
900228b6:	f81a 3003 	ldrb.w	r3, [sl, r3]
900228ba:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
900228be:	9309      	str	r3, [sp, #36]	; 0x24
900228c0:	e747      	b.n	90022752 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
900228c2:	f112 0a01 	adds.w	sl, r2, #1
900228c6:	d481      	bmi.n	900227cc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
900228c8:	4553      	cmp	r3, sl
900228ca:	f6ff af7f 	blt.w	900227cc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
900228ce:	f11c 0a01 	adds.w	sl, ip, #1
900228d2:	f53f af7b 	bmi.w	900227cc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
900228d6:	45d6      	cmp	lr, sl
900228d8:	f6ff af78 	blt.w	900227cc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
900228dc:	b21b      	sxth	r3, r3
900228de:	e9cd 2c02 	strd	r2, ip, [sp, #8]
900228e2:	fa0f f28e 	sxth.w	r2, lr
900228e6:	9300      	str	r3, [sp, #0]
900228e8:	463b      	mov	r3, r7
900228ea:	9201      	str	r2, [sp, #4]
900228ec:	9a07      	ldr	r2, [sp, #28]
900228ee:	e9cd 0104 	strd	r0, r1, [sp, #16]
900228f2:	4641      	mov	r1, r8
900228f4:	9810      	ldr	r0, [sp, #64]	; 0x40
900228f6:	f7ff fe21 	bl	9002253c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
900228fa:	e767      	b.n	900227cc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
900228fc:	9b24      	ldr	r3, [sp, #144]	; 0x90
900228fe:	1422      	asrs	r2, r4, #16
90022900:	1431      	asrs	r1, r6, #16
90022902:	9d07      	ldr	r5, [sp, #28]
90022904:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
90022908:	f3c4 3e03 	ubfx	lr, r4, #12, #4
9002290c:	f3c6 3003 	ubfx	r0, r6, #12, #4
90022910:	fb03 2101 	mla	r1, r3, r1, r2
90022914:	9a07      	ldr	r2, [sp, #28]
90022916:	440a      	add	r2, r1
90022918:	5c69      	ldrb	r1, [r5, r1]
9002291a:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
9002291e:	f1be 0f00 	cmp.w	lr, #0
90022922:	d05c      	beq.n	900229de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
90022924:	f892 c001 	ldrb.w	ip, [r2, #1]
90022928:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
9002292c:	950d      	str	r5, [sp, #52]	; 0x34
9002292e:	b150      	cbz	r0, 90022946 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
90022930:	eb02 0c03 	add.w	ip, r2, r3
90022934:	5cd3      	ldrb	r3, [r2, r3]
90022936:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
9002293a:	930a      	str	r3, [sp, #40]	; 0x28
9002293c:	f89c 3001 	ldrb.w	r3, [ip, #1]
90022940:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
90022944:	930e      	str	r3, [sp, #56]	; 0x38
90022946:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90022948:	fb1e f200 	smulbb	r2, lr, r0
9002294c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
9002294e:	f108 38ff 	add.w	r8, r8, #4294967295
90022952:	ea4f 4c03 	mov.w	ip, r3, lsl #16
90022956:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
9002295a:	10d2      	asrs	r2, r2, #3
9002295c:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
90022960:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
90022964:	ea4c 0c03 	orr.w	ip, ip, r3
90022968:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
9002296c:	9311      	str	r3, [sp, #68]	; 0x44
9002296e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90022970:	9d11      	ldr	r5, [sp, #68]	; 0x44
90022972:	041b      	lsls	r3, r3, #16
90022974:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
90022978:	ea43 030b 	orr.w	r3, r3, fp
9002297c:	ea4f 4b01 	mov.w	fp, r1, lsl #16
90022980:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
90022984:	4353      	muls	r3, r2
90022986:	fb05 3c0c 	mla	ip, r5, ip, r3
9002298a:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
9002298e:	ea43 0b01 	orr.w	fp, r3, r1
90022992:	f1c0 0110 	rsb	r1, r0, #16
90022996:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90022998:	eba1 0e0e 	sub.w	lr, r1, lr
9002299c:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
900229a0:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
900229a4:	fb0e cc0b 	mla	ip, lr, fp, ip
900229a8:	ea4f 4b03 	mov.w	fp, r3, lsl #16
900229ac:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
900229b0:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
900229b4:	ea4b 0e0e 	orr.w	lr, fp, lr
900229b8:	fb02 cc0e 	mla	ip, r2, lr, ip
900229bc:	ea4f 535c 	mov.w	r3, ip, lsr #21
900229c0:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
900229c4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
900229c8:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
900229cc:	ea43 0c0c 	orr.w	ip, r3, ip
900229d0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
900229d2:	441c      	add	r4, r3
900229d4:	9b20      	ldr	r3, [sp, #128]	; 0x80
900229d6:	f82a cb02 	strh.w	ip, [sl], #2
900229da:	441e      	add	r6, r3
900229dc:	e723      	b.n	90022826 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
900229de:	2800      	cmp	r0, #0
900229e0:	d0b1      	beq.n	90022946 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
900229e2:	5cd3      	ldrb	r3, [r2, r3]
900229e4:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
900229e8:	930a      	str	r3, [sp, #40]	; 0x28
900229ea:	e7ac      	b.n	90022946 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
900229ec:	b013      	add	sp, #76	; 0x4c
900229ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900229f2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
900229f2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900229f6:	880d      	ldrh	r5, [r1, #0]
900229f8:	b087      	sub	sp, #28
900229fa:	10ef      	asrs	r7, r5, #3
900229fc:	9103      	str	r1, [sp, #12]
900229fe:	ea4f 2a25 	mov.w	sl, r5, asr #8
90022a02:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
90022a06:	00ed      	lsls	r5, r5, #3
90022a08:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
90022a0c:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
90022a10:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
90022a14:	b2ed      	uxtb	r5, r5
90022a16:	9701      	str	r7, [sp, #4]
90022a18:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
90022a1c:	9502      	str	r5, [sp, #8]
90022a1e:	9d01      	ldr	r5, [sp, #4]
90022a20:	9902      	ldr	r1, [sp, #8]
90022a22:	022d      	lsls	r5, r5, #8
90022a24:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
90022a28:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
90022a2c:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
90022a30:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
90022a34:	430d      	orrs	r5, r1
90022a36:	fb06 0709 	mla	r7, r6, r9, r0
90022a3a:	2e00      	cmp	r6, #0
90022a3c:	9505      	str	r5, [sp, #20]
90022a3e:	eb02 0c07 	add.w	ip, r2, r7
90022a42:	f2c0 80b6 	blt.w	90022bb2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
90022a46:	45b3      	cmp	fp, r6
90022a48:	f340 80b3 	ble.w	90022bb2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
90022a4c:	2800      	cmp	r0, #0
90022a4e:	f2c0 80ae 	blt.w	90022bae <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
90022a52:	4581      	cmp	r9, r0
90022a54:	f340 80ab 	ble.w	90022bae <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
90022a58:	5dd7      	ldrb	r7, [r2, r7]
90022a5a:	eb07 0747 	add.w	r7, r7, r7, lsl #1
90022a5e:	441f      	add	r7, r3
90022a60:	1c42      	adds	r2, r0, #1
90022a62:	f100 80a9 	bmi.w	90022bb8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
90022a66:	4591      	cmp	r9, r2
90022a68:	f340 80a6 	ble.w	90022bb8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
90022a6c:	2c00      	cmp	r4, #0
90022a6e:	f000 80a3 	beq.w	90022bb8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
90022a72:	f89c 5001 	ldrb.w	r5, [ip, #1]
90022a76:	eb05 0545 	add.w	r5, r5, r5, lsl #1
90022a7a:	441d      	add	r5, r3
90022a7c:	3601      	adds	r6, #1
90022a7e:	f100 809f 	bmi.w	90022bc0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
90022a82:	45b3      	cmp	fp, r6
90022a84:	f340 809c 	ble.w	90022bc0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
90022a88:	f1be 0f00 	cmp.w	lr, #0
90022a8c:	f000 8098 	beq.w	90022bc0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
90022a90:	2800      	cmp	r0, #0
90022a92:	f2c0 8093 	blt.w	90022bbc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
90022a96:	4581      	cmp	r9, r0
90022a98:	f340 8090 	ble.w	90022bbc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
90022a9c:	f81c 6009 	ldrb.w	r6, [ip, r9]
90022aa0:	eb06 0646 	add.w	r6, r6, r6, lsl #1
90022aa4:	441e      	add	r6, r3
90022aa6:	3001      	adds	r0, #1
90022aa8:	f100 808d 	bmi.w	90022bc6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
90022aac:	4581      	cmp	r9, r0
90022aae:	f340 808a 	ble.w	90022bc6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
90022ab2:	2c00      	cmp	r4, #0
90022ab4:	f000 8087 	beq.w	90022bc6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
90022ab8:	44e1      	add	r9, ip
90022aba:	f899 2001 	ldrb.w	r2, [r9, #1]
90022abe:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90022ac2:	4413      	add	r3, r2
90022ac4:	b2a4      	uxth	r4, r4
90022ac6:	f897 c002 	ldrb.w	ip, [r7, #2]
90022aca:	fa1f fe8e 	uxth.w	lr, lr
90022ace:	9901      	ldr	r1, [sp, #4]
90022ad0:	fb04 fb0e 	mul.w	fp, r4, lr
90022ad4:	0124      	lsls	r4, r4, #4
90022ad6:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
90022ada:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
90022ade:	eba4 040b 	sub.w	r4, r4, fp
90022ae2:	fa1f f08e 	uxth.w	r0, lr
90022ae6:	b2a2      	uxth	r2, r4
90022ae8:	78ac      	ldrb	r4, [r5, #2]
90022aea:	eba9 0900 	sub.w	r9, r9, r0
90022aee:	fa1f fe88 	uxth.w	lr, r8
90022af2:	4354      	muls	r4, r2
90022af4:	ea6f 0808 	mvn.w	r8, r8
90022af8:	fa1f f989 	uxth.w	r9, r9
90022afc:	fa5f f888 	uxtb.w	r8, r8
90022b00:	fb09 440c 	mla	r4, r9, ip, r4
90022b04:	f896 c002 	ldrb.w	ip, [r6, #2]
90022b08:	fb1a fa08 	smulbb	sl, sl, r8
90022b0c:	fb00 440c 	mla	r4, r0, ip, r4
90022b10:	f893 c002 	ldrb.w	ip, [r3, #2]
90022b14:	fb0b 4c0c 	mla	ip, fp, ip, r4
90022b18:	787c      	ldrb	r4, [r7, #1]
90022b1a:	783f      	ldrb	r7, [r7, #0]
90022b1c:	f3cc 2c07 	ubfx	ip, ip, #8, #8
90022b20:	fb0c ac0e 	mla	ip, ip, lr, sl
90022b24:	f895 a001 	ldrb.w	sl, [r5, #1]
90022b28:	782d      	ldrb	r5, [r5, #0]
90022b2a:	fb02 fa0a 	mul.w	sl, r2, sl
90022b2e:	fa1f fc8c 	uxth.w	ip, ip
90022b32:	436a      	muls	r2, r5
90022b34:	7835      	ldrb	r5, [r6, #0]
90022b36:	fb09 aa04 	mla	sl, r9, r4, sl
90022b3a:	7874      	ldrb	r4, [r6, #1]
90022b3c:	fb09 2207 	mla	r2, r9, r7, r2
90022b40:	fb00 aa04 	mla	sl, r0, r4, sl
90022b44:	785c      	ldrb	r4, [r3, #1]
90022b46:	fb00 2005 	mla	r0, r0, r5, r2
90022b4a:	781b      	ldrb	r3, [r3, #0]
90022b4c:	fb0b a404 	mla	r4, fp, r4, sl
90022b50:	fb11 fa08 	smulbb	sl, r1, r8
90022b54:	fb0b 0b03 	mla	fp, fp, r3, r0
90022b58:	9b02      	ldr	r3, [sp, #8]
90022b5a:	f3c4 2407 	ubfx	r4, r4, #8, #8
90022b5e:	fb13 f808 	smulbb	r8, r3, r8
90022b62:	f3cb 2b07 	ubfx	fp, fp, #8, #8
90022b66:	fb04 a40e 	mla	r4, r4, lr, sl
90022b6a:	f10c 0301 	add.w	r3, ip, #1
90022b6e:	fb0b 8e0e 	mla	lr, fp, lr, r8
90022b72:	b2a4      	uxth	r4, r4
90022b74:	fa1f fe8e 	uxth.w	lr, lr
90022b78:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
90022b7c:	f104 0a01 	add.w	sl, r4, #1
90022b80:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
90022b84:	f10e 0c01 	add.w	ip, lr, #1
90022b88:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
90022b8c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
90022b90:	0964      	lsrs	r4, r4, #5
90022b92:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
90022b96:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
90022b9a:	ea4c 0c03 	orr.w	ip, ip, r3
90022b9e:	9b03      	ldr	r3, [sp, #12]
90022ba0:	ea4c 0c04 	orr.w	ip, ip, r4
90022ba4:	f8a3 c000 	strh.w	ip, [r3]
90022ba8:	b007      	add	sp, #28
90022baa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90022bae:	af05      	add	r7, sp, #20
90022bb0:	e756      	b.n	90022a60 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
90022bb2:	ad05      	add	r5, sp, #20
90022bb4:	462f      	mov	r7, r5
90022bb6:	e761      	b.n	90022a7c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
90022bb8:	ad05      	add	r5, sp, #20
90022bba:	e75f      	b.n	90022a7c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
90022bbc:	ae05      	add	r6, sp, #20
90022bbe:	e772      	b.n	90022aa6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
90022bc0:	ab05      	add	r3, sp, #20
90022bc2:	461e      	mov	r6, r3
90022bc4:	e77e      	b.n	90022ac4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
90022bc6:	ab05      	add	r3, sp, #20
90022bc8:	e77c      	b.n	90022ac4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

90022bca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90022bca:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90022bce:	b095      	sub	sp, #84	; 0x54
90022bd0:	9212      	str	r2, [sp, #72]	; 0x48
90022bd2:	9309      	str	r3, [sp, #36]	; 0x24
90022bd4:	9a23      	ldr	r2, [sp, #140]	; 0x8c
90022bd6:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
90022bda:	9013      	str	r0, [sp, #76]	; 0x4c
90022bdc:	930f      	str	r3, [sp, #60]	; 0x3c
90022bde:	6850      	ldr	r0, [r2, #4]
90022be0:	910e      	str	r1, [sp, #56]	; 0x38
90022be2:	6812      	ldr	r2, [r2, #0]
90022be4:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
90022be8:	fb00 1303 	mla	r3, r0, r3, r1
90022bec:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90022bf0:	930a      	str	r3, [sp, #40]	; 0x28
90022bf2:	9b26      	ldr	r3, [sp, #152]	; 0x98
90022bf4:	681b      	ldr	r3, [r3, #0]
90022bf6:	930d      	str	r3, [sp, #52]	; 0x34
90022bf8:	9b26      	ldr	r3, [sp, #152]	; 0x98
90022bfa:	685c      	ldr	r4, [r3, #4]
90022bfc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90022bfe:	3404      	adds	r4, #4
90022c00:	43db      	mvns	r3, r3
90022c02:	b2db      	uxtb	r3, r3
90022c04:	930b      	str	r3, [sp, #44]	; 0x2c
90022c06:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90022c08:	2b00      	cmp	r3, #0
90022c0a:	dc03      	bgt.n	90022c14 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
90022c0c:	9b12      	ldr	r3, [sp, #72]	; 0x48
90022c0e:	2b00      	cmp	r3, #0
90022c10:	f340 8255 	ble.w	900230be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
90022c14:	9b26      	ldr	r3, [sp, #152]	; 0x98
90022c16:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90022c1a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90022c1e:	1e48      	subs	r0, r1, #1
90022c20:	1e55      	subs	r5, r2, #1
90022c22:	9b09      	ldr	r3, [sp, #36]	; 0x24
90022c24:	2b00      	cmp	r3, #0
90022c26:	f340 80f9 	ble.w	90022e1c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
90022c2a:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
90022c2c:	9b20      	ldr	r3, [sp, #128]	; 0x80
90022c2e:	1436      	asrs	r6, r6, #16
90022c30:	ea4f 4323 	mov.w	r3, r3, asr #16
90022c34:	d406      	bmi.n	90022c44 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
90022c36:	4286      	cmp	r6, r0
90022c38:	da04      	bge.n	90022c44 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
90022c3a:	2b00      	cmp	r3, #0
90022c3c:	db02      	blt.n	90022c44 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
90022c3e:	42ab      	cmp	r3, r5
90022c40:	f2c0 80ed 	blt.w	90022e1e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
90022c44:	3601      	adds	r6, #1
90022c46:	f100 80da 	bmi.w	90022dfe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
90022c4a:	42b1      	cmp	r1, r6
90022c4c:	f2c0 80d7 	blt.w	90022dfe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
90022c50:	3301      	adds	r3, #1
90022c52:	f100 80d4 	bmi.w	90022dfe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
90022c56:	429a      	cmp	r2, r3
90022c58:	f2c0 80d1 	blt.w	90022dfe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
90022c5c:	9b09      	ldr	r3, [sp, #36]	; 0x24
90022c5e:	9311      	str	r3, [sp, #68]	; 0x44
90022c60:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90022c62:	930c      	str	r3, [sp, #48]	; 0x30
90022c64:	9b11      	ldr	r3, [sp, #68]	; 0x44
90022c66:	2b00      	cmp	r3, #0
90022c68:	f340 80fa 	ble.w	90022e60 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
90022c6c:	9826      	ldr	r0, [sp, #152]	; 0x98
90022c6e:	9b20      	ldr	r3, [sp, #128]	; 0x80
90022c70:	9a20      	ldr	r2, [sp, #128]	; 0x80
90022c72:	68c6      	ldr	r6, [r0, #12]
90022c74:	141d      	asrs	r5, r3, #16
90022c76:	981f      	ldr	r0, [sp, #124]	; 0x7c
90022c78:	f3c2 3103 	ubfx	r1, r2, #12, #4
90022c7c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90022c7e:	9a26      	ldr	r2, [sp, #152]	; 0x98
90022c80:	1400      	asrs	r0, r0, #16
90022c82:	f3c3 3303 	ubfx	r3, r3, #12, #4
90022c86:	6892      	ldr	r2, [r2, #8]
90022c88:	f100 813e 	bmi.w	90022f08 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
90022c8c:	1e57      	subs	r7, r2, #1
90022c8e:	42b8      	cmp	r0, r7
90022c90:	f280 813a 	bge.w	90022f08 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
90022c94:	2d00      	cmp	r5, #0
90022c96:	f2c0 8137 	blt.w	90022f08 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
90022c9a:	1e77      	subs	r7, r6, #1
90022c9c:	42bd      	cmp	r5, r7
90022c9e:	f280 8133 	bge.w	90022f08 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
90022ca2:	b212      	sxth	r2, r2
90022ca4:	fb05 0002 	mla	r0, r5, r2, r0
90022ca8:	9d0d      	ldr	r5, [sp, #52]	; 0x34
90022caa:	f815 a000 	ldrb.w	sl, [r5, r0]
90022cae:	182e      	adds	r6, r5, r0
90022cb0:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
90022cb4:	eb04 050a 	add.w	r5, r4, sl
90022cb8:	2b00      	cmp	r3, #0
90022cba:	f000 8117 	beq.w	90022eec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
90022cbe:	f896 c001 	ldrb.w	ip, [r6, #1]
90022cc2:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
90022cc6:	44a4      	add	ip, r4
90022cc8:	2900      	cmp	r1, #0
90022cca:	f000 8117 	beq.w	90022efc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
90022cce:	18b0      	adds	r0, r6, r2
90022cd0:	5cb2      	ldrb	r2, [r6, r2]
90022cd2:	7840      	ldrb	r0, [r0, #1]
90022cd4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90022cd8:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90022cdc:	4422      	add	r2, r4
90022cde:	4420      	add	r0, r4
90022ce0:	b29b      	uxth	r3, r3
90022ce2:	f89c 7002 	ldrb.w	r7, [ip, #2]
90022ce6:	b289      	uxth	r1, r1
90022ce8:	f895 b002 	ldrb.w	fp, [r5, #2]
90022cec:	9e0c      	ldr	r6, [sp, #48]	; 0x30
90022cee:	fb03 f901 	mul.w	r9, r3, r1
90022cf2:	011b      	lsls	r3, r3, #4
90022cf4:	f8b6 e000 	ldrh.w	lr, [r6]
90022cf8:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
90022cfc:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
90022d00:	eba3 0309 	sub.w	r3, r3, r9
90022d04:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
90022d08:	b289      	uxth	r1, r1
90022d0a:	f814 a00a 	ldrb.w	sl, [r4, sl]
90022d0e:	b29b      	uxth	r3, r3
90022d10:	eba8 0801 	sub.w	r8, r8, r1
90022d14:	435f      	muls	r7, r3
90022d16:	fa1f f888 	uxth.w	r8, r8
90022d1a:	9310      	str	r3, [sp, #64]	; 0x40
90022d1c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90022d1e:	fb08 770b 	mla	r7, r8, fp, r7
90022d22:	f892 b002 	ldrb.w	fp, [r2, #2]
90022d26:	fb01 770b 	mla	r7, r1, fp, r7
90022d2a:	f890 b002 	ldrb.w	fp, [r0, #2]
90022d2e:	fb09 770b 	mla	r7, r9, fp, r7
90022d32:	ea4f 2b2e 	mov.w	fp, lr, asr #8
90022d36:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
90022d3a:	f3c7 2707 	ubfx	r7, r7, #8, #8
90022d3e:	fb1b fb03 	smulbb	fp, fp, r3
90022d42:	9b10      	ldr	r3, [sp, #64]	; 0x40
90022d44:	fb07 b706 	mla	r7, r7, r6, fp
90022d48:	f895 b001 	ldrb.w	fp, [r5, #1]
90022d4c:	f89c 5001 	ldrb.w	r5, [ip, #1]
90022d50:	f89c c000 	ldrb.w	ip, [ip]
90022d54:	b2bf      	uxth	r7, r7
90022d56:	435d      	muls	r5, r3
90022d58:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90022d5a:	fb08 550b 	mla	r5, r8, fp, r5
90022d5e:	f892 b001 	ldrb.w	fp, [r2, #1]
90022d62:	fb01 550b 	mla	r5, r1, fp, r5
90022d66:	f890 b001 	ldrb.w	fp, [r0, #1]
90022d6a:	fb09 550b 	mla	r5, r9, fp, r5
90022d6e:	ea4f 0bee 	mov.w	fp, lr, asr #3
90022d72:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90022d76:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
90022d7a:	f3c5 2507 	ubfx	r5, r5, #8, #8
90022d7e:	fa5f fe8e 	uxtb.w	lr, lr
90022d82:	fb1b fb03 	smulbb	fp, fp, r3
90022d86:	9b10      	ldr	r3, [sp, #64]	; 0x40
90022d88:	fb03 f30c 	mul.w	r3, r3, ip
90022d8c:	f892 c000 	ldrb.w	ip, [r2]
90022d90:	fb05 b506 	mla	r5, r5, r6, fp
90022d94:	fb08 330a 	mla	r3, r8, sl, r3
90022d98:	b2ad      	uxth	r5, r5
90022d9a:	fb01 330c 	mla	r3, r1, ip, r3
90022d9e:	f890 c000 	ldrb.w	ip, [r0]
90022da2:	f105 0b01 	add.w	fp, r5, #1
90022da6:	fb09 3c0c 	mla	ip, r9, ip, r3
90022daa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90022dac:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
90022db0:	fb1e fe03 	smulbb	lr, lr, r3
90022db4:	f3cc 2c07 	ubfx	ip, ip, #8, #8
90022db8:	1c7b      	adds	r3, r7, #1
90022dba:	096d      	lsrs	r5, r5, #5
90022dbc:	fb0c e606 	mla	r6, ip, r6, lr
90022dc0:	eb03 2717 	add.w	r7, r3, r7, lsr #8
90022dc4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90022dc8:	b2b6      	uxth	r6, r6
90022dca:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
90022dce:	1c77      	adds	r7, r6, #1
90022dd0:	eb07 2716 	add.w	r7, r7, r6, lsr #8
90022dd4:	f3c7 27c4 	ubfx	r7, r7, #11, #5
90022dd8:	431f      	orrs	r7, r3
90022dda:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90022ddc:	433d      	orrs	r5, r7
90022dde:	801d      	strh	r5, [r3, #0]
90022de0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90022de2:	9a21      	ldr	r2, [sp, #132]	; 0x84
90022de4:	3302      	adds	r3, #2
90022de6:	930c      	str	r3, [sp, #48]	; 0x30
90022de8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90022dea:	4413      	add	r3, r2
90022dec:	9a22      	ldr	r2, [sp, #136]	; 0x88
90022dee:	931f      	str	r3, [sp, #124]	; 0x7c
90022df0:	9b20      	ldr	r3, [sp, #128]	; 0x80
90022df2:	4413      	add	r3, r2
90022df4:	9320      	str	r3, [sp, #128]	; 0x80
90022df6:	9b11      	ldr	r3, [sp, #68]	; 0x44
90022df8:	3b01      	subs	r3, #1
90022dfa:	9311      	str	r3, [sp, #68]	; 0x44
90022dfc:	e732      	b.n	90022c64 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
90022dfe:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90022e00:	9e21      	ldr	r6, [sp, #132]	; 0x84
90022e02:	4433      	add	r3, r6
90022e04:	9e22      	ldr	r6, [sp, #136]	; 0x88
90022e06:	931f      	str	r3, [sp, #124]	; 0x7c
90022e08:	9b20      	ldr	r3, [sp, #128]	; 0x80
90022e0a:	4433      	add	r3, r6
90022e0c:	9320      	str	r3, [sp, #128]	; 0x80
90022e0e:	9b09      	ldr	r3, [sp, #36]	; 0x24
90022e10:	3b01      	subs	r3, #1
90022e12:	9309      	str	r3, [sp, #36]	; 0x24
90022e14:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90022e16:	3302      	adds	r3, #2
90022e18:	930a      	str	r3, [sp, #40]	; 0x28
90022e1a:	e702      	b.n	90022c22 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
90022e1c:	d027      	beq.n	90022e6e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
90022e1e:	9b09      	ldr	r3, [sp, #36]	; 0x24
90022e20:	9821      	ldr	r0, [sp, #132]	; 0x84
90022e22:	3b01      	subs	r3, #1
90022e24:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
90022e26:	fb00 5003 	mla	r0, r0, r3, r5
90022e2a:	1400      	asrs	r0, r0, #16
90022e2c:	f53f af16 	bmi.w	90022c5c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90022e30:	3901      	subs	r1, #1
90022e32:	4288      	cmp	r0, r1
90022e34:	f6bf af12 	bge.w	90022c5c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90022e38:	9922      	ldr	r1, [sp, #136]	; 0x88
90022e3a:	9820      	ldr	r0, [sp, #128]	; 0x80
90022e3c:	fb01 0303 	mla	r3, r1, r3, r0
90022e40:	141b      	asrs	r3, r3, #16
90022e42:	f53f af0b 	bmi.w	90022c5c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90022e46:	3a01      	subs	r2, #1
90022e48:	4293      	cmp	r3, r2
90022e4a:	f6bf af07 	bge.w	90022c5c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90022e4e:	9b09      	ldr	r3, [sp, #36]	; 0x24
90022e50:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
90022e54:	9311      	str	r3, [sp, #68]	; 0x44
90022e56:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90022e58:	930c      	str	r3, [sp, #48]	; 0x30
90022e5a:	9b11      	ldr	r3, [sp, #68]	; 0x44
90022e5c:	2b00      	cmp	r3, #0
90022e5e:	dc70      	bgt.n	90022f42 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
90022e60:	9b09      	ldr	r3, [sp, #36]	; 0x24
90022e62:	9a0a      	ldr	r2, [sp, #40]	; 0x28
90022e64:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90022e68:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90022e6c:	930a      	str	r3, [sp, #40]	; 0x28
90022e6e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90022e70:	2b00      	cmp	r3, #0
90022e72:	f340 8124 	ble.w	900230be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
90022e76:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90022e7a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
90022e7c:	ee30 0a04 	vadd.f32	s0, s0, s8
90022e80:	ee70 0aa4 	vadd.f32	s1, s1, s9
90022e84:	eef0 6a62 	vmov.f32	s13, s5
90022e88:	eec7 7a00 	vdiv.f32	s15, s14, s0
90022e8c:	ee31 1a05 	vadd.f32	s2, s2, s10
90022e90:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90022e94:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
90022e98:	eef0 6a43 	vmov.f32	s13, s6
90022e9c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90022ea0:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
90022ea4:	ee20 7aa7 	vmul.f32	s14, s1, s15
90022ea8:	ee61 7a27 	vmul.f32	s15, s2, s15
90022eac:	ee77 2a62 	vsub.f32	s5, s14, s5
90022eb0:	ee37 3ac3 	vsub.f32	s6, s15, s6
90022eb4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90022eb8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90022ebc:	ee12 2a90 	vmov	r2, s5
90022ec0:	eef0 2a47 	vmov.f32	s5, s14
90022ec4:	fb92 f3f3 	sdiv	r3, r2, r3
90022ec8:	ee13 2a10 	vmov	r2, s6
90022ecc:	9321      	str	r3, [sp, #132]	; 0x84
90022ece:	9b1e      	ldr	r3, [sp, #120]	; 0x78
90022ed0:	eeb0 3a67 	vmov.f32	s6, s15
90022ed4:	fb92 f3f3 	sdiv	r3, r2, r3
90022ed8:	9322      	str	r3, [sp, #136]	; 0x88
90022eda:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90022edc:	9a12      	ldr	r2, [sp, #72]	; 0x48
90022ede:	3b01      	subs	r3, #1
90022ee0:	930e      	str	r3, [sp, #56]	; 0x38
90022ee2:	9b1e      	ldr	r3, [sp, #120]	; 0x78
90022ee4:	bf08      	it	eq
90022ee6:	4613      	moveq	r3, r2
90022ee8:	9309      	str	r3, [sp, #36]	; 0x24
90022eea:	e68c      	b.n	90022c06 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
90022eec:	b149      	cbz	r1, 90022f02 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
90022eee:	5cb2      	ldrb	r2, [r6, r2]
90022ef0:	4628      	mov	r0, r5
90022ef2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90022ef6:	4422      	add	r2, r4
90022ef8:	46ac      	mov	ip, r5
90022efa:	e6f1      	b.n	90022ce0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
90022efc:	4628      	mov	r0, r5
90022efe:	462a      	mov	r2, r5
90022f00:	e6ee      	b.n	90022ce0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
90022f02:	4628      	mov	r0, r5
90022f04:	462a      	mov	r2, r5
90022f06:	e7f7      	b.n	90022ef8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
90022f08:	1c47      	adds	r7, r0, #1
90022f0a:	f53f af69 	bmi.w	90022de0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
90022f0e:	42ba      	cmp	r2, r7
90022f10:	f6ff af66 	blt.w	90022de0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
90022f14:	1c6f      	adds	r7, r5, #1
90022f16:	f53f af63 	bmi.w	90022de0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
90022f1a:	42be      	cmp	r6, r7
90022f1c:	f6ff af60 	blt.w	90022de0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
90022f20:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
90022f22:	b236      	sxth	r6, r6
90022f24:	b212      	sxth	r2, r2
90022f26:	9002      	str	r0, [sp, #8]
90022f28:	9601      	str	r6, [sp, #4]
90022f2a:	9200      	str	r2, [sp, #0]
90022f2c:	9813      	ldr	r0, [sp, #76]	; 0x4c
90022f2e:	e9cd 1705 	strd	r1, r7, [sp, #20]
90022f32:	e9cd 5303 	strd	r5, r3, [sp, #12]
90022f36:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
90022f3a:	4623      	mov	r3, r4
90022f3c:	f7ff fd59 	bl	900229f2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
90022f40:	e74e      	b.n	90022de0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
90022f42:	9a20      	ldr	r2, [sp, #128]	; 0x80
90022f44:	9820      	ldr	r0, [sp, #128]	; 0x80
90022f46:	f3c2 3103 	ubfx	r1, r2, #12, #4
90022f4a:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
90022f4c:	9a26      	ldr	r2, [sp, #152]	; 0x98
90022f4e:	1400      	asrs	r0, r0, #16
90022f50:	142d      	asrs	r5, r5, #16
90022f52:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90022f54:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
90022f58:	f3c3 3303 	ubfx	r3, r3, #12, #4
90022f5c:	fb02 5000 	mla	r0, r2, r0, r5
90022f60:	9d0d      	ldr	r5, [sp, #52]	; 0x34
90022f62:	f815 9000 	ldrb.w	r9, [r5, r0]
90022f66:	182e      	adds	r6, r5, r0
90022f68:	eb09 0949 	add.w	r9, r9, r9, lsl #1
90022f6c:	eb04 0509 	add.w	r5, r4, r9
90022f70:	2b00      	cmp	r3, #0
90022f72:	f000 8096 	beq.w	900230a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
90022f76:	7877      	ldrb	r7, [r6, #1]
90022f78:	eb07 0747 	add.w	r7, r7, r7, lsl #1
90022f7c:	4427      	add	r7, r4
90022f7e:	2900      	cmp	r1, #0
90022f80:	f000 8097 	beq.w	900230b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
90022f84:	18b0      	adds	r0, r6, r2
90022f86:	5cb2      	ldrb	r2, [r6, r2]
90022f88:	7840      	ldrb	r0, [r0, #1]
90022f8a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90022f8e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90022f92:	4422      	add	r2, r4
90022f94:	4420      	add	r0, r4
90022f96:	b29b      	uxth	r3, r3
90022f98:	9e0c      	ldr	r6, [sp, #48]	; 0x30
90022f9a:	b289      	uxth	r1, r1
90022f9c:	f895 b002 	ldrb.w	fp, [r5, #2]
90022fa0:	f8b6 c000 	ldrh.w	ip, [r6]
90022fa4:	fb03 f801 	mul.w	r8, r3, r1
90022fa8:	011b      	lsls	r3, r3, #4
90022faa:	78be      	ldrb	r6, [r7, #2]
90022fac:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
90022fb0:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
90022fb4:	eba3 0308 	sub.w	r3, r3, r8
90022fb8:	f814 9009 	ldrb.w	r9, [r4, r9]
90022fbc:	b289      	uxth	r1, r1
90022fbe:	b29b      	uxth	r3, r3
90022fc0:	ebae 0e01 	sub.w	lr, lr, r1
90022fc4:	435e      	muls	r6, r3
90022fc6:	fa1f fe8e 	uxth.w	lr, lr
90022fca:	9310      	str	r3, [sp, #64]	; 0x40
90022fcc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90022fce:	fb0e 660b 	mla	r6, lr, fp, r6
90022fd2:	f892 b002 	ldrb.w	fp, [r2, #2]
90022fd6:	fb01 660b 	mla	r6, r1, fp, r6
90022fda:	f890 b002 	ldrb.w	fp, [r0, #2]
90022fde:	fb08 660b 	mla	r6, r8, fp, r6
90022fe2:	ea4f 2b2c 	mov.w	fp, ip, asr #8
90022fe6:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
90022fea:	f3c6 2607 	ubfx	r6, r6, #8, #8
90022fee:	fb1b fb03 	smulbb	fp, fp, r3
90022ff2:	9b10      	ldr	r3, [sp, #64]	; 0x40
90022ff4:	fb06 b60a 	mla	r6, r6, sl, fp
90022ff8:	f895 b001 	ldrb.w	fp, [r5, #1]
90022ffc:	787d      	ldrb	r5, [r7, #1]
90022ffe:	783f      	ldrb	r7, [r7, #0]
90023000:	b2b6      	uxth	r6, r6
90023002:	435d      	muls	r5, r3
90023004:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90023006:	fb0e 550b 	mla	r5, lr, fp, r5
9002300a:	f892 b001 	ldrb.w	fp, [r2, #1]
9002300e:	fb01 550b 	mla	r5, r1, fp, r5
90023012:	f890 b001 	ldrb.w	fp, [r0, #1]
90023016:	fb08 550b 	mla	r5, r8, fp, r5
9002301a:	ea4f 0bec 	mov.w	fp, ip, asr #3
9002301e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
90023022:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
90023026:	f3c5 2507 	ubfx	r5, r5, #8, #8
9002302a:	fa5f fc8c 	uxtb.w	ip, ip
9002302e:	fb1b fb03 	smulbb	fp, fp, r3
90023032:	9b10      	ldr	r3, [sp, #64]	; 0x40
90023034:	437b      	muls	r3, r7
90023036:	7817      	ldrb	r7, [r2, #0]
90023038:	fb05 b50a 	mla	r5, r5, sl, fp
9002303c:	fb0e 3309 	mla	r3, lr, r9, r3
90023040:	b2ad      	uxth	r5, r5
90023042:	fb01 3307 	mla	r3, r1, r7, r3
90023046:	7807      	ldrb	r7, [r0, #0]
90023048:	f105 0b01 	add.w	fp, r5, #1
9002304c:	fb08 3707 	mla	r7, r8, r7, r3
90023050:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90023052:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
90023056:	fb1c fc03 	smulbb	ip, ip, r3
9002305a:	f3c7 2707 	ubfx	r7, r7, #8, #8
9002305e:	1c73      	adds	r3, r6, #1
90023060:	096d      	lsrs	r5, r5, #5
90023062:	fb07 c70a 	mla	r7, r7, sl, ip
90023066:	eb03 2616 	add.w	r6, r3, r6, lsr #8
9002306a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9002306e:	b2bf      	uxth	r7, r7
90023070:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90023072:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
90023076:	1c7a      	adds	r2, r7, #1
90023078:	eb02 2217 	add.w	r2, r2, r7, lsr #8
9002307c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
90023080:	4316      	orrs	r6, r2
90023082:	9a21      	ldr	r2, [sp, #132]	; 0x84
90023084:	432e      	orrs	r6, r5
90023086:	f823 6b02 	strh.w	r6, [r3], #2
9002308a:	930c      	str	r3, [sp, #48]	; 0x30
9002308c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
9002308e:	4413      	add	r3, r2
90023090:	9a22      	ldr	r2, [sp, #136]	; 0x88
90023092:	931f      	str	r3, [sp, #124]	; 0x7c
90023094:	9b20      	ldr	r3, [sp, #128]	; 0x80
90023096:	4413      	add	r3, r2
90023098:	9320      	str	r3, [sp, #128]	; 0x80
9002309a:	9b11      	ldr	r3, [sp, #68]	; 0x44
9002309c:	3b01      	subs	r3, #1
9002309e:	9311      	str	r3, [sp, #68]	; 0x44
900230a0:	e6db      	b.n	90022e5a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
900230a2:	b149      	cbz	r1, 900230b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
900230a4:	5cb2      	ldrb	r2, [r6, r2]
900230a6:	4628      	mov	r0, r5
900230a8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
900230ac:	4422      	add	r2, r4
900230ae:	462f      	mov	r7, r5
900230b0:	e771      	b.n	90022f96 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
900230b2:	4628      	mov	r0, r5
900230b4:	462a      	mov	r2, r5
900230b6:	e76e      	b.n	90022f96 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
900230b8:	4628      	mov	r0, r5
900230ba:	462a      	mov	r2, r5
900230bc:	e7f7      	b.n	900230ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
900230be:	b015      	add	sp, #84	; 0x54
900230c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900230c4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
900230c4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
900230c8:	880f      	ldrh	r7, [r1, #0]
900230ca:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
900230ce:	023c      	lsls	r4, r7, #8
900230d0:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
900230d4:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
900230d8:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
900230dc:	017c      	lsls	r4, r7, #5
900230de:	00ff      	lsls	r7, r7, #3
900230e0:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
900230e4:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
900230e8:	b2ff      	uxtb	r7, r7
900230ea:	ea4b 0404 	orr.w	r4, fp, r4
900230ee:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
900230f2:	4327      	orrs	r7, r4
900230f4:	fb05 ca0e 	mla	sl, r5, lr, ip
900230f8:	2d00      	cmp	r5, #0
900230fa:	9701      	str	r7, [sp, #4]
900230fc:	eb02 080a 	add.w	r8, r2, sl
90023100:	db7e      	blt.n	90023200 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
90023102:	45a9      	cmp	r9, r5
90023104:	dd7c      	ble.n	90023200 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
90023106:	f1bc 0f00 	cmp.w	ip, #0
9002310a:	db77      	blt.n	900231fc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
9002310c:	45e6      	cmp	lr, ip
9002310e:	dd75      	ble.n	900231fc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
90023110:	f812 700a 	ldrb.w	r7, [r2, sl]
90023114:	eb07 0747 	add.w	r7, r7, r7, lsl #1
90023118:	441f      	add	r7, r3
9002311a:	f11c 0201 	adds.w	r2, ip, #1
9002311e:	d472      	bmi.n	90023206 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
90023120:	4596      	cmp	lr, r2
90023122:	dd70      	ble.n	90023206 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
90023124:	2800      	cmp	r0, #0
90023126:	d06e      	beq.n	90023206 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
90023128:	f898 4001 	ldrb.w	r4, [r8, #1]
9002312c:	eb04 0444 	add.w	r4, r4, r4, lsl #1
90023130:	441c      	add	r4, r3
90023132:	3501      	adds	r5, #1
90023134:	d46b      	bmi.n	9002320e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
90023136:	45a9      	cmp	r9, r5
90023138:	dd69      	ble.n	9002320e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
9002313a:	2e00      	cmp	r6, #0
9002313c:	d067      	beq.n	9002320e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
9002313e:	f1bc 0f00 	cmp.w	ip, #0
90023142:	db62      	blt.n	9002320a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
90023144:	45e6      	cmp	lr, ip
90023146:	dd60      	ble.n	9002320a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
90023148:	f818 500e 	ldrb.w	r5, [r8, lr]
9002314c:	eb05 0545 	add.w	r5, r5, r5, lsl #1
90023150:	441d      	add	r5, r3
90023152:	f11c 0201 	adds.w	r2, ip, #1
90023156:	d45d      	bmi.n	90023214 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
90023158:	4596      	cmp	lr, r2
9002315a:	dd5b      	ble.n	90023214 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
9002315c:	2800      	cmp	r0, #0
9002315e:	d059      	beq.n	90023214 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
90023160:	44c6      	add	lr, r8
90023162:	f89e 2001 	ldrb.w	r2, [lr, #1]
90023166:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9002316a:	4413      	add	r3, r2
9002316c:	b280      	uxth	r0, r0
9002316e:	f897 e002 	ldrb.w	lr, [r7, #2]
90023172:	b2b2      	uxth	r2, r6
90023174:	f897 9000 	ldrb.w	r9, [r7]
90023178:	787f      	ldrb	r7, [r7, #1]
9002317a:	fb00 f602 	mul.w	r6, r0, r2
9002317e:	0100      	lsls	r0, r0, #4
90023180:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
90023184:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
90023188:	1b80      	subs	r0, r0, r6
9002318a:	fa1f fc82 	uxth.w	ip, r2
9002318e:	b282      	uxth	r2, r0
90023190:	78a0      	ldrb	r0, [r4, #2]
90023192:	eba8 080c 	sub.w	r8, r8, ip
90023196:	4350      	muls	r0, r2
90023198:	fa1f f888 	uxth.w	r8, r8
9002319c:	fb08 0e0e 	mla	lr, r8, lr, r0
900231a0:	78a8      	ldrb	r0, [r5, #2]
900231a2:	fb0c e000 	mla	r0, ip, r0, lr
900231a6:	f893 e002 	ldrb.w	lr, [r3, #2]
900231aa:	fb06 0e0e 	mla	lr, r6, lr, r0
900231ae:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
900231b2:	f894 e000 	ldrb.w	lr, [r4]
900231b6:	fb02 fe0e 	mul.w	lr, r2, lr
900231ba:	fb08 e909 	mla	r9, r8, r9, lr
900231be:	f895 e000 	ldrb.w	lr, [r5]
900231c2:	fb0c 990e 	mla	r9, ip, lr, r9
900231c6:	f893 e000 	ldrb.w	lr, [r3]
900231ca:	785b      	ldrb	r3, [r3, #1]
900231cc:	fb06 9e0e 	mla	lr, r6, lr, r9
900231d0:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
900231d4:	ea4e 0e00 	orr.w	lr, lr, r0
900231d8:	7860      	ldrb	r0, [r4, #1]
900231da:	4350      	muls	r0, r2
900231dc:	786a      	ldrb	r2, [r5, #1]
900231de:	fb08 0007 	mla	r0, r8, r7, r0
900231e2:	fb0c 0202 	mla	r2, ip, r2, r0
900231e6:	fb06 2303 	mla	r3, r6, r3, r2
900231ea:	095b      	lsrs	r3, r3, #5
900231ec:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
900231f0:	ea4e 0303 	orr.w	r3, lr, r3
900231f4:	800b      	strh	r3, [r1, #0]
900231f6:	b003      	add	sp, #12
900231f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900231fc:	af01      	add	r7, sp, #4
900231fe:	e78c      	b.n	9002311a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
90023200:	ac01      	add	r4, sp, #4
90023202:	4627      	mov	r7, r4
90023204:	e795      	b.n	90023132 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
90023206:	ac01      	add	r4, sp, #4
90023208:	e793      	b.n	90023132 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
9002320a:	ad01      	add	r5, sp, #4
9002320c:	e7a1      	b.n	90023152 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
9002320e:	ab01      	add	r3, sp, #4
90023210:	461d      	mov	r5, r3
90023212:	e7ab      	b.n	9002316c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
90023214:	ab01      	add	r3, sp, #4
90023216:	e7a9      	b.n	9002316c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

90023218 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90023218:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002321c:	b08f      	sub	sp, #60	; 0x3c
9002321e:	920c      	str	r2, [sp, #48]	; 0x30
90023220:	9a1d      	ldr	r2, [sp, #116]	; 0x74
90023222:	900d      	str	r0, [sp, #52]	; 0x34
90023224:	910a      	str	r1, [sp, #40]	; 0x28
90023226:	6850      	ldr	r0, [r2, #4]
90023228:	9306      	str	r3, [sp, #24]
9002322a:	6812      	ldr	r2, [r2, #0]
9002322c:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
90023230:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
90023234:	fb00 1303 	mla	r3, r0, r3, r1
90023238:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9002323c:	9307      	str	r3, [sp, #28]
9002323e:	9b20      	ldr	r3, [sp, #128]	; 0x80
90023240:	681b      	ldr	r3, [r3, #0]
90023242:	9308      	str	r3, [sp, #32]
90023244:	9b20      	ldr	r3, [sp, #128]	; 0x80
90023246:	685c      	ldr	r4, [r3, #4]
90023248:	3404      	adds	r4, #4
9002324a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9002324c:	2b00      	cmp	r3, #0
9002324e:	dc03      	bgt.n	90023258 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
90023250:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90023252:	2b00      	cmp	r3, #0
90023254:	f340 81d5 	ble.w	90023602 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
90023258:	9b20      	ldr	r3, [sp, #128]	; 0x80
9002325a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002325e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90023262:	1e48      	subs	r0, r1, #1
90023264:	1e56      	subs	r6, r2, #1
90023266:	9b06      	ldr	r3, [sp, #24]
90023268:	2b00      	cmp	r3, #0
9002326a:	f340 80b6 	ble.w	900233da <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
9002326e:	ea5f 472b 	movs.w	r7, fp, asr #16
90023272:	ea4f 4325 	mov.w	r3, r5, asr #16
90023276:	d406      	bmi.n	90023286 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
90023278:	4287      	cmp	r7, r0
9002327a:	da04      	bge.n	90023286 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9002327c:	2b00      	cmp	r3, #0
9002327e:	db02      	blt.n	90023286 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
90023280:	42b3      	cmp	r3, r6
90023282:	f2c0 80ab 	blt.w	900233dc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
90023286:	3701      	adds	r7, #1
90023288:	f100 809c 	bmi.w	900233c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
9002328c:	42b9      	cmp	r1, r7
9002328e:	f2c0 8099 	blt.w	900233c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90023292:	3301      	adds	r3, #1
90023294:	f100 8096 	bmi.w	900233c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90023298:	429a      	cmp	r2, r3
9002329a:	f2c0 8093 	blt.w	900233c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
9002329e:	9b06      	ldr	r3, [sp, #24]
900232a0:	930b      	str	r3, [sp, #44]	; 0x2c
900232a2:	9b07      	ldr	r3, [sp, #28]
900232a4:	9309      	str	r3, [sp, #36]	; 0x24
900232a6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
900232a8:	2b00      	cmp	r3, #0
900232aa:	f340 80b4 	ble.w	90023416 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
900232ae:	9820      	ldr	r0, [sp, #128]	; 0x80
900232b0:	142e      	asrs	r6, r5, #16
900232b2:	9a20      	ldr	r2, [sp, #128]	; 0x80
900232b4:	f3cb 3303 	ubfx	r3, fp, #12, #4
900232b8:	68c7      	ldr	r7, [r0, #12]
900232ba:	ea5f 402b 	movs.w	r0, fp, asr #16
900232be:	f3c5 3103 	ubfx	r1, r5, #12, #4
900232c2:	6892      	ldr	r2, [r2, #8]
900232c4:	f100 80fb 	bmi.w	900234be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
900232c8:	f102 3cff 	add.w	ip, r2, #4294967295
900232cc:	4560      	cmp	r0, ip
900232ce:	f280 80f6 	bge.w	900234be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
900232d2:	2e00      	cmp	r6, #0
900232d4:	f2c0 80f3 	blt.w	900234be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
900232d8:	f107 3cff 	add.w	ip, r7, #4294967295
900232dc:	4566      	cmp	r6, ip
900232de:	f280 80ee 	bge.w	900234be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
900232e2:	b212      	sxth	r2, r2
900232e4:	fb06 0002 	mla	r0, r6, r2, r0
900232e8:	9e08      	ldr	r6, [sp, #32]
900232ea:	1837      	adds	r7, r6, r0
900232ec:	5c30      	ldrb	r0, [r6, r0]
900232ee:	eb00 0840 	add.w	r8, r0, r0, lsl #1
900232f2:	eb04 0c08 	add.w	ip, r4, r8
900232f6:	2b00      	cmp	r3, #0
900232f8:	f000 80d3 	beq.w	900234a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
900232fc:	787e      	ldrb	r6, [r7, #1]
900232fe:	eb06 0646 	add.w	r6, r6, r6, lsl #1
90023302:	4426      	add	r6, r4
90023304:	2900      	cmp	r1, #0
90023306:	f000 80d4 	beq.w	900234b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
9002330a:	18b8      	adds	r0, r7, r2
9002330c:	5cba      	ldrb	r2, [r7, r2]
9002330e:	7840      	ldrb	r0, [r0, #1]
90023310:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90023314:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90023318:	4422      	add	r2, r4
9002331a:	4420      	add	r0, r4
9002331c:	b29b      	uxth	r3, r3
9002331e:	78b7      	ldrb	r7, [r6, #2]
90023320:	b289      	uxth	r1, r1
90023322:	f89c a002 	ldrb.w	sl, [ip, #2]
90023326:	f89c c001 	ldrb.w	ip, [ip, #1]
9002332a:	fb03 f901 	mul.w	r9, r3, r1
9002332e:	011b      	lsls	r3, r3, #4
90023330:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
90023334:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
90023338:	eba3 0309 	sub.w	r3, r3, r9
9002333c:	b289      	uxth	r1, r1
9002333e:	b29b      	uxth	r3, r3
90023340:	ebae 0e01 	sub.w	lr, lr, r1
90023344:	435f      	muls	r7, r3
90023346:	fa1f fe8e 	uxth.w	lr, lr
9002334a:	fb0e 770a 	mla	r7, lr, sl, r7
9002334e:	f892 a002 	ldrb.w	sl, [r2, #2]
90023352:	fb01 770a 	mla	r7, r1, sl, r7
90023356:	f890 a002 	ldrb.w	sl, [r0, #2]
9002335a:	fb09 7a0a 	mla	sl, r9, sl, r7
9002335e:	f814 7008 	ldrb.w	r7, [r4, r8]
90023362:	f896 8000 	ldrb.w	r8, [r6]
90023366:	7876      	ldrb	r6, [r6, #1]
90023368:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
9002336c:	fb03 f808 	mul.w	r8, r3, r8
90023370:	4373      	muls	r3, r6
90023372:	fb0e 8807 	mla	r8, lr, r7, r8
90023376:	7817      	ldrb	r7, [r2, #0]
90023378:	fb0e 330c 	mla	r3, lr, ip, r3
9002337c:	fb01 8807 	mla	r8, r1, r7, r8
90023380:	7807      	ldrb	r7, [r0, #0]
90023382:	fb09 8707 	mla	r7, r9, r7, r8
90023386:	f3c7 27c4 	ubfx	r7, r7, #11, #5
9002338a:	ea47 070a 	orr.w	r7, r7, sl
9002338e:	f892 a001 	ldrb.w	sl, [r2, #1]
90023392:	fb01 310a 	mla	r1, r1, sl, r3
90023396:	f890 a001 	ldrb.w	sl, [r0, #1]
9002339a:	9b09      	ldr	r3, [sp, #36]	; 0x24
9002339c:	fb09 1a0a 	mla	sl, r9, sl, r1
900233a0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
900233a4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
900233a8:	ea47 070a 	orr.w	r7, r7, sl
900233ac:	801f      	strh	r7, [r3, #0]
900233ae:	9b09      	ldr	r3, [sp, #36]	; 0x24
900233b0:	3302      	adds	r3, #2
900233b2:	9309      	str	r3, [sp, #36]	; 0x24
900233b4:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
900233b6:	449b      	add	fp, r3
900233b8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
900233ba:	441d      	add	r5, r3
900233bc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
900233be:	3b01      	subs	r3, #1
900233c0:	930b      	str	r3, [sp, #44]	; 0x2c
900233c2:	e770      	b.n	900232a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
900233c4:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
900233c6:	449b      	add	fp, r3
900233c8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
900233ca:	441d      	add	r5, r3
900233cc:	9b06      	ldr	r3, [sp, #24]
900233ce:	3b01      	subs	r3, #1
900233d0:	9306      	str	r3, [sp, #24]
900233d2:	9b07      	ldr	r3, [sp, #28]
900233d4:	3302      	adds	r3, #2
900233d6:	9307      	str	r3, [sp, #28]
900233d8:	e745      	b.n	90023266 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
900233da:	d023      	beq.n	90023424 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
900233dc:	9b06      	ldr	r3, [sp, #24]
900233de:	981b      	ldr	r0, [sp, #108]	; 0x6c
900233e0:	3b01      	subs	r3, #1
900233e2:	fb00 b003 	mla	r0, r0, r3, fp
900233e6:	1400      	asrs	r0, r0, #16
900233e8:	f53f af59 	bmi.w	9002329e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
900233ec:	3901      	subs	r1, #1
900233ee:	4288      	cmp	r0, r1
900233f0:	f6bf af55 	bge.w	9002329e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
900233f4:	991c      	ldr	r1, [sp, #112]	; 0x70
900233f6:	fb01 5303 	mla	r3, r1, r3, r5
900233fa:	141b      	asrs	r3, r3, #16
900233fc:	f53f af4f 	bmi.w	9002329e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90023400:	3a01      	subs	r2, #1
90023402:	4293      	cmp	r3, r2
90023404:	f6bf af4b 	bge.w	9002329e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90023408:	9b06      	ldr	r3, [sp, #24]
9002340a:	9309      	str	r3, [sp, #36]	; 0x24
9002340c:	9b07      	ldr	r3, [sp, #28]
9002340e:	930b      	str	r3, [sp, #44]	; 0x2c
90023410:	9b09      	ldr	r3, [sp, #36]	; 0x24
90023412:	2b00      	cmp	r3, #0
90023414:	dc70      	bgt.n	900234f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
90023416:	9b06      	ldr	r3, [sp, #24]
90023418:	9a07      	ldr	r2, [sp, #28]
9002341a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9002341e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90023422:	9307      	str	r3, [sp, #28]
90023424:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90023426:	2b00      	cmp	r3, #0
90023428:	f340 80eb 	ble.w	90023602 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
9002342c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90023430:	9b18      	ldr	r3, [sp, #96]	; 0x60
90023432:	ee30 0a04 	vadd.f32	s0, s0, s8
90023436:	ee70 0aa4 	vadd.f32	s1, s1, s9
9002343a:	eef0 6a62 	vmov.f32	s13, s5
9002343e:	eec7 7a00 	vdiv.f32	s15, s14, s0
90023442:	ee31 1a05 	vadd.f32	s2, s2, s10
90023446:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002344a:	ee16 ba90 	vmov	fp, s13
9002344e:	eef0 6a43 	vmov.f32	s13, s6
90023452:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90023456:	ee16 5a90 	vmov	r5, s13
9002345a:	ee20 7aa7 	vmul.f32	s14, s1, s15
9002345e:	ee61 7a27 	vmul.f32	s15, s2, s15
90023462:	ee77 2a62 	vsub.f32	s5, s14, s5
90023466:	ee37 3ac3 	vsub.f32	s6, s15, s6
9002346a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9002346e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90023472:	ee12 2a90 	vmov	r2, s5
90023476:	eef0 2a47 	vmov.f32	s5, s14
9002347a:	fb92 f3f3 	sdiv	r3, r2, r3
9002347e:	ee13 2a10 	vmov	r2, s6
90023482:	931b      	str	r3, [sp, #108]	; 0x6c
90023484:	9b18      	ldr	r3, [sp, #96]	; 0x60
90023486:	eeb0 3a67 	vmov.f32	s6, s15
9002348a:	fb92 f3f3 	sdiv	r3, r2, r3
9002348e:	931c      	str	r3, [sp, #112]	; 0x70
90023490:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90023492:	9a0c      	ldr	r2, [sp, #48]	; 0x30
90023494:	3b01      	subs	r3, #1
90023496:	930a      	str	r3, [sp, #40]	; 0x28
90023498:	9b18      	ldr	r3, [sp, #96]	; 0x60
9002349a:	bf08      	it	eq
9002349c:	4613      	moveq	r3, r2
9002349e:	9306      	str	r3, [sp, #24]
900234a0:	e6d3      	b.n	9002324a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
900234a2:	b149      	cbz	r1, 900234b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
900234a4:	5cba      	ldrb	r2, [r7, r2]
900234a6:	4660      	mov	r0, ip
900234a8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
900234ac:	4422      	add	r2, r4
900234ae:	4666      	mov	r6, ip
900234b0:	e734      	b.n	9002331c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
900234b2:	4660      	mov	r0, ip
900234b4:	4662      	mov	r2, ip
900234b6:	e731      	b.n	9002331c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
900234b8:	4660      	mov	r0, ip
900234ba:	4662      	mov	r2, ip
900234bc:	e7f7      	b.n	900234ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
900234be:	f110 0c01 	adds.w	ip, r0, #1
900234c2:	f53f af74 	bmi.w	900233ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
900234c6:	4562      	cmp	r2, ip
900234c8:	f6ff af71 	blt.w	900233ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
900234cc:	f116 0c01 	adds.w	ip, r6, #1
900234d0:	f53f af6d 	bmi.w	900233ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
900234d4:	4567      	cmp	r7, ip
900234d6:	f6ff af6a 	blt.w	900233ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
900234da:	b23f      	sxth	r7, r7
900234dc:	b212      	sxth	r2, r2
900234de:	9701      	str	r7, [sp, #4]
900234e0:	9200      	str	r2, [sp, #0]
900234e2:	e9cd 3104 	strd	r3, r1, [sp, #16]
900234e6:	e9cd 0602 	strd	r0, r6, [sp, #8]
900234ea:	4623      	mov	r3, r4
900234ec:	980d      	ldr	r0, [sp, #52]	; 0x34
900234ee:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
900234f2:	f7ff fde7 	bl	900230c4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
900234f6:	e75a      	b.n	900233ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
900234f8:	9a20      	ldr	r2, [sp, #128]	; 0x80
900234fa:	ea4f 462b 	mov.w	r6, fp, asr #16
900234fe:	1428      	asrs	r0, r5, #16
90023500:	f3cb 3303 	ubfx	r3, fp, #12, #4
90023504:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
90023508:	f3c5 3103 	ubfx	r1, r5, #12, #4
9002350c:	fb02 6000 	mla	r0, r2, r0, r6
90023510:	9e08      	ldr	r6, [sp, #32]
90023512:	f816 8000 	ldrb.w	r8, [r6, r0]
90023516:	1837      	adds	r7, r6, r0
90023518:	eb08 0848 	add.w	r8, r8, r8, lsl #1
9002351c:	eb04 0c08 	add.w	ip, r4, r8
90023520:	2b00      	cmp	r3, #0
90023522:	d060      	beq.n	900235e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ce>
90023524:	787e      	ldrb	r6, [r7, #1]
90023526:	eb06 0646 	add.w	r6, r6, r6, lsl #1
9002352a:	4426      	add	r6, r4
9002352c:	2900      	cmp	r1, #0
9002352e:	d062      	beq.n	900235f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3de>
90023530:	18b8      	adds	r0, r7, r2
90023532:	5cba      	ldrb	r2, [r7, r2]
90023534:	7840      	ldrb	r0, [r0, #1]
90023536:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9002353a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
9002353e:	4422      	add	r2, r4
90023540:	4420      	add	r0, r4
90023542:	b29b      	uxth	r3, r3
90023544:	78b7      	ldrb	r7, [r6, #2]
90023546:	b289      	uxth	r1, r1
90023548:	f89c a002 	ldrb.w	sl, [ip, #2]
9002354c:	f89c c001 	ldrb.w	ip, [ip, #1]
90023550:	fb03 f901 	mul.w	r9, r3, r1
90023554:	011b      	lsls	r3, r3, #4
90023556:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
9002355a:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
9002355e:	eba3 0309 	sub.w	r3, r3, r9
90023562:	b289      	uxth	r1, r1
90023564:	b29b      	uxth	r3, r3
90023566:	ebae 0e01 	sub.w	lr, lr, r1
9002356a:	435f      	muls	r7, r3
9002356c:	fa1f fe8e 	uxth.w	lr, lr
90023570:	fb0e 770a 	mla	r7, lr, sl, r7
90023574:	f892 a002 	ldrb.w	sl, [r2, #2]
90023578:	fb01 770a 	mla	r7, r1, sl, r7
9002357c:	f890 a002 	ldrb.w	sl, [r0, #2]
90023580:	fb09 7a0a 	mla	sl, r9, sl, r7
90023584:	f814 7008 	ldrb.w	r7, [r4, r8]
90023588:	f896 8000 	ldrb.w	r8, [r6]
9002358c:	7876      	ldrb	r6, [r6, #1]
9002358e:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
90023592:	fb03 f808 	mul.w	r8, r3, r8
90023596:	4373      	muls	r3, r6
90023598:	7856      	ldrb	r6, [r2, #1]
9002359a:	fb0e 8807 	mla	r8, lr, r7, r8
9002359e:	7817      	ldrb	r7, [r2, #0]
900235a0:	fb0e 330c 	mla	r3, lr, ip, r3
900235a4:	fb01 8807 	mla	r8, r1, r7, r8
900235a8:	7807      	ldrb	r7, [r0, #0]
900235aa:	fb01 3306 	mla	r3, r1, r6, r3
900235ae:	fb09 8707 	mla	r7, r9, r7, r8
900235b2:	f3c7 27c4 	ubfx	r7, r7, #11, #5
900235b6:	ea47 070a 	orr.w	r7, r7, sl
900235ba:	f890 a001 	ldrb.w	sl, [r0, #1]
900235be:	fb09 3a0a 	mla	sl, r9, sl, r3
900235c2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
900235c4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
900235c8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
900235cc:	ea47 070a 	orr.w	r7, r7, sl
900235d0:	f823 7b02 	strh.w	r7, [r3], #2
900235d4:	930b      	str	r3, [sp, #44]	; 0x2c
900235d6:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
900235d8:	449b      	add	fp, r3
900235da:	9b1c      	ldr	r3, [sp, #112]	; 0x70
900235dc:	441d      	add	r5, r3
900235de:	9b09      	ldr	r3, [sp, #36]	; 0x24
900235e0:	3b01      	subs	r3, #1
900235e2:	9309      	str	r3, [sp, #36]	; 0x24
900235e4:	e714      	b.n	90023410 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
900235e6:	b149      	cbz	r1, 900235fc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e4>
900235e8:	5cba      	ldrb	r2, [r7, r2]
900235ea:	4660      	mov	r0, ip
900235ec:	eb02 0242 	add.w	r2, r2, r2, lsl #1
900235f0:	4422      	add	r2, r4
900235f2:	4666      	mov	r6, ip
900235f4:	e7a5      	b.n	90023542 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
900235f6:	4660      	mov	r0, ip
900235f8:	4662      	mov	r2, ip
900235fa:	e7a2      	b.n	90023542 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
900235fc:	4660      	mov	r0, ip
900235fe:	4662      	mov	r2, ip
90023600:	e7f7      	b.n	900235f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3da>
90023602:	b00f      	add	sp, #60	; 0x3c
90023604:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90023608 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
90023608:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002360c:	b085      	sub	sp, #20
9002360e:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
90023612:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
90023616:	9102      	str	r1, [sp, #8]
90023618:	2c00      	cmp	r4, #0
9002361a:	fb04 710c 	mla	r1, r4, ip, r7
9002361e:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
90023622:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
90023626:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
9002362a:	eb02 0e01 	add.w	lr, r2, r1
9002362e:	f2c0 8122 	blt.w	90023876 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
90023632:	45a0      	cmp	r8, r4
90023634:	f340 811f 	ble.w	90023876 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
90023638:	2f00      	cmp	r7, #0
9002363a:	f2c0 811a 	blt.w	90023872 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
9002363e:	45bc      	cmp	ip, r7
90023640:	f340 8117 	ble.w	90023872 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
90023644:	5c52      	ldrb	r2, [r2, r1]
90023646:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
9002364a:	1c7a      	adds	r2, r7, #1
9002364c:	f100 8116 	bmi.w	9002387c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
90023650:	4594      	cmp	ip, r2
90023652:	f340 8113 	ble.w	9002387c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
90023656:	2e00      	cmp	r6, #0
90023658:	f000 8112 	beq.w	90023880 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
9002365c:	f89e 2001 	ldrb.w	r2, [lr, #1]
90023660:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
90023664:	3401      	adds	r4, #1
90023666:	f100 810f 	bmi.w	90023888 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
9002366a:	45a0      	cmp	r8, r4
9002366c:	f340 810c 	ble.w	90023888 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
90023670:	2800      	cmp	r0, #0
90023672:	f000 810c 	beq.w	9002388e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
90023676:	2f00      	cmp	r7, #0
90023678:	f2c0 8104 	blt.w	90023884 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
9002367c:	45bc      	cmp	ip, r7
9002367e:	f340 8101 	ble.w	90023884 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
90023682:	f81e 200c 	ldrb.w	r2, [lr, ip]
90023686:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
9002368a:	3701      	adds	r7, #1
9002368c:	f100 8102 	bmi.w	90023894 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
90023690:	45bc      	cmp	ip, r7
90023692:	f340 80ff 	ble.w	90023894 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
90023696:	2e00      	cmp	r6, #0
90023698:	f000 80fe 	beq.w	90023898 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
9002369c:	44f4      	add	ip, lr
9002369e:	f89c 2001 	ldrb.w	r2, [ip, #1]
900236a2:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
900236a6:	b2b6      	uxth	r6, r6
900236a8:	b280      	uxth	r0, r0
900236aa:	ea4f 6a11 	mov.w	sl, r1, lsr #24
900236ae:	fb00 fe06 	mul.w	lr, r0, r6
900236b2:	0136      	lsls	r6, r6, #4
900236b4:	ea4f 6b15 	mov.w	fp, r5, lsr #24
900236b8:	ebce 1000 	rsb	r0, lr, r0, lsl #4
900236bc:	eba6 070e 	sub.w	r7, r6, lr
900236c0:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
900236c4:	ea4f 6914 	mov.w	r9, r4, lsr #24
900236c8:	b280      	uxth	r0, r0
900236ca:	b2bf      	uxth	r7, r7
900236cc:	1a1b      	subs	r3, r3, r0
900236ce:	ea4f 6812 	mov.w	r8, r2, lsr #24
900236d2:	fb0a f607 	mul.w	r6, sl, r7
900236d6:	b29b      	uxth	r3, r3
900236d8:	fb0b 6603 	mla	r6, fp, r3, r6
900236dc:	fb00 6609 	mla	r6, r0, r9, r6
900236e0:	fb0e 6608 	mla	r6, lr, r8, r6
900236e4:	f3c6 2607 	ubfx	r6, r6, #8, #8
900236e8:	9600      	str	r6, [sp, #0]
900236ea:	2e00      	cmp	r6, #0
900236ec:	f000 80be 	beq.w	9002386c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
900236f0:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
900236f4:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
900236f8:	9e02      	ldr	r6, [sp, #8]
900236fa:	fb0b fc0c 	mul.w	ip, fp, ip
900236fe:	fb0b f505 	mul.w	r5, fp, r5
90023702:	8836      	ldrh	r6, [r6, #0]
90023704:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
90023708:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
9002370c:	9501      	str	r5, [sp, #4]
9002370e:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
90023712:	44dc      	add	ip, fp
90023714:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023718:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
9002371c:	9503      	str	r5, [sp, #12]
9002371e:	9d01      	ldr	r5, [sp, #4]
90023720:	f505 7c80 	add.w	ip, r5, #256	; 0x100
90023724:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
90023728:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
9002372c:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
90023730:	fb0a fc0c 	mul.w	ip, sl, ip
90023734:	ea4f 2b15 	mov.w	fp, r5, lsr #8
90023738:	fb0a fa01 	mul.w	sl, sl, r1
9002373c:	ea4f 251c 	mov.w	r5, ip, lsr #8
90023740:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
90023744:	f50a 7180 	add.w	r1, sl, #256	; 0x100
90023748:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
9002374c:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
90023750:	4465      	add	r5, ip
90023752:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
90023756:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
9002375a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002375e:	fb09 fc0c 	mul.w	ip, r9, ip
90023762:	0a2d      	lsrs	r5, r5, #8
90023764:	fb09 f904 	mul.w	r9, r9, r4
90023768:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
9002376c:	ea4f 211c 	mov.w	r1, ip, lsr #8
90023770:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
90023774:	f509 7480 	add.w	r4, r9, #256	; 0x100
90023778:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
9002377c:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
90023780:	437d      	muls	r5, r7
90023782:	eb04 2919 	add.w	r9, r4, r9, lsr #8
90023786:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
9002378a:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
9002378e:	4461      	add	r1, ip
90023790:	fb08 f404 	mul.w	r4, r8, r4
90023794:	ea4f 2919 	mov.w	r9, r9, lsr #8
90023798:	fb08 f802 	mul.w	r8, r8, r2
9002379c:	0a09      	lsrs	r1, r1, #8
9002379e:	0a22      	lsrs	r2, r4, #8
900237a0:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
900237a4:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
900237a8:	fb07 f70a 	mul.w	r7, r7, sl
900237ac:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
900237b0:	4414      	add	r4, r2
900237b2:	f508 7280 	add.w	r2, r8, #256	; 0x100
900237b6:	0a24      	lsrs	r4, r4, #8
900237b8:	eb02 2818 	add.w	r8, r2, r8, lsr #8
900237bc:	9a03      	ldr	r2, [sp, #12]
900237be:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
900237c2:	fb02 5503 	mla	r5, r2, r3, r5
900237c6:	ea4f 2818 	mov.w	r8, r8, lsr #8
900237ca:	9a00      	ldr	r2, [sp, #0]
900237cc:	fb04 540e 	mla	r4, r4, lr, r5
900237d0:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
900237d4:	1235      	asrs	r5, r6, #8
900237d6:	fb01 4100 	mla	r1, r1, r0, r4
900237da:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
900237de:	0a09      	lsrs	r1, r1, #8
900237e0:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
900237e4:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
900237e8:	fb03 7101 	mla	r1, r3, r1, r7
900237ec:	fb0e 1e08 	mla	lr, lr, r8, r1
900237f0:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
900237f4:	fb00 e101 	mla	r1, r0, r1, lr
900237f8:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
900237fc:	b287      	uxth	r7, r0
900237fe:	0a09      	lsrs	r1, r1, #8
90023800:	437a      	muls	r2, r7
90023802:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
90023806:	1c53      	adds	r3, r2, #1
90023808:	4321      	orrs	r1, r4
9002380a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9002380e:	0c0a      	lsrs	r2, r1, #16
90023810:	f3c1 2407 	ubfx	r4, r1, #8, #8
90023814:	ea6f 2313 	mvn.w	r3, r3, lsr #8
90023818:	b2c8      	uxtb	r0, r1
9002381a:	fb12 f207 	smulbb	r2, r2, r7
9002381e:	fb14 f407 	smulbb	r4, r4, r7
90023822:	b2db      	uxtb	r3, r3
90023824:	fb10 f007 	smulbb	r0, r0, r7
90023828:	fb05 2503 	mla	r5, r5, r3, r2
9002382c:	10f2      	asrs	r2, r6, #3
9002382e:	00f6      	lsls	r6, r6, #3
90023830:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
90023834:	b2ad      	uxth	r5, r5
90023836:	b2f6      	uxtb	r6, r6
90023838:	fb02 4203 	mla	r2, r2, r3, r4
9002383c:	fb06 0303 	mla	r3, r6, r3, r0
90023840:	b294      	uxth	r4, r2
90023842:	b299      	uxth	r1, r3
90023844:	1c6b      	adds	r3, r5, #1
90023846:	1c62      	adds	r2, r4, #1
90023848:	eb03 2515 	add.w	r5, r3, r5, lsr #8
9002384c:	1c4b      	adds	r3, r1, #1
9002384e:	eb02 2214 	add.w	r2, r2, r4, lsr #8
90023852:	eb03 2311 	add.w	r3, r3, r1, lsr #8
90023856:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
9002385a:	0952      	lsrs	r2, r2, #5
9002385c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90023860:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90023864:	432b      	orrs	r3, r5
90023866:	4313      	orrs	r3, r2
90023868:	9a02      	ldr	r2, [sp, #8]
9002386a:	8013      	strh	r3, [r2, #0]
9002386c:	b005      	add	sp, #20
9002386e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90023872:	2500      	movs	r5, #0
90023874:	e6e9      	b.n	9002364a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
90023876:	2100      	movs	r1, #0
90023878:	460d      	mov	r5, r1
9002387a:	e6f3      	b.n	90023664 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
9002387c:	2100      	movs	r1, #0
9002387e:	e6f1      	b.n	90023664 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
90023880:	4631      	mov	r1, r6
90023882:	e6ef      	b.n	90023664 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
90023884:	2400      	movs	r4, #0
90023886:	e700      	b.n	9002368a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
90023888:	2200      	movs	r2, #0
9002388a:	4614      	mov	r4, r2
9002388c:	e70b      	b.n	900236a6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
9002388e:	4602      	mov	r2, r0
90023890:	4604      	mov	r4, r0
90023892:	e708      	b.n	900236a6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
90023894:	2200      	movs	r2, #0
90023896:	e706      	b.n	900236a6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
90023898:	4632      	mov	r2, r6
9002389a:	e704      	b.n	900236a6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

9002389c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9002389c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900238a0:	b09f      	sub	sp, #124	; 0x7c
900238a2:	921b      	str	r2, [sp, #108]	; 0x6c
900238a4:	9309      	str	r3, [sp, #36]	; 0x24
900238a6:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
900238a8:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
900238ac:	901d      	str	r0, [sp, #116]	; 0x74
900238ae:	931c      	str	r3, [sp, #112]	; 0x70
900238b0:	6850      	ldr	r0, [r2, #4]
900238b2:	9119      	str	r1, [sp, #100]	; 0x64
900238b4:	6812      	ldr	r2, [r2, #0]
900238b6:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
900238b8:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
900238bc:	fb00 1303 	mla	r3, r0, r3, r1
900238c0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
900238c4:	930c      	str	r3, [sp, #48]	; 0x30
900238c6:	9b30      	ldr	r3, [sp, #192]	; 0xc0
900238c8:	681b      	ldr	r3, [r3, #0]
900238ca:	9312      	str	r3, [sp, #72]	; 0x48
900238cc:	9b30      	ldr	r3, [sp, #192]	; 0xc0
900238ce:	685e      	ldr	r6, [r3, #4]
900238d0:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
900238d4:	3604      	adds	r6, #4
900238d6:	930d      	str	r3, [sp, #52]	; 0x34
900238d8:	9b19      	ldr	r3, [sp, #100]	; 0x64
900238da:	2b00      	cmp	r3, #0
900238dc:	dc03      	bgt.n	900238e6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
900238de:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
900238e0:	2b00      	cmp	r3, #0
900238e2:	f340 8387 	ble.w	90023ff4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
900238e6:	9b30      	ldr	r3, [sp, #192]	; 0xc0
900238e8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900238ec:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900238f0:	1e48      	subs	r0, r1, #1
900238f2:	1e57      	subs	r7, r2, #1
900238f4:	9b09      	ldr	r3, [sp, #36]	; 0x24
900238f6:	2b00      	cmp	r3, #0
900238f8:	f340 8194 	ble.w	90023c24 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x388>
900238fc:	9c29      	ldr	r4, [sp, #164]	; 0xa4
900238fe:	142b      	asrs	r3, r5, #16
90023900:	ea5f 4c24 	movs.w	ip, r4, asr #16
90023904:	d406      	bmi.n	90023914 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90023906:	4584      	cmp	ip, r0
90023908:	da04      	bge.n	90023914 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9002390a:	2b00      	cmp	r3, #0
9002390c:	db02      	blt.n	90023914 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9002390e:	42bb      	cmp	r3, r7
90023910:	f2c0 8189 	blt.w	90023c26 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90023914:	f11c 0c01 	adds.w	ip, ip, #1
90023918:	f100 8177 	bmi.w	90023c0a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
9002391c:	4561      	cmp	r1, ip
9002391e:	f2c0 8174 	blt.w	90023c0a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
90023922:	3301      	adds	r3, #1
90023924:	f100 8171 	bmi.w	90023c0a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
90023928:	429a      	cmp	r2, r3
9002392a:	f2c0 816e 	blt.w	90023c0a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
9002392e:	9b09      	ldr	r3, [sp, #36]	; 0x24
90023930:	9f0c      	ldr	r7, [sp, #48]	; 0x30
90023932:	931a      	str	r3, [sp, #104]	; 0x68
90023934:	9b1a      	ldr	r3, [sp, #104]	; 0x68
90023936:	2b00      	cmp	r3, #0
90023938:	f340 8193 	ble.w	90023c62 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c6>
9002393c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
9002393e:	ea4f 4c25 	mov.w	ip, r5, asr #16
90023942:	f3c5 3103 	ubfx	r1, r5, #12, #4
90023946:	f3c3 3203 	ubfx	r2, r3, #12, #4
9002394a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
9002394c:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
90023950:	9b29      	ldr	r3, [sp, #164]	; 0xa4
90023952:	141b      	asrs	r3, r3, #16
90023954:	f100 81d6 	bmi.w	90023d04 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
90023958:	f100 38ff 	add.w	r8, r0, #4294967295
9002395c:	4543      	cmp	r3, r8
9002395e:	f280 81d1 	bge.w	90023d04 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
90023962:	f1bc 0f00 	cmp.w	ip, #0
90023966:	f2c0 81cd 	blt.w	90023d04 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
9002396a:	f10e 38ff 	add.w	r8, lr, #4294967295
9002396e:	45c4      	cmp	ip, r8
90023970:	f280 81c8 	bge.w	90023d04 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
90023974:	b200      	sxth	r0, r0
90023976:	9c12      	ldr	r4, [sp, #72]	; 0x48
90023978:	fb0c 3300 	mla	r3, ip, r0, r3
9002397c:	eb04 0803 	add.w	r8, r4, r3
90023980:	5ce3      	ldrb	r3, [r4, r3]
90023982:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
90023986:	ea4f 6e13 	mov.w	lr, r3, lsr #24
9002398a:	2a00      	cmp	r2, #0
9002398c:	f000 81af 	beq.w	90023cee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90023990:	f898 c001 	ldrb.w	ip, [r8, #1]
90023994:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
90023998:	940e      	str	r4, [sp, #56]	; 0x38
9002399a:	0e24      	lsrs	r4, r4, #24
9002399c:	9415      	str	r4, [sp, #84]	; 0x54
9002399e:	b179      	cbz	r1, 900239c0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
900239a0:	eb08 0c00 	add.w	ip, r8, r0
900239a4:	f818 0000 	ldrb.w	r0, [r8, r0]
900239a8:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
900239ac:	900a      	str	r0, [sp, #40]	; 0x28
900239ae:	0e00      	lsrs	r0, r0, #24
900239b0:	9013      	str	r0, [sp, #76]	; 0x4c
900239b2:	f89c 0001 	ldrb.w	r0, [ip, #1]
900239b6:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
900239ba:	900f      	str	r0, [sp, #60]	; 0x3c
900239bc:	0e00      	lsrs	r0, r0, #24
900239be:	9016      	str	r0, [sp, #88]	; 0x58
900239c0:	b292      	uxth	r2, r2
900239c2:	9815      	ldr	r0, [sp, #84]	; 0x54
900239c4:	b289      	uxth	r1, r1
900239c6:	9c13      	ldr	r4, [sp, #76]	; 0x4c
900239c8:	fb02 f901 	mul.w	r9, r2, r1
900239cc:	0112      	lsls	r2, r2, #4
900239ce:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
900239d2:	eba2 0809 	sub.w	r8, r2, r9
900239d6:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
900239da:	b289      	uxth	r1, r1
900239dc:	fa1f f888 	uxth.w	r8, r8
900239e0:	1a52      	subs	r2, r2, r1
900239e2:	fb08 f000 	mul.w	r0, r8, r0
900239e6:	b292      	uxth	r2, r2
900239e8:	fb02 000e 	mla	r0, r2, lr, r0
900239ec:	fb01 0004 	mla	r0, r1, r4, r0
900239f0:	9c16      	ldr	r4, [sp, #88]	; 0x58
900239f2:	fb09 0004 	mla	r0, r9, r4, r0
900239f6:	f3c0 2007 	ubfx	r0, r0, #8, #8
900239fa:	2800      	cmp	r0, #0
900239fc:	f000 80fa 	beq.w	90023bf4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90023a00:	f1be 0fff 	cmp.w	lr, #255	; 0xff
90023a04:	d01b      	beq.n	90023a3e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90023a06:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
90023a0a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90023a0e:	fb0e fa0a 	mul.w	sl, lr, sl
90023a12:	fb0e fe03 	mul.w	lr, lr, r3
90023a16:	ea4f 231a 	mov.w	r3, sl, lsr #8
90023a1a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
90023a1e:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
90023a22:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90023a26:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
90023a2a:	4453      	add	r3, sl
90023a2c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023a30:	0a1b      	lsrs	r3, r3, #8
90023a32:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
90023a36:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90023a3a:	ea43 030c 	orr.w	r3, r3, ip
90023a3e:	9c15      	ldr	r4, [sp, #84]	; 0x54
90023a40:	2cff      	cmp	r4, #255	; 0xff
90023a42:	d021      	beq.n	90023a88 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
90023a44:	9c0e      	ldr	r4, [sp, #56]	; 0x38
90023a46:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
90023a4a:	9c15      	ldr	r4, [sp, #84]	; 0x54
90023a4c:	fb04 fb0b 	mul.w	fp, r4, fp
90023a50:	9c0e      	ldr	r4, [sp, #56]	; 0x38
90023a52:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90023a56:	9c15      	ldr	r4, [sp, #84]	; 0x54
90023a58:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90023a5c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90023a60:	fb04 fa0a 	mul.w	sl, r4, sl
90023a64:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90023a68:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90023a6c:	44de      	add	lr, fp
90023a6e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90023a72:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90023a76:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023a7a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90023a7e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90023a82:	ea4e 040a 	orr.w	r4, lr, sl
90023a86:	940e      	str	r4, [sp, #56]	; 0x38
90023a88:	9c13      	ldr	r4, [sp, #76]	; 0x4c
90023a8a:	2cff      	cmp	r4, #255	; 0xff
90023a8c:	d021      	beq.n	90023ad2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
90023a8e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
90023a90:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
90023a94:	9c13      	ldr	r4, [sp, #76]	; 0x4c
90023a96:	fb04 fb0b 	mul.w	fp, r4, fp
90023a9a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
90023a9c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90023aa0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
90023aa2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90023aa6:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90023aaa:	fb04 fa0a 	mul.w	sl, r4, sl
90023aae:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90023ab2:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90023ab6:	44de      	add	lr, fp
90023ab8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90023abc:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90023ac0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023ac4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90023ac8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90023acc:	ea4e 040a 	orr.w	r4, lr, sl
90023ad0:	940a      	str	r4, [sp, #40]	; 0x28
90023ad2:	9c16      	ldr	r4, [sp, #88]	; 0x58
90023ad4:	2cff      	cmp	r4, #255	; 0xff
90023ad6:	d021      	beq.n	90023b1c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x280>
90023ad8:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
90023ada:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
90023ade:	9c16      	ldr	r4, [sp, #88]	; 0x58
90023ae0:	fb04 fb0b 	mul.w	fp, r4, fp
90023ae4:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
90023ae6:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90023aea:	9c16      	ldr	r4, [sp, #88]	; 0x58
90023aec:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90023af0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90023af4:	fb04 fa0a 	mul.w	sl, r4, sl
90023af8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90023afc:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90023b00:	44de      	add	lr, fp
90023b02:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90023b06:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90023b0a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023b0e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90023b12:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90023b16:	ea4e 040a 	orr.w	r4, lr, sl
90023b1a:	940f      	str	r4, [sp, #60]	; 0x3c
90023b1c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
90023b1e:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
90023b22:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90023b26:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
90023b2a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
90023b2c:	fb08 fc0c 	mul.w	ip, r8, ip
90023b30:	fb02 cc0e 	mla	ip, r2, lr, ip
90023b34:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
90023b38:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
90023b3a:	fb01 cc0e 	mla	ip, r1, lr, ip
90023b3e:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
90023b42:	9c0e      	ldr	r4, [sp, #56]	; 0x38
90023b44:	fb09 cc0e 	mla	ip, r9, lr, ip
90023b48:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
90023b4c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
90023b4e:	fb08 f80e 	mul.w	r8, r8, lr
90023b52:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023b56:	fb02 8303 	mla	r3, r2, r3, r8
90023b5a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
90023b5c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90023b60:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
90023b64:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
90023b66:	fb01 330a 	mla	r3, r1, sl, r3
90023b6a:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
90023b6e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
90023b70:	fb09 3901 	mla	r9, r9, r1, r3
90023b74:	883b      	ldrh	r3, [r7, #0]
90023b76:	4342      	muls	r2, r0
90023b78:	ea4f 2919 	mov.w	r9, r9, lsr #8
90023b7c:	1c50      	adds	r0, r2, #1
90023b7e:	1219      	asrs	r1, r3, #8
90023b80:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
90023b84:	eb00 2012 	add.w	r0, r0, r2, lsr #8
90023b88:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
90023b8c:	ea4c 0c09 	orr.w	ip, ip, r9
90023b90:	ea6f 2010 	mvn.w	r0, r0, lsr #8
90023b94:	ea4f 421c 	mov.w	r2, ip, lsr #16
90023b98:	f3cc 2e07 	ubfx	lr, ip, #8, #8
90023b9c:	b2c0      	uxtb	r0, r0
90023b9e:	fb12 f204 	smulbb	r2, r2, r4
90023ba2:	fa5f fc8c 	uxtb.w	ip, ip
90023ba6:	fb1e fe04 	smulbb	lr, lr, r4
90023baa:	fb01 2100 	mla	r1, r1, r0, r2
90023bae:	10da      	asrs	r2, r3, #3
90023bb0:	fb1c fc04 	smulbb	ip, ip, r4
90023bb4:	00db      	lsls	r3, r3, #3
90023bb6:	b289      	uxth	r1, r1
90023bb8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
90023bbc:	b2db      	uxtb	r3, r3
90023bbe:	fb02 e200 	mla	r2, r2, r0, lr
90023bc2:	fb03 c300 	mla	r3, r3, r0, ip
90023bc6:	b292      	uxth	r2, r2
90023bc8:	fa1f fc83 	uxth.w	ip, r3
90023bcc:	1c4b      	adds	r3, r1, #1
90023bce:	eb03 2111 	add.w	r1, r3, r1, lsr #8
90023bd2:	f10c 0301 	add.w	r3, ip, #1
90023bd6:	eb03 231c 	add.w	r3, r3, ip, lsr #8
90023bda:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
90023bde:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90023be2:	430b      	orrs	r3, r1
90023be4:	1c51      	adds	r1, r2, #1
90023be6:	eb01 2212 	add.w	r2, r1, r2, lsr #8
90023bea:	0952      	lsrs	r2, r2, #5
90023bec:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90023bf0:	4313      	orrs	r3, r2
90023bf2:	803b      	strh	r3, [r7, #0]
90023bf4:	9b2b      	ldr	r3, [sp, #172]	; 0xac
90023bf6:	3702      	adds	r7, #2
90023bf8:	9a29      	ldr	r2, [sp, #164]	; 0xa4
90023bfa:	441a      	add	r2, r3
90023bfc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90023bfe:	441d      	add	r5, r3
90023c00:	9b1a      	ldr	r3, [sp, #104]	; 0x68
90023c02:	9229      	str	r2, [sp, #164]	; 0xa4
90023c04:	3b01      	subs	r3, #1
90023c06:	931a      	str	r3, [sp, #104]	; 0x68
90023c08:	e694      	b.n	90023934 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
90023c0a:	9b2b      	ldr	r3, [sp, #172]	; 0xac
90023c0c:	9c29      	ldr	r4, [sp, #164]	; 0xa4
90023c0e:	441c      	add	r4, r3
90023c10:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90023c12:	441d      	add	r5, r3
90023c14:	9b09      	ldr	r3, [sp, #36]	; 0x24
90023c16:	9429      	str	r4, [sp, #164]	; 0xa4
90023c18:	3b01      	subs	r3, #1
90023c1a:	9309      	str	r3, [sp, #36]	; 0x24
90023c1c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90023c1e:	3302      	adds	r3, #2
90023c20:	930c      	str	r3, [sp, #48]	; 0x30
90023c22:	e667      	b.n	900238f4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
90023c24:	d024      	beq.n	90023c70 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d4>
90023c26:	9b09      	ldr	r3, [sp, #36]	; 0x24
90023c28:	982b      	ldr	r0, [sp, #172]	; 0xac
90023c2a:	3b01      	subs	r3, #1
90023c2c:	9c29      	ldr	r4, [sp, #164]	; 0xa4
90023c2e:	fb00 4003 	mla	r0, r0, r3, r4
90023c32:	1400      	asrs	r0, r0, #16
90023c34:	f53f ae7b 	bmi.w	9002392e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90023c38:	3901      	subs	r1, #1
90023c3a:	4288      	cmp	r0, r1
90023c3c:	f6bf ae77 	bge.w	9002392e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90023c40:	992c      	ldr	r1, [sp, #176]	; 0xb0
90023c42:	fb01 5303 	mla	r3, r1, r3, r5
90023c46:	141b      	asrs	r3, r3, #16
90023c48:	f53f ae71 	bmi.w	9002392e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90023c4c:	3a01      	subs	r2, #1
90023c4e:	4293      	cmp	r3, r2
90023c50:	f6bf ae6d 	bge.w	9002392e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90023c54:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
90023c58:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
90023c5c:	f1bb 0f00 	cmp.w	fp, #0
90023c60:	dc70      	bgt.n	90023d44 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>
90023c62:	9b09      	ldr	r3, [sp, #36]	; 0x24
90023c64:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
90023c68:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90023c6a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
90023c6e:	930c      	str	r3, [sp, #48]	; 0x30
90023c70:	9b19      	ldr	r3, [sp, #100]	; 0x64
90023c72:	2b00      	cmp	r3, #0
90023c74:	f340 81be 	ble.w	90023ff4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
90023c78:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90023c7c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90023c7e:	ee30 0a04 	vadd.f32	s0, s0, s8
90023c82:	ee70 0aa4 	vadd.f32	s1, s1, s9
90023c86:	eef0 6a62 	vmov.f32	s13, s5
90023c8a:	eec7 7a00 	vdiv.f32	s15, s14, s0
90023c8e:	ee31 1a05 	vadd.f32	s2, s2, s10
90023c92:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90023c96:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
90023c9a:	eef0 6a43 	vmov.f32	s13, s6
90023c9e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90023ca2:	ee16 5a90 	vmov	r5, s13
90023ca6:	ee20 7aa7 	vmul.f32	s14, s1, s15
90023caa:	ee61 7a27 	vmul.f32	s15, s2, s15
90023cae:	ee77 2a62 	vsub.f32	s5, s14, s5
90023cb2:	ee37 3ac3 	vsub.f32	s6, s15, s6
90023cb6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90023cba:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90023cbe:	ee12 2a90 	vmov	r2, s5
90023cc2:	eef0 2a47 	vmov.f32	s5, s14
90023cc6:	fb92 f3f3 	sdiv	r3, r2, r3
90023cca:	ee13 2a10 	vmov	r2, s6
90023cce:	932b      	str	r3, [sp, #172]	; 0xac
90023cd0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90023cd2:	eeb0 3a67 	vmov.f32	s6, s15
90023cd6:	fb92 f3f3 	sdiv	r3, r2, r3
90023cda:	932c      	str	r3, [sp, #176]	; 0xb0
90023cdc:	9b19      	ldr	r3, [sp, #100]	; 0x64
90023cde:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
90023ce0:	3b01      	subs	r3, #1
90023ce2:	9319      	str	r3, [sp, #100]	; 0x64
90023ce4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90023ce6:	bf08      	it	eq
90023ce8:	4613      	moveq	r3, r2
90023cea:	9309      	str	r3, [sp, #36]	; 0x24
90023cec:	e5f4      	b.n	900238d8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
90023cee:	2900      	cmp	r1, #0
90023cf0:	f43f ae66 	beq.w	900239c0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
90023cf4:	f818 0000 	ldrb.w	r0, [r8, r0]
90023cf8:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
90023cfc:	900a      	str	r0, [sp, #40]	; 0x28
90023cfe:	0e00      	lsrs	r0, r0, #24
90023d00:	9013      	str	r0, [sp, #76]	; 0x4c
90023d02:	e65d      	b.n	900239c0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
90023d04:	f113 0801 	adds.w	r8, r3, #1
90023d08:	f53f af74 	bmi.w	90023bf4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90023d0c:	4540      	cmp	r0, r8
90023d0e:	f6ff af71 	blt.w	90023bf4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90023d12:	f11c 0801 	adds.w	r8, ip, #1
90023d16:	f53f af6d 	bmi.w	90023bf4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90023d1a:	45c6      	cmp	lr, r8
90023d1c:	f6ff af6a 	blt.w	90023bf4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90023d20:	9c1c      	ldr	r4, [sp, #112]	; 0x70
90023d22:	b200      	sxth	r0, r0
90023d24:	9302      	str	r3, [sp, #8]
90023d26:	fa0f f38e 	sxth.w	r3, lr
90023d2a:	9000      	str	r0, [sp, #0]
90023d2c:	9301      	str	r3, [sp, #4]
90023d2e:	4633      	mov	r3, r6
90023d30:	981d      	ldr	r0, [sp, #116]	; 0x74
90023d32:	e9cd 1405 	strd	r1, r4, [sp, #20]
90023d36:	e9cd c203 	strd	ip, r2, [sp, #12]
90023d3a:	4639      	mov	r1, r7
90023d3c:	9a12      	ldr	r2, [sp, #72]	; 0x48
90023d3e:	f7ff fc63 	bl	90023608 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
90023d42:	e757      	b.n	90023bf4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90023d44:	9b29      	ldr	r3, [sp, #164]	; 0xa4
90023d46:	f3c5 3003 	ubfx	r0, r5, #12, #4
90023d4a:	9c29      	ldr	r4, [sp, #164]	; 0xa4
90023d4c:	f3c3 3203 	ubfx	r2, r3, #12, #4
90023d50:	9b30      	ldr	r3, [sp, #192]	; 0xc0
90023d52:	1427      	asrs	r7, r4, #16
90023d54:	9c12      	ldr	r4, [sp, #72]	; 0x48
90023d56:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90023d5a:	142b      	asrs	r3, r5, #16
90023d5c:	fb01 7303 	mla	r3, r1, r3, r7
90023d60:	18e7      	adds	r7, r4, r3
90023d62:	5ce3      	ldrb	r3, [r4, r3]
90023d64:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
90023d68:	ea4f 6c13 	mov.w	ip, r3, lsr #24
90023d6c:	2a00      	cmp	r2, #0
90023d6e:	f000 8137 	beq.w	90023fe0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x744>
90023d72:	f897 e001 	ldrb.w	lr, [r7, #1]
90023d76:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
90023d7a:	9410      	str	r4, [sp, #64]	; 0x40
90023d7c:	0e24      	lsrs	r4, r4, #24
90023d7e:	9417      	str	r4, [sp, #92]	; 0x5c
90023d80:	b170      	cbz	r0, 90023da0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
90023d82:	eb07 0e01 	add.w	lr, r7, r1
90023d86:	5c79      	ldrb	r1, [r7, r1]
90023d88:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90023d8c:	910b      	str	r1, [sp, #44]	; 0x2c
90023d8e:	0e09      	lsrs	r1, r1, #24
90023d90:	9114      	str	r1, [sp, #80]	; 0x50
90023d92:	f89e 1001 	ldrb.w	r1, [lr, #1]
90023d96:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90023d9a:	9111      	str	r1, [sp, #68]	; 0x44
90023d9c:	0e09      	lsrs	r1, r1, #24
90023d9e:	9118      	str	r1, [sp, #96]	; 0x60
90023da0:	b292      	uxth	r2, r2
90023da2:	9917      	ldr	r1, [sp, #92]	; 0x5c
90023da4:	b280      	uxth	r0, r0
90023da6:	9c14      	ldr	r4, [sp, #80]	; 0x50
90023da8:	fb02 f800 	mul.w	r8, r2, r0
90023dac:	0112      	lsls	r2, r2, #4
90023dae:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
90023db2:	eba2 0e08 	sub.w	lr, r2, r8
90023db6:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
90023dba:	b280      	uxth	r0, r0
90023dbc:	fa1f fe8e 	uxth.w	lr, lr
90023dc0:	1a12      	subs	r2, r2, r0
90023dc2:	fb0e f101 	mul.w	r1, lr, r1
90023dc6:	b292      	uxth	r2, r2
90023dc8:	fb02 110c 	mla	r1, r2, ip, r1
90023dcc:	fb00 1104 	mla	r1, r0, r4, r1
90023dd0:	9c18      	ldr	r4, [sp, #96]	; 0x60
90023dd2:	fb08 1104 	mla	r1, r8, r4, r1
90023dd6:	f3c1 2107 	ubfx	r1, r1, #8, #8
90023dda:	2900      	cmp	r1, #0
90023ddc:	f000 80f5 	beq.w	90023fca <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72e>
90023de0:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
90023de4:	d019      	beq.n	90023e1a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x57e>
90023de6:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
90023dea:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90023dee:	fb0c fa0a 	mul.w	sl, ip, sl
90023df2:	fb0c fc03 	mul.w	ip, ip, r3
90023df6:	ea4f 231a 	mov.w	r3, sl, lsr #8
90023dfa:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
90023dfe:	f50c 7780 	add.w	r7, ip, #256	; 0x100
90023e02:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90023e06:	eb07 271c 	add.w	r7, r7, ip, lsr #8
90023e0a:	4453      	add	r3, sl
90023e0c:	0a3f      	lsrs	r7, r7, #8
90023e0e:	0a1b      	lsrs	r3, r3, #8
90023e10:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
90023e14:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90023e18:	433b      	orrs	r3, r7
90023e1a:	9c17      	ldr	r4, [sp, #92]	; 0x5c
90023e1c:	2cff      	cmp	r4, #255	; 0xff
90023e1e:	d020      	beq.n	90023e62 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c6>
90023e20:	9c10      	ldr	r4, [sp, #64]	; 0x40
90023e22:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
90023e26:	9c17      	ldr	r4, [sp, #92]	; 0x5c
90023e28:	4367      	muls	r7, r4
90023e2a:	9c10      	ldr	r4, [sp, #64]	; 0x40
90023e2c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90023e30:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90023e34:	9c17      	ldr	r4, [sp, #92]	; 0x5c
90023e36:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
90023e3a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90023e3e:	fb04 fa0a 	mul.w	sl, r4, sl
90023e42:	44bc      	add	ip, r7
90023e44:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90023e48:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023e4c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90023e50:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90023e54:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023e58:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90023e5c:	ea4c 040a 	orr.w	r4, ip, sl
90023e60:	9410      	str	r4, [sp, #64]	; 0x40
90023e62:	9c14      	ldr	r4, [sp, #80]	; 0x50
90023e64:	2cff      	cmp	r4, #255	; 0xff
90023e66:	d020      	beq.n	90023eaa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60e>
90023e68:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90023e6a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
90023e6e:	9c14      	ldr	r4, [sp, #80]	; 0x50
90023e70:	4367      	muls	r7, r4
90023e72:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90023e74:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90023e78:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90023e7c:	9c14      	ldr	r4, [sp, #80]	; 0x50
90023e7e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
90023e82:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90023e86:	fb04 fa0a 	mul.w	sl, r4, sl
90023e8a:	44bc      	add	ip, r7
90023e8c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90023e90:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023e94:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90023e98:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90023e9c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023ea0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90023ea4:	ea4c 040a 	orr.w	r4, ip, sl
90023ea8:	940b      	str	r4, [sp, #44]	; 0x2c
90023eaa:	9c18      	ldr	r4, [sp, #96]	; 0x60
90023eac:	2cff      	cmp	r4, #255	; 0xff
90023eae:	d020      	beq.n	90023ef2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x656>
90023eb0:	9c11      	ldr	r4, [sp, #68]	; 0x44
90023eb2:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
90023eb6:	9c18      	ldr	r4, [sp, #96]	; 0x60
90023eb8:	4367      	muls	r7, r4
90023eba:	9c11      	ldr	r4, [sp, #68]	; 0x44
90023ebc:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90023ec0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90023ec4:	9c18      	ldr	r4, [sp, #96]	; 0x60
90023ec6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
90023eca:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90023ece:	fb04 fa0a 	mul.w	sl, r4, sl
90023ed2:	44bc      	add	ip, r7
90023ed4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90023ed8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023edc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90023ee0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90023ee4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023ee8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90023eec:	ea4c 040a 	orr.w	r4, ip, sl
90023ef0:	9411      	str	r4, [sp, #68]	; 0x44
90023ef2:	9c10      	ldr	r4, [sp, #64]	; 0x40
90023ef4:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
90023ef8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90023efc:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
90023f00:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90023f02:	fb0e f707 	mul.w	r7, lr, r7
90023f06:	fb02 770c 	mla	r7, r2, ip, r7
90023f0a:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
90023f0e:	9c11      	ldr	r4, [sp, #68]	; 0x44
90023f10:	fb00 770c 	mla	r7, r0, ip, r7
90023f14:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
90023f18:	9c10      	ldr	r4, [sp, #64]	; 0x40
90023f1a:	fb08 770c 	mla	r7, r8, ip, r7
90023f1e:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
90023f22:	9c0d      	ldr	r4, [sp, #52]	; 0x34
90023f24:	fb0e fe0c 	mul.w	lr, lr, ip
90023f28:	0a3f      	lsrs	r7, r7, #8
90023f2a:	fb02 e303 	mla	r3, r2, r3, lr
90023f2e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
90023f30:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
90023f34:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
90023f38:	9a11      	ldr	r2, [sp, #68]	; 0x44
90023f3a:	fb00 330a 	mla	r3, r0, sl, r3
90023f3e:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
90023f42:	f8b9 0000 	ldrh.w	r0, [r9]
90023f46:	fb08 3c0c 	mla	ip, r8, ip, r3
90023f4a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90023f4c:	1202      	asrs	r2, r0, #8
90023f4e:	434b      	muls	r3, r1
90023f50:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023f54:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
90023f58:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
90023f5c:	1c59      	adds	r1, r3, #1
90023f5e:	ea47 070c 	orr.w	r7, r7, ip
90023f62:	eb01 2113 	add.w	r1, r1, r3, lsr #8
90023f66:	0c3b      	lsrs	r3, r7, #16
90023f68:	ea6f 2111 	mvn.w	r1, r1, lsr #8
90023f6c:	f3c7 2c07 	ubfx	ip, r7, #8, #8
90023f70:	b2ff      	uxtb	r7, r7
90023f72:	fb13 f304 	smulbb	r3, r3, r4
90023f76:	b2c9      	uxtb	r1, r1
90023f78:	fb1c fc04 	smulbb	ip, ip, r4
90023f7c:	fb02 3201 	mla	r2, r2, r1, r3
90023f80:	10c3      	asrs	r3, r0, #3
90023f82:	fb17 f704 	smulbb	r7, r7, r4
90023f86:	00c0      	lsls	r0, r0, #3
90023f88:	b292      	uxth	r2, r2
90023f8a:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
90023f8e:	b2c0      	uxtb	r0, r0
90023f90:	fb03 c301 	mla	r3, r3, r1, ip
90023f94:	f102 0c01 	add.w	ip, r2, #1
90023f98:	fb00 7001 	mla	r0, r0, r1, r7
90023f9c:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
90023fa0:	b280      	uxth	r0, r0
90023fa2:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
90023fa6:	b29b      	uxth	r3, r3
90023fa8:	1c42      	adds	r2, r0, #1
90023faa:	eb02 2210 	add.w	r2, r2, r0, lsr #8
90023fae:	f3c2 22c4 	ubfx	r2, r2, #11, #5
90023fb2:	ea42 020c 	orr.w	r2, r2, ip
90023fb6:	f103 0c01 	add.w	ip, r3, #1
90023fba:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
90023fbe:	095b      	lsrs	r3, r3, #5
90023fc0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90023fc4:	431a      	orrs	r2, r3
90023fc6:	f8a9 2000 	strh.w	r2, [r9]
90023fca:	9b2b      	ldr	r3, [sp, #172]	; 0xac
90023fcc:	f109 0902 	add.w	r9, r9, #2
90023fd0:	9a29      	ldr	r2, [sp, #164]	; 0xa4
90023fd2:	f10b 3bff 	add.w	fp, fp, #4294967295
90023fd6:	441a      	add	r2, r3
90023fd8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90023fda:	9229      	str	r2, [sp, #164]	; 0xa4
90023fdc:	441d      	add	r5, r3
90023fde:	e63d      	b.n	90023c5c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
90023fe0:	2800      	cmp	r0, #0
90023fe2:	f43f aedd 	beq.w	90023da0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
90023fe6:	5c79      	ldrb	r1, [r7, r1]
90023fe8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90023fec:	910b      	str	r1, [sp, #44]	; 0x2c
90023fee:	0e09      	lsrs	r1, r1, #24
90023ff0:	9114      	str	r1, [sp, #80]	; 0x50
90023ff2:	e6d5      	b.n	90023da0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
90023ff4:	b01f      	add	sp, #124	; 0x7c
90023ff6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90023ffa <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
90023ffa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90023ffe:	b089      	sub	sp, #36	; 0x24
90024000:	9101      	str	r1, [sp, #4]
90024002:	9801      	ldr	r0, [sp, #4]
90024004:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
90024008:	8800      	ldrh	r0, [r0, #0]
9002400a:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
9002400e:	1206      	asrs	r6, r0, #8
90024010:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
90024014:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
90024018:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9002401c:	9602      	str	r6, [sp, #8]
9002401e:	10c6      	asrs	r6, r0, #3
90024020:	00c0      	lsls	r0, r0, #3
90024022:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
90024026:	b2c0      	uxtb	r0, r0
90024028:	9603      	str	r6, [sp, #12]
9002402a:	9004      	str	r0, [sp, #16]
9002402c:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
90024030:	fb07 100c 	mla	r0, r7, ip, r1
90024034:	2f00      	cmp	r7, #0
90024036:	eb02 0e00 	add.w	lr, r2, r0
9002403a:	f2c0 810a 	blt.w	90024252 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
9002403e:	45b8      	cmp	r8, r7
90024040:	f340 8107 	ble.w	90024252 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
90024044:	2900      	cmp	r1, #0
90024046:	f2c0 8102 	blt.w	9002424e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
9002404a:	458c      	cmp	ip, r1
9002404c:	f340 80ff 	ble.w	9002424e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
90024050:	5c12      	ldrb	r2, [r2, r0]
90024052:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
90024056:	1c4a      	adds	r2, r1, #1
90024058:	f100 80fe 	bmi.w	90024258 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
9002405c:	4594      	cmp	ip, r2
9002405e:	f340 80fb 	ble.w	90024258 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
90024062:	2d00      	cmp	r5, #0
90024064:	f000 80fa 	beq.w	9002425c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
90024068:	f89e 2001 	ldrb.w	r2, [lr, #1]
9002406c:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
90024070:	3701      	adds	r7, #1
90024072:	f100 80f7 	bmi.w	90024264 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
90024076:	45b8      	cmp	r8, r7
90024078:	f340 80f4 	ble.w	90024264 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
9002407c:	2c00      	cmp	r4, #0
9002407e:	f000 80f4 	beq.w	9002426a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
90024082:	2900      	cmp	r1, #0
90024084:	eb0e 020c 	add.w	r2, lr, ip
90024088:	f2c0 80ea 	blt.w	90024260 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
9002408c:	458c      	cmp	ip, r1
9002408e:	f340 80e7 	ble.w	90024260 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
90024092:	f81e 700c 	ldrb.w	r7, [lr, ip]
90024096:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
9002409a:	3101      	adds	r1, #1
9002409c:	f100 80e8 	bmi.w	90024270 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
900240a0:	458c      	cmp	ip, r1
900240a2:	f340 80e5 	ble.w	90024270 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
900240a6:	2d00      	cmp	r5, #0
900240a8:	f000 80e4 	beq.w	90024274 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
900240ac:	7852      	ldrb	r2, [r2, #1]
900240ae:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
900240b2:	0e0b      	lsrs	r3, r1, #24
900240b4:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
900240b8:	ea4f 6a10 	mov.w	sl, r0, lsr #24
900240bc:	9300      	str	r3, [sp, #0]
900240be:	b2a4      	uxth	r4, r4
900240c0:	b2ab      	uxth	r3, r5
900240c2:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
900240c6:	ea4f 6b16 	mov.w	fp, r6, lsr #24
900240ca:	fb03 f904 	mul.w	r9, r3, r4
900240ce:	011b      	lsls	r3, r3, #4
900240d0:	fb0a f505 	mul.w	r5, sl, r5
900240d4:	ea4f 6817 	mov.w	r8, r7, lsr #24
900240d8:	eba3 0e09 	sub.w	lr, r3, r9
900240dc:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
900240e0:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
900240e4:	0a28      	lsrs	r0, r5, #8
900240e6:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
900240ea:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
900240ee:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
900240f2:	fb0a f303 	mul.w	r3, sl, r3
900240f6:	fb08 f707 	mul.w	r7, r8, r7
900240fa:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
900240fe:	4405      	add	r5, r0
90024100:	fb08 fc0c 	mul.w	ip, r8, ip
90024104:	b2a4      	uxth	r4, r4
90024106:	0a2d      	lsrs	r5, r5, #8
90024108:	fa1f fe8e 	uxth.w	lr, lr
9002410c:	1b12      	subs	r2, r2, r4
9002410e:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
90024112:	b292      	uxth	r2, r2
90024114:	9005      	str	r0, [sp, #20]
90024116:	f503 7080 	add.w	r0, r3, #256	; 0x100
9002411a:	eb00 2313 	add.w	r3, r0, r3, lsr #8
9002411e:	ea4f 201c 	mov.w	r0, ip, lsr #8
90024122:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
90024126:	0a1b      	lsrs	r3, r3, #8
90024128:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
9002412c:	9306      	str	r3, [sp, #24]
9002412e:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
90024132:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
90024136:	4460      	add	r0, ip
90024138:	fb0b f303 	mul.w	r3, fp, r3
9002413c:	fb0b f606 	mul.w	r6, fp, r6
90024140:	0a00      	lsrs	r0, r0, #8
90024142:	0a1d      	lsrs	r5, r3, #8
90024144:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
90024148:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
9002414c:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
90024150:	441d      	add	r5, r3
90024152:	f506 7380 	add.w	r3, r6, #256	; 0x100
90024156:	eb03 2616 	add.w	r6, r3, r6, lsr #8
9002415a:	f507 7380 	add.w	r3, r7, #256	; 0x100
9002415e:	0a2d      	lsrs	r5, r5, #8
90024160:	eb03 2317 	add.w	r3, r3, r7, lsr #8
90024164:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
90024168:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
9002416c:	0a36      	lsrs	r6, r6, #8
9002416e:	0a1b      	lsrs	r3, r3, #8
90024170:	fb05 f50e 	mul.w	r5, r5, lr
90024174:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
90024178:	9307      	str	r3, [sp, #28]
9002417a:	0e0b      	lsrs	r3, r1, #24
9002417c:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
90024180:	fb0e f606 	mul.w	r6, lr, r6
90024184:	435f      	muls	r7, r3
90024186:	4359      	muls	r1, r3
90024188:	9b05      	ldr	r3, [sp, #20]
9002418a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
9002418e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
90024192:	fb03 5502 	mla	r5, r3, r2, r5
90024196:	9b06      	ldr	r3, [sp, #24]
90024198:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
9002419c:	fb0e fe0b 	mul.w	lr, lr, fp
900241a0:	44bc      	add	ip, r7
900241a2:	f501 7780 	add.w	r7, r1, #256	; 0x100
900241a6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900241aa:	eb07 2111 	add.w	r1, r7, r1, lsr #8
900241ae:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900241b2:	0a09      	lsrs	r1, r1, #8
900241b4:	fb0c 5509 	mla	r5, ip, r9, r5
900241b8:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
900241bc:	fb00 5504 	mla	r5, r0, r4, r5
900241c0:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
900241c4:	9b07      	ldr	r3, [sp, #28]
900241c6:	fb02 6000 	mla	r0, r2, r0, r6
900241ca:	0a2d      	lsrs	r5, r5, #8
900241cc:	fb02 e20a 	mla	r2, r2, sl, lr
900241d0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
900241d4:	fb09 0001 	mla	r0, r9, r1, r0
900241d8:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
900241dc:	fb04 0003 	mla	r0, r4, r3, r0
900241e0:	9b00      	ldr	r3, [sp, #0]
900241e2:	fb04 2408 	mla	r4, r4, r8, r2
900241e6:	9a04      	ldr	r2, [sp, #16]
900241e8:	0a00      	lsrs	r0, r0, #8
900241ea:	fb09 4903 	mla	r9, r9, r3, r4
900241ee:	9b02      	ldr	r3, [sp, #8]
900241f0:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
900241f4:	ea6f 2929 	mvn.w	r9, r9, asr #8
900241f8:	4305      	orrs	r5, r0
900241fa:	fa5f f989 	uxtb.w	r9, r9
900241fe:	fb03 f109 	mul.w	r1, r3, r9
90024202:	9b03      	ldr	r3, [sp, #12]
90024204:	fb03 f309 	mul.w	r3, r3, r9
90024208:	fb02 f909 	mul.w	r9, r2, r9
9002420c:	1c4a      	adds	r2, r1, #1
9002420e:	1c58      	adds	r0, r3, #1
90024210:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90024214:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90024218:	0c2a      	lsrs	r2, r5, #16
9002421a:	0a2b      	lsrs	r3, r5, #8
9002421c:	eb02 2211 	add.w	r2, r2, r1, lsr #8
90024220:	eb03 2310 	add.w	r3, r3, r0, lsr #8
90024224:	0212      	lsls	r2, r2, #8
90024226:	00db      	lsls	r3, r3, #3
90024228:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
9002422c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90024230:	4313      	orrs	r3, r2
90024232:	f109 0201 	add.w	r2, r9, #1
90024236:	eb02 2919 	add.w	r9, r2, r9, lsr #8
9002423a:	eb05 2519 	add.w	r5, r5, r9, lsr #8
9002423e:	f3c5 05c4 	ubfx	r5, r5, #3, #5
90024242:	431d      	orrs	r5, r3
90024244:	9b01      	ldr	r3, [sp, #4]
90024246:	801d      	strh	r5, [r3, #0]
90024248:	b009      	add	sp, #36	; 0x24
9002424a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002424e:	2000      	movs	r0, #0
90024250:	e701      	b.n	90024056 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
90024252:	2600      	movs	r6, #0
90024254:	4630      	mov	r0, r6
90024256:	e70b      	b.n	90024070 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
90024258:	2600      	movs	r6, #0
9002425a:	e709      	b.n	90024070 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
9002425c:	462e      	mov	r6, r5
9002425e:	e707      	b.n	90024070 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
90024260:	2700      	movs	r7, #0
90024262:	e71a      	b.n	9002409a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
90024264:	2100      	movs	r1, #0
90024266:	460f      	mov	r7, r1
90024268:	e723      	b.n	900240b2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
9002426a:	4621      	mov	r1, r4
9002426c:	4627      	mov	r7, r4
9002426e:	e720      	b.n	900240b2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
90024270:	2100      	movs	r1, #0
90024272:	e71e      	b.n	900240b2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
90024274:	4629      	mov	r1, r5
90024276:	e71c      	b.n	900240b2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

90024278 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90024278:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002427c:	b09b      	sub	sp, #108	; 0x6c
9002427e:	9218      	str	r2, [sp, #96]	; 0x60
90024280:	9a29      	ldr	r2, [sp, #164]	; 0xa4
90024282:	9019      	str	r0, [sp, #100]	; 0x64
90024284:	9116      	str	r1, [sp, #88]	; 0x58
90024286:	6850      	ldr	r0, [r2, #4]
90024288:	9307      	str	r3, [sp, #28]
9002428a:	6812      	ldr	r2, [r2, #0]
9002428c:	9d26      	ldr	r5, [sp, #152]	; 0x98
9002428e:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
90024292:	fb00 1303 	mla	r3, r0, r3, r1
90024296:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9002429a:	930a      	str	r3, [sp, #40]	; 0x28
9002429c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
9002429e:	681b      	ldr	r3, [r3, #0]
900242a0:	930f      	str	r3, [sp, #60]	; 0x3c
900242a2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
900242a4:	685e      	ldr	r6, [r3, #4]
900242a6:	3604      	adds	r6, #4
900242a8:	9b16      	ldr	r3, [sp, #88]	; 0x58
900242aa:	2b00      	cmp	r3, #0
900242ac:	dc03      	bgt.n	900242b6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
900242ae:	9b18      	ldr	r3, [sp, #96]	; 0x60
900242b0:	2b00      	cmp	r3, #0
900242b2:	f340 8373 	ble.w	9002499c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
900242b6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
900242b8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900242bc:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900242c0:	1e48      	subs	r0, r1, #1
900242c2:	1e57      	subs	r7, r2, #1
900242c4:	9b07      	ldr	r3, [sp, #28]
900242c6:	2b00      	cmp	r3, #0
900242c8:	f340 818f 	ble.w	900245ea <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
900242cc:	9c25      	ldr	r4, [sp, #148]	; 0x94
900242ce:	142b      	asrs	r3, r5, #16
900242d0:	ea5f 4c24 	movs.w	ip, r4, asr #16
900242d4:	d406      	bmi.n	900242e4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
900242d6:	4584      	cmp	ip, r0
900242d8:	da04      	bge.n	900242e4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
900242da:	2b00      	cmp	r3, #0
900242dc:	db02      	blt.n	900242e4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
900242de:	42bb      	cmp	r3, r7
900242e0:	f2c0 8184 	blt.w	900245ec <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
900242e4:	f11c 0c01 	adds.w	ip, ip, #1
900242e8:	f100 8172 	bmi.w	900245d0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900242ec:	4561      	cmp	r1, ip
900242ee:	f2c0 816f 	blt.w	900245d0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900242f2:	3301      	adds	r3, #1
900242f4:	f100 816c 	bmi.w	900245d0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900242f8:	429a      	cmp	r2, r3
900242fa:	f2c0 8169 	blt.w	900245d0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900242fe:	9b07      	ldr	r3, [sp, #28]
90024300:	9f0a      	ldr	r7, [sp, #40]	; 0x28
90024302:	9317      	str	r3, [sp, #92]	; 0x5c
90024304:	9b17      	ldr	r3, [sp, #92]	; 0x5c
90024306:	2b00      	cmp	r3, #0
90024308:	f340 818e 	ble.w	90024628 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
9002430c:	9b25      	ldr	r3, [sp, #148]	; 0x94
9002430e:	ea4f 4c25 	mov.w	ip, r5, asr #16
90024312:	f3c5 3003 	ubfx	r0, r5, #12, #4
90024316:	f3c3 3203 	ubfx	r2, r3, #12, #4
9002431a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
9002431c:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
90024320:	9b25      	ldr	r3, [sp, #148]	; 0x94
90024322:	141b      	asrs	r3, r3, #16
90024324:	f100 81d1 	bmi.w	900246ca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90024328:	f101 38ff 	add.w	r8, r1, #4294967295
9002432c:	4543      	cmp	r3, r8
9002432e:	f280 81cc 	bge.w	900246ca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90024332:	f1bc 0f00 	cmp.w	ip, #0
90024336:	f2c0 81c8 	blt.w	900246ca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
9002433a:	f10e 38ff 	add.w	r8, lr, #4294967295
9002433e:	45c4      	cmp	ip, r8
90024340:	f280 81c3 	bge.w	900246ca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90024344:	b209      	sxth	r1, r1
90024346:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
90024348:	fb0c 3301 	mla	r3, ip, r1, r3
9002434c:	eb04 0803 	add.w	r8, r4, r3
90024350:	5ce3      	ldrb	r3, [r4, r3]
90024352:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
90024356:	ea4f 6e13 	mov.w	lr, r3, lsr #24
9002435a:	2a00      	cmp	r2, #0
9002435c:	f000 81aa 	beq.w	900246b4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43c>
90024360:	f898 c001 	ldrb.w	ip, [r8, #1]
90024364:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
90024368:	940b      	str	r4, [sp, #44]	; 0x2c
9002436a:	0e24      	lsrs	r4, r4, #24
9002436c:	9412      	str	r4, [sp, #72]	; 0x48
9002436e:	b178      	cbz	r0, 90024390 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
90024370:	eb08 0c01 	add.w	ip, r8, r1
90024374:	f818 1001 	ldrb.w	r1, [r8, r1]
90024378:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
9002437c:	9108      	str	r1, [sp, #32]
9002437e:	0e09      	lsrs	r1, r1, #24
90024380:	9110      	str	r1, [sp, #64]	; 0x40
90024382:	f89c 1001 	ldrb.w	r1, [ip, #1]
90024386:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
9002438a:	910c      	str	r1, [sp, #48]	; 0x30
9002438c:	0e09      	lsrs	r1, r1, #24
9002438e:	9113      	str	r1, [sp, #76]	; 0x4c
90024390:	b292      	uxth	r2, r2
90024392:	9912      	ldr	r1, [sp, #72]	; 0x48
90024394:	b280      	uxth	r0, r0
90024396:	9c10      	ldr	r4, [sp, #64]	; 0x40
90024398:	fb02 f900 	mul.w	r9, r2, r0
9002439c:	0112      	lsls	r2, r2, #4
9002439e:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
900243a2:	eba2 0809 	sub.w	r8, r2, r9
900243a6:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
900243aa:	b280      	uxth	r0, r0
900243ac:	fa1f f888 	uxth.w	r8, r8
900243b0:	1a12      	subs	r2, r2, r0
900243b2:	fb08 f101 	mul.w	r1, r8, r1
900243b6:	b292      	uxth	r2, r2
900243b8:	fb02 110e 	mla	r1, r2, lr, r1
900243bc:	fb00 1104 	mla	r1, r0, r4, r1
900243c0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
900243c2:	fb09 1104 	mla	r1, r9, r4, r1
900243c6:	f3c1 2107 	ubfx	r1, r1, #8, #8
900243ca:	2900      	cmp	r1, #0
900243cc:	f000 80f5 	beq.w	900245ba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
900243d0:	f1be 0fff 	cmp.w	lr, #255	; 0xff
900243d4:	d01b      	beq.n	9002440e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
900243d6:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
900243da:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
900243de:	fb0e fa0a 	mul.w	sl, lr, sl
900243e2:	fb0e fe03 	mul.w	lr, lr, r3
900243e6:	ea4f 231a 	mov.w	r3, sl, lsr #8
900243ea:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
900243ee:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
900243f2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
900243f6:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
900243fa:	4453      	add	r3, sl
900243fc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90024400:	0a1b      	lsrs	r3, r3, #8
90024402:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
90024406:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
9002440a:	ea43 030c 	orr.w	r3, r3, ip
9002440e:	9c12      	ldr	r4, [sp, #72]	; 0x48
90024410:	2cff      	cmp	r4, #255	; 0xff
90024412:	d021      	beq.n	90024458 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
90024414:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90024416:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
9002441a:	9c12      	ldr	r4, [sp, #72]	; 0x48
9002441c:	fb04 fb0b 	mul.w	fp, r4, fp
90024420:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90024422:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90024426:	9c12      	ldr	r4, [sp, #72]	; 0x48
90024428:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
9002442c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90024430:	fb04 fa0a 	mul.w	sl, r4, sl
90024434:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90024438:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
9002443c:	44de      	add	lr, fp
9002443e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90024442:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90024446:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002444a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
9002444e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90024452:	ea4e 040a 	orr.w	r4, lr, sl
90024456:	940b      	str	r4, [sp, #44]	; 0x2c
90024458:	9c10      	ldr	r4, [sp, #64]	; 0x40
9002445a:	2cff      	cmp	r4, #255	; 0xff
9002445c:	d021      	beq.n	900244a2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
9002445e:	9c08      	ldr	r4, [sp, #32]
90024460:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
90024464:	9c10      	ldr	r4, [sp, #64]	; 0x40
90024466:	fb04 fb0b 	mul.w	fp, r4, fp
9002446a:	9c08      	ldr	r4, [sp, #32]
9002446c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90024470:	9c10      	ldr	r4, [sp, #64]	; 0x40
90024472:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90024476:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
9002447a:	fb04 fa0a 	mul.w	sl, r4, sl
9002447e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90024482:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90024486:	44de      	add	lr, fp
90024488:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
9002448c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90024490:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90024494:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90024498:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
9002449c:	ea4e 040a 	orr.w	r4, lr, sl
900244a0:	9408      	str	r4, [sp, #32]
900244a2:	9c13      	ldr	r4, [sp, #76]	; 0x4c
900244a4:	2cff      	cmp	r4, #255	; 0xff
900244a6:	d021      	beq.n	900244ec <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
900244a8:	9c0c      	ldr	r4, [sp, #48]	; 0x30
900244aa:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
900244ae:	9c13      	ldr	r4, [sp, #76]	; 0x4c
900244b0:	fb04 fb0b 	mul.w	fp, r4, fp
900244b4:	9c0c      	ldr	r4, [sp, #48]	; 0x30
900244b6:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
900244ba:	9c13      	ldr	r4, [sp, #76]	; 0x4c
900244bc:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
900244c0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
900244c4:	fb04 fa0a 	mul.w	sl, r4, sl
900244c8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
900244cc:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
900244d0:	44de      	add	lr, fp
900244d2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
900244d6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900244da:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900244de:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
900244e2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
900244e6:	ea4e 040a 	orr.w	r4, lr, sl
900244ea:	940c      	str	r4, [sp, #48]	; 0x30
900244ec:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
900244ee:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
900244f2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
900244f6:	43c9      	mvns	r1, r1
900244f8:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
900244fc:	9c08      	ldr	r4, [sp, #32]
900244fe:	fb08 fc0c 	mul.w	ip, r8, ip
90024502:	fb02 cc0e 	mla	ip, r2, lr, ip
90024506:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
9002450a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
9002450c:	fb00 cc0e 	mla	ip, r0, lr, ip
90024510:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
90024514:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90024516:	fb09 cc0e 	mla	ip, r9, lr, ip
9002451a:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
9002451e:	fb08 f80e 	mul.w	r8, r8, lr
90024522:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90024526:	fa5f fe81 	uxtb.w	lr, r1
9002452a:	fb02 8303 	mla	r3, r2, r3, r8
9002452e:	9a08      	ldr	r2, [sp, #32]
90024530:	f8b7 8000 	ldrh.w	r8, [r7]
90024534:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90024538:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
9002453c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
9002453e:	ea4f 01c8 	mov.w	r1, r8, lsl #3
90024542:	fb00 330a 	mla	r3, r0, sl, r3
90024546:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
9002454a:	ea4f 2228 	mov.w	r2, r8, asr #8
9002454e:	fb09 3900 	mla	r9, r9, r0, r3
90024552:	ea4f 00e8 	mov.w	r0, r8, asr #3
90024556:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
9002455a:	b2c9      	uxtb	r1, r1
9002455c:	ea4f 2919 	mov.w	r9, r9, lsr #8
90024560:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
90024564:	fb02 f20e 	mul.w	r2, r2, lr
90024568:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
9002456c:	fb00 f00e 	mul.w	r0, r0, lr
90024570:	1c53      	adds	r3, r2, #1
90024572:	fb01 f10e 	mul.w	r1, r1, lr
90024576:	ea4c 0c09 	orr.w	ip, ip, r9
9002457a:	eb03 2212 	add.w	r2, r3, r2, lsr #8
9002457e:	ea4f 431c 	mov.w	r3, ip, lsr #16
90024582:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90024586:	4a60      	ldr	r2, [pc, #384]	; (90024708 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
90024588:	b2db      	uxtb	r3, r3
9002458a:	ea02 2203 	and.w	r2, r2, r3, lsl #8
9002458e:	1c43      	adds	r3, r0, #1
90024590:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90024594:	ea4f 231c 	mov.w	r3, ip, lsr #8
90024598:	eb03 2310 	add.w	r3, r3, r0, lsr #8
9002459c:	00db      	lsls	r3, r3, #3
9002459e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
900245a2:	4313      	orrs	r3, r2
900245a4:	1c4a      	adds	r2, r1, #1
900245a6:	eb02 2111 	add.w	r1, r2, r1, lsr #8
900245aa:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
900245ae:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
900245b2:	ea4c 0c03 	orr.w	ip, ip, r3
900245b6:	f8a7 c000 	strh.w	ip, [r7]
900245ba:	9b27      	ldr	r3, [sp, #156]	; 0x9c
900245bc:	3702      	adds	r7, #2
900245be:	9a25      	ldr	r2, [sp, #148]	; 0x94
900245c0:	441a      	add	r2, r3
900245c2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
900245c4:	441d      	add	r5, r3
900245c6:	9b17      	ldr	r3, [sp, #92]	; 0x5c
900245c8:	9225      	str	r2, [sp, #148]	; 0x94
900245ca:	3b01      	subs	r3, #1
900245cc:	9317      	str	r3, [sp, #92]	; 0x5c
900245ce:	e699      	b.n	90024304 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
900245d0:	9b27      	ldr	r3, [sp, #156]	; 0x9c
900245d2:	9c25      	ldr	r4, [sp, #148]	; 0x94
900245d4:	441c      	add	r4, r3
900245d6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
900245d8:	441d      	add	r5, r3
900245da:	9b07      	ldr	r3, [sp, #28]
900245dc:	9425      	str	r4, [sp, #148]	; 0x94
900245de:	3b01      	subs	r3, #1
900245e0:	9307      	str	r3, [sp, #28]
900245e2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
900245e4:	3302      	adds	r3, #2
900245e6:	930a      	str	r3, [sp, #40]	; 0x28
900245e8:	e66c      	b.n	900242c4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
900245ea:	d024      	beq.n	90024636 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3be>
900245ec:	9b07      	ldr	r3, [sp, #28]
900245ee:	9827      	ldr	r0, [sp, #156]	; 0x9c
900245f0:	3b01      	subs	r3, #1
900245f2:	9c25      	ldr	r4, [sp, #148]	; 0x94
900245f4:	fb00 4003 	mla	r0, r0, r3, r4
900245f8:	1400      	asrs	r0, r0, #16
900245fa:	f53f ae80 	bmi.w	900242fe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
900245fe:	3901      	subs	r1, #1
90024600:	4288      	cmp	r0, r1
90024602:	f6bf ae7c 	bge.w	900242fe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90024606:	9928      	ldr	r1, [sp, #160]	; 0xa0
90024608:	fb01 5303 	mla	r3, r1, r3, r5
9002460c:	141b      	asrs	r3, r3, #16
9002460e:	f53f ae76 	bmi.w	900242fe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90024612:	3a01      	subs	r2, #1
90024614:	4293      	cmp	r3, r2
90024616:	f6bf ae72 	bge.w	900242fe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
9002461a:	f8dd b01c 	ldr.w	fp, [sp, #28]
9002461e:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
90024622:	f1bb 0f00 	cmp.w	fp, #0
90024626:	dc71      	bgt.n	9002470c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
90024628:	9b07      	ldr	r3, [sp, #28]
9002462a:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
9002462e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90024630:	eb03 0344 	add.w	r3, r3, r4, lsl #1
90024634:	930a      	str	r3, [sp, #40]	; 0x28
90024636:	9b16      	ldr	r3, [sp, #88]	; 0x58
90024638:	2b00      	cmp	r3, #0
9002463a:	f340 81af 	ble.w	9002499c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
9002463e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90024642:	9b24      	ldr	r3, [sp, #144]	; 0x90
90024644:	ee30 0a04 	vadd.f32	s0, s0, s8
90024648:	ee70 0aa4 	vadd.f32	s1, s1, s9
9002464c:	eef0 6a62 	vmov.f32	s13, s5
90024650:	eec7 7a00 	vdiv.f32	s15, s14, s0
90024654:	ee31 1a05 	vadd.f32	s2, s2, s10
90024658:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002465c:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
90024660:	eef0 6a43 	vmov.f32	s13, s6
90024664:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90024668:	ee16 5a90 	vmov	r5, s13
9002466c:	ee20 7aa7 	vmul.f32	s14, s1, s15
90024670:	ee61 7a27 	vmul.f32	s15, s2, s15
90024674:	ee77 2a62 	vsub.f32	s5, s14, s5
90024678:	ee37 3ac3 	vsub.f32	s6, s15, s6
9002467c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90024680:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90024684:	ee12 2a90 	vmov	r2, s5
90024688:	eef0 2a47 	vmov.f32	s5, s14
9002468c:	fb92 f3f3 	sdiv	r3, r2, r3
90024690:	ee13 2a10 	vmov	r2, s6
90024694:	9327      	str	r3, [sp, #156]	; 0x9c
90024696:	9b24      	ldr	r3, [sp, #144]	; 0x90
90024698:	eeb0 3a67 	vmov.f32	s6, s15
9002469c:	fb92 f3f3 	sdiv	r3, r2, r3
900246a0:	9328      	str	r3, [sp, #160]	; 0xa0
900246a2:	9b16      	ldr	r3, [sp, #88]	; 0x58
900246a4:	9a18      	ldr	r2, [sp, #96]	; 0x60
900246a6:	3b01      	subs	r3, #1
900246a8:	9316      	str	r3, [sp, #88]	; 0x58
900246aa:	9b24      	ldr	r3, [sp, #144]	; 0x90
900246ac:	bf08      	it	eq
900246ae:	4613      	moveq	r3, r2
900246b0:	9307      	str	r3, [sp, #28]
900246b2:	e5f9      	b.n	900242a8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
900246b4:	2800      	cmp	r0, #0
900246b6:	f43f ae6b 	beq.w	90024390 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
900246ba:	f818 1001 	ldrb.w	r1, [r8, r1]
900246be:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
900246c2:	9108      	str	r1, [sp, #32]
900246c4:	0e09      	lsrs	r1, r1, #24
900246c6:	9110      	str	r1, [sp, #64]	; 0x40
900246c8:	e662      	b.n	90024390 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
900246ca:	f113 0801 	adds.w	r8, r3, #1
900246ce:	f53f af74 	bmi.w	900245ba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
900246d2:	4541      	cmp	r1, r8
900246d4:	f6ff af71 	blt.w	900245ba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
900246d8:	f11c 0801 	adds.w	r8, ip, #1
900246dc:	f53f af6d 	bmi.w	900245ba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
900246e0:	45c6      	cmp	lr, r8
900246e2:	f6ff af6a 	blt.w	900245ba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
900246e6:	b209      	sxth	r1, r1
900246e8:	e9cd 3c02 	strd	r3, ip, [sp, #8]
900246ec:	fa0f f38e 	sxth.w	r3, lr
900246f0:	9100      	str	r1, [sp, #0]
900246f2:	4639      	mov	r1, r7
900246f4:	9301      	str	r3, [sp, #4]
900246f6:	4633      	mov	r3, r6
900246f8:	e9cd 2004 	strd	r2, r0, [sp, #16]
900246fc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
900246fe:	9819      	ldr	r0, [sp, #100]	; 0x64
90024700:	f7ff fc7b 	bl	90023ffa <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
90024704:	e759      	b.n	900245ba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90024706:	bf00      	nop
90024708:	fffff800 	.word	0xfffff800
9002470c:	9b25      	ldr	r3, [sp, #148]	; 0x94
9002470e:	f3c5 3003 	ubfx	r0, r5, #12, #4
90024712:	9c25      	ldr	r4, [sp, #148]	; 0x94
90024714:	f3c3 3203 	ubfx	r2, r3, #12, #4
90024718:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
9002471a:	1427      	asrs	r7, r4, #16
9002471c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
9002471e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90024722:	142b      	asrs	r3, r5, #16
90024724:	fb01 7303 	mla	r3, r1, r3, r7
90024728:	18e7      	adds	r7, r4, r3
9002472a:	5ce3      	ldrb	r3, [r4, r3]
9002472c:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
90024730:	ea4f 6c13 	mov.w	ip, r3, lsr #24
90024734:	2a00      	cmp	r2, #0
90024736:	f000 8127 	beq.w	90024988 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
9002473a:	f897 e001 	ldrb.w	lr, [r7, #1]
9002473e:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
90024742:	940d      	str	r4, [sp, #52]	; 0x34
90024744:	0e24      	lsrs	r4, r4, #24
90024746:	9414      	str	r4, [sp, #80]	; 0x50
90024748:	b170      	cbz	r0, 90024768 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
9002474a:	eb07 0e01 	add.w	lr, r7, r1
9002474e:	5c79      	ldrb	r1, [r7, r1]
90024750:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90024754:	9109      	str	r1, [sp, #36]	; 0x24
90024756:	0e09      	lsrs	r1, r1, #24
90024758:	9111      	str	r1, [sp, #68]	; 0x44
9002475a:	f89e 1001 	ldrb.w	r1, [lr, #1]
9002475e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90024762:	910e      	str	r1, [sp, #56]	; 0x38
90024764:	0e09      	lsrs	r1, r1, #24
90024766:	9115      	str	r1, [sp, #84]	; 0x54
90024768:	b292      	uxth	r2, r2
9002476a:	9c11      	ldr	r4, [sp, #68]	; 0x44
9002476c:	b280      	uxth	r0, r0
9002476e:	fb02 f800 	mul.w	r8, r2, r0
90024772:	0112      	lsls	r2, r2, #4
90024774:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
90024778:	eba2 0e08 	sub.w	lr, r2, r8
9002477c:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
90024780:	9a14      	ldr	r2, [sp, #80]	; 0x50
90024782:	b280      	uxth	r0, r0
90024784:	fa1f fe8e 	uxth.w	lr, lr
90024788:	1a09      	subs	r1, r1, r0
9002478a:	fb0e f202 	mul.w	r2, lr, r2
9002478e:	b289      	uxth	r1, r1
90024790:	fb01 220c 	mla	r2, r1, ip, r2
90024794:	fb00 2204 	mla	r2, r0, r4, r2
90024798:	9c15      	ldr	r4, [sp, #84]	; 0x54
9002479a:	fb08 2204 	mla	r2, r8, r4, r2
9002479e:	f3c2 2207 	ubfx	r2, r2, #8, #8
900247a2:	2a00      	cmp	r2, #0
900247a4:	f000 80e5 	beq.w	90024972 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
900247a8:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
900247ac:	d019      	beq.n	900247e2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
900247ae:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
900247b2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
900247b6:	fb0c fa0a 	mul.w	sl, ip, sl
900247ba:	fb0c fc03 	mul.w	ip, ip, r3
900247be:	ea4f 231a 	mov.w	r3, sl, lsr #8
900247c2:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
900247c6:	f50c 7780 	add.w	r7, ip, #256	; 0x100
900247ca:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
900247ce:	eb07 271c 	add.w	r7, r7, ip, lsr #8
900247d2:	4453      	add	r3, sl
900247d4:	0a3f      	lsrs	r7, r7, #8
900247d6:	0a1b      	lsrs	r3, r3, #8
900247d8:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
900247dc:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
900247e0:	433b      	orrs	r3, r7
900247e2:	9c14      	ldr	r4, [sp, #80]	; 0x50
900247e4:	2cff      	cmp	r4, #255	; 0xff
900247e6:	d020      	beq.n	9002482a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
900247e8:	9c0d      	ldr	r4, [sp, #52]	; 0x34
900247ea:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
900247ee:	9c14      	ldr	r4, [sp, #80]	; 0x50
900247f0:	4367      	muls	r7, r4
900247f2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
900247f4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
900247f8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
900247fc:	9c14      	ldr	r4, [sp, #80]	; 0x50
900247fe:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
90024802:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90024806:	fb04 fa0a 	mul.w	sl, r4, sl
9002480a:	44bc      	add	ip, r7
9002480c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90024810:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90024814:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90024818:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
9002481c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90024820:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90024824:	ea4c 040a 	orr.w	r4, ip, sl
90024828:	940d      	str	r4, [sp, #52]	; 0x34
9002482a:	9c11      	ldr	r4, [sp, #68]	; 0x44
9002482c:	2cff      	cmp	r4, #255	; 0xff
9002482e:	d020      	beq.n	90024872 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
90024830:	9c09      	ldr	r4, [sp, #36]	; 0x24
90024832:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
90024836:	9c11      	ldr	r4, [sp, #68]	; 0x44
90024838:	4367      	muls	r7, r4
9002483a:	9c09      	ldr	r4, [sp, #36]	; 0x24
9002483c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90024840:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90024844:	9c11      	ldr	r4, [sp, #68]	; 0x44
90024846:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
9002484a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
9002484e:	fb04 fa0a 	mul.w	sl, r4, sl
90024852:	44bc      	add	ip, r7
90024854:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90024858:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002485c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90024860:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90024864:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90024868:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
9002486c:	ea4c 040a 	orr.w	r4, ip, sl
90024870:	9409      	str	r4, [sp, #36]	; 0x24
90024872:	9c15      	ldr	r4, [sp, #84]	; 0x54
90024874:	2cff      	cmp	r4, #255	; 0xff
90024876:	d020      	beq.n	900248ba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
90024878:	9c0e      	ldr	r4, [sp, #56]	; 0x38
9002487a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
9002487e:	9c15      	ldr	r4, [sp, #84]	; 0x54
90024880:	4367      	muls	r7, r4
90024882:	9c0e      	ldr	r4, [sp, #56]	; 0x38
90024884:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90024888:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
9002488c:	9c15      	ldr	r4, [sp, #84]	; 0x54
9002488e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
90024892:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90024896:	fb04 fa0a 	mul.w	sl, r4, sl
9002489a:	44bc      	add	ip, r7
9002489c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
900248a0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900248a4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
900248a8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900248ac:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900248b0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
900248b4:	ea4c 040a 	orr.w	r4, ip, sl
900248b8:	940e      	str	r4, [sp, #56]	; 0x38
900248ba:	9c0d      	ldr	r4, [sp, #52]	; 0x34
900248bc:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
900248c0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
900248c4:	43d2      	mvns	r2, r2
900248c6:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
900248ca:	9c09      	ldr	r4, [sp, #36]	; 0x24
900248cc:	b2d2      	uxtb	r2, r2
900248ce:	fb0e f707 	mul.w	r7, lr, r7
900248d2:	fb01 770c 	mla	r7, r1, ip, r7
900248d6:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
900248da:	9c0e      	ldr	r4, [sp, #56]	; 0x38
900248dc:	fb00 770c 	mla	r7, r0, ip, r7
900248e0:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
900248e4:	9c0d      	ldr	r4, [sp, #52]	; 0x34
900248e6:	fb08 770c 	mla	r7, r8, ip, r7
900248ea:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
900248ee:	fb0e fe0c 	mul.w	lr, lr, ip
900248f2:	0a3f      	lsrs	r7, r7, #8
900248f4:	fb01 e303 	mla	r3, r1, r3, lr
900248f8:	9909      	ldr	r1, [sp, #36]	; 0x24
900248fa:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
900248fe:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
90024902:	990e      	ldr	r1, [sp, #56]	; 0x38
90024904:	fb00 330a 	mla	r3, r0, sl, r3
90024908:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
9002490c:	fb08 3c0c 	mla	ip, r8, ip, r3
90024910:	f8b9 3000 	ldrh.w	r3, [r9]
90024914:	1218      	asrs	r0, r3, #8
90024916:	10d9      	asrs	r1, r3, #3
90024918:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002491c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
90024920:	00db      	lsls	r3, r3, #3
90024922:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
90024926:	4350      	muls	r0, r2
90024928:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
9002492c:	b2db      	uxtb	r3, r3
9002492e:	4351      	muls	r1, r2
90024930:	ea47 070c 	orr.w	r7, r7, ip
90024934:	4353      	muls	r3, r2
90024936:	1c42      	adds	r2, r0, #1
90024938:	eb02 2010 	add.w	r0, r2, r0, lsr #8
9002493c:	0c3a      	lsrs	r2, r7, #16
9002493e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90024942:	4a18      	ldr	r2, [pc, #96]	; (900249a4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
90024944:	b2c0      	uxtb	r0, r0
90024946:	ea02 2000 	and.w	r0, r2, r0, lsl #8
9002494a:	1c4a      	adds	r2, r1, #1
9002494c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90024950:	0a3a      	lsrs	r2, r7, #8
90024952:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90024956:	00c9      	lsls	r1, r1, #3
90024958:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
9002495c:	4301      	orrs	r1, r0
9002495e:	1c58      	adds	r0, r3, #1
90024960:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90024964:	eb07 2710 	add.w	r7, r7, r0, lsr #8
90024968:	f3c7 00c4 	ubfx	r0, r7, #3, #5
9002496c:	4308      	orrs	r0, r1
9002496e:	f8a9 0000 	strh.w	r0, [r9]
90024972:	9b27      	ldr	r3, [sp, #156]	; 0x9c
90024974:	f109 0902 	add.w	r9, r9, #2
90024978:	9a25      	ldr	r2, [sp, #148]	; 0x94
9002497a:	f10b 3bff 	add.w	fp, fp, #4294967295
9002497e:	441a      	add	r2, r3
90024980:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90024982:	9225      	str	r2, [sp, #148]	; 0x94
90024984:	441d      	add	r5, r3
90024986:	e64c      	b.n	90024622 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
90024988:	2800      	cmp	r0, #0
9002498a:	f43f aeed 	beq.w	90024768 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
9002498e:	5c79      	ldrb	r1, [r7, r1]
90024990:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90024994:	9109      	str	r1, [sp, #36]	; 0x24
90024996:	0e09      	lsrs	r1, r1, #24
90024998:	9111      	str	r1, [sp, #68]	; 0x44
9002499a:	e6e5      	b.n	90024768 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
9002499c:	b01b      	add	sp, #108	; 0x6c
9002499e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900249a2:	bf00      	nop
900249a4:	fffff800 	.word	0xfffff800

900249a8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
900249a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900249ac:	b085      	sub	sp, #20
900249ae:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
900249b2:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
900249b6:	2800      	cmp	r0, #0
900249b8:	9103      	str	r1, [sp, #12]
900249ba:	fb00 7406 	mla	r4, r0, r6, r7
900249be:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
900249c2:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
900249c6:	eb02 0544 	add.w	r5, r2, r4, lsl #1
900249ca:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
900249ce:	eb03 0904 	add.w	r9, r3, r4
900249d2:	9501      	str	r5, [sp, #4]
900249d4:	f2c0 8150 	blt.w	90024c78 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
900249d8:	4583      	cmp	fp, r0
900249da:	f340 814d 	ble.w	90024c78 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
900249de:	2f00      	cmp	r7, #0
900249e0:	f2c0 8146 	blt.w	90024c70 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
900249e4:	42be      	cmp	r6, r7
900249e6:	f340 8143 	ble.w	90024c70 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
900249ea:	f813 c004 	ldrb.w	ip, [r3, r4]
900249ee:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
900249f2:	f64f 041f 	movw	r4, #63519	; 0xf81f
900249f6:	ea4f 02ec 	mov.w	r2, ip, asr #3
900249fa:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
900249fe:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90024a02:	4355      	muls	r5, r2
90024a04:	fb0c f203 	mul.w	r2, ip, r3
90024a08:	ea04 1355 	and.w	r3, r4, r5, lsr #5
90024a0c:	f605 0501 	addw	r5, r5, #2049	; 0x801
90024a10:	441d      	add	r5, r3
90024a12:	f102 0320 	add.w	r3, r2, #32
90024a16:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90024a1a:	ea04 1455 	and.w	r4, r4, r5, lsr #5
90024a1e:	0a1b      	lsrs	r3, r3, #8
90024a20:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90024a24:	431c      	orrs	r4, r3
90024a26:	1c7b      	adds	r3, r7, #1
90024a28:	f100 812b 	bmi.w	90024c82 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
90024a2c:	429e      	cmp	r6, r3
90024a2e:	f340 8128 	ble.w	90024c82 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
90024a32:	2900      	cmp	r1, #0
90024a34:	f000 8128 	beq.w	90024c88 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
90024a38:	9a01      	ldr	r2, [sp, #4]
90024a3a:	f899 3001 	ldrb.w	r3, [r9, #1]
90024a3e:	8855      	ldrh	r5, [r2, #2]
90024a40:	ea4f 08e3 	mov.w	r8, r3, asr #3
90024a44:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
90024a48:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90024a4c:	fb08 f802 	mul.w	r8, r8, r2
90024a50:	f64f 021f 	movw	r2, #63519	; 0xf81f
90024a54:	435d      	muls	r5, r3
90024a56:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
90024a5a:	f608 0801 	addw	r8, r8, #2049	; 0x801
90024a5e:	44d0      	add	r8, sl
90024a60:	f105 0a20 	add.w	sl, r5, #32
90024a64:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
90024a68:	ea02 1258 	and.w	r2, r2, r8, lsr #5
90024a6c:	0a2d      	lsrs	r5, r5, #8
90024a6e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90024a72:	432a      	orrs	r2, r5
90024a74:	3001      	adds	r0, #1
90024a76:	f100 810d 	bmi.w	90024c94 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
90024a7a:	4583      	cmp	fp, r0
90024a7c:	f340 810a 	ble.w	90024c94 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
90024a80:	f1be 0f00 	cmp.w	lr, #0
90024a84:	f000 810b 	beq.w	90024c9e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
90024a88:	2f00      	cmp	r7, #0
90024a8a:	f2c0 8100 	blt.w	90024c8e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
90024a8e:	42be      	cmp	r6, r7
90024a90:	f340 80fd 	ble.w	90024c8e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
90024a94:	9801      	ldr	r0, [sp, #4]
90024a96:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
90024a9a:	f819 5006 	ldrb.w	r5, [r9, r6]
90024a9e:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
90024aa2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
90024aa6:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
90024aaa:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
90024aae:	fb0a fa00 	mul.w	sl, sl, r0
90024ab2:	fb05 f808 	mul.w	r8, r5, r8
90024ab6:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
90024aba:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
90024abe:	4482      	add	sl, r0
90024ac0:	f108 0020 	add.w	r0, r8, #32
90024ac4:	eb00 2018 	add.w	r0, r0, r8, lsr #8
90024ac8:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
90024acc:	0a00      	lsrs	r0, r0, #8
90024ace:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90024ad2:	ea4b 0b00 	orr.w	fp, fp, r0
90024ad6:	3701      	adds	r7, #1
90024ad8:	f100 80e6 	bmi.w	90024ca8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
90024adc:	42be      	cmp	r6, r7
90024ade:	f340 80e3 	ble.w	90024ca8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
90024ae2:	2900      	cmp	r1, #0
90024ae4:	f000 80e3 	beq.w	90024cae <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
90024ae8:	3601      	adds	r6, #1
90024aea:	9801      	ldr	r0, [sp, #4]
90024aec:	f819 7006 	ldrb.w	r7, [r9, r6]
90024af0:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
90024af4:	ea4f 09e7 	mov.w	r9, r7, asr #3
90024af8:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
90024afc:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90024b00:	fb09 f906 	mul.w	r9, r9, r6
90024b04:	fb07 f800 	mul.w	r8, r7, r0
90024b08:	f64f 001f 	movw	r0, #63519	; 0xf81f
90024b0c:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
90024b10:	f609 0901 	addw	r9, r9, #2049	; 0x801
90024b14:	44d1      	add	r9, sl
90024b16:	ea00 1659 	and.w	r6, r0, r9, lsr #5
90024b1a:	f108 0020 	add.w	r0, r8, #32
90024b1e:	eb00 2018 	add.w	r0, r0, r8, lsr #8
90024b22:	0a00      	lsrs	r0, r0, #8
90024b24:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90024b28:	4330      	orrs	r0, r6
90024b2a:	b28e      	uxth	r6, r1
90024b2c:	fa1f f98e 	uxth.w	r9, lr
90024b30:	ea4f 4a04 	mov.w	sl, r4, lsl #16
90024b34:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
90024b38:	fb06 f809 	mul.w	r8, r6, r9
90024b3c:	0136      	lsls	r6, r6, #4
90024b3e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90024b42:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
90024b46:	9601      	str	r6, [sp, #4]
90024b48:	ea4a 0404 	orr.w	r4, sl, r4
90024b4c:	ea4f 4a02 	mov.w	sl, r2, lsl #16
90024b50:	fa1f f689 	uxth.w	r6, r9
90024b54:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90024b58:	fb11 f90e 	smulbb	r9, r1, lr
90024b5c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90024b60:	9602      	str	r6, [sp, #8]
90024b62:	4626      	mov	r6, r4
90024b64:	f3c9 09c7 	ubfx	r9, r9, #3, #8
90024b68:	f1ce 0410 	rsb	r4, lr, #16
90024b6c:	ea4a 0202 	orr.w	r2, sl, r2
90024b70:	ea4f 4a00 	mov.w	sl, r0, lsl #16
90024b74:	1a64      	subs	r4, r4, r1
90024b76:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
90024b7a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90024b7e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90024b82:	434a      	muls	r2, r1
90024b84:	eb09 0444 	add.w	r4, r9, r4, lsl #1
90024b88:	ea4a 0000 	orr.w	r0, sl, r0
90024b8c:	9903      	ldr	r1, [sp, #12]
90024b8e:	fb04 2406 	mla	r4, r4, r6, r2
90024b92:	9e02      	ldr	r6, [sp, #8]
90024b94:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
90024b98:	fb09 4200 	mla	r2, r9, r0, r4
90024b9c:	ea4f 440b 	mov.w	r4, fp, lsl #16
90024ba0:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
90024ba4:	8808      	ldrh	r0, [r1, #0]
90024ba6:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
90024baa:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
90024bae:	ea44 0b0b 	orr.w	fp, r4, fp
90024bb2:	9c01      	ldr	r4, [sp, #4]
90024bb4:	b289      	uxth	r1, r1
90024bb6:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
90024bba:	fb0e 2e0b 	mla	lr, lr, fp, r2
90024bbe:	1ba4      	subs	r4, r4, r6
90024bc0:	9e01      	ldr	r6, [sp, #4]
90024bc2:	ea4f 525e 	mov.w	r2, lr, lsr #21
90024bc6:	eba6 0608 	sub.w	r6, r6, r8
90024bca:	b2a4      	uxth	r4, r4
90024bcc:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
90024bd0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90024bd4:	b2b6      	uxth	r6, r6
90024bd6:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
90024bda:	4373      	muls	r3, r6
90024bdc:	ea42 0e0e 	orr.w	lr, r2, lr
90024be0:	fb0c 3304 	mla	r3, ip, r4, r3
90024be4:	9c02      	ldr	r4, [sp, #8]
90024be6:	fa1f f28e 	uxth.w	r2, lr
90024bea:	fb04 3505 	mla	r5, r4, r5, r3
90024bee:	10d4      	asrs	r4, r2, #3
90024bf0:	fb08 5707 	mla	r7, r8, r7, r5
90024bf4:	1215      	asrs	r5, r2, #8
90024bf6:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
90024bfa:	00d2      	lsls	r2, r2, #3
90024bfc:	f3c7 2707 	ubfx	r7, r7, #8, #8
90024c00:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
90024c04:	b2d2      	uxtb	r2, r2
90024c06:	434f      	muls	r7, r1
90024c08:	1c7b      	adds	r3, r7, #1
90024c0a:	eb03 2717 	add.w	r7, r3, r7, lsr #8
90024c0e:	1203      	asrs	r3, r0, #8
90024c10:	ea6f 2717 	mvn.w	r7, r7, lsr #8
90024c14:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
90024c18:	b2ff      	uxtb	r7, r7
90024c1a:	fb13 f307 	smulbb	r3, r3, r7
90024c1e:	fb05 3501 	mla	r5, r5, r1, r3
90024c22:	10c3      	asrs	r3, r0, #3
90024c24:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
90024c28:	b2ad      	uxth	r5, r5
90024c2a:	fb13 f307 	smulbb	r3, r3, r7
90024c2e:	fb04 3401 	mla	r4, r4, r1, r3
90024c32:	00c3      	lsls	r3, r0, #3
90024c34:	b2db      	uxtb	r3, r3
90024c36:	b2a4      	uxth	r4, r4
90024c38:	fb13 f307 	smulbb	r3, r3, r7
90024c3c:	fb02 3101 	mla	r1, r2, r1, r3
90024c40:	1c6b      	adds	r3, r5, #1
90024c42:	1c62      	adds	r2, r4, #1
90024c44:	b289      	uxth	r1, r1
90024c46:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90024c4a:	1c4b      	adds	r3, r1, #1
90024c4c:	eb02 2414 	add.w	r4, r2, r4, lsr #8
90024c50:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
90024c54:	9a03      	ldr	r2, [sp, #12]
90024c56:	eb03 2311 	add.w	r3, r3, r1, lsr #8
90024c5a:	0964      	lsrs	r4, r4, #5
90024c5c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90024c60:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
90024c64:	432b      	orrs	r3, r5
90024c66:	4323      	orrs	r3, r4
90024c68:	8013      	strh	r3, [r2, #0]
90024c6a:	b005      	add	sp, #20
90024c6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90024c70:	f04f 0c00 	mov.w	ip, #0
90024c74:	4664      	mov	r4, ip
90024c76:	e6d6      	b.n	90024a26 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
90024c78:	2300      	movs	r3, #0
90024c7a:	469c      	mov	ip, r3
90024c7c:	461a      	mov	r2, r3
90024c7e:	461c      	mov	r4, r3
90024c80:	e6f8      	b.n	90024a74 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
90024c82:	2300      	movs	r3, #0
90024c84:	461a      	mov	r2, r3
90024c86:	e6f5      	b.n	90024a74 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
90024c88:	460b      	mov	r3, r1
90024c8a:	460a      	mov	r2, r1
90024c8c:	e6f2      	b.n	90024a74 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
90024c8e:	2500      	movs	r5, #0
90024c90:	46ab      	mov	fp, r5
90024c92:	e720      	b.n	90024ad6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
90024c94:	2700      	movs	r7, #0
90024c96:	463d      	mov	r5, r7
90024c98:	4638      	mov	r0, r7
90024c9a:	46bb      	mov	fp, r7
90024c9c:	e745      	b.n	90024b2a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
90024c9e:	4677      	mov	r7, lr
90024ca0:	4675      	mov	r5, lr
90024ca2:	4670      	mov	r0, lr
90024ca4:	46f3      	mov	fp, lr
90024ca6:	e740      	b.n	90024b2a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
90024ca8:	2700      	movs	r7, #0
90024caa:	4638      	mov	r0, r7
90024cac:	e73d      	b.n	90024b2a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
90024cae:	460f      	mov	r7, r1
90024cb0:	4608      	mov	r0, r1
90024cb2:	e73a      	b.n	90024b2a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

90024cb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90024cb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90024cb8:	b097      	sub	sp, #92	; 0x5c
90024cba:	9214      	str	r2, [sp, #80]	; 0x50
90024cbc:	9308      	str	r3, [sp, #32]
90024cbe:	9a25      	ldr	r2, [sp, #148]	; 0x94
90024cc0:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
90024cc4:	9015      	str	r0, [sp, #84]	; 0x54
90024cc6:	9312      	str	r3, [sp, #72]	; 0x48
90024cc8:	6850      	ldr	r0, [r2, #4]
90024cca:	9111      	str	r1, [sp, #68]	; 0x44
90024ccc:	6812      	ldr	r2, [r2, #0]
90024cce:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
90024cd2:	fb00 1303 	mla	r3, r0, r3, r1
90024cd6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90024cda:	9309      	str	r3, [sp, #36]	; 0x24
90024cdc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90024cde:	681b      	ldr	r3, [r3, #0]
90024ce0:	930b      	str	r3, [sp, #44]	; 0x2c
90024ce2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90024ce4:	685b      	ldr	r3, [r3, #4]
90024ce6:	930c      	str	r3, [sp, #48]	; 0x30
90024ce8:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
90024cec:	930a      	str	r3, [sp, #40]	; 0x28
90024cee:	9b11      	ldr	r3, [sp, #68]	; 0x44
90024cf0:	2b00      	cmp	r3, #0
90024cf2:	dc03      	bgt.n	90024cfc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90024cf4:	9b14      	ldr	r3, [sp, #80]	; 0x50
90024cf6:	2b00      	cmp	r3, #0
90024cf8:	f340 83cd 	ble.w	90025496 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
90024cfc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90024cfe:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90024d02:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90024d06:	1e48      	subs	r0, r1, #1
90024d08:	1e55      	subs	r5, r2, #1
90024d0a:	9b08      	ldr	r3, [sp, #32]
90024d0c:	2b00      	cmp	r3, #0
90024d0e:	f340 81a5 	ble.w	9002505c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a8>
90024d12:	9e21      	ldr	r6, [sp, #132]	; 0x84
90024d14:	9b22      	ldr	r3, [sp, #136]	; 0x88
90024d16:	1436      	asrs	r6, r6, #16
90024d18:	ea4f 4323 	mov.w	r3, r3, asr #16
90024d1c:	d406      	bmi.n	90024d2c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90024d1e:	4286      	cmp	r6, r0
90024d20:	da04      	bge.n	90024d2c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90024d22:	2b00      	cmp	r3, #0
90024d24:	db02      	blt.n	90024d2c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90024d26:	42ab      	cmp	r3, r5
90024d28:	f2c0 8199 	blt.w	9002505e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
90024d2c:	3601      	adds	r6, #1
90024d2e:	f100 8186 	bmi.w	9002503e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90024d32:	42b1      	cmp	r1, r6
90024d34:	f2c0 8183 	blt.w	9002503e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90024d38:	3301      	adds	r3, #1
90024d3a:	f100 8180 	bmi.w	9002503e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90024d3e:	429a      	cmp	r2, r3
90024d40:	f2c0 817d 	blt.w	9002503e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90024d44:	9b08      	ldr	r3, [sp, #32]
90024d46:	f64f 061f 	movw	r6, #63519	; 0xf81f
90024d4a:	9f09      	ldr	r7, [sp, #36]	; 0x24
90024d4c:	9313      	str	r3, [sp, #76]	; 0x4c
90024d4e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
90024d50:	2b00      	cmp	r3, #0
90024d52:	f340 81a6 	ble.w	900250a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
90024d56:	9b22      	ldr	r3, [sp, #136]	; 0x88
90024d58:	9d21      	ldr	r5, [sp, #132]	; 0x84
90024d5a:	1418      	asrs	r0, r3, #16
90024d5c:	9b21      	ldr	r3, [sp, #132]	; 0x84
90024d5e:	142d      	asrs	r5, r5, #16
90024d60:	f3c3 3103 	ubfx	r1, r3, #12, #4
90024d64:	9b22      	ldr	r3, [sp, #136]	; 0x88
90024d66:	f3c3 3c03 	ubfx	ip, r3, #12, #4
90024d6a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90024d6c:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
90024d70:	f100 81fa 	bmi.w	90025168 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90024d74:	f102 3eff 	add.w	lr, r2, #4294967295
90024d78:	4575      	cmp	r5, lr
90024d7a:	f280 81f5 	bge.w	90025168 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90024d7e:	2800      	cmp	r0, #0
90024d80:	f2c0 81f2 	blt.w	90025168 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90024d84:	f103 3eff 	add.w	lr, r3, #4294967295
90024d88:	4570      	cmp	r0, lr
90024d8a:	f280 81ed 	bge.w	90025168 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90024d8e:	b212      	sxth	r2, r2
90024d90:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90024d92:	fa1f fe81 	uxth.w	lr, r1
90024d96:	fb00 5002 	mla	r0, r0, r2, r5
90024d9a:	ea4f 150e 	mov.w	r5, lr, lsl #4
90024d9e:	eb03 0a00 	add.w	sl, r3, r0
90024da2:	f813 9000 	ldrb.w	r9, [r3, r0]
90024da6:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
90024daa:	f89a 8001 	ldrb.w	r8, [sl, #1]
90024dae:	b29b      	uxth	r3, r3
90024db0:	f1bc 0f00 	cmp.w	ip, #0
90024db4:	f000 81bb 	beq.w	9002512e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
90024db8:	f81a 4002 	ldrb.w	r4, [sl, r2]
90024dbc:	eb0a 0b02 	add.w	fp, sl, r2
90024dc0:	fa1f fa8c 	uxth.w	sl, ip
90024dc4:	940d      	str	r4, [sp, #52]	; 0x34
90024dc6:	fb0a fe0e 	mul.w	lr, sl, lr
90024dca:	f89b 4001 	ldrb.w	r4, [fp, #1]
90024dce:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
90024dd2:	eba5 050e 	sub.w	r5, r5, lr
90024dd6:	940e      	str	r4, [sp, #56]	; 0x38
90024dd8:	fa1f fa8a 	uxth.w	sl, sl
90024ddc:	9c0d      	ldr	r4, [sp, #52]	; 0x34
90024dde:	b2ad      	uxth	r5, r5
90024de0:	eba3 030a 	sub.w	r3, r3, sl
90024de4:	fb08 f505 	mul.w	r5, r8, r5
90024de8:	b29b      	uxth	r3, r3
90024dea:	fb09 5303 	mla	r3, r9, r3, r5
90024dee:	fb0a 3304 	mla	r3, sl, r4, r3
90024df2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
90024df4:	fb0e 3304 	mla	r3, lr, r4, r3
90024df8:	f3c3 2307 	ubfx	r3, r3, #8, #8
90024dfc:	2b00      	cmp	r3, #0
90024dfe:	f000 8111 	beq.w	90025024 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90024e02:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90024e04:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
90024e08:	eb04 0540 	add.w	r5, r4, r0, lsl #1
90024e0c:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
90024e10:	f000 8192 	beq.w	90025138 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
90024e14:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
90024e18:	ea4f 0ae9 	mov.w	sl, r9, asr #3
90024e1c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90024e20:	fb0a fe0e 	mul.w	lr, sl, lr
90024e24:	fb09 f000 	mul.w	r0, r9, r0
90024e28:	ea06 195e 	and.w	r9, r6, lr, lsr #5
90024e2c:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
90024e30:	f100 0b20 	add.w	fp, r0, #32
90024e34:	44ce      	add	lr, r9
90024e36:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
90024e3a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
90024e3e:	ea4f 2919 	mov.w	r9, r9, lsr #8
90024e42:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
90024e46:	ea4e 0909 	orr.w	r9, lr, r9
90024e4a:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
90024e4e:	8868      	ldrh	r0, [r5, #2]
90024e50:	d019      	beq.n	90024e86 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
90024e52:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
90024e56:	ea4f 0ae8 	mov.w	sl, r8, asr #3
90024e5a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90024e5e:	fb0a fe0e 	mul.w	lr, sl, lr
90024e62:	fb08 f800 	mul.w	r8, r8, r0
90024e66:	ea06 105e 	and.w	r0, r6, lr, lsr #5
90024e6a:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
90024e6e:	f108 0b20 	add.w	fp, r8, #32
90024e72:	4486      	add	lr, r0
90024e74:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
90024e78:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
90024e7c:	0a00      	lsrs	r0, r0, #8
90024e7e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90024e82:	ea4e 0000 	orr.w	r0, lr, r0
90024e86:	ea4f 4e09 	mov.w	lr, r9, lsl #16
90024e8a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
90024e8e:	ea4f 4a00 	mov.w	sl, r0, lsl #16
90024e92:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90024e96:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
90024e9a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90024e9e:	ea4e 0909 	orr.w	r9, lr, r9
90024ea2:	ea4a 0000 	orr.w	r0, sl, r0
90024ea6:	f1bc 0f00 	cmp.w	ip, #0
90024eaa:	f000 8147 	beq.w	9002513c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>
90024eae:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
90024eb2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
90024eb4:	3a01      	subs	r2, #1
90024eb6:	2cff      	cmp	r4, #255	; 0xff
90024eb8:	ea4f 0242 	mov.w	r2, r2, lsl #1
90024ebc:	f102 0202 	add.w	r2, r2, #2
90024ec0:	eb05 0e02 	add.w	lr, r5, r2
90024ec4:	5aaa      	ldrh	r2, [r5, r2]
90024ec6:	d018      	beq.n	90024efa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
90024ec8:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
90024ecc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90024ed0:	ea4f 08e4 	mov.w	r8, r4, asr #3
90024ed4:	fb04 fa02 	mul.w	sl, r4, r2
90024ed8:	fb08 f805 	mul.w	r8, r8, r5
90024edc:	f10a 0520 	add.w	r5, sl, #32
90024ee0:	ea06 1258 	and.w	r2, r6, r8, lsr #5
90024ee4:	f608 0801 	addw	r8, r8, #2049	; 0x801
90024ee8:	eb05 251a 	add.w	r5, r5, sl, lsr #8
90024eec:	4442      	add	r2, r8
90024eee:	0a2d      	lsrs	r5, r5, #8
90024ef0:	ea06 1252 	and.w	r2, r6, r2, lsr #5
90024ef4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90024ef8:	432a      	orrs	r2, r5
90024efa:	9c0e      	ldr	r4, [sp, #56]	; 0x38
90024efc:	f8be 5002 	ldrh.w	r5, [lr, #2]
90024f00:	2cff      	cmp	r4, #255	; 0xff
90024f02:	d01a      	beq.n	90024f3a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x286>
90024f04:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
90024f08:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90024f0c:	ea4f 08e4 	mov.w	r8, r4, asr #3
90024f10:	fb04 fa05 	mul.w	sl, r4, r5
90024f14:	fb08 f80e 	mul.w	r8, r8, lr
90024f18:	f10a 0e20 	add.w	lr, sl, #32
90024f1c:	ea06 1558 	and.w	r5, r6, r8, lsr #5
90024f20:	f608 0801 	addw	r8, r8, #2049	; 0x801
90024f24:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
90024f28:	4445      	add	r5, r8
90024f2a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90024f2e:	ea06 1555 	and.w	r5, r6, r5, lsr #5
90024f32:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
90024f36:	ea45 050e 	orr.w	r5, r5, lr
90024f3a:	fb1c fe01 	smulbb	lr, ip, r1
90024f3e:	f1cc 0810 	rsb	r8, ip, #16
90024f42:	ea4f 4a02 	mov.w	sl, r2, lsl #16
90024f46:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90024f4a:	ea4f 0eee 	mov.w	lr, lr, asr #3
90024f4e:	eba8 0801 	sub.w	r8, r8, r1
90024f52:	ea4f 4b05 	mov.w	fp, r5, lsl #16
90024f56:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90024f5a:	ebce 0141 	rsb	r1, lr, r1, lsl #1
90024f5e:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
90024f62:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
90024f66:	ea4a 0202 	orr.w	r2, sl, r2
90024f6a:	4341      	muls	r1, r0
90024f6c:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
90024f70:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
90024f74:	fb09 1108 	mla	r1, r9, r8, r1
90024f78:	ea4b 0505 	orr.w	r5, fp, r5
90024f7c:	fb0c 1102 	mla	r1, ip, r2, r1
90024f80:	fb0e 1e05 	mla	lr, lr, r5, r1
90024f84:	ea4f 525e 	mov.w	r2, lr, lsr #21
90024f88:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
90024f8c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90024f90:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
90024f94:	ea42 0e0e 	orr.w	lr, r2, lr
90024f98:	fa1f f28e 	uxth.w	r2, lr
90024f9c:	2bff      	cmp	r3, #255	; 0xff
90024f9e:	d103      	bne.n	90024fa8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90024fa0:	9912      	ldr	r1, [sp, #72]	; 0x48
90024fa2:	29ff      	cmp	r1, #255	; 0xff
90024fa4:	f000 80de 	beq.w	90025164 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
90024fa8:	990a      	ldr	r1, [sp, #40]	; 0x28
90024faa:	1215      	asrs	r5, r2, #8
90024fac:	8838      	ldrh	r0, [r7, #0]
90024fae:	434b      	muls	r3, r1
90024fb0:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
90024fb4:	9c0a      	ldr	r4, [sp, #40]	; 0x28
90024fb6:	f103 0c01 	add.w	ip, r3, #1
90024fba:	eb0c 2323 	add.w	r3, ip, r3, asr #8
90024fbe:	ea6f 2323 	mvn.w	r3, r3, asr #8
90024fc2:	fa5f fc83 	uxtb.w	ip, r3
90024fc6:	1203      	asrs	r3, r0, #8
90024fc8:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
90024fcc:	fb13 f30c 	smulbb	r3, r3, ip
90024fd0:	fb05 3501 	mla	r5, r5, r1, r3
90024fd4:	10c3      	asrs	r3, r0, #3
90024fd6:	10d1      	asrs	r1, r2, #3
90024fd8:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
90024fdc:	00d2      	lsls	r2, r2, #3
90024fde:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
90024fe2:	b2ad      	uxth	r5, r5
90024fe4:	fb13 f30c 	smulbb	r3, r3, ip
90024fe8:	b2d2      	uxtb	r2, r2
90024fea:	fb01 3104 	mla	r1, r1, r4, r3
90024fee:	00c3      	lsls	r3, r0, #3
90024ff0:	b2db      	uxtb	r3, r3
90024ff2:	b289      	uxth	r1, r1
90024ff4:	fb13 f30c 	smulbb	r3, r3, ip
90024ff8:	fb02 3304 	mla	r3, r2, r4, r3
90024ffc:	b29a      	uxth	r2, r3
90024ffe:	1c6b      	adds	r3, r5, #1
90025000:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90025004:	1c53      	adds	r3, r2, #1
90025006:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9002500a:	1c4a      	adds	r2, r1, #1
9002500c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
90025010:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90025014:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90025018:	0949      	lsrs	r1, r1, #5
9002501a:	432b      	orrs	r3, r5
9002501c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90025020:	430b      	orrs	r3, r1
90025022:	803b      	strh	r3, [r7, #0]
90025024:	9b21      	ldr	r3, [sp, #132]	; 0x84
90025026:	3702      	adds	r7, #2
90025028:	9a23      	ldr	r2, [sp, #140]	; 0x8c
9002502a:	4413      	add	r3, r2
9002502c:	9a22      	ldr	r2, [sp, #136]	; 0x88
9002502e:	9321      	str	r3, [sp, #132]	; 0x84
90025030:	9b24      	ldr	r3, [sp, #144]	; 0x90
90025032:	441a      	add	r2, r3
90025034:	9b13      	ldr	r3, [sp, #76]	; 0x4c
90025036:	3b01      	subs	r3, #1
90025038:	9222      	str	r2, [sp, #136]	; 0x88
9002503a:	9313      	str	r3, [sp, #76]	; 0x4c
9002503c:	e687      	b.n	90024d4e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
9002503e:	9b21      	ldr	r3, [sp, #132]	; 0x84
90025040:	9e23      	ldr	r6, [sp, #140]	; 0x8c
90025042:	9c22      	ldr	r4, [sp, #136]	; 0x88
90025044:	4433      	add	r3, r6
90025046:	9321      	str	r3, [sp, #132]	; 0x84
90025048:	9b24      	ldr	r3, [sp, #144]	; 0x90
9002504a:	441c      	add	r4, r3
9002504c:	9b08      	ldr	r3, [sp, #32]
9002504e:	3b01      	subs	r3, #1
90025050:	9422      	str	r4, [sp, #136]	; 0x88
90025052:	9308      	str	r3, [sp, #32]
90025054:	9b09      	ldr	r3, [sp, #36]	; 0x24
90025056:	3302      	adds	r3, #2
90025058:	9309      	str	r3, [sp, #36]	; 0x24
9002505a:	e656      	b.n	90024d0a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
9002505c:	d028      	beq.n	900250b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
9002505e:	9b08      	ldr	r3, [sp, #32]
90025060:	9823      	ldr	r0, [sp, #140]	; 0x8c
90025062:	3b01      	subs	r3, #1
90025064:	9d21      	ldr	r5, [sp, #132]	; 0x84
90025066:	fb00 5003 	mla	r0, r0, r3, r5
9002506a:	1400      	asrs	r0, r0, #16
9002506c:	f53f ae6a 	bmi.w	90024d44 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90025070:	3901      	subs	r1, #1
90025072:	4288      	cmp	r0, r1
90025074:	f6bf ae66 	bge.w	90024d44 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90025078:	9924      	ldr	r1, [sp, #144]	; 0x90
9002507a:	9822      	ldr	r0, [sp, #136]	; 0x88
9002507c:	fb01 0303 	mla	r3, r1, r3, r0
90025080:	141b      	asrs	r3, r3, #16
90025082:	f53f ae5f 	bmi.w	90024d44 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90025086:	3a01      	subs	r2, #1
90025088:	4293      	cmp	r3, r2
9002508a:	f6bf ae5b 	bge.w	90024d44 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9002508e:	9b08      	ldr	r3, [sp, #32]
90025090:	f64f 061f 	movw	r6, #63519	; 0xf81f
90025094:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
90025098:	9313      	str	r3, [sp, #76]	; 0x4c
9002509a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
9002509c:	2b00      	cmp	r3, #0
9002509e:	f300 8082 	bgt.w	900251a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f2>
900250a2:	9b08      	ldr	r3, [sp, #32]
900250a4:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
900250a8:	9b09      	ldr	r3, [sp, #36]	; 0x24
900250aa:	eb03 0344 	add.w	r3, r3, r4, lsl #1
900250ae:	9309      	str	r3, [sp, #36]	; 0x24
900250b0:	9b11      	ldr	r3, [sp, #68]	; 0x44
900250b2:	2b00      	cmp	r3, #0
900250b4:	f340 81ef 	ble.w	90025496 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
900250b8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
900250bc:	9b20      	ldr	r3, [sp, #128]	; 0x80
900250be:	ee30 0a04 	vadd.f32	s0, s0, s8
900250c2:	ee70 0aa4 	vadd.f32	s1, s1, s9
900250c6:	eef0 6a62 	vmov.f32	s13, s5
900250ca:	eec7 7a00 	vdiv.f32	s15, s14, s0
900250ce:	ee31 1a05 	vadd.f32	s2, s2, s10
900250d2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900250d6:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
900250da:	eef0 6a43 	vmov.f32	s13, s6
900250de:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900250e2:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
900250e6:	ee20 7aa7 	vmul.f32	s14, s1, s15
900250ea:	ee61 7a27 	vmul.f32	s15, s2, s15
900250ee:	ee77 2a62 	vsub.f32	s5, s14, s5
900250f2:	ee37 3ac3 	vsub.f32	s6, s15, s6
900250f6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900250fa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900250fe:	ee12 2a90 	vmov	r2, s5
90025102:	eef0 2a47 	vmov.f32	s5, s14
90025106:	fb92 f3f3 	sdiv	r3, r2, r3
9002510a:	ee13 2a10 	vmov	r2, s6
9002510e:	9323      	str	r3, [sp, #140]	; 0x8c
90025110:	9b20      	ldr	r3, [sp, #128]	; 0x80
90025112:	eeb0 3a67 	vmov.f32	s6, s15
90025116:	fb92 f3f3 	sdiv	r3, r2, r3
9002511a:	9324      	str	r3, [sp, #144]	; 0x90
9002511c:	9b11      	ldr	r3, [sp, #68]	; 0x44
9002511e:	9a14      	ldr	r2, [sp, #80]	; 0x50
90025120:	3b01      	subs	r3, #1
90025122:	9311      	str	r3, [sp, #68]	; 0x44
90025124:	9b20      	ldr	r3, [sp, #128]	; 0x80
90025126:	bf08      	it	eq
90025128:	4613      	moveq	r3, r2
9002512a:	9308      	str	r3, [sp, #32]
9002512c:	e5df      	b.n	90024cee <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
9002512e:	fb08 f505 	mul.w	r5, r8, r5
90025132:	fb09 5303 	mla	r3, r9, r3, r5
90025136:	e65f      	b.n	90024df8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
90025138:	4681      	mov	r9, r0
9002513a:	e686      	b.n	90024e4a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
9002513c:	f1c1 0210 	rsb	r2, r1, #16
90025140:	4341      	muls	r1, r0
90025142:	fb09 1902 	mla	r9, r9, r2, r1
90025146:	ea4f 0949 	mov.w	r9, r9, lsl #1
9002514a:	ea4f 5259 	mov.w	r2, r9, lsr #21
9002514e:	ea4f 1959 	mov.w	r9, r9, lsr #5
90025152:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90025156:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
9002515a:	ea42 0909 	orr.w	r9, r2, r9
9002515e:	fa1f f289 	uxth.w	r2, r9
90025162:	e71b      	b.n	90024f9c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
90025164:	803a      	strh	r2, [r7, #0]
90025166:	e75d      	b.n	90025024 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90025168:	f115 0e01 	adds.w	lr, r5, #1
9002516c:	f53f af5a 	bmi.w	90025024 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90025170:	4572      	cmp	r2, lr
90025172:	f6ff af57 	blt.w	90025024 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90025176:	f110 0e01 	adds.w	lr, r0, #1
9002517a:	f53f af53 	bmi.w	90025024 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
9002517e:	4573      	cmp	r3, lr
90025180:	f6ff af50 	blt.w	90025024 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90025184:	9c12      	ldr	r4, [sp, #72]	; 0x48
90025186:	b21b      	sxth	r3, r3
90025188:	b212      	sxth	r2, r2
9002518a:	9502      	str	r5, [sp, #8]
9002518c:	9301      	str	r3, [sp, #4]
9002518e:	9200      	str	r2, [sp, #0]
90025190:	e9cd 0103 	strd	r0, r1, [sp, #12]
90025194:	e9cd c405 	strd	ip, r4, [sp, #20]
90025198:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
9002519c:	4639      	mov	r1, r7
9002519e:	9815      	ldr	r0, [sp, #84]	; 0x54
900251a0:	f7ff fc02 	bl	900249a8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
900251a4:	e73e      	b.n	90025024 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
900251a6:	9b21      	ldr	r3, [sp, #132]	; 0x84
900251a8:	f3c3 3203 	ubfx	r2, r3, #12, #4
900251ac:	9b22      	ldr	r3, [sp, #136]	; 0x88
900251ae:	f3c3 3503 	ubfx	r5, r3, #12, #4
900251b2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
900251b4:	fa1f fc82 	uxth.w	ip, r2
900251b8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900251bc:	9b22      	ldr	r3, [sp, #136]	; 0x88
900251be:	ea4f 100c 	mov.w	r0, ip, lsl #4
900251c2:	141f      	asrs	r7, r3, #16
900251c4:	9b21      	ldr	r3, [sp, #132]	; 0x84
900251c6:	141b      	asrs	r3, r3, #16
900251c8:	fb01 3707 	mla	r7, r1, r7, r3
900251cc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
900251ce:	eb03 0a07 	add.w	sl, r3, r7
900251d2:	f813 9007 	ldrb.w	r9, [r3, r7]
900251d6:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
900251da:	f89a 8001 	ldrb.w	r8, [sl, #1]
900251de:	b29b      	uxth	r3, r3
900251e0:	2d00      	cmp	r5, #0
900251e2:	f000 813d 	beq.w	90025460 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>
900251e6:	f81a 4001 	ldrb.w	r4, [sl, r1]
900251ea:	eb0a 0b01 	add.w	fp, sl, r1
900251ee:	fa1f fa85 	uxth.w	sl, r5
900251f2:	940f      	str	r4, [sp, #60]	; 0x3c
900251f4:	fb0a fc0c 	mul.w	ip, sl, ip
900251f8:	f89b 4001 	ldrb.w	r4, [fp, #1]
900251fc:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
90025200:	eba0 000c 	sub.w	r0, r0, ip
90025204:	9410      	str	r4, [sp, #64]	; 0x40
90025206:	fa1f fa8a 	uxth.w	sl, sl
9002520a:	b280      	uxth	r0, r0
9002520c:	eba3 030a 	sub.w	r3, r3, sl
90025210:	fb08 f000 	mul.w	r0, r8, r0
90025214:	b29b      	uxth	r3, r3
90025216:	fb09 0303 	mla	r3, r9, r3, r0
9002521a:	980f      	ldr	r0, [sp, #60]	; 0x3c
9002521c:	fb0a 3300 	mla	r3, sl, r0, r3
90025220:	fb0c 3304 	mla	r3, ip, r4, r3
90025224:	f3c3 2307 	ubfx	r3, r3, #8, #8
90025228:	2b00      	cmp	r3, #0
9002522a:	f000 810b 	beq.w	90025444 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
9002522e:	980b      	ldr	r0, [sp, #44]	; 0x2c
90025230:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
90025234:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90025236:	eb00 0047 	add.w	r0, r0, r7, lsl #1
9002523a:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
9002523e:	f000 8114 	beq.w	9002546a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
90025242:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
90025246:	ea4f 0ae9 	mov.w	sl, r9, asr #3
9002524a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
9002524e:	fb0a fc0c 	mul.w	ip, sl, ip
90025252:	fb09 f707 	mul.w	r7, r9, r7
90025256:	ea06 195c 	and.w	r9, r6, ip, lsr #5
9002525a:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
9002525e:	f107 0b20 	add.w	fp, r7, #32
90025262:	44cc      	add	ip, r9
90025264:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
90025268:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
9002526c:	ea4f 2919 	mov.w	r9, r9, lsr #8
90025270:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
90025274:	ea4c 0909 	orr.w	r9, ip, r9
90025278:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
9002527c:	8847      	ldrh	r7, [r0, #2]
9002527e:	d019      	beq.n	900252b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x600>
90025280:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
90025284:	ea4f 0ae8 	mov.w	sl, r8, asr #3
90025288:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
9002528c:	fb0a fc0c 	mul.w	ip, sl, ip
90025290:	fb08 f807 	mul.w	r8, r8, r7
90025294:	ea06 175c 	and.w	r7, r6, ip, lsr #5
90025298:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
9002529c:	f108 0b20 	add.w	fp, r8, #32
900252a0:	44bc      	add	ip, r7
900252a2:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
900252a6:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
900252aa:	0a3f      	lsrs	r7, r7, #8
900252ac:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
900252b0:	ea4c 0707 	orr.w	r7, ip, r7
900252b4:	ea4f 4c09 	mov.w	ip, r9, lsl #16
900252b8:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
900252bc:	ea4f 4a07 	mov.w	sl, r7, lsl #16
900252c0:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
900252c4:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
900252c8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
900252cc:	ea4c 0909 	orr.w	r9, ip, r9
900252d0:	ea4a 0707 	orr.w	r7, sl, r7
900252d4:	2d00      	cmp	r5, #0
900252d6:	f000 80ca 	beq.w	9002546e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ba>
900252da:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
900252de:	3901      	subs	r1, #1
900252e0:	0049      	lsls	r1, r1, #1
900252e2:	3102      	adds	r1, #2
900252e4:	eb00 0c01 	add.w	ip, r0, r1
900252e8:	5a41      	ldrh	r1, [r0, r1]
900252ea:	980f      	ldr	r0, [sp, #60]	; 0x3c
900252ec:	28ff      	cmp	r0, #255	; 0xff
900252ee:	d019      	beq.n	90025324 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x670>
900252f0:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
900252f4:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
900252f6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
900252fa:	ea4f 08e4 	mov.w	r8, r4, asr #3
900252fe:	fb04 fa01 	mul.w	sl, r4, r1
90025302:	fb08 f800 	mul.w	r8, r8, r0
90025306:	f10a 0020 	add.w	r0, sl, #32
9002530a:	ea06 1158 	and.w	r1, r6, r8, lsr #5
9002530e:	f608 0801 	addw	r8, r8, #2049	; 0x801
90025312:	eb00 201a 	add.w	r0, r0, sl, lsr #8
90025316:	4441      	add	r1, r8
90025318:	0a00      	lsrs	r0, r0, #8
9002531a:	ea06 1151 	and.w	r1, r6, r1, lsr #5
9002531e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90025322:	4301      	orrs	r1, r0
90025324:	9c10      	ldr	r4, [sp, #64]	; 0x40
90025326:	f8bc 0002 	ldrh.w	r0, [ip, #2]
9002532a:	2cff      	cmp	r4, #255	; 0xff
9002532c:	d01a      	beq.n	90025364 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b0>
9002532e:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
90025332:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90025336:	ea4f 08e4 	mov.w	r8, r4, asr #3
9002533a:	fb04 fa00 	mul.w	sl, r4, r0
9002533e:	fb08 f80c 	mul.w	r8, r8, ip
90025342:	f10a 0c20 	add.w	ip, sl, #32
90025346:	ea06 1058 	and.w	r0, r6, r8, lsr #5
9002534a:	f608 0801 	addw	r8, r8, #2049	; 0x801
9002534e:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
90025352:	4440      	add	r0, r8
90025354:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90025358:	ea06 1050 	and.w	r0, r6, r0, lsr #5
9002535c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
90025360:	ea40 000c 	orr.w	r0, r0, ip
90025364:	fb15 fc02 	smulbb	ip, r5, r2
90025368:	f1c5 0810 	rsb	r8, r5, #16
9002536c:	ea4f 4a01 	mov.w	sl, r1, lsl #16
90025370:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
90025374:	ea4f 0cec 	mov.w	ip, ip, asr #3
90025378:	eba8 0802 	sub.w	r8, r8, r2
9002537c:	ea4f 4b00 	mov.w	fp, r0, lsl #16
90025380:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90025384:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
90025388:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
9002538c:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
90025390:	ea4a 0101 	orr.w	r1, sl, r1
90025394:	437a      	muls	r2, r7
90025396:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
9002539a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
9002539e:	fb09 2208 	mla	r2, r9, r8, r2
900253a2:	ea4b 0000 	orr.w	r0, fp, r0
900253a6:	fb05 2201 	mla	r2, r5, r1, r2
900253aa:	fb0c 2200 	mla	r2, ip, r0, r2
900253ae:	0d57      	lsrs	r7, r2, #21
900253b0:	0952      	lsrs	r2, r2, #5
900253b2:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
900253b6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
900253ba:	433a      	orrs	r2, r7
900253bc:	2bff      	cmp	r3, #255	; 0xff
900253be:	b292      	uxth	r2, r2
900253c0:	d102      	bne.n	900253c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
900253c2:	9912      	ldr	r1, [sp, #72]	; 0x48
900253c4:	29ff      	cmp	r1, #255	; 0xff
900253c6:	d063      	beq.n	90025490 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7dc>
900253c8:	980a      	ldr	r0, [sp, #40]	; 0x28
900253ca:	1215      	asrs	r5, r2, #8
900253cc:	f8be 1000 	ldrh.w	r1, [lr]
900253d0:	4343      	muls	r3, r0
900253d2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
900253d4:	10cf      	asrs	r7, r1, #3
900253d6:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
900253da:	1c58      	adds	r0, r3, #1
900253dc:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
900253e0:	eb00 2323 	add.w	r3, r0, r3, asr #8
900253e4:	1208      	asrs	r0, r1, #8
900253e6:	ea6f 2323 	mvn.w	r3, r3, asr #8
900253ea:	00c9      	lsls	r1, r1, #3
900253ec:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
900253f0:	b2db      	uxtb	r3, r3
900253f2:	b2c9      	uxtb	r1, r1
900253f4:	fb10 f003 	smulbb	r0, r0, r3
900253f8:	fb11 f103 	smulbb	r1, r1, r3
900253fc:	fb05 0504 	mla	r5, r5, r4, r0
90025400:	10d0      	asrs	r0, r2, #3
90025402:	fb17 f703 	smulbb	r7, r7, r3
90025406:	00d2      	lsls	r2, r2, #3
90025408:	b2ad      	uxth	r5, r5
9002540a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
9002540e:	b2d2      	uxtb	r2, r2
90025410:	fb00 7004 	mla	r0, r0, r4, r7
90025414:	1c6b      	adds	r3, r5, #1
90025416:	fb02 1204 	mla	r2, r2, r4, r1
9002541a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
9002541e:	b292      	uxth	r2, r2
90025420:	b280      	uxth	r0, r0
90025422:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
90025426:	1c57      	adds	r7, r2, #1
90025428:	eb07 2712 	add.w	r7, r7, r2, lsr #8
9002542c:	f3c7 27c4 	ubfx	r7, r7, #11, #5
90025430:	433d      	orrs	r5, r7
90025432:	1c47      	adds	r7, r0, #1
90025434:	eb07 2710 	add.w	r7, r7, r0, lsr #8
90025438:	097f      	lsrs	r7, r7, #5
9002543a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
9002543e:	433d      	orrs	r5, r7
90025440:	f8ae 5000 	strh.w	r5, [lr]
90025444:	9b21      	ldr	r3, [sp, #132]	; 0x84
90025446:	f10e 0e02 	add.w	lr, lr, #2
9002544a:	9a23      	ldr	r2, [sp, #140]	; 0x8c
9002544c:	4413      	add	r3, r2
9002544e:	9a22      	ldr	r2, [sp, #136]	; 0x88
90025450:	9321      	str	r3, [sp, #132]	; 0x84
90025452:	9b24      	ldr	r3, [sp, #144]	; 0x90
90025454:	441a      	add	r2, r3
90025456:	9b13      	ldr	r3, [sp, #76]	; 0x4c
90025458:	3b01      	subs	r3, #1
9002545a:	9222      	str	r2, [sp, #136]	; 0x88
9002545c:	9313      	str	r3, [sp, #76]	; 0x4c
9002545e:	e61c      	b.n	9002509a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
90025460:	fb08 f000 	mul.w	r0, r8, r0
90025464:	fb09 0303 	mla	r3, r9, r3, r0
90025468:	e6dc      	b.n	90025224 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x570>
9002546a:	46b9      	mov	r9, r7
9002546c:	e704      	b.n	90025278 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c4>
9002546e:	f1c2 0110 	rsb	r1, r2, #16
90025472:	437a      	muls	r2, r7
90025474:	fb09 2901 	mla	r9, r9, r1, r2
90025478:	ea4f 0949 	mov.w	r9, r9, lsl #1
9002547c:	ea4f 5059 	mov.w	r0, r9, lsr #21
90025480:	ea4f 1259 	mov.w	r2, r9, lsr #5
90025484:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90025488:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
9002548c:	4302      	orrs	r2, r0
9002548e:	e795      	b.n	900253bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x708>
90025490:	f8ae 2000 	strh.w	r2, [lr]
90025494:	e7d6      	b.n	90025444 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
90025496:	b017      	add	sp, #92	; 0x5c
90025498:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9002549c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
9002549c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900254a0:	b085      	sub	sp, #20
900254a2:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
900254a6:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
900254aa:	2800      	cmp	r0, #0
900254ac:	9103      	str	r1, [sp, #12]
900254ae:	fb00 7406 	mla	r4, r0, r6, r7
900254b2:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
900254b6:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
900254ba:	eb03 0544 	add.w	r5, r3, r4, lsl #1
900254be:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
900254c2:	eb02 0904 	add.w	r9, r2, r4
900254c6:	9501      	str	r5, [sp, #4]
900254c8:	f2c0 8141 	blt.w	9002574e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
900254cc:	4583      	cmp	fp, r0
900254ce:	f340 813e 	ble.w	9002574e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
900254d2:	2f00      	cmp	r7, #0
900254d4:	f2c0 8137 	blt.w	90025746 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
900254d8:	42be      	cmp	r6, r7
900254da:	f340 8134 	ble.w	90025746 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
900254de:	f812 c004 	ldrb.w	ip, [r2, r4]
900254e2:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
900254e6:	f64f 041f 	movw	r4, #63519	; 0xf81f
900254ea:	ea4f 02ec 	mov.w	r2, ip, asr #3
900254ee:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
900254f2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
900254f6:	4355      	muls	r5, r2
900254f8:	fb0c f203 	mul.w	r2, ip, r3
900254fc:	ea04 1355 	and.w	r3, r4, r5, lsr #5
90025500:	f605 0501 	addw	r5, r5, #2049	; 0x801
90025504:	441d      	add	r5, r3
90025506:	f102 0320 	add.w	r3, r2, #32
9002550a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9002550e:	ea04 1455 	and.w	r4, r4, r5, lsr #5
90025512:	0a1b      	lsrs	r3, r3, #8
90025514:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90025518:	431c      	orrs	r4, r3
9002551a:	1c7b      	adds	r3, r7, #1
9002551c:	f100 811c 	bmi.w	90025758 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
90025520:	429e      	cmp	r6, r3
90025522:	f340 8119 	ble.w	90025758 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
90025526:	2900      	cmp	r1, #0
90025528:	f000 8119 	beq.w	9002575e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
9002552c:	9a01      	ldr	r2, [sp, #4]
9002552e:	f899 3001 	ldrb.w	r3, [r9, #1]
90025532:	8855      	ldrh	r5, [r2, #2]
90025534:	ea4f 08e3 	mov.w	r8, r3, asr #3
90025538:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
9002553c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90025540:	fb08 f802 	mul.w	r8, r8, r2
90025544:	f64f 021f 	movw	r2, #63519	; 0xf81f
90025548:	435d      	muls	r5, r3
9002554a:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
9002554e:	f608 0801 	addw	r8, r8, #2049	; 0x801
90025552:	44d0      	add	r8, sl
90025554:	f105 0a20 	add.w	sl, r5, #32
90025558:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
9002555c:	ea02 1258 	and.w	r2, r2, r8, lsr #5
90025560:	0a2d      	lsrs	r5, r5, #8
90025562:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90025566:	432a      	orrs	r2, r5
90025568:	3001      	adds	r0, #1
9002556a:	f100 80fe 	bmi.w	9002576a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
9002556e:	4583      	cmp	fp, r0
90025570:	f340 80fb 	ble.w	9002576a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
90025574:	f1be 0f00 	cmp.w	lr, #0
90025578:	f000 80fc 	beq.w	90025774 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
9002557c:	2f00      	cmp	r7, #0
9002557e:	f2c0 80f1 	blt.w	90025764 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
90025582:	42be      	cmp	r6, r7
90025584:	f340 80ee 	ble.w	90025764 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
90025588:	9801      	ldr	r0, [sp, #4]
9002558a:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
9002558e:	f819 5006 	ldrb.w	r5, [r9, r6]
90025592:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
90025596:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9002559a:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
9002559e:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
900255a2:	fb0a fa00 	mul.w	sl, sl, r0
900255a6:	fb05 f808 	mul.w	r8, r5, r8
900255aa:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
900255ae:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
900255b2:	4482      	add	sl, r0
900255b4:	f108 0020 	add.w	r0, r8, #32
900255b8:	eb00 2018 	add.w	r0, r0, r8, lsr #8
900255bc:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
900255c0:	0a00      	lsrs	r0, r0, #8
900255c2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
900255c6:	ea4b 0b00 	orr.w	fp, fp, r0
900255ca:	3701      	adds	r7, #1
900255cc:	f100 80d7 	bmi.w	9002577e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
900255d0:	42be      	cmp	r6, r7
900255d2:	f340 80d4 	ble.w	9002577e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
900255d6:	2900      	cmp	r1, #0
900255d8:	f000 80d4 	beq.w	90025784 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
900255dc:	3601      	adds	r6, #1
900255de:	9801      	ldr	r0, [sp, #4]
900255e0:	f819 7006 	ldrb.w	r7, [r9, r6]
900255e4:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
900255e8:	ea4f 09e7 	mov.w	r9, r7, asr #3
900255ec:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
900255f0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
900255f4:	fb09 f906 	mul.w	r9, r9, r6
900255f8:	fb07 f800 	mul.w	r8, r7, r0
900255fc:	f64f 001f 	movw	r0, #63519	; 0xf81f
90025600:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
90025604:	f609 0901 	addw	r9, r9, #2049	; 0x801
90025608:	44d1      	add	r9, sl
9002560a:	ea00 1659 	and.w	r6, r0, r9, lsr #5
9002560e:	f108 0020 	add.w	r0, r8, #32
90025612:	eb00 2018 	add.w	r0, r0, r8, lsr #8
90025616:	0a00      	lsrs	r0, r0, #8
90025618:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9002561c:	4330      	orrs	r0, r6
9002561e:	b28e      	uxth	r6, r1
90025620:	fa1f f98e 	uxth.w	r9, lr
90025624:	ea4f 4a04 	mov.w	sl, r4, lsl #16
90025628:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
9002562c:	fb06 f809 	mul.w	r8, r6, r9
90025630:	0136      	lsls	r6, r6, #4
90025632:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90025636:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
9002563a:	9601      	str	r6, [sp, #4]
9002563c:	ea4a 0404 	orr.w	r4, sl, r4
90025640:	ea4f 4a02 	mov.w	sl, r2, lsl #16
90025644:	fa1f f689 	uxth.w	r6, r9
90025648:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
9002564c:	fb11 f90e 	smulbb	r9, r1, lr
90025650:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90025654:	9602      	str	r6, [sp, #8]
90025656:	4626      	mov	r6, r4
90025658:	f3c9 09c7 	ubfx	r9, r9, #3, #8
9002565c:	f1ce 0410 	rsb	r4, lr, #16
90025660:	ea4a 0202 	orr.w	r2, sl, r2
90025664:	ea4f 4a00 	mov.w	sl, r0, lsl #16
90025668:	1a64      	subs	r4, r4, r1
9002566a:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
9002566e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90025672:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90025676:	434a      	muls	r2, r1
90025678:	eb09 0444 	add.w	r4, r9, r4, lsl #1
9002567c:	ea4a 0000 	orr.w	r0, sl, r0
90025680:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
90025684:	fb04 2406 	mla	r4, r4, r6, r2
90025688:	9903      	ldr	r1, [sp, #12]
9002568a:	fb09 4200 	mla	r2, r9, r0, r4
9002568e:	ea4f 440b 	mov.w	r4, fp, lsl #16
90025692:	9801      	ldr	r0, [sp, #4]
90025694:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
90025698:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
9002569c:	8809      	ldrh	r1, [r1, #0]
9002569e:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
900256a2:	ea44 0b0b 	orr.w	fp, r4, fp
900256a6:	9c02      	ldr	r4, [sp, #8]
900256a8:	1b00      	subs	r0, r0, r4
900256aa:	9c01      	ldr	r4, [sp, #4]
900256ac:	fb0e 2e0b 	mla	lr, lr, fp, r2
900256b0:	eba4 0608 	sub.w	r6, r4, r8
900256b4:	b280      	uxth	r0, r0
900256b6:	ea4f 525e 	mov.w	r2, lr, lsr #21
900256ba:	b2b6      	uxth	r6, r6
900256bc:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
900256c0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
900256c4:	4373      	muls	r3, r6
900256c6:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
900256ca:	fb0c 3300 	mla	r3, ip, r0, r3
900256ce:	9802      	ldr	r0, [sp, #8]
900256d0:	ea42 0e0e 	orr.w	lr, r2, lr
900256d4:	fb00 3505 	mla	r5, r0, r5, r3
900256d8:	120b      	asrs	r3, r1, #8
900256da:	10c8      	asrs	r0, r1, #3
900256dc:	fb08 5707 	mla	r7, r8, r7, r5
900256e0:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
900256e4:	00c9      	lsls	r1, r1, #3
900256e6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
900256ea:	ea6f 2727 	mvn.w	r7, r7, asr #8
900256ee:	fa1f f28e 	uxth.w	r2, lr
900256f2:	b2c9      	uxtb	r1, r1
900256f4:	b2ff      	uxtb	r7, r7
900256f6:	437b      	muls	r3, r7
900256f8:	4378      	muls	r0, r7
900256fa:	434f      	muls	r7, r1
900256fc:	1c59      	adds	r1, r3, #1
900256fe:	eb01 2113 	add.w	r1, r1, r3, lsr #8
90025702:	1213      	asrs	r3, r2, #8
90025704:	f023 0307 	bic.w	r3, r3, #7
90025708:	eb03 2311 	add.w	r3, r3, r1, lsr #8
9002570c:	1c41      	adds	r1, r0, #1
9002570e:	eb01 2010 	add.w	r0, r1, r0, lsr #8
90025712:	10d1      	asrs	r1, r2, #3
90025714:	021b      	lsls	r3, r3, #8
90025716:	f021 0103 	bic.w	r1, r1, #3
9002571a:	00d2      	lsls	r2, r2, #3
9002571c:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
90025720:	eb01 2110 	add.w	r1, r1, r0, lsr #8
90025724:	00c9      	lsls	r1, r1, #3
90025726:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
9002572a:	430b      	orrs	r3, r1
9002572c:	1c79      	adds	r1, r7, #1
9002572e:	eb01 2717 	add.w	r7, r1, r7, lsr #8
90025732:	eb02 2217 	add.w	r2, r2, r7, lsr #8
90025736:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9002573a:	431a      	orrs	r2, r3
9002573c:	9b03      	ldr	r3, [sp, #12]
9002573e:	801a      	strh	r2, [r3, #0]
90025740:	b005      	add	sp, #20
90025742:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90025746:	f04f 0c00 	mov.w	ip, #0
9002574a:	4664      	mov	r4, ip
9002574c:	e6e5      	b.n	9002551a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
9002574e:	2300      	movs	r3, #0
90025750:	469c      	mov	ip, r3
90025752:	461a      	mov	r2, r3
90025754:	461c      	mov	r4, r3
90025756:	e707      	b.n	90025568 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
90025758:	2300      	movs	r3, #0
9002575a:	461a      	mov	r2, r3
9002575c:	e704      	b.n	90025568 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
9002575e:	460b      	mov	r3, r1
90025760:	460a      	mov	r2, r1
90025762:	e701      	b.n	90025568 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
90025764:	2500      	movs	r5, #0
90025766:	46ab      	mov	fp, r5
90025768:	e72f      	b.n	900255ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
9002576a:	2700      	movs	r7, #0
9002576c:	463d      	mov	r5, r7
9002576e:	4638      	mov	r0, r7
90025770:	46bb      	mov	fp, r7
90025772:	e754      	b.n	9002561e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
90025774:	4677      	mov	r7, lr
90025776:	4675      	mov	r5, lr
90025778:	4670      	mov	r0, lr
9002577a:	46f3      	mov	fp, lr
9002577c:	e74f      	b.n	9002561e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
9002577e:	2700      	movs	r7, #0
90025780:	4638      	mov	r0, r7
90025782:	e74c      	b.n	9002561e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
90025784:	460f      	mov	r7, r1
90025786:	4608      	mov	r0, r1
90025788:	e749      	b.n	9002561e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

9002578c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9002578c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90025790:	b093      	sub	sp, #76	; 0x4c
90025792:	9210      	str	r2, [sp, #64]	; 0x40
90025794:	9a21      	ldr	r2, [sp, #132]	; 0x84
90025796:	9011      	str	r0, [sp, #68]	; 0x44
90025798:	910e      	str	r1, [sp, #56]	; 0x38
9002579a:	6850      	ldr	r0, [r2, #4]
9002579c:	9306      	str	r3, [sp, #24]
9002579e:	6812      	ldr	r2, [r2, #0]
900257a0:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
900257a4:	fb00 1303 	mla	r3, r0, r3, r1
900257a8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
900257ac:	9307      	str	r3, [sp, #28]
900257ae:	9b24      	ldr	r3, [sp, #144]	; 0x90
900257b0:	681b      	ldr	r3, [r3, #0]
900257b2:	9308      	str	r3, [sp, #32]
900257b4:	9b24      	ldr	r3, [sp, #144]	; 0x90
900257b6:	685b      	ldr	r3, [r3, #4]
900257b8:	9309      	str	r3, [sp, #36]	; 0x24
900257ba:	9b0e      	ldr	r3, [sp, #56]	; 0x38
900257bc:	2b00      	cmp	r3, #0
900257be:	dc03      	bgt.n	900257c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
900257c0:	9b10      	ldr	r3, [sp, #64]	; 0x40
900257c2:	2b00      	cmp	r3, #0
900257c4:	f340 83b6 	ble.w	90025f34 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
900257c8:	9b24      	ldr	r3, [sp, #144]	; 0x90
900257ca:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900257ce:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900257d2:	1e48      	subs	r0, r1, #1
900257d4:	1e55      	subs	r5, r2, #1
900257d6:	9b06      	ldr	r3, [sp, #24]
900257d8:	2b00      	cmp	r3, #0
900257da:	f340 8165 	ble.w	90025aa8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
900257de:	9e1d      	ldr	r6, [sp, #116]	; 0x74
900257e0:	9b1e      	ldr	r3, [sp, #120]	; 0x78
900257e2:	1436      	asrs	r6, r6, #16
900257e4:	ea4f 4323 	mov.w	r3, r3, asr #16
900257e8:	d406      	bmi.n	900257f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
900257ea:	4286      	cmp	r6, r0
900257ec:	da04      	bge.n	900257f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
900257ee:	2b00      	cmp	r3, #0
900257f0:	db02      	blt.n	900257f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
900257f2:	42ab      	cmp	r3, r5
900257f4:	f2c0 8159 	blt.w	90025aaa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
900257f8:	3601      	adds	r6, #1
900257fa:	f100 8146 	bmi.w	90025a8a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
900257fe:	42b1      	cmp	r1, r6
90025800:	f2c0 8143 	blt.w	90025a8a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
90025804:	3301      	adds	r3, #1
90025806:	f100 8140 	bmi.w	90025a8a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
9002580a:	429a      	cmp	r2, r3
9002580c:	f2c0 813d 	blt.w	90025a8a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
90025810:	9b06      	ldr	r3, [sp, #24]
90025812:	f64f 061f 	movw	r6, #63519	; 0xf81f
90025816:	9f07      	ldr	r7, [sp, #28]
90025818:	930f      	str	r3, [sp, #60]	; 0x3c
9002581a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
9002581c:	2b00      	cmp	r3, #0
9002581e:	f340 8166 	ble.w	90025aee <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90025822:	9b1e      	ldr	r3, [sp, #120]	; 0x78
90025824:	9d1d      	ldr	r5, [sp, #116]	; 0x74
90025826:	1418      	asrs	r0, r3, #16
90025828:	9b1d      	ldr	r3, [sp, #116]	; 0x74
9002582a:	142d      	asrs	r5, r5, #16
9002582c:	f3c3 3103 	ubfx	r1, r3, #12, #4
90025830:	9b1e      	ldr	r3, [sp, #120]	; 0x78
90025832:	f3c3 3c03 	ubfx	ip, r3, #12, #4
90025836:	9b24      	ldr	r3, [sp, #144]	; 0x90
90025838:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
9002583c:	f100 81f0 	bmi.w	90025c20 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
90025840:	f102 3eff 	add.w	lr, r2, #4294967295
90025844:	4575      	cmp	r5, lr
90025846:	f280 81eb 	bge.w	90025c20 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
9002584a:	2800      	cmp	r0, #0
9002584c:	f2c0 81e8 	blt.w	90025c20 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
90025850:	f103 3eff 	add.w	lr, r3, #4294967295
90025854:	4570      	cmp	r0, lr
90025856:	f280 81e3 	bge.w	90025c20 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
9002585a:	b212      	sxth	r2, r2
9002585c:	9b09      	ldr	r3, [sp, #36]	; 0x24
9002585e:	fa1f fe81 	uxth.w	lr, r1
90025862:	fb00 5002 	mla	r0, r0, r2, r5
90025866:	ea4f 150e 	mov.w	r5, lr, lsl #4
9002586a:	eb03 0a00 	add.w	sl, r3, r0
9002586e:	f813 9000 	ldrb.w	r9, [r3, r0]
90025872:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
90025876:	f89a 8001 	ldrb.w	r8, [sl, #1]
9002587a:	b29b      	uxth	r3, r3
9002587c:	f1bc 0f00 	cmp.w	ip, #0
90025880:	f000 817b 	beq.w	90025b7a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
90025884:	f81a 4002 	ldrb.w	r4, [sl, r2]
90025888:	eb0a 0b02 	add.w	fp, sl, r2
9002588c:	fa1f fa8c 	uxth.w	sl, ip
90025890:	940a      	str	r4, [sp, #40]	; 0x28
90025892:	fb0a fe0e 	mul.w	lr, sl, lr
90025896:	f89b 4001 	ldrb.w	r4, [fp, #1]
9002589a:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
9002589e:	eba5 050e 	sub.w	r5, r5, lr
900258a2:	940b      	str	r4, [sp, #44]	; 0x2c
900258a4:	fa1f fa8a 	uxth.w	sl, sl
900258a8:	9c0a      	ldr	r4, [sp, #40]	; 0x28
900258aa:	b2ad      	uxth	r5, r5
900258ac:	eba3 030a 	sub.w	r3, r3, sl
900258b0:	fb08 f505 	mul.w	r5, r8, r5
900258b4:	b29b      	uxth	r3, r3
900258b6:	fb09 5303 	mla	r3, r9, r3, r5
900258ba:	fb0a 3304 	mla	r3, sl, r4, r3
900258be:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
900258c0:	fb0e 3304 	mla	r3, lr, r4, r3
900258c4:	f3c3 2307 	ubfx	r3, r3, #8, #8
900258c8:	2b00      	cmp	r3, #0
900258ca:	f000 80d1 	beq.w	90025a70 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
900258ce:	9c08      	ldr	r4, [sp, #32]
900258d0:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
900258d4:	eb04 0540 	add.w	r5, r4, r0, lsl #1
900258d8:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
900258dc:	f000 8152 	beq.w	90025b84 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
900258e0:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
900258e4:	ea4f 0ae9 	mov.w	sl, r9, asr #3
900258e8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
900258ec:	fb0a fe0e 	mul.w	lr, sl, lr
900258f0:	fb09 f000 	mul.w	r0, r9, r0
900258f4:	ea06 195e 	and.w	r9, r6, lr, lsr #5
900258f8:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
900258fc:	f100 0b20 	add.w	fp, r0, #32
90025900:	44ce      	add	lr, r9
90025902:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
90025906:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
9002590a:	ea4f 2919 	mov.w	r9, r9, lsr #8
9002590e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
90025912:	ea4e 0909 	orr.w	r9, lr, r9
90025916:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
9002591a:	8868      	ldrh	r0, [r5, #2]
9002591c:	d019      	beq.n	90025952 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
9002591e:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
90025922:	ea4f 0ae8 	mov.w	sl, r8, asr #3
90025926:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9002592a:	fb0a fe0e 	mul.w	lr, sl, lr
9002592e:	fb08 f800 	mul.w	r8, r8, r0
90025932:	ea06 105e 	and.w	r0, r6, lr, lsr #5
90025936:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
9002593a:	f108 0b20 	add.w	fp, r8, #32
9002593e:	4486      	add	lr, r0
90025940:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
90025944:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
90025948:	0a00      	lsrs	r0, r0, #8
9002594a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9002594e:	ea4e 0000 	orr.w	r0, lr, r0
90025952:	ea4f 4e09 	mov.w	lr, r9, lsl #16
90025956:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
9002595a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
9002595e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90025962:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
90025966:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
9002596a:	ea4e 0909 	orr.w	r9, lr, r9
9002596e:	ea4a 0000 	orr.w	r0, sl, r0
90025972:	f1bc 0f00 	cmp.w	ip, #0
90025976:	f000 8107 	beq.w	90025b88 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
9002597a:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
9002597e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
90025980:	3a01      	subs	r2, #1
90025982:	2cff      	cmp	r4, #255	; 0xff
90025984:	ea4f 0242 	mov.w	r2, r2, lsl #1
90025988:	f102 0202 	add.w	r2, r2, #2
9002598c:	eb05 0e02 	add.w	lr, r5, r2
90025990:	5aaa      	ldrh	r2, [r5, r2]
90025992:	d018      	beq.n	900259c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
90025994:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
90025998:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9002599c:	ea4f 08e4 	mov.w	r8, r4, asr #3
900259a0:	fb04 fa02 	mul.w	sl, r4, r2
900259a4:	fb08 f805 	mul.w	r8, r8, r5
900259a8:	f10a 0520 	add.w	r5, sl, #32
900259ac:	ea06 1258 	and.w	r2, r6, r8, lsr #5
900259b0:	f608 0801 	addw	r8, r8, #2049	; 0x801
900259b4:	eb05 251a 	add.w	r5, r5, sl, lsr #8
900259b8:	4442      	add	r2, r8
900259ba:	0a2d      	lsrs	r5, r5, #8
900259bc:	ea06 1252 	and.w	r2, r6, r2, lsr #5
900259c0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
900259c4:	432a      	orrs	r2, r5
900259c6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
900259c8:	f8be 5002 	ldrh.w	r5, [lr, #2]
900259cc:	2cff      	cmp	r4, #255	; 0xff
900259ce:	d01a      	beq.n	90025a06 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
900259d0:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
900259d4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
900259d8:	ea4f 08e4 	mov.w	r8, r4, asr #3
900259dc:	fb04 fa05 	mul.w	sl, r4, r5
900259e0:	fb08 f80e 	mul.w	r8, r8, lr
900259e4:	f10a 0e20 	add.w	lr, sl, #32
900259e8:	ea06 1558 	and.w	r5, r6, r8, lsr #5
900259ec:	f608 0801 	addw	r8, r8, #2049	; 0x801
900259f0:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
900259f4:	4445      	add	r5, r8
900259f6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900259fa:	ea06 1555 	and.w	r5, r6, r5, lsr #5
900259fe:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
90025a02:	ea45 050e 	orr.w	r5, r5, lr
90025a06:	fb1c fe01 	smulbb	lr, ip, r1
90025a0a:	f1cc 0810 	rsb	r8, ip, #16
90025a0e:	ea4f 4a02 	mov.w	sl, r2, lsl #16
90025a12:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90025a16:	ea4f 0eee 	mov.w	lr, lr, asr #3
90025a1a:	eba8 0801 	sub.w	r8, r8, r1
90025a1e:	ea4f 4b05 	mov.w	fp, r5, lsl #16
90025a22:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90025a26:	ebce 0141 	rsb	r1, lr, r1, lsl #1
90025a2a:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
90025a2e:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
90025a32:	ea4a 0202 	orr.w	r2, sl, r2
90025a36:	4341      	muls	r1, r0
90025a38:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
90025a3c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
90025a40:	fb09 1108 	mla	r1, r9, r8, r1
90025a44:	ea4b 0505 	orr.w	r5, fp, r5
90025a48:	fb0c 1102 	mla	r1, ip, r2, r1
90025a4c:	fb0e 1e05 	mla	lr, lr, r5, r1
90025a50:	ea4f 525e 	mov.w	r2, lr, lsr #21
90025a54:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
90025a58:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90025a5c:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
90025a60:	ea42 0e0e 	orr.w	lr, r2, lr
90025a64:	fa1f f28e 	uxth.w	r2, lr
90025a68:	2bff      	cmp	r3, #255	; 0xff
90025a6a:	f040 80a1 	bne.w	90025bb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x424>
90025a6e:	803a      	strh	r2, [r7, #0]
90025a70:	9b1d      	ldr	r3, [sp, #116]	; 0x74
90025a72:	3702      	adds	r7, #2
90025a74:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
90025a76:	4413      	add	r3, r2
90025a78:	9a1e      	ldr	r2, [sp, #120]	; 0x78
90025a7a:	931d      	str	r3, [sp, #116]	; 0x74
90025a7c:	9b20      	ldr	r3, [sp, #128]	; 0x80
90025a7e:	441a      	add	r2, r3
90025a80:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90025a82:	3b01      	subs	r3, #1
90025a84:	921e      	str	r2, [sp, #120]	; 0x78
90025a86:	930f      	str	r3, [sp, #60]	; 0x3c
90025a88:	e6c7      	b.n	9002581a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90025a8a:	9b1d      	ldr	r3, [sp, #116]	; 0x74
90025a8c:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
90025a8e:	9c1e      	ldr	r4, [sp, #120]	; 0x78
90025a90:	4433      	add	r3, r6
90025a92:	931d      	str	r3, [sp, #116]	; 0x74
90025a94:	9b20      	ldr	r3, [sp, #128]	; 0x80
90025a96:	441c      	add	r4, r3
90025a98:	9b06      	ldr	r3, [sp, #24]
90025a9a:	3b01      	subs	r3, #1
90025a9c:	941e      	str	r4, [sp, #120]	; 0x78
90025a9e:	9306      	str	r3, [sp, #24]
90025aa0:	9b07      	ldr	r3, [sp, #28]
90025aa2:	3302      	adds	r3, #2
90025aa4:	9307      	str	r3, [sp, #28]
90025aa6:	e696      	b.n	900257d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
90025aa8:	d028      	beq.n	90025afc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90025aaa:	9b06      	ldr	r3, [sp, #24]
90025aac:	981f      	ldr	r0, [sp, #124]	; 0x7c
90025aae:	3b01      	subs	r3, #1
90025ab0:	9d1d      	ldr	r5, [sp, #116]	; 0x74
90025ab2:	fb00 5003 	mla	r0, r0, r3, r5
90025ab6:	1400      	asrs	r0, r0, #16
90025ab8:	f53f aeaa 	bmi.w	90025810 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90025abc:	3901      	subs	r1, #1
90025abe:	4288      	cmp	r0, r1
90025ac0:	f6bf aea6 	bge.w	90025810 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90025ac4:	9920      	ldr	r1, [sp, #128]	; 0x80
90025ac6:	981e      	ldr	r0, [sp, #120]	; 0x78
90025ac8:	fb01 0303 	mla	r3, r1, r3, r0
90025acc:	141b      	asrs	r3, r3, #16
90025ace:	f53f ae9f 	bmi.w	90025810 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90025ad2:	3a01      	subs	r2, #1
90025ad4:	4293      	cmp	r3, r2
90025ad6:	f6bf ae9b 	bge.w	90025810 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90025ada:	9b06      	ldr	r3, [sp, #24]
90025adc:	f64f 061f 	movw	r6, #63519	; 0xf81f
90025ae0:	f8dd e01c 	ldr.w	lr, [sp, #28]
90025ae4:	930f      	str	r3, [sp, #60]	; 0x3c
90025ae6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90025ae8:	2b00      	cmp	r3, #0
90025aea:	f300 80b6 	bgt.w	90025c5a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ce>
90025aee:	9b06      	ldr	r3, [sp, #24]
90025af0:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
90025af4:	9b07      	ldr	r3, [sp, #28]
90025af6:	eb03 0344 	add.w	r3, r3, r4, lsl #1
90025afa:	9307      	str	r3, [sp, #28]
90025afc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90025afe:	2b00      	cmp	r3, #0
90025b00:	f340 8218 	ble.w	90025f34 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
90025b04:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90025b08:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90025b0a:	ee30 0a04 	vadd.f32	s0, s0, s8
90025b0e:	ee70 0aa4 	vadd.f32	s1, s1, s9
90025b12:	eef0 6a62 	vmov.f32	s13, s5
90025b16:	eec7 7a00 	vdiv.f32	s15, s14, s0
90025b1a:	ee31 1a05 	vadd.f32	s2, s2, s10
90025b1e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90025b22:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
90025b26:	eef0 6a43 	vmov.f32	s13, s6
90025b2a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90025b2e:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
90025b32:	ee20 7aa7 	vmul.f32	s14, s1, s15
90025b36:	ee61 7a27 	vmul.f32	s15, s2, s15
90025b3a:	ee77 2a62 	vsub.f32	s5, s14, s5
90025b3e:	ee37 3ac3 	vsub.f32	s6, s15, s6
90025b42:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90025b46:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90025b4a:	ee12 2a90 	vmov	r2, s5
90025b4e:	eef0 2a47 	vmov.f32	s5, s14
90025b52:	fb92 f3f3 	sdiv	r3, r2, r3
90025b56:	ee13 2a10 	vmov	r2, s6
90025b5a:	931f      	str	r3, [sp, #124]	; 0x7c
90025b5c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90025b5e:	eeb0 3a67 	vmov.f32	s6, s15
90025b62:	fb92 f3f3 	sdiv	r3, r2, r3
90025b66:	9320      	str	r3, [sp, #128]	; 0x80
90025b68:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90025b6a:	9a10      	ldr	r2, [sp, #64]	; 0x40
90025b6c:	3b01      	subs	r3, #1
90025b6e:	930e      	str	r3, [sp, #56]	; 0x38
90025b70:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90025b72:	bf08      	it	eq
90025b74:	4613      	moveq	r3, r2
90025b76:	9306      	str	r3, [sp, #24]
90025b78:	e61f      	b.n	900257ba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
90025b7a:	fb08 f505 	mul.w	r5, r8, r5
90025b7e:	fb09 5303 	mla	r3, r9, r3, r5
90025b82:	e69f      	b.n	900258c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
90025b84:	4681      	mov	r9, r0
90025b86:	e6c6      	b.n	90025916 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
90025b88:	f1c1 0210 	rsb	r2, r1, #16
90025b8c:	4341      	muls	r1, r0
90025b8e:	fb09 1902 	mla	r9, r9, r2, r1
90025b92:	ea4f 0949 	mov.w	r9, r9, lsl #1
90025b96:	ea4f 5259 	mov.w	r2, r9, lsr #21
90025b9a:	ea4f 1959 	mov.w	r9, r9, lsr #5
90025b9e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90025ba2:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
90025ba6:	ea42 0909 	orr.w	r9, r2, r9
90025baa:	fa1f f289 	uxth.w	r2, r9
90025bae:	e75b      	b.n	90025a68 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>
90025bb0:	f8b7 c000 	ldrh.w	ip, [r7]
90025bb4:	43db      	mvns	r3, r3
90025bb6:	ea4f 202c 	mov.w	r0, ip, asr #8
90025bba:	fa5f fe83 	uxtb.w	lr, r3
90025bbe:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
90025bc2:	ea4f 05ec 	mov.w	r5, ip, asr #3
90025bc6:	ea4f 03cc 	mov.w	r3, ip, lsl #3
90025bca:	fb00 f00e 	mul.w	r0, r0, lr
90025bce:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
90025bd2:	b2db      	uxtb	r3, r3
90025bd4:	1c41      	adds	r1, r0, #1
90025bd6:	fb05 f50e 	mul.w	r5, r5, lr
90025bda:	fb03 f30e 	mul.w	r3, r3, lr
90025bde:	eb01 2010 	add.w	r0, r1, r0, lsr #8
90025be2:	1211      	asrs	r1, r2, #8
90025be4:	f021 0107 	bic.w	r1, r1, #7
90025be8:	eb01 2110 	add.w	r1, r1, r0, lsr #8
90025bec:	48d3      	ldr	r0, [pc, #844]	; (90025f3c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
90025bee:	b2c9      	uxtb	r1, r1
90025bf0:	ea00 2001 	and.w	r0, r0, r1, lsl #8
90025bf4:	1c69      	adds	r1, r5, #1
90025bf6:	eb01 2515 	add.w	r5, r1, r5, lsr #8
90025bfa:	10d1      	asrs	r1, r2, #3
90025bfc:	00d2      	lsls	r2, r2, #3
90025bfe:	f021 0103 	bic.w	r1, r1, #3
90025c02:	eb01 2115 	add.w	r1, r1, r5, lsr #8
90025c06:	00c9      	lsls	r1, r1, #3
90025c08:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90025c0c:	4301      	orrs	r1, r0
90025c0e:	1c58      	adds	r0, r3, #1
90025c10:	eb00 2313 	add.w	r3, r0, r3, lsr #8
90025c14:	eb02 2213 	add.w	r2, r2, r3, lsr #8
90025c18:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90025c1c:	430a      	orrs	r2, r1
90025c1e:	e726      	b.n	90025a6e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
90025c20:	f115 0e01 	adds.w	lr, r5, #1
90025c24:	f53f af24 	bmi.w	90025a70 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90025c28:	4572      	cmp	r2, lr
90025c2a:	f6ff af21 	blt.w	90025a70 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90025c2e:	f110 0e01 	adds.w	lr, r0, #1
90025c32:	f53f af1d 	bmi.w	90025a70 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90025c36:	4573      	cmp	r3, lr
90025c38:	f6ff af1a 	blt.w	90025a70 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90025c3c:	b21b      	sxth	r3, r3
90025c3e:	b212      	sxth	r2, r2
90025c40:	9301      	str	r3, [sp, #4]
90025c42:	9200      	str	r2, [sp, #0]
90025c44:	e9cd 1c04 	strd	r1, ip, [sp, #16]
90025c48:	e9cd 5002 	strd	r5, r0, [sp, #8]
90025c4c:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
90025c50:	4639      	mov	r1, r7
90025c52:	9811      	ldr	r0, [sp, #68]	; 0x44
90025c54:	f7ff fc22 	bl	9002549c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
90025c58:	e70a      	b.n	90025a70 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90025c5a:	9b1d      	ldr	r3, [sp, #116]	; 0x74
90025c5c:	f3c3 3203 	ubfx	r2, r3, #12, #4
90025c60:	9b1e      	ldr	r3, [sp, #120]	; 0x78
90025c62:	f3c3 3503 	ubfx	r5, r3, #12, #4
90025c66:	9b24      	ldr	r3, [sp, #144]	; 0x90
90025c68:	fa1f fc82 	uxth.w	ip, r2
90025c6c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90025c70:	9b1e      	ldr	r3, [sp, #120]	; 0x78
90025c72:	ea4f 100c 	mov.w	r0, ip, lsl #4
90025c76:	141f      	asrs	r7, r3, #16
90025c78:	9b1d      	ldr	r3, [sp, #116]	; 0x74
90025c7a:	141b      	asrs	r3, r3, #16
90025c7c:	fb01 3707 	mla	r7, r1, r7, r3
90025c80:	9b09      	ldr	r3, [sp, #36]	; 0x24
90025c82:	eb03 0a07 	add.w	sl, r3, r7
90025c86:	f813 9007 	ldrb.w	r9, [r3, r7]
90025c8a:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
90025c8e:	f89a 8001 	ldrb.w	r8, [sl, #1]
90025c92:	b29b      	uxth	r3, r3
90025c94:	2d00      	cmp	r5, #0
90025c96:	f000 80fe 	beq.w	90025e96 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70a>
90025c9a:	f81a 4001 	ldrb.w	r4, [sl, r1]
90025c9e:	eb0a 0b01 	add.w	fp, sl, r1
90025ca2:	fa1f fa85 	uxth.w	sl, r5
90025ca6:	940c      	str	r4, [sp, #48]	; 0x30
90025ca8:	fb0a fc0c 	mul.w	ip, sl, ip
90025cac:	f89b 4001 	ldrb.w	r4, [fp, #1]
90025cb0:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
90025cb4:	eba0 000c 	sub.w	r0, r0, ip
90025cb8:	940d      	str	r4, [sp, #52]	; 0x34
90025cba:	fa1f fa8a 	uxth.w	sl, sl
90025cbe:	b280      	uxth	r0, r0
90025cc0:	eba3 030a 	sub.w	r3, r3, sl
90025cc4:	fb08 f000 	mul.w	r0, r8, r0
90025cc8:	b29b      	uxth	r3, r3
90025cca:	fb09 0303 	mla	r3, r9, r3, r0
90025cce:	980c      	ldr	r0, [sp, #48]	; 0x30
90025cd0:	fb0a 3300 	mla	r3, sl, r0, r3
90025cd4:	fb0c 3304 	mla	r3, ip, r4, r3
90025cd8:	f3c3 2307 	ubfx	r3, r3, #8, #8
90025cdc:	2b00      	cmp	r3, #0
90025cde:	f000 80cc 	beq.w	90025e7a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
90025ce2:	9808      	ldr	r0, [sp, #32]
90025ce4:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
90025ce8:	9c08      	ldr	r4, [sp, #32]
90025cea:	eb00 0047 	add.w	r0, r0, r7, lsl #1
90025cee:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
90025cf2:	f000 80d5 	beq.w	90025ea0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
90025cf6:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
90025cfa:	ea4f 0ae9 	mov.w	sl, r9, asr #3
90025cfe:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
90025d02:	fb0a fc0c 	mul.w	ip, sl, ip
90025d06:	fb09 f707 	mul.w	r7, r9, r7
90025d0a:	ea06 195c 	and.w	r9, r6, ip, lsr #5
90025d0e:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
90025d12:	f107 0b20 	add.w	fp, r7, #32
90025d16:	44cc      	add	ip, r9
90025d18:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
90025d1c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
90025d20:	ea4f 2919 	mov.w	r9, r9, lsr #8
90025d24:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
90025d28:	ea4c 0909 	orr.w	r9, ip, r9
90025d2c:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
90025d30:	8847      	ldrh	r7, [r0, #2]
90025d32:	d019      	beq.n	90025d68 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5dc>
90025d34:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
90025d38:	ea4f 0ae8 	mov.w	sl, r8, asr #3
90025d3c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
90025d40:	fb0a fc0c 	mul.w	ip, sl, ip
90025d44:	fb08 f807 	mul.w	r8, r8, r7
90025d48:	ea06 175c 	and.w	r7, r6, ip, lsr #5
90025d4c:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
90025d50:	f108 0b20 	add.w	fp, r8, #32
90025d54:	44bc      	add	ip, r7
90025d56:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
90025d5a:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
90025d5e:	0a3f      	lsrs	r7, r7, #8
90025d60:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
90025d64:	ea4c 0707 	orr.w	r7, ip, r7
90025d68:	ea4f 4c09 	mov.w	ip, r9, lsl #16
90025d6c:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
90025d70:	ea4f 4a07 	mov.w	sl, r7, lsl #16
90025d74:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
90025d78:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
90025d7c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90025d80:	ea4c 0909 	orr.w	r9, ip, r9
90025d84:	ea4a 0707 	orr.w	r7, sl, r7
90025d88:	2d00      	cmp	r5, #0
90025d8a:	f000 808b 	beq.w	90025ea4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x718>
90025d8e:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
90025d92:	3901      	subs	r1, #1
90025d94:	0049      	lsls	r1, r1, #1
90025d96:	3102      	adds	r1, #2
90025d98:	eb00 0c01 	add.w	ip, r0, r1
90025d9c:	5a41      	ldrh	r1, [r0, r1]
90025d9e:	980c      	ldr	r0, [sp, #48]	; 0x30
90025da0:	28ff      	cmp	r0, #255	; 0xff
90025da2:	d019      	beq.n	90025dd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64c>
90025da4:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
90025da8:	9c0c      	ldr	r4, [sp, #48]	; 0x30
90025daa:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90025dae:	ea4f 08e4 	mov.w	r8, r4, asr #3
90025db2:	fb04 fa01 	mul.w	sl, r4, r1
90025db6:	fb08 f800 	mul.w	r8, r8, r0
90025dba:	f10a 0020 	add.w	r0, sl, #32
90025dbe:	ea06 1158 	and.w	r1, r6, r8, lsr #5
90025dc2:	f608 0801 	addw	r8, r8, #2049	; 0x801
90025dc6:	eb00 201a 	add.w	r0, r0, sl, lsr #8
90025dca:	4441      	add	r1, r8
90025dcc:	0a00      	lsrs	r0, r0, #8
90025dce:	ea06 1151 	and.w	r1, r6, r1, lsr #5
90025dd2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90025dd6:	4301      	orrs	r1, r0
90025dd8:	9c0d      	ldr	r4, [sp, #52]	; 0x34
90025dda:	f8bc 0002 	ldrh.w	r0, [ip, #2]
90025dde:	2cff      	cmp	r4, #255	; 0xff
90025de0:	d01a      	beq.n	90025e18 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68c>
90025de2:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
90025de6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90025dea:	ea4f 08e4 	mov.w	r8, r4, asr #3
90025dee:	fb04 fa00 	mul.w	sl, r4, r0
90025df2:	fb08 f80c 	mul.w	r8, r8, ip
90025df6:	f10a 0c20 	add.w	ip, sl, #32
90025dfa:	ea06 1058 	and.w	r0, r6, r8, lsr #5
90025dfe:	f608 0801 	addw	r8, r8, #2049	; 0x801
90025e02:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
90025e06:	4440      	add	r0, r8
90025e08:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90025e0c:	ea06 1050 	and.w	r0, r6, r0, lsr #5
90025e10:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
90025e14:	ea40 000c 	orr.w	r0, r0, ip
90025e18:	fb15 fc02 	smulbb	ip, r5, r2
90025e1c:	f1c5 0810 	rsb	r8, r5, #16
90025e20:	ea4f 4a01 	mov.w	sl, r1, lsl #16
90025e24:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
90025e28:	ea4f 0cec 	mov.w	ip, ip, asr #3
90025e2c:	eba8 0802 	sub.w	r8, r8, r2
90025e30:	ea4f 4b00 	mov.w	fp, r0, lsl #16
90025e34:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90025e38:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
90025e3c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90025e40:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
90025e44:	ea4a 0101 	orr.w	r1, sl, r1
90025e48:	437a      	muls	r2, r7
90025e4a:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
90025e4e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
90025e52:	fb09 2208 	mla	r2, r9, r8, r2
90025e56:	ea4b 0000 	orr.w	r0, fp, r0
90025e5a:	fb05 2201 	mla	r2, r5, r1, r2
90025e5e:	fb0c 2200 	mla	r2, ip, r0, r2
90025e62:	0d57      	lsrs	r7, r2, #21
90025e64:	0952      	lsrs	r2, r2, #5
90025e66:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
90025e6a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90025e6e:	433a      	orrs	r2, r7
90025e70:	2bff      	cmp	r3, #255	; 0xff
90025e72:	b292      	uxth	r2, r2
90025e74:	d127      	bne.n	90025ec6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x73a>
90025e76:	f8ae 2000 	strh.w	r2, [lr]
90025e7a:	9b1d      	ldr	r3, [sp, #116]	; 0x74
90025e7c:	f10e 0e02 	add.w	lr, lr, #2
90025e80:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
90025e82:	4413      	add	r3, r2
90025e84:	9a1e      	ldr	r2, [sp, #120]	; 0x78
90025e86:	931d      	str	r3, [sp, #116]	; 0x74
90025e88:	9b20      	ldr	r3, [sp, #128]	; 0x80
90025e8a:	441a      	add	r2, r3
90025e8c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90025e8e:	3b01      	subs	r3, #1
90025e90:	921e      	str	r2, [sp, #120]	; 0x78
90025e92:	930f      	str	r3, [sp, #60]	; 0x3c
90025e94:	e627      	b.n	90025ae6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
90025e96:	fb08 f000 	mul.w	r0, r8, r0
90025e9a:	fb09 0303 	mla	r3, r9, r3, r0
90025e9e:	e71b      	b.n	90025cd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54c>
90025ea0:	46b9      	mov	r9, r7
90025ea2:	e743      	b.n	90025d2c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a0>
90025ea4:	f1c2 0110 	rsb	r1, r2, #16
90025ea8:	437a      	muls	r2, r7
90025eaa:	fb09 2901 	mla	r9, r9, r1, r2
90025eae:	ea4f 0949 	mov.w	r9, r9, lsl #1
90025eb2:	ea4f 5059 	mov.w	r0, r9, lsr #21
90025eb6:	ea4f 1259 	mov.w	r2, r9, lsr #5
90025eba:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90025ebe:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90025ec2:	4302      	orrs	r2, r0
90025ec4:	e7d4      	b.n	90025e70 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e4>
90025ec6:	f8be 7000 	ldrh.w	r7, [lr]
90025eca:	43db      	mvns	r3, r3
90025ecc:	4c1b      	ldr	r4, [pc, #108]	; (90025f3c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
90025ece:	1238      	asrs	r0, r7, #8
90025ed0:	fa5f fc83 	uxtb.w	ip, r3
90025ed4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
90025ed8:	10fd      	asrs	r5, r7, #3
90025eda:	00fb      	lsls	r3, r7, #3
90025edc:	fb00 f00c 	mul.w	r0, r0, ip
90025ee0:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
90025ee4:	b2db      	uxtb	r3, r3
90025ee6:	fb05 f10c 	mul.w	r1, r5, ip
90025eea:	1c45      	adds	r5, r0, #1
90025eec:	fb03 f30c 	mul.w	r3, r3, ip
90025ef0:	eb05 2010 	add.w	r0, r5, r0, lsr #8
90025ef4:	1215      	asrs	r5, r2, #8
90025ef6:	f025 0507 	bic.w	r5, r5, #7
90025efa:	eb05 2010 	add.w	r0, r5, r0, lsr #8
90025efe:	1c4d      	adds	r5, r1, #1
90025f00:	eb05 2511 	add.w	r5, r5, r1, lsr #8
90025f04:	10d1      	asrs	r1, r2, #3
90025f06:	b2c0      	uxtb	r0, r0
90025f08:	f021 0103 	bic.w	r1, r1, #3
90025f0c:	00d2      	lsls	r2, r2, #3
90025f0e:	ea04 2000 	and.w	r0, r4, r0, lsl #8
90025f12:	eb01 2115 	add.w	r1, r1, r5, lsr #8
90025f16:	00c9      	lsls	r1, r1, #3
90025f18:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90025f1c:	4308      	orrs	r0, r1
90025f1e:	1c59      	adds	r1, r3, #1
90025f20:	eb01 2313 	add.w	r3, r1, r3, lsr #8
90025f24:	eb02 2313 	add.w	r3, r2, r3, lsr #8
90025f28:	f3c3 03c4 	ubfx	r3, r3, #3, #5
90025f2c:	4318      	orrs	r0, r3
90025f2e:	f8ae 0000 	strh.w	r0, [lr]
90025f32:	e7a2      	b.n	90025e7a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
90025f34:	b013      	add	sp, #76	; 0x4c
90025f36:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90025f3a:	bf00      	nop
90025f3c:	fffff800 	.word	0xfffff800

90025f40 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
90025f40:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90025f44:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
90025f48:	f9bd a020 	ldrsh.w	sl, [sp, #32]
90025f4c:	fb05 4c03 	mla	ip, r5, r3, r4
90025f50:	2d00      	cmp	r5, #0
90025f52:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
90025f56:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
90025f5a:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
90025f5e:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
90025f62:	8808      	ldrh	r0, [r1, #0]
90025f64:	f2c0 80a7 	blt.w	900260b6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
90025f68:	45aa      	cmp	sl, r5
90025f6a:	f340 80a4 	ble.w	900260b6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
90025f6e:	2c00      	cmp	r4, #0
90025f70:	f2c0 809f 	blt.w	900260b2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
90025f74:	42a3      	cmp	r3, r4
90025f76:	f340 809c 	ble.w	900260b2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
90025f7a:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
90025f7e:	1c62      	adds	r2, r4, #1
90025f80:	f100 809c 	bmi.w	900260bc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
90025f84:	4293      	cmp	r3, r2
90025f86:	f340 8099 	ble.w	900260bc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
90025f8a:	f1b9 0f00 	cmp.w	r9, #0
90025f8e:	f000 8095 	beq.w	900260bc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
90025f92:	f8be c002 	ldrh.w	ip, [lr, #2]
90025f96:	3501      	adds	r5, #1
90025f98:	f100 8094 	bmi.w	900260c4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
90025f9c:	45aa      	cmp	sl, r5
90025f9e:	f340 8091 	ble.w	900260c4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
90025fa2:	2f00      	cmp	r7, #0
90025fa4:	f000 808e 	beq.w	900260c4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
90025fa8:	2c00      	cmp	r4, #0
90025faa:	f2c0 8089 	blt.w	900260c0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
90025fae:	42a3      	cmp	r3, r4
90025fb0:	f340 8086 	ble.w	900260c0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
90025fb4:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
90025fb8:	3401      	adds	r4, #1
90025fba:	f100 8086 	bmi.w	900260ca <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
90025fbe:	42a3      	cmp	r3, r4
90025fc0:	f340 8083 	ble.w	900260ca <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
90025fc4:	f1b9 0f00 	cmp.w	r9, #0
90025fc8:	d07f      	beq.n	900260ca <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
90025fca:	3301      	adds	r3, #1
90025fcc:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
90025fd0:	ea4f 4408 	mov.w	r4, r8, lsl #16
90025fd4:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
90025fd8:	fb19 fe07 	smulbb	lr, r9, r7
90025fdc:	f1c7 0210 	rsb	r2, r7, #16
90025fe0:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
90025fe4:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
90025fe8:	eba2 0209 	sub.w	r2, r2, r9
90025fec:	ea44 0808 	orr.w	r8, r4, r8
90025ff0:	ea4f 440c 	mov.w	r4, ip, lsl #16
90025ff4:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
90025ff8:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
90025ffc:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
90026000:	ebce 0747 	rsb	r7, lr, r7, lsl #1
90026004:	ea44 0c0c 	orr.w	ip, r4, ip
90026008:	ebce 0449 	rsb	r4, lr, r9, lsl #1
9002600c:	fb04 f40c 	mul.w	r4, r4, ip
90026010:	fb02 4808 	mla	r8, r2, r8, r4
90026014:	041a      	lsls	r2, r3, #16
90026016:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
9002601a:	b2b4      	uxth	r4, r6
9002601c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
90026020:	43f6      	mvns	r6, r6
90026022:	4313      	orrs	r3, r2
90026024:	042a      	lsls	r2, r5, #16
90026026:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
9002602a:	b2f6      	uxtb	r6, r6
9002602c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
90026030:	fb0e 8303 	mla	r3, lr, r3, r8
90026034:	432a      	orrs	r2, r5
90026036:	fb07 3202 	mla	r2, r7, r2, r3
9002603a:	10c7      	asrs	r7, r0, #3
9002603c:	0d53      	lsrs	r3, r2, #21
9002603e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
90026042:	0952      	lsrs	r2, r2, #5
90026044:	fb17 f706 	smulbb	r7, r7, r6
90026048:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9002604c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90026050:	431a      	orrs	r2, r3
90026052:	b293      	uxth	r3, r2
90026054:	1202      	asrs	r2, r0, #8
90026056:	121d      	asrs	r5, r3, #8
90026058:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
9002605c:	00c0      	lsls	r0, r0, #3
9002605e:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
90026062:	fb12 f206 	smulbb	r2, r2, r6
90026066:	b2c0      	uxtb	r0, r0
90026068:	fb05 2504 	mla	r5, r5, r4, r2
9002606c:	10da      	asrs	r2, r3, #3
9002606e:	fb10 f006 	smulbb	r0, r0, r6
90026072:	00db      	lsls	r3, r3, #3
90026074:	b2ad      	uxth	r5, r5
90026076:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
9002607a:	b2db      	uxtb	r3, r3
9002607c:	fb02 7204 	mla	r2, r2, r4, r7
90026080:	fb03 0004 	mla	r0, r3, r4, r0
90026084:	1c6b      	adds	r3, r5, #1
90026086:	b292      	uxth	r2, r2
90026088:	b280      	uxth	r0, r0
9002608a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
9002608e:	1c43      	adds	r3, r0, #1
90026090:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
90026094:	eb03 2310 	add.w	r3, r3, r0, lsr #8
90026098:	1c50      	adds	r0, r2, #1
9002609a:	eb00 2212 	add.w	r2, r0, r2, lsr #8
9002609e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
900260a2:	0952      	lsrs	r2, r2, #5
900260a4:	432b      	orrs	r3, r5
900260a6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
900260aa:	4313      	orrs	r3, r2
900260ac:	800b      	strh	r3, [r1, #0]
900260ae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
900260b2:	4680      	mov	r8, r0
900260b4:	e763      	b.n	90025f7e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
900260b6:	4684      	mov	ip, r0
900260b8:	4680      	mov	r8, r0
900260ba:	e76c      	b.n	90025f96 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
900260bc:	4684      	mov	ip, r0
900260be:	e76a      	b.n	90025f96 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
900260c0:	4605      	mov	r5, r0
900260c2:	e779      	b.n	90025fb8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
900260c4:	4603      	mov	r3, r0
900260c6:	4605      	mov	r5, r0
900260c8:	e782      	b.n	90025fd0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
900260ca:	4603      	mov	r3, r0
900260cc:	e780      	b.n	90025fd0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

900260ce <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900260ce:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900260d2:	b093      	sub	sp, #76	; 0x4c
900260d4:	461d      	mov	r5, r3
900260d6:	9210      	str	r2, [sp, #64]	; 0x40
900260d8:	9b21      	ldr	r3, [sp, #132]	; 0x84
900260da:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
900260de:	910a      	str	r1, [sp, #40]	; 0x28
900260e0:	920b      	str	r2, [sp, #44]	; 0x2c
900260e2:	6859      	ldr	r1, [r3, #4]
900260e4:	681b      	ldr	r3, [r3, #0]
900260e6:	9011      	str	r0, [sp, #68]	; 0x44
900260e8:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
900260ec:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
900260f0:	fb01 2707 	mla	r7, r1, r7, r2
900260f4:	eb03 0347 	add.w	r3, r3, r7, lsl #1
900260f8:	9307      	str	r3, [sp, #28]
900260fa:	9b24      	ldr	r3, [sp, #144]	; 0x90
900260fc:	681b      	ldr	r3, [r3, #0]
900260fe:	9309      	str	r3, [sp, #36]	; 0x24
90026100:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90026102:	43db      	mvns	r3, r3
90026104:	b2db      	uxtb	r3, r3
90026106:	9308      	str	r3, [sp, #32]
90026108:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9002610a:	2b00      	cmp	r3, #0
9002610c:	dc03      	bgt.n	90026116 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
9002610e:	9b10      	ldr	r3, [sp, #64]	; 0x40
90026110:	2b00      	cmp	r3, #0
90026112:	f340 8205 	ble.w	90026520 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90026116:	9b24      	ldr	r3, [sp, #144]	; 0x90
90026118:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002611c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90026120:	1e48      	subs	r0, r1, #1
90026122:	f102 3cff 	add.w	ip, r2, #4294967295
90026126:	2d00      	cmp	r5, #0
90026128:	f340 80da 	ble.w	900262e0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
9002612c:	ea5f 4e24 	movs.w	lr, r4, asr #16
90026130:	ea4f 4326 	mov.w	r3, r6, asr #16
90026134:	d406      	bmi.n	90026144 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
90026136:	4586      	cmp	lr, r0
90026138:	da04      	bge.n	90026144 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9002613a:	2b00      	cmp	r3, #0
9002613c:	db02      	blt.n	90026144 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9002613e:	4563      	cmp	r3, ip
90026140:	f2c0 80cf 	blt.w	900262e2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
90026144:	f11e 0e01 	adds.w	lr, lr, #1
90026148:	f100 80c1 	bmi.w	900262ce <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
9002614c:	4571      	cmp	r1, lr
9002614e:	f2c0 80be 	blt.w	900262ce <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
90026152:	3301      	adds	r3, #1
90026154:	f100 80bb 	bmi.w	900262ce <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
90026158:	429a      	cmp	r2, r3
9002615a:	f2c0 80b8 	blt.w	900262ce <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
9002615e:	46a9      	mov	r9, r5
90026160:	f8dd 801c 	ldr.w	r8, [sp, #28]
90026164:	f1b9 0f00 	cmp.w	r9, #0
90026168:	f340 80d8 	ble.w	9002631c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
9002616c:	9b24      	ldr	r3, [sp, #144]	; 0x90
9002616e:	1421      	asrs	r1, r4, #16
90026170:	ea4f 4026 	mov.w	r0, r6, asr #16
90026174:	f3c4 3203 	ubfx	r2, r4, #12, #4
90026178:	f3c6 3c03 	ubfx	ip, r6, #12, #4
9002617c:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
90026180:	f100 8112 	bmi.w	900263a8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
90026184:	f10e 3aff 	add.w	sl, lr, #4294967295
90026188:	4551      	cmp	r1, sl
9002618a:	f280 810d 	bge.w	900263a8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
9002618e:	2800      	cmp	r0, #0
90026190:	f2c0 810a 	blt.w	900263a8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
90026194:	f103 3aff 	add.w	sl, r3, #4294967295
90026198:	4550      	cmp	r0, sl
9002619a:	f280 8105 	bge.w	900263a8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
9002619e:	fa0f f38e 	sxth.w	r3, lr
900261a2:	fb00 1103 	mla	r1, r0, r3, r1
900261a6:	9809      	ldr	r0, [sp, #36]	; 0x24
900261a8:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
900261ac:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
900261b0:	f8ba 1002 	ldrh.w	r1, [sl, #2]
900261b4:	f1bc 0f00 	cmp.w	ip, #0
900261b8:	d007      	beq.n	900261ca <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
900261ba:	005b      	lsls	r3, r3, #1
900261bc:	eb0a 0003 	add.w	r0, sl, r3
900261c0:	f83a 3003 	ldrh.w	r3, [sl, r3]
900261c4:	930c      	str	r3, [sp, #48]	; 0x30
900261c6:	8843      	ldrh	r3, [r0, #2]
900261c8:	930d      	str	r3, [sp, #52]	; 0x34
900261ca:	ea4f 400e 	mov.w	r0, lr, lsl #16
900261ce:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
900261d2:	fb12 f30c 	smulbb	r3, r2, ip
900261d6:	ea4f 4a01 	mov.w	sl, r1, lsl #16
900261da:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
900261de:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
900261e2:	10db      	asrs	r3, r3, #3
900261e4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
900261e8:	ea40 000e 	orr.w	r0, r0, lr
900261ec:	f1cc 0e10 	rsb	lr, ip, #16
900261f0:	ea4a 0101 	orr.w	r1, sl, r1
900261f4:	9f08      	ldr	r7, [sp, #32]
900261f6:	ebae 0e02 	sub.w	lr, lr, r2
900261fa:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
900261fe:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
90026202:	4351      	muls	r1, r2
90026204:	9a0d      	ldr	r2, [sp, #52]	; 0x34
90026206:	fb0e 1e00 	mla	lr, lr, r0, r1
9002620a:	990c      	ldr	r1, [sp, #48]	; 0x30
9002620c:	0410      	lsls	r0, r2, #16
9002620e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90026212:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
90026216:	4310      	orrs	r0, r2
90026218:	9a0c      	ldr	r2, [sp, #48]	; 0x30
9002621a:	0412      	lsls	r2, r2, #16
9002621c:	fb03 e000 	mla	r0, r3, r0, lr
90026220:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
90026224:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
90026228:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
9002622c:	ea42 020e 	orr.w	r2, r2, lr
90026230:	fb03 0302 	mla	r3, r3, r2, r0
90026234:	f8b8 0000 	ldrh.w	r0, [r8]
90026238:	0d5a      	lsrs	r2, r3, #21
9002623a:	095b      	lsrs	r3, r3, #5
9002623c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90026240:	1201      	asrs	r1, r0, #8
90026242:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
90026246:	ea4f 0ee0 	mov.w	lr, r0, asr #3
9002624a:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
9002624e:	00c0      	lsls	r0, r0, #3
90026250:	4313      	orrs	r3, r2
90026252:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
90026256:	fb11 f107 	smulbb	r1, r1, r7
9002625a:	b2c0      	uxtb	r0, r0
9002625c:	b29b      	uxth	r3, r3
9002625e:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
90026262:	fb10 f007 	smulbb	r0, r0, r7
90026266:	fb1e fe07 	smulbb	lr, lr, r7
9002626a:	ea4f 2c23 	mov.w	ip, r3, asr #8
9002626e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
90026272:	fb0c 1c02 	mla	ip, ip, r2, r1
90026276:	10d9      	asrs	r1, r3, #3
90026278:	00db      	lsls	r3, r3, #3
9002627a:	fa1f fc8c 	uxth.w	ip, ip
9002627e:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
90026282:	b2db      	uxtb	r3, r3
90026284:	fb01 e102 	mla	r1, r1, r2, lr
90026288:	fb03 0302 	mla	r3, r3, r2, r0
9002628c:	b289      	uxth	r1, r1
9002628e:	b29a      	uxth	r2, r3
90026290:	f10c 0301 	add.w	r3, ip, #1
90026294:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
90026298:	1c53      	adds	r3, r2, #1
9002629a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9002629e:	1c4a      	adds	r2, r1, #1
900262a0:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
900262a4:	eb02 2111 	add.w	r1, r2, r1, lsr #8
900262a8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
900262ac:	0949      	lsrs	r1, r1, #5
900262ae:	ea43 030c 	orr.w	r3, r3, ip
900262b2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
900262b6:	430b      	orrs	r3, r1
900262b8:	f8a8 3000 	strh.w	r3, [r8]
900262bc:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
900262be:	f108 0802 	add.w	r8, r8, #2
900262c2:	f109 39ff 	add.w	r9, r9, #4294967295
900262c6:	441c      	add	r4, r3
900262c8:	9b20      	ldr	r3, [sp, #128]	; 0x80
900262ca:	441e      	add	r6, r3
900262cc:	e74a      	b.n	90026164 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
900262ce:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
900262d0:	3d01      	subs	r5, #1
900262d2:	441c      	add	r4, r3
900262d4:	9b20      	ldr	r3, [sp, #128]	; 0x80
900262d6:	441e      	add	r6, r3
900262d8:	9b07      	ldr	r3, [sp, #28]
900262da:	3302      	adds	r3, #2
900262dc:	9307      	str	r3, [sp, #28]
900262de:	e722      	b.n	90026126 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
900262e0:	d022      	beq.n	90026328 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
900262e2:	1e6b      	subs	r3, r5, #1
900262e4:	981f      	ldr	r0, [sp, #124]	; 0x7c
900262e6:	fb00 4003 	mla	r0, r0, r3, r4
900262ea:	1400      	asrs	r0, r0, #16
900262ec:	f53f af37 	bmi.w	9002615e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
900262f0:	3901      	subs	r1, #1
900262f2:	4288      	cmp	r0, r1
900262f4:	f6bf af33 	bge.w	9002615e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
900262f8:	9920      	ldr	r1, [sp, #128]	; 0x80
900262fa:	fb01 6303 	mla	r3, r1, r3, r6
900262fe:	141b      	asrs	r3, r3, #16
90026300:	f53f af2d 	bmi.w	9002615e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90026304:	3a01      	subs	r2, #1
90026306:	4293      	cmp	r3, r2
90026308:	f6bf af29 	bge.w	9002615e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9002630c:	46a8      	mov	r8, r5
9002630e:	f8dd 901c 	ldr.w	r9, [sp, #28]
90026312:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
90026316:	f1b8 0f00 	cmp.w	r8, #0
9002631a:	dc60      	bgt.n	900263de <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x310>
9002631c:	9b07      	ldr	r3, [sp, #28]
9002631e:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
90026322:	eb03 0345 	add.w	r3, r3, r5, lsl #1
90026326:	9307      	str	r3, [sp, #28]
90026328:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9002632a:	2b00      	cmp	r3, #0
9002632c:	f340 80f8 	ble.w	90026520 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90026330:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90026334:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90026336:	ee30 0a04 	vadd.f32	s0, s0, s8
9002633a:	ee70 0aa4 	vadd.f32	s1, s1, s9
9002633e:	eef0 6a62 	vmov.f32	s13, s5
90026342:	eec7 7a00 	vdiv.f32	s15, s14, s0
90026346:	ee31 1a05 	vadd.f32	s2, s2, s10
9002634a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002634e:	ee16 4a90 	vmov	r4, s13
90026352:	eef0 6a43 	vmov.f32	s13, s6
90026356:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002635a:	ee16 6a90 	vmov	r6, s13
9002635e:	ee20 7aa7 	vmul.f32	s14, s1, s15
90026362:	ee61 7a27 	vmul.f32	s15, s2, s15
90026366:	ee77 2a62 	vsub.f32	s5, s14, s5
9002636a:	ee37 3ac3 	vsub.f32	s6, s15, s6
9002636e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90026372:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90026376:	ee12 2a90 	vmov	r2, s5
9002637a:	eef0 2a47 	vmov.f32	s5, s14
9002637e:	fb92 f3f3 	sdiv	r3, r2, r3
90026382:	ee13 2a10 	vmov	r2, s6
90026386:	931f      	str	r3, [sp, #124]	; 0x7c
90026388:	9b1c      	ldr	r3, [sp, #112]	; 0x70
9002638a:	eeb0 3a67 	vmov.f32	s6, s15
9002638e:	fb92 f3f3 	sdiv	r3, r2, r3
90026392:	9320      	str	r3, [sp, #128]	; 0x80
90026394:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90026396:	9a10      	ldr	r2, [sp, #64]	; 0x40
90026398:	3b01      	subs	r3, #1
9002639a:	930a      	str	r3, [sp, #40]	; 0x28
9002639c:	bf08      	it	eq
9002639e:	4615      	moveq	r5, r2
900263a0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
900263a2:	bf18      	it	ne
900263a4:	461d      	movne	r5, r3
900263a6:	e6af      	b.n	90026108 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
900263a8:	f111 0a01 	adds.w	sl, r1, #1
900263ac:	d486      	bmi.n	900262bc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
900263ae:	45d6      	cmp	lr, sl
900263b0:	db84      	blt.n	900262bc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
900263b2:	f110 0a01 	adds.w	sl, r0, #1
900263b6:	d481      	bmi.n	900262bc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
900263b8:	4553      	cmp	r3, sl
900263ba:	f6ff af7f 	blt.w	900262bc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
900263be:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
900263c0:	b21b      	sxth	r3, r3
900263c2:	9101      	str	r1, [sp, #4]
900263c4:	4641      	mov	r1, r8
900263c6:	9300      	str	r3, [sp, #0]
900263c8:	fa0f f38e 	sxth.w	r3, lr
900263cc:	e9cd 0202 	strd	r0, r2, [sp, #8]
900263d0:	e9cd c704 	strd	ip, r7, [sp, #16]
900263d4:	9a09      	ldr	r2, [sp, #36]	; 0x24
900263d6:	9811      	ldr	r0, [sp, #68]	; 0x44
900263d8:	f7ff fdb2 	bl	90025f40 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
900263dc:	e76e      	b.n	900262bc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
900263de:	9b24      	ldr	r3, [sp, #144]	; 0x90
900263e0:	1430      	asrs	r0, r6, #16
900263e2:	9f09      	ldr	r7, [sp, #36]	; 0x24
900263e4:	f3c6 3e03 	ubfx	lr, r6, #12, #4
900263e8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900263ec:	1423      	asrs	r3, r4, #16
900263ee:	f3c4 3203 	ubfx	r2, r4, #12, #4
900263f2:	fb01 3000 	mla	r0, r1, r0, r3
900263f6:	9b09      	ldr	r3, [sp, #36]	; 0x24
900263f8:	eb03 0340 	add.w	r3, r3, r0, lsl #1
900263fc:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
90026400:	8858      	ldrh	r0, [r3, #2]
90026402:	f1be 0f00 	cmp.w	lr, #0
90026406:	d00b      	beq.n	90026420 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
90026408:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
9002640c:	3901      	subs	r1, #1
9002640e:	0049      	lsls	r1, r1, #1
90026410:	3102      	adds	r1, #2
90026412:	eb03 0b01 	add.w	fp, r3, r1
90026416:	5a5b      	ldrh	r3, [r3, r1]
90026418:	930e      	str	r3, [sp, #56]	; 0x38
9002641a:	f8bb 3002 	ldrh.w	r3, [fp, #2]
9002641e:	930f      	str	r3, [sp, #60]	; 0x3c
90026420:	ea4f 410c 	mov.w	r1, ip, lsl #16
90026424:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
90026428:	fb12 f30e 	smulbb	r3, r2, lr
9002642c:	ea4f 4b00 	mov.w	fp, r0, lsl #16
90026430:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
90026434:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90026438:	10db      	asrs	r3, r3, #3
9002643a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
9002643e:	ea41 010c 	orr.w	r1, r1, ip
90026442:	f1ce 0c10 	rsb	ip, lr, #16
90026446:	ea4b 0000 	orr.w	r0, fp, r0
9002644a:	9f08      	ldr	r7, [sp, #32]
9002644c:	ebac 0c02 	sub.w	ip, ip, r2
90026450:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
90026454:	f108 38ff 	add.w	r8, r8, #4294967295
90026458:	4350      	muls	r0, r2
9002645a:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
9002645e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
90026460:	fb0c 0c01 	mla	ip, ip, r1, r0
90026464:	980e      	ldr	r0, [sp, #56]	; 0x38
90026466:	ea4f 4b02 	mov.w	fp, r2, lsl #16
9002646a:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
9002646e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
90026470:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90026474:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
90026478:	0412      	lsls	r2, r2, #16
9002647a:	ea4b 0101 	orr.w	r1, fp, r1
9002647e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
90026482:	fb03 c101 	mla	r1, r3, r1, ip
90026486:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
9002648a:	4302      	orrs	r2, r0
9002648c:	fb03 1202 	mla	r2, r3, r2, r1
90026490:	ea4f 5b52 	mov.w	fp, r2, lsr #21
90026494:	0952      	lsrs	r2, r2, #5
90026496:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
9002649a:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
9002649e:	f8b9 2000 	ldrh.w	r2, [r9]
900264a2:	ea4b 0303 	orr.w	r3, fp, r3
900264a6:	1211      	asrs	r1, r2, #8
900264a8:	ea4f 0ce2 	mov.w	ip, r2, asr #3
900264ac:	b29b      	uxth	r3, r3
900264ae:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
900264b2:	00d2      	lsls	r2, r2, #3
900264b4:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
900264b8:	fb11 f107 	smulbb	r1, r1, r7
900264bc:	1218      	asrs	r0, r3, #8
900264be:	fb1c fc07 	smulbb	ip, ip, r7
900264c2:	b2d2      	uxtb	r2, r2
900264c4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
900264c8:	fb12 f207 	smulbb	r2, r2, r7
900264cc:	fb00 100a 	mla	r0, r0, sl, r1
900264d0:	10d9      	asrs	r1, r3, #3
900264d2:	00db      	lsls	r3, r3, #3
900264d4:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
900264d8:	b280      	uxth	r0, r0
900264da:	b2db      	uxtb	r3, r3
900264dc:	fb01 c10a 	mla	r1, r1, sl, ip
900264e0:	fb03 230a 	mla	r3, r3, sl, r2
900264e4:	1c42      	adds	r2, r0, #1
900264e6:	b289      	uxth	r1, r1
900264e8:	b29b      	uxth	r3, r3
900264ea:	eb02 2010 	add.w	r0, r2, r0, lsr #8
900264ee:	f101 0c01 	add.w	ip, r1, #1
900264f2:	1c5a      	adds	r2, r3, #1
900264f4:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
900264f8:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
900264fc:	eb02 2213 	add.w	r2, r2, r3, lsr #8
90026500:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90026502:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
90026506:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9002650a:	441c      	add	r4, r3
9002650c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
90026510:	9b20      	ldr	r3, [sp, #128]	; 0x80
90026512:	4310      	orrs	r0, r2
90026514:	441e      	add	r6, r3
90026516:	ea40 000c 	orr.w	r0, r0, ip
9002651a:	f829 0b02 	strh.w	r0, [r9], #2
9002651e:	e6fa      	b.n	90026316 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
90026520:	b013      	add	sp, #76	; 0x4c
90026522:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90026526 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
90026526:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9002652a:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
9002652e:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
90026532:	fb0e 4703 	mla	r7, lr, r3, r4
90026536:	f1be 0f00 	cmp.w	lr, #0
9002653a:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
9002653e:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
90026542:	eb02 0847 	add.w	r8, r2, r7, lsl #1
90026546:	8808      	ldrh	r0, [r1, #0]
90026548:	db60      	blt.n	9002660c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
9002654a:	45f1      	cmp	r9, lr
9002654c:	dd5e      	ble.n	9002660c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
9002654e:	2c00      	cmp	r4, #0
90026550:	db5a      	blt.n	90026608 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
90026552:	42a3      	cmp	r3, r4
90026554:	dd58      	ble.n	90026608 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
90026556:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
9002655a:	1c62      	adds	r2, r4, #1
9002655c:	d459      	bmi.n	90026612 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
9002655e:	4293      	cmp	r3, r2
90026560:	dd57      	ble.n	90026612 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
90026562:	2d00      	cmp	r5, #0
90026564:	d055      	beq.n	90026612 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
90026566:	f8b8 7002 	ldrh.w	r7, [r8, #2]
9002656a:	f11e 0e01 	adds.w	lr, lr, #1
9002656e:	d454      	bmi.n	9002661a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
90026570:	45f1      	cmp	r9, lr
90026572:	dd52      	ble.n	9002661a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
90026574:	2e00      	cmp	r6, #0
90026576:	d050      	beq.n	9002661a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
90026578:	2c00      	cmp	r4, #0
9002657a:	db4c      	blt.n	90026616 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
9002657c:	42a3      	cmp	r3, r4
9002657e:	dd4a      	ble.n	90026616 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
90026580:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
90026584:	3401      	adds	r4, #1
90026586:	d405      	bmi.n	90026594 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
90026588:	42a3      	cmp	r3, r4
9002658a:	dd03      	ble.n	90026594 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
9002658c:	b115      	cbz	r5, 90026594 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
9002658e:	3301      	adds	r3, #1
90026590:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
90026594:	fb15 f406 	smulbb	r4, r5, r6
90026598:	ea4f 430c 	mov.w	r3, ip, lsl #16
9002659c:	ea4f 4e07 	mov.w	lr, r7, lsl #16
900265a0:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
900265a4:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
900265a8:	f3c4 04c7 	ubfx	r4, r4, #3, #8
900265ac:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
900265b0:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
900265b4:	ea43 0c0c 	orr.w	ip, r3, ip
900265b8:	f1c6 0310 	rsb	r3, r6, #16
900265bc:	ea4e 0707 	orr.w	r7, lr, r7
900265c0:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
900265c4:	1b5b      	subs	r3, r3, r5
900265c6:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
900265ca:	eb04 0343 	add.w	r3, r4, r3, lsl #1
900265ce:	437d      	muls	r5, r7
900265d0:	fb03 5c0c 	mla	ip, r3, ip, r5
900265d4:	0403      	lsls	r3, r0, #16
900265d6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
900265da:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
900265de:	4318      	orrs	r0, r3
900265e0:	0413      	lsls	r3, r2, #16
900265e2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
900265e6:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
900265ea:	fb04 c000 	mla	r0, r4, r0, ip
900265ee:	4313      	orrs	r3, r2
900265f0:	fb06 0003 	mla	r0, r6, r3, r0
900265f4:	0d43      	lsrs	r3, r0, #21
900265f6:	0940      	lsrs	r0, r0, #5
900265f8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
900265fc:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90026600:	4318      	orrs	r0, r3
90026602:	8008      	strh	r0, [r1, #0]
90026604:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90026608:	4684      	mov	ip, r0
9002660a:	e7a6      	b.n	9002655a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
9002660c:	4607      	mov	r7, r0
9002660e:	4684      	mov	ip, r0
90026610:	e7ab      	b.n	9002656a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
90026612:	4607      	mov	r7, r0
90026614:	e7a9      	b.n	9002656a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
90026616:	4602      	mov	r2, r0
90026618:	e7b4      	b.n	90026584 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
9002661a:	4602      	mov	r2, r0
9002661c:	e7ba      	b.n	90026594 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

9002661e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9002661e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90026622:	b08f      	sub	sp, #60	; 0x3c
90026624:	461d      	mov	r5, r3
90026626:	9b1d      	ldr	r3, [sp, #116]	; 0x74
90026628:	9107      	str	r1, [sp, #28]
9002662a:	920c      	str	r2, [sp, #48]	; 0x30
9002662c:	6859      	ldr	r1, [r3, #4]
9002662e:	681b      	ldr	r3, [r3, #0]
90026630:	900d      	str	r0, [sp, #52]	; 0x34
90026632:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
90026636:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
9002663a:	fb01 2707 	mla	r7, r1, r7, r2
9002663e:	eb03 0747 	add.w	r7, r3, r7, lsl #1
90026642:	9b20      	ldr	r3, [sp, #128]	; 0x80
90026644:	f8d3 8000 	ldr.w	r8, [r3]
90026648:	9b07      	ldr	r3, [sp, #28]
9002664a:	2b00      	cmp	r3, #0
9002664c:	dc03      	bgt.n	90026656 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
9002664e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90026650:	2b00      	cmp	r3, #0
90026652:	f340 8182 	ble.w	9002695a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
90026656:	9b20      	ldr	r3, [sp, #128]	; 0x80
90026658:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002665c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90026660:	1e48      	subs	r0, r1, #1
90026662:	f102 3cff 	add.w	ip, r2, #4294967295
90026666:	2d00      	cmp	r5, #0
90026668:	f340 809b 	ble.w	900267a2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
9002666c:	ea5f 4e24 	movs.w	lr, r4, asr #16
90026670:	ea4f 4326 	mov.w	r3, r6, asr #16
90026674:	d406      	bmi.n	90026684 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90026676:	4586      	cmp	lr, r0
90026678:	da04      	bge.n	90026684 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9002667a:	2b00      	cmp	r3, #0
9002667c:	db02      	blt.n	90026684 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9002667e:	4563      	cmp	r3, ip
90026680:	f2c0 8090 	blt.w	900267a4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
90026684:	f11e 0e01 	adds.w	lr, lr, #1
90026688:	f100 8084 	bmi.w	90026794 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
9002668c:	4571      	cmp	r1, lr
9002668e:	f2c0 8081 	blt.w	90026794 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
90026692:	3301      	adds	r3, #1
90026694:	d47e      	bmi.n	90026794 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
90026696:	429a      	cmp	r2, r3
90026698:	db7c      	blt.n	90026794 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
9002669a:	46aa      	mov	sl, r5
9002669c:	46b9      	mov	r9, r7
9002669e:	f1ba 0f00 	cmp.w	sl, #0
900266a2:	f340 8099 	ble.w	900267d8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
900266a6:	9b20      	ldr	r3, [sp, #128]	; 0x80
900266a8:	1421      	asrs	r1, r4, #16
900266aa:	ea4f 4026 	mov.w	r0, r6, asr #16
900266ae:	f3c4 3203 	ubfx	r2, r4, #12, #4
900266b2:	f3c6 3c03 	ubfx	ip, r6, #12, #4
900266b6:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
900266ba:	f100 80d1 	bmi.w	90026860 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
900266be:	f10e 3bff 	add.w	fp, lr, #4294967295
900266c2:	4559      	cmp	r1, fp
900266c4:	f280 80cc 	bge.w	90026860 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
900266c8:	2800      	cmp	r0, #0
900266ca:	f2c0 80c9 	blt.w	90026860 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
900266ce:	f103 3bff 	add.w	fp, r3, #4294967295
900266d2:	4558      	cmp	r0, fp
900266d4:	f280 80c4 	bge.w	90026860 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
900266d8:	fa0f fe8e 	sxth.w	lr, lr
900266dc:	fb00 110e 	mla	r1, r0, lr, r1
900266e0:	eb08 0041 	add.w	r0, r8, r1, lsl #1
900266e4:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
900266e8:	8841      	ldrh	r1, [r0, #2]
900266ea:	f1bc 0f00 	cmp.w	ip, #0
900266ee:	d00b      	beq.n	90026708 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
900266f0:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
900266f4:	3b01      	subs	r3, #1
900266f6:	005b      	lsls	r3, r3, #1
900266f8:	3302      	adds	r3, #2
900266fa:	eb00 0e03 	add.w	lr, r0, r3
900266fe:	5ac3      	ldrh	r3, [r0, r3]
90026700:	9308      	str	r3, [sp, #32]
90026702:	f8be 3002 	ldrh.w	r3, [lr, #2]
90026706:	9309      	str	r3, [sp, #36]	; 0x24
90026708:	ea4f 400b 	mov.w	r0, fp, lsl #16
9002670c:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
90026710:	fb12 f30c 	smulbb	r3, r2, ip
90026714:	f1cc 0e10 	rsb	lr, ip, #16
90026718:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
9002671c:	10db      	asrs	r3, r3, #3
9002671e:	ebae 0e02 	sub.w	lr, lr, r2
90026722:	ea40 000b 	orr.w	r0, r0, fp
90026726:	ea4f 4b01 	mov.w	fp, r1, lsl #16
9002672a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
9002672e:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
90026732:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
90026736:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
9002673a:	ea4b 0101 	orr.w	r1, fp, r1
9002673e:	4351      	muls	r1, r2
90026740:	9a09      	ldr	r2, [sp, #36]	; 0x24
90026742:	fb0e 1e00 	mla	lr, lr, r0, r1
90026746:	0410      	lsls	r0, r2, #16
90026748:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
9002674c:	9908      	ldr	r1, [sp, #32]
9002674e:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
90026752:	4310      	orrs	r0, r2
90026754:	9a08      	ldr	r2, [sp, #32]
90026756:	0412      	lsls	r2, r2, #16
90026758:	fb03 e000 	mla	r0, r3, r0, lr
9002675c:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
90026760:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
90026764:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
90026768:	ea42 020e 	orr.w	r2, r2, lr
9002676c:	fb03 0302 	mla	r3, r3, r2, r0
90026770:	0d5a      	lsrs	r2, r3, #21
90026772:	095b      	lsrs	r3, r3, #5
90026774:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90026778:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
9002677c:	4313      	orrs	r3, r2
9002677e:	f8a9 3000 	strh.w	r3, [r9]
90026782:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
90026784:	f109 0902 	add.w	r9, r9, #2
90026788:	f10a 3aff 	add.w	sl, sl, #4294967295
9002678c:	441c      	add	r4, r3
9002678e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90026790:	441e      	add	r6, r3
90026792:	e784      	b.n	9002669e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
90026794:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
90026796:	3d01      	subs	r5, #1
90026798:	3702      	adds	r7, #2
9002679a:	441c      	add	r4, r3
9002679c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
9002679e:	441e      	add	r6, r3
900267a0:	e761      	b.n	90026666 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
900267a2:	d01d      	beq.n	900267e0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
900267a4:	1e6b      	subs	r3, r5, #1
900267a6:	981b      	ldr	r0, [sp, #108]	; 0x6c
900267a8:	fb00 4003 	mla	r0, r0, r3, r4
900267ac:	1400      	asrs	r0, r0, #16
900267ae:	f53f af74 	bmi.w	9002669a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
900267b2:	3901      	subs	r1, #1
900267b4:	4288      	cmp	r0, r1
900267b6:	f6bf af70 	bge.w	9002669a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
900267ba:	991c      	ldr	r1, [sp, #112]	; 0x70
900267bc:	fb01 6303 	mla	r3, r1, r3, r6
900267c0:	141b      	asrs	r3, r3, #16
900267c2:	f53f af6a 	bmi.w	9002669a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
900267c6:	3a01      	subs	r2, #1
900267c8:	4293      	cmp	r3, r2
900267ca:	f6bf af66 	bge.w	9002669a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
900267ce:	46a9      	mov	r9, r5
900267d0:	46ba      	mov	sl, r7
900267d2:	f1b9 0f00 	cmp.w	r9, #0
900267d6:	dc5b      	bgt.n	90026890 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
900267d8:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
900267dc:	eb07 0745 	add.w	r7, r7, r5, lsl #1
900267e0:	9b07      	ldr	r3, [sp, #28]
900267e2:	2b00      	cmp	r3, #0
900267e4:	f340 80b9 	ble.w	9002695a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
900267e8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
900267ec:	9b18      	ldr	r3, [sp, #96]	; 0x60
900267ee:	ee30 0a04 	vadd.f32	s0, s0, s8
900267f2:	ee70 0aa4 	vadd.f32	s1, s1, s9
900267f6:	eef0 6a62 	vmov.f32	s13, s5
900267fa:	eec7 7a00 	vdiv.f32	s15, s14, s0
900267fe:	ee31 1a05 	vadd.f32	s2, s2, s10
90026802:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90026806:	ee16 4a90 	vmov	r4, s13
9002680a:	eef0 6a43 	vmov.f32	s13, s6
9002680e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90026812:	ee16 6a90 	vmov	r6, s13
90026816:	ee20 7aa7 	vmul.f32	s14, s1, s15
9002681a:	ee61 7a27 	vmul.f32	s15, s2, s15
9002681e:	ee77 2a62 	vsub.f32	s5, s14, s5
90026822:	ee37 3ac3 	vsub.f32	s6, s15, s6
90026826:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9002682a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9002682e:	ee12 2a90 	vmov	r2, s5
90026832:	eef0 2a47 	vmov.f32	s5, s14
90026836:	fb92 f3f3 	sdiv	r3, r2, r3
9002683a:	ee13 2a10 	vmov	r2, s6
9002683e:	931b      	str	r3, [sp, #108]	; 0x6c
90026840:	9b18      	ldr	r3, [sp, #96]	; 0x60
90026842:	eeb0 3a67 	vmov.f32	s6, s15
90026846:	fb92 f3f3 	sdiv	r3, r2, r3
9002684a:	931c      	str	r3, [sp, #112]	; 0x70
9002684c:	9b07      	ldr	r3, [sp, #28]
9002684e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
90026850:	3b01      	subs	r3, #1
90026852:	9307      	str	r3, [sp, #28]
90026854:	bf08      	it	eq
90026856:	4615      	moveq	r5, r2
90026858:	9b18      	ldr	r3, [sp, #96]	; 0x60
9002685a:	bf18      	it	ne
9002685c:	461d      	movne	r5, r3
9002685e:	e6f3      	b.n	90026648 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
90026860:	f111 0b01 	adds.w	fp, r1, #1
90026864:	d48d      	bmi.n	90026782 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90026866:	45de      	cmp	lr, fp
90026868:	db8b      	blt.n	90026782 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9002686a:	f110 0b01 	adds.w	fp, r0, #1
9002686e:	d488      	bmi.n	90026782 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90026870:	455b      	cmp	r3, fp
90026872:	db86      	blt.n	90026782 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90026874:	b21b      	sxth	r3, r3
90026876:	e9cd 1001 	strd	r1, r0, [sp, #4]
9002687a:	e9cd 2c03 	strd	r2, ip, [sp, #12]
9002687e:	9300      	str	r3, [sp, #0]
90026880:	4642      	mov	r2, r8
90026882:	fa0f f38e 	sxth.w	r3, lr
90026886:	4649      	mov	r1, r9
90026888:	980d      	ldr	r0, [sp, #52]	; 0x34
9002688a:	f7ff fe4c 	bl	90026526 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
9002688e:	e778      	b.n	90026782 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90026890:	9b20      	ldr	r3, [sp, #128]	; 0x80
90026892:	1420      	asrs	r0, r4, #16
90026894:	1431      	asrs	r1, r6, #16
90026896:	f3c6 3e03 	ubfx	lr, r6, #12, #4
9002689a:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
9002689e:	f3c4 3203 	ubfx	r2, r4, #12, #4
900268a2:	fb03 0101 	mla	r1, r3, r1, r0
900268a6:	eb08 0041 	add.w	r0, r8, r1, lsl #1
900268aa:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
900268ae:	8841      	ldrh	r1, [r0, #2]
900268b0:	f1be 0f00 	cmp.w	lr, #0
900268b4:	d00b      	beq.n	900268ce <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
900268b6:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
900268ba:	3b01      	subs	r3, #1
900268bc:	005b      	lsls	r3, r3, #1
900268be:	3302      	adds	r3, #2
900268c0:	eb00 0b03 	add.w	fp, r0, r3
900268c4:	5ac3      	ldrh	r3, [r0, r3]
900268c6:	930a      	str	r3, [sp, #40]	; 0x28
900268c8:	f8bb 3002 	ldrh.w	r3, [fp, #2]
900268cc:	930b      	str	r3, [sp, #44]	; 0x2c
900268ce:	ea4f 400c 	mov.w	r0, ip, lsl #16
900268d2:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
900268d6:	fb12 f30e 	smulbb	r3, r2, lr
900268da:	ea4f 4b01 	mov.w	fp, r1, lsl #16
900268de:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
900268e2:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
900268e6:	10db      	asrs	r3, r3, #3
900268e8:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
900268ec:	ea40 000c 	orr.w	r0, r0, ip
900268f0:	f1ce 0c10 	rsb	ip, lr, #16
900268f4:	ea4b 0101 	orr.w	r1, fp, r1
900268f8:	f109 39ff 	add.w	r9, r9, #4294967295
900268fc:	ebac 0c02 	sub.w	ip, ip, r2
90026900:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
90026904:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
90026908:	4351      	muls	r1, r2
9002690a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
9002690c:	fb0c 1c00 	mla	ip, ip, r0, r1
90026910:	990a      	ldr	r1, [sp, #40]	; 0x28
90026912:	ea4f 4b02 	mov.w	fp, r2, lsl #16
90026916:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
9002691a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
9002691c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
90026920:	0412      	lsls	r2, r2, #16
90026922:	ea4b 0000 	orr.w	r0, fp, r0
90026926:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
9002692a:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
9002692e:	fb03 c000 	mla	r0, r3, r0, ip
90026932:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
90026936:	ea42 0b0b 	orr.w	fp, r2, fp
9002693a:	fb03 000b 	mla	r0, r3, fp, r0
9002693e:	0d43      	lsrs	r3, r0, #21
90026940:	0940      	lsrs	r0, r0, #5
90026942:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90026946:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
9002694a:	4318      	orrs	r0, r3
9002694c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
9002694e:	441c      	add	r4, r3
90026950:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90026952:	f82a 0b02 	strh.w	r0, [sl], #2
90026956:	441e      	add	r6, r3
90026958:	e73b      	b.n	900267d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
9002695a:	b00f      	add	sp, #60	; 0x3c
9002695c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90026960 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
90026960:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90026964:	b085      	sub	sp, #20
90026966:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
9002696a:	9102      	str	r1, [sp, #8]
9002696c:	2c00      	cmp	r4, #0
9002696e:	fb04 7103 	mla	r1, r4, r3, r7
90026972:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
90026976:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
9002697a:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
9002697e:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
90026982:	f2c0 811b 	blt.w	90026bbc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
90026986:	45a6      	cmp	lr, r4
90026988:	f340 8118 	ble.w	90026bbc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
9002698c:	2f00      	cmp	r7, #0
9002698e:	f2c0 8113 	blt.w	90026bb8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
90026992:	42bb      	cmp	r3, r7
90026994:	f340 8110 	ble.w	90026bb8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
90026998:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
9002699c:	1c7a      	adds	r2, r7, #1
9002699e:	f100 8110 	bmi.w	90026bc2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
900269a2:	4293      	cmp	r3, r2
900269a4:	f340 810d 	ble.w	90026bc2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
900269a8:	2e00      	cmp	r6, #0
900269aa:	f000 810c 	beq.w	90026bc6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
900269ae:	f8dc 1004 	ldr.w	r1, [ip, #4]
900269b2:	3401      	adds	r4, #1
900269b4:	f100 810b 	bmi.w	90026bce <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
900269b8:	45a6      	cmp	lr, r4
900269ba:	f340 8108 	ble.w	90026bce <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
900269be:	2800      	cmp	r0, #0
900269c0:	f000 8108 	beq.w	90026bd4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
900269c4:	2f00      	cmp	r7, #0
900269c6:	f2c0 8100 	blt.w	90026bca <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
900269ca:	42bb      	cmp	r3, r7
900269cc:	f340 80fd 	ble.w	90026bca <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
900269d0:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
900269d4:	3701      	adds	r7, #1
900269d6:	f100 8100 	bmi.w	90026bda <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
900269da:	42bb      	cmp	r3, r7
900269dc:	f340 80fd 	ble.w	90026bda <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
900269e0:	2e00      	cmp	r6, #0
900269e2:	f000 80fc 	beq.w	90026bde <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
900269e6:	3301      	adds	r3, #1
900269e8:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
900269ec:	b2b6      	uxth	r6, r6
900269ee:	b280      	uxth	r0, r0
900269f0:	ea4f 6a11 	mov.w	sl, r1, lsr #24
900269f4:	fb00 fe06 	mul.w	lr, r0, r6
900269f8:	0136      	lsls	r6, r6, #4
900269fa:	ea4f 6b15 	mov.w	fp, r5, lsr #24
900269fe:	ebce 1000 	rsb	r0, lr, r0, lsl #4
90026a02:	eba6 070e 	sub.w	r7, r6, lr
90026a06:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
90026a0a:	ea4f 6914 	mov.w	r9, r4, lsr #24
90026a0e:	b280      	uxth	r0, r0
90026a10:	b2bf      	uxth	r7, r7
90026a12:	1a1b      	subs	r3, r3, r0
90026a14:	ea4f 6812 	mov.w	r8, r2, lsr #24
90026a18:	fb0a f607 	mul.w	r6, sl, r7
90026a1c:	b29b      	uxth	r3, r3
90026a1e:	fb0b 6603 	mla	r6, fp, r3, r6
90026a22:	fb00 6609 	mla	r6, r0, r9, r6
90026a26:	fb0e 6608 	mla	r6, lr, r8, r6
90026a2a:	f3c6 2607 	ubfx	r6, r6, #8, #8
90026a2e:	9600      	str	r6, [sp, #0]
90026a30:	2e00      	cmp	r6, #0
90026a32:	f000 80be 	beq.w	90026bb2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
90026a36:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
90026a3a:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
90026a3e:	9e02      	ldr	r6, [sp, #8]
90026a40:	fb0b fc0c 	mul.w	ip, fp, ip
90026a44:	fb0b f505 	mul.w	r5, fp, r5
90026a48:	8836      	ldrh	r6, [r6, #0]
90026a4a:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
90026a4e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
90026a52:	9501      	str	r5, [sp, #4]
90026a54:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
90026a58:	44dc      	add	ip, fp
90026a5a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90026a5e:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
90026a62:	9503      	str	r5, [sp, #12]
90026a64:	9d01      	ldr	r5, [sp, #4]
90026a66:	f505 7c80 	add.w	ip, r5, #256	; 0x100
90026a6a:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
90026a6e:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
90026a72:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
90026a76:	fb0a fc0c 	mul.w	ip, sl, ip
90026a7a:	ea4f 2b15 	mov.w	fp, r5, lsr #8
90026a7e:	fb0a fa01 	mul.w	sl, sl, r1
90026a82:	ea4f 251c 	mov.w	r5, ip, lsr #8
90026a86:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
90026a8a:	f50a 7180 	add.w	r1, sl, #256	; 0x100
90026a8e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
90026a92:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
90026a96:	4465      	add	r5, ip
90026a98:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
90026a9c:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
90026aa0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90026aa4:	fb09 fc0c 	mul.w	ip, r9, ip
90026aa8:	0a2d      	lsrs	r5, r5, #8
90026aaa:	fb09 f904 	mul.w	r9, r9, r4
90026aae:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90026ab2:	ea4f 211c 	mov.w	r1, ip, lsr #8
90026ab6:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
90026aba:	f509 7480 	add.w	r4, r9, #256	; 0x100
90026abe:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
90026ac2:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
90026ac6:	437d      	muls	r5, r7
90026ac8:	eb04 2919 	add.w	r9, r4, r9, lsr #8
90026acc:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
90026ad0:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
90026ad4:	4461      	add	r1, ip
90026ad6:	fb08 f404 	mul.w	r4, r8, r4
90026ada:	ea4f 2919 	mov.w	r9, r9, lsr #8
90026ade:	fb08 f802 	mul.w	r8, r8, r2
90026ae2:	0a09      	lsrs	r1, r1, #8
90026ae4:	0a22      	lsrs	r2, r4, #8
90026ae6:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
90026aea:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
90026aee:	fb07 f70a 	mul.w	r7, r7, sl
90026af2:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
90026af6:	4414      	add	r4, r2
90026af8:	f508 7280 	add.w	r2, r8, #256	; 0x100
90026afc:	0a24      	lsrs	r4, r4, #8
90026afe:	eb02 2818 	add.w	r8, r2, r8, lsr #8
90026b02:	9a03      	ldr	r2, [sp, #12]
90026b04:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
90026b08:	fb02 5503 	mla	r5, r2, r3, r5
90026b0c:	ea4f 2818 	mov.w	r8, r8, lsr #8
90026b10:	9a00      	ldr	r2, [sp, #0]
90026b12:	fb04 540e 	mla	r4, r4, lr, r5
90026b16:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
90026b1a:	1235      	asrs	r5, r6, #8
90026b1c:	fb01 4100 	mla	r1, r1, r0, r4
90026b20:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
90026b24:	0a09      	lsrs	r1, r1, #8
90026b26:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
90026b2a:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
90026b2e:	fb03 7101 	mla	r1, r3, r1, r7
90026b32:	fb0e 1e08 	mla	lr, lr, r8, r1
90026b36:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
90026b3a:	fb00 e101 	mla	r1, r0, r1, lr
90026b3e:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
90026b42:	b287      	uxth	r7, r0
90026b44:	0a09      	lsrs	r1, r1, #8
90026b46:	437a      	muls	r2, r7
90026b48:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
90026b4c:	1c53      	adds	r3, r2, #1
90026b4e:	4321      	orrs	r1, r4
90026b50:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90026b54:	0c0a      	lsrs	r2, r1, #16
90026b56:	f3c1 2407 	ubfx	r4, r1, #8, #8
90026b5a:	ea6f 2313 	mvn.w	r3, r3, lsr #8
90026b5e:	b2c8      	uxtb	r0, r1
90026b60:	fb12 f207 	smulbb	r2, r2, r7
90026b64:	fb14 f407 	smulbb	r4, r4, r7
90026b68:	b2db      	uxtb	r3, r3
90026b6a:	fb10 f007 	smulbb	r0, r0, r7
90026b6e:	fb05 2503 	mla	r5, r5, r3, r2
90026b72:	10f2      	asrs	r2, r6, #3
90026b74:	00f6      	lsls	r6, r6, #3
90026b76:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
90026b7a:	b2ad      	uxth	r5, r5
90026b7c:	b2f6      	uxtb	r6, r6
90026b7e:	fb02 4203 	mla	r2, r2, r3, r4
90026b82:	fb06 0303 	mla	r3, r6, r3, r0
90026b86:	b294      	uxth	r4, r2
90026b88:	b299      	uxth	r1, r3
90026b8a:	1c6b      	adds	r3, r5, #1
90026b8c:	1c62      	adds	r2, r4, #1
90026b8e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90026b92:	1c4b      	adds	r3, r1, #1
90026b94:	eb02 2214 	add.w	r2, r2, r4, lsr #8
90026b98:	eb03 2311 	add.w	r3, r3, r1, lsr #8
90026b9c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
90026ba0:	0952      	lsrs	r2, r2, #5
90026ba2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90026ba6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90026baa:	432b      	orrs	r3, r5
90026bac:	4313      	orrs	r3, r2
90026bae:	9a02      	ldr	r2, [sp, #8]
90026bb0:	8013      	strh	r3, [r2, #0]
90026bb2:	b005      	add	sp, #20
90026bb4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90026bb8:	2500      	movs	r5, #0
90026bba:	e6ef      	b.n	9002699c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
90026bbc:	2100      	movs	r1, #0
90026bbe:	460d      	mov	r5, r1
90026bc0:	e6f7      	b.n	900269b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
90026bc2:	2100      	movs	r1, #0
90026bc4:	e6f5      	b.n	900269b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
90026bc6:	4631      	mov	r1, r6
90026bc8:	e6f3      	b.n	900269b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
90026bca:	2400      	movs	r4, #0
90026bcc:	e702      	b.n	900269d4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
90026bce:	2200      	movs	r2, #0
90026bd0:	4614      	mov	r4, r2
90026bd2:	e70b      	b.n	900269ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
90026bd4:	4602      	mov	r2, r0
90026bd6:	4604      	mov	r4, r0
90026bd8:	e708      	b.n	900269ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
90026bda:	2200      	movs	r2, #0
90026bdc:	e706      	b.n	900269ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
90026bde:	4632      	mov	r2, r6
90026be0:	e704      	b.n	900269ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

90026be2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90026be2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90026be6:	b09d      	sub	sp, #116	; 0x74
90026be8:	9219      	str	r2, [sp, #100]	; 0x64
90026bea:	9307      	str	r3, [sp, #28]
90026bec:	9a2b      	ldr	r2, [sp, #172]	; 0xac
90026bee:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
90026bf2:	901b      	str	r0, [sp, #108]	; 0x6c
90026bf4:	931a      	str	r3, [sp, #104]	; 0x68
90026bf6:	6850      	ldr	r0, [r2, #4]
90026bf8:	9117      	str	r1, [sp, #92]	; 0x5c
90026bfa:	6812      	ldr	r2, [r2, #0]
90026bfc:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
90026c00:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
90026c04:	fb00 1303 	mla	r3, r0, r3, r1
90026c08:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90026c0c:	930a      	str	r3, [sp, #40]	; 0x28
90026c0e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
90026c10:	681b      	ldr	r3, [r3, #0]
90026c12:	9310      	str	r3, [sp, #64]	; 0x40
90026c14:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
90026c18:	930b      	str	r3, [sp, #44]	; 0x2c
90026c1a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
90026c1c:	2b00      	cmp	r3, #0
90026c1e:	dc03      	bgt.n	90026c28 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
90026c20:	9b19      	ldr	r3, [sp, #100]	; 0x64
90026c22:	2b00      	cmp	r3, #0
90026c24:	f340 8375 	ble.w	90027312 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
90026c28:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
90026c2a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90026c2e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90026c32:	1e48      	subs	r0, r1, #1
90026c34:	1e57      	subs	r7, r2, #1
90026c36:	9b07      	ldr	r3, [sp, #28]
90026c38:	2b00      	cmp	r3, #0
90026c3a:	f340 818e 	ble.w	90026f5a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
90026c3e:	ea5f 4c24 	movs.w	ip, r4, asr #16
90026c42:	ea4f 4326 	mov.w	r3, r6, asr #16
90026c46:	d406      	bmi.n	90026c56 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
90026c48:	4584      	cmp	ip, r0
90026c4a:	da04      	bge.n	90026c56 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
90026c4c:	2b00      	cmp	r3, #0
90026c4e:	db02      	blt.n	90026c56 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
90026c50:	42bb      	cmp	r3, r7
90026c52:	f2c0 8183 	blt.w	90026f5c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
90026c56:	f11c 0c01 	adds.w	ip, ip, #1
90026c5a:	f100 8173 	bmi.w	90026f44 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90026c5e:	4561      	cmp	r1, ip
90026c60:	f2c0 8170 	blt.w	90026f44 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90026c64:	3301      	adds	r3, #1
90026c66:	f100 816d 	bmi.w	90026f44 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90026c6a:	429a      	cmp	r2, r3
90026c6c:	f2c0 816a 	blt.w	90026f44 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90026c70:	9b07      	ldr	r3, [sp, #28]
90026c72:	9f0a      	ldr	r7, [sp, #40]	; 0x28
90026c74:	9318      	str	r3, [sp, #96]	; 0x60
90026c76:	9b18      	ldr	r3, [sp, #96]	; 0x60
90026c78:	2b00      	cmp	r3, #0
90026c7a:	f340 818c 	ble.w	90026f96 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
90026c7e:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
90026c80:	ea4f 4c26 	mov.w	ip, r6, asr #16
90026c84:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
90026c86:	f3c4 3003 	ubfx	r0, r4, #12, #4
90026c8a:	f8d2 e00c 	ldr.w	lr, [r2, #12]
90026c8e:	1422      	asrs	r2, r4, #16
90026c90:	f3c6 3103 	ubfx	r1, r6, #12, #4
90026c94:	689b      	ldr	r3, [r3, #8]
90026c96:	f100 81cd 	bmi.w	90027034 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90026c9a:	f103 38ff 	add.w	r8, r3, #4294967295
90026c9e:	4542      	cmp	r2, r8
90026ca0:	f280 81c8 	bge.w	90027034 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90026ca4:	f1bc 0f00 	cmp.w	ip, #0
90026ca8:	f2c0 81c4 	blt.w	90027034 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90026cac:	f10e 38ff 	add.w	r8, lr, #4294967295
90026cb0:	45c4      	cmp	ip, r8
90026cb2:	f280 81bf 	bge.w	90027034 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90026cb6:	b21b      	sxth	r3, r3
90026cb8:	9d10      	ldr	r5, [sp, #64]	; 0x40
90026cba:	fb0c 2203 	mla	r2, ip, r3, r2
90026cbe:	eb05 0882 	add.w	r8, r5, r2, lsl #2
90026cc2:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
90026cc6:	ea4f 6e12 	mov.w	lr, r2, lsr #24
90026cca:	2800      	cmp	r0, #0
90026ccc:	f000 81a9 	beq.w	90027022 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
90026cd0:	f8d8 5004 	ldr.w	r5, [r8, #4]
90026cd4:	950c      	str	r5, [sp, #48]	; 0x30
90026cd6:	0e2d      	lsrs	r5, r5, #24
90026cd8:	9513      	str	r5, [sp, #76]	; 0x4c
90026cda:	b181      	cbz	r1, 90026cfe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
90026cdc:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
90026ce0:	3b01      	subs	r3, #1
90026ce2:	009b      	lsls	r3, r3, #2
90026ce4:	3304      	adds	r3, #4
90026ce6:	eb08 0c03 	add.w	ip, r8, r3
90026cea:	f858 3003 	ldr.w	r3, [r8, r3]
90026cee:	9308      	str	r3, [sp, #32]
90026cf0:	0e1b      	lsrs	r3, r3, #24
90026cf2:	9311      	str	r3, [sp, #68]	; 0x44
90026cf4:	f8dc 3004 	ldr.w	r3, [ip, #4]
90026cf8:	930d      	str	r3, [sp, #52]	; 0x34
90026cfa:	0e1b      	lsrs	r3, r3, #24
90026cfc:	9314      	str	r3, [sp, #80]	; 0x50
90026cfe:	b280      	uxth	r0, r0
90026d00:	9d11      	ldr	r5, [sp, #68]	; 0x44
90026d02:	b289      	uxth	r1, r1
90026d04:	fb00 f901 	mul.w	r9, r0, r1
90026d08:	0100      	lsls	r0, r0, #4
90026d0a:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
90026d0e:	eba0 0809 	sub.w	r8, r0, r9
90026d12:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
90026d16:	9813      	ldr	r0, [sp, #76]	; 0x4c
90026d18:	b289      	uxth	r1, r1
90026d1a:	fa1f f888 	uxth.w	r8, r8
90026d1e:	1a5b      	subs	r3, r3, r1
90026d20:	fb08 f000 	mul.w	r0, r8, r0
90026d24:	b29b      	uxth	r3, r3
90026d26:	fb03 000e 	mla	r0, r3, lr, r0
90026d2a:	fb01 0005 	mla	r0, r1, r5, r0
90026d2e:	9d14      	ldr	r5, [sp, #80]	; 0x50
90026d30:	fb09 0005 	mla	r0, r9, r5, r0
90026d34:	f3c0 2007 	ubfx	r0, r0, #8, #8
90026d38:	2800      	cmp	r0, #0
90026d3a:	f000 80fa 	beq.w	90026f32 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90026d3e:	f1be 0fff 	cmp.w	lr, #255	; 0xff
90026d42:	d01b      	beq.n	90026d7c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
90026d44:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
90026d48:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
90026d4c:	fb0e fa0a 	mul.w	sl, lr, sl
90026d50:	fb0e fe02 	mul.w	lr, lr, r2
90026d54:	ea4f 221a 	mov.w	r2, sl, lsr #8
90026d58:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
90026d5c:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
90026d60:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
90026d64:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
90026d68:	4452      	add	r2, sl
90026d6a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90026d6e:	0a12      	lsrs	r2, r2, #8
90026d70:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
90026d74:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
90026d78:	ea42 020c 	orr.w	r2, r2, ip
90026d7c:	9d13      	ldr	r5, [sp, #76]	; 0x4c
90026d7e:	2dff      	cmp	r5, #255	; 0xff
90026d80:	d021      	beq.n	90026dc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
90026d82:	9d0c      	ldr	r5, [sp, #48]	; 0x30
90026d84:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
90026d88:	9d13      	ldr	r5, [sp, #76]	; 0x4c
90026d8a:	fb05 fb0b 	mul.w	fp, r5, fp
90026d8e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
90026d90:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
90026d94:	9d13      	ldr	r5, [sp, #76]	; 0x4c
90026d96:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90026d9a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90026d9e:	fb05 fa0a 	mul.w	sl, r5, sl
90026da2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90026da6:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90026daa:	44de      	add	lr, fp
90026dac:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90026db0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90026db4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90026db8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90026dbc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90026dc0:	ea4e 050a 	orr.w	r5, lr, sl
90026dc4:	950c      	str	r5, [sp, #48]	; 0x30
90026dc6:	9d11      	ldr	r5, [sp, #68]	; 0x44
90026dc8:	2dff      	cmp	r5, #255	; 0xff
90026dca:	d021      	beq.n	90026e10 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
90026dcc:	9d08      	ldr	r5, [sp, #32]
90026dce:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
90026dd2:	9d11      	ldr	r5, [sp, #68]	; 0x44
90026dd4:	fb05 fb0b 	mul.w	fp, r5, fp
90026dd8:	9d08      	ldr	r5, [sp, #32]
90026dda:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
90026dde:	9d11      	ldr	r5, [sp, #68]	; 0x44
90026de0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90026de4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90026de8:	fb05 fa0a 	mul.w	sl, r5, sl
90026dec:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90026df0:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90026df4:	44de      	add	lr, fp
90026df6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90026dfa:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90026dfe:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90026e02:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90026e06:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90026e0a:	ea4e 050a 	orr.w	r5, lr, sl
90026e0e:	9508      	str	r5, [sp, #32]
90026e10:	9d14      	ldr	r5, [sp, #80]	; 0x50
90026e12:	2dff      	cmp	r5, #255	; 0xff
90026e14:	d021      	beq.n	90026e5a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
90026e16:	9d0d      	ldr	r5, [sp, #52]	; 0x34
90026e18:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
90026e1c:	9d14      	ldr	r5, [sp, #80]	; 0x50
90026e1e:	fb05 fb0b 	mul.w	fp, r5, fp
90026e22:	9d0d      	ldr	r5, [sp, #52]	; 0x34
90026e24:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
90026e28:	9d14      	ldr	r5, [sp, #80]	; 0x50
90026e2a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90026e2e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90026e32:	fb05 fa0a 	mul.w	sl, r5, sl
90026e36:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90026e3a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90026e3e:	44de      	add	lr, fp
90026e40:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90026e44:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90026e48:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90026e4c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90026e50:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90026e54:	ea4e 050a 	orr.w	r5, lr, sl
90026e58:	950d      	str	r5, [sp, #52]	; 0x34
90026e5a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
90026e5c:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
90026e60:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
90026e64:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
90026e68:	9d08      	ldr	r5, [sp, #32]
90026e6a:	fb08 fc0c 	mul.w	ip, r8, ip
90026e6e:	fb03 cc0e 	mla	ip, r3, lr, ip
90026e72:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
90026e76:	9d0d      	ldr	r5, [sp, #52]	; 0x34
90026e78:	fb01 cc0e 	mla	ip, r1, lr, ip
90026e7c:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
90026e80:	9d0c      	ldr	r5, [sp, #48]	; 0x30
90026e82:	fb09 cc0e 	mla	ip, r9, lr, ip
90026e86:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
90026e8a:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
90026e8c:	fb08 f80e 	mul.w	r8, r8, lr
90026e90:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90026e94:	fb03 8202 	mla	r2, r3, r2, r8
90026e98:	9b08      	ldr	r3, [sp, #32]
90026e9a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90026e9e:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
90026ea2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90026ea4:	fb01 220a 	mla	r2, r1, sl, r2
90026ea8:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
90026eac:	883b      	ldrh	r3, [r7, #0]
90026eae:	fb09 2901 	mla	r9, r9, r1, r2
90026eb2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
90026eb4:	1219      	asrs	r1, r3, #8
90026eb6:	4342      	muls	r2, r0
90026eb8:	ea4f 2919 	mov.w	r9, r9, lsr #8
90026ebc:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
90026ec0:	1c50      	adds	r0, r2, #1
90026ec2:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
90026ec6:	eb00 2012 	add.w	r0, r0, r2, lsr #8
90026eca:	ea4c 0c09 	orr.w	ip, ip, r9
90026ece:	ea6f 2010 	mvn.w	r0, r0, lsr #8
90026ed2:	ea4f 421c 	mov.w	r2, ip, lsr #16
90026ed6:	f3cc 2e07 	ubfx	lr, ip, #8, #8
90026eda:	fa5f fc8c 	uxtb.w	ip, ip
90026ede:	fb12 f205 	smulbb	r2, r2, r5
90026ee2:	b2c0      	uxtb	r0, r0
90026ee4:	fb1c fc05 	smulbb	ip, ip, r5
90026ee8:	fb01 2100 	mla	r1, r1, r0, r2
90026eec:	10da      	asrs	r2, r3, #3
90026eee:	fb1e fe05 	smulbb	lr, lr, r5
90026ef2:	00db      	lsls	r3, r3, #3
90026ef4:	b289      	uxth	r1, r1
90026ef6:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
90026efa:	b2db      	uxtb	r3, r3
90026efc:	fb02 e200 	mla	r2, r2, r0, lr
90026f00:	fb03 c300 	mla	r3, r3, r0, ip
90026f04:	b292      	uxth	r2, r2
90026f06:	fa1f fc83 	uxth.w	ip, r3
90026f0a:	1c4b      	adds	r3, r1, #1
90026f0c:	eb03 2111 	add.w	r1, r3, r1, lsr #8
90026f10:	f10c 0301 	add.w	r3, ip, #1
90026f14:	eb03 231c 	add.w	r3, r3, ip, lsr #8
90026f18:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
90026f1c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90026f20:	430b      	orrs	r3, r1
90026f22:	1c51      	adds	r1, r2, #1
90026f24:	eb01 2212 	add.w	r2, r1, r2, lsr #8
90026f28:	0952      	lsrs	r2, r2, #5
90026f2a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90026f2e:	4313      	orrs	r3, r2
90026f30:	803b      	strh	r3, [r7, #0]
90026f32:	9b29      	ldr	r3, [sp, #164]	; 0xa4
90026f34:	3702      	adds	r7, #2
90026f36:	441c      	add	r4, r3
90026f38:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
90026f3a:	441e      	add	r6, r3
90026f3c:	9b18      	ldr	r3, [sp, #96]	; 0x60
90026f3e:	3b01      	subs	r3, #1
90026f40:	9318      	str	r3, [sp, #96]	; 0x60
90026f42:	e698      	b.n	90026c76 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
90026f44:	9b29      	ldr	r3, [sp, #164]	; 0xa4
90026f46:	441c      	add	r4, r3
90026f48:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
90026f4a:	441e      	add	r6, r3
90026f4c:	9b07      	ldr	r3, [sp, #28]
90026f4e:	3b01      	subs	r3, #1
90026f50:	9307      	str	r3, [sp, #28]
90026f52:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90026f54:	3302      	adds	r3, #2
90026f56:	930a      	str	r3, [sp, #40]	; 0x28
90026f58:	e66d      	b.n	90026c36 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
90026f5a:	d023      	beq.n	90026fa4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
90026f5c:	9b07      	ldr	r3, [sp, #28]
90026f5e:	9829      	ldr	r0, [sp, #164]	; 0xa4
90026f60:	3b01      	subs	r3, #1
90026f62:	fb00 4003 	mla	r0, r0, r3, r4
90026f66:	1400      	asrs	r0, r0, #16
90026f68:	f53f ae82 	bmi.w	90026c70 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90026f6c:	3901      	subs	r1, #1
90026f6e:	4288      	cmp	r0, r1
90026f70:	f6bf ae7e 	bge.w	90026c70 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90026f74:	992a      	ldr	r1, [sp, #168]	; 0xa8
90026f76:	fb01 6303 	mla	r3, r1, r3, r6
90026f7a:	141b      	asrs	r3, r3, #16
90026f7c:	f53f ae78 	bmi.w	90026c70 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90026f80:	3a01      	subs	r2, #1
90026f82:	4293      	cmp	r3, r2
90026f84:	f6bf ae74 	bge.w	90026c70 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90026f88:	f8dd b01c 	ldr.w	fp, [sp, #28]
90026f8c:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
90026f90:	f1bb 0f00 	cmp.w	fp, #0
90026f94:	dc6c      	bgt.n	90027070 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
90026f96:	9b07      	ldr	r3, [sp, #28]
90026f98:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
90026f9c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90026f9e:	eb03 0345 	add.w	r3, r3, r5, lsl #1
90026fa2:	930a      	str	r3, [sp, #40]	; 0x28
90026fa4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
90026fa6:	2b00      	cmp	r3, #0
90026fa8:	f340 81b3 	ble.w	90027312 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
90026fac:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90026fb0:	9b26      	ldr	r3, [sp, #152]	; 0x98
90026fb2:	ee30 0a04 	vadd.f32	s0, s0, s8
90026fb6:	ee70 0aa4 	vadd.f32	s1, s1, s9
90026fba:	eef0 6a62 	vmov.f32	s13, s5
90026fbe:	eec7 7a00 	vdiv.f32	s15, s14, s0
90026fc2:	ee31 1a05 	vadd.f32	s2, s2, s10
90026fc6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90026fca:	ee16 4a90 	vmov	r4, s13
90026fce:	eef0 6a43 	vmov.f32	s13, s6
90026fd2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90026fd6:	ee16 6a90 	vmov	r6, s13
90026fda:	ee20 7aa7 	vmul.f32	s14, s1, s15
90026fde:	ee61 7a27 	vmul.f32	s15, s2, s15
90026fe2:	ee77 2a62 	vsub.f32	s5, s14, s5
90026fe6:	ee37 3ac3 	vsub.f32	s6, s15, s6
90026fea:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90026fee:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90026ff2:	ee12 2a90 	vmov	r2, s5
90026ff6:	eef0 2a47 	vmov.f32	s5, s14
90026ffa:	fb92 f3f3 	sdiv	r3, r2, r3
90026ffe:	ee13 2a10 	vmov	r2, s6
90027002:	9329      	str	r3, [sp, #164]	; 0xa4
90027004:	9b26      	ldr	r3, [sp, #152]	; 0x98
90027006:	eeb0 3a67 	vmov.f32	s6, s15
9002700a:	fb92 f3f3 	sdiv	r3, r2, r3
9002700e:	932a      	str	r3, [sp, #168]	; 0xa8
90027010:	9b17      	ldr	r3, [sp, #92]	; 0x5c
90027012:	9a19      	ldr	r2, [sp, #100]	; 0x64
90027014:	3b01      	subs	r3, #1
90027016:	9317      	str	r3, [sp, #92]	; 0x5c
90027018:	9b26      	ldr	r3, [sp, #152]	; 0x98
9002701a:	bf08      	it	eq
9002701c:	4613      	moveq	r3, r2
9002701e:	9307      	str	r3, [sp, #28]
90027020:	e5fb      	b.n	90026c1a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
90027022:	2900      	cmp	r1, #0
90027024:	f43f ae6b 	beq.w	90026cfe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
90027028:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
9002702c:	9308      	str	r3, [sp, #32]
9002702e:	0e1b      	lsrs	r3, r3, #24
90027030:	9311      	str	r3, [sp, #68]	; 0x44
90027032:	e664      	b.n	90026cfe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
90027034:	f112 0801 	adds.w	r8, r2, #1
90027038:	f53f af7b 	bmi.w	90026f32 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
9002703c:	4543      	cmp	r3, r8
9002703e:	f6ff af78 	blt.w	90026f32 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90027042:	f11c 0801 	adds.w	r8, ip, #1
90027046:	f53f af74 	bmi.w	90026f32 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
9002704a:	45c6      	cmp	lr, r8
9002704c:	f6ff af71 	blt.w	90026f32 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90027050:	9d1a      	ldr	r5, [sp, #104]	; 0x68
90027052:	b21b      	sxth	r3, r3
90027054:	9201      	str	r2, [sp, #4]
90027056:	fa0f f28e 	sxth.w	r2, lr
9002705a:	e9cd 1504 	strd	r1, r5, [sp, #16]
9002705e:	e9cd c002 	strd	ip, r0, [sp, #8]
90027062:	9200      	str	r2, [sp, #0]
90027064:	4639      	mov	r1, r7
90027066:	9a10      	ldr	r2, [sp, #64]	; 0x40
90027068:	981b      	ldr	r0, [sp, #108]	; 0x6c
9002706a:	f7ff fc79 	bl	90026960 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
9002706e:	e760      	b.n	90026f32 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90027070:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
90027072:	1427      	asrs	r7, r4, #16
90027074:	9d10      	ldr	r5, [sp, #64]	; 0x40
90027076:	f3c4 3203 	ubfx	r2, r4, #12, #4
9002707a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002707e:	1433      	asrs	r3, r6, #16
90027080:	f3c6 3003 	ubfx	r0, r6, #12, #4
90027084:	fb01 7303 	mla	r3, r1, r3, r7
90027088:	eb05 0783 	add.w	r7, r5, r3, lsl #2
9002708c:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
90027090:	ea4f 6c13 	mov.w	ip, r3, lsr #24
90027094:	2a00      	cmp	r2, #0
90027096:	f000 8133 	beq.w	90027300 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
9002709a:	687d      	ldr	r5, [r7, #4]
9002709c:	950e      	str	r5, [sp, #56]	; 0x38
9002709e:	0e2d      	lsrs	r5, r5, #24
900270a0:	9515      	str	r5, [sp, #84]	; 0x54
900270a2:	b178      	cbz	r0, 900270c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
900270a4:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
900270a8:	3901      	subs	r1, #1
900270aa:	0089      	lsls	r1, r1, #2
900270ac:	3104      	adds	r1, #4
900270ae:	eb07 0e01 	add.w	lr, r7, r1
900270b2:	5879      	ldr	r1, [r7, r1]
900270b4:	9109      	str	r1, [sp, #36]	; 0x24
900270b6:	0e09      	lsrs	r1, r1, #24
900270b8:	9112      	str	r1, [sp, #72]	; 0x48
900270ba:	f8de 1004 	ldr.w	r1, [lr, #4]
900270be:	910f      	str	r1, [sp, #60]	; 0x3c
900270c0:	0e09      	lsrs	r1, r1, #24
900270c2:	9116      	str	r1, [sp, #88]	; 0x58
900270c4:	b292      	uxth	r2, r2
900270c6:	9915      	ldr	r1, [sp, #84]	; 0x54
900270c8:	b280      	uxth	r0, r0
900270ca:	9d12      	ldr	r5, [sp, #72]	; 0x48
900270cc:	fb02 f800 	mul.w	r8, r2, r0
900270d0:	0112      	lsls	r2, r2, #4
900270d2:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
900270d6:	eba2 0e08 	sub.w	lr, r2, r8
900270da:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
900270de:	b280      	uxth	r0, r0
900270e0:	fa1f fe8e 	uxth.w	lr, lr
900270e4:	1a12      	subs	r2, r2, r0
900270e6:	fb0e f101 	mul.w	r1, lr, r1
900270ea:	b292      	uxth	r2, r2
900270ec:	fb02 110c 	mla	r1, r2, ip, r1
900270f0:	fb00 1105 	mla	r1, r0, r5, r1
900270f4:	9d16      	ldr	r5, [sp, #88]	; 0x58
900270f6:	fb08 1105 	mla	r1, r8, r5, r1
900270fa:	f3c1 2107 	ubfx	r1, r1, #8, #8
900270fe:	2900      	cmp	r1, #0
90027100:	f000 80f5 	beq.w	900272ee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
90027104:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
90027108:	d019      	beq.n	9002713e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
9002710a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
9002710e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90027112:	fb0c fa0a 	mul.w	sl, ip, sl
90027116:	fb0c fc03 	mul.w	ip, ip, r3
9002711a:	ea4f 231a 	mov.w	r3, sl, lsr #8
9002711e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
90027122:	f50c 7780 	add.w	r7, ip, #256	; 0x100
90027126:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
9002712a:	eb07 271c 	add.w	r7, r7, ip, lsr #8
9002712e:	4453      	add	r3, sl
90027130:	0a3f      	lsrs	r7, r7, #8
90027132:	0a1b      	lsrs	r3, r3, #8
90027134:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
90027138:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
9002713c:	433b      	orrs	r3, r7
9002713e:	9d15      	ldr	r5, [sp, #84]	; 0x54
90027140:	2dff      	cmp	r5, #255	; 0xff
90027142:	d020      	beq.n	90027186 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
90027144:	9d0e      	ldr	r5, [sp, #56]	; 0x38
90027146:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
9002714a:	9d15      	ldr	r5, [sp, #84]	; 0x54
9002714c:	436f      	muls	r7, r5
9002714e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
90027150:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90027154:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
90027158:	9d15      	ldr	r5, [sp, #84]	; 0x54
9002715a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
9002715e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90027162:	fb05 fa0a 	mul.w	sl, r5, sl
90027166:	44bc      	add	ip, r7
90027168:	f50a 7780 	add.w	r7, sl, #256	; 0x100
9002716c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90027170:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90027174:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90027178:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002717c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90027180:	ea4c 050a 	orr.w	r5, ip, sl
90027184:	950e      	str	r5, [sp, #56]	; 0x38
90027186:	9d12      	ldr	r5, [sp, #72]	; 0x48
90027188:	2dff      	cmp	r5, #255	; 0xff
9002718a:	d020      	beq.n	900271ce <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
9002718c:	9d09      	ldr	r5, [sp, #36]	; 0x24
9002718e:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
90027192:	9d12      	ldr	r5, [sp, #72]	; 0x48
90027194:	436f      	muls	r7, r5
90027196:	9d09      	ldr	r5, [sp, #36]	; 0x24
90027198:	ea4f 2c17 	mov.w	ip, r7, lsr #8
9002719c:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
900271a0:	9d12      	ldr	r5, [sp, #72]	; 0x48
900271a2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
900271a6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900271aa:	fb05 fa0a 	mul.w	sl, r5, sl
900271ae:	44bc      	add	ip, r7
900271b0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
900271b4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900271b8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
900271bc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900271c0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900271c4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
900271c8:	ea4c 050a 	orr.w	r5, ip, sl
900271cc:	9509      	str	r5, [sp, #36]	; 0x24
900271ce:	9d16      	ldr	r5, [sp, #88]	; 0x58
900271d0:	2dff      	cmp	r5, #255	; 0xff
900271d2:	d020      	beq.n	90027216 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
900271d4:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
900271d6:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
900271da:	9d16      	ldr	r5, [sp, #88]	; 0x58
900271dc:	436f      	muls	r7, r5
900271de:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
900271e0:	ea4f 2c17 	mov.w	ip, r7, lsr #8
900271e4:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
900271e8:	9d16      	ldr	r5, [sp, #88]	; 0x58
900271ea:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
900271ee:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900271f2:	fb05 fa0a 	mul.w	sl, r5, sl
900271f6:	44bc      	add	ip, r7
900271f8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
900271fc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90027200:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90027204:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90027208:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002720c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90027210:	ea4c 050a 	orr.w	r5, ip, sl
90027214:	950f      	str	r5, [sp, #60]	; 0x3c
90027216:	9d0e      	ldr	r5, [sp, #56]	; 0x38
90027218:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
9002721c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90027220:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
90027224:	9d09      	ldr	r5, [sp, #36]	; 0x24
90027226:	fb0e f707 	mul.w	r7, lr, r7
9002722a:	fb02 770c 	mla	r7, r2, ip, r7
9002722e:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
90027232:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
90027234:	fb00 770c 	mla	r7, r0, ip, r7
90027238:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
9002723c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
9002723e:	fb08 770c 	mla	r7, r8, ip, r7
90027242:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
90027246:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
90027248:	fb0e fe0c 	mul.w	lr, lr, ip
9002724c:	0a3f      	lsrs	r7, r7, #8
9002724e:	fb02 e303 	mla	r3, r2, r3, lr
90027252:	9a09      	ldr	r2, [sp, #36]	; 0x24
90027254:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
90027258:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
9002725c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9002725e:	fb00 330a 	mla	r3, r0, sl, r3
90027262:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
90027266:	f8b9 0000 	ldrh.w	r0, [r9]
9002726a:	fb08 3c0c 	mla	ip, r8, ip, r3
9002726e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90027270:	1202      	asrs	r2, r0, #8
90027272:	4359      	muls	r1, r3
90027274:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90027278:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
9002727c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
90027280:	1c4b      	adds	r3, r1, #1
90027282:	ea47 070c 	orr.w	r7, r7, ip
90027286:	eb03 2111 	add.w	r1, r3, r1, lsr #8
9002728a:	0c3b      	lsrs	r3, r7, #16
9002728c:	ea6f 2111 	mvn.w	r1, r1, lsr #8
90027290:	f3c7 2c07 	ubfx	ip, r7, #8, #8
90027294:	b2ff      	uxtb	r7, r7
90027296:	fb13 f305 	smulbb	r3, r3, r5
9002729a:	b2c9      	uxtb	r1, r1
9002729c:	fb17 f705 	smulbb	r7, r7, r5
900272a0:	fb02 3201 	mla	r2, r2, r1, r3
900272a4:	10c3      	asrs	r3, r0, #3
900272a6:	fb1c fc05 	smulbb	ip, ip, r5
900272aa:	00c0      	lsls	r0, r0, #3
900272ac:	b292      	uxth	r2, r2
900272ae:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
900272b2:	b2c0      	uxtb	r0, r0
900272b4:	fb03 c301 	mla	r3, r3, r1, ip
900272b8:	fb00 7001 	mla	r0, r0, r1, r7
900272bc:	1c51      	adds	r1, r2, #1
900272be:	b29b      	uxth	r3, r3
900272c0:	b280      	uxth	r0, r0
900272c2:	eb01 2212 	add.w	r2, r1, r2, lsr #8
900272c6:	f100 0c01 	add.w	ip, r0, #1
900272ca:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
900272ce:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
900272d2:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
900272d6:	ea4c 0202 	orr.w	r2, ip, r2
900272da:	f103 0c01 	add.w	ip, r3, #1
900272de:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
900272e2:	095b      	lsrs	r3, r3, #5
900272e4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
900272e8:	431a      	orrs	r2, r3
900272ea:	f8a9 2000 	strh.w	r2, [r9]
900272ee:	9b29      	ldr	r3, [sp, #164]	; 0xa4
900272f0:	f109 0902 	add.w	r9, r9, #2
900272f4:	f10b 3bff 	add.w	fp, fp, #4294967295
900272f8:	441c      	add	r4, r3
900272fa:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
900272fc:	441e      	add	r6, r3
900272fe:	e647      	b.n	90026f90 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
90027300:	2800      	cmp	r0, #0
90027302:	f43f aedf 	beq.w	900270c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
90027306:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
9002730a:	9109      	str	r1, [sp, #36]	; 0x24
9002730c:	0e09      	lsrs	r1, r1, #24
9002730e:	9112      	str	r1, [sp, #72]	; 0x48
90027310:	e6d8      	b.n	900270c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
90027312:	b01d      	add	sp, #116	; 0x74
90027314:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90027318 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
90027318:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002731c:	b085      	sub	sp, #20
9002731e:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
90027322:	9102      	str	r1, [sp, #8]
90027324:	2c00      	cmp	r4, #0
90027326:	fb04 7103 	mla	r1, r4, r3, r7
9002732a:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
9002732e:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
90027332:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
90027336:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
9002733a:	f2c0 810c 	blt.w	90027556 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
9002733e:	45a6      	cmp	lr, r4
90027340:	f340 8109 	ble.w	90027556 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
90027344:	2f00      	cmp	r7, #0
90027346:	f2c0 8104 	blt.w	90027552 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
9002734a:	42bb      	cmp	r3, r7
9002734c:	f340 8101 	ble.w	90027552 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
90027350:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
90027354:	1c7a      	adds	r2, r7, #1
90027356:	f100 8101 	bmi.w	9002755c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
9002735a:	4293      	cmp	r3, r2
9002735c:	f340 80fe 	ble.w	9002755c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
90027360:	2e00      	cmp	r6, #0
90027362:	f000 80fd 	beq.w	90027560 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
90027366:	f8dc 1004 	ldr.w	r1, [ip, #4]
9002736a:	3401      	adds	r4, #1
9002736c:	f100 80fc 	bmi.w	90027568 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
90027370:	45a6      	cmp	lr, r4
90027372:	f340 80f9 	ble.w	90027568 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
90027376:	2800      	cmp	r0, #0
90027378:	f000 80f9 	beq.w	9002756e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
9002737c:	2f00      	cmp	r7, #0
9002737e:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
90027382:	f2c0 80ef 	blt.w	90027564 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
90027386:	42bb      	cmp	r3, r7
90027388:	f340 80ec 	ble.w	90027564 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
9002738c:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
90027390:	3701      	adds	r7, #1
90027392:	f100 80ef 	bmi.w	90027574 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
90027396:	42bb      	cmp	r3, r7
90027398:	f340 80ec 	ble.w	90027574 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
9002739c:	2e00      	cmp	r6, #0
9002739e:	f000 80eb 	beq.w	90027578 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
900273a2:	6852      	ldr	r2, [r2, #4]
900273a4:	b2b6      	uxth	r6, r6
900273a6:	b280      	uxth	r0, r0
900273a8:	ea4f 6a11 	mov.w	sl, r1, lsr #24
900273ac:	fb00 fe06 	mul.w	lr, r0, r6
900273b0:	0136      	lsls	r6, r6, #4
900273b2:	ea4f 6b15 	mov.w	fp, r5, lsr #24
900273b6:	ebce 1000 	rsb	r0, lr, r0, lsl #4
900273ba:	eba6 070e 	sub.w	r7, r6, lr
900273be:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
900273c2:	ea4f 6914 	mov.w	r9, r4, lsr #24
900273c6:	b280      	uxth	r0, r0
900273c8:	b2bf      	uxth	r7, r7
900273ca:	1a1b      	subs	r3, r3, r0
900273cc:	ea4f 6812 	mov.w	r8, r2, lsr #24
900273d0:	fb07 f60a 	mul.w	r6, r7, sl
900273d4:	b29b      	uxth	r3, r3
900273d6:	fb0b 6603 	mla	r6, fp, r3, r6
900273da:	fb00 6609 	mla	r6, r0, r9, r6
900273de:	fb0e 6608 	mla	r6, lr, r8, r6
900273e2:	f3c6 2607 	ubfx	r6, r6, #8, #8
900273e6:	9600      	str	r6, [sp, #0]
900273e8:	2e00      	cmp	r6, #0
900273ea:	f000 80af 	beq.w	9002754c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
900273ee:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
900273f2:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
900273f6:	9e02      	ldr	r6, [sp, #8]
900273f8:	fb0b fc0c 	mul.w	ip, fp, ip
900273fc:	fb0b f505 	mul.w	r5, fp, r5
90027400:	8836      	ldrh	r6, [r6, #0]
90027402:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
90027406:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
9002740a:	9501      	str	r5, [sp, #4]
9002740c:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
90027410:	44dc      	add	ip, fp
90027412:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90027416:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
9002741a:	9503      	str	r5, [sp, #12]
9002741c:	9d01      	ldr	r5, [sp, #4]
9002741e:	f505 7c80 	add.w	ip, r5, #256	; 0x100
90027422:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
90027426:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
9002742a:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
9002742e:	fb0a fc0c 	mul.w	ip, sl, ip
90027432:	ea4f 2b15 	mov.w	fp, r5, lsr #8
90027436:	fb0a fa01 	mul.w	sl, sl, r1
9002743a:	ea4f 251c 	mov.w	r5, ip, lsr #8
9002743e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
90027442:	f50a 7180 	add.w	r1, sl, #256	; 0x100
90027446:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
9002744a:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
9002744e:	4465      	add	r5, ip
90027450:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
90027454:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
90027458:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002745c:	fb09 fc0c 	mul.w	ip, r9, ip
90027460:	0a2d      	lsrs	r5, r5, #8
90027462:	fb09 f904 	mul.w	r9, r9, r4
90027466:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
9002746a:	ea4f 211c 	mov.w	r1, ip, lsr #8
9002746e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
90027472:	f509 7480 	add.w	r4, r9, #256	; 0x100
90027476:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
9002747a:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
9002747e:	437d      	muls	r5, r7
90027480:	eb04 2919 	add.w	r9, r4, r9, lsr #8
90027484:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
90027488:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
9002748c:	4461      	add	r1, ip
9002748e:	fb08 f404 	mul.w	r4, r8, r4
90027492:	ea4f 2919 	mov.w	r9, r9, lsr #8
90027496:	fb08 f802 	mul.w	r8, r8, r2
9002749a:	0a09      	lsrs	r1, r1, #8
9002749c:	0a22      	lsrs	r2, r4, #8
9002749e:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
900274a2:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
900274a6:	fb07 f70a 	mul.w	r7, r7, sl
900274aa:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
900274ae:	4414      	add	r4, r2
900274b0:	f508 7280 	add.w	r2, r8, #256	; 0x100
900274b4:	0a24      	lsrs	r4, r4, #8
900274b6:	eb02 2818 	add.w	r8, r2, r8, lsr #8
900274ba:	9a03      	ldr	r2, [sp, #12]
900274bc:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
900274c0:	fb02 5503 	mla	r5, r2, r3, r5
900274c4:	ea4f 2818 	mov.w	r8, r8, lsr #8
900274c8:	fb04 540e 	mla	r4, r4, lr, r5
900274cc:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
900274d0:	fb01 4100 	mla	r1, r1, r0, r4
900274d4:	0a09      	lsrs	r1, r1, #8
900274d6:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
900274da:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
900274de:	fb03 7101 	mla	r1, r3, r1, r7
900274e2:	9b00      	ldr	r3, [sp, #0]
900274e4:	fb0e 1e08 	mla	lr, lr, r8, r1
900274e8:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
900274ec:	43da      	mvns	r2, r3
900274ee:	1233      	asrs	r3, r6, #8
900274f0:	fb00 e101 	mla	r1, r0, r1, lr
900274f4:	10f0      	asrs	r0, r6, #3
900274f6:	b2d2      	uxtb	r2, r2
900274f8:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
900274fc:	0a09      	lsrs	r1, r1, #8
900274fe:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
90027502:	00f6      	lsls	r6, r6, #3
90027504:	4353      	muls	r3, r2
90027506:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
9002750a:	4350      	muls	r0, r2
9002750c:	b2f6      	uxtb	r6, r6
9002750e:	4321      	orrs	r1, r4
90027510:	4356      	muls	r6, r2
90027512:	1c5a      	adds	r2, r3, #1
90027514:	eb02 2213 	add.w	r2, r2, r3, lsr #8
90027518:	0c0b      	lsrs	r3, r1, #16
9002751a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9002751e:	1c42      	adds	r2, r0, #1
90027520:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90027524:	0a0a      	lsrs	r2, r1, #8
90027526:	021b      	lsls	r3, r3, #8
90027528:	eb02 2210 	add.w	r2, r2, r0, lsr #8
9002752c:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
90027530:	00d2      	lsls	r2, r2, #3
90027532:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90027536:	4313      	orrs	r3, r2
90027538:	1c72      	adds	r2, r6, #1
9002753a:	eb02 2616 	add.w	r6, r2, r6, lsr #8
9002753e:	eb01 2116 	add.w	r1, r1, r6, lsr #8
90027542:	f3c1 01c4 	ubfx	r1, r1, #3, #5
90027546:	4319      	orrs	r1, r3
90027548:	9b02      	ldr	r3, [sp, #8]
9002754a:	8019      	strh	r1, [r3, #0]
9002754c:	b005      	add	sp, #20
9002754e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90027552:	2500      	movs	r5, #0
90027554:	e6fe      	b.n	90027354 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
90027556:	2100      	movs	r1, #0
90027558:	460d      	mov	r5, r1
9002755a:	e706      	b.n	9002736a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
9002755c:	2100      	movs	r1, #0
9002755e:	e704      	b.n	9002736a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
90027560:	4631      	mov	r1, r6
90027562:	e702      	b.n	9002736a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
90027564:	2400      	movs	r4, #0
90027566:	e713      	b.n	90027390 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
90027568:	2200      	movs	r2, #0
9002756a:	4614      	mov	r4, r2
9002756c:	e71a      	b.n	900273a4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
9002756e:	4602      	mov	r2, r0
90027570:	4604      	mov	r4, r0
90027572:	e717      	b.n	900273a4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
90027574:	2200      	movs	r2, #0
90027576:	e715      	b.n	900273a4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
90027578:	4632      	mov	r2, r6
9002757a:	e713      	b.n	900273a4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>

9002757c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9002757c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90027580:	b09b      	sub	sp, #108	; 0x6c
90027582:	9218      	str	r2, [sp, #96]	; 0x60
90027584:	9a29      	ldr	r2, [sp, #164]	; 0xa4
90027586:	9019      	str	r0, [sp, #100]	; 0x64
90027588:	9116      	str	r1, [sp, #88]	; 0x58
9002758a:	6850      	ldr	r0, [r2, #4]
9002758c:	9307      	str	r3, [sp, #28]
9002758e:	6812      	ldr	r2, [r2, #0]
90027590:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
90027594:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
90027598:	fb00 1303 	mla	r3, r0, r3, r1
9002759c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
900275a0:	930a      	str	r3, [sp, #40]	; 0x28
900275a2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
900275a4:	681b      	ldr	r3, [r3, #0]
900275a6:	930f      	str	r3, [sp, #60]	; 0x3c
900275a8:	9b16      	ldr	r3, [sp, #88]	; 0x58
900275aa:	2b00      	cmp	r3, #0
900275ac:	dc03      	bgt.n	900275b6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
900275ae:	9b18      	ldr	r3, [sp, #96]	; 0x60
900275b0:	2b00      	cmp	r3, #0
900275b2:	f340 8387 	ble.w	90027cc4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
900275b6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
900275b8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900275bc:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900275c0:	1e48      	subs	r0, r1, #1
900275c2:	1e57      	subs	r7, r2, #1
900275c4:	9b07      	ldr	r3, [sp, #28]
900275c6:	2b00      	cmp	r3, #0
900275c8:	f340 8166 	ble.w	90027898 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
900275cc:	ea5f 4c24 	movs.w	ip, r4, asr #16
900275d0:	ea4f 4326 	mov.w	r3, r6, asr #16
900275d4:	d406      	bmi.n	900275e4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
900275d6:	4584      	cmp	ip, r0
900275d8:	da04      	bge.n	900275e4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
900275da:	2b00      	cmp	r3, #0
900275dc:	db02      	blt.n	900275e4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
900275de:	42bb      	cmp	r3, r7
900275e0:	f2c0 815b 	blt.w	9002789a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
900275e4:	f11c 0c01 	adds.w	ip, ip, #1
900275e8:	f100 814b 	bmi.w	90027882 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
900275ec:	4561      	cmp	r1, ip
900275ee:	f2c0 8148 	blt.w	90027882 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
900275f2:	3301      	adds	r3, #1
900275f4:	f100 8145 	bmi.w	90027882 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
900275f8:	429a      	cmp	r2, r3
900275fa:	f2c0 8142 	blt.w	90027882 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
900275fe:	9b07      	ldr	r3, [sp, #28]
90027600:	9f0a      	ldr	r7, [sp, #40]	; 0x28
90027602:	9317      	str	r3, [sp, #92]	; 0x5c
90027604:	9b17      	ldr	r3, [sp, #92]	; 0x5c
90027606:	2b00      	cmp	r3, #0
90027608:	f340 8165 	ble.w	900278d6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
9002760c:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
9002760e:	ea4f 4c26 	mov.w	ip, r6, asr #16
90027612:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90027614:	f3c4 3103 	ubfx	r1, r4, #12, #4
90027618:	f8d2 e00c 	ldr.w	lr, [r2, #12]
9002761c:	1422      	asrs	r2, r4, #16
9002761e:	f3c6 3003 	ubfx	r0, r6, #12, #4
90027622:	689b      	ldr	r3, [r3, #8]
90027624:	f100 81d5 	bmi.w	900279d2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
90027628:	f103 38ff 	add.w	r8, r3, #4294967295
9002762c:	4542      	cmp	r2, r8
9002762e:	f280 81d0 	bge.w	900279d2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
90027632:	f1bc 0f00 	cmp.w	ip, #0
90027636:	f2c0 81cc 	blt.w	900279d2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
9002763a:	f10e 38ff 	add.w	r8, lr, #4294967295
9002763e:	45c4      	cmp	ip, r8
90027640:	f280 81c7 	bge.w	900279d2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
90027644:	b21b      	sxth	r3, r3
90027646:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
90027648:	fb0c 2203 	mla	r2, ip, r3, r2
9002764c:	eb05 0882 	add.w	r8, r5, r2, lsl #2
90027650:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
90027654:	ea4f 6e12 	mov.w	lr, r2, lsr #24
90027658:	2900      	cmp	r1, #0
9002765a:	f000 8182 	beq.w	90027962 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
9002765e:	f8d8 5004 	ldr.w	r5, [r8, #4]
90027662:	950b      	str	r5, [sp, #44]	; 0x2c
90027664:	0e2d      	lsrs	r5, r5, #24
90027666:	9512      	str	r5, [sp, #72]	; 0x48
90027668:	b180      	cbz	r0, 9002768c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
9002766a:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
9002766e:	3b01      	subs	r3, #1
90027670:	009b      	lsls	r3, r3, #2
90027672:	3304      	adds	r3, #4
90027674:	eb08 0c03 	add.w	ip, r8, r3
90027678:	f858 3003 	ldr.w	r3, [r8, r3]
9002767c:	9308      	str	r3, [sp, #32]
9002767e:	0e1b      	lsrs	r3, r3, #24
90027680:	9310      	str	r3, [sp, #64]	; 0x40
90027682:	f8dc 3004 	ldr.w	r3, [ip, #4]
90027686:	930c      	str	r3, [sp, #48]	; 0x30
90027688:	0e1b      	lsrs	r3, r3, #24
9002768a:	9313      	str	r3, [sp, #76]	; 0x4c
9002768c:	b289      	uxth	r1, r1
9002768e:	9b12      	ldr	r3, [sp, #72]	; 0x48
90027690:	b280      	uxth	r0, r0
90027692:	9d10      	ldr	r5, [sp, #64]	; 0x40
90027694:	fb01 f900 	mul.w	r9, r1, r0
90027698:	0109      	lsls	r1, r1, #4
9002769a:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
9002769e:	eba1 0809 	sub.w	r8, r1, r9
900276a2:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
900276a6:	b280      	uxth	r0, r0
900276a8:	fa1f f888 	uxth.w	r8, r8
900276ac:	1a09      	subs	r1, r1, r0
900276ae:	fb08 f303 	mul.w	r3, r8, r3
900276b2:	b289      	uxth	r1, r1
900276b4:	fb01 330e 	mla	r3, r1, lr, r3
900276b8:	fb00 3305 	mla	r3, r0, r5, r3
900276bc:	9d13      	ldr	r5, [sp, #76]	; 0x4c
900276be:	fb09 3305 	mla	r3, r9, r5, r3
900276c2:	f3c3 2307 	ubfx	r3, r3, #8, #8
900276c6:	2b00      	cmp	r3, #0
900276c8:	f000 80d2 	beq.w	90027870 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
900276cc:	f1be 0fff 	cmp.w	lr, #255	; 0xff
900276d0:	d01b      	beq.n	9002770a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
900276d2:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
900276d6:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
900276da:	fb0e fa0a 	mul.w	sl, lr, sl
900276de:	fb0e fe02 	mul.w	lr, lr, r2
900276e2:	ea4f 221a 	mov.w	r2, sl, lsr #8
900276e6:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
900276ea:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
900276ee:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
900276f2:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
900276f6:	4452      	add	r2, sl
900276f8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900276fc:	0a12      	lsrs	r2, r2, #8
900276fe:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
90027702:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
90027706:	ea42 020c 	orr.w	r2, r2, ip
9002770a:	9d12      	ldr	r5, [sp, #72]	; 0x48
9002770c:	2dff      	cmp	r5, #255	; 0xff
9002770e:	d021      	beq.n	90027754 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
90027710:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
90027712:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
90027716:	9d12      	ldr	r5, [sp, #72]	; 0x48
90027718:	fb05 fb0b 	mul.w	fp, r5, fp
9002771c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
9002771e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
90027722:	9d12      	ldr	r5, [sp, #72]	; 0x48
90027724:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90027728:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
9002772c:	fb05 fa0a 	mul.w	sl, r5, sl
90027730:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90027734:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90027738:	44de      	add	lr, fp
9002773a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
9002773e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90027742:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90027746:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
9002774a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
9002774e:	ea4e 050a 	orr.w	r5, lr, sl
90027752:	950b      	str	r5, [sp, #44]	; 0x2c
90027754:	9d10      	ldr	r5, [sp, #64]	; 0x40
90027756:	2dff      	cmp	r5, #255	; 0xff
90027758:	d021      	beq.n	9002779e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
9002775a:	9d08      	ldr	r5, [sp, #32]
9002775c:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
90027760:	9d10      	ldr	r5, [sp, #64]	; 0x40
90027762:	fb05 fb0b 	mul.w	fp, r5, fp
90027766:	9d08      	ldr	r5, [sp, #32]
90027768:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
9002776c:	9d10      	ldr	r5, [sp, #64]	; 0x40
9002776e:	fb05 fa0e 	mul.w	sl, r5, lr
90027772:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90027776:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
9002777a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
9002777e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90027782:	44de      	add	lr, fp
90027784:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90027788:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
9002778c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90027790:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90027794:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90027798:	ea4e 050a 	orr.w	r5, lr, sl
9002779c:	9508      	str	r5, [sp, #32]
9002779e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
900277a0:	2dff      	cmp	r5, #255	; 0xff
900277a2:	d021      	beq.n	900277e8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
900277a4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
900277a6:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
900277aa:	9d13      	ldr	r5, [sp, #76]	; 0x4c
900277ac:	fb05 fb0b 	mul.w	fp, r5, fp
900277b0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
900277b2:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
900277b6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
900277b8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
900277bc:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
900277c0:	fb05 fa0a 	mul.w	sl, r5, sl
900277c4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
900277c8:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
900277cc:	44de      	add	lr, fp
900277ce:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
900277d2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900277d6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900277da:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
900277de:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
900277e2:	ea4e 050a 	orr.w	r5, lr, sl
900277e6:	950c      	str	r5, [sp, #48]	; 0x30
900277e8:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
900277ea:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
900277ee:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
900277f2:	2bff      	cmp	r3, #255	; 0xff
900277f4:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
900277f8:	9d08      	ldr	r5, [sp, #32]
900277fa:	fb08 fc0c 	mul.w	ip, r8, ip
900277fe:	fb01 cc0e 	mla	ip, r1, lr, ip
90027802:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
90027806:	9d0c      	ldr	r5, [sp, #48]	; 0x30
90027808:	fb00 cc0e 	mla	ip, r0, lr, ip
9002780c:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
90027810:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
90027812:	fb09 cc0e 	mla	ip, r9, lr, ip
90027816:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
9002781a:	fb08 f80e 	mul.w	r8, r8, lr
9002781e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90027822:	fb01 8202 	mla	r2, r1, r2, r8
90027826:	9908      	ldr	r1, [sp, #32]
90027828:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
9002782c:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
90027830:	990c      	ldr	r1, [sp, #48]	; 0x30
90027832:	fb00 220a 	mla	r2, r0, sl, r2
90027836:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
9002783a:	fb09 2900 	mla	r9, r9, r0, r2
9002783e:	ea4f 2919 	mov.w	r9, r9, lsr #8
90027842:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
90027846:	ea4c 0c09 	orr.w	ip, ip, r9
9002784a:	ea4f 221c 	mov.w	r2, ip, lsr #8
9002784e:	f040 8091 	bne.w	90027974 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
90027852:	ea4f 135c 	mov.w	r3, ip, lsr #5
90027856:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
9002785a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9002785e:	f022 0207 	bic.w	r2, r2, #7
90027862:	431a      	orrs	r2, r3
90027864:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
90027868:	ea4c 0c02 	orr.w	ip, ip, r2
9002786c:	f8a7 c000 	strh.w	ip, [r7]
90027870:	9b27      	ldr	r3, [sp, #156]	; 0x9c
90027872:	3702      	adds	r7, #2
90027874:	441c      	add	r4, r3
90027876:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90027878:	441e      	add	r6, r3
9002787a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
9002787c:	3b01      	subs	r3, #1
9002787e:	9317      	str	r3, [sp, #92]	; 0x5c
90027880:	e6c0      	b.n	90027604 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
90027882:	9b27      	ldr	r3, [sp, #156]	; 0x9c
90027884:	441c      	add	r4, r3
90027886:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90027888:	441e      	add	r6, r3
9002788a:	9b07      	ldr	r3, [sp, #28]
9002788c:	3b01      	subs	r3, #1
9002788e:	9307      	str	r3, [sp, #28]
90027890:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90027892:	3302      	adds	r3, #2
90027894:	930a      	str	r3, [sp, #40]	; 0x28
90027896:	e695      	b.n	900275c4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90027898:	d024      	beq.n	900278e4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
9002789a:	9b07      	ldr	r3, [sp, #28]
9002789c:	9827      	ldr	r0, [sp, #156]	; 0x9c
9002789e:	3b01      	subs	r3, #1
900278a0:	fb00 4003 	mla	r0, r0, r3, r4
900278a4:	1400      	asrs	r0, r0, #16
900278a6:	f53f aeaa 	bmi.w	900275fe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
900278aa:	3901      	subs	r1, #1
900278ac:	4288      	cmp	r0, r1
900278ae:	f6bf aea6 	bge.w	900275fe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
900278b2:	9928      	ldr	r1, [sp, #160]	; 0xa0
900278b4:	fb01 6303 	mla	r3, r1, r3, r6
900278b8:	141b      	asrs	r3, r3, #16
900278ba:	f53f aea0 	bmi.w	900275fe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
900278be:	3a01      	subs	r2, #1
900278c0:	4293      	cmp	r3, r2
900278c2:	f6bf ae9c 	bge.w	900275fe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
900278c6:	f8dd b01c 	ldr.w	fp, [sp, #28]
900278ca:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
900278ce:	f1bb 0f00 	cmp.w	fp, #0
900278d2:	f300 809a 	bgt.w	90027a0a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
900278d6:	9b07      	ldr	r3, [sp, #28]
900278d8:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
900278dc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
900278de:	eb03 0345 	add.w	r3, r3, r5, lsl #1
900278e2:	930a      	str	r3, [sp, #40]	; 0x28
900278e4:	9b16      	ldr	r3, [sp, #88]	; 0x58
900278e6:	2b00      	cmp	r3, #0
900278e8:	f340 81ec 	ble.w	90027cc4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
900278ec:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
900278f0:	9b24      	ldr	r3, [sp, #144]	; 0x90
900278f2:	ee30 0a04 	vadd.f32	s0, s0, s8
900278f6:	ee70 0aa4 	vadd.f32	s1, s1, s9
900278fa:	eef0 6a62 	vmov.f32	s13, s5
900278fe:	eec7 7a00 	vdiv.f32	s15, s14, s0
90027902:	ee31 1a05 	vadd.f32	s2, s2, s10
90027906:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002790a:	ee16 4a90 	vmov	r4, s13
9002790e:	eef0 6a43 	vmov.f32	s13, s6
90027912:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90027916:	ee16 6a90 	vmov	r6, s13
9002791a:	ee20 7aa7 	vmul.f32	s14, s1, s15
9002791e:	ee61 7a27 	vmul.f32	s15, s2, s15
90027922:	ee77 2a62 	vsub.f32	s5, s14, s5
90027926:	ee37 3ac3 	vsub.f32	s6, s15, s6
9002792a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9002792e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90027932:	ee12 2a90 	vmov	r2, s5
90027936:	eef0 2a47 	vmov.f32	s5, s14
9002793a:	fb92 f3f3 	sdiv	r3, r2, r3
9002793e:	ee13 2a10 	vmov	r2, s6
90027942:	9327      	str	r3, [sp, #156]	; 0x9c
90027944:	9b24      	ldr	r3, [sp, #144]	; 0x90
90027946:	eeb0 3a67 	vmov.f32	s6, s15
9002794a:	fb92 f3f3 	sdiv	r3, r2, r3
9002794e:	9328      	str	r3, [sp, #160]	; 0xa0
90027950:	9b16      	ldr	r3, [sp, #88]	; 0x58
90027952:	9a18      	ldr	r2, [sp, #96]	; 0x60
90027954:	3b01      	subs	r3, #1
90027956:	9316      	str	r3, [sp, #88]	; 0x58
90027958:	9b24      	ldr	r3, [sp, #144]	; 0x90
9002795a:	bf08      	it	eq
9002795c:	4613      	moveq	r3, r2
9002795e:	9307      	str	r3, [sp, #28]
90027960:	e622      	b.n	900275a8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
90027962:	2800      	cmp	r0, #0
90027964:	f43f ae92 	beq.w	9002768c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
90027968:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
9002796c:	9308      	str	r3, [sp, #32]
9002796e:	0e1b      	lsrs	r3, r3, #24
90027970:	9310      	str	r3, [sp, #64]	; 0x40
90027972:	e68b      	b.n	9002768c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
90027974:	8839      	ldrh	r1, [r7, #0]
90027976:	43db      	mvns	r3, r3
90027978:	4dd4      	ldr	r5, [pc, #848]	; (90027ccc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
9002797a:	ea4f 2e21 	mov.w	lr, r1, asr #8
9002797e:	fa5f f883 	uxtb.w	r8, r3
90027982:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
90027986:	10c8      	asrs	r0, r1, #3
90027988:	00cb      	lsls	r3, r1, #3
9002798a:	fb0e fe08 	mul.w	lr, lr, r8
9002798e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
90027992:	b2db      	uxtb	r3, r3
90027994:	f10e 0101 	add.w	r1, lr, #1
90027998:	fb00 f008 	mul.w	r0, r0, r8
9002799c:	fb03 f308 	mul.w	r3, r3, r8
900279a0:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
900279a4:	ea4f 411c 	mov.w	r1, ip, lsr #16
900279a8:	eb01 211e 	add.w	r1, r1, lr, lsr #8
900279ac:	f100 0e01 	add.w	lr, r0, #1
900279b0:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
900279b4:	b2c9      	uxtb	r1, r1
900279b6:	eb02 2210 	add.w	r2, r2, r0, lsr #8
900279ba:	ea05 2101 	and.w	r1, r5, r1, lsl #8
900279be:	00d2      	lsls	r2, r2, #3
900279c0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
900279c4:	430a      	orrs	r2, r1
900279c6:	1c59      	adds	r1, r3, #1
900279c8:	eb01 2313 	add.w	r3, r1, r3, lsr #8
900279cc:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
900279d0:	e748      	b.n	90027864 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
900279d2:	f112 0801 	adds.w	r8, r2, #1
900279d6:	f53f af4b 	bmi.w	90027870 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
900279da:	4543      	cmp	r3, r8
900279dc:	f6ff af48 	blt.w	90027870 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
900279e0:	f11c 0801 	adds.w	r8, ip, #1
900279e4:	f53f af44 	bmi.w	90027870 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
900279e8:	45c6      	cmp	lr, r8
900279ea:	f6ff af41 	blt.w	90027870 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
900279ee:	b21b      	sxth	r3, r3
900279f0:	e9cd 2c01 	strd	r2, ip, [sp, #4]
900279f4:	fa0f f28e 	sxth.w	r2, lr
900279f8:	e9cd 1003 	strd	r1, r0, [sp, #12]
900279fc:	9200      	str	r2, [sp, #0]
900279fe:	4639      	mov	r1, r7
90027a00:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
90027a02:	9819      	ldr	r0, [sp, #100]	; 0x64
90027a04:	f7ff fc88 	bl	90027318 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
90027a08:	e732      	b.n	90027870 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90027a0a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90027a0c:	1421      	asrs	r1, r4, #16
90027a0e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
90027a10:	f3c4 3203 	ubfx	r2, r4, #12, #4
90027a14:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
90027a18:	1433      	asrs	r3, r6, #16
90027a1a:	f3c6 3003 	ubfx	r0, r6, #12, #4
90027a1e:	fb07 1303 	mla	r3, r7, r3, r1
90027a22:	990f      	ldr	r1, [sp, #60]	; 0x3c
90027a24:	eb01 0183 	add.w	r1, r1, r3, lsl #2
90027a28:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
90027a2c:	ea4f 6c13 	mov.w	ip, r3, lsr #24
90027a30:	2a00      	cmp	r2, #0
90027a32:	f000 8108 	beq.w	90027c46 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ca>
90027a36:	684d      	ldr	r5, [r1, #4]
90027a38:	950d      	str	r5, [sp, #52]	; 0x34
90027a3a:	0e2d      	lsrs	r5, r5, #24
90027a3c:	9514      	str	r5, [sp, #80]	; 0x50
90027a3e:	b178      	cbz	r0, 90027a60 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
90027a40:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
90027a44:	3f01      	subs	r7, #1
90027a46:	00bf      	lsls	r7, r7, #2
90027a48:	3704      	adds	r7, #4
90027a4a:	eb01 0e07 	add.w	lr, r1, r7
90027a4e:	59c9      	ldr	r1, [r1, r7]
90027a50:	9109      	str	r1, [sp, #36]	; 0x24
90027a52:	0e09      	lsrs	r1, r1, #24
90027a54:	9111      	str	r1, [sp, #68]	; 0x44
90027a56:	f8de 1004 	ldr.w	r1, [lr, #4]
90027a5a:	910e      	str	r1, [sp, #56]	; 0x38
90027a5c:	0e09      	lsrs	r1, r1, #24
90027a5e:	9115      	str	r1, [sp, #84]	; 0x54
90027a60:	b292      	uxth	r2, r2
90027a62:	9d11      	ldr	r5, [sp, #68]	; 0x44
90027a64:	b280      	uxth	r0, r0
90027a66:	fb02 f900 	mul.w	r9, r2, r0
90027a6a:	0112      	lsls	r2, r2, #4
90027a6c:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
90027a70:	eba2 0e09 	sub.w	lr, r2, r9
90027a74:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
90027a78:	9a14      	ldr	r2, [sp, #80]	; 0x50
90027a7a:	b280      	uxth	r0, r0
90027a7c:	fa1f fe8e 	uxth.w	lr, lr
90027a80:	1a09      	subs	r1, r1, r0
90027a82:	fb0e f202 	mul.w	r2, lr, r2
90027a86:	b289      	uxth	r1, r1
90027a88:	fb01 220c 	mla	r2, r1, ip, r2
90027a8c:	fb00 2205 	mla	r2, r0, r5, r2
90027a90:	9d15      	ldr	r5, [sp, #84]	; 0x54
90027a92:	fb09 2205 	mla	r2, r9, r5, r2
90027a96:	f3c2 2207 	ubfx	r2, r2, #8, #8
90027a9a:	2a00      	cmp	r2, #0
90027a9c:	f000 80ca 	beq.w	90027c34 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
90027aa0:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
90027aa4:	d019      	beq.n	90027ada <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
90027aa6:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
90027aaa:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90027aae:	fb0c fa0a 	mul.w	sl, ip, sl
90027ab2:	fb0c fc03 	mul.w	ip, ip, r3
90027ab6:	ea4f 231a 	mov.w	r3, sl, lsr #8
90027aba:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
90027abe:	f50c 7780 	add.w	r7, ip, #256	; 0x100
90027ac2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90027ac6:	eb07 271c 	add.w	r7, r7, ip, lsr #8
90027aca:	4453      	add	r3, sl
90027acc:	0a3f      	lsrs	r7, r7, #8
90027ace:	0a1b      	lsrs	r3, r3, #8
90027ad0:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
90027ad4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90027ad8:	433b      	orrs	r3, r7
90027ada:	9d14      	ldr	r5, [sp, #80]	; 0x50
90027adc:	2dff      	cmp	r5, #255	; 0xff
90027ade:	d020      	beq.n	90027b22 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
90027ae0:	9d0d      	ldr	r5, [sp, #52]	; 0x34
90027ae2:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
90027ae6:	9d14      	ldr	r5, [sp, #80]	; 0x50
90027ae8:	436f      	muls	r7, r5
90027aea:	9d0d      	ldr	r5, [sp, #52]	; 0x34
90027aec:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90027af0:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
90027af4:	9d14      	ldr	r5, [sp, #80]	; 0x50
90027af6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
90027afa:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90027afe:	fb05 fa0a 	mul.w	sl, r5, sl
90027b02:	44bc      	add	ip, r7
90027b04:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90027b08:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90027b0c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90027b10:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90027b14:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90027b18:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90027b1c:	ea4c 050a 	orr.w	r5, ip, sl
90027b20:	950d      	str	r5, [sp, #52]	; 0x34
90027b22:	9d11      	ldr	r5, [sp, #68]	; 0x44
90027b24:	2dff      	cmp	r5, #255	; 0xff
90027b26:	d020      	beq.n	90027b6a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
90027b28:	9d09      	ldr	r5, [sp, #36]	; 0x24
90027b2a:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
90027b2e:	9d11      	ldr	r5, [sp, #68]	; 0x44
90027b30:	436f      	muls	r7, r5
90027b32:	9d09      	ldr	r5, [sp, #36]	; 0x24
90027b34:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
90027b38:	9d11      	ldr	r5, [sp, #68]	; 0x44
90027b3a:	fb05 fa0c 	mul.w	sl, r5, ip
90027b3e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90027b42:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
90027b46:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90027b4a:	44bc      	add	ip, r7
90027b4c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90027b50:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90027b54:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90027b58:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90027b5c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90027b60:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90027b64:	ea4c 050a 	orr.w	r5, ip, sl
90027b68:	9509      	str	r5, [sp, #36]	; 0x24
90027b6a:	9d15      	ldr	r5, [sp, #84]	; 0x54
90027b6c:	2dff      	cmp	r5, #255	; 0xff
90027b6e:	d020      	beq.n	90027bb2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
90027b70:	9d0e      	ldr	r5, [sp, #56]	; 0x38
90027b72:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
90027b76:	9d15      	ldr	r5, [sp, #84]	; 0x54
90027b78:	436f      	muls	r7, r5
90027b7a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
90027b7c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90027b80:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
90027b84:	9d15      	ldr	r5, [sp, #84]	; 0x54
90027b86:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
90027b8a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90027b8e:	fb05 fa0a 	mul.w	sl, r5, sl
90027b92:	44bc      	add	ip, r7
90027b94:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90027b98:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90027b9c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90027ba0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90027ba4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90027ba8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90027bac:	ea4c 050a 	orr.w	r5, ip, sl
90027bb0:	950e      	str	r5, [sp, #56]	; 0x38
90027bb2:	9d0d      	ldr	r5, [sp, #52]	; 0x34
90027bb4:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
90027bb8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90027bbc:	2aff      	cmp	r2, #255	; 0xff
90027bbe:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
90027bc2:	9d09      	ldr	r5, [sp, #36]	; 0x24
90027bc4:	fb0e f707 	mul.w	r7, lr, r7
90027bc8:	fb01 770c 	mla	r7, r1, ip, r7
90027bcc:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
90027bd0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
90027bd2:	fb00 770c 	mla	r7, r0, ip, r7
90027bd6:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
90027bda:	9d0d      	ldr	r5, [sp, #52]	; 0x34
90027bdc:	fb09 770c 	mla	r7, r9, ip, r7
90027be0:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
90027be4:	fb0e fe0c 	mul.w	lr, lr, ip
90027be8:	ea4f 2717 	mov.w	r7, r7, lsr #8
90027bec:	fb01 e303 	mla	r3, r1, r3, lr
90027bf0:	9909      	ldr	r1, [sp, #36]	; 0x24
90027bf2:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
90027bf6:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
90027bfa:	990e      	ldr	r1, [sp, #56]	; 0x38
90027bfc:	fb00 330a 	mla	r3, r0, sl, r3
90027c00:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
90027c04:	fb09 3c0c 	mla	ip, r9, ip, r3
90027c08:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90027c0c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
90027c10:	ea47 070c 	orr.w	r7, r7, ip
90027c14:	ea4f 2317 	mov.w	r3, r7, lsr #8
90027c18:	d11e      	bne.n	90027c58 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6dc>
90027c1a:	097a      	lsrs	r2, r7, #5
90027c1c:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
90027c20:	f3c7 07c4 	ubfx	r7, r7, #3, #5
90027c24:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90027c28:	f023 0307 	bic.w	r3, r3, #7
90027c2c:	4313      	orrs	r3, r2
90027c2e:	431f      	orrs	r7, r3
90027c30:	f8a8 7000 	strh.w	r7, [r8]
90027c34:	9b27      	ldr	r3, [sp, #156]	; 0x9c
90027c36:	f108 0802 	add.w	r8, r8, #2
90027c3a:	f10b 3bff 	add.w	fp, fp, #4294967295
90027c3e:	441c      	add	r4, r3
90027c40:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90027c42:	441e      	add	r6, r3
90027c44:	e643      	b.n	900278ce <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
90027c46:	2800      	cmp	r0, #0
90027c48:	f43f af0a 	beq.w	90027a60 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
90027c4c:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
90027c50:	9109      	str	r1, [sp, #36]	; 0x24
90027c52:	0e09      	lsrs	r1, r1, #24
90027c54:	9111      	str	r1, [sp, #68]	; 0x44
90027c56:	e703      	b.n	90027a60 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
90027c58:	f8b8 1000 	ldrh.w	r1, [r8]
90027c5c:	43d2      	mvns	r2, r2
90027c5e:	ea4f 2c21 	mov.w	ip, r1, asr #8
90027c62:	fa5f fe82 	uxtb.w	lr, r2
90027c66:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
90027c6a:	10c8      	asrs	r0, r1, #3
90027c6c:	00ca      	lsls	r2, r1, #3
90027c6e:	fb0c fc0e 	mul.w	ip, ip, lr
90027c72:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
90027c76:	b2d2      	uxtb	r2, r2
90027c78:	f10c 0101 	add.w	r1, ip, #1
90027c7c:	fb00 f00e 	mul.w	r0, r0, lr
90027c80:	fb02 f20e 	mul.w	r2, r2, lr
90027c84:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
90027c88:	0c39      	lsrs	r1, r7, #16
90027c8a:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
90027c8e:	490f      	ldr	r1, [pc, #60]	; (90027ccc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
90027c90:	fa5f fc8c 	uxtb.w	ip, ip
90027c94:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
90027c98:	1c41      	adds	r1, r0, #1
90027c9a:	eb01 2010 	add.w	r0, r1, r0, lsr #8
90027c9e:	1c51      	adds	r1, r2, #1
90027ca0:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90027ca4:	eb01 2212 	add.w	r2, r1, r2, lsr #8
90027ca8:	00c0      	lsls	r0, r0, #3
90027caa:	eb07 2712 	add.w	r7, r7, r2, lsr #8
90027cae:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90027cb2:	f3c7 07c4 	ubfx	r7, r7, #3, #5
90027cb6:	ea4c 0c00 	orr.w	ip, ip, r0
90027cba:	ea47 0c0c 	orr.w	ip, r7, ip
90027cbe:	f8a8 c000 	strh.w	ip, [r8]
90027cc2:	e7b7      	b.n	90027c34 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
90027cc4:	b01b      	add	sp, #108	; 0x6c
90027cc6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90027cca:	bf00      	nop
90027ccc:	fffff800 	.word	0xfffff800

90027cd0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
90027cd0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90027cd4:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
90027cd8:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
90027cdc:	2d00      	cmp	r5, #0
90027cde:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
90027ce2:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
90027ce6:	fb05 0e03 	mla	lr, r5, r3, r0
90027cea:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
90027cee:	f2c0 808c 	blt.w	90027e0a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
90027cf2:	45a9      	cmp	r9, r5
90027cf4:	f340 8089 	ble.w	90027e0a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
90027cf8:	2800      	cmp	r0, #0
90027cfa:	f2c0 8084 	blt.w	90027e06 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
90027cfe:	4580      	cmp	r8, r0
90027d00:	f340 8081 	ble.w	90027e06 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
90027d04:	ea4f 045e 	mov.w	r4, lr, lsr #1
90027d08:	f01e 0f01 	tst.w	lr, #1
90027d0c:	5d16      	ldrb	r6, [r2, r4]
90027d0e:	bf0c      	ite	eq
90027d10:	f006 060f 	andeq.w	r6, r6, #15
90027d14:	1136      	asrne	r6, r6, #4
90027d16:	eb06 1606 	add.w	r6, r6, r6, lsl #4
90027d1a:	b2f6      	uxtb	r6, r6
90027d1c:	1c44      	adds	r4, r0, #1
90027d1e:	d477      	bmi.n	90027e10 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
90027d20:	45a0      	cmp	r8, r4
90027d22:	dd75      	ble.n	90027e10 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
90027d24:	2f00      	cmp	r7, #0
90027d26:	d075      	beq.n	90027e14 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
90027d28:	f10e 0a01 	add.w	sl, lr, #1
90027d2c:	ea4f 045a 	mov.w	r4, sl, lsr #1
90027d30:	f01a 0f01 	tst.w	sl, #1
90027d34:	5d14      	ldrb	r4, [r2, r4]
90027d36:	bf0c      	ite	eq
90027d38:	f004 040f 	andeq.w	r4, r4, #15
90027d3c:	1124      	asrne	r4, r4, #4
90027d3e:	eb04 1404 	add.w	r4, r4, r4, lsl #4
90027d42:	b2e4      	uxtb	r4, r4
90027d44:	3501      	adds	r5, #1
90027d46:	d469      	bmi.n	90027e1c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
90027d48:	45a9      	cmp	r9, r5
90027d4a:	dd67      	ble.n	90027e1c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
90027d4c:	f1bc 0f00 	cmp.w	ip, #0
90027d50:	d067      	beq.n	90027e22 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
90027d52:	2800      	cmp	r0, #0
90027d54:	db60      	blt.n	90027e18 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
90027d56:	4580      	cmp	r8, r0
90027d58:	dd5e      	ble.n	90027e18 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
90027d5a:	eb03 090e 	add.w	r9, r3, lr
90027d5e:	ea4f 0559 	mov.w	r5, r9, lsr #1
90027d62:	f019 0f01 	tst.w	r9, #1
90027d66:	5d55      	ldrb	r5, [r2, r5]
90027d68:	bf0c      	ite	eq
90027d6a:	f005 050f 	andeq.w	r5, r5, #15
90027d6e:	112d      	asrne	r5, r5, #4
90027d70:	eb05 1505 	add.w	r5, r5, r5, lsl #4
90027d74:	b2ed      	uxtb	r5, r5
90027d76:	3001      	adds	r0, #1
90027d78:	d456      	bmi.n	90027e28 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
90027d7a:	4580      	cmp	r8, r0
90027d7c:	dd54      	ble.n	90027e28 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
90027d7e:	2f00      	cmp	r7, #0
90027d80:	d054      	beq.n	90027e2c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
90027d82:	3301      	adds	r3, #1
90027d84:	449e      	add	lr, r3
90027d86:	ea4f 035e 	mov.w	r3, lr, lsr #1
90027d8a:	f01e 0f01 	tst.w	lr, #1
90027d8e:	5cd0      	ldrb	r0, [r2, r3]
90027d90:	bf0c      	ite	eq
90027d92:	f000 000f 	andeq.w	r0, r0, #15
90027d96:	1100      	asrne	r0, r0, #4
90027d98:	eb00 1000 	add.w	r0, r0, r0, lsl #4
90027d9c:	b2c3      	uxtb	r3, r0
90027d9e:	b2ba      	uxth	r2, r7
90027da0:	fa1f fc8c 	uxth.w	ip, ip
90027da4:	fb02 f00c 	mul.w	r0, r2, ip
90027da8:	0112      	lsls	r2, r2, #4
90027daa:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
90027dae:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
90027db2:	1a12      	subs	r2, r2, r0
90027db4:	fa1f fc8c 	uxth.w	ip, ip
90027db8:	b292      	uxth	r2, r2
90027dba:	eba7 070c 	sub.w	r7, r7, ip
90027dbe:	4362      	muls	r2, r4
90027dc0:	b2bf      	uxth	r7, r7
90027dc2:	fb06 2207 	mla	r2, r6, r7, r2
90027dc6:	fb0c 2505 	mla	r5, ip, r5, r2
90027dca:	fb00 5303 	mla	r3, r0, r3, r5
90027dce:	f3c3 2307 	ubfx	r3, r3, #8, #8
90027dd2:	b1b3      	cbz	r3, 90027e02 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
90027dd4:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
90027dd8:	435a      	muls	r2, r3
90027dda:	1c53      	adds	r3, r2, #1
90027ddc:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90027de0:	4a2d      	ldr	r2, [pc, #180]	; (90027e98 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
90027de2:	121b      	asrs	r3, r3, #8
90027de4:	6812      	ldr	r2, [r2, #0]
90027de6:	2bff      	cmp	r3, #255	; 0xff
90027de8:	ea4f 2612 	mov.w	r6, r2, lsr #8
90027dec:	d120      	bne.n	90027e30 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
90027dee:	0950      	lsrs	r0, r2, #5
90027df0:	4b2a      	ldr	r3, [pc, #168]	; (90027e9c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
90027df2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90027df6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90027dfa:	4033      	ands	r3, r6
90027dfc:	4318      	orrs	r0, r3
90027dfe:	4302      	orrs	r2, r0
90027e00:	800a      	strh	r2, [r1, #0]
90027e02:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90027e06:	2600      	movs	r6, #0
90027e08:	e788      	b.n	90027d1c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
90027e0a:	2400      	movs	r4, #0
90027e0c:	4626      	mov	r6, r4
90027e0e:	e799      	b.n	90027d44 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
90027e10:	2400      	movs	r4, #0
90027e12:	e797      	b.n	90027d44 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
90027e14:	463c      	mov	r4, r7
90027e16:	e795      	b.n	90027d44 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
90027e18:	2500      	movs	r5, #0
90027e1a:	e7ac      	b.n	90027d76 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
90027e1c:	2300      	movs	r3, #0
90027e1e:	461d      	mov	r5, r3
90027e20:	e7bd      	b.n	90027d9e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
90027e22:	4663      	mov	r3, ip
90027e24:	4665      	mov	r5, ip
90027e26:	e7ba      	b.n	90027d9e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
90027e28:	2300      	movs	r3, #0
90027e2a:	e7b8      	b.n	90027d9e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
90027e2c:	463b      	mov	r3, r7
90027e2e:	e7b6      	b.n	90027d9e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
90027e30:	880d      	ldrh	r5, [r1, #0]
90027e32:	b29f      	uxth	r7, r3
90027e34:	f3c2 4007 	ubfx	r0, r2, #16, #8
90027e38:	43db      	mvns	r3, r3
90027e3a:	122c      	asrs	r4, r5, #8
90027e3c:	fb10 f007 	smulbb	r0, r0, r7
90027e40:	b2db      	uxtb	r3, r3
90027e42:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
90027e46:	b2f6      	uxtb	r6, r6
90027e48:	b2d2      	uxtb	r2, r2
90027e4a:	fb04 0403 	mla	r4, r4, r3, r0
90027e4e:	10e8      	asrs	r0, r5, #3
90027e50:	fb12 f207 	smulbb	r2, r2, r7
90027e54:	00ed      	lsls	r5, r5, #3
90027e56:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
90027e5a:	b2a4      	uxth	r4, r4
90027e5c:	fb16 f607 	smulbb	r6, r6, r7
90027e60:	b2ed      	uxtb	r5, r5
90027e62:	fb00 6603 	mla	r6, r0, r3, r6
90027e66:	fb05 2303 	mla	r3, r5, r3, r2
90027e6a:	b2b0      	uxth	r0, r6
90027e6c:	b29a      	uxth	r2, r3
90027e6e:	1c63      	adds	r3, r4, #1
90027e70:	eb03 2414 	add.w	r4, r3, r4, lsr #8
90027e74:	1c53      	adds	r3, r2, #1
90027e76:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90027e7a:	1c42      	adds	r2, r0, #1
90027e7c:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
90027e80:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90027e84:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90027e88:	0940      	lsrs	r0, r0, #5
90027e8a:	4323      	orrs	r3, r4
90027e8c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90027e90:	4303      	orrs	r3, r0
90027e92:	800b      	strh	r3, [r1, #0]
90027e94:	e7b5      	b.n	90027e02 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
90027e96:	bf00      	nop
90027e98:	240236dc 	.word	0x240236dc
90027e9c:	00fff800 	.word	0x00fff800

90027ea0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90027ea0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90027ea4:	b097      	sub	sp, #92	; 0x5c
90027ea6:	9214      	str	r2, [sp, #80]	; 0x50
90027ea8:	9309      	str	r3, [sp, #36]	; 0x24
90027eaa:	9a25      	ldr	r2, [sp, #148]	; 0x94
90027eac:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
90027eb0:	9015      	str	r0, [sp, #84]	; 0x54
90027eb2:	910d      	str	r1, [sp, #52]	; 0x34
90027eb4:	6850      	ldr	r0, [r2, #4]
90027eb6:	930f      	str	r3, [sp, #60]	; 0x3c
90027eb8:	6812      	ldr	r2, [r2, #0]
90027eba:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
90027ebe:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
90027ec2:	fb00 1303 	mla	r3, r0, r3, r1
90027ec6:	eb02 0943 	add.w	r9, r2, r3, lsl #1
90027eca:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90027ecc:	689b      	ldr	r3, [r3, #8]
90027ece:	3301      	adds	r3, #1
90027ed0:	f023 0301 	bic.w	r3, r3, #1
90027ed4:	930a      	str	r3, [sp, #40]	; 0x28
90027ed6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90027ed8:	681f      	ldr	r7, [r3, #0]
90027eda:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90027edc:	2b00      	cmp	r3, #0
90027ede:	dc03      	bgt.n	90027ee8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90027ee0:	9b14      	ldr	r3, [sp, #80]	; 0x50
90027ee2:	2b00      	cmp	r3, #0
90027ee4:	f340 8289 	ble.w	900283fa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
90027ee8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90027eea:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90027eee:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90027ef2:	1e48      	subs	r0, r1, #1
90027ef4:	f102 3cff 	add.w	ip, r2, #4294967295
90027ef8:	9b09      	ldr	r3, [sp, #36]	; 0x24
90027efa:	2b00      	cmp	r3, #0
90027efc:	f340 80c5 	ble.w	9002808a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
90027f00:	ea5f 4e24 	movs.w	lr, r4, asr #16
90027f04:	ea4f 4326 	mov.w	r3, r6, asr #16
90027f08:	d406      	bmi.n	90027f18 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90027f0a:	4586      	cmp	lr, r0
90027f0c:	da04      	bge.n	90027f18 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90027f0e:	2b00      	cmp	r3, #0
90027f10:	db02      	blt.n	90027f18 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90027f12:	4563      	cmp	r3, ip
90027f14:	f2c0 80ba 	blt.w	9002808c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
90027f18:	f11e 0e01 	adds.w	lr, lr, #1
90027f1c:	f100 80ab 	bmi.w	90028076 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
90027f20:	4571      	cmp	r1, lr
90027f22:	f2c0 80a8 	blt.w	90028076 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
90027f26:	3301      	adds	r3, #1
90027f28:	f100 80a5 	bmi.w	90028076 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
90027f2c:	429a      	cmp	r2, r3
90027f2e:	f2c0 80a2 	blt.w	90028076 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
90027f32:	9b09      	ldr	r3, [sp, #36]	; 0x24
90027f34:	46c8      	mov	r8, r9
90027f36:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
90027f3a:	930e      	str	r3, [sp, #56]	; 0x38
90027f3c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90027f3e:	2b00      	cmp	r3, #0
90027f40:	f340 80c4 	ble.w	900280cc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
90027f44:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90027f46:	1430      	asrs	r0, r6, #16
90027f48:	f3c4 3203 	ubfx	r2, r4, #12, #4
90027f4c:	f3c6 3103 	ubfx	r1, r6, #12, #4
90027f50:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
90027f54:	1423      	asrs	r3, r4, #16
90027f56:	f100 814f 	bmi.w	900281f8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90027f5a:	f10c 3bff 	add.w	fp, ip, #4294967295
90027f5e:	455b      	cmp	r3, fp
90027f60:	f280 814a 	bge.w	900281f8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90027f64:	2800      	cmp	r0, #0
90027f66:	f2c0 8147 	blt.w	900281f8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90027f6a:	f10e 3bff 	add.w	fp, lr, #4294967295
90027f6e:	4558      	cmp	r0, fp
90027f70:	f280 8142 	bge.w	900281f8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90027f74:	9d0a      	ldr	r5, [sp, #40]	; 0x28
90027f76:	fb00 3305 	mla	r3, r0, r5, r3
90027f7a:	0858      	lsrs	r0, r3, #1
90027f7c:	07dd      	lsls	r5, r3, #31
90027f7e:	f817 c000 	ldrb.w	ip, [r7, r0]
90027f82:	bf54      	ite	pl
90027f84:	f00c 0c0f 	andpl.w	ip, ip, #15
90027f88:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90027f8c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90027f90:	fa5f fc8c 	uxtb.w	ip, ip
90027f94:	2a00      	cmp	r2, #0
90027f96:	f000 80dd 	beq.w	90028154 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b4>
90027f9a:	1c58      	adds	r0, r3, #1
90027f9c:	ea4f 0e50 	mov.w	lr, r0, lsr #1
90027fa0:	07c0      	lsls	r0, r0, #31
90027fa2:	f817 e00e 	ldrb.w	lr, [r7, lr]
90027fa6:	bf54      	ite	pl
90027fa8:	f00e 0e0f 	andpl.w	lr, lr, #15
90027fac:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
90027fb0:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
90027fb4:	fa5f f08e 	uxtb.w	r0, lr
90027fb8:	9010      	str	r0, [sp, #64]	; 0x40
90027fba:	b1d9      	cbz	r1, 90027ff4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
90027fbc:	4453      	add	r3, sl
90027fbe:	0858      	lsrs	r0, r3, #1
90027fc0:	07dd      	lsls	r5, r3, #31
90027fc2:	f103 0301 	add.w	r3, r3, #1
90027fc6:	5c38      	ldrb	r0, [r7, r0]
90027fc8:	bf54      	ite	pl
90027fca:	f000 000f 	andpl.w	r0, r0, #15
90027fce:	1100      	asrmi	r0, r0, #4
90027fd0:	07dd      	lsls	r5, r3, #31
90027fd2:	eb00 1000 	add.w	r0, r0, r0, lsl #4
90027fd6:	b2c0      	uxtb	r0, r0
90027fd8:	900b      	str	r0, [sp, #44]	; 0x2c
90027fda:	ea4f 0053 	mov.w	r0, r3, lsr #1
90027fde:	f817 e000 	ldrb.w	lr, [r7, r0]
90027fe2:	bf54      	ite	pl
90027fe4:	f00e 030f 	andpl.w	r3, lr, #15
90027fe8:	ea4f 132e 	movmi.w	r3, lr, asr #4
90027fec:	eb03 1303 	add.w	r3, r3, r3, lsl #4
90027ff0:	b2db      	uxtb	r3, r3
90027ff2:	9311      	str	r3, [sp, #68]	; 0x44
90027ff4:	b292      	uxth	r2, r2
90027ff6:	9d10      	ldr	r5, [sp, #64]	; 0x40
90027ff8:	b289      	uxth	r1, r1
90027ffa:	fb02 f301 	mul.w	r3, r2, r1
90027ffe:	0112      	lsls	r2, r2, #4
90028000:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
90028004:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
90028008:	1ad2      	subs	r2, r2, r3
9002800a:	b289      	uxth	r1, r1
9002800c:	b292      	uxth	r2, r2
9002800e:	1a40      	subs	r0, r0, r1
90028010:	436a      	muls	r2, r5
90028012:	b280      	uxth	r0, r0
90028014:	fb0c 2c00 	mla	ip, ip, r0, r2
90028018:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
9002801a:	fb01 c102 	mla	r1, r1, r2, ip
9002801e:	9a11      	ldr	r2, [sp, #68]	; 0x44
90028020:	fb03 1302 	mla	r3, r3, r2, r1
90028024:	f3c3 2307 	ubfx	r3, r3, #8, #8
90028028:	b1db      	cbz	r3, 90028062 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
9002802a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9002802c:	4353      	muls	r3, r2
9002802e:	1c5a      	adds	r2, r3, #1
90028030:	eb02 2313 	add.w	r3, r2, r3, lsr #8
90028034:	4ac6      	ldr	r2, [pc, #792]	; (90028350 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
90028036:	121b      	asrs	r3, r3, #8
90028038:	6812      	ldr	r2, [r2, #0]
9002803a:	2bff      	cmp	r3, #255	; 0xff
9002803c:	ea4f 2c12 	mov.w	ip, r2, lsr #8
90028040:	f040 8099 	bne.w	90028176 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
90028044:	0953      	lsrs	r3, r2, #5
90028046:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
9002804a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9002804e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90028052:	f02c 0c07 	bic.w	ip, ip, #7
90028056:	ea43 0c0c 	orr.w	ip, r3, ip
9002805a:	ea4c 0202 	orr.w	r2, ip, r2
9002805e:	f8a8 2000 	strh.w	r2, [r8]
90028062:	9b23      	ldr	r3, [sp, #140]	; 0x8c
90028064:	f108 0802 	add.w	r8, r8, #2
90028068:	441c      	add	r4, r3
9002806a:	9b24      	ldr	r3, [sp, #144]	; 0x90
9002806c:	441e      	add	r6, r3
9002806e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90028070:	3b01      	subs	r3, #1
90028072:	930e      	str	r3, [sp, #56]	; 0x38
90028074:	e762      	b.n	90027f3c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
90028076:	9b23      	ldr	r3, [sp, #140]	; 0x8c
90028078:	f109 0902 	add.w	r9, r9, #2
9002807c:	441c      	add	r4, r3
9002807e:	9b24      	ldr	r3, [sp, #144]	; 0x90
90028080:	441e      	add	r6, r3
90028082:	9b09      	ldr	r3, [sp, #36]	; 0x24
90028084:	3b01      	subs	r3, #1
90028086:	9309      	str	r3, [sp, #36]	; 0x24
90028088:	e736      	b.n	90027ef8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
9002808a:	d024      	beq.n	900280d6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
9002808c:	9b09      	ldr	r3, [sp, #36]	; 0x24
9002808e:	9823      	ldr	r0, [sp, #140]	; 0x8c
90028090:	3b01      	subs	r3, #1
90028092:	fb00 4003 	mla	r0, r0, r3, r4
90028096:	1400      	asrs	r0, r0, #16
90028098:	f53f af4b 	bmi.w	90027f32 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9002809c:	3901      	subs	r1, #1
9002809e:	4288      	cmp	r0, r1
900280a0:	f6bf af47 	bge.w	90027f32 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900280a4:	9924      	ldr	r1, [sp, #144]	; 0x90
900280a6:	fb01 6303 	mla	r3, r1, r3, r6
900280aa:	141b      	asrs	r3, r3, #16
900280ac:	f53f af41 	bmi.w	90027f32 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900280b0:	3a01      	subs	r2, #1
900280b2:	4293      	cmp	r3, r2
900280b4:	f6bf af3d 	bge.w	90027f32 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900280b8:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
900280bc:	46c8      	mov	r8, r9
900280be:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
900280c2:	930e      	str	r3, [sp, #56]	; 0x38
900280c4:	f1bb 0f00 	cmp.w	fp, #0
900280c8:	f300 80b7 	bgt.w	9002823a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39a>
900280cc:	9b09      	ldr	r3, [sp, #36]	; 0x24
900280ce:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
900280d2:	eb09 0945 	add.w	r9, r9, r5, lsl #1
900280d6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
900280d8:	2b00      	cmp	r3, #0
900280da:	f340 818e 	ble.w	900283fa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
900280de:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
900280e2:	9b20      	ldr	r3, [sp, #128]	; 0x80
900280e4:	ee30 0a04 	vadd.f32	s0, s0, s8
900280e8:	ee70 0aa4 	vadd.f32	s1, s1, s9
900280ec:	eef0 6a62 	vmov.f32	s13, s5
900280f0:	eec7 7a00 	vdiv.f32	s15, s14, s0
900280f4:	ee31 1a05 	vadd.f32	s2, s2, s10
900280f8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900280fc:	ee16 4a90 	vmov	r4, s13
90028100:	eef0 6a43 	vmov.f32	s13, s6
90028104:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90028108:	ee16 6a90 	vmov	r6, s13
9002810c:	ee20 7aa7 	vmul.f32	s14, s1, s15
90028110:	ee61 7a27 	vmul.f32	s15, s2, s15
90028114:	ee77 2a62 	vsub.f32	s5, s14, s5
90028118:	ee37 3ac3 	vsub.f32	s6, s15, s6
9002811c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90028120:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90028124:	ee12 2a90 	vmov	r2, s5
90028128:	eef0 2a47 	vmov.f32	s5, s14
9002812c:	fb92 f3f3 	sdiv	r3, r2, r3
90028130:	ee13 2a10 	vmov	r2, s6
90028134:	9323      	str	r3, [sp, #140]	; 0x8c
90028136:	9b20      	ldr	r3, [sp, #128]	; 0x80
90028138:	eeb0 3a67 	vmov.f32	s6, s15
9002813c:	fb92 f3f3 	sdiv	r3, r2, r3
90028140:	9324      	str	r3, [sp, #144]	; 0x90
90028142:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90028144:	9a14      	ldr	r2, [sp, #80]	; 0x50
90028146:	3b01      	subs	r3, #1
90028148:	930d      	str	r3, [sp, #52]	; 0x34
9002814a:	9b20      	ldr	r3, [sp, #128]	; 0x80
9002814c:	bf08      	it	eq
9002814e:	4613      	moveq	r3, r2
90028150:	9309      	str	r3, [sp, #36]	; 0x24
90028152:	e6c2      	b.n	90027eda <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
90028154:	2900      	cmp	r1, #0
90028156:	f43f af4d 	beq.w	90027ff4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
9002815a:	eb0a 0003 	add.w	r0, sl, r3
9002815e:	0843      	lsrs	r3, r0, #1
90028160:	07c0      	lsls	r0, r0, #31
90028162:	5cfb      	ldrb	r3, [r7, r3]
90028164:	bf54      	ite	pl
90028166:	f003 030f 	andpl.w	r3, r3, #15
9002816a:	111b      	asrmi	r3, r3, #4
9002816c:	eb03 1303 	add.w	r3, r3, r3, lsl #4
90028170:	b2db      	uxtb	r3, r3
90028172:	930b      	str	r3, [sp, #44]	; 0x2c
90028174:	e73e      	b.n	90027ff4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
90028176:	f8b8 e000 	ldrh.w	lr, [r8]
9002817a:	fa1f fb83 	uxth.w	fp, r3
9002817e:	f3c2 4107 	ubfx	r1, r2, #16, #8
90028182:	43db      	mvns	r3, r3
90028184:	ea4f 202e 	mov.w	r0, lr, asr #8
90028188:	fb11 f10b 	smulbb	r1, r1, fp
9002818c:	b2db      	uxtb	r3, r3
9002818e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
90028192:	fa5f fc8c 	uxtb.w	ip, ip
90028196:	b2d2      	uxtb	r2, r2
90028198:	fb00 1003 	mla	r0, r0, r3, r1
9002819c:	ea4f 01ee 	mov.w	r1, lr, asr #3
900281a0:	fb1c fc0b 	smulbb	ip, ip, fp
900281a4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
900281a8:	b280      	uxth	r0, r0
900281aa:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
900281ae:	fb12 fb0b 	smulbb	fp, r2, fp
900281b2:	fa5f fe8e 	uxtb.w	lr, lr
900281b6:	fb01 cc03 	mla	ip, r1, r3, ip
900281ba:	fb0e bb03 	mla	fp, lr, r3, fp
900281be:	1c43      	adds	r3, r0, #1
900281c0:	fa1f fc8c 	uxth.w	ip, ip
900281c4:	fa1f fb8b 	uxth.w	fp, fp
900281c8:	eb03 2010 	add.w	r0, r3, r0, lsr #8
900281cc:	f10c 0101 	add.w	r1, ip, #1
900281d0:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
900281d4:	f10b 0001 	add.w	r0, fp, #1
900281d8:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
900281dc:	eb00 201b 	add.w	r0, r0, fp, lsr #8
900281e0:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
900281e4:	f3c0 20c4 	ubfx	r0, r0, #11, #5
900281e8:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
900281ec:	4318      	orrs	r0, r3
900281ee:	ea40 000c 	orr.w	r0, r0, ip
900281f2:	f8a8 0000 	strh.w	r0, [r8]
900281f6:	e734      	b.n	90028062 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
900281f8:	f113 0b01 	adds.w	fp, r3, #1
900281fc:	f53f af31 	bmi.w	90028062 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90028200:	45dc      	cmp	ip, fp
90028202:	f6ff af2e 	blt.w	90028062 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90028206:	f110 0b01 	adds.w	fp, r0, #1
9002820a:	f53f af2a 	bmi.w	90028062 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
9002820e:	45de      	cmp	lr, fp
90028210:	f6ff af27 	blt.w	90028062 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90028214:	9302      	str	r3, [sp, #8]
90028216:	fa0f f38e 	sxth.w	r3, lr
9002821a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
9002821c:	9301      	str	r3, [sp, #4]
9002821e:	fa0f f38c 	sxth.w	r3, ip
90028222:	e9cd 0203 	strd	r0, r2, [sp, #12]
90028226:	e9cd 1505 	strd	r1, r5, [sp, #20]
9002822a:	9300      	str	r3, [sp, #0]
9002822c:	463a      	mov	r2, r7
9002822e:	4653      	mov	r3, sl
90028230:	4641      	mov	r1, r8
90028232:	9815      	ldr	r0, [sp, #84]	; 0x54
90028234:	f7ff fd4c 	bl	90027cd0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
90028238:	e713      	b.n	90028062 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
9002823a:	1422      	asrs	r2, r4, #16
9002823c:	9d0a      	ldr	r5, [sp, #40]	; 0x28
9002823e:	1433      	asrs	r3, r6, #16
90028240:	f3c4 3103 	ubfx	r1, r4, #12, #4
90028244:	f3c6 3003 	ubfx	r0, r6, #12, #4
90028248:	fb05 2303 	mla	r3, r5, r3, r2
9002824c:	085a      	lsrs	r2, r3, #1
9002824e:	07dd      	lsls	r5, r3, #31
90028250:	5cba      	ldrb	r2, [r7, r2]
90028252:	bf54      	ite	pl
90028254:	f002 020f 	andpl.w	r2, r2, #15
90028258:	1112      	asrmi	r2, r2, #4
9002825a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9002825e:	b2d2      	uxtb	r2, r2
90028260:	2900      	cmp	r1, #0
90028262:	d077      	beq.n	90028354 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90028264:	f103 0e01 	add.w	lr, r3, #1
90028268:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
9002826c:	f01e 0f01 	tst.w	lr, #1
90028270:	f817 c00c 	ldrb.w	ip, [r7, ip]
90028274:	bf0c      	ite	eq
90028276:	f00c 0c0f 	andeq.w	ip, ip, #15
9002827a:	ea4f 1c2c 	movne.w	ip, ip, asr #4
9002827e:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90028282:	fa5f f58c 	uxtb.w	r5, ip
90028286:	9512      	str	r5, [sp, #72]	; 0x48
90028288:	b308      	cbz	r0, 900282ce <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
9002828a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
9002828c:	442b      	add	r3, r5
9002828e:	ea4f 0c53 	mov.w	ip, r3, lsr #1
90028292:	07dd      	lsls	r5, r3, #31
90028294:	f103 0301 	add.w	r3, r3, #1
90028298:	f817 c00c 	ldrb.w	ip, [r7, ip]
9002829c:	bf54      	ite	pl
9002829e:	f00c 0c0f 	andpl.w	ip, ip, #15
900282a2:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
900282a6:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
900282aa:	fa5f f58c 	uxtb.w	r5, ip
900282ae:	ea4f 0c53 	mov.w	ip, r3, lsr #1
900282b2:	950c      	str	r5, [sp, #48]	; 0x30
900282b4:	07dd      	lsls	r5, r3, #31
900282b6:	f817 c00c 	ldrb.w	ip, [r7, ip]
900282ba:	bf54      	ite	pl
900282bc:	f00c 0c0f 	andpl.w	ip, ip, #15
900282c0:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
900282c4:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
900282c8:	fa5f f38c 	uxtb.w	r3, ip
900282cc:	9313      	str	r3, [sp, #76]	; 0x4c
900282ce:	b289      	uxth	r1, r1
900282d0:	9d12      	ldr	r5, [sp, #72]	; 0x48
900282d2:	b280      	uxth	r0, r0
900282d4:	fb01 f300 	mul.w	r3, r1, r0
900282d8:	0109      	lsls	r1, r1, #4
900282da:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
900282de:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
900282e2:	1ac9      	subs	r1, r1, r3
900282e4:	b280      	uxth	r0, r0
900282e6:	b289      	uxth	r1, r1
900282e8:	ebac 0c00 	sub.w	ip, ip, r0
900282ec:	4369      	muls	r1, r5
900282ee:	fa1f fc8c 	uxth.w	ip, ip
900282f2:	fb02 120c 	mla	r2, r2, ip, r1
900282f6:	990c      	ldr	r1, [sp, #48]	; 0x30
900282f8:	fb00 2001 	mla	r0, r0, r1, r2
900282fc:	9a13      	ldr	r2, [sp, #76]	; 0x4c
900282fe:	fb03 0302 	mla	r3, r3, r2, r0
90028302:	f3c3 2307 	ubfx	r3, r3, #8, #8
90028306:	b1d3      	cbz	r3, 9002833e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
90028308:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9002830a:	4353      	muls	r3, r2
9002830c:	1c5a      	adds	r2, r3, #1
9002830e:	eb02 2313 	add.w	r3, r2, r3, lsr #8
90028312:	4a0f      	ldr	r2, [pc, #60]	; (90028350 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
90028314:	121b      	asrs	r3, r3, #8
90028316:	6812      	ldr	r2, [r2, #0]
90028318:	2bff      	cmp	r3, #255	; 0xff
9002831a:	ea4f 2c12 	mov.w	ip, r2, lsr #8
9002831e:	d12d      	bne.n	9002837c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4dc>
90028320:	0953      	lsrs	r3, r2, #5
90028322:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
90028326:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9002832a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9002832e:	f02c 0c07 	bic.w	ip, ip, #7
90028332:	ea43 0c0c 	orr.w	ip, r3, ip
90028336:	ea4c 0202 	orr.w	r2, ip, r2
9002833a:	f8a8 2000 	strh.w	r2, [r8]
9002833e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
90028340:	f108 0802 	add.w	r8, r8, #2
90028344:	f10b 3bff 	add.w	fp, fp, #4294967295
90028348:	441c      	add	r4, r3
9002834a:	9b24      	ldr	r3, [sp, #144]	; 0x90
9002834c:	441e      	add	r6, r3
9002834e:	e6b9      	b.n	900280c4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
90028350:	240236dc 	.word	0x240236dc
90028354:	2800      	cmp	r0, #0
90028356:	d0ba      	beq.n	900282ce <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
90028358:	9d0e      	ldr	r5, [sp, #56]	; 0x38
9002835a:	442b      	add	r3, r5
9002835c:	ea4f 0c53 	mov.w	ip, r3, lsr #1
90028360:	07db      	lsls	r3, r3, #31
90028362:	f817 c00c 	ldrb.w	ip, [r7, ip]
90028366:	bf54      	ite	pl
90028368:	f00c 0c0f 	andpl.w	ip, ip, #15
9002836c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90028370:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90028374:	fa5f f38c 	uxtb.w	r3, ip
90028378:	930c      	str	r3, [sp, #48]	; 0x30
9002837a:	e7a8      	b.n	900282ce <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
9002837c:	f8b8 e000 	ldrh.w	lr, [r8]
90028380:	fa1f fa83 	uxth.w	sl, r3
90028384:	f3c2 4107 	ubfx	r1, r2, #16, #8
90028388:	43db      	mvns	r3, r3
9002838a:	ea4f 202e 	mov.w	r0, lr, asr #8
9002838e:	fb11 f10a 	smulbb	r1, r1, sl
90028392:	b2db      	uxtb	r3, r3
90028394:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
90028398:	b2d2      	uxtb	r2, r2
9002839a:	fa5f fc8c 	uxtb.w	ip, ip
9002839e:	fb00 1003 	mla	r0, r0, r3, r1
900283a2:	ea4f 01ee 	mov.w	r1, lr, asr #3
900283a6:	fb12 f20a 	smulbb	r2, r2, sl
900283aa:	ea4f 0ece 	mov.w	lr, lr, lsl #3
900283ae:	b280      	uxth	r0, r0
900283b0:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
900283b4:	fb1c fc0a 	smulbb	ip, ip, sl
900283b8:	fa5f fe8e 	uxtb.w	lr, lr
900283bc:	fb0e 2203 	mla	r2, lr, r3, r2
900283c0:	fb01 cc03 	mla	ip, r1, r3, ip
900283c4:	1c43      	adds	r3, r0, #1
900283c6:	b292      	uxth	r2, r2
900283c8:	eb03 2010 	add.w	r0, r3, r0, lsr #8
900283cc:	1c51      	adds	r1, r2, #1
900283ce:	fa1f fc8c 	uxth.w	ip, ip
900283d2:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
900283d6:	eb01 2112 	add.w	r1, r1, r2, lsr #8
900283da:	f3c1 21c4 	ubfx	r1, r1, #11, #5
900283de:	4308      	orrs	r0, r1
900283e0:	f10c 0101 	add.w	r1, ip, #1
900283e4:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
900283e8:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
900283ec:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
900283f0:	ea40 000c 	orr.w	r0, r0, ip
900283f4:	f8a8 0000 	strh.w	r0, [r8]
900283f8:	e7a1      	b.n	9002833e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
900283fa:	b017      	add	sp, #92	; 0x5c
900283fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90028400 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
90028400:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90028404:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
90028408:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
9002840c:	2d00      	cmp	r5, #0
9002840e:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
90028412:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
90028416:	fb05 0e03 	mla	lr, r5, r3, r0
9002841a:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
9002841e:	f2c0 80b0 	blt.w	90028582 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
90028422:	45a9      	cmp	r9, r5
90028424:	f340 80ad 	ble.w	90028582 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
90028428:	2800      	cmp	r0, #0
9002842a:	f2c0 80a8 	blt.w	9002857e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
9002842e:	4580      	cmp	r8, r0
90028430:	f340 80a5 	ble.w	9002857e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
90028434:	ea4f 045e 	mov.w	r4, lr, lsr #1
90028438:	f01e 0f01 	tst.w	lr, #1
9002843c:	5d16      	ldrb	r6, [r2, r4]
9002843e:	bf0c      	ite	eq
90028440:	f006 060f 	andeq.w	r6, r6, #15
90028444:	1136      	asrne	r6, r6, #4
90028446:	eb06 1606 	add.w	r6, r6, r6, lsl #4
9002844a:	b2f6      	uxtb	r6, r6
9002844c:	1c44      	adds	r4, r0, #1
9002844e:	f100 809b 	bmi.w	90028588 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
90028452:	45a0      	cmp	r8, r4
90028454:	f340 8098 	ble.w	90028588 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
90028458:	2f00      	cmp	r7, #0
9002845a:	f000 8097 	beq.w	9002858c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
9002845e:	f10e 0a01 	add.w	sl, lr, #1
90028462:	ea4f 045a 	mov.w	r4, sl, lsr #1
90028466:	f01a 0f01 	tst.w	sl, #1
9002846a:	5d14      	ldrb	r4, [r2, r4]
9002846c:	bf0c      	ite	eq
9002846e:	f004 040f 	andeq.w	r4, r4, #15
90028472:	1124      	asrne	r4, r4, #4
90028474:	eb04 1404 	add.w	r4, r4, r4, lsl #4
90028478:	b2e4      	uxtb	r4, r4
9002847a:	3501      	adds	r5, #1
9002847c:	f100 808a 	bmi.w	90028594 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
90028480:	45a9      	cmp	r9, r5
90028482:	f340 8087 	ble.w	90028594 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
90028486:	f1bc 0f00 	cmp.w	ip, #0
9002848a:	f000 8086 	beq.w	9002859a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
9002848e:	2800      	cmp	r0, #0
90028490:	db7e      	blt.n	90028590 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
90028492:	4580      	cmp	r8, r0
90028494:	dd7c      	ble.n	90028590 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
90028496:	eb03 090e 	add.w	r9, r3, lr
9002849a:	ea4f 0559 	mov.w	r5, r9, lsr #1
9002849e:	f019 0f01 	tst.w	r9, #1
900284a2:	5d55      	ldrb	r5, [r2, r5]
900284a4:	bf0c      	ite	eq
900284a6:	f005 050f 	andeq.w	r5, r5, #15
900284aa:	112d      	asrne	r5, r5, #4
900284ac:	eb05 1505 	add.w	r5, r5, r5, lsl #4
900284b0:	b2ed      	uxtb	r5, r5
900284b2:	3001      	adds	r0, #1
900284b4:	d474      	bmi.n	900285a0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
900284b6:	4580      	cmp	r8, r0
900284b8:	dd72      	ble.n	900285a0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
900284ba:	2f00      	cmp	r7, #0
900284bc:	d072      	beq.n	900285a4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
900284be:	3301      	adds	r3, #1
900284c0:	449e      	add	lr, r3
900284c2:	ea4f 035e 	mov.w	r3, lr, lsr #1
900284c6:	f01e 0f01 	tst.w	lr, #1
900284ca:	5cd0      	ldrb	r0, [r2, r3]
900284cc:	bf0c      	ite	eq
900284ce:	f000 000f 	andeq.w	r0, r0, #15
900284d2:	1100      	asrne	r0, r0, #4
900284d4:	eb00 1000 	add.w	r0, r0, r0, lsl #4
900284d8:	b2c3      	uxtb	r3, r0
900284da:	b2ba      	uxth	r2, r7
900284dc:	fa1f fc8c 	uxth.w	ip, ip
900284e0:	fb02 f00c 	mul.w	r0, r2, ip
900284e4:	0112      	lsls	r2, r2, #4
900284e6:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
900284ea:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
900284ee:	1a12      	subs	r2, r2, r0
900284f0:	fa1f fc8c 	uxth.w	ip, ip
900284f4:	b292      	uxth	r2, r2
900284f6:	eba7 070c 	sub.w	r7, r7, ip
900284fa:	4362      	muls	r2, r4
900284fc:	b2bf      	uxth	r7, r7
900284fe:	fb06 2207 	mla	r2, r6, r7, r2
90028502:	fb0c 2505 	mla	r5, ip, r5, r2
90028506:	fb00 5303 	mla	r3, r0, r3, r5
9002850a:	f3c3 2307 	ubfx	r3, r3, #8, #8
9002850e:	b3a3      	cbz	r3, 9002857a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
90028510:	4a25      	ldr	r2, [pc, #148]	; (900285a8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
90028512:	880e      	ldrh	r6, [r1, #0]
90028514:	6815      	ldr	r5, [r2, #0]
90028516:	b29a      	uxth	r2, r3
90028518:	1234      	asrs	r4, r6, #8
9002851a:	43db      	mvns	r3, r3
9002851c:	f3c5 4007 	ubfx	r0, r5, #16, #8
90028520:	f3c5 2707 	ubfx	r7, r5, #8, #8
90028524:	b2db      	uxtb	r3, r3
90028526:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
9002852a:	fb10 f002 	smulbb	r0, r0, r2
9002852e:	b2ed      	uxtb	r5, r5
90028530:	fb17 f702 	smulbb	r7, r7, r2
90028534:	fb04 0403 	mla	r4, r4, r3, r0
90028538:	10f0      	asrs	r0, r6, #3
9002853a:	fb15 f202 	smulbb	r2, r5, r2
9002853e:	00f6      	lsls	r6, r6, #3
90028540:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
90028544:	b2a4      	uxth	r4, r4
90028546:	b2f6      	uxtb	r6, r6
90028548:	fb00 7003 	mla	r0, r0, r3, r7
9002854c:	fb06 2303 	mla	r3, r6, r3, r2
90028550:	b280      	uxth	r0, r0
90028552:	b29a      	uxth	r2, r3
90028554:	1c63      	adds	r3, r4, #1
90028556:	eb03 2414 	add.w	r4, r3, r4, lsr #8
9002855a:	1c53      	adds	r3, r2, #1
9002855c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90028560:	1c42      	adds	r2, r0, #1
90028562:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
90028566:	eb02 2010 	add.w	r0, r2, r0, lsr #8
9002856a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
9002856e:	0940      	lsrs	r0, r0, #5
90028570:	4323      	orrs	r3, r4
90028572:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90028576:	4303      	orrs	r3, r0
90028578:	800b      	strh	r3, [r1, #0]
9002857a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9002857e:	2600      	movs	r6, #0
90028580:	e764      	b.n	9002844c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
90028582:	2400      	movs	r4, #0
90028584:	4626      	mov	r6, r4
90028586:	e778      	b.n	9002847a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
90028588:	2400      	movs	r4, #0
9002858a:	e776      	b.n	9002847a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
9002858c:	463c      	mov	r4, r7
9002858e:	e774      	b.n	9002847a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
90028590:	2500      	movs	r5, #0
90028592:	e78e      	b.n	900284b2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
90028594:	2300      	movs	r3, #0
90028596:	461d      	mov	r5, r3
90028598:	e79f      	b.n	900284da <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
9002859a:	4663      	mov	r3, ip
9002859c:	4665      	mov	r5, ip
9002859e:	e79c      	b.n	900284da <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
900285a0:	2300      	movs	r3, #0
900285a2:	e79a      	b.n	900284da <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
900285a4:	463b      	mov	r3, r7
900285a6:	e798      	b.n	900284da <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
900285a8:	240236dc 	.word	0x240236dc

900285ac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900285ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900285b0:	b093      	sub	sp, #76	; 0x4c
900285b2:	461d      	mov	r5, r3
900285b4:	920c      	str	r2, [sp, #48]	; 0x30
900285b6:	9a21      	ldr	r2, [sp, #132]	; 0x84
900285b8:	9011      	str	r0, [sp, #68]	; 0x44
900285ba:	9107      	str	r1, [sp, #28]
900285bc:	6850      	ldr	r0, [r2, #4]
900285be:	6812      	ldr	r2, [r2, #0]
900285c0:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
900285c4:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
900285c8:	fb00 1303 	mla	r3, r0, r3, r1
900285cc:	eb02 0943 	add.w	r9, r2, r3, lsl #1
900285d0:	9b24      	ldr	r3, [sp, #144]	; 0x90
900285d2:	689b      	ldr	r3, [r3, #8]
900285d4:	3301      	adds	r3, #1
900285d6:	f023 0301 	bic.w	r3, r3, #1
900285da:	9306      	str	r3, [sp, #24]
900285dc:	9b24      	ldr	r3, [sp, #144]	; 0x90
900285de:	681f      	ldr	r7, [r3, #0]
900285e0:	9b07      	ldr	r3, [sp, #28]
900285e2:	2b00      	cmp	r3, #0
900285e4:	dc03      	bgt.n	900285ee <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
900285e6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
900285e8:	2b00      	cmp	r3, #0
900285ea:	f340 8267 	ble.w	90028abc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
900285ee:	9b24      	ldr	r3, [sp, #144]	; 0x90
900285f0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900285f4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900285f8:	1e48      	subs	r0, r1, #1
900285fa:	f102 3cff 	add.w	ip, r2, #4294967295
900285fe:	2d00      	cmp	r5, #0
90028600:	f340 80b7 	ble.w	90028772 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
90028604:	ea5f 4e24 	movs.w	lr, r4, asr #16
90028608:	ea4f 4326 	mov.w	r3, r6, asr #16
9002860c:	d406      	bmi.n	9002861c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9002860e:	4586      	cmp	lr, r0
90028610:	da04      	bge.n	9002861c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
90028612:	2b00      	cmp	r3, #0
90028614:	db02      	blt.n	9002861c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
90028616:	4563      	cmp	r3, ip
90028618:	f2c0 80ac 	blt.w	90028774 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9002861c:	f11e 0e01 	adds.w	lr, lr, #1
90028620:	f100 809f 	bmi.w	90028762 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
90028624:	4571      	cmp	r1, lr
90028626:	f2c0 809c 	blt.w	90028762 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
9002862a:	3301      	adds	r3, #1
9002862c:	f100 8099 	bmi.w	90028762 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
90028630:	429a      	cmp	r2, r3
90028632:	f2c0 8096 	blt.w	90028762 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
90028636:	46c8      	mov	r8, r9
90028638:	f9bd a018 	ldrsh.w	sl, [sp, #24]
9002863c:	9509      	str	r5, [sp, #36]	; 0x24
9002863e:	9b09      	ldr	r3, [sp, #36]	; 0x24
90028640:	2b00      	cmp	r3, #0
90028642:	f340 80b5 	ble.w	900287b0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
90028646:	f3c4 3303 	ubfx	r3, r4, #12, #4
9002864a:	1430      	asrs	r0, r6, #16
9002864c:	f3c6 3103 	ubfx	r1, r6, #12, #4
90028650:	9308      	str	r3, [sp, #32]
90028652:	9b24      	ldr	r3, [sp, #144]	; 0x90
90028654:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
90028658:	1423      	asrs	r3, r4, #16
9002865a:	f100 813f 	bmi.w	900288dc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
9002865e:	f10c 3bff 	add.w	fp, ip, #4294967295
90028662:	455b      	cmp	r3, fp
90028664:	f280 813a 	bge.w	900288dc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
90028668:	2800      	cmp	r0, #0
9002866a:	f2c0 8137 	blt.w	900288dc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
9002866e:	f10e 3bff 	add.w	fp, lr, #4294967295
90028672:	4558      	cmp	r0, fp
90028674:	f280 8132 	bge.w	900288dc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
90028678:	9a06      	ldr	r2, [sp, #24]
9002867a:	fb00 3302 	mla	r3, r0, r2, r3
9002867e:	0858      	lsrs	r0, r3, #1
90028680:	07da      	lsls	r2, r3, #31
90028682:	9a08      	ldr	r2, [sp, #32]
90028684:	f817 c000 	ldrb.w	ip, [r7, r0]
90028688:	bf54      	ite	pl
9002868a:	f00c 0c0f 	andpl.w	ip, ip, #15
9002868e:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90028692:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90028696:	fa5f fc8c 	uxtb.w	ip, ip
9002869a:	2a00      	cmp	r2, #0
9002869c:	f000 80cc 	beq.w	90028838 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
900286a0:	1c58      	adds	r0, r3, #1
900286a2:	ea4f 0e50 	mov.w	lr, r0, lsr #1
900286a6:	07c0      	lsls	r0, r0, #31
900286a8:	f817 e00e 	ldrb.w	lr, [r7, lr]
900286ac:	bf54      	ite	pl
900286ae:	f00e 0e0f 	andpl.w	lr, lr, #15
900286b2:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
900286b6:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
900286ba:	fa5f fe8e 	uxtb.w	lr, lr
900286be:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
900286c2:	b1b9      	cbz	r1, 900286f4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
900286c4:	4453      	add	r3, sl
900286c6:	0858      	lsrs	r0, r3, #1
900286c8:	07da      	lsls	r2, r3, #31
900286ca:	5c38      	ldrb	r0, [r7, r0]
900286cc:	bf54      	ite	pl
900286ce:	f000 000f 	andpl.w	r0, r0, #15
900286d2:	1100      	asrmi	r0, r0, #4
900286d4:	eb00 1000 	add.w	r0, r0, r0, lsl #4
900286d8:	b2c0      	uxtb	r0, r0
900286da:	900a      	str	r0, [sp, #40]	; 0x28
900286dc:	1c58      	adds	r0, r3, #1
900286de:	0843      	lsrs	r3, r0, #1
900286e0:	07c2      	lsls	r2, r0, #31
900286e2:	5cfb      	ldrb	r3, [r7, r3]
900286e4:	bf54      	ite	pl
900286e6:	f003 030f 	andpl.w	r3, r3, #15
900286ea:	111b      	asrmi	r3, r3, #4
900286ec:	eb03 1303 	add.w	r3, r3, r3, lsl #4
900286f0:	b2db      	uxtb	r3, r3
900286f2:	930e      	str	r3, [sp, #56]	; 0x38
900286f4:	f8bd 2020 	ldrh.w	r2, [sp, #32]
900286f8:	b289      	uxth	r1, r1
900286fa:	fb02 f301 	mul.w	r3, r2, r1
900286fe:	0112      	lsls	r2, r2, #4
90028700:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
90028704:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
90028708:	1ad2      	subs	r2, r2, r3
9002870a:	b289      	uxth	r1, r1
9002870c:	b292      	uxth	r2, r2
9002870e:	1a40      	subs	r0, r0, r1
90028710:	fa1f fe80 	uxth.w	lr, r0
90028714:	980d      	ldr	r0, [sp, #52]	; 0x34
90028716:	4342      	muls	r2, r0
90028718:	fb0c 2c0e 	mla	ip, ip, lr, r2
9002871c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
9002871e:	fb01 c102 	mla	r1, r1, r2, ip
90028722:	9a0e      	ldr	r2, [sp, #56]	; 0x38
90028724:	fb03 1302 	mla	r3, r3, r2, r1
90028728:	f3c3 2307 	ubfx	r3, r3, #8, #8
9002872c:	2bff      	cmp	r3, #255	; 0xff
9002872e:	f040 8094 	bne.w	9002885a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
90028732:	4bbf      	ldr	r3, [pc, #764]	; (90028a30 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
90028734:	681a      	ldr	r2, [r3, #0]
90028736:	4bbf      	ldr	r3, [pc, #764]	; (90028a34 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
90028738:	0951      	lsrs	r1, r2, #5
9002873a:	ea03 2312 	and.w	r3, r3, r2, lsr #8
9002873e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90028742:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90028746:	430b      	orrs	r3, r1
90028748:	4313      	orrs	r3, r2
9002874a:	f8a8 3000 	strh.w	r3, [r8]
9002874e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90028750:	f108 0802 	add.w	r8, r8, #2
90028754:	441c      	add	r4, r3
90028756:	9b20      	ldr	r3, [sp, #128]	; 0x80
90028758:	441e      	add	r6, r3
9002875a:	9b09      	ldr	r3, [sp, #36]	; 0x24
9002875c:	3b01      	subs	r3, #1
9002875e:	9309      	str	r3, [sp, #36]	; 0x24
90028760:	e76d      	b.n	9002863e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90028762:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90028764:	3d01      	subs	r5, #1
90028766:	f109 0902 	add.w	r9, r9, #2
9002876a:	441c      	add	r4, r3
9002876c:	9b20      	ldr	r3, [sp, #128]	; 0x80
9002876e:	441e      	add	r6, r3
90028770:	e745      	b.n	900285fe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
90028772:	d021      	beq.n	900287b8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
90028774:	1e6b      	subs	r3, r5, #1
90028776:	981f      	ldr	r0, [sp, #124]	; 0x7c
90028778:	fb00 4003 	mla	r0, r0, r3, r4
9002877c:	1400      	asrs	r0, r0, #16
9002877e:	f53f af5a 	bmi.w	90028636 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
90028782:	3901      	subs	r1, #1
90028784:	4288      	cmp	r0, r1
90028786:	f6bf af56 	bge.w	90028636 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
9002878a:	9920      	ldr	r1, [sp, #128]	; 0x80
9002878c:	fb01 6303 	mla	r3, r1, r3, r6
90028790:	141b      	asrs	r3, r3, #16
90028792:	f53f af50 	bmi.w	90028636 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
90028796:	3a01      	subs	r2, #1
90028798:	4293      	cmp	r3, r2
9002879a:	f6bf af4c 	bge.w	90028636 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
9002879e:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
900287a2:	46a8      	mov	r8, r5
900287a4:	46ce      	mov	lr, r9
900287a6:	9308      	str	r3, [sp, #32]
900287a8:	f1b8 0f00 	cmp.w	r8, #0
900287ac:	f300 80b6 	bgt.w	9002891c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
900287b0:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
900287b4:	eb09 0945 	add.w	r9, r9, r5, lsl #1
900287b8:	9b07      	ldr	r3, [sp, #28]
900287ba:	2b00      	cmp	r3, #0
900287bc:	f340 817e 	ble.w	90028abc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
900287c0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
900287c4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
900287c6:	ee30 0a04 	vadd.f32	s0, s0, s8
900287ca:	ee70 0aa4 	vadd.f32	s1, s1, s9
900287ce:	eef0 6a62 	vmov.f32	s13, s5
900287d2:	eec7 7a00 	vdiv.f32	s15, s14, s0
900287d6:	ee31 1a05 	vadd.f32	s2, s2, s10
900287da:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900287de:	ee16 4a90 	vmov	r4, s13
900287e2:	eef0 6a43 	vmov.f32	s13, s6
900287e6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900287ea:	ee16 6a90 	vmov	r6, s13
900287ee:	ee20 7aa7 	vmul.f32	s14, s1, s15
900287f2:	ee61 7a27 	vmul.f32	s15, s2, s15
900287f6:	ee77 2a62 	vsub.f32	s5, s14, s5
900287fa:	ee37 3ac3 	vsub.f32	s6, s15, s6
900287fe:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90028802:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90028806:	ee12 2a90 	vmov	r2, s5
9002880a:	eef0 2a47 	vmov.f32	s5, s14
9002880e:	fb92 f3f3 	sdiv	r3, r2, r3
90028812:	ee13 2a10 	vmov	r2, s6
90028816:	931f      	str	r3, [sp, #124]	; 0x7c
90028818:	9b1c      	ldr	r3, [sp, #112]	; 0x70
9002881a:	eeb0 3a67 	vmov.f32	s6, s15
9002881e:	fb92 f3f3 	sdiv	r3, r2, r3
90028822:	9320      	str	r3, [sp, #128]	; 0x80
90028824:	9b07      	ldr	r3, [sp, #28]
90028826:	9a0c      	ldr	r2, [sp, #48]	; 0x30
90028828:	3b01      	subs	r3, #1
9002882a:	9307      	str	r3, [sp, #28]
9002882c:	bf08      	it	eq
9002882e:	4615      	moveq	r5, r2
90028830:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90028832:	bf18      	it	ne
90028834:	461d      	movne	r5, r3
90028836:	e6d3      	b.n	900285e0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
90028838:	2900      	cmp	r1, #0
9002883a:	f43f af5b 	beq.w	900286f4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
9002883e:	eb0a 0003 	add.w	r0, sl, r3
90028842:	0843      	lsrs	r3, r0, #1
90028844:	07c0      	lsls	r0, r0, #31
90028846:	5cfb      	ldrb	r3, [r7, r3]
90028848:	bf54      	ite	pl
9002884a:	f003 030f 	andpl.w	r3, r3, #15
9002884e:	111b      	asrmi	r3, r3, #4
90028850:	eb03 1303 	add.w	r3, r3, r3, lsl #4
90028854:	b2db      	uxtb	r3, r3
90028856:	930a      	str	r3, [sp, #40]	; 0x28
90028858:	e74c      	b.n	900286f4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
9002885a:	2b00      	cmp	r3, #0
9002885c:	f43f af77 	beq.w	9002874e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90028860:	4a73      	ldr	r2, [pc, #460]	; (90028a30 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
90028862:	fa1f fe83 	uxth.w	lr, r3
90028866:	f8b8 c000 	ldrh.w	ip, [r8]
9002886a:	43db      	mvns	r3, r3
9002886c:	6810      	ldr	r0, [r2, #0]
9002886e:	ea4f 212c 	mov.w	r1, ip, asr #8
90028872:	f3c0 4207 	ubfx	r2, r0, #16, #8
90028876:	b2db      	uxtb	r3, r3
90028878:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
9002887c:	f3c0 2b07 	ubfx	fp, r0, #8, #8
90028880:	fb12 f20e 	smulbb	r2, r2, lr
90028884:	b2c0      	uxtb	r0, r0
90028886:	fb1b fb0e 	smulbb	fp, fp, lr
9002888a:	fb01 2103 	mla	r1, r1, r3, r2
9002888e:	ea4f 02ec 	mov.w	r2, ip, asr #3
90028892:	fb10 fe0e 	smulbb	lr, r0, lr
90028896:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9002889a:	b289      	uxth	r1, r1
9002889c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
900288a0:	fa5f fc8c 	uxtb.w	ip, ip
900288a4:	fb02 b203 	mla	r2, r2, r3, fp
900288a8:	1c48      	adds	r0, r1, #1
900288aa:	fb0c e303 	mla	r3, ip, r3, lr
900288ae:	b292      	uxth	r2, r2
900288b0:	b29b      	uxth	r3, r3
900288b2:	eb00 2111 	add.w	r1, r0, r1, lsr #8
900288b6:	f102 0b01 	add.w	fp, r2, #1
900288ba:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
900288be:	1c59      	adds	r1, r3, #1
900288c0:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
900288c4:	eb01 2113 	add.w	r1, r1, r3, lsr #8
900288c8:	0952      	lsrs	r2, r2, #5
900288ca:	f3c1 21c4 	ubfx	r1, r1, #11, #5
900288ce:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
900288d2:	4301      	orrs	r1, r0
900288d4:	4311      	orrs	r1, r2
900288d6:	f8a8 1000 	strh.w	r1, [r8]
900288da:	e738      	b.n	9002874e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
900288dc:	f113 0b01 	adds.w	fp, r3, #1
900288e0:	f53f af35 	bmi.w	9002874e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
900288e4:	45dc      	cmp	ip, fp
900288e6:	f6ff af32 	blt.w	9002874e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
900288ea:	f110 0b01 	adds.w	fp, r0, #1
900288ee:	f53f af2e 	bmi.w	9002874e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
900288f2:	45de      	cmp	lr, fp
900288f4:	f6ff af2b 	blt.w	9002874e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
900288f8:	9302      	str	r3, [sp, #8]
900288fa:	fa0f f38e 	sxth.w	r3, lr
900288fe:	9a08      	ldr	r2, [sp, #32]
90028900:	9301      	str	r3, [sp, #4]
90028902:	fa0f f38c 	sxth.w	r3, ip
90028906:	9105      	str	r1, [sp, #20]
90028908:	4641      	mov	r1, r8
9002890a:	9300      	str	r3, [sp, #0]
9002890c:	4653      	mov	r3, sl
9002890e:	e9cd 0203 	strd	r0, r2, [sp, #12]
90028912:	463a      	mov	r2, r7
90028914:	9811      	ldr	r0, [sp, #68]	; 0x44
90028916:	f7ff fd73 	bl	90028400 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
9002891a:	e718      	b.n	9002874e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
9002891c:	1422      	asrs	r2, r4, #16
9002891e:	9906      	ldr	r1, [sp, #24]
90028920:	1433      	asrs	r3, r6, #16
90028922:	f3c4 3003 	ubfx	r0, r4, #12, #4
90028926:	f3c6 3c03 	ubfx	ip, r6, #12, #4
9002892a:	fb01 2303 	mla	r3, r1, r3, r2
9002892e:	085a      	lsrs	r2, r3, #1
90028930:	07d9      	lsls	r1, r3, #31
90028932:	5cba      	ldrb	r2, [r7, r2]
90028934:	bf54      	ite	pl
90028936:	f002 020f 	andpl.w	r2, r2, #15
9002893a:	1112      	asrmi	r2, r2, #4
9002893c:	eb02 1202 	add.w	r2, r2, r2, lsl #4
90028940:	b2d2      	uxtb	r2, r2
90028942:	2800      	cmp	r0, #0
90028944:	d063      	beq.n	90028a0e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x462>
90028946:	f103 0a01 	add.w	sl, r3, #1
9002894a:	ea4f 015a 	mov.w	r1, sl, lsr #1
9002894e:	f01a 0f01 	tst.w	sl, #1
90028952:	5c79      	ldrb	r1, [r7, r1]
90028954:	bf0c      	ite	eq
90028956:	f001 010f 	andeq.w	r1, r1, #15
9002895a:	1109      	asrne	r1, r1, #4
9002895c:	eb01 1101 	add.w	r1, r1, r1, lsl #4
90028960:	b2c9      	uxtb	r1, r1
90028962:	910f      	str	r1, [sp, #60]	; 0x3c
90028964:	f1bc 0f00 	cmp.w	ip, #0
90028968:	d01a      	beq.n	900289a0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
9002896a:	9908      	ldr	r1, [sp, #32]
9002896c:	440b      	add	r3, r1
9002896e:	0859      	lsrs	r1, r3, #1
90028970:	f013 0f01 	tst.w	r3, #1
90028974:	f103 0301 	add.w	r3, r3, #1
90028978:	5c79      	ldrb	r1, [r7, r1]
9002897a:	bf0c      	ite	eq
9002897c:	f001 010f 	andeq.w	r1, r1, #15
90028980:	1109      	asrne	r1, r1, #4
90028982:	eb01 1101 	add.w	r1, r1, r1, lsl #4
90028986:	b2c9      	uxtb	r1, r1
90028988:	910b      	str	r1, [sp, #44]	; 0x2c
9002898a:	0859      	lsrs	r1, r3, #1
9002898c:	07db      	lsls	r3, r3, #31
9002898e:	5c79      	ldrb	r1, [r7, r1]
90028990:	bf54      	ite	pl
90028992:	f001 010f 	andpl.w	r1, r1, #15
90028996:	1109      	asrmi	r1, r1, #4
90028998:	eb01 1101 	add.w	r1, r1, r1, lsl #4
9002899c:	b2c9      	uxtb	r1, r1
9002899e:	9110      	str	r1, [sp, #64]	; 0x40
900289a0:	b280      	uxth	r0, r0
900289a2:	fa1f fc8c 	uxth.w	ip, ip
900289a6:	fb00 f30c 	mul.w	r3, r0, ip
900289aa:	0100      	lsls	r0, r0, #4
900289ac:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
900289b0:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
900289b4:	1ac0      	subs	r0, r0, r3
900289b6:	fa1f fc8c 	uxth.w	ip, ip
900289ba:	b280      	uxth	r0, r0
900289bc:	eba1 010c 	sub.w	r1, r1, ip
900289c0:	fa1f fa81 	uxth.w	sl, r1
900289c4:	990f      	ldr	r1, [sp, #60]	; 0x3c
900289c6:	4348      	muls	r0, r1
900289c8:	990b      	ldr	r1, [sp, #44]	; 0x2c
900289ca:	fb02 020a 	mla	r2, r2, sl, r0
900289ce:	fb0c 2c01 	mla	ip, ip, r1, r2
900289d2:	9a10      	ldr	r2, [sp, #64]	; 0x40
900289d4:	fb03 c302 	mla	r3, r3, r2, ip
900289d8:	f3c3 2307 	ubfx	r3, r3, #8, #8
900289dc:	2bff      	cmp	r3, #255	; 0xff
900289de:	d12b      	bne.n	90028a38 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
900289e0:	4b13      	ldr	r3, [pc, #76]	; (90028a30 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
900289e2:	681a      	ldr	r2, [r3, #0]
900289e4:	4b13      	ldr	r3, [pc, #76]	; (90028a34 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
900289e6:	0951      	lsrs	r1, r2, #5
900289e8:	ea03 2312 	and.w	r3, r3, r2, lsr #8
900289ec:	f3c2 02c4 	ubfx	r2, r2, #3, #5
900289f0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
900289f4:	430b      	orrs	r3, r1
900289f6:	4313      	orrs	r3, r2
900289f8:	f8ae 3000 	strh.w	r3, [lr]
900289fc:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
900289fe:	f10e 0e02 	add.w	lr, lr, #2
90028a02:	f108 38ff 	add.w	r8, r8, #4294967295
90028a06:	441c      	add	r4, r3
90028a08:	9b20      	ldr	r3, [sp, #128]	; 0x80
90028a0a:	441e      	add	r6, r3
90028a0c:	e6cc      	b.n	900287a8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
90028a0e:	f1bc 0f00 	cmp.w	ip, #0
90028a12:	d0c5      	beq.n	900289a0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
90028a14:	9908      	ldr	r1, [sp, #32]
90028a16:	440b      	add	r3, r1
90028a18:	0859      	lsrs	r1, r3, #1
90028a1a:	07db      	lsls	r3, r3, #31
90028a1c:	5c79      	ldrb	r1, [r7, r1]
90028a1e:	bf54      	ite	pl
90028a20:	f001 010f 	andpl.w	r1, r1, #15
90028a24:	1109      	asrmi	r1, r1, #4
90028a26:	eb01 1101 	add.w	r1, r1, r1, lsl #4
90028a2a:	b2c9      	uxtb	r1, r1
90028a2c:	910b      	str	r1, [sp, #44]	; 0x2c
90028a2e:	e7b7      	b.n	900289a0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
90028a30:	240236dc 	.word	0x240236dc
90028a34:	fffff800 	.word	0xfffff800
90028a38:	2b00      	cmp	r3, #0
90028a3a:	d0df      	beq.n	900289fc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
90028a3c:	4a21      	ldr	r2, [pc, #132]	; (90028ac4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
90028a3e:	fa1f fa83 	uxth.w	sl, r3
90028a42:	f8be c000 	ldrh.w	ip, [lr]
90028a46:	43db      	mvns	r3, r3
90028a48:	6810      	ldr	r0, [r2, #0]
90028a4a:	ea4f 212c 	mov.w	r1, ip, asr #8
90028a4e:	f3c0 4207 	ubfx	r2, r0, #16, #8
90028a52:	b2db      	uxtb	r3, r3
90028a54:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
90028a58:	f3c0 2b07 	ubfx	fp, r0, #8, #8
90028a5c:	fb12 f20a 	smulbb	r2, r2, sl
90028a60:	b2c0      	uxtb	r0, r0
90028a62:	fb1b fb0a 	smulbb	fp, fp, sl
90028a66:	fb01 2103 	mla	r1, r1, r3, r2
90028a6a:	ea4f 02ec 	mov.w	r2, ip, asr #3
90028a6e:	fb10 f00a 	smulbb	r0, r0, sl
90028a72:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
90028a76:	b289      	uxth	r1, r1
90028a78:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
90028a7c:	fa5f fc8c 	uxtb.w	ip, ip
90028a80:	fb02 b203 	mla	r2, r2, r3, fp
90028a84:	fb0c 0003 	mla	r0, ip, r3, r0
90028a88:	1c4b      	adds	r3, r1, #1
90028a8a:	b292      	uxth	r2, r2
90028a8c:	b280      	uxth	r0, r0
90028a8e:	eb03 2111 	add.w	r1, r3, r1, lsr #8
90028a92:	f100 0b01 	add.w	fp, r0, #1
90028a96:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
90028a9a:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
90028a9e:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
90028aa2:	ea4b 0101 	orr.w	r1, fp, r1
90028aa6:	f102 0b01 	add.w	fp, r2, #1
90028aaa:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
90028aae:	0952      	lsrs	r2, r2, #5
90028ab0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90028ab4:	4311      	orrs	r1, r2
90028ab6:	f8ae 1000 	strh.w	r1, [lr]
90028aba:	e79f      	b.n	900289fc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
90028abc:	b013      	add	sp, #76	; 0x4c
90028abe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90028ac2:	bf00      	nop
90028ac4:	240236dc 	.word	0x240236dc

90028ac8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
90028ac8:	b570      	push	{r4, r5, r6, lr}
90028aca:	1208      	asrs	r0, r1, #8
90028acc:	f8bd 5010 	ldrh.w	r5, [sp, #16]
90028ad0:	b29e      	uxth	r6, r3
90028ad2:	1213      	asrs	r3, r2, #8
90028ad4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
90028ad8:	10cc      	asrs	r4, r1, #3
90028ada:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
90028ade:	00c9      	lsls	r1, r1, #3
90028ae0:	fb10 f006 	smulbb	r0, r0, r6
90028ae4:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
90028ae8:	fb13 f305 	smulbb	r3, r3, r5
90028aec:	fb14 f406 	smulbb	r4, r4, r6
90028af0:	4418      	add	r0, r3
90028af2:	10d3      	asrs	r3, r2, #3
90028af4:	00d2      	lsls	r2, r2, #3
90028af6:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
90028afa:	b280      	uxth	r0, r0
90028afc:	b2d2      	uxtb	r2, r2
90028afe:	fb13 f305 	smulbb	r3, r3, r5
90028b02:	fb12 f205 	smulbb	r2, r2, r5
90028b06:	441c      	add	r4, r3
90028b08:	b2cb      	uxtb	r3, r1
90028b0a:	fb13 f306 	smulbb	r3, r3, r6
90028b0e:	b2a4      	uxth	r4, r4
90028b10:	4413      	add	r3, r2
90028b12:	1c42      	adds	r2, r0, #1
90028b14:	b29b      	uxth	r3, r3
90028b16:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90028b1a:	f400 4278 	and.w	r2, r0, #63488	; 0xf800
90028b1e:	1c58      	adds	r0, r3, #1
90028b20:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90028b24:	f3c0 20c4 	ubfx	r0, r0, #11, #5
90028b28:	4310      	orrs	r0, r2
90028b2a:	1c62      	adds	r2, r4, #1
90028b2c:	eb02 2414 	add.w	r4, r2, r4, lsr #8
90028b30:	0964      	lsrs	r4, r4, #5
90028b32:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
90028b36:	4320      	orrs	r0, r4
90028b38:	bd70      	pop	{r4, r5, r6, pc}
	...

90028b3c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
90028b3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90028b40:	b08f      	sub	sp, #60	; 0x3c
90028b42:	461c      	mov	r4, r3
90028b44:	460d      	mov	r5, r1
90028b46:	4616      	mov	r6, r2
90028b48:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
90028b4c:	9004      	str	r0, [sp, #16]
90028b4e:	9b18      	ldr	r3, [sp, #96]	; 0x60
90028b50:	2f00      	cmp	r7, #0
90028b52:	f000 80f6 	beq.w	90028d42 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
90028b56:	6820      	ldr	r0, [r4, #0]
90028b58:	aa0a      	add	r2, sp, #40	; 0x28
90028b5a:	6861      	ldr	r1, [r4, #4]
90028b5c:	f04f 0802 	mov.w	r8, #2
90028b60:	3604      	adds	r6, #4
90028b62:	c203      	stmia	r2!, {r0, r1}
90028b64:	6818      	ldr	r0, [r3, #0]
90028b66:	aa0c      	add	r2, sp, #48	; 0x30
90028b68:	6859      	ldr	r1, [r3, #4]
90028b6a:	c203      	stmia	r2!, {r0, r1}
90028b6c:	a80a      	add	r0, sp, #40	; 0x28
90028b6e:	f7ef fd53 	bl	90018618 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90028b72:	4621      	mov	r1, r4
90028b74:	a80c      	add	r0, sp, #48	; 0x30
90028b76:	f7ef fd93 	bl	900186a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90028b7a:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
90028b7e:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
90028b82:	f002 0301 	and.w	r3, r2, #1
90028b86:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
90028b8a:	9306      	str	r3, [sp, #24]
90028b8c:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
90028b90:	f003 0101 	and.w	r1, r3, #1
90028b94:	9105      	str	r1, [sp, #20]
90028b96:	9805      	ldr	r0, [sp, #20]
90028b98:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
90028b9c:	4403      	add	r3, r0
90028b9e:	fb01 2303 	mla	r3, r1, r3, r2
90028ba2:	fb93 f3f8 	sdiv	r3, r3, r8
90028ba6:	441d      	add	r5, r3
90028ba8:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
90028bac:	441a      	add	r2, r3
90028bae:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
90028bb2:	4419      	add	r1, r3
90028bb4:	4b64      	ldr	r3, [pc, #400]	; (90028d48 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
90028bb6:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
90028bba:	6818      	ldr	r0, [r3, #0]
90028bbc:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
90028bc0:	6803      	ldr	r3, [r0, #0]
90028bc2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90028bc4:	4798      	blx	r3
90028bc6:	4a61      	ldr	r2, [pc, #388]	; (90028d4c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
90028bc8:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
90028bcc:	2fff      	cmp	r7, #255	; 0xff
90028bce:	8813      	ldrh	r3, [r2, #0]
90028bd0:	4611      	mov	r1, r2
90028bd2:	f9bd a030 	ldrsh.w	sl, [sp, #48]	; 0x30
90028bd6:	fb03 fb0b 	mul.w	fp, r3, fp
90028bda:	fb03 a404 	mla	r4, r3, r4, sl
90028bde:	eb00 0444 	add.w	r4, r0, r4, lsl #1
90028be2:	d06b      	beq.n	90028cbc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x180>
90028be4:	f1c7 03ff 	rsb	r3, r7, #255	; 0xff
90028be8:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
90028bec:	9303      	str	r3, [sp, #12]
90028bee:	eb04 034b 	add.w	r3, r4, fp, lsl #1
90028bf2:	e9cd 3207 	strd	r3, r2, [sp, #28]
90028bf6:	9b07      	ldr	r3, [sp, #28]
90028bf8:	42a3      	cmp	r3, r4
90028bfa:	f240 809d 	bls.w	90028d38 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
90028bfe:	9b06      	ldr	r3, [sp, #24]
90028c00:	2b00      	cmp	r3, #0
90028c02:	d039      	beq.n	90028c78 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13c>
90028c04:	782b      	ldrb	r3, [r5, #0]
90028c06:	f105 0801 	add.w	r8, r5, #1
90028c0a:	f109 3bff 	add.w	fp, r9, #4294967295
90028c0e:	8822      	ldrh	r2, [r4, #0]
90028c10:	f003 030f 	and.w	r3, r3, #15
90028c14:	9804      	ldr	r0, [sp, #16]
90028c16:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
90028c1a:	9b03      	ldr	r3, [sp, #12]
90028c1c:	9300      	str	r3, [sp, #0]
90028c1e:	463b      	mov	r3, r7
90028c20:	f7ff ff52 	bl	90028ac8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
90028c24:	f824 0b02 	strh.w	r0, [r4], #2
90028c28:	f1bb 0f01 	cmp.w	fp, #1
90028c2c:	46a2      	mov	sl, r4
90028c2e:	f104 0404 	add.w	r4, r4, #4
90028c32:	dd24      	ble.n	90028c7e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x142>
90028c34:	f898 3000 	ldrb.w	r3, [r8]
90028c38:	f1ab 0b02 	sub.w	fp, fp, #2
90028c3c:	f834 2c04 	ldrh.w	r2, [r4, #-4]
90028c40:	091b      	lsrs	r3, r3, #4
90028c42:	9804      	ldr	r0, [sp, #16]
90028c44:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
90028c48:	9b03      	ldr	r3, [sp, #12]
90028c4a:	9300      	str	r3, [sp, #0]
90028c4c:	463b      	mov	r3, r7
90028c4e:	f7ff ff3b 	bl	90028ac8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
90028c52:	f824 0c04 	strh.w	r0, [r4, #-4]
90028c56:	f818 3b01 	ldrb.w	r3, [r8], #1
90028c5a:	f834 2c02 	ldrh.w	r2, [r4, #-2]
90028c5e:	f003 030f 	and.w	r3, r3, #15
90028c62:	9804      	ldr	r0, [sp, #16]
90028c64:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
90028c68:	9b03      	ldr	r3, [sp, #12]
90028c6a:	9300      	str	r3, [sp, #0]
90028c6c:	463b      	mov	r3, r7
90028c6e:	f7ff ff2b 	bl	90028ac8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
90028c72:	f824 0c02 	strh.w	r0, [r4, #-2]
90028c76:	e7d7      	b.n	90028c28 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
90028c78:	46a8      	mov	r8, r5
90028c7a:	46cb      	mov	fp, r9
90028c7c:	e7d4      	b.n	90028c28 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
90028c7e:	d10e      	bne.n	90028c9e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x162>
90028c80:	f898 3000 	ldrb.w	r3, [r8]
90028c84:	f8ba 2000 	ldrh.w	r2, [sl]
90028c88:	091b      	lsrs	r3, r3, #4
90028c8a:	9804      	ldr	r0, [sp, #16]
90028c8c:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
90028c90:	9b03      	ldr	r3, [sp, #12]
90028c92:	9300      	str	r3, [sp, #0]
90028c94:	463b      	mov	r3, r7
90028c96:	f7ff ff17 	bl	90028ac8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
90028c9a:	f82a 0b02 	strh.w	r0, [sl], #2
90028c9e:	9b08      	ldr	r3, [sp, #32]
90028ca0:	9a05      	ldr	r2, [sp, #20]
90028ca2:	881c      	ldrh	r4, [r3, #0]
90028ca4:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
90028ca8:	eba4 0409 	sub.w	r4, r4, r9
90028cac:	4413      	add	r3, r2
90028cae:	9a09      	ldr	r2, [sp, #36]	; 0x24
90028cb0:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
90028cb4:	fb93 f3f2 	sdiv	r3, r3, r2
90028cb8:	441d      	add	r5, r3
90028cba:	e79c      	b.n	90028bf6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xba>
90028cbc:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
90028cc0:	45a3      	cmp	fp, r4
90028cc2:	d939      	bls.n	90028d38 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
90028cc4:	9b06      	ldr	r3, [sp, #24]
90028cc6:	b1fb      	cbz	r3, 90028d08 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
90028cc8:	782b      	ldrb	r3, [r5, #0]
90028cca:	1c6a      	adds	r2, r5, #1
90028ccc:	f109 30ff 	add.w	r0, r9, #4294967295
90028cd0:	3402      	adds	r4, #2
90028cd2:	f003 030f 	and.w	r3, r3, #15
90028cd6:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90028cda:	f824 3c02 	strh.w	r3, [r4, #-2]
90028cde:	2801      	cmp	r0, #1
90028ce0:	4623      	mov	r3, r4
90028ce2:	f104 0404 	add.w	r4, r4, #4
90028ce6:	dd12      	ble.n	90028d0e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
90028ce8:	7813      	ldrb	r3, [r2, #0]
90028cea:	3802      	subs	r0, #2
90028cec:	091b      	lsrs	r3, r3, #4
90028cee:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90028cf2:	f824 3c04 	strh.w	r3, [r4, #-4]
90028cf6:	f812 3b01 	ldrb.w	r3, [r2], #1
90028cfa:	f003 030f 	and.w	r3, r3, #15
90028cfe:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90028d02:	f824 3c02 	strh.w	r3, [r4, #-2]
90028d06:	e7ea      	b.n	90028cde <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
90028d08:	462a      	mov	r2, r5
90028d0a:	4648      	mov	r0, r9
90028d0c:	e7e7      	b.n	90028cde <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
90028d0e:	d106      	bne.n	90028d1e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
90028d10:	7812      	ldrb	r2, [r2, #0]
90028d12:	3302      	adds	r3, #2
90028d14:	0912      	lsrs	r2, r2, #4
90028d16:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
90028d1a:	f823 2c02 	strh.w	r2, [r3, #-2]
90028d1e:	880c      	ldrh	r4, [r1, #0]
90028d20:	9a05      	ldr	r2, [sp, #20]
90028d22:	eba4 0409 	sub.w	r4, r4, r9
90028d26:	eb03 0444 	add.w	r4, r3, r4, lsl #1
90028d2a:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
90028d2e:	4413      	add	r3, r2
90028d30:	fb93 f3f8 	sdiv	r3, r3, r8
90028d34:	441d      	add	r5, r3
90028d36:	e7c3      	b.n	90028cc0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x184>
90028d38:	4b03      	ldr	r3, [pc, #12]	; (90028d48 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
90028d3a:	6818      	ldr	r0, [r3, #0]
90028d3c:	6803      	ldr	r3, [r0, #0]
90028d3e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90028d40:	4798      	blx	r3
90028d42:	b00f      	add	sp, #60	; 0x3c
90028d44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90028d48:	240236cc 	.word	0x240236cc
90028d4c:	240236c6 	.word	0x240236c6

90028d50 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
90028d50:	b5f0      	push	{r4, r5, r6, r7, lr}
90028d52:	f89d 5014 	ldrb.w	r5, [sp, #20]
90028d56:	0a0f      	lsrs	r7, r1, #8
90028d58:	2dff      	cmp	r5, #255	; 0xff
90028d5a:	d10c      	bne.n	90028d76 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
90028d5c:	2bff      	cmp	r3, #255	; 0xff
90028d5e:	d10a      	bne.n	90028d76 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
90028d60:	0948      	lsrs	r0, r1, #5
90028d62:	4b25      	ldr	r3, [pc, #148]	; (90028df8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
90028d64:	f3c1 01c4 	ubfx	r1, r1, #3, #5
90028d68:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90028d6c:	403b      	ands	r3, r7
90028d6e:	4318      	orrs	r0, r3
90028d70:	4308      	orrs	r0, r1
90028d72:	b280      	uxth	r0, r0
90028d74:	bdf0      	pop	{r4, r5, r6, r7, pc}
90028d76:	fb15 f503 	smulbb	r5, r5, r3
90028d7a:	1214      	asrs	r4, r2, #8
90028d7c:	10d6      	asrs	r6, r2, #3
90028d7e:	b2ab      	uxth	r3, r5
90028d80:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
90028d84:	00d0      	lsls	r0, r2, #3
90028d86:	f3c1 4207 	ubfx	r2, r1, #16, #8
90028d8a:	1c5d      	adds	r5, r3, #1
90028d8c:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
90028d90:	b2c0      	uxtb	r0, r0
90028d92:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
90028d96:	eb05 2513 	add.w	r5, r5, r3, lsr #8
90028d9a:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
90028d9e:	f3c5 2507 	ubfx	r5, r5, #8, #8
90028da2:	fa1f fc85 	uxth.w	ip, r5
90028da6:	43ed      	mvns	r5, r5
90028da8:	fb12 f20c 	smulbb	r2, r2, ip
90028dac:	b2eb      	uxtb	r3, r5
90028dae:	b2fd      	uxtb	r5, r7
90028db0:	fb04 2403 	mla	r4, r4, r3, r2
90028db4:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
90028db8:	fb15 f50c 	smulbb	r5, r5, ip
90028dbc:	b2c8      	uxtb	r0, r1
90028dbe:	b2a4      	uxth	r4, r4
90028dc0:	fb10 f00c 	smulbb	r0, r0, ip
90028dc4:	fb06 5503 	mla	r5, r6, r3, r5
90028dc8:	fb02 0003 	mla	r0, r2, r3, r0
90028dcc:	b2ad      	uxth	r5, r5
90028dce:	b283      	uxth	r3, r0
90028dd0:	1c60      	adds	r0, r4, #1
90028dd2:	eb00 2414 	add.w	r4, r0, r4, lsr #8
90028dd6:	1c58      	adds	r0, r3, #1
90028dd8:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90028ddc:	1c6b      	adds	r3, r5, #1
90028dde:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
90028de2:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90028de6:	f3c0 20c4 	ubfx	r0, r0, #11, #5
90028dea:	096d      	lsrs	r5, r5, #5
90028dec:	4320      	orrs	r0, r4
90028dee:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90028df2:	4328      	orrs	r0, r5
90028df4:	e7be      	b.n	90028d74 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x24>
90028df6:	bf00      	nop
90028df8:	00fff800 	.word	0x00fff800

90028dfc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
90028dfc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90028e00:	461c      	mov	r4, r3
90028e02:	b08d      	sub	sp, #52	; 0x34
90028e04:	460d      	mov	r5, r1
90028e06:	4616      	mov	r6, r2
90028e08:	9b16      	ldr	r3, [sp, #88]	; 0x58
90028e0a:	4680      	mov	r8, r0
90028e0c:	6861      	ldr	r1, [r4, #4]
90028e0e:	aa08      	add	r2, sp, #32
90028e10:	6820      	ldr	r0, [r4, #0]
90028e12:	f04f 0a02 	mov.w	sl, #2
90028e16:	f89d 905c 	ldrb.w	r9, [sp, #92]	; 0x5c
90028e1a:	3604      	adds	r6, #4
90028e1c:	c203      	stmia	r2!, {r0, r1}
90028e1e:	6818      	ldr	r0, [r3, #0]
90028e20:	aa0a      	add	r2, sp, #40	; 0x28
90028e22:	6859      	ldr	r1, [r3, #4]
90028e24:	c203      	stmia	r2!, {r0, r1}
90028e26:	a808      	add	r0, sp, #32
90028e28:	f7ef fbf6 	bl	90018618 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90028e2c:	4621      	mov	r1, r4
90028e2e:	a80a      	add	r0, sp, #40	; 0x28
90028e30:	f7ef fc36 	bl	900186a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90028e34:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
90028e38:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	; 0x2e
90028e3c:	f002 0301 	and.w	r3, r2, #1
90028e40:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
90028e44:	9303      	str	r3, [sp, #12]
90028e46:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
90028e4a:	f003 0101 	and.w	r1, r3, #1
90028e4e:	9102      	str	r1, [sp, #8]
90028e50:	9802      	ldr	r0, [sp, #8]
90028e52:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
90028e56:	4403      	add	r3, r0
90028e58:	fb01 2303 	mla	r3, r1, r3, r2
90028e5c:	fb93 f3fa 	sdiv	r3, r3, sl
90028e60:	441d      	add	r5, r3
90028e62:	f8bd 3020 	ldrh.w	r3, [sp, #32]
90028e66:	441a      	add	r2, r3
90028e68:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
90028e6c:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
90028e70:	4419      	add	r1, r3
90028e72:	4a3e      	ldr	r2, [pc, #248]	; (90028f6c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
90028e74:	f8ad 102a 	strh.w	r1, [sp, #42]	; 0x2a
90028e78:	6810      	ldr	r0, [r2, #0]
90028e7a:	9205      	str	r2, [sp, #20]
90028e7c:	6803      	ldr	r3, [r0, #0]
90028e7e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90028e80:	4798      	blx	r3
90028e82:	4b3b      	ldr	r3, [pc, #236]	; (90028f70 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
90028e84:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	; 0x2a
90028e88:	8819      	ldrh	r1, [r3, #0]
90028e8a:	f9bd c028 	ldrsh.w	ip, [sp, #40]	; 0x28
90028e8e:	434f      	muls	r7, r1
90028e90:	fb01 c404 	mla	r4, r1, r4, ip
90028e94:	eb00 0444 	add.w	r4, r0, r4, lsl #1
90028e98:	eb04 0247 	add.w	r2, r4, r7, lsl #1
90028e9c:	e9cd 3a06 	strd	r3, sl, [sp, #24]
90028ea0:	9204      	str	r2, [sp, #16]
90028ea2:	9b04      	ldr	r3, [sp, #16]
90028ea4:	429c      	cmp	r4, r3
90028ea6:	d258      	bcs.n	90028f5a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
90028ea8:	9b03      	ldr	r3, [sp, #12]
90028eaa:	2b00      	cmp	r3, #0
90028eac:	d034      	beq.n	90028f18 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
90028eae:	782b      	ldrb	r3, [r5, #0]
90028eb0:	1c6f      	adds	r7, r5, #1
90028eb2:	f003 030f 	and.w	r3, r3, #15
90028eb6:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
90028eba:	0e0b      	lsrs	r3, r1, #24
90028ebc:	d006      	beq.n	90028ecc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
90028ebe:	8822      	ldrh	r2, [r4, #0]
90028ec0:	4640      	mov	r0, r8
90028ec2:	9300      	str	r3, [sp, #0]
90028ec4:	464b      	mov	r3, r9
90028ec6:	f7ff ff43 	bl	90028d50 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
90028eca:	8020      	strh	r0, [r4, #0]
90028ecc:	3402      	adds	r4, #2
90028ece:	f10b 3aff 	add.w	sl, fp, #4294967295
90028ed2:	f1ba 0f01 	cmp.w	sl, #1
90028ed6:	dd22      	ble.n	90028f1e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
90028ed8:	783b      	ldrb	r3, [r7, #0]
90028eda:	091b      	lsrs	r3, r3, #4
90028edc:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
90028ee0:	0e0b      	lsrs	r3, r1, #24
90028ee2:	d006      	beq.n	90028ef2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
90028ee4:	8822      	ldrh	r2, [r4, #0]
90028ee6:	4640      	mov	r0, r8
90028ee8:	9300      	str	r3, [sp, #0]
90028eea:	464b      	mov	r3, r9
90028eec:	f7ff ff30 	bl	90028d50 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
90028ef0:	8020      	strh	r0, [r4, #0]
90028ef2:	f817 3b01 	ldrb.w	r3, [r7], #1
90028ef6:	f003 030f 	and.w	r3, r3, #15
90028efa:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
90028efe:	0e0b      	lsrs	r3, r1, #24
90028f00:	d006      	beq.n	90028f10 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
90028f02:	8862      	ldrh	r2, [r4, #2]
90028f04:	4640      	mov	r0, r8
90028f06:	9300      	str	r3, [sp, #0]
90028f08:	464b      	mov	r3, r9
90028f0a:	f7ff ff21 	bl	90028d50 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
90028f0e:	8060      	strh	r0, [r4, #2]
90028f10:	3404      	adds	r4, #4
90028f12:	f1aa 0a02 	sub.w	sl, sl, #2
90028f16:	e7dc      	b.n	90028ed2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
90028f18:	462f      	mov	r7, r5
90028f1a:	46da      	mov	sl, fp
90028f1c:	e7d9      	b.n	90028ed2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
90028f1e:	d10d      	bne.n	90028f3c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
90028f20:	783b      	ldrb	r3, [r7, #0]
90028f22:	091b      	lsrs	r3, r3, #4
90028f24:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
90028f28:	0e0b      	lsrs	r3, r1, #24
90028f2a:	d006      	beq.n	90028f3a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
90028f2c:	8822      	ldrh	r2, [r4, #0]
90028f2e:	4640      	mov	r0, r8
90028f30:	9300      	str	r3, [sp, #0]
90028f32:	464b      	mov	r3, r9
90028f34:	f7ff ff0c 	bl	90028d50 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
90028f38:	8020      	strh	r0, [r4, #0]
90028f3a:	3402      	adds	r4, #2
90028f3c:	9b06      	ldr	r3, [sp, #24]
90028f3e:	9a02      	ldr	r2, [sp, #8]
90028f40:	881b      	ldrh	r3, [r3, #0]
90028f42:	eba3 030b 	sub.w	r3, r3, fp
90028f46:	eb04 0443 	add.w	r4, r4, r3, lsl #1
90028f4a:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
90028f4e:	4413      	add	r3, r2
90028f50:	9a07      	ldr	r2, [sp, #28]
90028f52:	fb93 f3f2 	sdiv	r3, r3, r2
90028f56:	441d      	add	r5, r3
90028f58:	e7a3      	b.n	90028ea2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
90028f5a:	9b05      	ldr	r3, [sp, #20]
90028f5c:	6818      	ldr	r0, [r3, #0]
90028f5e:	6803      	ldr	r3, [r0, #0]
90028f60:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90028f62:	4798      	blx	r3
90028f64:	b00d      	add	sp, #52	; 0x34
90028f66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90028f6a:	bf00      	nop
90028f6c:	240236cc 	.word	0x240236cc
90028f70:	240236c6 	.word	0x240236c6

90028f74 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
90028f74:	b570      	push	{r4, r5, r6, lr}
90028f76:	1214      	asrs	r4, r2, #8
90028f78:	788d      	ldrb	r5, [r1, #2]
90028f7a:	f89d 6010 	ldrb.w	r6, [sp, #16]
90028f7e:	10d0      	asrs	r0, r2, #3
90028f80:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
90028f84:	00d2      	lsls	r2, r2, #3
90028f86:	fb15 f503 	smulbb	r5, r5, r3
90028f8a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
90028f8e:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
90028f92:	b2d2      	uxtb	r2, r2
90028f94:	fb04 5506 	mla	r5, r4, r6, r5
90028f98:	784c      	ldrb	r4, [r1, #1]
90028f9a:	7809      	ldrb	r1, [r1, #0]
90028f9c:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
90028fa0:	fb14 f403 	smulbb	r4, r4, r3
90028fa4:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
90028fa8:	fb11 f303 	smulbb	r3, r1, r3
90028fac:	b2ad      	uxth	r5, r5
90028fae:	fb00 4406 	mla	r4, r0, r6, r4
90028fb2:	fb02 3306 	mla	r3, r2, r6, r3
90028fb6:	1c68      	adds	r0, r5, #1
90028fb8:	b2a4      	uxth	r4, r4
90028fba:	b29b      	uxth	r3, r3
90028fbc:	eb00 2515 	add.w	r5, r0, r5, lsr #8
90028fc0:	1c62      	adds	r2, r4, #1
90028fc2:	1c58      	adds	r0, r3, #1
90028fc4:	eb02 2414 	add.w	r4, r2, r4, lsr #8
90028fc8:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
90028fcc:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90028fd0:	0964      	lsrs	r4, r4, #5
90028fd2:	f3c0 20c4 	ubfx	r0, r0, #11, #5
90028fd6:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
90028fda:	4328      	orrs	r0, r5
90028fdc:	4320      	orrs	r0, r4
90028fde:	bd70      	pop	{r4, r5, r6, pc}

90028fe0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
90028fe0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90028fe4:	b08f      	sub	sp, #60	; 0x3c
90028fe6:	461c      	mov	r4, r3
90028fe8:	4682      	mov	sl, r0
90028fea:	460e      	mov	r6, r1
90028fec:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
90028ff0:	4615      	mov	r5, r2
90028ff2:	9b18      	ldr	r3, [sp, #96]	; 0x60
90028ff4:	2f00      	cmp	r7, #0
90028ff6:	f000 8141 	beq.w	9002927c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29c>
90028ffa:	6820      	ldr	r0, [r4, #0]
90028ffc:	aa0a      	add	r2, sp, #40	; 0x28
90028ffe:	6861      	ldr	r1, [r4, #4]
90029000:	f04f 0802 	mov.w	r8, #2
90029004:	3504      	adds	r5, #4
90029006:	c203      	stmia	r2!, {r0, r1}
90029008:	6818      	ldr	r0, [r3, #0]
9002900a:	aa0c      	add	r2, sp, #48	; 0x30
9002900c:	6859      	ldr	r1, [r3, #4]
9002900e:	c203      	stmia	r2!, {r0, r1}
90029010:	a80a      	add	r0, sp, #40	; 0x28
90029012:	f7ef fb01 	bl	90018618 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90029016:	4621      	mov	r1, r4
90029018:	a80c      	add	r0, sp, #48	; 0x30
9002901a:	f7ef fb41 	bl	900186a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9002901e:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
90029022:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
90029026:	f002 0301 	and.w	r3, r2, #1
9002902a:	9306      	str	r3, [sp, #24]
9002902c:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
90029030:	f003 0101 	and.w	r1, r3, #1
90029034:	9105      	str	r1, [sp, #20]
90029036:	9805      	ldr	r0, [sp, #20]
90029038:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
9002903c:	4403      	add	r3, r0
9002903e:	fb01 2303 	mla	r3, r1, r3, r2
90029042:	fb93 f3f8 	sdiv	r3, r3, r8
90029046:	441e      	add	r6, r3
90029048:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
9002904c:	441a      	add	r2, r3
9002904e:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
90029052:	4419      	add	r1, r3
90029054:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
90029058:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
9002905c:	9303      	str	r3, [sp, #12]
9002905e:	4b89      	ldr	r3, [pc, #548]	; (90029284 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
90029060:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
90029064:	6818      	ldr	r0, [r3, #0]
90029066:	6803      	ldr	r3, [r0, #0]
90029068:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9002906a:	4798      	blx	r3
9002906c:	4a86      	ldr	r2, [pc, #536]	; (90029288 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
9002906e:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
90029072:	2fff      	cmp	r7, #255	; 0xff
90029074:	8813      	ldrh	r3, [r2, #0]
90029076:	4694      	mov	ip, r2
90029078:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	; 0x30
9002907c:	fb03 9404 	mla	r4, r3, r4, r9
90029080:	fb03 f30b 	mul.w	r3, r3, fp
90029084:	eb00 0444 	add.w	r4, r0, r4, lsl #1
90029088:	d071      	beq.n	9002916e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18e>
9002908a:	43f9      	mvns	r1, r7
9002908c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90029090:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
90029094:	b2c9      	uxtb	r1, r1
90029096:	e9cd 3207 	strd	r3, r2, [sp, #28]
9002909a:	9104      	str	r1, [sp, #16]
9002909c:	9b07      	ldr	r3, [sp, #28]
9002909e:	42a3      	cmp	r3, r4
900290a0:	f240 80e7 	bls.w	90029272 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
900290a4:	9b06      	ldr	r3, [sp, #24]
900290a6:	2b00      	cmp	r3, #0
900290a8:	d03d      	beq.n	90029126 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x146>
900290aa:	7831      	ldrb	r1, [r6, #0]
900290ac:	4650      	mov	r0, sl
900290ae:	9b04      	ldr	r3, [sp, #16]
900290b0:	f106 0801 	add.w	r8, r6, #1
900290b4:	f001 010f 	and.w	r1, r1, #15
900290b8:	8822      	ldrh	r2, [r4, #0]
900290ba:	9300      	str	r3, [sp, #0]
900290bc:	463b      	mov	r3, r7
900290be:	eb01 0141 	add.w	r1, r1, r1, lsl #1
900290c2:	4429      	add	r1, r5
900290c4:	f7ff ff56 	bl	90028f74 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
900290c8:	9b03      	ldr	r3, [sp, #12]
900290ca:	f824 0b02 	strh.w	r0, [r4], #2
900290ce:	f103 3bff 	add.w	fp, r3, #4294967295
900290d2:	f1bb 0f01 	cmp.w	fp, #1
900290d6:	46a1      	mov	r9, r4
900290d8:	f104 0404 	add.w	r4, r4, #4
900290dc:	dd27      	ble.n	9002912e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14e>
900290de:	f898 1000 	ldrb.w	r1, [r8]
900290e2:	4650      	mov	r0, sl
900290e4:	9b04      	ldr	r3, [sp, #16]
900290e6:	f1ab 0b02 	sub.w	fp, fp, #2
900290ea:	0909      	lsrs	r1, r1, #4
900290ec:	f834 2c04 	ldrh.w	r2, [r4, #-4]
900290f0:	9300      	str	r3, [sp, #0]
900290f2:	463b      	mov	r3, r7
900290f4:	eb01 0141 	add.w	r1, r1, r1, lsl #1
900290f8:	4429      	add	r1, r5
900290fa:	f7ff ff3b 	bl	90028f74 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
900290fe:	f824 0c04 	strh.w	r0, [r4, #-4]
90029102:	f818 1b01 	ldrb.w	r1, [r8], #1
90029106:	4650      	mov	r0, sl
90029108:	9b04      	ldr	r3, [sp, #16]
9002910a:	f001 010f 	and.w	r1, r1, #15
9002910e:	f834 2c02 	ldrh.w	r2, [r4, #-2]
90029112:	9300      	str	r3, [sp, #0]
90029114:	463b      	mov	r3, r7
90029116:	eb01 0141 	add.w	r1, r1, r1, lsl #1
9002911a:	4429      	add	r1, r5
9002911c:	f7ff ff2a 	bl	90028f74 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
90029120:	f824 0c02 	strh.w	r0, [r4, #-2]
90029124:	e7d5      	b.n	900290d2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
90029126:	46b0      	mov	r8, r6
90029128:	f8dd b00c 	ldr.w	fp, [sp, #12]
9002912c:	e7d1      	b.n	900290d2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
9002912e:	d10f      	bne.n	90029150 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x170>
90029130:	f898 1000 	ldrb.w	r1, [r8]
90029134:	4650      	mov	r0, sl
90029136:	9b04      	ldr	r3, [sp, #16]
90029138:	0909      	lsrs	r1, r1, #4
9002913a:	f8b9 2000 	ldrh.w	r2, [r9]
9002913e:	9300      	str	r3, [sp, #0]
90029140:	463b      	mov	r3, r7
90029142:	eb01 0141 	add.w	r1, r1, r1, lsl #1
90029146:	4429      	add	r1, r5
90029148:	f7ff ff14 	bl	90028f74 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
9002914c:	f829 0b02 	strh.w	r0, [r9], #2
90029150:	9b08      	ldr	r3, [sp, #32]
90029152:	9a05      	ldr	r2, [sp, #20]
90029154:	881c      	ldrh	r4, [r3, #0]
90029156:	9b03      	ldr	r3, [sp, #12]
90029158:	1ae4      	subs	r4, r4, r3
9002915a:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
9002915e:	4413      	add	r3, r2
90029160:	9a09      	ldr	r2, [sp, #36]	; 0x24
90029162:	eb09 0444 	add.w	r4, r9, r4, lsl #1
90029166:	fb93 f3f2 	sdiv	r3, r3, r2
9002916a:	441e      	add	r6, r3
9002916c:	e796      	b.n	9002909c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbc>
9002916e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90029172:	4f46      	ldr	r7, [pc, #280]	; (9002928c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
90029174:	42a3      	cmp	r3, r4
90029176:	d97c      	bls.n	90029272 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
90029178:	9a06      	ldr	r2, [sp, #24]
9002917a:	2a00      	cmp	r2, #0
9002917c:	d054      	beq.n	90029228 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x248>
9002917e:	7830      	ldrb	r0, [r6, #0]
90029180:	1c71      	adds	r1, r6, #1
90029182:	f000 000f 	and.w	r0, r0, #15
90029186:	eb00 0040 	add.w	r0, r0, r0, lsl #1
9002918a:	eb05 0e00 	add.w	lr, r5, r0
9002918e:	5c28      	ldrb	r0, [r5, r0]
90029190:	f89e 2002 	ldrb.w	r2, [lr, #2]
90029194:	f89e e001 	ldrb.w	lr, [lr, #1]
90029198:	ea07 2202 	and.w	r2, r7, r2, lsl #8
9002919c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
900291a0:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
900291a4:	ea42 020e 	orr.w	r2, r2, lr
900291a8:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
900291ac:	f824 2b02 	strh.w	r2, [r4], #2
900291b0:	9a03      	ldr	r2, [sp, #12]
900291b2:	f102 3eff 	add.w	lr, r2, #4294967295
900291b6:	f1be 0f01 	cmp.w	lr, #1
900291ba:	4620      	mov	r0, r4
900291bc:	f104 0404 	add.w	r4, r4, #4
900291c0:	dd36      	ble.n	90029230 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x250>
900291c2:	7808      	ldrb	r0, [r1, #0]
900291c4:	f1ae 0e02 	sub.w	lr, lr, #2
900291c8:	0900      	lsrs	r0, r0, #4
900291ca:	eb00 0040 	add.w	r0, r0, r0, lsl #1
900291ce:	eb05 0a00 	add.w	sl, r5, r0
900291d2:	f89a 2001 	ldrb.w	r2, [sl, #1]
900291d6:	f89a 9002 	ldrb.w	r9, [sl, #2]
900291da:	00d2      	lsls	r2, r2, #3
900291dc:	ea07 2909 	and.w	r9, r7, r9, lsl #8
900291e0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
900291e4:	ea49 0202 	orr.w	r2, r9, r2
900291e8:	f815 9000 	ldrb.w	r9, [r5, r0]
900291ec:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
900291f0:	f824 2c04 	strh.w	r2, [r4, #-4]
900291f4:	f811 0b01 	ldrb.w	r0, [r1], #1
900291f8:	f000 000f 	and.w	r0, r0, #15
900291fc:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90029200:	eb05 0a00 	add.w	sl, r5, r0
90029204:	f89a 2001 	ldrb.w	r2, [sl, #1]
90029208:	f89a 9002 	ldrb.w	r9, [sl, #2]
9002920c:	00d2      	lsls	r2, r2, #3
9002920e:	ea07 2909 	and.w	r9, r7, r9, lsl #8
90029212:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90029216:	ea49 0202 	orr.w	r2, r9, r2
9002921a:	f815 9000 	ldrb.w	r9, [r5, r0]
9002921e:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
90029222:	f824 2c02 	strh.w	r2, [r4, #-2]
90029226:	e7c6      	b.n	900291b6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
90029228:	4631      	mov	r1, r6
9002922a:	f8dd e00c 	ldr.w	lr, [sp, #12]
9002922e:	e7c2      	b.n	900291b6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
90029230:	d111      	bne.n	90029256 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
90029232:	7809      	ldrb	r1, [r1, #0]
90029234:	0909      	lsrs	r1, r1, #4
90029236:	eb01 0141 	add.w	r1, r1, r1, lsl #1
9002923a:	186c      	adds	r4, r5, r1
9002923c:	5c69      	ldrb	r1, [r5, r1]
9002923e:	78a2      	ldrb	r2, [r4, #2]
90029240:	7864      	ldrb	r4, [r4, #1]
90029242:	ea07 2202 	and.w	r2, r7, r2, lsl #8
90029246:	00e4      	lsls	r4, r4, #3
90029248:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
9002924c:	4322      	orrs	r2, r4
9002924e:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
90029252:	f820 2b02 	strh.w	r2, [r0], #2
90029256:	9a03      	ldr	r2, [sp, #12]
90029258:	f8bc 4000 	ldrh.w	r4, [ip]
9002925c:	9905      	ldr	r1, [sp, #20]
9002925e:	1aa4      	subs	r4, r4, r2
90029260:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
90029264:	440a      	add	r2, r1
90029266:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9002926a:	fb92 f2f8 	sdiv	r2, r2, r8
9002926e:	4416      	add	r6, r2
90029270:	e780      	b.n	90029174 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x194>
90029272:	4b04      	ldr	r3, [pc, #16]	; (90029284 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
90029274:	6818      	ldr	r0, [r3, #0]
90029276:	6803      	ldr	r3, [r0, #0]
90029278:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9002927a:	4798      	blx	r3
9002927c:	b00f      	add	sp, #60	; 0x3c
9002927e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90029282:	bf00      	nop
90029284:	240236cc 	.word	0x240236cc
90029288:	240236c6 	.word	0x240236c6
9002928c:	fffff800 	.word	0xfffff800

90029290 <CRC_Lock>:
90029290:	4a20      	ldr	r2, [pc, #128]	; (90029314 <CRC_Lock+0x84>)
90029292:	b530      	push	{r4, r5, lr}
90029294:	6813      	ldr	r3, [r2, #0]
90029296:	f64f 74f0 	movw	r4, #65520	; 0xfff0
9002929a:	f24c 2540 	movw	r5, #49728	; 0xc240
9002929e:	f023 0301 	bic.w	r3, r3, #1
900292a2:	6013      	str	r3, [r2, #0]
900292a4:	4b1c      	ldr	r3, [pc, #112]	; (90029318 <CRC_Lock+0x88>)
900292a6:	681a      	ldr	r2, [r3, #0]
900292a8:	4022      	ands	r2, r4
900292aa:	42aa      	cmp	r2, r5
900292ac:	d005      	beq.n	900292ba <CRC_Lock+0x2a>
900292ae:	681b      	ldr	r3, [r3, #0]
900292b0:	f24c 2270 	movw	r2, #49776	; 0xc270
900292b4:	4023      	ands	r3, r4
900292b6:	4293      	cmp	r3, r2
900292b8:	d124      	bne.n	90029304 <CRC_Lock+0x74>
900292ba:	4b18      	ldr	r3, [pc, #96]	; (9002931c <CRC_Lock+0x8c>)
900292bc:	681b      	ldr	r3, [r3, #0]
900292be:	bb0b      	cbnz	r3, 90029304 <CRC_Lock+0x74>
900292c0:	4b17      	ldr	r3, [pc, #92]	; (90029320 <CRC_Lock+0x90>)
900292c2:	681a      	ldr	r2, [r3, #0]
900292c4:	f3c2 020b 	ubfx	r2, r2, #0, #12
900292c8:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
900292cc:	d00d      	beq.n	900292ea <CRC_Lock+0x5a>
900292ce:	681a      	ldr	r2, [r3, #0]
900292d0:	f240 4483 	movw	r4, #1155	; 0x483
900292d4:	f3c2 020b 	ubfx	r2, r2, #0, #12
900292d8:	42a2      	cmp	r2, r4
900292da:	d006      	beq.n	900292ea <CRC_Lock+0x5a>
900292dc:	681b      	ldr	r3, [r3, #0]
900292de:	f240 4285 	movw	r2, #1157	; 0x485
900292e2:	f3c3 030b 	ubfx	r3, r3, #0, #12
900292e6:	4293      	cmp	r3, r2
900292e8:	d10c      	bne.n	90029304 <CRC_Lock+0x74>
900292ea:	4b0e      	ldr	r3, [pc, #56]	; (90029324 <CRC_Lock+0x94>)
900292ec:	2201      	movs	r2, #1
900292ee:	601a      	str	r2, [r3, #0]
900292f0:	681a      	ldr	r2, [r3, #0]
900292f2:	2a00      	cmp	r2, #0
900292f4:	d1fc      	bne.n	900292f0 <CRC_Lock+0x60>
900292f6:	4b0c      	ldr	r3, [pc, #48]	; (90029328 <CRC_Lock+0x98>)
900292f8:	6018      	str	r0, [r3, #0]
900292fa:	6818      	ldr	r0, [r3, #0]
900292fc:	1a43      	subs	r3, r0, r1
900292fe:	4258      	negs	r0, r3
90029300:	4158      	adcs	r0, r3
90029302:	bd30      	pop	{r4, r5, pc}
90029304:	4b09      	ldr	r3, [pc, #36]	; (9002932c <CRC_Lock+0x9c>)
90029306:	2201      	movs	r2, #1
90029308:	601a      	str	r2, [r3, #0]
9002930a:	681a      	ldr	r2, [r3, #0]
9002930c:	2a00      	cmp	r2, #0
9002930e:	d1fc      	bne.n	9002930a <CRC_Lock+0x7a>
90029310:	4b07      	ldr	r3, [pc, #28]	; (90029330 <CRC_Lock+0xa0>)
90029312:	e7f1      	b.n	900292f8 <CRC_Lock+0x68>
90029314:	e0002000 	.word	0xe0002000
90029318:	e000ed00 	.word	0xe000ed00
9002931c:	e0042000 	.word	0xe0042000
90029320:	5c001000 	.word	0x5c001000
90029324:	58024c08 	.word	0x58024c08
90029328:	58024c00 	.word	0x58024c00
9002932c:	40023008 	.word	0x40023008
90029330:	40023000 	.word	0x40023000

90029334 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
90029334:	6101      	str	r1, [r0, #16]
90029336:	4770      	bx	lr

90029338 <_ZN8touchgfx8Gestures4tickEv>:
90029338:	7b83      	ldrb	r3, [r0, #14]
9002933a:	b14b      	cbz	r3, 90029350 <_ZN8touchgfx8Gestures4tickEv+0x18>
9002933c:	8903      	ldrh	r3, [r0, #8]
9002933e:	3301      	adds	r3, #1
90029340:	b29b      	uxth	r3, r3
90029342:	2b07      	cmp	r3, #7
90029344:	8103      	strh	r3, [r0, #8]
90029346:	bf81      	itttt	hi
90029348:	2300      	movhi	r3, #0
9002934a:	8143      	strhhi	r3, [r0, #10]
9002934c:	8183      	strhhi	r3, [r0, #12]
9002934e:	7383      	strbhi	r3, [r0, #14]
90029350:	4770      	bx	lr
	...

90029354 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
90029354:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
90029358:	4698      	mov	r8, r3
9002935a:	8883      	ldrh	r3, [r0, #4]
9002935c:	4604      	mov	r4, r0
9002935e:	4617      	mov	r7, r2
90029360:	f8ad 3006 	strh.w	r3, [sp, #6]
90029364:	eba8 0303 	sub.w	r3, r8, r3
90029368:	4a19      	ldr	r2, [pc, #100]	; (900293d0 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
9002936a:	460e      	mov	r6, r1
9002936c:	b21b      	sxth	r3, r3
9002936e:	88c1      	ldrh	r1, [r0, #6]
90029370:	9200      	str	r2, [sp, #0]
90029372:	2000      	movs	r0, #0
90029374:	2b00      	cmp	r3, #0
90029376:	8aa2      	ldrh	r2, [r4, #20]
90029378:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
9002937c:	bfb8      	it	lt
9002937e:	425b      	neglt	r3, r3
90029380:	f88d 0004 	strb.w	r0, [sp, #4]
90029384:	f8ad 1008 	strh.w	r1, [sp, #8]
90029388:	b21b      	sxth	r3, r3
9002938a:	f8ad 800a 	strh.w	r8, [sp, #10]
9002938e:	f8ad 500c 	strh.w	r5, [sp, #12]
90029392:	4293      	cmp	r3, r2
90029394:	dc07      	bgt.n	900293a6 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x52>
90029396:	1a69      	subs	r1, r5, r1
90029398:	b209      	sxth	r1, r1
9002939a:	2900      	cmp	r1, #0
9002939c:	bfb8      	it	lt
9002939e:	4249      	neglt	r1, r1
900293a0:	b209      	sxth	r1, r1
900293a2:	428a      	cmp	r2, r1
900293a4:	da10      	bge.n	900293c8 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x74>
900293a6:	6920      	ldr	r0, [r4, #16]
900293a8:	4669      	mov	r1, sp
900293aa:	eba8 0606 	sub.w	r6, r8, r6
900293ae:	1bef      	subs	r7, r5, r7
900293b0:	6803      	ldr	r3, [r0, #0]
900293b2:	685b      	ldr	r3, [r3, #4]
900293b4:	4798      	blx	r3
900293b6:	2300      	movs	r3, #0
900293b8:	2001      	movs	r0, #1
900293ba:	8166      	strh	r6, [r4, #10]
900293bc:	8123      	strh	r3, [r4, #8]
900293be:	81a7      	strh	r7, [r4, #12]
900293c0:	f8a4 8004 	strh.w	r8, [r4, #4]
900293c4:	80e5      	strh	r5, [r4, #6]
900293c6:	73a0      	strb	r0, [r4, #14]
900293c8:	b004      	add	sp, #16
900293ca:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900293ce:	bf00      	nop
900293d0:	9002e6f8 	.word	0x9002e6f8

900293d4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
900293d4:	b5f0      	push	{r4, r5, r6, r7, lr}
900293d6:	461e      	mov	r6, r3
900293d8:	1e4b      	subs	r3, r1, #1
900293da:	b085      	sub	sp, #20
900293dc:	4604      	mov	r4, r0
900293de:	2b01      	cmp	r3, #1
900293e0:	460d      	mov	r5, r1
900293e2:	4617      	mov	r7, r2
900293e4:	d84b      	bhi.n	9002947e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
900293e6:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
900293ea:	1cd3      	adds	r3, r2, #3
900293ec:	b29b      	uxth	r3, r3
900293ee:	2b06      	cmp	r3, #6
900293f0:	d916      	bls.n	90029420 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
900293f2:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 90029494 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
900293f6:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
900293fa:	f8cd c004 	str.w	ip, [sp, #4]
900293fe:	f04f 0c00 	mov.w	ip, #0
90029402:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
90029406:	6900      	ldr	r0, [r0, #16]
90029408:	f8ad 100c 	strh.w	r1, [sp, #12]
9002940c:	a901      	add	r1, sp, #4
9002940e:	f88d c008 	strb.w	ip, [sp, #8]
90029412:	f8ad 200a 	strh.w	r2, [sp, #10]
90029416:	f8ad 300e 	strh.w	r3, [sp, #14]
9002941a:	6803      	ldr	r3, [r0, #0]
9002941c:	689b      	ldr	r3, [r3, #8]
9002941e:	4798      	blx	r3
90029420:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
90029424:	1cd3      	adds	r3, r2, #3
90029426:	b29b      	uxth	r3, r3
90029428:	2b06      	cmp	r3, #6
9002942a:	d916      	bls.n	9002945a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
9002942c:	f8df c064 	ldr.w	ip, [pc, #100]	; 90029494 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
90029430:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
90029434:	f8cd c004 	str.w	ip, [sp, #4]
90029438:	f04f 0c01 	mov.w	ip, #1
9002943c:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
90029440:	6920      	ldr	r0, [r4, #16]
90029442:	f8ad 100c 	strh.w	r1, [sp, #12]
90029446:	a901      	add	r1, sp, #4
90029448:	f88d c008 	strb.w	ip, [sp, #8]
9002944c:	f8ad 200a 	strh.w	r2, [sp, #10]
90029450:	f8ad 300e 	strh.w	r3, [sp, #14]
90029454:	6803      	ldr	r3, [r0, #0]
90029456:	689b      	ldr	r3, [r3, #8]
90029458:	4798      	blx	r3
9002945a:	4b0d      	ldr	r3, [pc, #52]	; (90029490 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
9002945c:	a901      	add	r1, sp, #4
9002945e:	6920      	ldr	r0, [r4, #16]
90029460:	9301      	str	r3, [sp, #4]
90029462:	2300      	movs	r3, #0
90029464:	f88d 5008 	strb.w	r5, [sp, #8]
90029468:	f8ad 700a 	strh.w	r7, [sp, #10]
9002946c:	f8ad 600c 	strh.w	r6, [sp, #12]
90029470:	f8ad 300e 	strh.w	r3, [sp, #14]
90029474:	6803      	ldr	r3, [r0, #0]
90029476:	681b      	ldr	r3, [r3, #0]
90029478:	4798      	blx	r3
9002947a:	b005      	add	sp, #20
9002947c:	bdf0      	pop	{r4, r5, r6, r7, pc}
9002947e:	2900      	cmp	r1, #0
90029480:	d1eb      	bne.n	9002945a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
90029482:	80a2      	strh	r2, [r4, #4]
90029484:	80c6      	strh	r6, [r0, #6]
90029486:	60a1      	str	r1, [r4, #8]
90029488:	81a1      	strh	r1, [r4, #12]
9002948a:	73a1      	strb	r1, [r4, #14]
9002948c:	e7e5      	b.n	9002945a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
9002948e:	bf00      	nop
90029490:	9002e6e4 	.word	0x9002e6e4
90029494:	9002e70c 	.word	0x9002e70c

90029498 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>:
90029498:	10c9      	asrs	r1, r1, #3
9002949a:	2900      	cmp	r1, #0
9002949c:	bfb8      	it	lt
9002949e:	4249      	neglt	r1, r1
900294a0:	2801      	cmp	r0, #1
900294a2:	d108      	bne.n	900294b6 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
900294a4:	f3c1 0008 	ubfx	r0, r1, #0, #9
900294a8:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
900294ac:	4601      	mov	r1, r0
900294ae:	dd02      	ble.n	900294b6 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
900294b0:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
900294b4:	4770      	bx	lr
900294b6:	29ff      	cmp	r1, #255	; 0xff
900294b8:	bfa8      	it	ge
900294ba:	21ff      	movge	r1, #255	; 0xff
900294bc:	4608      	mov	r0, r1
900294be:	4770      	bx	lr

900294c0 <_ZN8touchgfx10Rasterizer6lineToEii>:
900294c0:	b410      	push	{r4}
900294c2:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
900294c6:	429c      	cmp	r4, r3
900294c8:	d803      	bhi.n	900294d2 <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
900294ca:	f85d 4b04 	ldr.w	r4, [sp], #4
900294ce:	f7ed bb99 	b.w	90016c04 <_ZN8touchgfx7Outline6lineToEii>
900294d2:	f85d 4b04 	ldr.w	r4, [sp], #4
900294d6:	4770      	bx	lr

900294d8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
900294d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900294dc:	b08b      	sub	sp, #44	; 0x2c
900294de:	4606      	mov	r6, r0
900294e0:	468a      	mov	sl, r1
900294e2:	e9cd 2306 	strd	r2, r3, [sp, #24]
900294e6:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
900294ea:	9308      	str	r3, [sp, #32]
900294ec:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
900294f0:	9309      	str	r3, [sp, #36]	; 0x24
900294f2:	f7ed fcf2 	bl	90016eda <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
900294f6:	68b5      	ldr	r5, [r6, #8]
900294f8:	4604      	mov	r4, r0
900294fa:	2d00      	cmp	r5, #0
900294fc:	d044      	beq.n	90029588 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
900294fe:	6873      	ldr	r3, [r6, #4]
90029500:	42ab      	cmp	r3, r5
90029502:	d33d      	bcc.n	90029580 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
90029504:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
90029508:	f04f 0800 	mov.w	r8, #0
9002950c:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	; 0x34
90029510:	eb02 0b03 	add.w	fp, r2, r3
90029514:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
90029518:	fb02 1203 	mla	r2, r2, r3, r1
9002951c:	9205      	str	r2, [sp, #20]
9002951e:	1e6a      	subs	r2, r5, #1
90029520:	9204      	str	r2, [sp, #16]
90029522:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
90029526:	f9b4 7000 	ldrsh.w	r7, [r4]
9002952a:	454b      	cmp	r3, r9
9002952c:	463a      	mov	r2, r7
9002952e:	d008      	beq.n	90029542 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
90029530:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	; 0x34
90029534:	eb03 0b09 	add.w	fp, r3, r9
90029538:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
9002953c:	fb03 1309 	mla	r3, r3, r9, r1
90029540:	9305      	str	r3, [sp, #20]
90029542:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
90029546:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
9002954a:	4498      	add	r8, r3
9002954c:	9b04      	ldr	r3, [sp, #16]
9002954e:	3b01      	subs	r3, #1
90029550:	9304      	str	r3, [sp, #16]
90029552:	9b04      	ldr	r3, [sp, #16]
90029554:	3301      	adds	r3, #1
90029556:	d015      	beq.n	90029584 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
90029558:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
9002955c:	42bb      	cmp	r3, r7
9002955e:	d117      	bne.n	90029590 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
90029560:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
90029564:	9b04      	ldr	r3, [sp, #16]
90029566:	4548      	cmp	r0, r9
90029568:	f103 33ff 	add.w	r3, r3, #4294967295
9002956c:	d17d      	bne.n	9002966a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x192>
9002956e:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
90029572:	4401      	add	r1, r0
90029574:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
90029578:	4480      	add	r8, r0
9002957a:	e7e9      	b.n	90029550 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
9002957c:	461f      	mov	r7, r3
9002957e:	e042      	b.n	90029606 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x12e>
90029580:	2000      	movs	r0, #0
90029582:	e002      	b.n	9002958a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
90029584:	2900      	cmp	r1, #0
90029586:	d16d      	bne.n	90029664 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
90029588:	2001      	movs	r0, #1
9002958a:	b00b      	add	sp, #44	; 0x2c
9002958c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90029590:	b379      	cbz	r1, 900295f2 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11a>
90029592:	2f00      	cmp	r7, #0
90029594:	db29      	blt.n	900295ea <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
90029596:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
9002959a:	42bb      	cmp	r3, r7
9002959c:	dd25      	ble.n	900295ea <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
9002959e:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
900295a2:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
900295a6:	f7ff ff77 	bl	90029498 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
900295aa:	9b09      	ldr	r3, [sp, #36]	; 0x24
900295ac:	fb10 f003 	smulbb	r0, r0, r3
900295b0:	b280      	uxth	r0, r0
900295b2:	1c41      	adds	r1, r0, #1
900295b4:	eb01 2110 	add.w	r1, r1, r0, lsr #8
900295b8:	1209      	asrs	r1, r1, #8
900295ba:	f011 0fff 	tst.w	r1, #255	; 0xff
900295be:	d014      	beq.n	900295ea <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
900295c0:	b2c9      	uxtb	r1, r1
900295c2:	9808      	ldr	r0, [sp, #32]
900295c4:	b2ba      	uxth	r2, r7
900295c6:	8e73      	ldrh	r3, [r6, #50]	; 0x32
900295c8:	9102      	str	r1, [sp, #8]
900295ca:	2101      	movs	r1, #1
900295cc:	4413      	add	r3, r2
900295ce:	4402      	add	r2, r0
900295d0:	9101      	str	r1, [sp, #4]
900295d2:	fa0f f18b 	sxth.w	r1, fp
900295d6:	f8da 0000 	ldr.w	r0, [sl]
900295da:	b21b      	sxth	r3, r3
900295dc:	9100      	str	r1, [sp, #0]
900295de:	b212      	sxth	r2, r2
900295e0:	6941      	ldr	r1, [r0, #20]
900295e2:	4650      	mov	r0, sl
900295e4:	460d      	mov	r5, r1
900295e6:	9905      	ldr	r1, [sp, #20]
900295e8:	47a8      	blx	r5
900295ea:	9b04      	ldr	r3, [sp, #16]
900295ec:	1c7a      	adds	r2, r7, #1
900295ee:	3301      	adds	r3, #1
900295f0:	d0ca      	beq.n	90029588 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
900295f2:	f9b4 7000 	ldrsh.w	r7, [r4]
900295f6:	1abb      	subs	r3, r7, r2
900295f8:	2b00      	cmp	r3, #0
900295fa:	dd31      	ble.n	90029660 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
900295fc:	2a00      	cmp	r2, #0
900295fe:	dabd      	bge.n	9002957c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
90029600:	2f00      	cmp	r7, #0
90029602:	dd2d      	ble.n	90029660 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
90029604:	2200      	movs	r2, #0
90029606:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
9002960a:	19d1      	adds	r1, r2, r7
9002960c:	4299      	cmp	r1, r3
9002960e:	db02      	blt.n	90029616 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x13e>
90029610:	1a9f      	subs	r7, r3, r2
90029612:	2f00      	cmp	r7, #0
90029614:	dd24      	ble.n	90029660 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
90029616:	ea4f 1188 	mov.w	r1, r8, lsl #6
9002961a:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
9002961e:	f7ff ff3b 	bl	90029498 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
90029622:	9b09      	ldr	r3, [sp, #36]	; 0x24
90029624:	fb10 f003 	smulbb	r0, r0, r3
90029628:	b280      	uxth	r0, r0
9002962a:	1c41      	adds	r1, r0, #1
9002962c:	eb01 2110 	add.w	r1, r1, r0, lsr #8
90029630:	1209      	asrs	r1, r1, #8
90029632:	f011 0fff 	tst.w	r1, #255	; 0xff
90029636:	d013      	beq.n	90029660 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
90029638:	b292      	uxth	r2, r2
9002963a:	9808      	ldr	r0, [sp, #32]
9002963c:	b2c9      	uxtb	r1, r1
9002963e:	8e73      	ldrh	r3, [r6, #50]	; 0x32
90029640:	b23f      	sxth	r7, r7
90029642:	4413      	add	r3, r2
90029644:	9102      	str	r1, [sp, #8]
90029646:	4402      	add	r2, r0
90029648:	fa0f f18b 	sxth.w	r1, fp
9002964c:	f8da 0000 	ldr.w	r0, [sl]
90029650:	b21b      	sxth	r3, r3
90029652:	9100      	str	r1, [sp, #0]
90029654:	b212      	sxth	r2, r2
90029656:	9701      	str	r7, [sp, #4]
90029658:	9905      	ldr	r1, [sp, #20]
9002965a:	6947      	ldr	r7, [r0, #20]
9002965c:	4650      	mov	r0, sl
9002965e:	47b8      	blx	r7
90029660:	464b      	mov	r3, r9
90029662:	e75e      	b.n	90029522 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
90029664:	2f00      	cmp	r7, #0
90029666:	da96      	bge.n	90029596 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbe>
90029668:	e78e      	b.n	90029588 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
9002966a:	2900      	cmp	r1, #0
9002966c:	d0f8      	beq.n	90029660 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
9002966e:	e790      	b.n	90029592 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xba>

90029670 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>:
90029670:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
90029674:	461e      	mov	r6, r3
90029676:	4b36      	ldr	r3, [pc, #216]	; (90029750 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h+0xe0>)
90029678:	2500      	movs	r5, #0
9002967a:	f100 0814 	add.w	r8, r0, #20
9002967e:	4604      	mov	r4, r0
90029680:	4617      	mov	r7, r2
90029682:	e9c0 3100 	strd	r3, r1, [r0]
90029686:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
9002968a:	8185      	strh	r5, [r0, #12]
9002968c:	8103      	strh	r3, [r0, #8]
9002968e:	f89d 3020 	ldrb.w	r3, [sp, #32]
90029692:	81c5      	strh	r5, [r0, #14]
90029694:	7283      	strb	r3, [r0, #10]
90029696:	8205      	strh	r5, [r0, #16]
90029698:	8245      	strh	r5, [r0, #18]
9002969a:	4640      	mov	r0, r8
9002969c:	f7ec fdf8 	bl	90016290 <_ZN8touchgfx7OutlineC1Ev>
900296a0:	f884 5044 	strb.w	r5, [r4, #68]	; 0x44
900296a4:	f8a4 5046 	strh.w	r5, [r4, #70]	; 0x46
900296a8:	466b      	mov	r3, sp
900296aa:	f8a4 5048 	strh.w	r5, [r4, #72]	; 0x48
900296ae:	f8a4 504a 	strh.w	r5, [r4, #74]	; 0x4a
900296b2:	f884 505c 	strb.w	r5, [r4, #92]	; 0x5c
900296b6:	f884 505d 	strb.w	r5, [r4, #93]	; 0x5d
900296ba:	f8a4 5068 	strh.w	r5, [r4, #104]	; 0x68
900296be:	e9c4 5513 	strd	r5, r5, [r4, #76]	; 0x4c
900296c2:	e9c4 5515 	strd	r5, r5, [r4, #84]	; 0x54
900296c6:	e9c4 5518 	strd	r5, r5, [r4, #96]	; 0x60
900296ca:	e9c4 551b 	strd	r5, r5, [r4, #108]	; 0x6c
900296ce:	6830      	ldr	r0, [r6, #0]
900296d0:	6871      	ldr	r1, [r6, #4]
900296d2:	8872      	ldrh	r2, [r6, #2]
900296d4:	8835      	ldrh	r5, [r6, #0]
900296d6:	c303      	stmia	r3!, {r0, r1}
900296d8:	887b      	ldrh	r3, [r7, #2]
900296da:	f9b6 0004 	ldrsh.w	r0, [r6, #4]
900296de:	4413      	add	r3, r2
900296e0:	883a      	ldrh	r2, [r7, #0]
900296e2:	f9b6 1006 	ldrsh.w	r1, [r6, #6]
900296e6:	442a      	add	r2, r5
900296e8:	81e3      	strh	r3, [r4, #14]
900296ea:	8220      	strh	r0, [r4, #16]
900296ec:	4668      	mov	r0, sp
900296ee:	81a2      	strh	r2, [r4, #12]
900296f0:	8261      	strh	r1, [r4, #18]
900296f2:	4639      	mov	r1, r7
900296f4:	f7ee ffd4 	bl	900186a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
900296f8:	f104 000c 	add.w	r0, r4, #12
900296fc:	f7ee ff8c 	bl	90018618 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90029700:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
90029704:	f8bd 2000 	ldrh.w	r2, [sp]
90029708:	4640      	mov	r0, r8
9002970a:	f8a4 3048 	strh.w	r3, [r4, #72]	; 0x48
9002970e:	f8a4 2046 	strh.w	r2, [r4, #70]	; 0x46
90029712:	f7ec fda1 	bl	90016258 <_ZN8touchgfx7Outline5resetEv>
90029716:	f9bd 3000 	ldrsh.w	r3, [sp]
9002971a:	f9b4 2012 	ldrsh.w	r2, [r4, #18]
9002971e:	4620      	mov	r0, r4
90029720:	015b      	lsls	r3, r3, #5
90029722:	64e3      	str	r3, [r4, #76]	; 0x4c
90029724:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
90029728:	015b      	lsls	r3, r3, #5
9002972a:	6523      	str	r3, [r4, #80]	; 0x50
9002972c:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
90029730:	015b      	lsls	r3, r3, #5
90029732:	6563      	str	r3, [r4, #84]	; 0x54
90029734:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
90029738:	015b      	lsls	r3, r3, #5
9002973a:	65a3      	str	r3, [r4, #88]	; 0x58
9002973c:	f9b4 3010 	ldrsh.w	r3, [r4, #16]
90029740:	f8a4 304a 	strh.w	r3, [r4, #74]	; 0x4a
90029744:	e9c4 320f 	strd	r3, r2, [r4, #60]	; 0x3c
90029748:	b002      	add	sp, #8
9002974a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9002974e:	bf00      	nop
90029750:	9002ea30 	.word	0x9002ea30

90029754 <_ZN8touchgfx6Canvas5closeEv>:
90029754:	b538      	push	{r3, r4, r5, lr}
90029756:	f890 305c 	ldrb.w	r3, [r0, #92]	; 0x5c
9002975a:	4604      	mov	r4, r0
9002975c:	b193      	cbz	r3, 90029784 <_ZN8touchgfx6Canvas5closeEv+0x30>
9002975e:	f890 3068 	ldrb.w	r3, [r0, #104]	; 0x68
90029762:	f890 2069 	ldrb.w	r2, [r0, #105]	; 0x69
90029766:	4213      	tst	r3, r2
90029768:	d10c      	bne.n	90029784 <_ZN8touchgfx6Canvas5closeEv+0x30>
9002976a:	f100 0514 	add.w	r5, r0, #20
9002976e:	b123      	cbz	r3, 9002977a <_ZN8touchgfx6Canvas5closeEv+0x26>
90029770:	e9d0 1218 	ldrd	r1, r2, [r0, #96]	; 0x60
90029774:	4628      	mov	r0, r5
90029776:	f7ff fea3 	bl	900294c0 <_ZN8touchgfx10Rasterizer6lineToEii>
9002977a:	4628      	mov	r0, r5
9002977c:	e9d4 121b 	ldrd	r1, r2, [r4, #108]	; 0x6c
90029780:	f7ff fe9e 	bl	900294c0 <_ZN8touchgfx10Rasterizer6lineToEii>
90029784:	2300      	movs	r3, #0
90029786:	f884 305c 	strb.w	r3, [r4, #92]	; 0x5c
9002978a:	e9d4 0306 	ldrd	r0, r3, [r4, #24]
9002978e:	4298      	cmp	r0, r3
90029790:	bf34      	ite	cc
90029792:	2000      	movcc	r0, #0
90029794:	2001      	movcs	r0, #1
90029796:	bd38      	pop	{r3, r4, r5, pc}

90029798 <_ZN8touchgfx6Canvas6renderEh>:
90029798:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
9002979c:	7a85      	ldrb	r5, [r0, #10]
9002979e:	4604      	mov	r4, r0
900297a0:	4369      	muls	r1, r5
900297a2:	1c4d      	adds	r5, r1, #1
900297a4:	eb05 2511 	add.w	r5, r5, r1, lsr #8
900297a8:	122d      	asrs	r5, r5, #8
900297aa:	f000 8098 	beq.w	900298de <_ZN8touchgfx6Canvas6renderEh+0x146>
900297ae:	f890 305d 	ldrb.w	r3, [r0, #93]	; 0x5d
900297b2:	2b00      	cmp	r3, #0
900297b4:	f000 8093 	beq.w	900298de <_ZN8touchgfx6Canvas6renderEh+0x146>
900297b8:	f7ff ffcc 	bl	90029754 <_ZN8touchgfx6Canvas5closeEv>
900297bc:	4607      	mov	r7, r0
900297be:	2800      	cmp	r0, #0
900297c0:	d045      	beq.n	9002984e <_ZN8touchgfx6Canvas6renderEh+0xb6>
900297c2:	6860      	ldr	r0, [r4, #4]
900297c4:	4e47      	ldr	r6, [pc, #284]	; (900298e4 <_ZN8touchgfx6Canvas6renderEh+0x14c>)
900297c6:	6803      	ldr	r3, [r0, #0]
900297c8:	6837      	ldr	r7, [r6, #0]
900297ca:	689b      	ldr	r3, [r3, #8]
900297cc:	4798      	blx	r3
900297ce:	4601      	mov	r1, r0
900297d0:	4638      	mov	r0, r7
900297d2:	f7eb f8d7 	bl	90014984 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
900297d6:	4607      	mov	r7, r0
900297d8:	f7ea fc98 	bl	9001410c <_ZN8touchgfx3HAL3lcdEv>
900297dc:	6803      	ldr	r3, [r0, #0]
900297de:	6b1b      	ldr	r3, [r3, #48]	; 0x30
900297e0:	4798      	blx	r3
900297e2:	4680      	mov	r8, r0
900297e4:	f7ea fc92 	bl	9001410c <_ZN8touchgfx3HAL3lcdEv>
900297e8:	6803      	ldr	r3, [r0, #0]
900297ea:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900297ec:	4798      	blx	r3
900297ee:	280b      	cmp	r0, #11
900297f0:	d85a      	bhi.n	900298a8 <_ZN8touchgfx6Canvas6renderEh+0x110>
900297f2:	e8df f000 	tbb	[pc, r0]
900297f6:	5b50      	.short	0x5b50
900297f8:	3059066b 	.word	0x3059066b
900297fc:	64646440 	.word	0x64646440
90029800:	6464      	.short	0x6464
90029802:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
90029806:	2208      	movs	r2, #8
90029808:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
9002980c:	fb91 f2f2 	sdiv	r2, r1, r2
90029810:	fb08 2303 	mla	r3, r8, r3, r2
90029814:	441f      	add	r7, r3
90029816:	424b      	negs	r3, r1
90029818:	f001 0107 	and.w	r1, r1, #7
9002981c:	f003 0307 	and.w	r3, r3, #7
90029820:	bf58      	it	pl
90029822:	4259      	negpl	r1, r3
90029824:	b2c9      	uxtb	r1, r1
90029826:	b2ed      	uxtb	r5, r5
90029828:	463a      	mov	r2, r7
9002982a:	fa0f f388 	sxth.w	r3, r8
9002982e:	f104 0014 	add.w	r0, r4, #20
90029832:	e9cd 1500 	strd	r1, r5, [sp]
90029836:	6861      	ldr	r1, [r4, #4]
90029838:	f7ff fe4e 	bl	900294d8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
9002983c:	4607      	mov	r7, r0
9002983e:	6860      	ldr	r0, [r4, #4]
90029840:	6803      	ldr	r3, [r0, #0]
90029842:	691b      	ldr	r3, [r3, #16]
90029844:	4798      	blx	r3
90029846:	6830      	ldr	r0, [r6, #0]
90029848:	6803      	ldr	r3, [r0, #0]
9002984a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9002984c:	4798      	blx	r3
9002984e:	4638      	mov	r0, r7
90029850:	b002      	add	sp, #8
90029852:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90029856:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
9002985a:	2204      	movs	r2, #4
9002985c:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
90029860:	fb91 f2f2 	sdiv	r2, r1, r2
90029864:	fb08 2303 	mla	r3, r8, r3, r2
90029868:	441f      	add	r7, r3
9002986a:	424b      	negs	r3, r1
9002986c:	f001 0103 	and.w	r1, r1, #3
90029870:	f003 0303 	and.w	r3, r3, #3
90029874:	e7d4      	b.n	90029820 <_ZN8touchgfx6Canvas6renderEh+0x88>
90029876:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
9002987a:	2202      	movs	r2, #2
9002987c:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
90029880:	2900      	cmp	r1, #0
90029882:	fb91 f2f2 	sdiv	r2, r1, r2
90029886:	f001 0101 	and.w	r1, r1, #1
9002988a:	fb08 2303 	mla	r3, r8, r3, r2
9002988e:	bfb8      	it	lt
90029890:	4249      	neglt	r1, r1
90029892:	441f      	add	r7, r3
90029894:	e7c6      	b.n	90029824 <_ZN8touchgfx6Canvas6renderEh+0x8c>
90029896:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
9002989a:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
9002989e:	fb08 f303 	mul.w	r3, r8, r3
900298a2:	eb03 0342 	add.w	r3, r3, r2, lsl #1
900298a6:	441f      	add	r7, r3
900298a8:	2100      	movs	r1, #0
900298aa:	e7bc      	b.n	90029826 <_ZN8touchgfx6Canvas6renderEh+0x8e>
900298ac:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
900298b0:	2103      	movs	r1, #3
900298b2:	fb08 f203 	mul.w	r2, r8, r3
900298b6:	89a3      	ldrh	r3, [r4, #12]
900298b8:	fb13 2301 	smlabb	r3, r3, r1, r2
900298bc:	e7f3      	b.n	900298a6 <_ZN8touchgfx6Canvas6renderEh+0x10e>
900298be:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
900298c2:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
900298c6:	fb08 2303 	mla	r3, r8, r3, r2
900298ca:	e7ec      	b.n	900298a6 <_ZN8touchgfx6Canvas6renderEh+0x10e>
900298cc:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
900298d0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
900298d4:	fb08 f303 	mul.w	r3, r8, r3
900298d8:	eb03 0382 	add.w	r3, r3, r2, lsl #2
900298dc:	e7e3      	b.n	900298a6 <_ZN8touchgfx6Canvas6renderEh+0x10e>
900298de:	2701      	movs	r7, #1
900298e0:	e7b5      	b.n	9002984e <_ZN8touchgfx6Canvas6renderEh+0xb6>
900298e2:	bf00      	nop
900298e4:	240236cc 	.word	0x240236cc

900298e8 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
900298e8:	4b06      	ldr	r3, [pc, #24]	; (90029904 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>)
900298ea:	b510      	push	{r4, lr}
900298ec:	781b      	ldrb	r3, [r3, #0]
900298ee:	2b01      	cmp	r3, #1
900298f0:	d107      	bne.n	90029902 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1a>
900298f2:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
900298f6:	680b      	ldr	r3, [r1, #0]
900298f8:	6814      	ldr	r4, [r2, #0]
900298fa:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
900298fe:	6013      	str	r3, [r2, #0]
90029900:	600c      	str	r4, [r1, #0]
90029902:	bd10      	pop	{r4, pc}
90029904:	240236c4 	.word	0x240236c4

90029908 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
90029908:	b513      	push	{r0, r1, r4, lr}
9002990a:	f890 305c 	ldrb.w	r3, [r0, #92]	; 0x5c
9002990e:	4604      	mov	r4, r0
90029910:	e9cd 2100 	strd	r2, r1, [sp]
90029914:	b9a3      	cbnz	r3, 90029940 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
90029916:	466a      	mov	r2, sp
90029918:	a901      	add	r1, sp, #4
9002991a:	4620      	mov	r0, r4
9002991c:	f7ff ffe4 	bl	900298e8 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
90029920:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
90029922:	9901      	ldr	r1, [sp, #4]
90029924:	9a00      	ldr	r2, [sp, #0]
90029926:	1ac9      	subs	r1, r1, r3
90029928:	6d23      	ldr	r3, [r4, #80]	; 0x50
9002992a:	1ad2      	subs	r2, r2, r3
9002992c:	9101      	str	r1, [sp, #4]
9002992e:	2a00      	cmp	r2, #0
90029930:	9200      	str	r2, [sp, #0]
90029932:	da0b      	bge.n	9002994c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
90029934:	2301      	movs	r3, #1
90029936:	2900      	cmp	r1, #0
90029938:	da0e      	bge.n	90029958 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
9002993a:	f043 0304 	orr.w	r3, r3, #4
9002993e:	e013      	b.n	90029968 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
90029940:	f7ff ff08 	bl	90029754 <_ZN8touchgfx6Canvas5closeEv>
90029944:	2800      	cmp	r0, #0
90029946:	d1e6      	bne.n	90029916 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
90029948:	b002      	add	sp, #8
9002994a:	bd10      	pop	{r4, pc}
9002994c:	6da3      	ldr	r3, [r4, #88]	; 0x58
9002994e:	429a      	cmp	r2, r3
90029950:	bfac      	ite	ge
90029952:	2302      	movge	r3, #2
90029954:	2300      	movlt	r3, #0
90029956:	e7ee      	b.n	90029936 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
90029958:	6d60      	ldr	r0, [r4, #84]	; 0x54
9002995a:	4281      	cmp	r1, r0
9002995c:	bfac      	ite	ge
9002995e:	2008      	movge	r0, #8
90029960:	2000      	movlt	r0, #0
90029962:	4318      	orrs	r0, r3
90029964:	b2c3      	uxtb	r3, r0
90029966:	b158      	cbz	r0, 90029980 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
90029968:	2200      	movs	r2, #0
9002996a:	f884 205c 	strb.w	r2, [r4, #92]	; 0x5c
9002996e:	9901      	ldr	r1, [sp, #4]
90029970:	9a00      	ldr	r2, [sp, #0]
90029972:	66e1      	str	r1, [r4, #108]	; 0x6c
90029974:	6722      	str	r2, [r4, #112]	; 0x70
90029976:	f884 3068 	strb.w	r3, [r4, #104]	; 0x68
9002997a:	e9c4 1218 	strd	r1, r2, [r4, #96]	; 0x60
9002997e:	e7e3      	b.n	90029948 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
90029980:	f884 0069 	strb.w	r0, [r4, #105]	; 0x69
90029984:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
90029988:	4298      	cmp	r0, r3
9002998a:	d803      	bhi.n	90029994 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
9002998c:	f104 0014 	add.w	r0, r4, #20
90029990:	f7ed f952 	bl	90016c38 <_ZN8touchgfx7Outline6moveToEii>
90029994:	2301      	movs	r3, #1
90029996:	f884 305c 	strb.w	r3, [r4, #92]	; 0x5c
9002999a:	f884 305d 	strb.w	r3, [r4, #93]	; 0x5d
9002999e:	2300      	movs	r3, #0
900299a0:	e7e5      	b.n	9002996e <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

900299a2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
900299a2:	b573      	push	{r0, r1, r4, r5, r6, lr}
900299a4:	ab02      	add	r3, sp, #8
900299a6:	4604      	mov	r4, r0
900299a8:	9101      	str	r1, [sp, #4]
900299aa:	a901      	add	r1, sp, #4
900299ac:	f843 2d08 	str.w	r2, [r3, #-8]!
900299b0:	461a      	mov	r2, r3
900299b2:	f7ff ff99 	bl	900298e8 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
900299b6:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
900299b8:	9901      	ldr	r1, [sp, #4]
900299ba:	9a00      	ldr	r2, [sp, #0]
900299bc:	1ac9      	subs	r1, r1, r3
900299be:	6d23      	ldr	r3, [r4, #80]	; 0x50
900299c0:	1ad2      	subs	r2, r2, r3
900299c2:	9101      	str	r1, [sp, #4]
900299c4:	2a00      	cmp	r2, #0
900299c6:	9200      	str	r2, [sp, #0]
900299c8:	db1c      	blt.n	90029a04 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
900299ca:	6da3      	ldr	r3, [r4, #88]	; 0x58
900299cc:	429a      	cmp	r2, r3
900299ce:	bfac      	ite	ge
900299d0:	2002      	movge	r0, #2
900299d2:	2000      	movlt	r0, #0
900299d4:	2900      	cmp	r1, #0
900299d6:	db17      	blt.n	90029a08 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
900299d8:	6d63      	ldr	r3, [r4, #84]	; 0x54
900299da:	4299      	cmp	r1, r3
900299dc:	bfac      	ite	ge
900299de:	2308      	movge	r3, #8
900299e0:	2300      	movlt	r3, #0
900299e2:	4303      	orrs	r3, r0
900299e4:	f894 0068 	ldrb.w	r0, [r4, #104]	; 0x68
900299e8:	b2dd      	uxtb	r5, r3
900299ea:	b978      	cbnz	r0, 90029a0c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
900299ec:	f104 0014 	add.w	r0, r4, #20
900299f0:	f7ff fd66 	bl	900294c0 <_ZN8touchgfx10Rasterizer6lineToEii>
900299f4:	9b01      	ldr	r3, [sp, #4]
900299f6:	f884 5068 	strb.w	r5, [r4, #104]	; 0x68
900299fa:	6623      	str	r3, [r4, #96]	; 0x60
900299fc:	9b00      	ldr	r3, [sp, #0]
900299fe:	6663      	str	r3, [r4, #100]	; 0x64
90029a00:	b002      	add	sp, #8
90029a02:	bd70      	pop	{r4, r5, r6, pc}
90029a04:	2001      	movs	r0, #1
90029a06:	e7e5      	b.n	900299d4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
90029a08:	2304      	movs	r3, #4
90029a0a:	e7ea      	b.n	900299e2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
90029a0c:	b113      	cbz	r3, 90029a14 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
90029a0e:	ea10 0305 	ands.w	r3, r0, r5
90029a12:	d11c      	bne.n	90029a4e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
90029a14:	f894 305c 	ldrb.w	r3, [r4, #92]	; 0x5c
90029a18:	f104 0614 	add.w	r6, r4, #20
90029a1c:	e9d4 1218 	ldrd	r1, r2, [r4, #96]	; 0x60
90029a20:	b98b      	cbnz	r3, 90029a46 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
90029a22:	f884 0069 	strb.w	r0, [r4, #105]	; 0x69
90029a26:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
90029a2a:	4298      	cmp	r0, r3
90029a2c:	d802      	bhi.n	90029a34 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
90029a2e:	4630      	mov	r0, r6
90029a30:	f7ed f902 	bl	90016c38 <_ZN8touchgfx7Outline6moveToEii>
90029a34:	2301      	movs	r3, #1
90029a36:	f884 305c 	strb.w	r3, [r4, #92]	; 0x5c
90029a3a:	f884 305d 	strb.w	r3, [r4, #93]	; 0x5d
90029a3e:	4630      	mov	r0, r6
90029a40:	e9dd 2100 	ldrd	r2, r1, [sp]
90029a44:	e7d4      	b.n	900299f0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
90029a46:	4630      	mov	r0, r6
90029a48:	f7ff fd3a 	bl	900294c0 <_ZN8touchgfx10Rasterizer6lineToEii>
90029a4c:	e7f7      	b.n	90029a3e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
90029a4e:	461d      	mov	r5, r3
90029a50:	e7d0      	b.n	900299f4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

90029a54 <_ZN8touchgfx6CanvasD1Ev>:
90029a54:	4b04      	ldr	r3, [pc, #16]	; (90029a68 <_ZN8touchgfx6CanvasD1Ev+0x14>)
90029a56:	b510      	push	{r4, lr}
90029a58:	4604      	mov	r4, r0
90029a5a:	f840 3b14 	str.w	r3, [r0], #20
90029a5e:	f7ec fbf3 	bl	90016248 <_ZN8touchgfx7OutlineD1Ev>
90029a62:	4620      	mov	r0, r4
90029a64:	bd10      	pop	{r4, pc}
90029a66:	bf00      	nop
90029a68:	9002ea30 	.word	0x9002ea30

90029a6c <_ZN8touchgfx6CanvasD0Ev>:
90029a6c:	b510      	push	{r4, lr}
90029a6e:	4604      	mov	r4, r0
90029a70:	f7ff fff0 	bl	90029a54 <_ZN8touchgfx6CanvasD1Ev>
90029a74:	2174      	movs	r1, #116	; 0x74
90029a76:	4620      	mov	r0, r4
90029a78:	f000 f8d1 	bl	90029c1e <_ZdlPvj>
90029a7c:	4620      	mov	r0, r4
90029a7e:	bd10      	pop	{r4, pc}

90029a80 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
90029a80:	790b      	ldrb	r3, [r1, #4]
90029a82:	2b00      	cmp	r3, #0
90029a84:	bf0c      	ite	eq
90029a86:	2301      	moveq	r3, #1
90029a88:	2300      	movne	r3, #0
90029a8a:	b570      	push	{r4, r5, r6, lr}
90029a8c:	4604      	mov	r4, r0
90029a8e:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
90029a92:	460e      	mov	r6, r1
90029a94:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
90029a98:	d109      	bne.n	90029aae <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
90029a9a:	b14d      	cbz	r5, 90029ab0 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
90029a9c:	7933      	ldrb	r3, [r6, #4]
90029a9e:	2b01      	cmp	r3, #1
90029aa0:	d10c      	bne.n	90029abc <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
90029aa2:	6823      	ldr	r3, [r4, #0]
90029aa4:	4620      	mov	r0, r4
90029aa6:	6e1b      	ldr	r3, [r3, #96]	; 0x60
90029aa8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90029aac:	4718      	bx	r3
90029aae:	b12d      	cbz	r5, 90029abc <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
90029ab0:	6823      	ldr	r3, [r4, #0]
90029ab2:	4620      	mov	r0, r4
90029ab4:	695b      	ldr	r3, [r3, #20]
90029ab6:	4798      	blx	r3
90029ab8:	2d00      	cmp	r5, #0
90029aba:	d1ef      	bne.n	90029a9c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
90029abc:	bd70      	pop	{r4, r5, r6, pc}

90029abe <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
90029abe:	b570      	push	{r4, r5, r6, lr}
90029ac0:	880b      	ldrh	r3, [r1, #0]
90029ac2:	4605      	mov	r5, r0
90029ac4:	4604      	mov	r4, r0
90029ac6:	85c3      	strh	r3, [r0, #46]	; 0x2e
90029ac8:	8813      	ldrh	r3, [r2, #0]
90029aca:	f825 3f30 	strh.w	r3, [r5, #48]!
90029ace:	4628      	mov	r0, r5
90029ad0:	f7f2 f898 	bl	9001bc04 <_ZNK8touchgfx6Bitmap8getWidthEv>
90029ad4:	4606      	mov	r6, r0
90029ad6:	4628      	mov	r0, r5
90029ad8:	f7f2 f8c8 	bl	9001bc6c <_ZNK8touchgfx6Bitmap9getHeightEv>
90029adc:	6823      	ldr	r3, [r4, #0]
90029ade:	4605      	mov	r5, r0
90029ae0:	4631      	mov	r1, r6
90029ae2:	4620      	mov	r0, r4
90029ae4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90029ae6:	4798      	blx	r3
90029ae8:	6823      	ldr	r3, [r4, #0]
90029aea:	4629      	mov	r1, r5
90029aec:	4620      	mov	r0, r4
90029aee:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90029af0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90029af4:	4718      	bx	r3

90029af6 <_ZNK8touchgfx6Button12getSolidRectEv>:
90029af6:	b510      	push	{r4, lr}
90029af8:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
90029afc:	4604      	mov	r4, r0
90029afe:	2bff      	cmp	r3, #255	; 0xff
90029b00:	d006      	beq.n	90029b10 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
90029b02:	2300      	movs	r3, #0
90029b04:	8003      	strh	r3, [r0, #0]
90029b06:	8043      	strh	r3, [r0, #2]
90029b08:	8083      	strh	r3, [r0, #4]
90029b0a:	80c3      	strh	r3, [r0, #6]
90029b0c:	4620      	mov	r0, r4
90029b0e:	bd10      	pop	{r4, pc}
90029b10:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
90029b14:	b11b      	cbz	r3, 90029b1e <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
90029b16:	3130      	adds	r1, #48	; 0x30
90029b18:	f7f2 f8dc 	bl	9001bcd4 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
90029b1c:	e7f6      	b.n	90029b0c <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
90029b1e:	312e      	adds	r1, #46	; 0x2e
90029b20:	e7fa      	b.n	90029b18 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

90029b24 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
90029b24:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90029b28:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
90029b2c:	b08a      	sub	sp, #40	; 0x28
90029b2e:	4604      	mov	r4, r0
90029b30:	4688      	mov	r8, r1
90029b32:	2b00      	cmp	r3, #0
90029b34:	d066      	beq.n	90029c04 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
90029b36:	8e03      	ldrh	r3, [r0, #48]	; 0x30
90029b38:	a805      	add	r0, sp, #20
90029b3a:	f8ad 3014 	strh.w	r3, [sp, #20]
90029b3e:	f7f2 f861 	bl	9001bc04 <_ZNK8touchgfx6Bitmap8getWidthEv>
90029b42:	4607      	mov	r7, r0
90029b44:	a805      	add	r0, sp, #20
90029b46:	f7f2 f891 	bl	9001bc6c <_ZNK8touchgfx6Bitmap9getHeightEv>
90029b4a:	f9b8 6000 	ldrsh.w	r6, [r8]
90029b4e:	f8b8 2004 	ldrh.w	r2, [r8, #4]
90029b52:	2300      	movs	r3, #0
90029b54:	4432      	add	r2, r6
90029b56:	9306      	str	r3, [sp, #24]
90029b58:	b292      	uxth	r2, r2
90029b5a:	fa0f fc82 	sxth.w	ip, r2
90029b5e:	459c      	cmp	ip, r3
90029b60:	dd52      	ble.n	90029c08 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
90029b62:	42b7      	cmp	r7, r6
90029b64:	dd50      	ble.n	90029c08 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
90029b66:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
90029b6a:	f8b8 3006 	ldrh.w	r3, [r8, #6]
90029b6e:	442b      	add	r3, r5
90029b70:	b29b      	uxth	r3, r3
90029b72:	b219      	sxth	r1, r3
90029b74:	2900      	cmp	r1, #0
90029b76:	dd47      	ble.n	90029c08 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
90029b78:	42a8      	cmp	r0, r5
90029b7a:	dd45      	ble.n	90029c08 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
90029b7c:	4567      	cmp	r7, ip
90029b7e:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
90029b82:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
90029b86:	bfb8      	it	lt
90029b88:	b2ba      	uxthlt	r2, r7
90029b8a:	4288      	cmp	r0, r1
90029b8c:	f8ad 6018 	strh.w	r6, [sp, #24]
90029b90:	bfb8      	it	lt
90029b92:	b283      	uxthlt	r3, r0
90029b94:	1b92      	subs	r2, r2, r6
90029b96:	f8ad 501a 	strh.w	r5, [sp, #26]
90029b9a:	1b5b      	subs	r3, r3, r5
90029b9c:	f8ad 201c 	strh.w	r2, [sp, #28]
90029ba0:	f8ad 301e 	strh.w	r3, [sp, #30]
90029ba4:	f8bd 2014 	ldrh.w	r2, [sp, #20]
90029ba8:	f64f 73ff 	movw	r3, #65535	; 0xffff
90029bac:	429a      	cmp	r2, r3
90029bae:	d026      	beq.n	90029bfe <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
90029bb0:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
90029bb4:	2b00      	cmp	r3, #0
90029bb6:	dd22      	ble.n	90029bfe <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
90029bb8:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
90029bbc:	2b00      	cmp	r3, #0
90029bbe:	dd1e      	ble.n	90029bfe <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
90029bc0:	2300      	movs	r3, #0
90029bc2:	a908      	add	r1, sp, #32
90029bc4:	4620      	mov	r0, r4
90029bc6:	e9cd 3308 	strd	r3, r3, [sp, #32]
90029bca:	6823      	ldr	r3, [r4, #0]
90029bcc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90029bce:	4798      	blx	r3
90029bd0:	4b0f      	ldr	r3, [pc, #60]	; (90029c10 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
90029bd2:	681b      	ldr	r3, [r3, #0]
90029bd4:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
90029bd8:	b10a      	cbz	r2, 90029bde <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
90029bda:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
90029bdc:	b900      	cbnz	r0, 90029be0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
90029bde:	6898      	ldr	r0, [r3, #8]
90029be0:	2501      	movs	r5, #1
90029be2:	6801      	ldr	r1, [r0, #0]
90029be4:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
90029be8:	9502      	str	r5, [sp, #8]
90029bea:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
90029bee:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
90029bf2:	9401      	str	r4, [sp, #4]
90029bf4:	ac06      	add	r4, sp, #24
90029bf6:	9400      	str	r4, [sp, #0]
90029bf8:	688c      	ldr	r4, [r1, #8]
90029bfa:	a905      	add	r1, sp, #20
90029bfc:	47a0      	blx	r4
90029bfe:	b00a      	add	sp, #40	; 0x28
90029c00:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90029c04:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
90029c06:	e797      	b.n	90029b38 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
90029c08:	2300      	movs	r3, #0
90029c0a:	9307      	str	r3, [sp, #28]
90029c0c:	e7ca      	b.n	90029ba4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
90029c0e:	bf00      	nop
90029c10:	240236cc 	.word	0x240236cc

90029c14 <__aeabi_atexit>:
90029c14:	460b      	mov	r3, r1
90029c16:	4601      	mov	r1, r0
90029c18:	4618      	mov	r0, r3
90029c1a:	f000 b94d 	b.w	90029eb8 <__cxa_atexit>

90029c1e <_ZdlPvj>:
90029c1e:	f000 b812 	b.w	90029c46 <_ZdlPv>

90029c22 <__cxa_guard_acquire>:
90029c22:	6803      	ldr	r3, [r0, #0]
90029c24:	07db      	lsls	r3, r3, #31
90029c26:	d406      	bmi.n	90029c36 <__cxa_guard_acquire+0x14>
90029c28:	7843      	ldrb	r3, [r0, #1]
90029c2a:	b103      	cbz	r3, 90029c2e <__cxa_guard_acquire+0xc>
90029c2c:	deff      	udf	#255	; 0xff
90029c2e:	2301      	movs	r3, #1
90029c30:	7043      	strb	r3, [r0, #1]
90029c32:	4618      	mov	r0, r3
90029c34:	4770      	bx	lr
90029c36:	2000      	movs	r0, #0
90029c38:	4770      	bx	lr

90029c3a <__cxa_guard_release>:
90029c3a:	2301      	movs	r3, #1
90029c3c:	6003      	str	r3, [r0, #0]
90029c3e:	4770      	bx	lr

90029c40 <__cxa_pure_virtual>:
90029c40:	b508      	push	{r3, lr}
90029c42:	f000 f80f 	bl	90029c64 <_ZSt9terminatev>

90029c46 <_ZdlPv>:
90029c46:	f000 b845 	b.w	90029cd4 <free>

90029c4a <_ZN10__cxxabiv111__terminateEPFvvE>:
90029c4a:	b508      	push	{r3, lr}
90029c4c:	4780      	blx	r0
90029c4e:	f000 f80e 	bl	90029c6e <abort>
	...

90029c54 <_ZSt13get_terminatev>:
90029c54:	4b02      	ldr	r3, [pc, #8]	; (90029c60 <_ZSt13get_terminatev+0xc>)
90029c56:	6818      	ldr	r0, [r3, #0]
90029c58:	f3bf 8f5b 	dmb	ish
90029c5c:	4770      	bx	lr
90029c5e:	bf00      	nop
90029c60:	240000f0 	.word	0x240000f0

90029c64 <_ZSt9terminatev>:
90029c64:	b508      	push	{r3, lr}
90029c66:	f7ff fff5 	bl	90029c54 <_ZSt13get_terminatev>
90029c6a:	f7ff ffee 	bl	90029c4a <_ZN10__cxxabiv111__terminateEPFvvE>

90029c6e <abort>:
90029c6e:	b508      	push	{r3, lr}
90029c70:	2006      	movs	r0, #6
90029c72:	f000 fb3d 	bl	9002a2f0 <raise>
90029c76:	2001      	movs	r0, #1
90029c78:	f7db ff7a 	bl	90005b70 <_exit>

90029c7c <__assert_func>:
90029c7c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
90029c7e:	4614      	mov	r4, r2
90029c80:	461a      	mov	r2, r3
90029c82:	4b09      	ldr	r3, [pc, #36]	; (90029ca8 <__assert_func+0x2c>)
90029c84:	681b      	ldr	r3, [r3, #0]
90029c86:	4605      	mov	r5, r0
90029c88:	68d8      	ldr	r0, [r3, #12]
90029c8a:	b14c      	cbz	r4, 90029ca0 <__assert_func+0x24>
90029c8c:	4b07      	ldr	r3, [pc, #28]	; (90029cac <__assert_func+0x30>)
90029c8e:	9100      	str	r1, [sp, #0]
90029c90:	e9cd 3401 	strd	r3, r4, [sp, #4]
90029c94:	4906      	ldr	r1, [pc, #24]	; (90029cb0 <__assert_func+0x34>)
90029c96:	462b      	mov	r3, r5
90029c98:	f000 f9c0 	bl	9002a01c <fiprintf>
90029c9c:	f7ff ffe7 	bl	90029c6e <abort>
90029ca0:	4b04      	ldr	r3, [pc, #16]	; (90029cb4 <__assert_func+0x38>)
90029ca2:	461c      	mov	r4, r3
90029ca4:	e7f3      	b.n	90029c8e <__assert_func+0x12>
90029ca6:	bf00      	nop
90029ca8:	2400014c 	.word	0x2400014c
90029cac:	9002ea3c 	.word	0x9002ea3c
90029cb0:	9002ea49 	.word	0x9002ea49
90029cb4:	9002ea77 	.word	0x9002ea77

90029cb8 <atexit>:
90029cb8:	2300      	movs	r3, #0
90029cba:	4601      	mov	r1, r0
90029cbc:	461a      	mov	r2, r3
90029cbe:	4618      	mov	r0, r3
90029cc0:	f000 bbc4 	b.w	9002a44c <__register_exitproc>

90029cc4 <malloc>:
90029cc4:	4b02      	ldr	r3, [pc, #8]	; (90029cd0 <malloc+0xc>)
90029cc6:	4601      	mov	r1, r0
90029cc8:	6818      	ldr	r0, [r3, #0]
90029cca:	f000 b82b 	b.w	90029d24 <_malloc_r>
90029cce:	bf00      	nop
90029cd0:	2400014c 	.word	0x2400014c

90029cd4 <free>:
90029cd4:	4b02      	ldr	r3, [pc, #8]	; (90029ce0 <free+0xc>)
90029cd6:	4601      	mov	r1, r0
90029cd8:	6818      	ldr	r0, [r3, #0]
90029cda:	f000 bc15 	b.w	9002a508 <_free_r>
90029cde:	bf00      	nop
90029ce0:	2400014c 	.word	0x2400014c

90029ce4 <sbrk_aligned>:
90029ce4:	b570      	push	{r4, r5, r6, lr}
90029ce6:	4e0e      	ldr	r6, [pc, #56]	; (90029d20 <sbrk_aligned+0x3c>)
90029ce8:	460c      	mov	r4, r1
90029cea:	6831      	ldr	r1, [r6, #0]
90029cec:	4605      	mov	r5, r0
90029cee:	b911      	cbnz	r1, 90029cf6 <sbrk_aligned+0x12>
90029cf0:	f000 fb4e 	bl	9002a390 <_sbrk_r>
90029cf4:	6030      	str	r0, [r6, #0]
90029cf6:	4621      	mov	r1, r4
90029cf8:	4628      	mov	r0, r5
90029cfa:	f000 fb49 	bl	9002a390 <_sbrk_r>
90029cfe:	1c43      	adds	r3, r0, #1
90029d00:	d00a      	beq.n	90029d18 <sbrk_aligned+0x34>
90029d02:	1cc4      	adds	r4, r0, #3
90029d04:	f024 0403 	bic.w	r4, r4, #3
90029d08:	42a0      	cmp	r0, r4
90029d0a:	d007      	beq.n	90029d1c <sbrk_aligned+0x38>
90029d0c:	1a21      	subs	r1, r4, r0
90029d0e:	4628      	mov	r0, r5
90029d10:	f000 fb3e 	bl	9002a390 <_sbrk_r>
90029d14:	3001      	adds	r0, #1
90029d16:	d101      	bne.n	90029d1c <sbrk_aligned+0x38>
90029d18:	f04f 34ff 	mov.w	r4, #4294967295
90029d1c:	4620      	mov	r0, r4
90029d1e:	bd70      	pop	{r4, r5, r6, pc}
90029d20:	24024024 	.word	0x24024024

90029d24 <_malloc_r>:
90029d24:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
90029d28:	1ccd      	adds	r5, r1, #3
90029d2a:	f025 0503 	bic.w	r5, r5, #3
90029d2e:	3508      	adds	r5, #8
90029d30:	2d0c      	cmp	r5, #12
90029d32:	bf38      	it	cc
90029d34:	250c      	movcc	r5, #12
90029d36:	2d00      	cmp	r5, #0
90029d38:	4607      	mov	r7, r0
90029d3a:	db01      	blt.n	90029d40 <_malloc_r+0x1c>
90029d3c:	42a9      	cmp	r1, r5
90029d3e:	d905      	bls.n	90029d4c <_malloc_r+0x28>
90029d40:	230c      	movs	r3, #12
90029d42:	603b      	str	r3, [r7, #0]
90029d44:	2600      	movs	r6, #0
90029d46:	4630      	mov	r0, r6
90029d48:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
90029d4c:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 90029e20 <_malloc_r+0xfc>
90029d50:	f000 f868 	bl	90029e24 <__malloc_lock>
90029d54:	f8d8 3000 	ldr.w	r3, [r8]
90029d58:	461c      	mov	r4, r3
90029d5a:	bb5c      	cbnz	r4, 90029db4 <_malloc_r+0x90>
90029d5c:	4629      	mov	r1, r5
90029d5e:	4638      	mov	r0, r7
90029d60:	f7ff ffc0 	bl	90029ce4 <sbrk_aligned>
90029d64:	1c43      	adds	r3, r0, #1
90029d66:	4604      	mov	r4, r0
90029d68:	d155      	bne.n	90029e16 <_malloc_r+0xf2>
90029d6a:	f8d8 4000 	ldr.w	r4, [r8]
90029d6e:	4626      	mov	r6, r4
90029d70:	2e00      	cmp	r6, #0
90029d72:	d145      	bne.n	90029e00 <_malloc_r+0xdc>
90029d74:	2c00      	cmp	r4, #0
90029d76:	d048      	beq.n	90029e0a <_malloc_r+0xe6>
90029d78:	6823      	ldr	r3, [r4, #0]
90029d7a:	4631      	mov	r1, r6
90029d7c:	4638      	mov	r0, r7
90029d7e:	eb04 0903 	add.w	r9, r4, r3
90029d82:	f000 fb05 	bl	9002a390 <_sbrk_r>
90029d86:	4581      	cmp	r9, r0
90029d88:	d13f      	bne.n	90029e0a <_malloc_r+0xe6>
90029d8a:	6821      	ldr	r1, [r4, #0]
90029d8c:	1a6d      	subs	r5, r5, r1
90029d8e:	4629      	mov	r1, r5
90029d90:	4638      	mov	r0, r7
90029d92:	f7ff ffa7 	bl	90029ce4 <sbrk_aligned>
90029d96:	3001      	adds	r0, #1
90029d98:	d037      	beq.n	90029e0a <_malloc_r+0xe6>
90029d9a:	6823      	ldr	r3, [r4, #0]
90029d9c:	442b      	add	r3, r5
90029d9e:	6023      	str	r3, [r4, #0]
90029da0:	f8d8 3000 	ldr.w	r3, [r8]
90029da4:	2b00      	cmp	r3, #0
90029da6:	d038      	beq.n	90029e1a <_malloc_r+0xf6>
90029da8:	685a      	ldr	r2, [r3, #4]
90029daa:	42a2      	cmp	r2, r4
90029dac:	d12b      	bne.n	90029e06 <_malloc_r+0xe2>
90029dae:	2200      	movs	r2, #0
90029db0:	605a      	str	r2, [r3, #4]
90029db2:	e00f      	b.n	90029dd4 <_malloc_r+0xb0>
90029db4:	6822      	ldr	r2, [r4, #0]
90029db6:	1b52      	subs	r2, r2, r5
90029db8:	d41f      	bmi.n	90029dfa <_malloc_r+0xd6>
90029dba:	2a0b      	cmp	r2, #11
90029dbc:	d917      	bls.n	90029dee <_malloc_r+0xca>
90029dbe:	1961      	adds	r1, r4, r5
90029dc0:	42a3      	cmp	r3, r4
90029dc2:	6025      	str	r5, [r4, #0]
90029dc4:	bf18      	it	ne
90029dc6:	6059      	strne	r1, [r3, #4]
90029dc8:	6863      	ldr	r3, [r4, #4]
90029dca:	bf08      	it	eq
90029dcc:	f8c8 1000 	streq.w	r1, [r8]
90029dd0:	5162      	str	r2, [r4, r5]
90029dd2:	604b      	str	r3, [r1, #4]
90029dd4:	4638      	mov	r0, r7
90029dd6:	f104 060b 	add.w	r6, r4, #11
90029dda:	f000 f829 	bl	90029e30 <__malloc_unlock>
90029dde:	f026 0607 	bic.w	r6, r6, #7
90029de2:	1d23      	adds	r3, r4, #4
90029de4:	1af2      	subs	r2, r6, r3
90029de6:	d0ae      	beq.n	90029d46 <_malloc_r+0x22>
90029de8:	1b9b      	subs	r3, r3, r6
90029dea:	50a3      	str	r3, [r4, r2]
90029dec:	e7ab      	b.n	90029d46 <_malloc_r+0x22>
90029dee:	42a3      	cmp	r3, r4
90029df0:	6862      	ldr	r2, [r4, #4]
90029df2:	d1dd      	bne.n	90029db0 <_malloc_r+0x8c>
90029df4:	f8c8 2000 	str.w	r2, [r8]
90029df8:	e7ec      	b.n	90029dd4 <_malloc_r+0xb0>
90029dfa:	4623      	mov	r3, r4
90029dfc:	6864      	ldr	r4, [r4, #4]
90029dfe:	e7ac      	b.n	90029d5a <_malloc_r+0x36>
90029e00:	4634      	mov	r4, r6
90029e02:	6876      	ldr	r6, [r6, #4]
90029e04:	e7b4      	b.n	90029d70 <_malloc_r+0x4c>
90029e06:	4613      	mov	r3, r2
90029e08:	e7cc      	b.n	90029da4 <_malloc_r+0x80>
90029e0a:	230c      	movs	r3, #12
90029e0c:	603b      	str	r3, [r7, #0]
90029e0e:	4638      	mov	r0, r7
90029e10:	f000 f80e 	bl	90029e30 <__malloc_unlock>
90029e14:	e797      	b.n	90029d46 <_malloc_r+0x22>
90029e16:	6025      	str	r5, [r4, #0]
90029e18:	e7dc      	b.n	90029dd4 <_malloc_r+0xb0>
90029e1a:	605b      	str	r3, [r3, #4]
90029e1c:	deff      	udf	#255	; 0xff
90029e1e:	bf00      	nop
90029e20:	24024020 	.word	0x24024020

90029e24 <__malloc_lock>:
90029e24:	4801      	ldr	r0, [pc, #4]	; (90029e2c <__malloc_lock+0x8>)
90029e26:	f000 bb00 	b.w	9002a42a <__retarget_lock_acquire_recursive>
90029e2a:	bf00      	nop
90029e2c:	24024169 	.word	0x24024169

90029e30 <__malloc_unlock>:
90029e30:	4801      	ldr	r0, [pc, #4]	; (90029e38 <__malloc_unlock+0x8>)
90029e32:	f000 bafb 	b.w	9002a42c <__retarget_lock_release_recursive>
90029e36:	bf00      	nop
90029e38:	24024169 	.word	0x24024169

90029e3c <rand>:
90029e3c:	4b16      	ldr	r3, [pc, #88]	; (90029e98 <rand+0x5c>)
90029e3e:	b510      	push	{r4, lr}
90029e40:	681c      	ldr	r4, [r3, #0]
90029e42:	6b23      	ldr	r3, [r4, #48]	; 0x30
90029e44:	b9b3      	cbnz	r3, 90029e74 <rand+0x38>
90029e46:	2018      	movs	r0, #24
90029e48:	f7ff ff3c 	bl	90029cc4 <malloc>
90029e4c:	4602      	mov	r2, r0
90029e4e:	6320      	str	r0, [r4, #48]	; 0x30
90029e50:	b920      	cbnz	r0, 90029e5c <rand+0x20>
90029e52:	4b12      	ldr	r3, [pc, #72]	; (90029e9c <rand+0x60>)
90029e54:	4812      	ldr	r0, [pc, #72]	; (90029ea0 <rand+0x64>)
90029e56:	2152      	movs	r1, #82	; 0x52
90029e58:	f7ff ff10 	bl	90029c7c <__assert_func>
90029e5c:	4911      	ldr	r1, [pc, #68]	; (90029ea4 <rand+0x68>)
90029e5e:	4b12      	ldr	r3, [pc, #72]	; (90029ea8 <rand+0x6c>)
90029e60:	e9c0 1300 	strd	r1, r3, [r0]
90029e64:	4b11      	ldr	r3, [pc, #68]	; (90029eac <rand+0x70>)
90029e66:	6083      	str	r3, [r0, #8]
90029e68:	230b      	movs	r3, #11
90029e6a:	8183      	strh	r3, [r0, #12]
90029e6c:	2100      	movs	r1, #0
90029e6e:	2001      	movs	r0, #1
90029e70:	e9c2 0104 	strd	r0, r1, [r2, #16]
90029e74:	6b21      	ldr	r1, [r4, #48]	; 0x30
90029e76:	480e      	ldr	r0, [pc, #56]	; (90029eb0 <rand+0x74>)
90029e78:	690b      	ldr	r3, [r1, #16]
90029e7a:	694c      	ldr	r4, [r1, #20]
90029e7c:	4a0d      	ldr	r2, [pc, #52]	; (90029eb4 <rand+0x78>)
90029e7e:	4358      	muls	r0, r3
90029e80:	fb02 0004 	mla	r0, r2, r4, r0
90029e84:	fba3 3202 	umull	r3, r2, r3, r2
90029e88:	3301      	adds	r3, #1
90029e8a:	eb40 0002 	adc.w	r0, r0, r2
90029e8e:	e9c1 3004 	strd	r3, r0, [r1, #16]
90029e92:	f020 4000 	bic.w	r0, r0, #2147483648	; 0x80000000
90029e96:	bd10      	pop	{r4, pc}
90029e98:	2400014c 	.word	0x2400014c
90029e9c:	9002ea78 	.word	0x9002ea78
90029ea0:	9002ea8f 	.word	0x9002ea8f
90029ea4:	abcd330e 	.word	0xabcd330e
90029ea8:	e66d1234 	.word	0xe66d1234
90029eac:	0005deec 	.word	0x0005deec
90029eb0:	5851f42d 	.word	0x5851f42d
90029eb4:	4c957f2d 	.word	0x4c957f2d

90029eb8 <__cxa_atexit>:
90029eb8:	b510      	push	{r4, lr}
90029eba:	4c05      	ldr	r4, [pc, #20]	; (90029ed0 <__cxa_atexit+0x18>)
90029ebc:	4613      	mov	r3, r2
90029ebe:	b12c      	cbz	r4, 90029ecc <__cxa_atexit+0x14>
90029ec0:	460a      	mov	r2, r1
90029ec2:	4601      	mov	r1, r0
90029ec4:	2002      	movs	r0, #2
90029ec6:	f000 fac1 	bl	9002a44c <__register_exitproc>
90029eca:	bd10      	pop	{r4, pc}
90029ecc:	4620      	mov	r0, r4
90029ece:	e7fc      	b.n	90029eca <__cxa_atexit+0x12>
90029ed0:	9002a44d 	.word	0x9002a44d

90029ed4 <std>:
90029ed4:	2300      	movs	r3, #0
90029ed6:	b510      	push	{r4, lr}
90029ed8:	4604      	mov	r4, r0
90029eda:	e9c0 3300 	strd	r3, r3, [r0]
90029ede:	e9c0 3304 	strd	r3, r3, [r0, #16]
90029ee2:	6083      	str	r3, [r0, #8]
90029ee4:	8181      	strh	r1, [r0, #12]
90029ee6:	6643      	str	r3, [r0, #100]	; 0x64
90029ee8:	81c2      	strh	r2, [r0, #14]
90029eea:	6183      	str	r3, [r0, #24]
90029eec:	4619      	mov	r1, r3
90029eee:	2208      	movs	r2, #8
90029ef0:	305c      	adds	r0, #92	; 0x5c
90029ef2:	f000 f9bb 	bl	9002a26c <memset>
90029ef6:	4b0d      	ldr	r3, [pc, #52]	; (90029f2c <std+0x58>)
90029ef8:	6263      	str	r3, [r4, #36]	; 0x24
90029efa:	4b0d      	ldr	r3, [pc, #52]	; (90029f30 <std+0x5c>)
90029efc:	62a3      	str	r3, [r4, #40]	; 0x28
90029efe:	4b0d      	ldr	r3, [pc, #52]	; (90029f34 <std+0x60>)
90029f00:	62e3      	str	r3, [r4, #44]	; 0x2c
90029f02:	4b0d      	ldr	r3, [pc, #52]	; (90029f38 <std+0x64>)
90029f04:	6323      	str	r3, [r4, #48]	; 0x30
90029f06:	4b0d      	ldr	r3, [pc, #52]	; (90029f3c <std+0x68>)
90029f08:	6224      	str	r4, [r4, #32]
90029f0a:	429c      	cmp	r4, r3
90029f0c:	d006      	beq.n	90029f1c <std+0x48>
90029f0e:	f103 0268 	add.w	r2, r3, #104	; 0x68
90029f12:	4294      	cmp	r4, r2
90029f14:	d002      	beq.n	90029f1c <std+0x48>
90029f16:	33d0      	adds	r3, #208	; 0xd0
90029f18:	429c      	cmp	r4, r3
90029f1a:	d105      	bne.n	90029f28 <std+0x54>
90029f1c:	f104 0058 	add.w	r0, r4, #88	; 0x58
90029f20:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90029f24:	f000 ba80 	b.w	9002a428 <__retarget_lock_init_recursive>
90029f28:	bd10      	pop	{r4, pc}
90029f2a:	bf00      	nop
90029f2c:	9002a0bd 	.word	0x9002a0bd
90029f30:	9002a0df 	.word	0x9002a0df
90029f34:	9002a117 	.word	0x9002a117
90029f38:	9002a13b 	.word	0x9002a13b
90029f3c:	24024028 	.word	0x24024028

90029f40 <stdio_exit_handler>:
90029f40:	4a02      	ldr	r2, [pc, #8]	; (90029f4c <stdio_exit_handler+0xc>)
90029f42:	4903      	ldr	r1, [pc, #12]	; (90029f50 <stdio_exit_handler+0x10>)
90029f44:	4803      	ldr	r0, [pc, #12]	; (90029f54 <stdio_exit_handler+0x14>)
90029f46:	f000 b87b 	b.w	9002a040 <_fwalk_sglue>
90029f4a:	bf00      	nop
90029f4c:	240000f4 	.word	0x240000f4
90029f50:	9002af05 	.word	0x9002af05
90029f54:	24000100 	.word	0x24000100

90029f58 <cleanup_stdio>:
90029f58:	6841      	ldr	r1, [r0, #4]
90029f5a:	4b0c      	ldr	r3, [pc, #48]	; (90029f8c <cleanup_stdio+0x34>)
90029f5c:	4299      	cmp	r1, r3
90029f5e:	b510      	push	{r4, lr}
90029f60:	4604      	mov	r4, r0
90029f62:	d001      	beq.n	90029f68 <cleanup_stdio+0x10>
90029f64:	f000 ffce 	bl	9002af04 <_fflush_r>
90029f68:	68a1      	ldr	r1, [r4, #8]
90029f6a:	4b09      	ldr	r3, [pc, #36]	; (90029f90 <cleanup_stdio+0x38>)
90029f6c:	4299      	cmp	r1, r3
90029f6e:	d002      	beq.n	90029f76 <cleanup_stdio+0x1e>
90029f70:	4620      	mov	r0, r4
90029f72:	f000 ffc7 	bl	9002af04 <_fflush_r>
90029f76:	68e1      	ldr	r1, [r4, #12]
90029f78:	4b06      	ldr	r3, [pc, #24]	; (90029f94 <cleanup_stdio+0x3c>)
90029f7a:	4299      	cmp	r1, r3
90029f7c:	d004      	beq.n	90029f88 <cleanup_stdio+0x30>
90029f7e:	4620      	mov	r0, r4
90029f80:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90029f84:	f000 bfbe 	b.w	9002af04 <_fflush_r>
90029f88:	bd10      	pop	{r4, pc}
90029f8a:	bf00      	nop
90029f8c:	24024028 	.word	0x24024028
90029f90:	24024090 	.word	0x24024090
90029f94:	240240f8 	.word	0x240240f8

90029f98 <global_stdio_init.part.0>:
90029f98:	b510      	push	{r4, lr}
90029f9a:	4b0b      	ldr	r3, [pc, #44]	; (90029fc8 <global_stdio_init.part.0+0x30>)
90029f9c:	4c0b      	ldr	r4, [pc, #44]	; (90029fcc <global_stdio_init.part.0+0x34>)
90029f9e:	4a0c      	ldr	r2, [pc, #48]	; (90029fd0 <global_stdio_init.part.0+0x38>)
90029fa0:	601a      	str	r2, [r3, #0]
90029fa2:	4620      	mov	r0, r4
90029fa4:	2200      	movs	r2, #0
90029fa6:	2104      	movs	r1, #4
90029fa8:	f7ff ff94 	bl	90029ed4 <std>
90029fac:	f104 0068 	add.w	r0, r4, #104	; 0x68
90029fb0:	2201      	movs	r2, #1
90029fb2:	2109      	movs	r1, #9
90029fb4:	f7ff ff8e 	bl	90029ed4 <std>
90029fb8:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
90029fbc:	2202      	movs	r2, #2
90029fbe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90029fc2:	2112      	movs	r1, #18
90029fc4:	f7ff bf86 	b.w	90029ed4 <std>
90029fc8:	24024160 	.word	0x24024160
90029fcc:	24024028 	.word	0x24024028
90029fd0:	90029f41 	.word	0x90029f41

90029fd4 <__sfp_lock_acquire>:
90029fd4:	4801      	ldr	r0, [pc, #4]	; (90029fdc <__sfp_lock_acquire+0x8>)
90029fd6:	f000 ba28 	b.w	9002a42a <__retarget_lock_acquire_recursive>
90029fda:	bf00      	nop
90029fdc:	2402416a 	.word	0x2402416a

90029fe0 <__sfp_lock_release>:
90029fe0:	4801      	ldr	r0, [pc, #4]	; (90029fe8 <__sfp_lock_release+0x8>)
90029fe2:	f000 ba23 	b.w	9002a42c <__retarget_lock_release_recursive>
90029fe6:	bf00      	nop
90029fe8:	2402416a 	.word	0x2402416a

90029fec <__sinit>:
90029fec:	b510      	push	{r4, lr}
90029fee:	4604      	mov	r4, r0
90029ff0:	f7ff fff0 	bl	90029fd4 <__sfp_lock_acquire>
90029ff4:	6a23      	ldr	r3, [r4, #32]
90029ff6:	b11b      	cbz	r3, 9002a000 <__sinit+0x14>
90029ff8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90029ffc:	f7ff bff0 	b.w	90029fe0 <__sfp_lock_release>
9002a000:	4b04      	ldr	r3, [pc, #16]	; (9002a014 <__sinit+0x28>)
9002a002:	6223      	str	r3, [r4, #32]
9002a004:	4b04      	ldr	r3, [pc, #16]	; (9002a018 <__sinit+0x2c>)
9002a006:	681b      	ldr	r3, [r3, #0]
9002a008:	2b00      	cmp	r3, #0
9002a00a:	d1f5      	bne.n	90029ff8 <__sinit+0xc>
9002a00c:	f7ff ffc4 	bl	90029f98 <global_stdio_init.part.0>
9002a010:	e7f2      	b.n	90029ff8 <__sinit+0xc>
9002a012:	bf00      	nop
9002a014:	90029f59 	.word	0x90029f59
9002a018:	24024160 	.word	0x24024160

9002a01c <fiprintf>:
9002a01c:	b40e      	push	{r1, r2, r3}
9002a01e:	b503      	push	{r0, r1, lr}
9002a020:	4601      	mov	r1, r0
9002a022:	ab03      	add	r3, sp, #12
9002a024:	4805      	ldr	r0, [pc, #20]	; (9002a03c <fiprintf+0x20>)
9002a026:	f853 2b04 	ldr.w	r2, [r3], #4
9002a02a:	6800      	ldr	r0, [r0, #0]
9002a02c:	9301      	str	r3, [sp, #4]
9002a02e:	f000 fc39 	bl	9002a8a4 <_vfiprintf_r>
9002a032:	b002      	add	sp, #8
9002a034:	f85d eb04 	ldr.w	lr, [sp], #4
9002a038:	b003      	add	sp, #12
9002a03a:	4770      	bx	lr
9002a03c:	2400014c 	.word	0x2400014c

9002a040 <_fwalk_sglue>:
9002a040:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9002a044:	4607      	mov	r7, r0
9002a046:	4688      	mov	r8, r1
9002a048:	4614      	mov	r4, r2
9002a04a:	2600      	movs	r6, #0
9002a04c:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
9002a050:	f1b9 0901 	subs.w	r9, r9, #1
9002a054:	d505      	bpl.n	9002a062 <_fwalk_sglue+0x22>
9002a056:	6824      	ldr	r4, [r4, #0]
9002a058:	2c00      	cmp	r4, #0
9002a05a:	d1f7      	bne.n	9002a04c <_fwalk_sglue+0xc>
9002a05c:	4630      	mov	r0, r6
9002a05e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
9002a062:	89ab      	ldrh	r3, [r5, #12]
9002a064:	2b01      	cmp	r3, #1
9002a066:	d907      	bls.n	9002a078 <_fwalk_sglue+0x38>
9002a068:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
9002a06c:	3301      	adds	r3, #1
9002a06e:	d003      	beq.n	9002a078 <_fwalk_sglue+0x38>
9002a070:	4629      	mov	r1, r5
9002a072:	4638      	mov	r0, r7
9002a074:	47c0      	blx	r8
9002a076:	4306      	orrs	r6, r0
9002a078:	3568      	adds	r5, #104	; 0x68
9002a07a:	e7e9      	b.n	9002a050 <_fwalk_sglue+0x10>

9002a07c <siprintf>:
9002a07c:	b40e      	push	{r1, r2, r3}
9002a07e:	b500      	push	{lr}
9002a080:	b09c      	sub	sp, #112	; 0x70
9002a082:	ab1d      	add	r3, sp, #116	; 0x74
9002a084:	9002      	str	r0, [sp, #8]
9002a086:	9006      	str	r0, [sp, #24]
9002a088:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
9002a08c:	4809      	ldr	r0, [pc, #36]	; (9002a0b4 <siprintf+0x38>)
9002a08e:	9107      	str	r1, [sp, #28]
9002a090:	9104      	str	r1, [sp, #16]
9002a092:	4909      	ldr	r1, [pc, #36]	; (9002a0b8 <siprintf+0x3c>)
9002a094:	f853 2b04 	ldr.w	r2, [r3], #4
9002a098:	9105      	str	r1, [sp, #20]
9002a09a:	6800      	ldr	r0, [r0, #0]
9002a09c:	9301      	str	r3, [sp, #4]
9002a09e:	a902      	add	r1, sp, #8
9002a0a0:	f000 fad8 	bl	9002a654 <_svfiprintf_r>
9002a0a4:	9b02      	ldr	r3, [sp, #8]
9002a0a6:	2200      	movs	r2, #0
9002a0a8:	701a      	strb	r2, [r3, #0]
9002a0aa:	b01c      	add	sp, #112	; 0x70
9002a0ac:	f85d eb04 	ldr.w	lr, [sp], #4
9002a0b0:	b003      	add	sp, #12
9002a0b2:	4770      	bx	lr
9002a0b4:	2400014c 	.word	0x2400014c
9002a0b8:	ffff0208 	.word	0xffff0208

9002a0bc <__sread>:
9002a0bc:	b510      	push	{r4, lr}
9002a0be:	460c      	mov	r4, r1
9002a0c0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
9002a0c4:	f000 f93e 	bl	9002a344 <_read_r>
9002a0c8:	2800      	cmp	r0, #0
9002a0ca:	bfab      	itete	ge
9002a0cc:	6d63      	ldrge	r3, [r4, #84]	; 0x54
9002a0ce:	89a3      	ldrhlt	r3, [r4, #12]
9002a0d0:	181b      	addge	r3, r3, r0
9002a0d2:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
9002a0d6:	bfac      	ite	ge
9002a0d8:	6563      	strge	r3, [r4, #84]	; 0x54
9002a0da:	81a3      	strhlt	r3, [r4, #12]
9002a0dc:	bd10      	pop	{r4, pc}

9002a0de <__swrite>:
9002a0de:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9002a0e2:	461f      	mov	r7, r3
9002a0e4:	898b      	ldrh	r3, [r1, #12]
9002a0e6:	05db      	lsls	r3, r3, #23
9002a0e8:	4605      	mov	r5, r0
9002a0ea:	460c      	mov	r4, r1
9002a0ec:	4616      	mov	r6, r2
9002a0ee:	d505      	bpl.n	9002a0fc <__swrite+0x1e>
9002a0f0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
9002a0f4:	2302      	movs	r3, #2
9002a0f6:	2200      	movs	r2, #0
9002a0f8:	f000 f912 	bl	9002a320 <_lseek_r>
9002a0fc:	89a3      	ldrh	r3, [r4, #12]
9002a0fe:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
9002a102:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
9002a106:	81a3      	strh	r3, [r4, #12]
9002a108:	4632      	mov	r2, r6
9002a10a:	463b      	mov	r3, r7
9002a10c:	4628      	mov	r0, r5
9002a10e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
9002a112:	f000 b94d 	b.w	9002a3b0 <_write_r>

9002a116 <__sseek>:
9002a116:	b510      	push	{r4, lr}
9002a118:	460c      	mov	r4, r1
9002a11a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
9002a11e:	f000 f8ff 	bl	9002a320 <_lseek_r>
9002a122:	1c43      	adds	r3, r0, #1
9002a124:	89a3      	ldrh	r3, [r4, #12]
9002a126:	bf15      	itete	ne
9002a128:	6560      	strne	r0, [r4, #84]	; 0x54
9002a12a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
9002a12e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
9002a132:	81a3      	strheq	r3, [r4, #12]
9002a134:	bf18      	it	ne
9002a136:	81a3      	strhne	r3, [r4, #12]
9002a138:	bd10      	pop	{r4, pc}

9002a13a <__sclose>:
9002a13a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
9002a13e:	f000 b8df 	b.w	9002a300 <_close_r>

9002a142 <__swbuf_r>:
9002a142:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9002a144:	460e      	mov	r6, r1
9002a146:	4614      	mov	r4, r2
9002a148:	4605      	mov	r5, r0
9002a14a:	b118      	cbz	r0, 9002a154 <__swbuf_r+0x12>
9002a14c:	6a03      	ldr	r3, [r0, #32]
9002a14e:	b90b      	cbnz	r3, 9002a154 <__swbuf_r+0x12>
9002a150:	f7ff ff4c 	bl	90029fec <__sinit>
9002a154:	69a3      	ldr	r3, [r4, #24]
9002a156:	60a3      	str	r3, [r4, #8]
9002a158:	89a3      	ldrh	r3, [r4, #12]
9002a15a:	071a      	lsls	r2, r3, #28
9002a15c:	d525      	bpl.n	9002a1aa <__swbuf_r+0x68>
9002a15e:	6923      	ldr	r3, [r4, #16]
9002a160:	b31b      	cbz	r3, 9002a1aa <__swbuf_r+0x68>
9002a162:	6823      	ldr	r3, [r4, #0]
9002a164:	6922      	ldr	r2, [r4, #16]
9002a166:	1a98      	subs	r0, r3, r2
9002a168:	6963      	ldr	r3, [r4, #20]
9002a16a:	b2f6      	uxtb	r6, r6
9002a16c:	4283      	cmp	r3, r0
9002a16e:	4637      	mov	r7, r6
9002a170:	dc04      	bgt.n	9002a17c <__swbuf_r+0x3a>
9002a172:	4621      	mov	r1, r4
9002a174:	4628      	mov	r0, r5
9002a176:	f000 fec5 	bl	9002af04 <_fflush_r>
9002a17a:	b9e0      	cbnz	r0, 9002a1b6 <__swbuf_r+0x74>
9002a17c:	68a3      	ldr	r3, [r4, #8]
9002a17e:	3b01      	subs	r3, #1
9002a180:	60a3      	str	r3, [r4, #8]
9002a182:	6823      	ldr	r3, [r4, #0]
9002a184:	1c5a      	adds	r2, r3, #1
9002a186:	6022      	str	r2, [r4, #0]
9002a188:	701e      	strb	r6, [r3, #0]
9002a18a:	6962      	ldr	r2, [r4, #20]
9002a18c:	1c43      	adds	r3, r0, #1
9002a18e:	429a      	cmp	r2, r3
9002a190:	d004      	beq.n	9002a19c <__swbuf_r+0x5a>
9002a192:	89a3      	ldrh	r3, [r4, #12]
9002a194:	07db      	lsls	r3, r3, #31
9002a196:	d506      	bpl.n	9002a1a6 <__swbuf_r+0x64>
9002a198:	2e0a      	cmp	r6, #10
9002a19a:	d104      	bne.n	9002a1a6 <__swbuf_r+0x64>
9002a19c:	4621      	mov	r1, r4
9002a19e:	4628      	mov	r0, r5
9002a1a0:	f000 feb0 	bl	9002af04 <_fflush_r>
9002a1a4:	b938      	cbnz	r0, 9002a1b6 <__swbuf_r+0x74>
9002a1a6:	4638      	mov	r0, r7
9002a1a8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9002a1aa:	4621      	mov	r1, r4
9002a1ac:	4628      	mov	r0, r5
9002a1ae:	f000 f805 	bl	9002a1bc <__swsetup_r>
9002a1b2:	2800      	cmp	r0, #0
9002a1b4:	d0d5      	beq.n	9002a162 <__swbuf_r+0x20>
9002a1b6:	f04f 37ff 	mov.w	r7, #4294967295
9002a1ba:	e7f4      	b.n	9002a1a6 <__swbuf_r+0x64>

9002a1bc <__swsetup_r>:
9002a1bc:	b538      	push	{r3, r4, r5, lr}
9002a1be:	4b2a      	ldr	r3, [pc, #168]	; (9002a268 <__swsetup_r+0xac>)
9002a1c0:	4605      	mov	r5, r0
9002a1c2:	6818      	ldr	r0, [r3, #0]
9002a1c4:	460c      	mov	r4, r1
9002a1c6:	b118      	cbz	r0, 9002a1d0 <__swsetup_r+0x14>
9002a1c8:	6a03      	ldr	r3, [r0, #32]
9002a1ca:	b90b      	cbnz	r3, 9002a1d0 <__swsetup_r+0x14>
9002a1cc:	f7ff ff0e 	bl	90029fec <__sinit>
9002a1d0:	89a3      	ldrh	r3, [r4, #12]
9002a1d2:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
9002a1d6:	0718      	lsls	r0, r3, #28
9002a1d8:	d422      	bmi.n	9002a220 <__swsetup_r+0x64>
9002a1da:	06d9      	lsls	r1, r3, #27
9002a1dc:	d407      	bmi.n	9002a1ee <__swsetup_r+0x32>
9002a1de:	2309      	movs	r3, #9
9002a1e0:	602b      	str	r3, [r5, #0]
9002a1e2:	f042 0340 	orr.w	r3, r2, #64	; 0x40
9002a1e6:	81a3      	strh	r3, [r4, #12]
9002a1e8:	f04f 30ff 	mov.w	r0, #4294967295
9002a1ec:	e034      	b.n	9002a258 <__swsetup_r+0x9c>
9002a1ee:	0758      	lsls	r0, r3, #29
9002a1f0:	d512      	bpl.n	9002a218 <__swsetup_r+0x5c>
9002a1f2:	6b61      	ldr	r1, [r4, #52]	; 0x34
9002a1f4:	b141      	cbz	r1, 9002a208 <__swsetup_r+0x4c>
9002a1f6:	f104 0344 	add.w	r3, r4, #68	; 0x44
9002a1fa:	4299      	cmp	r1, r3
9002a1fc:	d002      	beq.n	9002a204 <__swsetup_r+0x48>
9002a1fe:	4628      	mov	r0, r5
9002a200:	f000 f982 	bl	9002a508 <_free_r>
9002a204:	2300      	movs	r3, #0
9002a206:	6363      	str	r3, [r4, #52]	; 0x34
9002a208:	89a3      	ldrh	r3, [r4, #12]
9002a20a:	f023 0324 	bic.w	r3, r3, #36	; 0x24
9002a20e:	81a3      	strh	r3, [r4, #12]
9002a210:	2300      	movs	r3, #0
9002a212:	6063      	str	r3, [r4, #4]
9002a214:	6923      	ldr	r3, [r4, #16]
9002a216:	6023      	str	r3, [r4, #0]
9002a218:	89a3      	ldrh	r3, [r4, #12]
9002a21a:	f043 0308 	orr.w	r3, r3, #8
9002a21e:	81a3      	strh	r3, [r4, #12]
9002a220:	6923      	ldr	r3, [r4, #16]
9002a222:	b94b      	cbnz	r3, 9002a238 <__swsetup_r+0x7c>
9002a224:	89a3      	ldrh	r3, [r4, #12]
9002a226:	f403 7320 	and.w	r3, r3, #640	; 0x280
9002a22a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
9002a22e:	d003      	beq.n	9002a238 <__swsetup_r+0x7c>
9002a230:	4621      	mov	r1, r4
9002a232:	4628      	mov	r0, r5
9002a234:	f000 feb4 	bl	9002afa0 <__smakebuf_r>
9002a238:	89a0      	ldrh	r0, [r4, #12]
9002a23a:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
9002a23e:	f010 0301 	ands.w	r3, r0, #1
9002a242:	d00a      	beq.n	9002a25a <__swsetup_r+0x9e>
9002a244:	2300      	movs	r3, #0
9002a246:	60a3      	str	r3, [r4, #8]
9002a248:	6963      	ldr	r3, [r4, #20]
9002a24a:	425b      	negs	r3, r3
9002a24c:	61a3      	str	r3, [r4, #24]
9002a24e:	6923      	ldr	r3, [r4, #16]
9002a250:	b943      	cbnz	r3, 9002a264 <__swsetup_r+0xa8>
9002a252:	f010 0080 	ands.w	r0, r0, #128	; 0x80
9002a256:	d1c4      	bne.n	9002a1e2 <__swsetup_r+0x26>
9002a258:	bd38      	pop	{r3, r4, r5, pc}
9002a25a:	0781      	lsls	r1, r0, #30
9002a25c:	bf58      	it	pl
9002a25e:	6963      	ldrpl	r3, [r4, #20]
9002a260:	60a3      	str	r3, [r4, #8]
9002a262:	e7f4      	b.n	9002a24e <__swsetup_r+0x92>
9002a264:	2000      	movs	r0, #0
9002a266:	e7f7      	b.n	9002a258 <__swsetup_r+0x9c>
9002a268:	2400014c 	.word	0x2400014c

9002a26c <memset>:
9002a26c:	4402      	add	r2, r0
9002a26e:	4603      	mov	r3, r0
9002a270:	4293      	cmp	r3, r2
9002a272:	d100      	bne.n	9002a276 <memset+0xa>
9002a274:	4770      	bx	lr
9002a276:	f803 1b01 	strb.w	r1, [r3], #1
9002a27a:	e7f9      	b.n	9002a270 <memset+0x4>

9002a27c <strncmp>:
9002a27c:	b510      	push	{r4, lr}
9002a27e:	b16a      	cbz	r2, 9002a29c <strncmp+0x20>
9002a280:	3901      	subs	r1, #1
9002a282:	1884      	adds	r4, r0, r2
9002a284:	f810 2b01 	ldrb.w	r2, [r0], #1
9002a288:	f811 3f01 	ldrb.w	r3, [r1, #1]!
9002a28c:	429a      	cmp	r2, r3
9002a28e:	d103      	bne.n	9002a298 <strncmp+0x1c>
9002a290:	42a0      	cmp	r0, r4
9002a292:	d001      	beq.n	9002a298 <strncmp+0x1c>
9002a294:	2a00      	cmp	r2, #0
9002a296:	d1f5      	bne.n	9002a284 <strncmp+0x8>
9002a298:	1ad0      	subs	r0, r2, r3
9002a29a:	bd10      	pop	{r4, pc}
9002a29c:	4610      	mov	r0, r2
9002a29e:	e7fc      	b.n	9002a29a <strncmp+0x1e>

9002a2a0 <_raise_r>:
9002a2a0:	291f      	cmp	r1, #31
9002a2a2:	b538      	push	{r3, r4, r5, lr}
9002a2a4:	4604      	mov	r4, r0
9002a2a6:	460d      	mov	r5, r1
9002a2a8:	d904      	bls.n	9002a2b4 <_raise_r+0x14>
9002a2aa:	2316      	movs	r3, #22
9002a2ac:	6003      	str	r3, [r0, #0]
9002a2ae:	f04f 30ff 	mov.w	r0, #4294967295
9002a2b2:	bd38      	pop	{r3, r4, r5, pc}
9002a2b4:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
9002a2b6:	b112      	cbz	r2, 9002a2be <_raise_r+0x1e>
9002a2b8:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
9002a2bc:	b94b      	cbnz	r3, 9002a2d2 <_raise_r+0x32>
9002a2be:	4620      	mov	r0, r4
9002a2c0:	f000 f864 	bl	9002a38c <_getpid_r>
9002a2c4:	462a      	mov	r2, r5
9002a2c6:	4601      	mov	r1, r0
9002a2c8:	4620      	mov	r0, r4
9002a2ca:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
9002a2ce:	f000 b84b 	b.w	9002a368 <_kill_r>
9002a2d2:	2b01      	cmp	r3, #1
9002a2d4:	d00a      	beq.n	9002a2ec <_raise_r+0x4c>
9002a2d6:	1c59      	adds	r1, r3, #1
9002a2d8:	d103      	bne.n	9002a2e2 <_raise_r+0x42>
9002a2da:	2316      	movs	r3, #22
9002a2dc:	6003      	str	r3, [r0, #0]
9002a2de:	2001      	movs	r0, #1
9002a2e0:	e7e7      	b.n	9002a2b2 <_raise_r+0x12>
9002a2e2:	2400      	movs	r4, #0
9002a2e4:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
9002a2e8:	4628      	mov	r0, r5
9002a2ea:	4798      	blx	r3
9002a2ec:	2000      	movs	r0, #0
9002a2ee:	e7e0      	b.n	9002a2b2 <_raise_r+0x12>

9002a2f0 <raise>:
9002a2f0:	4b02      	ldr	r3, [pc, #8]	; (9002a2fc <raise+0xc>)
9002a2f2:	4601      	mov	r1, r0
9002a2f4:	6818      	ldr	r0, [r3, #0]
9002a2f6:	f7ff bfd3 	b.w	9002a2a0 <_raise_r>
9002a2fa:	bf00      	nop
9002a2fc:	2400014c 	.word	0x2400014c

9002a300 <_close_r>:
9002a300:	b538      	push	{r3, r4, r5, lr}
9002a302:	4d06      	ldr	r5, [pc, #24]	; (9002a31c <_close_r+0x1c>)
9002a304:	2300      	movs	r3, #0
9002a306:	4604      	mov	r4, r0
9002a308:	4608      	mov	r0, r1
9002a30a:	602b      	str	r3, [r5, #0]
9002a30c:	f7db fc52 	bl	90005bb4 <_close>
9002a310:	1c43      	adds	r3, r0, #1
9002a312:	d102      	bne.n	9002a31a <_close_r+0x1a>
9002a314:	682b      	ldr	r3, [r5, #0]
9002a316:	b103      	cbz	r3, 9002a31a <_close_r+0x1a>
9002a318:	6023      	str	r3, [r4, #0]
9002a31a:	bd38      	pop	{r3, r4, r5, pc}
9002a31c:	24024164 	.word	0x24024164

9002a320 <_lseek_r>:
9002a320:	b538      	push	{r3, r4, r5, lr}
9002a322:	4d07      	ldr	r5, [pc, #28]	; (9002a340 <_lseek_r+0x20>)
9002a324:	4604      	mov	r4, r0
9002a326:	4608      	mov	r0, r1
9002a328:	4611      	mov	r1, r2
9002a32a:	2200      	movs	r2, #0
9002a32c:	602a      	str	r2, [r5, #0]
9002a32e:	461a      	mov	r2, r3
9002a330:	f7db fc4c 	bl	90005bcc <_lseek>
9002a334:	1c43      	adds	r3, r0, #1
9002a336:	d102      	bne.n	9002a33e <_lseek_r+0x1e>
9002a338:	682b      	ldr	r3, [r5, #0]
9002a33a:	b103      	cbz	r3, 9002a33e <_lseek_r+0x1e>
9002a33c:	6023      	str	r3, [r4, #0]
9002a33e:	bd38      	pop	{r3, r4, r5, pc}
9002a340:	24024164 	.word	0x24024164

9002a344 <_read_r>:
9002a344:	b538      	push	{r3, r4, r5, lr}
9002a346:	4d07      	ldr	r5, [pc, #28]	; (9002a364 <_read_r+0x20>)
9002a348:	4604      	mov	r4, r0
9002a34a:	4608      	mov	r0, r1
9002a34c:	4611      	mov	r1, r2
9002a34e:	2200      	movs	r2, #0
9002a350:	602a      	str	r2, [r5, #0]
9002a352:	461a      	mov	r2, r3
9002a354:	f7db fc12 	bl	90005b7c <_read>
9002a358:	1c43      	adds	r3, r0, #1
9002a35a:	d102      	bne.n	9002a362 <_read_r+0x1e>
9002a35c:	682b      	ldr	r3, [r5, #0]
9002a35e:	b103      	cbz	r3, 9002a362 <_read_r+0x1e>
9002a360:	6023      	str	r3, [r4, #0]
9002a362:	bd38      	pop	{r3, r4, r5, pc}
9002a364:	24024164 	.word	0x24024164

9002a368 <_kill_r>:
9002a368:	b538      	push	{r3, r4, r5, lr}
9002a36a:	4d07      	ldr	r5, [pc, #28]	; (9002a388 <_kill_r+0x20>)
9002a36c:	2300      	movs	r3, #0
9002a36e:	4604      	mov	r4, r0
9002a370:	4608      	mov	r0, r1
9002a372:	4611      	mov	r1, r2
9002a374:	602b      	str	r3, [r5, #0]
9002a376:	f7db fbf1 	bl	90005b5c <_kill>
9002a37a:	1c43      	adds	r3, r0, #1
9002a37c:	d102      	bne.n	9002a384 <_kill_r+0x1c>
9002a37e:	682b      	ldr	r3, [r5, #0]
9002a380:	b103      	cbz	r3, 9002a384 <_kill_r+0x1c>
9002a382:	6023      	str	r3, [r4, #0]
9002a384:	bd38      	pop	{r3, r4, r5, pc}
9002a386:	bf00      	nop
9002a388:	24024164 	.word	0x24024164

9002a38c <_getpid_r>:
9002a38c:	f7db bbe4 	b.w	90005b58 <_getpid>

9002a390 <_sbrk_r>:
9002a390:	b538      	push	{r3, r4, r5, lr}
9002a392:	4d06      	ldr	r5, [pc, #24]	; (9002a3ac <_sbrk_r+0x1c>)
9002a394:	2300      	movs	r3, #0
9002a396:	4604      	mov	r4, r0
9002a398:	4608      	mov	r0, r1
9002a39a:	602b      	str	r3, [r5, #0]
9002a39c:	f000 feb0 	bl	9002b100 <_sbrk>
9002a3a0:	1c43      	adds	r3, r0, #1
9002a3a2:	d102      	bne.n	9002a3aa <_sbrk_r+0x1a>
9002a3a4:	682b      	ldr	r3, [r5, #0]
9002a3a6:	b103      	cbz	r3, 9002a3aa <_sbrk_r+0x1a>
9002a3a8:	6023      	str	r3, [r4, #0]
9002a3aa:	bd38      	pop	{r3, r4, r5, pc}
9002a3ac:	24024164 	.word	0x24024164

9002a3b0 <_write_r>:
9002a3b0:	b538      	push	{r3, r4, r5, lr}
9002a3b2:	4d07      	ldr	r5, [pc, #28]	; (9002a3d0 <_write_r+0x20>)
9002a3b4:	4604      	mov	r4, r0
9002a3b6:	4608      	mov	r0, r1
9002a3b8:	4611      	mov	r1, r2
9002a3ba:	2200      	movs	r2, #0
9002a3bc:	602a      	str	r2, [r5, #0]
9002a3be:	461a      	mov	r2, r3
9002a3c0:	f7db fbea 	bl	90005b98 <_write>
9002a3c4:	1c43      	adds	r3, r0, #1
9002a3c6:	d102      	bne.n	9002a3ce <_write_r+0x1e>
9002a3c8:	682b      	ldr	r3, [r5, #0]
9002a3ca:	b103      	cbz	r3, 9002a3ce <_write_r+0x1e>
9002a3cc:	6023      	str	r3, [r4, #0]
9002a3ce:	bd38      	pop	{r3, r4, r5, pc}
9002a3d0:	24024164 	.word	0x24024164

9002a3d4 <__errno>:
9002a3d4:	4b01      	ldr	r3, [pc, #4]	; (9002a3dc <__errno+0x8>)
9002a3d6:	6818      	ldr	r0, [r3, #0]
9002a3d8:	4770      	bx	lr
9002a3da:	bf00      	nop
9002a3dc:	2400014c 	.word	0x2400014c

9002a3e0 <__libc_init_array>:
9002a3e0:	b570      	push	{r4, r5, r6, lr}
9002a3e2:	4d0d      	ldr	r5, [pc, #52]	; (9002a418 <__libc_init_array+0x38>)
9002a3e4:	4c0d      	ldr	r4, [pc, #52]	; (9002a41c <__libc_init_array+0x3c>)
9002a3e6:	1b64      	subs	r4, r4, r5
9002a3e8:	10a4      	asrs	r4, r4, #2
9002a3ea:	2600      	movs	r6, #0
9002a3ec:	42a6      	cmp	r6, r4
9002a3ee:	d109      	bne.n	9002a404 <__libc_init_array+0x24>
9002a3f0:	4d0b      	ldr	r5, [pc, #44]	; (9002a420 <__libc_init_array+0x40>)
9002a3f2:	4c0c      	ldr	r4, [pc, #48]	; (9002a424 <__libc_init_array+0x44>)
9002a3f4:	f000 fe92 	bl	9002b11c <_init>
9002a3f8:	1b64      	subs	r4, r4, r5
9002a3fa:	10a4      	asrs	r4, r4, #2
9002a3fc:	2600      	movs	r6, #0
9002a3fe:	42a6      	cmp	r6, r4
9002a400:	d105      	bne.n	9002a40e <__libc_init_array+0x2e>
9002a402:	bd70      	pop	{r4, r5, r6, pc}
9002a404:	f855 3b04 	ldr.w	r3, [r5], #4
9002a408:	4798      	blx	r3
9002a40a:	3601      	adds	r6, #1
9002a40c:	e7ee      	b.n	9002a3ec <__libc_init_array+0xc>
9002a40e:	f855 3b04 	ldr.w	r3, [r5], #4
9002a412:	4798      	blx	r3
9002a414:	3601      	adds	r6, #1
9002a416:	e7f2      	b.n	9002a3fe <__libc_init_array+0x1e>
9002a418:	9002f180 	.word	0x9002f180
9002a41c:	9002f180 	.word	0x9002f180
9002a420:	9002f180 	.word	0x9002f180
9002a424:	9002f198 	.word	0x9002f198

9002a428 <__retarget_lock_init_recursive>:
9002a428:	4770      	bx	lr

9002a42a <__retarget_lock_acquire_recursive>:
9002a42a:	4770      	bx	lr

9002a42c <__retarget_lock_release_recursive>:
9002a42c:	4770      	bx	lr

9002a42e <memcpy>:
9002a42e:	440a      	add	r2, r1
9002a430:	4291      	cmp	r1, r2
9002a432:	f100 33ff 	add.w	r3, r0, #4294967295
9002a436:	d100      	bne.n	9002a43a <memcpy+0xc>
9002a438:	4770      	bx	lr
9002a43a:	b510      	push	{r4, lr}
9002a43c:	f811 4b01 	ldrb.w	r4, [r1], #1
9002a440:	f803 4f01 	strb.w	r4, [r3, #1]!
9002a444:	4291      	cmp	r1, r2
9002a446:	d1f9      	bne.n	9002a43c <memcpy+0xe>
9002a448:	bd10      	pop	{r4, pc}
	...

9002a44c <__register_exitproc>:
9002a44c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9002a450:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 9002a504 <__register_exitproc+0xb8>
9002a454:	4606      	mov	r6, r0
9002a456:	f8d8 0000 	ldr.w	r0, [r8]
9002a45a:	461f      	mov	r7, r3
9002a45c:	460d      	mov	r5, r1
9002a45e:	4691      	mov	r9, r2
9002a460:	f7ff ffe3 	bl	9002a42a <__retarget_lock_acquire_recursive>
9002a464:	4b23      	ldr	r3, [pc, #140]	; (9002a4f4 <__register_exitproc+0xa8>)
9002a466:	681c      	ldr	r4, [r3, #0]
9002a468:	b934      	cbnz	r4, 9002a478 <__register_exitproc+0x2c>
9002a46a:	4c23      	ldr	r4, [pc, #140]	; (9002a4f8 <__register_exitproc+0xac>)
9002a46c:	601c      	str	r4, [r3, #0]
9002a46e:	4b23      	ldr	r3, [pc, #140]	; (9002a4fc <__register_exitproc+0xb0>)
9002a470:	b113      	cbz	r3, 9002a478 <__register_exitproc+0x2c>
9002a472:	681b      	ldr	r3, [r3, #0]
9002a474:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
9002a478:	6863      	ldr	r3, [r4, #4]
9002a47a:	2b1f      	cmp	r3, #31
9002a47c:	dd07      	ble.n	9002a48e <__register_exitproc+0x42>
9002a47e:	f8d8 0000 	ldr.w	r0, [r8]
9002a482:	f7ff ffd3 	bl	9002a42c <__retarget_lock_release_recursive>
9002a486:	f04f 30ff 	mov.w	r0, #4294967295
9002a48a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
9002a48e:	b32e      	cbz	r6, 9002a4dc <__register_exitproc+0x90>
9002a490:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
9002a494:	b968      	cbnz	r0, 9002a4b2 <__register_exitproc+0x66>
9002a496:	4b1a      	ldr	r3, [pc, #104]	; (9002a500 <__register_exitproc+0xb4>)
9002a498:	2b00      	cmp	r3, #0
9002a49a:	d0f0      	beq.n	9002a47e <__register_exitproc+0x32>
9002a49c:	f44f 7084 	mov.w	r0, #264	; 0x108
9002a4a0:	f7ff fc10 	bl	90029cc4 <malloc>
9002a4a4:	2800      	cmp	r0, #0
9002a4a6:	d0ea      	beq.n	9002a47e <__register_exitproc+0x32>
9002a4a8:	2300      	movs	r3, #0
9002a4aa:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
9002a4ae:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
9002a4b2:	6863      	ldr	r3, [r4, #4]
9002a4b4:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
9002a4b8:	2201      	movs	r2, #1
9002a4ba:	409a      	lsls	r2, r3
9002a4bc:	eb00 0183 	add.w	r1, r0, r3, lsl #2
9002a4c0:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
9002a4c4:	4313      	orrs	r3, r2
9002a4c6:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
9002a4ca:	2e02      	cmp	r6, #2
9002a4cc:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
9002a4d0:	bf02      	ittt	eq
9002a4d2:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
9002a4d6:	4313      	orreq	r3, r2
9002a4d8:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
9002a4dc:	6863      	ldr	r3, [r4, #4]
9002a4de:	f8d8 0000 	ldr.w	r0, [r8]
9002a4e2:	1c5a      	adds	r2, r3, #1
9002a4e4:	3302      	adds	r3, #2
9002a4e6:	6062      	str	r2, [r4, #4]
9002a4e8:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
9002a4ec:	f7ff ff9e 	bl	9002a42c <__retarget_lock_release_recursive>
9002a4f0:	2000      	movs	r0, #0
9002a4f2:	e7ca      	b.n	9002a48a <__register_exitproc+0x3e>
9002a4f4:	240241f8 	.word	0x240241f8
9002a4f8:	2402416c 	.word	0x2402416c
9002a4fc:	9002eae8 	.word	0x9002eae8
9002a500:	90029cc5 	.word	0x90029cc5
9002a504:	24000150 	.word	0x24000150

9002a508 <_free_r>:
9002a508:	b537      	push	{r0, r1, r2, r4, r5, lr}
9002a50a:	2900      	cmp	r1, #0
9002a50c:	d044      	beq.n	9002a598 <_free_r+0x90>
9002a50e:	f851 3c04 	ldr.w	r3, [r1, #-4]
9002a512:	9001      	str	r0, [sp, #4]
9002a514:	2b00      	cmp	r3, #0
9002a516:	f1a1 0404 	sub.w	r4, r1, #4
9002a51a:	bfb8      	it	lt
9002a51c:	18e4      	addlt	r4, r4, r3
9002a51e:	f7ff fc81 	bl	90029e24 <__malloc_lock>
9002a522:	4a1e      	ldr	r2, [pc, #120]	; (9002a59c <_free_r+0x94>)
9002a524:	9801      	ldr	r0, [sp, #4]
9002a526:	6813      	ldr	r3, [r2, #0]
9002a528:	b933      	cbnz	r3, 9002a538 <_free_r+0x30>
9002a52a:	6063      	str	r3, [r4, #4]
9002a52c:	6014      	str	r4, [r2, #0]
9002a52e:	b003      	add	sp, #12
9002a530:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
9002a534:	f7ff bc7c 	b.w	90029e30 <__malloc_unlock>
9002a538:	42a3      	cmp	r3, r4
9002a53a:	d908      	bls.n	9002a54e <_free_r+0x46>
9002a53c:	6825      	ldr	r5, [r4, #0]
9002a53e:	1961      	adds	r1, r4, r5
9002a540:	428b      	cmp	r3, r1
9002a542:	bf01      	itttt	eq
9002a544:	6819      	ldreq	r1, [r3, #0]
9002a546:	685b      	ldreq	r3, [r3, #4]
9002a548:	1949      	addeq	r1, r1, r5
9002a54a:	6021      	streq	r1, [r4, #0]
9002a54c:	e7ed      	b.n	9002a52a <_free_r+0x22>
9002a54e:	461a      	mov	r2, r3
9002a550:	685b      	ldr	r3, [r3, #4]
9002a552:	b10b      	cbz	r3, 9002a558 <_free_r+0x50>
9002a554:	42a3      	cmp	r3, r4
9002a556:	d9fa      	bls.n	9002a54e <_free_r+0x46>
9002a558:	6811      	ldr	r1, [r2, #0]
9002a55a:	1855      	adds	r5, r2, r1
9002a55c:	42a5      	cmp	r5, r4
9002a55e:	d10b      	bne.n	9002a578 <_free_r+0x70>
9002a560:	6824      	ldr	r4, [r4, #0]
9002a562:	4421      	add	r1, r4
9002a564:	1854      	adds	r4, r2, r1
9002a566:	42a3      	cmp	r3, r4
9002a568:	6011      	str	r1, [r2, #0]
9002a56a:	d1e0      	bne.n	9002a52e <_free_r+0x26>
9002a56c:	681c      	ldr	r4, [r3, #0]
9002a56e:	685b      	ldr	r3, [r3, #4]
9002a570:	6053      	str	r3, [r2, #4]
9002a572:	440c      	add	r4, r1
9002a574:	6014      	str	r4, [r2, #0]
9002a576:	e7da      	b.n	9002a52e <_free_r+0x26>
9002a578:	d902      	bls.n	9002a580 <_free_r+0x78>
9002a57a:	230c      	movs	r3, #12
9002a57c:	6003      	str	r3, [r0, #0]
9002a57e:	e7d6      	b.n	9002a52e <_free_r+0x26>
9002a580:	6825      	ldr	r5, [r4, #0]
9002a582:	1961      	adds	r1, r4, r5
9002a584:	428b      	cmp	r3, r1
9002a586:	bf04      	itt	eq
9002a588:	6819      	ldreq	r1, [r3, #0]
9002a58a:	685b      	ldreq	r3, [r3, #4]
9002a58c:	6063      	str	r3, [r4, #4]
9002a58e:	bf04      	itt	eq
9002a590:	1949      	addeq	r1, r1, r5
9002a592:	6021      	streq	r1, [r4, #0]
9002a594:	6054      	str	r4, [r2, #4]
9002a596:	e7ca      	b.n	9002a52e <_free_r+0x26>
9002a598:	b003      	add	sp, #12
9002a59a:	bd30      	pop	{r4, r5, pc}
9002a59c:	24024020 	.word	0x24024020

9002a5a0 <__ssputs_r>:
9002a5a0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9002a5a4:	688e      	ldr	r6, [r1, #8]
9002a5a6:	461f      	mov	r7, r3
9002a5a8:	42be      	cmp	r6, r7
9002a5aa:	680b      	ldr	r3, [r1, #0]
9002a5ac:	4682      	mov	sl, r0
9002a5ae:	460c      	mov	r4, r1
9002a5b0:	4690      	mov	r8, r2
9002a5b2:	d82c      	bhi.n	9002a60e <__ssputs_r+0x6e>
9002a5b4:	898a      	ldrh	r2, [r1, #12]
9002a5b6:	f412 6f90 	tst.w	r2, #1152	; 0x480
9002a5ba:	d026      	beq.n	9002a60a <__ssputs_r+0x6a>
9002a5bc:	6965      	ldr	r5, [r4, #20]
9002a5be:	6909      	ldr	r1, [r1, #16]
9002a5c0:	eb05 0545 	add.w	r5, r5, r5, lsl #1
9002a5c4:	eba3 0901 	sub.w	r9, r3, r1
9002a5c8:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
9002a5cc:	1c7b      	adds	r3, r7, #1
9002a5ce:	444b      	add	r3, r9
9002a5d0:	106d      	asrs	r5, r5, #1
9002a5d2:	429d      	cmp	r5, r3
9002a5d4:	bf38      	it	cc
9002a5d6:	461d      	movcc	r5, r3
9002a5d8:	0553      	lsls	r3, r2, #21
9002a5da:	d527      	bpl.n	9002a62c <__ssputs_r+0x8c>
9002a5dc:	4629      	mov	r1, r5
9002a5de:	f7ff fba1 	bl	90029d24 <_malloc_r>
9002a5e2:	4606      	mov	r6, r0
9002a5e4:	b360      	cbz	r0, 9002a640 <__ssputs_r+0xa0>
9002a5e6:	6921      	ldr	r1, [r4, #16]
9002a5e8:	464a      	mov	r2, r9
9002a5ea:	f7ff ff20 	bl	9002a42e <memcpy>
9002a5ee:	89a3      	ldrh	r3, [r4, #12]
9002a5f0:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
9002a5f4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
9002a5f8:	81a3      	strh	r3, [r4, #12]
9002a5fa:	6126      	str	r6, [r4, #16]
9002a5fc:	6165      	str	r5, [r4, #20]
9002a5fe:	444e      	add	r6, r9
9002a600:	eba5 0509 	sub.w	r5, r5, r9
9002a604:	6026      	str	r6, [r4, #0]
9002a606:	60a5      	str	r5, [r4, #8]
9002a608:	463e      	mov	r6, r7
9002a60a:	42be      	cmp	r6, r7
9002a60c:	d900      	bls.n	9002a610 <__ssputs_r+0x70>
9002a60e:	463e      	mov	r6, r7
9002a610:	6820      	ldr	r0, [r4, #0]
9002a612:	4632      	mov	r2, r6
9002a614:	4641      	mov	r1, r8
9002a616:	f000 fcff 	bl	9002b018 <memmove>
9002a61a:	68a3      	ldr	r3, [r4, #8]
9002a61c:	1b9b      	subs	r3, r3, r6
9002a61e:	60a3      	str	r3, [r4, #8]
9002a620:	6823      	ldr	r3, [r4, #0]
9002a622:	4433      	add	r3, r6
9002a624:	6023      	str	r3, [r4, #0]
9002a626:	2000      	movs	r0, #0
9002a628:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9002a62c:	462a      	mov	r2, r5
9002a62e:	f000 fd2f 	bl	9002b090 <_realloc_r>
9002a632:	4606      	mov	r6, r0
9002a634:	2800      	cmp	r0, #0
9002a636:	d1e0      	bne.n	9002a5fa <__ssputs_r+0x5a>
9002a638:	6921      	ldr	r1, [r4, #16]
9002a63a:	4650      	mov	r0, sl
9002a63c:	f7ff ff64 	bl	9002a508 <_free_r>
9002a640:	230c      	movs	r3, #12
9002a642:	f8ca 3000 	str.w	r3, [sl]
9002a646:	89a3      	ldrh	r3, [r4, #12]
9002a648:	f043 0340 	orr.w	r3, r3, #64	; 0x40
9002a64c:	81a3      	strh	r3, [r4, #12]
9002a64e:	f04f 30ff 	mov.w	r0, #4294967295
9002a652:	e7e9      	b.n	9002a628 <__ssputs_r+0x88>

9002a654 <_svfiprintf_r>:
9002a654:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002a658:	4698      	mov	r8, r3
9002a65a:	898b      	ldrh	r3, [r1, #12]
9002a65c:	061b      	lsls	r3, r3, #24
9002a65e:	b09d      	sub	sp, #116	; 0x74
9002a660:	4607      	mov	r7, r0
9002a662:	460d      	mov	r5, r1
9002a664:	4614      	mov	r4, r2
9002a666:	d50e      	bpl.n	9002a686 <_svfiprintf_r+0x32>
9002a668:	690b      	ldr	r3, [r1, #16]
9002a66a:	b963      	cbnz	r3, 9002a686 <_svfiprintf_r+0x32>
9002a66c:	2140      	movs	r1, #64	; 0x40
9002a66e:	f7ff fb59 	bl	90029d24 <_malloc_r>
9002a672:	6028      	str	r0, [r5, #0]
9002a674:	6128      	str	r0, [r5, #16]
9002a676:	b920      	cbnz	r0, 9002a682 <_svfiprintf_r+0x2e>
9002a678:	230c      	movs	r3, #12
9002a67a:	603b      	str	r3, [r7, #0]
9002a67c:	f04f 30ff 	mov.w	r0, #4294967295
9002a680:	e0d0      	b.n	9002a824 <_svfiprintf_r+0x1d0>
9002a682:	2340      	movs	r3, #64	; 0x40
9002a684:	616b      	str	r3, [r5, #20]
9002a686:	2300      	movs	r3, #0
9002a688:	9309      	str	r3, [sp, #36]	; 0x24
9002a68a:	2320      	movs	r3, #32
9002a68c:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
9002a690:	f8cd 800c 	str.w	r8, [sp, #12]
9002a694:	2330      	movs	r3, #48	; 0x30
9002a696:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 9002a83c <_svfiprintf_r+0x1e8>
9002a69a:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
9002a69e:	f04f 0901 	mov.w	r9, #1
9002a6a2:	4623      	mov	r3, r4
9002a6a4:	469a      	mov	sl, r3
9002a6a6:	f813 2b01 	ldrb.w	r2, [r3], #1
9002a6aa:	b10a      	cbz	r2, 9002a6b0 <_svfiprintf_r+0x5c>
9002a6ac:	2a25      	cmp	r2, #37	; 0x25
9002a6ae:	d1f9      	bne.n	9002a6a4 <_svfiprintf_r+0x50>
9002a6b0:	ebba 0b04 	subs.w	fp, sl, r4
9002a6b4:	d00b      	beq.n	9002a6ce <_svfiprintf_r+0x7a>
9002a6b6:	465b      	mov	r3, fp
9002a6b8:	4622      	mov	r2, r4
9002a6ba:	4629      	mov	r1, r5
9002a6bc:	4638      	mov	r0, r7
9002a6be:	f7ff ff6f 	bl	9002a5a0 <__ssputs_r>
9002a6c2:	3001      	adds	r0, #1
9002a6c4:	f000 80a9 	beq.w	9002a81a <_svfiprintf_r+0x1c6>
9002a6c8:	9a09      	ldr	r2, [sp, #36]	; 0x24
9002a6ca:	445a      	add	r2, fp
9002a6cc:	9209      	str	r2, [sp, #36]	; 0x24
9002a6ce:	f89a 3000 	ldrb.w	r3, [sl]
9002a6d2:	2b00      	cmp	r3, #0
9002a6d4:	f000 80a1 	beq.w	9002a81a <_svfiprintf_r+0x1c6>
9002a6d8:	2300      	movs	r3, #0
9002a6da:	f04f 32ff 	mov.w	r2, #4294967295
9002a6de:	e9cd 2305 	strd	r2, r3, [sp, #20]
9002a6e2:	f10a 0a01 	add.w	sl, sl, #1
9002a6e6:	9304      	str	r3, [sp, #16]
9002a6e8:	9307      	str	r3, [sp, #28]
9002a6ea:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
9002a6ee:	931a      	str	r3, [sp, #104]	; 0x68
9002a6f0:	4654      	mov	r4, sl
9002a6f2:	2205      	movs	r2, #5
9002a6f4:	f814 1b01 	ldrb.w	r1, [r4], #1
9002a6f8:	4850      	ldr	r0, [pc, #320]	; (9002a83c <_svfiprintf_r+0x1e8>)
9002a6fa:	f7d5 fdf9 	bl	900002f0 <memchr>
9002a6fe:	9a04      	ldr	r2, [sp, #16]
9002a700:	b9d8      	cbnz	r0, 9002a73a <_svfiprintf_r+0xe6>
9002a702:	06d0      	lsls	r0, r2, #27
9002a704:	bf44      	itt	mi
9002a706:	2320      	movmi	r3, #32
9002a708:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
9002a70c:	0711      	lsls	r1, r2, #28
9002a70e:	bf44      	itt	mi
9002a710:	232b      	movmi	r3, #43	; 0x2b
9002a712:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
9002a716:	f89a 3000 	ldrb.w	r3, [sl]
9002a71a:	2b2a      	cmp	r3, #42	; 0x2a
9002a71c:	d015      	beq.n	9002a74a <_svfiprintf_r+0xf6>
9002a71e:	9a07      	ldr	r2, [sp, #28]
9002a720:	4654      	mov	r4, sl
9002a722:	2000      	movs	r0, #0
9002a724:	f04f 0c0a 	mov.w	ip, #10
9002a728:	4621      	mov	r1, r4
9002a72a:	f811 3b01 	ldrb.w	r3, [r1], #1
9002a72e:	3b30      	subs	r3, #48	; 0x30
9002a730:	2b09      	cmp	r3, #9
9002a732:	d94d      	bls.n	9002a7d0 <_svfiprintf_r+0x17c>
9002a734:	b1b0      	cbz	r0, 9002a764 <_svfiprintf_r+0x110>
9002a736:	9207      	str	r2, [sp, #28]
9002a738:	e014      	b.n	9002a764 <_svfiprintf_r+0x110>
9002a73a:	eba0 0308 	sub.w	r3, r0, r8
9002a73e:	fa09 f303 	lsl.w	r3, r9, r3
9002a742:	4313      	orrs	r3, r2
9002a744:	9304      	str	r3, [sp, #16]
9002a746:	46a2      	mov	sl, r4
9002a748:	e7d2      	b.n	9002a6f0 <_svfiprintf_r+0x9c>
9002a74a:	9b03      	ldr	r3, [sp, #12]
9002a74c:	1d19      	adds	r1, r3, #4
9002a74e:	681b      	ldr	r3, [r3, #0]
9002a750:	9103      	str	r1, [sp, #12]
9002a752:	2b00      	cmp	r3, #0
9002a754:	bfbb      	ittet	lt
9002a756:	425b      	neglt	r3, r3
9002a758:	f042 0202 	orrlt.w	r2, r2, #2
9002a75c:	9307      	strge	r3, [sp, #28]
9002a75e:	9307      	strlt	r3, [sp, #28]
9002a760:	bfb8      	it	lt
9002a762:	9204      	strlt	r2, [sp, #16]
9002a764:	7823      	ldrb	r3, [r4, #0]
9002a766:	2b2e      	cmp	r3, #46	; 0x2e
9002a768:	d10c      	bne.n	9002a784 <_svfiprintf_r+0x130>
9002a76a:	7863      	ldrb	r3, [r4, #1]
9002a76c:	2b2a      	cmp	r3, #42	; 0x2a
9002a76e:	d134      	bne.n	9002a7da <_svfiprintf_r+0x186>
9002a770:	9b03      	ldr	r3, [sp, #12]
9002a772:	1d1a      	adds	r2, r3, #4
9002a774:	681b      	ldr	r3, [r3, #0]
9002a776:	9203      	str	r2, [sp, #12]
9002a778:	2b00      	cmp	r3, #0
9002a77a:	bfb8      	it	lt
9002a77c:	f04f 33ff 	movlt.w	r3, #4294967295
9002a780:	3402      	adds	r4, #2
9002a782:	9305      	str	r3, [sp, #20]
9002a784:	f8df a0c4 	ldr.w	sl, [pc, #196]	; 9002a84c <_svfiprintf_r+0x1f8>
9002a788:	7821      	ldrb	r1, [r4, #0]
9002a78a:	2203      	movs	r2, #3
9002a78c:	4650      	mov	r0, sl
9002a78e:	f7d5 fdaf 	bl	900002f0 <memchr>
9002a792:	b138      	cbz	r0, 9002a7a4 <_svfiprintf_r+0x150>
9002a794:	9b04      	ldr	r3, [sp, #16]
9002a796:	eba0 000a 	sub.w	r0, r0, sl
9002a79a:	2240      	movs	r2, #64	; 0x40
9002a79c:	4082      	lsls	r2, r0
9002a79e:	4313      	orrs	r3, r2
9002a7a0:	3401      	adds	r4, #1
9002a7a2:	9304      	str	r3, [sp, #16]
9002a7a4:	f814 1b01 	ldrb.w	r1, [r4], #1
9002a7a8:	4825      	ldr	r0, [pc, #148]	; (9002a840 <_svfiprintf_r+0x1ec>)
9002a7aa:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
9002a7ae:	2206      	movs	r2, #6
9002a7b0:	f7d5 fd9e 	bl	900002f0 <memchr>
9002a7b4:	2800      	cmp	r0, #0
9002a7b6:	d038      	beq.n	9002a82a <_svfiprintf_r+0x1d6>
9002a7b8:	4b22      	ldr	r3, [pc, #136]	; (9002a844 <_svfiprintf_r+0x1f0>)
9002a7ba:	bb1b      	cbnz	r3, 9002a804 <_svfiprintf_r+0x1b0>
9002a7bc:	9b03      	ldr	r3, [sp, #12]
9002a7be:	3307      	adds	r3, #7
9002a7c0:	f023 0307 	bic.w	r3, r3, #7
9002a7c4:	3308      	adds	r3, #8
9002a7c6:	9303      	str	r3, [sp, #12]
9002a7c8:	9b09      	ldr	r3, [sp, #36]	; 0x24
9002a7ca:	4433      	add	r3, r6
9002a7cc:	9309      	str	r3, [sp, #36]	; 0x24
9002a7ce:	e768      	b.n	9002a6a2 <_svfiprintf_r+0x4e>
9002a7d0:	fb0c 3202 	mla	r2, ip, r2, r3
9002a7d4:	460c      	mov	r4, r1
9002a7d6:	2001      	movs	r0, #1
9002a7d8:	e7a6      	b.n	9002a728 <_svfiprintf_r+0xd4>
9002a7da:	2300      	movs	r3, #0
9002a7dc:	3401      	adds	r4, #1
9002a7de:	9305      	str	r3, [sp, #20]
9002a7e0:	4619      	mov	r1, r3
9002a7e2:	f04f 0c0a 	mov.w	ip, #10
9002a7e6:	4620      	mov	r0, r4
9002a7e8:	f810 2b01 	ldrb.w	r2, [r0], #1
9002a7ec:	3a30      	subs	r2, #48	; 0x30
9002a7ee:	2a09      	cmp	r2, #9
9002a7f0:	d903      	bls.n	9002a7fa <_svfiprintf_r+0x1a6>
9002a7f2:	2b00      	cmp	r3, #0
9002a7f4:	d0c6      	beq.n	9002a784 <_svfiprintf_r+0x130>
9002a7f6:	9105      	str	r1, [sp, #20]
9002a7f8:	e7c4      	b.n	9002a784 <_svfiprintf_r+0x130>
9002a7fa:	fb0c 2101 	mla	r1, ip, r1, r2
9002a7fe:	4604      	mov	r4, r0
9002a800:	2301      	movs	r3, #1
9002a802:	e7f0      	b.n	9002a7e6 <_svfiprintf_r+0x192>
9002a804:	ab03      	add	r3, sp, #12
9002a806:	9300      	str	r3, [sp, #0]
9002a808:	462a      	mov	r2, r5
9002a80a:	4b0f      	ldr	r3, [pc, #60]	; (9002a848 <_svfiprintf_r+0x1f4>)
9002a80c:	a904      	add	r1, sp, #16
9002a80e:	4638      	mov	r0, r7
9002a810:	f3af 8000 	nop.w
9002a814:	1c42      	adds	r2, r0, #1
9002a816:	4606      	mov	r6, r0
9002a818:	d1d6      	bne.n	9002a7c8 <_svfiprintf_r+0x174>
9002a81a:	89ab      	ldrh	r3, [r5, #12]
9002a81c:	065b      	lsls	r3, r3, #25
9002a81e:	f53f af2d 	bmi.w	9002a67c <_svfiprintf_r+0x28>
9002a822:	9809      	ldr	r0, [sp, #36]	; 0x24
9002a824:	b01d      	add	sp, #116	; 0x74
9002a826:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002a82a:	ab03      	add	r3, sp, #12
9002a82c:	9300      	str	r3, [sp, #0]
9002a82e:	462a      	mov	r2, r5
9002a830:	4b05      	ldr	r3, [pc, #20]	; (9002a848 <_svfiprintf_r+0x1f4>)
9002a832:	a904      	add	r1, sp, #16
9002a834:	4638      	mov	r0, r7
9002a836:	f000 f9bd 	bl	9002abb4 <_printf_i>
9002a83a:	e7eb      	b.n	9002a814 <_svfiprintf_r+0x1c0>
9002a83c:	9002eaec 	.word	0x9002eaec
9002a840:	9002eaf6 	.word	0x9002eaf6
9002a844:	00000000 	.word	0x00000000
9002a848:	9002a5a1 	.word	0x9002a5a1
9002a84c:	9002eaf2 	.word	0x9002eaf2

9002a850 <__sfputc_r>:
9002a850:	6893      	ldr	r3, [r2, #8]
9002a852:	3b01      	subs	r3, #1
9002a854:	2b00      	cmp	r3, #0
9002a856:	b410      	push	{r4}
9002a858:	6093      	str	r3, [r2, #8]
9002a85a:	da08      	bge.n	9002a86e <__sfputc_r+0x1e>
9002a85c:	6994      	ldr	r4, [r2, #24]
9002a85e:	42a3      	cmp	r3, r4
9002a860:	db01      	blt.n	9002a866 <__sfputc_r+0x16>
9002a862:	290a      	cmp	r1, #10
9002a864:	d103      	bne.n	9002a86e <__sfputc_r+0x1e>
9002a866:	f85d 4b04 	ldr.w	r4, [sp], #4
9002a86a:	f7ff bc6a 	b.w	9002a142 <__swbuf_r>
9002a86e:	6813      	ldr	r3, [r2, #0]
9002a870:	1c58      	adds	r0, r3, #1
9002a872:	6010      	str	r0, [r2, #0]
9002a874:	7019      	strb	r1, [r3, #0]
9002a876:	4608      	mov	r0, r1
9002a878:	f85d 4b04 	ldr.w	r4, [sp], #4
9002a87c:	4770      	bx	lr

9002a87e <__sfputs_r>:
9002a87e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9002a880:	4606      	mov	r6, r0
9002a882:	460f      	mov	r7, r1
9002a884:	4614      	mov	r4, r2
9002a886:	18d5      	adds	r5, r2, r3
9002a888:	42ac      	cmp	r4, r5
9002a88a:	d101      	bne.n	9002a890 <__sfputs_r+0x12>
9002a88c:	2000      	movs	r0, #0
9002a88e:	e007      	b.n	9002a8a0 <__sfputs_r+0x22>
9002a890:	f814 1b01 	ldrb.w	r1, [r4], #1
9002a894:	463a      	mov	r2, r7
9002a896:	4630      	mov	r0, r6
9002a898:	f7ff ffda 	bl	9002a850 <__sfputc_r>
9002a89c:	1c43      	adds	r3, r0, #1
9002a89e:	d1f3      	bne.n	9002a888 <__sfputs_r+0xa>
9002a8a0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

9002a8a4 <_vfiprintf_r>:
9002a8a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002a8a8:	460d      	mov	r5, r1
9002a8aa:	b09d      	sub	sp, #116	; 0x74
9002a8ac:	4614      	mov	r4, r2
9002a8ae:	4698      	mov	r8, r3
9002a8b0:	4606      	mov	r6, r0
9002a8b2:	b118      	cbz	r0, 9002a8bc <_vfiprintf_r+0x18>
9002a8b4:	6a03      	ldr	r3, [r0, #32]
9002a8b6:	b90b      	cbnz	r3, 9002a8bc <_vfiprintf_r+0x18>
9002a8b8:	f7ff fb98 	bl	90029fec <__sinit>
9002a8bc:	6e6b      	ldr	r3, [r5, #100]	; 0x64
9002a8be:	07d9      	lsls	r1, r3, #31
9002a8c0:	d405      	bmi.n	9002a8ce <_vfiprintf_r+0x2a>
9002a8c2:	89ab      	ldrh	r3, [r5, #12]
9002a8c4:	059a      	lsls	r2, r3, #22
9002a8c6:	d402      	bmi.n	9002a8ce <_vfiprintf_r+0x2a>
9002a8c8:	6da8      	ldr	r0, [r5, #88]	; 0x58
9002a8ca:	f7ff fdae 	bl	9002a42a <__retarget_lock_acquire_recursive>
9002a8ce:	89ab      	ldrh	r3, [r5, #12]
9002a8d0:	071b      	lsls	r3, r3, #28
9002a8d2:	d501      	bpl.n	9002a8d8 <_vfiprintf_r+0x34>
9002a8d4:	692b      	ldr	r3, [r5, #16]
9002a8d6:	b99b      	cbnz	r3, 9002a900 <_vfiprintf_r+0x5c>
9002a8d8:	4629      	mov	r1, r5
9002a8da:	4630      	mov	r0, r6
9002a8dc:	f7ff fc6e 	bl	9002a1bc <__swsetup_r>
9002a8e0:	b170      	cbz	r0, 9002a900 <_vfiprintf_r+0x5c>
9002a8e2:	6e6b      	ldr	r3, [r5, #100]	; 0x64
9002a8e4:	07dc      	lsls	r4, r3, #31
9002a8e6:	d504      	bpl.n	9002a8f2 <_vfiprintf_r+0x4e>
9002a8e8:	f04f 30ff 	mov.w	r0, #4294967295
9002a8ec:	b01d      	add	sp, #116	; 0x74
9002a8ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002a8f2:	89ab      	ldrh	r3, [r5, #12]
9002a8f4:	0598      	lsls	r0, r3, #22
9002a8f6:	d4f7      	bmi.n	9002a8e8 <_vfiprintf_r+0x44>
9002a8f8:	6da8      	ldr	r0, [r5, #88]	; 0x58
9002a8fa:	f7ff fd97 	bl	9002a42c <__retarget_lock_release_recursive>
9002a8fe:	e7f3      	b.n	9002a8e8 <_vfiprintf_r+0x44>
9002a900:	2300      	movs	r3, #0
9002a902:	9309      	str	r3, [sp, #36]	; 0x24
9002a904:	2320      	movs	r3, #32
9002a906:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
9002a90a:	f8cd 800c 	str.w	r8, [sp, #12]
9002a90e:	2330      	movs	r3, #48	; 0x30
9002a910:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 9002aac4 <_vfiprintf_r+0x220>
9002a914:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
9002a918:	f04f 0901 	mov.w	r9, #1
9002a91c:	4623      	mov	r3, r4
9002a91e:	469a      	mov	sl, r3
9002a920:	f813 2b01 	ldrb.w	r2, [r3], #1
9002a924:	b10a      	cbz	r2, 9002a92a <_vfiprintf_r+0x86>
9002a926:	2a25      	cmp	r2, #37	; 0x25
9002a928:	d1f9      	bne.n	9002a91e <_vfiprintf_r+0x7a>
9002a92a:	ebba 0b04 	subs.w	fp, sl, r4
9002a92e:	d00b      	beq.n	9002a948 <_vfiprintf_r+0xa4>
9002a930:	465b      	mov	r3, fp
9002a932:	4622      	mov	r2, r4
9002a934:	4629      	mov	r1, r5
9002a936:	4630      	mov	r0, r6
9002a938:	f7ff ffa1 	bl	9002a87e <__sfputs_r>
9002a93c:	3001      	adds	r0, #1
9002a93e:	f000 80a9 	beq.w	9002aa94 <_vfiprintf_r+0x1f0>
9002a942:	9a09      	ldr	r2, [sp, #36]	; 0x24
9002a944:	445a      	add	r2, fp
9002a946:	9209      	str	r2, [sp, #36]	; 0x24
9002a948:	f89a 3000 	ldrb.w	r3, [sl]
9002a94c:	2b00      	cmp	r3, #0
9002a94e:	f000 80a1 	beq.w	9002aa94 <_vfiprintf_r+0x1f0>
9002a952:	2300      	movs	r3, #0
9002a954:	f04f 32ff 	mov.w	r2, #4294967295
9002a958:	e9cd 2305 	strd	r2, r3, [sp, #20]
9002a95c:	f10a 0a01 	add.w	sl, sl, #1
9002a960:	9304      	str	r3, [sp, #16]
9002a962:	9307      	str	r3, [sp, #28]
9002a964:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
9002a968:	931a      	str	r3, [sp, #104]	; 0x68
9002a96a:	4654      	mov	r4, sl
9002a96c:	2205      	movs	r2, #5
9002a96e:	f814 1b01 	ldrb.w	r1, [r4], #1
9002a972:	4854      	ldr	r0, [pc, #336]	; (9002aac4 <_vfiprintf_r+0x220>)
9002a974:	f7d5 fcbc 	bl	900002f0 <memchr>
9002a978:	9a04      	ldr	r2, [sp, #16]
9002a97a:	b9d8      	cbnz	r0, 9002a9b4 <_vfiprintf_r+0x110>
9002a97c:	06d1      	lsls	r1, r2, #27
9002a97e:	bf44      	itt	mi
9002a980:	2320      	movmi	r3, #32
9002a982:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
9002a986:	0713      	lsls	r3, r2, #28
9002a988:	bf44      	itt	mi
9002a98a:	232b      	movmi	r3, #43	; 0x2b
9002a98c:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
9002a990:	f89a 3000 	ldrb.w	r3, [sl]
9002a994:	2b2a      	cmp	r3, #42	; 0x2a
9002a996:	d015      	beq.n	9002a9c4 <_vfiprintf_r+0x120>
9002a998:	9a07      	ldr	r2, [sp, #28]
9002a99a:	4654      	mov	r4, sl
9002a99c:	2000      	movs	r0, #0
9002a99e:	f04f 0c0a 	mov.w	ip, #10
9002a9a2:	4621      	mov	r1, r4
9002a9a4:	f811 3b01 	ldrb.w	r3, [r1], #1
9002a9a8:	3b30      	subs	r3, #48	; 0x30
9002a9aa:	2b09      	cmp	r3, #9
9002a9ac:	d94d      	bls.n	9002aa4a <_vfiprintf_r+0x1a6>
9002a9ae:	b1b0      	cbz	r0, 9002a9de <_vfiprintf_r+0x13a>
9002a9b0:	9207      	str	r2, [sp, #28]
9002a9b2:	e014      	b.n	9002a9de <_vfiprintf_r+0x13a>
9002a9b4:	eba0 0308 	sub.w	r3, r0, r8
9002a9b8:	fa09 f303 	lsl.w	r3, r9, r3
9002a9bc:	4313      	orrs	r3, r2
9002a9be:	9304      	str	r3, [sp, #16]
9002a9c0:	46a2      	mov	sl, r4
9002a9c2:	e7d2      	b.n	9002a96a <_vfiprintf_r+0xc6>
9002a9c4:	9b03      	ldr	r3, [sp, #12]
9002a9c6:	1d19      	adds	r1, r3, #4
9002a9c8:	681b      	ldr	r3, [r3, #0]
9002a9ca:	9103      	str	r1, [sp, #12]
9002a9cc:	2b00      	cmp	r3, #0
9002a9ce:	bfbb      	ittet	lt
9002a9d0:	425b      	neglt	r3, r3
9002a9d2:	f042 0202 	orrlt.w	r2, r2, #2
9002a9d6:	9307      	strge	r3, [sp, #28]
9002a9d8:	9307      	strlt	r3, [sp, #28]
9002a9da:	bfb8      	it	lt
9002a9dc:	9204      	strlt	r2, [sp, #16]
9002a9de:	7823      	ldrb	r3, [r4, #0]
9002a9e0:	2b2e      	cmp	r3, #46	; 0x2e
9002a9e2:	d10c      	bne.n	9002a9fe <_vfiprintf_r+0x15a>
9002a9e4:	7863      	ldrb	r3, [r4, #1]
9002a9e6:	2b2a      	cmp	r3, #42	; 0x2a
9002a9e8:	d134      	bne.n	9002aa54 <_vfiprintf_r+0x1b0>
9002a9ea:	9b03      	ldr	r3, [sp, #12]
9002a9ec:	1d1a      	adds	r2, r3, #4
9002a9ee:	681b      	ldr	r3, [r3, #0]
9002a9f0:	9203      	str	r2, [sp, #12]
9002a9f2:	2b00      	cmp	r3, #0
9002a9f4:	bfb8      	it	lt
9002a9f6:	f04f 33ff 	movlt.w	r3, #4294967295
9002a9fa:	3402      	adds	r4, #2
9002a9fc:	9305      	str	r3, [sp, #20]
9002a9fe:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 9002aad4 <_vfiprintf_r+0x230>
9002aa02:	7821      	ldrb	r1, [r4, #0]
9002aa04:	2203      	movs	r2, #3
9002aa06:	4650      	mov	r0, sl
9002aa08:	f7d5 fc72 	bl	900002f0 <memchr>
9002aa0c:	b138      	cbz	r0, 9002aa1e <_vfiprintf_r+0x17a>
9002aa0e:	9b04      	ldr	r3, [sp, #16]
9002aa10:	eba0 000a 	sub.w	r0, r0, sl
9002aa14:	2240      	movs	r2, #64	; 0x40
9002aa16:	4082      	lsls	r2, r0
9002aa18:	4313      	orrs	r3, r2
9002aa1a:	3401      	adds	r4, #1
9002aa1c:	9304      	str	r3, [sp, #16]
9002aa1e:	f814 1b01 	ldrb.w	r1, [r4], #1
9002aa22:	4829      	ldr	r0, [pc, #164]	; (9002aac8 <_vfiprintf_r+0x224>)
9002aa24:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
9002aa28:	2206      	movs	r2, #6
9002aa2a:	f7d5 fc61 	bl	900002f0 <memchr>
9002aa2e:	2800      	cmp	r0, #0
9002aa30:	d03f      	beq.n	9002aab2 <_vfiprintf_r+0x20e>
9002aa32:	4b26      	ldr	r3, [pc, #152]	; (9002aacc <_vfiprintf_r+0x228>)
9002aa34:	bb1b      	cbnz	r3, 9002aa7e <_vfiprintf_r+0x1da>
9002aa36:	9b03      	ldr	r3, [sp, #12]
9002aa38:	3307      	adds	r3, #7
9002aa3a:	f023 0307 	bic.w	r3, r3, #7
9002aa3e:	3308      	adds	r3, #8
9002aa40:	9303      	str	r3, [sp, #12]
9002aa42:	9b09      	ldr	r3, [sp, #36]	; 0x24
9002aa44:	443b      	add	r3, r7
9002aa46:	9309      	str	r3, [sp, #36]	; 0x24
9002aa48:	e768      	b.n	9002a91c <_vfiprintf_r+0x78>
9002aa4a:	fb0c 3202 	mla	r2, ip, r2, r3
9002aa4e:	460c      	mov	r4, r1
9002aa50:	2001      	movs	r0, #1
9002aa52:	e7a6      	b.n	9002a9a2 <_vfiprintf_r+0xfe>
9002aa54:	2300      	movs	r3, #0
9002aa56:	3401      	adds	r4, #1
9002aa58:	9305      	str	r3, [sp, #20]
9002aa5a:	4619      	mov	r1, r3
9002aa5c:	f04f 0c0a 	mov.w	ip, #10
9002aa60:	4620      	mov	r0, r4
9002aa62:	f810 2b01 	ldrb.w	r2, [r0], #1
9002aa66:	3a30      	subs	r2, #48	; 0x30
9002aa68:	2a09      	cmp	r2, #9
9002aa6a:	d903      	bls.n	9002aa74 <_vfiprintf_r+0x1d0>
9002aa6c:	2b00      	cmp	r3, #0
9002aa6e:	d0c6      	beq.n	9002a9fe <_vfiprintf_r+0x15a>
9002aa70:	9105      	str	r1, [sp, #20]
9002aa72:	e7c4      	b.n	9002a9fe <_vfiprintf_r+0x15a>
9002aa74:	fb0c 2101 	mla	r1, ip, r1, r2
9002aa78:	4604      	mov	r4, r0
9002aa7a:	2301      	movs	r3, #1
9002aa7c:	e7f0      	b.n	9002aa60 <_vfiprintf_r+0x1bc>
9002aa7e:	ab03      	add	r3, sp, #12
9002aa80:	9300      	str	r3, [sp, #0]
9002aa82:	462a      	mov	r2, r5
9002aa84:	4b12      	ldr	r3, [pc, #72]	; (9002aad0 <_vfiprintf_r+0x22c>)
9002aa86:	a904      	add	r1, sp, #16
9002aa88:	4630      	mov	r0, r6
9002aa8a:	f3af 8000 	nop.w
9002aa8e:	4607      	mov	r7, r0
9002aa90:	1c78      	adds	r0, r7, #1
9002aa92:	d1d6      	bne.n	9002aa42 <_vfiprintf_r+0x19e>
9002aa94:	6e6b      	ldr	r3, [r5, #100]	; 0x64
9002aa96:	07d9      	lsls	r1, r3, #31
9002aa98:	d405      	bmi.n	9002aaa6 <_vfiprintf_r+0x202>
9002aa9a:	89ab      	ldrh	r3, [r5, #12]
9002aa9c:	059a      	lsls	r2, r3, #22
9002aa9e:	d402      	bmi.n	9002aaa6 <_vfiprintf_r+0x202>
9002aaa0:	6da8      	ldr	r0, [r5, #88]	; 0x58
9002aaa2:	f7ff fcc3 	bl	9002a42c <__retarget_lock_release_recursive>
9002aaa6:	89ab      	ldrh	r3, [r5, #12]
9002aaa8:	065b      	lsls	r3, r3, #25
9002aaaa:	f53f af1d 	bmi.w	9002a8e8 <_vfiprintf_r+0x44>
9002aaae:	9809      	ldr	r0, [sp, #36]	; 0x24
9002aab0:	e71c      	b.n	9002a8ec <_vfiprintf_r+0x48>
9002aab2:	ab03      	add	r3, sp, #12
9002aab4:	9300      	str	r3, [sp, #0]
9002aab6:	462a      	mov	r2, r5
9002aab8:	4b05      	ldr	r3, [pc, #20]	; (9002aad0 <_vfiprintf_r+0x22c>)
9002aaba:	a904      	add	r1, sp, #16
9002aabc:	4630      	mov	r0, r6
9002aabe:	f000 f879 	bl	9002abb4 <_printf_i>
9002aac2:	e7e4      	b.n	9002aa8e <_vfiprintf_r+0x1ea>
9002aac4:	9002eaec 	.word	0x9002eaec
9002aac8:	9002eaf6 	.word	0x9002eaf6
9002aacc:	00000000 	.word	0x00000000
9002aad0:	9002a87f 	.word	0x9002a87f
9002aad4:	9002eaf2 	.word	0x9002eaf2

9002aad8 <_printf_common>:
9002aad8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9002aadc:	4616      	mov	r6, r2
9002aade:	4699      	mov	r9, r3
9002aae0:	688a      	ldr	r2, [r1, #8]
9002aae2:	690b      	ldr	r3, [r1, #16]
9002aae4:	f8dd 8020 	ldr.w	r8, [sp, #32]
9002aae8:	4293      	cmp	r3, r2
9002aaea:	bfb8      	it	lt
9002aaec:	4613      	movlt	r3, r2
9002aaee:	6033      	str	r3, [r6, #0]
9002aaf0:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
9002aaf4:	4607      	mov	r7, r0
9002aaf6:	460c      	mov	r4, r1
9002aaf8:	b10a      	cbz	r2, 9002aafe <_printf_common+0x26>
9002aafa:	3301      	adds	r3, #1
9002aafc:	6033      	str	r3, [r6, #0]
9002aafe:	6823      	ldr	r3, [r4, #0]
9002ab00:	0699      	lsls	r1, r3, #26
9002ab02:	bf42      	ittt	mi
9002ab04:	6833      	ldrmi	r3, [r6, #0]
9002ab06:	3302      	addmi	r3, #2
9002ab08:	6033      	strmi	r3, [r6, #0]
9002ab0a:	6825      	ldr	r5, [r4, #0]
9002ab0c:	f015 0506 	ands.w	r5, r5, #6
9002ab10:	d106      	bne.n	9002ab20 <_printf_common+0x48>
9002ab12:	f104 0a19 	add.w	sl, r4, #25
9002ab16:	68e3      	ldr	r3, [r4, #12]
9002ab18:	6832      	ldr	r2, [r6, #0]
9002ab1a:	1a9b      	subs	r3, r3, r2
9002ab1c:	42ab      	cmp	r3, r5
9002ab1e:	dc26      	bgt.n	9002ab6e <_printf_common+0x96>
9002ab20:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
9002ab24:	1e13      	subs	r3, r2, #0
9002ab26:	6822      	ldr	r2, [r4, #0]
9002ab28:	bf18      	it	ne
9002ab2a:	2301      	movne	r3, #1
9002ab2c:	0692      	lsls	r2, r2, #26
9002ab2e:	d42b      	bmi.n	9002ab88 <_printf_common+0xb0>
9002ab30:	f104 0243 	add.w	r2, r4, #67	; 0x43
9002ab34:	4649      	mov	r1, r9
9002ab36:	4638      	mov	r0, r7
9002ab38:	47c0      	blx	r8
9002ab3a:	3001      	adds	r0, #1
9002ab3c:	d01e      	beq.n	9002ab7c <_printf_common+0xa4>
9002ab3e:	6823      	ldr	r3, [r4, #0]
9002ab40:	6922      	ldr	r2, [r4, #16]
9002ab42:	f003 0306 	and.w	r3, r3, #6
9002ab46:	2b04      	cmp	r3, #4
9002ab48:	bf02      	ittt	eq
9002ab4a:	68e5      	ldreq	r5, [r4, #12]
9002ab4c:	6833      	ldreq	r3, [r6, #0]
9002ab4e:	1aed      	subeq	r5, r5, r3
9002ab50:	68a3      	ldr	r3, [r4, #8]
9002ab52:	bf0c      	ite	eq
9002ab54:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
9002ab58:	2500      	movne	r5, #0
9002ab5a:	4293      	cmp	r3, r2
9002ab5c:	bfc4      	itt	gt
9002ab5e:	1a9b      	subgt	r3, r3, r2
9002ab60:	18ed      	addgt	r5, r5, r3
9002ab62:	2600      	movs	r6, #0
9002ab64:	341a      	adds	r4, #26
9002ab66:	42b5      	cmp	r5, r6
9002ab68:	d11a      	bne.n	9002aba0 <_printf_common+0xc8>
9002ab6a:	2000      	movs	r0, #0
9002ab6c:	e008      	b.n	9002ab80 <_printf_common+0xa8>
9002ab6e:	2301      	movs	r3, #1
9002ab70:	4652      	mov	r2, sl
9002ab72:	4649      	mov	r1, r9
9002ab74:	4638      	mov	r0, r7
9002ab76:	47c0      	blx	r8
9002ab78:	3001      	adds	r0, #1
9002ab7a:	d103      	bne.n	9002ab84 <_printf_common+0xac>
9002ab7c:	f04f 30ff 	mov.w	r0, #4294967295
9002ab80:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9002ab84:	3501      	adds	r5, #1
9002ab86:	e7c6      	b.n	9002ab16 <_printf_common+0x3e>
9002ab88:	18e1      	adds	r1, r4, r3
9002ab8a:	1c5a      	adds	r2, r3, #1
9002ab8c:	2030      	movs	r0, #48	; 0x30
9002ab8e:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
9002ab92:	4422      	add	r2, r4
9002ab94:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
9002ab98:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
9002ab9c:	3302      	adds	r3, #2
9002ab9e:	e7c7      	b.n	9002ab30 <_printf_common+0x58>
9002aba0:	2301      	movs	r3, #1
9002aba2:	4622      	mov	r2, r4
9002aba4:	4649      	mov	r1, r9
9002aba6:	4638      	mov	r0, r7
9002aba8:	47c0      	blx	r8
9002abaa:	3001      	adds	r0, #1
9002abac:	d0e6      	beq.n	9002ab7c <_printf_common+0xa4>
9002abae:	3601      	adds	r6, #1
9002abb0:	e7d9      	b.n	9002ab66 <_printf_common+0x8e>
	...

9002abb4 <_printf_i>:
9002abb4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
9002abb8:	7e0f      	ldrb	r7, [r1, #24]
9002abba:	9d0c      	ldr	r5, [sp, #48]	; 0x30
9002abbc:	2f78      	cmp	r7, #120	; 0x78
9002abbe:	4691      	mov	r9, r2
9002abc0:	4680      	mov	r8, r0
9002abc2:	460c      	mov	r4, r1
9002abc4:	469a      	mov	sl, r3
9002abc6:	f101 0243 	add.w	r2, r1, #67	; 0x43
9002abca:	d807      	bhi.n	9002abdc <_printf_i+0x28>
9002abcc:	2f62      	cmp	r7, #98	; 0x62
9002abce:	d80a      	bhi.n	9002abe6 <_printf_i+0x32>
9002abd0:	2f00      	cmp	r7, #0
9002abd2:	f000 80d4 	beq.w	9002ad7e <_printf_i+0x1ca>
9002abd6:	2f58      	cmp	r7, #88	; 0x58
9002abd8:	f000 80c0 	beq.w	9002ad5c <_printf_i+0x1a8>
9002abdc:	f104 0542 	add.w	r5, r4, #66	; 0x42
9002abe0:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
9002abe4:	e03a      	b.n	9002ac5c <_printf_i+0xa8>
9002abe6:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
9002abea:	2b15      	cmp	r3, #21
9002abec:	d8f6      	bhi.n	9002abdc <_printf_i+0x28>
9002abee:	a101      	add	r1, pc, #4	; (adr r1, 9002abf4 <_printf_i+0x40>)
9002abf0:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
9002abf4:	9002ac4d 	.word	0x9002ac4d
9002abf8:	9002ac61 	.word	0x9002ac61
9002abfc:	9002abdd 	.word	0x9002abdd
9002ac00:	9002abdd 	.word	0x9002abdd
9002ac04:	9002abdd 	.word	0x9002abdd
9002ac08:	9002abdd 	.word	0x9002abdd
9002ac0c:	9002ac61 	.word	0x9002ac61
9002ac10:	9002abdd 	.word	0x9002abdd
9002ac14:	9002abdd 	.word	0x9002abdd
9002ac18:	9002abdd 	.word	0x9002abdd
9002ac1c:	9002abdd 	.word	0x9002abdd
9002ac20:	9002ad65 	.word	0x9002ad65
9002ac24:	9002ac8d 	.word	0x9002ac8d
9002ac28:	9002ad1f 	.word	0x9002ad1f
9002ac2c:	9002abdd 	.word	0x9002abdd
9002ac30:	9002abdd 	.word	0x9002abdd
9002ac34:	9002ad87 	.word	0x9002ad87
9002ac38:	9002abdd 	.word	0x9002abdd
9002ac3c:	9002ac8d 	.word	0x9002ac8d
9002ac40:	9002abdd 	.word	0x9002abdd
9002ac44:	9002abdd 	.word	0x9002abdd
9002ac48:	9002ad27 	.word	0x9002ad27
9002ac4c:	682b      	ldr	r3, [r5, #0]
9002ac4e:	1d1a      	adds	r2, r3, #4
9002ac50:	681b      	ldr	r3, [r3, #0]
9002ac52:	602a      	str	r2, [r5, #0]
9002ac54:	f104 0542 	add.w	r5, r4, #66	; 0x42
9002ac58:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
9002ac5c:	2301      	movs	r3, #1
9002ac5e:	e09f      	b.n	9002ada0 <_printf_i+0x1ec>
9002ac60:	6820      	ldr	r0, [r4, #0]
9002ac62:	682b      	ldr	r3, [r5, #0]
9002ac64:	0607      	lsls	r7, r0, #24
9002ac66:	f103 0104 	add.w	r1, r3, #4
9002ac6a:	6029      	str	r1, [r5, #0]
9002ac6c:	d501      	bpl.n	9002ac72 <_printf_i+0xbe>
9002ac6e:	681e      	ldr	r6, [r3, #0]
9002ac70:	e003      	b.n	9002ac7a <_printf_i+0xc6>
9002ac72:	0646      	lsls	r6, r0, #25
9002ac74:	d5fb      	bpl.n	9002ac6e <_printf_i+0xba>
9002ac76:	f9b3 6000 	ldrsh.w	r6, [r3]
9002ac7a:	2e00      	cmp	r6, #0
9002ac7c:	da03      	bge.n	9002ac86 <_printf_i+0xd2>
9002ac7e:	232d      	movs	r3, #45	; 0x2d
9002ac80:	4276      	negs	r6, r6
9002ac82:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
9002ac86:	485a      	ldr	r0, [pc, #360]	; (9002adf0 <_printf_i+0x23c>)
9002ac88:	230a      	movs	r3, #10
9002ac8a:	e012      	b.n	9002acb2 <_printf_i+0xfe>
9002ac8c:	682b      	ldr	r3, [r5, #0]
9002ac8e:	6820      	ldr	r0, [r4, #0]
9002ac90:	1d19      	adds	r1, r3, #4
9002ac92:	6029      	str	r1, [r5, #0]
9002ac94:	0605      	lsls	r5, r0, #24
9002ac96:	d501      	bpl.n	9002ac9c <_printf_i+0xe8>
9002ac98:	681e      	ldr	r6, [r3, #0]
9002ac9a:	e002      	b.n	9002aca2 <_printf_i+0xee>
9002ac9c:	0641      	lsls	r1, r0, #25
9002ac9e:	d5fb      	bpl.n	9002ac98 <_printf_i+0xe4>
9002aca0:	881e      	ldrh	r6, [r3, #0]
9002aca2:	4853      	ldr	r0, [pc, #332]	; (9002adf0 <_printf_i+0x23c>)
9002aca4:	2f6f      	cmp	r7, #111	; 0x6f
9002aca6:	bf0c      	ite	eq
9002aca8:	2308      	moveq	r3, #8
9002acaa:	230a      	movne	r3, #10
9002acac:	2100      	movs	r1, #0
9002acae:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
9002acb2:	6865      	ldr	r5, [r4, #4]
9002acb4:	60a5      	str	r5, [r4, #8]
9002acb6:	2d00      	cmp	r5, #0
9002acb8:	bfa2      	ittt	ge
9002acba:	6821      	ldrge	r1, [r4, #0]
9002acbc:	f021 0104 	bicge.w	r1, r1, #4
9002acc0:	6021      	strge	r1, [r4, #0]
9002acc2:	b90e      	cbnz	r6, 9002acc8 <_printf_i+0x114>
9002acc4:	2d00      	cmp	r5, #0
9002acc6:	d04b      	beq.n	9002ad60 <_printf_i+0x1ac>
9002acc8:	4615      	mov	r5, r2
9002acca:	fbb6 f1f3 	udiv	r1, r6, r3
9002acce:	fb03 6711 	mls	r7, r3, r1, r6
9002acd2:	5dc7      	ldrb	r7, [r0, r7]
9002acd4:	f805 7d01 	strb.w	r7, [r5, #-1]!
9002acd8:	4637      	mov	r7, r6
9002acda:	42bb      	cmp	r3, r7
9002acdc:	460e      	mov	r6, r1
9002acde:	d9f4      	bls.n	9002acca <_printf_i+0x116>
9002ace0:	2b08      	cmp	r3, #8
9002ace2:	d10b      	bne.n	9002acfc <_printf_i+0x148>
9002ace4:	6823      	ldr	r3, [r4, #0]
9002ace6:	07de      	lsls	r6, r3, #31
9002ace8:	d508      	bpl.n	9002acfc <_printf_i+0x148>
9002acea:	6923      	ldr	r3, [r4, #16]
9002acec:	6861      	ldr	r1, [r4, #4]
9002acee:	4299      	cmp	r1, r3
9002acf0:	bfde      	ittt	le
9002acf2:	2330      	movle	r3, #48	; 0x30
9002acf4:	f805 3c01 	strble.w	r3, [r5, #-1]
9002acf8:	f105 35ff 	addle.w	r5, r5, #4294967295
9002acfc:	1b52      	subs	r2, r2, r5
9002acfe:	6122      	str	r2, [r4, #16]
9002ad00:	f8cd a000 	str.w	sl, [sp]
9002ad04:	464b      	mov	r3, r9
9002ad06:	aa03      	add	r2, sp, #12
9002ad08:	4621      	mov	r1, r4
9002ad0a:	4640      	mov	r0, r8
9002ad0c:	f7ff fee4 	bl	9002aad8 <_printf_common>
9002ad10:	3001      	adds	r0, #1
9002ad12:	d14a      	bne.n	9002adaa <_printf_i+0x1f6>
9002ad14:	f04f 30ff 	mov.w	r0, #4294967295
9002ad18:	b004      	add	sp, #16
9002ad1a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9002ad1e:	6823      	ldr	r3, [r4, #0]
9002ad20:	f043 0320 	orr.w	r3, r3, #32
9002ad24:	6023      	str	r3, [r4, #0]
9002ad26:	4833      	ldr	r0, [pc, #204]	; (9002adf4 <_printf_i+0x240>)
9002ad28:	2778      	movs	r7, #120	; 0x78
9002ad2a:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
9002ad2e:	6823      	ldr	r3, [r4, #0]
9002ad30:	6829      	ldr	r1, [r5, #0]
9002ad32:	061f      	lsls	r7, r3, #24
9002ad34:	f851 6b04 	ldr.w	r6, [r1], #4
9002ad38:	d402      	bmi.n	9002ad40 <_printf_i+0x18c>
9002ad3a:	065f      	lsls	r7, r3, #25
9002ad3c:	bf48      	it	mi
9002ad3e:	b2b6      	uxthmi	r6, r6
9002ad40:	07df      	lsls	r7, r3, #31
9002ad42:	bf48      	it	mi
9002ad44:	f043 0320 	orrmi.w	r3, r3, #32
9002ad48:	6029      	str	r1, [r5, #0]
9002ad4a:	bf48      	it	mi
9002ad4c:	6023      	strmi	r3, [r4, #0]
9002ad4e:	b91e      	cbnz	r6, 9002ad58 <_printf_i+0x1a4>
9002ad50:	6823      	ldr	r3, [r4, #0]
9002ad52:	f023 0320 	bic.w	r3, r3, #32
9002ad56:	6023      	str	r3, [r4, #0]
9002ad58:	2310      	movs	r3, #16
9002ad5a:	e7a7      	b.n	9002acac <_printf_i+0xf8>
9002ad5c:	4824      	ldr	r0, [pc, #144]	; (9002adf0 <_printf_i+0x23c>)
9002ad5e:	e7e4      	b.n	9002ad2a <_printf_i+0x176>
9002ad60:	4615      	mov	r5, r2
9002ad62:	e7bd      	b.n	9002ace0 <_printf_i+0x12c>
9002ad64:	682b      	ldr	r3, [r5, #0]
9002ad66:	6826      	ldr	r6, [r4, #0]
9002ad68:	6961      	ldr	r1, [r4, #20]
9002ad6a:	1d18      	adds	r0, r3, #4
9002ad6c:	6028      	str	r0, [r5, #0]
9002ad6e:	0635      	lsls	r5, r6, #24
9002ad70:	681b      	ldr	r3, [r3, #0]
9002ad72:	d501      	bpl.n	9002ad78 <_printf_i+0x1c4>
9002ad74:	6019      	str	r1, [r3, #0]
9002ad76:	e002      	b.n	9002ad7e <_printf_i+0x1ca>
9002ad78:	0670      	lsls	r0, r6, #25
9002ad7a:	d5fb      	bpl.n	9002ad74 <_printf_i+0x1c0>
9002ad7c:	8019      	strh	r1, [r3, #0]
9002ad7e:	2300      	movs	r3, #0
9002ad80:	6123      	str	r3, [r4, #16]
9002ad82:	4615      	mov	r5, r2
9002ad84:	e7bc      	b.n	9002ad00 <_printf_i+0x14c>
9002ad86:	682b      	ldr	r3, [r5, #0]
9002ad88:	1d1a      	adds	r2, r3, #4
9002ad8a:	602a      	str	r2, [r5, #0]
9002ad8c:	681d      	ldr	r5, [r3, #0]
9002ad8e:	6862      	ldr	r2, [r4, #4]
9002ad90:	2100      	movs	r1, #0
9002ad92:	4628      	mov	r0, r5
9002ad94:	f7d5 faac 	bl	900002f0 <memchr>
9002ad98:	b108      	cbz	r0, 9002ad9e <_printf_i+0x1ea>
9002ad9a:	1b40      	subs	r0, r0, r5
9002ad9c:	6060      	str	r0, [r4, #4]
9002ad9e:	6863      	ldr	r3, [r4, #4]
9002ada0:	6123      	str	r3, [r4, #16]
9002ada2:	2300      	movs	r3, #0
9002ada4:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
9002ada8:	e7aa      	b.n	9002ad00 <_printf_i+0x14c>
9002adaa:	6923      	ldr	r3, [r4, #16]
9002adac:	462a      	mov	r2, r5
9002adae:	4649      	mov	r1, r9
9002adb0:	4640      	mov	r0, r8
9002adb2:	47d0      	blx	sl
9002adb4:	3001      	adds	r0, #1
9002adb6:	d0ad      	beq.n	9002ad14 <_printf_i+0x160>
9002adb8:	6823      	ldr	r3, [r4, #0]
9002adba:	079b      	lsls	r3, r3, #30
9002adbc:	d413      	bmi.n	9002ade6 <_printf_i+0x232>
9002adbe:	68e0      	ldr	r0, [r4, #12]
9002adc0:	9b03      	ldr	r3, [sp, #12]
9002adc2:	4298      	cmp	r0, r3
9002adc4:	bfb8      	it	lt
9002adc6:	4618      	movlt	r0, r3
9002adc8:	e7a6      	b.n	9002ad18 <_printf_i+0x164>
9002adca:	2301      	movs	r3, #1
9002adcc:	4632      	mov	r2, r6
9002adce:	4649      	mov	r1, r9
9002add0:	4640      	mov	r0, r8
9002add2:	47d0      	blx	sl
9002add4:	3001      	adds	r0, #1
9002add6:	d09d      	beq.n	9002ad14 <_printf_i+0x160>
9002add8:	3501      	adds	r5, #1
9002adda:	68e3      	ldr	r3, [r4, #12]
9002addc:	9903      	ldr	r1, [sp, #12]
9002adde:	1a5b      	subs	r3, r3, r1
9002ade0:	42ab      	cmp	r3, r5
9002ade2:	dcf2      	bgt.n	9002adca <_printf_i+0x216>
9002ade4:	e7eb      	b.n	9002adbe <_printf_i+0x20a>
9002ade6:	2500      	movs	r5, #0
9002ade8:	f104 0619 	add.w	r6, r4, #25
9002adec:	e7f5      	b.n	9002adda <_printf_i+0x226>
9002adee:	bf00      	nop
9002adf0:	9002eafd 	.word	0x9002eafd
9002adf4:	9002eb0e 	.word	0x9002eb0e

9002adf8 <__sflush_r>:
9002adf8:	898a      	ldrh	r2, [r1, #12]
9002adfa:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9002adfe:	4605      	mov	r5, r0
9002ae00:	0710      	lsls	r0, r2, #28
9002ae02:	460c      	mov	r4, r1
9002ae04:	d458      	bmi.n	9002aeb8 <__sflush_r+0xc0>
9002ae06:	684b      	ldr	r3, [r1, #4]
9002ae08:	2b00      	cmp	r3, #0
9002ae0a:	dc05      	bgt.n	9002ae18 <__sflush_r+0x20>
9002ae0c:	6c0b      	ldr	r3, [r1, #64]	; 0x40
9002ae0e:	2b00      	cmp	r3, #0
9002ae10:	dc02      	bgt.n	9002ae18 <__sflush_r+0x20>
9002ae12:	2000      	movs	r0, #0
9002ae14:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9002ae18:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
9002ae1a:	2e00      	cmp	r6, #0
9002ae1c:	d0f9      	beq.n	9002ae12 <__sflush_r+0x1a>
9002ae1e:	2300      	movs	r3, #0
9002ae20:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
9002ae24:	682f      	ldr	r7, [r5, #0]
9002ae26:	6a21      	ldr	r1, [r4, #32]
9002ae28:	602b      	str	r3, [r5, #0]
9002ae2a:	d032      	beq.n	9002ae92 <__sflush_r+0x9a>
9002ae2c:	6d60      	ldr	r0, [r4, #84]	; 0x54
9002ae2e:	89a3      	ldrh	r3, [r4, #12]
9002ae30:	075a      	lsls	r2, r3, #29
9002ae32:	d505      	bpl.n	9002ae40 <__sflush_r+0x48>
9002ae34:	6863      	ldr	r3, [r4, #4]
9002ae36:	1ac0      	subs	r0, r0, r3
9002ae38:	6b63      	ldr	r3, [r4, #52]	; 0x34
9002ae3a:	b10b      	cbz	r3, 9002ae40 <__sflush_r+0x48>
9002ae3c:	6c23      	ldr	r3, [r4, #64]	; 0x40
9002ae3e:	1ac0      	subs	r0, r0, r3
9002ae40:	2300      	movs	r3, #0
9002ae42:	4602      	mov	r2, r0
9002ae44:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
9002ae46:	6a21      	ldr	r1, [r4, #32]
9002ae48:	4628      	mov	r0, r5
9002ae4a:	47b0      	blx	r6
9002ae4c:	1c43      	adds	r3, r0, #1
9002ae4e:	89a3      	ldrh	r3, [r4, #12]
9002ae50:	d106      	bne.n	9002ae60 <__sflush_r+0x68>
9002ae52:	6829      	ldr	r1, [r5, #0]
9002ae54:	291d      	cmp	r1, #29
9002ae56:	d82b      	bhi.n	9002aeb0 <__sflush_r+0xb8>
9002ae58:	4a29      	ldr	r2, [pc, #164]	; (9002af00 <__sflush_r+0x108>)
9002ae5a:	410a      	asrs	r2, r1
9002ae5c:	07d6      	lsls	r6, r2, #31
9002ae5e:	d427      	bmi.n	9002aeb0 <__sflush_r+0xb8>
9002ae60:	2200      	movs	r2, #0
9002ae62:	6062      	str	r2, [r4, #4]
9002ae64:	04d9      	lsls	r1, r3, #19
9002ae66:	6922      	ldr	r2, [r4, #16]
9002ae68:	6022      	str	r2, [r4, #0]
9002ae6a:	d504      	bpl.n	9002ae76 <__sflush_r+0x7e>
9002ae6c:	1c42      	adds	r2, r0, #1
9002ae6e:	d101      	bne.n	9002ae74 <__sflush_r+0x7c>
9002ae70:	682b      	ldr	r3, [r5, #0]
9002ae72:	b903      	cbnz	r3, 9002ae76 <__sflush_r+0x7e>
9002ae74:	6560      	str	r0, [r4, #84]	; 0x54
9002ae76:	6b61      	ldr	r1, [r4, #52]	; 0x34
9002ae78:	602f      	str	r7, [r5, #0]
9002ae7a:	2900      	cmp	r1, #0
9002ae7c:	d0c9      	beq.n	9002ae12 <__sflush_r+0x1a>
9002ae7e:	f104 0344 	add.w	r3, r4, #68	; 0x44
9002ae82:	4299      	cmp	r1, r3
9002ae84:	d002      	beq.n	9002ae8c <__sflush_r+0x94>
9002ae86:	4628      	mov	r0, r5
9002ae88:	f7ff fb3e 	bl	9002a508 <_free_r>
9002ae8c:	2000      	movs	r0, #0
9002ae8e:	6360      	str	r0, [r4, #52]	; 0x34
9002ae90:	e7c0      	b.n	9002ae14 <__sflush_r+0x1c>
9002ae92:	2301      	movs	r3, #1
9002ae94:	4628      	mov	r0, r5
9002ae96:	47b0      	blx	r6
9002ae98:	1c41      	adds	r1, r0, #1
9002ae9a:	d1c8      	bne.n	9002ae2e <__sflush_r+0x36>
9002ae9c:	682b      	ldr	r3, [r5, #0]
9002ae9e:	2b00      	cmp	r3, #0
9002aea0:	d0c5      	beq.n	9002ae2e <__sflush_r+0x36>
9002aea2:	2b1d      	cmp	r3, #29
9002aea4:	d001      	beq.n	9002aeaa <__sflush_r+0xb2>
9002aea6:	2b16      	cmp	r3, #22
9002aea8:	d101      	bne.n	9002aeae <__sflush_r+0xb6>
9002aeaa:	602f      	str	r7, [r5, #0]
9002aeac:	e7b1      	b.n	9002ae12 <__sflush_r+0x1a>
9002aeae:	89a3      	ldrh	r3, [r4, #12]
9002aeb0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
9002aeb4:	81a3      	strh	r3, [r4, #12]
9002aeb6:	e7ad      	b.n	9002ae14 <__sflush_r+0x1c>
9002aeb8:	690f      	ldr	r7, [r1, #16]
9002aeba:	2f00      	cmp	r7, #0
9002aebc:	d0a9      	beq.n	9002ae12 <__sflush_r+0x1a>
9002aebe:	0793      	lsls	r3, r2, #30
9002aec0:	680e      	ldr	r6, [r1, #0]
9002aec2:	bf08      	it	eq
9002aec4:	694b      	ldreq	r3, [r1, #20]
9002aec6:	600f      	str	r7, [r1, #0]
9002aec8:	bf18      	it	ne
9002aeca:	2300      	movne	r3, #0
9002aecc:	eba6 0807 	sub.w	r8, r6, r7
9002aed0:	608b      	str	r3, [r1, #8]
9002aed2:	f1b8 0f00 	cmp.w	r8, #0
9002aed6:	dd9c      	ble.n	9002ae12 <__sflush_r+0x1a>
9002aed8:	6a21      	ldr	r1, [r4, #32]
9002aeda:	6aa6      	ldr	r6, [r4, #40]	; 0x28
9002aedc:	4643      	mov	r3, r8
9002aede:	463a      	mov	r2, r7
9002aee0:	4628      	mov	r0, r5
9002aee2:	47b0      	blx	r6
9002aee4:	2800      	cmp	r0, #0
9002aee6:	dc06      	bgt.n	9002aef6 <__sflush_r+0xfe>
9002aee8:	89a3      	ldrh	r3, [r4, #12]
9002aeea:	f043 0340 	orr.w	r3, r3, #64	; 0x40
9002aeee:	81a3      	strh	r3, [r4, #12]
9002aef0:	f04f 30ff 	mov.w	r0, #4294967295
9002aef4:	e78e      	b.n	9002ae14 <__sflush_r+0x1c>
9002aef6:	4407      	add	r7, r0
9002aef8:	eba8 0800 	sub.w	r8, r8, r0
9002aefc:	e7e9      	b.n	9002aed2 <__sflush_r+0xda>
9002aefe:	bf00      	nop
9002af00:	dfbffffe 	.word	0xdfbffffe

9002af04 <_fflush_r>:
9002af04:	b538      	push	{r3, r4, r5, lr}
9002af06:	690b      	ldr	r3, [r1, #16]
9002af08:	4605      	mov	r5, r0
9002af0a:	460c      	mov	r4, r1
9002af0c:	b913      	cbnz	r3, 9002af14 <_fflush_r+0x10>
9002af0e:	2500      	movs	r5, #0
9002af10:	4628      	mov	r0, r5
9002af12:	bd38      	pop	{r3, r4, r5, pc}
9002af14:	b118      	cbz	r0, 9002af1e <_fflush_r+0x1a>
9002af16:	6a03      	ldr	r3, [r0, #32]
9002af18:	b90b      	cbnz	r3, 9002af1e <_fflush_r+0x1a>
9002af1a:	f7ff f867 	bl	90029fec <__sinit>
9002af1e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
9002af22:	2b00      	cmp	r3, #0
9002af24:	d0f3      	beq.n	9002af0e <_fflush_r+0xa>
9002af26:	6e62      	ldr	r2, [r4, #100]	; 0x64
9002af28:	07d0      	lsls	r0, r2, #31
9002af2a:	d404      	bmi.n	9002af36 <_fflush_r+0x32>
9002af2c:	0599      	lsls	r1, r3, #22
9002af2e:	d402      	bmi.n	9002af36 <_fflush_r+0x32>
9002af30:	6da0      	ldr	r0, [r4, #88]	; 0x58
9002af32:	f7ff fa7a 	bl	9002a42a <__retarget_lock_acquire_recursive>
9002af36:	4628      	mov	r0, r5
9002af38:	4621      	mov	r1, r4
9002af3a:	f7ff ff5d 	bl	9002adf8 <__sflush_r>
9002af3e:	6e63      	ldr	r3, [r4, #100]	; 0x64
9002af40:	07da      	lsls	r2, r3, #31
9002af42:	4605      	mov	r5, r0
9002af44:	d4e4      	bmi.n	9002af10 <_fflush_r+0xc>
9002af46:	89a3      	ldrh	r3, [r4, #12]
9002af48:	059b      	lsls	r3, r3, #22
9002af4a:	d4e1      	bmi.n	9002af10 <_fflush_r+0xc>
9002af4c:	6da0      	ldr	r0, [r4, #88]	; 0x58
9002af4e:	f7ff fa6d 	bl	9002a42c <__retarget_lock_release_recursive>
9002af52:	e7dd      	b.n	9002af10 <_fflush_r+0xc>

9002af54 <__swhatbuf_r>:
9002af54:	b570      	push	{r4, r5, r6, lr}
9002af56:	460c      	mov	r4, r1
9002af58:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
9002af5c:	2900      	cmp	r1, #0
9002af5e:	b096      	sub	sp, #88	; 0x58
9002af60:	4615      	mov	r5, r2
9002af62:	461e      	mov	r6, r3
9002af64:	da0d      	bge.n	9002af82 <__swhatbuf_r+0x2e>
9002af66:	89a3      	ldrh	r3, [r4, #12]
9002af68:	f013 0f80 	tst.w	r3, #128	; 0x80
9002af6c:	f04f 0100 	mov.w	r1, #0
9002af70:	bf0c      	ite	eq
9002af72:	f44f 6380 	moveq.w	r3, #1024	; 0x400
9002af76:	2340      	movne	r3, #64	; 0x40
9002af78:	2000      	movs	r0, #0
9002af7a:	6031      	str	r1, [r6, #0]
9002af7c:	602b      	str	r3, [r5, #0]
9002af7e:	b016      	add	sp, #88	; 0x58
9002af80:	bd70      	pop	{r4, r5, r6, pc}
9002af82:	466a      	mov	r2, sp
9002af84:	f000 f862 	bl	9002b04c <_fstat_r>
9002af88:	2800      	cmp	r0, #0
9002af8a:	dbec      	blt.n	9002af66 <__swhatbuf_r+0x12>
9002af8c:	9901      	ldr	r1, [sp, #4]
9002af8e:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
9002af92:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
9002af96:	4259      	negs	r1, r3
9002af98:	4159      	adcs	r1, r3
9002af9a:	f44f 6380 	mov.w	r3, #1024	; 0x400
9002af9e:	e7eb      	b.n	9002af78 <__swhatbuf_r+0x24>

9002afa0 <__smakebuf_r>:
9002afa0:	898b      	ldrh	r3, [r1, #12]
9002afa2:	b573      	push	{r0, r1, r4, r5, r6, lr}
9002afa4:	079d      	lsls	r5, r3, #30
9002afa6:	4606      	mov	r6, r0
9002afa8:	460c      	mov	r4, r1
9002afaa:	d507      	bpl.n	9002afbc <__smakebuf_r+0x1c>
9002afac:	f104 0347 	add.w	r3, r4, #71	; 0x47
9002afb0:	6023      	str	r3, [r4, #0]
9002afb2:	6123      	str	r3, [r4, #16]
9002afb4:	2301      	movs	r3, #1
9002afb6:	6163      	str	r3, [r4, #20]
9002afb8:	b002      	add	sp, #8
9002afba:	bd70      	pop	{r4, r5, r6, pc}
9002afbc:	ab01      	add	r3, sp, #4
9002afbe:	466a      	mov	r2, sp
9002afc0:	f7ff ffc8 	bl	9002af54 <__swhatbuf_r>
9002afc4:	9900      	ldr	r1, [sp, #0]
9002afc6:	4605      	mov	r5, r0
9002afc8:	4630      	mov	r0, r6
9002afca:	f7fe feab 	bl	90029d24 <_malloc_r>
9002afce:	b948      	cbnz	r0, 9002afe4 <__smakebuf_r+0x44>
9002afd0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
9002afd4:	059a      	lsls	r2, r3, #22
9002afd6:	d4ef      	bmi.n	9002afb8 <__smakebuf_r+0x18>
9002afd8:	f023 0303 	bic.w	r3, r3, #3
9002afdc:	f043 0302 	orr.w	r3, r3, #2
9002afe0:	81a3      	strh	r3, [r4, #12]
9002afe2:	e7e3      	b.n	9002afac <__smakebuf_r+0xc>
9002afe4:	89a3      	ldrh	r3, [r4, #12]
9002afe6:	6020      	str	r0, [r4, #0]
9002afe8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
9002afec:	81a3      	strh	r3, [r4, #12]
9002afee:	9b00      	ldr	r3, [sp, #0]
9002aff0:	6163      	str	r3, [r4, #20]
9002aff2:	9b01      	ldr	r3, [sp, #4]
9002aff4:	6120      	str	r0, [r4, #16]
9002aff6:	b15b      	cbz	r3, 9002b010 <__smakebuf_r+0x70>
9002aff8:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
9002affc:	4630      	mov	r0, r6
9002affe:	f000 f837 	bl	9002b070 <_isatty_r>
9002b002:	b128      	cbz	r0, 9002b010 <__smakebuf_r+0x70>
9002b004:	89a3      	ldrh	r3, [r4, #12]
9002b006:	f023 0303 	bic.w	r3, r3, #3
9002b00a:	f043 0301 	orr.w	r3, r3, #1
9002b00e:	81a3      	strh	r3, [r4, #12]
9002b010:	89a3      	ldrh	r3, [r4, #12]
9002b012:	431d      	orrs	r5, r3
9002b014:	81a5      	strh	r5, [r4, #12]
9002b016:	e7cf      	b.n	9002afb8 <__smakebuf_r+0x18>

9002b018 <memmove>:
9002b018:	4288      	cmp	r0, r1
9002b01a:	b510      	push	{r4, lr}
9002b01c:	eb01 0402 	add.w	r4, r1, r2
9002b020:	d902      	bls.n	9002b028 <memmove+0x10>
9002b022:	4284      	cmp	r4, r0
9002b024:	4623      	mov	r3, r4
9002b026:	d807      	bhi.n	9002b038 <memmove+0x20>
9002b028:	1e43      	subs	r3, r0, #1
9002b02a:	42a1      	cmp	r1, r4
9002b02c:	d008      	beq.n	9002b040 <memmove+0x28>
9002b02e:	f811 2b01 	ldrb.w	r2, [r1], #1
9002b032:	f803 2f01 	strb.w	r2, [r3, #1]!
9002b036:	e7f8      	b.n	9002b02a <memmove+0x12>
9002b038:	4402      	add	r2, r0
9002b03a:	4601      	mov	r1, r0
9002b03c:	428a      	cmp	r2, r1
9002b03e:	d100      	bne.n	9002b042 <memmove+0x2a>
9002b040:	bd10      	pop	{r4, pc}
9002b042:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
9002b046:	f802 4d01 	strb.w	r4, [r2, #-1]!
9002b04a:	e7f7      	b.n	9002b03c <memmove+0x24>

9002b04c <_fstat_r>:
9002b04c:	b538      	push	{r3, r4, r5, lr}
9002b04e:	4d07      	ldr	r5, [pc, #28]	; (9002b06c <_fstat_r+0x20>)
9002b050:	2300      	movs	r3, #0
9002b052:	4604      	mov	r4, r0
9002b054:	4608      	mov	r0, r1
9002b056:	4611      	mov	r1, r2
9002b058:	602b      	str	r3, [r5, #0]
9002b05a:	f7da fdaf 	bl	90005bbc <_fstat>
9002b05e:	1c43      	adds	r3, r0, #1
9002b060:	d102      	bne.n	9002b068 <_fstat_r+0x1c>
9002b062:	682b      	ldr	r3, [r5, #0]
9002b064:	b103      	cbz	r3, 9002b068 <_fstat_r+0x1c>
9002b066:	6023      	str	r3, [r4, #0]
9002b068:	bd38      	pop	{r3, r4, r5, pc}
9002b06a:	bf00      	nop
9002b06c:	24024164 	.word	0x24024164

9002b070 <_isatty_r>:
9002b070:	b538      	push	{r3, r4, r5, lr}
9002b072:	4d06      	ldr	r5, [pc, #24]	; (9002b08c <_isatty_r+0x1c>)
9002b074:	2300      	movs	r3, #0
9002b076:	4604      	mov	r4, r0
9002b078:	4608      	mov	r0, r1
9002b07a:	602b      	str	r3, [r5, #0]
9002b07c:	f7da fda4 	bl	90005bc8 <_isatty>
9002b080:	1c43      	adds	r3, r0, #1
9002b082:	d102      	bne.n	9002b08a <_isatty_r+0x1a>
9002b084:	682b      	ldr	r3, [r5, #0]
9002b086:	b103      	cbz	r3, 9002b08a <_isatty_r+0x1a>
9002b088:	6023      	str	r3, [r4, #0]
9002b08a:	bd38      	pop	{r3, r4, r5, pc}
9002b08c:	24024164 	.word	0x24024164

9002b090 <_realloc_r>:
9002b090:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9002b094:	4680      	mov	r8, r0
9002b096:	4614      	mov	r4, r2
9002b098:	460e      	mov	r6, r1
9002b09a:	b921      	cbnz	r1, 9002b0a6 <_realloc_r+0x16>
9002b09c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
9002b0a0:	4611      	mov	r1, r2
9002b0a2:	f7fe be3f 	b.w	90029d24 <_malloc_r>
9002b0a6:	b92a      	cbnz	r2, 9002b0b4 <_realloc_r+0x24>
9002b0a8:	f7ff fa2e 	bl	9002a508 <_free_r>
9002b0ac:	4625      	mov	r5, r4
9002b0ae:	4628      	mov	r0, r5
9002b0b0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9002b0b4:	f000 f81b 	bl	9002b0ee <_malloc_usable_size_r>
9002b0b8:	4284      	cmp	r4, r0
9002b0ba:	4607      	mov	r7, r0
9002b0bc:	d802      	bhi.n	9002b0c4 <_realloc_r+0x34>
9002b0be:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
9002b0c2:	d812      	bhi.n	9002b0ea <_realloc_r+0x5a>
9002b0c4:	4621      	mov	r1, r4
9002b0c6:	4640      	mov	r0, r8
9002b0c8:	f7fe fe2c 	bl	90029d24 <_malloc_r>
9002b0cc:	4605      	mov	r5, r0
9002b0ce:	2800      	cmp	r0, #0
9002b0d0:	d0ed      	beq.n	9002b0ae <_realloc_r+0x1e>
9002b0d2:	42bc      	cmp	r4, r7
9002b0d4:	4622      	mov	r2, r4
9002b0d6:	4631      	mov	r1, r6
9002b0d8:	bf28      	it	cs
9002b0da:	463a      	movcs	r2, r7
9002b0dc:	f7ff f9a7 	bl	9002a42e <memcpy>
9002b0e0:	4631      	mov	r1, r6
9002b0e2:	4640      	mov	r0, r8
9002b0e4:	f7ff fa10 	bl	9002a508 <_free_r>
9002b0e8:	e7e1      	b.n	9002b0ae <_realloc_r+0x1e>
9002b0ea:	4635      	mov	r5, r6
9002b0ec:	e7df      	b.n	9002b0ae <_realloc_r+0x1e>

9002b0ee <_malloc_usable_size_r>:
9002b0ee:	f851 3c04 	ldr.w	r3, [r1, #-4]
9002b0f2:	1f18      	subs	r0, r3, #4
9002b0f4:	2b00      	cmp	r3, #0
9002b0f6:	bfbc      	itt	lt
9002b0f8:	580b      	ldrlt	r3, [r1, r0]
9002b0fa:	18c0      	addlt	r0, r0, r3
9002b0fc:	4770      	bx	lr
	...

9002b100 <_sbrk>:
9002b100:	4a04      	ldr	r2, [pc, #16]	; (9002b114 <_sbrk+0x14>)
9002b102:	6811      	ldr	r1, [r2, #0]
9002b104:	4603      	mov	r3, r0
9002b106:	b909      	cbnz	r1, 9002b10c <_sbrk+0xc>
9002b108:	4903      	ldr	r1, [pc, #12]	; (9002b118 <_sbrk+0x18>)
9002b10a:	6011      	str	r1, [r2, #0]
9002b10c:	6810      	ldr	r0, [r2, #0]
9002b10e:	4403      	add	r3, r0
9002b110:	6013      	str	r3, [r2, #0]
9002b112:	4770      	bx	lr
9002b114:	24024304 	.word	0x24024304
9002b118:	24024308 	.word	0x24024308

9002b11c <_init>:
9002b11c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9002b11e:	bf00      	nop
9002b120:	bcf8      	pop	{r3, r4, r5, r6, r7}
9002b122:	bc08      	pop	{r3}
9002b124:	469e      	mov	lr, r3
9002b126:	4770      	bx	lr

9002b128 <_fini>:
9002b128:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9002b12a:	bf00      	nop
9002b12c:	bcf8      	pop	{r3, r4, r5, r6, r7}
9002b12e:	bc08      	pop	{r3}
9002b130:	469e      	mov	lr, r3
9002b132:	4770      	bx	lr
