
STM32H750B-DK.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .bootloader   0000227c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .isr_vector   00000298  90000000  90000000  00020000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .text         00026dd4  900002a0  900002a0  000202a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00003884  90027074  90027074  00047074  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000018  9002a8f8  9002a8f8  0004a8f8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .ARM.extab    00000000  9002a910  9002a910  000c14b4  2**0
                  CONTENTS
  6 .ARM          00000000  9002a910  9002a910  000c14b4  2**0
                  CONTENTS
  7 .preinit_array 00000000  9002a910  9002a910  000c14b4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  8 .init_array   00000018  9002a910  9002a910  0004a910  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .fini_array   00000008  9002a928  9002a928  0004a928  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .data         00000154  24000000  9002a930  00050000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 11 .bss          00024060  24000158  9002aa84  00050158  2**3
                  ALLOC
 12 ._user_heap_stack 00002000  240241b8  9002aa84  000541b8  2**0
                  ALLOC
 13 .ARM.attributes 0000002e  00000000  00000000  000c14b4  2**0
                  CONTENTS, READONLY
 14 FontFlashSection 00000c70  90200000  90200000  00060000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 15 TextFlashSection 00000054  90200c70  90200c70  00060c70  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 ExtFlashSection 000607f0  90200cc4  90200cc4  00060cc4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 17 TouchGFX_Framebuffer 000bf400  d0000000  d0000000  000d0000  2**2
                  ALLOC
 18 Video_RGB_Buffer 00043800  d00bf400  d00bf400  000d0000  2**2
                  ALLOC
 19 .comment      000000c2  00000000  00000000  000c14e2  2**0
                  CONTENTS, READONLY
 20 .debug_line   00073c07  00000000  00000000  000c15a4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000005f  00000000  00000000  001351ab  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_info   000f7e98  00000000  00000000  0013520a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_abbrev 00018503  00000000  00000000  0022d0a2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_aranges 00003540  00000000  00000000  002455a8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_str    001a17c4  00000000  00000000  00248ae8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_rnglists 0000757f  00000000  00000000  003ea2ac  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_macro  00048841  00000000  00000000  003f182b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 28 .debug_frame  0000abb0  00000000  00000000  0043a06c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 29 .debug_loclists 00034582  00000000  00000000  00444c1c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

900002a0 <__do_global_dtors_aux>:
900002a0:	b510      	push	{r4, lr}
900002a2:	4c05      	ldr	r4, [pc, #20]	; (900002b8 <__do_global_dtors_aux+0x18>)
900002a4:	7823      	ldrb	r3, [r4, #0]
900002a6:	b933      	cbnz	r3, 900002b6 <__do_global_dtors_aux+0x16>
900002a8:	4b04      	ldr	r3, [pc, #16]	; (900002bc <__do_global_dtors_aux+0x1c>)
900002aa:	b113      	cbz	r3, 900002b2 <__do_global_dtors_aux+0x12>
900002ac:	4804      	ldr	r0, [pc, #16]	; (900002c0 <__do_global_dtors_aux+0x20>)
900002ae:	f3af 8000 	nop.w
900002b2:	2301      	movs	r3, #1
900002b4:	7023      	strb	r3, [r4, #0]
900002b6:	bd10      	pop	{r4, pc}
900002b8:	24000158 	.word	0x24000158
900002bc:	00000000 	.word	0x00000000
900002c0:	9002705c 	.word	0x9002705c

900002c4 <frame_dummy>:
900002c4:	b508      	push	{r3, lr}
900002c6:	4b03      	ldr	r3, [pc, #12]	; (900002d4 <frame_dummy+0x10>)
900002c8:	b11b      	cbz	r3, 900002d2 <frame_dummy+0xe>
900002ca:	4903      	ldr	r1, [pc, #12]	; (900002d8 <frame_dummy+0x14>)
900002cc:	4803      	ldr	r0, [pc, #12]	; (900002dc <frame_dummy+0x18>)
900002ce:	f3af 8000 	nop.w
900002d2:	bd08      	pop	{r3, pc}
900002d4:	00000000 	.word	0x00000000
900002d8:	2400015c 	.word	0x2400015c
900002dc:	9002705c 	.word	0x9002705c

900002e0 <memchr>:
900002e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
900002e4:	2a10      	cmp	r2, #16
900002e6:	db2b      	blt.n	90000340 <memchr+0x60>
900002e8:	f010 0f07 	tst.w	r0, #7
900002ec:	d008      	beq.n	90000300 <memchr+0x20>
900002ee:	f810 3b01 	ldrb.w	r3, [r0], #1
900002f2:	3a01      	subs	r2, #1
900002f4:	428b      	cmp	r3, r1
900002f6:	d02d      	beq.n	90000354 <memchr+0x74>
900002f8:	f010 0f07 	tst.w	r0, #7
900002fc:	b342      	cbz	r2, 90000350 <memchr+0x70>
900002fe:	d1f6      	bne.n	900002ee <memchr+0xe>
90000300:	b4f0      	push	{r4, r5, r6, r7}
90000302:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
90000306:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
9000030a:	f022 0407 	bic.w	r4, r2, #7
9000030e:	f07f 0700 	mvns.w	r7, #0
90000312:	2300      	movs	r3, #0
90000314:	e8f0 5602 	ldrd	r5, r6, [r0], #8
90000318:	3c08      	subs	r4, #8
9000031a:	ea85 0501 	eor.w	r5, r5, r1
9000031e:	ea86 0601 	eor.w	r6, r6, r1
90000322:	fa85 f547 	uadd8	r5, r5, r7
90000326:	faa3 f587 	sel	r5, r3, r7
9000032a:	fa86 f647 	uadd8	r6, r6, r7
9000032e:	faa5 f687 	sel	r6, r5, r7
90000332:	b98e      	cbnz	r6, 90000358 <memchr+0x78>
90000334:	d1ee      	bne.n	90000314 <memchr+0x34>
90000336:	bcf0      	pop	{r4, r5, r6, r7}
90000338:	f001 01ff 	and.w	r1, r1, #255	; 0xff
9000033c:	f002 0207 	and.w	r2, r2, #7
90000340:	b132      	cbz	r2, 90000350 <memchr+0x70>
90000342:	f810 3b01 	ldrb.w	r3, [r0], #1
90000346:	3a01      	subs	r2, #1
90000348:	ea83 0301 	eor.w	r3, r3, r1
9000034c:	b113      	cbz	r3, 90000354 <memchr+0x74>
9000034e:	d1f8      	bne.n	90000342 <memchr+0x62>
90000350:	2000      	movs	r0, #0
90000352:	4770      	bx	lr
90000354:	3801      	subs	r0, #1
90000356:	4770      	bx	lr
90000358:	2d00      	cmp	r5, #0
9000035a:	bf06      	itte	eq
9000035c:	4635      	moveq	r5, r6
9000035e:	3803      	subeq	r0, #3
90000360:	3807      	subne	r0, #7
90000362:	f015 0f01 	tst.w	r5, #1
90000366:	d107      	bne.n	90000378 <memchr+0x98>
90000368:	3001      	adds	r0, #1
9000036a:	f415 7f80 	tst.w	r5, #256	; 0x100
9000036e:	bf02      	ittt	eq
90000370:	3001      	addeq	r0, #1
90000372:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
90000376:	3001      	addeq	r0, #1
90000378:	bcf0      	pop	{r4, r5, r6, r7}
9000037a:	3801      	subs	r0, #1
9000037c:	4770      	bx	lr
9000037e:	bf00      	nop

90000380 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack      /* set stack pointer */
90000380:	f8df d034 	ldr.w	sp, [pc, #52]	; 900003b8 <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
90000384:	2100      	movs	r1, #0
  b  LoopCopyDataInit
90000386:	e003      	b.n	90000390 <LoopCopyDataInit>

90000388 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
90000388:	4b0c      	ldr	r3, [pc, #48]	; (900003bc <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
9000038a:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
9000038c:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
9000038e:	3104      	adds	r1, #4

90000390 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
90000390:	480b      	ldr	r0, [pc, #44]	; (900003c0 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
90000392:	4b0c      	ldr	r3, [pc, #48]	; (900003c4 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
90000394:	1842      	adds	r2, r0, r1
  cmp  r2, r3
90000396:	429a      	cmp	r2, r3
  bcc  CopyDataInit
90000398:	d3f6      	bcc.n	90000388 <CopyDataInit>
  ldr  r2, =_sbss
9000039a:	4a0b      	ldr	r2, [pc, #44]	; (900003c8 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
9000039c:	e002      	b.n	900003a4 <LoopFillZerobss>

9000039e <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
9000039e:	2300      	movs	r3, #0
  str  r3, [r2], #4
900003a0:	f842 3b04 	str.w	r3, [r2], #4

900003a4 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
900003a4:	4b09      	ldr	r3, [pc, #36]	; (900003cc <LoopFillZerobss+0x28>)
  cmp  r2, r3
900003a6:	429a      	cmp	r2, r3
  bcc  FillZerobss
900003a8:	d3f9      	bcc.n	9000039e <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
900003aa:	f007 f963 	bl	90007674 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
900003ae:	f026 f961 	bl	90026674 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
900003b2:	f002 fc57 	bl	90002c64 <main>
  bx  lr    
900003b6:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
900003b8:	24080000 	.word	0x24080000
  ldr  r3, =_sidata
900003bc:	9002a930 	.word	0x9002a930
  ldr  r0, =_sdata
900003c0:	24000000 	.word	0x24000000
  ldr  r3, =_edata
900003c4:	24000154 	.word	0x24000154
  ldr  r2, =_sbss
900003c8:	24000158 	.word	0x24000158
  ldr  r3, = _ebss
900003cc:	240241b8 	.word	0x240241b8

900003d0 <ADC3_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
900003d0:	e7fe      	b.n	900003d0 <ADC3_IRQHandler>
	...

900003d4 <MX_LIBJPEG_Init>:
  */

  /* USER CODE BEGIN 3 */
  /* USER CODE END 3 */

}
900003d4:	4770      	bx	lr
900003d6:	bf00      	nop

900003d8 <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
900003d8:	4770      	bx	lr
900003da:	bf00      	nop

900003dc <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
900003dc:	b508      	push	{r3, lr}
    // Calling forward to touchgfx_init in C++ domain
    touchgfx_components_init();
900003de:	f001 ff8b 	bl	900022f8 <touchgfx_components_init>
    touchgfx_init();
}
900003e2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    touchgfx_init();
900003e6:	f001 bf0b 	b.w	90002200 <touchgfx_init>
900003ea:	bf00      	nop

900003ec <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void* argument)
{
    // Calling forward to touchgfx_taskEntry in C++ domain
    touchgfx_taskEntry();
900003ec:	f001 bf86 	b.w	900022fc <touchgfx_taskEntry>

900003f0 <_ZN8touchgfx18MCUInstrumentation13getCCConsumedEv>:
     *
     * @return clock cycles.
     */
    virtual uint32_t getCCConsumed()
    {
        return cc_consumed;
900003f0:	6840      	ldr	r0, [r0, #4]
    }
900003f2:	4770      	bx	lr

900003f4 <_ZN8touchgfx18MCUInstrumentation13setCCConsumedEm>:
     *
     * @param  val number of clock cycles.
     */
    virtual void setCCConsumed(uint32_t val)
    {
        cc_consumed = val;
900003f4:	6041      	str	r1, [r0, #4]
    }
900003f6:	4770      	bx	lr

900003f8 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>:
    //                                    Embedded Trace Macrocell (ETM)
    //                                    Trace Port Interface Unit (TPIU).
    //                                    This enables control of power usage unless tracing is required. The application can enable this, for ITM use, or use by a debugger.

    // Enable Debug Exception and Monitor Control Register
    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
900003f8:	f04f 20e0 	mov.w	r0, #3758153728	; 0xe000e000
    // Enable Lock Access Register
    *((volatile unsigned int*)0xE0001FB0) |= 0xC5ACCE55;
900003fc:	4b08      	ldr	r3, [pc, #32]	; (90000420 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x28>)
900003fe:	4a09      	ldr	r2, [pc, #36]	; (90000424 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x2c>)
    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
90000400:	f8d0 1dfc 	ldr.w	r1, [r0, #3580]	; 0xdfc
90000404:	f041 7180 	orr.w	r1, r1, #16777216	; 0x1000000
90000408:	f8c0 1dfc 	str.w	r1, [r0, #3580]	; 0xdfc
    *((volatile unsigned int*)0xE0001FB0) |= 0xC5ACCE55;
9000040c:	f8d3 1fb0 	ldr.w	r1, [r3, #4016]	; 0xfb0
90000410:	430a      	orrs	r2, r1
90000412:	f8c3 2fb0 	str.w	r2, [r3, #4016]	; 0xfb0
    // Enable Data Watchpoint and Trace Control Register
    *((volatile unsigned int*)0xE0001000) |= 1;
90000416:	681a      	ldr	r2, [r3, #0]
90000418:	f042 0201 	orr.w	r2, r2, #1
9000041c:	601a      	str	r2, [r3, #0]
}
9000041e:	4770      	bx	lr
90000420:	e0001000 	.word	0xe0001000
90000424:	c5acce55 	.word	0xc5acce55

90000428 <_ZN8touchgfx25CortexMMCUInstrumentation12getElapsedUSEjjj>:

//Board specific clockfrequency
unsigned int CortexMMCUInstrumentation::getElapsedUS(unsigned int start, unsigned int now, unsigned int clockfrequency)
{
    return ((now - start) + (clockfrequency / 2)) / clockfrequency;
90000428:	1a51      	subs	r1, r2, r1
9000042a:	eb01 0153 	add.w	r1, r1, r3, lsr #1
}
9000042e:	fbb1 f0f3 	udiv	r0, r1, r3
90000432:	4770      	bx	lr

90000434 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv>:

unsigned int CortexMMCUInstrumentation::getCPUCycles()
{
    return *((volatile unsigned int*)0xE0001004);
90000434:	4b01      	ldr	r3, [pc, #4]	; (9000043c <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv+0x8>)
90000436:	6858      	ldr	r0, [r3, #4]
}
90000438:	4770      	bx	lr
9000043a:	bf00      	nop
9000043c:	e0001000 	.word	0xe0001000

90000440 <_ZN8touchgfx25CortexMMCUInstrumentationD1Ev>:
 *        Interface for instrumenting Cortex-M processors to measure MCU load via measured CPU
 *        cycles.
 *
 * @sa MCUInstrumentation
 */
class CortexMMCUInstrumentation : public MCUInstrumentation
90000440:	4770      	bx	lr
90000442:	bf00      	nop

90000444 <_ZN8touchgfx25CortexMMCUInstrumentationD0Ev>:
90000444:	b510      	push	{r4, lr}
90000446:	4604      	mov	r4, r0
90000448:	210c      	movs	r1, #12
9000044a:	f025 fd52 	bl	90025ef2 <_ZdlPvj>
9000044e:	4620      	mov	r0, r4
90000450:	bd10      	pop	{r4, pc}
90000452:	bf00      	nop

90000454 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb>:

void CortexMMCUInstrumentation::setMCUActive(bool active)
{
    if (active) //idle task sched out
    {
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000454:	6803      	ldr	r3, [r0, #0]
90000456:	4a0c      	ldr	r2, [pc, #48]	; (90000488 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x34>)
90000458:	691b      	ldr	r3, [r3, #16]
{
9000045a:	b510      	push	{r4, lr}
9000045c:	4604      	mov	r4, r0
    if (active) //idle task sched out
9000045e:	b149      	cbz	r1, 90000474 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x20>
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000460:	4293      	cmp	r3, r2
90000462:	d10d      	bne.n	90000480 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x2c>
    return *((volatile unsigned int*)0xE0001004);
90000464:	4b09      	ldr	r3, [pc, #36]	; (9000048c <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x38>)
90000466:	6858      	ldr	r0, [r3, #4]
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000468:	68a2      	ldr	r2, [r4, #8]
        cc_consumed += cc_temp;
9000046a:	6863      	ldr	r3, [r4, #4]
9000046c:	1a9b      	subs	r3, r3, r2
9000046e:	4403      	add	r3, r0
90000470:	6063      	str	r3, [r4, #4]
    }
    else //idle task sched in
    {
        cc_in = getCPUCycles();
    }
}
90000472:	bd10      	pop	{r4, pc}
        cc_in = getCPUCycles();
90000474:	4293      	cmp	r3, r2
90000476:	d105      	bne.n	90000484 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x30>
    return *((volatile unsigned int*)0xE0001004);
90000478:	4b04      	ldr	r3, [pc, #16]	; (9000048c <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x38>)
9000047a:	6858      	ldr	r0, [r3, #4]
        cc_in = getCPUCycles();
9000047c:	60a0      	str	r0, [r4, #8]
}
9000047e:	bd10      	pop	{r4, pc}
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000480:	4798      	blx	r3
90000482:	e7f1      	b.n	90000468 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x14>
        cc_in = getCPUCycles();
90000484:	4798      	blx	r3
90000486:	e7f9      	b.n	9000047c <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x28>
90000488:	90000435 	.word	0x90000435
9000048c:	e0001000 	.word	0xe0001000

90000490 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
90000490:	4770      	bx	lr
90000492:	bf00      	nop
90000494:	0000      	movs	r0, r0
	...

90000498 <_ZN20STM32TouchController4initEv>:

#include <STM32TouchController.hpp>
#include "stm32h750b_discovery_ts.h"

void STM32TouchController::init()
{
90000498:	b500      	push	{lr}
9000049a:	b085      	sub	sp, #20
     *
     */
    TS_Init_t hTS;
    hTS.Orientation = TS_SWAP_XY;
    hTS.Accuracy = 0;
    hTS.Width = 480;
9000049c:	2208      	movs	r2, #8
9000049e:	2300      	movs	r3, #0
    hTS.Height = 272;
    BSP_TS_Init(0, &hTS);
900004a0:	2000      	movs	r0, #0
900004a2:	4669      	mov	r1, sp
    hTS.Width = 480;
900004a4:	ed9f 7b06 	vldr	d7, [pc, #24]	; 900004c0 <_ZN20STM32TouchController4initEv+0x28>
900004a8:	e9cd 2302 	strd	r2, r3, [sp, #8]
900004ac:	ed8d 7b00 	vstr	d7, [sp]
    BSP_TS_Init(0, &hTS);
900004b0:	f006 ffee 	bl	90007490 <BSP_TS_Init>
}
900004b4:	b005      	add	sp, #20
900004b6:	f85d fb04 	ldr.w	pc, [sp], #4
900004ba:	bf00      	nop
900004bc:	f3af 8000 	nop.w
900004c0:	000001e0 	.word	0x000001e0
900004c4:	00000110 	.word	0x00000110

900004c8 <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
900004c8:	b530      	push	{r4, r5, lr}
900004ca:	b085      	sub	sp, #20
     *
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */
    TS_State_t  TS_State = { 0 };
900004cc:	2000      	movs	r0, #0
{
900004ce:	460d      	mov	r5, r1
900004d0:	4614      	mov	r4, r2
    BSP_TS_GetState(0, &TS_State);
900004d2:	a901      	add	r1, sp, #4
    TS_State_t  TS_State = { 0 };
900004d4:	9001      	str	r0, [sp, #4]
900004d6:	e9cd 0002 	strd	r0, r0, [sp, #8]
    BSP_TS_GetState(0, &TS_State);
900004da:	f007 f867 	bl	900075ac <BSP_TS_GetState>
    if (TS_State.TouchDetected)
900004de:	9801      	ldr	r0, [sp, #4]
900004e0:	b120      	cbz	r0, 900004ec <_ZN20STM32TouchController11sampleTouchERlS0_+0x24>
    {
        x = TS_State.TouchX;
        y = TS_State.TouchY;
        return true;
900004e2:	2001      	movs	r0, #1
        y = TS_State.TouchY;
900004e4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
        x = TS_State.TouchX;
900004e8:	602a      	str	r2, [r5, #0]
        y = TS_State.TouchY;
900004ea:	6023      	str	r3, [r4, #0]
    }

    return false;
}
900004ec:	b005      	add	sp, #20
900004ee:	bd30      	pop	{r4, r5, pc}

900004f0 <_ZN20STM32TouchControllerD0Ev>:
900004f0:	b510      	push	{r4, lr}
900004f2:	4604      	mov	r4, r0
900004f4:	2104      	movs	r1, #4
900004f6:	f025 fcfc 	bl	90025ef2 <_ZdlPvj>
900004fa:	4620      	mov	r0, r4
900004fc:	bd10      	pop	{r4, pc}
900004fe:	bf00      	nop

90000500 <_ZN8touchgfx4GPIO4initEv>:
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
90000500:	2108      	movs	r1, #8
90000502:	4810      	ldr	r0, [pc, #64]	; (90000544 <_ZN8touchgfx4GPIO4initEv+0x44>)
{
90000504:	b508      	push	{r3, lr}
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
90000506:	f007 fdb7 	bl	90008078 <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
9000050a:	2801      	cmp	r0, #1
9000050c:	d101      	bne.n	90000512 <_ZN8touchgfx4GPIO4initEv+0x12>
            GPIO_InvertedLevels[id] = 1;
9000050e:	4b0e      	ldr	r3, [pc, #56]	; (90000548 <_ZN8touchgfx4GPIO4initEv+0x48>)
90000510:	6018      	str	r0, [r3, #0]
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
90000512:	2180      	movs	r1, #128	; 0x80
90000514:	480d      	ldr	r0, [pc, #52]	; (9000054c <_ZN8touchgfx4GPIO4initEv+0x4c>)
90000516:	f007 fdaf 	bl	90008078 <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
9000051a:	2801      	cmp	r0, #1
9000051c:	d101      	bne.n	90000522 <_ZN8touchgfx4GPIO4initEv+0x22>
            GPIO_InvertedLevels[id] = 1;
9000051e:	4b0a      	ldr	r3, [pc, #40]	; (90000548 <_ZN8touchgfx4GPIO4initEv+0x48>)
90000520:	6058      	str	r0, [r3, #4]
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
90000522:	2140      	movs	r1, #64	; 0x40
90000524:	4809      	ldr	r0, [pc, #36]	; (9000054c <_ZN8touchgfx4GPIO4initEv+0x4c>)
90000526:	f007 fda7 	bl	90008078 <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
9000052a:	2801      	cmp	r0, #1
9000052c:	d101      	bne.n	90000532 <_ZN8touchgfx4GPIO4initEv+0x32>
            GPIO_InvertedLevels[id] = 1;
9000052e:	4b06      	ldr	r3, [pc, #24]	; (90000548 <_ZN8touchgfx4GPIO4initEv+0x48>)
90000530:	6098      	str	r0, [r3, #8]
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
90000532:	2140      	movs	r1, #64	; 0x40
90000534:	4806      	ldr	r0, [pc, #24]	; (90000550 <_ZN8touchgfx4GPIO4initEv+0x50>)
90000536:	f007 fd9f 	bl	90008078 <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
9000053a:	2801      	cmp	r0, #1
9000053c:	d101      	bne.n	90000542 <_ZN8touchgfx4GPIO4initEv+0x42>
            GPIO_InvertedLevels[id] = 1;
9000053e:	4b02      	ldr	r3, [pc, #8]	; (90000548 <_ZN8touchgfx4GPIO4initEv+0x48>)
90000540:	60d8      	str	r0, [r3, #12]
}
90000542:	bd08      	pop	{r3, pc}
90000544:	58021800 	.word	0x58021800
90000548:	24000174 	.word	0x24000174
9000054c:	58020400 	.word	0x58020400
90000550:	58020000 	.word	0x58020000

90000554 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
    switch (id)
90000554:	2803      	cmp	r0, #3
90000556:	d827      	bhi.n	900005a8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x54>
90000558:	e8df f000 	tbb	[pc, r0]
9000055c:	020b141d 	.word	0x020b141d
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
90000560:	4b12      	ldr	r3, [pc, #72]	; (900005ac <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000562:	2140      	movs	r1, #64	; 0x40
90000564:	4812      	ldr	r0, [pc, #72]	; (900005b0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x5c>)
90000566:	68da      	ldr	r2, [r3, #12]
90000568:	fab2 f282 	clz	r2, r2
9000056c:	0952      	lsrs	r2, r2, #5
9000056e:	f007 bd89 	b.w	90008084 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
90000572:	4b0e      	ldr	r3, [pc, #56]	; (900005ac <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000574:	2140      	movs	r1, #64	; 0x40
90000576:	480f      	ldr	r0, [pc, #60]	; (900005b4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x60>)
90000578:	689a      	ldr	r2, [r3, #8]
9000057a:	fab2 f282 	clz	r2, r2
9000057e:	0952      	lsrs	r2, r2, #5
90000580:	f007 bd80 	b.w	90008084 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
90000584:	4b09      	ldr	r3, [pc, #36]	; (900005ac <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000586:	2180      	movs	r1, #128	; 0x80
90000588:	480a      	ldr	r0, [pc, #40]	; (900005b4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x60>)
9000058a:	685a      	ldr	r2, [r3, #4]
9000058c:	fab2 f282 	clz	r2, r2
90000590:	0952      	lsrs	r2, r2, #5
90000592:	f007 bd77 	b.w	90008084 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
90000596:	4b05      	ldr	r3, [pc, #20]	; (900005ac <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000598:	2108      	movs	r1, #8
9000059a:	4807      	ldr	r0, [pc, #28]	; (900005b8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x64>)
9000059c:	681a      	ldr	r2, [r3, #0]
9000059e:	fab2 f282 	clz	r2, r2
900005a2:	0952      	lsrs	r2, r2, #5
900005a4:	f007 bd6e 	b.w	90008084 <HAL_GPIO_WritePin>
}
900005a8:	4770      	bx	lr
900005aa:	bf00      	nop
900005ac:	24000174 	.word	0x24000174
900005b0:	58020000 	.word	0x58020000
900005b4:	58020400 	.word	0x58020400
900005b8:	58021800 	.word	0x58021800

900005bc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
    switch (id)
900005bc:	2803      	cmp	r0, #3
900005be:	d827      	bhi.n	90000610 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x54>
900005c0:	e8df f000 	tbb	[pc, r0]
900005c4:	020b141d 	.word	0x020b141d
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
900005c8:	4b12      	ldr	r3, [pc, #72]	; (90000614 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
900005ca:	2140      	movs	r1, #64	; 0x40
900005cc:	4812      	ldr	r0, [pc, #72]	; (90000618 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x5c>)
900005ce:	68da      	ldr	r2, [r3, #12]
900005d0:	3a00      	subs	r2, #0
900005d2:	bf18      	it	ne
900005d4:	2201      	movne	r2, #1
900005d6:	f007 bd55 	b.w	90008084 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
900005da:	4b0e      	ldr	r3, [pc, #56]	; (90000614 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
900005dc:	2140      	movs	r1, #64	; 0x40
900005de:	480f      	ldr	r0, [pc, #60]	; (9000061c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x60>)
900005e0:	689a      	ldr	r2, [r3, #8]
900005e2:	3a00      	subs	r2, #0
900005e4:	bf18      	it	ne
900005e6:	2201      	movne	r2, #1
900005e8:	f007 bd4c 	b.w	90008084 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
900005ec:	4b09      	ldr	r3, [pc, #36]	; (90000614 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
900005ee:	2180      	movs	r1, #128	; 0x80
900005f0:	480a      	ldr	r0, [pc, #40]	; (9000061c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x60>)
900005f2:	685a      	ldr	r2, [r3, #4]
900005f4:	3a00      	subs	r2, #0
900005f6:	bf18      	it	ne
900005f8:	2201      	movne	r2, #1
900005fa:	f007 bd43 	b.w	90008084 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
900005fe:	4b05      	ldr	r3, [pc, #20]	; (90000614 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
90000600:	2108      	movs	r1, #8
90000602:	4807      	ldr	r0, [pc, #28]	; (90000620 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x64>)
90000604:	681a      	ldr	r2, [r3, #0]
90000606:	3a00      	subs	r2, #0
90000608:	bf18      	it	ne
9000060a:	2201      	movne	r2, #1
9000060c:	f007 bd3a 	b.w	90008084 <HAL_GPIO_WritePin>
}
90000610:	4770      	bx	lr
90000612:	bf00      	nop
90000614:	24000174 	.word	0x24000174
90000618:	58020000 	.word	0x58020000
9000061c:	58020400 	.word	0x58020400
90000620:	58021800 	.word	0x58021800

90000624 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
    switch (id)
90000624:	2803      	cmp	r0, #3
90000626:	d813      	bhi.n	90000650 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x2c>
90000628:	e8df f000 	tbb	[pc, r0]
9000062c:	02060a0e 	.word	0x02060a0e
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
90000630:	2140      	movs	r1, #64	; 0x40
90000632:	4808      	ldr	r0, [pc, #32]	; (90000654 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x30>)
90000634:	f007 bd2a 	b.w	9000808c <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
90000638:	2140      	movs	r1, #64	; 0x40
9000063a:	4807      	ldr	r0, [pc, #28]	; (90000658 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x34>)
9000063c:	f007 bd26 	b.w	9000808c <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
90000640:	2180      	movs	r1, #128	; 0x80
90000642:	4805      	ldr	r0, [pc, #20]	; (90000658 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x34>)
90000644:	f007 bd22 	b.w	9000808c <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
90000648:	2108      	movs	r1, #8
9000064a:	4804      	ldr	r0, [pc, #16]	; (9000065c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x38>)
9000064c:	f007 bd1e 	b.w	9000808c <HAL_GPIO_TogglePin>
}
90000650:	4770      	bx	lr
90000652:	bf00      	nop
90000654:	58020000 	.word	0x58020000
90000658:	58020400 	.word	0x58020400
9000065c:	58021800 	.word	0x58021800

90000660 <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType()
    {
        return DMA_TYPE_GENERIC;
    }
90000660:	2000      	movs	r0, #0
90000662:	4770      	bx	lr

90000664 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
90000664:	2301      	movs	r3, #1
        requestedOrientation = orientation;
90000666:	f880 1078 	strb.w	r1, [r0, #120]	; 0x78
        displayOrientationChangeRequested = true;
9000066a:	f880 3079 	strb.w	r3, [r0, #121]	; 0x79
    }
9000066e:	4770      	bx	lr

90000670 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
90000670:	2000      	movs	r0, #0
90000672:	4770      	bx	lr

90000674 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000674:	1e0a      	subs	r2, r1, #0
90000676:	4b03      	ldr	r3, [pc, #12]	; (90000684 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000678:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
9000067a:	bf18      	it	ne
9000067c:	2201      	movne	r2, #1
9000067e:	701a      	strb	r2, [r3, #0]
    }
90000680:	4770      	bx	lr
90000682:	bf00      	nop
90000684:	2402357b 	.word	0x2402357b

90000688 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
90000688:	2000      	movs	r0, #0
9000068a:	4770      	bx	lr

9000068c <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
9000068c:	6b83      	ldr	r3, [r0, #56]	; 0x38
    virtual void taskDelay(uint16_t ms)
9000068e:	4608      	mov	r0, r1
        if (taskDelayFunc)
90000690:	b103      	cbz	r3, 90000694 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
90000692:	4718      	bx	r3
        }
    }
90000694:	4770      	bx	lr
90000696:	bf00      	nop

90000698 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
90000698:	f64f 70ff 	movw	r0, #65535	; 0xffff
9000069c:	4770      	bx	lr
9000069e:	bf00      	nop

900006a0 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
900006a0:	4770      	bx	lr
900006a2:	bf00      	nop

900006a4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
900006a4:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
900006a6:	4b09      	ldr	r3, [pc, #36]	; (900006cc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
900006a8:	881b      	ldrh	r3, [r3, #0]
900006aa:	428b      	cmp	r3, r1
900006ac:	d808      	bhi.n	900006c0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1c>
900006ae:	4b08      	ldr	r3, [pc, #32]	; (900006d0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
900006b0:	881b      	ldrh	r3, [r3, #0]
900006b2:	4293      	cmp	r3, r2
900006b4:	d804      	bhi.n	900006c0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1c>
        FRAME_BUFFER_WIDTH = width;
900006b6:	4807      	ldr	r0, [pc, #28]	; (900006d4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
        FRAME_BUFFER_HEIGHT = height;
900006b8:	4b07      	ldr	r3, [pc, #28]	; (900006d8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
        FRAME_BUFFER_WIDTH = width;
900006ba:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = height;
900006bc:	801a      	strh	r2, [r3, #0]
    }
900006be:	bd08      	pop	{r3, pc}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
900006c0:	4b06      	ldr	r3, [pc, #24]	; (900006dc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
900006c2:	219e      	movs	r1, #158	; 0x9e
900006c4:	4a06      	ldr	r2, [pc, #24]	; (900006e0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
900006c6:	4807      	ldr	r0, [pc, #28]	; (900006e4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
900006c8:	f025 fc42 	bl	90025f50 <__assert_func>
900006cc:	24023570 	.word	0x24023570
900006d0:	24023572 	.word	0x24023572
900006d4:	24023576 	.word	0x24023576
900006d8:	24023578 	.word	0x24023578
900006dc:	900270f4 	.word	0x900270f4
900006e0:	90027158 	.word	0x90027158
900006e4:	9002719c 	.word	0x9002719c

900006e8 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
900006e8:	b510      	push	{r4, lr}
900006ea:	4604      	mov	r4, r0
        swapFrameBuffers();
900006ec:	f010 fa52 	bl	90010b94 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
900006f0:	6823      	ldr	r3, [r4, #0]
900006f2:	4620      	mov	r0, r4
900006f4:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
900006f8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
900006fc:	4718      	bx	r3
900006fe:	bf00      	nop

90000700 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
90000700:	f001 bef4 	b.w	900024ec <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

90000704 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
90000704:	f001 bef8 	b.w	900024f8 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

90000708 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
 * @param rect The area of the screen that has been drawn, expressed in absolute coordinates.
 *
 * @see flushFrameBuffer().
 */
void TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
90000708:	b510      	push	{r4, lr}
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
9000070a:	f001 ffe1 	bl	900026d0 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>
  #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
    uint32_t ccsidr;
    uint32_t sets;
    uint32_t ways;

    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
9000070e:	4812      	ldr	r0, [pc, #72]	; (90000758 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x50>)
90000710:	2300      	movs	r3, #0
90000712:	f8c0 3084 	str.w	r3, [r0, #132]	; 0x84
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
90000716:	f3bf 8f4f 	dsb	sy
    __DSB();

    ccsidr = SCB->CCSIDR;
9000071a:	f8d0 3080 	ldr.w	r3, [r0, #128]	; 0x80
                                            /* clean & invalidate D-Cache */
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
    do {
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
      do {
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
9000071e:	f643 74e0 	movw	r4, #16352	; 0x3fe0
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
90000722:	f3c3 3c4e 	ubfx	ip, r3, #13, #15
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90000726:	f3c3 0ec9 	ubfx	lr, r3, #3, #10
9000072a:	ea4f 1c4c 	mov.w	ip, ip, lsl #5
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
9000072e:	ea0c 0104 	and.w	r1, ip, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90000732:	4673      	mov	r3, lr
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90000734:	ea41 7283 	orr.w	r2, r1, r3, lsl #30
                       ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
        #if defined ( __CC_ARM )
          __schedule_barrier();
        #endif
      } while (ways-- != 0U);
90000738:	3b01      	subs	r3, #1
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
9000073a:	f8c0 2274 	str.w	r2, [r0, #628]	; 0x274
      } while (ways-- != 0U);
9000073e:	1c5a      	adds	r2, r3, #1
90000740:	d1f8      	bne.n	90000734 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x2c>
    } while(sets-- != 0U);
90000742:	f1ac 0c20 	sub.w	ip, ip, #32
90000746:	f11c 0f20 	cmn.w	ip, #32
9000074a:	d1f0      	bne.n	9000072e <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x26>
9000074c:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90000750:	f3bf 8f6f 	isb	sy
    // If the framebuffer is placed in Write Through cached memory (e.g. SRAM) then we need
    // to flush the Dcache to make sure framebuffer is correct in RAM. That's done
    // using SCB_CleanInvalidateDCache().

    SCB_CleanInvalidateDCache();
}
90000754:	bd10      	pop	{r4, pc}
90000756:	bf00      	nop
90000758:	e000ed00 	.word	0xe000ed00

9000075c <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
9000075c:	f001 bea2 	b.w	900024a4 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

90000760 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
90000760:	f002 b8b4 	b.w	900028cc <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

90000764 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
90000764:	f002 b89e 	b.w	900028a4 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

90000768 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
90000768:	f001 bea6 	b.w	900024b8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

9000076c <_ZN20TouchGFXGeneratedHAL17unlockFrameBufferEv>:
     * @brief Unlocks the framebuffer.
     *
     * This specialization is marks DMA2D as un-reserved by the framwork.
     * @see HAL::unlockFrameBuffer
     */
    virtual void unlockFrameBuffer()
9000076c:	b510      	push	{r4, lr}
9000076e:	4604      	mov	r4, r0
    {
        HAL::unlockFrameBuffer();
90000770:	f00f fd8c 	bl	9001028c <_ZN8touchgfx3HAL17unlockFrameBufferEv>
        dma.start();
90000774:	6860      	ldr	r0, [r4, #4]
90000776:	6803      	ldr	r3, [r0, #0]
    }
90000778:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        dma.start();
9000077c:	691b      	ldr	r3, [r3, #16]
9000077e:	4718      	bx	r3

90000780 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
        HAL::flushFrameBuffer();
90000780:	f00f bc5a 	b.w	90010038 <_ZN8touchgfx3HAL16flushFrameBufferEv>

90000784 <_ZN11TouchGFXHALD0Ev>:
90000784:	b510      	push	{r4, lr}
90000786:	4604      	mov	r4, r0
90000788:	2188      	movs	r1, #136	; 0x88
9000078a:	f025 fbb2 	bl	90025ef2 <_ZdlPvj>
9000078e:	4620      	mov	r0, r4
90000790:	bd10      	pop	{r4, pc}
90000792:	bf00      	nop

90000794 <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
90000794:	f890 307a 	ldrb.w	r3, [r0, #122]	; 0x7a
90000798:	b11b      	cbz	r3, 900007a2 <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
9000079a:	6840      	ldr	r0, [r0, #4]
9000079c:	6803      	ldr	r3, [r0, #0]
9000079e:	681b      	ldr	r3, [r3, #0]
900007a0:	4718      	bx	r3
    }
900007a2:	4618      	mov	r0, r3
900007a4:	4770      	bx	lr
900007a6:	bf00      	nop

900007a8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void noTouch();

    /** Perform the actual display orientation change. */
    virtual void performDisplayOrientationChange()
    {
        if (requestedOrientation != nativeDisplayOrientation)
900007a8:	f890 2078 	ldrb.w	r2, [r0, #120]	; 0x78
900007ac:	f890 3034 	ldrb.w	r3, [r0, #52]	; 0x34
900007b0:	429a      	cmp	r2, r3
        {
            if (DISPLAY_ROTATION == rotate0)
900007b2:	4b0b      	ldr	r3, [pc, #44]	; (900007e0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x38>)
900007b4:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
900007b6:	d00b      	beq.n	900007d0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x28>
            if (DISPLAY_ROTATION == rotate0)
900007b8:	b94a      	cbnz	r2, 900007ce <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            {
                const uint16_t tmp = DISPLAY_HEIGHT;
900007ba:	4a0a      	ldr	r2, [pc, #40]	; (900007e4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
                DISPLAY_WIDTH = tmp;
                DISPLAY_ROTATION = rotate90;
900007bc:	f04f 0c01 	mov.w	ip, #1
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
900007c0:	4909      	ldr	r1, [pc, #36]	; (900007e8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            }
        }
        else if (DISPLAY_ROTATION != rotate0)
        {
            const uint16_t tmp = DISPLAY_HEIGHT;
900007c2:	8810      	ldrh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
            DISPLAY_WIDTH = tmp;
            DISPLAY_ROTATION = rotate0;
900007c4:	f883 c000 	strb.w	ip, [r3]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
900007c8:	880b      	ldrh	r3, [r1, #0]
            DISPLAY_WIDTH = tmp;
900007ca:	8008      	strh	r0, [r1, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
900007cc:	8013      	strh	r3, [r2, #0]
        }
    }
900007ce:	4770      	bx	lr
        else if (DISPLAY_ROTATION != rotate0)
900007d0:	2a00      	cmp	r2, #0
900007d2:	d0fc      	beq.n	900007ce <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            const uint16_t tmp = DISPLAY_HEIGHT;
900007d4:	4a03      	ldr	r2, [pc, #12]	; (900007e4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
            DISPLAY_ROTATION = rotate0;
900007d6:	f04f 0c00 	mov.w	ip, #0
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
900007da:	4903      	ldr	r1, [pc, #12]	; (900007e8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
900007dc:	e7f1      	b.n	900007c2 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x1a>
900007de:	bf00      	nop
900007e0:	24023574 	.word	0x24023574
900007e4:	24023572 	.word	0x24023572
900007e8:	24023570 	.word	0x24023570

900007ec <_ZN8touchgfx3HAL10getDMATypeEv>:
        return dma.getDMAType();
900007ec:	6840      	ldr	r0, [r0, #4]
900007ee:	4a04      	ldr	r2, [pc, #16]	; (90000800 <_ZN8touchgfx3HAL10getDMATypeEv+0x14>)
900007f0:	6803      	ldr	r3, [r0, #0]
900007f2:	699b      	ldr	r3, [r3, #24]
900007f4:	4293      	cmp	r3, r2
900007f6:	d101      	bne.n	900007fc <_ZN8touchgfx3HAL10getDMATypeEv+0x10>
    }
900007f8:	2000      	movs	r0, #0
900007fa:	4770      	bx	lr
        return dma.getDMAType();
900007fc:	4718      	bx	r3
900007fe:	bf00      	nop
90000800:	90000661 	.word	0x90000661

90000804 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
        assert(frameBuffer != 0 && "A framebuffer address must be set");
90000804:	b1a9      	cbz	r1, 90000832 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x2e>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
90000806:	6402      	str	r2, [r0, #64]	; 0x40
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
90000808:	3a00      	subs	r2, #0
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
9000080a:	63c1      	str	r1, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
9000080c:	bf18      	it	ne
9000080e:	2201      	movne	r2, #1
90000810:	490c      	ldr	r1, [pc, #48]	; (90000844 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x40>)
90000812:	700a      	strb	r2, [r1, #0]
        setAnimationStorage(animationStorage);
90000814:	6802      	ldr	r2, [r0, #0]
90000816:	490c      	ldr	r1, [pc, #48]	; (90000848 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x44>)
90000818:	f8d2 208c 	ldr.w	r2, [r2, #140]	; 0x8c
9000081c:	428a      	cmp	r2, r1
9000081e:	d106      	bne.n	9000082e <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x2a>
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000820:	1e19      	subs	r1, r3, #0
90000822:	4a0a      	ldr	r2, [pc, #40]	; (9000084c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x48>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000824:	6443      	str	r3, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000826:	bf18      	it	ne
90000828:	2101      	movne	r1, #1
9000082a:	7011      	strb	r1, [r2, #0]
9000082c:	4770      	bx	lr
        setAnimationStorage(animationStorage);
9000082e:	4619      	mov	r1, r3
90000830:	4710      	bx	r2
        assert(frameBuffer != 0 && "A framebuffer address must be set");
90000832:	4b07      	ldr	r3, [pc, #28]	; (90000850 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x4c>)
90000834:	f240 21d2 	movw	r1, #722	; 0x2d2
90000838:	4a06      	ldr	r2, [pc, #24]	; (90000854 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x50>)
9000083a:	4807      	ldr	r0, [pc, #28]	; (90000858 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x54>)
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
9000083c:	b510      	push	{r4, lr}
        assert(frameBuffer != 0 && "A framebuffer address must be set");
9000083e:	f025 fb87 	bl	90025f50 <__assert_func>
90000842:	bf00      	nop
90000844:	2402357a 	.word	0x2402357a
90000848:	90000675 	.word	0x90000675
9000084c:	2402357b 	.word	0x2402357b
90000850:	900271e4 	.word	0x900271e4
90000854:	9002721c 	.word	0x9002721c
90000858:	9002719c 	.word	0x9002719c

9000085c <_ZN11TouchGFXHAL9taskEntryEv>:
{
9000085c:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
9000085e:	6803      	ldr	r3, [r0, #0]
{
90000860:	4604      	mov	r4, r0
90000862:	4d17      	ldr	r5, [pc, #92]	; (900008c0 <_ZN11TouchGFXHAL9taskEntryEv+0x64>)
    enableLCDControllerInterrupt();
90000864:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
90000868:	4798      	blx	r3
    enableInterrupts();
9000086a:	6823      	ldr	r3, [r4, #0]
9000086c:	4620      	mov	r0, r4
9000086e:	6f9b      	ldr	r3, [r3, #120]	; 0x78
90000870:	4798      	blx	r3
    OSWrappers::waitForVSync();
90000872:	f001 f8e3 	bl	90001a3c <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
90000876:	6823      	ldr	r3, [r4, #0]
90000878:	4620      	mov	r0, r4
9000087a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
9000087c:	4798      	blx	r3
    HAL_GPIO_WritePin(LCD_RESET_GPIO_Port, LCD_RESET_Pin, GPIO_PIN_SET);
9000087e:	2201      	movs	r2, #1
90000880:	2104      	movs	r1, #4
90000882:	4810      	ldr	r0, [pc, #64]	; (900008c4 <_ZN11TouchGFXHAL9taskEntryEv+0x68>)
90000884:	f007 fbfe 	bl	90008084 <HAL_GPIO_WritePin>
    HAL_GPIO_WritePin(LCD_DE_GPIO_Port, LCD_DE_Pin, GPIO_PIN_SET);
90000888:	2201      	movs	r2, #1
9000088a:	2180      	movs	r1, #128	; 0x80
9000088c:	480e      	ldr	r0, [pc, #56]	; (900008c8 <_ZN11TouchGFXHAL9taskEntryEv+0x6c>)
9000088e:	f007 fbf9 	bl	90008084 <HAL_GPIO_WritePin>
    HAL_GPIO_WritePin(LCD_BL_CTRL_GPIO_Port, LCD_BL_CTRL_Pin, GPIO_PIN_SET);
90000892:	2201      	movs	r2, #1
90000894:	480d      	ldr	r0, [pc, #52]	; (900008cc <_ZN11TouchGFXHAL9taskEntryEv+0x70>)
90000896:	4611      	mov	r1, r2
90000898:	f007 fbf4 	bl	90008084 <HAL_GPIO_WritePin>
        OSWrappers::waitForVSync();
9000089c:	f001 f8ce 	bl	90001a3c <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
900008a0:	6823      	ldr	r3, [r4, #0]
        swapFrameBuffers();
900008a2:	4620      	mov	r0, r4
900008a4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
900008a6:	42ab      	cmp	r3, r5
900008a8:	d107      	bne.n	900008ba <_ZN11TouchGFXHAL9taskEntryEv+0x5e>
900008aa:	f010 f973 	bl	90010b94 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
900008ae:	6823      	ldr	r3, [r4, #0]
900008b0:	4620      	mov	r0, r4
900008b2:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
900008b6:	4798      	blx	r3
    }
900008b8:	e7f0      	b.n	9000089c <_ZN11TouchGFXHAL9taskEntryEv+0x40>
900008ba:	4798      	blx	r3
900008bc:	e7ee      	b.n	9000089c <_ZN11TouchGFXHAL9taskEntryEv+0x40>
900008be:	bf00      	nop
900008c0:	900006e9 	.word	0x900006e9
900008c4:	58020000 	.word	0x58020000
900008c8:	58020c00 	.word	0x58020c00
900008cc:	58022800 	.word	0x58022800

900008d0 <_ZN11TouchGFXHAL10initializeEv>:
{
900008d0:	b538      	push	{r3, r4, r5, lr}
900008d2:	4604      	mov	r4, r0
    TouchGFXGeneratedHAL::initialize();
900008d4:	f002 f804 	bl	900028e0 <_ZN20TouchGFXGeneratedHAL10initializeEv>
    setFrameBufferStartAddresses((void*)frameBuffer0, (void*)frameBuffer1, (void*)animationBuffer);
900008d8:	4817      	ldr	r0, [pc, #92]	; (90000938 <_ZN11TouchGFXHAL10initializeEv+0x68>)
900008da:	6823      	ldr	r3, [r4, #0]
900008dc:	6be1      	ldr	r1, [r4, #60]	; 0x3c
900008de:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
900008e2:	6c22      	ldr	r2, [r4, #64]	; 0x40
900008e4:	4285      	cmp	r5, r0
900008e6:	d119      	bne.n	9000091c <_ZN11TouchGFXHAL10initializeEv+0x4c>
        assert(frameBuffer != 0 && "A framebuffer address must be set");
900008e8:	b1f9      	cbz	r1, 9000092a <_ZN11TouchGFXHAL10initializeEv+0x5a>
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
900008ea:	3a00      	subs	r2, #0
900008ec:	4913      	ldr	r1, [pc, #76]	; (9000093c <_ZN11TouchGFXHAL10initializeEv+0x6c>)
        setAnimationStorage(animationStorage);
900008ee:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
900008f2:	bf18      	it	ne
900008f4:	2201      	movne	r2, #1
900008f6:	4812      	ldr	r0, [pc, #72]	; (90000940 <_ZN11TouchGFXHAL10initializeEv+0x70>)
900008f8:	428b      	cmp	r3, r1
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
900008fa:	4912      	ldr	r1, [pc, #72]	; (90000944 <_ZN11TouchGFXHAL10initializeEv+0x74>)
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
900008fc:	7002      	strb	r2, [r0, #0]
        setAnimationStorage(animationStorage);
900008fe:	d111      	bne.n	90000924 <_ZN11TouchGFXHAL10initializeEv+0x54>
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000900:	4b11      	ldr	r3, [pc, #68]	; (90000948 <_ZN11TouchGFXHAL10initializeEv+0x78>)
90000902:	2201      	movs	r2, #1
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000904:	6461      	str	r1, [r4, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000906:	701a      	strb	r2, [r3, #0]
    instrumentation.init();
90000908:	f104 057c 	add.w	r5, r4, #124	; 0x7c
9000090c:	4628      	mov	r0, r5
9000090e:	f7ff fd73 	bl	900003f8 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>
        updateMCULoad = enabled;
90000912:	2301      	movs	r3, #1
        mcuInstrumentation = mcuInstr;
90000914:	6125      	str	r5, [r4, #16]
        updateMCULoad = enabled;
90000916:	f884 3070 	strb.w	r3, [r4, #112]	; 0x70
}
9000091a:	bd38      	pop	{r3, r4, r5, pc}
    setFrameBufferStartAddresses((void*)frameBuffer0, (void*)frameBuffer1, (void*)animationBuffer);
9000091c:	4b09      	ldr	r3, [pc, #36]	; (90000944 <_ZN11TouchGFXHAL10initializeEv+0x74>)
9000091e:	4620      	mov	r0, r4
90000920:	47a8      	blx	r5
90000922:	e7f1      	b.n	90000908 <_ZN11TouchGFXHAL10initializeEv+0x38>
        setAnimationStorage(animationStorage);
90000924:	4620      	mov	r0, r4
90000926:	4798      	blx	r3
90000928:	e7ee      	b.n	90000908 <_ZN11TouchGFXHAL10initializeEv+0x38>
        assert(frameBuffer != 0 && "A framebuffer address must be set");
9000092a:	4b08      	ldr	r3, [pc, #32]	; (9000094c <_ZN11TouchGFXHAL10initializeEv+0x7c>)
9000092c:	f240 21d2 	movw	r1, #722	; 0x2d2
90000930:	4a07      	ldr	r2, [pc, #28]	; (90000950 <_ZN11TouchGFXHAL10initializeEv+0x80>)
90000932:	4808      	ldr	r0, [pc, #32]	; (90000954 <_ZN11TouchGFXHAL10initializeEv+0x84>)
90000934:	f025 fb0c 	bl	90025f50 <__assert_func>
90000938:	90000805 	.word	0x90000805
9000093c:	90000675 	.word	0x90000675
90000940:	2402357a 	.word	0x2402357a
90000944:	d0000000 	.word	0xd0000000
90000948:	2402357b 	.word	0x2402357b
9000094c:	900271e4 	.word	0x900271e4
90000950:	9002721c 	.word	0x9002721c
90000954:	9002719c 	.word	0x9002719c

90000958 <IdleTaskHook>:
}

extern "C"
{
    portBASE_TYPE IdleTaskHook(void* p)
    {
90000958:	b508      	push	{r3, lr}
        return instance;
9000095a:	4b07      	ldr	r3, [pc, #28]	; (90000978 <IdleTaskHook+0x20>)
        if ((int)p) //idle task sched out
9000095c:	b128      	cbz	r0, 9000096a <IdleTaskHook+0x12>
        {
            touchgfx::HAL::getInstance()->setMCUActive(true);
9000095e:	6818      	ldr	r0, [r3, #0]
90000960:	2101      	movs	r1, #1
90000962:	f010 f931 	bl	90010bc8 <_ZN8touchgfx3HAL12setMCUActiveEb>
        else //idle task sched in
        {
            touchgfx::HAL::getInstance()->setMCUActive(false);
        }
        return pdTRUE;
    }
90000966:	2001      	movs	r0, #1
90000968:	bd08      	pop	{r3, pc}
            touchgfx::HAL::getInstance()->setMCUActive(false);
9000096a:	4601      	mov	r1, r0
9000096c:	6818      	ldr	r0, [r3, #0]
9000096e:	f010 f92b 	bl	90010bc8 <_ZN8touchgfx3HAL12setMCUActiveEb>
    }
90000972:	2001      	movs	r0, #1
90000974:	bd08      	pop	{r3, pc}
90000976:	bf00      	nop
90000978:	2402357c 	.word	0x2402357c

9000097c <_ZNK20HardwareMJPEGDecoder21getCurrentFrameNumberEv>:
    virtual bool decodeThumbnail(uint32_t frameno, uint8_t* buffer, uint16_t width, uint16_t height);
    virtual void gotoFrame(uint32_t frameno);
    virtual uint32_t getCurrentFrameNumber() const
    {
        return frameNumber;
    }
9000097c:	6940      	ldr	r0, [r0, #20]
9000097e:	4770      	bx	lr

90000980 <_ZN20HardwareMJPEGDecoder12getLastErrorEv>:
    }

    virtual AVIErrors getLastError()
    {
        return lastError;
    }
90000980:	f890 0040 	ldrb.w	r0, [r0, #64]	; 0x40
90000984:	4770      	bx	lr
90000986:	bf00      	nop

90000988 <_ZN20HardwareMJPEGDecoder8hasVideoEv>:
    readVideoHeader();
}

bool HardwareMJPEGDecoder::hasVideo()
{
    return (reader != 0) || (movieData != 0);
90000988:	6b03      	ldr	r3, [r0, #48]	; 0x30
9000098a:	b10b      	cbz	r3, 90000990 <_ZN20HardwareMJPEGDecoder8hasVideoEv+0x8>
9000098c:	2001      	movs	r0, #1
}
9000098e:	4770      	bx	lr
    return (reader != 0) || (movieData != 0);
90000990:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
90000992:	3800      	subs	r0, #0
90000994:	bf18      	it	ne
90000996:	2001      	movne	r0, #1
90000998:	4770      	bx	lr
9000099a:	bf00      	nop

9000099c <_ZN20HardwareMJPEGDecoder17getNumberOfFramesEv>:
}

uint32_t HardwareMJPEGDecoder::getNumberOfFrames()
{
    return videoInfo.number_of_frames;
}
9000099c:	6880      	ldr	r0, [r0, #8]
9000099e:	4770      	bx	lr

900009a0 <_ZN20HardwareMJPEGDecoder14setRepeatVideoEb>:

void HardwareMJPEGDecoder::setRepeatVideo(bool repeat)
{

}
900009a0:	4770      	bx	lr
900009a2:	bf00      	nop

900009a4 <_ZN20HardwareMJPEGDecoder12getVideoInfoEPN8touchgfx16VideoInformationE>:

void HardwareMJPEGDecoder::getVideoInfo(touchgfx::VideoInformation* data)
{
    *data = videoInfo;
900009a4:	3004      	adds	r0, #4
{
900009a6:	468c      	mov	ip, r1
    *data = videoInfo;
900009a8:	c80f      	ldmia	r0, {r0, r1, r2, r3}
900009aa:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
}
900009ae:	4770      	bx	lr

900009b0 <_ZN20HardwareMJPEGDecoderD1Ev>:
class HardwareMJPEGDecoder : public MJPEGDecoder
900009b0:	4770      	bx	lr
900009b2:	bf00      	nop

900009b4 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt>:
{
900009b4:	b508      	push	{r3, lr}
    assert(0);
900009b6:	4a03      	ldr	r2, [pc, #12]	; (900009c4 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x10>)
900009b8:	f240 11c5 	movw	r1, #453	; 0x1c5
900009bc:	4b02      	ldr	r3, [pc, #8]	; (900009c8 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x14>)
900009be:	4803      	ldr	r0, [pc, #12]	; (900009cc <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x18>)
900009c0:	f025 fac6 	bl	90025f50 <__assert_func>
900009c4:	90027348 	.word	0x90027348
900009c8:	90027344 	.word	0x90027344
900009cc:	900273a4 	.word	0x900273a4

900009d0 <_ZN20HardwareMJPEGDecoderD0Ev>:
900009d0:	b510      	push	{r4, lr}
900009d2:	4604      	mov	r4, r0
900009d4:	2148      	movs	r1, #72	; 0x48
900009d6:	f025 fa8c 	bl	90025ef2 <_ZdlPvj>
900009da:	4620      	mov	r0, r4
900009dc:	bd10      	pop	{r4, pc}
900009de:	bf00      	nop

900009e0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0>:
void HardwareMJPEGDecoder::decodeMJPEGFrame(const uint8_t* const mjpgdata, const uint32_t length, uint8_t* outputBuffer, uint16_t bufferWidth, uint16_t bufferHeight, uint32_t bufferStride)
900009e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
        JPEG_ConvertorParams.bytes_pr_pixel = 2;
900009e4:	4d4a      	ldr	r5, [pc, #296]	; (90000b10 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x130>)
void HardwareMJPEGDecoder::decodeMJPEGFrame(const uint8_t* const mjpgdata, const uint32_t length, uint8_t* outputBuffer, uint16_t bufferWidth, uint16_t bufferHeight, uint32_t bufferStride)
900009e6:	4683      	mov	fp, r0
900009e8:	461c      	mov	r4, r3
        JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
900009ea:	68c0      	ldr	r0, [r0, #12]
        JPEG_ConvertorParams.bytes_pr_pixel = 2;
900009ec:	2302      	movs	r3, #2
void HardwareMJPEGDecoder::decodeMJPEGFrame(const uint8_t* const mjpgdata, const uint32_t length, uint8_t* outputBuffer, uint16_t bufferWidth, uint16_t bufferHeight, uint32_t bufferStride)
900009ee:	b083      	sub	sp, #12
     * @retval None
     */
    uint32_t JPEG_Decode_DMA(JPEG_HandleTypeDef* hjpeg, uint8_t* input, uint32_t chunkSizeIn /* length */, uint8_t* output)
    {
        FrameBufferAddress = output;
        JPEG_output_is_paused = 0;
900009f0:	4f48      	ldr	r7, [pc, #288]	; (90000b14 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x134>)
        JPEG_ConvertorParams.bytes_pr_pixel = 2;
900009f2:	612b      	str	r3, [r5, #16]
        if ((JPEG_ConvertorParams.WidthExtend % 16) != 0)
900009f4:	0703      	lsls	r3, r0, #28
        JPEG_ConvertorParams.ScaledWidth = 480 * JPEG_ConvertorParams.bytes_pr_pixel;
900009f6:	f44f 7370 	mov.w	r3, #960	; 0x3c0
        MCU_BlockIndex = 0;

        /* Init buffers */
        for (uint32_t i = 0; i < NB_OUTPUT_DATA_BUFFERS; ++i)
        {
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
900009fa:	4e47      	ldr	r6, [pc, #284]	; (90000b18 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x138>)
            JPEG_ConvertorParams.WidthExtend += 16 - (JPEG_ConvertorParams.WidthExtend % 16);
900009fc:	bf18      	it	ne
900009fe:	f020 000f 	bicne.w	r0, r0, #15
        JPEG_OUT_Write_BufferIndex = 0;
90000a02:	f8df a140 	ldr.w	sl, [pc, #320]	; 90000b44 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x164>
        JPEG_ConvertorParams.ScaledWidth = 480 * JPEG_ConvertorParams.bytes_pr_pixel;
90000a06:	606b      	str	r3, [r5, #4]
            JPEG_ConvertorParams.WidthExtend += 16 - (JPEG_ConvertorParams.WidthExtend % 16);
90000a08:	bf18      	it	ne
90000a0a:	3010      	addne	r0, #16
        JPEG_ConvertorParams.LastLineHeight = (videoInfo.frame_height % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
90000a0c:	f8db 3010 	ldr.w	r3, [fp, #16]
        DMA2D_reference = dma;
90000a10:	f8df 8134 	ldr.w	r8, [pc, #308]	; 90000b48 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x168>
            JPEG_ConvertorParams.WidthExtend += 16 - (JPEG_ConvertorParams.WidthExtend % 16);
90000a14:	6028      	str	r0, [r5, #0]
        JPEG_ConvertorParams.MCU_pr_line = JPEG_ConvertorParams.WidthExtend / MCU_WIDTH_PIXELS;
90000a16:	0900      	lsrs	r0, r0, #4
        JPEG_ConvertorParams.LastLineHeight = (videoInfo.frame_height % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
90000a18:	f013 030f 	ands.w	r3, r3, #15
90000a1c:	f8df 912c 	ldr.w	r9, [pc, #300]	; 90000b4c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x16c>
        JPEG_ConvertorParams.MCU_pr_line = JPEG_ConvertorParams.WidthExtend / MCU_WIDTH_PIXELS;
90000a20:	60e8      	str	r0, [r5, #12]
            Jpeg_OUT_BufferTab[i].DataBufferSize = 0;
            Jpeg_OUT_BufferTab[i].MCU_index = 0;
        }

        /* Do not return from this function until done with decoding all chunks. */
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000a22:	eb00 0040 	add.w	r0, r0, r0, lsl #1
        JPEG_ConvertorParams.LastLineHeight = (videoInfo.frame_height % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
90000a26:	bf18      	it	ne
90000a28:	f1c3 0310 	rsbne	r3, r3, #16
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000a2c:	01c0      	lsls	r0, r0, #7
        JPEG_ConvertorParams.LastLineHeight = (videoInfo.frame_height % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
90000a2e:	60ab      	str	r3, [r5, #8]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000a30:	9000      	str	r0, [sp, #0]
        JPEG_output_is_paused = 0;
90000a32:	2000      	movs	r0, #0
        JPEG_OUT_Read_BufferIndex = 0;
90000a34:	4b39      	ldr	r3, [pc, #228]	; (90000b1c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x13c>)
        FrameBufferAddress = output;
90000a36:	4d3a      	ldr	r5, [pc, #232]	; (90000b20 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x140>)
        JPEG_output_is_paused = 0;
90000a38:	6038      	str	r0, [r7, #0]
        FrameBufferAddress = output;
90000a3a:	602c      	str	r4, [r5, #0]
        JPEG_OUT_Read_BufferIndex = 0;
90000a3c:	6018      	str	r0, [r3, #0]
        JPEG_InputImageIndex = 0;
90000a3e:	4c39      	ldr	r4, [pc, #228]	; (90000b24 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x144>)
        MCU_BlockIndex = 0;
90000a40:	4b39      	ldr	r3, [pc, #228]	; (90000b28 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x148>)
        JPEG_OUT_Write_BufferIndex = 0;
90000a42:	f8ca 0000 	str.w	r0, [sl]
        JPEG_InputImageIndex = 0;
90000a46:	6020      	str	r0, [r4, #0]
        MCU_BlockIndex = 0;
90000a48:	6018      	str	r0, [r3, #0]
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90000a4a:	7030      	strb	r0, [r6, #0]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000a4c:	f8da 3000 	ldr.w	r3, [sl]
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90000a50:	7430      	strb	r0, [r6, #16]
        JPEG_InputImageAddress = (uint32_t)input;
90000a52:	4836      	ldr	r0, [pc, #216]	; (90000b2c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x14c>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000a54:	eb06 1303 	add.w	r3, r6, r3, lsl #4
90000a58:	4d35      	ldr	r5, [pc, #212]	; (90000b30 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x150>)
        JPEG_InputImageAddress = (uint32_t)input;
90000a5a:	6001      	str	r1, [r0, #0]
        JPEG_InputImageSize_Bytes = chunkSizeIn;
90000a5c:	4835      	ldr	r0, [pc, #212]	; (90000b34 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x154>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000a5e:	685b      	ldr	r3, [r3, #4]
        JPEG_InputImageSize_Bytes = chunkSizeIn;
90000a60:	6002      	str	r2, [r0, #0]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000a62:	f44f 4250 	mov.w	r2, #53248	; 0xd000
90000a66:	4834      	ldr	r0, [pc, #208]	; (90000b38 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x158>)
90000a68:	4c34      	ldr	r4, [pc, #208]	; (90000b3c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x15c>)
            Jpeg_OUT_BufferTab[i].DataBufferSize = 0;
90000a6a:	ed9f 7b27 	vldr	d7, [pc, #156]	; 90000b08 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x128>
90000a6e:	ed86 7b02 	vstr	d7, [r6, #8]
90000a72:	ed86 7b06 	vstr	d7, [r6, #24]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000a76:	f008 fc35 	bl	900092e4 <HAL_JPEG_Decode_DMA>
        DMA2D_reference = dma;
90000a7a:	f8db 3044 	ldr.w	r3, [fp, #68]	; 0x44
90000a7e:	f8c8 3000 	str.w	r3, [r8]
 * @retval 1 : if JPEG processing has finished, 0 : if JPEG processing still ongoing
 */
uint32_t JPEG_OutputHandler(JPEG_HandleTypeDef* hjpeg)
{
    /* Decode frame complete */
    if (Jpeg_HWDecodingEnd && DMA2D_CopyBufferEnd)
90000a82:	682b      	ldr	r3, [r5, #0]
90000a84:	b113      	cbz	r3, 90000a8c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xac>
90000a86:	f8d9 3000 	ldr.w	r3, [r9]
90000a8a:	bb63      	cbnz	r3, 90000ae6 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x106>
    {
        return 1;
    }

    /* Try to start DMA2D video transfer if next buffer if full */
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90000a8c:	f8d8 0000 	ldr.w	r0, [r8]
90000a90:	7a03      	ldrb	r3, [r0, #8]
90000a92:	b92b      	cbnz	r3, 90000aa0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xc0>
90000a94:	4b21      	ldr	r3, [pc, #132]	; (90000b1c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x13c>)
90000a96:	681b      	ldr	r3, [r3, #0]
90000a98:	011b      	lsls	r3, r3, #4
90000a9a:	5cf3      	ldrb	r3, [r6, r3]
90000a9c:	2b01      	cmp	r3, #1
90000a9e:	d024      	beq.n	90000aea <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x10a>
    {
        DMA2D_reference->start();
    }

    /* Start JPEG IP if paused and next buffer is empty */
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90000aa0:	683b      	ldr	r3, [r7, #0]
90000aa2:	2b01      	cmp	r3, #1
90000aa4:	d106      	bne.n	90000ab4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xd4>
90000aa6:	f8da 3000 	ldr.w	r3, [sl]
90000aaa:	011b      	lsls	r3, r3, #4
90000aac:	5cf3      	ldrb	r3, [r6, r3]
90000aae:	b90b      	cbnz	r3, 90000ab4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xd4>
90000ab0:	682b      	ldr	r3, [r5, #0]
90000ab2:	b313      	cbz	r3, 90000afa <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x11a>
    {
        JPEG_output_is_paused = 0;
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
    }

    return 2;
90000ab4:	2302      	movs	r3, #2
            JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90000ab6:	6023      	str	r3, [r4, #0]
            if (JpegProcessing_End == 2)
90000ab8:	6823      	ldr	r3, [r4, #0]
90000aba:	2b02      	cmp	r3, #2
90000abc:	d009      	beq.n	90000ad2 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xf2>
        } while (JpegProcessing_End != 1);
90000abe:	6823      	ldr	r3, [r4, #0]
90000ac0:	2b01      	cmp	r3, #1
90000ac2:	d1de      	bne.n	90000a82 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xa2>
        Jpeg_HWDecodingEnd = 0;
90000ac4:	2300      	movs	r3, #0
90000ac6:	602b      	str	r3, [r5, #0]
        DMA2D_CopyBufferEnd = 0;
90000ac8:	f8c9 3000 	str.w	r3, [r9]
}
90000acc:	b003      	add	sp, #12
90000ace:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
                SEM_WAIT(semDecodingDone);
90000ad2:	4b1b      	ldr	r3, [pc, #108]	; (90000b40 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x160>)
90000ad4:	f04f 31ff 	mov.w	r1, #4294967295
90000ad8:	6818      	ldr	r0, [r3, #0]
90000ada:	f00c f889 	bl	9000cbf0 <osSemaphoreAcquire>
        } while (JpegProcessing_End != 1);
90000ade:	6823      	ldr	r3, [r4, #0]
90000ae0:	2b01      	cmp	r3, #1
90000ae2:	d1ce      	bne.n	90000a82 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xa2>
90000ae4:	e7ee      	b.n	90000ac4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xe4>
        return 1;
90000ae6:	2301      	movs	r3, #1
90000ae8:	e7e5      	b.n	90000ab6 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xd6>
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90000aea:	f8d9 3000 	ldr.w	r3, [r9]
90000aee:	2b00      	cmp	r3, #0
90000af0:	d1d6      	bne.n	90000aa0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xc0>
        DMA2D_reference->start();
90000af2:	6803      	ldr	r3, [r0, #0]
90000af4:	691b      	ldr	r3, [r3, #16]
90000af6:	4798      	blx	r3
90000af8:	e7d2      	b.n	90000aa0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xc0>
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90000afa:	2102      	movs	r1, #2
90000afc:	480e      	ldr	r0, [pc, #56]	; (90000b38 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x158>)
        JPEG_output_is_paused = 0;
90000afe:	603b      	str	r3, [r7, #0]
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90000b00:	f008 fd38 	bl	90009574 <HAL_JPEG_Resume>
90000b04:	2302      	movs	r3, #2
90000b06:	e7d6      	b.n	90000ab6 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xd6>
	...
90000b10:	24005b90 	.word	0x24005b90
90000b14:	24005bbc 	.word	0x24005bbc
90000b18:	24000008 	.word	0x24000008
90000b1c:	24000188 	.word	0x24000188
90000b20:	24005bac 	.word	0x24005bac
90000b24:	24005bb8 	.word	0x24005bb8
90000b28:	2400018c 	.word	0x2400018c
90000b2c:	24005bc0 	.word	0x24005bc0
90000b30:	24005bb4 	.word	0x24005bb4
90000b34:	24005bc4 	.word	0x24005bc4
90000b38:	24009258 	.word	0x24009258
90000b3c:	24005bb0 	.word	0x24005bb0
90000b40:	24005bcc 	.word	0x24005bcc
90000b44:	24005bc8 	.word	0x24005bc8
90000b48:	24005ba8 	.word	0x24005ba8
90000b4c:	24000184 	.word	0x24000184

90000b50 <_ZN20HardwareMJPEGDecoder9gotoFrameEm>:
{
90000b50:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    if (frameNumber > getNumberOfFrames())
90000b52:	6803      	ldr	r3, [r0, #0]
90000b54:	2901      	cmp	r1, #1
90000b56:	4e2f      	ldr	r6, [pc, #188]	; (90000c14 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xc4>)
{
90000b58:	4604      	mov	r4, r0
    if (frameNumber > getNumberOfFrames())
90000b5a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90000b5c:	bf38      	it	cc
90000b5e:	2101      	movcc	r1, #1
90000b60:	42b3      	cmp	r3, r6
90000b62:	460d      	mov	r5, r1
90000b64:	d142      	bne.n	90000bec <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x9c>
    return videoInfo.number_of_frames;
90000b66:	6883      	ldr	r3, [r0, #8]
    if (frameNumber > getNumberOfFrames())
90000b68:	4299      	cmp	r1, r3
90000b6a:	d82a      	bhi.n	90000bc2 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x72>
    uint32_t offset = indexOffset + 8 + (frameNumber - 1) * 16;
90000b6c:	1e6b      	subs	r3, r5, #1
90000b6e:	69e2      	ldr	r2, [r4, #28]
    if (reader != 0)
90000b70:	6b20      	ldr	r0, [r4, #48]	; 0x30
    uint32_t offset = indexOffset + 8 + (frameNumber - 1) * 16;
90000b72:	eb02 1703 	add.w	r7, r2, r3, lsl #4
    if (reader != 0)
90000b76:	b350      	cbz	r0, 90000bce <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x7e>
        if (length > aviBufferLength)
90000b78:	6ba3      	ldr	r3, [r4, #56]	; 0x38
90000b7a:	2b0f      	cmp	r3, #15
90000b7c:	d941      	bls.n	90000c02 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xb2>
        reader->seek(offset);
90000b7e:	6803      	ldr	r3, [r0, #0]
    uint32_t offset = indexOffset + 8 + (frameNumber - 1) * 16;
90000b80:	f107 0608 	add.w	r6, r7, #8
        reader->seek(offset);
90000b84:	68db      	ldr	r3, [r3, #12]
90000b86:	4631      	mov	r1, r6
90000b88:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90000b8a:	6b20      	ldr	r0, [r4, #48]	; 0x30
90000b8c:	2210      	movs	r2, #16
90000b8e:	6b61      	ldr	r1, [r4, #52]	; 0x34
90000b90:	6803      	ldr	r3, [r0, #0]
90000b92:	691b      	ldr	r3, [r3, #16]
90000b94:	4798      	blx	r3
90000b96:	b1b0      	cbz	r0, 90000bc6 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x76>
    if (reader != 0)
90000b98:	6b23      	ldr	r3, [r4, #48]	; 0x30
        aviBufferStartOffset = offset;
90000b9a:	63e6      	str	r6, [r4, #60]	; 0x3c
    if (reader != 0)
90000b9c:	b1bb      	cbz	r3, 90000bce <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x7e>
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000b9e:	6b62      	ldr	r2, [r4, #52]	; 0x34
90000ba0:	7a93      	ldrb	r3, [r2, #10]
90000ba2:	7a51      	ldrb	r1, [r2, #9]
90000ba4:	041b      	lsls	r3, r3, #16
90000ba6:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
90000baa:	7a11      	ldrb	r1, [r2, #8]
90000bac:	7ad2      	ldrb	r2, [r2, #11]
90000bae:	430b      	orrs	r3, r1
90000bb0:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
90000bb4:	6a22      	ldr	r2, [r4, #32]
    this->frameNumber = frameNumber;
90000bb6:	6165      	str	r5, [r4, #20]
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
90000bb8:	3a04      	subs	r2, #4
90000bba:	441a      	add	r2, r3
90000bbc:	61a2      	str	r2, [r4, #24]
}
90000bbe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    return videoInfo.number_of_frames;
90000bc0:	68a3      	ldr	r3, [r4, #8]
{
90000bc2:	461d      	mov	r5, r3
90000bc4:	e7d2      	b.n	90000b6c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x1c>
            lastError = AVI_ERROR_EOF_REACHED;
90000bc6:	230d      	movs	r3, #13
90000bc8:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
90000bcc:	e7e4      	b.n	90000b98 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x48>
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
90000bce:	f107 0310 	add.w	r3, r7, #16
        volatile const uint8_t* const d = movieData + offset;
90000bd2:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
90000bd4:	18d1      	adds	r1, r2, r3
        val |= d[0];
90000bd6:	5cd2      	ldrb	r2, [r2, r3]
        val |= d[1] << 8;
90000bd8:	7848      	ldrb	r0, [r1, #1]
        val |= d[2] << 16;
90000bda:	788b      	ldrb	r3, [r1, #2]
        val |= d[3] << 24;
90000bdc:	78c9      	ldrb	r1, [r1, #3]
        val |= d[2] << 16;
90000bde:	041b      	lsls	r3, r3, #16
        val |= d[3] << 24;
90000be0:	ea42 6201 	orr.w	r2, r2, r1, lsl #24
90000be4:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
90000be8:	4313      	orrs	r3, r2
        return val;
90000bea:	e7e3      	b.n	90000bb4 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x64>
    if (frameNumber > getNumberOfFrames())
90000bec:	4798      	blx	r3
90000bee:	4285      	cmp	r5, r0
90000bf0:	d9bc      	bls.n	90000b6c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x1c>
        frameNumber = getNumberOfFrames();
90000bf2:	6823      	ldr	r3, [r4, #0]
90000bf4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90000bf6:	42b3      	cmp	r3, r6
90000bf8:	d0e2      	beq.n	90000bc0 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x70>
90000bfa:	4620      	mov	r0, r4
90000bfc:	4798      	blx	r3
90000bfe:	4605      	mov	r5, r0
90000c00:	e7b4      	b.n	90000b6c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x1c>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90000c02:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90000c04:	4b04      	ldr	r3, [pc, #16]	; (90000c18 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xc8>)
90000c06:	4a05      	ldr	r2, [pc, #20]	; (90000c1c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xcc>)
90000c08:	219f      	movs	r1, #159	; 0x9f
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90000c0a:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
            assert(!"Buffer to small");
90000c0e:	4804      	ldr	r0, [pc, #16]	; (90000c20 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xd0>)
90000c10:	f025 f99e 	bl	90025f50 <__assert_func>
90000c14:	9000099d 	.word	0x9000099d
90000c18:	900273f4 	.word	0x900273f4
90000c1c:	90027408 	.word	0x90027408
90000c20:	900273a4 	.word	0x900273a4
90000c24:	00000000 	.word	0x00000000

90000c28 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm>:
{
90000c28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90000c2c:	4604      	mov	r4, r0
    if (reader != 0)
90000c2e:	6b00      	ldr	r0, [r0, #48]	; 0x30
{
90000c30:	b083      	sub	sp, #12
90000c32:	4615      	mov	r5, r2
    readData(currentMovieOffset, 8);
90000c34:	69a6      	ldr	r6, [r4, #24]
    if (reader != 0)
90000c36:	2800      	cmp	r0, #0
90000c38:	f000 80ad 	beq.w	90000d96 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x16e>
        if (length > aviBufferLength)
90000c3c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
90000c3e:	2b07      	cmp	r3, #7
90000c40:	f240 80b9 	bls.w	90000db6 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x18e>
        reader->seek(offset);
90000c44:	6803      	ldr	r3, [r0, #0]
90000c46:	4631      	mov	r1, r6
90000c48:	68db      	ldr	r3, [r3, #12]
90000c4a:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90000c4c:	6b20      	ldr	r0, [r4, #48]	; 0x30
90000c4e:	2208      	movs	r2, #8
90000c50:	6b61      	ldr	r1, [r4, #52]	; 0x34
90000c52:	6803      	ldr	r3, [r0, #0]
90000c54:	691b      	ldr	r3, [r3, #16]
90000c56:	4798      	blx	r3
90000c58:	2800      	cmp	r0, #0
90000c5a:	f000 8091 	beq.w	90000d80 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x158>
    const uint32_t length = getU32(currentMovieOffset + 4);
90000c5e:	69a7      	ldr	r7, [r4, #24]
    if (reader != 0)
90000c60:	6b20      	ldr	r0, [r4, #48]	; 0x30
    const uint32_t length = getU32(currentMovieOffset + 4);
90000c62:	1d3b      	adds	r3, r7, #4
        aviBufferStartOffset = offset;
90000c64:	63e6      	str	r6, [r4, #60]	; 0x3c
    if (reader != 0)
90000c66:	2800      	cmp	r0, #0
90000c68:	f000 80ae 	beq.w	90000dc8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1a0>
        const uint32_t index = offset - aviBufferStartOffset;
90000c6c:	1b9b      	subs	r3, r3, r6
    const uint8_t* mjpgdata = readData(currentMovieOffset + 8, length);
90000c6e:	3708      	adds	r7, #8
        if (length > aviBufferLength)
90000c70:	e9d4 620d 	ldrd	r6, r2, [r4, #52]	; 0x34
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000c74:	18f1      	adds	r1, r6, r3
90000c76:	5cf3      	ldrb	r3, [r6, r3]
90000c78:	788e      	ldrb	r6, [r1, #2]
90000c7a:	f891 c001 	ldrb.w	ip, [r1, #1]
90000c7e:	0436      	lsls	r6, r6, #16
90000c80:	ea46 260c 	orr.w	r6, r6, ip, lsl #8
90000c84:	431e      	orrs	r6, r3
90000c86:	78cb      	ldrb	r3, [r1, #3]
90000c88:	ea46 6603 	orr.w	r6, r6, r3, lsl #24
        if (length > aviBufferLength)
90000c8c:	42b2      	cmp	r2, r6
90000c8e:	f0c0 8092 	bcc.w	90000db6 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x18e>
        reader->seek(offset);
90000c92:	6803      	ldr	r3, [r0, #0]
90000c94:	4639      	mov	r1, r7
90000c96:	68db      	ldr	r3, [r3, #12]
90000c98:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90000c9a:	6b20      	ldr	r0, [r4, #48]	; 0x30
90000c9c:	4632      	mov	r2, r6
90000c9e:	6b61      	ldr	r1, [r4, #52]	; 0x34
90000ca0:	6803      	ldr	r3, [r0, #0]
90000ca2:	691b      	ldr	r3, [r3, #16]
90000ca4:	4798      	blx	r3
90000ca6:	b910      	cbnz	r0, 90000cae <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x86>
            lastError = AVI_ERROR_EOF_REACHED;
90000ca8:	230d      	movs	r3, #13
90000caa:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
        return aviBuffer;
90000cae:	6b61      	ldr	r1, [r4, #52]	; 0x34
        aviBufferStartOffset = offset;
90000cb0:	63e7      	str	r7, [r4, #60]	; 0x3c
    if (frameBuffer) /* only decode if buffers are assigned. */
90000cb2:	2d00      	cmp	r5, #0
90000cb4:	d058      	beq.n	90000d68 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x140>
        FrameBufferAddress = output;
90000cb6:	4b48      	ldr	r3, [pc, #288]	; (90000dd8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1b0>)
        JPEG_output_is_paused = 0;
90000cb8:	2200      	movs	r2, #0
90000cba:	4f48      	ldr	r7, [pc, #288]	; (90000ddc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1b4>)
        FrameBufferAddress = output;
90000cbc:	601d      	str	r5, [r3, #0]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000cbe:	4b48      	ldr	r3, [pc, #288]	; (90000de0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1b8>)
        JPEG_output_is_paused = 0;
90000cc0:	603a      	str	r2, [r7, #0]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000cc2:	68db      	ldr	r3, [r3, #12]
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90000cc4:	4d47      	ldr	r5, [pc, #284]	; (90000de4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1bc>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000cc6:	eb03 0343 	add.w	r3, r3, r3, lsl #1
        JPEG_OUT_Write_BufferIndex = 0;
90000cca:	f8df a144 	ldr.w	sl, [pc, #324]	; 90000e10 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1e8>
        JPEG_OUT_Read_BufferIndex = 0;
90000cce:	f8df b144 	ldr.w	fp, [pc, #324]	; 90000e14 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1ec>
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000cd2:	01db      	lsls	r3, r3, #7
        JPEG_InputImageIndex = 0;
90000cd4:	4844      	ldr	r0, [pc, #272]	; (90000de8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1c0>)
        JPEG_OUT_Read_BufferIndex = 0;
90000cd6:	f8cb 2000 	str.w	r2, [fp]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000cda:	9300      	str	r3, [sp, #0]
        MCU_BlockIndex = 0;
90000cdc:	4b43      	ldr	r3, [pc, #268]	; (90000dec <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1c4>)
        JPEG_OUT_Write_BufferIndex = 0;
90000cde:	f8ca 2000 	str.w	r2, [sl]
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90000ce2:	702a      	strb	r2, [r5, #0]
        MCU_BlockIndex = 0;
90000ce4:	601a      	str	r2, [r3, #0]
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90000ce6:	742a      	strb	r2, [r5, #16]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000ce8:	f8da 3000 	ldr.w	r3, [sl]
        JPEG_InputImageIndex = 0;
90000cec:	6002      	str	r2, [r0, #0]
        JPEG_InputImageAddress = (uint32_t)input;
90000cee:	4a40      	ldr	r2, [pc, #256]	; (90000df0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1c8>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000cf0:	eb05 1303 	add.w	r3, r5, r3, lsl #4
90000cf4:	483f      	ldr	r0, [pc, #252]	; (90000df4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1cc>)
        JPEG_InputImageAddress = (uint32_t)input;
90000cf6:	6011      	str	r1, [r2, #0]
        JPEG_InputImageSize_Bytes = chunkSizeIn;
90000cf8:	4a3f      	ldr	r2, [pc, #252]	; (90000df8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1d0>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000cfa:	685b      	ldr	r3, [r3, #4]
        JPEG_InputImageSize_Bytes = chunkSizeIn;
90000cfc:	6016      	str	r6, [r2, #0]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000cfe:	f44f 4250 	mov.w	r2, #53248	; 0xd000
90000d02:	4e3e      	ldr	r6, [pc, #248]	; (90000dfc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1d4>)
90000d04:	4c3e      	ldr	r4, [pc, #248]	; (90000e00 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1d8>)
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90000d06:	f8df 8110 	ldr.w	r8, [pc, #272]	; 90000e18 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1f0>
90000d0a:	f8df 9110 	ldr.w	r9, [pc, #272]	; 90000e1c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1f4>
            Jpeg_OUT_BufferTab[i].DataBufferSize = 0;
90000d0e:	ed9f 7b30 	vldr	d7, [pc, #192]	; 90000dd0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1a8>
90000d12:	ed85 7b02 	vstr	d7, [r5, #8]
90000d16:	ed85 7b06 	vstr	d7, [r5, #24]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000d1a:	f008 fae3 	bl	900092e4 <HAL_JPEG_Decode_DMA>
        return 0;
90000d1e:	e017      	b.n	90000d50 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x128>
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90000d20:	f8d8 0000 	ldr.w	r0, [r8]
90000d24:	7a03      	ldrb	r3, [r0, #8]
90000d26:	b92b      	cbnz	r3, 90000d34 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x10c>
90000d28:	f8db 3000 	ldr.w	r3, [fp]
90000d2c:	011b      	lsls	r3, r3, #4
90000d2e:	5ceb      	ldrb	r3, [r5, r3]
90000d30:	2b01      	cmp	r3, #1
90000d32:	d01d      	beq.n	90000d70 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x148>
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90000d34:	683b      	ldr	r3, [r7, #0]
90000d36:	2b01      	cmp	r3, #1
90000d38:	d106      	bne.n	90000d48 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x120>
90000d3a:	f8da 3000 	ldr.w	r3, [sl]
90000d3e:	011b      	lsls	r3, r3, #4
90000d40:	5ceb      	ldrb	r3, [r5, r3]
90000d42:	b90b      	cbnz	r3, 90000d48 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x120>
90000d44:	6833      	ldr	r3, [r6, #0]
90000d46:	b1fb      	cbz	r3, 90000d88 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x160>
    return 2;
90000d48:	2302      	movs	r3, #2
            JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90000d4a:	6023      	str	r3, [r4, #0]
        } while (JpegProcessing_End == 0);
90000d4c:	6823      	ldr	r3, [r4, #0]
90000d4e:	b95b      	cbnz	r3, 90000d68 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x140>
    if (Jpeg_HWDecodingEnd && DMA2D_CopyBufferEnd)
90000d50:	6833      	ldr	r3, [r6, #0]
90000d52:	2b00      	cmp	r3, #0
90000d54:	d0e4      	beq.n	90000d20 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0xf8>
90000d56:	f8d9 3000 	ldr.w	r3, [r9]
90000d5a:	2b00      	cmp	r3, #0
90000d5c:	d0e0      	beq.n	90000d20 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0xf8>
        return 1;
90000d5e:	2301      	movs	r3, #1
            JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90000d60:	6023      	str	r3, [r4, #0]
        } while (JpegProcessing_End == 0);
90000d62:	6823      	ldr	r3, [r4, #0]
90000d64:	2b00      	cmp	r3, #0
90000d66:	d0f3      	beq.n	90000d50 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x128>
}
90000d68:	2001      	movs	r0, #1
90000d6a:	b003      	add	sp, #12
90000d6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90000d70:	f8d9 3000 	ldr.w	r3, [r9]
90000d74:	2b00      	cmp	r3, #0
90000d76:	d1dd      	bne.n	90000d34 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x10c>
        DMA2D_reference->start();
90000d78:	6803      	ldr	r3, [r0, #0]
90000d7a:	691b      	ldr	r3, [r3, #16]
90000d7c:	4798      	blx	r3
90000d7e:	e7d9      	b.n	90000d34 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x10c>
            lastError = AVI_ERROR_EOF_REACHED;
90000d80:	230d      	movs	r3, #13
90000d82:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
90000d86:	e76a      	b.n	90000c5e <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x36>
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90000d88:	2102      	movs	r1, #2
90000d8a:	481a      	ldr	r0, [pc, #104]	; (90000df4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1cc>)
        JPEG_output_is_paused = 0;
90000d8c:	603b      	str	r3, [r7, #0]
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90000d8e:	f008 fbf1 	bl	90009574 <HAL_JPEG_Resume>
90000d92:	2302      	movs	r3, #2
90000d94:	e7d9      	b.n	90000d4a <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x122>
    const uint32_t length = getU32(currentMovieOffset + 4);
90000d96:	1d33      	adds	r3, r6, #4
    if (reader != 0)
90000d98:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
    const uint8_t* mjpgdata = readData(currentMovieOffset + 8, length);
90000d9a:	3608      	adds	r6, #8
        volatile const uint8_t* const d = movieData + offset;
90000d9c:	18ca      	adds	r2, r1, r3
        val |= d[0];
90000d9e:	5ccb      	ldrb	r3, [r1, r3]
    return movieData + offset;
90000da0:	4431      	add	r1, r6
        val |= d[1] << 8;
90000da2:	7850      	ldrb	r0, [r2, #1]
        val |= d[2] << 16;
90000da4:	7896      	ldrb	r6, [r2, #2]
        val |= d[3] << 24;
90000da6:	78d2      	ldrb	r2, [r2, #3]
        val |= d[2] << 16;
90000da8:	0436      	lsls	r6, r6, #16
        val |= d[3] << 24;
90000daa:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
90000dae:	ea46 2600 	orr.w	r6, r6, r0, lsl #8
90000db2:	431e      	orrs	r6, r3
    return movieData + offset;
90000db4:	e77d      	b.n	90000cb2 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x8a>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90000db6:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90000db8:	4b12      	ldr	r3, [pc, #72]	; (90000e04 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1dc>)
90000dba:	4a13      	ldr	r2, [pc, #76]	; (90000e08 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1e0>)
90000dbc:	219f      	movs	r1, #159	; 0x9f
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90000dbe:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
            assert(!"Buffer to small");
90000dc2:	4812      	ldr	r0, [pc, #72]	; (90000e0c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1e4>)
90000dc4:	f025 f8c4 	bl	90025f50 <__assert_func>
    const uint32_t length = getU32(currentMovieOffset + 4);
90000dc8:	463e      	mov	r6, r7
90000dca:	e7e5      	b.n	90000d98 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x170>
90000dcc:	f3af 8000 	nop.w
	...
90000dd8:	24005bac 	.word	0x24005bac
90000ddc:	24005bbc 	.word	0x24005bbc
90000de0:	24005b90 	.word	0x24005b90
90000de4:	24000008 	.word	0x24000008
90000de8:	24005bb8 	.word	0x24005bb8
90000dec:	2400018c 	.word	0x2400018c
90000df0:	24005bc0 	.word	0x24005bc0
90000df4:	24009258 	.word	0x24009258
90000df8:	24005bc4 	.word	0x24005bc4
90000dfc:	24005bb4 	.word	0x24005bb4
90000e00:	24005bb0 	.word	0x24005bb0
90000e04:	900273f4 	.word	0x900273f4
90000e08:	90027408 	.word	0x90027408
90000e0c:	900273a4 	.word	0x900273a4
90000e10:	24005bc8 	.word	0x24005bc8
90000e14:	24000188 	.word	0x24000188
90000e18:	24005ba8 	.word	0x24005ba8
90000e1c:	24000184 	.word	0x24000184

90000e20 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv>:
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90000e20:	6943      	ldr	r3, [r0, #20]
{
90000e22:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90000e26:	2b00      	cmp	r3, #0
90000e28:	f000 80c0 	beq.w	90000fac <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x18c>
    readData(currentMovieOffset, 8);
90000e2c:	4605      	mov	r5, r0
    if (reader != 0)
90000e2e:	6b00      	ldr	r0, [r0, #48]	; 0x30
    readData(currentMovieOffset, 8);
90000e30:	69ac      	ldr	r4, [r5, #24]
    if (reader != 0)
90000e32:	2800      	cmp	r0, #0
90000e34:	f000 80a0 	beq.w	90000f78 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x158>
        if (length > aviBufferLength)
90000e38:	6bab      	ldr	r3, [r5, #56]	; 0x38
90000e3a:	2b07      	cmp	r3, #7
90000e3c:	f240 80ab 	bls.w	90000f96 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x176>
        reader->seek(offset);
90000e40:	6803      	ldr	r3, [r0, #0]
90000e42:	4621      	mov	r1, r4
90000e44:	68db      	ldr	r3, [r3, #12]
90000e46:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90000e48:	6b28      	ldr	r0, [r5, #48]	; 0x30
90000e4a:	2208      	movs	r2, #8
90000e4c:	6b69      	ldr	r1, [r5, #52]	; 0x34
90000e4e:	6803      	ldr	r3, [r0, #0]
90000e50:	691b      	ldr	r3, [r3, #16]
90000e52:	4798      	blx	r3
90000e54:	2800      	cmp	r0, #0
90000e56:	f000 808b 	beq.w	90000f70 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x150>
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90000e5a:	69ab      	ldr	r3, [r5, #24]
    if (reader != 0)
90000e5c:	6b28      	ldr	r0, [r5, #48]	; 0x30
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90000e5e:	1d1a      	adds	r2, r3, #4
        aviBufferStartOffset = offset;
90000e60:	63ec      	str	r4, [r5, #60]	; 0x3c
    if (reader != 0)
90000e62:	2800      	cmp	r0, #0
90000e64:	f000 808a 	beq.w	90000f7c <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x15c>
        const uint32_t index = offset - aviBufferStartOffset;
90000e68:	1b12      	subs	r2, r2, r4
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000e6a:	6b6c      	ldr	r4, [r5, #52]	; 0x34
90000e6c:	18a1      	adds	r1, r4, r2
90000e6e:	5ca2      	ldrb	r2, [r4, r2]
90000e70:	788c      	ldrb	r4, [r1, #2]
90000e72:	784e      	ldrb	r6, [r1, #1]
90000e74:	0424      	lsls	r4, r4, #16
90000e76:	ea44 2406 	orr.w	r4, r4, r6, lsl #8
90000e7a:	4314      	orrs	r4, r2
90000e7c:	78ca      	ldrb	r2, [r1, #3]
90000e7e:	ea44 6402 	orr.w	r4, r4, r2, lsl #24
            lastError = AVI_ERROR_EOF_REACHED;
90000e82:	270d      	movs	r7, #13
        if (streamNo == STREAM0 && chunkType == TYPEDC)
90000e84:	f243 0630 	movw	r6, #12336	; 0x3030
90000e88:	e03a      	b.n	90000f00 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0xe0>
        if (length > aviBufferLength)
90000e8a:	6bab      	ldr	r3, [r5, #56]	; 0x38
90000e8c:	2b07      	cmp	r3, #7
90000e8e:	f240 8082 	bls.w	90000f96 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x176>
        reader->seek(offset);
90000e92:	6803      	ldr	r3, [r0, #0]
90000e94:	4621      	mov	r1, r4
90000e96:	68db      	ldr	r3, [r3, #12]
90000e98:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90000e9a:	6b28      	ldr	r0, [r5, #48]	; 0x30
90000e9c:	2208      	movs	r2, #8
90000e9e:	6b69      	ldr	r1, [r5, #52]	; 0x34
90000ea0:	6803      	ldr	r3, [r0, #0]
90000ea2:	691b      	ldr	r3, [r3, #16]
90000ea4:	4798      	blx	r3
90000ea6:	b908      	cbnz	r0, 90000eac <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x8c>
            lastError = AVI_ERROR_EOF_REACHED;
90000ea8:	f885 7040 	strb.w	r7, [r5, #64]	; 0x40
    if (reader != 0)
90000eac:	6b28      	ldr	r0, [r5, #48]	; 0x30
        uint32_t streamNo  = getU16(currentMovieOffset);
90000eae:	69ab      	ldr	r3, [r5, #24]
        aviBufferStartOffset = offset;
90000eb0:	63ec      	str	r4, [r5, #60]	; 0x3c
    if (reader != 0)
90000eb2:	2800      	cmp	r0, #0
90000eb4:	d078      	beq.n	90000fa8 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x188>
        const uint32_t index = offset - aviBufferStartOffset;
90000eb6:	1b1b      	subs	r3, r3, r4
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90000eb8:	6b69      	ldr	r1, [r5, #52]	; 0x34
90000eba:	18ca      	adds	r2, r1, r3
90000ebc:	5ccb      	ldrb	r3, [r1, r3]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000ebe:	7994      	ldrb	r4, [r2, #6]
90000ec0:	f892 a005 	ldrb.w	sl, [r2, #5]
90000ec4:	0424      	lsls	r4, r4, #16
90000ec6:	f892 c004 	ldrb.w	ip, [r2, #4]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90000eca:	f892 9001 	ldrb.w	r9, [r2, #1]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000ece:	ea44 240a 	orr.w	r4, r4, sl, lsl #8
90000ed2:	79d1      	ldrb	r1, [r2, #7]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90000ed4:	f892 8003 	ldrb.w	r8, [r2, #3]
90000ed8:	ea43 2309 	orr.w	r3, r3, r9, lsl #8
90000edc:	f892 e002 	ldrb.w	lr, [r2, #2]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000ee0:	ea44 040c 	orr.w	r4, r4, ip
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90000ee4:	ea4e 2208 	orr.w	r2, lr, r8, lsl #8
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000ee8:	ea44 6401 	orr.w	r4, r4, r1, lsl #24
        if (streamNo == STREAM0 && chunkType == TYPEDC)
90000eec:	f246 3164 	movw	r1, #25444	; 0x6364
90000ef0:	42b3      	cmp	r3, r6
90000ef2:	bf08      	it	eq
90000ef4:	428a      	cmpeq	r2, r1
90000ef6:	bf0c      	ite	eq
90000ef8:	2301      	moveq	r3, #1
90000efa:	2300      	movne	r3, #0
90000efc:	d035      	beq.n	90000f6a <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x14a>
    while (currentMovieOffset + 8 + chunkSize < movieLength)
90000efe:	69ab      	ldr	r3, [r5, #24]
90000f00:	441c      	add	r4, r3
90000f02:	6aab      	ldr	r3, [r5, #40]	; 0x28
90000f04:	f104 0208 	add.w	r2, r4, #8
90000f08:	429a      	cmp	r2, r3
90000f0a:	d229      	bcs.n	90000f60 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x140>
        frameNumber++;
90000f0c:	696b      	ldr	r3, [r5, #20]
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90000f0e:	3409      	adds	r4, #9
        frameNumber++;
90000f10:	3301      	adds	r3, #1
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90000f12:	f024 0401 	bic.w	r4, r4, #1
90000f16:	e9c5 3405 	strd	r3, r4, [r5, #20]
    if (reader != 0)
90000f1a:	2800      	cmp	r0, #0
90000f1c:	d1b5      	bne.n	90000e8a <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x6a>
        volatile const uint8_t* const d = movieData + offset;
90000f1e:	6ae9      	ldr	r1, [r5, #44]	; 0x2c
        chunkSize = getU32(currentMovieOffset + 4);
90000f20:	f104 0e04 	add.w	lr, r4, #4
        uint32_t chunkType = getU16(currentMovieOffset + 2);
90000f24:	1ca2      	adds	r2, r4, #2
        volatile const uint8_t* const d = movieData + offset;
90000f26:	eb01 0c04 	add.w	ip, r1, r4
        val |= d[0];
90000f2a:	5d0b      	ldrb	r3, [r1, r4]
        val |= d[1] << 8;
90000f2c:	f89c 4001 	ldrb.w	r4, [ip, #1]
        volatile const uint8_t* const d = movieData + offset;
90000f30:	eb01 0c0e 	add.w	ip, r1, lr
        val |= d[1] << 8;
90000f34:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
        volatile const uint8_t* const d = movieData + offset;
90000f38:	188c      	adds	r4, r1, r2
        val |= d[0];
90000f3a:	5c8a      	ldrb	r2, [r1, r2]
        val |= d[1] << 8;
90000f3c:	7864      	ldrb	r4, [r4, #1]
        val |= d[0];
90000f3e:	f811 100e 	ldrb.w	r1, [r1, lr]
        val |= d[1] << 8;
90000f42:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
        val |= d[1] << 8;
90000f46:	f89c e001 	ldrb.w	lr, [ip, #1]
        val |= d[2] << 16;
90000f4a:	f89c 4002 	ldrb.w	r4, [ip, #2]
        val |= d[3] << 24;
90000f4e:	f89c c003 	ldrb.w	ip, [ip, #3]
        val |= d[2] << 16;
90000f52:	0424      	lsls	r4, r4, #16
        val |= d[3] << 24;
90000f54:	ea41 610c 	orr.w	r1, r1, ip, lsl #24
90000f58:	ea44 240e 	orr.w	r4, r4, lr, lsl #8
90000f5c:	430c      	orrs	r4, r1
        return val;
90000f5e:	e7c5      	b.n	90000eec <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0xcc>
    frameNumber = 1;
90000f60:	2101      	movs	r1, #1
    currentMovieOffset = firstFrameOffset; /* start over */
90000f62:	6a2a      	ldr	r2, [r5, #32]
    return false;
90000f64:	2300      	movs	r3, #0
    currentMovieOffset = firstFrameOffset; /* start over */
90000f66:	e9c5 1205 	strd	r1, r2, [r5, #20]
}
90000f6a:	4618      	mov	r0, r3
90000f6c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
            lastError = AVI_ERROR_EOF_REACHED;
90000f70:	230d      	movs	r3, #13
90000f72:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
90000f76:	e770      	b.n	90000e5a <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x3a>
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90000f78:	1d22      	adds	r2, r4, #4
90000f7a:	4623      	mov	r3, r4
        volatile const uint8_t* const d = movieData + offset;
90000f7c:	6aec      	ldr	r4, [r5, #44]	; 0x2c
90000f7e:	18a1      	adds	r1, r4, r2
        val |= d[0];
90000f80:	5ca2      	ldrb	r2, [r4, r2]
        val |= d[1] << 8;
90000f82:	784e      	ldrb	r6, [r1, #1]
        val |= d[2] << 16;
90000f84:	788c      	ldrb	r4, [r1, #2]
        val |= d[3] << 24;
90000f86:	78c9      	ldrb	r1, [r1, #3]
        val |= d[2] << 16;
90000f88:	0424      	lsls	r4, r4, #16
        val |= d[3] << 24;
90000f8a:	ea42 6201 	orr.w	r2, r2, r1, lsl #24
90000f8e:	ea44 2406 	orr.w	r4, r4, r6, lsl #8
90000f92:	4314      	orrs	r4, r2
        return val;
90000f94:	e775      	b.n	90000e82 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x62>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90000f96:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90000f98:	4b07      	ldr	r3, [pc, #28]	; (90000fb8 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x198>)
90000f9a:	4a08      	ldr	r2, [pc, #32]	; (90000fbc <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x19c>)
90000f9c:	219f      	movs	r1, #159	; 0x9f
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90000f9e:	f885 0040 	strb.w	r0, [r5, #64]	; 0x40
            assert(!"Buffer to small");
90000fa2:	4807      	ldr	r0, [pc, #28]	; (90000fc0 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1a0>)
90000fa4:	f024 ffd4 	bl	90025f50 <__assert_func>
        uint32_t streamNo  = getU16(currentMovieOffset);
90000fa8:	461c      	mov	r4, r3
90000faa:	e7b8      	b.n	90000f1e <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0xfe>
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90000fac:	4b05      	ldr	r3, [pc, #20]	; (90000fc4 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1a4>)
90000fae:	21e5      	movs	r1, #229	; 0xe5
90000fb0:	4a05      	ldr	r2, [pc, #20]	; (90000fc8 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1a8>)
90000fb2:	4803      	ldr	r0, [pc, #12]	; (90000fc0 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1a0>)
90000fb4:	f024 ffcc 	bl	90025f50 <__assert_func>
90000fb8:	900273f4 	.word	0x900273f4
90000fbc:	90027408 	.word	0x90027408
90000fc0:	900273a4 	.word	0x900273a4
90000fc4:	9002744c 	.word	0x9002744c
90000fc8:	90027498 	.word	0x90027498

90000fcc <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm>:
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90000fcc:	6943      	ldr	r3, [r0, #20]
{
90000fce:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90000fd2:	2b00      	cmp	r3, #0
90000fd4:	f000 80ad 	beq.w	90001132 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x166>
    readData(currentMovieOffset, 8);
90000fd8:	4604      	mov	r4, r0
    if (reader != 0)
90000fda:	6b00      	ldr	r0, [r0, #48]	; 0x30
90000fdc:	460e      	mov	r6, r1
    readData(currentMovieOffset, 8);
90000fde:	69a5      	ldr	r5, [r4, #24]
    if (reader != 0)
90000fe0:	2800      	cmp	r0, #0
90000fe2:	d05f      	beq.n	900010a4 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xd8>
        if (length > aviBufferLength)
90000fe4:	6ba3      	ldr	r3, [r4, #56]	; 0x38
90000fe6:	2b07      	cmp	r3, #7
90000fe8:	f240 80a9 	bls.w	9000113e <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x172>
        reader->seek(offset);
90000fec:	6803      	ldr	r3, [r0, #0]
90000fee:	4629      	mov	r1, r5
90000ff0:	68db      	ldr	r3, [r3, #12]
90000ff2:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90000ff4:	6b20      	ldr	r0, [r4, #48]	; 0x30
90000ff6:	2208      	movs	r2, #8
90000ff8:	6b61      	ldr	r1, [r4, #52]	; 0x34
90000ffa:	6803      	ldr	r3, [r0, #0]
90000ffc:	691b      	ldr	r3, [r3, #16]
90000ffe:	4798      	blx	r3
90001000:	2800      	cmp	r0, #0
90001002:	d04a      	beq.n	9000109a <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xce>
    if (reader != 0)
90001004:	6b20      	ldr	r0, [r4, #48]	; 0x30
    uint32_t streamNo  = getU16(currentMovieOffset);
90001006:	69a1      	ldr	r1, [r4, #24]
        aviBufferStartOffset = offset;
90001008:	63e5      	str	r5, [r4, #60]	; 0x3c
    if (reader != 0)
9000100a:	2800      	cmp	r0, #0
9000100c:	d049      	beq.n	900010a2 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xd6>
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
9000100e:	f101 0c04 	add.w	ip, r1, #4
    uint32_t chunkType = getU16(currentMovieOffset + 2);
90001012:	1c8a      	adds	r2, r1, #2
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001014:	6b63      	ldr	r3, [r4, #52]	; 0x34
        const uint32_t index = offset - aviBufferStartOffset;
90001016:	ebac 0c05 	sub.w	ip, ip, r5
        const uint32_t index = offset - aviBufferStartOffset;
9000101a:	1b52      	subs	r2, r2, r5
9000101c:	1b4d      	subs	r5, r1, r5
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
9000101e:	eb03 070c 	add.w	r7, r3, ip
90001022:	f813 e00c 	ldrb.w	lr, [r3, ip]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001026:	eb03 0805 	add.w	r8, r3, r5
9000102a:	f813 c005 	ldrb.w	ip, [r3, r5]
9000102e:	f898 5001 	ldrb.w	r5, [r8, #1]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001032:	f897 8001 	ldrb.w	r8, [r7, #1]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001036:	ea4c 2c05 	orr.w	ip, ip, r5, lsl #8
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
9000103a:	78bd      	ldrb	r5, [r7, #2]
9000103c:	78ff      	ldrb	r7, [r7, #3]
9000103e:	042d      	lsls	r5, r5, #16
90001040:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
90001044:	ea45 050e 	orr.w	r5, r5, lr
90001048:	ea45 6507 	orr.w	r5, r5, r7, lsl #24
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
9000104c:	189f      	adds	r7, r3, r2
9000104e:	5c9b      	ldrb	r3, [r3, r2]
90001050:	787a      	ldrb	r2, [r7, #1]
90001052:	ea43 2702 	orr.w	r7, r3, r2, lsl #8
    if (currentMovieOffset + 8 + chunkSize < movieLength)
90001056:	194a      	adds	r2, r1, r5
90001058:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000105a:	f102 0e08 	add.w	lr, r2, #8
9000105e:	459e      	cmp	lr, r3
90001060:	d214      	bcs.n	9000108c <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xc0>
        if (streamNo == STREAM0 && chunkType == TYPEDC && chunkSize > 0)
90001062:	f243 0330 	movw	r3, #12336	; 0x3030
90001066:	459c      	cmp	ip, r3
90001068:	d139      	bne.n	900010de <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x112>
9000106a:	f246 3364 	movw	r3, #25444	; 0x6364
9000106e:	429f      	cmp	r7, r3
90001070:	d135      	bne.n	900010de <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x112>
90001072:	2d00      	cmp	r5, #0
90001074:	d137      	bne.n	900010e6 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x11a>
            currentMovieOffset += 8;
90001076:	4672      	mov	r2, lr
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90001078:	3201      	adds	r2, #1
        if (currentMovieOffset == lastFrameEnd)
9000107a:	6a63      	ldr	r3, [r4, #36]	; 0x24
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
9000107c:	f022 0201 	bic.w	r2, r2, #1
        if (currentMovieOffset == lastFrameEnd)
90001080:	429a      	cmp	r2, r3
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90001082:	61a2      	str	r2, [r4, #24]
        if (currentMovieOffset == lastFrameEnd)
90001084:	d002      	beq.n	9000108c <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xc0>
90001086:	2001      	movs	r0, #1
}
90001088:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        frameNumber = 1;
9000108c:	2201      	movs	r2, #1
        currentMovieOffset = firstFrameOffset; /* start over */
9000108e:	6a23      	ldr	r3, [r4, #32]
90001090:	2000      	movs	r0, #0
90001092:	e9c4 2305 	strd	r2, r3, [r4, #20]
}
90001096:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
            lastError = AVI_ERROR_EOF_REACHED;
9000109a:	230d      	movs	r3, #13
9000109c:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
900010a0:	e7b0      	b.n	90001004 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x38>
    uint32_t streamNo  = getU16(currentMovieOffset);
900010a2:	460d      	mov	r5, r1
        volatile const uint8_t* const d = movieData + offset;
900010a4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    uint32_t chunkType = getU16(currentMovieOffset + 2);
900010a6:	1caf      	adds	r7, r5, #2
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
900010a8:	1d2a      	adds	r2, r5, #4
        volatile const uint8_t* const d = movieData + offset;
900010aa:	1959      	adds	r1, r3, r5
        val |= d[0];
900010ac:	f813 c005 	ldrb.w	ip, [r3, r5]
        volatile const uint8_t* const d = movieData + offset;
900010b0:	1898      	adds	r0, r3, r2
        val |= d[1] << 8;
900010b2:	7849      	ldrb	r1, [r1, #1]
900010b4:	ea4c 2c01 	orr.w	ip, ip, r1, lsl #8
        val |= d[3] << 24;
900010b8:	4629      	mov	r1, r5
        volatile const uint8_t* const d = movieData + offset;
900010ba:	19dd      	adds	r5, r3, r7
        val |= d[0];
900010bc:	5ddf      	ldrb	r7, [r3, r7]
        val |= d[1] << 8;
900010be:	786d      	ldrb	r5, [r5, #1]
        val |= d[0];
900010c0:	5c9a      	ldrb	r2, [r3, r2]
        val |= d[1] << 8;
900010c2:	ea47 2705 	orr.w	r7, r7, r5, lsl #8
        val |= d[1] << 8;
900010c6:	f890 e001 	ldrb.w	lr, [r0, #1]
        val |= d[2] << 16;
900010ca:	7885      	ldrb	r5, [r0, #2]
        val |= d[3] << 24;
900010cc:	78c3      	ldrb	r3, [r0, #3]
900010ce:	2000      	movs	r0, #0
        val |= d[2] << 16;
900010d0:	042d      	lsls	r5, r5, #16
        val |= d[3] << 24;
900010d2:	ea42 6303 	orr.w	r3, r2, r3, lsl #24
900010d6:	ea45 250e 	orr.w	r5, r5, lr, lsl #8
900010da:	431d      	orrs	r5, r3
        return val;
900010dc:	e7bb      	b.n	90001056 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x8a>
        currentMovieOffset += chunkSize;
900010de:	61a2      	str	r2, [r4, #24]
        if (chunkSize == 0) /* Empty frame - Skip */
900010e0:	2d00      	cmp	r5, #0
900010e2:	d1c9      	bne.n	90001078 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xac>
900010e4:	e7c7      	b.n	90001076 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xaa>
            currentMovieOffset += 8;
900010e6:	f101 0708 	add.w	r7, r1, #8
900010ea:	61a7      	str	r7, [r4, #24]
    if (reader != 0)
900010ec:	b1f0      	cbz	r0, 9000112c <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x160>
        if (length > aviBufferLength)
900010ee:	6ba3      	ldr	r3, [r4, #56]	; 0x38
900010f0:	429d      	cmp	r5, r3
900010f2:	d824      	bhi.n	9000113e <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x172>
        reader->seek(offset);
900010f4:	6803      	ldr	r3, [r0, #0]
900010f6:	4639      	mov	r1, r7
900010f8:	68db      	ldr	r3, [r3, #12]
900010fa:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
900010fc:	6b20      	ldr	r0, [r4, #48]	; 0x30
900010fe:	462a      	mov	r2, r5
90001100:	6b61      	ldr	r1, [r4, #52]	; 0x34
90001102:	6803      	ldr	r3, [r0, #0]
90001104:	691b      	ldr	r3, [r3, #16]
90001106:	4798      	blx	r3
90001108:	b910      	cbnz	r0, 90001110 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x144>
            lastError = AVI_ERROR_EOF_REACHED;
9000110a:	230d      	movs	r3, #13
9000110c:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
        return aviBuffer;
90001110:	6b61      	ldr	r1, [r4, #52]	; 0x34
        aviBufferStartOffset = offset;
90001112:	63e7      	str	r7, [r4, #60]	; 0x3c
    if (outputBuffer) /* only decode if buffers are assigned. */
90001114:	b126      	cbz	r6, 90001120 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x154>
90001116:	4633      	mov	r3, r6
90001118:	462a      	mov	r2, r5
9000111a:	4620      	mov	r0, r4
9000111c:	f7ff fc60 	bl	900009e0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0>
        currentMovieOffset += chunkSize;
90001120:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
            frameNumber++;
90001124:	3301      	adds	r3, #1
        currentMovieOffset += chunkSize;
90001126:	442a      	add	r2, r5
            frameNumber++;
90001128:	6163      	str	r3, [r4, #20]
        if (chunkSize == 0) /* Empty frame - Skip */
9000112a:	e7a5      	b.n	90001078 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xac>
    return movieData + offset;
9000112c:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
9000112e:	4439      	add	r1, r7
90001130:	e7f0      	b.n	90001114 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x148>
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90001132:	4b07      	ldr	r3, [pc, #28]	; (90001150 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x184>)
90001134:	21b1      	movs	r1, #177	; 0xb1
90001136:	4a07      	ldr	r2, [pc, #28]	; (90001154 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x188>)
90001138:	4807      	ldr	r0, [pc, #28]	; (90001158 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x18c>)
9000113a:	f024 ff09 	bl	90025f50 <__assert_func>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
9000113e:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90001140:	4b06      	ldr	r3, [pc, #24]	; (9000115c <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x190>)
90001142:	4a07      	ldr	r2, [pc, #28]	; (90001160 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x194>)
90001144:	219f      	movs	r1, #159	; 0x9f
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001146:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
            assert(!"Buffer to small");
9000114a:	4803      	ldr	r0, [pc, #12]	; (90001158 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x18c>)
9000114c:	f024 ff00 	bl	90025f50 <__assert_func>
90001150:	9002744c 	.word	0x9002744c
90001154:	900274cc 	.word	0x900274cc
90001158:	900273a4 	.word	0x900273a4
9000115c:	900273f4 	.word	0x900273f4
90001160:	90027408 	.word	0x90027408

90001164 <_ZN20HardwareMJPEGDecoderC1Ev>:
HardwareMJPEGDecoder::HardwareMJPEGDecoder()
90001164:	b510      	push	{r4, lr}
    : frameNumber(0), currentMovieOffset(0), indexOffset(0), firstFrameOffset(0), lastFrameEnd(0), movieLength(0), movieData(0),
90001166:	2200      	movs	r2, #0
HardwareMJPEGDecoder::HardwareMJPEGDecoder()
90001168:	4604      	mov	r4, r0
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
9000116a:	4b0e      	ldr	r3, [pc, #56]	; (900011a4 <_ZN20HardwareMJPEGDecoderC1Ev+0x40>)
    semDecodingDone = SEM_CREATE();
9000116c:	2001      	movs	r0, #1
9000116e:	4611      	mov	r1, r2
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
90001170:	63e2      	str	r2, [r4, #60]	; 0x3c
90001172:	6023      	str	r3, [r4, #0]
90001174:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
    : frameNumber(0), currentMovieOffset(0), indexOffset(0), firstFrameOffset(0), lastFrameEnd(0), movieLength(0), movieData(0),
90001178:	e9c4 2205 	strd	r2, r2, [r4, #20]
9000117c:	e9c4 2207 	strd	r2, r2, [r4, #28]
90001180:	e9c4 2209 	strd	r2, r2, [r4, #36]	; 0x24
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
90001184:	e9c4 220b 	strd	r2, r2, [r4, #44]	; 0x2c
90001188:	e9c4 220d 	strd	r2, r2, [r4, #52]	; 0x34
    videoInfo.frame_width = 0;
9000118c:	e9c4 2203 	strd	r2, r2, [r4, #12]
    videoInfo.number_of_frames = 0;
90001190:	e9c4 2201 	strd	r2, r2, [r4, #4]
    semDecodingDone = SEM_CREATE();
90001194:	f00b fcdc 	bl	9000cb50 <osSemaphoreNew>
90001198:	4b03      	ldr	r3, [pc, #12]	; (900011a8 <_ZN20HardwareMJPEGDecoderC1Ev+0x44>)
9000119a:	4602      	mov	r2, r0
}
9000119c:	4620      	mov	r0, r4
    semDecodingDone = SEM_CREATE();
9000119e:	601a      	str	r2, [r3, #0]
}
900011a0:	bd10      	pop	{r4, pc}
900011a2:	bf00      	nop
900011a4:	900275f0 	.word	0x900275f0
900011a8:	24005bcc 	.word	0x24005bcc

900011ac <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>:
{
900011ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    currentMovieOffset = 0;
900011b0:	2100      	movs	r1, #0
    if (reader != 0)
900011b2:	6b06      	ldr	r6, [r0, #48]	; 0x30
{
900011b4:	b083      	sub	sp, #12
900011b6:	4605      	mov	r5, r0
    currentMovieOffset = 0;
900011b8:	6181      	str	r1, [r0, #24]
    lastError = AVI_NO_ERROR;
900011ba:	f880 1040 	strb.w	r1, [r0, #64]	; 0x40
    if (reader != 0)
900011be:	2e00      	cmp	r6, #0
900011c0:	f000 81b4 	beq.w	9000152c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x380>
        if (length > aviBufferLength)
900011c4:	6b83      	ldr	r3, [r0, #56]	; 0x38
900011c6:	2b47      	cmp	r3, #71	; 0x47
900011c8:	f240 8265 	bls.w	90001696 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4ea>
        reader->seek(offset);
900011cc:	6833      	ldr	r3, [r6, #0]
900011ce:	4630      	mov	r0, r6
900011d0:	68db      	ldr	r3, [r3, #12]
900011d2:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
900011d4:	6b28      	ldr	r0, [r5, #48]	; 0x30
900011d6:	2248      	movs	r2, #72	; 0x48
900011d8:	6b69      	ldr	r1, [r5, #52]	; 0x34
900011da:	6803      	ldr	r3, [r0, #0]
900011dc:	691b      	ldr	r3, [r3, #16]
900011de:	4798      	blx	r3
900011e0:	2800      	cmp	r0, #0
900011e2:	f000 80ce 	beq.w	90001382 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1d6>
        aviBufferStartOffset = offset;
900011e6:	2300      	movs	r3, #0
    if (reader != 0)
900011e8:	6b2e      	ldr	r6, [r5, #48]	; 0x30
    if (compare(currentMovieOffset, "RIFF", 4))
900011ea:	69af      	ldr	r7, [r5, #24]
    if (reader != 0)
900011ec:	46b1      	mov	r9, r6
        aviBufferStartOffset = offset;
900011ee:	63eb      	str	r3, [r5, #60]	; 0x3c
    if (reader != 0)
900011f0:	2e00      	cmp	r6, #0
900011f2:	f000 819c 	beq.w	9000152e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x382>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
900011f6:	f8d5 a034 	ldr.w	sl, [r5, #52]	; 0x34
    return strncmp(src, str, num);
900011fa:	2204      	movs	r2, #4
900011fc:	49c3      	ldr	r1, [pc, #780]	; (9000150c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x360>)
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
900011fe:	eb0a 0b07 	add.w	fp, sl, r7
    return strncmp(src, str, num);
90001202:	4658      	mov	r0, fp
90001204:	f025 f984 	bl	90026510 <strncmp>
    if (compare(currentMovieOffset, "RIFF", 4))
90001208:	2800      	cmp	r0, #0
9000120a:	f040 824d 	bne.w	900016a8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4fc>
    currentMovieOffset += 8;
9000120e:	f107 0008 	add.w	r0, r7, #8
    return strncmp(src, str, num);
90001212:	2204      	movs	r2, #4
90001214:	49be      	ldr	r1, [pc, #760]	; (90001510 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x364>)
    currentMovieOffset += 8;
90001216:	61a8      	str	r0, [r5, #24]
    return strncmp(src, str, num);
90001218:	4450      	add	r0, sl
9000121a:	f025 f979 	bl	90026510 <strncmp>
    if (compare(currentMovieOffset, "AVI ", 4))
9000121e:	2800      	cmp	r0, #0
90001220:	f040 825d 	bne.w	900016de <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x532>
    currentMovieOffset += 4;
90001224:	f107 080c 	add.w	r8, r7, #12
    return strncmp(src, str, num);
90001228:	2204      	movs	r2, #4
9000122a:	49ba      	ldr	r1, [pc, #744]	; (90001514 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x368>)
9000122c:	eb0a 0008 	add.w	r0, sl, r8
    currentMovieOffset += 4;
90001230:	f8c5 8018 	str.w	r8, [r5, #24]
    return strncmp(src, str, num);
90001234:	f025 f96c 	bl	90026510 <strncmp>
    if (compare(currentMovieOffset, "LIST", 4))
90001238:	9001      	str	r0, [sp, #4]
9000123a:	2800      	cmp	r0, #0
9000123c:	f040 8245 	bne.w	900016ca <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x51e>
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001240:	f89b 4012 	ldrb.w	r4, [fp, #18]
90001244:	f89b 2011 	ldrb.w	r2, [fp, #17]
90001248:	0424      	lsls	r4, r4, #16
9000124a:	f89b 3013 	ldrb.w	r3, [fp, #19]
9000124e:	ea44 2402 	orr.w	r4, r4, r2, lsl #8
90001252:	f89b 2010 	ldrb.w	r2, [fp, #16]
90001256:	4314      	orrs	r4, r2
    assert(aviListSize);
90001258:	ea54 6403 	orrs.w	r4, r4, r3, lsl #24
9000125c:	f000 822e 	beq.w	900016bc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x510>
    uint32_t offset =  currentMovieOffset + 8;
90001260:	f107 0014 	add.w	r0, r7, #20
    return strncmp(src, str, num);
90001264:	2204      	movs	r2, #4
90001266:	49ac      	ldr	r1, [pc, #688]	; (90001518 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x36c>)
90001268:	4450      	add	r0, sl
9000126a:	f025 f951 	bl	90026510 <strncmp>
    if (compare(offset, "hdrl", 4))
9000126e:	2800      	cmp	r0, #0
90001270:	f000 808b 	beq.w	9000138a <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1de>
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
90001274:	2306      	movs	r3, #6
        foundFrame = false;
90001276:	f8dd b004 	ldr.w	fp, [sp, #4]
    offset += 4;
9000127a:	f107 0018 	add.w	r0, r7, #24
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
9000127e:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001282:	4450      	add	r0, sl
    return strncmp(src, str, num);
90001284:	2204      	movs	r2, #4
90001286:	49a5      	ldr	r1, [pc, #660]	; (9000151c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x370>)
90001288:	f025 f942 	bl	90026510 <strncmp>
    if (compare(offset, "avih", 4))
9000128c:	2800      	cmp	r0, #0
9000128e:	f000 808f 	beq.w	900013b0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x204>
        lastError = AVI_ERROR_AVI_AVIH_NOT_FOUND;
90001292:	2307      	movs	r3, #7
90001294:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
    uint32_t listOffset = aviListOffset + aviListSize + 8;
90001298:	4444      	add	r4, r8
9000129a:	3408      	adds	r4, #8
    if (reader != 0)
9000129c:	f1b9 0f00 	cmp.w	r9, #0
900012a0:	d015      	beq.n	900012ce <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x122>
        if (length > aviBufferLength)
900012a2:	6bab      	ldr	r3, [r5, #56]	; 0x38
900012a4:	2b0b      	cmp	r3, #11
900012a6:	f240 81f6 	bls.w	90001696 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4ea>
        reader->seek(offset);
900012aa:	f8d9 3000 	ldr.w	r3, [r9]
900012ae:	4621      	mov	r1, r4
900012b0:	4648      	mov	r0, r9
900012b2:	68db      	ldr	r3, [r3, #12]
900012b4:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
900012b6:	6b28      	ldr	r0, [r5, #48]	; 0x30
900012b8:	220c      	movs	r2, #12
900012ba:	6b69      	ldr	r1, [r5, #52]	; 0x34
900012bc:	6803      	ldr	r3, [r0, #0]
900012be:	691b      	ldr	r3, [r3, #16]
900012c0:	4798      	blx	r3
900012c2:	b910      	cbnz	r0, 900012ca <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x11e>
            lastError = AVI_ERROR_EOF_REACHED;
900012c4:	230d      	movs	r3, #13
900012c6:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
        aviBufferStartOffset = offset;
900012ca:	6b2e      	ldr	r6, [r5, #48]	; 0x30
900012cc:	63ec      	str	r4, [r5, #60]	; 0x3c
        return aviBuffer;
900012ce:	f895 9040 	ldrb.w	r9, [r5, #64]	; 0x40
    return strncmp(src, str, num);
900012d2:	4f93      	ldr	r7, [pc, #588]	; (90001520 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x374>)
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
900012d4:	f104 0808 	add.w	r8, r4, #8
    if (reader != 0)
900012d8:	2e00      	cmp	r6, #0
900012da:	d041      	beq.n	90001360 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1b4>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
900012dc:	6beb      	ldr	r3, [r5, #60]	; 0x3c
    return strncmp(src, str, num);
900012de:	2204      	movs	r2, #4
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
900012e0:	6b68      	ldr	r0, [r5, #52]	; 0x34
    return strncmp(src, str, num);
900012e2:	4639      	mov	r1, r7
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
900012e4:	eba8 0303 	sub.w	r3, r8, r3
900012e8:	4418      	add	r0, r3
    return strncmp(src, str, num);
900012ea:	f025 f911 	bl	90026510 <strncmp>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
900012ee:	2800      	cmp	r0, #0
900012f0:	d03e      	beq.n	90001370 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1c4>
900012f2:	f1b9 0f00 	cmp.w	r9, #0
900012f6:	d13e      	bne.n	90001376 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1ca>
900012f8:	6aab      	ldr	r3, [r5, #40]	; 0x28
900012fa:	42a3      	cmp	r3, r4
900012fc:	f240 80b1 	bls.w	90001462 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x2b6>
        const uint32_t listSize = getU32(listOffset + 4) + 8;
90001300:	3404      	adds	r4, #4
    if (reader != 0)
90001302:	2e00      	cmp	r6, #0
90001304:	d046      	beq.n	90001394 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1e8>
        const uint32_t index = offset - aviBufferStartOffset;
90001306:	6bea      	ldr	r2, [r5, #60]	; 0x3c
        if (length > aviBufferLength)
90001308:	e9d5 130d 	ldrd	r1, r3, [r5, #52]	; 0x34
        const uint32_t index = offset - aviBufferStartOffset;
9000130c:	1aa4      	subs	r4, r4, r2
        if (length > aviBufferLength)
9000130e:	2b0b      	cmp	r3, #11
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001310:	eb01 0204 	add.w	r2, r1, r4
90001314:	5d09      	ldrb	r1, [r1, r4]
90001316:	7894      	ldrb	r4, [r2, #2]
90001318:	7850      	ldrb	r0, [r2, #1]
9000131a:	ea4f 4404 	mov.w	r4, r4, lsl #16
9000131e:	78d2      	ldrb	r2, [r2, #3]
90001320:	ea44 2400 	orr.w	r4, r4, r0, lsl #8
90001324:	ea44 0401 	orr.w	r4, r4, r1
90001328:	ea44 6402 	orr.w	r4, r4, r2, lsl #24
        listOffset += listSize;
9000132c:	4444      	add	r4, r8
        if (length > aviBufferLength)
9000132e:	f240 81b2 	bls.w	90001696 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4ea>
        reader->seek(offset);
90001332:	6833      	ldr	r3, [r6, #0]
90001334:	4621      	mov	r1, r4
90001336:	4630      	mov	r0, r6
90001338:	68db      	ldr	r3, [r3, #12]
9000133a:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
9000133c:	6b28      	ldr	r0, [r5, #48]	; 0x30
9000133e:	220c      	movs	r2, #12
90001340:	6b69      	ldr	r1, [r5, #52]	; 0x34
90001342:	6803      	ldr	r3, [r0, #0]
90001344:	691b      	ldr	r3, [r3, #16]
90001346:	4798      	blx	r3
90001348:	b910      	cbnz	r0, 90001350 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1a4>
            lastError = AVI_ERROR_EOF_REACHED;
9000134a:	230d      	movs	r3, #13
9000134c:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
        aviBufferStartOffset = offset;
90001350:	6b2e      	ldr	r6, [r5, #48]	; 0x30
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001352:	f104 0808 	add.w	r8, r4, #8
90001356:	f895 9040 	ldrb.w	r9, [r5, #64]	; 0x40
        aviBufferStartOffset = offset;
9000135a:	63ec      	str	r4, [r5, #60]	; 0x3c
    if (reader != 0)
9000135c:	2e00      	cmp	r6, #0
9000135e:	d1bd      	bne.n	900012dc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x130>
        src = (const char*)movieData + offset;
90001360:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
    return strncmp(src, str, num);
90001362:	2204      	movs	r2, #4
90001364:	4639      	mov	r1, r7
        src = (const char*)movieData + offset;
90001366:	4440      	add	r0, r8
    return strncmp(src, str, num);
90001368:	f025 f8d2 	bl	90026510 <strncmp>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
9000136c:	2800      	cmp	r0, #0
9000136e:	d1c0      	bne.n	900012f2 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x146>
    if (lastError != AVI_NO_ERROR)
90001370:	f1b9 0f00 	cmp.w	r9, #0
90001374:	d075      	beq.n	90001462 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x2b6>
        lastError = AVI_ERROR_MOVI_NOT_FOUND;
90001376:	230a      	movs	r3, #10
90001378:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
}
9000137c:	b003      	add	sp, #12
9000137e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
            lastError = AVI_ERROR_EOF_REACHED;
90001382:	230d      	movs	r3, #13
90001384:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
90001388:	e72d      	b.n	900011e6 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x3a>
    offset += 4;
9000138a:	f107 0018 	add.w	r0, r7, #24
    bool foundFrame = true;
9000138e:	f04f 0b01 	mov.w	fp, #1
90001392:	e776      	b.n	90001282 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xd6>
        volatile const uint8_t* const d = movieData + offset;
90001394:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
90001396:	191a      	adds	r2, r3, r4
        val |= d[0];
90001398:	5d1b      	ldrb	r3, [r3, r4]
        val |= d[1] << 8;
9000139a:	7851      	ldrb	r1, [r2, #1]
        val |= d[2] << 16;
9000139c:	7894      	ldrb	r4, [r2, #2]
        val |= d[3] << 24;
9000139e:	78d2      	ldrb	r2, [r2, #3]
        val |= d[2] << 16;
900013a0:	0424      	lsls	r4, r4, #16
        val |= d[3] << 24;
900013a2:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
900013a6:	ea44 2401 	orr.w	r4, r4, r1, lsl #8
900013aa:	431c      	orrs	r4, r3
        listOffset += listSize;
900013ac:	4444      	add	r4, r8
    return movieData + offset;
900013ae:	e791      	b.n	900012d4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x128>
    if (foundFrame)
900013b0:	f1bb 0f00 	cmp.w	fp, #0
900013b4:	f43f af70 	beq.w	90001298 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xec>
        offset += 8; /* skip fourcc and cb in AVIMAINHEADER */
900013b8:	f107 0120 	add.w	r1, r7, #32
    if (reader != 0)
900013bc:	f1b9 0f00 	cmp.w	r9, #0
900013c0:	f000 8125 	beq.w	9000160e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x462>
        const uint32_t index = offset - aviBufferStartOffset;
900013c4:	6beb      	ldr	r3, [r5, #60]	; 0x3c
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900013c6:	6b6a      	ldr	r2, [r5, #52]	; 0x34
        const uint32_t index = offset - aviBufferStartOffset;
900013c8:	1ac9      	subs	r1, r1, r3
900013ca:	f1c3 0030 	rsb	r0, r3, #48	; 0x30
        videoInfo.ms_between_frames = getU32(offset) / 1000;
900013ce:	f8df c158 	ldr.w	ip, [pc, #344]	; 90001528 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x37c>
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900013d2:	f812 a001 	ldrb.w	sl, [r2, r1]
900013d6:	eb02 0e01 	add.w	lr, r2, r1
        const uint32_t index = offset - aviBufferStartOffset;
900013da:	f1c3 0140 	rsb	r1, r3, #64	; 0x40
900013de:	f1c3 0344 	rsb	r3, r3, #68	; 0x44
900013e2:	4438      	add	r0, r7
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900013e4:	f89e b001 	ldrb.w	fp, [lr, #1]
        const uint32_t index = offset - aviBufferStartOffset;
900013e8:	4439      	add	r1, r7
900013ea:	441f      	add	r7, r3
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900013ec:	f89e 3002 	ldrb.w	r3, [lr, #2]
900013f0:	f89e e003 	ldrb.w	lr, [lr, #3]
900013f4:	041b      	lsls	r3, r3, #16
900013f6:	ea43 230b 	orr.w	r3, r3, fp, lsl #8
900013fa:	ea43 030a 	orr.w	r3, r3, sl
900013fe:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
        videoInfo.ms_between_frames = getU32(offset) / 1000;
90001402:	fbac c303 	umull	ip, r3, ip, r3
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001406:	eb02 0c00 	add.w	ip, r2, r0
        videoInfo.ms_between_frames = getU32(offset) / 1000;
9000140a:	099b      	lsrs	r3, r3, #6
9000140c:	606b      	str	r3, [r5, #4]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
9000140e:	f89c 3002 	ldrb.w	r3, [ip, #2]
90001412:	f89c a001 	ldrb.w	sl, [ip, #1]
90001416:	041b      	lsls	r3, r3, #16
90001418:	f812 e000 	ldrb.w	lr, [r2, r0]
9000141c:	f89c c003 	ldrb.w	ip, [ip, #3]
90001420:	1850      	adds	r0, r2, r1
90001422:	ea43 230a 	orr.w	r3, r3, sl, lsl #8
90001426:	ea43 030e 	orr.w	r3, r3, lr
9000142a:	ea43 630c 	orr.w	r3, r3, ip, lsl #24
        videoInfo.number_of_frames = getU32(offset + 16);
9000142e:	60ab      	str	r3, [r5, #8]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001430:	7883      	ldrb	r3, [r0, #2]
90001432:	f890 c001 	ldrb.w	ip, [r0, #1]
90001436:	041b      	lsls	r3, r3, #16
90001438:	5c51      	ldrb	r1, [r2, r1]
9000143a:	ea43 230c 	orr.w	r3, r3, ip, lsl #8
9000143e:	430b      	orrs	r3, r1
90001440:	78c1      	ldrb	r1, [r0, #3]
90001442:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
90001446:	19d1      	adds	r1, r2, r7
        videoInfo.frame_width = getU32(offset + 32);
90001448:	60eb      	str	r3, [r5, #12]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
9000144a:	788b      	ldrb	r3, [r1, #2]
9000144c:	7848      	ldrb	r0, [r1, #1]
9000144e:	041b      	lsls	r3, r3, #16
90001450:	5dd2      	ldrb	r2, [r2, r7]
90001452:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
90001456:	4313      	orrs	r3, r2
90001458:	78ca      	ldrb	r2, [r1, #3]
9000145a:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
        videoInfo.frame_height = getU32(offset + 36);
9000145e:	612b      	str	r3, [r5, #16]
90001460:	e71a      	b.n	90001298 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xec>
    currentMovieOffset = listOffset + 8 + 4; /* skip LIST and 'movi' */
90001462:	f104 030c 	add.w	r3, r4, #12
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
90001466:	3404      	adds	r4, #4
    currentMovieOffset = listOffset + 8 + 4; /* skip LIST and 'movi' */
90001468:	61ab      	str	r3, [r5, #24]
    if (reader != 0)
9000146a:	2e00      	cmp	r6, #0
9000146c:	f000 80b4 	beq.w	900015d8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x42c>
        const uint32_t index = offset - aviBufferStartOffset;
90001470:	6beb      	ldr	r3, [r5, #60]	; 0x3c
90001472:	1ae4      	subs	r4, r4, r3
        if (length > aviBufferLength)
90001474:	e9d5 120d 	ldrd	r1, r2, [r5, #52]	; 0x34
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001478:	f104 0c02 	add.w	ip, r4, #2
9000147c:	1c67      	adds	r7, r4, #1
9000147e:	f811 e004 	ldrb.w	lr, [r1, r4]
90001482:	1ce0      	adds	r0, r4, #3
90001484:	f811 300c 	ldrb.w	r3, [r1, ip]
        if (length > aviBufferLength)
90001488:	2a03      	cmp	r2, #3
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
9000148a:	f811 9007 	ldrb.w	r9, [r1, r7]
9000148e:	ea4f 4303 	mov.w	r3, r3, lsl #16
90001492:	ea43 2309 	orr.w	r3, r3, r9, lsl #8
90001496:	ea43 030e 	orr.w	r3, r3, lr
9000149a:	f811 e000 	ldrb.w	lr, [r1, r0]
9000149e:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
900014a2:	4443      	add	r3, r8
900014a4:	626b      	str	r3, [r5, #36]	; 0x24
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900014a6:	f811 300c 	ldrb.w	r3, [r1, ip]
900014aa:	f811 c007 	ldrb.w	ip, [r1, r7]
900014ae:	5d0f      	ldrb	r7, [r1, r4]
900014b0:	ea4f 4403 	mov.w	r4, r3, lsl #16
900014b4:	5c09      	ldrb	r1, [r1, r0]
900014b6:	ea44 240c 	orr.w	r4, r4, ip, lsl #8
900014ba:	ea44 0407 	orr.w	r4, r4, r7
900014be:	ea44 6401 	orr.w	r4, r4, r1, lsl #24
    listOffset += listSize;
900014c2:	4444      	add	r4, r8
        if (length > aviBufferLength)
900014c4:	f240 80e7 	bls.w	90001696 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4ea>
        reader->seek(offset);
900014c8:	6833      	ldr	r3, [r6, #0]
900014ca:	4621      	mov	r1, r4
900014cc:	4630      	mov	r0, r6
900014ce:	68db      	ldr	r3, [r3, #12]
900014d0:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
900014d2:	6b28      	ldr	r0, [r5, #48]	; 0x30
900014d4:	2204      	movs	r2, #4
900014d6:	6b69      	ldr	r1, [r5, #52]	; 0x34
900014d8:	6803      	ldr	r3, [r0, #0]
900014da:	691b      	ldr	r3, [r3, #16]
900014dc:	4798      	blx	r3
900014de:	2800      	cmp	r0, #0
900014e0:	d06a      	beq.n	900015b8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x40c>
    if (reader != 0)
900014e2:	6b2b      	ldr	r3, [r5, #48]	; 0x30
        aviBufferStartOffset = offset;
900014e4:	63ec      	str	r4, [r5, #60]	; 0x3c
    if (reader != 0)
900014e6:	2b00      	cmp	r3, #0
900014e8:	f000 8103 	beq.w	900016f2 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x546>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
900014ec:	6b68      	ldr	r0, [r5, #52]	; 0x34
    return strncmp(src, str, num);
900014ee:	2204      	movs	r2, #4
900014f0:	490c      	ldr	r1, [pc, #48]	; (90001524 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x378>)
900014f2:	f025 f80d 	bl	90026510 <strncmp>
    if (!compare(listOffset, "idx1", 4))
900014f6:	2800      	cmp	r0, #0
900014f8:	d168      	bne.n	900015cc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x420>
    frameNumber = 1; /* next frame number is 1 */
900014fa:	2201      	movs	r2, #1
    firstFrameOffset = currentMovieOffset;
900014fc:	69ab      	ldr	r3, [r5, #24]
        indexOffset = listOffset;
900014fe:	61ec      	str	r4, [r5, #28]
    frameNumber = 1; /* next frame number is 1 */
90001500:	616a      	str	r2, [r5, #20]
    firstFrameOffset = currentMovieOffset;
90001502:	622b      	str	r3, [r5, #32]
}
90001504:	b003      	add	sp, #12
90001506:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9000150a:	bf00      	nop
9000150c:	90027528 	.word	0x90027528
90001510:	900275e0 	.word	0x900275e0
90001514:	900275d8 	.word	0x900275d8
90001518:	900275d0 	.word	0x900275d0
9000151c:	900275b8 	.word	0x900275b8
90001520:	900275c0 	.word	0x900275c0
90001524:	900275c8 	.word	0x900275c8
90001528:	10624dd3 	.word	0x10624dd3
    if (compare(currentMovieOffset, "RIFF", 4))
9000152c:	4637      	mov	r7, r6
        src = (const char*)movieData + offset;
9000152e:	f8d5 902c 	ldr.w	r9, [r5, #44]	; 0x2c
    return strncmp(src, str, num);
90001532:	2204      	movs	r2, #4
90001534:	4970      	ldr	r1, [pc, #448]	; (900016f8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x54c>)
90001536:	eb09 0007 	add.w	r0, r9, r7
9000153a:	f024 ffe9 	bl	90026510 <strncmp>
    if (compare(currentMovieOffset, "RIFF", 4))
9000153e:	2800      	cmp	r0, #0
90001540:	f040 80b2 	bne.w	900016a8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4fc>
    currentMovieOffset += 8;
90001544:	f107 0008 	add.w	r0, r7, #8
    return strncmp(src, str, num);
90001548:	2204      	movs	r2, #4
9000154a:	496c      	ldr	r1, [pc, #432]	; (900016fc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x550>)
    currentMovieOffset += 8;
9000154c:	61a8      	str	r0, [r5, #24]
    return strncmp(src, str, num);
9000154e:	4448      	add	r0, r9
90001550:	f024 ffde 	bl	90026510 <strncmp>
    if (compare(currentMovieOffset, "AVI ", 4))
90001554:	2800      	cmp	r0, #0
90001556:	f040 80c2 	bne.w	900016de <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x532>
    currentMovieOffset += 4;
9000155a:	f107 080c 	add.w	r8, r7, #12
    return strncmp(src, str, num);
9000155e:	2204      	movs	r2, #4
90001560:	4967      	ldr	r1, [pc, #412]	; (90001700 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x554>)
90001562:	eb09 0008 	add.w	r0, r9, r8
    currentMovieOffset += 4;
90001566:	f8c5 8018 	str.w	r8, [r5, #24]
    return strncmp(src, str, num);
9000156a:	f024 ffd1 	bl	90026510 <strncmp>
    if (compare(currentMovieOffset, "LIST", 4))
9000156e:	4683      	mov	fp, r0
90001570:	2800      	cmp	r0, #0
90001572:	f040 80aa 	bne.w	900016ca <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x51e>
    const uint32_t aviListSize = getU32(currentMovieOffset + 4);
90001576:	f107 0310 	add.w	r3, r7, #16
        volatile const uint8_t* const d = movieData + offset;
9000157a:	eb09 0203 	add.w	r2, r9, r3
        val |= d[0];
9000157e:	f819 3003 	ldrb.w	r3, [r9, r3]
        val |= d[1] << 8;
90001582:	7851      	ldrb	r1, [r2, #1]
        val |= d[2] << 16;
90001584:	7894      	ldrb	r4, [r2, #2]
        val |= d[3] << 24;
90001586:	78d2      	ldrb	r2, [r2, #3]
        val |= d[2] << 16;
90001588:	0424      	lsls	r4, r4, #16
        val |= d[3] << 24;
9000158a:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
9000158e:	ea44 2401 	orr.w	r4, r4, r1, lsl #8
    assert(aviListSize);
90001592:	431c      	orrs	r4, r3
90001594:	f000 8092 	beq.w	900016bc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x510>
    uint32_t offset =  currentMovieOffset + 8;
90001598:	f107 0014 	add.w	r0, r7, #20
    return strncmp(src, str, num);
9000159c:	2204      	movs	r2, #4
9000159e:	4959      	ldr	r1, [pc, #356]	; (90001704 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x558>)
900015a0:	4448      	add	r0, r9
900015a2:	f024 ffb5 	bl	90026510 <strncmp>
    if (compare(offset, "hdrl", 4))
900015a6:	b958      	cbnz	r0, 900015c0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x414>
    offset += 4;
900015a8:	f107 0018 	add.w	r0, r7, #24
    bool foundFrame = true;
900015ac:	f04f 0b01 	mov.w	fp, #1
        src = (const char*)movieData + offset;
900015b0:	4448      	add	r0, r9
900015b2:	f04f 0900 	mov.w	r9, #0
900015b6:	e665      	b.n	90001284 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xd8>
            lastError = AVI_ERROR_EOF_REACHED;
900015b8:	230d      	movs	r3, #13
900015ba:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
900015be:	e790      	b.n	900014e2 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x336>
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
900015c0:	2306      	movs	r3, #6
    offset += 4;
900015c2:	f107 0018 	add.w	r0, r7, #24
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
900015c6:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
    if (reader != 0)
900015ca:	e7f1      	b.n	900015b0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x404>
        lastError = AVI_ERROR_IDX1_NOT_FOUND;
900015cc:	230b      	movs	r3, #11
900015ce:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
}
900015d2:	b003      	add	sp, #12
900015d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900015d8:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
        volatile const uint8_t* const d = movieData + offset;
900015da:	1902      	adds	r2, r0, r4
        val |= d[0];
900015dc:	5d01      	ldrb	r1, [r0, r4]
        val |= d[1] << 8;
900015de:	7856      	ldrb	r6, [r2, #1]
        val |= d[2] << 16;
900015e0:	7893      	ldrb	r3, [r2, #2]
900015e2:	041b      	lsls	r3, r3, #16
        val |= d[3] << 24;
900015e4:	ea43 2306 	orr.w	r3, r3, r6, lsl #8
900015e8:	78d6      	ldrb	r6, [r2, #3]
900015ea:	ea41 6106 	orr.w	r1, r1, r6, lsl #24
900015ee:	430b      	orrs	r3, r1
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
900015f0:	4443      	add	r3, r8
900015f2:	626b      	str	r3, [r5, #36]	; 0x24
        val |= d[0];
900015f4:	5d03      	ldrb	r3, [r0, r4]
        val |= d[1] << 8;
900015f6:	7851      	ldrb	r1, [r2, #1]
        val |= d[2] << 16;
900015f8:	7894      	ldrb	r4, [r2, #2]
        val |= d[3] << 24;
900015fa:	78d2      	ldrb	r2, [r2, #3]
        val |= d[2] << 16;
900015fc:	0424      	lsls	r4, r4, #16
        val |= d[3] << 24;
900015fe:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
90001602:	ea44 2401 	orr.w	r4, r4, r1, lsl #8
90001606:	431c      	orrs	r4, r3
    listOffset += listSize;
90001608:	4444      	add	r4, r8
        src = (const char*)movieData + offset;
9000160a:	4420      	add	r0, r4
9000160c:	e76f      	b.n	900014ee <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x342>
9000160e:	6aea      	ldr	r2, [r5, #44]	; 0x2c
        videoInfo.number_of_frames = getU32(offset + 16);
90001610:	f107 0e30 	add.w	lr, r7, #48	; 0x30
        videoInfo.frame_width = getU32(offset + 32);
90001614:	f107 0c40 	add.w	ip, r7, #64	; 0x40
        videoInfo.frame_height = getU32(offset + 36);
90001618:	3744      	adds	r7, #68	; 0x44
        volatile const uint8_t* const d = movieData + offset;
9000161a:	1850      	adds	r0, r2, r1
        val |= d[0];
9000161c:	f812 b001 	ldrb.w	fp, [r2, r1]
        volatile const uint8_t* const d = movieData + offset;
90001620:	eb02 010e 	add.w	r1, r2, lr
        val |= d[1] << 8;
90001624:	f890 a001 	ldrb.w	sl, [r0, #1]
        val |= d[2] << 16;
90001628:	7883      	ldrb	r3, [r0, #2]
        val |= d[3] << 24;
9000162a:	78c0      	ldrb	r0, [r0, #3]
        val |= d[2] << 16;
9000162c:	041b      	lsls	r3, r3, #16
        val |= d[3] << 24;
9000162e:	ea4b 6000 	orr.w	r0, fp, r0, lsl #24
90001632:	ea43 230a 	orr.w	r3, r3, sl, lsl #8
90001636:	4303      	orrs	r3, r0
        videoInfo.ms_between_frames = getU32(offset) / 1000;
90001638:	4833      	ldr	r0, [pc, #204]	; (90001708 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x55c>)
9000163a:	fba0 0303 	umull	r0, r3, r0, r3
9000163e:	099b      	lsrs	r3, r3, #6
90001640:	606b      	str	r3, [r5, #4]
        val |= d[0];
90001642:	f812 000e 	ldrb.w	r0, [r2, lr]
        val |= d[1] << 8;
90001646:	f891 e001 	ldrb.w	lr, [r1, #1]
        val |= d[2] << 16;
9000164a:	788b      	ldrb	r3, [r1, #2]
        val |= d[3] << 24;
9000164c:	78c9      	ldrb	r1, [r1, #3]
        val |= d[2] << 16;
9000164e:	041b      	lsls	r3, r3, #16
        val |= d[3] << 24;
90001650:	ea40 6101 	orr.w	r1, r0, r1, lsl #24
90001654:	ea43 230e 	orr.w	r3, r3, lr, lsl #8
        volatile const uint8_t* const d = movieData + offset;
90001658:	eb02 0e0c 	add.w	lr, r2, ip
        val |= d[3] << 24;
9000165c:	430b      	orrs	r3, r1
        volatile const uint8_t* const d = movieData + offset;
9000165e:	19d1      	adds	r1, r2, r7
        videoInfo.number_of_frames = getU32(offset + 16);
90001660:	60ab      	str	r3, [r5, #8]
        val |= d[0];
90001662:	f812 000c 	ldrb.w	r0, [r2, ip]
        val |= d[1] << 8;
90001666:	f89e c001 	ldrb.w	ip, [lr, #1]
        val |= d[2] << 16;
9000166a:	f89e 3002 	ldrb.w	r3, [lr, #2]
        val |= d[3] << 24;
9000166e:	f89e e003 	ldrb.w	lr, [lr, #3]
        val |= d[2] << 16;
90001672:	041b      	lsls	r3, r3, #16
        val |= d[3] << 24;
90001674:	ea40 600e 	orr.w	r0, r0, lr, lsl #24
90001678:	ea43 230c 	orr.w	r3, r3, ip, lsl #8
9000167c:	4303      	orrs	r3, r0
        videoInfo.frame_width = getU32(offset + 32);
9000167e:	60eb      	str	r3, [r5, #12]
        val |= d[0];
90001680:	5dd2      	ldrb	r2, [r2, r7]
        val |= d[1] << 8;
90001682:	7848      	ldrb	r0, [r1, #1]
        val |= d[2] << 16;
90001684:	788b      	ldrb	r3, [r1, #2]
        val |= d[3] << 24;
90001686:	78c9      	ldrb	r1, [r1, #3]
        val |= d[2] << 16;
90001688:	041b      	lsls	r3, r3, #16
        val |= d[3] << 24;
9000168a:	ea42 6201 	orr.w	r2, r2, r1, lsl #24
9000168e:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
90001692:	4313      	orrs	r3, r2
        return val;
90001694:	e6e3      	b.n	9000145e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x2b2>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001696:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90001698:	4b1c      	ldr	r3, [pc, #112]	; (9000170c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x560>)
9000169a:	4a1d      	ldr	r2, [pc, #116]	; (90001710 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x564>)
9000169c:	219f      	movs	r1, #159	; 0x9f
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
9000169e:	f885 0040 	strb.w	r0, [r5, #64]	; 0x40
            assert(!"Buffer to small");
900016a2:	481c      	ldr	r0, [pc, #112]	; (90001714 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x568>)
900016a4:	f024 fc54 	bl	90025f50 <__assert_func>
        lastError = AVI_ERROR_NOT_RIFF;
900016a8:	2003      	movs	r0, #3
        assert(!"RIFF header not found");
900016aa:	4b1b      	ldr	r3, [pc, #108]	; (90001718 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x56c>)
900016ac:	4a1b      	ldr	r2, [pc, #108]	; (9000171c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x570>)
900016ae:	f240 112d 	movw	r1, #301	; 0x12d
        lastError = AVI_ERROR_NOT_RIFF;
900016b2:	f885 0040 	strb.w	r0, [r5, #64]	; 0x40
        assert(!"RIFF header not found");
900016b6:	4817      	ldr	r0, [pc, #92]	; (90001714 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x568>)
900016b8:	f024 fc4a 	bl	90025f50 <__assert_func>
    assert(aviListSize);
900016bc:	4b18      	ldr	r3, [pc, #96]	; (90001720 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x574>)
900016be:	f44f 71a1 	mov.w	r1, #322	; 0x142
900016c2:	4a16      	ldr	r2, [pc, #88]	; (9000171c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x570>)
900016c4:	4813      	ldr	r0, [pc, #76]	; (90001714 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x568>)
900016c6:	f024 fc43 	bl	90025f50 <__assert_func>
        lastError = AVI_ERROR_AVI_LIST_NOT_FOUND;
900016ca:	2005      	movs	r0, #5
        assert(!"AVI LIST not found");
900016cc:	4b15      	ldr	r3, [pc, #84]	; (90001724 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x578>)
900016ce:	4a13      	ldr	r2, [pc, #76]	; (9000171c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x570>)
900016d0:	f44f 719e 	mov.w	r1, #316	; 0x13c
        lastError = AVI_ERROR_AVI_LIST_NOT_FOUND;
900016d4:	f885 0040 	strb.w	r0, [r5, #64]	; 0x40
        assert(!"AVI LIST not found");
900016d8:	480e      	ldr	r0, [pc, #56]	; (90001714 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x568>)
900016da:	f024 fc39 	bl	90025f50 <__assert_func>
        lastError = AVI_ERROR_AVI_HEADER_NOT_FOUND;
900016de:	2004      	movs	r0, #4
        assert(!"AVI header not found");
900016e0:	4b11      	ldr	r3, [pc, #68]	; (90001728 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x57c>)
900016e2:	4a0e      	ldr	r2, [pc, #56]	; (9000171c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x570>)
900016e4:	f240 1135 	movw	r1, #309	; 0x135
        lastError = AVI_ERROR_AVI_HEADER_NOT_FOUND;
900016e8:	f885 0040 	strb.w	r0, [r5, #64]	; 0x40
        assert(!"AVI header not found");
900016ec:	4809      	ldr	r0, [pc, #36]	; (90001714 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x568>)
900016ee:	f024 fc2f 	bl	90025f50 <__assert_func>
        src = (const char*)movieData + offset;
900016f2:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
900016f4:	4420      	add	r0, r4
900016f6:	e6fa      	b.n	900014ee <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x342>
900016f8:	90027528 	.word	0x90027528
900016fc:	900275e0 	.word	0x900275e0
90001700:	900275d8 	.word	0x900275d8
90001704:	900275d0 	.word	0x900275d0
90001708:	10624dd3 	.word	0x10624dd3
9000170c:	900273f4 	.word	0x900273f4
90001710:	90027408 	.word	0x90027408
90001714:	900273a4 	.word	0x900273a4
90001718:	90027530 	.word	0x90027530
9000171c:	9002754c 	.word	0x9002754c
90001720:	900275ac 	.word	0x900275ac
90001724:	90027594 	.word	0x90027594
90001728:	9002757c 	.word	0x9002757c

9000172c <_ZN20HardwareMJPEGDecoder12setVideoDataEPKhm>:
{
9000172c:	b410      	push	{r4}
    reader = 0; /* not using reader */
9000172e:	2400      	movs	r4, #0
    movieLength = length;
90001730:	e9c0 210a 	strd	r2, r1, [r0, #40]	; 0x28
    reader = 0; /* not using reader */
90001734:	6304      	str	r4, [r0, #48]	; 0x30
}
90001736:	f85d 4b04 	ldr.w	r4, [sp], #4
    readVideoHeader();
9000173a:	f7ff bd37 	b.w	900011ac <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>
9000173e:	bf00      	nop

90001740 <_ZN20HardwareMJPEGDecoder12setVideoDataERN8touchgfx15VideoDataReaderE>:
{
90001740:	b510      	push	{r4, lr}
    movieLength = reader.getDataLength();
90001742:	680b      	ldr	r3, [r1, #0]
{
90001744:	4604      	mov	r4, r0
    movieData = 0;
90001746:	2200      	movs	r2, #0
    movieLength = reader.getDataLength();
90001748:	4608      	mov	r0, r1
9000174a:	689b      	ldr	r3, [r3, #8]
    movieData = 0;
9000174c:	e9c4 210b 	strd	r2, r1, [r4, #44]	; 0x2c
    movieLength = reader.getDataLength();
90001750:	4798      	blx	r3
90001752:	4603      	mov	r3, r0
    readVideoHeader();
90001754:	4620      	mov	r0, r4
    movieLength = reader.getDataLength();
90001756:	62a3      	str	r3, [r4, #40]	; 0x28
}
90001758:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    readVideoHeader();
9000175c:	f7ff bd26 	b.w	900011ac <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>

90001760 <HAL_JPEG_InfoReadyCallback>:
        if (pInfo->ChromaSubsampling == JPEG_420_SUBSAMPLING)
90001760:	684b      	ldr	r3, [r1, #4]
90001762:	2b01      	cmp	r3, #1
90001764:	d015      	beq.n	90001792 <HAL_JPEG_InfoReadyCallback+0x32>
            if (pInfo->ChromaSubsampling == JPEG_422_SUBSAMPLING)
90001766:	2b02      	cmp	r3, #2
90001768:	d00b      	beq.n	90001782 <HAL_JPEG_InfoReadyCallback+0x22>
            if (pInfo->ChromaSubsampling == JPEG_444_SUBSAMPLING)
9000176a:	b94b      	cbnz	r3, 90001780 <HAL_JPEG_InfoReadyCallback+0x20>
                if ((pInfo->ImageWidth % 8) != 0)
9000176c:	68cb      	ldr	r3, [r1, #12]
9000176e:	0758      	lsls	r0, r3, #29
90001770:	d124      	bne.n	900017bc <HAL_JPEG_InfoReadyCallback+0x5c>
                if ((pInfo->ImageHeight % 8) != 0)
90001772:	688b      	ldr	r3, [r1, #8]
90001774:	075a      	lsls	r2, r3, #29
90001776:	d003      	beq.n	90001780 <HAL_JPEG_InfoReadyCallback+0x20>
                    pInfo->ImageHeight += (8 - (pInfo->ImageHeight % 8));
90001778:	f023 0307 	bic.w	r3, r3, #7
9000177c:	3308      	adds	r3, #8
9000177e:	608b      	str	r3, [r1, #8]
    }
90001780:	4770      	bx	lr
                if ((pInfo->ImageWidth % 16) != 0)
90001782:	68cb      	ldr	r3, [r1, #12]
90001784:	071a      	lsls	r2, r3, #28
90001786:	d0f4      	beq.n	90001772 <HAL_JPEG_InfoReadyCallback+0x12>
                    pInfo->ImageWidth += (16 - (pInfo->ImageWidth % 16));
90001788:	f023 030f 	bic.w	r3, r3, #15
9000178c:	3310      	adds	r3, #16
9000178e:	60cb      	str	r3, [r1, #12]
90001790:	e7ef      	b.n	90001772 <HAL_JPEG_InfoReadyCallback+0x12>
            if ((pInfo->ImageWidth % 16) != 0)
90001792:	68cb      	ldr	r3, [r1, #12]
90001794:	071a      	lsls	r2, r3, #28
90001796:	d003      	beq.n	900017a0 <HAL_JPEG_InfoReadyCallback+0x40>
                pInfo->ImageWidth += (16 - (pInfo->ImageWidth % 16));
90001798:	f023 030f 	bic.w	r3, r3, #15
9000179c:	3310      	adds	r3, #16
9000179e:	60cb      	str	r3, [r1, #12]
            if ((pInfo->ImageHeight % 16) != 0)
900017a0:	688a      	ldr	r2, [r1, #8]
900017a2:	0710      	lsls	r0, r2, #28
900017a4:	d003      	beq.n	900017ae <HAL_JPEG_InfoReadyCallback+0x4e>
                pInfo->ImageHeight += (16 - (pInfo->ImageHeight % 16));
900017a6:	f022 020f 	bic.w	r2, r2, #15
900017aa:	3210      	adds	r2, #16
900017ac:	608a      	str	r2, [r1, #8]
            hMCU = (pInfo->ImageWidth / MCU_WIDTH_PIXELS);
900017ae:	091b      	lsrs	r3, r3, #4
            MCU_TotalNb = (hMCU * vMCU);
900017b0:	4905      	ldr	r1, [pc, #20]	; (900017c8 <HAL_JPEG_InfoReadyCallback+0x68>)
            vMCU = (pInfo->ImageHeight / MCU_HEIGHT_PIXELS);
900017b2:	0912      	lsrs	r2, r2, #4
            MCU_TotalNb = (hMCU * vMCU);
900017b4:	fb02 f303 	mul.w	r3, r2, r3
900017b8:	600b      	str	r3, [r1, #0]
900017ba:	4770      	bx	lr
                    pInfo->ImageWidth += (8 - (pInfo->ImageWidth % 8));
900017bc:	f023 0307 	bic.w	r3, r3, #7
900017c0:	3308      	adds	r3, #8
900017c2:	60cb      	str	r3, [r1, #12]
900017c4:	e7d5      	b.n	90001772 <HAL_JPEG_InfoReadyCallback+0x12>
900017c6:	bf00      	nop
900017c8:	24005ba4 	.word	0x24005ba4

900017cc <HAL_JPEG_GetDataCallback>:
    {
900017cc:	b410      	push	{r4}
        JPEG_InputImageIndex += NbDecodedData;
900017ce:	4c0c      	ldr	r4, [pc, #48]	; (90001800 <HAL_JPEG_GetDataCallback+0x34>)
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
900017d0:	4a0c      	ldr	r2, [pc, #48]	; (90001804 <HAL_JPEG_GetDataCallback+0x38>)
        JPEG_InputImageIndex += NbDecodedData;
900017d2:	6823      	ldr	r3, [r4, #0]
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
900017d4:	6812      	ldr	r2, [r2, #0]
        JPEG_InputImageIndex += NbDecodedData;
900017d6:	440b      	add	r3, r1
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
900017d8:	4293      	cmp	r3, r2
        JPEG_InputImageIndex += NbDecodedData;
900017da:	6023      	str	r3, [r4, #0]
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
900017dc:	d302      	bcc.n	900017e4 <HAL_JPEG_GetDataCallback+0x18>
    }
900017de:	f85d 4b04 	ldr.w	r4, [sp], #4
900017e2:	4770      	bx	lr
            uint32_t inDataLength = JPEG_InputImageSize_Bytes - JPEG_InputImageIndex;
900017e4:	1ad2      	subs	r2, r2, r3
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
900017e6:	4b08      	ldr	r3, [pc, #32]	; (90001808 <HAL_JPEG_GetDataCallback+0x3c>)
900017e8:	681c      	ldr	r4, [r3, #0]
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
900017ea:	f5b2 4f50 	cmp.w	r2, #53248	; 0xd000
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
900017ee:	4421      	add	r1, r4
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
900017f0:	bf28      	it	cs
900017f2:	f44f 4250 	movcs.w	r2, #53248	; 0xd000
    }
900017f6:	f85d 4b04 	ldr.w	r4, [sp], #4
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
900017fa:	6019      	str	r1, [r3, #0]
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
900017fc:	f007 bdec 	b.w	900093d8 <HAL_JPEG_ConfigInputBuffer>
90001800:	24005bb8 	.word	0x24005bb8
90001804:	24005bc4 	.word	0x24005bc4
90001808:	24005bc0 	.word	0x24005bc0

9000180c <HAL_JPEG_DataReadyCallback>:
    {
9000180c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
9000180e:	4c22      	ldr	r4, [pc, #136]	; (90001898 <HAL_JPEG_DataReadyCallback+0x8c>)
    {
90001810:	4606      	mov	r6, r0
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
90001812:	4d22      	ldr	r5, [pc, #136]	; (9000189c <HAL_JPEG_DataReadyCallback+0x90>)
90001814:	6823      	ldr	r3, [r4, #0]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
90001816:	6820      	ldr	r0, [r4, #0]
        const uint32_t MCU = MCU_BlockIndex;
90001818:	4921      	ldr	r1, [pc, #132]	; (900018a0 <HAL_JPEG_DataReadyCallback+0x94>)
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
9000181a:	011b      	lsls	r3, r3, #4
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
9000181c:	eb05 1000 	add.w	r0, r5, r0, lsl #4
        MCU_BlockIndex += JPEG_ConvertorParams.MCU_pr_line;
90001820:	4f20      	ldr	r7, [pc, #128]	; (900018a4 <HAL_JPEG_DataReadyCallback+0x98>)
        const uint32_t MCU = MCU_BlockIndex;
90001822:	f8d1 c000 	ldr.w	ip, [r1]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
90001826:	6082      	str	r2, [r0, #8]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].MCU_index = MCU;
90001828:	6820      	ldr	r0, [r4, #0]
        MCU_BlockIndex += JPEG_ConvertorParams.MCU_pr_line;
9000182a:	68fa      	ldr	r2, [r7, #12]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].MCU_index = MCU;
9000182c:	eb05 1000 	add.w	r0, r5, r0, lsl #4
90001830:	f8c0 c00c 	str.w	ip, [r0, #12]
        MCU_BlockIndex += JPEG_ConvertorParams.MCU_pr_line;
90001834:	6808      	ldr	r0, [r1, #0]
90001836:	4410      	add	r0, r2
90001838:	6008      	str	r0, [r1, #0]
        JPEG_OUT_Write_BufferIndex++;
9000183a:	6821      	ldr	r1, [r4, #0]
9000183c:	3101      	adds	r1, #1
9000183e:	6021      	str	r1, [r4, #0]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
90001840:	2101      	movs	r1, #1
90001842:	54e9      	strb	r1, [r5, r3]
        if (JPEG_OUT_Write_BufferIndex >= NB_OUTPUT_DATA_BUFFERS)
90001844:	6823      	ldr	r3, [r4, #0]
90001846:	428b      	cmp	r3, r1
90001848:	d901      	bls.n	9000184e <HAL_JPEG_DataReadyCallback+0x42>
            JPEG_OUT_Write_BufferIndex = 0;
9000184a:	2300      	movs	r3, #0
9000184c:	6023      	str	r3, [r4, #0]
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State != JPEG_BUFFER_EMPTY)
9000184e:	6823      	ldr	r3, [r4, #0]
90001850:	011b      	lsls	r3, r3, #4
90001852:	5ceb      	ldrb	r3, [r5, r3]
90001854:	b983      	cbnz	r3, 90001878 <HAL_JPEG_DataReadyCallback+0x6c>
        HAL_JPEG_ConfigOutputBuffer(hjpeg, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001856:	6823      	ldr	r3, [r4, #0]
90001858:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9000185c:	4630      	mov	r0, r6
9000185e:	eb05 1503 	add.w	r5, r5, r3, lsl #4
90001862:	01d2      	lsls	r2, r2, #7
90001864:	6869      	ldr	r1, [r5, #4]
90001866:	f007 fdbb 	bl	900093e0 <HAL_JPEG_ConfigOutputBuffer>
        if (!DMA2D_reference->isDMARunning() && !DMA2D_reference->getReserved())
9000186a:	4b0f      	ldr	r3, [pc, #60]	; (900018a8 <HAL_JPEG_DataReadyCallback+0x9c>)
9000186c:	681b      	ldr	r3, [r3, #0]
9000186e:	7a1a      	ldrb	r2, [r3, #8]
90001870:	b90a      	cbnz	r2, 90001876 <HAL_JPEG_DataReadyCallback+0x6a>
        return isReserved;
90001872:	7a9b      	ldrb	r3, [r3, #10]
90001874:	b14b      	cbz	r3, 9000188a <HAL_JPEG_DataReadyCallback+0x7e>
    }
90001876:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
            HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90001878:	2102      	movs	r1, #2
9000187a:	4630      	mov	r0, r6
9000187c:	f007 fd74 	bl	90009368 <HAL_JPEG_Pause>
            JPEG_output_is_paused = 1;
90001880:	4b0a      	ldr	r3, [pc, #40]	; (900018ac <HAL_JPEG_DataReadyCallback+0xa0>)
90001882:	2101      	movs	r1, #1
        HAL_JPEG_ConfigOutputBuffer(hjpeg, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001884:	68fa      	ldr	r2, [r7, #12]
            JPEG_output_is_paused = 1;
90001886:	6019      	str	r1, [r3, #0]
90001888:	e7e5      	b.n	90001856 <HAL_JPEG_DataReadyCallback+0x4a>
            SEM_POST(semDecodingDone);
9000188a:	4b09      	ldr	r3, [pc, #36]	; (900018b0 <HAL_JPEG_DataReadyCallback+0xa4>)
9000188c:	6818      	ldr	r0, [r3, #0]
    }
9000188e:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
            SEM_POST(semDecodingDone);
90001892:	f00b b9e1 	b.w	9000cc58 <osSemaphoreRelease>
90001896:	bf00      	nop
90001898:	24005bc8 	.word	0x24005bc8
9000189c:	24000008 	.word	0x24000008
900018a0:	2400018c 	.word	0x2400018c
900018a4:	24005b90 	.word	0x24005b90
900018a8:	24005ba8 	.word	0x24005ba8
900018ac:	24005bbc 	.word	0x24005bbc
900018b0:	24005bcc 	.word	0x24005bcc

900018b4 <HAL_JPEG_ErrorCallback>:
  __ASM volatile ("cpsid i" : : : "memory");
900018b4:	b672      	cpsid	i
        while (1)
900018b6:	e7fe      	b.n	900018b6 <HAL_JPEG_ErrorCallback+0x2>

900018b8 <HAL_JPEG_DecodeCpltCallback>:
        Jpeg_HWDecodingEnd = 1;
900018b8:	4b01      	ldr	r3, [pc, #4]	; (900018c0 <HAL_JPEG_DecodeCpltCallback+0x8>)
900018ba:	2201      	movs	r2, #1
900018bc:	601a      	str	r2, [r3, #0]
    }
900018be:	4770      	bx	lr
900018c0:	24005bb4 	.word	0x24005bb4

900018c4 <DMA2D_CopyBuffer>:
 * @brief  Configures external DMA2D job to copy YCbCr data to RGB buffer(s)
 * @param job: External job reference
 * @retval None
 */
void DMA2D_CopyBuffer(JPEG_Data_BufferTypeDef& job)
{
900018c4:	b570      	push	{r4, r5, r6, lr}
    uint32_t xRef, yRef, refline;

    yRef = ((job.MCU_index * MCU_WIDTH_PIXELS) / JPEG_ConvertorParams.WidthExtend) * MCU_WIDTH_PIXELS;
900018c6:	491c      	ldr	r1, [pc, #112]	; (90001938 <DMA2D_CopyBuffer+0x74>)
    xRef = ((job.MCU_index * MCU_WIDTH_PIXELS) % JPEG_ConvertorParams.WidthExtend);

    refline = (JPEG_ConvertorParams.ScaledWidth) * yRef + (JPEG_ConvertorParams.bytes_pr_pixel * xRef);

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
900018c8:	2302      	movs	r3, #2
    yRef = ((job.MCU_index * MCU_WIDTH_PIXELS) / JPEG_ConvertorParams.WidthExtend) * MCU_WIDTH_PIXELS;
900018ca:	68c5      	ldr	r5, [r0, #12]
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
900018cc:	4c1b      	ldr	r4, [pc, #108]	; (9000193c <DMA2D_CopyBuffer+0x78>)
    yRef = ((job.MCU_index * MCU_WIDTH_PIXELS) / JPEG_ConvertorParams.WidthExtend) * MCU_WIDTH_PIXELS;
900018ce:	680a      	ldr	r2, [r1, #0]
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
900018d0:	6363      	str	r3, [r4, #52]	; 0x34
    yRef = ((job.MCU_index * MCU_WIDTH_PIXELS) / JPEG_ConvertorParams.WidthExtend) * MCU_WIDTH_PIXELS;
900018d2:	012b      	lsls	r3, r5, #4

    /* Configure DMA2D data size */
    if (job.MCU_index >= (MCU_TotalNb - JPEG_ConvertorParams.MCU_pr_line))  /*  Last line of frame */
900018d4:	4e1a      	ldr	r6, [pc, #104]	; (90001940 <DMA2D_CopyBuffer+0x7c>)
    yRef = ((job.MCU_index * MCU_WIDTH_PIXELS) / JPEG_ConvertorParams.WidthExtend) * MCU_WIDTH_PIXELS;
900018d6:	fbb3 fcf2 	udiv	ip, r3, r2
    xRef = ((job.MCU_index * MCU_WIDTH_PIXELS) % JPEG_ConvertorParams.WidthExtend);
900018da:	fb02 321c 	mls	r2, r2, ip, r3
    refline = (JPEG_ConvertorParams.ScaledWidth) * yRef + (JPEG_ConvertorParams.bytes_pr_pixel * xRef);
900018de:	684b      	ldr	r3, [r1, #4]
    if (job.MCU_index >= (MCU_TotalNb - JPEG_ConvertorParams.MCU_pr_line))  /*  Last line of frame */
900018e0:	6836      	ldr	r6, [r6, #0]
    refline = (JPEG_ConvertorParams.ScaledWidth) * yRef + (JPEG_ConvertorParams.bytes_pr_pixel * xRef);
900018e2:	fb03 fc0c 	mul.w	ip, r3, ip
    if (job.MCU_index >= (MCU_TotalNb - JPEG_ConvertorParams.MCU_pr_line))  /*  Last line of frame */
900018e6:	68cb      	ldr	r3, [r1, #12]
900018e8:	eba6 0e03 	sub.w	lr, r6, r3
    refline = (JPEG_ConvertorParams.ScaledWidth) * yRef + (JPEG_ConvertorParams.bytes_pr_pixel * xRef);
900018ec:	690e      	ldr	r6, [r1, #16]
900018ee:	ea4f 1c0c 	mov.w	ip, ip, lsl #4
    if (job.MCU_index >= (MCU_TotalNb - JPEG_ConvertorParams.MCU_pr_line))  /*  Last line of frame */
900018f2:	4575      	cmp	r5, lr
    refline = (JPEG_ConvertorParams.ScaledWidth) * yRef + (JPEG_ConvertorParams.bytes_pr_pixel * xRef);
900018f4:	fb06 f202 	mul.w	r2, r6, r2
    if (job.MCU_index >= (MCU_TotalNb - JPEG_ConvertorParams.MCU_pr_line))  /*  Last line of frame */
900018f8:	d318      	bcc.n	9000192c <DMA2D_CopyBuffer+0x68>
    {
        WRITE_REG(DMA2D->NLR, (MCU_HEIGHT_PIXELS - JPEG_ConvertorParams.LastLineHeight | ((MCU_WIDTH_PIXELS * JPEG_ConvertorParams.MCU_pr_line) << DMA2D_NLR_PL_Pos)));
900018fa:	6889      	ldr	r1, [r1, #8]
900018fc:	f1c1 0110 	rsb	r1, r1, #16
90001900:	ea41 5103 	orr.w	r1, r1, r3, lsl #20
90001904:	6461      	str	r1, [r4, #68]	; 0x44
    {
        WRITE_REG(DMA2D->NLR, (MCU_HEIGHT_PIXELS | ((MCU_WIDTH_PIXELS * JPEG_ConvertorParams.MCU_pr_line) << DMA2D_NLR_PL_Pos)));
    }

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, (reinterpret_cast<uint32_t>(FrameBufferAddress) + refline));
90001906:	490f      	ldr	r1, [pc, #60]	; (90001944 <DMA2D_CopyBuffer+0x80>)

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, 480 - (MCU_WIDTH_PIXELS * JPEG_ConvertorParams.MCU_pr_line));
90001908:	f1c3 031e 	rsb	r3, r3, #30

    /* DMA2D FGPFCCR register configuration */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer));
9000190c:	6840      	ldr	r0, [r0, #4]
    WRITE_REG(DMA2D->FGOR, 0);
9000190e:	2400      	movs	r4, #0
    WRITE_REG(DMA2D->OMAR, (reinterpret_cast<uint32_t>(FrameBufferAddress) + refline));
90001910:	6809      	ldr	r1, [r1, #0]
    WRITE_REG(DMA2D->OOR, 480 - (MCU_WIDTH_PIXELS * JPEG_ConvertorParams.MCU_pr_line));
90001912:	011b      	lsls	r3, r3, #4
    WRITE_REG(DMA2D->OMAR, (reinterpret_cast<uint32_t>(FrameBufferAddress) + refline));
90001914:	4411      	add	r1, r2
90001916:	4a09      	ldr	r2, [pc, #36]	; (9000193c <DMA2D_CopyBuffer+0x78>)
90001918:	4461      	add	r1, ip
9000191a:	63d1      	str	r1, [r2, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, 480 - (MCU_WIDTH_PIXELS * JPEG_ConvertorParams.MCU_pr_line));
9000191c:	6413      	str	r3, [r2, #64]	; 0x40
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
9000191e:	490a      	ldr	r1, [pc, #40]	; (90001948 <DMA2D_CopyBuffer+0x84>)

    /* Configure DMA2D contol register */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
90001920:	4b0a      	ldr	r3, [pc, #40]	; (9000194c <DMA2D_CopyBuffer+0x88>)
    WRITE_REG(DMA2D->FGOR, 0);
90001922:	6114      	str	r4, [r2, #16]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
90001924:	61d1      	str	r1, [r2, #28]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer));
90001926:	60d0      	str	r0, [r2, #12]
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
90001928:	6013      	str	r3, [r2, #0]
}
9000192a:	bd70      	pop	{r4, r5, r6, pc}
        WRITE_REG(DMA2D->NLR, (MCU_HEIGHT_PIXELS | ((MCU_WIDTH_PIXELS * JPEG_ConvertorParams.MCU_pr_line) << DMA2D_NLR_PL_Pos)));
9000192c:	0519      	lsls	r1, r3, #20
9000192e:	f041 0110 	orr.w	r1, r1, #16
90001932:	6461      	str	r1, [r4, #68]	; 0x44
90001934:	e7e7      	b.n	90001906 <DMA2D_CopyBuffer+0x42>
90001936:	bf00      	nop
90001938:	24005b90 	.word	0x24005b90
9000193c:	52001000 	.word	0x52001000
90001940:	24005ba4 	.word	0x24005ba4
90001944:	24005bac 	.word	0x24005bac
90001948:	ff09000b 	.word	0xff09000b
9000194c:	00010201 	.word	0x00010201

90001950 <DMA2D_ExternalJobCompleted>:
void DMA2D_ExternalJobCompleted(JPEG_Data_BufferTypeDef& job)
{
    job.State = JPEG_BUFFER_EMPTY;
    job.DataBufferSize = 0;

    JPEG_OUT_Read_BufferIndex++;
90001950:	4b0c      	ldr	r3, [pc, #48]	; (90001984 <DMA2D_ExternalJobCompleted+0x34>)
    job.State = JPEG_BUFFER_EMPTY;
90001952:	2100      	movs	r1, #0
90001954:	7001      	strb	r1, [r0, #0]
    JPEG_OUT_Read_BufferIndex++;
90001956:	681a      	ldr	r2, [r3, #0]
    job.DataBufferSize = 0;
90001958:	6081      	str	r1, [r0, #8]
    JPEG_OUT_Read_BufferIndex++;
9000195a:	3201      	adds	r2, #1
9000195c:	601a      	str	r2, [r3, #0]
    if (JPEG_OUT_Read_BufferIndex >= NB_OUTPUT_DATA_BUFFERS)
9000195e:	681a      	ldr	r2, [r3, #0]
90001960:	2a01      	cmp	r2, #1
90001962:	d900      	bls.n	90001966 <DMA2D_ExternalJobCompleted+0x16>
    {
        JPEG_OUT_Read_BufferIndex = 0;
90001964:	6019      	str	r1, [r3, #0]
    }

    /* Check if last line */
    if (job.MCU_index >= (MCU_TotalNb - JPEG_ConvertorParams.MCU_pr_line))
90001966:	4b08      	ldr	r3, [pc, #32]	; (90001988 <DMA2D_ExternalJobCompleted+0x38>)
90001968:	4908      	ldr	r1, [pc, #32]	; (9000198c <DMA2D_ExternalJobCompleted+0x3c>)
9000196a:	681b      	ldr	r3, [r3, #0]
9000196c:	68c9      	ldr	r1, [r1, #12]
9000196e:	68c2      	ldr	r2, [r0, #12]
90001970:	1a5b      	subs	r3, r3, r1
90001972:	429a      	cmp	r2, r3
90001974:	d302      	bcc.n	9000197c <DMA2D_ExternalJobCompleted+0x2c>
    {
        DMA2D_CopyBufferEnd = 1;
90001976:	4b06      	ldr	r3, [pc, #24]	; (90001990 <DMA2D_ExternalJobCompleted+0x40>)
90001978:	2201      	movs	r2, #1
9000197a:	601a      	str	r2, [r3, #0]
    }

    /* Signal decoder thread to wake up and continue decoding */
    SEM_POST(semDecodingDone);
9000197c:	4b05      	ldr	r3, [pc, #20]	; (90001994 <DMA2D_ExternalJobCompleted+0x44>)
9000197e:	6818      	ldr	r0, [r3, #0]
90001980:	f00b b96a 	b.w	9000cc58 <osSemaphoreRelease>
90001984:	24000188 	.word	0x24000188
90001988:	24005ba4 	.word	0x24005ba4
9000198c:	24005b90 	.word	0x24005b90
90001990:	24000184 	.word	0x24000184
90001994:	24005bcc 	.word	0x24005bcc

90001998 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
90001998:	2101      	movs	r1, #1
9000199a:	2200      	movs	r2, #0
{
9000199c:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
9000199e:	4608      	mov	r0, r1
900019a0:	f00b f8d6 	bl	9000cb50 <osSemaphoreNew>
900019a4:	4b0b      	ldr	r3, [pc, #44]	; (900019d4 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
900019a6:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
900019a8:	b140      	cbz	r0, 900019bc <_ZN8touchgfx10OSWrappers10initializeEv+0x24>

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
900019aa:	2200      	movs	r2, #0
900019ac:	2104      	movs	r1, #4
900019ae:	2001      	movs	r0, #1
900019b0:	f00b f988 	bl	9000ccc4 <osMessageQueueNew>
900019b4:	4b08      	ldr	r3, [pc, #32]	; (900019d8 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
900019b6:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
900019b8:	b130      	cbz	r0, 900019c8 <_ZN8touchgfx10OSWrappers10initializeEv+0x30>
}
900019ba:	bd08      	pop	{r3, pc}
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
900019bc:	4b07      	ldr	r3, [pc, #28]	; (900019dc <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
900019be:	2128      	movs	r1, #40	; 0x28
900019c0:	4a07      	ldr	r2, [pc, #28]	; (900019e0 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
900019c2:	4808      	ldr	r0, [pc, #32]	; (900019e4 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
900019c4:	f024 fac4 	bl	90025f50 <__assert_func>
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
900019c8:	4b07      	ldr	r3, [pc, #28]	; (900019e8 <_ZN8touchgfx10OSWrappers10initializeEv+0x50>)
900019ca:	212c      	movs	r1, #44	; 0x2c
900019cc:	4a04      	ldr	r2, [pc, #16]	; (900019e0 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
900019ce:	4805      	ldr	r0, [pc, #20]	; (900019e4 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
900019d0:	f024 fabe 	bl	90025f50 <__assert_func>
900019d4:	24005bd4 	.word	0x24005bd4
900019d8:	24005bd0 	.word	0x24005bd0
900019dc:	9002762c 	.word	0x9002762c
900019e0:	90027678 	.word	0x90027678
900019e4:	900276a8 	.word	0x900276a8
900019e8:	900276f0 	.word	0x900276f0

900019ec <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
900019ec:	4b02      	ldr	r3, [pc, #8]	; (900019f8 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
900019ee:	f04f 31ff 	mov.w	r1, #4294967295
900019f2:	6818      	ldr	r0, [r3, #0]
900019f4:	f00b b8fc 	b.w	9000cbf0 <osSemaphoreAcquire>
900019f8:	24005bd4 	.word	0x24005bd4

900019fc <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
900019fc:	4b01      	ldr	r3, [pc, #4]	; (90001a04 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
900019fe:	6818      	ldr	r0, [r3, #0]
90001a00:	f00b b92a 	b.w	9000cc58 <osSemaphoreRelease>
90001a04:	24005bd4 	.word	0x24005bd4

90001a08 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
90001a08:	4b02      	ldr	r3, [pc, #8]	; (90001a14 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
90001a0a:	2100      	movs	r1, #0
90001a0c:	6818      	ldr	r0, [r3, #0]
90001a0e:	f00b b8ef 	b.w	9000cbf0 <osSemaphoreAcquire>
90001a12:	bf00      	nop
90001a14:	24005bd4 	.word	0x24005bd4

90001a18 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
90001a18:	4b01      	ldr	r3, [pc, #4]	; (90001a20 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x8>)
90001a1a:	6818      	ldr	r0, [r3, #0]
90001a1c:	f00b b91c 	b.w	9000cc58 <osSemaphoreRelease>
90001a20:	24005bd4 	.word	0x24005bd4

90001a24 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
90001a24:	4803      	ldr	r0, [pc, #12]	; (90001a34 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
90001a26:	2300      	movs	r3, #0
90001a28:	4903      	ldr	r1, [pc, #12]	; (90001a38 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
90001a2a:	461a      	mov	r2, r3
90001a2c:	6800      	ldr	r0, [r0, #0]
90001a2e:	f00b b987 	b.w	9000cd40 <osMessageQueuePut>
90001a32:	bf00      	nop
90001a34:	24005bd0 	.word	0x24005bd0
90001a38:	24000028 	.word	0x24000028

90001a3c <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
90001a3c:	b510      	push	{r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
90001a3e:	2300      	movs	r3, #0
{
90001a40:	b082      	sub	sp, #8
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
90001a42:	4c07      	ldr	r4, [pc, #28]	; (90001a60 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
90001a44:	461a      	mov	r2, r3
90001a46:	a901      	add	r1, sp, #4
90001a48:	6820      	ldr	r0, [r4, #0]
90001a4a:	f00b f9bb 	bl	9000cdc4 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
90001a4e:	f04f 33ff 	mov.w	r3, #4294967295
90001a52:	2200      	movs	r2, #0
90001a54:	a901      	add	r1, sp, #4
90001a56:	6820      	ldr	r0, [r4, #0]
90001a58:	f00b f9b4 	bl	9000cdc4 <osMessageQueueGet>
}
90001a5c:	b002      	add	sp, #8
90001a5e:	bd10      	pop	{r4, pc}
90001a60:	24005bd0 	.word	0x24005bd0

90001a64 <_ZN8touchgfx13DMA_Interface5flushEv>:
        waitForFrameBufferSemaphore();
90001a64:	6803      	ldr	r3, [r0, #0]
90001a66:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90001a68:	4718      	bx	r3
90001a6a:	bf00      	nop

90001a6c <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
90001a6c:	2001      	movs	r0, #1
90001a6e:	4770      	bx	lr

90001a70 <_ZN8STM32DMAD1Ev>:
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false), mutexIsRunning(0)
{
    mutexIsRunning = MUTEX_CREATE();
}

STM32DMA::~STM32DMA()
90001a70:	4905      	ldr	r1, [pc, #20]	; (90001a88 <_ZN8STM32DMAD1Ev+0x18>)
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90001a72:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
90001a76:	4b05      	ldr	r3, [pc, #20]	; (90001a8c <_ZN8STM32DMAD1Ev+0x1c>)
90001a78:	6001      	str	r1, [r0, #0]
90001a7a:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
90001a7e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90001a82:	f3bf 8f6f 	isb	sy
{
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}
90001a86:	4770      	bx	lr
90001a88:	90027890 	.word	0x90027890
90001a8c:	e000e100 	.word	0xe000e100

90001a90 <_ZN8STM32DMA10initializeEv>:

void STM32DMA::initialize()
{
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
90001a90:	4b0f      	ldr	r3, [pc, #60]	; (90001ad0 <_ZN8STM32DMA10initializeEv+0x40>)
{
90001a92:	b082      	sub	sp, #8
    __HAL_RCC_DMA2D_FORCE_RESET();
    __HAL_RCC_DMA2D_RELEASE_RESET();

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
90001a94:	490f      	ldr	r1, [pc, #60]	; (90001ad4 <_ZN8STM32DMA10initializeEv+0x44>)
    __HAL_RCC_DMA2D_CLK_ENABLE();
90001a96:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
90001a9a:	480f      	ldr	r0, [pc, #60]	; (90001ad8 <_ZN8STM32DMA10initializeEv+0x48>)
    __HAL_RCC_DMA2D_CLK_ENABLE();
90001a9c:	f042 0210 	orr.w	r2, r2, #16
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
90001aa0:	6208      	str	r0, [r1, #32]
    __HAL_RCC_DMA2D_CLK_ENABLE();
90001aa2:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
90001aa6:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
90001aaa:	f002 0210 	and.w	r2, r2, #16
90001aae:	9201      	str	r2, [sp, #4]
90001ab0:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
90001ab2:	6fda      	ldr	r2, [r3, #124]	; 0x7c
90001ab4:	f042 0210 	orr.w	r2, r2, #16
90001ab8:	67da      	str	r2, [r3, #124]	; 0x7c
    __HAL_RCC_DMA2D_RELEASE_RESET();
90001aba:	6fda      	ldr	r2, [r3, #124]	; 0x7c
90001abc:	f022 0210 	bic.w	r2, r2, #16
90001ac0:	67da      	str	r2, [r3, #124]	; 0x7c
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90001ac2:	4b06      	ldr	r3, [pc, #24]	; (90001adc <_ZN8STM32DMA10initializeEv+0x4c>)
90001ac4:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
90001ac8:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
90001aca:	b002      	add	sp, #8
90001acc:	4770      	bx	lr
90001ace:	bf00      	nop
90001ad0:	58024400 	.word	0x58024400
90001ad4:	240091f0 	.word	0x240091f0
90001ad8:	90001ec1 	.word	0x90001ec1
90001adc:	e000e100 	.word	0xe000e100

90001ae0 <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
90001ae0:	f240 30ef 	movw	r0, #1007	; 0x3ef
90001ae4:	4770      	bx	lr
90001ae6:	bf00      	nop

90001ae8 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
90001ae8:	4909      	ldr	r1, [pc, #36]	; (90001b10 <_ZN8STM32DMAD0Ev+0x28>)
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90001aea:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
90001aee:	4b09      	ldr	r3, [pc, #36]	; (90001b14 <_ZN8STM32DMAD0Ev+0x2c>)
90001af0:	b510      	push	{r4, lr}
90001af2:	6001      	str	r1, [r0, #0]
90001af4:	4604      	mov	r4, r0
90001af6:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
90001afa:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90001afe:	f3bf 8f6f 	isb	sy
}
90001b02:	f640 51a8 	movw	r1, #3496	; 0xda8
90001b06:	f024 f9f4 	bl	90025ef2 <_ZdlPvj>
90001b0a:	4620      	mov	r0, r4
90001b0c:	bd10      	pop	{r4, pc}
90001b0e:	bf00      	nop
90001b10:	90027890 	.word	0x90027890
90001b14:	e000e100 	.word	0xe000e100

90001b18 <_ZN8STM32DMA5startEv>:
                execute();
            }
        }
    }

    virtual void start()
90001b18:	b510      	push	{r4, lr}
90001b1a:	4604      	mov	r4, r0
    {
        MUTEX_LOCK(mutexIsRunning);
90001b1c:	f04f 31ff 	mov.w	r1, #4294967295
90001b20:	f8d0 0da4 	ldr.w	r0, [r0, #3492]	; 0xda4
90001b24:	f00a ffce 	bl	9000cac4 <osMutexAcquire>
        if (!queue.isEmpty() && isAllowed && !isRunning)
90001b28:	6860      	ldr	r0, [r4, #4]
90001b2a:	6803      	ldr	r3, [r0, #0]
90001b2c:	681b      	ldr	r3, [r3, #0]
90001b2e:	4798      	blx	r3
90001b30:	b978      	cbnz	r0, 90001b52 <_ZN8STM32DMA5startEv+0x3a>
90001b32:	7a63      	ldrb	r3, [r4, #9]
90001b34:	b16b      	cbz	r3, 90001b52 <_ZN8STM32DMA5startEv+0x3a>
90001b36:	7a23      	ldrb	r3, [r4, #8]
90001b38:	bb0b      	cbnz	r3, 90001b7e <_ZN8STM32DMA5startEv+0x66>
        {
            started_by_external_job = false;
            execute();
90001b3a:	6822      	ldr	r2, [r4, #0]
90001b3c:	4620      	mov	r0, r4
            started_by_external_job = false;
90001b3e:	f884 3da0 	strb.w	r3, [r4, #3488]	; 0xda0
            execute();
90001b42:	6a53      	ldr	r3, [r2, #36]	; 0x24
90001b44:	4798      	blx	r3
        else if ((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && !isRunning && !isReserved)
        {
            started_by_external_job = true;
            externalJobExecute();
        }
        MUTEX_UNLOCK(mutexIsRunning);
90001b46:	f8d4 0da4 	ldr.w	r0, [r4, #3492]	; 0xda4
    }
90001b4a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        MUTEX_UNLOCK(mutexIsRunning);
90001b4e:	f00a bfdd 	b.w	9000cb0c <osMutexRelease>
        else if ((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && !isRunning && !isReserved)
90001b52:	490f      	ldr	r1, [pc, #60]	; (90001b90 <_ZN8STM32DMA5startEv+0x78>)
90001b54:	4a0f      	ldr	r2, [pc, #60]	; (90001b94 <_ZN8STM32DMA5startEv+0x7c>)
90001b56:	680b      	ldr	r3, [r1, #0]
90001b58:	011b      	lsls	r3, r3, #4
90001b5a:	5cd3      	ldrb	r3, [r2, r3]
90001b5c:	2b01      	cmp	r3, #1
90001b5e:	d1f2      	bne.n	90001b46 <_ZN8STM32DMA5startEv+0x2e>
90001b60:	7a20      	ldrb	r0, [r4, #8]
90001b62:	2800      	cmp	r0, #0
90001b64:	d1ef      	bne.n	90001b46 <_ZN8STM32DMA5startEv+0x2e>
90001b66:	7aa0      	ldrb	r0, [r4, #10]
90001b68:	2800      	cmp	r0, #0
90001b6a:	d1ec      	bne.n	90001b46 <_ZN8STM32DMA5startEv+0x2e>
     * @param None
     */
    void externalJobExecute()
    {
        isRunning = true;
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001b6c:	6808      	ldr	r0, [r1, #0]
            started_by_external_job = true;
90001b6e:	f884 3da0 	strb.w	r3, [r4, #3488]	; 0xda0
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001b72:	eb02 1000 	add.w	r0, r2, r0, lsl #4
        isRunning = true;
90001b76:	7223      	strb	r3, [r4, #8]
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001b78:	f7ff fea4 	bl	900018c4 <DMA2D_CopyBuffer>
    }
90001b7c:	e7e3      	b.n	90001b46 <_ZN8STM32DMA5startEv+0x2e>
        else if ((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && !isRunning && !isReserved)
90001b7e:	4b04      	ldr	r3, [pc, #16]	; (90001b90 <_ZN8STM32DMA5startEv+0x78>)
        MUTEX_UNLOCK(mutexIsRunning);
90001b80:	f8d4 0da4 	ldr.w	r0, [r4, #3492]	; 0xda4
        else if ((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && !isRunning && !isReserved)
90001b84:	681b      	ldr	r3, [r3, #0]
    }
90001b86:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        MUTEX_UNLOCK(mutexIsRunning);
90001b8a:	f00a bfbf 	b.w	9000cb0c <osMutexRelease>
90001b8e:	bf00      	nop
90001b90:	24000188 	.word	0x24000188
90001b94:	24000008 	.word	0x24000008

90001b98 <_ZN8STM32DMA18signalDMAInterruptEv>:
        if (!started_by_external_job)
90001b98:	f890 3da0 	ldrb.w	r3, [r0, #3488]	; 0xda0
    virtual void signalDMAInterrupt()
90001b9c:	b510      	push	{r4, lr}
90001b9e:	4604      	mov	r4, r0
        if (!started_by_external_job)
90001ba0:	b953      	cbnz	r3, 90001bb8 <_ZN8STM32DMA18signalDMAInterruptEv+0x20>
            executeCompleted();
90001ba2:	6803      	ldr	r3, [r0, #0]
90001ba4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90001ba6:	4798      	blx	r3
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL && !DMA2D_CopyBufferEnd && !isRunning && !isReserved)
90001ba8:	491c      	ldr	r1, [pc, #112]	; (90001c1c <_ZN8STM32DMA18signalDMAInterruptEv+0x84>)
90001baa:	4a1d      	ldr	r2, [pc, #116]	; (90001c20 <_ZN8STM32DMA18signalDMAInterruptEv+0x88>)
90001bac:	680b      	ldr	r3, [r1, #0]
90001bae:	011b      	lsls	r3, r3, #4
90001bb0:	5cd3      	ldrb	r3, [r2, r3]
90001bb2:	2b01      	cmp	r3, #1
90001bb4:	d014      	beq.n	90001be0 <_ZN8STM32DMA18signalDMAInterruptEv+0x48>
    }
90001bb6:	bd10      	pop	{r4, pc}
        if (isRunning)
90001bb8:	7a03      	ldrb	r3, [r0, #8]
90001bba:	bb2b      	cbnz	r3, 90001c08 <_ZN8STM32DMA18signalDMAInterruptEv+0x70>
            if (!queue.isEmpty() && isAllowed)
90001bbc:	6860      	ldr	r0, [r4, #4]
90001bbe:	6803      	ldr	r3, [r0, #0]
90001bc0:	681b      	ldr	r3, [r3, #0]
90001bc2:	4798      	blx	r3
90001bc4:	4603      	mov	r3, r0
90001bc6:	2800      	cmp	r0, #0
90001bc8:	d1f5      	bne.n	90001bb6 <_ZN8STM32DMA18signalDMAInterruptEv+0x1e>
90001bca:	7a62      	ldrb	r2, [r4, #9]
90001bcc:	2a00      	cmp	r2, #0
90001bce:	d0f2      	beq.n	90001bb6 <_ZN8STM32DMA18signalDMAInterruptEv+0x1e>
                execute();
90001bd0:	6822      	ldr	r2, [r4, #0]
90001bd2:	4620      	mov	r0, r4
                started_by_external_job = false;
90001bd4:	f884 3da0 	strb.w	r3, [r4, #3488]	; 0xda0
                execute();
90001bd8:	6a53      	ldr	r3, [r2, #36]	; 0x24
    }
90001bda:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
                execute();
90001bde:	4718      	bx	r3
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL && !DMA2D_CopyBufferEnd && !isRunning && !isReserved)
90001be0:	4810      	ldr	r0, [pc, #64]	; (90001c24 <_ZN8STM32DMA18signalDMAInterruptEv+0x8c>)
90001be2:	6800      	ldr	r0, [r0, #0]
90001be4:	2800      	cmp	r0, #0
90001be6:	d1e6      	bne.n	90001bb6 <_ZN8STM32DMA18signalDMAInterruptEv+0x1e>
90001be8:	7a20      	ldrb	r0, [r4, #8]
90001bea:	2800      	cmp	r0, #0
90001bec:	d1e3      	bne.n	90001bb6 <_ZN8STM32DMA18signalDMAInterruptEv+0x1e>
90001bee:	7aa0      	ldrb	r0, [r4, #10]
90001bf0:	2800      	cmp	r0, #0
90001bf2:	d1e0      	bne.n	90001bb6 <_ZN8STM32DMA18signalDMAInterruptEv+0x1e>
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001bf4:	6808      	ldr	r0, [r1, #0]
                started_by_external_job = true;
90001bf6:	f884 3da0 	strb.w	r3, [r4, #3488]	; 0xda0
        isRunning = true;
90001bfa:	7223      	strb	r3, [r4, #8]
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001bfc:	eb02 1000 	add.w	r0, r2, r0, lsl #4
    }
90001c00:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001c04:	f7ff be5e 	b.w	900018c4 <DMA2D_CopyBuffer>
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001c08:	4904      	ldr	r1, [pc, #16]	; (90001c1c <_ZN8STM32DMA18signalDMAInterruptEv+0x84>)
            isRunning = false;
90001c0a:	2200      	movs	r2, #0
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001c0c:	4b04      	ldr	r3, [pc, #16]	; (90001c20 <_ZN8STM32DMA18signalDMAInterruptEv+0x88>)
90001c0e:	6808      	ldr	r0, [r1, #0]
            isRunning = false;
90001c10:	7222      	strb	r2, [r4, #8]
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001c12:	eb03 1000 	add.w	r0, r3, r0, lsl #4
90001c16:	f7ff fe9b 	bl	90001950 <DMA2D_ExternalJobCompleted>
90001c1a:	e7cf      	b.n	90001bbc <_ZN8STM32DMA18signalDMAInterruptEv+0x24>
90001c1c:	24000188 	.word	0x24000188
90001c20:	24000008 	.word	0x24000008
90001c24:	24000184 	.word	0x24000184

90001c28 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
90001c28:	b538      	push	{r3, r4, r5, lr}
    switch (format)
90001c2a:	7f8b      	ldrb	r3, [r1, #30]
90001c2c:	2b0a      	cmp	r3, #10
90001c2e:	d83e      	bhi.n	90001cae <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x86>
90001c30:	e8df f003 	tbb	[pc, r3]
90001c34:	3d2a063b 	.word	0x3d2a063b
90001c38:	063d3d3d 	.word	0x063d3d3d
90001c3c:	0606      	.short	0x0606
90001c3e:	06          	.byte	0x06
90001c3f:	00          	.byte	0x00
90001c40:	2401      	movs	r4, #1

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90001c42:	f8b1 c014 	ldrh.w	ip, [r1, #20]
90001c46:	8ac8      	ldrh	r0, [r1, #22]

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90001c48:	8b4a      	ldrh	r2, [r1, #26]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
90001c4a:	4b1c      	ldr	r3, [pc, #112]	; (90001cbc <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x94>)
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90001c4c:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90001c50:	eba2 020c 	sub.w	r2, r2, ip
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
90001c54:	635c      	str	r4, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90001c56:	6458      	str	r0, [r3, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001c58:	6908      	ldr	r0, [r1, #16]
90001c5a:	63d8      	str	r0, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90001c5c:	641a      	str	r2, [r3, #64]	; 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
90001c5e:	680d      	ldr	r5, [r1, #0]
90001c60:	2d08      	cmp	r5, #8
90001c62:	d013      	beq.n	90001c8c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x64>
    {
        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, 0);
90001c64:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
90001c66:	61dc      	str	r4, [r3, #28]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
90001c68:	4c15      	ldr	r4, [pc, #84]	; (90001cc0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x98>)
        WRITE_REG(DMA2D->FGOR, 0);
90001c6a:	611a      	str	r2, [r3, #16]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
90001c6c:	68c9      	ldr	r1, [r1, #12]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
90001c6e:	0a0a      	lsrs	r2, r1, #8
90001c70:	0948      	lsrs	r0, r1, #5
90001c72:	f3c1 01c4 	ubfx	r1, r1, #3, #5
90001c76:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
90001c7a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90001c7e:	4302      	orrs	r2, r0
90001c80:	430a      	orrs	r2, r1
90001c82:	639a      	str	r2, [r3, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
90001c84:	601c      	str	r4, [r3, #0]
    }
}
90001c86:	bd38      	pop	{r3, r4, r5, pc}
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
90001c88:	2400      	movs	r4, #0
90001c8a:	e7da      	b.n	90001c42 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1a>
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
90001c8c:	619a      	str	r2, [r3, #24]
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
90001c8e:	611a      	str	r2, [r3, #16]
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90001c90:	625c      	str	r4, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
90001c92:	4a0c      	ldr	r2, [pc, #48]	; (90001cc4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x9c>)
90001c94:	7f0c      	ldrb	r4, [r1, #28]
90001c96:	ea42 6204 	orr.w	r2, r2, r4, lsl #24
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
90001c9a:	4c0b      	ldr	r4, [pc, #44]	; (90001cc8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa0>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
90001c9c:	61da      	str	r2, [r3, #28]
90001c9e:	68ca      	ldr	r2, [r1, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
90001ca0:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001ca2:	6158      	str	r0, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001ca4:	60d8      	str	r0, [r3, #12]
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
90001ca6:	601c      	str	r4, [r3, #0]
}
90001ca8:	bd38      	pop	{r3, r4, r5, pc}
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
90001caa:	2402      	movs	r4, #2
90001cac:	e7c9      	b.n	90001c42 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1a>
        assert(0 && "Unsupported Format!");
90001cae:	4b07      	ldr	r3, [pc, #28]	; (90001ccc <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa4>)
90001cb0:	2187      	movs	r1, #135	; 0x87
90001cb2:	4a07      	ldr	r2, [pc, #28]	; (90001cd0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa8>)
90001cb4:	4807      	ldr	r0, [pc, #28]	; (90001cd4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xac>)
90001cb6:	f024 f94b 	bl	90025f50 <__assert_func>
90001cba:	bf00      	nop
90001cbc:	52001000 	.word	0x52001000
90001cc0:	00030201 	.word	0x00030201
90001cc4:	00010009 	.word	0x00010009
90001cc8:	00020201 	.word	0x00020201
90001ccc:	90027734 	.word	0x90027734
90001cd0:	90027750 	.word	0x90027750
90001cd4:	9002779c 	.word	0x9002779c

90001cd8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
{
90001cd8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
90001cda:	f891 e01d 	ldrb.w	lr, [r1, #29]
    switch (format)
90001cde:	f1be 0f0b 	cmp.w	lr, #11
90001ce2:	f200 80c1 	bhi.w	90001e68 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x190>
90001ce6:	e8df f01e 	tbh	[pc, lr, lsl #1]
90001cea:	0063      	.short	0x0063
90001cec:	004c0065 	.word	0x004c0065
90001cf0:	00bf00bf 	.word	0x00bf00bf
90001cf4:	00bf00bf 	.word	0x00bf00bf
90001cf8:	000c000c 	.word	0x000c000c
90001cfc:	000c000c 	.word	0x000c000c
90001d00:	000c      	.short	0x000c
        dma2dColorMode = DMA2D_INPUT_L8;
90001d02:	2505      	movs	r5, #5
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
90001d04:	f891 c01e 	ldrb.w	ip, [r1, #30]
    switch (format)
90001d08:	f1bc 0f0b 	cmp.w	ip, #11
90001d0c:	f200 80ac 	bhi.w	90001e68 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x190>
90001d10:	e8df f00c 	tbb	[pc, ip]
90001d14:	aa0e4b52 	.word	0xaa0e4b52
90001d18:	06aaaaaa 	.word	0x06aaaaaa
90001d1c:	06060606 	.word	0x06060606
    switch (format)
90001d20:	f1ac 0307 	sub.w	r3, ip, #7
90001d24:	2b03      	cmp	r3, #3
90001d26:	f200 80a5 	bhi.w	90001e74 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x19c>
90001d2a:	2605      	movs	r6, #5
90001d2c:	2701      	movs	r7, #1
90001d2e:	e001      	b.n	90001d34 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x5c>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
90001d30:	2600      	movs	r6, #0
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
90001d32:	4637      	mov	r7, r6
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90001d34:	8a8b      	ldrh	r3, [r1, #20]
90001d36:	8b4a      	ldrh	r2, [r1, #26]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
90001d38:	8b0c      	ldrh	r4, [r1, #24]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90001d3a:	8ac8      	ldrh	r0, [r1, #22]
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90001d3c:	1ad2      	subs	r2, r2, r3
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
90001d3e:	1ae4      	subs	r4, r4, r3
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90001d40:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90001d44:	4b52      	ldr	r3, [pc, #328]	; (90001e90 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b8>)
90001d46:	641a      	str	r2, [r3, #64]	; 0x40
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
90001d48:	619a      	str	r2, [r3, #24]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
90001d4a:	611c      	str	r4, [r3, #16]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
90001d4c:	684a      	ldr	r2, [r1, #4]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
90001d4e:	635f      	str	r7, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90001d50:	6458      	str	r0, [r3, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001d52:	6908      	ldr	r0, [r1, #16]
90001d54:	63d8      	str	r0, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
90001d56:	60da      	str	r2, [r3, #12]
    switch (blitOp.operation)
90001d58:	680a      	ldr	r2, [r1, #0]
90001d5a:	2a80      	cmp	r2, #128	; 0x80
90001d5c:	d03b      	beq.n	90001dd6 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfe>
90001d5e:	d812      	bhi.n	90001d86 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xae>
90001d60:	2a20      	cmp	r2, #32
90001d62:	d02c      	beq.n	90001dbe <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe6>
90001d64:	2a40      	cmp	r2, #64	; 0x40
90001d66:	d02a      	beq.n	90001dbe <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe6>
90001d68:	2a04      	cmp	r2, #4
90001d6a:	d169      	bne.n	90001e40 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x168>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001d6c:	7f0a      	ldrb	r2, [r1, #28]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90001d6e:	4949      	ldr	r1, [pc, #292]	; (90001e94 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1bc>)
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001d70:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
90001d74:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
90001d78:	61da      	str	r2, [r3, #28]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90001d7a:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001d7c:	6158      	str	r0, [r3, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90001d7e:	6019      	str	r1, [r3, #0]
}
90001d80:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
90001d82:	2500      	movs	r5, #0
90001d84:	e7be      	b.n	90001d04 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2c>
    switch (blitOp.operation)
90001d86:	f5b2 7f80 	cmp.w	r2, #256	; 0x100
90001d8a:	d067      	beq.n	90001e5c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x184>
90001d8c:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
90001d90:	d156      	bne.n	90001e40 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x168>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001d92:	7f0c      	ldrb	r4, [r1, #28]
90001d94:	4a40      	ldr	r2, [pc, #256]	; (90001e98 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c0>)
90001d96:	ea42 6204 	orr.w	r2, r2, r4, lsl #24
90001d9a:	61da      	str	r2, [r3, #28]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90001d9c:	4a3d      	ldr	r2, [pc, #244]	; (90001e94 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1bc>)
90001d9e:	68c9      	ldr	r1, [r1, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
90001da0:	6219      	str	r1, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90001da2:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001da4:	6158      	str	r0, [r3, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90001da6:	601a      	str	r2, [r3, #0]
}
90001da8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    switch (format)
90001daa:	2601      	movs	r6, #1
90001dac:	4637      	mov	r7, r6
90001dae:	e7c1      	b.n	90001d34 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x5c>
90001db0:	2502      	movs	r5, #2
90001db2:	e7a7      	b.n	90001d04 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2c>
        dma2dColorMode = DMA2D_INPUT_RGB888;
90001db4:	2501      	movs	r5, #1
90001db6:	e7a5      	b.n	90001d04 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2c>
        dma2dColorMode = DMA2D_INPUT_RGB565;
90001db8:	2602      	movs	r6, #2
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
90001dba:	4637      	mov	r7, r6
90001dbc:	e7ba      	b.n	90001d34 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x5c>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001dbe:	7f0b      	ldrb	r3, [r1, #28]
90001dc0:	4a33      	ldr	r2, [pc, #204]	; (90001e90 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b8>)
90001dc2:	ea45 6303 	orr.w	r3, r5, r3, lsl #24
90001dc6:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
90001dca:	61d3      	str	r3, [r2, #28]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90001dcc:	4b31      	ldr	r3, [pc, #196]	; (90001e94 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1bc>)
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90001dce:	6256      	str	r6, [r2, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001dd0:	6150      	str	r0, [r2, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90001dd2:	6013      	str	r3, [r2, #0]
}
90001dd4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
90001dd6:	688a      	ldr	r2, [r1, #8]
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
90001dd8:	1d14      	adds	r4, r2, #4
90001dda:	62dc      	str	r4, [r3, #44]	; 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001ddc:	7f0c      	ldrb	r4, [r1, #28]
            switch ((Bitmap::ClutFormat)palette->format)
90001dde:	7811      	ldrb	r1, [r2, #0]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001de0:	ea45 6504 	orr.w	r5, r5, r4, lsl #24
90001de4:	f445 3500 	orr.w	r5, r5, #131072	; 0x20000
90001de8:	61dd      	str	r5, [r3, #28]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90001dea:	625e      	str	r6, [r3, #36]	; 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001dec:	6158      	str	r0, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
90001dee:	b9b1      	cbnz	r1, 90001e1e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x146>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
90001df0:	8851      	ldrh	r1, [r2, #2]
            bool blend = true;
90001df2:	2401      	movs	r4, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
90001df4:	69d8      	ldr	r0, [r3, #28]
90001df6:	4a29      	ldr	r2, [pc, #164]	; (90001e9c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c4>)
90001df8:	3901      	subs	r1, #1
90001dfa:	4002      	ands	r2, r0
90001dfc:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
90001e00:	61da      	str	r2, [r3, #28]
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
90001e02:	4a23      	ldr	r2, [pc, #140]	; (90001e90 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b8>)
90001e04:	69d3      	ldr	r3, [r2, #28]
90001e06:	f043 0320 	orr.w	r3, r3, #32
90001e0a:	61d3      	str	r3, [r2, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
90001e0c:	69d3      	ldr	r3, [r2, #28]
90001e0e:	069b      	lsls	r3, r3, #26
90001e10:	d4fc      	bmi.n	90001e0c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x134>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
90001e12:	2310      	movs	r3, #16
90001e14:	6093      	str	r3, [r2, #8]
            if (blend)
90001e16:	b324      	cbz	r4, 90001e62 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18a>
                WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90001e18:	4b1e      	ldr	r3, [pc, #120]	; (90001e94 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1bc>)
90001e1a:	6013      	str	r3, [r2, #0]
}
90001e1c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90001e1e:	2901      	cmp	r1, #1
90001e20:	d12e      	bne.n	90001e80 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a8>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
90001e22:	8851      	ldrh	r1, [r2, #2]
                if (blitOp.alpha == 255)
90001e24:	3cff      	subs	r4, #255	; 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
90001e26:	69d8      	ldr	r0, [r3, #28]
90001e28:	4a1c      	ldr	r2, [pc, #112]	; (90001e9c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c4>)
90001e2a:	f101 31ff 	add.w	r1, r1, #4294967295
                if (blitOp.alpha == 255)
90001e2e:	bf18      	it	ne
90001e30:	2401      	movne	r4, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
90001e32:	4002      	ands	r2, r0
90001e34:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
90001e38:	f042 0210 	orr.w	r2, r2, #16
90001e3c:	61da      	str	r2, [r3, #28]
                break;
90001e3e:	e7e0      	b.n	90001e02 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x12a>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001e40:	7f0a      	ldrb	r2, [r1, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
90001e42:	45e6      	cmp	lr, ip
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001e44:	4b12      	ldr	r3, [pc, #72]	; (90001e90 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b8>)
90001e46:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
90001e4a:	bf14      	ite	ne
90001e4c:	4a14      	ldrne	r2, [pc, #80]	; (90001ea0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c8>)
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
90001e4e:	f240 2201 	movweq	r2, #513	; 0x201
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001e52:	f445 3500 	orr.w	r5, r5, #131072	; 0x20000
90001e56:	61dd      	str	r5, [r3, #28]
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
90001e58:	601a      	str	r2, [r3, #0]
}
90001e5a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001e5c:	7f0c      	ldrb	r4, [r1, #28]
90001e5e:	4a11      	ldr	r2, [pc, #68]	; (90001ea4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1cc>)
90001e60:	e799      	b.n	90001d96 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xbe>
                WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
90001e62:	4b0f      	ldr	r3, [pc, #60]	; (90001ea0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c8>)
90001e64:	6013      	str	r3, [r2, #0]
}
90001e66:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        assert(0 && "Unsupported Format!");
90001e68:	4b0f      	ldr	r3, [pc, #60]	; (90001ea8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1d0>)
90001e6a:	2166      	movs	r1, #102	; 0x66
90001e6c:	4a0f      	ldr	r2, [pc, #60]	; (90001eac <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1d4>)
90001e6e:	4810      	ldr	r0, [pc, #64]	; (90001eb0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1d8>)
90001e70:	f024 f86e 	bl	90025f50 <__assert_func>
        assert(0 && "Unsupported Format!");
90001e74:	4b0c      	ldr	r3, [pc, #48]	; (90001ea8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1d0>)
90001e76:	2187      	movs	r1, #135	; 0x87
90001e78:	4a0e      	ldr	r2, [pc, #56]	; (90001eb4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1dc>)
90001e7a:	480d      	ldr	r0, [pc, #52]	; (90001eb0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1d8>)
90001e7c:	f024 f868 	bl	90025f50 <__assert_func>
                assert(0 && "Unsupported format");
90001e80:	4b0d      	ldr	r3, [pc, #52]	; (90001eb8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1e0>)
90001e82:	f240 1111 	movw	r1, #273	; 0x111
90001e86:	4a0d      	ldr	r2, [pc, #52]	; (90001ebc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1e4>)
90001e88:	4809      	ldr	r0, [pc, #36]	; (90001eb0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1d8>)
90001e8a:	f024 f861 	bl	90025f50 <__assert_func>
90001e8e:	bf00      	nop
90001e90:	52001000 	.word	0x52001000
90001e94:	00020201 	.word	0x00020201
90001e98:	00020009 	.word	0x00020009
90001e9c:	ffff00ef 	.word	0xffff00ef
90001ea0:	00010201 	.word	0x00010201
90001ea4:	0002000a 	.word	0x0002000a
90001ea8:	90027734 	.word	0x90027734
90001eac:	900277e0 	.word	0x900277e0
90001eb0:	9002779c 	.word	0x9002779c
90001eb4:	90027750 	.word	0x90027750
90001eb8:	9002782c 	.word	0x9002782c
90001ebc:	90027848 	.word	0x90027848

90001ec0 <DMA2D_XferCpltCallback>:
        dma.signalDMAInterrupt();
90001ec0:	4b25      	ldr	r3, [pc, #148]	; (90001f58 <DMA2D_XferCpltCallback+0x98>)
90001ec2:	4926      	ldr	r1, [pc, #152]	; (90001f5c <DMA2D_XferCpltCallback+0x9c>)
90001ec4:	681b      	ldr	r3, [r3, #0]
    {
90001ec6:	b510      	push	{r4, lr}
90001ec8:	685c      	ldr	r4, [r3, #4]
90001eca:	6823      	ldr	r3, [r4, #0]
90001ecc:	695a      	ldr	r2, [r3, #20]
90001ece:	428a      	cmp	r2, r1
90001ed0:	d120      	bne.n	90001f14 <DMA2D_XferCpltCallback+0x54>
        if (!started_by_external_job)
90001ed2:	f894 2da0 	ldrb.w	r2, [r4, #3488]	; 0xda0
90001ed6:	b192      	cbz	r2, 90001efe <DMA2D_XferCpltCallback+0x3e>
        if (isRunning)
90001ed8:	7a23      	ldrb	r3, [r4, #8]
90001eda:	2b00      	cmp	r3, #0
90001edc:	d132      	bne.n	90001f44 <DMA2D_XferCpltCallback+0x84>
            if (!queue.isEmpty() && isAllowed)
90001ede:	6860      	ldr	r0, [r4, #4]
90001ee0:	6803      	ldr	r3, [r0, #0]
90001ee2:	681b      	ldr	r3, [r3, #0]
90001ee4:	4798      	blx	r3
90001ee6:	4603      	mov	r3, r0
90001ee8:	b998      	cbnz	r0, 90001f12 <DMA2D_XferCpltCallback+0x52>
90001eea:	7a62      	ldrb	r2, [r4, #9]
90001eec:	b18a      	cbz	r2, 90001f12 <DMA2D_XferCpltCallback+0x52>
                execute();
90001eee:	6822      	ldr	r2, [r4, #0]
90001ef0:	4620      	mov	r0, r4
                started_by_external_job = false;
90001ef2:	f884 3da0 	strb.w	r3, [r4, #3488]	; 0xda0
                execute();
90001ef6:	6a53      	ldr	r3, [r2, #36]	; 0x24
    }
90001ef8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90001efc:	4718      	bx	r3
            executeCompleted();
90001efe:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90001f00:	4620      	mov	r0, r4
90001f02:	4798      	blx	r3
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL && !DMA2D_CopyBufferEnd && !isRunning && !isReserved)
90001f04:	4916      	ldr	r1, [pc, #88]	; (90001f60 <DMA2D_XferCpltCallback+0xa0>)
90001f06:	4a17      	ldr	r2, [pc, #92]	; (90001f64 <DMA2D_XferCpltCallback+0xa4>)
90001f08:	680b      	ldr	r3, [r1, #0]
90001f0a:	011b      	lsls	r3, r3, #4
90001f0c:	5cd3      	ldrb	r3, [r2, r3]
90001f0e:	2b01      	cmp	r3, #1
90001f10:	d004      	beq.n	90001f1c <DMA2D_XferCpltCallback+0x5c>
90001f12:	bd10      	pop	{r4, pc}
90001f14:	4620      	mov	r0, r4
90001f16:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90001f1a:	4710      	bx	r2
90001f1c:	4812      	ldr	r0, [pc, #72]	; (90001f68 <DMA2D_XferCpltCallback+0xa8>)
90001f1e:	6800      	ldr	r0, [r0, #0]
90001f20:	2800      	cmp	r0, #0
90001f22:	d1f6      	bne.n	90001f12 <DMA2D_XferCpltCallback+0x52>
90001f24:	7a20      	ldrb	r0, [r4, #8]
90001f26:	2800      	cmp	r0, #0
90001f28:	d1f3      	bne.n	90001f12 <DMA2D_XferCpltCallback+0x52>
90001f2a:	7aa0      	ldrb	r0, [r4, #10]
90001f2c:	2800      	cmp	r0, #0
90001f2e:	d1f0      	bne.n	90001f12 <DMA2D_XferCpltCallback+0x52>
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001f30:	6808      	ldr	r0, [r1, #0]
                started_by_external_job = true;
90001f32:	f884 3da0 	strb.w	r3, [r4, #3488]	; 0xda0
        isRunning = true;
90001f36:	7223      	strb	r3, [r4, #8]
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001f38:	eb02 1000 	add.w	r0, r2, r0, lsl #4
90001f3c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90001f40:	f7ff bcc0 	b.w	900018c4 <DMA2D_CopyBuffer>
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001f44:	4906      	ldr	r1, [pc, #24]	; (90001f60 <DMA2D_XferCpltCallback+0xa0>)
            isRunning = false;
90001f46:	2200      	movs	r2, #0
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001f48:	4b06      	ldr	r3, [pc, #24]	; (90001f64 <DMA2D_XferCpltCallback+0xa4>)
90001f4a:	6808      	ldr	r0, [r1, #0]
            isRunning = false;
90001f4c:	7222      	strb	r2, [r4, #8]
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001f4e:	eb03 1000 	add.w	r0, r3, r0, lsl #4
90001f52:	f7ff fcfd 	bl	90001950 <DMA2D_ExternalJobCompleted>
90001f56:	e7c2      	b.n	90001ede <DMA2D_XferCpltCallback+0x1e>
90001f58:	2402357c 	.word	0x2402357c
90001f5c:	90001b99 	.word	0x90001b99
90001f60:	24000188 	.word	0x24000188
90001f64:	24000008 	.word	0x24000008
90001f68:	24000184 	.word	0x24000184

90001f6c <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
90001f6c:	b570      	push	{r4, r5, r6, lr}
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false), mutexIsRunning(0)
90001f6e:	4b10      	ldr	r3, [pc, #64]	; (90001fb0 <_ZN8STM32DMAC1Ev+0x44>)
STM32DMA::STM32DMA()
90001f70:	4606      	mov	r6, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false), mutexIsRunning(0)
90001f72:	4604      	mov	r4, r0
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
90001f74:	2500      	movs	r5, #0
90001f76:	300c      	adds	r0, #12
90001f78:	2260      	movs	r2, #96	; 0x60
90001f7a:	7235      	strb	r5, [r6, #8]
90001f7c:	7275      	strb	r5, [r6, #9]
90001f7e:	6070      	str	r0, [r6, #4]
90001f80:	f844 3b20 	str.w	r3, [r4], #32
90001f84:	4621      	mov	r1, r4
90001f86:	f00e ff63 	bl	90010e50 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
90001f8a:	4621      	mov	r1, r4
90001f8c:	f506 635a 	add.w	r3, r6, #3488	; 0xda0
        : color(0)
90001f90:	60cd      	str	r5, [r1, #12]
90001f92:	3124      	adds	r1, #36	; 0x24
90001f94:	428b      	cmp	r3, r1
90001f96:	d1fb      	bne.n	90001f90 <_ZN8STM32DMAC1Ev+0x24>
90001f98:	f886 5da0 	strb.w	r5, [r6, #3488]	; 0xda0
    mutexIsRunning = MUTEX_CREATE();
90001f9c:	2000      	movs	r0, #0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false), mutexIsRunning(0)
90001f9e:	f8c6 5da4 	str.w	r5, [r6, #3492]	; 0xda4
    mutexIsRunning = MUTEX_CREATE();
90001fa2:	f00a fd4f 	bl	9000ca44 <osMutexNew>
90001fa6:	4603      	mov	r3, r0
}
90001fa8:	4630      	mov	r0, r6
    mutexIsRunning = MUTEX_CREATE();
90001faa:	f8c6 3da4 	str.w	r3, [r6, #3492]	; 0xda4
}
90001fae:	bd70      	pop	{r4, r5, r6, pc}
90001fb0:	90027890 	.word	0x90027890

90001fb4 <_ZN8touchgfx5paint8tearDownEv>:
 * @brief Waits until previous DMA drawing operation has finished
 */
void tearDown()
{
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
90001fb4:	4a03      	ldr	r2, [pc, #12]	; (90001fc4 <_ZN8touchgfx5paint8tearDownEv+0x10>)
90001fb6:	6813      	ldr	r3, [r2, #0]
90001fb8:	07db      	lsls	r3, r3, #31
90001fba:	d4fc      	bmi.n	90001fb6 <_ZN8touchgfx5paint8tearDownEv+0x2>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
90001fbc:	2323      	movs	r3, #35	; 0x23
90001fbe:	6093      	str	r3, [r2, #8]
}
90001fc0:	4770      	bx	lr
90001fc2:	bf00      	nop
90001fc4:	52001000 	.word	0x52001000

90001fc8 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
 *
 * @brief Renders Canvas Widget chunks using DMA.
 * This functions will not generate an interrupt, and will not affect the DMA queue.
 */
void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
90001fc8:	b430      	push	{r4, r5}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
90001fca:	4c11      	ldr	r4, [pc, #68]	; (90002010 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x48>)
90001fcc:	6825      	ldr	r5, [r4, #0]
90001fce:	07ed      	lsls	r5, r5, #31
90001fd0:	d4fc      	bmi.n	90001fcc <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
90001fd2:	2523      	movs	r5, #35	; 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90001fd4:	0409      	lsls	r1, r1, #16

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    if (alpha < 0xFF)
90001fd6:	2bff      	cmp	r3, #255	; 0xff
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
90001fd8:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90001fda:	f041 0101 	orr.w	r1, r1, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90001fde:	f04f 0502 	mov.w	r5, #2
90001fe2:	6365      	str	r5, [r4, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90001fe4:	6461      	str	r1, [r4, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
90001fe6:	63e0      	str	r0, [r4, #60]	; 0x3c
    if (alpha < 0xFF)
90001fe8:	d00b      	beq.n	90002002 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x3a>
    {
        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
90001fea:	490a      	ldr	r1, [pc, #40]	; (90002014 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4c>)
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90001fec:	6265      	str	r5, [r4, #36]	; 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
90001fee:	ea41 6303 	orr.w	r3, r1, r3, lsl #24

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
90001ff2:	4909      	ldr	r1, [pc, #36]	; (90002018 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x50>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
90001ff4:	61e3      	str	r3, [r4, #28]
        WRITE_REG(DMA2D->FGCOLR, color);
90001ff6:	6222      	str	r2, [r4, #32]
        WRITE_REG(DMA2D->BGMAR, (uint32_t)ptr);
90001ff8:	6160      	str	r0, [r4, #20]
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);
90001ffa:	60e0      	str	r0, [r4, #12]
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
90001ffc:	6021      	str	r1, [r4, #0]
        WRITE_REG(DMA2D->OCOLR, color565);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
    }
}
90001ffe:	bc30      	pop	{r4, r5}
90002000:	4770      	bx	lr
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
90002002:	61e5      	str	r5, [r4, #28]
        WRITE_REG(DMA2D->OCOLR, color565);
90002004:	9a02      	ldr	r2, [sp, #8]
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
90002006:	4b05      	ldr	r3, [pc, #20]	; (9000201c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x54>)
        WRITE_REG(DMA2D->OCOLR, color565);
90002008:	63a2      	str	r2, [r4, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
9000200a:	6023      	str	r3, [r4, #0]
}
9000200c:	bc30      	pop	{r4, r5}
9000200e:	4770      	bx	lr
90002010:	52001000 	.word	0x52001000
90002014:	00010009 	.word	0x00010009
90002018:	00020001 	.word	0x00020001
9000201c:	00030001 	.word	0x00030001

90002020 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
90002020:	2001      	movs	r0, #1
90002022:	4770      	bx	lr

90002024 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
90002024:	2040      	movs	r0, #64	; 0x40
90002026:	4770      	bx	lr

90002028 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
90002028:	eb00 1081 	add.w	r0, r0, r1, lsl #6
    }
9000202c:	3008      	adds	r0, #8
9000202e:	4770      	bx	lr

90002030 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
90002030:	eb00 1081 	add.w	r0, r0, r1, lsl #6
    }
90002034:	3008      	adds	r0, #8
90002036:	4770      	bx	lr

90002038 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI20screen_asteroidsViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
90002038:	2001      	movs	r0, #1
9000203a:	4770      	bx	lr

9000203c <_ZN8touchgfx9PartitionINS_4meta8TypeListI20screen_asteroidsViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
9000203c:	f242 40a8 	movw	r0, #9384	; 0x24a8
90002040:	4770      	bx	lr
90002042:	bf00      	nop

90002044 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20screen_asteroidsViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90002044:	f242 43a8 	movw	r3, #9384	; 0x24a8
90002048:	fb03 0001 	mla	r0, r3, r1, r0
    }
9000204c:	3008      	adds	r0, #8
9000204e:	4770      	bx	lr

90002050 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI20screen_asteroidsViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90002050:	f242 43a8 	movw	r3, #9384	; 0x24a8
90002054:	fb03 0001 	mla	r0, r3, r1, r0
    }
90002058:	3008      	adds	r0, #8
9000205a:	4770      	bx	lr

9000205c <_ZNK8touchgfx9PartitionINS_4meta8TypeListI25screen_asteroidsPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
9000205c:	2001      	movs	r0, #1
9000205e:	4770      	bx	lr

90002060 <_ZN8touchgfx9PartitionINS_4meta8TypeListI25screen_asteroidsPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
90002060:	201c      	movs	r0, #28
90002062:	4770      	bx	lr

90002064 <_ZN8touchgfx9PartitionINS_4meta8TypeListI25screen_asteroidsPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90002064:	ebc1 01c1 	rsb	r1, r1, r1, lsl #3
90002068:	eb00 0081 	add.w	r0, r0, r1, lsl #2
    }
9000206c:	3008      	adds	r0, #8
9000206e:	4770      	bx	lr

90002070 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI25screen_asteroidsPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90002070:	ebc1 01c1 	rsb	r1, r1, r1, lsl #3
90002074:	eb00 0081 	add.w	r0, r0, r1, lsl #2
    }
90002078:	3008      	adds	r0, #8
9000207a:	4770      	bx	lr

9000207c <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoscreen_game_selectScreenNoTransition();
9000207c:	4608      	mov	r0, r1
9000207e:	f002 b92f 	b.w	900042e0 <_ZN23FrontendApplicationBase40gotoscreen_game_selectScreenNoTransitionEv>
90002082:	bf00      	nop

90002084 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
90002084:	4b03      	ldr	r3, [pc, #12]	; (90002094 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
90002086:	b510      	push	{r4, lr}
90002088:	4604      	mov	r4, r0
9000208a:	6003      	str	r3, [r0, #0]
9000208c:	f00d fd2d 	bl	9000faea <_ZN8touchgfx17AbstractPartitionD1Ev>
90002090:	4620      	mov	r0, r4
90002092:	bd10      	pop	{r4, pc}
90002094:	90027948 	.word	0x90027948

90002098 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
90002098:	4b05      	ldr	r3, [pc, #20]	; (900020b0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED0Ev+0x18>)
9000209a:	b510      	push	{r4, lr}
9000209c:	4604      	mov	r4, r0
9000209e:	6003      	str	r3, [r0, #0]
900020a0:	f00d fd23 	bl	9000faea <_ZN8touchgfx17AbstractPartitionD1Ev>
900020a4:	2148      	movs	r1, #72	; 0x48
900020a6:	4620      	mov	r0, r4
900020a8:	f023 ff23 	bl	90025ef2 <_ZdlPvj>
900020ac:	4620      	mov	r0, r4
900020ae:	bd10      	pop	{r4, pc}
900020b0:	90027948 	.word	0x90027948

900020b4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20screen_asteroidsViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
900020b4:	4b03      	ldr	r3, [pc, #12]	; (900020c4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20screen_asteroidsViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
900020b6:	b510      	push	{r4, lr}
900020b8:	4604      	mov	r4, r0
900020ba:	6003      	str	r3, [r0, #0]
900020bc:	f00d fd15 	bl	9000faea <_ZN8touchgfx17AbstractPartitionD1Ev>
900020c0:	4620      	mov	r0, r4
900020c2:	bd10      	pop	{r4, pc}
900020c4:	90027914 	.word	0x90027914

900020c8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20screen_asteroidsViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
900020c8:	4b06      	ldr	r3, [pc, #24]	; (900020e4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20screen_asteroidsViewNS2_INS1_3NilES4_EEEELt1EED0Ev+0x1c>)
900020ca:	b510      	push	{r4, lr}
900020cc:	4604      	mov	r4, r0
900020ce:	6003      	str	r3, [r0, #0]
900020d0:	f00d fd0b 	bl	9000faea <_ZN8touchgfx17AbstractPartitionD1Ev>
900020d4:	f242 41b0 	movw	r1, #9392	; 0x24b0
900020d8:	4620      	mov	r0, r4
900020da:	f023 ff0a 	bl	90025ef2 <_ZdlPvj>
900020de:	4620      	mov	r0, r4
900020e0:	bd10      	pop	{r4, pc}
900020e2:	bf00      	nop
900020e4:	90027914 	.word	0x90027914

900020e8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI25screen_asteroidsPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
900020e8:	4b03      	ldr	r3, [pc, #12]	; (900020f8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI25screen_asteroidsPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
900020ea:	b510      	push	{r4, lr}
900020ec:	4604      	mov	r4, r0
900020ee:	6003      	str	r3, [r0, #0]
900020f0:	f00d fcfb 	bl	9000faea <_ZN8touchgfx17AbstractPartitionD1Ev>
900020f4:	4620      	mov	r0, r4
900020f6:	bd10      	pop	{r4, pc}
900020f8:	900278e0 	.word	0x900278e0

900020fc <_ZN8touchgfx9PartitionINS_4meta8TypeListI25screen_asteroidsPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
900020fc:	4b05      	ldr	r3, [pc, #20]	; (90002114 <_ZN8touchgfx9PartitionINS_4meta8TypeListI25screen_asteroidsPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev+0x18>)
900020fe:	b510      	push	{r4, lr}
90002100:	4604      	mov	r4, r0
90002102:	6003      	str	r3, [r0, #0]
90002104:	f00d fcf1 	bl	9000faea <_ZN8touchgfx17AbstractPartitionD1Ev>
90002108:	2124      	movs	r1, #36	; 0x24
9000210a:	4620      	mov	r0, r4
9000210c:	f023 fef1 	bl	90025ef2 <_ZdlPvj>
90002110:	4620      	mov	r0, r4
90002112:	bd10      	pop	{r4, pc}
90002114:	900278e0 	.word	0x900278e0

90002118 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
90002118:	b510      	push	{r4, lr}
9000211a:	4604      	mov	r4, r0
9000211c:	490c      	ldr	r1, [pc, #48]	; (90002150 <_ZN12FrontendHeapD1Ev+0x38>)
9000211e:	4a0d      	ldr	r2, [pc, #52]	; (90002154 <_ZN12FrontendHeapD1Ev+0x3c>)
90002120:	f242 40e8 	movw	r0, #9448	; 0x24e8
90002124:	f504 5300 	add.w	r3, r4, #8192	; 0x2000
90002128:	6021      	str	r1, [r4, #0]
9000212a:	4420      	add	r0, r4
9000212c:	f8c3 24e8 	str.w	r2, [r3, #1256]	; 0x4e8
90002130:	f00d fcdb 	bl	9000faea <_ZN8touchgfx17AbstractPartitionD1Ev>
90002134:	4620      	mov	r0, r4
90002136:	4b08      	ldr	r3, [pc, #32]	; (90002158 <_ZN12FrontendHeapD1Ev+0x40>)
90002138:	f840 3f38 	str.w	r3, [r0, #56]!
9000213c:	f00d fcd5 	bl	9000faea <_ZN8touchgfx17AbstractPartitionD1Ev>
90002140:	4620      	mov	r0, r4
90002142:	4b06      	ldr	r3, [pc, #24]	; (9000215c <_ZN12FrontendHeapD1Ev+0x44>)
90002144:	f840 3f14 	str.w	r3, [r0, #20]!
90002148:	f00d fccf 	bl	9000faea <_ZN8touchgfx17AbstractPartitionD1Ev>
9000214c:	4620      	mov	r0, r4
9000214e:	bd10      	pop	{r4, pc}
90002150:	9002797c 	.word	0x9002797c
90002154:	90027948 	.word	0x90027948
90002158:	90027914 	.word	0x90027914
9000215c:	900278e0 	.word	0x900278e0

90002160 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
90002160:	b510      	push	{r4, lr}
class FrontendHeap : public FrontendHeapBase
90002162:	4c0c      	ldr	r4, [pc, #48]	; (90002194 <__tcf_0+0x34>)
90002164:	4a0c      	ldr	r2, [pc, #48]	; (90002198 <__tcf_0+0x38>)
90002166:	f504 5300 	add.w	r3, r4, #8192	; 0x2000
9000216a:	490c      	ldr	r1, [pc, #48]	; (9000219c <__tcf_0+0x3c>)
9000216c:	480c      	ldr	r0, [pc, #48]	; (900021a0 <__tcf_0+0x40>)
9000216e:	f8c3 24e8 	str.w	r2, [r3, #1256]	; 0x4e8
90002172:	6021      	str	r1, [r4, #0]
90002174:	f00d fcb9 	bl	9000faea <_ZN8touchgfx17AbstractPartitionD1Ev>
90002178:	4620      	mov	r0, r4
9000217a:	4b0a      	ldr	r3, [pc, #40]	; (900021a4 <__tcf_0+0x44>)
9000217c:	f840 3f38 	str.w	r3, [r0, #56]!
90002180:	f00d fcb3 	bl	9000faea <_ZN8touchgfx17AbstractPartitionD1Ev>
90002184:	4620      	mov	r0, r4
90002186:	4b08      	ldr	r3, [pc, #32]	; (900021a8 <__tcf_0+0x48>)
        static FrontendHeap instance;
90002188:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9000218c:	f840 3f14 	str.w	r3, [r0, #20]!
90002190:	f00d bcab 	b.w	9000faea <_ZN8touchgfx17AbstractPartitionD1Ev>
90002194:	24005bdc 	.word	0x24005bdc
90002198:	90027948 	.word	0x90027948
9000219c:	9002797c 	.word	0x9002797c
900021a0:	240080c4 	.word	0x240080c4
900021a4:	90027914 	.word	0x90027914
900021a8:	900278e0 	.word	0x900278e0

900021ac <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
900021ac:	b510      	push	{r4, lr}
900021ae:	4604      	mov	r4, r0
900021b0:	4a0f      	ldr	r2, [pc, #60]	; (900021f0 <_ZN12FrontendHeapD0Ev+0x44>)
900021b2:	4910      	ldr	r1, [pc, #64]	; (900021f4 <_ZN12FrontendHeapD0Ev+0x48>)
900021b4:	f242 40e8 	movw	r0, #9448	; 0x24e8
900021b8:	f504 5300 	add.w	r3, r4, #8192	; 0x2000
900021bc:	6021      	str	r1, [r4, #0]
900021be:	4420      	add	r0, r4
900021c0:	f8c3 24e8 	str.w	r2, [r3, #1256]	; 0x4e8
900021c4:	f00d fc91 	bl	9000faea <_ZN8touchgfx17AbstractPartitionD1Ev>
900021c8:	4620      	mov	r0, r4
900021ca:	4b0b      	ldr	r3, [pc, #44]	; (900021f8 <_ZN12FrontendHeapD0Ev+0x4c>)
900021cc:	f840 3f38 	str.w	r3, [r0, #56]!
900021d0:	f00d fc8b 	bl	9000faea <_ZN8touchgfx17AbstractPartitionD1Ev>
900021d4:	4b09      	ldr	r3, [pc, #36]	; (900021fc <_ZN12FrontendHeapD0Ev+0x50>)
900021d6:	4620      	mov	r0, r4
900021d8:	f840 3f14 	str.w	r3, [r0, #20]!
900021dc:	f00d fc85 	bl	9000faea <_ZN8touchgfx17AbstractPartitionD1Ev>
900021e0:	4620      	mov	r0, r4
900021e2:	f242 6190 	movw	r1, #9872	; 0x2690
900021e6:	f023 fe84 	bl	90025ef2 <_ZdlPvj>
900021ea:	4620      	mov	r0, r4
900021ec:	bd10      	pop	{r4, pc}
900021ee:	bf00      	nop
900021f0:	90027948 	.word	0x90027948
900021f4:	9002797c 	.word	0x9002797c
900021f8:	90027914 	.word	0x90027914
900021fc:	900278e0 	.word	0x900278e0

90002200 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 480, 272);

void touchgfx_init()
{
90002200:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90002204:	b082      	sub	sp, #8
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
90002206:	2400      	movs	r4, #0
90002208:	f001 fafa 	bl	90003800 <_ZN14BitmapDatabase11getInstanceEv>
9000220c:	4605      	mov	r5, r0
9000220e:	f001 fafb 	bl	90003808 <_ZN14BitmapDatabase15getInstanceSizeEv>
90002212:	4623      	mov	r3, r4
90002214:	4601      	mov	r1, r0
90002216:	4622      	mov	r2, r4
90002218:	4628      	mov	r0, r5
9000221a:	9400      	str	r4, [sp, #0]
9000221c:	f015 fe48 	bl	90017eb0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
90002220:	4b29      	ldr	r3, [pc, #164]	; (900022c8 <touchgfx_init+0xc8>)
90002222:	4a2a      	ldr	r2, [pc, #168]	; (900022cc <touchgfx_init+0xcc>)
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
90002224:	4620      	mov	r0, r4
        static FrontendHeap instance;
90002226:	4c2a      	ldr	r4, [pc, #168]	; (900022d0 <touchgfx_init+0xd0>)
90002228:	601a      	str	r2, [r3, #0]
9000222a:	f002 fa25 	bl	90004678 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
9000222e:	4829      	ldr	r0, [pc, #164]	; (900022d4 <touchgfx_init+0xd4>)
90002230:	f015 fda6 	bl	90017d80 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
90002234:	6823      	ldr	r3, [r4, #0]
90002236:	f3bf 8f5b 	dmb	ish
9000223a:	07db      	lsls	r3, r3, #31
9000223c:	d505      	bpl.n	9000224a <touchgfx_init+0x4a>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
9000223e:	4826      	ldr	r0, [pc, #152]	; (900022d8 <touchgfx_init+0xd8>)
}
90002240:	b002      	add	sp, #8
90002242:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
90002246:	f7fe bb43 	b.w	900008d0 <_ZN11TouchGFXHAL10initializeEv>
9000224a:	4620      	mov	r0, r4
9000224c:	f023 fe53 	bl	90025ef6 <__cxa_guard_acquire>
90002250:	2800      	cmp	r0, #0
90002252:	d0f4      	beq.n	9000223e <touchgfx_init+0x3e>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
90002254:	4d21      	ldr	r5, [pc, #132]	; (900022dc <touchgfx_init+0xdc>)
          screenStorage(scr),
          transitionStorage(tra),
90002256:	4f22      	ldr	r7, [pc, #136]	; (900022e0 <touchgfx_init+0xe0>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
90002258:	4b22      	ldr	r3, [pc, #136]	; (900022e4 <touchgfx_init+0xe4>)
        : presenterStorage(pres),
9000225a:	f105 0014 	add.w	r0, r5, #20
          frontendApplication(app)
9000225e:	f107 064c 	add.w	r6, r7, #76	; 0x4c
          screenStorage(scr),
90002262:	f105 0838 	add.w	r8, r5, #56	; 0x38
90002266:	602b      	str	r3, [r5, #0]
          transitionStorage(tra),
90002268:	60ef      	str	r7, [r5, #12]
        : presenterStorage(pres),
9000226a:	6068      	str	r0, [r5, #4]
          frontendApplication(app)
9000226c:	612e      	str	r6, [r5, #16]
          screenStorage(scr),
9000226e:	f8c5 8008 	str.w	r8, [r5, #8]
90002272:	f00d fc3b 	bl	9000faec <_ZN8touchgfx17AbstractPartitionC1Ev>
90002276:	4b1c      	ldr	r3, [pc, #112]	; (900022e8 <touchgfx_init+0xe8>)
90002278:	4640      	mov	r0, r8
9000227a:	616b      	str	r3, [r5, #20]
9000227c:	f00d fc36 	bl	9000faec <_ZN8touchgfx17AbstractPartitionC1Ev>
90002280:	4b1a      	ldr	r3, [pc, #104]	; (900022ec <touchgfx_init+0xec>)
90002282:	4638      	mov	r0, r7
90002284:	63ab      	str	r3, [r5, #56]	; 0x38
90002286:	f00d fc31 	bl	9000faec <_ZN8touchgfx17AbstractPartitionC1Ev>
9000228a:	f505 5300 	add.w	r3, r5, #8192	; 0x2000
9000228e:	4a18      	ldr	r2, [pc, #96]	; (900022f0 <touchgfx_init+0xf0>)
90002290:	f503 60a6 	add.w	r0, r3, #1328	; 0x530
90002294:	f8c3 24e8 	str.w	r2, [r3, #1256]	; 0x4e8
90002298:	f003 fb7c 	bl	90005994 <_ZN5ModelC1Ev>
9000229c:	462a      	mov	r2, r5
9000229e:	f107 0148 	add.w	r1, r7, #72	; 0x48
900022a2:	4630      	mov	r0, r6
900022a4:	f003 fb64 	bl	90005970 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
900022a8:	4630      	mov	r0, r6
900022aa:	f002 f819 	bl	900042e0 <_ZN23FrontendApplicationBase40gotoscreen_game_selectScreenNoTransitionEv>
        static FrontendHeap instance;
900022ae:	4811      	ldr	r0, [pc, #68]	; (900022f4 <touchgfx_init+0xf4>)
900022b0:	f023 fe6c 	bl	90025f8c <atexit>
900022b4:	4620      	mov	r0, r4
900022b6:	f023 fe2a 	bl	90025f0e <__cxa_guard_release>
900022ba:	4807      	ldr	r0, [pc, #28]	; (900022d8 <touchgfx_init+0xd8>)
}
900022bc:	b002      	add	sp, #8
900022be:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
900022c2:	f7fe bb05 	b.w	900008d0 <_ZN11TouchGFXHAL10initializeEv>
900022c6:	bf00      	nop
900022c8:	240235e0 	.word	0x240235e0
900022cc:	240090a0 	.word	0x240090a0
900022d0:	24005bd8 	.word	0x24005bd8
900022d4:	2400002c 	.word	0x2400002c
900022d8:	24009018 	.word	0x24009018
900022dc:	24005bdc 	.word	0x24005bdc
900022e0:	240080c4 	.word	0x240080c4
900022e4:	9002797c 	.word	0x9002797c
900022e8:	900278e0 	.word	0x900278e0
900022ec:	90027914 	.word	0x90027914
900022f0:	90027948 	.word	0x90027948
900022f4:	90002161 	.word	0x90002161

900022f8 <touchgfx_components_init>:

void touchgfx_components_init()
{
}
900022f8:	4770      	bx	lr
900022fa:	bf00      	nop

900022fc <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
900022fc:	4801      	ldr	r0, [pc, #4]	; (90002304 <touchgfx_taskEntry+0x8>)
900022fe:	f7fe baad 	b.w	9000085c <_ZN11TouchGFXHAL9taskEntryEv>
90002302:	bf00      	nop
90002304:	24009018 	.word	0x24009018

90002308 <_GLOBAL__sub_I_touchgfx_init>:
}
90002308:	b570      	push	{r4, r5, r6, lr}
{
public:

    STM32TouchController() {}
9000230a:	4b25      	ldr	r3, [pc, #148]	; (900023a0 <_GLOBAL__sub_I_touchgfx_init+0x98>)
9000230c:	4c25      	ldr	r4, [pc, #148]	; (900023a4 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
static STM32DMA dma;
9000230e:	4e26      	ldr	r6, [pc, #152]	; (900023a8 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
static LCD16bpp display;
90002310:	4d26      	ldr	r5, [pc, #152]	; (900023ac <_GLOBAL__sub_I_touchgfx_init+0xa4>)
90002312:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
90002314:	4630      	mov	r0, r6
90002316:	f7ff fe29 	bl	90001f6c <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
9000231a:	4628      	mov	r0, r5
9000231c:	f01a f8a0 	bl	9001c460 <_ZN8touchgfx8LCD16bppC1Ev>
        : dma(dmaInterface),
90002320:	4b23      	ldr	r3, [pc, #140]	; (900023b0 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
          mcuInstrumentation(0),
90002322:	2200      	movs	r2, #0
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
90002324:	f44f 70f0 	mov.w	r0, #480	; 0x1e0
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
90002328:	f44f 7188 	mov.w	r1, #272	; 0x110
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
9000232c:	62da      	str	r2, [r3, #44]	; 0x2c
9000232e:	861a      	strh	r2, [r3, #48]	; 0x30
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
90002330:	655a      	str	r2, [r3, #84]	; 0x54
          useAuxiliaryLCD(false),
90002332:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
          lastY(0),
90002336:	665a      	str	r2, [r3, #100]	; 0x64
          vSyncCompensationEnabled(false),
90002338:	66da      	str	r2, [r3, #108]	; 0x6c
          updateMCULoad(0),
9000233a:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
          mcuInstrumentation(0),
9000233e:	e9c3 4203 	strd	r4, r2, [r3, #12]
          touchSampleRate(1),
90002342:	4c1c      	ldr	r4, [pc, #112]	; (900023b4 <_GLOBAL__sub_I_touchgfx_init+0xac>)
90002344:	669c      	str	r4, [r3, #104]	; 0x68
        instance = this;
90002346:	4c1c      	ldr	r4, [pc, #112]	; (900023b8 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
90002348:	6023      	str	r3, [r4, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
9000234a:	4c1c      	ldr	r4, [pc, #112]	; (900023bc <_GLOBAL__sub_I_touchgfx_init+0xb4>)
9000234c:	8020      	strh	r0, [r4, #0]
9000234e:	4c1c      	ldr	r4, [pc, #112]	; (900023c0 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
90002350:	8020      	strh	r0, [r4, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
90002352:	4c1c      	ldr	r4, [pc, #112]	; (900023c4 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
90002354:	481c      	ldr	r0, [pc, #112]	; (900023c8 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
90002356:	8021      	strh	r1, [r4, #0]
90002358:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
9000235a:	4c1c      	ldr	r4, [pc, #112]	; (900023cc <_GLOBAL__sub_I_touchgfx_init+0xc4>)
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
9000235c:	491c      	ldr	r1, [pc, #112]	; (900023d0 <_GLOBAL__sub_I_touchgfx_init+0xc8>)
          requestedOrientation(ORIENTATION_LANDSCAPE),
9000235e:	481d      	ldr	r0, [pc, #116]	; (900023d4 <_GLOBAL__sub_I_touchgfx_init+0xcc>)
          lcdRef(display),
90002360:	e9c3 6501 	strd	r6, r5, [r3, #4]
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
90002364:	f44f 7580 	mov.w	r5, #256	; 0x100
          frameBufferAllocator(0),
90002368:	e9c3 2205 	strd	r2, r2, [r3, #20]
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
9000236c:	649d      	str	r5, [r3, #72]	; 0x48
            : startX(0),
9000236e:	e9c3 2207 	strd	r2, r2, [r3, #28]
        : drag(), listener(0), dragThresholdValue(0)
90002372:	e9c3 2209 	strd	r2, r2, [r3, #36]	; 0x24
          frameBuffer0(0),
90002376:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
          frameBuffer2(0),
9000237a:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
9000237e:	e9c3 2213 	strd	r2, r2, [r3, #76]	; 0x4c
          lastX(0),
90002382:	e9c3 2217 	strd	r2, r2, [r3, #92]	; 0x5c
        DISPLAY_ROTATION = rotate0;
90002386:	7022      	strb	r2, [r4, #0]
90002388:	6019      	str	r1, [r3, #0]
9000238a:	4913      	ldr	r1, [pc, #76]	; (900023d8 <_GLOBAL__sub_I_touchgfx_init+0xd0>)
        : cc_consumed(0),
9000238c:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
90002390:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
          cc_in(0)
90002394:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
90002398:	67d9      	str	r1, [r3, #124]	; 0x7c
          requestedOrientation(ORIENTATION_LANDSCAPE),
9000239a:	e9c3 201d 	strd	r2, r0, [r3, #116]	; 0x74
}
9000239e:	bd70      	pop	{r4, r5, r6, pc}
900023a0:	900270e4 	.word	0x900270e4
900023a4:	2400826c 	.word	0x2400826c
900023a8:	24008270 	.word	0x24008270
900023ac:	240090a4 	.word	0x240090a4
900023b0:	24009018 	.word	0x24009018
900023b4:	01000001 	.word	0x01000001
900023b8:	2402357c 	.word	0x2402357c
900023bc:	24023570 	.word	0x24023570
900023c0:	24023576 	.word	0x24023576
900023c4:	24023572 	.word	0x24023572
900023c8:	24023578 	.word	0x24023578
900023cc:	24023574 	.word	0x24023574
900023d0:	90027274 	.word	0x90027274
900023d4:	01010000 	.word	0x01010000
900023d8:	900270bc 	.word	0x900270bc

900023dc <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
900023dc:	4801      	ldr	r0, [pc, #4]	; (900023e4 <_GLOBAL__sub_D_touchgfx_init+0x8>)
900023de:	f7ff bb47 	b.w	90001a70 <_ZN8STM32DMAD1Ev>
900023e2:	bf00      	nop
900023e4:	24008270 	.word	0x24008270

900023e8 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
     * drawn by the widget.
     */
    virtual void invalidateContent() const
    {
        // Consider checking if *this is in the draw chain
        if (visible)
900023e8:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
900023ec:	b112      	cbz	r2, 900023f4 <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
        {
            invalidate();
900023ee:	6803      	ldr	r3, [r0, #0]
900023f0:	695b      	ldr	r3, [r3, #20]
900023f2:	4718      	bx	r3
        }
    }
900023f4:	4770      	bx	lr
900023f6:	bf00      	nop

900023f8 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
900023f8:	2000      	movs	r0, #0
900023fa:	4770      	bx	lr

900023fc <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
900023fc:	8081      	strh	r1, [r0, #4]
    }
900023fe:	4770      	bx	lr

90002400 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
90002400:	80c1      	strh	r1, [r0, #6]
    }
90002402:	4770      	bx	lr

90002404 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
90002404:	8101      	strh	r1, [r0, #8]
    }
90002406:	4770      	bx	lr

90002408 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
90002408:	8141      	strh	r1, [r0, #10]
    }
9000240a:	4770      	bx	lr

9000240c <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
9000240c:	4770      	bx	lr
9000240e:	bf00      	nop

90002410 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
90002410:	4770      	bx	lr
90002412:	bf00      	nop

90002414 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
90002414:	4770      	bx	lr
90002416:	bf00      	nop

90002418 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
90002418:	4770      	bx	lr
9000241a:	bf00      	nop

9000241c <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
9000241c:	4770      	bx	lr
9000241e:	bf00      	nop

90002420 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
    {
        moveRelative(x - rect.x, y - rect.y);
90002420:	f8b0 c006 	ldrh.w	ip, [r0, #6]
90002424:	6803      	ldr	r3, [r0, #0]
90002426:	eba2 020c 	sub.w	r2, r2, ip
9000242a:	f8b0 c004 	ldrh.w	ip, [r0, #4]
9000242e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
90002430:	eba1 010c 	sub.w	r1, r1, ip
90002434:	b212      	sxth	r2, r2
90002436:	b209      	sxth	r1, r1
90002438:	4718      	bx	r3
9000243a:	bf00      	nop

9000243c <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
9000243c:	6813      	ldr	r3, [r2, #0]
        cachedVisibleRect.x = UNCACHED_INDICATOR;
9000243e:	f64f 7cff 	movw	ip, #65535	; 0xffff
        cachedAbsX = UNCACHED_INDICATOR;
90002442:	f04f 31ff 	mov.w	r1, #4294967295
        cachedVisibleRect.x = UNCACHED_INDICATOR;
90002446:	f8a0 c00c 	strh.w	ip, [r0, #12]
        nextDrawChainElement = *nextPreviousElement;
9000244a:	e9c0 3107 	strd	r3, r1, [r0, #28]
        *nextPreviousElement = this;
9000244e:	6010      	str	r0, [r2, #0]
    }
90002450:	4770      	bx	lr
90002452:	bf00      	nop

90002454 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
90002454:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
90002458:	b11a      	cbz	r2, 90002462 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
9000245a:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
9000245e:	b102      	cbz	r2, 90002462 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
90002460:	6018      	str	r0, [r3, #0]
        }
    }
90002462:	4770      	bx	lr

90002464 <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
90002464:	2000      	movs	r0, #0
90002466:	4770      	bx	lr

90002468 <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @return True if the painter is ready to paint, false otherwise.
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
90002468:	4603      	mov	r3, r0
    {
        widgetWidth = widgetRect.width;
9000246a:	888a      	ldrh	r2, [r1, #4]
        return true;
    }
9000246c:	2001      	movs	r0, #1
        widgetWidth = widgetRect.width;
9000246e:	809a      	strh	r2, [r3, #4]
    }
90002470:	4770      	bx	lr
90002472:	bf00      	nop

90002474 <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
90002474:	4770      	bx	lr
90002476:	bf00      	nop

90002478 <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
90002478:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
    }
9000247c:	4770      	bx	lr
9000247e:	bf00      	nop

90002480 <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
90002480:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
90002484:	4770      	bx	lr
90002486:	bf00      	nop

90002488 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90002488:	f04f 0c00 	mov.w	ip, #0
        return rect.width;
9000248c:	688a      	ldr	r2, [r1, #8]
9000248e:	f8c0 c000 	str.w	ip, [r0]
90002492:	6042      	str	r2, [r0, #4]
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
90002494:	4770      	bx	lr
90002496:	bf00      	nop

90002498 <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
90002498:	2200      	movs	r2, #0
9000249a:	6002      	str	r2, [r0, #0]
9000249c:	6042      	str	r2, [r0, #4]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
9000249e:	4770      	bx	lr

900024a0 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
    }

    virtual Bitmap::BitmapFormat framebufferFormat() const
    {
        return Bitmap::RGB565;
    }
900024a0:	2000      	movs	r0, #0
900024a2:	4770      	bx	lr

900024a4 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
900024a4:	4b03      	ldr	r3, [pc, #12]	; (900024b4 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
900024a6:	2290      	movs	r2, #144	; 0x90
900024a8:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
900024ac:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
900024b0:	4770      	bx	lr
900024b2:	bf00      	nop
900024b4:	e000e100 	.word	0xe000e100

900024b8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
900024b8:	4a09      	ldr	r2, [pc, #36]	; (900024e0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
900024ba:	490a      	ldr	r1, [pc, #40]	; (900024e4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
900024bc:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
900024be:	480a      	ldr	r0, [pc, #40]	; (900024e8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
900024c0:	f3c3 030a 	ubfx	r3, r3, #0, #11
900024c4:	3b01      	subs	r3, #1
900024c6:	b29b      	uxth	r3, r3
900024c8:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
900024ca:	6911      	ldr	r1, [r2, #16]
900024cc:	f3c1 010a 	ubfx	r1, r1, #0, #11
900024d0:	3901      	subs	r1, #1
900024d2:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
900024d4:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
900024d6:	6b53      	ldr	r3, [r2, #52]	; 0x34
900024d8:	f043 0301 	orr.w	r3, r3, #1
900024dc:	6353      	str	r3, [r2, #52]	; 0x34
}
900024de:	4770      	bx	lr
900024e0:	50001000 	.word	0x50001000
900024e4:	24009176 	.word	0x24009176
900024e8:	24009174 	.word	0x24009174

900024ec <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    dma.start();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
900024ec:	4b01      	ldr	r3, [pc, #4]	; (900024f4 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
900024ee:	f8d3 00ac 	ldr.w	r0, [r3, #172]	; 0xac
}
900024f2:	4770      	bx	lr
900024f4:	50001000 	.word	0x50001000

900024f8 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
900024f8:	4b02      	ldr	r3, [pc, #8]	; (90002504 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
900024fa:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
900024fc:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
90002500:	625a      	str	r2, [r3, #36]	; 0x24
}
90002502:	4770      	bx	lr
90002504:	50001000 	.word	0x50001000

90002508 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setRGBBufferEPhj>:

    virtual void setRGBBuffer(uint8_t* buffer, size_t sizeOfBuffer)
    {
        // Running in UI thread / main

        bufferRGB = buffer;
90002508:	e9c0 120c 	strd	r1, r2, [r0, #48]	; 0x30
        topBufferRGB = bufferRGB;
9000250c:	6381      	str	r1, [r0, #56]	; 0x38
        sizeBufferRGB = sizeOfBuffer;
    }
9000250e:	4770      	bx	lr

90002510 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EED1Ev>:
class DedicatedBufferController : public touchgfx::VideoController
90002510:	4770      	bx	lr
90002512:	bf00      	nop

90002514 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE>:
        mjpegDecoders[handle]->setVideoData(reader);
90002514:	eb00 0081 	add.w	r0, r0, r1, lsl #2
90002518:	4611      	mov	r1, r2
9000251a:	6840      	ldr	r0, [r0, #4]
9000251c:	6803      	ldr	r3, [r0, #0]
9000251e:	68db      	ldr	r3, [r3, #12]
90002520:	4718      	bx	r3
90002522:	bf00      	nop

90002524 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE29setVideoFrameRateCompensationEb>:
        return stream.isPlaying;
    }

    virtual void setVideoFrameRateCompensation(bool allow)
    {
        allowSkipFrames = allow;
90002524:	f880 103c 	strb.w	r1, [r0, #60]	; 0x3c
    }
90002528:	4770      	bx	lr
9000252a:	bf00      	nop

9000252c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EED0Ev>:
class DedicatedBufferController : public touchgfx::VideoController
9000252c:	b510      	push	{r4, lr}
9000252e:	4604      	mov	r4, r0
90002530:	2148      	movs	r1, #72	; 0x48
90002532:	f023 fcde 	bl	90025ef2 <_ZdlPvj>
90002536:	4620      	mov	r0, r4
90002538:	bd10      	pop	{r4, pc}
9000253a:	bf00      	nop

9000253c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm>:
        assert(handle < no_streams);
9000253c:	b911      	cbnz	r1, 90002544 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x8>
    }
9000253e:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
90002542:	4770      	bx	lr
    virtual bool getIsPlaying(const Handle handle)
90002544:	b508      	push	{r3, lr}
        assert(handle < no_streams);
90002546:	4a03      	ldr	r2, [pc, #12]	; (90002554 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x18>)
90002548:	f44f 71b8 	mov.w	r1, #368	; 0x170
9000254c:	4b02      	ldr	r3, [pc, #8]	; (90002558 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x1c>)
9000254e:	4803      	ldr	r0, [pc, #12]	; (9000255c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x20>)
90002550:	f023 fcfe 	bl	90025f50 <__assert_func>
90002554:	9002799c 	.word	0x9002799c
90002558:	90027988 	.word	0x90027988
9000255c:	90027b28 	.word	0x90027b28

90002560 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE>:
        assert(handle < no_streams);
90002560:	b921      	cbnz	r1, 9000256c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0xc>
        mjpegDecoders[handle]->getVideoInfo(data);
90002562:	6840      	ldr	r0, [r0, #4]
90002564:	4611      	mov	r1, r2
90002566:	6803      	ldr	r3, [r0, #0]
90002568:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9000256a:	4718      	bx	r3
        assert(handle < no_streams);
9000256c:	4b03      	ldr	r3, [pc, #12]	; (9000257c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x1c>)
9000256e:	f44f 71b5 	mov.w	r1, #362	; 0x16a
90002572:	4a03      	ldr	r2, [pc, #12]	; (90002580 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x20>)
90002574:	4803      	ldr	r0, [pc, #12]	; (90002584 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x24>)
    virtual void getVideoInformation(const Handle handle, touchgfx::VideoInformation* data)
90002576:	b510      	push	{r4, lr}
        assert(handle < no_streams);
90002578:	f023 fcea 	bl	90025f50 <__assert_func>
9000257c:	90027988 	.word	0x90027988
90002580:	90027b6c 	.word	0x90027b6c
90002584:	90027b28 	.word	0x90027b28

90002588 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm>:
        assert(handle < no_streams);
90002588:	b909      	cbnz	r1, 9000258e <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x6>
    }
9000258a:	68c0      	ldr	r0, [r0, #12]
9000258c:	4770      	bx	lr
    virtual uint32_t getCurrentFrameNumber(const Handle handle)
9000258e:	b508      	push	{r3, lr}
        assert(handle < no_streams);
90002590:	4a02      	ldr	r2, [pc, #8]	; (9000259c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x14>)
90002592:	2179      	movs	r1, #121	; 0x79
90002594:	4b02      	ldr	r3, [pc, #8]	; (900025a0 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x18>)
90002596:	4803      	ldr	r0, [pc, #12]	; (900025a4 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x1c>)
90002598:	f023 fcda 	bl	90025f50 <__assert_func>
9000259c:	90027d1c 	.word	0x90027d1c
900025a0:	90027988 	.word	0x90027988
900025a4:	90027b28 	.word	0x90027b28

900025a8 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm>:
    virtual void setVideoData(const Handle handle, const uint8_t* movie, const uint32_t length)
900025a8:	b510      	push	{r4, lr}
        assert(handle < no_streams);
900025aa:	460c      	mov	r4, r1
900025ac:	b949      	cbnz	r1, 900025c2 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x1a>
900025ae:	4611      	mov	r1, r2
900025b0:	461a      	mov	r2, r3
        mjpegDecoders[handle]->setVideoData(movie, length);
900025b2:	6843      	ldr	r3, [r0, #4]
        stream.frameNumber = 0;
900025b4:	60c4      	str	r4, [r0, #12]
        mjpegDecoders[handle]->setVideoData(movie, length);
900025b6:	681c      	ldr	r4, [r3, #0]
900025b8:	4618      	mov	r0, r3
900025ba:	68a3      	ldr	r3, [r4, #8]
    }
900025bc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        mjpegDecoders[handle]->setVideoData(movie, length);
900025c0:	4718      	bx	r3
        assert(handle < no_streams);
900025c2:	4b03      	ldr	r3, [pc, #12]	; (900025d0 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x28>)
900025c4:	2190      	movs	r1, #144	; 0x90
900025c6:	4a03      	ldr	r2, [pc, #12]	; (900025d4 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x2c>)
900025c8:	4803      	ldr	r0, [pc, #12]	; (900025d8 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x30>)
900025ca:	f023 fcc1 	bl	90025f50 <__assert_func>
900025ce:	bf00      	nop
900025d0:	90027988 	.word	0x90027988
900025d4:	90027ed0 	.word	0x90027ed0
900025d8:	90027b28 	.word	0x90027b28

900025dc <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm>:
        assert(handle < no_streams);
900025dc:	b921      	cbnz	r1, 900025e8 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0xc>
        stream.tickCount = 0;
900025de:	e9c0 1104 	strd	r1, r1, [r0, #16]
        stream.frame_rate_video = video_frames;
900025e2:	e9c0 3206 	strd	r3, r2, [r0, #24]
900025e6:	4770      	bx	lr
    virtual void setFrameRate(const Handle handle, uint32_t ui_frames, uint32_t video_frames)
900025e8:	b508      	push	{r3, lr}
        assert(handle < no_streams);
900025ea:	4a03      	ldr	r2, [pc, #12]	; (900025f8 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x1c>)
900025ec:	2182      	movs	r1, #130	; 0x82
900025ee:	4b03      	ldr	r3, [pc, #12]	; (900025fc <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x20>)
900025f0:	4803      	ldr	r0, [pc, #12]	; (90002600 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x24>)
900025f2:	f023 fcad 	bl	90025f50 <__assert_func>
900025f6:	bf00      	nop
900025f8:	900280ac 	.word	0x900280ac
900025fc:	90027988 	.word	0x90027988
90002600:	90027b28 	.word	0x90027b28

90002604 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
90002604:	f00d bd54 	b.w	900100b0 <_ZN8touchgfx3HAL10beginFrameEv>

90002608 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE>:
        if (firstDrawThisFrame)
90002608:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
9000260c:	b903      	cbnz	r3, 90002610 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x8>
9000260e:	4770      	bx	lr
    virtual void draw(const Handle handle, const touchgfx::Rect& invalidatedArea, const touchgfx::VideoWidget& widget)
90002610:	b510      	push	{r4, lr}
            MUTEX_LOCK(mutexBuffers);
90002612:	f04f 31ff 	mov.w	r1, #4294967295
90002616:	4604      	mov	r4, r0
90002618:	6c40      	ldr	r0, [r0, #68]	; 0x44
9000261a:	f00a fa53 	bl	9000cac4 <osMutexAcquire>
            firstDrawThisFrame = false;
9000261e:	f44f 7380 	mov.w	r3, #256	; 0x100
90002622:	f8a4 303d 	strh.w	r3, [r4, #61]	; 0x3d
    }
90002626:	bd10      	pop	{r4, pc}

90002628 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21unregisterVideoWidgetEm>:
    virtual void unregisterVideoWidget(const Handle handle)
90002628:	b538      	push	{r3, r4, r5, lr}
9000262a:	460c      	mov	r4, r1
9000262c:	4605      	mov	r5, r0
        MUTEX_LOCK(mutexBuffers);
9000262e:	f04f 31ff 	mov.w	r1, #4294967295
90002632:	6c40      	ldr	r0, [r0, #68]	; 0x44
        streams[handle].isActive = false;
90002634:	eb04 04c4 	add.w	r4, r4, r4, lsl #3
        MUTEX_LOCK(mutexBuffers);
90002638:	f00a fa44 	bl	9000cac4 <osMutexAcquire>
        MUTEX_UNLOCK(mutexBuffers);
9000263c:	6c68      	ldr	r0, [r5, #68]	; 0x44
9000263e:	f00a fa65 	bl	9000cb0c <osMutexRelease>
        streams[handle].isActive = false;
90002642:	2300      	movs	r3, #0
90002644:	eb05 0484 	add.w	r4, r5, r4, lsl #2
90002648:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
        if (oneIsActive == false)
9000264c:	f895 3028 	ldrb.w	r3, [r5, #40]	; 0x28
90002650:	b90b      	cbnz	r3, 90002656 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21unregisterVideoWidgetEm+0x2e>
            topBufferRGB = bufferRGB;
90002652:	6b2b      	ldr	r3, [r5, #48]	; 0x30
90002654:	63ab      	str	r3, [r5, #56]	; 0x38
    }
90002656:	bd38      	pop	{r3, r4, r5, pc}

90002658 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
{
90002658:	b570      	push	{r4, r5, r6, lr}
            if (stream.isPlaying || stream.isShowingOneFrame)
9000265a:	4c1c      	ldr	r4, [pc, #112]	; (900026cc <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x74>)
9000265c:	4605      	mov	r5, r0
    HAL::endFrame();
9000265e:	f00d fd33 	bl	900100c8 <_ZN8touchgfx3HAL8endFrameEv>
90002662:	f894 3029 	ldrb.w	r3, [r4, #41]	; 0x29
90002666:	b98b      	cbnz	r3, 9000268c <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x34>
90002668:	f894 302a 	ldrb.w	r3, [r4, #42]	; 0x2a
9000266c:	b973      	cbnz	r3, 9000268c <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x34>
        firstDrawThisFrame = true;
9000266e:	2301      	movs	r3, #1
        SEM_POST(semDecode);
90002670:	6c20      	ldr	r0, [r4, #64]	; 0x40
        firstDrawThisFrame = true;
90002672:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        SEM_POST(semDecode);
90002676:	f00a faef 	bl	9000cc58 <osSemaphoreRelease>
        if (uiHasMutex)
9000267a:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
9000267e:	b9f3      	cbnz	r3, 900026be <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x66>
    dma.start();
90002680:	6868      	ldr	r0, [r5, #4]
90002682:	6803      	ldr	r3, [r0, #0]
}
90002684:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    dma.start();
90002688:	691b      	ldr	r3, [r3, #16]
9000268a:	4718      	bx	r3
    bool decodeForNextTick(Stream& stream)
    {
        // Running in UI thread

        // Compare tickCount/frameCount to frame_rate_ticks/frame_rate_video
        if ((stream.tickCount * stream.frame_rate_video) >= (stream.frame_rate_ticks * stream.frameCount))
9000268c:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
90002690:	69e1      	ldr	r1, [r4, #28]
90002692:	6922      	ldr	r2, [r4, #16]
90002694:	fb00 f303 	mul.w	r3, r0, r3
90002698:	fb01 f202 	mul.w	r2, r1, r2
9000269c:	4293      	cmp	r3, r2
9000269e:	d3e6      	bcc.n	9000266e <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x16>
        {
            if (allowSkipFrames)
900026a0:	f894 003c 	ldrb.w	r0, [r4, #60]	; 0x3c
900026a4:	b138      	cbz	r0, 900026b6 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x5e>
            {
                stream.skip_frames = (stream.tickCount * stream.frame_rate_video - stream.frame_rate_ticks * stream.frameCount) / stream.frame_rate_ticks;
900026a6:	1a9b      	subs	r3, r3, r2
900026a8:	fbb3 f2f1 	udiv	r2, r3, r1
                if (stream.skip_frames > 0)
900026ac:	4299      	cmp	r1, r3
                {
                    stream.skip_frames--;
900026ae:	bf98      	it	ls
900026b0:	f102 32ff 	addls.w	r2, r2, #4294967295
900026b4:	6262      	str	r2, [r4, #36]	; 0x24
                    stream.doDecode = true;
900026b6:	2301      	movs	r3, #1
900026b8:	f884 302e 	strb.w	r3, [r4, #46]	; 0x2e
        for (uint32_t i = 0; i < no_streams; i++)
900026bc:	e7d7      	b.n	9000266e <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x16>
            MUTEX_UNLOCK(mutexBuffers);
900026be:	6c60      	ldr	r0, [r4, #68]	; 0x44
900026c0:	f00a fa24 	bl	9000cb0c <osMutexRelease>
            uiHasMutex = false;
900026c4:	2300      	movs	r3, #0
900026c6:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
900026ca:	e7d9      	b.n	90002680 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x28>
900026cc:	2400912c 	.word	0x2400912c

900026d0 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
900026d0:	f00d bcb8 	b.w	90010044 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

900026d4 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
900026d4:	f00d be19 	b.w	9001030a <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

900026d8 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv>:
{
    // If the framebuffer is placed in Write Through cached memory (e.g. SRAM) then
    // the DCache must be flushed prior to DMA2D accessing it. That's done
    // using the function SCB_CleanInvalidateDCache(). Remember to enable "CPU Cache" in the
    // "System Core" settings for "Cortex M7" in CubeMX in order for this function call to work.
    if (SCB->CCR & SCB_CCR_DC_Msk)
900026d8:	4814      	ldr	r0, [pc, #80]	; (9000272c <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x54>)
900026da:	6943      	ldr	r3, [r0, #20]
900026dc:	03d9      	lsls	r1, r3, #15
900026de:	d523      	bpl.n	90002728 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x50>
    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
900026e0:	2300      	movs	r3, #0
{
900026e2:	b510      	push	{r4, lr}
900026e4:	f8c0 3084 	str.w	r3, [r0, #132]	; 0x84
  __ASM volatile ("dsb 0xF":::"memory");
900026e8:	f3bf 8f4f 	dsb	sy
    ccsidr = SCB->CCSIDR;
900026ec:	f8d0 3080 	ldr.w	r3, [r0, #128]	; 0x80
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
900026f0:	f643 74e0 	movw	r4, #16352	; 0x3fe0
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
900026f4:	f3c3 3c4e 	ubfx	ip, r3, #13, #15
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
900026f8:	f3c3 0ec9 	ubfx	lr, r3, #3, #10
900026fc:	ea4f 1c4c 	mov.w	ip, ip, lsl #5
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90002700:	ea0c 0104 	and.w	r1, ip, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90002704:	4673      	mov	r3, lr
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90002706:	ea41 7283 	orr.w	r2, r1, r3, lsl #30
      } while (ways-- != 0U);
9000270a:	3b01      	subs	r3, #1
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
9000270c:	f8c0 2274 	str.w	r2, [r0, #628]	; 0x274
      } while (ways-- != 0U);
90002710:	1c5a      	adds	r2, r3, #1
90002712:	d1f8      	bne.n	90002706 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x2e>
    } while(sets-- != 0U);
90002714:	f1ac 0c20 	sub.w	ip, ip, #32
90002718:	f11c 0f20 	cmn.w	ip, #32
9000271c:	d1f0      	bne.n	90002700 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x28>
9000271e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90002722:	f3bf 8f6f 	isb	sy
    {
        SCB_CleanInvalidateDCache();
    }
}
90002726:	bd10      	pop	{r4, pc}
90002728:	4770      	bx	lr
9000272a:	bf00      	nop
9000272c:	e000ed00 	.word	0xe000ed00

90002730 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm>:
    virtual void setCommand(const Handle handle, Command cmd, uint32_t param)
90002730:	b510      	push	{r4, lr}
        assert(handle < no_streams);
90002732:	2900      	cmp	r1, #0
90002734:	d133      	bne.n	9000279e <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x6e>
90002736:	4604      	mov	r4, r0
        switch (cmd)
90002738:	2a05      	cmp	r2, #5
9000273a:	d809      	bhi.n	90002750 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x20>
9000273c:	e8df f002 	tbb	[pc, r2]
90002740:	27221e0f 	.word	0x27221e0f
90002744:	0903      	.short	0x0903
            stream.isPlaying = false;
90002746:	2200      	movs	r2, #0
            stream.seek_to_frame = 1;
90002748:	2301      	movs	r3, #1
            stream.isPlaying = false;
9000274a:	f880 2029 	strb.w	r2, [r0, #41]	; 0x29
            stream.seek_to_frame = 1;
9000274e:	6203      	str	r3, [r0, #32]
    }
90002750:	bd10      	pop	{r4, pc}
            stream.repeat = (param > 0);
90002752:	3b00      	subs	r3, #0
90002754:	bf18      	it	ne
90002756:	2301      	movne	r3, #1
90002758:	f880 302d 	strb.w	r3, [r0, #45]	; 0x2d
    }
9000275c:	bd10      	pop	{r4, pc}
            if (mjpegDecoders[handle]->hasVideo())
9000275e:	6840      	ldr	r0, [r0, #4]
90002760:	6803      	ldr	r3, [r0, #0]
90002762:	691b      	ldr	r3, [r3, #16]
90002764:	4798      	blx	r3
90002766:	2800      	cmp	r0, #0
90002768:	d0f2      	beq.n	90002750 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x20>
                stream.isPlaying = true;
9000276a:	2201      	movs	r2, #1
                stream.frameCount = 0;
9000276c:	2300      	movs	r3, #0
                stream.isPlaying = true;
9000276e:	f884 2029 	strb.w	r2, [r4, #41]	; 0x29
                stream.hasMoreFrames = true; // Assume more frames, lowered on end
90002772:	f884 202c 	strb.w	r2, [r4, #44]	; 0x2c
                stream.tickCount = 0;
90002776:	e9c4 3304 	strd	r3, r3, [r4, #16]
    }
9000277a:	bd10      	pop	{r4, pc}
            stream.isPlaying = false;
9000277c:	2300      	movs	r3, #0
9000277e:	f880 3029 	strb.w	r3, [r0, #41]	; 0x29
    }
90002782:	bd10      	pop	{r4, pc}
            stream.frameCount = 0;
90002784:	2200      	movs	r2, #0
            stream.seek_to_frame = param;
90002786:	6203      	str	r3, [r0, #32]
            stream.tickCount = 0;
90002788:	e9c0 2204 	strd	r2, r2, [r0, #16]
    }
9000278c:	bd10      	pop	{r4, pc}
            stream.frameCount = 0;
9000278e:	2200      	movs	r2, #0
            stream.isShowingOneFrame = true;
90002790:	2101      	movs	r1, #1
            stream.seek_to_frame = param;
90002792:	6203      	str	r3, [r0, #32]
            stream.isShowingOneFrame = true;
90002794:	f880 102a 	strb.w	r1, [r0, #42]	; 0x2a
            stream.tickCount = 0;
90002798:	e9c0 2204 	strd	r2, r2, [r0, #16]
    }
9000279c:	bd10      	pop	{r4, pc}
        assert(handle < no_streams);
9000279e:	4b03      	ldr	r3, [pc, #12]	; (900027ac <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x7c>)
900027a0:	21a2      	movs	r1, #162	; 0xa2
900027a2:	4a03      	ldr	r2, [pc, #12]	; (900027b0 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x80>)
900027a4:	4803      	ldr	r0, [pc, #12]	; (900027b4 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x84>)
900027a6:	f023 fbd3 	bl	90025f50 <__assert_func>
900027aa:	bf00      	nop
900027ac:	90027988 	.word	0x90027988
900027b0:	90028268 	.word	0x90028268
900027b4:	90027b28 	.word	0x90027b28

900027b8 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE>:
    virtual bool updateFrame(const Handle handle, touchgfx::VideoWidget& widget)
900027b8:	b510      	push	{r4, lr}
        assert(handle < no_streams);
900027ba:	bb39      	cbnz	r1, 9000280c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x54>
        if (stream.isPlaying)
900027bc:	f890 3029 	ldrb.w	r3, [r0, #41]	; 0x29
900027c0:	4604      	mov	r4, r0
900027c2:	b923      	cbnz	r3, 900027ce <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x16>
        if (stream.doInvalidateOnNextTick)
900027c4:	f894 302b 	ldrb.w	r3, [r4, #43]	; 0x2b
900027c8:	b963      	cbnz	r3, 900027e4 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x2c>
        return true;
900027ca:	2001      	movs	r0, #1
    }
900027cc:	bd10      	pop	{r4, pc}
        return vSyncForFrame;
900027ce:	4912      	ldr	r1, [pc, #72]	; (90002818 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x60>)
            stream.tickCount += HAL::getInstance()->getLCDRefreshCount();
900027d0:	6943      	ldr	r3, [r0, #20]
900027d2:	6809      	ldr	r1, [r1, #0]
900027d4:	f891 106b 	ldrb.w	r1, [r1, #107]	; 0x6b
900027d8:	440b      	add	r3, r1
900027da:	6143      	str	r3, [r0, #20]
        if (stream.doInvalidateOnNextTick)
900027dc:	f894 302b 	ldrb.w	r3, [r4, #43]	; 0x2b
900027e0:	2b00      	cmp	r3, #0
900027e2:	d0f2      	beq.n	900027ca <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x12>
     *
     * @param [in] videoBuffer Video buffer.
     */
    void setVideoBuffer(uint8_t* const videoBuffer)
    {
        buffer = videoBuffer;
900027e4:	68a1      	ldr	r1, [r4, #8]
            widget.invalidate();
900027e6:	4610      	mov	r0, r2
900027e8:	6813      	ldr	r3, [r2, #0]
900027ea:	695b      	ldr	r3, [r3, #20]
900027ec:	6311      	str	r1, [r2, #48]	; 0x30
900027ee:	4798      	blx	r3
            stream.doInvalidateOnNextTick = false;
900027f0:	2300      	movs	r3, #0
            if (!stream.hasMoreFrames && !stream.repeat)
900027f2:	f894 002c 	ldrb.w	r0, [r4, #44]	; 0x2c
            stream.doInvalidateOnNextTick = false;
900027f6:	f884 302b 	strb.w	r3, [r4, #43]	; 0x2b
            if (!stream.hasMoreFrames && !stream.repeat)
900027fa:	2800      	cmp	r0, #0
900027fc:	d1e5      	bne.n	900027ca <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x12>
900027fe:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
90002802:	2b00      	cmp	r3, #0
90002804:	d1e2      	bne.n	900027cc <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x14>
                stream.isPlaying = false;
90002806:	f884 0029 	strb.w	r0, [r4, #41]	; 0x29
    }
9000280a:	bd10      	pop	{r4, pc}
        assert(handle < no_streams);
9000280c:	4b03      	ldr	r3, [pc, #12]	; (9000281c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x64>)
9000280e:	21d0      	movs	r1, #208	; 0xd0
90002810:	4a03      	ldr	r2, [pc, #12]	; (90002820 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x68>)
90002812:	4804      	ldr	r0, [pc, #16]	; (90002824 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x6c>)
90002814:	f023 fb9c 	bl	90025f50 <__assert_func>
90002818:	2402357c 	.word	0x2402357c
9000281c:	90027988 	.word	0x90027988
90002820:	9002843c 	.word	0x9002843c
90002824:	90027b28 	.word	0x90027b28

90002828 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE>:
    {
        // Running in UI thread

        for (uint32_t i = 0; i < no_streams; i++)
        {
            if (streams[i].isActive == false)
90002828:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
    virtual Handle registerVideoWidget(touchgfx::VideoWidget& widget)
9000282c:	b570      	push	{r4, r5, r6, lr}
            if (streams[i].isActive == false)
9000282e:	b9fb      	cbnz	r3, 90002870 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x48>
            {
                // Reset stream parameters
                streams[i] = Stream();
90002830:	2201      	movs	r2, #1
        if (topBufferRGB + sizeOfOneDecodeBuffer > (bufferRGB + sizeBufferRGB))
90002832:	6b85      	ldr	r5, [r0, #56]	; 0x38
                streams[i] = Stream();
90002834:	60c3      	str	r3, [r0, #12]
90002836:	f8a0 202d 	strh.w	r2, [r0, #45]	; 0x2d
        if (topBufferRGB + sizeOfOneDecodeBuffer > (bufferRGB + sizeBufferRGB))
9000283a:	f505 2487 	add.w	r4, r5, #276480	; 0x43800
        streams[handle].isActive = true;
9000283e:	f880 2028 	strb.w	r2, [r0, #40]	; 0x28
                streams[i] = Stream();
90002842:	6103      	str	r3, [r0, #16]
90002844:	6143      	str	r3, [r0, #20]
90002846:	6183      	str	r3, [r0, #24]
90002848:	61c3      	str	r3, [r0, #28]
9000284a:	6203      	str	r3, [r0, #32]
9000284c:	6243      	str	r3, [r0, #36]	; 0x24
9000284e:	f8c0 3029 	str.w	r3, [r0, #41]	; 0x29
        if (topBufferRGB + sizeOfOneDecodeBuffer > (bufferRGB + sizeBufferRGB))
90002852:	e9d0 260c 	ldrd	r2, r6, [r0, #48]	; 0x30
90002856:	4432      	add	r2, r6
90002858:	4294      	cmp	r4, r2
9000285a:	d810      	bhi.n	9000287e <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x56>
     * @param height Height of the videoBuffer in pixels
     */
    void setVideoBufferFormat(Bitmap::BitmapFormat bufferFormat, int16_t width, int16_t height)
    {
        format = bufferFormat;
        bufferWidth = width;
9000285c:	4a0b      	ldr	r2, [pc, #44]	; (9000288c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x64>)
        decodeBuffers[handle] = (uint32_t*)topBufferRGB;
9000285e:	6085      	str	r5, [r0, #8]
        topBufferRGB += sizeOfOneDecodeBuffer;
90002860:	6384      	str	r4, [r0, #56]	; 0x38
    }
90002862:	4618      	mov	r0, r3
        format = bufferFormat;
90002864:	f881 3034 	strb.w	r3, [r1, #52]	; 0x34
        bufferWidth = width;
90002868:	f8c1 2036 	str.w	r2, [r1, #54]	; 0x36
        buffer = videoBuffer;
9000286c:	630b      	str	r3, [r1, #48]	; 0x30
9000286e:	bd70      	pop	{r4, r5, r6, pc}

                return static_cast<VideoController::Handle>(i);
            }
        }

        assert(0 && "Unable to find free video stream handle!");
90002870:	4b07      	ldr	r3, [pc, #28]	; (90002890 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x68>)
90002872:	f240 11c5 	movw	r1, #453	; 0x1c5
90002876:	4a07      	ldr	r2, [pc, #28]	; (90002894 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x6c>)
90002878:	4807      	ldr	r0, [pc, #28]	; (90002898 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x70>)
9000287a:	f023 fb69 	bl	90025f50 <__assert_func>
            assert(0 && "registerVideoWidget: Unable to allocate RGB buffer!");
9000287e:	4b07      	ldr	r3, [pc, #28]	; (9000289c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x74>)
90002880:	2152      	movs	r1, #82	; 0x52
90002882:	4a07      	ldr	r2, [pc, #28]	; (900028a0 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x78>)
90002884:	4804      	ldr	r0, [pc, #16]	; (90002898 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x70>)
90002886:	f023 fb63 	bl	90025f50 <__assert_func>
9000288a:	bf00      	nop
9000288c:	012001e0 	.word	0x012001e0
90002890:	900285dc 	.word	0x900285dc
90002894:	9002860c 	.word	0x9002860c
90002898:	90027b28 	.word	0x90027b28
9000289c:	90028794 	.word	0x90028794
900028a0:	900287d0 	.word	0x900287d0

900028a4 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
900028a4:	4b08      	ldr	r3, [pc, #32]	; (900028c8 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
900028a6:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
900028aa:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
900028ae:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
900028b2:	f3bf 8f6f 	isb	sy
900028b6:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
900028ba:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
900028be:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
900028c2:	f3bf 8f6f 	isb	sy
}
900028c6:	4770      	bx	lr
900028c8:	e000e100 	.word	0xe000e100

900028cc <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
900028cc:	4b03      	ldr	r3, [pc, #12]	; (900028dc <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
900028ce:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
900028d2:	609a      	str	r2, [r3, #8]
900028d4:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
900028d8:	609a      	str	r2, [r3, #8]
}
900028da:	4770      	bx	lr
900028dc:	e000e100 	.word	0xe000e100

900028e0 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
900028e0:	b538      	push	{r3, r4, r5, lr}
900028e2:	4604      	mov	r4, r0
    HAL::initialize();
900028e4:	f00d fbfd 	bl	900100e2 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
900028e8:	6823      	ldr	r3, [r4, #0]
900028ea:	6e5d      	ldr	r5, [r3, #100]	; 0x64
900028ec:	f012 f9b4 	bl	90014c58 <_ZN8touchgfx11Application11getInstanceEv>
900028f0:	4601      	mov	r1, r0
900028f2:	4620      	mov	r0, r4
900028f4:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
900028f6:	6823      	ldr	r3, [r4, #0]
900028f8:	4a16      	ldr	r2, [pc, #88]	; (90002954 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x74>)
900028fa:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
900028fe:	4295      	cmp	r5, r2
90002900:	d11c      	bne.n	9000293c <_ZN20TouchGFXGeneratedHAL10initializeEv+0x5c>
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
90002902:	4a15      	ldr	r2, [pc, #84]	; (90002958 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x78>)
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
90002904:	2501      	movs	r5, #1
        setAnimationStorage(animationStorage);
90002906:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
9000290a:	f502 317f 	add.w	r1, r2, #261120	; 0x3fc00
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
9000290e:	4813      	ldr	r0, [pc, #76]	; (9000295c <_ZN20TouchGFXGeneratedHAL10initializeEv+0x7c>)
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
90002910:	e9c4 210f 	strd	r2, r1, [r4, #60]	; 0x3c
        setAnimationStorage(animationStorage);
90002914:	4a12      	ldr	r2, [pc, #72]	; (90002960 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x80>)
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
90002916:	7005      	strb	r5, [r0, #0]
90002918:	4293      	cmp	r3, r2
9000291a:	d116      	bne.n	9000294a <_ZN20TouchGFXGeneratedHAL10initializeEv+0x6a>
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
9000291c:	2300      	movs	r3, #0
        USE_ANIMATION_STORAGE = animationStorage != 0;
9000291e:	4a11      	ldr	r2, [pc, #68]	; (90002964 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x84>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90002920:	6463      	str	r3, [r4, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
90002922:	7013      	strb	r3, [r2, #0]
    void addDMA(touchgfx::DMA_Interface& dma)
    {
        this->dma = &dma;
90002924:	6864      	ldr	r4, [r4, #4]
        sizeBufferRGB = sizeOfBuffer;
90002926:	f44f 2087 	mov.w	r0, #276480	; 0x43800
        mjpegDecoders[index] = &decoder;
9000292a:	4b0f      	ldr	r3, [pc, #60]	; (90002968 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x88>)
9000292c:	490f      	ldr	r1, [pc, #60]	; (9000296c <_ZN20TouchGFXGeneratedHAL10initializeEv+0x8c>)
        bufferRGB = buffer;
9000292e:	4a10      	ldr	r2, [pc, #64]	; (90002970 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x90>)
90002930:	644c      	str	r4, [r1, #68]	; 0x44
        mjpegDecoders[index] = &decoder;
90002932:	6059      	str	r1, [r3, #4]
        bufferRGB = buffer;
90002934:	631a      	str	r2, [r3, #48]	; 0x30
        sizeBufferRGB = sizeOfBuffer;
90002936:	e9c3 020d 	strd	r0, r2, [r3, #52]	; 0x34
}
9000293a:	bd38      	pop	{r3, r4, r5, pc}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
9000293c:	4a0d      	ldr	r2, [pc, #52]	; (90002974 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x94>)
9000293e:	2300      	movs	r3, #0
90002940:	4620      	mov	r0, r4
90002942:	f5a2 317f 	sub.w	r1, r2, #261120	; 0x3fc00
90002946:	47a8      	blx	r5
90002948:	e7ec      	b.n	90002924 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x44>
        setAnimationStorage(animationStorage);
9000294a:	2100      	movs	r1, #0
9000294c:	4620      	mov	r0, r4
9000294e:	4798      	blx	r3
90002950:	e7e8      	b.n	90002924 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x44>
90002952:	bf00      	nop
90002954:	90000805 	.word	0x90000805
90002958:	d003fc00 	.word	0xd003fc00
9000295c:	2402357a 	.word	0x2402357a
90002960:	90000675 	.word	0x90000675
90002964:	2402357b 	.word	0x2402357b
90002968:	2400912c 	.word	0x2400912c
9000296c:	24009178 	.word	0x24009178
90002970:	d00bf400 	.word	0xd00bf400
90002974:	d007f800 	.word	0xd007f800

90002978 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
90002978:	b510      	push	{r4, lr}
        return instance;
9000297a:	4c14      	ldr	r4, [pc, #80]	; (900029cc <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
9000297c:	6823      	ldr	r3, [r4, #0]
9000297e:	b323      	cbz	r3, 900029ca <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
90002980:	4b13      	ldr	r3, [pc, #76]	; (900029d0 <HAL_LTDC_LineEventCallback+0x58>)
90002982:	4a14      	ldr	r2, [pc, #80]	; (900029d4 <HAL_LTDC_LineEventCallback+0x5c>)
90002984:	6c1b      	ldr	r3, [r3, #64]	; 0x40
90002986:	8811      	ldrh	r1, [r2, #0]
90002988:	428b      	cmp	r3, r1
9000298a:	d00a      	beq.n	900029a2 <HAL_LTDC_LineEventCallback+0x2a>
            GPIO::set(GPIO::VSYNC_FREQ);
        }
        else
        {
            //exiting active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
9000298c:	f007 fd46 	bl	9000a41c <HAL_LTDC_ProgramLineEvent>
90002990:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
90002992:	6803      	ldr	r3, [r0, #0]
90002994:	6a1b      	ldr	r3, [r3, #32]
90002996:	4798      	blx	r3

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
90002998:	2000      	movs	r0, #0
        }
    }
9000299a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
9000299e:	f7fd be0d 	b.w	900005bc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
900029a2:	4b0d      	ldr	r3, [pc, #52]	; (900029d8 <HAL_LTDC_LineEventCallback+0x60>)
900029a4:	8819      	ldrh	r1, [r3, #0]
900029a6:	f007 fd39 	bl	9000a41c <HAL_LTDC_ProgramLineEvent>
        return instance;
900029aa:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
900029ac:	f892 306a 	ldrb.w	r3, [r2, #106]	; 0x6a
900029b0:	3301      	adds	r3, #1
900029b2:	f882 306a 	strb.w	r3, [r2, #106]	; 0x6a
            OSWrappers::signalVSync();
900029b6:	f7ff f835 	bl	90001a24 <_ZN8touchgfx10OSWrappers11signalVSyncEv>
            HAL::getInstance()->swapFrameBuffers();
900029ba:	6820      	ldr	r0, [r4, #0]
900029bc:	f00e f8ea 	bl	90010b94 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            GPIO::set(GPIO::VSYNC_FREQ);
900029c0:	2000      	movs	r0, #0
    }
900029c2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
900029c6:	f7fd bdc5 	b.w	90000554 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
    }
900029ca:	bd10      	pop	{r4, pc}
900029cc:	2402357c 	.word	0x2402357c
900029d0:	50001000 	.word	0x50001000
900029d4:	24009176 	.word	0x24009176
900029d8:	24009174 	.word	0x24009174

900029dc <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv>:
    void decoderTaskEntry()
900029dc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900029e0:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 90002a9c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0xc0>
900029e4:	b083      	sub	sp, #12
                    stream.doInvalidateOnNextTick = true;
900029e6:	2601      	movs	r6, #1
                    stream.hasMoreFrames = decoder->decodeNextFrame((uint8_t*)decodeBuffers[i], width, height, stride);
900029e8:	f44f 7770 	mov.w	r7, #960	; 0x3c0
    void decoderTaskEntry()
900029ec:	4604      	mov	r4, r0
900029ee:	e024      	b.n	90002a3a <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x5e>
                        decoder->gotoFrame(stream.seek_to_frame);
900029f0:	682b      	ldr	r3, [r5, #0]
900029f2:	4628      	mov	r0, r5
900029f4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
900029f6:	4798      	blx	r3
                        stream.seek_to_frame = 0;
900029f8:	2300      	movs	r3, #0
900029fa:	6223      	str	r3, [r4, #32]
                    stream.hasMoreFrames = decoder->decodeNextFrame((uint8_t*)decodeBuffers[i], width, height, stride);
900029fc:	6829      	ldr	r1, [r5, #0]
900029fe:	f44f 7390 	mov.w	r3, #288	; 0x120
90002a02:	9700      	str	r7, [sp, #0]
90002a04:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
90002a08:	f8d1 9014 	ldr.w	r9, [r1, #20]
90002a0c:	4628      	mov	r0, r5
90002a0e:	68a1      	ldr	r1, [r4, #8]
90002a10:	47c8      	blx	r9
                    stream.frameCount++;
90002a12:	6923      	ldr	r3, [r4, #16]
                    stream.hasMoreFrames = decoder->decodeNextFrame((uint8_t*)decodeBuffers[i], width, height, stride);
90002a14:	f884 002c 	strb.w	r0, [r4, #44]	; 0x2c
                    stream.frameCount++;
90002a18:	3301      	adds	r3, #1
90002a1a:	6123      	str	r3, [r4, #16]
                    if (stream.hasMoreFrames)
90002a1c:	2800      	cmp	r0, #0
90002a1e:	d033      	beq.n	90002a88 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0xac>
                        stream.frameNumber = decoder->getCurrentFrameNumber() - 1; // Points to frame after this
90002a20:	682b      	ldr	r3, [r5, #0]
90002a22:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90002a24:	4543      	cmp	r3, r8
90002a26:	d131      	bne.n	90002a8c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0xb0>
        return frameNumber;
90002a28:	6968      	ldr	r0, [r5, #20]
90002a2a:	3801      	subs	r0, #1
                    stream.doDecode = false;
90002a2c:	2200      	movs	r2, #0
                        stream.frameNumber = decoder->getCurrentFrameNumber() - 1; // Points to frame after this
90002a2e:	60e0      	str	r0, [r4, #12]
                    stream.doDecode = false;
90002a30:	f884 202e 	strb.w	r2, [r4, #46]	; 0x2e
            MUTEX_UNLOCK(mutexBuffers);
90002a34:	6c60      	ldr	r0, [r4, #68]	; 0x44
90002a36:	f00a f869 	bl	9000cb0c <osMutexRelease>
            SEM_WAIT(semDecode);
90002a3a:	f04f 31ff 	mov.w	r1, #4294967295
90002a3e:	6c20      	ldr	r0, [r4, #64]	; 0x40
90002a40:	f00a f8d6 	bl	9000cbf0 <osSemaphoreAcquire>
            MUTEX_LOCK(mutexBuffers);
90002a44:	f04f 31ff 	mov.w	r1, #4294967295
90002a48:	6c60      	ldr	r0, [r4, #68]	; 0x44
90002a4a:	f00a f83b 	bl	9000cac4 <osMutexAcquire>
                if (stream.doDecode)
90002a4e:	f894 302e 	ldrb.w	r3, [r4, #46]	; 0x2e
90002a52:	2b00      	cmp	r3, #0
90002a54:	d0ee      	beq.n	90002a34 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x58>
                    if (stream.seek_to_frame > 0)
90002a56:	6a21      	ldr	r1, [r4, #32]
                    MJPEGDecoder* const decoder = mjpegDecoders[i];
90002a58:	6865      	ldr	r5, [r4, #4]
                    stream.doInvalidateOnNextTick = true;
90002a5a:	f884 602b 	strb.w	r6, [r4, #43]	; 0x2b
                    if (stream.seek_to_frame > 0)
90002a5e:	2900      	cmp	r1, #0
90002a60:	d1c6      	bne.n	900029f0 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x14>
                        if (stream.skip_frames > 0)
90002a62:	6a63      	ldr	r3, [r4, #36]	; 0x24
90002a64:	2b00      	cmp	r3, #0
90002a66:	d0c9      	beq.n	900029fc <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x20>
                            decoder->gotoFrame(decoder->getCurrentFrameNumber() + stream.skip_frames);
90002a68:	682a      	ldr	r2, [r5, #0]
90002a6a:	e9d2 9109 	ldrd	r9, r1, [r2, #36]	; 0x24
90002a6e:	4541      	cmp	r1, r8
90002a70:	d10f      	bne.n	90002a92 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0xb6>
90002a72:	6968      	ldr	r0, [r5, #20]
90002a74:	18c1      	adds	r1, r0, r3
90002a76:	4628      	mov	r0, r5
90002a78:	47c8      	blx	r9
                            stream.frameCount += stream.skip_frames;
90002a7a:	6923      	ldr	r3, [r4, #16]
90002a7c:	6a61      	ldr	r1, [r4, #36]	; 0x24
                            stream.skip_frames = 0;
90002a7e:	2200      	movs	r2, #0
                            stream.frameCount += stream.skip_frames;
90002a80:	440b      	add	r3, r1
                            stream.skip_frames = 0;
90002a82:	6262      	str	r2, [r4, #36]	; 0x24
                            stream.frameCount += stream.skip_frames;
90002a84:	6123      	str	r3, [r4, #16]
90002a86:	e7b9      	b.n	900029fc <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x20>
90002a88:	2001      	movs	r0, #1
90002a8a:	e7cf      	b.n	90002a2c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x50>
                        stream.frameNumber = decoder->getCurrentFrameNumber() - 1; // Points to frame after this
90002a8c:	4628      	mov	r0, r5
90002a8e:	4798      	blx	r3
90002a90:	e7cb      	b.n	90002a2a <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x4e>
                            decoder->gotoFrame(decoder->getCurrentFrameNumber() + stream.skip_frames);
90002a92:	4628      	mov	r0, r5
90002a94:	4788      	blx	r1
90002a96:	6a63      	ldr	r3, [r4, #36]	; 0x24
90002a98:	e7ec      	b.n	90002a74 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x98>
90002a9a:	bf00      	nop
90002a9c:	9000097d 	.word	0x9000097d

90002aa0 <videoTaskFunc>:
    videoController.decoderTaskEntry();
90002aa0:	4801      	ldr	r0, [pc, #4]	; (90002aa8 <videoTaskFunc+0x8>)
{
90002aa2:	b508      	push	{r3, lr}
    videoController.decoderTaskEntry();
90002aa4:	f7ff ff9a 	bl	900029dc <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv>
90002aa8:	2400912c 	.word	0x2400912c

90002aac <_GLOBAL__sub_I_mjpegdecoder1>:
}
90002aac:	b538      	push	{r3, r4, r5, lr}
HardwareMJPEGDecoder mjpegdecoder1;
90002aae:	4815      	ldr	r0, [pc, #84]	; (90002b04 <_GLOBAL__sub_I_mjpegdecoder1+0x58>)
        Stream() : frameNumber(0), frameCount(0), tickCount(0), frame_rate_video(0), frame_rate_ticks(0),
90002ab0:	2500      	movs	r5, #0
90002ab2:	f7fe fb57 	bl	90001164 <_ZN20HardwareMJPEGDecoderC1Ev>
          allowSkipFrames(false), firstDrawThisFrame(true), uiHasMutex(false), semDecode(0), mutexBuffers(0)
90002ab6:	4c14      	ldr	r4, [pc, #80]	; (90002b08 <_GLOBAL__sub_I_mjpegdecoder1+0x5c>)
90002ab8:	4914      	ldr	r1, [pc, #80]	; (90002b0c <_GLOBAL__sub_I_mjpegdecoder1+0x60>)
            doInvalidateOnNextTick(false), hasMoreFrames(false), repeat(true), doDecode(false) {}
90002aba:	f44f 7380 	mov.w	r3, #256	; 0x100
        semDecode = SEM_CREATE(); // Binary semaphore
90002abe:	462a      	mov	r2, r5
90002ac0:	2001      	movs	r0, #1
          allowSkipFrames(false), firstDrawThisFrame(true), uiHasMutex(false), semDecode(0), mutexBuffers(0)
90002ac2:	6021      	str	r1, [r4, #0]
        semDecode = SEM_CREATE(); // Binary semaphore
90002ac4:	4629      	mov	r1, r5
            doInvalidateOnNextTick(false), hasMoreFrames(false), repeat(true), doDecode(false) {}
90002ac6:	85a3      	strh	r3, [r4, #44]	; 0x2c
          allowSkipFrames(false), firstDrawThisFrame(true), uiHasMutex(false), semDecode(0), mutexBuffers(0)
90002ac8:	87a3      	strh	r3, [r4, #60]	; 0x3c
        Stream() : frameNumber(0), frameCount(0), tickCount(0), frame_rate_video(0), frame_rate_ticks(0),
90002aca:	60e5      	str	r5, [r4, #12]
            isActive(false), isPlaying(false), isShowingOneFrame(false),
90002acc:	62a5      	str	r5, [r4, #40]	; 0x28
            doInvalidateOnNextTick(false), hasMoreFrames(false), repeat(true), doDecode(false) {}
90002ace:	f884 502e 	strb.w	r5, [r4, #46]	; 0x2e
        : VideoController(), bufferRGB(0), sizeBufferRGB(0), topBufferRGB(0),
90002ad2:	63a5      	str	r5, [r4, #56]	; 0x38
          allowSkipFrames(false), firstDrawThisFrame(true), uiHasMutex(false), semDecode(0), mutexBuffers(0)
90002ad4:	f884 503e 	strb.w	r5, [r4, #62]	; 0x3e
        Stream() : frameNumber(0), frameCount(0), tickCount(0), frame_rate_video(0), frame_rate_ticks(0),
90002ad8:	e9c4 5504 	strd	r5, r5, [r4, #16]
90002adc:	e9c4 5506 	strd	r5, r5, [r4, #24]
            seek_to_frame(0), skip_frames(0),
90002ae0:	e9c4 5508 	strd	r5, r5, [r4, #32]
        : VideoController(), bufferRGB(0), sizeBufferRGB(0), topBufferRGB(0),
90002ae4:	e9c4 550c 	strd	r5, r5, [r4, #48]	; 0x30
          allowSkipFrames(false), firstDrawThisFrame(true), uiHasMutex(false), semDecode(0), mutexBuffers(0)
90002ae8:	e9c4 5510 	strd	r5, r5, [r4, #64]	; 0x40
90002aec:	e9c4 5501 	strd	r5, r5, [r4, #4]
        semDecode = SEM_CREATE(); // Binary semaphore
90002af0:	f00a f82e 	bl	9000cb50 <osSemaphoreNew>
90002af4:	4603      	mov	r3, r0
        mutexBuffers = MUTEX_CREATE();
90002af6:	4628      	mov	r0, r5
        semDecode = SEM_CREATE(); // Binary semaphore
90002af8:	6423      	str	r3, [r4, #64]	; 0x40
        mutexBuffers = MUTEX_CREATE();
90002afa:	f009 ffa3 	bl	9000ca44 <osMutexNew>
90002afe:	6460      	str	r0, [r4, #68]	; 0x44
}
90002b00:	bd38      	pop	{r3, r4, r5, pc}
90002b02:	bf00      	nop
90002b04:	24009178 	.word	0x24009178
90002b08:	2400912c 	.word	0x2400912c
90002b0c:	9002899c 	.word	0x9002899c

90002b10 <vApplicationIdleHook>:
   vTaskDelete() API function (as this demo application does) then it is also
   important that vApplicationIdleHook() is permitted to return to its calling
   function, because it is the responsibility of the idle task to clean up
   memory allocated by the kernel to any task that has since been deleted. */
  
  vTaskSetApplicationTaskTag(NULL, IdleTaskHook);
90002b10:	4901      	ldr	r1, [pc, #4]	; (90002b18 <vApplicationIdleHook+0x8>)
90002b12:	2000      	movs	r0, #0
90002b14:	f00c babe 	b.w	9000f094 <vTaskSetApplicationTaskTag>
90002b18:	90000959 	.word	0x90000959

90002b1c <asteroidsTaskFunction>:
/* USER CODE END Header_asteroidsTaskFunction */
void asteroidsTaskFunction(void *argument)
{
  /* USER CODE BEGIN asteroidsTaskFunction */

	volatile osStatus_t status = osThreadSuspend(asteroidsTaskHandle);
90002b1c:	4b0e      	ldr	r3, [pc, #56]	; (90002b58 <asteroidsTaskFunction+0x3c>)

  /* Infinite loop */
  for(;;)
  {
	 HAL_GPIO_WritePin(LED_RED_GPIO_Port, LED_RED_Pin, GPIO_PIN_SET);
90002b1e:	4c0f      	ldr	r4, [pc, #60]	; (90002b5c <asteroidsTaskFunction+0x40>)
	volatile osStatus_t status = osThreadSuspend(asteroidsTaskHandle);
90002b20:	6818      	ldr	r0, [r3, #0]
{
90002b22:	b500      	push	{lr}
90002b24:	b083      	sub	sp, #12
	volatile osStatus_t status = osThreadSuspend(asteroidsTaskHandle);
90002b26:	f009 ff5f 	bl	9000c9e8 <osThreadSuspend>
90002b2a:	9001      	str	r0, [sp, #4]
	 HAL_GPIO_WritePin(LED_RED_GPIO_Port, LED_RED_Pin, GPIO_PIN_SET);
90002b2c:	2201      	movs	r2, #1
90002b2e:	f44f 5100 	mov.w	r1, #8192	; 0x2000
90002b32:	4620      	mov	r0, r4
90002b34:	f005 faa6 	bl	90008084 <HAL_GPIO_WritePin>
	 osDelay(1000);
90002b38:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
90002b3c:	f009 ff74 	bl	9000ca28 <osDelay>
	 HAL_GPIO_WritePin(LED_RED_GPIO_Port, LED_RED_Pin, GPIO_PIN_RESET);
90002b40:	4620      	mov	r0, r4
90002b42:	2200      	movs	r2, #0
90002b44:	f44f 5100 	mov.w	r1, #8192	; 0x2000
90002b48:	f005 fa9c 	bl	90008084 <HAL_GPIO_WritePin>
	 osDelay(1000);
90002b4c:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
90002b50:	f009 ff6a 	bl	9000ca28 <osDelay>
  for(;;)
90002b54:	e7ea      	b.n	90002b2c <asteroidsTaskFunction+0x10>
90002b56:	bf00      	nop
90002b58:	240091c4 	.word	0x240091c4
90002b5c:	58022000 	.word	0x58022000

90002b60 <StartDefaultTask>:
{
90002b60:	4d11      	ldr	r5, [pc, #68]	; (90002ba8 <StartDefaultTask+0x48>)
90002b62:	4e12      	ldr	r6, [pc, #72]	; (90002bac <StartDefaultTask+0x4c>)
90002b64:	4c12      	ldr	r4, [pc, #72]	; (90002bb0 <StartDefaultTask+0x50>)
90002b66:	b508      	push	{r3, lr}
90002b68:	e006      	b.n	90002b78 <StartDefaultTask+0x18>
	if( osSemaphoreGetCount(resumeAsteroidsTaskSemaphoreHandle) == 0 )
90002b6a:	6820      	ldr	r0, [r4, #0]
90002b6c:	f00a f8a0 	bl	9000ccb0 <osSemaphoreGetCount>
90002b70:	b190      	cbz	r0, 90002b98 <StartDefaultTask+0x38>
	  osDelay(100);
90002b72:	2064      	movs	r0, #100	; 0x64
90002b74:	f009 ff58 	bl	9000ca28 <osDelay>
	if( osSemaphoreGetCount(suspendAsteroidsTaskSemaphoreHandle) == 0 )
90002b78:	6828      	ldr	r0, [r5, #0]
90002b7a:	f00a f899 	bl	9000ccb0 <osSemaphoreGetCount>
90002b7e:	2800      	cmp	r0, #0
90002b80:	d1f3      	bne.n	90002b6a <StartDefaultTask+0xa>
		osSemaphoreRelease(suspendAsteroidsTaskSemaphoreHandle);
90002b82:	6828      	ldr	r0, [r5, #0]
90002b84:	f00a f868 	bl	9000cc58 <osSemaphoreRelease>
		osThreadSuspend(asteroidsTaskHandle);
90002b88:	6830      	ldr	r0, [r6, #0]
90002b8a:	f009 ff2d 	bl	9000c9e8 <osThreadSuspend>
	if( osSemaphoreGetCount(resumeAsteroidsTaskSemaphoreHandle) == 0 )
90002b8e:	6820      	ldr	r0, [r4, #0]
90002b90:	f00a f88e 	bl	9000ccb0 <osSemaphoreGetCount>
90002b94:	2800      	cmp	r0, #0
90002b96:	d1ec      	bne.n	90002b72 <StartDefaultTask+0x12>
		osSemaphoreRelease(resumeAsteroidsTaskSemaphoreHandle);
90002b98:	6820      	ldr	r0, [r4, #0]
90002b9a:	f00a f85d 	bl	9000cc58 <osSemaphoreRelease>
		osThreadResume(asteroidsTaskHandle);
90002b9e:	6830      	ldr	r0, [r6, #0]
90002ba0:	f009 ff32 	bl	9000ca08 <osThreadResume>
}
90002ba4:	e7e5      	b.n	90002b72 <StartDefaultTask+0x12>
90002ba6:	bf00      	nop
90002ba8:	24009468 	.word	0x24009468
90002bac:	240091c4 	.word	0x240091c4
90002bb0:	24009464 	.word	0x24009464

90002bb4 <SystemClock_Config>:
{
90002bb4:	b570      	push	{r4, r5, r6, lr}
90002bb6:	b09e      	sub	sp, #120	; 0x78
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
90002bb8:	224c      	movs	r2, #76	; 0x4c
90002bba:	2100      	movs	r1, #0
90002bbc:	a80a      	add	r0, sp, #40	; 0x28
90002bbe:	f023 fc9f 	bl	90026500 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
90002bc2:	2220      	movs	r2, #32
90002bc4:	2100      	movs	r1, #0
90002bc6:	a802      	add	r0, sp, #8
90002bc8:	f023 fc9a 	bl	90026500 <memset>
  HAL_PWREx_ConfigSupply(PWR_LDO_SUPPLY);
90002bcc:	2002      	movs	r0, #2
90002bce:	f007 fe63 	bl	9000a898 <HAL_PWREx_ConfigSupply>
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
90002bd2:	4b22      	ldr	r3, [pc, #136]	; (90002c5c <SystemClock_Config+0xa8>)
90002bd4:	2100      	movs	r1, #0
90002bd6:	4a22      	ldr	r2, [pc, #136]	; (90002c60 <SystemClock_Config+0xac>)
90002bd8:	9101      	str	r1, [sp, #4]
90002bda:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
90002bdc:	f021 0101 	bic.w	r1, r1, #1
90002be0:	62d9      	str	r1, [r3, #44]	; 0x2c
90002be2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90002be4:	f003 0301 	and.w	r3, r3, #1
90002be8:	9301      	str	r3, [sp, #4]
90002bea:	6993      	ldr	r3, [r2, #24]
90002bec:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
90002bf0:	6193      	str	r3, [r2, #24]
90002bf2:	6993      	ldr	r3, [r2, #24]
90002bf4:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
90002bf8:	9301      	str	r3, [sp, #4]
90002bfa:	9b01      	ldr	r3, [sp, #4]
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
90002bfc:	6993      	ldr	r3, [r2, #24]
90002bfe:	0499      	lsls	r1, r3, #18
90002c00:	d5fc      	bpl.n	90002bfc <SystemClock_Config+0x48>
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
90002c02:	2201      	movs	r2, #1
90002c04:	f44f 3380 	mov.w	r3, #65536	; 0x10000
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
90002c08:	2402      	movs	r4, #2
  RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_2;
90002c0a:	2608      	movs	r6, #8
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
90002c0c:	2500      	movs	r5, #0
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
90002c0e:	a80a      	add	r0, sp, #40	; 0x28
  RCC_OscInitStruct.PLL.PLLP = 2;
90002c10:	9417      	str	r4, [sp, #92]	; 0x5c
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
90002c12:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
  RCC_OscInitStruct.PLL.PLLN = 160;
90002c16:	2205      	movs	r2, #5
90002c18:	23a0      	movs	r3, #160	; 0xa0
90002c1a:	e9cd 2315 	strd	r2, r3, [sp, #84]	; 0x54
  RCC_OscInitStruct.PLL.PLLQ = 4;
90002c1e:	2304      	movs	r3, #4
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
90002c20:	e9cd 4413 	strd	r4, r4, [sp, #76]	; 0x4c
  RCC_OscInitStruct.PLL.PLLQ = 4;
90002c24:	9318      	str	r3, [sp, #96]	; 0x60
  RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_2;
90002c26:	e9cd 4619 	strd	r4, r6, [sp, #100]	; 0x64
  RCC_OscInitStruct.PLL.PLLFRACN = 0;
90002c2a:	e9cd 551b 	strd	r5, r5, [sp, #108]	; 0x6c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
90002c2e:	f007 fedb 	bl	9000a9e8 <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
90002c32:	2340      	movs	r3, #64	; 0x40
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
90002c34:	223f      	movs	r2, #63	; 0x3f
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
90002c36:	4621      	mov	r1, r4
  RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
90002c38:	9307      	str	r3, [sp, #28]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
90002c3a:	eb0d 0006 	add.w	r0, sp, r6
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
90002c3e:	9202      	str	r2, [sp, #8]
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
90002c40:	2203      	movs	r2, #3
  RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
90002c42:	9309      	str	r3, [sp, #36]	; 0x24
  RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
90002c44:	9504      	str	r5, [sp, #16]
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
90002c46:	9203      	str	r2, [sp, #12]
  RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
90002c48:	e9cd 6305 	strd	r6, r3, [sp, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
90002c4c:	f44f 6380 	mov.w	r3, #1024	; 0x400
90002c50:	9308      	str	r3, [sp, #32]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
90002c52:	f008 fa5d 	bl	9000b110 <HAL_RCC_ClockConfig>
}
90002c56:	b01e      	add	sp, #120	; 0x78
90002c58:	bd70      	pop	{r4, r5, r6, pc}
90002c5a:	bf00      	nop
90002c5c:	58000400 	.word	0x58000400
90002c60:	58024800 	.word	0x58024800

90002c64 <main>:
{
90002c64:	b580      	push	{r7, lr}

/* MPU Configuration */

void MPU_Config(void)
{
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
90002c66:	2400      	movs	r4, #0
{
90002c68:	b098      	sub	sp, #96	; 0x60
  /* Disables the MPU */
  HAL_MPU_Disable();

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
90002c6a:	2501      	movs	r5, #1

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER1;
  MPU_InitStruct.BaseAddress = 0x90000000;
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
90002c6c:	271b      	movs	r7, #27

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
  MPU_InitStruct.Size = MPU_REGION_SIZE_128MB;
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
90002c6e:	2603      	movs	r6, #3
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
90002c70:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
90002c74:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  HAL_MPU_Disable();
90002c78:	f004 fdf6 	bl	90007868 <HAL_MPU_Disable>
  MPU_InitStruct.BaseAddress = 0x24000000;
90002c7c:	f04f 5310 	mov.w	r3, #603979776	; 0x24000000
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
90002c80:	49d4      	ldr	r1, [pc, #848]	; (90002fd4 <main+0x370>)
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002c82:	a80b      	add	r0, sp, #44	; 0x2c
  MPU_InitStruct.BaseAddress = 0x24000000;
90002c84:	930c      	str	r3, [sp, #48]	; 0x30
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
90002c86:	4bd4      	ldr	r3, [pc, #848]	; (90002fd8 <main+0x374>)
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
90002c88:	f8ad 502c 	strh.w	r5, [sp, #44]	; 0x2c
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
90002c8c:	e9cd 130d 	strd	r1, r3, [sp, #52]	; 0x34
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002c90:	f004 fe08 	bl	900078a4 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.BaseAddress = 0x90000000;
90002c94:	f04f 4310 	mov.w	r3, #2415919104	; 0x90000000
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002c98:	a80b      	add	r0, sp, #44	; 0x2c
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
90002c9a:	f88d 4037 	strb.w	r4, [sp, #55]	; 0x37
  MPU_InitStruct.BaseAddress = 0x90000000;
90002c9e:	930c      	str	r3, [sp, #48]	; 0x30
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
90002ca0:	f8ad 403a 	strh.w	r4, [sp, #58]	; 0x3a
  MPU_InitStruct.Number = MPU_REGION_NUMBER1;
90002ca4:	f88d 502d 	strb.w	r5, [sp, #45]	; 0x2d
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
90002ca8:	f88d 7034 	strb.w	r7, [sp, #52]	; 0x34
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002cac:	f004 fdfa 	bl	900078a4 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
90002cb0:	2302      	movs	r3, #2
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_ENABLE;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
  MPU_InitStruct.IsBufferable = MPU_ACCESS_BUFFERABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002cb2:	a80b      	add	r0, sp, #44	; 0x2c
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
90002cb4:	f8ad 6037 	strh.w	r6, [sp, #55]	; 0x37
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
90002cb8:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
  MPU_InitStruct.Size = MPU_REGION_SIZE_128MB;
90002cbc:	231a      	movs	r3, #26
90002cbe:	f88d 3034 	strb.w	r3, [sp, #52]	; 0x34
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
90002cc2:	f240 1301 	movw	r3, #257	; 0x101
90002cc6:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002cca:	f004 fdeb 	bl	900078a4 <HAL_MPU_ConfigRegion>
  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER3;
  MPU_InitStruct.BaseAddress = 0xD0000000;
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
90002cce:	f44f 7380 	mov.w	r3, #256	; 0x100
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_DISABLE;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
  MPU_InitStruct.IsBufferable = MPU_ACCESS_NOT_BUFFERABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002cd2:	a80b      	add	r0, sp, #44	; 0x2c
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
90002cd4:	f8ad 403a 	strh.w	r4, [sp, #58]	; 0x3a

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER4;
90002cd8:	2404      	movs	r4, #4
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
90002cda:	f8ad 3037 	strh.w	r3, [sp, #55]	; 0x37
  MPU_InitStruct.BaseAddress = 0xD0000000;
90002cde:	f04f 4350 	mov.w	r3, #3489660928	; 0xd0000000
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
90002ce2:	f88d 7034 	strb.w	r7, [sp, #52]	; 0x34
  MPU_InitStruct.BaseAddress = 0xD0000000;
90002ce6:	930c      	str	r3, [sp, #48]	; 0x30
  MPU_InitStruct.Number = MPU_REGION_NUMBER3;
90002ce8:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002cec:	f004 fdda 	bl	900078a4 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.Size = MPU_REGION_SIZE_32MB;
90002cf0:	2318      	movs	r3, #24
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002cf2:	a80b      	add	r0, sp, #44	; 0x2c
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
90002cf4:	f88d 6037 	strb.w	r6, [sp, #55]	; 0x37
  MPU_InitStruct.Size = MPU_REGION_SIZE_32MB;
90002cf8:	f88d 3034 	strb.w	r3, [sp, #52]	; 0x34
  MPU_InitStruct.Number = MPU_REGION_NUMBER4;
90002cfc:	f88d 402d 	strb.w	r4, [sp, #45]	; 0x2d
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
90002d00:	f88d 503a 	strb.w	r5, [sp, #58]	; 0x3a
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002d04:	f004 fdce 	bl	900078a4 <HAL_MPU_ConfigRegion>
  /* Enables the MPU */
  HAL_MPU_Enable(MPU_PRIVILEGED_DEFAULT);
90002d08:	4620      	mov	r0, r4
90002d0a:	f004 fdbb 	bl	90007884 <HAL_MPU_Enable>
    if (SCB->CCR & SCB_CCR_IC_Msk) return;  /* return if ICache is already enabled */
90002d0e:	4ab3      	ldr	r2, [pc, #716]	; (90002fdc <main+0x378>)
90002d10:	6953      	ldr	r3, [r2, #20]
90002d12:	f413 3300 	ands.w	r3, r3, #131072	; 0x20000
90002d16:	d111      	bne.n	90002d3c <main+0xd8>
  __ASM volatile ("dsb 0xF":::"memory");
90002d18:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90002d1c:	f3bf 8f6f 	isb	sy
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
90002d20:	f8c2 3250 	str.w	r3, [r2, #592]	; 0x250
  __ASM volatile ("dsb 0xF":::"memory");
90002d24:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90002d28:	f3bf 8f6f 	isb	sy
    SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
90002d2c:	6953      	ldr	r3, [r2, #20]
90002d2e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
90002d32:	6153      	str	r3, [r2, #20]
  __ASM volatile ("dsb 0xF":::"memory");
90002d34:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90002d38:	f3bf 8f6f 	isb	sy
    if (SCB->CCR & SCB_CCR_DC_Msk) return;  /* return if DCache is already enabled */
90002d3c:	48a7      	ldr	r0, [pc, #668]	; (90002fdc <main+0x378>)
90002d3e:	6943      	ldr	r3, [r0, #20]
90002d40:	f413 3380 	ands.w	r3, r3, #65536	; 0x10000
90002d44:	d124      	bne.n	90002d90 <main+0x12c>
    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
90002d46:	f8c0 3084 	str.w	r3, [r0, #132]	; 0x84
  __ASM volatile ("dsb 0xF":::"memory");
90002d4a:	f3bf 8f4f 	dsb	sy
    ccsidr = SCB->CCSIDR;
90002d4e:	f8d0 5080 	ldr.w	r5, [r0, #128]	; 0x80
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90002d52:	f643 76e0 	movw	r6, #16352	; 0x3fe0
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
90002d56:	f3c5 344e 	ubfx	r4, r5, #13, #15
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90002d5a:	f3c5 05c9 	ubfx	r5, r5, #3, #10
90002d5e:	0164      	lsls	r4, r4, #5
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90002d60:	ea04 0106 	and.w	r1, r4, r6
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90002d64:	462b      	mov	r3, r5
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90002d66:	ea41 7283 	orr.w	r2, r1, r3, lsl #30
      } while (ways-- != 0U);
90002d6a:	3b01      	subs	r3, #1
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90002d6c:	f8c0 2260 	str.w	r2, [r0, #608]	; 0x260
      } while (ways-- != 0U);
90002d70:	1c5a      	adds	r2, r3, #1
90002d72:	d1f8      	bne.n	90002d66 <main+0x102>
    } while(sets-- != 0U);
90002d74:	3c20      	subs	r4, #32
90002d76:	f114 0f20 	cmn.w	r4, #32
90002d7a:	d1f1      	bne.n	90002d60 <main+0xfc>
90002d7c:	f3bf 8f4f 	dsb	sy
    SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
90002d80:	6943      	ldr	r3, [r0, #20]
90002d82:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
90002d86:	6143      	str	r3, [r0, #20]
90002d88:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90002d8c:	f3bf 8f6f 	isb	sy
  HAL_Init();
90002d90:	f004 fcb2 	bl	900076f8 <HAL_Init>
  SystemClock_Config();
90002d94:	f7ff ff0e 	bl	90002bb4 <SystemClock_Config>
  __ASM volatile ("cpsie i" : : : "memory");
90002d98:	b662      	cpsie	i
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90002d9a:	2400      	movs	r4, #0
  __HAL_RCC_GPIOK_CLK_ENABLE();
90002d9c:	4d90      	ldr	r5, [pc, #576]	; (90002fe0 <main+0x37c>)
  HAL_GPIO_WritePin(GPIOB, FRAME_RATE_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
90002d9e:	21c0      	movs	r1, #192	; 0xc0
90002da0:	4890      	ldr	r0, [pc, #576]	; (90002fe4 <main+0x380>)
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90002da2:	940f      	str	r4, [sp, #60]	; 0x3c
  HAL_GPIO_WritePin(GPIOB, FRAME_RATE_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
90002da4:	4622      	mov	r2, r4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90002da6:	2601      	movs	r6, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90002da8:	f04f 0903 	mov.w	r9, #3
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin;
90002dac:	2708      	movs	r7, #8
  GPIO_InitStruct.Pin = LCD_RESET_Pin;
90002dae:	f04f 0804 	mov.w	r8, #4
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
90002db2:	f04f 0a05 	mov.w	sl, #5
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90002db6:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
90002dba:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  __HAL_RCC_GPIOK_CLK_ENABLE();
90002dbe:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002dc2:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
90002dc6:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002dca:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002dce:	f403 6380 	and.w	r3, r3, #1024	; 0x400
90002dd2:	9301      	str	r3, [sp, #4]
90002dd4:	9b01      	ldr	r3, [sp, #4]
  __HAL_RCC_GPIOG_CLK_ENABLE();
90002dd6:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002dda:	f043 0340 	orr.w	r3, r3, #64	; 0x40
90002dde:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002de2:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002de6:	f003 0340 	and.w	r3, r3, #64	; 0x40
90002dea:	9302      	str	r3, [sp, #8]
90002dec:	9b02      	ldr	r3, [sp, #8]
  __HAL_RCC_GPIOI_CLK_ENABLE();
90002dee:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002df2:	f443 7380 	orr.w	r3, r3, #256	; 0x100
90002df6:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002dfa:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002dfe:	f403 7380 	and.w	r3, r3, #256	; 0x100
90002e02:	9303      	str	r3, [sp, #12]
90002e04:	9b03      	ldr	r3, [sp, #12]
  __HAL_RCC_GPIOE_CLK_ENABLE();
90002e06:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002e0a:	f043 0310 	orr.w	r3, r3, #16
90002e0e:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002e12:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002e16:	f003 0310 	and.w	r3, r3, #16
90002e1a:	9304      	str	r3, [sp, #16]
90002e1c:	9b04      	ldr	r3, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
90002e1e:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002e22:	f043 0302 	orr.w	r3, r3, #2
90002e26:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002e2a:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002e2e:	f003 0302 	and.w	r3, r3, #2
90002e32:	9305      	str	r3, [sp, #20]
90002e34:	9b05      	ldr	r3, [sp, #20]
  __HAL_RCC_GPIOJ_CLK_ENABLE();
90002e36:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002e3a:	f443 7300 	orr.w	r3, r3, #512	; 0x200
90002e3e:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002e42:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002e46:	f403 7300 	and.w	r3, r3, #512	; 0x200
90002e4a:	9306      	str	r3, [sp, #24]
90002e4c:	9b06      	ldr	r3, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
90002e4e:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002e52:	f043 0308 	orr.w	r3, r3, #8
90002e56:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002e5a:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002e5e:	f003 0308 	and.w	r3, r3, #8
90002e62:	9307      	str	r3, [sp, #28]
90002e64:	9b07      	ldr	r3, [sp, #28]
  __HAL_RCC_GPIOF_CLK_ENABLE();
90002e66:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002e6a:	f043 0320 	orr.w	r3, r3, #32
90002e6e:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002e72:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002e76:	f003 0320 	and.w	r3, r3, #32
90002e7a:	9308      	str	r3, [sp, #32]
90002e7c:	9b08      	ldr	r3, [sp, #32]
  __HAL_RCC_GPIOH_CLK_ENABLE();
90002e7e:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002e82:	f043 0380 	orr.w	r3, r3, #128	; 0x80
90002e86:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002e8a:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002e8e:	f003 0380 	and.w	r3, r3, #128	; 0x80
90002e92:	9309      	str	r3, [sp, #36]	; 0x24
90002e94:	9b09      	ldr	r3, [sp, #36]	; 0x24
  __HAL_RCC_GPIOA_CLK_ENABLE();
90002e96:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002e9a:	f043 0301 	orr.w	r3, r3, #1
90002e9e:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002ea2:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002ea6:	f003 0301 	and.w	r3, r3, #1
90002eaa:	930a      	str	r3, [sp, #40]	; 0x28
90002eac:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  HAL_GPIO_WritePin(GPIOB, FRAME_RATE_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
90002eae:	f005 f8e9 	bl	90008084 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LCD_DE_GPIO_Port, LCD_DE_Pin, GPIO_PIN_RESET);
90002eb2:	4622      	mov	r2, r4
90002eb4:	2180      	movs	r1, #128	; 0x80
90002eb6:	484c      	ldr	r0, [pc, #304]	; (90002fe8 <main+0x384>)
90002eb8:	f005 f8e4 	bl	90008084 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LED_RED_GPIO_Port, LED_RED_Pin, GPIO_PIN_SET);
90002ebc:	f44f 5100 	mov.w	r1, #8192	; 0x2000
90002ec0:	484a      	ldr	r0, [pc, #296]	; (90002fec <main+0x388>)
90002ec2:	2201      	movs	r2, #1
90002ec4:	f005 f8de 	bl	90008084 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
90002ec8:	4622      	mov	r2, r4
90002eca:	2108      	movs	r1, #8
90002ecc:	4848      	ldr	r0, [pc, #288]	; (90002ff0 <main+0x38c>)
90002ece:	f005 f8d9 	bl	90008084 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LCD_BL_CTRL_GPIO_Port, LCD_BL_CTRL_Pin, GPIO_PIN_SET);
90002ed2:	2201      	movs	r2, #1
90002ed4:	4847      	ldr	r0, [pc, #284]	; (90002ff4 <main+0x390>)
90002ed6:	4611      	mov	r1, r2
90002ed8:	f005 f8d4 	bl	90008084 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOA, LCD_RESET_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
90002edc:	4622      	mov	r2, r4
90002ede:	2144      	movs	r1, #68	; 0x44
90002ee0:	4845      	ldr	r0, [pc, #276]	; (90002ff8 <main+0x394>)
90002ee2:	f005 f8cf 	bl	90008084 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Pin = FRAME_RATE_Pin|RENDER_TIME_Pin;
90002ee6:	23c0      	movs	r3, #192	; 0xc0
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
90002ee8:	a90b      	add	r1, sp, #44	; 0x2c
90002eea:	483e      	ldr	r0, [pc, #248]	; (90002fe4 <main+0x380>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90002eec:	e9cd 360b 	strd	r3, r6, [sp, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90002ef0:	e9cd 490d 	strd	r4, r9, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
90002ef4:	f004 fec6 	bl	90007c84 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = LCD_DE_Pin;
90002ef8:	2380      	movs	r3, #128	; 0x80
  HAL_GPIO_Init(LCD_DE_GPIO_Port, &GPIO_InitStruct);
90002efa:	a90b      	add	r1, sp, #44	; 0x2c
90002efc:	483a      	ldr	r0, [pc, #232]	; (90002fe8 <main+0x384>)
  GPIO_InitStruct.Pin = LCD_DE_Pin;
90002efe:	930b      	str	r3, [sp, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
90002f00:	940e      	str	r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90002f02:	e9cd 640c 	strd	r6, r4, [sp, #48]	; 0x30
  HAL_GPIO_Init(LCD_DE_GPIO_Port, &GPIO_InitStruct);
90002f06:	f004 febd 	bl	90007c84 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = LED_RED_Pin;
90002f0a:	f44f 5300 	mov.w	r3, #8192	; 0x2000
  HAL_GPIO_Init(LED_RED_GPIO_Port, &GPIO_InitStruct);
90002f0e:	a90b      	add	r1, sp, #44	; 0x2c
90002f10:	4836      	ldr	r0, [pc, #216]	; (90002fec <main+0x388>)
  GPIO_InitStruct.Pin = LED_RED_Pin;
90002f12:	930b      	str	r3, [sp, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
90002f14:	940e      	str	r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90002f16:	e9cd 640c 	strd	r6, r4, [sp, #48]	; 0x30
  HAL_GPIO_Init(LED_RED_GPIO_Port, &GPIO_InitStruct);
90002f1a:	f004 feb3 	bl	90007c84 <HAL_GPIO_Init>
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
90002f1e:	a90b      	add	r1, sp, #44	; 0x2c
90002f20:	4833      	ldr	r0, [pc, #204]	; (90002ff0 <main+0x38c>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90002f22:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin;
90002f26:	970b      	str	r7, [sp, #44]	; 0x2c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90002f28:	e9cd 640c 	strd	r6, r4, [sp, #48]	; 0x30
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
90002f2c:	f004 feaa 	bl	90007c84 <HAL_GPIO_Init>
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
90002f30:	a90b      	add	r1, sp, #44	; 0x2c
90002f32:	4830      	ldr	r0, [pc, #192]	; (90002ff4 <main+0x390>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90002f34:	e9cd 660b 	strd	r6, r6, [sp, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
90002f38:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
90002f3c:	f004 fea2 	bl	90007c84 <HAL_GPIO_Init>
  HAL_GPIO_Init(LCD_RESET_GPIO_Port, &GPIO_InitStruct);
90002f40:	a90b      	add	r1, sp, #44	; 0x2c
90002f42:	482d      	ldr	r0, [pc, #180]	; (90002ff8 <main+0x394>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90002f44:	e9cd 860b 	strd	r8, r6, [sp, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
90002f48:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  HAL_GPIO_Init(LCD_RESET_GPIO_Port, &GPIO_InitStruct);
90002f4c:	f004 fe9a 	bl	90007c84 <HAL_GPIO_Init>
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90002f50:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
  GPIO_InitStruct.Pin = MCU_ACTIVE_Pin;
90002f54:	f04f 0940 	mov.w	r9, #64	; 0x40
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
90002f58:	a90b      	add	r1, sp, #44	; 0x2c
90002f5a:	4827      	ldr	r0, [pc, #156]	; (90002ff8 <main+0x394>)
  GPIO_InitStruct.Pin = MCU_ACTIVE_Pin;
90002f5c:	f8cd 902c 	str.w	r9, [sp, #44]	; 0x2c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90002f60:	e9cd 640c 	strd	r6, r4, [sp, #48]	; 0x30
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
90002f64:	f004 fe8e 	bl	90007c84 <HAL_GPIO_Init>
  __HAL_RCC_MDMA_CLK_ENABLE();
90002f68:	f8d5 30d4 	ldr.w	r3, [r5, #212]	; 0xd4
  HAL_NVIC_SetPriority(MDMA_IRQn, 5, 0);
90002f6c:	4622      	mov	r2, r4
90002f6e:	2105      	movs	r1, #5
  __HAL_RCC_MDMA_CLK_ENABLE();
90002f70:	4333      	orrs	r3, r6
  HAL_NVIC_SetPriority(MDMA_IRQn, 5, 0);
90002f72:	207a      	movs	r0, #122	; 0x7a
  __HAL_RCC_MDMA_CLK_ENABLE();
90002f74:	f8c5 30d4 	str.w	r3, [r5, #212]	; 0xd4
90002f78:	f8d5 30d4 	ldr.w	r3, [r5, #212]	; 0xd4
  hltdc.Instance = LTDC;
90002f7c:	4d1f      	ldr	r5, [pc, #124]	; (90002ffc <main+0x398>)
  __HAL_RCC_MDMA_CLK_ENABLE();
90002f7e:	4033      	ands	r3, r6
90002f80:	9300      	str	r3, [sp, #0]
90002f82:	9b00      	ldr	r3, [sp, #0]
  HAL_NVIC_SetPriority(MDMA_IRQn, 5, 0);
90002f84:	f004 fc12 	bl	900077ac <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(MDMA_IRQn);
90002f88:	207a      	movs	r0, #122	; 0x7a
90002f8a:	f004 fc4d 	bl	90007828 <HAL_NVIC_EnableIRQ>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
90002f8e:	2234      	movs	r2, #52	; 0x34
90002f90:	4621      	mov	r1, r4
90002f92:	a80b      	add	r0, sp, #44	; 0x2c
90002f94:	f023 fab4 	bl	90026500 <memset>
  hltdc.Instance = LTDC;
90002f98:	4b19      	ldr	r3, [pc, #100]	; (90003000 <main+0x39c>)
  hltdc.Init.AccumulatedVBP = 11;
90002f9a:	202a      	movs	r0, #42	; 0x2a
  hltdc.Init.VerticalSync = 8;
90002f9c:	61af      	str	r7, [r5, #24]
  hltdc.Instance = LTDC;
90002f9e:	602b      	str	r3, [r5, #0]
  hltdc.Init.HorizontalSync = 39;
90002fa0:	2327      	movs	r3, #39	; 0x27
  hltdc.Init.AccumulatedActiveH = 283;
90002fa2:	f240 270a 	movw	r7, #522	; 0x20a
  hltdc.Init.TotalHeigh = 285;
90002fa6:	f44f 7c04 	mov.w	ip, #528	; 0x210
  hltdc.Init.HorizontalSync = 39;
90002faa:	616b      	str	r3, [r5, #20]
  hltdc.Init.AccumulatedVBP = 11;
90002fac:	230b      	movs	r3, #11
  hltdc.Init.Backcolor.Blue = 0;
90002fae:	86ac      	strh	r4, [r5, #52]	; 0x34
  hltdc.Init.Backcolor.Red = 0;
90002fb0:	f885 4036 	strb.w	r4, [r5, #54]	; 0x36
  hltdc.Init.AccumulatedVBP = 11;
90002fb4:	e9c5 0307 	strd	r0, r3, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 283;
90002fb8:	f240 131b 	movw	r3, #283	; 0x11b
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
90002fbc:	4628      	mov	r0, r5
  hltdc.Init.AccumulatedActiveH = 283;
90002fbe:	e9c5 7309 	strd	r7, r3, [r5, #36]	; 0x24
  hltdc.Init.TotalHeigh = 285;
90002fc2:	f240 131d 	movw	r3, #285	; 0x11d
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
90002fc6:	2702      	movs	r7, #2
  hltdc.Init.TotalHeigh = 285;
90002fc8:	e9c5 c30b 	strd	ip, r3, [r5, #44]	; 0x2c
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
90002fcc:	e9c5 4401 	strd	r4, r4, [r5, #4]
90002fd0:	e018      	b.n	90003004 <main+0x3a0>
90002fd2:	bf00      	nop
90002fd4:	03000012 	.word	0x03000012
90002fd8:	01010001 	.word	0x01010001
90002fdc:	e000ed00 	.word	0xe000ed00
90002fe0:	58024400 	.word	0x58024400
90002fe4:	58020400 	.word	0x58020400
90002fe8:	58020c00 	.word	0x58020c00
90002fec:	58022000 	.word	0x58022000
90002ff0:	58021800 	.word	0x58021800
90002ff4:	58022800 	.word	0x58022800
90002ff8:	58020000 	.word	0x58020000
90002ffc:	240092b0 	.word	0x240092b0
90003000:	50001000 	.word	0x50001000
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
90003004:	e9c5 4403 	strd	r4, r4, [r5, #12]
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
90003008:	f007 f862 	bl	9000a0d0 <HAL_LTDC_Init>
  pLayerCfg.WindowX1 = 480;
9000300c:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
90003010:	4622      	mov	r2, r4
90003012:	a90b      	add	r1, sp, #44	; 0x2c
  pLayerCfg.WindowX1 = 480;
90003014:	930c      	str	r3, [sp, #48]	; 0x30
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
90003016:	4628      	mov	r0, r5
  pLayerCfg.ImageWidth = 480;
90003018:	9315      	str	r3, [sp, #84]	; 0x54
  pLayerCfg.WindowY1 = 272;
9000301a:	f44f 7388 	mov.w	r3, #272	; 0x110
  hdma2d.Instance = DMA2D;
9000301e:	4d4c      	ldr	r5, [pc, #304]	; (90003150 <main+0x4ec>)
  pLayerCfg.WindowY1 = 272;
90003020:	930e      	str	r3, [sp, #56]	; 0x38
  pLayerCfg.ImageHeight = 272;
90003022:	9316      	str	r3, [sp, #88]	; 0x58
  pLayerCfg.Alpha = 255;
90003024:	23ff      	movs	r3, #255	; 0xff
  pLayerCfg.WindowX0 = 0;
90003026:	940b      	str	r4, [sp, #44]	; 0x2c
  pLayerCfg.Alpha = 255;
90003028:	9310      	str	r3, [sp, #64]	; 0x40
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
9000302a:	f44f 6380 	mov.w	r3, #1024	; 0x400
  pLayerCfg.WindowY0 = 0;
9000302e:	940d      	str	r4, [sp, #52]	; 0x34
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
90003030:	9312      	str	r3, [sp, #72]	; 0x48
  pLayerCfg.Alpha0 = 0;
90003032:	9411      	str	r4, [sp, #68]	; 0x44
  pLayerCfg.FBStartAdress = 0;
90003034:	9414      	str	r4, [sp, #80]	; 0x50
  pLayerCfg.Backcolor.Blue = 0;
90003036:	f8ad 405c 	strh.w	r4, [sp, #92]	; 0x5c
  pLayerCfg.Backcolor.Red = 0;
9000303a:	f88d 405e 	strb.w	r4, [sp, #94]	; 0x5e
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
9000303e:	970f      	str	r7, [sp, #60]	; 0x3c
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
90003040:	f8cd a04c 	str.w	sl, [sp, #76]	; 0x4c
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
90003044:	f007 f918 	bl	9000a278 <HAL_LTDC_ConfigLayer>
  hdma2d.Instance = DMA2D;
90003048:	4b42      	ldr	r3, [pc, #264]	; (90003154 <main+0x4f0>)
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
9000304a:	4628      	mov	r0, r5
  hdma2d.LayerCfg[1].ChromaSubSampling = DMA2D_NO_CSS;
9000304c:	65ec      	str	r4, [r5, #92]	; 0x5c
  hdma2d.Instance = DMA2D;
9000304e:	602b      	str	r3, [r5, #0]
  hdma2d.Init.OutputOffset = 0;
90003050:	60ec      	str	r4, [r5, #12]
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
90003052:	e9c5 4711 	strd	r4, r7, [r5, #68]	; 0x44
  hdma2d.LayerCfg[1].InputAlpha = 0;
90003056:	e9c5 4413 	strd	r4, r4, [r5, #76]	; 0x4c
  hdma2d.LayerCfg[1].RedBlueSwap = DMA2D_RB_REGULAR;
9000305a:	e9c5 4415 	strd	r4, r4, [r5, #84]	; 0x54
  hdma2d.Init.ColorMode = DMA2D_OUTPUT_RGB565;
9000305e:	e9c5 4701 	strd	r4, r7, [r5, #4]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
90003062:	f004 fcc7 	bl	900079f4 <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
90003066:	4631      	mov	r1, r6
90003068:	4628      	mov	r0, r5
9000306a:	f004 fd9b 	bl	90007ba4 <HAL_DMA2D_ConfigLayer>
  hsdram2.Instance = FMC_SDRAM_DEVICE;
9000306e:	483a      	ldr	r0, [pc, #232]	; (90003158 <main+0x4f4>)
  hsdram2.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
90003070:	f44f 73c0 	mov.w	r3, #384	; 0x180
  if (HAL_SDRAM_Init(&hsdram2, &SdramTiming) != HAL_OK)
90003074:	a90b      	add	r1, sp, #44	; 0x2c
  SdramTiming.WriteRecoveryTime = 5;
90003076:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
  SdramTiming.LoadToActiveDelay = 2;
9000307a:	970b      	str	r7, [sp, #44]	; 0x2c
  SdramTiming.SelfRefreshTime = 4;
9000307c:	f8cd 8034 	str.w	r8, [sp, #52]	; 0x34
  hsdram2.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
90003080:	f8c0 800c 	str.w	r8, [r0, #12]
  hsdram2.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
90003084:	f8c0 9014 	str.w	r9, [r0, #20]
  hsdram2.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_0;
90003088:	6284      	str	r4, [r0, #40]	; 0x28
  hsdram2.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
9000308a:	e9c0 3406 	strd	r3, r4, [r0, #24]
  hsdram2.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
9000308e:	f44f 6300 	mov.w	r3, #2048	; 0x800
90003092:	6203      	str	r3, [r0, #32]
  hsdram2.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
90003094:	f44f 5380 	mov.w	r3, #4096	; 0x1000
90003098:	6243      	str	r3, [r0, #36]	; 0x24
  SdramTiming.ExitSelfRefreshDelay = 7;
9000309a:	2307      	movs	r3, #7
9000309c:	930c      	str	r3, [sp, #48]	; 0x30
  SdramTiming.RowCycleDelay = 7;
9000309e:	930e      	str	r3, [sp, #56]	; 0x38
  hsdram2.Instance = FMC_SDRAM_DEVICE;
900030a0:	4b2e      	ldr	r3, [pc, #184]	; (9000315c <main+0x4f8>)
900030a2:	6003      	str	r3, [r0, #0]
  hsdram2.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
900030a4:	2310      	movs	r3, #16
  SdramTiming.RCDDelay = 2;
900030a6:	e9cd 7710 	strd	r7, r7, [sp, #64]	; 0x40
  hsdram2.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
900030aa:	6103      	str	r3, [r0, #16]
  hsdram2.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
900030ac:	e9c0 6401 	strd	r6, r4, [r0, #4]
  if (HAL_SDRAM_Init(&hsdram2, &SdramTiming) != HAL_OK)
900030b0:	f009 f906 	bl	9000c2c0 <HAL_SDRAM_Init>
  BSP_SDRAM_DeInit(0);
900030b4:	4620      	mov	r0, r4
900030b6:	f004 f8b1 	bl	9000721c <BSP_SDRAM_DeInit>
  if(BSP_SDRAM_Init(0) != BSP_ERROR_NONE)
900030ba:	4620      	mov	r0, r4
900030bc:	f004 f8f8 	bl	900072b0 <BSP_SDRAM_Init>
  MX_LIBJPEG_Init();
900030c0:	f7fd f988 	bl	900003d4 <MX_LIBJPEG_Init>
  hjpeg.Instance = JPEG;
900030c4:	4b26      	ldr	r3, [pc, #152]	; (90003160 <main+0x4fc>)
900030c6:	4827      	ldr	r0, [pc, #156]	; (90003164 <main+0x500>)
900030c8:	6003      	str	r3, [r0, #0]
  if (HAL_JPEG_Init(&hjpeg) != HAL_OK)
900030ca:	f005 ffd5 	bl	90009078 <HAL_JPEG_Init>
  hcrc.Instance = CRC;
900030ce:	4826      	ldr	r0, [pc, #152]	; (90003168 <main+0x504>)
900030d0:	4b26      	ldr	r3, [pc, #152]	; (9000316c <main+0x508>)
  hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
900030d2:	8084      	strh	r4, [r0, #4]
  hcrc.Instance = CRC;
900030d4:	6003      	str	r3, [r0, #0]
  hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
900030d6:	6206      	str	r6, [r0, #32]
  hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
900030d8:	e9c0 4405 	strd	r4, r4, [r0, #20]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
900030dc:	f004 fc14 	bl	90007908 <HAL_CRC_Init>
  MX_TouchGFX_Init();
900030e0:	f7fd f97c 	bl	900003dc <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
900030e4:	f7fd f978 	bl	900003d8 <MX_TouchGFX_PreOSInit>
  osKernelInitialize();
900030e8:	f009 fc08 	bl	9000c8fc <osKernelInitialize>
  resumeAsteroidsTaskSemaphoreHandle = osSemaphoreNew(1, 0, &resumeAsteroidsTaskSemaphore_attributes);
900030ec:	4a20      	ldr	r2, [pc, #128]	; (90003170 <main+0x50c>)
900030ee:	4621      	mov	r1, r4
900030f0:	4630      	mov	r0, r6
900030f2:	f009 fd2d 	bl	9000cb50 <osSemaphoreNew>
900030f6:	4b1f      	ldr	r3, [pc, #124]	; (90003174 <main+0x510>)
900030f8:	4601      	mov	r1, r0
  suspendAsteroidsTaskSemaphoreHandle = osSemaphoreNew(1, 0, &suspendAsteroidsTaskSemaphore_attributes);
900030fa:	4a1f      	ldr	r2, [pc, #124]	; (90003178 <main+0x514>)
900030fc:	4630      	mov	r0, r6
  resumeAsteroidsTaskSemaphoreHandle = osSemaphoreNew(1, 0, &resumeAsteroidsTaskSemaphore_attributes);
900030fe:	6019      	str	r1, [r3, #0]
  suspendAsteroidsTaskSemaphoreHandle = osSemaphoreNew(1, 0, &suspendAsteroidsTaskSemaphore_attributes);
90003100:	4621      	mov	r1, r4
90003102:	f009 fd25 	bl	9000cb50 <osSemaphoreNew>
90003106:	4b1d      	ldr	r3, [pc, #116]	; (9000317c <main+0x518>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
90003108:	4a1d      	ldr	r2, [pc, #116]	; (90003180 <main+0x51c>)
9000310a:	4621      	mov	r1, r4
  suspendAsteroidsTaskSemaphoreHandle = osSemaphoreNew(1, 0, &suspendAsteroidsTaskSemaphore_attributes);
9000310c:	6018      	str	r0, [r3, #0]
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
9000310e:	481d      	ldr	r0, [pc, #116]	; (90003184 <main+0x520>)
90003110:	f009 fc20 	bl	9000c954 <osThreadNew>
90003114:	4b1c      	ldr	r3, [pc, #112]	; (90003188 <main+0x524>)
  GUITaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUITask_attributes);
90003116:	4a1d      	ldr	r2, [pc, #116]	; (9000318c <main+0x528>)
90003118:	4621      	mov	r1, r4
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
9000311a:	6018      	str	r0, [r3, #0]
  GUITaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUITask_attributes);
9000311c:	481c      	ldr	r0, [pc, #112]	; (90003190 <main+0x52c>)
9000311e:	f009 fc19 	bl	9000c954 <osThreadNew>
90003122:	4b1c      	ldr	r3, [pc, #112]	; (90003194 <main+0x530>)
  videoTaskHandle = osThreadNew(videoTaskFunc, NULL, &videoTask_attributes);
90003124:	4a1c      	ldr	r2, [pc, #112]	; (90003198 <main+0x534>)
90003126:	4621      	mov	r1, r4
  GUITaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUITask_attributes);
90003128:	6018      	str	r0, [r3, #0]
  videoTaskHandle = osThreadNew(videoTaskFunc, NULL, &videoTask_attributes);
9000312a:	481c      	ldr	r0, [pc, #112]	; (9000319c <main+0x538>)
9000312c:	f009 fc12 	bl	9000c954 <osThreadNew>
90003130:	4b1b      	ldr	r3, [pc, #108]	; (900031a0 <main+0x53c>)
90003132:	4605      	mov	r5, r0
  asteroidsTaskHandle = osThreadNew(asteroidsTaskFunction, NULL, &asteroidsTask_attributes);
90003134:	4a1b      	ldr	r2, [pc, #108]	; (900031a4 <main+0x540>)
90003136:	4621      	mov	r1, r4
90003138:	481b      	ldr	r0, [pc, #108]	; (900031a8 <main+0x544>)
  videoTaskHandle = osThreadNew(videoTaskFunc, NULL, &videoTask_attributes);
9000313a:	601d      	str	r5, [r3, #0]
  asteroidsTaskHandle = osThreadNew(asteroidsTaskFunction, NULL, &asteroidsTask_attributes);
9000313c:	f009 fc0a 	bl	9000c954 <osThreadNew>
90003140:	4b1a      	ldr	r3, [pc, #104]	; (900031ac <main+0x548>)
90003142:	6018      	str	r0, [r3, #0]
  volatile osStatus_t status = osThreadSuspend(asteroidsTaskHandle);
90003144:	f009 fc50 	bl	9000c9e8 <osThreadSuspend>
90003148:	900b      	str	r0, [sp, #44]	; 0x2c
  osKernelStart();
9000314a:	f009 fbe9 	bl	9000c920 <osKernelStart>
  while (1)
9000314e:	e7fe      	b.n	9000314e <main+0x4ea>
90003150:	240091f0 	.word	0x240091f0
90003154:	52001000 	.word	0x52001000
90003158:	24009430 	.word	0x24009430
9000315c:	52004140 	.word	0x52004140
90003160:	52003000 	.word	0x52003000
90003164:	24009258 	.word	0x24009258
90003168:	240091cc 	.word	0x240091cc
9000316c:	58024c00 	.word	0x58024c00
90003170:	90028ab4 	.word	0x90028ab4
90003174:	24009464 	.word	0x24009464
90003178:	90028ac4 	.word	0x90028ac4
9000317c:	24009468 	.word	0x24009468
90003180:	90028a90 	.word	0x90028a90
90003184:	90002b61 	.word	0x90002b61
90003188:	240091c8 	.word	0x240091c8
9000318c:	90028a48 	.word	0x90028a48
90003190:	900003ed 	.word	0x900003ed
90003194:	240091c0 	.word	0x240091c0
90003198:	90028ad4 	.word	0x90028ad4
9000319c:	90002aa1 	.word	0x90002aa1
900031a0:	2400946c 	.word	0x2400946c
900031a4:	90028a6c 	.word	0x90028a6c
900031a8:	90002b1d 	.word	0x90002b1d
900031ac:	240091c4 	.word	0x240091c4

900031b0 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
900031b0:	4b03      	ldr	r3, [pc, #12]	; (900031c0 <HAL_TIM_PeriodElapsedCallback+0x10>)
900031b2:	6802      	ldr	r2, [r0, #0]
900031b4:	429a      	cmp	r2, r3
900031b6:	d000      	beq.n	900031ba <HAL_TIM_PeriodElapsedCallback+0xa>
    HAL_IncTick();
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
900031b8:	4770      	bx	lr
    HAL_IncTick();
900031ba:	f004 bacd 	b.w	90007758 <HAL_IncTick>
900031be:	bf00      	nop
900031c0:	40001000 	.word	0x40001000

900031c4 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
900031c4:	4770      	bx	lr
900031c6:	bf00      	nop

900031c8 <HAL_MspInit>:
{
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
900031c8:	4b0b      	ldr	r3, [pc, #44]	; (900031f8 <HAL_MspInit+0x30>)

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
900031ca:	2200      	movs	r2, #0
900031cc:	210f      	movs	r1, #15
900031ce:	f06f 0001 	mvn.w	r0, #1
{
900031d2:	b410      	push	{r4}
  __HAL_RCC_SYSCFG_CLK_ENABLE();
900031d4:	f8d3 40f4 	ldr.w	r4, [r3, #244]	; 0xf4
{
900031d8:	b083      	sub	sp, #12
  __HAL_RCC_SYSCFG_CLK_ENABLE();
900031da:	f044 0402 	orr.w	r4, r4, #2
900031de:	f8c3 40f4 	str.w	r4, [r3, #244]	; 0xf4
900031e2:	f8d3 30f4 	ldr.w	r3, [r3, #244]	; 0xf4
900031e6:	f003 0302 	and.w	r3, r3, #2
900031ea:	9301      	str	r3, [sp, #4]
900031ec:	9b01      	ldr	r3, [sp, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
900031ee:	b003      	add	sp, #12
900031f0:	f85d 4b04 	ldr.w	r4, [sp], #4
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
900031f4:	f004 bada 	b.w	900077ac <HAL_NVIC_SetPriority>
900031f8:	58024400 	.word	0x58024400

900031fc <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
900031fc:	4b0a      	ldr	r3, [pc, #40]	; (90003228 <HAL_CRC_MspInit+0x2c>)
900031fe:	6802      	ldr	r2, [r0, #0]
90003200:	429a      	cmp	r2, r3
90003202:	d000      	beq.n	90003206 <HAL_CRC_MspInit+0xa>
90003204:	4770      	bx	lr
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
90003206:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
{
9000320a:	b082      	sub	sp, #8
    __HAL_RCC_CRC_CLK_ENABLE();
9000320c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90003210:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
90003214:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
90003218:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
9000321c:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
90003220:	9301      	str	r3, [sp, #4]
90003222:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
90003224:	b002      	add	sp, #8
90003226:	4770      	bx	lr
90003228:	58024c00 	.word	0x58024c00

9000322c <HAL_DMA2D_MspInit>:
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
  if(hdma2d->Instance==DMA2D)
9000322c:	4b0f      	ldr	r3, [pc, #60]	; (9000326c <HAL_DMA2D_MspInit+0x40>)
9000322e:	6802      	ldr	r2, [r0, #0]
90003230:	429a      	cmp	r2, r3
90003232:	d000      	beq.n	90003236 <HAL_DMA2D_MspInit+0xa>
90003234:	4770      	bx	lr
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
90003236:	4b0e      	ldr	r3, [pc, #56]	; (90003270 <HAL_DMA2D_MspInit+0x44>)
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
90003238:	205a      	movs	r0, #90	; 0x5a
9000323a:	2200      	movs	r2, #0
9000323c:	2105      	movs	r1, #5
{
9000323e:	b510      	push	{r4, lr}
    __HAL_RCC_DMA2D_CLK_ENABLE();
90003240:	f8d3 40d4 	ldr.w	r4, [r3, #212]	; 0xd4
{
90003244:	b082      	sub	sp, #8
    __HAL_RCC_DMA2D_CLK_ENABLE();
90003246:	f044 0410 	orr.w	r4, r4, #16
9000324a:	f8c3 40d4 	str.w	r4, [r3, #212]	; 0xd4
9000324e:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
90003252:	f003 0310 	and.w	r3, r3, #16
90003256:	9301      	str	r3, [sp, #4]
90003258:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
9000325a:	f004 faa7 	bl	900077ac <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
9000325e:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
90003260:	b002      	add	sp, #8
90003262:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
90003266:	f004 badf 	b.w	90007828 <HAL_NVIC_EnableIRQ>
9000326a:	bf00      	nop
9000326c:	52001000 	.word	0x52001000
90003270:	58024400 	.word	0x58024400

90003274 <HAL_JPEG_MspInit>:
* @param hjpeg: JPEG handle pointer
* @retval None
*/
void HAL_JPEG_MspInit(JPEG_HandleTypeDef* hjpeg)
{
  if(hjpeg->Instance==JPEG)
90003274:	4b3f      	ldr	r3, [pc, #252]	; (90003374 <HAL_JPEG_MspInit+0x100>)
90003276:	6802      	ldr	r2, [r0, #0]
90003278:	429a      	cmp	r2, r3
9000327a:	d000      	beq.n	9000327e <HAL_JPEG_MspInit+0xa>
9000327c:	4770      	bx	lr
{
9000327e:	b570      	push	{r4, r5, r6, lr}
  /* USER CODE BEGIN JPEG_MspInit 0 */
	 hmdma_jpeg_infifo_th.Init.Request = MDMA_REQUEST_JPEG_INFIFO_TH;
	 hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
  /* USER CODE END JPEG_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_JPEG_CLK_ENABLE();
90003280:	4b3d      	ldr	r3, [pc, #244]	; (90003378 <HAL_JPEG_MspInit+0x104>)
	 hmdma_jpeg_infifo_th.Init.Request = MDMA_REQUEST_JPEG_INFIFO_TH;
90003282:	2211      	movs	r2, #17
90003284:	4e3d      	ldr	r6, [pc, #244]	; (9000337c <HAL_JPEG_MspInit+0x108>)
{
90003286:	b082      	sub	sp, #8
	 hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
90003288:	4d3d      	ldr	r5, [pc, #244]	; (90003380 <HAL_JPEG_MspInit+0x10c>)
9000328a:	4604      	mov	r4, r0
	 hmdma_jpeg_infifo_th.Init.Request = MDMA_REQUEST_JPEG_INFIFO_TH;
9000328c:	6072      	str	r2, [r6, #4]
    hmdma_jpeg_infifo_th.Init.BufferTransferLength = 32;
    hmdma_jpeg_infifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
    hmdma_jpeg_infifo_th.Init.DestBurst = MDMA_DEST_BURST_16BEATS;
    hmdma_jpeg_infifo_th.Init.SourceBlockAddressOffset = 0;
    hmdma_jpeg_infifo_th.Init.DestBlockAddressOffset = 0;
    if (HAL_MDMA_Init(&hmdma_jpeg_infifo_th) != HAL_OK)
9000328e:	4630      	mov	r0, r6
    __HAL_RCC_JPEG_CLK_ENABLE();
90003290:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
    hmdma_jpeg_infifo_th.Instance = MDMA_Channel7;
90003294:	493b      	ldr	r1, [pc, #236]	; (90003384 <HAL_JPEG_MspInit+0x110>)
    __HAL_RCC_JPEG_CLK_ENABLE();
90003296:	f042 0220 	orr.w	r2, r2, #32
9000329a:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
    hmdma_jpeg_infifo_th.Init.Priority = MDMA_PRIORITY_HIGH;
9000329e:	2280      	movs	r2, #128	; 0x80
    __HAL_RCC_JPEG_CLK_ENABLE();
900032a0:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
    hmdma_jpeg_infifo_th.Init.DestDataSize = MDMA_DEST_DATASIZE_WORD;
900032a4:	6232      	str	r2, [r6, #32]
    __HAL_RCC_JPEG_CLK_ENABLE();
900032a6:	f003 0320 	and.w	r3, r3, #32
    hmdma_jpeg_infifo_th.Instance = MDMA_Channel7;
900032aa:	6031      	str	r1, [r6, #0]
    __HAL_RCC_JPEG_CLK_ENABLE();
900032ac:	9301      	str	r3, [sp, #4]
    hmdma_jpeg_infifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
900032ae:	2300      	movs	r3, #0
    __HAL_RCC_JPEG_CLK_ENABLE();
900032b0:	9901      	ldr	r1, [sp, #4]
    hmdma_jpeg_infifo_th.Init.Endianness = MDMA_LITTLE_ENDIANNESS_PRESERVE;
900032b2:	6133      	str	r3, [r6, #16]
    hmdma_jpeg_infifo_th.Init.Priority = MDMA_PRIORITY_HIGH;
900032b4:	e9c6 3202 	strd	r3, r2, [r6, #8]
    hmdma_jpeg_infifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
900032b8:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
900032bc:	6272      	str	r2, [r6, #36]	; 0x24
    hmdma_jpeg_infifo_th.Init.BufferTransferLength = 32;
900032be:	2220      	movs	r2, #32
    hmdma_jpeg_infifo_th.Init.SourceDataSize = MDMA_SRC_DATASIZE_BYTE;
900032c0:	e9c6 3306 	strd	r3, r3, [r6, #24]
    hmdma_jpeg_infifo_th.Init.DestBlockAddressOffset = 0;
900032c4:	e9c6 330d 	strd	r3, r3, [r6, #52]	; 0x34
    hmdma_jpeg_infifo_th.Init.BufferTransferLength = 32;
900032c8:	62b2      	str	r2, [r6, #40]	; 0x28
    hmdma_jpeg_infifo_th.Init.DestBurst = MDMA_DEST_BURST_16BEATS;
900032ca:	f44f 3300 	mov.w	r3, #131072	; 0x20000
900032ce:	f44f 42a0 	mov.w	r2, #20480	; 0x5000
900032d2:	e9c6 230b 	strd	r2, r3, [r6, #44]	; 0x2c
	 hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
900032d6:	2313      	movs	r3, #19
900032d8:	606b      	str	r3, [r5, #4]
    hmdma_jpeg_infifo_th.Init.SourceInc = MDMA_SRC_INC_BYTE;
900032da:	2302      	movs	r3, #2
900032dc:	6173      	str	r3, [r6, #20]
    if (HAL_MDMA_Init(&hmdma_jpeg_infifo_th) != HAL_OK)
900032de:	f007 f8bf 	bl	9000a460 <HAL_MDMA_Init>
900032e2:	2800      	cmp	r0, #0
900032e4:	d13a      	bne.n	9000335c <HAL_JPEG_MspInit+0xe8>
    {
      Error_Handler();
    }

    if (HAL_MDMA_ConfigPostRequestMask(&hmdma_jpeg_infifo_th, 0, 0) != HAL_OK)
900032e6:	2200      	movs	r2, #0
900032e8:	4824      	ldr	r0, [pc, #144]	; (9000337c <HAL_JPEG_MspInit+0x108>)
900032ea:	4611      	mov	r1, r2
900032ec:	f007 f956 	bl	9000a59c <HAL_MDMA_ConfigPostRequestMask>
900032f0:	2800      	cmp	r0, #0
900032f2:	d13c      	bne.n	9000336e <HAL_JPEG_MspInit+0xfa>
    hmdma_jpeg_outfifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
    hmdma_jpeg_outfifo_th.Init.Priority = MDMA_PRIORITY_VERY_HIGH;
    hmdma_jpeg_outfifo_th.Init.Endianness = MDMA_LITTLE_ENDIANNESS_PRESERVE;
    hmdma_jpeg_outfifo_th.Init.SourceInc = MDMA_SRC_INC_DISABLE;
    hmdma_jpeg_outfifo_th.Init.DestinationInc = MDMA_DEST_INC_BYTE;
    hmdma_jpeg_outfifo_th.Init.SourceDataSize = MDMA_SRC_DATASIZE_WORD;
900032f4:	2220      	movs	r2, #32
    hmdma_jpeg_outfifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
900032f6:	2300      	movs	r3, #0
    __HAL_LINKDMA(hjpeg,hdmain,hmdma_jpeg_infifo_th);
900032f8:	6326      	str	r6, [r4, #48]	; 0x30
    hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
900032fa:	2013      	movs	r0, #19
    hmdma_jpeg_outfifo_th.Init.SourceDataSize = MDMA_SRC_DATASIZE_WORD;
900032fc:	61ea      	str	r2, [r5, #28]
    hmdma_jpeg_outfifo_th.Init.DestDataSize = MDMA_DEST_DATASIZE_BYTE;
    hmdma_jpeg_outfifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
    hmdma_jpeg_outfifo_th.Init.BufferTransferLength = 32;
900032fe:	62aa      	str	r2, [r5, #40]	; 0x28
    hmdma_jpeg_outfifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
    hmdma_jpeg_outfifo_th.Init.DestBurst = MDMA_DEST_BURST_32BEATS;
90003300:	f44f 3220 	mov.w	r2, #163840	; 0x28000
    hmdma_jpeg_outfifo_th.Instance = MDMA_Channel6;
90003304:	4920      	ldr	r1, [pc, #128]	; (90003388 <HAL_JPEG_MspInit+0x114>)
    hmdma_jpeg_outfifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
90003306:	60ab      	str	r3, [r5, #8]
    hmdma_jpeg_outfifo_th.Init.DestDataSize = MDMA_DEST_DATASIZE_BYTE;
90003308:	622b      	str	r3, [r5, #32]
    hmdma_jpeg_outfifo_th.Init.SourceBlockAddressOffset = 0;
    hmdma_jpeg_outfifo_th.Init.DestBlockAddressOffset = 0;
9000330a:	63ab      	str	r3, [r5, #56]	; 0x38
    __HAL_LINKDMA(hjpeg,hdmain,hmdma_jpeg_infifo_th);
9000330c:	6434      	str	r4, [r6, #64]	; 0x40
    hmdma_jpeg_outfifo_th.Init.DestBurst = MDMA_DEST_BURST_32BEATS;
9000330e:	e9c5 230c 	strd	r2, r3, [r5, #48]	; 0x30
    hmdma_jpeg_outfifo_th.Init.SourceInc = MDMA_SRC_INC_DISABLE;
90003312:	e9c5 3304 	strd	r3, r3, [r5, #16]
    hmdma_jpeg_outfifo_th.Init.DestinationInc = MDMA_DEST_INC_BYTE;
90003316:	2308      	movs	r3, #8
    hmdma_jpeg_outfifo_th.Init.Priority = MDMA_PRIORITY_VERY_HIGH;
90003318:	22c0      	movs	r2, #192	; 0xc0
    hmdma_jpeg_outfifo_th.Instance = MDMA_Channel6;
9000331a:	e9c5 1000 	strd	r1, r0, [r5]
    hmdma_jpeg_outfifo_th.Init.DestinationInc = MDMA_DEST_INC_BYTE;
9000331e:	61ab      	str	r3, [r5, #24]
    hmdma_jpeg_outfifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
90003320:	f44f 41a0 	mov.w	r1, #20480	; 0x5000
    hmdma_jpeg_outfifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
90003324:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
    if (HAL_MDMA_Init(&hmdma_jpeg_outfifo_th) != HAL_OK)
90003328:	4815      	ldr	r0, [pc, #84]	; (90003380 <HAL_JPEG_MspInit+0x10c>)
    hmdma_jpeg_outfifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
9000332a:	62e9      	str	r1, [r5, #44]	; 0x2c
    hmdma_jpeg_outfifo_th.Init.Priority = MDMA_PRIORITY_VERY_HIGH;
9000332c:	60ea      	str	r2, [r5, #12]
    hmdma_jpeg_outfifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
9000332e:	626b      	str	r3, [r5, #36]	; 0x24
    if (HAL_MDMA_Init(&hmdma_jpeg_outfifo_th) != HAL_OK)
90003330:	f007 f896 	bl	9000a460 <HAL_MDMA_Init>
90003334:	b9c0      	cbnz	r0, 90003368 <HAL_JPEG_MspInit+0xf4>
    {
      Error_Handler();
    }

    if (HAL_MDMA_ConfigPostRequestMask(&hmdma_jpeg_outfifo_th, 0, 0) != HAL_OK)
90003336:	2200      	movs	r2, #0
90003338:	4811      	ldr	r0, [pc, #68]	; (90003380 <HAL_JPEG_MspInit+0x10c>)
9000333a:	4611      	mov	r1, r2
9000333c:	f007 f92e 	bl	9000a59c <HAL_MDMA_ConfigPostRequestMask>
90003340:	b978      	cbnz	r0, 90003362 <HAL_JPEG_MspInit+0xee>
    {
      Error_Handler();
    }

    __HAL_LINKDMA(hjpeg,hdmaout,hmdma_jpeg_outfifo_th);
90003342:	6365      	str	r5, [r4, #52]	; 0x34

    /* JPEG interrupt Init */
    HAL_NVIC_SetPriority(JPEG_IRQn, 5, 0);
90003344:	2079      	movs	r0, #121	; 0x79
90003346:	2200      	movs	r2, #0
90003348:	2105      	movs	r1, #5
    __HAL_LINKDMA(hjpeg,hdmaout,hmdma_jpeg_outfifo_th);
9000334a:	642c      	str	r4, [r5, #64]	; 0x40
    HAL_NVIC_SetPriority(JPEG_IRQn, 5, 0);
9000334c:	f004 fa2e 	bl	900077ac <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(JPEG_IRQn);
90003350:	2079      	movs	r0, #121	; 0x79
  /* USER CODE BEGIN JPEG_MspInit 1 */

  /* USER CODE END JPEG_MspInit 1 */
  }

}
90003352:	b002      	add	sp, #8
90003354:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    HAL_NVIC_EnableIRQ(JPEG_IRQn);
90003358:	f004 ba66 	b.w	90007828 <HAL_NVIC_EnableIRQ>
      Error_Handler();
9000335c:	f7ff ff32 	bl	900031c4 <Error_Handler>
90003360:	e7c1      	b.n	900032e6 <HAL_JPEG_MspInit+0x72>
      Error_Handler();
90003362:	f7ff ff2f 	bl	900031c4 <Error_Handler>
90003366:	e7ec      	b.n	90003342 <HAL_JPEG_MspInit+0xce>
      Error_Handler();
90003368:	f7ff ff2c 	bl	900031c4 <Error_Handler>
9000336c:	e7e3      	b.n	90003336 <HAL_JPEG_MspInit+0xc2>
      Error_Handler();
9000336e:	f7ff ff29 	bl	900031c4 <Error_Handler>
90003372:	e7bf      	b.n	900032f4 <HAL_JPEG_MspInit+0x80>
90003374:	52003000 	.word	0x52003000
90003378:	58024400 	.word	0x58024400
9000337c:	24009358 	.word	0x24009358
90003380:	240093c4 	.word	0x240093c4
90003384:	52000200 	.word	0x52000200
90003388:	520001c0 	.word	0x520001c0

9000338c <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
9000338c:	b570      	push	{r4, r5, r6, lr}
9000338e:	b0ba      	sub	sp, #232	; 0xe8
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90003390:	2100      	movs	r1, #0
{
90003392:	4604      	mov	r4, r0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
90003394:	22c0      	movs	r2, #192	; 0xc0
90003396:	a80a      	add	r0, sp, #40	; 0x28
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90003398:	9109      	str	r1, [sp, #36]	; 0x24
9000339a:	e9cd 1105 	strd	r1, r1, [sp, #20]
9000339e:	e9cd 1107 	strd	r1, r1, [sp, #28]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
900033a2:	f023 f8ad 	bl	90026500 <memset>
  if(hltdc->Instance==LTDC)
900033a6:	4b4a      	ldr	r3, [pc, #296]	; (900034d0 <HAL_LTDC_MspInit+0x144>)
900033a8:	6822      	ldr	r2, [r4, #0]
900033aa:	429a      	cmp	r2, r3
900033ac:	d001      	beq.n	900033b2 <HAL_LTDC_MspInit+0x26>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
900033ae:	b03a      	add	sp, #232	; 0xe8
900033b0:	bd70      	pop	{r4, r5, r6, pc}
    PeriphClkInitStruct.PLL3.PLL3P = 2;
900033b2:	2302      	movs	r3, #2
    PeriphClkInitStruct.PLL3.PLL3M = 5;
900033b4:	2205      	movs	r2, #5
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
900033b6:	f04f 5400 	mov.w	r4, #536870912	; 0x20000000
900033ba:	2500      	movs	r5, #0
    PeriphClkInitStruct.PLL3.PLL3N = 160;
900033bc:	21a0      	movs	r1, #160	; 0xa0
    PeriphClkInitStruct.PLL3.PLL3P = 2;
900033be:	9316      	str	r3, [sp, #88]	; 0x58
    PeriphClkInitStruct.PLL3.PLL3M = 5;
900033c0:	9214      	str	r2, [sp, #80]	; 0x50
    PeriphClkInitStruct.PLL3.PLL3R = 83;
900033c2:	2253      	movs	r2, #83	; 0x53
    PeriphClkInitStruct.PLL3.PLL3Q = 2;
900033c4:	9317      	str	r3, [sp, #92]	; 0x5c
    PeriphClkInitStruct.PLL3.PLL3R = 83;
900033c6:	f44f 6300 	mov.w	r3, #2048	; 0x800
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
900033ca:	a80a      	add	r0, sp, #40	; 0x28
    PeriphClkInitStruct.PLL3.PLL3N = 160;
900033cc:	9115      	str	r1, [sp, #84]	; 0x54
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
900033ce:	e9cd 450a 	strd	r4, r5, [sp, #40]	; 0x28
    PeriphClkInitStruct.PLL3.PLL3R = 83;
900033d2:	e9cd 2318 	strd	r2, r3, [sp, #96]	; 0x60
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
900033d6:	f008 f973 	bl	9000b6c0 <HAL_RCCEx_PeriphCLKConfig>
900033da:	2800      	cmp	r0, #0
900033dc:	d174      	bne.n	900034c8 <HAL_LTDC_MspInit+0x13c>
    __HAL_RCC_LTDC_CLK_ENABLE();
900033de:	4b3d      	ldr	r3, [pc, #244]	; (900034d4 <HAL_LTDC_MspInit+0x148>)
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
900033e0:	2402      	movs	r4, #2
    GPIO_InitStruct.Pull = GPIO_NOPULL;
900033e2:	2500      	movs	r5, #0
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
900033e4:	260e      	movs	r6, #14
    __HAL_RCC_LTDC_CLK_ENABLE();
900033e6:	f8d3 20e4 	ldr.w	r2, [r3, #228]	; 0xe4
    HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
900033ea:	a905      	add	r1, sp, #20
900033ec:	483a      	ldr	r0, [pc, #232]	; (900034d8 <HAL_LTDC_MspInit+0x14c>)
    __HAL_RCC_LTDC_CLK_ENABLE();
900033ee:	f042 0208 	orr.w	r2, r2, #8
900033f2:	f8c3 20e4 	str.w	r2, [r3, #228]	; 0xe4
900033f6:	f8d3 20e4 	ldr.w	r2, [r3, #228]	; 0xe4
900033fa:	f002 0208 	and.w	r2, r2, #8
900033fe:	9200      	str	r2, [sp, #0]
90003400:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOK_CLK_ENABLE();
90003402:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90003406:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
9000340a:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
9000340e:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90003412:	f402 6280 	and.w	r2, r2, #1024	; 0x400
90003416:	9201      	str	r2, [sp, #4]
90003418:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOI_CLK_ENABLE();
9000341a:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
9000341e:	f442 7280 	orr.w	r2, r2, #256	; 0x100
90003422:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
90003426:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
9000342a:	f402 7280 	and.w	r2, r2, #256	; 0x100
9000342e:	9202      	str	r2, [sp, #8]
90003430:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOJ_CLK_ENABLE();
90003432:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90003436:	f442 7200 	orr.w	r2, r2, #512	; 0x200
9000343a:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
9000343e:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90003442:	f402 7200 	and.w	r2, r2, #512	; 0x200
90003446:	9203      	str	r2, [sp, #12]
90003448:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOH_CLK_ENABLE();
9000344a:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
9000344e:	f042 0280 	orr.w	r2, r2, #128	; 0x80
90003452:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
90003456:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
9000345a:	9408      	str	r4, [sp, #32]
    __HAL_RCC_GPIOH_CLK_ENABLE();
9000345c:	f003 0380 	and.w	r3, r3, #128	; 0x80
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
90003460:	9609      	str	r6, [sp, #36]	; 0x24
    __HAL_RCC_GPIOH_CLK_ENABLE();
90003462:	9304      	str	r3, [sp, #16]
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_3
90003464:	23fc      	movs	r3, #252	; 0xfc
    __HAL_RCC_GPIOH_CLK_ENABLE();
90003466:	9a04      	ldr	r2, [sp, #16]
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_3
90003468:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
9000346a:	e9cd 4506 	strd	r4, r5, [sp, #24]
    HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
9000346e:	f004 fc09 	bl	90007c84 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_9|GPIO_PIN_12
90003472:	f24d 2303 	movw	r3, #53763	; 0xd203
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
90003476:	a905      	add	r1, sp, #20
90003478:	4818      	ldr	r0, [pc, #96]	; (900034dc <HAL_LTDC_MspInit+0x150>)
    GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_9|GPIO_PIN_12
9000347a:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
9000347c:	e9cd 4506 	strd	r4, r5, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
90003480:	e9cd 4608 	strd	r4, r6, [sp, #32]
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
90003484:	f004 fbfe 	bl	90007c84 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_14|GPIO_PIN_12|GPIO_PIN_13
90003488:	f64f 73fb 	movw	r3, #65531	; 0xfffb
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
9000348c:	a905      	add	r1, sp, #20
9000348e:	4814      	ldr	r0, [pc, #80]	; (900034e0 <HAL_LTDC_MspInit+0x154>)
    GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_14|GPIO_PIN_12|GPIO_PIN_13
90003490:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
90003492:	e9cd 4506 	strd	r4, r5, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
90003496:	e9cd 4608 	strd	r4, r6, [sp, #32]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
9000349a:	f004 fbf3 	bl	90007c84 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_9;
9000349e:	f44f 7300 	mov.w	r3, #512	; 0x200
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
900034a2:	a905      	add	r1, sp, #20
900034a4:	480f      	ldr	r0, [pc, #60]	; (900034e4 <HAL_LTDC_MspInit+0x158>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
900034a6:	9609      	str	r6, [sp, #36]	; 0x24
    GPIO_InitStruct.Pin = GPIO_PIN_9;
900034a8:	e9cd 3405 	strd	r3, r4, [sp, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
900034ac:	e9cd 5407 	strd	r5, r4, [sp, #28]
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
900034b0:	f004 fbe8 	bl	90007c84 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
900034b4:	462a      	mov	r2, r5
900034b6:	2105      	movs	r1, #5
900034b8:	2058      	movs	r0, #88	; 0x58
900034ba:	f004 f977 	bl	900077ac <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
900034be:	2058      	movs	r0, #88	; 0x58
900034c0:	f004 f9b2 	bl	90007828 <HAL_NVIC_EnableIRQ>
}
900034c4:	b03a      	add	sp, #232	; 0xe8
900034c6:	bd70      	pop	{r4, r5, r6, pc}
      Error_Handler();
900034c8:	f7ff fe7c 	bl	900031c4 <Error_Handler>
900034cc:	e787      	b.n	900033de <HAL_LTDC_MspInit+0x52>
900034ce:	bf00      	nop
900034d0:	50001000 	.word	0x50001000
900034d4:	58024400 	.word	0x58024400
900034d8:	58022800 	.word	0x58022800
900034dc:	58022000 	.word	0x58022000
900034e0:	58022400 	.word	0x58022400
900034e4:	58021c00 	.word	0x58021c00

900034e8 <HAL_SDRAM_MspInit>:
static void HAL_FMC_MspInit(void){
  /* USER CODE BEGIN FMC_MspInit 0 */

  /* USER CODE END FMC_MspInit 0 */
  GPIO_InitTypeDef GPIO_InitStruct ={0};
  if (FMC_Initialized) {
900034e8:	4836      	ldr	r0, [pc, #216]	; (900035c4 <HAL_SDRAM_MspInit+0xdc>)
  GPIO_InitTypeDef GPIO_InitStruct ={0};
900034ea:	2300      	movs	r3, #0
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
900034ec:	b5d0      	push	{r4, r6, r7, lr}
  if (FMC_Initialized) {
900034ee:	6801      	ldr	r1, [r0, #0]
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
900034f0:	b0b8      	sub	sp, #224	; 0xe0
  GPIO_InitTypeDef GPIO_InitStruct ={0};
900034f2:	e9cd 3302 	strd	r3, r3, [sp, #8]
900034f6:	e9cd 3304 	strd	r3, r3, [sp, #16]
900034fa:	9306      	str	r3, [sp, #24]
  if (FMC_Initialized) {
900034fc:	b109      	cbz	r1, 90003502 <HAL_SDRAM_MspInit+0x1a>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
900034fe:	b038      	add	sp, #224	; 0xe0
90003500:	bdd0      	pop	{r4, r6, r7, pc}
  FMC_Initialized = 1;
90003502:	2301      	movs	r3, #1
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
90003504:	22b8      	movs	r2, #184	; 0xb8
  FMC_Initialized = 1;
90003506:	6003      	str	r3, [r0, #0]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
90003508:	a80a      	add	r0, sp, #40	; 0x28
9000350a:	f022 fff9 	bl	90026500 <memset>
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_FMC;
9000350e:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
90003512:	2300      	movs	r3, #0
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
90003514:	a808      	add	r0, sp, #32
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_FMC;
90003516:	e9cd 2308 	strd	r2, r3, [sp, #32]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
9000351a:	f008 f8d1 	bl	9000b6c0 <HAL_RCCEx_PeriphCLKConfig>
9000351e:	2800      	cmp	r0, #0
90003520:	d14c      	bne.n	900035bc <HAL_SDRAM_MspInit+0xd4>
  __HAL_RCC_FMC_CLK_ENABLE();
90003522:	4b29      	ldr	r3, [pc, #164]	; (900035c8 <HAL_SDRAM_MspInit+0xe0>)
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
90003524:	f64f 7083 	movw	r0, #65411	; 0xff83
90003528:	2102      	movs	r1, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
9000352a:	240c      	movs	r4, #12
  __HAL_RCC_FMC_CLK_ENABLE();
9000352c:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
90003530:	2600      	movs	r6, #0
90003532:	2703      	movs	r7, #3
  __HAL_RCC_FMC_CLK_ENABLE();
90003534:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
90003538:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
9000353c:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
90003540:	9406      	str	r4, [sp, #24]
  __HAL_RCC_FMC_CLK_ENABLE();
90003542:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
90003546:	e9cd 0102 	strd	r0, r1, [sp, #8]
  __HAL_RCC_FMC_CLK_ENABLE();
9000354a:	9301      	str	r3, [sp, #4]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
9000354c:	a902      	add	r1, sp, #8
9000354e:	481f      	ldr	r0, [pc, #124]	; (900035cc <HAL_SDRAM_MspInit+0xe4>)
  __HAL_RCC_FMC_CLK_ENABLE();
90003550:	9b01      	ldr	r3, [sp, #4]
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
90003552:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
90003556:	f004 fb95 	bl	90007c84 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
9000355a:	f248 1233 	movw	r2, #33075	; 0x8133
9000355e:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
90003560:	a902      	add	r1, sp, #8
90003562:	481b      	ldr	r0, [pc, #108]	; (900035d0 <HAL_SDRAM_MspInit+0xe8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
90003564:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
90003566:	e9cd 2302 	strd	r2, r3, [sp, #8]
9000356a:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
9000356e:	f004 fb89 	bl	90007c84 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
90003572:	f24c 7203 	movw	r2, #50947	; 0xc703
90003576:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
90003578:	a902      	add	r1, sp, #8
9000357a:	4816      	ldr	r0, [pc, #88]	; (900035d4 <HAL_SDRAM_MspInit+0xec>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
9000357c:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
9000357e:	e9cd 2302 	strd	r2, r3, [sp, #8]
90003582:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
90003586:	f004 fb7d 	bl	90007c84 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
9000358a:	f64f 023f 	movw	r2, #63551	; 0xf83f
9000358e:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
90003590:	a902      	add	r1, sp, #8
90003592:	4811      	ldr	r0, [pc, #68]	; (900035d8 <HAL_SDRAM_MspInit+0xf0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
90003594:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
90003596:	e9cd 2302 	strd	r2, r3, [sp, #8]
9000359a:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
9000359e:	f004 fb71 	bl	90007c84 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
900035a2:	22e0      	movs	r2, #224	; 0xe0
900035a4:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
900035a6:	a902      	add	r1, sp, #8
900035a8:	480c      	ldr	r0, [pc, #48]	; (900035dc <HAL_SDRAM_MspInit+0xf4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
900035aa:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
900035ac:	e9cd 6704 	strd	r6, r7, [sp, #16]
900035b0:	e9cd 2302 	strd	r2, r3, [sp, #8]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
900035b4:	f004 fb66 	bl	90007c84 <HAL_GPIO_Init>
}
900035b8:	b038      	add	sp, #224	; 0xe0
900035ba:	bdd0      	pop	{r4, r6, r7, pc}
      Error_Handler();
900035bc:	f7ff fe02 	bl	900031c4 <Error_Handler>
900035c0:	e7af      	b.n	90003522 <HAL_SDRAM_MspInit+0x3a>
900035c2:	bf00      	nop
900035c4:	24009474 	.word	0x24009474
900035c8:	58024400 	.word	0x58024400
900035cc:	58021000 	.word	0x58021000
900035d0:	58021800 	.word	0x58021800
900035d4:	58020c00 	.word	0x58020c00
900035d8:	58021400 	.word	0x58021400
900035dc:	58021c00 	.word	0x58021c00

900035e0 <HAL_SDRAM_MspDeInit>:

static void HAL_FMC_MspDeInit(void){
  /* USER CODE BEGIN FMC_MspDeInit 0 */

  /* USER CODE END FMC_MspDeInit 0 */
  if (FMC_DeInitialized) {
900035e0:	4b13      	ldr	r3, [pc, #76]	; (90003630 <HAL_SDRAM_MspDeInit+0x50>)
900035e2:	681a      	ldr	r2, [r3, #0]
900035e4:	b102      	cbz	r2, 900035e8 <HAL_SDRAM_MspDeInit+0x8>
900035e6:	4770      	bx	lr
  /* USER CODE BEGIN FMC_MspDeInit 1 */

  /* USER CODE END FMC_MspDeInit 1 */
}

void HAL_SDRAM_MspDeInit(SDRAM_HandleTypeDef* hsdram){
900035e8:	b510      	push	{r4, lr}
  __HAL_RCC_FMC_CLK_DISABLE();
900035ea:	4a12      	ldr	r2, [pc, #72]	; (90003634 <HAL_SDRAM_MspDeInit+0x54>)
  FMC_DeInitialized = 1;
900035ec:	2401      	movs	r4, #1
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
900035ee:	f64f 7183 	movw	r1, #65411	; 0xff83
900035f2:	4811      	ldr	r0, [pc, #68]	; (90003638 <HAL_SDRAM_MspDeInit+0x58>)
  FMC_DeInitialized = 1;
900035f4:	601c      	str	r4, [r3, #0]
  __HAL_RCC_FMC_CLK_DISABLE();
900035f6:	f8d2 30d4 	ldr.w	r3, [r2, #212]	; 0xd4
900035fa:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
900035fe:	f8c2 30d4 	str.w	r3, [r2, #212]	; 0xd4
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
90003602:	f004 fc71 	bl	90007ee8 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOG, GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
90003606:	f248 1133 	movw	r1, #33075	; 0x8133
9000360a:	480c      	ldr	r0, [pc, #48]	; (9000363c <HAL_SDRAM_MspDeInit+0x5c>)
9000360c:	f004 fc6c 	bl	90007ee8 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOD, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
90003610:	f24c 7103 	movw	r1, #50947	; 0xc703
90003614:	480a      	ldr	r0, [pc, #40]	; (90003640 <HAL_SDRAM_MspDeInit+0x60>)
90003616:	f004 fc67 	bl	90007ee8 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOF, GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
9000361a:	f64f 013f 	movw	r1, #63551	; 0xf83f
9000361e:	4809      	ldr	r0, [pc, #36]	; (90003644 <HAL_SDRAM_MspDeInit+0x64>)
90003620:	f004 fc62 	bl	90007ee8 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7);
90003624:	21e0      	movs	r1, #224	; 0xe0
90003626:	4808      	ldr	r0, [pc, #32]	; (90003648 <HAL_SDRAM_MspDeInit+0x68>)
  /* USER CODE END SDRAM_MspDeInit 0 */
  HAL_FMC_MspDeInit();
  /* USER CODE BEGIN SDRAM_MspDeInit 1 */

  /* USER CODE END SDRAM_MspDeInit 1 */
}
90003628:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7);
9000362c:	f004 bc5c 	b.w	90007ee8 <HAL_GPIO_DeInit>
90003630:	24009470 	.word	0x24009470
90003634:	58024400 	.word	0x58024400
90003638:	58021000 	.word	0x58021000
9000363c:	58021800 	.word	0x58021800
90003640:	58020c00 	.word	0x58020c00
90003644:	58021400 	.word	0x58021400
90003648:	58021c00 	.word	0x58021c00

9000364c <HAL_InitTick>:
  uint32_t              uwTimclock, uwAPB1Prescaler;

  uint32_t              uwPrescalerValue;
  uint32_t              pFLatency;
/*Configure the TIM6 IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
9000364c:	280f      	cmp	r0, #15
9000364e:	d901      	bls.n	90003654 <HAL_InitTick+0x8>
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
    uwTickPrio = TickPriority;
    }
  else
  {
    return HAL_ERROR;
90003650:	2001      	movs	r0, #1
    return HAL_TIM_Base_Start_IT(&htim6);
  }

  /* Return function status */
  return HAL_ERROR;
}
90003652:	4770      	bx	lr
{
90003654:	b530      	push	{r4, r5, lr}
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0U);
90003656:	4601      	mov	r1, r0
{
90003658:	b08b      	sub	sp, #44	; 0x2c
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0U);
9000365a:	2200      	movs	r2, #0
9000365c:	4604      	mov	r4, r0
9000365e:	2036      	movs	r0, #54	; 0x36
90003660:	f004 f8a4 	bl	900077ac <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
90003664:	2036      	movs	r0, #54	; 0x36
90003666:	f004 f8df 	bl	90007828 <HAL_NVIC_EnableIRQ>
  __HAL_RCC_TIM6_CLK_ENABLE();
9000366a:	4b1a      	ldr	r3, [pc, #104]	; (900036d4 <HAL_InitTick+0x88>)
    uwTickPrio = TickPriority;
9000366c:	4a1a      	ldr	r2, [pc, #104]	; (900036d8 <HAL_InitTick+0x8c>)
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
9000366e:	4669      	mov	r1, sp
90003670:	a802      	add	r0, sp, #8
    uwTickPrio = TickPriority;
90003672:	6014      	str	r4, [r2, #0]
  __HAL_RCC_TIM6_CLK_ENABLE();
90003674:	f8d3 20e8 	ldr.w	r2, [r3, #232]	; 0xe8
90003678:	f042 0210 	orr.w	r2, r2, #16
9000367c:	f8c3 20e8 	str.w	r2, [r3, #232]	; 0xe8
90003680:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
90003684:	f003 0310 	and.w	r3, r3, #16
90003688:	9301      	str	r3, [sp, #4]
9000368a:	9b01      	ldr	r3, [sp, #4]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
9000368c:	f007 fef8 	bl	9000b480 <HAL_RCC_GetClockConfig>
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
90003690:	9b07      	ldr	r3, [sp, #28]
90003692:	b9bb      	cbnz	r3, 900036c4 <HAL_InitTick+0x78>
    uwTimclock = HAL_RCC_GetPCLK1Freq();
90003694:	f007 fe64 	bl	9000b360 <HAL_RCC_GetPCLK1Freq>
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
90003698:	4b10      	ldr	r3, [pc, #64]	; (900036dc <HAL_InitTick+0x90>)
  htim6.Init.ClockDivision = 0;
9000369a:	2200      	movs	r2, #0
  htim6.Instance = TIM6;
9000369c:	4c10      	ldr	r4, [pc, #64]	; (900036e0 <HAL_InitTick+0x94>)
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
9000369e:	fba3 1300 	umull	r1, r3, r3, r0
  htim6.Instance = TIM6;
900036a2:	4d10      	ldr	r5, [pc, #64]	; (900036e4 <HAL_InitTick+0x98>)
  htim6.Init.Period = (1000000U / 1000U) - 1U;
900036a4:	f240 31e7 	movw	r1, #999	; 0x3e7
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
900036a8:	4620      	mov	r0, r4
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
900036aa:	0c9b      	lsrs	r3, r3, #18
  htim6.Instance = TIM6;
900036ac:	6025      	str	r5, [r4, #0]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
900036ae:	60a2      	str	r2, [r4, #8]
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
900036b0:	3b01      	subs	r3, #1
  htim6.Init.Period = (1000000U / 1000U) - 1U;
900036b2:	e9c4 1203 	strd	r1, r2, [r4, #12]
  htim6.Init.Prescaler = uwPrescalerValue;
900036b6:	6063      	str	r3, [r4, #4]
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
900036b8:	f008 fe74 	bl	9000c3a4 <HAL_TIM_Base_Init>
900036bc:	b130      	cbz	r0, 900036cc <HAL_InitTick+0x80>
    return HAL_ERROR;
900036be:	2001      	movs	r0, #1
}
900036c0:	b00b      	add	sp, #44	; 0x2c
900036c2:	bd30      	pop	{r4, r5, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
900036c4:	f007 fe4c 	bl	9000b360 <HAL_RCC_GetPCLK1Freq>
900036c8:	0040      	lsls	r0, r0, #1
900036ca:	e7e5      	b.n	90003698 <HAL_InitTick+0x4c>
    return HAL_TIM_Base_Start_IT(&htim6);
900036cc:	4620      	mov	r0, r4
900036ce:	f008 ff1f 	bl	9000c510 <HAL_TIM_Base_Start_IT>
900036d2:	e7f5      	b.n	900036c0 <HAL_InitTick+0x74>
900036d4:	58024400 	.word	0x58024400
900036d8:	2400006c 	.word	0x2400006c
900036dc:	431bde83 	.word	0x431bde83
900036e0:	24009478 	.word	0x24009478
900036e4:	40001000 	.word	0x40001000

900036e8 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
900036e8:	4770      	bx	lr
900036ea:	bf00      	nop

900036ec <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
900036ec:	e7fe      	b.n	900036ec <HardFault_Handler>
900036ee:	bf00      	nop

900036f0 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
900036f0:	e7fe      	b.n	900036f0 <MemManage_Handler>
900036f2:	bf00      	nop

900036f4 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
900036f4:	e7fe      	b.n	900036f4 <BusFault_Handler>
900036f6:	bf00      	nop

900036f8 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
900036f8:	e7fe      	b.n	900036f8 <UsageFault_Handler>
900036fa:	bf00      	nop

900036fc <DebugMon_Handler>:
900036fc:	4770      	bx	lr
900036fe:	bf00      	nop

90003700 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
90003700:	4801      	ldr	r0, [pc, #4]	; (90003708 <TIM6_DAC_IRQHandler+0x8>)
90003702:	f008 bf69 	b.w	9000c5d8 <HAL_TIM_IRQHandler>
90003706:	bf00      	nop
90003708:	24009478 	.word	0x24009478

9000370c <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
9000370c:	4801      	ldr	r0, [pc, #4]	; (90003714 <LTDC_IRQHandler+0x8>)
9000370e:	f006 bd51 	b.w	9000a1b4 <HAL_LTDC_IRQHandler>
90003712:	bf00      	nop
90003714:	240092b0 	.word	0x240092b0

90003718 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
90003718:	4801      	ldr	r0, [pc, #4]	; (90003720 <DMA2D_IRQHandler+0x8>)
9000371a:	f004 b9af 	b.w	90007a7c <HAL_DMA2D_IRQHandler>
9000371e:	bf00      	nop
90003720:	240091f0 	.word	0x240091f0

90003724 <JPEG_IRQHandler>:
void JPEG_IRQHandler(void)
{
  /* USER CODE BEGIN JPEG_IRQn 0 */

  /* USER CODE END JPEG_IRQn 0 */
  HAL_JPEG_IRQHandler(&hjpeg);
90003724:	4801      	ldr	r0, [pc, #4]	; (9000372c <JPEG_IRQHandler+0x8>)
90003726:	f006 bc31 	b.w	90009f8c <HAL_JPEG_IRQHandler>
9000372a:	bf00      	nop
9000372c:	24009258 	.word	0x24009258

90003730 <MDMA_IRQHandler>:
void MDMA_IRQHandler(void)
{
  /* USER CODE BEGIN MDMA_IRQn 0 */

  /* USER CODE END MDMA_IRQn 0 */
  HAL_MDMA_IRQHandler(&hmdma_jpeg_outfifo_th);
90003730:	4804      	ldr	r0, [pc, #16]	; (90003744 <MDMA_IRQHandler+0x14>)
{
90003732:	b508      	push	{r3, lr}
  HAL_MDMA_IRQHandler(&hmdma_jpeg_outfifo_th);
90003734:	f006 fff2 	bl	9000a71c <HAL_MDMA_IRQHandler>
  HAL_MDMA_IRQHandler(&hmdma_jpeg_infifo_th);
90003738:	4803      	ldr	r0, [pc, #12]	; (90003748 <MDMA_IRQHandler+0x18>)
  /* USER CODE BEGIN MDMA_IRQn 1 */

  /* USER CODE END MDMA_IRQn 1 */
}
9000373a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_MDMA_IRQHandler(&hmdma_jpeg_infifo_th);
9000373e:	f006 bfed 	b.w	9000a71c <HAL_MDMA_IRQHandler>
90003742:	bf00      	nop
90003744:	240093c4 	.word	0x240093c4
90003748:	24009358 	.word	0x24009358

9000374c <_getpid>:
}

int _getpid(void)
{
	return 1;
}
9000374c:	2001      	movs	r0, #1
9000374e:	4770      	bx	lr

90003750 <_kill>:

int _kill(int pid, int sig)
{
90003750:	b508      	push	{r3, lr}
	errno = EINVAL;
90003752:	f022 ff89 	bl	90026668 <__errno>
90003756:	2216      	movs	r2, #22
90003758:	4603      	mov	r3, r0
	return -1;
}
9000375a:	f04f 30ff 	mov.w	r0, #4294967295
	errno = EINVAL;
9000375e:	601a      	str	r2, [r3, #0]
}
90003760:	bd08      	pop	{r3, pc}
90003762:	bf00      	nop

90003764 <_exit>:

void _exit (int status)
{
90003764:	b508      	push	{r3, lr}
	errno = EINVAL;
90003766:	f022 ff7f 	bl	90026668 <__errno>
9000376a:	2316      	movs	r3, #22
9000376c:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
9000376e:	e7fe      	b.n	9000376e <_exit+0xa>

90003770 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
90003770:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
90003772:	1e16      	subs	r6, r2, #0
90003774:	dd07      	ble.n	90003786 <_read+0x16>
90003776:	460c      	mov	r4, r1
90003778:	198d      	adds	r5, r1, r6
	{
		*ptr++ = __io_getchar();
9000377a:	f3af 8000 	nop.w
9000377e:	f804 0b01 	strb.w	r0, [r4], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
90003782:	42a5      	cmp	r5, r4
90003784:	d1f9      	bne.n	9000377a <_read+0xa>
	}

return len;
}
90003786:	4630      	mov	r0, r6
90003788:	bd70      	pop	{r4, r5, r6, pc}
9000378a:	bf00      	nop

9000378c <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
9000378c:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
9000378e:	1e16      	subs	r6, r2, #0
90003790:	dd07      	ble.n	900037a2 <_write+0x16>
90003792:	460c      	mov	r4, r1
90003794:	198d      	adds	r5, r1, r6
	{
		__io_putchar(*ptr++);
90003796:	f814 0b01 	ldrb.w	r0, [r4], #1
9000379a:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
9000379e:	42ac      	cmp	r4, r5
900037a0:	d1f9      	bne.n	90003796 <_write+0xa>
	}
	return len;
}
900037a2:	4630      	mov	r0, r6
900037a4:	bd70      	pop	{r4, r5, r6, pc}
900037a6:	bf00      	nop

900037a8 <_close>:

int _close(int file)
{
	return -1;
}
900037a8:	f04f 30ff 	mov.w	r0, #4294967295
900037ac:	4770      	bx	lr
900037ae:	bf00      	nop

900037b0 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
900037b0:	f44f 5300 	mov.w	r3, #8192	; 0x2000
	return 0;
}
900037b4:	2000      	movs	r0, #0
	st->st_mode = S_IFCHR;
900037b6:	604b      	str	r3, [r1, #4]
}
900037b8:	4770      	bx	lr
900037ba:	bf00      	nop

900037bc <_isatty>:

int _isatty(int file)
{
	return 1;
}
900037bc:	2001      	movs	r0, #1
900037be:	4770      	bx	lr

900037c0 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
900037c0:	2000      	movs	r0, #0
900037c2:	4770      	bx	lr

900037c4 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
900037c4:	4770      	bx	lr
900037c6:	bf00      	nop

900037c8 <_ZN23ApplicationFontProviderD0Ev>:
900037c8:	b510      	push	{r4, lr}
900037ca:	4604      	mov	r4, r0
900037cc:	2104      	movs	r1, #4
900037ce:	f022 fb90 	bl	90025ef2 <_ZdlPvj>
900037d2:	4620      	mov	r0, r4
900037d4:	bd10      	pop	{r4, pc}
900037d6:	bf00      	nop

900037d8 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
    switch (typography)
900037d8:	2901      	cmp	r1, #1
{
900037da:	b508      	push	{r3, lr}
    switch (typography)
900037dc:	d004      	beq.n	900037e8 <_ZN23ApplicationFontProvider7getFontEt+0x10>
900037de:	2902      	cmp	r1, #2
900037e0:	d00a      	beq.n	900037f8 <_ZN23ApplicationFontProvider7getFontEt+0x20>
900037e2:	b129      	cbz	r1, 900037f0 <_ZN23ApplicationFontProvider7getFontEt+0x18>
900037e4:	2000      	movs	r0, #0
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    default:
        return 0;
    }
}
900037e6:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
900037e8:	f000 ff94 	bl	90004714 <_ZN17TypedTextDatabase8getFontsEv>
900037ec:	6840      	ldr	r0, [r0, #4]
}
900037ee:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
900037f0:	f000 ff90 	bl	90004714 <_ZN17TypedTextDatabase8getFontsEv>
900037f4:	6800      	ldr	r0, [r0, #0]
}
900037f6:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
900037f8:	f000 ff8c 	bl	90004714 <_ZN17TypedTextDatabase8getFontsEv>
900037fc:	6880      	ldr	r0, [r0, #8]
}
900037fe:	bd08      	pop	{r3, pc}

90003800 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
90003800:	4800      	ldr	r0, [pc, #0]	; (90003804 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
90003802:	4770      	bx	lr
90003804:	90028b0c 	.word	0x90028b0c

90003808 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
90003808:	200b      	movs	r0, #11
9000380a:	4770      	bx	lr

9000380c <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
    {
        if (unicode == 0)
9000380c:	b169      	cbz	r1, 9000382a <_ZNK8touchgfx4Font8getGlyphEt+0x1e>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
9000380e:	6802      	ldr	r2, [r0, #0]
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
90003810:	b530      	push	{r4, r5, lr}
90003812:	b083      	sub	sp, #12
        const uint8_t* dummyPixelDataPointer = 0;
90003814:	2400      	movs	r4, #0
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
90003816:	6895      	ldr	r5, [r2, #8]
90003818:	f10d 0303 	add.w	r3, sp, #3
9000381c:	aa01      	add	r2, sp, #4
        const uint8_t* dummyPixelDataPointer = 0;
9000381e:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
90003820:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
90003824:	47a8      	blx	r5
        return glyph;
    }
90003826:	b003      	add	sp, #12
90003828:	bd30      	pop	{r4, r5, pc}
            return 0;
9000382a:	4608      	mov	r0, r1
    }
9000382c:	4770      	bx	lr
9000382e:	bf00      	nop

90003830 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
90003830:	89c0      	ldrh	r0, [r0, #14]
90003832:	4770      	bx	lr

90003834 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
90003834:	8a00      	ldrh	r0, [r0, #16]
90003836:	4770      	bx	lr

90003838 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
90003838:	88c0      	ldrh	r0, [r0, #6]
9000383a:	4770      	bx	lr

9000383c <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
9000383c:	8880      	ldrh	r0, [r0, #4]
9000383e:	4770      	bx	lr

90003840 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
90003840:	7a80      	ldrb	r0, [r0, #10]
    }
90003842:	f000 007f 	and.w	r0, r0, #127	; 0x7f
90003846:	4770      	bx	lr

90003848 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
90003848:	7a80      	ldrb	r0, [r0, #10]
    }
9000384a:	09c0      	lsrs	r0, r0, #7
9000384c:	4770      	bx	lr
9000384e:	bf00      	nop

90003850 <_ZNK8touchgfx4Font17isVectorBasedFontEv>:
     * @return True if this Font is vector based.
     */
    virtual bool isVectorBasedFont() const
    {
        return false;
    }
90003850:	2000      	movs	r0, #0
90003852:	4770      	bx	lr

90003854 <_ZNK8touchgfx4Font14getScaleFactorEv>:
     * @return The scale factor
     */
    virtual float getScaleFactor() const
    {
        return 0;
    }
90003854:	ed9f 0a01 	vldr	s0, [pc, #4]	; 9000385c <_ZNK8touchgfx4Font14getScaleFactorEv+0x8>
90003858:	4770      	bx	lr
9000385a:	bf00      	nop
9000385c:	00000000 	.word	0x00000000

90003860 <_ZN8touchgfx9TypedTextD1Ev>:
    }
90003860:	4770      	bx	lr
90003862:	bf00      	nop

90003864 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
90003864:	b510      	push	{r4, lr}
90003866:	4604      	mov	r4, r0
    }
90003868:	2108      	movs	r1, #8
9000386a:	f022 fb42 	bl	90025ef2 <_ZdlPvj>
9000386e:	4620      	mov	r0, r4
90003870:	bd10      	pop	{r4, pc}
90003872:	bf00      	nop

90003874 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
90003874:	4770      	bx	lr
90003876:	bf00      	nop

90003878 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
90003878:	f500 7398 	add.w	r3, r0, #304	; 0x130
9000387c:	6808      	ldr	r0, [r1, #0]
9000387e:	6849      	ldr	r1, [r1, #4]
90003880:	c303      	stmia	r3!, {r0, r1}
    }
90003882:	4770      	bx	lr

90003884 <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
90003884:	6a80      	ldr	r0, [r0, #40]	; 0x28
90003886:	4770      	bx	lr

90003888 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
90003888:	4770      	bx	lr
9000388a:	bf00      	nop

9000388c <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
9000388c:	4770      	bx	lr
9000388e:	bf00      	nop

90003890 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
90003890:	6041      	str	r1, [r0, #4]
    }
90003892:	4770      	bx	lr

90003894 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
90003894:	4770      	bx	lr
90003896:	bf00      	nop

90003898 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
90003898:	4905      	ldr	r1, [pc, #20]	; (900038b0 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x18>)
9000389a:	2200      	movs	r2, #0
// screen_game_select

void FrontendApplicationBase::gotoscreen_game_selectScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoscreen_game_selectScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
9000389c:	f500 73a2 	add.w	r3, r0, #324	; 0x144
900038a0:	f8c0 2150 	str.w	r2, [r0, #336]	; 0x150
900038a4:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
900038a8:	e9c0 0152 	strd	r0, r1, [r0, #328]	; 0x148

    virtual void changeToStartScreen()
    {
        gotoscreen_game_selectScreenNoTransition();
    }
900038ac:	4770      	bx	lr
900038ae:	bf00      	nop
900038b0:	90003c0d 	.word	0x90003c0d

900038b4 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
900038b4:	2301      	movs	r3, #1
900038b6:	7203      	strb	r3, [r0, #8]
    }
900038b8:	4770      	bx	lr
900038ba:	bf00      	nop

900038bc <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EED1Ev>:
 * Screen transitioning to.
 *
 * @see Transition
 */
template <Direction templateDirection>
class SlideTransition : public Transition
900038bc:	4770      	bx	lr
900038be:	bf00      	nop

900038c0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EED1Ev>:
900038c0:	4770      	bx	lr
900038c2:	bf00      	nop

900038c4 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
900038c4:	4770      	bx	lr
900038c6:	bf00      	nop

900038c8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
900038c8:	4770      	bx	lr
900038ca:	bf00      	nop

900038cc <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
    {
        (pobject->*pmemfun)();
900038cc:	68c2      	ldr	r2, [r0, #12]
    virtual void execute()
900038ce:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
900038d0:	6841      	ldr	r1, [r0, #4]
900038d2:	ea4f 0c62 	mov.w	ip, r2, asr #1
900038d6:	eb01 0062 	add.w	r0, r1, r2, asr #1
900038da:	07d2      	lsls	r2, r2, #31
900038dc:	d401      	bmi.n	900038e2 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x16>
900038de:	689b      	ldr	r3, [r3, #8]
900038e0:	4718      	bx	r3
900038e2:	f851 200c 	ldr.w	r2, [r1, ip]
900038e6:	689b      	ldr	r3, [r3, #8]
900038e8:	58d3      	ldr	r3, [r2, r3]
900038ea:	4718      	bx	r3

900038ec <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
900038ec:	6843      	ldr	r3, [r0, #4]
900038ee:	b13b      	cbz	r3, 90003900 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
900038f0:	6883      	ldr	r3, [r0, #8]
900038f2:	b10b      	cbz	r3, 900038f8 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0xc>
900038f4:	2001      	movs	r0, #1
    }
900038f6:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
900038f8:	68c0      	ldr	r0, [r0, #12]
900038fa:	f000 0001 	and.w	r0, r0, #1
900038fe:	4770      	bx	lr
90003900:	4618      	mov	r0, r3
90003902:	4770      	bx	lr

90003904 <_ZN8touchgfx12NoTransitionD0Ev>:
90003904:	b510      	push	{r4, lr}
90003906:	4604      	mov	r4, r0
90003908:	210c      	movs	r1, #12
9000390a:	f022 faf2 	bl	90025ef2 <_ZdlPvj>
9000390e:	4620      	mov	r0, r4
90003910:	bd10      	pop	{r4, pc}
90003912:	bf00      	nop

90003914 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
90003914:	b510      	push	{r4, lr}
90003916:	4604      	mov	r4, r0
90003918:	2110      	movs	r1, #16
9000391a:	f022 faea 	bl	90025ef2 <_ZdlPvj>
9000391e:	4620      	mov	r0, r4
90003920:	bd10      	pop	{r4, pc}
90003922:	bf00      	nop

90003924 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
90003924:	b510      	push	{r4, lr}
90003926:	4604      	mov	r4, r0
90003928:	f44f 71ae 	mov.w	r1, #348	; 0x15c
9000392c:	f022 fae1 	bl	90025ef2 <_ZdlPvj>
90003930:	4620      	mov	r0, r4
90003932:	bd10      	pop	{r4, pc}

90003934 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EED0Ev>:
90003934:	b510      	push	{r4, lr}
90003936:	4604      	mov	r4, r0
90003938:	2140      	movs	r1, #64	; 0x40
9000393a:	f022 fada 	bl	90025ef2 <_ZdlPvj>
9000393e:	4620      	mov	r0, r4
90003940:	bd10      	pop	{r4, pc}
90003942:	bf00      	nop

90003944 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EED0Ev>:
90003944:	b510      	push	{r4, lr}
90003946:	4604      	mov	r4, r0
90003948:	2140      	movs	r1, #64	; 0x40
9000394a:	f022 fad2 	bl	90025ef2 <_ZdlPvj>
9000394e:	4620      	mov	r0, r4
90003950:	bd10      	pop	{r4, pc}
90003952:	bf00      	nop

90003954 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
90003954:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
90003956:	f011 f97f 	bl	90014c58 <_ZN8touchgfx11Application11getInstanceEv>
9000395a:	6803      	ldr	r3, [r0, #0]
    }
9000395c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
90003960:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90003962:	4718      	bx	r3

90003964 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv>:
        screenContainer->invalidate();
    }

    virtual void tearDown()
    {
        if (HAL::USE_ANIMATION_STORAGE && screenContainer)
90003964:	4b05      	ldr	r3, [pc, #20]	; (9000397c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x18>)
90003966:	781b      	ldrb	r3, [r3, #0]
90003968:	b13b      	cbz	r3, 9000397a <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x16>
9000396a:	6843      	ldr	r3, [r0, #4]
9000396c:	b12b      	cbz	r3, 9000397a <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x16>
        {
            screenContainer->remove(snapshot);
9000396e:	681a      	ldr	r2, [r3, #0]
90003970:	f100 010c 	add.w	r1, r0, #12
90003974:	4618      	mov	r0, r3
90003976:	6e53      	ldr	r3, [r2, #100]	; 0x64
90003978:	4718      	bx	r3
        }
    }
9000397a:	4770      	bx	lr
9000397c:	2402357b 	.word	0x2402357b

90003980 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE8tearDownEv>:
        if (HAL::USE_ANIMATION_STORAGE && screenContainer)
90003980:	4b05      	ldr	r3, [pc, #20]	; (90003998 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE8tearDownEv+0x18>)
90003982:	781b      	ldrb	r3, [r3, #0]
90003984:	b13b      	cbz	r3, 90003996 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE8tearDownEv+0x16>
90003986:	6843      	ldr	r3, [r0, #4]
90003988:	b12b      	cbz	r3, 90003996 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE8tearDownEv+0x16>
            screenContainer->remove(snapshot);
9000398a:	681a      	ldr	r2, [r3, #0]
9000398c:	f100 010c 	add.w	r1, r0, #12
90003990:	4618      	mov	r0, r3
90003992:	6e53      	ldr	r3, [r2, #100]	; 0x64
90003994:	4718      	bx	r3
    }
90003996:	4770      	bx	lr
90003998:	2402357b 	.word	0x2402357b

9000399c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
9000399c:	b570      	push	{r4, r5, r6, lr}
9000399e:	4605      	mov	r5, r0
        animationCounter++;
900039a0:	f890 0039 	ldrb.w	r0, [r0, #57]	; 0x39
900039a4:	3001      	adds	r0, #1
        if (animationCounter > animationSteps)
900039a6:	f895 3038 	ldrb.w	r3, [r5, #56]	; 0x38
        animationCounter++;
900039aa:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
900039ac:	4298      	cmp	r0, r3
        animationCounter++;
900039ae:	f885 0039 	strb.w	r0, [r5, #57]	; 0x39
        if (animationCounter > animationSteps)
900039b2:	d905      	bls.n	900039c0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x24>
            done = true;
900039b4:	2201      	movs	r2, #1
            animationCounter = 0;
900039b6:	2300      	movs	r3, #0
            done = true;
900039b8:	722a      	strb	r2, [r5, #8]
            animationCounter = 0;
900039ba:	f885 3039 	strb.w	r3, [r5, #57]	; 0x39
    }
900039be:	bd70      	pop	{r4, r5, r6, pc}
        int16_t calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
900039c0:	f9b5 203a 	ldrsh.w	r2, [r5, #58]	; 0x3a
900039c4:	2100      	movs	r1, #0
900039c6:	f012 fec7 	bl	90016758 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
900039ca:	f010 0201 	ands.w	r2, r0, #1
900039ce:	b283      	uxth	r3, r0
900039d0:	d006      	beq.n	900039e0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x44>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
900039d2:	f64f 71ff 	movw	r1, #65535	; 0xffff
900039d6:	2800      	cmp	r0, #0
900039d8:	bfd8      	it	le
900039da:	460a      	movle	r2, r1
900039dc:	4413      	add	r3, r2
900039de:	b29b      	uxth	r3, r3
        Drawable* d = screenContainer->getFirstChild();
900039e0:	6868      	ldr	r0, [r5, #4]
            relativeValue = calculatedValue - snapshot.getX();
900039e2:	8a2c      	ldrh	r4, [r5, #16]
        Drawable* d = screenContainer->getFirstChild();
900039e4:	6802      	ldr	r2, [r0, #0]
900039e6:	4912      	ldr	r1, [pc, #72]	; (90003a30 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x94>)
            relativeValue = calculatedValue - snapshot.getX();
900039e8:	1b1b      	subs	r3, r3, r4
        Drawable* d = screenContainer->getFirstChild();
900039ea:	69d2      	ldr	r2, [r2, #28]
            relativeValue = calculatedValue - snapshot.getX();
900039ec:	87ab      	strh	r3, [r5, #60]	; 0x3c
900039ee:	428a      	cmp	r2, r1
900039f0:	d11b      	bne.n	90003a2a <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x8e>
        return firstChild;
900039f2:	6a84      	ldr	r4, [r0, #40]	; 0x28
        while (d)
900039f4:	b164      	cbz	r4, 90003a10 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x74>
900039f6:	8faa      	ldrh	r2, [r5, #60]	; 0x3c
900039f8:	4e0e      	ldr	r6, [pc, #56]	; (90003a34 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x98>)
                d->setX(d->getX() + relativeValue);
900039fa:	6823      	ldr	r3, [r4, #0]
900039fc:	88a1      	ldrh	r1, [r4, #4]
900039fe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90003a00:	4411      	add	r1, r2
90003a02:	42b3      	cmp	r3, r6
90003a04:	b209      	sxth	r1, r1
        rect.x = x;
90003a06:	d109      	bne.n	90003a1c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x80>
90003a08:	80a1      	strh	r1, [r4, #4]
        return nextSibling;
90003a0a:	69a4      	ldr	r4, [r4, #24]
        while (d)
90003a0c:	2c00      	cmp	r4, #0
90003a0e:	d1f4      	bne.n	900039fa <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x5e>
        screenContainer->invalidate();
90003a10:	6868      	ldr	r0, [r5, #4]
90003a12:	6803      	ldr	r3, [r0, #0]
    }
90003a14:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        screenContainer->invalidate();
90003a18:	695b      	ldr	r3, [r3, #20]
90003a1a:	4718      	bx	r3
                d->setX(d->getX() + relativeValue);
90003a1c:	4620      	mov	r0, r4
90003a1e:	4798      	blx	r3
90003a20:	69a4      	ldr	r4, [r4, #24]
        while (d)
90003a22:	2c00      	cmp	r4, #0
90003a24:	d0f4      	beq.n	90003a10 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x74>
90003a26:	8faa      	ldrh	r2, [r5, #60]	; 0x3c
90003a28:	e7e7      	b.n	900039fa <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x5e>
        Drawable* d = screenContainer->getFirstChild();
90003a2a:	4790      	blx	r2
90003a2c:	4604      	mov	r4, r0
90003a2e:	e7e1      	b.n	900039f4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x58>
90003a30:	90003885 	.word	0x90003885
90003a34:	900023fd 	.word	0x900023fd

90003a38 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv>:
    virtual void handleTickEvent()
90003a38:	b570      	push	{r4, r5, r6, lr}
90003a3a:	4605      	mov	r5, r0
        animationCounter++;
90003a3c:	f890 0039 	ldrb.w	r0, [r0, #57]	; 0x39
90003a40:	3001      	adds	r0, #1
        if (animationCounter > animationSteps)
90003a42:	f895 3038 	ldrb.w	r3, [r5, #56]	; 0x38
        animationCounter++;
90003a46:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
90003a48:	4298      	cmp	r0, r3
        animationCounter++;
90003a4a:	f885 0039 	strb.w	r0, [r5, #57]	; 0x39
        if (animationCounter > animationSteps)
90003a4e:	d905      	bls.n	90003a5c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x24>
            done = true;
90003a50:	2201      	movs	r2, #1
            animationCounter = 0;
90003a52:	2300      	movs	r3, #0
            done = true;
90003a54:	722a      	strb	r2, [r5, #8]
            animationCounter = 0;
90003a56:	f885 3039 	strb.w	r3, [r5, #57]	; 0x39
    }
90003a5a:	bd70      	pop	{r4, r5, r6, pc}
        int16_t calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
90003a5c:	f9b5 203a 	ldrsh.w	r2, [r5, #58]	; 0x3a
90003a60:	2100      	movs	r1, #0
90003a62:	f012 fe79 	bl	90016758 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
90003a66:	f010 0201 	ands.w	r2, r0, #1
90003a6a:	b283      	uxth	r3, r0
90003a6c:	d006      	beq.n	90003a7c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x44>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
90003a6e:	f64f 71ff 	movw	r1, #65535	; 0xffff
90003a72:	2800      	cmp	r0, #0
90003a74:	bfd8      	it	le
90003a76:	460a      	movle	r2, r1
90003a78:	4413      	add	r3, r2
90003a7a:	b29b      	uxth	r3, r3
        Drawable* d = screenContainer->getFirstChild();
90003a7c:	6868      	ldr	r0, [r5, #4]
            relativeValue = calculatedValue - snapshot.getX();
90003a7e:	8a2c      	ldrh	r4, [r5, #16]
        Drawable* d = screenContainer->getFirstChild();
90003a80:	6802      	ldr	r2, [r0, #0]
90003a82:	4912      	ldr	r1, [pc, #72]	; (90003acc <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x94>)
            relativeValue = calculatedValue - snapshot.getX();
90003a84:	1b1b      	subs	r3, r3, r4
        Drawable* d = screenContainer->getFirstChild();
90003a86:	69d2      	ldr	r2, [r2, #28]
            relativeValue = calculatedValue - snapshot.getX();
90003a88:	87ab      	strh	r3, [r5, #60]	; 0x3c
90003a8a:	428a      	cmp	r2, r1
90003a8c:	d11b      	bne.n	90003ac6 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x8e>
90003a8e:	6a84      	ldr	r4, [r0, #40]	; 0x28
        while (d)
90003a90:	b164      	cbz	r4, 90003aac <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x74>
90003a92:	8faa      	ldrh	r2, [r5, #60]	; 0x3c
90003a94:	4e0e      	ldr	r6, [pc, #56]	; (90003ad0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x98>)
                d->setX(d->getX() + relativeValue);
90003a96:	6823      	ldr	r3, [r4, #0]
90003a98:	88a1      	ldrh	r1, [r4, #4]
90003a9a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90003a9c:	4411      	add	r1, r2
90003a9e:	42b3      	cmp	r3, r6
90003aa0:	b209      	sxth	r1, r1
        rect.x = x;
90003aa2:	d109      	bne.n	90003ab8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x80>
90003aa4:	80a1      	strh	r1, [r4, #4]
        return nextSibling;
90003aa6:	69a4      	ldr	r4, [r4, #24]
        while (d)
90003aa8:	2c00      	cmp	r4, #0
90003aaa:	d1f4      	bne.n	90003a96 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x5e>
        screenContainer->invalidate();
90003aac:	6868      	ldr	r0, [r5, #4]
90003aae:	6803      	ldr	r3, [r0, #0]
    }
90003ab0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        screenContainer->invalidate();
90003ab4:	695b      	ldr	r3, [r3, #20]
90003ab6:	4718      	bx	r3
                d->setX(d->getX() + relativeValue);
90003ab8:	4620      	mov	r0, r4
90003aba:	4798      	blx	r3
90003abc:	69a4      	ldr	r4, [r4, #24]
        while (d)
90003abe:	2c00      	cmp	r4, #0
90003ac0:	d0f4      	beq.n	90003aac <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x74>
90003ac2:	8faa      	ldrh	r2, [r5, #60]	; 0x3c
90003ac4:	e7e7      	b.n	90003a96 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x5e>
        Drawable* d = screenContainer->getFirstChild();
90003ac6:	4790      	blx	r2
90003ac8:	4604      	mov	r4, r0
90003aca:	e7e1      	b.n	90003a90 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x58>
90003acc:	90003885 	.word	0x90003885
90003ad0:	900023fd 	.word	0x900023fd

90003ad4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv>:

    virtual void init()
    {
        Transition::init();

        if (done)
90003ad4:	7a03      	ldrb	r3, [r0, #8]
90003ad6:	bb2b      	cbnz	r3, 90003b24 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x50>
90003ad8:	4a14      	ldr	r2, [pc, #80]	; (90003b2c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x58>)
    virtual void init()
90003ada:	b570      	push	{r4, r5, r6, lr}
90003adc:	4605      	mov	r5, r0
        {
            return;
        }

        // Move snapshot and its children with delta value for X or Y
        Drawable* d = screenContainer->getFirstChild();
90003ade:	6840      	ldr	r0, [r0, #4]
90003ae0:	6803      	ldr	r3, [r0, #0]
90003ae2:	69db      	ldr	r3, [r3, #28]
90003ae4:	4293      	cmp	r3, r2
90003ae6:	d11e      	bne.n	90003b26 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x52>
90003ae8:	6a84      	ldr	r4, [r0, #40]	; 0x28
        while (d)
90003aea:	b164      	cbz	r4, 90003b06 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x32>
90003aec:	8f6a      	ldrh	r2, [r5, #58]	; 0x3a
90003aee:	4e10      	ldr	r6, [pc, #64]	; (90003b30 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x5c>)
        {
            switch (templateDirection)
            {
            case EAST:
            case WEST:
                d->setX(d->getX() - targetValue);
90003af0:	6823      	ldr	r3, [r4, #0]
90003af2:	88a1      	ldrh	r1, [r4, #4]
90003af4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90003af6:	1a89      	subs	r1, r1, r2
90003af8:	42b3      	cmp	r3, r6
90003afa:	b209      	sxth	r1, r1
        rect.x = x;
90003afc:	d10b      	bne.n	90003b16 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x42>
90003afe:	80a1      	strh	r1, [r4, #4]
        return nextSibling;
90003b00:	69a4      	ldr	r4, [r4, #24]
        while (d)
90003b02:	2c00      	cmp	r4, #0
90003b04:	d1f4      	bne.n	90003af0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x1c>
            }

            d = d->getNextSibling();
        }

        screenContainer->add(snapshot);
90003b06:	6868      	ldr	r0, [r5, #4]
90003b08:	f105 010c 	add.w	r1, r5, #12
90003b0c:	6803      	ldr	r3, [r0, #0]
    }
90003b0e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        screenContainer->add(snapshot);
90003b12:	6e1b      	ldr	r3, [r3, #96]	; 0x60
90003b14:	4718      	bx	r3
                d->setX(d->getX() - targetValue);
90003b16:	4620      	mov	r0, r4
90003b18:	4798      	blx	r3
90003b1a:	69a4      	ldr	r4, [r4, #24]
        while (d)
90003b1c:	2c00      	cmp	r4, #0
90003b1e:	d0f2      	beq.n	90003b06 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x32>
90003b20:	8f6a      	ldrh	r2, [r5, #58]	; 0x3a
90003b22:	e7e5      	b.n	90003af0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x1c>
90003b24:	4770      	bx	lr
        Drawable* d = screenContainer->getFirstChild();
90003b26:	4798      	blx	r3
90003b28:	4604      	mov	r4, r0
90003b2a:	e7de      	b.n	90003aea <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x16>
90003b2c:	90003885 	.word	0x90003885
90003b30:	900023fd 	.word	0x900023fd

90003b34 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv>:
        if (done)
90003b34:	7a03      	ldrb	r3, [r0, #8]
90003b36:	bb2b      	cbnz	r3, 90003b84 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x50>
90003b38:	4a14      	ldr	r2, [pc, #80]	; (90003b8c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x58>)
    virtual void init()
90003b3a:	b570      	push	{r4, r5, r6, lr}
90003b3c:	4605      	mov	r5, r0
        Drawable* d = screenContainer->getFirstChild();
90003b3e:	6840      	ldr	r0, [r0, #4]
90003b40:	6803      	ldr	r3, [r0, #0]
90003b42:	69db      	ldr	r3, [r3, #28]
90003b44:	4293      	cmp	r3, r2
90003b46:	d11e      	bne.n	90003b86 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x52>
90003b48:	6a84      	ldr	r4, [r0, #40]	; 0x28
        while (d)
90003b4a:	b164      	cbz	r4, 90003b66 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x32>
90003b4c:	8f6a      	ldrh	r2, [r5, #58]	; 0x3a
90003b4e:	4e10      	ldr	r6, [pc, #64]	; (90003b90 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x5c>)
                d->setX(d->getX() - targetValue);
90003b50:	6823      	ldr	r3, [r4, #0]
90003b52:	88a1      	ldrh	r1, [r4, #4]
90003b54:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90003b56:	1a89      	subs	r1, r1, r2
90003b58:	42b3      	cmp	r3, r6
90003b5a:	b209      	sxth	r1, r1
        rect.x = x;
90003b5c:	d10b      	bne.n	90003b76 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x42>
90003b5e:	80a1      	strh	r1, [r4, #4]
        return nextSibling;
90003b60:	69a4      	ldr	r4, [r4, #24]
        while (d)
90003b62:	2c00      	cmp	r4, #0
90003b64:	d1f4      	bne.n	90003b50 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x1c>
        screenContainer->add(snapshot);
90003b66:	6868      	ldr	r0, [r5, #4]
90003b68:	f105 010c 	add.w	r1, r5, #12
90003b6c:	6803      	ldr	r3, [r0, #0]
    }
90003b6e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        screenContainer->add(snapshot);
90003b72:	6e1b      	ldr	r3, [r3, #96]	; 0x60
90003b74:	4718      	bx	r3
                d->setX(d->getX() - targetValue);
90003b76:	4620      	mov	r0, r4
90003b78:	4798      	blx	r3
90003b7a:	69a4      	ldr	r4, [r4, #24]
        while (d)
90003b7c:	2c00      	cmp	r4, #0
90003b7e:	d0f2      	beq.n	90003b66 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x32>
90003b80:	8f6a      	ldrh	r2, [r5, #58]	; 0x3a
90003b82:	e7e5      	b.n	90003b50 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x1c>
90003b84:	4770      	bx	lr
        Drawable* d = screenContainer->getFirstChild();
90003b86:	4798      	blx	r3
90003b88:	4604      	mov	r4, r0
90003b8a:	e7de      	b.n	90003b4a <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x16>
90003b8c:	90003885 	.word	0x90003885
90003b90:	900023fd 	.word	0x900023fd

90003b94 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
90003b94:	f8d0 3140 	ldr.w	r3, [r0, #320]	; 0x140
90003b98:	b1d3      	cbz	r3, 90003bd0 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3c>
90003b9a:	681a      	ldr	r2, [r3, #0]
    virtual void handlePendingScreenTransition()
90003b9c:	b570      	push	{r4, r5, r6, lr}
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
90003b9e:	68d1      	ldr	r1, [r2, #12]
90003ba0:	4604      	mov	r4, r0
90003ba2:	4818      	ldr	r0, [pc, #96]	; (90003c04 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x70>)
90003ba4:	4281      	cmp	r1, r0
90003ba6:	d118      	bne.n	90003bda <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x46>
        return (pobject != 0) && (pmemfun != 0);
90003ba8:	6858      	ldr	r0, [r3, #4]
90003baa:	b180      	cbz	r0, 90003bce <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
90003bac:	6899      	ldr	r1, [r3, #8]
90003bae:	b1e1      	cbz	r1, 90003bea <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x56>
        {
            pendingScreenTransitionCallback->execute();
90003bb0:	6892      	ldr	r2, [r2, #8]
90003bb2:	4915      	ldr	r1, [pc, #84]	; (90003c08 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x74>)
90003bb4:	428a      	cmp	r2, r1
90003bb6:	d122      	bne.n	90003bfe <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x6a>
        (pobject->*pmemfun)();
90003bb8:	68da      	ldr	r2, [r3, #12]
90003bba:	6858      	ldr	r0, [r3, #4]
90003bbc:	eb00 0062 	add.w	r0, r0, r2, asr #1
90003bc0:	07d2      	lsls	r2, r2, #31
90003bc2:	d406      	bmi.n	90003bd2 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3e>
90003bc4:	689b      	ldr	r3, [r3, #8]
90003bc6:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
90003bc8:	2300      	movs	r3, #0
90003bca:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
    }
90003bce:	bd70      	pop	{r4, r5, r6, pc}
90003bd0:	4770      	bx	lr
90003bd2:	6899      	ldr	r1, [r3, #8]
90003bd4:	6803      	ldr	r3, [r0, #0]
90003bd6:	585b      	ldr	r3, [r3, r1]
90003bd8:	e7f5      	b.n	90003bc6 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x32>
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
90003bda:	4618      	mov	r0, r3
90003bdc:	4788      	blx	r1
90003bde:	2800      	cmp	r0, #0
90003be0:	d0f5      	beq.n	90003bce <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
            pendingScreenTransitionCallback->execute();
90003be2:	f8d4 3140 	ldr.w	r3, [r4, #320]	; 0x140
90003be6:	681a      	ldr	r2, [r3, #0]
90003be8:	e7e2      	b.n	90003bb0 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x1c>
        return (pobject != 0) && (pmemfun != 0);
90003bea:	68dd      	ldr	r5, [r3, #12]
90003bec:	07ee      	lsls	r6, r5, #31
90003bee:	d5ee      	bpl.n	90003bce <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
90003bf0:	6892      	ldr	r2, [r2, #8]
90003bf2:	4e05      	ldr	r6, [pc, #20]	; (90003c08 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x74>)
90003bf4:	42b2      	cmp	r2, r6
90003bf6:	d102      	bne.n	90003bfe <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x6a>
        (pobject->*pmemfun)();
90003bf8:	eb00 0065 	add.w	r0, r0, r5, asr #1
90003bfc:	e7ea      	b.n	90003bd4 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x40>
90003bfe:	4618      	mov	r0, r3
90003c00:	4790      	blx	r2
90003c02:	e7e1      	b.n	90003bc8 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x34>
90003c04:	900038ed 	.word	0x900038ed
90003c08:	900038cd 	.word	0x900038cd

90003c0c <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv>:
}

void FrontendApplicationBase::gotoscreen_game_selectScreenNoTransitionImpl()
{
90003c0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<screen_game_selectView, screen_game_selectPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
90003c10:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
90003c14:	4607      	mov	r7, r0
90003c16:	b081      	sub	sp, #4
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90003c18:	68a0      	ldr	r0, [r4, #8]
90003c1a:	6803      	ldr	r3, [r0, #0]
90003c1c:	6a1b      	ldr	r3, [r3, #32]
90003c1e:	4798      	blx	r3
90003c20:	f5b0 7fca 	cmp.w	r0, #404	; 0x194
90003c24:	f0c0 809e 	bcc.w	90003d64 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x158>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90003c28:	6860      	ldr	r0, [r4, #4]
90003c2a:	6803      	ldr	r3, [r0, #0]
90003c2c:	6a1b      	ldr	r3, [r3, #32]
90003c2e:	4798      	blx	r3
90003c30:	280f      	cmp	r0, #15
90003c32:	f240 80a3 	bls.w	90003d7c <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x170>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90003c36:	68e0      	ldr	r0, [r4, #12]
90003c38:	6803      	ldr	r3, [r0, #0]
90003c3a:	6a1b      	ldr	r3, [r3, #32]
90003c3c:	4798      	blx	r3
90003c3e:	280b      	cmp	r0, #11
90003c40:	f240 8096 	bls.w	90003d70 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x164>
    if (*currentTrans)
90003c44:	f8df 9160 	ldr.w	r9, [pc, #352]	; 90003da8 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x19c>
    Application::getInstance()->clearAllTimerWidgets();
90003c48:	f011 f806 	bl	90014c58 <_ZN8touchgfx11Application11getInstanceEv>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
90003c4c:	3004      	adds	r0, #4
90003c4e:	f011 f828 	bl	90014ca2 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
90003c52:	f8d9 0000 	ldr.w	r0, [r9]
90003c56:	b140      	cbz	r0, 90003c6a <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x5e>
        (*currentTrans)->tearDown();
90003c58:	6803      	ldr	r3, [r0, #0]
90003c5a:	68db      	ldr	r3, [r3, #12]
90003c5c:	4798      	blx	r3
    if (*currentTrans)
90003c5e:	f8d9 0000 	ldr.w	r0, [r9]
90003c62:	b110      	cbz	r0, 90003c6a <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x5e>
        (*currentTrans)->~Transition();
90003c64:	6803      	ldr	r3, [r0, #0]
90003c66:	681b      	ldr	r3, [r3, #0]
90003c68:	4798      	blx	r3
    if (*currentScreen)
90003c6a:	f8df 8140 	ldr.w	r8, [pc, #320]	; 90003dac <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x1a0>
90003c6e:	f8d8 0000 	ldr.w	r0, [r8]
90003c72:	2800      	cmp	r0, #0
90003c74:	d063      	beq.n	90003d3e <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x132>
        (*currentScreen)->tearDownScreen();
90003c76:	6803      	ldr	r3, [r0, #0]
90003c78:	695b      	ldr	r3, [r3, #20]
90003c7a:	4798      	blx	r3
    if (*currentPresenter)
90003c7c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
90003c80:	2800      	cmp	r0, #0
90003c82:	d057      	beq.n	90003d34 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x128>
        (*currentPresenter)->deactivate();
90003c84:	6803      	ldr	r3, [r0, #0]
90003c86:	685b      	ldr	r3, [r3, #4]
90003c88:	4798      	blx	r3
    if (*currentScreen)
90003c8a:	f8d8 0000 	ldr.w	r0, [r8]
90003c8e:	b110      	cbz	r0, 90003c96 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x8a>
        (*currentScreen)->~Screen();
90003c90:	6803      	ldr	r3, [r0, #0]
90003c92:	681b      	ldr	r3, [r3, #0]
90003c94:	4798      	blx	r3
    if (*currentPresenter)
90003c96:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
90003c9a:	b110      	cbz	r0, 90003ca2 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x96>
        (*currentPresenter)->~Presenter();
90003c9c:	6803      	ldr	r3, [r0, #0]
90003c9e:	689b      	ldr	r3, [r3, #8]
90003ca0:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
90003ca2:	68e0      	ldr	r0, [r4, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
90003ca4:	2100      	movs	r1, #0
90003ca6:	6803      	ldr	r3, [r0, #0]
        : screenContainer(0), done(false)
90003ca8:	468b      	mov	fp, r1
90003caa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90003cac:	4798      	blx	r3
90003cae:	4b36      	ldr	r3, [pc, #216]	; (90003d88 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x17c>)
90003cb0:	4605      	mov	r5, r0
90003cb2:	f8c0 b004 	str.w	fp, [r0, #4]
90003cb6:	f880 b008 	strb.w	fp, [r0, #8]
90003cba:	4659      	mov	r1, fp
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
90003cbc:	68a0      	ldr	r0, [r4, #8]
90003cbe:	602b      	str	r3, [r5, #0]
90003cc0:	6803      	ldr	r3, [r0, #0]
90003cc2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90003cc4:	4798      	blx	r3
90003cc6:	4606      	mov	r6, r0
90003cc8:	f002 fbe2 	bl	90006490 <_ZN22screen_game_selectViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
90003ccc:	6860      	ldr	r0, [r4, #4]
90003cce:	4659      	mov	r1, fp
90003cd0:	6803      	ldr	r3, [r0, #0]
90003cd2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90003cd4:	4798      	blx	r3
90003cd6:	4604      	mov	r4, r0
90003cd8:	4631      	mov	r1, r6
90003cda:	f002 fbad 	bl	90006438 <_ZN27screen_game_selectPresenterC1ER22screen_game_selectView>
    *currentTrans = newTransition;
90003cde:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
90003ce2:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
90003ce6:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
90003cea:	2c00      	cmp	r4, #0
90003cec:	d02c      	beq.n	90003d48 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x13c>
90003cee:	1d23      	adds	r3, r4, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
90003cf0:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
90003cf4:	4630      	mov	r0, r6
90003cf6:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
90003cf8:	f8c4 a008 	str.w	sl, [r4, #8]
90003cfc:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
90003cfe:	63f4      	str	r4, [r6, #60]	; 0x3c
90003d00:	4798      	blx	r3
    newPresenter->activate();
90003d02:	6823      	ldr	r3, [r4, #0]
90003d04:	4620      	mov	r0, r4
90003d06:	681b      	ldr	r3, [r3, #0]
90003d08:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
90003d0a:	4629      	mov	r1, r5
90003d0c:	4630      	mov	r0, r6
90003d0e:	f012 fd1d 	bl	9001674c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
90003d12:	682b      	ldr	r3, [r5, #0]
90003d14:	491d      	ldr	r1, [pc, #116]	; (90003d8c <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x180>)
90003d16:	691a      	ldr	r2, [r3, #16]
90003d18:	428a      	cmp	r2, r1
90003d1a:	d117      	bne.n	90003d4c <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x140>
    newTransition->invalidate();
90003d1c:	695b      	ldr	r3, [r3, #20]
90003d1e:	4a1c      	ldr	r2, [pc, #112]	; (90003d90 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x184>)
90003d20:	4293      	cmp	r3, r2
90003d22:	d11a      	bne.n	90003d5a <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x14e>
        Application::getInstance()->invalidate();
90003d24:	f010 ff98 	bl	90014c58 <_ZN8touchgfx11Application11getInstanceEv>
90003d28:	6803      	ldr	r3, [r0, #0]
90003d2a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
}
90003d2c:	b001      	add	sp, #4
90003d2e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90003d32:	4718      	bx	r3
    if (*currentScreen)
90003d34:	f8d8 0000 	ldr.w	r0, [r8]
90003d38:	2800      	cmp	r0, #0
90003d3a:	d1a9      	bne.n	90003c90 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x84>
90003d3c:	e7b1      	b.n	90003ca2 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x96>
    if (*currentPresenter)
90003d3e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
90003d42:	2800      	cmp	r0, #0
90003d44:	d19e      	bne.n	90003c84 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x78>
90003d46:	e7ac      	b.n	90003ca2 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x96>
    model->bind(newPresenter);
90003d48:	4623      	mov	r3, r4
90003d4a:	e7d1      	b.n	90003cf0 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0xe4>
    newTransition->init();
90003d4c:	4628      	mov	r0, r5
90003d4e:	4790      	blx	r2
    newTransition->invalidate();
90003d50:	682b      	ldr	r3, [r5, #0]
90003d52:	4a0f      	ldr	r2, [pc, #60]	; (90003d90 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x184>)
90003d54:	695b      	ldr	r3, [r3, #20]
90003d56:	4293      	cmp	r3, r2
90003d58:	d0e4      	beq.n	90003d24 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x118>
90003d5a:	4628      	mov	r0, r5
90003d5c:	b001      	add	sp, #4
90003d5e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90003d62:	4718      	bx	r3
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90003d64:	4b0b      	ldr	r3, [pc, #44]	; (90003d94 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x188>)
90003d66:	21a3      	movs	r1, #163	; 0xa3
90003d68:	4a0b      	ldr	r2, [pc, #44]	; (90003d98 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x18c>)
90003d6a:	480c      	ldr	r0, [pc, #48]	; (90003d9c <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x190>)
90003d6c:	f022 f8f0 	bl	90025f50 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90003d70:	4b0b      	ldr	r3, [pc, #44]	; (90003da0 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x194>)
90003d72:	21a5      	movs	r1, #165	; 0xa5
90003d74:	4a08      	ldr	r2, [pc, #32]	; (90003d98 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x18c>)
90003d76:	4809      	ldr	r0, [pc, #36]	; (90003d9c <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x190>)
90003d78:	f022 f8ea 	bl	90025f50 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90003d7c:	4b09      	ldr	r3, [pc, #36]	; (90003da4 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x198>)
90003d7e:	21a4      	movs	r1, #164	; 0xa4
90003d80:	4a05      	ldr	r2, [pc, #20]	; (90003d98 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x18c>)
90003d82:	4806      	ldr	r0, [pc, #24]	; (90003d9c <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x190>)
90003d84:	f022 f8e4 	bl	90025f50 <__assert_func>
90003d88:	90029204 	.word	0x90029204
90003d8c:	9000388d 	.word	0x9000388d
90003d90:	90003955 	.word	0x90003955
90003d94:	90028bf8 	.word	0x90028bf8
90003d98:	90028c88 	.word	0x90028c88
90003d9c:	90028da4 	.word	0x90028da4
90003da0:	90028e90 	.word	0x90028e90
90003da4:	90028dec 	.word	0x90028dec
90003da8:	240235c4 	.word	0x240235c4
90003dac:	240235c0 	.word	0x240235c0

90003db0 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoscreen_game_selectScreenSlideTransitionWestImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoscreen_game_selectScreenSlideTransitionWestImpl()
{
90003db0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<screen_game_selectView, screen_game_selectPresenter, touchgfx::SlideTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
90003db4:	e9d0 4b55 	ldrd	r4, fp, [r0, #340]	; 0x154
{
90003db8:	4680      	mov	r8, r0
90003dba:	b081      	sub	sp, #4
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90003dbc:	68a0      	ldr	r0, [r4, #8]
90003dbe:	6803      	ldr	r3, [r0, #0]
90003dc0:	6a1b      	ldr	r3, [r3, #32]
90003dc2:	4798      	blx	r3
90003dc4:	f5b0 7fca 	cmp.w	r0, #404	; 0x194
90003dc8:	f0c0 80e0 	bcc.w	90003f8c <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x1dc>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90003dcc:	6860      	ldr	r0, [r4, #4]
90003dce:	6803      	ldr	r3, [r0, #0]
90003dd0:	6a1b      	ldr	r3, [r3, #32]
90003dd2:	4798      	blx	r3
90003dd4:	280f      	cmp	r0, #15
90003dd6:	f240 80e5 	bls.w	90003fa4 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x1f4>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90003dda:	68e0      	ldr	r0, [r4, #12]
90003ddc:	6803      	ldr	r3, [r0, #0]
90003dde:	6a1b      	ldr	r3, [r3, #32]
90003de0:	4798      	blx	r3
90003de2:	283f      	cmp	r0, #63	; 0x3f
90003de4:	f240 80d8 	bls.w	90003f98 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x1e8>
    if (*currentTrans)
90003de8:	f8df a1f8 	ldr.w	sl, [pc, #504]	; 90003fe4 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x234>
    Application::getInstance()->clearAllTimerWidgets();
90003dec:	f010 ff34 	bl	90014c58 <_ZN8touchgfx11Application11getInstanceEv>
90003df0:	3004      	adds	r0, #4
90003df2:	f010 ff56 	bl	90014ca2 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
90003df6:	f8da 0000 	ldr.w	r0, [sl]
90003dfa:	b140      	cbz	r0, 90003e0e <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x5e>
        (*currentTrans)->tearDown();
90003dfc:	6803      	ldr	r3, [r0, #0]
90003dfe:	68db      	ldr	r3, [r3, #12]
90003e00:	4798      	blx	r3
    if (*currentTrans)
90003e02:	f8da 0000 	ldr.w	r0, [sl]
90003e06:	b110      	cbz	r0, 90003e0e <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x5e>
        (*currentTrans)->~Transition();
90003e08:	6803      	ldr	r3, [r0, #0]
90003e0a:	681b      	ldr	r3, [r3, #0]
90003e0c:	4798      	blx	r3
    if (*currentScreen)
90003e0e:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 90003fe8 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x238>
90003e12:	f8d9 0000 	ldr.w	r0, [r9]
90003e16:	2800      	cmp	r0, #0
90003e18:	f000 80a4 	beq.w	90003f64 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x1b4>
        (*currentScreen)->tearDownScreen();
90003e1c:	6803      	ldr	r3, [r0, #0]
90003e1e:	695b      	ldr	r3, [r3, #20]
90003e20:	4798      	blx	r3
    if (*currentPresenter)
90003e22:	f8d8 013c 	ldr.w	r0, [r8, #316]	; 0x13c
90003e26:	2800      	cmp	r0, #0
90003e28:	f000 8081 	beq.w	90003f2e <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x17e>
        (*currentPresenter)->deactivate();
90003e2c:	6803      	ldr	r3, [r0, #0]
90003e2e:	685b      	ldr	r3, [r3, #4]
90003e30:	4798      	blx	r3
    if (*currentScreen)
90003e32:	f8d9 0000 	ldr.w	r0, [r9]
90003e36:	b110      	cbz	r0, 90003e3e <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x8e>
        (*currentScreen)->~Screen();
90003e38:	6803      	ldr	r3, [r0, #0]
90003e3a:	681b      	ldr	r3, [r3, #0]
90003e3c:	4798      	blx	r3
    if (*currentPresenter)
90003e3e:	f8d8 013c 	ldr.w	r0, [r8, #316]	; 0x13c
90003e42:	b110      	cbz	r0, 90003e4a <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x9a>
        (*currentPresenter)->~Presenter();
90003e44:	6803      	ldr	r3, [r0, #0]
90003e46:	689b      	ldr	r3, [r3, #8]
90003e48:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
90003e4a:	68e0      	ldr	r0, [r4, #12]
90003e4c:	2100      	movs	r1, #0
90003e4e:	6803      	ldr	r3, [r0, #0]
        : screenContainer(0), done(false)
90003e50:	460f      	mov	r7, r1
90003e52:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90003e54:	4798      	blx	r3
          relativeValue(0)
90003e56:	4b56      	ldr	r3, [pc, #344]	; (90003fb0 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x200>)
90003e58:	4606      	mov	r6, r0
90003e5a:	4605      	mov	r5, r0
90003e5c:	6047      	str	r7, [r0, #4]
90003e5e:	7207      	strb	r7, [r0, #8]
90003e60:	f846 3b0c 	str.w	r3, [r6], #12
          snapshot(),
90003e64:	4630      	mov	r0, r6
90003e66:	f00d faef 	bl	90011448 <_ZN8touchgfx14SnapshotWidgetC1Ev>
        if (!HAL::USE_ANIMATION_STORAGE)
90003e6a:	4b52      	ldr	r3, [pc, #328]	; (90003fb4 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x204>)
          animationSteps(transitionSteps),
90003e6c:	2214      	movs	r2, #20
          relativeValue(0)
90003e6e:	87af      	strh	r7, [r5, #60]	; 0x3c
        if (!HAL::USE_ANIMATION_STORAGE)
90003e70:	781b      	ldrb	r3, [r3, #0]
          animationSteps(transitionSteps),
90003e72:	872a      	strh	r2, [r5, #56]	; 0x38
        if (!HAL::USE_ANIMATION_STORAGE)
90003e74:	2b00      	cmp	r3, #0
90003e76:	d166      	bne.n	90003f46 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x196>
            done = true;
90003e78:	2301      	movs	r3, #1
90003e7a:	722b      	strb	r3, [r5, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
90003e7c:	68a0      	ldr	r0, [r4, #8]
90003e7e:	2100      	movs	r1, #0
90003e80:	6803      	ldr	r3, [r0, #0]
90003e82:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90003e84:	4798      	blx	r3
90003e86:	4607      	mov	r7, r0
90003e88:	f002 fb02 	bl	90006490 <_ZN22screen_game_selectViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
90003e8c:	6860      	ldr	r0, [r4, #4]
90003e8e:	2100      	movs	r1, #0
90003e90:	6803      	ldr	r3, [r0, #0]
90003e92:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90003e94:	4798      	blx	r3
90003e96:	4604      	mov	r4, r0
90003e98:	4639      	mov	r1, r7
90003e9a:	f002 facd 	bl	90006438 <_ZN27screen_game_selectPresenterC1ER22screen_game_selectView>
    *currentTrans = newTransition;
90003e9e:	f8ca 5000 	str.w	r5, [sl]
    *currentPresenter = newPresenter;
90003ea2:	f8c8 413c 	str.w	r4, [r8, #316]	; 0x13c
    *currentScreen = newScreen;
90003ea6:	f8c9 7000 	str.w	r7, [r9]
    model->bind(newPresenter);
90003eaa:	2c00      	cmp	r4, #0
90003eac:	d060      	beq.n	90003f70 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x1c0>
90003eae:	1d23      	adds	r3, r4, #4
90003eb0:	f8cb 3000 	str.w	r3, [fp]
    newScreen->setupScreen();
90003eb4:	4638      	mov	r0, r7
90003eb6:	683b      	ldr	r3, [r7, #0]
90003eb8:	f8c4 b008 	str.w	fp, [r4, #8]
90003ebc:	68db      	ldr	r3, [r3, #12]
90003ebe:	63fc      	str	r4, [r7, #60]	; 0x3c
90003ec0:	4798      	blx	r3
    newPresenter->activate();
90003ec2:	6823      	ldr	r3, [r4, #0]
90003ec4:	4620      	mov	r0, r4
90003ec6:	681b      	ldr	r3, [r3, #0]
90003ec8:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
90003eca:	4629      	mov	r1, r5
90003ecc:	4638      	mov	r0, r7
90003ece:	f012 fc3d 	bl	9001674c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
90003ed2:	682b      	ldr	r3, [r5, #0]
90003ed4:	4938      	ldr	r1, [pc, #224]	; (90003fb8 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x208>)
90003ed6:	691a      	ldr	r2, [r3, #16]
90003ed8:	428a      	cmp	r2, r1
90003eda:	d153      	bne.n	90003f84 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x1d4>
        if (done)
90003edc:	7a2a      	ldrb	r2, [r5, #8]
90003ede:	b9d2      	cbnz	r2, 90003f16 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x166>
        Drawable* d = screenContainer->getFirstChild();
90003ee0:	6868      	ldr	r0, [r5, #4]
90003ee2:	4a36      	ldr	r2, [pc, #216]	; (90003fbc <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x20c>)
90003ee4:	6803      	ldr	r3, [r0, #0]
90003ee6:	69db      	ldr	r3, [r3, #28]
90003ee8:	4293      	cmp	r3, r2
90003eea:	d143      	bne.n	90003f74 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x1c4>
90003eec:	6a84      	ldr	r4, [r0, #40]	; 0x28
        while (d)
90003eee:	b164      	cbz	r4, 90003f0a <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x15a>
90003ef0:	8f6a      	ldrh	r2, [r5, #58]	; 0x3a
90003ef2:	4f33      	ldr	r7, [pc, #204]	; (90003fc0 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x210>)
                d->setX(d->getX() - targetValue);
90003ef4:	6823      	ldr	r3, [r4, #0]
90003ef6:	88a1      	ldrh	r1, [r4, #4]
90003ef8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90003efa:	1a89      	subs	r1, r1, r2
90003efc:	42bb      	cmp	r3, r7
90003efe:	b209      	sxth	r1, r1
90003f00:	d11a      	bne.n	90003f38 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x188>
        rect.x = x;
90003f02:	80a1      	strh	r1, [r4, #4]
        return nextSibling;
90003f04:	69a4      	ldr	r4, [r4, #24]
        while (d)
90003f06:	2c00      	cmp	r4, #0
90003f08:	d1f4      	bne.n	90003ef4 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x144>
        screenContainer->add(snapshot);
90003f0a:	6868      	ldr	r0, [r5, #4]
90003f0c:	4631      	mov	r1, r6
90003f0e:	6803      	ldr	r3, [r0, #0]
90003f10:	6e1b      	ldr	r3, [r3, #96]	; 0x60
90003f12:	4798      	blx	r3
    newTransition->invalidate();
90003f14:	682b      	ldr	r3, [r5, #0]
90003f16:	695b      	ldr	r3, [r3, #20]
90003f18:	4a2a      	ldr	r2, [pc, #168]	; (90003fc4 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x214>)
90003f1a:	4293      	cmp	r3, r2
90003f1c:	d12d      	bne.n	90003f7a <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x1ca>
        Application::getInstance()->invalidate();
90003f1e:	f010 fe9b 	bl	90014c58 <_ZN8touchgfx11Application11getInstanceEv>
90003f22:	6803      	ldr	r3, [r0, #0]
90003f24:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
}
90003f26:	b001      	add	sp, #4
90003f28:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90003f2c:	4718      	bx	r3
    if (*currentScreen)
90003f2e:	f8d9 0000 	ldr.w	r0, [r9]
90003f32:	2800      	cmp	r0, #0
90003f34:	d180      	bne.n	90003e38 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x88>
90003f36:	e788      	b.n	90003e4a <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x9a>
                d->setX(d->getX() - targetValue);
90003f38:	4620      	mov	r0, r4
90003f3a:	4798      	blx	r3
90003f3c:	69a4      	ldr	r4, [r4, #24]
        while (d)
90003f3e:	2c00      	cmp	r4, #0
90003f40:	d0e3      	beq.n	90003f0a <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x15a>
90003f42:	8f6a      	ldrh	r2, [r5, #58]	; 0x3a
90003f44:	e7d6      	b.n	90003ef4 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x144>
        snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
90003f46:	4b20      	ldr	r3, [pc, #128]	; (90003fc8 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x218>)
        snapshot.makeSnapshot();
90003f48:	4630      	mov	r0, r6
        rect.x = x;
90003f4a:	612f      	str	r7, [r5, #16]
        snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
90003f4c:	f9b3 3000 	ldrsh.w	r3, [r3]
90003f50:	4f1e      	ldr	r7, [pc, #120]	; (90003fcc <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x21c>)
        rect.height = height;
90003f52:	82eb      	strh	r3, [r5, #22]
90003f54:	f9b7 3000 	ldrsh.w	r3, [r7]
        rect.width = width;
90003f58:	82ab      	strh	r3, [r5, #20]
        snapshot.makeSnapshot();
90003f5a:	f00d f9f0 	bl	9001133e <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>
            targetValue = HAL::DISPLAY_WIDTH;
90003f5e:	883b      	ldrh	r3, [r7, #0]
90003f60:	876b      	strh	r3, [r5, #58]	; 0x3a
            break;
90003f62:	e78b      	b.n	90003e7c <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0xcc>
    if (*currentPresenter)
90003f64:	f8d8 013c 	ldr.w	r0, [r8, #316]	; 0x13c
90003f68:	2800      	cmp	r0, #0
90003f6a:	f47f af5f 	bne.w	90003e2c <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x7c>
90003f6e:	e76c      	b.n	90003e4a <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x9a>
    model->bind(newPresenter);
90003f70:	4623      	mov	r3, r4
90003f72:	e79d      	b.n	90003eb0 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x100>
        Drawable* d = screenContainer->getFirstChild();
90003f74:	4798      	blx	r3
90003f76:	4604      	mov	r4, r0
90003f78:	e7b9      	b.n	90003eee <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x13e>
    newTransition->invalidate();
90003f7a:	4628      	mov	r0, r5
90003f7c:	b001      	add	sp, #4
90003f7e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90003f82:	4718      	bx	r3
    newTransition->init();
90003f84:	4628      	mov	r0, r5
90003f86:	4790      	blx	r2
    newTransition->invalidate();
90003f88:	682b      	ldr	r3, [r5, #0]
90003f8a:	e7c4      	b.n	90003f16 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x166>
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90003f8c:	4b10      	ldr	r3, [pc, #64]	; (90003fd0 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x220>)
90003f8e:	21a3      	movs	r1, #163	; 0xa3
90003f90:	4a10      	ldr	r2, [pc, #64]	; (90003fd4 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x224>)
90003f92:	4811      	ldr	r0, [pc, #68]	; (90003fd8 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x228>)
90003f94:	f021 ffdc 	bl	90025f50 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90003f98:	4b10      	ldr	r3, [pc, #64]	; (90003fdc <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x22c>)
90003f9a:	21a5      	movs	r1, #165	; 0xa5
90003f9c:	4a0d      	ldr	r2, [pc, #52]	; (90003fd4 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x224>)
90003f9e:	480e      	ldr	r0, [pc, #56]	; (90003fd8 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x228>)
90003fa0:	f021 ffd6 	bl	90025f50 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90003fa4:	4b0e      	ldr	r3, [pc, #56]	; (90003fe0 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x230>)
90003fa6:	21a4      	movs	r1, #164	; 0xa4
90003fa8:	4a0a      	ldr	r2, [pc, #40]	; (90003fd4 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x224>)
90003faa:	480b      	ldr	r0, [pc, #44]	; (90003fd8 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x228>)
90003fac:	f021 ffd0 	bl	90025f50 <__assert_func>
90003fb0:	90029228 	.word	0x90029228
90003fb4:	2402357b 	.word	0x2402357b
90003fb8:	90003b35 	.word	0x90003b35
90003fbc:	90003885 	.word	0x90003885
90003fc0:	900023fd 	.word	0x900023fd
90003fc4:	90003955 	.word	0x90003955
90003fc8:	24023572 	.word	0x24023572
90003fcc:	24023570 	.word	0x24023570
90003fd0:	90028bf8 	.word	0x90028bf8
90003fd4:	90028f34 	.word	0x90028f34
90003fd8:	90028da4 	.word	0x90028da4
90003fdc:	90028e90 	.word	0x90028e90
90003fe0:	90028dec 	.word	0x90028dec
90003fe4:	240235c4 	.word	0x240235c4
90003fe8:	240235c0 	.word	0x240235c0

90003fec <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv>:
{
90003fec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<screen_asteroidsView, screen_asteroidsPresenter, touchgfx::SlideTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
90003ff0:	e9d0 4b55 	ldrd	r4, fp, [r0, #340]	; 0x154
{
90003ff4:	4680      	mov	r8, r0
90003ff6:	b081      	sub	sp, #4
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90003ff8:	68a0      	ldr	r0, [r4, #8]
90003ffa:	6803      	ldr	r3, [r0, #0]
90003ffc:	6a1b      	ldr	r3, [r3, #32]
90003ffe:	4798      	blx	r3
90004000:	f242 43a7 	movw	r3, #9383	; 0x24a7
90004004:	4298      	cmp	r0, r3
90004006:	f240 80e1 	bls.w	900041cc <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x1e0>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
9000400a:	6860      	ldr	r0, [r4, #4]
9000400c:	6803      	ldr	r3, [r0, #0]
9000400e:	6a1b      	ldr	r3, [r3, #32]
90004010:	4798      	blx	r3
90004012:	281b      	cmp	r0, #27
90004014:	f240 80e6 	bls.w	900041e4 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x1f8>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90004018:	68e0      	ldr	r0, [r4, #12]
9000401a:	6803      	ldr	r3, [r0, #0]
9000401c:	6a1b      	ldr	r3, [r3, #32]
9000401e:	4798      	blx	r3
90004020:	283f      	cmp	r0, #63	; 0x3f
90004022:	f240 80d9 	bls.w	900041d8 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x1ec>
    if (*currentTrans)
90004026:	f8df a1fc 	ldr.w	sl, [pc, #508]	; 90004224 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x238>
    Application::getInstance()->clearAllTimerWidgets();
9000402a:	f010 fe15 	bl	90014c58 <_ZN8touchgfx11Application11getInstanceEv>
9000402e:	3004      	adds	r0, #4
90004030:	f010 fe37 	bl	90014ca2 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
90004034:	f8da 0000 	ldr.w	r0, [sl]
90004038:	b140      	cbz	r0, 9000404c <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x60>
        (*currentTrans)->tearDown();
9000403a:	6803      	ldr	r3, [r0, #0]
9000403c:	68db      	ldr	r3, [r3, #12]
9000403e:	4798      	blx	r3
    if (*currentTrans)
90004040:	f8da 0000 	ldr.w	r0, [sl]
90004044:	b110      	cbz	r0, 9000404c <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x60>
        (*currentTrans)->~Transition();
90004046:	6803      	ldr	r3, [r0, #0]
90004048:	681b      	ldr	r3, [r3, #0]
9000404a:	4798      	blx	r3
    if (*currentScreen)
9000404c:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 90004228 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x23c>
90004050:	f8d9 0000 	ldr.w	r0, [r9]
90004054:	2800      	cmp	r0, #0
90004056:	f000 80a5 	beq.w	900041a4 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x1b8>
        (*currentScreen)->tearDownScreen();
9000405a:	6803      	ldr	r3, [r0, #0]
9000405c:	695b      	ldr	r3, [r3, #20]
9000405e:	4798      	blx	r3
    if (*currentPresenter)
90004060:	f8d8 013c 	ldr.w	r0, [r8, #316]	; 0x13c
90004064:	2800      	cmp	r0, #0
90004066:	f000 8081 	beq.w	9000416c <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x180>
        (*currentPresenter)->deactivate();
9000406a:	6803      	ldr	r3, [r0, #0]
9000406c:	685b      	ldr	r3, [r3, #4]
9000406e:	4798      	blx	r3
    if (*currentScreen)
90004070:	f8d9 0000 	ldr.w	r0, [r9]
90004074:	b110      	cbz	r0, 9000407c <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x90>
        (*currentScreen)->~Screen();
90004076:	6803      	ldr	r3, [r0, #0]
90004078:	681b      	ldr	r3, [r3, #0]
9000407a:	4798      	blx	r3
    if (*currentPresenter)
9000407c:	f8d8 013c 	ldr.w	r0, [r8, #316]	; 0x13c
90004080:	b110      	cbz	r0, 90004088 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x9c>
        (*currentPresenter)->~Presenter();
90004082:	6803      	ldr	r3, [r0, #0]
90004084:	689b      	ldr	r3, [r3, #8]
90004086:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
90004088:	68e0      	ldr	r0, [r4, #12]
9000408a:	2100      	movs	r1, #0
9000408c:	6803      	ldr	r3, [r0, #0]
        : screenContainer(0), done(false)
9000408e:	460f      	mov	r7, r1
90004090:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90004092:	4798      	blx	r3
          relativeValue(0)
90004094:	4b56      	ldr	r3, [pc, #344]	; (900041f0 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x204>)
90004096:	4606      	mov	r6, r0
90004098:	4605      	mov	r5, r0
9000409a:	6047      	str	r7, [r0, #4]
9000409c:	7207      	strb	r7, [r0, #8]
9000409e:	f846 3b0c 	str.w	r3, [r6], #12
          snapshot(),
900040a2:	4630      	mov	r0, r6
900040a4:	f00d f9d0 	bl	90011448 <_ZN8touchgfx14SnapshotWidgetC1Ev>
        if (!HAL::USE_ANIMATION_STORAGE)
900040a8:	4b52      	ldr	r3, [pc, #328]	; (900041f4 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x208>)
          animationSteps(transitionSteps),
900040aa:	2214      	movs	r2, #20
          relativeValue(0)
900040ac:	87af      	strh	r7, [r5, #60]	; 0x3c
        if (!HAL::USE_ANIMATION_STORAGE)
900040ae:	781b      	ldrb	r3, [r3, #0]
          animationSteps(transitionSteps),
900040b0:	872a      	strh	r2, [r5, #56]	; 0x38
        if (!HAL::USE_ANIMATION_STORAGE)
900040b2:	2b00      	cmp	r3, #0
900040b4:	d166      	bne.n	90004184 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x198>
            done = true;
900040b6:	2301      	movs	r3, #1
900040b8:	722b      	strb	r3, [r5, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
900040ba:	68a0      	ldr	r0, [r4, #8]
900040bc:	2100      	movs	r1, #0
900040be:	6803      	ldr	r3, [r0, #0]
900040c0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
900040c2:	4798      	blx	r3
900040c4:	4607      	mov	r7, r0
900040c6:	f001 ffeb 	bl	900060a0 <_ZN20screen_asteroidsViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
900040ca:	6860      	ldr	r0, [r4, #4]
900040cc:	2100      	movs	r1, #0
900040ce:	6803      	ldr	r3, [r0, #0]
900040d0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
900040d2:	4798      	blx	r3
900040d4:	4604      	mov	r4, r0
900040d6:	4639      	mov	r1, r7
900040d8:	f001 fe6c 	bl	90005db4 <_ZN25screen_asteroidsPresenterC1ER20screen_asteroidsView>
    *currentTrans = newTransition;
900040dc:	f8ca 5000 	str.w	r5, [sl]
    *currentPresenter = newPresenter;
900040e0:	f8c8 413c 	str.w	r4, [r8, #316]	; 0x13c
    *currentScreen = newScreen;
900040e4:	f8c9 7000 	str.w	r7, [r9]
    model->bind(newPresenter);
900040e8:	2c00      	cmp	r4, #0
900040ea:	d061      	beq.n	900041b0 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x1c4>
900040ec:	1d23      	adds	r3, r4, #4
900040ee:	f8cb 3000 	str.w	r3, [fp]
    newScreen->setupScreen();
900040f2:	4638      	mov	r0, r7
900040f4:	683b      	ldr	r3, [r7, #0]
900040f6:	f8c4 b008 	str.w	fp, [r4, #8]
900040fa:	68db      	ldr	r3, [r3, #12]
900040fc:	63fc      	str	r4, [r7, #60]	; 0x3c
900040fe:	4798      	blx	r3
    newPresenter->activate();
90004100:	6823      	ldr	r3, [r4, #0]
90004102:	4620      	mov	r0, r4
90004104:	681b      	ldr	r3, [r3, #0]
90004106:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
90004108:	4629      	mov	r1, r5
9000410a:	4638      	mov	r0, r7
9000410c:	f012 fb1e 	bl	9001674c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
90004110:	682b      	ldr	r3, [r5, #0]
90004112:	4939      	ldr	r1, [pc, #228]	; (900041f8 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x20c>)
90004114:	691a      	ldr	r2, [r3, #16]
90004116:	428a      	cmp	r2, r1
90004118:	d154      	bne.n	900041c4 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x1d8>
        if (done)
9000411a:	7a2a      	ldrb	r2, [r5, #8]
9000411c:	b9d2      	cbnz	r2, 90004154 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x168>
        Drawable* d = screenContainer->getFirstChild();
9000411e:	6868      	ldr	r0, [r5, #4]
90004120:	4a36      	ldr	r2, [pc, #216]	; (900041fc <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x210>)
90004122:	6803      	ldr	r3, [r0, #0]
90004124:	69db      	ldr	r3, [r3, #28]
90004126:	4293      	cmp	r3, r2
90004128:	d144      	bne.n	900041b4 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x1c8>
9000412a:	6a84      	ldr	r4, [r0, #40]	; 0x28
        while (d)
9000412c:	b164      	cbz	r4, 90004148 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x15c>
9000412e:	8f6a      	ldrh	r2, [r5, #58]	; 0x3a
90004130:	4f33      	ldr	r7, [pc, #204]	; (90004200 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x214>)
                d->setX(d->getX() - targetValue);
90004132:	6823      	ldr	r3, [r4, #0]
90004134:	88a1      	ldrh	r1, [r4, #4]
90004136:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90004138:	1a89      	subs	r1, r1, r2
9000413a:	42bb      	cmp	r3, r7
9000413c:	b209      	sxth	r1, r1
9000413e:	d11a      	bne.n	90004176 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x18a>
        rect.x = x;
90004140:	80a1      	strh	r1, [r4, #4]
        return nextSibling;
90004142:	69a4      	ldr	r4, [r4, #24]
        while (d)
90004144:	2c00      	cmp	r4, #0
90004146:	d1f4      	bne.n	90004132 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x146>
        screenContainer->add(snapshot);
90004148:	6868      	ldr	r0, [r5, #4]
9000414a:	4631      	mov	r1, r6
9000414c:	6803      	ldr	r3, [r0, #0]
9000414e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
90004150:	4798      	blx	r3
    newTransition->invalidate();
90004152:	682b      	ldr	r3, [r5, #0]
90004154:	695b      	ldr	r3, [r3, #20]
90004156:	4a2b      	ldr	r2, [pc, #172]	; (90004204 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x218>)
90004158:	4293      	cmp	r3, r2
9000415a:	d12e      	bne.n	900041ba <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x1ce>
        Application::getInstance()->invalidate();
9000415c:	f010 fd7c 	bl	90014c58 <_ZN8touchgfx11Application11getInstanceEv>
90004160:	6803      	ldr	r3, [r0, #0]
90004162:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
}
90004164:	b001      	add	sp, #4
90004166:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000416a:	4718      	bx	r3
    if (*currentScreen)
9000416c:	f8d9 0000 	ldr.w	r0, [r9]
90004170:	2800      	cmp	r0, #0
90004172:	d180      	bne.n	90004076 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x8a>
90004174:	e788      	b.n	90004088 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x9c>
                d->setX(d->getX() - targetValue);
90004176:	4620      	mov	r0, r4
90004178:	4798      	blx	r3
9000417a:	69a4      	ldr	r4, [r4, #24]
        while (d)
9000417c:	2c00      	cmp	r4, #0
9000417e:	d0e3      	beq.n	90004148 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x15c>
90004180:	8f6a      	ldrh	r2, [r5, #58]	; 0x3a
90004182:	e7d6      	b.n	90004132 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x146>
        snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
90004184:	4b20      	ldr	r3, [pc, #128]	; (90004208 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x21c>)
        snapshot.makeSnapshot();
90004186:	4630      	mov	r0, r6
        rect.x = x;
90004188:	612f      	str	r7, [r5, #16]
        snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
9000418a:	f9b3 3000 	ldrsh.w	r3, [r3]
9000418e:	4f1f      	ldr	r7, [pc, #124]	; (9000420c <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x220>)
        rect.height = height;
90004190:	82eb      	strh	r3, [r5, #22]
90004192:	f9b7 3000 	ldrsh.w	r3, [r7]
        rect.width = width;
90004196:	82ab      	strh	r3, [r5, #20]
        snapshot.makeSnapshot();
90004198:	f00d f8d1 	bl	9001133e <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>
            targetValue = -HAL::DISPLAY_WIDTH;
9000419c:	883b      	ldrh	r3, [r7, #0]
9000419e:	425b      	negs	r3, r3
900041a0:	876b      	strh	r3, [r5, #58]	; 0x3a
            break;
900041a2:	e78a      	b.n	900040ba <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0xce>
    if (*currentPresenter)
900041a4:	f8d8 013c 	ldr.w	r0, [r8, #316]	; 0x13c
900041a8:	2800      	cmp	r0, #0
900041aa:	f47f af5e 	bne.w	9000406a <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x7e>
900041ae:	e76b      	b.n	90004088 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x9c>
    model->bind(newPresenter);
900041b0:	4623      	mov	r3, r4
900041b2:	e79c      	b.n	900040ee <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x102>
        Drawable* d = screenContainer->getFirstChild();
900041b4:	4798      	blx	r3
900041b6:	4604      	mov	r4, r0
900041b8:	e7b8      	b.n	9000412c <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x140>
    newTransition->invalidate();
900041ba:	4628      	mov	r0, r5
900041bc:	b001      	add	sp, #4
900041be:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900041c2:	4718      	bx	r3
    newTransition->init();
900041c4:	4628      	mov	r0, r5
900041c6:	4790      	blx	r2
    newTransition->invalidate();
900041c8:	682b      	ldr	r3, [r5, #0]
900041ca:	e7c3      	b.n	90004154 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x168>
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
900041cc:	4b10      	ldr	r3, [pc, #64]	; (90004210 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x224>)
900041ce:	21a3      	movs	r1, #163	; 0xa3
900041d0:	4a10      	ldr	r2, [pc, #64]	; (90004214 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x228>)
900041d2:	4811      	ldr	r0, [pc, #68]	; (90004218 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x22c>)
900041d4:	f021 febc 	bl	90025f50 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
900041d8:	4b10      	ldr	r3, [pc, #64]	; (9000421c <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x230>)
900041da:	21a5      	movs	r1, #165	; 0xa5
900041dc:	4a0d      	ldr	r2, [pc, #52]	; (90004214 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x228>)
900041de:	480e      	ldr	r0, [pc, #56]	; (90004218 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x22c>)
900041e0:	f021 feb6 	bl	90025f50 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
900041e4:	4b0e      	ldr	r3, [pc, #56]	; (90004220 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x234>)
900041e6:	21a4      	movs	r1, #164	; 0xa4
900041e8:	4a0a      	ldr	r2, [pc, #40]	; (90004214 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x228>)
900041ea:	480b      	ldr	r0, [pc, #44]	; (90004218 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x22c>)
900041ec:	f021 feb0 	bl	90025f50 <__assert_func>
900041f0:	9002924c 	.word	0x9002924c
900041f4:	2402357b 	.word	0x2402357b
900041f8:	90003ad5 	.word	0x90003ad5
900041fc:	90003885 	.word	0x90003885
90004200:	900023fd 	.word	0x900023fd
90004204:	90003955 	.word	0x90003955
90004208:	24023572 	.word	0x24023572
9000420c:	24023570 	.word	0x24023570
90004210:	90028bf8 	.word	0x90028bf8
90004214:	90029064 	.word	0x90029064
90004218:	90028da4 	.word	0x90028da4
9000421c:	90028e90 	.word	0x90028e90
90004220:	90028dec 	.word	0x90028dec
90004224:	240235c4 	.word	0x240235c4
90004228:	240235c0 	.word	0x240235c0

9000422c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
9000422c:	b570      	push	{r4, r5, r6, lr}
9000422e:	4604      	mov	r4, r0
90004230:	4615      	mov	r5, r2
90004232:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
90004234:	f010 fdd6 	bl	90014de4 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
90004238:	4a1d      	ldr	r2, [pc, #116]	; (900042b0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x84>)
        : currentPresenter(0),
9000423a:	2300      	movs	r3, #0
      frontendHeap(heap),
9000423c:	f8c4 5154 	str.w	r5, [r4, #340]	; 0x154
        instance = this;
90004240:	6014      	str	r4, [r2, #0]
        return instance;
90004242:	4d1c      	ldr	r5, [pc, #112]	; (900042b4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x88>)
      model(m)
90004244:	4a1c      	ldr	r2, [pc, #112]	; (900042b8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x8c>)
90004246:	6828      	ldr	r0, [r5, #0]
90004248:	6022      	str	r2, [r4, #0]
        : pobject(0), pmemfun(0)
9000424a:	4a1c      	ldr	r2, [pc, #112]	; (900042bc <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x90>)
9000424c:	491c      	ldr	r1, [pc, #112]	; (900042c0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x94>)
9000424e:	f8c4 2144 	str.w	r2, [r4, #324]	; 0x144
90004252:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
90004256:	f8c4 6158 	str.w	r6, [r4, #344]	; 0x158
9000425a:	e9c4 3353 	strd	r3, r3, [r4, #332]	; 0x14c
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
9000425e:	6802      	ldr	r2, [r0, #0]
90004260:	6892      	ldr	r2, [r2, #8]
90004262:	428a      	cmp	r2, r1
          pendingScreenTransitionCallback(0)
90004264:	e9c4 334f 	strd	r3, r3, [r4, #316]	; 0x13c
90004268:	d11f      	bne.n	900042aa <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x7e>
        requestedOrientation = orientation;
9000426a:	f44f 7380 	mov.w	r3, #256	; 0x100
9000426e:	f8a0 3078 	strh.w	r3, [r0, #120]	; 0x78
    touchgfx::Texts::setLanguage(GB);
90004272:	2000      	movs	r0, #0
90004274:	f000 fa00 	bl	90004678 <_ZN8touchgfx5Texts11setLanguageEt>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
90004278:	682b      	ldr	r3, [r5, #0]
9000427a:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
9000427e:	b192      	cbz	r2, 900042a6 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x7a>
90004280:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
90004282:	b180      	cbz	r0, 900042a6 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x7a>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
90004284:	f019 ff1d 	bl	9001e0c2 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
90004288:	682b      	ldr	r3, [r5, #0]
9000428a:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
9000428e:	b12a      	cbz	r2, 9000429c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x70>
90004290:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
90004292:	b118      	cbz	r0, 9000429c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x70>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
90004294:	f019 ff90 	bl	9001e1b8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
90004298:	4620      	mov	r0, r4
9000429a:	bd70      	pop	{r4, r5, r6, pc}
        return instance->lcdRef;
9000429c:	6898      	ldr	r0, [r3, #8]
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
9000429e:	f019 ff8b 	bl	9001e1b8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
900042a2:	4620      	mov	r0, r4
900042a4:	bd70      	pop	{r4, r5, r6, pc}
900042a6:	6898      	ldr	r0, [r3, #8]
900042a8:	e7ec      	b.n	90004284 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
900042aa:	4619      	mov	r1, r3
900042ac:	4790      	blx	r2
900042ae:	e7e0      	b.n	90004272 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x46>
900042b0:	240235d0 	.word	0x240235d0
900042b4:	2402357c 	.word	0x2402357c
900042b8:	900291b0 	.word	0x900291b0
900042bc:	90029198 	.word	0x90029198
900042c0:	90000665 	.word	0x90000665

900042c4 <_ZN23FrontendApplicationBase45gotoscreen_asteroidsScreenSlideTransitionEastEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
900042c4:	4905      	ldr	r1, [pc, #20]	; (900042dc <_ZN23FrontendApplicationBase45gotoscreen_asteroidsScreenSlideTransitionEastEv+0x18>)
900042c6:	2200      	movs	r2, #0
    pendingScreenTransitionCallback = &transitionCallback;
900042c8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
900042cc:	f8c0 2150 	str.w	r2, [r0, #336]	; 0x150
900042d0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
900042d4:	e9c0 0152 	strd	r0, r1, [r0, #328]	; 0x148
}
900042d8:	4770      	bx	lr
900042da:	bf00      	nop
900042dc:	90003fed 	.word	0x90003fed

900042e0 <_ZN23FrontendApplicationBase40gotoscreen_game_selectScreenNoTransitionEv>:
900042e0:	4905      	ldr	r1, [pc, #20]	; (900042f8 <_ZN23FrontendApplicationBase40gotoscreen_game_selectScreenNoTransitionEv+0x18>)
900042e2:	2200      	movs	r2, #0
    pendingScreenTransitionCallback = &transitionCallback;
900042e4:	f500 73a2 	add.w	r3, r0, #324	; 0x144
900042e8:	f8c0 2150 	str.w	r2, [r0, #336]	; 0x150
900042ec:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
900042f0:	e9c0 0152 	strd	r0, r1, [r0, #328]	; 0x148
}
900042f4:	4770      	bx	lr
900042f6:	bf00      	nop
900042f8:	90003c0d 	.word	0x90003c0d

900042fc <_ZN23FrontendApplicationBase47gotoscreen_game_selectScreenSlideTransitionWestEv>:
900042fc:	4905      	ldr	r1, [pc, #20]	; (90004314 <_ZN23FrontendApplicationBase47gotoscreen_game_selectScreenSlideTransitionWestEv+0x18>)
900042fe:	2200      	movs	r2, #0
    pendingScreenTransitionCallback = &transitionCallback;
90004300:	f500 73a2 	add.w	r3, r0, #324	; 0x144
90004304:	f8c0 2150 	str.w	r2, [r0, #336]	; 0x150
90004308:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
9000430c:	e9c0 0152 	strd	r0, r1, [r0, #328]	; 0x148
}
90004310:	4770      	bx	lr
90004312:	bf00      	nop
90004314:	90003db1 	.word	0x90003db1

90004318 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
90004318:	6a40      	ldr	r0, [r0, #36]	; 0x24
9000431a:	4770      	bx	lr

9000431c <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
9000431c:	6a80      	ldr	r0, [r0, #40]	; 0x28
9000431e:	4770      	bx	lr

90004320 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
90004320:	4770      	bx	lr
90004322:	bf00      	nop

90004324 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
90004324:	888b      	ldrh	r3, [r1, #4]
90004326:	69c0      	ldr	r0, [r0, #28]
90004328:	0adb      	lsrs	r3, r3, #11
9000432a:	680a      	ldr	r2, [r1, #0]
9000432c:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
90004330:	4410      	add	r0, r2
90004332:	4770      	bx	lr

90004334 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
    if (!glyph || glyph->kerningTableSize == 0)
90004334:	b1da      	cbz	r2, 9000436e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x3a>
{
90004336:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
90004338:	7b14      	ldrb	r4, [r2, #12]
9000433a:	b1b4      	cbz	r4, 9000436a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
9000433c:	f892 c00d 	ldrb.w	ip, [r2, #13]
90004340:	f892 e00b 	ldrb.w	lr, [r2, #11]
90004344:	ea4f 220c 	mov.w	r2, ip, lsl #8
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
90004348:	6a03      	ldr	r3, [r0, #32]
9000434a:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
9000434e:	ea4e 0202 	orr.w	r2, lr, r2
90004352:	eb03 0382 	add.w	r3, r3, r2, lsl #2
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
90004356:	eb03 0084 	add.w	r0, r3, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
9000435a:	881a      	ldrh	r2, [r3, #0]
9000435c:	428a      	cmp	r2, r1
9000435e:	d008      	beq.n	90004372 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x3e>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
90004360:	f103 0304 	add.w	r3, r3, #4
        {
            return kerndata->distance;
        }
        if (prevChar < kerndata->unicodePrevChar)
90004364:	d801      	bhi.n	9000436a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
90004366:	4283      	cmp	r3, r0
90004368:	d1f7      	bne.n	9000435a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
9000436a:	2000      	movs	r0, #0
        {
            break;
        }
    }
    return 0;
}
9000436c:	bd10      	pop	{r4, pc}
        return 0;
9000436e:	4610      	mov	r0, r2
}
90004370:	4770      	bx	lr
            return kerndata->distance;
90004372:	f993 0002 	ldrsb.w	r0, [r3, #2]
}
90004376:	bd10      	pop	{r4, pc}

90004378 <_ZN8touchgfx13GeneratedFontD0Ev>:
90004378:	b510      	push	{r4, lr}
9000437a:	4604      	mov	r4, r0
9000437c:	212c      	movs	r1, #44	; 0x2c
9000437e:	f021 fdb8 	bl	90025ef2 <_ZdlPvj>
90004382:	4620      	mov	r0, r4
90004384:	bd10      	pop	{r4, pc}
90004386:	bf00      	nop

90004388 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90004388:	b530      	push	{r4, r5, lr}
9000438a:	b08b      	sub	sp, #44	; 0x2c
9000438c:	4604      	mov	r4, r0
9000438e:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
      arabicTable(formsTable)
90004392:	9500      	str	r5, [sp, #0]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90004394:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
      arabicTable(formsTable)
90004398:	9501      	str	r5, [sp, #4]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
9000439a:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
      arabicTable(formsTable)
9000439e:	9502      	str	r5, [sp, #8]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
900043a0:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
      arabicTable(formsTable)
900043a4:	9503      	str	r5, [sp, #12]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
900043a6:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
      arabicTable(formsTable)
900043aa:	9504      	str	r5, [sp, #16]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
900043ac:	f89d 504c 	ldrb.w	r5, [sp, #76]	; 0x4c
      arabicTable(formsTable)
900043b0:	9505      	str	r5, [sp, #20]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
900043b2:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
      arabicTable(formsTable)
900043b6:	9506      	str	r5, [sp, #24]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
900043b8:	f8bd 505c 	ldrh.w	r5, [sp, #92]	; 0x5c
      arabicTable(formsTable)
900043bc:	9507      	str	r5, [sp, #28]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
900043be:	f8bd 5060 	ldrh.w	r5, [sp, #96]	; 0x60
      arabicTable(formsTable)
900043c2:	9508      	str	r5, [sp, #32]
900043c4:	f011 fd6e 	bl	90015ea4 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
      glyphData(glyphDataInternalFlash),
900043c8:	9b15      	ldr	r3, [sp, #84]	; 0x54
}
900043ca:	4620      	mov	r0, r4
      glyphData(glyphDataInternalFlash),
900043cc:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
900043ce:	9b16      	ldr	r3, [sp, #88]	; 0x58
900043d0:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
900043d2:	9b19      	ldr	r3, [sp, #100]	; 0x64
900043d4:	6263      	str	r3, [r4, #36]	; 0x24
      arabicTable(formsTable)
900043d6:	9b1a      	ldr	r3, [sp, #104]	; 0x68
900043d8:	62a3      	str	r3, [r4, #40]	; 0x28
900043da:	4b02      	ldr	r3, [pc, #8]	; (900043e4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
900043dc:	6023      	str	r3, [r4, #0]
}
900043de:	b00b      	add	sp, #44	; 0x2c
900043e0:	bd30      	pop	{r4, r5, pc}
900043e2:	bf00      	nop
900043e4:	90029270 	.word	0x90029270

900043e8 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
900043e8:	4770      	bx	lr
900043ea:	bf00      	nop

900043ec <_Z23getFont_verdana_10_4bppv>:
{
900043ec:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
900043ee:	4d18      	ldr	r5, [pc, #96]	; (90004450 <_Z23getFont_verdana_10_4bppv+0x64>)
{
900043f0:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
900043f2:	682c      	ldr	r4, [r5, #0]
900043f4:	f3bf 8f5b 	dmb	ish
900043f8:	f014 0401 	ands.w	r4, r4, #1
900043fc:	d002      	beq.n	90004404 <_Z23getFont_verdana_10_4bppv+0x18>
    return verdana_10_4bpp;
}
900043fe:	4815      	ldr	r0, [pc, #84]	; (90004454 <_Z23getFont_verdana_10_4bppv+0x68>)
90004400:	b00f      	add	sp, #60	; 0x3c
90004402:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
90004404:	4628      	mov	r0, r5
90004406:	f021 fd76 	bl	90025ef6 <__cxa_guard_acquire>
9000440a:	2800      	cmp	r0, #0
9000440c:	d0f7      	beq.n	900043fe <_Z23getFont_verdana_10_4bppv+0x12>
9000440e:	213f      	movs	r1, #63	; 0x3f
90004410:	2201      	movs	r2, #1
90004412:	230a      	movs	r3, #10
90004414:	2004      	movs	r0, #4
90004416:	9204      	str	r2, [sp, #16]
90004418:	9300      	str	r3, [sp, #0]
9000441a:	9003      	str	r0, [sp, #12]
9000441c:	480d      	ldr	r0, [pc, #52]	; (90004454 <_Z23getFont_verdana_10_4bppv+0x68>)
9000441e:	e9cd 1409 	strd	r1, r4, [sp, #36]	; 0x24
90004422:	490d      	ldr	r1, [pc, #52]	; (90004458 <_Z23getFont_verdana_10_4bppv+0x6c>)
90004424:	9108      	str	r1, [sp, #32]
90004426:	490d      	ldr	r1, [pc, #52]	; (9000445c <_Z23getFont_verdana_10_4bppv+0x70>)
90004428:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
9000442c:	9107      	str	r1, [sp, #28]
9000442e:	490c      	ldr	r1, [pc, #48]	; (90004460 <_Z23getFont_verdana_10_4bppv+0x74>)
90004430:	e9cd 4405 	strd	r4, r4, [sp, #20]
90004434:	e9cd 4401 	strd	r4, r4, [sp, #4]
90004438:	f7ff ffa6 	bl	90004388 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
9000443c:	4809      	ldr	r0, [pc, #36]	; (90004464 <_Z23getFont_verdana_10_4bppv+0x78>)
9000443e:	f021 fda5 	bl	90025f8c <atexit>
90004442:	4628      	mov	r0, r5
90004444:	f021 fd63 	bl	90025f0e <__cxa_guard_release>
}
90004448:	4802      	ldr	r0, [pc, #8]	; (90004454 <_Z23getFont_verdana_10_4bppv+0x68>)
9000444a:	b00f      	add	sp, #60	; 0x3c
9000444c:	bd30      	pop	{r4, r5, pc}
9000444e:	bf00      	nop
90004450:	240094c4 	.word	0x240094c4
90004454:	240094c8 	.word	0x240094c8
90004458:	9002a8f8 	.word	0x9002a8f8
9000445c:	9002a904 	.word	0x9002a904
90004460:	90200b38 	.word	0x90200b38
90004464:	900043e9 	.word	0x900043e9

90004468 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 12, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
90004468:	4770      	bx	lr
9000446a:	bf00      	nop

9000446c <_Z23getFont_verdana_20_4bppv>:
{
9000446c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 12, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
9000446e:	4d18      	ldr	r5, [pc, #96]	; (900044d0 <_Z23getFont_verdana_20_4bppv+0x64>)
{
90004470:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 12, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
90004472:	682c      	ldr	r4, [r5, #0]
90004474:	f3bf 8f5b 	dmb	ish
90004478:	f014 0401 	ands.w	r4, r4, #1
9000447c:	d002      	beq.n	90004484 <_Z23getFont_verdana_20_4bppv+0x18>
    return verdana_20_4bpp;
}
9000447e:	4815      	ldr	r0, [pc, #84]	; (900044d4 <_Z23getFont_verdana_20_4bppv+0x68>)
90004480:	b00f      	add	sp, #60	; 0x3c
90004482:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 12, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
90004484:	4628      	mov	r0, r5
90004486:	f021 fd36 	bl	90025ef6 <__cxa_guard_acquire>
9000448a:	2800      	cmp	r0, #0
9000448c:	d0f7      	beq.n	9000447e <_Z23getFont_verdana_20_4bppv+0x12>
9000448e:	4a12      	ldr	r2, [pc, #72]	; (900044d8 <_Z23getFont_verdana_20_4bppv+0x6c>)
90004490:	213f      	movs	r1, #63	; 0x3f
90004492:	2314      	movs	r3, #20
90004494:	480f      	ldr	r0, [pc, #60]	; (900044d4 <_Z23getFont_verdana_20_4bppv+0x68>)
90004496:	9208      	str	r2, [sp, #32]
90004498:	2201      	movs	r2, #1
9000449a:	9300      	str	r3, [sp, #0]
9000449c:	9204      	str	r2, [sp, #16]
9000449e:	2204      	movs	r2, #4
900044a0:	e9cd 1409 	strd	r1, r4, [sp, #36]	; 0x24
900044a4:	490d      	ldr	r1, [pc, #52]	; (900044dc <_Z23getFont_verdana_20_4bppv+0x70>)
900044a6:	9203      	str	r2, [sp, #12]
900044a8:	220c      	movs	r2, #12
900044aa:	9107      	str	r1, [sp, #28]
900044ac:	490c      	ldr	r1, [pc, #48]	; (900044e0 <_Z23getFont_verdana_20_4bppv+0x74>)
900044ae:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
900044b2:	e9cd 4405 	strd	r4, r4, [sp, #20]
900044b6:	e9cd 4401 	strd	r4, r4, [sp, #4]
900044ba:	f7ff ff65 	bl	90004388 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
900044be:	4809      	ldr	r0, [pc, #36]	; (900044e4 <_Z23getFont_verdana_20_4bppv+0x78>)
900044c0:	f021 fd64 	bl	90025f8c <atexit>
900044c4:	4628      	mov	r0, r5
900044c6:	f021 fd22 	bl	90025f0e <__cxa_guard_release>
}
900044ca:	4802      	ldr	r0, [pc, #8]	; (900044d4 <_Z23getFont_verdana_20_4bppv+0x68>)
900044cc:	b00f      	add	sp, #60	; 0x3c
900044ce:	bd30      	pop	{r4, r5, pc}
900044d0:	240094f4 	.word	0x240094f4
900044d4:	240094f8 	.word	0x240094f8
900044d8:	9002a8fc 	.word	0x9002a8fc
900044dc:	9002a908 	.word	0x9002a908
900044e0:	90200b48 	.word	0x90200b48
900044e4:	90004469 	.word	0x90004469

900044e8 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 9, 41, 40, 0, 0, 4, 1, 0, 1, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
900044e8:	4770      	bx	lr
900044ea:	bf00      	nop

900044ec <_Z23getFont_verdana_40_4bppv>:
{
900044ec:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 9, 41, 40, 0, 0, 4, 1, 0, 1, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
900044ee:	4d19      	ldr	r5, [pc, #100]	; (90004554 <_Z23getFont_verdana_40_4bppv+0x68>)
{
900044f0:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 9, 41, 40, 0, 0, 4, 1, 0, 1, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
900044f2:	682c      	ldr	r4, [r5, #0]
900044f4:	f3bf 8f5b 	dmb	ish
900044f8:	f014 0401 	ands.w	r4, r4, #1
900044fc:	d002      	beq.n	90004504 <_Z23getFont_verdana_40_4bppv+0x18>
    return verdana_40_4bpp;
}
900044fe:	4816      	ldr	r0, [pc, #88]	; (90004558 <_Z23getFont_verdana_40_4bppv+0x6c>)
90004500:	b00f      	add	sp, #60	; 0x3c
90004502:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 9, 41, 40, 0, 0, 4, 1, 0, 1, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
90004504:	4628      	mov	r0, r5
90004506:	f021 fcf6 	bl	90025ef6 <__cxa_guard_acquire>
9000450a:	2800      	cmp	r0, #0
9000450c:	d0f7      	beq.n	900044fe <_Z23getFont_verdana_40_4bppv+0x12>
9000450e:	213f      	movs	r1, #63	; 0x3f
90004510:	4a12      	ldr	r2, [pc, #72]	; (9000455c <_Z23getFont_verdana_40_4bppv+0x70>)
90004512:	2301      	movs	r3, #1
90004514:	2028      	movs	r0, #40	; 0x28
90004516:	9208      	str	r2, [sp, #32]
90004518:	2204      	movs	r2, #4
9000451a:	9304      	str	r3, [sp, #16]
9000451c:	9000      	str	r0, [sp, #0]
9000451e:	9401      	str	r4, [sp, #4]
90004520:	480d      	ldr	r0, [pc, #52]	; (90004558 <_Z23getFont_verdana_40_4bppv+0x6c>)
90004522:	e9cd 1409 	strd	r1, r4, [sp, #36]	; 0x24
90004526:	490e      	ldr	r1, [pc, #56]	; (90004560 <_Z23getFont_verdana_40_4bppv+0x74>)
90004528:	e9cd 4305 	strd	r4, r3, [sp, #20]
9000452c:	9107      	str	r1, [sp, #28]
9000452e:	2329      	movs	r3, #41	; 0x29
90004530:	490c      	ldr	r1, [pc, #48]	; (90004564 <_Z23getFont_verdana_40_4bppv+0x78>)
90004532:	e9cd 4202 	strd	r4, r2, [sp, #8]
90004536:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
9000453a:	2209      	movs	r2, #9
9000453c:	f7ff ff24 	bl	90004388 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
90004540:	4809      	ldr	r0, [pc, #36]	; (90004568 <_Z23getFont_verdana_40_4bppv+0x7c>)
90004542:	f021 fd23 	bl	90025f8c <atexit>
90004546:	4628      	mov	r0, r5
90004548:	f021 fce1 	bl	90025f0e <__cxa_guard_release>
}
9000454c:	4802      	ldr	r0, [pc, #8]	; (90004558 <_Z23getFont_verdana_40_4bppv+0x6c>)
9000454e:	b00f      	add	sp, #60	; 0x3c
90004550:	bd30      	pop	{r4, r5, pc}
90004552:	bf00      	nop
90004554:	24009524 	.word	0x24009524
90004558:	24009528 	.word	0x24009528
9000455c:	9002a900 	.word	0x9002a900
90004560:	9002a90c 	.word	0x9002a90c
90004564:	90200bf0 	.word	0x90200bf0
90004568:	900044e9 	.word	0x900044e9

9000456c <_ZNK8touchgfx4Font12getGSUBTableEv>:
    }
9000456c:	2000      	movs	r0, #0
9000456e:	4770      	bx	lr

90004570 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
    }
90004570:	2000      	movs	r0, #0
90004572:	4770      	bx	lr

90004574 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
90004574:	b40e      	push	{r1, r2, r3}
90004576:	b500      	push	{lr}
90004578:	b082      	sub	sp, #8
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
9000457a:	2100      	movs	r1, #0
{
9000457c:	ab03      	add	r3, sp, #12
9000457e:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
90004582:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
90004584:	f011 fab6 	bl	90015af4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
90004588:	b002      	add	sp, #8
9000458a:	f85d eb04 	ldr.w	lr, [sp], #4
9000458e:	b003      	add	sp, #12
90004590:	4770      	bx	lr
90004592:	bf00      	nop

90004594 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
90004594:	b40c      	push	{r2, r3}
90004596:	b500      	push	{lr}
90004598:	b083      	sub	sp, #12
9000459a:	ab04      	add	r3, sp, #16
9000459c:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
900045a0:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
900045a2:	f011 faa7 	bl	90015af4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
900045a6:	b003      	add	sp, #12
900045a8:	f85d eb04 	ldr.w	lr, [sp], #4
900045ac:	b002      	add	sp, #8
900045ae:	4770      	bx	lr

900045b0 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
900045b0:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
900045b2:	b510      	push	{r4, lr}
900045b4:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
900045b6:	b133      	cbz	r3, 900045c6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
900045b8:	8f03      	ldrh	r3, [r0, #56]	; 0x38
900045ba:	b39b      	cbz	r3, 90004624 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>
            return buffer[pos];
900045bc:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
900045be:	eb00 0343 	add.w	r3, r0, r3, lsl #1
900045c2:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
900045c4:	b923      	cbnz	r3, 900045d0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x20>
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
900045c6:	4620      	mov	r0, r4
}
900045c8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
900045cc:	f012 bd24 	b.w	90017018 <_ZN8touchgfx12TextProvider11getNextCharEv>
        substituteGlyphs();
900045d0:	f012 fe20 	bl	90017214 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
900045d4:	8f23      	ldrh	r3, [r4, #56]	; 0x38
900045d6:	2b01      	cmp	r3, #1
900045d8:	d92a      	bls.n	90004630 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>
            const uint16_t index = pos + offset;
900045da:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
900045dc:	1c53      	adds	r3, r2, #1
900045de:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
900045e0:	2b09      	cmp	r3, #9
900045e2:	d812      	bhi.n	9000460a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x5a>
900045e4:	eb04 0143 	add.w	r1, r4, r3, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
900045e8:	f640 103f 	movw	r0, #2367	; 0x93f
900045ec:	8c49      	ldrh	r1, [r1, #34]	; 0x22
900045ee:	4281      	cmp	r1, r0
900045f0:	d1e9      	bne.n	900045c6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return buffer[pos];
900045f2:	eb04 0142 	add.w	r1, r4, r2, lsl #1
900045f6:	0052      	lsls	r2, r2, #1
900045f8:	8c49      	ldrh	r1, [r1, #34]	; 0x22

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
900045fa:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            buffer[pos] = newChar;
900045fe:	4422      	add	r2, r4
90004600:	f640 103f 	movw	r0, #2367	; 0x93f
            buffer[index < size ? index : 0] = newChar;
90004604:	8459      	strh	r1, [r3, #34]	; 0x22
            buffer[pos] = newChar;
90004606:	8450      	strh	r0, [r2, #34]	; 0x22
        }
90004608:	e7dd      	b.n	900045c6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return buffer[index < size ? index : index - size];
9000460a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9000460e:	f640 113f 	movw	r1, #2367	; 0x93f
90004612:	89db      	ldrh	r3, [r3, #14]
90004614:	428b      	cmp	r3, r1
90004616:	d1d6      	bne.n	900045c6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return buffer[pos];
90004618:	eb04 0142 	add.w	r1, r4, r2, lsl #1
9000461c:	2300      	movs	r3, #0
9000461e:	0052      	lsls	r2, r2, #1
90004620:	8c49      	ldrh	r1, [r1, #34]	; 0x22
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
90004622:	e7ea      	b.n	900045fa <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x4a>
            assert(used > 0);
90004624:	4b05      	ldr	r3, [pc, #20]	; (9000463c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x8c>)
90004626:	21c5      	movs	r1, #197	; 0xc5
90004628:	4a05      	ldr	r2, [pc, #20]	; (90004640 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x90>)
9000462a:	4806      	ldr	r0, [pc, #24]	; (90004644 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x94>)
9000462c:	f021 fc90 	bl	90025f50 <__assert_func>
            assert(offset < used);
90004630:	4b05      	ldr	r3, [pc, #20]	; (90004648 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x98>)
90004632:	21cb      	movs	r1, #203	; 0xcb
90004634:	4a05      	ldr	r2, [pc, #20]	; (9000464c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x9c>)
90004636:	4803      	ldr	r0, [pc, #12]	; (90004644 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x94>)
90004638:	f021 fc8a 	bl	90025f50 <__assert_func>
9000463c:	900292d0 	.word	0x900292d0
90004640:	900292dc 	.word	0x900292dc
90004644:	90029388 	.word	0x90029388
90004648:	900293d4 	.word	0x900293d4
9000464c:	900293e4 	.word	0x900293e4

90004650 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
90004650:	f012 bcab 	b.w	90016faa <_ZN8touchgfx12TextProvider15fillInputBufferEv>

90004654 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
90004654:	b510      	push	{r4, lr}
90004656:	b086      	sub	sp, #24
90004658:	f10d 0c08 	add.w	ip, sp, #8
    va_list pArg;
    va_start(pArg, format);
9000465c:	ac0a      	add	r4, sp, #40	; 0x28
{
9000465e:	e88c 0006 	stmia.w	ip, {r1, r2}
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
90004662:	461a      	mov	r2, r3
90004664:	9b09      	ldr	r3, [sp, #36]	; 0x24
90004666:	4661      	mov	r1, ip
90004668:	9401      	str	r4, [sp, #4]
9000466a:	9300      	str	r3, [sp, #0]
9000466c:	9b08      	ldr	r3, [sp, #32]
    va_start(pArg, format);
9000466e:	9405      	str	r4, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
90004670:	f00f fe72 	bl	90014358 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
90004674:	b006      	add	sp, #24
90004676:	bd10      	pop	{r4, pc}

90004678 <_ZN8touchgfx5Texts11setLanguageEt>:
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
90004678:	b9e0      	cbnz	r0, 900046b4 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
{
9000467a:	b538      	push	{r3, r4, r5, lr}
    {
        if (languagesArray[id] != 0)
9000467c:	4b13      	ldr	r3, [pc, #76]	; (900046cc <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
9000467e:	681b      	ldr	r3, [r3, #0]
90004680:	b1cb      	cbz	r3, 900046b6 <_ZN8touchgfx5Texts11setLanguageEt+0x3e>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
90004682:	4c13      	ldr	r4, [pc, #76]	; (900046d0 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
90004684:	4813      	ldr	r0, [pc, #76]	; (900046d4 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
90004686:	e9d3 1200 	ldrd	r1, r2, [r3]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
9000468a:	4419      	add	r1, r3
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
9000468c:	441a      	add	r2, r3
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
9000468e:	6021      	str	r1, [r4, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
90004690:	6899      	ldr	r1, [r3, #8]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
90004692:	6002      	str	r2, [r0, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
90004694:	185c      	adds	r4, r3, r1
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
90004696:	4b10      	ldr	r3, [pc, #64]	; (900046d8 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
90004698:	2200      	movs	r2, #0
9000469a:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
9000469c:	f000 f83a 	bl	90004714 <_ZN17TypedTextDatabase8getFontsEv>
900046a0:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
900046a2:	f000 f835 	bl	90004710 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
900046a6:	4b0d      	ldr	r3, [pc, #52]	; (900046dc <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
        fonts = f;
900046a8:	4a0d      	ldr	r2, [pc, #52]	; (900046e0 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
        typedTexts = data;
900046aa:	601c      	str	r4, [r3, #0]
        numberOfTypedTexts = n;
900046ac:	4b0d      	ldr	r3, [pc, #52]	; (900046e4 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
        fonts = f;
900046ae:	6015      	str	r5, [r2, #0]
        numberOfTypedTexts = n;
900046b0:	8018      	strh	r0, [r3, #0]
    }
}
900046b2:	bd38      	pop	{r3, r4, r5, pc}
900046b4:	4770      	bx	lr
            currentLanguageTypedText = typedTextDatabaseArray[id];
900046b6:	4c0c      	ldr	r4, [pc, #48]	; (900046e8 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
            currentLanguagePtr = texts_all_languages;
900046b8:	4905      	ldr	r1, [pc, #20]	; (900046d0 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
            currentLanguageTypedText = typedTextDatabaseArray[id];
900046ba:	6824      	ldr	r4, [r4, #0]
            currentLanguagePtr = texts_all_languages;
900046bc:	480b      	ldr	r0, [pc, #44]	; (900046ec <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
            currentLanguageIndices = staticLanguageIndices[id];
900046be:	4b05      	ldr	r3, [pc, #20]	; (900046d4 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
900046c0:	4a0b      	ldr	r2, [pc, #44]	; (900046f0 <_ZN8touchgfx5Texts11setLanguageEt+0x78>)
            currentLanguagePtr = texts_all_languages;
900046c2:	6008      	str	r0, [r1, #0]
            currentLanguageIndices = staticLanguageIndices[id];
900046c4:	601a      	str	r2, [r3, #0]
    if (currentLanguageTypedText)
900046c6:	2c00      	cmp	r4, #0
900046c8:	d1e5      	bne.n	90004696 <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
900046ca:	bd38      	pop	{r3, r4, r5, pc}
900046cc:	24009554 	.word	0x24009554
900046d0:	24009558 	.word	0x24009558
900046d4:	2400955c 	.word	0x2400955c
900046d8:	24009560 	.word	0x24009560
900046dc:	240235d4 	.word	0x240235d4
900046e0:	240235dc 	.word	0x240235dc
900046e4:	240235d8 	.word	0x240235d8
900046e8:	90200cc0 	.word	0x90200cc0
900046ec:	90200c80 	.word	0x90200c80
900046f0:	90200c70 	.word	0x90200c70

900046f4 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
900046f4:	4a04      	ldr	r2, [pc, #16]	; (90004708 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
900046f6:	4b05      	ldr	r3, [pc, #20]	; (9000470c <_ZNK8touchgfx5Texts7getTextEt+0x18>)
900046f8:	6812      	ldr	r2, [r2, #0]
900046fa:	681b      	ldr	r3, [r3, #0]
900046fc:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
}
90004700:	eb03 0040 	add.w	r0, r3, r0, lsl #1
90004704:	4770      	bx	lr
90004706:	bf00      	nop
90004708:	2400955c 	.word	0x2400955c
9000470c:	24009558 	.word	0x24009558

90004710 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
90004710:	2004      	movs	r0, #4
90004712:	4770      	bx	lr

90004714 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
90004714:	4800      	ldr	r0, [pc, #0]	; (90004718 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
90004716:	4770      	bx	lr
90004718:	24009564 	.word	0x24009564

9000471c <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
9000471c:	b510      	push	{r4, lr}
};
9000471e:	4c05      	ldr	r4, [pc, #20]	; (90004734 <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
    &(getFont_verdana_20_4bpp()),
90004720:	f7ff fea4 	bl	9000446c <_Z23getFont_verdana_20_4bppv>
};
90004724:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
90004726:	f7ff fee1 	bl	900044ec <_Z23getFont_verdana_40_4bppv>
};
9000472a:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp())
9000472c:	f7ff fe5e 	bl	900043ec <_Z23getFont_verdana_10_4bppv>
};
90004730:	60a0      	str	r0, [r4, #8]
} // namespace TypedTextDatabase
90004732:	bd10      	pop	{r4, pc}
90004734:	24009564 	.word	0x24009564

90004738 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
90004738:	4770      	bx	lr
9000473a:	bf00      	nop

9000473c <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
9000473c:	4770      	bx	lr
9000473e:	bf00      	nop

90004740 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
90004740:	4770      	bx	lr
90004742:	bf00      	nop

90004744 <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
90004744:	b530      	push	{r4, r5, lr}
90004746:	b085      	sub	sp, #20
90004748:	460a      	mov	r2, r1
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
9000474a:	6803      	ldr	r3, [r0, #0]
    virtual void setWidth(int16_t width)
9000474c:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
9000474e:	466d      	mov	r5, sp
90004750:	4601      	mov	r1, r0
90004752:	8102      	strh	r2, [r0, #8]
90004754:	343c      	adds	r4, #60	; 0x3c
90004756:	4628      	mov	r0, r5
90004758:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
9000475c:	4798      	blx	r3
9000475e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90004762:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
90004766:	b005      	add	sp, #20
90004768:	bd30      	pop	{r4, r5, pc}
9000476a:	bf00      	nop

9000476c <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
9000476c:	b530      	push	{r4, r5, lr}
9000476e:	b085      	sub	sp, #20
90004770:	460a      	mov	r2, r1
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
90004772:	6803      	ldr	r3, [r0, #0]
    virtual void setHeight(int16_t height)
90004774:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
90004776:	466d      	mov	r5, sp
90004778:	4601      	mov	r1, r0
        rect.height = height;
9000477a:	8142      	strh	r2, [r0, #10]
9000477c:	343c      	adds	r4, #60	; 0x3c
9000477e:	4628      	mov	r0, r5
90004780:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
90004784:	4798      	blx	r3
90004786:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
9000478a:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
9000478e:	b005      	add	sp, #20
90004790:	bd30      	pop	{r4, r5, pc}
90004792:	bf00      	nop

90004794 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
90004794:	2200      	movs	r2, #0
90004796:	6002      	str	r2, [r0, #0]
90004798:	6042      	str	r2, [r0, #4]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
9000479a:	4770      	bx	lr

9000479c <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
9000479c:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
    }
900047a0:	4770      	bx	lr
900047a2:	bf00      	nop

900047a4 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
900047a4:	2000      	movs	r0, #0
900047a6:	4770      	bx	lr

900047a8 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
        if (visible)
900047a8:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
900047ac:	b112      	cbz	r2, 900047b4 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xc>
            invalidate();
900047ae:	6803      	ldr	r3, [r0, #0]
900047b0:	695b      	ldr	r3, [r3, #20]
900047b2:	4718      	bx	r3
    virtual void draw(const Rect& area) const;

    virtual void invalidateContent() const
    {
        Widget::invalidateContent();
    }
900047b4:	4770      	bx	lr
900047b6:	bf00      	nop

900047b8 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
900047b8:	2200      	movs	r2, #0
900047ba:	f04f 31ff 	mov.w	r1, #4294967295
        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
              text(0)
900047be:	6082      	str	r2, [r0, #8]
900047c0:	e9c0 2100 	strd	r2, r1, [r0]

protected:
    virtual TextArea::BoundingArea calculateBoundingArea() const
    {
        return TextArea::BoundingArea();
    }
900047c4:	4770      	bx	lr
900047c6:	bf00      	nop

900047c8 <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
900047c8:	6c80      	ldr	r0, [r0, #72]	; 0x48
900047ca:	4770      	bx	lr

900047cc <_ZN24screen_asteroidsViewBase21resume_asteroids_taskEv>:
     * Virtual Action Handlers
     */
    virtual void resume_asteroids_task()
    {
        // Override and implement this function in screen_asteroids
    }
900047cc:	4770      	bx	lr
900047ce:	bf00      	nop

900047d0 <_ZN24screen_asteroidsViewBase22suspend_asteroids_taskEv>:
    virtual void suspend_asteroids_task()
    {
        // Override and implement this function in screen_asteroids
    }
900047d0:	4770      	bx	lr
900047d2:	bf00      	nop

900047d4 <_ZN24screen_asteroidsViewBase20start_asteroids_gameEv>:
    virtual void start_asteroids_game()
    {
        // Override and implement this function in screen_asteroids
    }
900047d4:	4770      	bx	lr
900047d6:	bf00      	nop

900047d8 <_ZN24screen_asteroidsViewBase17btn_shoot_pressedEv>:
    virtual void btn_shoot_pressed()
    {
        // Override and implement this function in screen_asteroids
    }
900047d8:	4770      	bx	lr
900047da:	bf00      	nop

900047dc <_ZN24screen_asteroidsViewBase14btn_up_pressedEv>:
    virtual void btn_up_pressed()
    {
        // Override and implement this function in screen_asteroids
    }
900047dc:	4770      	bx	lr
900047de:	bf00      	nop

900047e0 <_ZN24screen_asteroidsViewBase16btn_down_pressedEv>:
    virtual void btn_down_pressed()
    {
        // Override and implement this function in screen_asteroids
    }
900047e0:	4770      	bx	lr
900047e2:	bf00      	nop

900047e4 <_ZN24screen_asteroidsViewBase17btn_right_pressedEv>:
    virtual void btn_right_pressed()
    {
        // Override and implement this function in screen_asteroids
    }
900047e4:	4770      	bx	lr
900047e6:	bf00      	nop

900047e8 <_ZN24screen_asteroidsViewBase16btn_left_pressedEv>:
    virtual void btn_left_pressed()
    {
        // Override and implement this function in screen_asteroids
    }
900047e8:	4770      	bx	lr
900047ea:	bf00      	nop

900047ec <_ZN24screen_asteroidsViewBase11setupScreenEv>:
}

void screen_asteroidsViewBase::setupScreen()
{

}
900047ec:	4770      	bx	lr
900047ee:	bf00      	nop

900047f0 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>:
    colortype borderDown;    ///< The border down

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
    {
        borderBox.setColor(T::getPressed() ? down : up);
900047f0:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
900047f4:	b133      	cbz	r3, 90004804 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x14>
900047f6:	6ec2      	ldr	r2, [r0, #108]	; 0x6c
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
900047f8:	f100 0374 	add.w	r3, r0, #116	; 0x74
900047fc:	65c2      	str	r2, [r0, #92]	; 0x5c
900047fe:	681b      	ldr	r3, [r3, #0]
     *
     * @see setColor, getBorderColor, Color::getColorFromRGB
     */
    void setBorderColor(colortype colorBorder)
    {
        borderColor = colorBorder;
90004800:	6603      	str	r3, [r0, #96]	; 0x60
        T::handlePressedUpdated();
    }
90004802:	4770      	bx	lr
90004804:	6e82      	ldr	r2, [r0, #104]	; 0x68
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90004806:	f100 0370 	add.w	r3, r0, #112	; 0x70
9000480a:	65c2      	str	r2, [r0, #92]	; 0x5c
9000480c:	681b      	ldr	r3, [r3, #0]
9000480e:	6603      	str	r3, [r0, #96]	; 0x60
    }
90004810:	4770      	bx	lr
90004812:	bf00      	nop

90004814 <_ZN8touchgfx8CallbackI24screen_asteroidsViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
90004814:	4770      	bx	lr
90004816:	bf00      	nop

90004818 <_ZN8touchgfx8CallbackI24screen_asteroidsViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
90004818:	4770      	bx	lr
9000481a:	bf00      	nop

9000481c <_ZN8touchgfx5ShapeILt3EED1Ev>:
 * scaled, rotated and moved freely. Example uses could be the hands of a clock.
 *
 * @see AbstractShape
 */
template <uint16_t POINTS>
class Shape : public AbstractShape
9000481c:	4770      	bx	lr
9000481e:	bf00      	nop

90004820 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>:
class BoxWithBorderButtonStyle : public T
90004820:	4770      	bx	lr
90004822:	bf00      	nop

90004824 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
90004824:	4770      	bx	lr
90004826:	bf00      	nop

90004828 <_ZN8touchgfx8CallbackI24screen_asteroidsViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
90004828:	b410      	push	{r4}
        (pobject->*pmemfun)(t1);
9000482a:	68c2      	ldr	r2, [r0, #12]
    virtual void execute(T1 t1)
9000482c:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
9000482e:	6844      	ldr	r4, [r0, #4]
90004830:	f012 0f01 	tst.w	r2, #1
90004834:	eb04 0062 	add.w	r0, r4, r2, asr #1
90004838:	d103      	bne.n	90004842 <_ZN8touchgfx8CallbackI24screen_asteroidsViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x1a>
9000483a:	689b      	ldr	r3, [r3, #8]
    }
9000483c:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
90004840:	4718      	bx	r3
90004842:	ea4f 0c62 	mov.w	ip, r2, asr #1
90004846:	689b      	ldr	r3, [r3, #8]
90004848:	f854 200c 	ldr.w	r2, [r4, ip]
    }
9000484c:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
90004850:	58d3      	ldr	r3, [r2, r3]
90004852:	4718      	bx	r3

90004854 <_ZNK8touchgfx8CallbackI24screen_asteroidsViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
90004854:	6843      	ldr	r3, [r0, #4]
90004856:	b13b      	cbz	r3, 90004868 <_ZNK8touchgfx8CallbackI24screen_asteroidsViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
90004858:	6883      	ldr	r3, [r0, #8]
9000485a:	b10b      	cbz	r3, 90004860 <_ZNK8touchgfx8CallbackI24screen_asteroidsViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0xc>
9000485c:	2001      	movs	r0, #1
    }
9000485e:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
90004860:	68c0      	ldr	r0, [r0, #12]
90004862:	f000 0001 	and.w	r0, r0, #1
90004866:	4770      	bx	lr
90004868:	4618      	mov	r0, r3
9000486a:	4770      	bx	lr

9000486c <_ZN8touchgfx8CallbackI24screen_asteroidsViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
9000486c:	b410      	push	{r4}
        (pobject->*pmemfun)(t1);
9000486e:	68c2      	ldr	r2, [r0, #12]
    virtual void execute(T1 t1)
90004870:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
90004872:	6844      	ldr	r4, [r0, #4]
90004874:	f012 0f01 	tst.w	r2, #1
90004878:	eb04 0062 	add.w	r0, r4, r2, asr #1
9000487c:	d103      	bne.n	90004886 <_ZN8touchgfx8CallbackI24screen_asteroidsViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_+0x1a>
9000487e:	689b      	ldr	r3, [r3, #8]
    }
90004880:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
90004884:	4718      	bx	r3
90004886:	ea4f 0c62 	mov.w	ip, r2, asr #1
9000488a:	689b      	ldr	r3, [r3, #8]
9000488c:	f854 200c 	ldr.w	r2, [r4, ip]
    }
90004890:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
90004894:	58d3      	ldr	r3, [r2, r3]
90004896:	4718      	bx	r3

90004898 <_ZNK8touchgfx8CallbackI24screen_asteroidsViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
90004898:	6843      	ldr	r3, [r0, #4]
9000489a:	b13b      	cbz	r3, 900048ac <_ZNK8touchgfx8CallbackI24screen_asteroidsViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
9000489c:	6883      	ldr	r3, [r0, #8]
9000489e:	b10b      	cbz	r3, 900048a4 <_ZNK8touchgfx8CallbackI24screen_asteroidsViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0xc>
900048a0:	2001      	movs	r0, #1
    }
900048a2:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
900048a4:	68c0      	ldr	r0, [r0, #12]
900048a6:	f000 0001 	and.w	r0, r0, #1
900048aa:	4770      	bx	lr
900048ac:	4618      	mov	r0, r3
900048ae:	4770      	bx	lr

900048b0 <_ZNK8touchgfx5ShapeILt3EE12getNumPointsEv>:
{
public:
    virtual int getNumPoints() const
    {
        return POINTS;
    }
900048b0:	2003      	movs	r0, #3
900048b2:	4770      	bx	lr

900048b4 <_ZN8touchgfx5ShapeILt3EE9setCornerEiNS_7CWRUtil2Q5ES3_>:

    virtual void setCorner(int i, CWRUtil::Q5 x, CWRUtil::Q5 y)
    {
        if (i >= 0 && i < POINTS)
900048b4:	2902      	cmp	r1, #2
900048b6:	d803      	bhi.n	900048c0 <_ZN8touchgfx5ShapeILt3EE9setCornerEiNS_7CWRUtil2Q5ES3_+0xc>
900048b8:	eb00 0181 	add.w	r1, r0, r1, lsl #2
        {
            xCorner[i] = x, yCorner[i] = y;
900048bc:	64ca      	str	r2, [r1, #76]	; 0x4c
900048be:	658b      	str	r3, [r1, #88]	; 0x58
        }
    }
900048c0:	4770      	bx	lr
900048c2:	bf00      	nop

900048c4 <_ZNK8touchgfx5ShapeILt3EE10getCornerXEi>:

    virtual CWRUtil::Q5 getCornerX(int i) const
    {
        if (i >= 0 && i < POINTS)
900048c4:	2902      	cmp	r1, #2
900048c6:	d803      	bhi.n	900048d0 <_ZNK8touchgfx5ShapeILt3EE10getCornerXEi+0xc>
        {
            return xCorner[i];
900048c8:	eb00 0181 	add.w	r1, r0, r1, lsl #2
900048cc:	6cc8      	ldr	r0, [r1, #76]	; 0x4c
900048ce:	4770      	bx	lr
         * Constructor from integer. No conversion is done - the integer is assumed to already
         * be in Q5 format.
         *
         * @param  i Integer pre-formattet in Q5 format.
         */
        explicit Q5(int i)
900048d0:	2000      	movs	r0, #0
        }
        return CWRUtil::toQ5<int>(0);
    }
900048d2:	4770      	bx	lr

900048d4 <_ZNK8touchgfx5ShapeILt3EE10getCornerYEi>:

    virtual CWRUtil::Q5 getCornerY(int i) const
    {
        if (i >= 0 && i < POINTS)
900048d4:	2902      	cmp	r1, #2
900048d6:	d803      	bhi.n	900048e0 <_ZNK8touchgfx5ShapeILt3EE10getCornerYEi+0xc>
        {
            return yCorner[i];
900048d8:	3116      	adds	r1, #22
900048da:	f850 0021 	ldr.w	r0, [r0, r1, lsl #2]
900048de:	4770      	bx	lr
900048e0:	2000      	movs	r0, #0
        }
        return CWRUtil::toQ5<int>(0);
    }
900048e2:	4770      	bx	lr

900048e4 <_ZN8touchgfx5ShapeILt3EE8setCacheEiNS_7CWRUtil2Q5ES3_>:

protected:
    virtual void setCache(int i, CWRUtil::Q5 x, CWRUtil::Q5 y)
    {
        if (i >= 0 && i < POINTS)
900048e4:	2902      	cmp	r1, #2
900048e6:	d803      	bhi.n	900048f0 <_ZN8touchgfx5ShapeILt3EE8setCacheEiNS_7CWRUtil2Q5ES3_+0xc>
900048e8:	eb00 0181 	add.w	r1, r0, r1, lsl #2
        {
            xCache[i] = x, yCache[i] = y;
900048ec:	664a      	str	r2, [r1, #100]	; 0x64
900048ee:	670b      	str	r3, [r1, #112]	; 0x70
        }
    }
900048f0:	4770      	bx	lr
900048f2:	bf00      	nop

900048f4 <_ZNK8touchgfx5ShapeILt3EE9getCacheXEi>:

    virtual CWRUtil::Q5 getCacheX(int i) const
    {
        if (i >= 0 && i < POINTS)
900048f4:	2902      	cmp	r1, #2
900048f6:	d803      	bhi.n	90004900 <_ZNK8touchgfx5ShapeILt3EE9getCacheXEi+0xc>
        {
            return xCache[i];
900048f8:	eb00 0181 	add.w	r1, r0, r1, lsl #2
900048fc:	6e48      	ldr	r0, [r1, #100]	; 0x64
900048fe:	4770      	bx	lr
90004900:	2000      	movs	r0, #0
        }
        return CWRUtil::toQ5<int>(0);
    }
90004902:	4770      	bx	lr

90004904 <_ZNK8touchgfx5ShapeILt3EE9getCacheYEi>:

    virtual CWRUtil::Q5 getCacheY(int i) const
    {
        if (i >= 0 && i < POINTS)
90004904:	2902      	cmp	r1, #2
90004906:	d803      	bhi.n	90004910 <_ZNK8touchgfx5ShapeILt3EE9getCacheYEi+0xc>
        {
            return yCache[i];
90004908:	311c      	adds	r1, #28
9000490a:	f850 0021 	ldr.w	r0, [r0, r1, lsl #2]
9000490e:	4770      	bx	lr
90004910:	2000      	movs	r0, #0
        }
        return CWRUtil::toQ5<int>(0);
    }
90004912:	4770      	bx	lr

90004914 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE18handleAlphaUpdatedEv>:
    /**
     * @copydoc Image::setAlpha
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
90004914:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
90004918:	f880 305a 	strb.w	r3, [r0, #90]	; 0x5a
    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        borderBox.setAlpha(T::getAlpha());
        T::handleAlphaUpdated();
    }
9000491c:	4770      	bx	lr
9000491e:	bf00      	nop

90004920 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
90004920:	b510      	push	{r4, lr}
90004922:	4604      	mov	r4, r0
90004924:	214c      	movs	r1, #76	; 0x4c
90004926:	f021 fae4 	bl	90025ef2 <_ZdlPvj>
9000492a:	4620      	mov	r0, r4
9000492c:	bd10      	pop	{r4, pc}
9000492e:	bf00      	nop

90004930 <_ZN8touchgfx5ShapeILt3EED0Ev>:
class Shape : public AbstractShape
90004930:	b510      	push	{r4, lr}
90004932:	4604      	mov	r4, r0
90004934:	217c      	movs	r1, #124	; 0x7c
90004936:	f021 fadc 	bl	90025ef2 <_ZdlPvj>
9000493a:	4620      	mov	r0, r4
9000493c:	bd10      	pop	{r4, pc}
9000493e:	bf00      	nop

90004940 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED0Ev>:
class BoxWithBorderButtonStyle : public T
90004940:	b510      	push	{r4, lr}
90004942:	4604      	mov	r4, r0
90004944:	2178      	movs	r1, #120	; 0x78
90004946:	f021 fad4 	bl	90025ef2 <_ZdlPvj>
9000494a:	4620      	mov	r0, r4
9000494c:	bd10      	pop	{r4, pc}
9000494e:	bf00      	nop

90004950 <_ZN8touchgfx8CallbackI24screen_asteroidsViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
90004950:	b510      	push	{r4, lr}
90004952:	4604      	mov	r4, r0
90004954:	2110      	movs	r1, #16
90004956:	f021 facc 	bl	90025ef2 <_ZdlPvj>
9000495a:	4620      	mov	r0, r4
9000495c:	bd10      	pop	{r4, pc}
9000495e:	bf00      	nop

90004960 <_ZN8touchgfx8CallbackI24screen_asteroidsViewBaseRKNS_14AbstractButtonEvvED0Ev>:
90004960:	b510      	push	{r4, lr}
90004962:	4604      	mov	r4, r0
90004964:	2110      	movs	r1, #16
90004966:	f021 fac4 	bl	90025ef2 <_ZdlPvj>
9000496a:	4620      	mov	r0, r4
9000496c:	bd10      	pop	{r4, pc}
9000496e:	bf00      	nop

90004970 <_ZN24screen_asteroidsViewBaseD1Ev>:
screen_asteroidsViewBase::~screen_asteroidsViewBase()
90004970:	4b03      	ldr	r3, [pc, #12]	; (90004980 <_ZN24screen_asteroidsViewBaseD1Ev+0x10>)
90004972:	b510      	push	{r4, lr}
90004974:	4604      	mov	r4, r0
90004976:	6003      	str	r3, [r0, #0]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
90004978:	f00e fc58 	bl	9001322c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
9000497c:	4620      	mov	r0, r4
9000497e:	bd10      	pop	{r4, pc}
90004980:	900298f4 	.word	0x900298f4

90004984 <_ZN24screen_asteroidsViewBaseD0Ev>:
screen_asteroidsViewBase::~screen_asteroidsViewBase()
90004984:	4b07      	ldr	r3, [pc, #28]	; (900049a4 <_ZN24screen_asteroidsViewBaseD0Ev+0x20>)
90004986:	b500      	push	{lr}
90004988:	b083      	sub	sp, #12
9000498a:	6003      	str	r3, [r0, #0]
9000498c:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
9000498e:	f00e fc4d 	bl	9001322c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
90004992:	9801      	ldr	r0, [sp, #4]
90004994:	f242 1138 	movw	r1, #8504	; 0x2138
90004998:	f021 faab 	bl	90025ef2 <_ZdlPvj>
9000499c:	9801      	ldr	r0, [sp, #4]
9000499e:	b003      	add	sp, #12
900049a0:	f85d fb04 	ldr.w	pc, [sp], #4
900049a4:	900298f4 	.word	0x900298f4

900049a8 <_ZN8touchgfx8TextArea12setBaselineYEs>:
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
900049a8:	4b1b      	ldr	r3, [pc, #108]	; (90004a18 <_ZN8touchgfx8TextArea12setBaselineYEs+0x70>)
        setY(baselineY - getTypedText().getFont()->getBaseline());
900049aa:	6802      	ldr	r2, [r0, #0]
900049ac:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
900049ae:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
900049b0:	6b55      	ldr	r5, [r2, #52]	; 0x34
900049b2:	b323      	cbz	r3, 900049fe <_ZN8touchgfx8TextArea12setBaselineYEs+0x56>
900049b4:	b28e      	uxth	r6, r1
        return typedTextId < numberOfTypedTexts;
900049b6:	4919      	ldr	r1, [pc, #100]	; (90004a1c <_ZN8touchgfx8TextArea12setBaselineYEs+0x74>)
900049b8:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
900049ba:	4604      	mov	r4, r0
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
900049bc:	8809      	ldrh	r1, [r1, #0]
900049be:	4291      	cmp	r1, r2
900049c0:	d923      	bls.n	90004a0a <_ZN8touchgfx8TextArea12setBaselineYEs+0x62>
        return fonts[typedTexts[typedTextId].fontIdx];
900049c2:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
900049c6:	4b16      	ldr	r3, [pc, #88]	; (90004a20 <_ZN8touchgfx8TextArea12setBaselineYEs+0x78>)
900049c8:	681b      	ldr	r3, [r3, #0]
900049ca:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
900049ce:	4a15      	ldr	r2, [pc, #84]	; (90004a24 <_ZN8touchgfx8TextArea12setBaselineYEs+0x7c>)
900049d0:	6803      	ldr	r3, [r0, #0]
900049d2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
900049d4:	4293      	cmp	r3, r2
900049d6:	d107      	bne.n	900049e8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x40>
        return baselineHeight;
900049d8:	88c0      	ldrh	r0, [r0, #6]
900049da:	4b13      	ldr	r3, [pc, #76]	; (90004a28 <_ZN8touchgfx8TextArea12setBaselineYEs+0x80>)
900049dc:	1a31      	subs	r1, r6, r0
900049de:	429d      	cmp	r5, r3
900049e0:	b209      	sxth	r1, r1
900049e2:	d107      	bne.n	900049f4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x4c>
        rect.y = y;
900049e4:	80e1      	strh	r1, [r4, #6]
    }
900049e6:	bd70      	pop	{r4, r5, r6, pc}
        setY(baselineY - getTypedText().getFont()->getBaseline());
900049e8:	4798      	blx	r3
900049ea:	4b0f      	ldr	r3, [pc, #60]	; (90004a28 <_ZN8touchgfx8TextArea12setBaselineYEs+0x80>)
900049ec:	1a31      	subs	r1, r6, r0
900049ee:	429d      	cmp	r5, r3
900049f0:	b209      	sxth	r1, r1
900049f2:	d0f7      	beq.n	900049e4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x3c>
900049f4:	4620      	mov	r0, r4
900049f6:	462b      	mov	r3, r5
    }
900049f8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
900049fc:	4718      	bx	r3
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
900049fe:	4b0b      	ldr	r3, [pc, #44]	; (90004a2c <_ZN8touchgfx8TextArea12setBaselineYEs+0x84>)
90004a00:	216c      	movs	r1, #108	; 0x6c
90004a02:	4a0b      	ldr	r2, [pc, #44]	; (90004a30 <_ZN8touchgfx8TextArea12setBaselineYEs+0x88>)
90004a04:	480b      	ldr	r0, [pc, #44]	; (90004a34 <_ZN8touchgfx8TextArea12setBaselineYEs+0x8c>)
90004a06:	f021 faa3 	bl	90025f50 <__assert_func>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90004a0a:	4b0b      	ldr	r3, [pc, #44]	; (90004a38 <_ZN8touchgfx8TextArea12setBaselineYEs+0x90>)
90004a0c:	216d      	movs	r1, #109	; 0x6d
90004a0e:	4a08      	ldr	r2, [pc, #32]	; (90004a30 <_ZN8touchgfx8TextArea12setBaselineYEs+0x88>)
90004a10:	4808      	ldr	r0, [pc, #32]	; (90004a34 <_ZN8touchgfx8TextArea12setBaselineYEs+0x8c>)
90004a12:	f021 fa9d 	bl	90025f50 <__assert_func>
90004a16:	bf00      	nop
90004a18:	240235d4 	.word	0x240235d4
90004a1c:	240235d8 	.word	0x240235d8
90004a20:	240235dc 	.word	0x240235dc
90004a24:	90003839 	.word	0x90003839
90004a28:	90002401 	.word	0x90002401
90004a2c:	900294b8 	.word	0x900294b8
90004a30:	900294fc 	.word	0x900294fc
90004a34:	90029538 	.word	0x90029538
90004a38:	90029580 	.word	0x90029580

90004a3c <_ZN24screen_asteroidsViewBase15afterTransitionEv>:
void screen_asteroidsViewBase::afterTransition()
{
    //interaction_resume_asteroids_task
    //When screen transition ends call virtual function
    //Call resume_asteroids_task
    resume_asteroids_task();
90004a3c:	6803      	ldr	r3, [r0, #0]
90004a3e:	490a      	ldr	r1, [pc, #40]	; (90004a68 <_ZN24screen_asteroidsViewBase15afterTransitionEv+0x2c>)
90004a40:	6ada      	ldr	r2, [r3, #44]	; 0x2c
90004a42:	428a      	cmp	r2, r1
{
90004a44:	b510      	push	{r4, lr}
90004a46:	4604      	mov	r4, r0
90004a48:	d104      	bne.n	90004a54 <_ZN24screen_asteroidsViewBase15afterTransitionEv+0x18>

    //interaction_start_asteroids_game
    //When screen transition ends call virtual function
    //Call start_asteroids_game
    start_asteroids_game();
90004a4a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90004a4c:	4a07      	ldr	r2, [pc, #28]	; (90004a6c <_ZN24screen_asteroidsViewBase15afterTransitionEv+0x30>)
90004a4e:	4293      	cmp	r3, r2
90004a50:	d106      	bne.n	90004a60 <_ZN24screen_asteroidsViewBase15afterTransitionEv+0x24>
}
90004a52:	bd10      	pop	{r4, pc}
    resume_asteroids_task();
90004a54:	4790      	blx	r2
    start_asteroids_game();
90004a56:	6823      	ldr	r3, [r4, #0]
90004a58:	4a04      	ldr	r2, [pc, #16]	; (90004a6c <_ZN24screen_asteroidsViewBase15afterTransitionEv+0x30>)
90004a5a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90004a5c:	4293      	cmp	r3, r2
90004a5e:	d0f8      	beq.n	90004a52 <_ZN24screen_asteroidsViewBase15afterTransitionEv+0x16>
90004a60:	4620      	mov	r0, r4
}
90004a62:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    start_asteroids_game();
90004a66:	4718      	bx	r3
90004a68:	900047cd 	.word	0x900047cd
90004a6c:	900047d5 	.word	0x900047d5

90004a70 <_ZN24screen_asteroidsViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:
    if (&src == &_btn_back)
90004a70:	f100 02c4 	add.w	r2, r0, #196	; 0xc4
90004a74:	428a      	cmp	r2, r1
90004a76:	d000      	beq.n	90004a7a <_ZN24screen_asteroidsViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xa>
90004a78:	4770      	bx	lr
{
90004a7a:	b508      	push	{r3, lr}
        suspend_asteroids_task();
90004a7c:	6803      	ldr	r3, [r0, #0]
90004a7e:	4a06      	ldr	r2, [pc, #24]	; (90004a98 <_ZN24screen_asteroidsViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x28>)
90004a80:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90004a82:	4293      	cmp	r3, r2
90004a84:	d105      	bne.n	90004a92 <_ZN24screen_asteroidsViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x22>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
90004a86:	f010 f8e7 	bl	90014c58 <_ZN8touchgfx11Application11getInstanceEv>
}
90004a8a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoscreen_game_selectScreenSlideTransitionWest();
90004a8e:	f7ff bc35 	b.w	900042fc <_ZN23FrontendApplicationBase47gotoscreen_game_selectScreenSlideTransitionWestEv>
        suspend_asteroids_task();
90004a92:	4798      	blx	r3
90004a94:	e7f7      	b.n	90004a86 <_ZN24screen_asteroidsViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x16>
90004a96:	bf00      	nop
90004a98:	900047d1 	.word	0x900047d1

90004a9c <_ZN24screen_asteroidsViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
    if (&src == &btn_shoot)
90004a9c:	f200 4384 	addw	r3, r0, #1156	; 0x484
90004aa0:	4299      	cmp	r1, r3
{
90004aa2:	b570      	push	{r4, r5, r6, lr}
90004aa4:	4604      	mov	r4, r0
90004aa6:	460d      	mov	r5, r1
    if (&src == &btn_shoot)
90004aa8:	d031      	beq.n	90004b0e <_ZN24screen_asteroidsViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x72>
    if (&src == &btn_up)
90004aaa:	f504 6389 	add.w	r3, r4, #1096	; 0x448
90004aae:	429d      	cmp	r5, r3
90004ab0:	d025      	beq.n	90004afe <_ZN24screen_asteroidsViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x62>
    if (&src == &btn_down)
90004ab2:	f504 7374 	add.w	r3, r4, #976	; 0x3d0
90004ab6:	429d      	cmp	r5, r3
90004ab8:	d019      	beq.n	90004aee <_ZN24screen_asteroidsViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x52>
    if (&src == &btn_right)
90004aba:	f504 7365 	add.w	r3, r4, #916	; 0x394
90004abe:	429d      	cmp	r5, r3
90004ac0:	d00d      	beq.n	90004ade <_ZN24screen_asteroidsViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x42>
    if (&src == &btn_left)
90004ac2:	f204 430c 	addw	r3, r4, #1036	; 0x40c
90004ac6:	429d      	cmp	r5, r3
90004ac8:	d000      	beq.n	90004acc <_ZN24screen_asteroidsViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x30>
}
90004aca:	bd70      	pop	{r4, r5, r6, pc}
        btn_left_pressed();
90004acc:	6823      	ldr	r3, [r4, #0]
90004ace:	4a13      	ldr	r2, [pc, #76]	; (90004b1c <_ZN24screen_asteroidsViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x80>)
90004ad0:	6c9b      	ldr	r3, [r3, #72]	; 0x48
90004ad2:	4293      	cmp	r3, r2
90004ad4:	d0f9      	beq.n	90004aca <_ZN24screen_asteroidsViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x2e>
90004ad6:	4620      	mov	r0, r4
}
90004ad8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        btn_left_pressed();
90004adc:	4718      	bx	r3
        btn_right_pressed();
90004ade:	6823      	ldr	r3, [r4, #0]
90004ae0:	4a0f      	ldr	r2, [pc, #60]	; (90004b20 <_ZN24screen_asteroidsViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x84>)
90004ae2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90004ae4:	4293      	cmp	r3, r2
90004ae6:	d0ec      	beq.n	90004ac2 <_ZN24screen_asteroidsViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
90004ae8:	4620      	mov	r0, r4
90004aea:	4798      	blx	r3
90004aec:	e7e9      	b.n	90004ac2 <_ZN24screen_asteroidsViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
        btn_down_pressed();
90004aee:	6823      	ldr	r3, [r4, #0]
90004af0:	4a0c      	ldr	r2, [pc, #48]	; (90004b24 <_ZN24screen_asteroidsViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x88>)
90004af2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
90004af4:	4293      	cmp	r3, r2
90004af6:	d0e0      	beq.n	90004aba <_ZN24screen_asteroidsViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x1e>
90004af8:	4620      	mov	r0, r4
90004afa:	4798      	blx	r3
90004afc:	e7dd      	b.n	90004aba <_ZN24screen_asteroidsViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x1e>
        btn_up_pressed();
90004afe:	6823      	ldr	r3, [r4, #0]
90004b00:	4a09      	ldr	r2, [pc, #36]	; (90004b28 <_ZN24screen_asteroidsViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x8c>)
90004b02:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90004b04:	4293      	cmp	r3, r2
90004b06:	d0d4      	beq.n	90004ab2 <_ZN24screen_asteroidsViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
90004b08:	4620      	mov	r0, r4
90004b0a:	4798      	blx	r3
90004b0c:	e7d1      	b.n	90004ab2 <_ZN24screen_asteroidsViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
        btn_shoot_pressed();
90004b0e:	6803      	ldr	r3, [r0, #0]
90004b10:	4a06      	ldr	r2, [pc, #24]	; (90004b2c <_ZN24screen_asteroidsViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x90>)
90004b12:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90004b14:	4293      	cmp	r3, r2
90004b16:	d0c8      	beq.n	90004aaa <_ZN24screen_asteroidsViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xe>
90004b18:	4798      	blx	r3
90004b1a:	e7c6      	b.n	90004aaa <_ZN24screen_asteroidsViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xe>
90004b1c:	900047e9 	.word	0x900047e9
90004b20:	900047e5 	.word	0x900047e5
90004b24:	900047e1 	.word	0x900047e1
90004b28:	900047dd 	.word	0x900047dd
90004b2c:	900047d9 	.word	0x900047d9

90004b30 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv>:
     *
     * @see setAction
     */
    virtual void executeAction()
    {
        if (action && action->isValid())
90004b30:	6b03      	ldr	r3, [r0, #48]	; 0x30
90004b32:	b30b      	cbz	r3, 90004b78 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x48>
90004b34:	681a      	ldr	r2, [r3, #0]
    virtual void executeAction()
90004b36:	b570      	push	{r4, r5, r6, lr}
        if (action && action->isValid())
90004b38:	68d1      	ldr	r1, [r2, #12]
90004b3a:	4604      	mov	r4, r0
90004b3c:	481a      	ldr	r0, [pc, #104]	; (90004ba8 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x78>)
90004b3e:	4281      	cmp	r1, r0
90004b40:	d11b      	bne.n	90004b7a <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x4a>
        return (pobject != 0) && (pmemfun != 0);
90004b42:	6858      	ldr	r0, [r3, #4]
90004b44:	b180      	cbz	r0, 90004b68 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x38>
90004b46:	6899      	ldr	r1, [r3, #8]
90004b48:	b1f1      	cbz	r1, 90004b88 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x58>
        {
            action->execute(*this);
90004b4a:	6892      	ldr	r2, [r2, #8]
90004b4c:	4917      	ldr	r1, [pc, #92]	; (90004bac <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x7c>)
90004b4e:	428a      	cmp	r2, r1
90004b50:	d124      	bne.n	90004b9c <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x6c>
        (pobject->*pmemfun)(t1);
90004b52:	68da      	ldr	r2, [r3, #12]
90004b54:	6858      	ldr	r0, [r3, #4]
90004b56:	eb00 0062 	add.w	r0, r0, r2, asr #1
90004b5a:	07d2      	lsls	r2, r2, #31
90004b5c:	d405      	bmi.n	90004b6a <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x3a>
90004b5e:	4621      	mov	r1, r4
90004b60:	689b      	ldr	r3, [r3, #8]
        }
    }
90004b62:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90004b66:	4718      	bx	r3
90004b68:	bd70      	pop	{r4, r5, r6, pc}
90004b6a:	6899      	ldr	r1, [r3, #8]
90004b6c:	6803      	ldr	r3, [r0, #0]
90004b6e:	585b      	ldr	r3, [r3, r1]
90004b70:	4621      	mov	r1, r4
90004b72:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90004b76:	4718      	bx	r3
90004b78:	4770      	bx	lr
        if (action && action->isValid())
90004b7a:	4618      	mov	r0, r3
90004b7c:	4788      	blx	r1
90004b7e:	2800      	cmp	r0, #0
90004b80:	d0f2      	beq.n	90004b68 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x38>
            action->execute(*this);
90004b82:	6b23      	ldr	r3, [r4, #48]	; 0x30
90004b84:	681a      	ldr	r2, [r3, #0]
90004b86:	e7e0      	b.n	90004b4a <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1a>
        return (pobject != 0) && (pmemfun != 0);
90004b88:	68dd      	ldr	r5, [r3, #12]
90004b8a:	07ee      	lsls	r6, r5, #31
90004b8c:	d5ec      	bpl.n	90004b68 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x38>
90004b8e:	6892      	ldr	r2, [r2, #8]
90004b90:	4e06      	ldr	r6, [pc, #24]	; (90004bac <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x7c>)
90004b92:	42b2      	cmp	r2, r6
90004b94:	d102      	bne.n	90004b9c <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x6c>
        (pobject->*pmemfun)(t1);
90004b96:	eb00 0065 	add.w	r0, r0, r5, asr #1
90004b9a:	e7e7      	b.n	90004b6c <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x3c>
90004b9c:	4621      	mov	r1, r4
90004b9e:	4618      	mov	r0, r3
    }
90004ba0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            action->execute(*this);
90004ba4:	4710      	bx	r2
90004ba6:	bf00      	nop
90004ba8:	90004899 	.word	0x90004899
90004bac:	9000486d 	.word	0x9000486d

90004bb0 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
        setX(x);
90004bb0:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
90004bb2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90004bb6:	4f25      	ldr	r7, [pc, #148]	; (90004c4c <_ZN8touchgfx8TextArea13setXBaselineYEss+0x9c>)
90004bb8:	4605      	mov	r5, r0
        setX(x);
90004bba:	6b1e      	ldr	r6, [r3, #48]	; 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
90004bbc:	4690      	mov	r8, r2
90004bbe:	42be      	cmp	r6, r7
90004bc0:	d125      	bne.n	90004c0e <_ZN8touchgfx8TextArea13setXBaselineYEss+0x5e>
        setBaselineY(baselineY);
90004bc2:	6e5c      	ldr	r4, [r3, #100]	; 0x64
        rect.x = x;
90004bc4:	80a9      	strh	r1, [r5, #4]
90004bc6:	4922      	ldr	r1, [pc, #136]	; (90004c50 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xa0>)
90004bc8:	428c      	cmp	r4, r1
90004bca:	d126      	bne.n	90004c1a <_ZN8touchgfx8TextArea13setXBaselineYEss+0x6a>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90004bcc:	4921      	ldr	r1, [pc, #132]	; (90004c54 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xa4>)
        setY(baselineY - getTypedText().getFont()->getBaseline());
90004bce:	fa1f f888 	uxth.w	r8, r8
90004bd2:	6b5e      	ldr	r6, [r3, #52]	; 0x34
90004bd4:	680b      	ldr	r3, [r1, #0]
90004bd6:	2b00      	cmp	r3, #0
90004bd8:	d032      	beq.n	90004c40 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x90>
        return typedTextId < numberOfTypedTexts;
90004bda:	491f      	ldr	r1, [pc, #124]	; (90004c58 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xa8>)
90004bdc:	8daa      	ldrh	r2, [r5, #44]	; 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90004bde:	8809      	ldrh	r1, [r1, #0]
90004be0:	4291      	cmp	r1, r2
90004be2:	d927      	bls.n	90004c34 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x84>
        return fonts[typedTexts[typedTextId].fontIdx];
90004be4:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
90004be8:	4b1c      	ldr	r3, [pc, #112]	; (90004c5c <_ZN8touchgfx8TextArea13setXBaselineYEss+0xac>)
90004bea:	681b      	ldr	r3, [r3, #0]
90004bec:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
90004bf0:	4a1b      	ldr	r2, [pc, #108]	; (90004c60 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb0>)
90004bf2:	6803      	ldr	r3, [r0, #0]
90004bf4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90004bf6:	4293      	cmp	r3, r2
90004bf8:	d11a      	bne.n	90004c30 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x80>
90004bfa:	88c0      	ldrh	r0, [r0, #6]
90004bfc:	4b19      	ldr	r3, [pc, #100]	; (90004c64 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb4>)
90004bfe:	eba8 0200 	sub.w	r2, r8, r0
90004c02:	429e      	cmp	r6, r3
90004c04:	b211      	sxth	r1, r2
90004c06:	d10e      	bne.n	90004c26 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x76>
        rect.y = y;
90004c08:	80e9      	strh	r1, [r5, #6]
    }
90004c0a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        setX(x);
90004c0e:	47b0      	blx	r6
        setBaselineY(baselineY);
90004c10:	682b      	ldr	r3, [r5, #0]
90004c12:	490f      	ldr	r1, [pc, #60]	; (90004c50 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xa0>)
90004c14:	6e5c      	ldr	r4, [r3, #100]	; 0x64
90004c16:	428c      	cmp	r4, r1
90004c18:	d0d8      	beq.n	90004bcc <_ZN8touchgfx8TextArea13setXBaselineYEss+0x1c>
90004c1a:	4641      	mov	r1, r8
90004c1c:	4628      	mov	r0, r5
90004c1e:	4623      	mov	r3, r4
    }
90004c20:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
        setBaselineY(baselineY);
90004c24:	4718      	bx	r3
        setY(baselineY - getTypedText().getFont()->getBaseline());
90004c26:	4628      	mov	r0, r5
90004c28:	4633      	mov	r3, r6
    }
90004c2a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
90004c2e:	4718      	bx	r3
90004c30:	4798      	blx	r3
90004c32:	e7e3      	b.n	90004bfc <_ZN8touchgfx8TextArea13setXBaselineYEss+0x4c>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90004c34:	4b0c      	ldr	r3, [pc, #48]	; (90004c68 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb8>)
90004c36:	216d      	movs	r1, #109	; 0x6d
90004c38:	4a0c      	ldr	r2, [pc, #48]	; (90004c6c <_ZN8touchgfx8TextArea13setXBaselineYEss+0xbc>)
90004c3a:	480d      	ldr	r0, [pc, #52]	; (90004c70 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xc0>)
90004c3c:	f021 f988 	bl	90025f50 <__assert_func>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90004c40:	4b0c      	ldr	r3, [pc, #48]	; (90004c74 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xc4>)
90004c42:	216c      	movs	r1, #108	; 0x6c
90004c44:	4a09      	ldr	r2, [pc, #36]	; (90004c6c <_ZN8touchgfx8TextArea13setXBaselineYEss+0xbc>)
90004c46:	480a      	ldr	r0, [pc, #40]	; (90004c70 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xc0>)
90004c48:	f021 f982 	bl	90025f50 <__assert_func>
90004c4c:	900023fd 	.word	0x900023fd
90004c50:	900049a9 	.word	0x900049a9
90004c54:	240235d4 	.word	0x240235d4
90004c58:	240235d8 	.word	0x240235d8
90004c5c:	240235dc 	.word	0x240235dc
90004c60:	90003839 	.word	0x90003839
90004c64:	90002401 	.word	0x90002401
90004c68:	90029580 	.word	0x90029580
90004c6c:	900294fc 	.word	0x900294fc
90004c70:	90029538 	.word	0x90029538
90004c74:	900294b8 	.word	0x900294b8

90004c78 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE>:
     *
     * @return The click type of this event.
     */
    ClickEventType getType() const
    {
        return clickEventType;
90004c78:	790b      	ldrb	r3, [r1, #4]
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        bool wasPressed = getPressed();
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
90004c7a:	1e1a      	subs	r2, r3, #0
    virtual void handleClickEvent(const ClickEvent& event)
90004c7c:	b570      	push	{r4, r5, r6, lr}
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
90004c7e:	bf18      	it	ne
90004c80:	2201      	movne	r2, #1
        return pressed;
90004c82:	f890 602c 	ldrb.w	r6, [r0, #44]	; 0x2c
    virtual void handleClickEvent(const ClickEvent& event)
90004c86:	460d      	mov	r5, r1
90004c88:	4604      	mov	r4, r0
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
90004c8a:	42b2      	cmp	r2, r6
90004c8c:	d004      	beq.n	90004c98 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x20>
        {
            setPressed(newPressedValue);
            invalidate();
        }
        if (wasPressed && (event.getType() == ClickEvent::RELEASED))
90004c8e:	b116      	cbz	r6, 90004c96 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x1e>
90004c90:	792b      	ldrb	r3, [r5, #4]
90004c92:	2b01      	cmp	r3, #1
90004c94:	d00e      	beq.n	90004cb4 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x3c>
        {
            executeAction();
        }
    }
90004c96:	bd70      	pop	{r4, r5, r6, pc}
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
90004c98:	fab3 f383 	clz	r3, r3
90004c9c:	095b      	lsrs	r3, r3, #5
90004c9e:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
        handlePressedUpdated();
90004ca2:	6803      	ldr	r3, [r0, #0]
90004ca4:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
90004ca8:	4798      	blx	r3
            invalidate();
90004caa:	6823      	ldr	r3, [r4, #0]
90004cac:	4620      	mov	r0, r4
90004cae:	695b      	ldr	r3, [r3, #20]
90004cb0:	4798      	blx	r3
90004cb2:	e7ec      	b.n	90004c8e <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x16>
            executeAction();
90004cb4:	6823      	ldr	r3, [r4, #0]
90004cb6:	4a20      	ldr	r2, [pc, #128]	; (90004d38 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xc0>)
90004cb8:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
90004cbc:	4293      	cmp	r3, r2
90004cbe:	d127      	bne.n	90004d10 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x98>
        if (action && action->isValid())
90004cc0:	6b23      	ldr	r3, [r4, #48]	; 0x30
90004cc2:	2b00      	cmp	r3, #0
90004cc4:	d0e7      	beq.n	90004c96 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x1e>
90004cc6:	6819      	ldr	r1, [r3, #0]
90004cc8:	481c      	ldr	r0, [pc, #112]	; (90004d3c <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xc4>)
90004cca:	68ca      	ldr	r2, [r1, #12]
90004ccc:	4282      	cmp	r2, r0
90004cce:	d123      	bne.n	90004d18 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xa0>
        return (pobject != 0) && (pmemfun != 0);
90004cd0:	685a      	ldr	r2, [r3, #4]
90004cd2:	2a00      	cmp	r2, #0
90004cd4:	d0df      	beq.n	90004c96 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x1e>
90004cd6:	689d      	ldr	r5, [r3, #8]
90004cd8:	b175      	cbz	r5, 90004cf8 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x80>
            action->execute(*this);
90004cda:	688e      	ldr	r6, [r1, #8]
90004cdc:	4a18      	ldr	r2, [pc, #96]	; (90004d40 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xc8>)
90004cde:	4296      	cmp	r6, r2
90004ce0:	d123      	bne.n	90004d2a <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xb2>
        (pobject->*pmemfun)(t1);
90004ce2:	68d9      	ldr	r1, [r3, #12]
90004ce4:	685a      	ldr	r2, [r3, #4]
90004ce6:	eb02 0061 	add.w	r0, r2, r1, asr #1
90004cea:	07ca      	lsls	r2, r1, #31
90004cec:	d41b      	bmi.n	90004d26 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xae>
90004cee:	689b      	ldr	r3, [r3, #8]
90004cf0:	4621      	mov	r1, r4
    }
90004cf2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90004cf6:	4718      	bx	r3
        return (pobject != 0) && (pmemfun != 0);
90004cf8:	68d8      	ldr	r0, [r3, #12]
90004cfa:	07c6      	lsls	r6, r0, #31
90004cfc:	d5cb      	bpl.n	90004c96 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x1e>
90004cfe:	688e      	ldr	r6, [r1, #8]
90004d00:	490f      	ldr	r1, [pc, #60]	; (90004d40 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xc8>)
90004d02:	428e      	cmp	r6, r1
90004d04:	d111      	bne.n	90004d2a <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xb2>
        (pobject->*pmemfun)(t1);
90004d06:	eb02 0060 	add.w	r0, r2, r0, asr #1
90004d0a:	6803      	ldr	r3, [r0, #0]
90004d0c:	595b      	ldr	r3, [r3, r5]
90004d0e:	e7ef      	b.n	90004cf0 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x78>
            executeAction();
90004d10:	4620      	mov	r0, r4
    }
90004d12:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            executeAction();
90004d16:	4718      	bx	r3
        if (action && action->isValid())
90004d18:	4618      	mov	r0, r3
90004d1a:	4790      	blx	r2
90004d1c:	2800      	cmp	r0, #0
90004d1e:	d0ba      	beq.n	90004c96 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x1e>
            action->execute(*this);
90004d20:	6b23      	ldr	r3, [r4, #48]	; 0x30
90004d22:	6819      	ldr	r1, [r3, #0]
90004d24:	e7d9      	b.n	90004cda <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x62>
90004d26:	689d      	ldr	r5, [r3, #8]
90004d28:	e7ef      	b.n	90004d0a <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x92>
90004d2a:	4621      	mov	r1, r4
90004d2c:	4618      	mov	r0, r3
90004d2e:	4633      	mov	r3, r6
    }
90004d30:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90004d34:	4718      	bx	r3
90004d36:	bf00      	nop
90004d38:	90004b31 	.word	0x90004b31
90004d3c:	90004899 	.word	0x90004899
90004d40:	9000486d 	.word	0x9000486d

90004d44 <_ZN24screen_asteroidsViewBaseC1Ev>:
screen_asteroidsViewBase::screen_asteroidsViewBase() :
90004d44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90004d48:	ed2d 8b04 	vpush	{d8-d9}
90004d4c:	b095      	sub	sp, #84	; 0x54
90004d4e:	4604      	mov	r4, r0
        : presenter(0)
90004d50:	f011 fb50 	bl	900163f4 <_ZN8touchgfx6ScreenC1Ev>
    buttonCallback(this, &screen_asteroidsViewBase::buttonCallbackHandler)
90004d54:	4b77      	ldr	r3, [pc, #476]	; (90004f34 <_ZN24screen_asteroidsViewBaseC1Ev+0x1f0>)
90004d56:	2700      	movs	r7, #0
          touchable(false),
90004d58:	f44f 7680 	mov.w	r6, #256	; 0x100
        : Widget(), alpha(255), color(0)
90004d5c:	f04f 08ff 	mov.w	r8, #255	; 0xff
90004d60:	4d75      	ldr	r5, [pc, #468]	; (90004f38 <_ZN24screen_asteroidsViewBaseC1Ev+0x1f4>)
90004d62:	6023      	str	r3, [r4, #0]
90004d64:	f104 00c4 	add.w	r0, r4, #196	; 0xc4
          firstChild(0)
90004d68:	4b74      	ldr	r3, [pc, #464]	; (90004f3c <_ZN24screen_asteroidsViewBaseC1Ev+0x1f8>)
        T::add(borderBox);
90004d6a:	f104 01f8 	add.w	r1, r4, #248	; 0xf8
90004d6e:	63e7      	str	r7, [r4, #60]	; 0x3c
90004d70:	ee08 0a10 	vmov	s16, r0
        : x(0), y(0), width(0), height(0)
90004d74:	6467      	str	r7, [r4, #68]	; 0x44
90004d76:	f504 7ad8 	add.w	sl, r4, #432	; 0x1b0
          cachedAbsX(0),
90004d7a:	6627      	str	r7, [r4, #96]	; 0x60
90004d7c:	f504 7bee 	add.w	fp, r4, #476	; 0x1dc
          touchable(false),
90004d80:	f8a4 6064 	strh.w	r6, [r4, #100]	; 0x64
90004d84:	f884 8066 	strb.w	r8, [r4, #102]	; 0x66
        : color(col)
90004d88:	66a7      	str	r7, [r4, #104]	; 0x68
90004d8a:	f8a4 6090 	strh.w	r6, [r4, #144]	; 0x90
90004d8e:	f884 8092 	strb.w	r8, [r4, #146]	; 0x92
90004d92:	f8c4 7094 	str.w	r7, [r4, #148]	; 0x94
90004d96:	6425      	str	r5, [r4, #64]	; 0x40
90004d98:	66e5      	str	r5, [r4, #108]	; 0x6c
        : x(0), y(0), width(0), height(0)
90004d9a:	e9c4 7712 	strd	r7, r7, [r4, #72]	; 0x48
          parent(0),
90004d9e:	e9c4 7714 	strd	r7, r7, [r4, #80]	; 0x50
          nextDrawChainElement(0),
90004da2:	e9c4 7716 	strd	r7, r7, [r4, #88]	; 0x58
90004da6:	e9c4 771c 	strd	r7, r7, [r4, #112]	; 0x70
90004daa:	e9c4 771e 	strd	r7, r7, [r4, #120]	; 0x78
          nextSibling(0),
90004dae:	e9c4 7720 	strd	r7, r7, [r4, #128]	; 0x80
          cachedAbsX(0),
90004db2:	e9c4 7722 	strd	r7, r7, [r4, #136]	; 0x88
90004db6:	e9c4 7727 	strd	r7, r7, [r4, #156]	; 0x9c
90004dba:	e9c4 7729 	strd	r7, r7, [r4, #164]	; 0xa4
          nextSibling(0),
90004dbe:	e9c4 772b 	strd	r7, r7, [r4, #172]	; 0xac
          cachedAbsX(0),
90004dc2:	e9c4 772d 	strd	r7, r7, [r4, #180]	; 0xb4
90004dc6:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
        : pressed(false), alpha(255), action(0)
90004dca:	f44f 437f 	mov.w	r3, #65280	; 0xff00
          touchable(false),
90004dce:	f8a4 60bc 	strh.w	r6, [r4, #188]	; 0xbc
90004dd2:	f8a4 30f0 	strh.w	r3, [r4, #240]	; 0xf0
        touchable = touch;
90004dd6:	f240 1301 	movw	r3, #257	; 0x101
90004dda:	f8c4 70c0 	str.w	r7, [r4, #192]	; 0xc0
90004dde:	f8a4 30e8 	strh.w	r3, [r4, #232]	; 0xe8
        : T(), up(), down()
90004de2:	4b57      	ldr	r3, [pc, #348]	; (90004f40 <_ZN24screen_asteroidsViewBaseC1Ev+0x1fc>)
90004de4:	f8c4 70ec 	str.w	r7, [r4, #236]	; 0xec
90004de8:	f8c4 30c4 	str.w	r3, [r4, #196]	; 0xc4
        : Box(), borderColor(0), borderSize(0)
90004dec:	4b55      	ldr	r3, [pc, #340]	; (90004f44 <_ZN24screen_asteroidsViewBaseC1Ev+0x200>)
90004dee:	f8c4 70f4 	str.w	r7, [r4, #244]	; 0xf4
90004df2:	f8c4 30f8 	str.w	r3, [r4, #248]	; 0xf8
          touchable(false),
90004df6:	f8a4 611c 	strh.w	r6, [r4, #284]	; 0x11c
90004dfa:	f884 811e 	strb.w	r8, [r4, #286]	; 0x11e
90004dfe:	f8a4 7128 	strh.w	r7, [r4, #296]	; 0x128
        rect.x = x;
90004e02:	f8c4 70fc 	str.w	r7, [r4, #252]	; 0xfc
90004e06:	e9c4 7732 	strd	r7, r7, [r4, #200]	; 0xc8
90004e0a:	e9c4 7734 	strd	r7, r7, [r4, #208]	; 0xd0
          nextSibling(0),
90004e0e:	e9c4 7736 	strd	r7, r7, [r4, #216]	; 0xd8
          cachedAbsX(0),
90004e12:	e9c4 7738 	strd	r7, r7, [r4, #224]	; 0xe0
          nextSibling(0),
90004e16:	e9c4 7743 	strd	r7, r7, [r4, #268]	; 0x10c
          cachedAbsX(0),
90004e1a:	e9c4 7745 	strd	r7, r7, [r4, #276]	; 0x114
        : color(col)
90004e1e:	e9c4 7748 	strd	r7, r7, [r4, #288]	; 0x120
        : color(0)
90004e22:	e9c4 774b 	strd	r7, r7, [r4, #300]	; 0x12c
90004e26:	e9c4 774d 	strd	r7, r7, [r4, #308]	; 0x134
        rect.x = x;
90004e2a:	e9c4 7740 	strd	r7, r7, [r4, #256]	; 0x100
90004e2e:	f8c4 7108 	str.w	r7, [r4, #264]	; 0x108
        T::add(borderBox);
90004e32:	f00a fe6d 	bl	9000fb10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90004e36:	f04f 33ff 	mov.w	r3, #4294967295
90004e3a:	a912      	add	r1, sp, #72	; 0x48
          touchable(false),
90004e3c:	f8a4 6160 	strh.w	r6, [r4, #352]	; 0x160
90004e40:	f8c4 31a8 	str.w	r3, [r4, #424]	; 0x1a8
90004e44:	4650      	mov	r0, sl
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
90004e46:	f8ad 3048 	strh.w	r3, [sp, #72]	; 0x48
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
90004e4a:	4b3f      	ldr	r3, [pc, #252]	; (90004f48 <_ZN24screen_asteroidsViewBaseC1Ev+0x204>)
90004e4c:	f8a4 618c 	strh.w	r6, [r4, #396]	; 0x18c
90004e50:	f8c4 3168 	str.w	r3, [r4, #360]	; 0x168
        : typedTextId(id)
90004e54:	4b3d      	ldr	r3, [pc, #244]	; (90004f4c <_ZN24screen_asteroidsViewBaseC1Ev+0x208>)
90004e56:	f884 8162 	strb.w	r8, [r4, #354]	; 0x162
90004e5a:	f8c4 3190 	str.w	r3, [r4, #400]	; 0x190
90004e5e:	f64f 73ff 	movw	r3, #65535	; 0xffff
90004e62:	f8c4 819e 	str.w	r8, [r4, #414]	; 0x19e
90004e66:	f504 78b4 	add.w	r8, r4, #360	; 0x168
90004e6a:	f8a4 3194 	strh.w	r3, [r4, #404]	; 0x194
        : color(col)
90004e6e:	f8c4 7164 	str.w	r7, [r4, #356]	; 0x164
90004e72:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
90004e76:	f8a4 719c 	strh.w	r7, [r4, #412]	; 0x19c
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90004e7a:	f8c4 71a4 	str.w	r7, [r4, #420]	; 0x1a4
              text(0)
90004e7e:	f8c4 71ac 	str.w	r7, [r4, #428]	; 0x1ac
90004e82:	f8c4 513c 	str.w	r5, [r4, #316]	; 0x13c
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
90004e86:	4e32      	ldr	r6, [pc, #200]	; (90004f50 <_ZN24screen_asteroidsViewBaseC1Ev+0x20c>)
        : x(0), y(0), width(0), height(0)
90004e88:	e9c4 7750 	strd	r7, r7, [r4, #320]	; 0x140
90004e8c:	e9c4 7752 	strd	r7, r7, [r4, #328]	; 0x148
          nextSibling(0),
90004e90:	e9c4 7754 	strd	r7, r7, [r4, #336]	; 0x150
          cachedAbsX(0),
90004e94:	e9c4 7756 	strd	r7, r7, [r4, #344]	; 0x158
90004e98:	e9c4 775b 	strd	r7, r7, [r4, #364]	; 0x16c
90004e9c:	e9c4 775d 	strd	r7, r7, [r4, #372]	; 0x174
          nextSibling(0),
90004ea0:	e9c4 775f 	strd	r7, r7, [r4, #380]	; 0x17c
          cachedAbsX(0),
90004ea4:	e9c4 7761 	strd	r7, r7, [r4, #388]	; 0x184
90004ea8:	f00c fb38 	bl	9001151c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90004eac:	4658      	mov	r0, fp
90004eae:	f00c f87f 	bl	90010fb0 <_ZN8touchgfx13AbstractShapeC1Ev>
90004eb2:	4a28      	ldr	r2, [pc, #160]	; (90004f54 <_ZN24screen_asteroidsViewBaseC1Ev+0x210>)
90004eb4:	6833      	ldr	r3, [r6, #0]
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
90004eb6:	f504 7116 	add.w	r1, r4, #600	; 0x258
90004eba:	f8c4 21dc 	str.w	r2, [r4, #476]	; 0x1dc
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
        : AbstractPainter()
90004ebe:	4a26      	ldr	r2, [pc, #152]	; (90004f58 <_ZN24screen_asteroidsViewBaseC1Ev+0x214>)
        : widgetWidth(0)
90004ec0:	f8a4 725c 	strh.w	r7, [r4, #604]	; 0x25c
90004ec4:	f8c4 2258 	str.w	r2, [r4, #600]	; 0x258
90004ec8:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
90004ecc:	9109      	str	r1, [sp, #36]	; 0x24
            : v(0)
90004ece:	e9c4 778a 	strd	r7, r7, [r4, #552]	; 0x228
90004ed2:	e9c4 778c 	strd	r7, r7, [r4, #560]	; 0x230
90004ed6:	e9c4 778e 	strd	r7, r7, [r4, #568]	; 0x238
90004eda:	e9c4 7790 	strd	r7, r7, [r4, #576]	; 0x240
90004ede:	e9c4 7792 	strd	r7, r7, [r4, #584]	; 0x248
90004ee2:	e9c4 7794 	strd	r7, r7, [r4, #592]	; 0x250
90004ee6:	f104 0798 	add.w	r7, r4, #152	; 0x98
90004eea:	2a00      	cmp	r2, #0
90004eec:	d03e      	beq.n	90004f6c <_ZN24screen_asteroidsViewBaseC1Ev+0x228>
90004eee:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
90004ef0:	2800      	cmp	r0, #0
90004ef2:	f000 835f 	beq.w	900055b4 <_ZN24screen_asteroidsViewBaseC1Ev+0x870>
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
90004ef6:	6803      	ldr	r3, [r0, #0]
90004ef8:	4a18      	ldr	r2, [pc, #96]	; (90004f5c <_ZN24screen_asteroidsViewBaseC1Ev+0x218>)
90004efa:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
90004efc:	4291      	cmp	r1, r2
90004efe:	d042      	beq.n	90004f86 <_ZN24screen_asteroidsViewBaseC1Ev+0x242>
90004f00:	9202      	str	r2, [sp, #8]
90004f02:	4788      	blx	r1
        return auxiliaryLCD;
90004f04:	6833      	ldr	r3, [r6, #0]
90004f06:	fab0 f680 	clz	r6, r0
90004f0a:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
90004f0c:	0976      	lsrs	r6, r6, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
90004f0e:	b148      	cbz	r0, 90004f24 <_ZN24screen_asteroidsViewBaseC1Ev+0x1e0>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
90004f10:	6803      	ldr	r3, [r0, #0]
90004f12:	9a02      	ldr	r2, [sp, #8]
90004f14:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90004f16:	4293      	cmp	r3, r2
90004f18:	d035      	beq.n	90004f86 <_ZN24screen_asteroidsViewBaseC1Ev+0x242>
90004f1a:	4798      	blx	r3
90004f1c:	2800      	cmp	r0, #0
90004f1e:	bf08      	it	eq
90004f20:	f046 0601 	orreq.w	r6, r6, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
90004f24:	bb7e      	cbnz	r6, 90004f86 <_ZN24screen_asteroidsViewBaseC1Ev+0x242>
90004f26:	4b0e      	ldr	r3, [pc, #56]	; (90004f60 <_ZN24screen_asteroidsViewBaseC1Ev+0x21c>)
90004f28:	212c      	movs	r1, #44	; 0x2c
90004f2a:	4a0e      	ldr	r2, [pc, #56]	; (90004f64 <_ZN24screen_asteroidsViewBaseC1Ev+0x220>)
90004f2c:	480e      	ldr	r0, [pc, #56]	; (90004f68 <_ZN24screen_asteroidsViewBaseC1Ev+0x224>)
90004f2e:	f021 f80f 	bl	90025f50 <__assert_func>
90004f32:	bf00      	nop
90004f34:	900298f4 	.word	0x900298f4
90004f38:	9002a23c 	.word	0x9002a23c
90004f3c:	90029e0c 	.word	0x90029e0c
90004f40:	90029794 	.word	0x90029794
90004f44:	9002a2a4 	.word	0x9002a2a4
90004f48:	9002a1ac 	.word	0x9002a1ac
90004f4c:	90028bf0 	.word	0x90028bf0
90004f50:	2402357c 	.word	0x2402357c
90004f54:	90029830 	.word	0x90029830
90004f58:	9002897c 	.word	0x9002897c
90004f5c:	900024a1 	.word	0x900024a1
90004f60:	900295c0 	.word	0x900295c0
90004f64:	90029620 	.word	0x90029620
90004f68:	9002965c 	.word	0x9002965c
        return instance->lcdRef;
90004f6c:	6898      	ldr	r0, [r3, #8]
90004f6e:	4adb      	ldr	r2, [pc, #876]	; (900052dc <_ZN24screen_asteroidsViewBaseC1Ev+0x598>)
        bool compat = HAL::lcd().framebufferFormat() == format;
90004f70:	6801      	ldr	r1, [r0, #0]
90004f72:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
90004f74:	4291      	cmp	r1, r2
90004f76:	d1c3      	bne.n	90004f00 <_ZN24screen_asteroidsViewBaseC1Ev+0x1bc>
        return auxiliaryLCD;
90004f78:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
        if (HAL::getInstance()->getAuxiliaryLCD())
90004f7a:	b120      	cbz	r0, 90004f86 <_ZN24screen_asteroidsViewBaseC1Ev+0x242>
        bool compat = HAL::lcd().framebufferFormat() == format;
90004f7c:	6803      	ldr	r3, [r0, #0]
90004f7e:	2601      	movs	r6, #1
90004f80:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90004f82:	4293      	cmp	r3, r2
90004f84:	d1c9      	bne.n	90004f1a <_ZN24screen_asteroidsViewBaseC1Ev+0x1d6>
90004f86:	4bd6      	ldr	r3, [pc, #856]	; (900052e0 <_ZN24screen_asteroidsViewBaseC1Ev+0x59c>)
90004f88:	f504 7239 	add.w	r2, r4, #740	; 0x2e4
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
90004f8c:	20ff      	movs	r0, #255	; 0xff
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
90004f8e:	2600      	movs	r6, #0
90004f90:	f8c4 3294 	str.w	r3, [r4, #660]	; 0x294
90004f94:	ee08 2a90 	vmov	s17, r2
90004f98:	4bd2      	ldr	r3, [pc, #840]	; (900052e4 <_ZN24screen_asteroidsViewBaseC1Ev+0x5a0>)
90004f9a:	f64f 79ff 	movw	r9, #65535	; 0xffff
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90004f9e:	f04f 31ff 	mov.w	r1, #4294967295
90004fa2:	f8c4 02a2 	str.w	r0, [r4, #674]	; 0x2a2
90004fa6:	f8c4 32b8 	str.w	r3, [r4, #696]	; 0x2b8
90004faa:	4bcf      	ldr	r3, [pc, #828]	; (900052e8 <_ZN24screen_asteroidsViewBaseC1Ev+0x5a4>)
        : TextAreaWithWildcardBase(), wc1(0)
90004fac:	48cf      	ldr	r0, [pc, #828]	; (900052ec <_ZN24screen_asteroidsViewBaseC1Ev+0x5a8>)
90004fae:	f8c4 3258 	str.w	r3, [r4, #600]	; 0x258
90004fb2:	3324      	adds	r3, #36	; 0x24
90004fb4:	f8a4 9298 	strh.w	r9, [r4, #664]	; 0x298
90004fb8:	f8c4 3260 	str.w	r3, [r4, #608]	; 0x260
90004fbc:	4613      	mov	r3, r2
          touchable(false),
90004fbe:	f44f 7280 	mov.w	r2, #256	; 0x100
90004fc2:	f8c4 12ac 	str.w	r1, [r4, #684]	; 0x2ac
90004fc6:	f8c4 026c 	str.w	r0, [r4, #620]	; 0x26c
90004fca:	4618      	mov	r0, r3
90004fcc:	f8a4 2290 	strh.w	r2, [r4, #656]	; 0x290
90004fd0:	f8a4 22dc 	strh.w	r2, [r4, #732]	; 0x2dc
90004fd4:	f504 7244 	add.w	r2, r4, #784	; 0x310
90004fd8:	f8c4 6264 	str.w	r6, [r4, #612]	; 0x264
        : color(col)
90004fdc:	f8c4 629c 	str.w	r6, [r4, #668]	; 0x29c
90004fe0:	f8a4 62a0 	strh.w	r6, [r4, #672]	; 0x2a0
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90004fe4:	f8c4 62a8 	str.w	r6, [r4, #680]	; 0x2a8
        : x(0), y(0), width(0), height(0)
90004fe8:	e9c4 669c 	strd	r6, r6, [r4, #624]	; 0x270
90004fec:	e9c4 669e 	strd	r6, r6, [r4, #632]	; 0x278
          nextSibling(0),
90004ff0:	e9c4 66a0 	strd	r6, r6, [r4, #640]	; 0x280
          cachedAbsX(0),
90004ff4:	e9c4 66a2 	strd	r6, r6, [r4, #648]	; 0x288
90004ff8:	e9c4 66ac 	strd	r6, r6, [r4, #688]	; 0x2b0
90004ffc:	e9c4 66af 	strd	r6, r6, [r4, #700]	; 0x2bc
90005000:	e9c4 66b1 	strd	r6, r6, [r4, #708]	; 0x2c4
          nextSibling(0),
90005004:	e9c4 66b3 	strd	r6, r6, [r4, #716]	; 0x2cc
          cachedAbsX(0),
90005008:	e9c4 66b5 	strd	r6, r6, [r4, #724]	; 0x2d4
9000500c:	f8c4 62e0 	str.w	r6, [r4, #736]	; 0x2e0
90005010:	f8ad 1048 	strh.w	r1, [sp, #72]	; 0x48
90005014:	a912      	add	r1, sp, #72	; 0x48
90005016:	9202      	str	r2, [sp, #8]
90005018:	f00c fa80 	bl	9001151c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
9000501c:	f504 714f 	add.w	r1, r4, #828	; 0x33c
90005020:	9802      	ldr	r0, [sp, #8]
90005022:	f8ad 9048 	strh.w	r9, [sp, #72]	; 0x48
90005026:	9103      	str	r1, [sp, #12]
90005028:	a912      	add	r1, sp, #72	; 0x48
9000502a:	f00c fa77 	bl	9001151c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
9000502e:	f504 7265 	add.w	r2, r4, #916	; 0x394
90005032:	a912      	add	r1, sp, #72	; 0x48
90005034:	9803      	ldr	r0, [sp, #12]
90005036:	f8ad 9048 	strh.w	r9, [sp, #72]	; 0x48
9000503a:	9204      	str	r2, [sp, #16]
9000503c:	f00c fa6e 	bl	9001151c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90005040:	4ba8      	ldr	r3, [pc, #672]	; (900052e4 <_ZN24screen_asteroidsViewBaseC1Ev+0x5a0>)
          touchable(false),
90005042:	f44f 7280 	mov.w	r2, #256	; 0x100
90005046:	9804      	ldr	r0, [sp, #16]
90005048:	f8a4 238c 	strh.w	r2, [r4, #908]	; 0x38c
          cachedAbsX(0),
9000504c:	f8c4 6388 	str.w	r6, [r4, #904]	; 0x388
90005050:	f8c4 6390 	str.w	r6, [r4, #912]	; 0x390
90005054:	e9c4 36da 	strd	r3, r6, [r4, #872]	; 0x368
90005058:	f504 7374 	add.w	r3, r4, #976	; 0x3d0
9000505c:	e9c4 66dc 	strd	r6, r6, [r4, #880]	; 0x370
          parent(0),
90005060:	e9c4 66de 	strd	r6, r6, [r4, #888]	; 0x378
          nextDrawChainElement(0),
90005064:	e9c4 66e0 	strd	r6, r6, [r4, #896]	; 0x380
90005068:	9305      	str	r3, [sp, #20]
9000506a:	f00d f9bd 	bl	900123e8 <_ZN8touchgfx14ButtonWithIconC1Ev>
9000506e:	f204 420c 	addw	r2, r4, #1036	; 0x40c
90005072:	9805      	ldr	r0, [sp, #20]
90005074:	9206      	str	r2, [sp, #24]
90005076:	f00d f9b7 	bl	900123e8 <_ZN8touchgfx14ButtonWithIconC1Ev>
9000507a:	f504 6389 	add.w	r3, r4, #1096	; 0x448
9000507e:	9806      	ldr	r0, [sp, #24]
90005080:	9307      	str	r3, [sp, #28]
90005082:	f00d f9b1 	bl	900123e8 <_ZN8touchgfx14ButtonWithIconC1Ev>
90005086:	f204 4284 	addw	r2, r4, #1156	; 0x484
9000508a:	9807      	ldr	r0, [sp, #28]
9000508c:	9208      	str	r2, [sp, #32]
9000508e:	f00d f9ab 	bl	900123e8 <_ZN8touchgfx14ButtonWithIconC1Ev>
90005092:	9808      	ldr	r0, [sp, #32]
90005094:	f00d f9a8 	bl	900123e8 <_ZN8touchgfx14ButtonWithIconC1Ev>
          touchable(false),
90005098:	f44f 7280 	mov.w	r2, #256	; 0x100
        : pobject(pObject), pmemfun(pmemfun_1)
9000509c:	4994      	ldr	r1, [pc, #592]	; (900052f0 <_ZN24screen_asteroidsViewBaseC1Ev+0x5ac>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
9000509e:	f504 609f 	add.w	r0, r4, #1272	; 0x4f8
900050a2:	f8a4 24e4 	strh.w	r2, [r4, #1252]	; 0x4e4
900050a6:	f504 5200 	add.w	r2, r4, #8192	; 0x2000
900050aa:	f8c4 54c0 	str.w	r5, [r4, #1216]	; 0x4c0
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
900050ae:	1d25      	adds	r5, r4, #4
900050b0:	f884 94e6 	strb.w	r9, [r4, #1254]	; 0x4e6
900050b4:	f8c4 64c4 	str.w	r6, [r4, #1220]	; 0x4c4
900050b8:	f8c4 64c8 	str.w	r6, [r4, #1224]	; 0x4c8
900050bc:	f8c4 64cc 	str.w	r6, [r4, #1228]	; 0x4cc
900050c0:	f8c4 64d0 	str.w	r6, [r4, #1232]	; 0x4d0
          parent(0),
900050c4:	f8c4 64d4 	str.w	r6, [r4, #1236]	; 0x4d4
          nextSibling(0),
900050c8:	f8c4 64d8 	str.w	r6, [r4, #1240]	; 0x4d8
          nextDrawChainElement(0),
900050cc:	f8c4 64dc 	str.w	r6, [r4, #1244]	; 0x4dc
          cachedAbsX(0),
900050d0:	f8c4 64e0 	str.w	r6, [r4, #1248]	; 0x4e0
        : color(col)
900050d4:	f8c4 64e8 	str.w	r6, [r4, #1256]	; 0x4e8
900050d8:	f8c2 1118 	str.w	r1, [r2, #280]	; 0x118
900050dc:	4985      	ldr	r1, [pc, #532]	; (900052f4 <_ZN24screen_asteroidsViewBaseC1Ev+0x5b0>)
900050de:	f8c2 411c 	str.w	r4, [r2, #284]	; 0x11c
900050e2:	f8c2 1120 	str.w	r1, [r2, #288]	; 0x120
900050e6:	4984      	ldr	r1, [pc, #528]	; (900052f8 <_ZN24screen_asteroidsViewBaseC1Ev+0x5b4>)
900050e8:	f8c2 6124 	str.w	r6, [r2, #292]	; 0x124
900050ec:	f8c2 1128 	str.w	r1, [r2, #296]	; 0x128
900050f0:	4982      	ldr	r1, [pc, #520]	; (900052fc <_ZN24screen_asteroidsViewBaseC1Ev+0x5b8>)
900050f2:	f8c2 412c 	str.w	r4, [r2, #300]	; 0x12c
900050f6:	f8c2 1130 	str.w	r1, [r2, #304]	; 0x130
900050fa:	f44f 51e1 	mov.w	r1, #7200	; 0x1c20
900050fe:	f8c2 6134 	str.w	r6, [r2, #308]	; 0x134
90005102:	f00e f889 	bl	90013218 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
        rect.x = x;
90005106:	f8df 921c 	ldr.w	r9, [pc, #540]	; 90005324 <_ZN24screen_asteroidsViewBaseC1Ev+0x5e0>
        color = newColor;
9000510a:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
9000510e:	f104 0140 	add.w	r1, r4, #64	; 0x40
90005112:	4628      	mov	r0, r5
90005114:	f8c4 9048 	str.w	r9, [r4, #72]	; 0x48
90005118:	66a2      	str	r2, [r4, #104]	; 0x68
9000511a:	6466      	str	r6, [r4, #68]	; 0x44
9000511c:	f00a fcf8 	bl	9000fb10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005120:	4a77      	ldr	r2, [pc, #476]	; (90005300 <_ZN24screen_asteroidsViewBaseC1Ev+0x5bc>)
90005122:	f104 016c 	add.w	r1, r4, #108	; 0x6c
90005126:	4628      	mov	r0, r5
90005128:	f8c4 2094 	str.w	r2, [r4, #148]	; 0x94
9000512c:	e9c4 691c 	strd	r6, r9, [r4, #112]	; 0x70
90005130:	f00a fcee 	bl	9000fb10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        borderUp = borderColorReleased;
90005134:	4973      	ldr	r1, [pc, #460]	; (90005304 <_ZN24screen_asteroidsViewBaseC1Ev+0x5c0>)
90005136:	f04f 1332 	mov.w	r3, #3276850	; 0x320032
        down = colorPressed;
9000513a:	4a73      	ldr	r2, [pc, #460]	; (90005308 <_ZN24screen_asteroidsViewBaseC1Ev+0x5c4>)
        borderUp = borderColorReleased;
9000513c:	f8c4 1134 	str.w	r1, [r4, #308]	; 0x134
        borderDown = borderColorPressed;
90005140:	f101 1133 	add.w	r1, r1, #3342387	; 0x330033
90005144:	f8c4 30a0 	str.w	r3, [r4, #160]	; 0xa0
    buttonCallback(this, &screen_asteroidsViewBase::buttonCallbackHandler)
90005148:	f504 705a 	add.w	r0, r4, #872	; 0x368
9000514c:	f501 514c 	add.w	r1, r1, #13056	; 0x3300
90005150:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
     *
     * @see getBorderSize
     */
    void setBorderSize(uint16_t size)
    {
        borderSize = size;
90005154:	2305      	movs	r3, #5
90005156:	f504 792e 	add.w	r9, r4, #696	; 0x2b8
9000515a:	f8c4 1138 	str.w	r1, [r4, #312]	; 0x138
9000515e:	ee09 0a10 	vmov	s18, r0
90005162:	f8a4 3128 	strh.w	r3, [r4, #296]	; 0x128
        borderBox.setColor(T::getPressed() ? down : up);
90005166:	f894 10f0 	ldrb.w	r1, [r4, #240]	; 0xf0
        down = colorPressed;
9000516a:	4b68      	ldr	r3, [pc, #416]	; (9000530c <_ZN24screen_asteroidsViewBaseC1Ev+0x5c8>)
9000516c:	f8c4 609c 	str.w	r6, [r4, #156]	; 0x9c
90005170:	f8c4 60fc 	str.w	r6, [r4, #252]	; 0xfc
90005174:	e9c4 324b 	strd	r3, r2, [r4, #300]	; 0x12c
        borderBox.setColor(T::getPressed() ? down : up);
90005178:	2900      	cmp	r1, #0
9000517a:	f000 8223 	beq.w	900055c4 <_ZN24screen_asteroidsViewBaseC1Ev+0x880>
9000517e:	4613      	mov	r3, r2
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90005180:	f504 729c 	add.w	r2, r4, #312	; 0x138
90005184:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
90005188:	2600      	movs	r6, #0
9000518a:	6813      	ldr	r3, [r2, #0]
    btn_back.add(_btn_back);
9000518c:	4638      	mov	r0, r7
9000518e:	ee18 1a10 	vmov	r1, s16
        borderColor = colorBorder;
90005192:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
    _btn_back.setAction(flexButtonCallback);
90005196:	f242 1318 	movw	r3, #8472	; 0x2118
9000519a:	4423      	add	r3, r4
        action = &callback;
9000519c:	f8c4 30f4 	str.w	r3, [r4, #244]	; 0xf4
900051a0:	f04f 1332 	mov.w	r3, #3276850	; 0x320032
900051a4:	e9c4 6332 	strd	r6, r3, [r4, #200]	; 0xc8
    btn_back.add(_btn_back);
900051a8:	f00a fcb2 	bl	9000fb10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900051ac:	f04f 1332 	mov.w	r3, #3276850	; 0x320032
    btn_back.add(bg_black);
900051b0:	4638      	mov	r0, r7
900051b2:	f504 719e 	add.w	r1, r4, #316	; 0x13c
900051b6:	e9c4 6350 	strd	r6, r3, [r4, #320]	; 0x140
900051ba:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
900051be:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
900051c2:	f00a fca5 	bl	9000fb10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900051c6:	4b52      	ldr	r3, [pc, #328]	; (90005310 <_ZN24screen_asteroidsViewBaseC1Ev+0x5cc>)
        boundingArea = calculateBoundingArea();
900051c8:	4641      	mov	r1, r8
900051ca:	a80a      	add	r0, sp, #40	; 0x28
900051cc:	f8c4 316c 	str.w	r3, [r4, #364]	; 0x16c
        color = newColor;
900051d0:	f04f 33ff 	mov.w	r3, #4294967295
        linespace = space;
900051d4:	f8a4 619c 	strh.w	r6, [r4, #412]	; 0x19c
        color = newColor;
900051d8:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
        boundingArea = calculateBoundingArea();
900051dc:	f00c fc48 	bl	90011a70 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
900051e0:	4b3f      	ldr	r3, [pc, #252]	; (900052e0 <_ZN24screen_asteroidsViewBaseC1Ev+0x59c>)
900051e2:	f108 0c3c 	add.w	ip, r8, #60	; 0x3c
900051e6:	9312      	str	r3, [sp, #72]	; 0x48
900051e8:	2302      	movs	r3, #2
900051ea:	f8ad 304c 	strh.w	r3, [sp, #76]	; 0x4c
900051ee:	ab0a      	add	r3, sp, #40	; 0x28
900051f0:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
900051f4:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
    lbl_back.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UBH9));
900051f8:	a912      	add	r1, sp, #72	; 0x48
900051fa:	4640      	mov	r0, r8
900051fc:	f00c fee0 	bl	90011fc0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    btn_back.add(lbl_back);
90005200:	4638      	mov	r0, r7
90005202:	4641      	mov	r1, r8
90005204:	f00a fc84 	bl	9000fb10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005208:	4639      	mov	r1, r7
9000520a:	4628      	mov	r0, r5
9000520c:	4f41      	ldr	r7, [pc, #260]	; (90005314 <_ZN24screen_asteroidsViewBaseC1Ev+0x5d0>)
9000520e:	f00a fc7f 	bl	9000fb10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005212:	2302      	movs	r3, #2
    icon_rock.setBitmap(touchgfx::Bitmap(BITMAP_ASTEROIDS_ROCK_ID));
90005214:	a912      	add	r1, sp, #72	; 0x48
90005216:	4650      	mov	r0, sl
90005218:	f8ad 3048 	strh.w	r3, [sp, #72]	; 0x48
9000521c:	f00d f90b 	bl	90012436 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90005220:	4b3d      	ldr	r3, [pc, #244]	; (90005318 <_ZN24screen_asteroidsViewBaseC1Ev+0x5d4>)
    icon_rock.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90005222:	4631      	mov	r1, r6
90005224:	4650      	mov	r0, sl
90005226:	e9c4 736d 	strd	r7, r3, [r4, #436]	; 0x1b4
9000522a:	f00c f932 	bl	90011492 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
9000522e:	4651      	mov	r1, sl
90005230:	4628      	mov	r0, r5
        visible = vis;
90005232:	f884 61d5 	strb.w	r6, [r4, #469]	; 0x1d5
90005236:	f00a fc6b 	bl	9000fb10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        rect.x = x;
9000523a:	f04f 131e 	mov.w	r3, #1966110	; 0x1e001e
9000523e:	f8df c0e8 	ldr.w	ip, [pc, #232]	; 90005328 <_ZN24screen_asteroidsViewBaseC1Ev+0x5e4>
90005242:	e9c4 c378 	strd	ip, r3, [r4, #480]	; 0x1e0
    void setOrigin(T x, T y)
    {
        CWRUtil::Q5 dxNew = CWRUtil::toQ5<T>(x);
        CWRUtil::Q5 dyNew = CWRUtil::toQ5<T>(y);

        if (dx == dxNew && dy == dyNew)
90005246:	f8d4 320c 	ldr.w	r3, [r4, #524]	; 0x20c
9000524a:	b913      	cbnz	r3, 90005252 <_ZN24screen_asteroidsViewBaseC1Ev+0x50e>
9000524c:	f8d4 3210 	ldr.w	r3, [r4, #528]	; 0x210
90005250:	b12b      	cbz	r3, 9000525e <_ZN24screen_asteroidsViewBaseC1Ev+0x51a>
        {
            return;
        }

        dx = dxNew;
90005252:	2300      	movs	r3, #0
        dy = dyNew;

        updateAbstractShapeCache();
90005254:	4658      	mov	r0, fp
        dy = dyNew;
90005256:	e9c4 3383 	strd	r3, r3, [r4, #524]	; 0x20c
        updateAbstractShapeCache();
9000525a:	f00b fec1 	bl	90010fe0 <_ZN8touchgfx13AbstractShape24updateAbstractShapeCacheEv>
     * @note The area containing the AbstractShape is not invalidated.
     */
    template <typename T>
    void setScale(T newXScale, T newYScale)
    {
        xScale = CWRUtil::toQ10<T>(newXScale);
9000525e:	f44f 6380 	mov.w	r3, #1024	; 0x400
        yScale = CWRUtil::toQ10<T>(newYScale);
        updateAbstractShapeCache();
90005262:	4658      	mov	r0, fp
        yScale = CWRUtil::toQ10<T>(newYScale);
90005264:	e9c4 3386 	strd	r3, r3, [r4, #536]	; 0x218
        updateAbstractShapeCache();
90005268:	f00b feba 	bl	90010fe0 <_ZN8touchgfx13AbstractShape24updateAbstractShapeCacheEv>
        if (shapeAngle != angleQ5)
9000526c:	f8d4 3214 	ldr.w	r3, [r4, #532]	; 0x214
90005270:	b12b      	cbz	r3, 9000527e <_ZN24screen_asteroidsViewBaseC1Ev+0x53a>
            shapeAngle = angleQ5;
90005272:	2300      	movs	r3, #0
            updateAbstractShapeCache();
90005274:	4658      	mov	r0, fp
            shapeAngle = angleQ5;
90005276:	f8c4 3214 	str.w	r3, [r4, #532]	; 0x214
            updateAbstractShapeCache();
9000527a:	f00b feb1 	bl	90010fe0 <_ZN8touchgfx13AbstractShape24updateAbstractShapeCacheEv>
        canvasPainter = &painter;
9000527e:	9b09      	ldr	r3, [sp, #36]	; 0x24
90005280:	f04f 38ff 	mov.w	r8, #4294967295
            xCorner[i] = x, yCorner[i] = y;
90005284:	2700      	movs	r7, #0
        updateAbstractShapeCache();
90005286:	4658      	mov	r0, fp
90005288:	f8c4 3204 	str.w	r3, [r4, #516]	; 0x204
9000528c:	f44f 7370 	mov.w	r3, #960	; 0x3c0
90005290:	f8c4 8264 	str.w	r8, [r4, #612]	; 0x264
    lbl_score.setXY(338, 3);
90005294:	f504 761b 	add.w	r6, r4, #620	; 0x26c
90005298:	f8c4 322c 	str.w	r3, [r4, #556]	; 0x22c
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
9000529c:	f8a4 8268 	strh.w	r8, [r4, #616]	; 0x268
900052a0:	e9c4 338e 	strd	r3, r3, [r4, #568]	; 0x238
900052a4:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
900052a8:	e9c4 778c 	strd	r7, r7, [r4, #560]	; 0x230
900052ac:	f8c4 3228 	str.w	r3, [r4, #552]	; 0x228
900052b0:	f00b fe96 	bl	90010fe0 <_ZN8touchgfx13AbstractShape24updateAbstractShapeCacheEv>
900052b4:	4659      	mov	r1, fp
900052b6:	4628      	mov	r0, r5
900052b8:	f00a fc2a 	bl	9000fb10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900052bc:	4a17      	ldr	r2, [pc, #92]	; (9000531c <_ZN24screen_asteroidsViewBaseC1Ev+0x5d8>)
        setX(x);
900052be:	f8d4 326c 	ldr.w	r3, [r4, #620]	; 0x26c
        color = newColor;
900052c2:	f8c4 829c 	str.w	r8, [r4, #668]	; 0x29c
        boundingArea = calculateBoundingArea();
900052c6:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        rect.x = x;
900052ca:	f8c4 2270 	str.w	r2, [r4, #624]	; 0x270
900052ce:	4a14      	ldr	r2, [pc, #80]	; (90005320 <_ZN24screen_asteroidsViewBaseC1Ev+0x5dc>)
        linespace = space;
900052d0:	f8a4 72a0 	strh.w	r7, [r4, #672]	; 0x2a0
900052d4:	4293      	cmp	r3, r2
900052d6:	f040 8178 	bne.w	900055ca <_ZN24screen_asteroidsViewBaseC1Ev+0x886>
900052da:	e027      	b.n	9000532c <_ZN24screen_asteroidsViewBaseC1Ev+0x5e8>
900052dc:	900024a1 	.word	0x900024a1
900052e0:	90028bf0 	.word	0x90028bf0
900052e4:	90029e0c 	.word	0x90029e0c
900052e8:	90029ecc 	.word	0x90029ecc
900052ec:	90029704 	.word	0x90029704
900052f0:	900298c4 	.word	0x900298c4
900052f4:	90004a71 	.word	0x90004a71
900052f8:	900298dc 	.word	0x900298dc
900052fc:	90004a9d 	.word	0x90004a9d
90005300:	ff333333 	.word	0xff333333
90005304:	ff003366 	.word	0xff003366
90005308:	ff0099cc 	.word	0xff0099cc
9000530c:	ff006699 	.word	0xff006699
90005310:	000f000d 	.word	0x000f000d
90005314:	004f011d 	.word	0x004f011d
90005318:	001d0022 	.word	0x001d0022
9000531c:	00030152 	.word	0x00030152
90005320:	900047b9 	.word	0x900047b9
90005324:	011001e0 	.word	0x011001e0
90005328:	00e300e1 	.word	0x00e300e1
        boundingArea = calculateBoundingArea();
9000532c:	f8c4 72b0 	str.w	r7, [r4, #688]	; 0x2b0
90005330:	e9c4 78aa 	strd	r7, r8, [r4, #680]	; 0x2a8
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90005334:	4bb0      	ldr	r3, [pc, #704]	; (900055f8 <_ZN24screen_asteroidsViewBaseC1Ev+0x8b4>)
    Unicode::snprintf(lbl_scoreBuffer, LBL_SCORE_SIZE, "%s", touchgfx::TypedText(T_SCORE_VALUE).getText());
90005336:	f204 47ec 	addw	r7, r4, #1260	; 0x4ec
9000533a:	681b      	ldr	r3, [r3, #0]
9000533c:	2b00      	cmp	r3, #0
9000533e:	f000 8154 	beq.w	900055ea <_ZN24screen_asteroidsViewBaseC1Ev+0x8a6>
        return typedTextId < numberOfTypedTexts;
90005342:	4bae      	ldr	r3, [pc, #696]	; (900055fc <_ZN24screen_asteroidsViewBaseC1Ev+0x8b8>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90005344:	881b      	ldrh	r3, [r3, #0]
90005346:	2b00      	cmp	r3, #0
90005348:	f000 8149 	beq.w	900055de <_ZN24screen_asteroidsViewBaseC1Ev+0x89a>
        return texts->getText(typedTextId);
9000534c:	4bac      	ldr	r3, [pc, #688]	; (90005600 <_ZN24screen_asteroidsViewBaseC1Ev+0x8bc>)
9000534e:	2100      	movs	r1, #0
        : typedTextId(id)
90005350:	f04f 0801 	mov.w	r8, #1
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The value set is overwritten on a subsequent call to setBitmaps.
     */
    void setIconX(int16_t x)
    {
        iconX = x;
90005354:	f06f 1b06 	mvn.w	fp, #393222	; 0x60006
        return texts->getText(typedTextId);
90005358:	6818      	ldr	r0, [r3, #0]
9000535a:	f7ff f9cb 	bl	900046f4 <_ZNK8touchgfx5Texts7getTextEt>
9000535e:	4aa9      	ldr	r2, [pc, #676]	; (90005604 <_ZN24screen_asteroidsViewBaseC1Ev+0x8c0>)
90005360:	4603      	mov	r3, r0
90005362:	2106      	movs	r1, #6
90005364:	4638      	mov	r0, r7
90005366:	f012 fcfd 	bl	90017d64 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    lbl_score.resizeToCurrentText();
9000536a:	4630      	mov	r0, r6
        wc1 = value;
9000536c:	f8c4 72b4 	str.w	r7, [r4, #692]	; 0x2b4
90005370:	2703      	movs	r7, #3
90005372:	f00c fe05 	bl	90011f80 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
90005376:	4ba4      	ldr	r3, [pc, #656]	; (90005608 <_ZN24screen_asteroidsViewBaseC1Ev+0x8c4>)
    lbl_score.setTypedText(touchgfx::TypedText(T___SINGLEUSE_W1MR));
90005378:	a912      	add	r1, sp, #72	; 0x48
9000537a:	4630      	mov	r0, r6
9000537c:	9312      	str	r3, [sp, #72]	; 0x48
9000537e:	f8ad 804c 	strh.w	r8, [sp, #76]	; 0x4c
90005382:	f00c fe1d 	bl	90011fc0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
90005386:	4631      	mov	r1, r6
90005388:	4628      	mov	r0, r5
9000538a:	f00a fbc1 	bl	9000fb10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
9000538e:	4a9f      	ldr	r2, [pc, #636]	; (9000560c <_ZN24screen_asteroidsViewBaseC1Ev+0x8c8>)
90005390:	4b9f      	ldr	r3, [pc, #636]	; (90005610 <_ZN24screen_asteroidsViewBaseC1Ev+0x8cc>)
    icon_heart1.setBitmap(touchgfx::Bitmap(BITMAP_HEART_ICON_ID));
90005392:	a912      	add	r1, sp, #72	; 0x48
90005394:	ee18 0a90 	vmov	r0, s17
90005398:	f04f 1614 	mov.w	r6, #1310740	; 0x140014
9000539c:	f8ad 7048 	strh.w	r7, [sp, #72]	; 0x48
900053a0:	e9c4 23af 	strd	r2, r3, [r4, #700]	; 0x2bc
900053a4:	f00d f847 	bl	90012436 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
900053a8:	4b9a      	ldr	r3, [pc, #616]	; (90005614 <_ZN24screen_asteroidsViewBaseC1Ev+0x8d0>)
    icon_heart1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
900053aa:	ee18 0a90 	vmov	r0, s17
900053ae:	2100      	movs	r1, #0
900053b0:	e9c4 36ba 	strd	r3, r6, [r4, #744]	; 0x2e8
900053b4:	f00c f86d 	bl	90011492 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    container_health.add(icon_heart1);
900053b8:	ee18 1a90 	vmov	r1, s17
900053bc:	4648      	mov	r0, r9
900053be:	f00a fba7 	bl	9000fb10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    icon_heart2.setBitmap(touchgfx::Bitmap(BITMAP_HEART_ICON_ID));
900053c2:	f8dd a008 	ldr.w	sl, [sp, #8]
900053c6:	a912      	add	r1, sp, #72	; 0x48
900053c8:	f8ad 7048 	strh.w	r7, [sp, #72]	; 0x48
900053cc:	4650      	mov	r0, sl
900053ce:	f00d f832 	bl	90012436 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
900053d2:	4b91      	ldr	r3, [pc, #580]	; (90005618 <_ZN24screen_asteroidsViewBaseC1Ev+0x8d4>)
    icon_heart2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
900053d4:	4650      	mov	r0, sl
900053d6:	f8c4 6318 	str.w	r6, [r4, #792]	; 0x318
900053da:	f8c4 3314 	str.w	r3, [r4, #788]	; 0x314
900053de:	2100      	movs	r1, #0
900053e0:	f00c f857 	bl	90011492 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    container_health.add(icon_heart2);
900053e4:	4651      	mov	r1, sl
900053e6:	4648      	mov	r0, r9
900053e8:	f00a fb92 	bl	9000fb10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900053ec:	f8ad 7048 	strh.w	r7, [sp, #72]	; 0x48
    icon_heart3.setBitmap(touchgfx::Bitmap(BITMAP_HEART_ICON_ID));
900053f0:	9f03      	ldr	r7, [sp, #12]
900053f2:	a912      	add	r1, sp, #72	; 0x48
900053f4:	4638      	mov	r0, r7
900053f6:	f00d f81e 	bl	90012436 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
900053fa:	4b88      	ldr	r3, [pc, #544]	; (9000561c <_ZN24screen_asteroidsViewBaseC1Ev+0x8d8>)
    icon_heart3.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
900053fc:	4638      	mov	r0, r7
900053fe:	f8c4 6344 	str.w	r6, [r4, #836]	; 0x344
90005402:	f8c4 3340 	str.w	r3, [r4, #832]	; 0x340
90005406:	2100      	movs	r1, #0
90005408:	f00c f843 	bl	90011492 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    container_health.add(icon_heart3);
9000540c:	4639      	mov	r1, r7
9000540e:	4648      	mov	r0, r9
    btn_right.setAction(buttonCallback);
90005410:	f242 1628 	movw	r6, #8488	; 0x2128
    container_health.add(icon_heart3);
90005414:	f00a fb7c 	bl	9000fb10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005418:	4649      	mov	r1, r9
9000541a:	4628      	mov	r0, r5
9000541c:	2700      	movs	r7, #0
9000541e:	f00a fb77 	bl	9000fb10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btn_right.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_RIGHT_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_E8F6FB_SVG_ID));
90005422:	ab12      	add	r3, sp, #72	; 0x48
90005424:	497e      	ldr	r1, [pc, #504]	; (90005620 <_ZN24screen_asteroidsViewBaseC1Ev+0x8dc>)
    btn_right.setAction(buttonCallback);
90005426:	4426      	add	r6, r4
    btn_right.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_RIGHT_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_E8F6FB_SVG_ID));
90005428:	9300      	str	r3, [sp, #0]
9000542a:	f04f 136c 	mov.w	r3, #7077996	; 0x6c006c
9000542e:	f8dd a010 	ldr.w	sl, [sp, #16]
90005432:	f04f 0905 	mov.w	r9, #5
90005436:	aa10      	add	r2, sp, #64	; 0x40
90005438:	f8ad 8040 	strh.w	r8, [sp, #64]	; 0x40
9000543c:	4650      	mov	r0, sl
9000543e:	f8ad 9048 	strh.w	r9, [sp, #72]	; 0x48
90005442:	f8ad 703c 	strh.w	r7, [sp, #60]	; 0x3c
90005446:	e9c4 13db 	strd	r1, r3, [r4, #876]	; 0x36c
9000544a:	4b76      	ldr	r3, [pc, #472]	; (90005624 <_ZN24screen_asteroidsViewBaseC1Ev+0x8e0>)
9000544c:	a90f      	add	r1, sp, #60	; 0x3c
9000544e:	f8c4 3398 	str.w	r3, [r4, #920]	; 0x398
90005452:	2308      	movs	r3, #8
90005454:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
90005458:	ab11      	add	r3, sp, #68	; 0x44
9000545a:	f00c ff1f 	bl	9001229c <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    container_controls.add(btn_right);
9000545e:	4651      	mov	r1, sl
90005460:	ee19 0a10 	vmov	r0, s18
90005464:	f8c4 b3cc 	str.w	fp, [r4, #972]	; 0x3cc
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
90005468:	f8c4 63bc 	str.w	r6, [r4, #956]	; 0x3bc
9000546c:	f06f 1a05 	mvn.w	sl, #327685	; 0x50005
90005470:	f00a fb4e 	bl	9000fb10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btn_down.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_DOWN_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_E8F6FB_SVG_ID));
90005474:	ab12      	add	r3, sp, #72	; 0x48
90005476:	eddd 8a05 	vldr	s17, [sp, #20]
9000547a:	aa10      	add	r2, sp, #64	; 0x40
9000547c:	9300      	str	r3, [sp, #0]
9000547e:	a90f      	add	r1, sp, #60	; 0x3c
90005480:	4b69      	ldr	r3, [pc, #420]	; (90005628 <_ZN24screen_asteroidsViewBaseC1Ev+0x8e4>)
90005482:	ee18 0a90 	vmov	r0, s17
90005486:	f8ad 8040 	strh.w	r8, [sp, #64]	; 0x40
9000548a:	f8c4 33d4 	str.w	r3, [r4, #980]	; 0x3d4
9000548e:	2306      	movs	r3, #6
90005490:	f8ad 9048 	strh.w	r9, [sp, #72]	; 0x48
90005494:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
90005498:	ab11      	add	r3, sp, #68	; 0x44
9000549a:	f8ad 703c 	strh.w	r7, [sp, #60]	; 0x3c
9000549e:	f00c fefd 	bl	9001229c <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    container_controls.add(btn_down);
900054a2:	ee18 1a90 	vmov	r1, s17
900054a6:	ee19 0a10 	vmov	r0, s18
900054aa:	f8c4 a408 	str.w	sl, [r4, #1032]	; 0x408
900054ae:	f8c4 63f8 	str.w	r6, [r4, #1016]	; 0x3f8
900054b2:	f00a fb2d 	bl	9000fb10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btn_left.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_LEFT_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_E8F6FB_SVG_ID));
900054b6:	ab12      	add	r3, sp, #72	; 0x48
900054b8:	eddd 8a06 	vldr	s17, [sp, #24]
900054bc:	aa10      	add	r2, sp, #64	; 0x40
900054be:	9300      	str	r3, [sp, #0]
900054c0:	f44f 1310 	mov.w	r3, #2359296	; 0x240000
900054c4:	a90f      	add	r1, sp, #60	; 0x3c
900054c6:	ee18 0a90 	vmov	r0, s17
900054ca:	f8c4 3410 	str.w	r3, [r4, #1040]	; 0x410
900054ce:	2307      	movs	r3, #7
900054d0:	f8ad 8040 	strh.w	r8, [sp, #64]	; 0x40
900054d4:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
900054d8:	ab11      	add	r3, sp, #68	; 0x44
900054da:	f8ad 9048 	strh.w	r9, [sp, #72]	; 0x48
900054de:	f8ad 703c 	strh.w	r7, [sp, #60]	; 0x3c
900054e2:	f00c fedb 	bl	9001229c <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    container_controls.add(btn_left);
900054e6:	ee18 1a90 	vmov	r1, s17
900054ea:	ee19 0a10 	vmov	r0, s18
900054ee:	f8c4 b444 	str.w	fp, [r4, #1092]	; 0x444
900054f2:	f8c4 6434 	str.w	r6, [r4, #1076]	; 0x434
900054f6:	f00a fb0b 	bl	9000fb10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btn_up.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_UP_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_E8F6FB_SVG_ID));
900054fa:	ab12      	add	r3, sp, #72	; 0x48
900054fc:	f8ad 9048 	strh.w	r9, [sp, #72]	; 0x48
90005500:	aa10      	add	r2, sp, #64	; 0x40
90005502:	9300      	str	r3, [sp, #0]
90005504:	2324      	movs	r3, #36	; 0x24
90005506:	f8dd 901c 	ldr.w	r9, [sp, #28]
9000550a:	a90f      	add	r1, sp, #60	; 0x3c
9000550c:	f8c4 344c 	str.w	r3, [r4, #1100]	; 0x44c
90005510:	2309      	movs	r3, #9
90005512:	4648      	mov	r0, r9
90005514:	f8ad 8040 	strh.w	r8, [sp, #64]	; 0x40
90005518:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
9000551c:	ab11      	add	r3, sp, #68	; 0x44
9000551e:	f8ad 703c 	strh.w	r7, [sp, #60]	; 0x3c
90005522:	f00c febb 	bl	9001229c <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    container_controls.add(btn_up);
90005526:	4649      	mov	r1, r9
90005528:	ee19 0a10 	vmov	r0, s18
9000552c:	f8c4 a480 	str.w	sl, [r4, #1152]	; 0x480
90005530:	f8c4 6470 	str.w	r6, [r4, #1136]	; 0x470
90005534:	f00a faec 	bl	9000fb10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005538:	ee19 1a10 	vmov	r1, s18
9000553c:	4628      	mov	r0, r5
9000553e:	f00a fae7 	bl	9000fb10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btn_shoot.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_MAPS_LOCAL_FIRE_DEPARTMENT_30_30_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_30_30_E8F6FB_SVG_ID));
90005542:	ab12      	add	r3, sp, #72	; 0x48
90005544:	4839      	ldr	r0, [pc, #228]	; (9000562c <_ZN24screen_asteroidsViewBaseC1Ev+0x8e8>)
90005546:	aa10      	add	r2, sp, #64	; 0x40
90005548:	9300      	str	r3, [sp, #0]
9000554a:	a90f      	add	r1, sp, #60	; 0x3c
9000554c:	f8c4 0488 	str.w	r0, [r4, #1160]	; 0x488
90005550:	200a      	movs	r0, #10
90005552:	f8ad 8040 	strh.w	r8, [sp, #64]	; 0x40
90005556:	ab11      	add	r3, sp, #68	; 0x44
90005558:	f8dd 8020 	ldr.w	r8, [sp, #32]
9000555c:	f8ad 0044 	strh.w	r0, [sp, #68]	; 0x44
90005560:	2004      	movs	r0, #4
90005562:	f8ad 703c 	strh.w	r7, [sp, #60]	; 0x3c
90005566:	f8ad 0048 	strh.w	r0, [sp, #72]	; 0x48
9000556a:	4640      	mov	r0, r8
9000556c:	f00c fe96 	bl	9001229c <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
90005570:	f04f 1302 	mov.w	r3, #131074	; 0x20002
90005574:	4641      	mov	r1, r8
90005576:	4628      	mov	r0, r5
90005578:	f8c4 34bc 	str.w	r3, [r4, #1212]	; 0x4bc
9000557c:	f8c4 64ac 	str.w	r6, [r4, #1196]	; 0x4ac
90005580:	f00a fac6 	bl	9000fb10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005584:	f04f 1304 	mov.w	r3, #262148	; 0x40004
90005588:	4a29      	ldr	r2, [pc, #164]	; (90005630 <_ZN24screen_asteroidsViewBaseC1Ev+0x8ec>)
9000558a:	4628      	mov	r0, r5
9000558c:	f8c4 34c8 	str.w	r3, [r4, #1224]	; 0x4c8
90005590:	f04f 33ff 	mov.w	r3, #4294967295
90005594:	f504 6198 	add.w	r1, r4, #1216	; 0x4c0
90005598:	f8c4 24c4 	str.w	r2, [r4, #1220]	; 0x4c4
        visible = vis;
9000559c:	f884 74e5 	strb.w	r7, [r4, #1253]	; 0x4e5
900055a0:	f8c4 34e8 	str.w	r3, [r4, #1256]	; 0x4e8
900055a4:	f00a fab4 	bl	9000fb10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
900055a8:	4620      	mov	r0, r4
900055aa:	b015      	add	sp, #84	; 0x54
900055ac:	ecbd 8b04 	vpop	{d8-d9}
900055b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        return instance->lcdRef;
900055b4:	6898      	ldr	r0, [r3, #8]
900055b6:	4a1f      	ldr	r2, [pc, #124]	; (90005634 <_ZN24screen_asteroidsViewBaseC1Ev+0x8f0>)
900055b8:	6803      	ldr	r3, [r0, #0]
900055ba:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
900055bc:	4291      	cmp	r1, r2
900055be:	f43f ace2 	beq.w	90004f86 <_ZN24screen_asteroidsViewBaseC1Ev+0x242>
900055c2:	e49d      	b.n	90004f00 <_ZN24screen_asteroidsViewBaseC1Ev+0x1bc>
900055c4:	f504 729a 	add.w	r2, r4, #308	; 0x134
900055c8:	e5dc      	b.n	90005184 <_ZN24screen_asteroidsViewBaseC1Ev+0x440>
900055ca:	4631      	mov	r1, r6
900055cc:	a80a      	add	r0, sp, #40	; 0x28
900055ce:	4798      	blx	r3
900055d0:	aa0a      	add	r2, sp, #40	; 0x28
900055d2:	f504 732a 	add.w	r3, r4, #680	; 0x2a8
900055d6:	ca07      	ldmia	r2, {r0, r1, r2}
900055d8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
900055dc:	e6aa      	b.n	90005334 <_ZN24screen_asteroidsViewBaseC1Ev+0x5f0>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
900055de:	4b16      	ldr	r3, [pc, #88]	; (90005638 <_ZN24screen_asteroidsViewBaseC1Ev+0x8f4>)
900055e0:	2161      	movs	r1, #97	; 0x61
900055e2:	4a16      	ldr	r2, [pc, #88]	; (9000563c <_ZN24screen_asteroidsViewBaseC1Ev+0x8f8>)
900055e4:	4816      	ldr	r0, [pc, #88]	; (90005640 <_ZN24screen_asteroidsViewBaseC1Ev+0x8fc>)
900055e6:	f020 fcb3 	bl	90025f50 <__assert_func>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
900055ea:	4b16      	ldr	r3, [pc, #88]	; (90005644 <_ZN24screen_asteroidsViewBaseC1Ev+0x900>)
900055ec:	2160      	movs	r1, #96	; 0x60
900055ee:	4a13      	ldr	r2, [pc, #76]	; (9000563c <_ZN24screen_asteroidsViewBaseC1Ev+0x8f8>)
900055f0:	4813      	ldr	r0, [pc, #76]	; (90005640 <_ZN24screen_asteroidsViewBaseC1Ev+0x8fc>)
900055f2:	f020 fcad 	bl	90025f50 <__assert_func>
900055f6:	bf00      	nop
900055f8:	240235d4 	.word	0x240235d4
900055fc:	240235d8 	.word	0x240235d8
90005600:	240235e0 	.word	0x240235e0
90005604:	900296f8 	.word	0x900296f8
90005608:	90028bf0 	.word	0x90028bf0
9000560c:	000400e9 	.word	0x000400e9
90005610:	0014005c 	.word	0x0014005c
90005614:	00010048 	.word	0x00010048
90005618:	00010031 	.word	0x00010031
9000561c:	0001001a 	.word	0x0001001a
90005620:	009b0170 	.word	0x009b0170
90005624:	00240048 	.word	0x00240048
90005628:	00480024 	.word	0x00480024
9000562c:	00bf0019 	.word	0x00bf0019
90005630:	00db00ee 	.word	0x00db00ee
90005634:	900024a1 	.word	0x900024a1
90005638:	90029580 	.word	0x90029580
9000563c:	900296c0 	.word	0x900296c0
90005640:	90029538 	.word	0x90029538
90005644:	900294b8 	.word	0x900294b8

90005648 <_ZN8touchgfx6Screen15afterTransitionEv>:
    }
90005648:	4770      	bx	lr
9000564a:	bf00      	nop

9000564c <_ZN26screen_game_selectViewBaseD1Ev>:
}

screen_game_selectViewBase::~screen_game_selectViewBase()
{

}
9000564c:	4770      	bx	lr
9000564e:	bf00      	nop

90005650 <_ZN26screen_game_selectViewBase11setupScreenEv>:

void screen_game_selectViewBase::setupScreen()
{

}
90005650:	4770      	bx	lr
90005652:	bf00      	nop

90005654 <_ZN8touchgfx8CallbackI26screen_game_selectViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
90005654:	4770      	bx	lr
90005656:	bf00      	nop

90005658 <_ZN8touchgfx8CallbackI26screen_game_selectViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
90005658:	b410      	push	{r4}
        (pobject->*pmemfun)(t1);
9000565a:	68c2      	ldr	r2, [r0, #12]
    virtual void execute(T1 t1)
9000565c:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
9000565e:	6844      	ldr	r4, [r0, #4]
90005660:	f012 0f01 	tst.w	r2, #1
90005664:	eb04 0062 	add.w	r0, r4, r2, asr #1
90005668:	d103      	bne.n	90005672 <_ZN8touchgfx8CallbackI26screen_game_selectViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_+0x1a>
9000566a:	689b      	ldr	r3, [r3, #8]
    }
9000566c:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
90005670:	4718      	bx	r3
90005672:	ea4f 0c62 	mov.w	ip, r2, asr #1
90005676:	689b      	ldr	r3, [r3, #8]
90005678:	f854 200c 	ldr.w	r2, [r4, ip]
    }
9000567c:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
90005680:	58d3      	ldr	r3, [r2, r3]
90005682:	4718      	bx	r3

90005684 <_ZNK8touchgfx8CallbackI26screen_game_selectViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
90005684:	6843      	ldr	r3, [r0, #4]
90005686:	b13b      	cbz	r3, 90005698 <_ZNK8touchgfx8CallbackI26screen_game_selectViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
90005688:	6883      	ldr	r3, [r0, #8]
9000568a:	b10b      	cbz	r3, 90005690 <_ZNK8touchgfx8CallbackI26screen_game_selectViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0xc>
9000568c:	2001      	movs	r0, #1
    }
9000568e:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
90005690:	68c0      	ldr	r0, [r0, #12]
90005692:	f000 0001 	and.w	r0, r0, #1
90005696:	4770      	bx	lr
90005698:	4618      	mov	r0, r3
9000569a:	4770      	bx	lr

9000569c <_ZN8touchgfx8CallbackI26screen_game_selectViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
9000569c:	b510      	push	{r4, lr}
9000569e:	4604      	mov	r4, r0
900056a0:	2110      	movs	r1, #16
900056a2:	f020 fc26 	bl	90025ef2 <_ZdlPvj>
900056a6:	4620      	mov	r0, r4
900056a8:	bd10      	pop	{r4, pc}
900056aa:	bf00      	nop

900056ac <_ZN26screen_game_selectViewBaseD0Ev>:
screen_game_selectViewBase::~screen_game_selectViewBase()
900056ac:	b510      	push	{r4, lr}
900056ae:	4604      	mov	r4, r0
}
900056b0:	f44f 71ca 	mov.w	r1, #404	; 0x194
900056b4:	f020 fc1d 	bl	90025ef2 <_ZdlPvj>
900056b8:	4620      	mov	r0, r4
900056ba:	bd10      	pop	{r4, pc}

900056bc <_ZN26screen_game_selectViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void screen_game_selectViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &_btn_asteroids)
900056bc:	30c4      	adds	r0, #196	; 0xc4
900056be:	4288      	cmp	r0, r1
900056c0:	d000      	beq.n	900056c4 <_ZN26screen_game_selectViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x8>
900056c2:	4770      	bx	lr
{
900056c4:	b508      	push	{r3, lr}
    virtual ~screen_game_selectViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
900056c6:	f00f fac7 	bl	90014c58 <_ZN8touchgfx11Application11getInstanceEv>
        //game_asteroids
        //When _btn_asteroids clicked change screen to screen_asteroids
        //Go to screen_asteroids with screen transition towards East
        application().gotoscreen_asteroidsScreenSlideTransitionEast();
    }
}
900056ca:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoscreen_asteroidsScreenSlideTransitionEast();
900056ce:	f7fe bdf9 	b.w	900042c4 <_ZN23FrontendApplicationBase45gotoscreen_asteroidsScreenSlideTransitionEastEv>
900056d2:	bf00      	nop

900056d4 <_ZN26screen_game_selectViewBaseC1Ev>:
screen_game_selectViewBase::screen_game_selectViewBase() :
900056d4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900056d8:	b086      	sub	sp, #24
900056da:	4604      	mov	r4, r0
900056dc:	f010 fe8a 	bl	900163f4 <_ZN8touchgfx6ScreenC1Ev>
        : Widget(), alpha(255), color(0)
900056e0:	4b87      	ldr	r3, [pc, #540]	; (90005900 <_ZN26screen_game_selectViewBaseC1Ev+0x22c>)
900056e2:	2500      	movs	r5, #0
          touchable(false),
900056e4:	f44f 7680 	mov.w	r6, #256	; 0x100
900056e8:	27ff      	movs	r7, #255	; 0xff
    flexButtonCallback(this, &screen_game_selectViewBase::flexButtonCallbackHandler)
900056ea:	4a86      	ldr	r2, [pc, #536]	; (90005904 <_ZN26screen_game_selectViewBaseC1Ev+0x230>)
900056ec:	6423      	str	r3, [r4, #64]	; 0x40
900056ee:	f104 0ac4 	add.w	sl, r4, #196	; 0xc4
900056f2:	66e3      	str	r3, [r4, #108]	; 0x6c
        T::add(borderBox);
900056f4:	f104 01f8 	add.w	r1, r4, #248	; 0xf8
900056f8:	4b83      	ldr	r3, [pc, #524]	; (90005908 <_ZN26screen_game_selectViewBaseC1Ev+0x234>)
900056fa:	4650      	mov	r0, sl
900056fc:	6022      	str	r2, [r4, #0]
900056fe:	f104 0898 	add.w	r8, r4, #152	; 0x98
90005702:	63e5      	str	r5, [r4, #60]	; 0x3c
90005704:	f8a4 6064 	strh.w	r6, [r4, #100]	; 0x64
90005708:	f884 7066 	strb.w	r7, [r4, #102]	; 0x66
9000570c:	66a5      	str	r5, [r4, #104]	; 0x68
9000570e:	f8a4 6090 	strh.w	r6, [r4, #144]	; 0x90
90005712:	f884 7092 	strb.w	r7, [r4, #146]	; 0x92
90005716:	f8c4 5094 	str.w	r5, [r4, #148]	; 0x94
        : typedTextId(id)
9000571a:	f8df 9224 	ldr.w	r9, [pc, #548]	; 90005940 <_ZN26screen_game_selectViewBaseC1Ev+0x26c>
        : x(0), y(0), width(0), height(0)
9000571e:	e9c4 5511 	strd	r5, r5, [r4, #68]	; 0x44
90005722:	e9c4 5513 	strd	r5, r5, [r4, #76]	; 0x4c
          nextSibling(0),
90005726:	e9c4 5515 	strd	r5, r5, [r4, #84]	; 0x54
          cachedAbsX(0),
9000572a:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
9000572e:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
90005732:	e9c4 551e 	strd	r5, r5, [r4, #120]	; 0x78
          nextSibling(0),
90005736:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
          cachedAbsX(0),
9000573a:	e9c4 5522 	strd	r5, r5, [r4, #136]	; 0x88
9000573e:	e9c4 5527 	strd	r5, r5, [r4, #156]	; 0x9c
90005742:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
          nextSibling(0),
90005746:	e9c4 552b 	strd	r5, r5, [r4, #172]	; 0xac
          cachedAbsX(0),
9000574a:	e9c4 552d 	strd	r5, r5, [r4, #180]	; 0xb4
9000574e:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
        : pressed(false), alpha(255), action(0)
90005752:	f44f 437f 	mov.w	r3, #65280	; 0xff00
          touchable(false),
90005756:	f8a4 60bc 	strh.w	r6, [r4, #188]	; 0xbc
9000575a:	f8a4 30f0 	strh.w	r3, [r4, #240]	; 0xf0
        touchable = touch;
9000575e:	f240 1301 	movw	r3, #257	; 0x101
90005762:	f8c4 50c0 	str.w	r5, [r4, #192]	; 0xc0
90005766:	f8a4 30e8 	strh.w	r3, [r4, #232]	; 0xe8
        : T(), up(), down()
9000576a:	4b68      	ldr	r3, [pc, #416]	; (9000590c <_ZN26screen_game_selectViewBaseC1Ev+0x238>)
9000576c:	f8c4 50ec 	str.w	r5, [r4, #236]	; 0xec
90005770:	f8c4 30c4 	str.w	r3, [r4, #196]	; 0xc4
        : Box(), borderColor(0), borderSize(0)
90005774:	4b66      	ldr	r3, [pc, #408]	; (90005910 <_ZN26screen_game_selectViewBaseC1Ev+0x23c>)
90005776:	f8c4 50f4 	str.w	r5, [r4, #244]	; 0xf4
9000577a:	f8c4 30f8 	str.w	r3, [r4, #248]	; 0xf8
          touchable(false),
9000577e:	f8a4 611c 	strh.w	r6, [r4, #284]	; 0x11c
90005782:	f884 711e 	strb.w	r7, [r4, #286]	; 0x11e
90005786:	f8a4 5128 	strh.w	r5, [r4, #296]	; 0x128
        rect.x = x;
9000578a:	f8c4 50fc 	str.w	r5, [r4, #252]	; 0xfc
9000578e:	e9c4 5532 	strd	r5, r5, [r4, #200]	; 0xc8
90005792:	e9c4 5534 	strd	r5, r5, [r4, #208]	; 0xd0
          nextSibling(0),
90005796:	e9c4 5536 	strd	r5, r5, [r4, #216]	; 0xd8
          cachedAbsX(0),
9000579a:	e9c4 5538 	strd	r5, r5, [r4, #224]	; 0xe0
          nextSibling(0),
9000579e:	e9c4 5543 	strd	r5, r5, [r4, #268]	; 0x10c
          cachedAbsX(0),
900057a2:	e9c4 5545 	strd	r5, r5, [r4, #276]	; 0x114
        : color(col)
900057a6:	e9c4 5548 	strd	r5, r5, [r4, #288]	; 0x120
        : color(0)
900057aa:	e9c4 554b 	strd	r5, r5, [r4, #300]	; 0x12c
900057ae:	e9c4 554d 	strd	r5, r5, [r4, #308]	; 0x134
        rect.x = x;
900057b2:	e9c4 5540 	strd	r5, r5, [r4, #256]	; 0x100
900057b6:	f8c4 5108 	str.w	r5, [r4, #264]	; 0x108
        T::add(borderBox);
900057ba:	f00a f9a9 	bl	9000fb10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
900057be:	f04f 33ff 	mov.w	r3, #4294967295
          touchable(false),
900057c2:	f8a4 6160 	strh.w	r6, [r4, #352]	; 0x160
        container.add(d);
900057c6:	f104 0140 	add.w	r1, r4, #64	; 0x40
        rect.x = x;
900057ca:	4e52      	ldr	r6, [pc, #328]	; (90005914 <_ZN26screen_game_selectViewBaseC1Ev+0x240>)
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
900057cc:	f8c4 7172 	str.w	r7, [r4, #370]	; 0x172
900057d0:	1d27      	adds	r7, r4, #4
        : color(col)
900057d2:	f8c4 516c 	str.w	r5, [r4, #364]	; 0x16c
900057d6:	4638      	mov	r0, r7
900057d8:	f8a4 5170 	strh.w	r5, [r4, #368]	; 0x170
              text(0)
900057dc:	f8c4 5180 	str.w	r5, [r4, #384]	; 0x180
        : pobject(pObject), pmemfun(pmemfun_1)
900057e0:	f8c4 5190 	str.w	r5, [r4, #400]	; 0x190
900057e4:	6465      	str	r5, [r4, #68]	; 0x44
900057e6:	f8c4 4188 	str.w	r4, [r4, #392]	; 0x188
900057ea:	64a6      	str	r6, [r4, #72]	; 0x48
900057ec:	f8c4 9164 	str.w	r9, [r4, #356]	; 0x164
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
900057f0:	e9c4 535e 	strd	r5, r3, [r4, #376]	; 0x178
900057f4:	4b48      	ldr	r3, [pc, #288]	; (90005918 <_ZN26screen_game_selectViewBaseC1Ev+0x244>)
900057f6:	f8c4 3184 	str.w	r3, [r4, #388]	; 0x184
900057fa:	4b48      	ldr	r3, [pc, #288]	; (9000591c <_ZN26screen_game_selectViewBaseC1Ev+0x248>)
900057fc:	f8c4 318c 	str.w	r3, [r4, #396]	; 0x18c
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
90005800:	4b47      	ldr	r3, [pc, #284]	; (90005920 <_ZN26screen_game_selectViewBaseC1Ev+0x24c>)
90005802:	f8c4 313c 	str.w	r3, [r4, #316]	; 0x13c
90005806:	f64f 73ff 	movw	r3, #65535	; 0xffff
9000580a:	f8a4 3168 	strh.w	r3, [r4, #360]	; 0x168
        color = newColor;
9000580e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        : x(0), y(0), width(0), height(0)
90005812:	e9c4 5550 	strd	r5, r5, [r4, #320]	; 0x140
90005816:	e9c4 5552 	strd	r5, r5, [r4, #328]	; 0x148
          nextSibling(0),
9000581a:	e9c4 5554 	strd	r5, r5, [r4, #336]	; 0x150
          cachedAbsX(0),
9000581e:	e9c4 5556 	strd	r5, r5, [r4, #344]	; 0x158
90005822:	66a3      	str	r3, [r4, #104]	; 0x68
90005824:	f00a f974 	bl	9000fb10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005828:	4b3e      	ldr	r3, [pc, #248]	; (90005924 <_ZN26screen_game_selectViewBaseC1Ev+0x250>)
9000582a:	f104 016c 	add.w	r1, r4, #108	; 0x6c
9000582e:	4638      	mov	r0, r7
90005830:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
        rect.x = x;
90005834:	e9c4 561c 	strd	r5, r6, [r4, #112]	; 0x70
90005838:	f00a f96a 	bl	9000fb10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        borderUp = borderColorReleased;
9000583c:	493a      	ldr	r1, [pc, #232]	; (90005928 <_ZN26screen_game_selectViewBaseC1Ev+0x254>)
9000583e:	4b3b      	ldr	r3, [pc, #236]	; (9000592c <_ZN26screen_game_selectViewBaseC1Ev+0x258>)
90005840:	f8c4 1134 	str.w	r1, [r4, #308]	; 0x134
        borderDown = borderColorPressed;
90005844:	f101 1133 	add.w	r1, r1, #3342387	; 0x330033
90005848:	f8c4 30a0 	str.w	r3, [r4, #160]	; 0xa0
9000584c:	f501 514c 	add.w	r1, r1, #13056	; 0x3300
90005850:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
90005854:	4b36      	ldr	r3, [pc, #216]	; (90005930 <_ZN26screen_game_selectViewBaseC1Ev+0x25c>)
        down = colorPressed;
90005856:	4a37      	ldr	r2, [pc, #220]	; (90005934 <_ZN26screen_game_selectViewBaseC1Ev+0x260>)
90005858:	f8c4 309c 	str.w	r3, [r4, #156]	; 0x9c
        borderDown = borderColorPressed;
9000585c:	f8c4 1138 	str.w	r1, [r4, #312]	; 0x138
        down = colorPressed;
90005860:	4b35      	ldr	r3, [pc, #212]	; (90005938 <_ZN26screen_game_selectViewBaseC1Ev+0x264>)
        borderBox.setColor(T::getPressed() ? down : up);
90005862:	f894 10f0 	ldrb.w	r1, [r4, #240]	; 0xf0
90005866:	f8c4 50fc 	str.w	r5, [r4, #252]	; 0xfc
        borderSize = size;
9000586a:	f8a4 5128 	strh.w	r5, [r4, #296]	; 0x128
9000586e:	f504 759e 	add.w	r5, r4, #316	; 0x13c
        down = colorPressed;
90005872:	e9c4 324b 	strd	r3, r2, [r4, #300]	; 0x12c
        borderBox.setColor(T::getPressed() ? down : up);
90005876:	2900      	cmp	r1, #0
90005878:	d03e      	beq.n	900058f8 <_ZN26screen_game_selectViewBaseC1Ev+0x224>
9000587a:	4613      	mov	r3, r2
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
9000587c:	f504 729c 	add.w	r2, r4, #312	; 0x138
90005880:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
90005884:	2600      	movs	r6, #0
90005886:	6813      	ldr	r3, [r2, #0]
    btn_asteroids.add(_btn_asteroids);
90005888:	4651      	mov	r1, sl
9000588a:	4640      	mov	r0, r8
9000588c:	f8c4 60c8 	str.w	r6, [r4, #200]	; 0xc8
        borderColor = colorBorder;
90005890:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
    _btn_asteroids.setAction(flexButtonCallback);
90005894:	f504 73c2 	add.w	r3, r4, #388	; 0x184
        action = &callback;
90005898:	f8c4 30f4 	str.w	r3, [r4, #244]	; 0xf4
9000589c:	4b23      	ldr	r3, [pc, #140]	; (9000592c <_ZN26screen_game_selectViewBaseC1Ev+0x258>)
9000589e:	f8c4 30cc 	str.w	r3, [r4, #204]	; 0xcc
    btn_asteroids.add(_btn_asteroids);
900058a2:	f00a f935 	bl	9000fb10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900058a6:	4b25      	ldr	r3, [pc, #148]	; (9000593c <_ZN26screen_game_selectViewBaseC1Ev+0x268>)
        linespace = space;
900058a8:	f8a4 6170 	strh.w	r6, [r4, #368]	; 0x170
        boundingArea = calculateBoundingArea();
900058ac:	466e      	mov	r6, sp
900058ae:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
        color = newColor;
900058b2:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        boundingArea = calculateBoundingArea();
900058b6:	4629      	mov	r1, r5
900058b8:	4630      	mov	r0, r6
        color = newColor;
900058ba:	f8c4 316c 	str.w	r3, [r4, #364]	; 0x16c
        boundingArea = calculateBoundingArea();
900058be:	f00c f8d7 	bl	90011a70 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
900058c2:	2203      	movs	r2, #3
900058c4:	f105 033c 	add.w	r3, r5, #60	; 0x3c
900058c8:	f8cd 9010 	str.w	r9, [sp, #16]
900058cc:	f8ad 2014 	strh.w	r2, [sp, #20]
900058d0:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
900058d4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    lbl_asteroids.setTypedText(touchgfx::TypedText(T___SINGLEUSE_19SB));
900058d8:	a904      	add	r1, sp, #16
900058da:	4628      	mov	r0, r5
900058dc:	f00c fb70 	bl	90011fc0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    btn_asteroids.add(lbl_asteroids);
900058e0:	4629      	mov	r1, r5
900058e2:	4640      	mov	r0, r8
900058e4:	f00a f914 	bl	9000fb10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900058e8:	4638      	mov	r0, r7
900058ea:	4641      	mov	r1, r8
900058ec:	f00a f910 	bl	9000fb10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
900058f0:	4620      	mov	r0, r4
900058f2:	b006      	add	sp, #24
900058f4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
900058f8:	f504 729a 	add.w	r2, r4, #308	; 0x134
900058fc:	e7c0      	b.n	90005880 <_ZN26screen_game_selectViewBaseC1Ev+0x1ac>
900058fe:	bf00      	nop
90005900:	9002a23c 	.word	0x9002a23c
90005904:	90029960 	.word	0x90029960
90005908:	90029e0c 	.word	0x90029e0c
9000590c:	90029794 	.word	0x90029794
90005910:	9002a2a4 	.word	0x9002a2a4
90005914:	011001e0 	.word	0x011001e0
90005918:	90029948 	.word	0x90029948
9000591c:	900056bd 	.word	0x900056bd
90005920:	9002a1ac 	.word	0x9002a1ac
90005924:	ff3d3d3d 	.word	0xff3d3d3d
90005928:	ff003366 	.word	0xff003366
9000592c:	003800f0 	.word	0x003800f0
90005930:	0014000f 	.word	0x0014000f
90005934:	ff7a7a05 	.word	0xff7a7a05
90005938:	ffc7c73c 	.word	0xffc7c73c
9000593c:	0008001b 	.word	0x0008001b
90005940:	90028bf0 	.word	0x90028bf0

90005944 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
90005944:	4770      	bx	lr
90005946:	bf00      	nop

90005948 <_ZN19FrontendApplicationD0Ev>:
90005948:	b510      	push	{r4, lr}
9000594a:	4604      	mov	r4, r0
9000594c:	f44f 71ae 	mov.w	r1, #348	; 0x15c
90005950:	f020 facf 	bl	90025ef2 <_ZdlPvj>
90005954:	4620      	mov	r0, r4
90005956:	bd10      	pop	{r4, pc}

90005958 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
90005958:	b510      	push	{r4, lr}
9000595a:	4604      	mov	r4, r0
    {
        model.tick();
9000595c:	f8d0 0158 	ldr.w	r0, [r0, #344]	; 0x158
90005960:	f000 f81c 	bl	9000599c <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
90005964:	4620      	mov	r0, r4
    }
90005966:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
9000596a:	f00f b9f7 	b.w	90014d5c <_ZN8touchgfx11Application15handleTickEventEv>
9000596e:	bf00      	nop

90005970 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
90005970:	b510      	push	{r4, lr}
90005972:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
90005974:	f7fe fc5a 	bl	9000422c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
90005978:	4b01      	ldr	r3, [pc, #4]	; (90005980 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
{

}
9000597a:	4620      	mov	r0, r4
    : FrontendApplicationBase(m, heap)
9000597c:	6023      	str	r3, [r4, #0]
}
9000597e:	bd10      	pop	{r4, pc}
90005980:	90029994 	.word	0x90029994

90005984 <_ZN13ModelListener9move_shipEv>:
    }

    virtual void move_ship(){}
90005984:	4770      	bx	lr
90005986:	bf00      	nop

90005988 <_ZN13ModelListener10move_rocksEv>:
    virtual void move_bullets(){}
    virtual void move_rocks(){}
90005988:	4770      	bx	lr
9000598a:	bf00      	nop

9000598c <_ZN13ModelListener25is_asteroids_game_startedEv>:

    virtual bool is_asteroids_game_started() {return false;}
9000598c:	2000      	movs	r0, #0
9000598e:	4770      	bx	lr

90005990 <_ZN13ModelListener21check_ship_collisionsEv>:

    virtual void check_ship_collisions(){}
90005990:	4770      	bx	lr
90005992:	bf00      	nop

90005994 <_ZN5ModelC1Ev>:
extern "C" {
	extern osSemaphoreId_t resumeAsteroidsTaskSemaphoreHandle;
	extern osSemaphoreId_t suspendAsteroidsTaskSemaphoreHandle;
}

Model::Model() : modelListener(0)
90005994:	2200      	movs	r2, #0
90005996:	6002      	str	r2, [r0, #0]
{

}
90005998:	4770      	bx	lr
9000599a:	bf00      	nop

9000599c <_ZN5Model4tickEv>:

void Model::tick()
{
9000599c:	b510      	push	{r4, lr}
9000599e:	4604      	mov	r4, r0
	if( modelListener->is_asteroids_game_started() ) {
900059a0:	6800      	ldr	r0, [r0, #0]
900059a2:	4a11      	ldr	r2, [pc, #68]	; (900059e8 <_ZN5Model4tickEv+0x4c>)
900059a4:	6803      	ldr	r3, [r0, #0]
900059a6:	695b      	ldr	r3, [r3, #20]
900059a8:	4293      	cmp	r3, r2
900059aa:	d100      	bne.n	900059ae <_ZN5Model4tickEv+0x12>
		asteroids_tick();
	}
}
900059ac:	bd10      	pop	{r4, pc}
	if( modelListener->is_asteroids_game_started() ) {
900059ae:	4798      	blx	r3
900059b0:	2800      	cmp	r0, #0
900059b2:	d0fb      	beq.n	900059ac <_ZN5Model4tickEv+0x10>

void Model::asteroids_tick() {
	modelListener->move_ship();
900059b4:	6820      	ldr	r0, [r4, #0]
900059b6:	490d      	ldr	r1, [pc, #52]	; (900059ec <_ZN5Model4tickEv+0x50>)
900059b8:	6803      	ldr	r3, [r0, #0]
900059ba:	689a      	ldr	r2, [r3, #8]
900059bc:	428a      	cmp	r2, r1
900059be:	d10e      	bne.n	900059de <_ZN5Model4tickEv+0x42>
	//modelListener->move_bullets();
	modelListener->move_rocks();
900059c0:	691a      	ldr	r2, [r3, #16]
900059c2:	490b      	ldr	r1, [pc, #44]	; (900059f0 <_ZN5Model4tickEv+0x54>)
900059c4:	428a      	cmp	r2, r1
900059c6:	d106      	bne.n	900059d6 <_ZN5Model4tickEv+0x3a>
	//modelListener->check_bullet_collisions();
	modelListener->check_ship_collisions();
900059c8:	699b      	ldr	r3, [r3, #24]
900059ca:	4a0a      	ldr	r2, [pc, #40]	; (900059f4 <_ZN5Model4tickEv+0x58>)
900059cc:	4293      	cmp	r3, r2
900059ce:	d0ed      	beq.n	900059ac <_ZN5Model4tickEv+0x10>
}
900059d0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	modelListener->check_ship_collisions();
900059d4:	4718      	bx	r3
	modelListener->move_rocks();
900059d6:	4790      	blx	r2
	modelListener->check_ship_collisions();
900059d8:	6820      	ldr	r0, [r4, #0]
900059da:	6803      	ldr	r3, [r0, #0]
900059dc:	e7f4      	b.n	900059c8 <_ZN5Model4tickEv+0x2c>
	modelListener->move_ship();
900059de:	4790      	blx	r2
	modelListener->move_rocks();
900059e0:	6820      	ldr	r0, [r4, #0]
900059e2:	6803      	ldr	r3, [r0, #0]
900059e4:	e7ec      	b.n	900059c0 <_ZN5Model4tickEv+0x24>
900059e6:	bf00      	nop
900059e8:	9000598d 	.word	0x9000598d
900059ec:	90005985 	.word	0x90005985
900059f0:	90005989 	.word	0x90005989
900059f4:	90005991 	.word	0x90005991

900059f8 <_ZN5Model21resume_asteroids_taskEv>:
}

void Model::resume_asteroids_task()
{
	osSemaphoreAcquire(resumeAsteroidsTaskSemaphoreHandle, 0U);
900059f8:	4b02      	ldr	r3, [pc, #8]	; (90005a04 <_ZN5Model21resume_asteroids_taskEv+0xc>)
900059fa:	2100      	movs	r1, #0
900059fc:	6818      	ldr	r0, [r3, #0]
900059fe:	f007 b8f7 	b.w	9000cbf0 <osSemaphoreAcquire>
90005a02:	bf00      	nop
90005a04:	24009464 	.word	0x24009464

90005a08 <_ZN5Model22suspend_asteroids_taskEv>:
}


void Model::suspend_asteroids_task()
{
	osSemaphoreAcquire(suspendAsteroidsTaskSemaphoreHandle, 0U);
90005a08:	4b02      	ldr	r3, [pc, #8]	; (90005a14 <_ZN5Model22suspend_asteroids_taskEv+0xc>)
90005a0a:	2100      	movs	r1, #0
90005a0c:	6818      	ldr	r0, [r3, #0]
90005a0e:	f007 b8ef 	b.w	9000cbf0 <osSemaphoreAcquire>
90005a12:	bf00      	nop
90005a14:	24009468 	.word	0x24009468

90005a18 <_ZN13ModelListener12move_bulletsEv>:
    virtual void move_bullets(){}
90005a18:	4770      	bx	lr
90005a1a:	bf00      	nop

90005a1c <_ZN25screen_asteroidsPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~screen_asteroidsPresenter() {}
90005a1c:	4770      	bx	lr
90005a1e:	bf00      	nop

90005a20 <_ZThn4_N25screen_asteroidsPresenterD1Ev>:
90005a20:	3804      	subs	r0, #4
90005a22:	4770      	bx	lr

90005a24 <_ZN25screen_asteroidsPresenter10deactivateEv>:
}

void screen_asteroidsPresenter::activate()
{

}
90005a24:	4770      	bx	lr
90005a26:	bf00      	nop

90005a28 <_ZN25screen_asteroidsPresenter25is_asteroids_game_startedEv>:


bool screen_asteroidsPresenter::is_asteroids_game_started()
{
	return game_started;
}
90005a28:	7d40      	ldrb	r0, [r0, #21]
90005a2a:	4770      	bx	lr

90005a2c <_ZN25screen_asteroidsPresenter20start_asteroids_gameEv>:

void screen_asteroidsPresenter::start_asteroids_game()
{
	init_game();
90005a2c:	6803      	ldr	r3, [r0, #0]
90005a2e:	6a1b      	ldr	r3, [r3, #32]
90005a30:	4718      	bx	r3
90005a32:	bf00      	nop

90005a34 <_ZN25screen_asteroidsPresenter9init_gameEv>:

}


void screen_asteroidsPresenter::init_game()
{
90005a34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90005a38:	4604      	mov	r4, r0
	/* SHIP STUFF */
	// move the ship to the starting position
	view.move_ship(225, 227);
90005a3a:	6980      	ldr	r0, [r0, #24]
{
90005a3c:	b08d      	sub	sp, #52	; 0x34
	view.move_ship(225, 227);
90005a3e:	22e3      	movs	r2, #227	; 0xe3
90005a40:	6803      	ldr	r3, [r0, #0]
90005a42:	21e1      	movs	r1, #225	; 0xe1

	// move all the bullets off screen (bullets are on the right of the screen)
	// hide all the bullets

	for(int i = 0; i < BULLET_COUNT; i++ ) {
90005a44:	2500      	movs	r5, #0
	view.move_ship(225, 227);
90005a46:	f242 26f0 	movw	r6, #8944	; 0x22f0
90005a4a:	6d9b      	ldr	r3, [r3, #88]	; 0x58
90005a4c:	f10d 0908 	add.w	r9, sp, #8
90005a50:	f10d 0810 	add.w	r8, sp, #16
90005a54:	4798      	blx	r3
		view.move_bullet(view.bullets[i], BULLET_OFFSCREEN_X, BULLET_OFFSCREEN_Y);
90005a56:	69a2      	ldr	r2, [r4, #24]
class Box : public Widget
90005a58:	483f      	ldr	r0, [pc, #252]	; (90005b58 <_ZN25screen_asteroidsPresenter9init_gameEv+0x124>)
90005a5a:	6811      	ldr	r1, [r2, #0]
90005a5c:	1993      	adds	r3, r2, r6
90005a5e:	9001      	str	r0, [sp, #4]
	for(int i = 0; i < BULLET_COUNT; i++ ) {
90005a60:	362c      	adds	r6, #44	; 0x2c
		view.move_bullet(view.bullets[i], BULLET_OFFSCREEN_X, BULLET_OFFSCREEN_Y);
90005a62:	f8d1 a05c 	ldr.w	sl, [r1, #92]	; 0x5c
90005a66:	212c      	movs	r1, #44	; 0x2c
class Drawable
90005a68:	f103 0c0c 	add.w	ip, r3, #12
90005a6c:	fb01 f705 	mul.w	r7, r1, r5
90005a70:	1d19      	adds	r1, r3, #4
	for(int i = 0; i < BULLET_COUNT; i++ ) {
90005a72:	3501      	adds	r5, #1
90005a74:	eb02 0e07 	add.w	lr, r2, r7
90005a78:	c903      	ldmia	r1, {r0, r1}
90005a7a:	e889 0003 	stmia.w	r9, {r0, r1}
90005a7e:	f242 3118 	movw	r1, #8984	; 0x2318
90005a82:	f85e b001 	ldr.w	fp, [lr, r1]
90005a86:	f242 3116 	movw	r1, #8982	; 0x2316
90005a8a:	f81e e001 	ldrb.w	lr, [lr, r1]
90005a8e:	e89c 0003 	ldmia.w	ip, {r0, r1}
90005a92:	e888 0003 	stmia.w	r8, {r0, r1}
		view.move_bullet(view.bullets[i], BULLET_OFFSCREEN_X, BULLET_OFFSCREEN_Y);
90005a96:	4610      	mov	r0, r2
90005a98:	695a      	ldr	r2, [r3, #20]
90005a9a:	a901      	add	r1, sp, #4
90005a9c:	9206      	str	r2, [sp, #24]
90005a9e:	699a      	ldr	r2, [r3, #24]
90005aa0:	9207      	str	r2, [sp, #28]
90005aa2:	69da      	ldr	r2, [r3, #28]
90005aa4:	9208      	str	r2, [sp, #32]
90005aa6:	6a1a      	ldr	r2, [r3, #32]
90005aa8:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
90005aaa:	9209      	str	r2, [sp, #36]	; 0x24
90005aac:	2200      	movs	r2, #0
90005aae:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
90005ab2:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
90005ab6:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
90005aba:	f8cd b02c 	str.w	fp, [sp, #44]	; 0x2c
90005abe:	47d0      	blx	sl
		view.bullets[i].setVisible(false);
90005ac0:	69a3      	ldr	r3, [r4, #24]
        return parent;
90005ac2:	f242 3104 	movw	r1, #8964	; 0x2304
        visible = vis;
90005ac6:	f242 3215 	movw	r2, #8981	; 0x2315
90005aca:	443b      	add	r3, r7
        return parent;
90005acc:	5858      	ldr	r0, [r3, r1]
        visible = vis;
90005ace:	f04f 0100 	mov.w	r1, #0
90005ad2:	5499      	strb	r1, [r3, r2]
		view.bullets[i].getParent()->invalidateContent();
90005ad4:	6803      	ldr	r3, [r0, #0]
90005ad6:	699b      	ldr	r3, [r3, #24]
90005ad8:	4798      	blx	r3
	for(int i = 0; i < BULLET_COUNT; i++ ) {
90005ada:	2d0a      	cmp	r5, #10
90005adc:	d1bb      	bne.n	90005a56 <_ZN25screen_asteroidsPresenter9init_gameEv+0x22>


	/* ROCK STUFF */
	// move all the rocks off screen (rock are to the left of the screen)
	// hide all the rocks
	for(int i = 0; i < ROCK_COUNT; i++ ) {
90005ade:	2500      	movs	r5, #0
90005ae0:	f242 1638 	movw	r6, #8504	; 0x2138
90005ae4:	f04f 092c 	mov.w	r9, #44	; 0x2c
90005ae8:	f242 185d 	movw	r8, #8541	; 0x215d
		view.move_rock(&view.rocks[i], ROCK_OFFSCREEN_X, ROCK_OFFSCREEN_Y);
90005aec:	462f      	mov	r7, r5
90005aee:	69a0      	ldr	r0, [r4, #24]
90005af0:	2300      	movs	r3, #0
90005af2:	f8d0 c000 	ldr.w	ip, [r0]
90005af6:	1981      	adds	r1, r0, r6
90005af8:	461a      	mov	r2, r3
	for(int i = 0; i < ROCK_COUNT; i++ ) {
90005afa:	362c      	adds	r6, #44	; 0x2c
		view.move_rock(&view.rocks[i], ROCK_OFFSCREEN_X, ROCK_OFFSCREEN_Y);
90005afc:	f8dc a068 	ldr.w	sl, [ip, #104]	; 0x68
90005b00:	47d0      	blx	sl
		view.rocks[i].setVisible(false);
90005b02:	69a3      	ldr	r3, [r4, #24]
        return parent;
90005b04:	f242 124c 	movw	r2, #8524	; 0x214c
        visible = vis;
90005b08:	fb09 3305 	mla	r3, r9, r5, r3
	for(int i = 0; i < ROCK_COUNT; i++ ) {
90005b0c:	3501      	adds	r5, #1
        return parent;
90005b0e:	5898      	ldr	r0, [r3, r2]
        visible = vis;
90005b10:	f803 7008 	strb.w	r7, [r3, r8]
		view.rocks[i].getParent()->invalidateContent();
90005b14:	6803      	ldr	r3, [r0, #0]
90005b16:	699b      	ldr	r3, [r3, #24]
90005b18:	4798      	blx	r3
	for(int i = 0; i < ROCK_COUNT; i++ ) {
90005b1a:	2d0a      	cmp	r5, #10
90005b1c:	d1e7      	bne.n	90005aee <_ZN25screen_asteroidsPresenter9init_gameEv+0xba>
90005b1e:	f242 1538 	movw	r5, #8504	; 0x2138
	}

	// generate random rock positions

	for(int i = 0; i < ROCK_COUNT; i++) {
90005b22:	f242 26f0 	movw	r6, #8944	; 0x22f0
		view.new_rock_position(&view.rocks[i]);
90005b26:	69a0      	ldr	r0, [r4, #24]
90005b28:	6803      	ldr	r3, [r0, #0]
90005b2a:	1941      	adds	r1, r0, r5
	for(int i = 0; i < ROCK_COUNT; i++) {
90005b2c:	352c      	adds	r5, #44	; 0x2c
		view.new_rock_position(&view.rocks[i]);
90005b2e:	6edb      	ldr	r3, [r3, #108]	; 0x6c
90005b30:	4798      	blx	r3
	for(int i = 0; i < ROCK_COUNT; i++) {
90005b32:	42b5      	cmp	r5, r6
90005b34:	d1f7      	bne.n	90005b26 <_ZN25screen_asteroidsPresenter9init_gameEv+0xf2>


	/* GENERAL GAME STUFF */
	// reset the score to 0
	score = 0;
	view.update_score(score);
90005b36:	69a0      	ldr	r0, [r4, #24]
	score = 0;
90005b38:	2100      	movs	r1, #0
	view.update_score(score);
90005b3a:	6803      	ldr	r3, [r0, #0]
	score = 0;
90005b3c:	6121      	str	r1, [r4, #16]
	view.update_score(score);
90005b3e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
90005b40:	4798      	blx	r3

	// reset health to full
	lives = 3;
	view.update_hearts(lives);
90005b42:	69a0      	ldr	r0, [r4, #24]
	lives = 3;
90005b44:	2103      	movs	r1, #3
90005b46:	7321      	strb	r1, [r4, #12]
	view.update_hearts(lives);
90005b48:	6803      	ldr	r3, [r0, #0]
90005b4a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
90005b4c:	4798      	blx	r3

	// start the game
	game_started = true;
90005b4e:	2301      	movs	r3, #1
90005b50:	7563      	strb	r3, [r4, #21]
}
90005b52:	b00d      	add	sp, #52	; 0x34
90005b54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90005b58:	9002a23c 	.word	0x9002a23c

90005b5c <_ZN25screen_asteroidsPresenter9move_shipEv>:

void screen_asteroidsPresenter::move_ship()
{
90005b5c:	b5f0      	push	{r4, r5, r6, r7, lr}
90005b5e:	4604      	mov	r4, r0
	int old_x, old_y;

	view.getShipPosition(&old_x, &old_y);
90005b60:	6980      	ldr	r0, [r0, #24]
{
90005b62:	b083      	sub	sp, #12
	view.getShipPosition(&old_x, &old_y);
90005b64:	6803      	ldr	r3, [r0, #0]
90005b66:	aa01      	add	r2, sp, #4
90005b68:	4669      	mov	r1, sp
90005b6a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
90005b6c:	4798      	blx	r3

	int new_x = old_x;
	int new_y = old_y;

	ShipDirection ship_direction = view.get_ship_direction();
90005b6e:	69a0      	ldr	r0, [r4, #24]
90005b70:	6803      	ldr	r3, [r0, #0]
90005b72:	6e5b      	ldr	r3, [r3, #100]	; 0x64
	int new_y = old_y;
90005b74:	e9dd 5600 	ldrd	r5, r6, [sp]
	ShipDirection ship_direction = view.get_ship_direction();
90005b78:	4798      	blx	r3

	switch(ship_direction) {
90005b7a:	2803      	cmp	r0, #3
90005b7c:	d805      	bhi.n	90005b8a <_ZN25screen_asteroidsPresenter9move_shipEv+0x2e>
90005b7e:	e8df f000 	tbb	[pc, r0]
90005b82:	2629      	.short	0x2629
90005b84:	2302      	.short	0x2302
		case ShipDirection::LEFT: {
			new_x = old_x - SHIP_MOVES_PER_TICK;
90005b86:	9d00      	ldr	r5, [sp, #0]
90005b88:	3d0a      	subs	r5, #10
		default: {
			break;
		}
	}

	Drawable *ship = view.get_ship_pointer();
90005b8a:	69a0      	ldr	r0, [r4, #24]
90005b8c:	6803      	ldr	r3, [r0, #0]
90005b8e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
90005b90:	4798      	blx	r3

	view.move_ship((new_x > (SCREEN_WIDTH - ship->getWidth()) || new_x < 0) ? old_x : new_x, (new_y > (SCREEN_HEIGHT - ship->getHeight()) || new_y < 0) ? old_y : new_y);
90005b92:	69a4      	ldr	r4, [r4, #24]
90005b94:	6823      	ldr	r3, [r4, #0]
90005b96:	6d9f      	ldr	r7, [r3, #88]	; 0x58
90005b98:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
90005b9c:	f5c3 73f0 	rsb	r3, r3, #480	; 0x1e0
90005ba0:	42ab      	cmp	r3, r5
90005ba2:	db01      	blt.n	90005ba8 <_ZN25screen_asteroidsPresenter9move_shipEv+0x4c>
90005ba4:	2d00      	cmp	r5, #0
90005ba6:	da00      	bge.n	90005baa <_ZN25screen_asteroidsPresenter9move_shipEv+0x4e>
90005ba8:	9d00      	ldr	r5, [sp, #0]
90005baa:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
90005bae:	f5c3 7388 	rsb	r3, r3, #272	; 0x110
90005bb2:	42b3      	cmp	r3, r6
90005bb4:	db01      	blt.n	90005bba <_ZN25screen_asteroidsPresenter9move_shipEv+0x5e>
90005bb6:	2e00      	cmp	r6, #0
90005bb8:	da00      	bge.n	90005bbc <_ZN25screen_asteroidsPresenter9move_shipEv+0x60>
90005bba:	9e01      	ldr	r6, [sp, #4]
90005bbc:	4632      	mov	r2, r6
90005bbe:	4629      	mov	r1, r5
90005bc0:	4620      	mov	r0, r4
90005bc2:	47b8      	blx	r7
}
90005bc4:	b003      	add	sp, #12
90005bc6:	bdf0      	pop	{r4, r5, r6, r7, pc}
			new_x = old_x + SHIP_MOVES_PER_TICK;
90005bc8:	9d00      	ldr	r5, [sp, #0]
90005bca:	350a      	adds	r5, #10
			break;
90005bcc:	e7dd      	b.n	90005b8a <_ZN25screen_asteroidsPresenter9move_shipEv+0x2e>
			new_y = old_y + SHIP_MOVES_PER_TICK;
90005bce:	9e01      	ldr	r6, [sp, #4]
90005bd0:	360a      	adds	r6, #10
			break;
90005bd2:	e7da      	b.n	90005b8a <_ZN25screen_asteroidsPresenter9move_shipEv+0x2e>
			new_y = old_y - SHIP_MOVES_PER_TICK;
90005bd4:	9e01      	ldr	r6, [sp, #4]
90005bd6:	3e0a      	subs	r6, #10
			break;
90005bd8:	e7d7      	b.n	90005b8a <_ZN25screen_asteroidsPresenter9move_shipEv+0x2e>
90005bda:	bf00      	nop

90005bdc <_ZThn4_N25screen_asteroidsPresenter9move_shipEv>:
    virtual void init_game();
    virtual void game_over();

    virtual bool elements_collide(Drawable *element1, Drawable *element2);

    virtual void move_ship();
90005bdc:	f1a0 0004 	sub.w	r0, r0, #4
90005be0:	f7ff bfbc 	b.w	90005b5c <_ZN25screen_asteroidsPresenter9move_shipEv>

90005be4 <_ZN25screen_asteroidsPresenterD0Ev>:
    virtual ~screen_asteroidsPresenter() {}
90005be4:	b510      	push	{r4, lr}
90005be6:	4604      	mov	r4, r0
90005be8:	211c      	movs	r1, #28
90005bea:	f020 f982 	bl	90025ef2 <_ZdlPvj>
90005bee:	4620      	mov	r0, r4
90005bf0:	bd10      	pop	{r4, pc}
90005bf2:	bf00      	nop

90005bf4 <_ZThn4_N25screen_asteroidsPresenterD0Ev>:
90005bf4:	b500      	push	{lr}
90005bf6:	3804      	subs	r0, #4
90005bf8:	b083      	sub	sp, #12
90005bfa:	211c      	movs	r1, #28
90005bfc:	9001      	str	r0, [sp, #4]
90005bfe:	f020 f978 	bl	90025ef2 <_ZdlPvj>
90005c02:	9801      	ldr	r0, [sp, #4]
90005c04:	b003      	add	sp, #12
90005c06:	f85d fb04 	ldr.w	pc, [sp], #4
90005c0a:	bf00      	nop

90005c0c <_ZN25screen_asteroidsPresenter21resume_asteroids_taskEv>:
	model->resume_asteroids_task();
90005c0c:	6880      	ldr	r0, [r0, #8]
90005c0e:	f7ff bef3 	b.w	900059f8 <_ZN5Model21resume_asteroids_taskEv>
90005c12:	bf00      	nop

90005c14 <_ZN25screen_asteroidsPresenter22suspend_asteroids_taskEv>:
	model->suspend_asteroids_task();
90005c14:	6880      	ldr	r0, [r0, #8]
90005c16:	f7ff bef7 	b.w	90005a08 <_ZN5Model22suspend_asteroids_taskEv>
90005c1a:	bf00      	nop

90005c1c <_ZN25screen_asteroidsPresenter10move_rocksEv>:


void screen_asteroidsPresenter::move_rocks()
{
90005c1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90005c20:	f242 1738 	movw	r7, #8504	; 0x2138
90005c24:	b083      	sub	sp, #12
	for(int i = 0; i < ROCK_COUNT; i++) {
90005c26:	2500      	movs	r5, #0
        return visible;
90005c28:	f04f 092c 	mov.w	r9, #44	; 0x2c
{
90005c2c:	4683      	mov	fp, r0
        return rect.y;
90005c2e:	f242 1a3e 	movw	sl, #8510	; 0x213e
90005c32:	9701      	str	r7, [sp, #4]
90005c34:	e00a      	b.n	90005c4c <_ZN25screen_asteroidsPresenter10move_rocksEv+0x30>
        return parent;
90005c36:	f242 134c 	movw	r3, #8524	; 0x214c
90005c3a:	fb09 4405 	mla	r4, r9, r5, r4
90005c3e:	58e0      	ldr	r0, [r4, r3]
		view.move_rock(rock, rock->getX(), rock->getY() + ROCK_MOVES_PER_TICK);

		if( rock->getY() > SCREEN_HEIGHT ) {
			view.move_rock_offscreen(rock);
		}
		rock->getParent()->invalidateContent();
90005c40:	6803      	ldr	r3, [r0, #0]
90005c42:	699b      	ldr	r3, [r3, #24]
90005c44:	4798      	blx	r3
	for(int i = 0; i < ROCK_COUNT; i++) {
90005c46:	3501      	adds	r5, #1
90005c48:	2d0a      	cmp	r5, #10
90005c4a:	d023      	beq.n	90005c94 <_ZN25screen_asteroidsPresenter10move_rocksEv+0x78>
		touchgfx::ScalableImage *rock = &view.rocks[i];
90005c4c:	f8db 4018 	ldr.w	r4, [fp, #24]
        return rect.x;
90005c50:	f242 123c 	movw	r2, #8508	; 0x213c
90005c54:	9b01      	ldr	r3, [sp, #4]
        return visible;
90005c56:	fb09 4605 	mla	r6, r9, r5, r4
		view.move_rock(rock, rock->getX(), rock->getY() + ROCK_MOVES_PER_TICK);
90005c5a:	4620      	mov	r0, r4
		touchgfx::ScalableImage *rock = &view.rocks[i];
90005c5c:	eb04 0803 	add.w	r8, r4, r3
	for(int i = 0; i < ROCK_COUNT; i++) {
90005c60:	332c      	adds	r3, #44	; 0x2c
90005c62:	9301      	str	r3, [sp, #4]
		if( !rock->isVisible() )
90005c64:	f242 135d 	movw	r3, #8541	; 0x215d
		view.move_rock(rock, rock->getX(), rock->getY() + ROCK_MOVES_PER_TICK);
90005c68:	4641      	mov	r1, r8
		if( !rock->isVisible() )
90005c6a:	5cf3      	ldrb	r3, [r6, r3]
90005c6c:	2b00      	cmp	r3, #0
90005c6e:	d0ea      	beq.n	90005c46 <_ZN25screen_asteroidsPresenter10move_rocksEv+0x2a>
		view.move_rock(rock, rock->getX(), rock->getY() + ROCK_MOVES_PER_TICK);
90005c70:	f936 300a 	ldrsh.w	r3, [r6, sl]
90005c74:	6827      	ldr	r7, [r4, #0]
90005c76:	3301      	adds	r3, #1
90005c78:	5eb2      	ldrsh	r2, [r6, r2]
90005c7a:	6ebf      	ldr	r7, [r7, #104]	; 0x68
90005c7c:	47b8      	blx	r7
		if( rock->getY() > SCREEN_HEIGHT ) {
90005c7e:	f936 300a 	ldrsh.w	r3, [r6, sl]
90005c82:	f5b3 7f88 	cmp.w	r3, #272	; 0x110
90005c86:	ddd6      	ble.n	90005c36 <_ZN25screen_asteroidsPresenter10move_rocksEv+0x1a>
			view.move_rock_offscreen(rock);
90005c88:	4641      	mov	r1, r8
90005c8a:	f8db 0018 	ldr.w	r0, [fp, #24]
90005c8e:	f000 faf1 	bl	90006274 <_ZN20screen_asteroidsView19move_rock_offscreenEPN8touchgfx13ScalableImageE>
90005c92:	e7d0      	b.n	90005c36 <_ZN25screen_asteroidsPresenter10move_rocksEv+0x1a>
	}
}
90005c94:	b003      	add	sp, #12
90005c96:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90005c9a:	bf00      	nop

90005c9c <_ZThn4_N25screen_asteroidsPresenter10move_rocksEv>:
    virtual void move_rocks();
90005c9c:	f1a0 0004 	sub.w	r0, r0, #4
90005ca0:	f7ff bfbc 	b.w	90005c1c <_ZN25screen_asteroidsPresenter10move_rocksEv>

90005ca4 <_ZN25screen_asteroidsPresenter16elements_collideEPN8touchgfx8DrawableES2_>:

}

bool screen_asteroidsPresenter::elements_collide(Drawable *element1, Drawable *element2)
{
	if( element1->getX() > (element2->getX() + element2->getWidth()) || (element1->getX() + element1->getWidth()) < element2->getX()) {
90005ca4:	f9b2 0004 	ldrsh.w	r0, [r2, #4]
90005ca8:	f9b2 3008 	ldrsh.w	r3, [r2, #8]
90005cac:	f9b1 c004 	ldrsh.w	ip, [r1, #4]
90005cb0:	4403      	add	r3, r0
90005cb2:	459c      	cmp	ip, r3
90005cb4:	dc15      	bgt.n	90005ce2 <_ZN25screen_asteroidsPresenter16elements_collideEPN8touchgfx8DrawableES2_+0x3e>
90005cb6:	f9b1 3008 	ldrsh.w	r3, [r1, #8]
90005cba:	4463      	add	r3, ip
90005cbc:	4298      	cmp	r0, r3
90005cbe:	dc10      	bgt.n	90005ce2 <_ZN25screen_asteroidsPresenter16elements_collideEPN8touchgfx8DrawableES2_+0x3e>
		return false;
	}

	if( element1->getY() > (element2->getY() + element2->getHeight()) || (element1->getY() + element1->getHeight()) < element2->getY()) {
90005cc0:	f9b2 0006 	ldrsh.w	r0, [r2, #6]
90005cc4:	f9b2 300a 	ldrsh.w	r3, [r2, #10]
90005cc8:	f9b1 2006 	ldrsh.w	r2, [r1, #6]
90005ccc:	4403      	add	r3, r0
90005cce:	429a      	cmp	r2, r3
90005cd0:	dc07      	bgt.n	90005ce2 <_ZN25screen_asteroidsPresenter16elements_collideEPN8touchgfx8DrawableES2_+0x3e>
90005cd2:	f9b1 300a 	ldrsh.w	r3, [r1, #10]
90005cd6:	4413      	add	r3, r2
90005cd8:	4298      	cmp	r0, r3
90005cda:	bfcc      	ite	gt
90005cdc:	2000      	movgt	r0, #0
90005cde:	2001      	movle	r0, #1
90005ce0:	4770      	bx	lr
		return false;
90005ce2:	2000      	movs	r0, #0
	}

	return true;
}
90005ce4:	4770      	bx	lr
90005ce6:	bf00      	nop

90005ce8 <_ZThn4_N25screen_asteroidsPresenter25is_asteroids_game_startedEv>:
90005ce8:	7c40      	ldrb	r0, [r0, #17]
90005cea:	4770      	bx	lr

90005cec <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv>:
{
90005cec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90005cf0:	4605      	mov	r5, r0
	Drawable *ship = view.get_ship_pointer();
90005cf2:	6980      	ldr	r0, [r0, #24]
90005cf4:	f242 1638 	movw	r6, #8504	; 0x2138
	for(int i = 0; i < ROCK_COUNT; i++) {
90005cf8:	2400      	movs	r4, #0
	Drawable *ship = view.get_ship_pointer();
90005cfa:	6803      	ldr	r3, [r0, #0]
90005cfc:	272c      	movs	r7, #44	; 0x2c
90005cfe:	f8df 80a4 	ldr.w	r8, [pc, #164]	; 90005da4 <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv+0xb8>
90005d02:	6e1b      	ldr	r3, [r3, #96]	; 0x60
90005d04:	4798      	blx	r3
90005d06:	f8df 90a0 	ldr.w	r9, [pc, #160]	; 90005da8 <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv+0xbc>
90005d0a:	4682      	mov	sl, r0
	for(int i = 0; i < ROCK_COUNT; i++) {
90005d0c:	e030      	b.n	90005d70 <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv+0x84>
	if( element1->getX() > (element2->getX() + element2->getWidth()) || (element1->getX() + element1->getWidth()) < element2->getX()) {
90005d0e:	f9b2 1004 	ldrsh.w	r1, [r2, #4]
90005d12:	f9b2 3008 	ldrsh.w	r3, [r2, #8]
90005d16:	f9ba c004 	ldrsh.w	ip, [sl, #4]
90005d1a:	440b      	add	r3, r1
90005d1c:	459c      	cmp	ip, r3
90005d1e:	dc23      	bgt.n	90005d68 <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv+0x7c>
90005d20:	f9ba 3008 	ldrsh.w	r3, [sl, #8]
90005d24:	4463      	add	r3, ip
90005d26:	4299      	cmp	r1, r3
90005d28:	dc1e      	bgt.n	90005d68 <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv+0x7c>
	if( element1->getY() > (element2->getY() + element2->getHeight()) || (element1->getY() + element1->getHeight()) < element2->getY()) {
90005d2a:	f9b2 1006 	ldrsh.w	r1, [r2, #6]
90005d2e:	f9b2 300a 	ldrsh.w	r3, [r2, #10]
90005d32:	f9ba c006 	ldrsh.w	ip, [sl, #6]
90005d36:	440b      	add	r3, r1
90005d38:	459c      	cmp	ip, r3
90005d3a:	dc15      	bgt.n	90005d68 <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv+0x7c>
90005d3c:	f9ba 300a 	ldrsh.w	r3, [sl, #10]
90005d40:	4463      	add	r3, ip
90005d42:	4299      	cmp	r1, r3
90005d44:	dc10      	bgt.n	90005d68 <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv+0x7c>
			lives--;
90005d46:	7b29      	ldrb	r1, [r5, #12]
90005d48:	3901      	subs	r1, #1
90005d4a:	b2c9      	uxtb	r1, r1
90005d4c:	7329      	strb	r1, [r5, #12]
			view.update_hearts(lives);
90005d4e:	6803      	ldr	r3, [r0, #0]
90005d50:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
90005d52:	4798      	blx	r3
			view.move_rock_offscreen(&view.rocks[i]);
90005d54:	69a8      	ldr	r0, [r5, #24]
90005d56:	1981      	adds	r1, r0, r6
90005d58:	f000 fa8c 	bl	90006274 <_ZN20screen_asteroidsView19move_rock_offscreenEPN8touchgfx13ScalableImageE>
			if( lives == 0 ) {
90005d5c:	7b2b      	ldrb	r3, [r5, #12]
90005d5e:	b91b      	cbnz	r3, 90005d68 <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv+0x7c>
				game_over();
90005d60:	682b      	ldr	r3, [r5, #0]
90005d62:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90005d64:	454b      	cmp	r3, r9
90005d66:	d119      	bne.n	90005d9c <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv+0xb0>
	for(int i = 0; i < ROCK_COUNT; i++) {
90005d68:	3401      	adds	r4, #1
90005d6a:	362c      	adds	r6, #44	; 0x2c
90005d6c:	2c0a      	cmp	r4, #10
90005d6e:	d013      	beq.n	90005d98 <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv+0xac>
		if( !view.rocks[i].isVisible() )
90005d70:	69a8      	ldr	r0, [r5, #24]
90005d72:	f242 135d 	movw	r3, #8541	; 0x215d
90005d76:	fb07 0204 	mla	r2, r7, r4, r0
90005d7a:	5cd3      	ldrb	r3, [r2, r3]
90005d7c:	2b00      	cmp	r3, #0
90005d7e:	d0f3      	beq.n	90005d68 <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv+0x7c>
		if( elements_collide(ship, &view.rocks[i]) ) {
90005d80:	682b      	ldr	r3, [r5, #0]
90005d82:	1982      	adds	r2, r0, r6
90005d84:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90005d86:	4543      	cmp	r3, r8
90005d88:	d0c1      	beq.n	90005d0e <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv+0x22>
90005d8a:	4651      	mov	r1, sl
90005d8c:	4628      	mov	r0, r5
90005d8e:	4798      	blx	r3
90005d90:	2800      	cmp	r0, #0
90005d92:	d0e9      	beq.n	90005d68 <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv+0x7c>
			view.update_hearts(lives);
90005d94:	69a8      	ldr	r0, [r5, #24]
90005d96:	e7d6      	b.n	90005d46 <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv+0x5a>
}
90005d98:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
				game_over();
90005d9c:	4628      	mov	r0, r5
90005d9e:	4798      	blx	r3
90005da0:	e7e2      	b.n	90005d68 <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv+0x7c>
90005da2:	bf00      	nop
90005da4:	90005ca5 	.word	0x90005ca5
90005da8:	90005a25 	.word	0x90005a25

90005dac <_ZThn4_N25screen_asteroidsPresenter21check_ship_collisionsEv>:
    // virtual void move_bullets();

    virtual void check_ship_collisions();
90005dac:	f1a0 0004 	sub.w	r0, r0, #4
90005db0:	f7ff bf9c 	b.w	90005cec <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv>

90005db4 <_ZN25screen_asteroidsPresenterC1ER20screen_asteroidsView>:
    : view(v)
90005db4:	4a08      	ldr	r2, [pc, #32]	; (90005dd8 <_ZN25screen_asteroidsPresenterC1ER20screen_asteroidsView+0x24>)
90005db6:	6181      	str	r1, [r0, #24]
90005db8:	2104      	movs	r1, #4
screen_asteroidsPresenter::screen_asteroidsPresenter(screen_asteroidsView& v)
90005dba:	b410      	push	{r4}
    ModelListener() : model(0) {}
90005dbc:	2400      	movs	r4, #0
    : view(v)
90005dbe:	8281      	strh	r1, [r0, #20]
90005dc0:	2103      	movs	r1, #3
90005dc2:	6084      	str	r4, [r0, #8]
90005dc4:	6104      	str	r4, [r0, #16]
90005dc6:	f102 0408 	add.w	r4, r2, #8
90005dca:	3248      	adds	r2, #72	; 0x48
90005dcc:	7301      	strb	r1, [r0, #12]
90005dce:	e9c0 4200 	strd	r4, r2, [r0]
}
90005dd2:	f85d 4b04 	ldr.w	r4, [sp], #4
90005dd6:	4770      	bx	lr
90005dd8:	900299e0 	.word	0x900299e0

90005ddc <_ZN20screen_asteroidsView14tearDownScreenEv>:
}

void screen_asteroidsView::tearDownScreen()
{
    screen_asteroidsViewBase::tearDownScreen();
}
90005ddc:	4770      	bx	lr
90005dde:	bf00      	nop

90005de0 <_ZN20screen_asteroidsView21resume_asteroids_taskEv>:

void screen_asteroidsView::resume_asteroids_task()
{
	presenter->resume_asteroids_task();
90005de0:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
90005de2:	6803      	ldr	r3, [r0, #0]
90005de4:	691b      	ldr	r3, [r3, #16]
90005de6:	4718      	bx	r3

90005de8 <_ZN20screen_asteroidsView22suspend_asteroids_taskEv>:
}

void screen_asteroidsView::suspend_asteroids_task()
{
	presenter->suspend_asteroids_task();
90005de8:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
90005dea:	6803      	ldr	r3, [r0, #0]
90005dec:	695b      	ldr	r3, [r3, #20]
90005dee:	4718      	bx	r3

90005df0 <_ZN20screen_asteroidsView20start_asteroids_gameEv>:
}

void screen_asteroidsView::start_asteroids_game()
{
	presenter->start_asteroids_game();
90005df0:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
90005df2:	6803      	ldr	r3, [r0, #0]
90005df4:	69db      	ldr	r3, [r3, #28]
90005df6:	4718      	bx	r3

90005df8 <_ZN20screen_asteroidsView15getShipPositionEPiS0_>:
}

void screen_asteroidsView::getShipPosition(int *x, int *y)
{
	*x = icon_ship.getX();
	*y = icon_ship.getY();
90005df8:	f9b0 31e2 	ldrsh.w	r3, [r0, #482]	; 0x1e2
{
90005dfc:	b410      	push	{r4}
	*x = icon_ship.getX();
90005dfe:	f9b0 41e0 	ldrsh.w	r4, [r0, #480]	; 0x1e0
90005e02:	600c      	str	r4, [r1, #0]
}
90005e04:	f85d 4b04 	ldr.w	r4, [sp], #4
	*y = icon_ship.getY();
90005e08:	6013      	str	r3, [r2, #0]
}
90005e0a:	4770      	bx	lr

90005e0c <_ZN20screen_asteroidsView16get_ship_pointerEv>:

Drawable* screen_asteroidsView::get_ship_pointer()
{
	return &icon_ship;
}
90005e0c:	f500 70ee 	add.w	r0, r0, #476	; 0x1dc
90005e10:	4770      	bx	lr
90005e12:	bf00      	nop

90005e14 <_ZN20screen_asteroidsView9move_shipEii>:
        return parent;
90005e14:	f8d0 31f0 	ldr.w	r3, [r0, #496]	; 0x1f0


void screen_asteroidsView::move_ship(int x, int y)
{
	icon_ship.setX(x);
	icon_ship.setY(y);
90005e18:	f8a0 21e2 	strh.w	r2, [r0, #482]	; 0x1e2
	icon_ship.getParent()->invalidateContent();
90005e1c:	681a      	ldr	r2, [r3, #0]
	icon_ship.setX(x);
90005e1e:	f8a0 11e0 	strh.w	r1, [r0, #480]	; 0x1e0
	icon_ship.getParent()->invalidateContent();
90005e22:	4618      	mov	r0, r3
90005e24:	6993      	ldr	r3, [r2, #24]
90005e26:	4718      	bx	r3

90005e28 <_ZN20screen_asteroidsView11move_bulletEN8touchgfx3BoxEii>:
90005e28:	6948      	ldr	r0, [r1, #20]
}

void screen_asteroidsView::move_bullet(touchgfx::Box bullet, int x, int y)
{
	bullet.setX(x);
	bullet.setY(y);
90005e2a:	80cb      	strh	r3, [r1, #6]
	bullet.getParent()->invalidateContent();
90005e2c:	6803      	ldr	r3, [r0, #0]
	bullet.setX(x);
90005e2e:	808a      	strh	r2, [r1, #4]
	bullet.getParent()->invalidateContent();
90005e30:	699b      	ldr	r3, [r3, #24]
90005e32:	4718      	bx	r3

90005e34 <_ZN20screen_asteroidsView12update_scoreEj>:
{
90005e34:	b510      	push	{r4, lr}
90005e36:	4604      	mov	r4, r0
90005e38:	460b      	mov	r3, r1
	Unicode::snprintf(lbl_scoreBuffer, LBL_SCORE_SIZE, "%05u", score);
90005e3a:	4a08      	ldr	r2, [pc, #32]	; (90005e5c <_ZN20screen_asteroidsView12update_scoreEj+0x28>)
90005e3c:	2106      	movs	r1, #6
90005e3e:	f200 40ec 	addw	r0, r0, #1260	; 0x4ec
90005e42:	f011 ff8f 	bl	90017d64 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        if (visible)
90005e46:	f894 3291 	ldrb.w	r3, [r4, #657]	; 0x291
90005e4a:	b12b      	cbz	r3, 90005e58 <_ZN20screen_asteroidsView12update_scoreEj+0x24>
            invalidate();
90005e4c:	f504 701b 	add.w	r0, r4, #620	; 0x26c
}
90005e50:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90005e54:	f00f bf79 	b.w	90015d4a <_ZNK8touchgfx8Drawable10invalidateEv>
90005e58:	bd10      	pop	{r4, pc}
90005e5a:	bf00      	nop
90005e5c:	90029a44 	.word	0x90029a44

90005e60 <_ZN20screen_asteroidsViewD1Ev>:
public:
    touchgfx::ScalableImage rocks[ROCK_COUNT];
    touchgfx::Box bullets[BULLET_COUNT];

    screen_asteroidsView();
    virtual ~screen_asteroidsView() {}
90005e60:	b570      	push	{r4, r5, r6, lr}
90005e62:	f242 24f0 	movw	r4, #8944	; 0x22f0
90005e66:	f242 45a8 	movw	r5, #9384	; 0x24a8
90005e6a:	4b0d      	ldr	r3, [pc, #52]	; (90005ea0 <_ZN20screen_asteroidsViewD1Ev+0x40>)
90005e6c:	4606      	mov	r6, r0
90005e6e:	4404      	add	r4, r0
90005e70:	4405      	add	r5, r0
90005e72:	6003      	str	r3, [r0, #0]
90005e74:	f855 3d2c 	ldr.w	r3, [r5, #-44]!
90005e78:	681b      	ldr	r3, [r3, #0]
90005e7a:	4628      	mov	r0, r5
90005e7c:	4798      	blx	r3
90005e7e:	42ac      	cmp	r4, r5
90005e80:	d1f8      	bne.n	90005e74 <_ZN20screen_asteroidsViewD1Ev+0x14>
90005e82:	f242 1538 	movw	r5, #8504	; 0x2138
90005e86:	4435      	add	r5, r6
90005e88:	f854 3d2c 	ldr.w	r3, [r4, #-44]!
90005e8c:	681b      	ldr	r3, [r3, #0]
90005e8e:	4620      	mov	r0, r4
90005e90:	4798      	blx	r3
90005e92:	42a5      	cmp	r5, r4
90005e94:	d1f8      	bne.n	90005e88 <_ZN20screen_asteroidsViewD1Ev+0x28>
90005e96:	4630      	mov	r0, r6
90005e98:	f7fe fd6a 	bl	90004970 <_ZN24screen_asteroidsViewBaseD1Ev>
90005e9c:	4630      	mov	r0, r6
90005e9e:	bd70      	pop	{r4, r5, r6, pc}
90005ea0:	90029a54 	.word	0x90029a54

90005ea4 <_ZN20screen_asteroidsView18get_ship_directionEv>:
	if( btn_up.getPressedState() ) {
90005ea4:	f890 3474 	ldrb.w	r3, [r0, #1140]	; 0x474
90005ea8:	b96b      	cbnz	r3, 90005ec6 <_ZN20screen_asteroidsView18get_ship_directionEv+0x22>
	else if( btn_down.getPressedState() ) {
90005eaa:	f890 33fc 	ldrb.w	r3, [r0, #1020]	; 0x3fc
90005eae:	b943      	cbnz	r3, 90005ec2 <_ZN20screen_asteroidsView18get_ship_directionEv+0x1e>
	else if( btn_left.getPressedState() ) {
90005eb0:	f890 3438 	ldrb.w	r3, [r0, #1080]	; 0x438
90005eb4:	b94b      	cbnz	r3, 90005eca <_ZN20screen_asteroidsView18get_ship_directionEv+0x26>
	else if( btn_right.getPressedState() ) {
90005eb6:	f890 03c0 	ldrb.w	r0, [r0, #960]	; 0x3c0
90005eba:	f1c0 0004 	rsb	r0, r0, #4
90005ebe:	b2c0      	uxtb	r0, r0
90005ec0:	4770      	bx	lr
		return ShipDirection::DOWN;
90005ec2:	2001      	movs	r0, #1
90005ec4:	4770      	bx	lr
		return ShipDirection::UP;
90005ec6:	2000      	movs	r0, #0
90005ec8:	4770      	bx	lr
		return ShipDirection::LEFT;
90005eca:	2002      	movs	r0, #2
}
90005ecc:	4770      	bx	lr
90005ece:	bf00      	nop

90005ed0 <_ZN20screen_asteroidsView9move_rockEPN8touchgfx13ScalableImageEii>:
{
90005ed0:	b570      	push	{r4, r5, r6, lr}
90005ed2:	460c      	mov	r4, r1
	rock->setX(x);
90005ed4:	b211      	sxth	r1, r2
90005ed6:	480f      	ldr	r0, [pc, #60]	; (90005f14 <_ZN20screen_asteroidsView9move_rockEPN8touchgfx13ScalableImageEii+0x44>)
{
90005ed8:	461e      	mov	r6, r3
	rock->setX(x);
90005eda:	6822      	ldr	r2, [r4, #0]
90005edc:	6b15      	ldr	r5, [r2, #48]	; 0x30
90005ede:	4285      	cmp	r5, r0
90005ee0:	d10c      	bne.n	90005efc <_ZN20screen_asteroidsView9move_rockEPN8touchgfx13ScalableImageEii+0x2c>
	rock->setY(y);
90005ee2:	6b52      	ldr	r2, [r2, #52]	; 0x34
90005ee4:	480c      	ldr	r0, [pc, #48]	; (90005f18 <_ZN20screen_asteroidsView9move_rockEPN8touchgfx13ScalableImageEii+0x48>)
        rect.x = x;
90005ee6:	80a1      	strh	r1, [r4, #4]
90005ee8:	b231      	sxth	r1, r6
90005eea:	4282      	cmp	r2, r0
90005eec:	d10e      	bne.n	90005f0c <_ZN20screen_asteroidsView9move_rockEPN8touchgfx13ScalableImageEii+0x3c>
        rect.y = y;
90005eee:	80e1      	strh	r1, [r4, #6]
        return parent;
90005ef0:	6960      	ldr	r0, [r4, #20]
	rock->getParent()->invalidateContent();
90005ef2:	6803      	ldr	r3, [r0, #0]
}
90005ef4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	rock->getParent()->invalidateContent();
90005ef8:	699b      	ldr	r3, [r3, #24]
90005efa:	4718      	bx	r3
	rock->setX(x);
90005efc:	4620      	mov	r0, r4
90005efe:	47a8      	blx	r5
	rock->setY(y);
90005f00:	6822      	ldr	r2, [r4, #0]
90005f02:	4805      	ldr	r0, [pc, #20]	; (90005f18 <_ZN20screen_asteroidsView9move_rockEPN8touchgfx13ScalableImageEii+0x48>)
90005f04:	b231      	sxth	r1, r6
90005f06:	6b52      	ldr	r2, [r2, #52]	; 0x34
90005f08:	4282      	cmp	r2, r0
90005f0a:	d0f0      	beq.n	90005eee <_ZN20screen_asteroidsView9move_rockEPN8touchgfx13ScalableImageEii+0x1e>
90005f0c:	4620      	mov	r0, r4
90005f0e:	4790      	blx	r2
90005f10:	e7ee      	b.n	90005ef0 <_ZN20screen_asteroidsView9move_rockEPN8touchgfx13ScalableImageEii+0x20>
90005f12:	bf00      	nop
90005f14:	900023fd 	.word	0x900023fd
90005f18:	90002401 	.word	0x90002401

90005f1c <_ZN20screen_asteroidsView13update_heartsEc>:
{
90005f1c:	b510      	push	{r4, lr}
90005f1e:	4604      	mov	r4, r0
90005f20:	2903      	cmp	r1, #3
90005f22:	d839      	bhi.n	90005f98 <_ZN20screen_asteroidsView13update_heartsEc+0x7c>
90005f24:	e8df f001 	tbb	[pc, r1]
90005f28:	24340221 	.word	0x24340221
    }
90005f2c:	2300      	movs	r3, #0
90005f2e:	2201      	movs	r2, #1
        visible = vis;
90005f30:	2100      	movs	r1, #0
90005f32:	f884 3335 	strb.w	r3, [r4, #821]	; 0x335
90005f36:	f884 2309 	strb.w	r2, [r4, #777]	; 0x309
90005f3a:	f884 1361 	strb.w	r1, [r4, #865]	; 0x361

    virtual Rect getSolidRect() const;

    virtual void invalidateContent() const
    {
        if (alpha > 0)
90005f3e:	f894 3338 	ldrb.w	r3, [r4, #824]	; 0x338
90005f42:	b133      	cbz	r3, 90005f52 <_ZN20screen_asteroidsView13update_heartsEc+0x36>
        if (visible)
90005f44:	f894 3335 	ldrb.w	r3, [r4, #821]	; 0x335
90005f48:	b11b      	cbz	r3, 90005f52 <_ZN20screen_asteroidsView13update_heartsEc+0x36>
            invalidate();
90005f4a:	f504 7044 	add.w	r0, r4, #784	; 0x310
90005f4e:	f00f fefc 	bl	90015d4a <_ZNK8touchgfx8Drawable10invalidateEv>
90005f52:	f894 330c 	ldrb.w	r3, [r4, #780]	; 0x30c
90005f56:	b1f3      	cbz	r3, 90005f96 <_ZN20screen_asteroidsView13update_heartsEc+0x7a>
        if (visible)
90005f58:	f894 3309 	ldrb.w	r3, [r4, #777]	; 0x309
90005f5c:	b1db      	cbz	r3, 90005f96 <_ZN20screen_asteroidsView13update_heartsEc+0x7a>
            invalidate();
90005f5e:	f504 7039 	add.w	r0, r4, #740	; 0x2e4
}
90005f62:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90005f66:	f00f bef0 	b.w	90015d4a <_ZNK8touchgfx8Drawable10invalidateEv>
    }
90005f6a:	2300      	movs	r3, #0
90005f6c:	461a      	mov	r2, r3
90005f6e:	e7df      	b.n	90005f30 <_ZN20screen_asteroidsView13update_heartsEc+0x14>
        visible = vis;
90005f70:	2301      	movs	r3, #1
90005f72:	f890 2364 	ldrb.w	r2, [r0, #868]	; 0x364
90005f76:	f880 3361 	strb.w	r3, [r0, #865]	; 0x361
90005f7a:	f880 3335 	strb.w	r3, [r0, #821]	; 0x335
90005f7e:	f880 3309 	strb.w	r3, [r0, #777]	; 0x309
90005f82:	2a00      	cmp	r2, #0
90005f84:	d0db      	beq.n	90005f3e <_ZN20screen_asteroidsView13update_heartsEc+0x22>
        {
            Widget::invalidateContent();
90005f86:	f500 704f 	add.w	r0, r0, #828	; 0x33c
            invalidate();
90005f8a:	f00f fede 	bl	90015d4a <_ZNK8touchgfx8Drawable10invalidateEv>
90005f8e:	e7d6      	b.n	90005f3e <_ZN20screen_asteroidsView13update_heartsEc+0x22>
    }
90005f90:	2301      	movs	r3, #1
90005f92:	461a      	mov	r2, r3
90005f94:	e7cc      	b.n	90005f30 <_ZN20screen_asteroidsView13update_heartsEc+0x14>
90005f96:	bd10      	pop	{r4, pc}
        if (alpha > 0)
90005f98:	f890 3364 	ldrb.w	r3, [r0, #868]	; 0x364
90005f9c:	2b00      	cmp	r3, #0
90005f9e:	d0ce      	beq.n	90005f3e <_ZN20screen_asteroidsView13update_heartsEc+0x22>
        if (visible)
90005fa0:	f890 3361 	ldrb.w	r3, [r0, #865]	; 0x361
            Widget::invalidateContent();
90005fa4:	f500 704f 	add.w	r0, r0, #828	; 0x33c
90005fa8:	2b00      	cmp	r3, #0
90005faa:	d1ee      	bne.n	90005f8a <_ZN20screen_asteroidsView13update_heartsEc+0x6e>
90005fac:	e7c7      	b.n	90005f3e <_ZN20screen_asteroidsView13update_heartsEc+0x22>
90005fae:	bf00      	nop

90005fb0 <_ZN20screen_asteroidsViewD0Ev>:
90005fb0:	b570      	push	{r4, r5, r6, lr}
90005fb2:	f242 24f0 	movw	r4, #8944	; 0x22f0
90005fb6:	f242 45a8 	movw	r5, #9384	; 0x24a8
90005fba:	4b10      	ldr	r3, [pc, #64]	; (90005ffc <_ZN20screen_asteroidsViewD0Ev+0x4c>)
90005fbc:	4606      	mov	r6, r0
90005fbe:	4404      	add	r4, r0
90005fc0:	4405      	add	r5, r0
90005fc2:	6003      	str	r3, [r0, #0]
90005fc4:	f855 3d2c 	ldr.w	r3, [r5, #-44]!
90005fc8:	681b      	ldr	r3, [r3, #0]
90005fca:	4628      	mov	r0, r5
90005fcc:	4798      	blx	r3
90005fce:	42a5      	cmp	r5, r4
90005fd0:	d1f8      	bne.n	90005fc4 <_ZN20screen_asteroidsViewD0Ev+0x14>
90005fd2:	f242 1538 	movw	r5, #8504	; 0x2138
90005fd6:	4435      	add	r5, r6
90005fd8:	f854 3d2c 	ldr.w	r3, [r4, #-44]!
90005fdc:	681b      	ldr	r3, [r3, #0]
90005fde:	4620      	mov	r0, r4
90005fe0:	4798      	blx	r3
90005fe2:	42a5      	cmp	r5, r4
90005fe4:	d1f8      	bne.n	90005fd8 <_ZN20screen_asteroidsViewD0Ev+0x28>
90005fe6:	4630      	mov	r0, r6
90005fe8:	f7fe fcc2 	bl	90004970 <_ZN24screen_asteroidsViewBaseD1Ev>
90005fec:	4630      	mov	r0, r6
90005fee:	f242 41a8 	movw	r1, #9384	; 0x24a8
90005ff2:	f01f ff7e 	bl	90025ef2 <_ZdlPvj>
90005ff6:	4630      	mov	r0, r6
90005ff8:	bd70      	pop	{r4, r5, r6, pc}
90005ffa:	bf00      	nop
90005ffc:	90029a54 	.word	0x90029a54

90006000 <_ZN20screen_asteroidsView17new_rock_positionEPN8touchgfx13ScalableImageE>:
{
90006000:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90006004:	460d      	mov	r5, r1
90006006:	4607      	mov	r7, r0
	int random_x = rand() % (480 - rock->getWidth());
90006008:	f020 f882 	bl	90026110 <rand>
9000600c:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
90006010:	f5c3 73f0 	rsb	r3, r3, #480	; 0x1e0
90006014:	fb90 f2f3 	sdiv	r2, r0, r3
90006018:	fb02 0613 	mls	r6, r2, r3, r0
	int random_y = 0 - (rand() % 272);
9000601c:	f020 f878 	bl	90026110 <rand>
90006020:	4b1b      	ldr	r3, [pc, #108]	; (90006090 <_ZN20screen_asteroidsView17new_rock_positionEPN8touchgfx13ScalableImageE+0x90>)
90006022:	ea4f 7ce0 	mov.w	ip, r0, asr #31
90006026:	fb83 2300 	smull	r2, r3, r3, r0
9000602a:	ebcc 1ce3 	rsb	ip, ip, r3, asr #7
	move_rock(rock, random_x, random_y);
9000602e:	683b      	ldr	r3, [r7, #0]
90006030:	f8d3 8068 	ldr.w	r8, [r3, #104]	; 0x68
	int random_y = 0 - (rand() % 272);
90006034:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90006038:	4b16      	ldr	r3, [pc, #88]	; (90006094 <_ZN20screen_asteroidsView17new_rock_positionEPN8touchgfx13ScalableImageE+0x94>)
9000603a:	ebc0 140c 	rsb	r4, r0, ip, lsl #4
	move_rock(rock, random_x, random_y);
9000603e:	4598      	cmp	r8, r3
90006040:	d119      	bne.n	90006076 <_ZN20screen_asteroidsView17new_rock_positionEPN8touchgfx13ScalableImageE+0x76>
	rock->setX(x);
90006042:	682b      	ldr	r3, [r5, #0]
90006044:	b231      	sxth	r1, r6
90006046:	4814      	ldr	r0, [pc, #80]	; (90006098 <_ZN20screen_asteroidsView17new_rock_positionEPN8touchgfx13ScalableImageE+0x98>)
90006048:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000604a:	4282      	cmp	r2, r0
9000604c:	d11c      	bne.n	90006088 <_ZN20screen_asteroidsView17new_rock_positionEPN8touchgfx13ScalableImageE+0x88>
        rect.x = x;
9000604e:	80a9      	strh	r1, [r5, #4]
	rock->setY(y);
90006050:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90006052:	b221      	sxth	r1, r4
90006054:	4a11      	ldr	r2, [pc, #68]	; (9000609c <_ZN20screen_asteroidsView17new_rock_positionEPN8touchgfx13ScalableImageE+0x9c>)
90006056:	4293      	cmp	r3, r2
90006058:	d113      	bne.n	90006082 <_ZN20screen_asteroidsView17new_rock_positionEPN8touchgfx13ScalableImageE+0x82>
        rect.y = y;
9000605a:	80e9      	strh	r1, [r5, #6]
        return parent;
9000605c:	6968      	ldr	r0, [r5, #20]
	rock->getParent()->invalidateContent();
9000605e:	6803      	ldr	r3, [r0, #0]
90006060:	699b      	ldr	r3, [r3, #24]
90006062:	4798      	blx	r3
90006064:	6968      	ldr	r0, [r5, #20]
        visible = vis;
90006066:	2201      	movs	r2, #1
	rock->getParent()->invalidateContent();
90006068:	6803      	ldr	r3, [r0, #0]
9000606a:	f885 2025 	strb.w	r2, [r5, #37]	; 0x25
9000606e:	699b      	ldr	r3, [r3, #24]
}
90006070:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
	rock->getParent()->invalidateContent();
90006074:	4718      	bx	r3
	move_rock(rock, random_x, random_y);
90006076:	4623      	mov	r3, r4
90006078:	4632      	mov	r2, r6
9000607a:	4638      	mov	r0, r7
9000607c:	4629      	mov	r1, r5
9000607e:	47c0      	blx	r8
90006080:	e7f0      	b.n	90006064 <_ZN20screen_asteroidsView17new_rock_positionEPN8touchgfx13ScalableImageE+0x64>
	rock->setY(y);
90006082:	4628      	mov	r0, r5
90006084:	4798      	blx	r3
90006086:	e7e9      	b.n	9000605c <_ZN20screen_asteroidsView17new_rock_positionEPN8touchgfx13ScalableImageE+0x5c>
	rock->setX(x);
90006088:	4628      	mov	r0, r5
9000608a:	4790      	blx	r2
	rock->setY(y);
9000608c:	682b      	ldr	r3, [r5, #0]
9000608e:	e7df      	b.n	90006050 <_ZN20screen_asteroidsView17new_rock_positionEPN8touchgfx13ScalableImageE+0x50>
90006090:	78787879 	.word	0x78787879
90006094:	90005ed1 	.word	0x90005ed1
90006098:	900023fd 	.word	0x900023fd
9000609c:	90002401 	.word	0x90002401

900060a0 <_ZN20screen_asteroidsViewC1Ev>:
screen_asteroidsView::screen_asteroidsView()
900060a0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900060a4:	4607      	mov	r7, r0
900060a6:	f242 1438 	movw	r4, #8504	; 0x2138
900060aa:	f242 25f0 	movw	r5, #8944	; 0x22f0
900060ae:	b082      	sub	sp, #8
900060b0:	f7fe fe48 	bl	90004d44 <_ZN24screen_asteroidsViewBaseC1Ev>
900060b4:	443c      	add	r4, r7
900060b6:	4b6d      	ldr	r3, [pc, #436]	; (9000626c <_ZN20screen_asteroidsViewC1Ev+0x1cc>)
900060b8:	443d      	add	r5, r7
900060ba:	f64f 76ff 	movw	r6, #65535	; 0xffff
900060be:	f04f 38ff 	mov.w	r8, #4294967295
900060c2:	603b      	str	r3, [r7, #0]
900060c4:	4620      	mov	r0, r4
900060c6:	342c      	adds	r4, #44	; 0x2c
900060c8:	a901      	add	r1, sp, #4
900060ca:	f8ad 6004 	strh.w	r6, [sp, #4]
900060ce:	f00b fa25 	bl	9001151c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
900060d2:	42a5      	cmp	r5, r4
900060d4:	d1f6      	bne.n	900060c4 <_ZN20screen_asteroidsViewC1Ev+0x24>
900060d6:	f507 5300 	add.w	r3, r7, #8192	; 0x2000
900060da:	2200      	movs	r2, #0
          touchable(false),
900060dc:	f44f 7480 	mov.w	r4, #256	; 0x100
        : Widget(), alpha(255), color(0)
900060e0:	4963      	ldr	r1, [pc, #396]	; (90006270 <_ZN20screen_asteroidsViewC1Ev+0x1d0>)
900060e2:	25ff      	movs	r5, #255	; 0xff
}
900060e4:	4638      	mov	r0, r7
900060e6:	f883 8316 	strb.w	r8, [r3, #790]	; 0x316
900060ea:	f8a3 4314 	strh.w	r4, [r3, #788]	; 0x314
900060ee:	f8c3 12f0 	str.w	r1, [r3, #752]	; 0x2f0
        : color(col)
900060f2:	f8c3 2318 	str.w	r2, [r3, #792]	; 0x318
900060f6:	f8a3 4340 	strh.w	r4, [r3, #832]	; 0x340
900060fa:	f8c3 131c 	str.w	r1, [r3, #796]	; 0x31c
900060fe:	f8c3 2344 	str.w	r2, [r3, #836]	; 0x344
90006102:	f883 5342 	strb.w	r5, [r3, #834]	; 0x342
        : x(0), y(0), width(0), height(0)
90006106:	e9c3 22bd 	strd	r2, r2, [r3, #756]	; 0x2f4
9000610a:	e9c3 22bf 	strd	r2, r2, [r3, #764]	; 0x2fc
          nextSibling(0),
9000610e:	e9c3 22c1 	strd	r2, r2, [r3, #772]	; 0x304
          cachedAbsX(0),
90006112:	e9c3 22c3 	strd	r2, r2, [r3, #780]	; 0x30c
90006116:	e9c3 22c8 	strd	r2, r2, [r3, #800]	; 0x320
9000611a:	e9c3 22ca 	strd	r2, r2, [r3, #808]	; 0x328
          nextSibling(0),
9000611e:	e9c3 22cc 	strd	r2, r2, [r3, #816]	; 0x330
          cachedAbsX(0),
90006122:	e9c3 22ce 	strd	r2, r2, [r3, #824]	; 0x338
90006126:	e9c3 22d3 	strd	r2, r2, [r3, #844]	; 0x34c
9000612a:	e9c3 22d5 	strd	r2, r2, [r3, #852]	; 0x354
          nextSibling(0),
9000612e:	e9c3 22d7 	strd	r2, r2, [r3, #860]	; 0x35c
          cachedAbsX(0),
90006132:	e9c3 22d9 	strd	r2, r2, [r3, #868]	; 0x364
          touchable(false),
90006136:	f8a3 436c 	strh.w	r4, [r3, #876]	; 0x36c
9000613a:	f8c3 1348 	str.w	r1, [r3, #840]	; 0x348
9000613e:	f883 536e 	strb.w	r5, [r3, #878]	; 0x36e
        : color(col)
90006142:	f8c3 2370 	str.w	r2, [r3, #880]	; 0x370
90006146:	f8a3 4398 	strh.w	r4, [r3, #920]	; 0x398
9000614a:	f8c3 1374 	str.w	r1, [r3, #884]	; 0x374
9000614e:	f883 539a 	strb.w	r5, [r3, #922]	; 0x39a
90006152:	f8c3 239c 	str.w	r2, [r3, #924]	; 0x39c
90006156:	f8a3 43c4 	strh.w	r4, [r3, #964]	; 0x3c4
9000615a:	f8c3 13a0 	str.w	r1, [r3, #928]	; 0x3a0
9000615e:	f883 53c6 	strb.w	r5, [r3, #966]	; 0x3c6
90006162:	f8c3 23c8 	str.w	r2, [r3, #968]	; 0x3c8
        : x(0), y(0), width(0), height(0)
90006166:	e9c3 22de 	strd	r2, r2, [r3, #888]	; 0x378
9000616a:	e9c3 22e0 	strd	r2, r2, [r3, #896]	; 0x380
          nextSibling(0),
9000616e:	e9c3 22e2 	strd	r2, r2, [r3, #904]	; 0x388
          cachedAbsX(0),
90006172:	e9c3 22e4 	strd	r2, r2, [r3, #912]	; 0x390
90006176:	e9c3 22e9 	strd	r2, r2, [r3, #932]	; 0x3a4
9000617a:	e9c3 22eb 	strd	r2, r2, [r3, #940]	; 0x3ac
          nextSibling(0),
9000617e:	e9c3 22ed 	strd	r2, r2, [r3, #948]	; 0x3b4
          cachedAbsX(0),
90006182:	e9c3 22ef 	strd	r2, r2, [r3, #956]	; 0x3bc
90006186:	e9c3 22f4 	strd	r2, r2, [r3, #976]	; 0x3d0
9000618a:	e9c3 22f6 	strd	r2, r2, [r3, #984]	; 0x3d8
          nextSibling(0),
9000618e:	e9c3 22f8 	strd	r2, r2, [r3, #992]	; 0x3e0
          cachedAbsX(0),
90006192:	e9c3 22fa 	strd	r2, r2, [r3, #1000]	; 0x3e8
          touchable(false),
90006196:	f8a3 43f0 	strh.w	r4, [r3, #1008]	; 0x3f0
9000619a:	f8c3 13cc 	str.w	r1, [r3, #972]	; 0x3cc
9000619e:	f883 53f2 	strb.w	r5, [r3, #1010]	; 0x3f2
        : color(col)
900061a2:	f8c3 23f4 	str.w	r2, [r3, #1012]	; 0x3f4
        : x(0), y(0), width(0), height(0)
900061a6:	f8c3 23fc 	str.w	r2, [r3, #1020]	; 0x3fc
900061aa:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
900061ae:	f8c3 2404 	str.w	r2, [r3, #1028]	; 0x404
900061b2:	f8c3 2408 	str.w	r2, [r3, #1032]	; 0x408
          parent(0),
900061b6:	f8c3 240c 	str.w	r2, [r3, #1036]	; 0x40c
          nextSibling(0),
900061ba:	f8c3 2410 	str.w	r2, [r3, #1040]	; 0x410
          nextDrawChainElement(0),
900061be:	f8c3 2414 	str.w	r2, [r3, #1044]	; 0x414
          cachedAbsX(0),
900061c2:	f8c3 2418 	str.w	r2, [r3, #1048]	; 0x418
          touchable(false),
900061c6:	f8a3 441c 	strh.w	r4, [r3, #1052]	; 0x41c
900061ca:	f8c3 13f8 	str.w	r1, [r3, #1016]	; 0x3f8
900061ce:	f883 541e 	strb.w	r5, [r3, #1054]	; 0x41e
        : color(col)
900061d2:	f8c3 2420 	str.w	r2, [r3, #1056]	; 0x420
        : x(0), y(0), width(0), height(0)
900061d6:	f8c3 2428 	str.w	r2, [r3, #1064]	; 0x428
900061da:	f8c3 242c 	str.w	r2, [r3, #1068]	; 0x42c
900061de:	f8c3 2430 	str.w	r2, [r3, #1072]	; 0x430
900061e2:	f8c3 2434 	str.w	r2, [r3, #1076]	; 0x434
          parent(0),
900061e6:	f8c3 2438 	str.w	r2, [r3, #1080]	; 0x438
          nextSibling(0),
900061ea:	f8c3 243c 	str.w	r2, [r3, #1084]	; 0x43c
          nextDrawChainElement(0),
900061ee:	f8c3 2440 	str.w	r2, [r3, #1088]	; 0x440
          cachedAbsX(0),
900061f2:	f8c3 2444 	str.w	r2, [r3, #1092]	; 0x444
          touchable(false),
900061f6:	f8a3 4448 	strh.w	r4, [r3, #1096]	; 0x448
900061fa:	f8c3 1424 	str.w	r1, [r3, #1060]	; 0x424
900061fe:	f883 544a 	strb.w	r5, [r3, #1098]	; 0x44a
        : color(col)
90006202:	f8c3 244c 	str.w	r2, [r3, #1100]	; 0x44c
        : x(0), y(0), width(0), height(0)
90006206:	f8c3 2454 	str.w	r2, [r3, #1108]	; 0x454
9000620a:	f8c3 2458 	str.w	r2, [r3, #1112]	; 0x458
9000620e:	f8c3 245c 	str.w	r2, [r3, #1116]	; 0x45c
90006212:	f8c3 2460 	str.w	r2, [r3, #1120]	; 0x460
          parent(0),
90006216:	f8c3 2464 	str.w	r2, [r3, #1124]	; 0x464
          nextSibling(0),
9000621a:	f8c3 2468 	str.w	r2, [r3, #1128]	; 0x468
          nextDrawChainElement(0),
9000621e:	f8c3 246c 	str.w	r2, [r3, #1132]	; 0x46c
          cachedAbsX(0),
90006222:	f8c3 2470 	str.w	r2, [r3, #1136]	; 0x470
          touchable(false),
90006226:	f8a3 4474 	strh.w	r4, [r3, #1140]	; 0x474
9000622a:	f8a3 44a0 	strh.w	r4, [r3, #1184]	; 0x4a0
9000622e:	f8c3 1450 	str.w	r1, [r3, #1104]	; 0x450
90006232:	f883 5476 	strb.w	r5, [r3, #1142]	; 0x476
        : color(col)
90006236:	f8c3 2478 	str.w	r2, [r3, #1144]	; 0x478
        : x(0), y(0), width(0), height(0)
9000623a:	f8c3 2480 	str.w	r2, [r3, #1152]	; 0x480
9000623e:	f8c3 2484 	str.w	r2, [r3, #1156]	; 0x484
90006242:	f8c3 2488 	str.w	r2, [r3, #1160]	; 0x488
90006246:	f8c3 248c 	str.w	r2, [r3, #1164]	; 0x48c
          parent(0),
9000624a:	f8c3 2490 	str.w	r2, [r3, #1168]	; 0x490
          nextSibling(0),
9000624e:	f8c3 2494 	str.w	r2, [r3, #1172]	; 0x494
          nextDrawChainElement(0),
90006252:	f8c3 2498 	str.w	r2, [r3, #1176]	; 0x498
          cachedAbsX(0),
90006256:	f8c3 249c 	str.w	r2, [r3, #1180]	; 0x49c
9000625a:	f8c3 147c 	str.w	r1, [r3, #1148]	; 0x47c
9000625e:	f883 54a2 	strb.w	r5, [r3, #1186]	; 0x4a2
        : color(col)
90006262:	f8c3 24a4 	str.w	r2, [r3, #1188]	; 0x4a4
90006266:	b002      	add	sp, #8
90006268:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9000626c:	90029a54 	.word	0x90029a54
90006270:	9002a23c 	.word	0x9002a23c

90006274 <_ZN20screen_asteroidsView19move_rock_offscreenEPN8touchgfx13ScalableImageE>:
}

void screen_asteroidsView::move_rock_offscreen(touchgfx::ScalableImage *rock)
{
	move_rock(rock, ROCK_OFFSCREEN_X, ROCK_OFFSCREEN_Y);
90006274:	6802      	ldr	r2, [r0, #0]
90006276:	4b16      	ldr	r3, [pc, #88]	; (900062d0 <_ZN20screen_asteroidsView19move_rock_offscreenEPN8touchgfx13ScalableImageE+0x5c>)
{
90006278:	b570      	push	{r4, r5, r6, lr}
	move_rock(rock, ROCK_OFFSCREEN_X, ROCK_OFFSCREEN_Y);
9000627a:	6e95      	ldr	r5, [r2, #104]	; 0x68
{
9000627c:	460c      	mov	r4, r1
9000627e:	429d      	cmp	r5, r3
90006280:	d119      	bne.n	900062b6 <_ZN20screen_asteroidsView19move_rock_offscreenEPN8touchgfx13ScalableImageE+0x42>
	rock->setX(x);
90006282:	680b      	ldr	r3, [r1, #0]
90006284:	4913      	ldr	r1, [pc, #76]	; (900062d4 <_ZN20screen_asteroidsView19move_rock_offscreenEPN8touchgfx13ScalableImageE+0x60>)
90006286:	6b1a      	ldr	r2, [r3, #48]	; 0x30
90006288:	428a      	cmp	r2, r1
9000628a:	d11c      	bne.n	900062c6 <_ZN20screen_asteroidsView19move_rock_offscreenEPN8touchgfx13ScalableImageE+0x52>
        rect.x = x;
9000628c:	2200      	movs	r2, #0
9000628e:	80a2      	strh	r2, [r4, #4]
	rock->setY(y);
90006290:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90006292:	4a11      	ldr	r2, [pc, #68]	; (900062d8 <_ZN20screen_asteroidsView19move_rock_offscreenEPN8touchgfx13ScalableImageE+0x64>)
90006294:	4293      	cmp	r3, r2
90006296:	d112      	bne.n	900062be <_ZN20screen_asteroidsView19move_rock_offscreenEPN8touchgfx13ScalableImageE+0x4a>
        rect.y = y;
90006298:	2300      	movs	r3, #0
9000629a:	80e3      	strh	r3, [r4, #6]
        return parent;
9000629c:	6960      	ldr	r0, [r4, #20]
	rock->getParent()->invalidateContent();
9000629e:	6803      	ldr	r3, [r0, #0]
900062a0:	699b      	ldr	r3, [r3, #24]
900062a2:	4798      	blx	r3
900062a4:	6960      	ldr	r0, [r4, #20]
        visible = vis;
900062a6:	2200      	movs	r2, #0
	rock->setVisible(false);
	rock->getParent()->invalidateContent();
900062a8:	6803      	ldr	r3, [r0, #0]
900062aa:	f884 2025 	strb.w	r2, [r4, #37]	; 0x25
900062ae:	699b      	ldr	r3, [r3, #24]
}
900062b0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	rock->getParent()->invalidateContent();
900062b4:	4718      	bx	r3
	move_rock(rock, ROCK_OFFSCREEN_X, ROCK_OFFSCREEN_Y);
900062b6:	2300      	movs	r3, #0
900062b8:	461a      	mov	r2, r3
900062ba:	47a8      	blx	r5
900062bc:	e7f2      	b.n	900062a4 <_ZN20screen_asteroidsView19move_rock_offscreenEPN8touchgfx13ScalableImageE+0x30>
	rock->setY(y);
900062be:	2100      	movs	r1, #0
900062c0:	4620      	mov	r0, r4
900062c2:	4798      	blx	r3
900062c4:	e7ea      	b.n	9000629c <_ZN20screen_asteroidsView19move_rock_offscreenEPN8touchgfx13ScalableImageE+0x28>
	rock->setX(x);
900062c6:	2100      	movs	r1, #0
900062c8:	4620      	mov	r0, r4
900062ca:	4790      	blx	r2
	rock->setY(y);
900062cc:	6823      	ldr	r3, [r4, #0]
900062ce:	e7df      	b.n	90006290 <_ZN20screen_asteroidsView19move_rock_offscreenEPN8touchgfx13ScalableImageE+0x1c>
900062d0:	90005ed1 	.word	0x90005ed1
900062d4:	900023fd 	.word	0x900023fd
900062d8:	90002401 	.word	0x90002401

900062dc <_ZN20screen_asteroidsView11setupScreenEv>:
{
900062dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900062e0:	4605      	mov	r5, r0
900062e2:	b085      	sub	sp, #20
900062e4:	f242 1b38 	movw	fp, #8504	; 0x2138
900062e8:	2400      	movs	r4, #0
900062ea:	9001      	str	r0, [sp, #4]
    screen_asteroidsViewBase::setupScreen();
900062ec:	f7fe fa7e 	bl	900047ec <_ZN24screen_asteroidsViewBase11setupScreenEv>
900062f0:	462b      	mov	r3, r5
900062f2:	4e42      	ldr	r6, [pc, #264]	; (900063fc <_ZN20screen_asteroidsView11setupScreenEv+0x120>)
900062f4:	3504      	adds	r5, #4
900062f6:	4f42      	ldr	r7, [pc, #264]	; (90006400 <_ZN20screen_asteroidsView11setupScreenEv+0x124>)
900062f8:	449b      	add	fp, r3
900062fa:	f04f 0902 	mov.w	r9, #2
        setY(y);
900062fe:	f04f 0a4f 	mov.w	sl, #79	; 0x4f
		rocks[i].setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90006302:	46a0      	mov	r8, r4
90006304:	e023      	b.n	9000634e <_ZN20screen_asteroidsView11setupScreenEv+0x72>
90006306:	6b5a      	ldr	r2, [r3, #52]	; 0x34
        rect.x = x;
90006308:	f8ab 1004 	strh.w	r1, [fp, #4]
        rect.y = y;
9000630c:	42ba      	cmp	r2, r7
9000630e:	d133      	bne.n	90006378 <_ZN20screen_asteroidsView11setupScreenEv+0x9c>
90006310:	f8ab a006 	strh.w	sl, [fp, #6]
        setWidth(width);
90006314:	6b9a      	ldr	r2, [r3, #56]	; 0x38
90006316:	4658      	mov	r0, fp
90006318:	2122      	movs	r1, #34	; 0x22
    for(int i = 0; i < ROCK_COUNT; i++) {
9000631a:	3422      	adds	r4, #34	; 0x22
9000631c:	4790      	blx	r2
        setHeight(height);
9000631e:	f8db 2000 	ldr.w	r2, [fp]
90006322:	4658      	mov	r0, fp
90006324:	211d      	movs	r1, #29
90006326:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
90006328:	b2a4      	uxth	r4, r4
9000632a:	4790      	blx	r2
		rocks[i].setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
9000632c:	f8db 2000 	ldr.w	r2, [fp]
90006330:	4658      	mov	r0, fp
90006332:	2100      	movs	r1, #0
90006334:	6e52      	ldr	r2, [r2, #100]	; 0x64
90006336:	4790      	blx	r2
90006338:	4659      	mov	r1, fp
        visible = vis;
9000633a:	f88b 8025 	strb.w	r8, [fp, #37]	; 0x25
9000633e:	4628      	mov	r0, r5
90006340:	f009 fbe6 	bl	9000fb10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    for(int i = 0; i < ROCK_COUNT; i++) {
90006344:	f5b4 7faa 	cmp.w	r4, #340	; 0x154
90006348:	f10b 0b2c 	add.w	fp, fp, #44	; 0x2c
9000634c:	d01a      	beq.n	90006384 <_ZN20screen_asteroidsView11setupScreenEv+0xa8>
    	rocks[i].setBitmap(touchgfx::Bitmap(BITMAP_ASTEROIDS_ROCK_ID));
9000634e:	f8db 2000 	ldr.w	r2, [fp]
90006352:	a903      	add	r1, sp, #12
90006354:	4658      	mov	r0, fp
90006356:	f8ad 900c 	strh.w	r9, [sp, #12]
9000635a:	6e12      	ldr	r2, [r2, #96]	; 0x60
9000635c:	4790      	blx	r2
        setX(x);
9000635e:	f8db 3000 	ldr.w	r3, [fp]
    	rocks[i].setPosition(i*34, 79, 34, 29);
90006362:	b221      	sxth	r1, r4
90006364:	6b1a      	ldr	r2, [r3, #48]	; 0x30
90006366:	42b2      	cmp	r2, r6
90006368:	d0cd      	beq.n	90006306 <_ZN20screen_asteroidsView11setupScreenEv+0x2a>
9000636a:	4658      	mov	r0, fp
9000636c:	4790      	blx	r2
9000636e:	f8db 3000 	ldr.w	r3, [fp]
        setY(y);
90006372:	6b5a      	ldr	r2, [r3, #52]	; 0x34
90006374:	42ba      	cmp	r2, r7
90006376:	d0cb      	beq.n	90006310 <_ZN20screen_asteroidsView11setupScreenEv+0x34>
90006378:	4658      	mov	r0, fp
9000637a:	214f      	movs	r1, #79	; 0x4f
9000637c:	4790      	blx	r2
9000637e:	f8db 3000 	ldr.w	r3, [fp]
90006382:	e7c7      	b.n	90006314 <_ZN20screen_asteroidsView11setupScreenEv+0x38>
90006384:	9b01      	ldr	r3, [sp, #4]
90006386:	f242 24f0 	movw	r4, #8944	; 0x22f0
9000638a:	f242 48a8 	movw	r8, #9384	; 0x24a8
        setX(x);
9000638e:	f04f 0aee 	mov.w	sl, #238	; 0xee
90006392:	441c      	add	r4, r3
        setY(y);
90006394:	f04f 09db 	mov.w	r9, #219	; 0xdb
90006398:	4498      	add	r8, r3
9000639a:	e01c      	b.n	900063d6 <_ZN20screen_asteroidsView11setupScreenEv+0xfa>
9000639c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
        rect.x = x;
9000639e:	f8a4 a004 	strh.w	sl, [r4, #4]
        rect.y = y;
900063a2:	42ba      	cmp	r2, r7
900063a4:	d122      	bne.n	900063ec <_ZN20screen_asteroidsView11setupScreenEv+0x110>
900063a6:	f8a4 9006 	strh.w	r9, [r4, #6]
        setWidth(width);
900063aa:	4620      	mov	r0, r4
900063ac:	2104      	movs	r1, #4
900063ae:	6b9b      	ldr	r3, [r3, #56]	; 0x38
900063b0:	4798      	blx	r3
        setHeight(height);
900063b2:	6823      	ldr	r3, [r4, #0]
900063b4:	4620      	mov	r0, r4
900063b6:	2104      	movs	r1, #4
900063b8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
900063ba:	4798      	blx	r3
        color = newColor;
900063bc:	f04f 32ff 	mov.w	r2, #4294967295
900063c0:	4621      	mov	r1, r4
        visible = vis;
900063c2:	2300      	movs	r3, #0
900063c4:	62a2      	str	r2, [r4, #40]	; 0x28
    for(int i = 0; i < BULLET_COUNT; i++) {
900063c6:	342c      	adds	r4, #44	; 0x2c
900063c8:	4628      	mov	r0, r5
900063ca:	f804 3c07 	strb.w	r3, [r4, #-7]
900063ce:	f009 fb9f 	bl	9000fb10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900063d2:	45a0      	cmp	r8, r4
900063d4:	d00f      	beq.n	900063f6 <_ZN20screen_asteroidsView11setupScreenEv+0x11a>
        setX(x);
900063d6:	6823      	ldr	r3, [r4, #0]
900063d8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
900063da:	42b2      	cmp	r2, r6
900063dc:	d0de      	beq.n	9000639c <_ZN20screen_asteroidsView11setupScreenEv+0xc0>
900063de:	4620      	mov	r0, r4
900063e0:	21ee      	movs	r1, #238	; 0xee
900063e2:	4790      	blx	r2
900063e4:	6823      	ldr	r3, [r4, #0]
        setY(y);
900063e6:	6b5a      	ldr	r2, [r3, #52]	; 0x34
900063e8:	42ba      	cmp	r2, r7
900063ea:	d0dc      	beq.n	900063a6 <_ZN20screen_asteroidsView11setupScreenEv+0xca>
900063ec:	4620      	mov	r0, r4
900063ee:	21db      	movs	r1, #219	; 0xdb
900063f0:	4790      	blx	r2
900063f2:	6823      	ldr	r3, [r4, #0]
900063f4:	e7d9      	b.n	900063aa <_ZN20screen_asteroidsView11setupScreenEv+0xce>
}
900063f6:	b005      	add	sp, #20
900063f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900063fc:	900023fd 	.word	0x900023fd
90006400:	90002401 	.word	0x90002401

90006404 <_ZN27screen_game_selectPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~screen_game_selectPresenter() {}
90006404:	4770      	bx	lr
90006406:	bf00      	nop

90006408 <_ZThn4_N27screen_game_selectPresenterD1Ev>:
90006408:	3804      	subs	r0, #4
9000640a:	4770      	bx	lr

9000640c <_ZN27screen_game_selectPresenter10deactivateEv>:
}

void screen_game_selectPresenter::activate()
{

}
9000640c:	4770      	bx	lr
9000640e:	bf00      	nop

90006410 <_ZN27screen_game_selectPresenterD0Ev>:
90006410:	b510      	push	{r4, lr}
90006412:	4604      	mov	r4, r0
90006414:	2110      	movs	r1, #16
90006416:	f01f fd6c 	bl	90025ef2 <_ZdlPvj>
9000641a:	4620      	mov	r0, r4
9000641c:	bd10      	pop	{r4, pc}
9000641e:	bf00      	nop

90006420 <_ZThn4_N27screen_game_selectPresenterD0Ev>:
90006420:	b500      	push	{lr}
90006422:	3804      	subs	r0, #4
90006424:	b083      	sub	sp, #12
90006426:	2110      	movs	r1, #16
90006428:	9001      	str	r0, [sp, #4]
9000642a:	f01f fd62 	bl	90025ef2 <_ZdlPvj>
9000642e:	9801      	ldr	r0, [sp, #4]
90006430:	b003      	add	sp, #12
90006432:	f85d fb04 	ldr.w	pc, [sp], #4
90006436:	bf00      	nop

90006438 <_ZN27screen_game_selectPresenterC1ER22screen_game_selectView>:
    : view(v)
90006438:	4a06      	ldr	r2, [pc, #24]	; (90006454 <_ZN27screen_game_selectPresenterC1ER22screen_game_selectView+0x1c>)
9000643a:	60c1      	str	r1, [r0, #12]
screen_game_selectPresenter::screen_game_selectPresenter(screen_game_selectView& v)
9000643c:	b410      	push	{r4}
9000643e:	2400      	movs	r4, #0
90006440:	6084      	str	r4, [r0, #8]
    : view(v)
90006442:	f102 0408 	add.w	r4, r2, #8
90006446:	3220      	adds	r2, #32
90006448:	e9c0 4200 	strd	r4, r2, [r0]
}
9000644c:	f85d 4b04 	ldr.w	r4, [sp], #4
90006450:	4770      	bx	lr
90006452:	bf00      	nop
90006454:	90029ac4 	.word	0x90029ac4

90006458 <_ZN22screen_game_selectView14tearDownScreenEv>:
}

void screen_game_selectView::tearDownScreen()
{
    screen_game_selectViewBase::tearDownScreen();
}
90006458:	4770      	bx	lr
9000645a:	bf00      	nop

9000645c <_ZN22screen_game_selectViewD1Ev>:

class screen_game_selectView : public screen_game_selectViewBase
{
public:
    screen_game_selectView();
    virtual ~screen_game_selectView() {}
9000645c:	4b03      	ldr	r3, [pc, #12]	; (9000646c <_ZN22screen_game_selectViewD1Ev+0x10>)
9000645e:	b510      	push	{r4, lr}
90006460:	4604      	mov	r4, r0
90006462:	6003      	str	r3, [r0, #0]
90006464:	f7ff f8f2 	bl	9000564c <_ZN26screen_game_selectViewBaseD1Ev>
90006468:	4620      	mov	r0, r4
9000646a:	bd10      	pop	{r4, pc}
9000646c:	90029b08 	.word	0x90029b08

90006470 <_ZN22screen_game_selectViewD0Ev>:
90006470:	4b06      	ldr	r3, [pc, #24]	; (9000648c <_ZN22screen_game_selectViewD0Ev+0x1c>)
90006472:	b510      	push	{r4, lr}
90006474:	4604      	mov	r4, r0
90006476:	6003      	str	r3, [r0, #0]
90006478:	f7ff f8e8 	bl	9000564c <_ZN26screen_game_selectViewBaseD1Ev>
9000647c:	f44f 71ca 	mov.w	r1, #404	; 0x194
90006480:	4620      	mov	r0, r4
90006482:	f01f fd36 	bl	90025ef2 <_ZdlPvj>
90006486:	4620      	mov	r0, r4
90006488:	bd10      	pop	{r4, pc}
9000648a:	bf00      	nop
9000648c:	90029b08 	.word	0x90029b08

90006490 <_ZN22screen_game_selectViewC1Ev>:
screen_game_selectView::screen_game_selectView()
90006490:	b510      	push	{r4, lr}
90006492:	4604      	mov	r4, r0
90006494:	f7ff f91e 	bl	900056d4 <_ZN26screen_game_selectViewBaseC1Ev>
90006498:	4b01      	ldr	r3, [pc, #4]	; (900064a0 <_ZN22screen_game_selectViewC1Ev+0x10>)
}
9000649a:	4620      	mov	r0, r4
screen_game_selectView::screen_game_selectView()
9000649c:	6023      	str	r3, [r4, #0]
}
9000649e:	bd10      	pop	{r4, pc}
900064a0:	90029b08 	.word	0x90029b08

900064a4 <_ZN22screen_game_selectView11setupScreenEv>:
    screen_game_selectViewBase::setupScreen();
900064a4:	f7ff b8d4 	b.w	90005650 <_ZN26screen_game_selectViewBase11setupScreenEv>

900064a8 <FT5336_GetCapabilities>:
{
  /* Prevent unused argument(s) compilation warning */
  (void)(pObj);

  /* Store component's capabilities */
  Capabilities->MultiTouch = 1;
900064a8:	f240 1c01 	movw	ip, #257	; 0x101
  Capabilities->Gesture    = 1;
  Capabilities->MaxTouch   = FT5336_MAX_NB_TOUCH;
900064ac:	2005      	movs	r0, #5
  Capabilities->MaxXl      = FT5336_MAX_X_LENGTH;
900064ae:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
  Capabilities->MaxYl      = FT5336_MAX_Y_LENGTH;
900064b2:	f44f 7388 	mov.w	r3, #272	; 0x110
  Capabilities->MaxTouch   = FT5336_MAX_NB_TOUCH;
900064b6:	7088      	strb	r0, [r1, #2]

  return FT5336_OK;
}
900064b8:	2000      	movs	r0, #0
  Capabilities->MultiTouch = 1;
900064ba:	f8a1 c000 	strh.w	ip, [r1]
  Capabilities->MaxYl      = FT5336_MAX_Y_LENGTH;
900064be:	e9c1 2301 	strd	r2, r3, [r1, #4]
}
900064c2:	4770      	bx	lr

900064c4 <FT5336_DeInit>:
  */
int32_t FT5336_DeInit(FT5336_Object_t *pObj)
{
  int32_t ret = FT5336_OK;

  if(pObj->IsInitialized == 1U)
900064c4:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
900064c8:	2b01      	cmp	r3, #1
900064ca:	d102      	bne.n	900064d2 <FT5336_DeInit+0xe>
  {
    pObj->IsInitialized = 0;
900064cc:	2300      	movs	r3, #0
900064ce:	f880 3024 	strb.w	r3, [r0, #36]	; 0x24
  }

  return ret;
}
900064d2:	2000      	movs	r0, #0
900064d4:	4770      	bx	lr
900064d6:	bf00      	nop

900064d8 <FT5336_ITStatus>:
  /* Prevent unused argument(s) compilation warning */
  (void)(pObj);

  /* Always return FT5336_OK as feature not applicable to FT5336 */
  return FT5336_OK;
}
900064d8:	2000      	movs	r0, #0
900064da:	4770      	bx	lr

900064dc <ReadRegWrap>:
  * @param  pData: The target register value to be written
  * @param  Length: buffer size to be written
  * @retval error status
  */
static int32_t ReadRegWrap(void *handle, uint8_t Reg, uint8_t* pData, uint16_t Length)
{
900064dc:	b410      	push	{r4}
  FT5336_Object_t *pObj = (FT5336_Object_t *)handle;

  return pObj->IO.ReadReg(pObj->IO.Address, Reg, pData, Length);
900064de:	6904      	ldr	r4, [r0, #16]
900064e0:	8900      	ldrh	r0, [r0, #8]
900064e2:	46a4      	mov	ip, r4
}
900064e4:	f85d 4b04 	ldr.w	r4, [sp], #4
  return pObj->IO.ReadReg(pObj->IO.Address, Reg, pData, Length);
900064e8:	4760      	bx	ip
900064ea:	bf00      	nop

900064ec <WriteRegWrap>:
  * @param  pData: The target register value to be written
  * @param  Length: buffer size to be written
  * @retval error status
  */
static int32_t WriteRegWrap(void *handle, uint8_t Reg, uint8_t* pData, uint16_t Length)
{
900064ec:	b410      	push	{r4}
  FT5336_Object_t *pObj = (FT5336_Object_t *)handle;

  return pObj->IO.WriteReg(pObj->IO.Address, Reg, pData, Length);
900064ee:	68c4      	ldr	r4, [r0, #12]
900064f0:	8900      	ldrh	r0, [r0, #8]
900064f2:	46a4      	mov	ip, r4
}
900064f4:	f85d 4b04 	ldr.w	r4, [sp], #4
  return pObj->IO.WriteReg(pObj->IO.Address, Reg, pData, Length);
900064f8:	4760      	bx	ip
900064fa:	bf00      	nop

900064fc <FT5336_GestureConfig>:
{
900064fc:	b570      	push	{r4, r5, r6, lr}
  ret = ft5336_radian_value(&pObj->Ctx, (uint8_t)GestureInit->Radian);
900064fe:	f100 0518 	add.w	r5, r0, #24
{
90006502:	460e      	mov	r6, r1
  ret = ft5336_radian_value(&pObj->Ctx, (uint8_t)GestureInit->Radian);
90006504:	7809      	ldrb	r1, [r1, #0]
90006506:	4628      	mov	r0, r5
90006508:	f000 f96c 	bl	900067e4 <ft5336_radian_value>
9000650c:	4604      	mov	r4, r0
  ret += ft5336_offset_left_right(&pObj->Ctx, (uint8_t)GestureInit->OffsetLeftRight);
9000650e:	7931      	ldrb	r1, [r6, #4]
90006510:	4628      	mov	r0, r5
90006512:	f000 f975 	bl	90006800 <ft5336_offset_left_right>
90006516:	4404      	add	r4, r0
  ret += ft5336_offset_up_down(&pObj->Ctx, (uint8_t)GestureInit->OffsetUpDown);
90006518:	7a31      	ldrb	r1, [r6, #8]
9000651a:	4628      	mov	r0, r5
9000651c:	f000 f97e 	bl	9000681c <ft5336_offset_up_down>
90006520:	4404      	add	r4, r0
  ret += ft5336_disatnce_left_right(&pObj->Ctx, (uint8_t)GestureInit->DistanceLeftRight);
90006522:	7b31      	ldrb	r1, [r6, #12]
90006524:	4628      	mov	r0, r5
90006526:	f000 f987 	bl	90006838 <ft5336_disatnce_left_right>
  ret += ft5336_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
9000652a:	7c31      	ldrb	r1, [r6, #16]
  ret += ft5336_disatnce_left_right(&pObj->Ctx, (uint8_t)GestureInit->DistanceLeftRight);
9000652c:	4404      	add	r4, r0
  ret += ft5336_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
9000652e:	4628      	mov	r0, r5
90006530:	f000 f990 	bl	90006854 <ft5336_distance_up_down>
90006534:	4603      	mov	r3, r0
  ret += ft5336_distance_zoom(&pObj->Ctx, (uint8_t)GestureInit->DistanceZoom);
90006536:	7d31      	ldrb	r1, [r6, #20]
90006538:	4628      	mov	r0, r5
  ret += ft5336_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
9000653a:	441c      	add	r4, r3
  ret += ft5336_distance_zoom(&pObj->Ctx, (uint8_t)GestureInit->DistanceZoom);
9000653c:	f000 f998 	bl	90006870 <ft5336_distance_zoom>
  if(ret != FT5336_OK)
90006540:	42c4      	cmn	r4, r0
}
90006542:	bf14      	ite	ne
90006544:	f04f 30ff 	movne.w	r0, #4294967295
90006548:	2000      	moveq	r0, #0
9000654a:	bd70      	pop	{r4, r5, r6, pc}

9000654c <FT5336_ReadID>:
  return ft5336_chip_id(&pObj->Ctx, (uint8_t *)Id);
9000654c:	3018      	adds	r0, #24
9000654e:	f000 b9ab 	b.w	900068a8 <ft5336_chip_id>
90006552:	bf00      	nop

90006554 <FT5336_GetState>:
{
90006554:	b530      	push	{r4, r5, lr}
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
90006556:	f100 0518 	add.w	r5, r0, #24
{
9000655a:	b083      	sub	sp, #12
9000655c:	460c      	mov	r4, r1
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
9000655e:	4628      	mov	r0, r5
90006560:	a901      	add	r1, sp, #4
90006562:	f000 f931 	bl	900067c8 <ft5336_td_status>
90006566:	bb10      	cbnz	r0, 900065ae <FT5336_GetState+0x5a>
    if(nb_touch > FT5336_MAX_NB_TOUCH)
90006568:	f89d 3004 	ldrb.w	r3, [sp, #4]
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
9000656c:	2b05      	cmp	r3, #5
9000656e:	bf94      	ite	ls
90006570:	4619      	movls	r1, r3
90006572:	2100      	movhi	r1, #0
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
90006574:	2304      	movs	r3, #4
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
90006576:	6021      	str	r1, [r4, #0]
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
90006578:	4628      	mov	r0, r5
9000657a:	2103      	movs	r1, #3
9000657c:	eb0d 0203 	add.w	r2, sp, r3
90006580:	f000 f910 	bl	900067a4 <ft5336_read_reg>
90006584:	b9b0      	cbnz	r0, 900065b4 <FT5336_GetState+0x60>
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
90006586:	f89d 2004 	ldrb.w	r2, [sp, #4]
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
9000658a:	f89d 3006 	ldrb.w	r3, [sp, #6]
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
9000658e:	0212      	lsls	r2, r2, #8
90006590:	f89d 1005 	ldrb.w	r1, [sp, #5]
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
90006594:	021b      	lsls	r3, r3, #8
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
90006596:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
9000659a:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
9000659e:	430a      	orrs	r2, r1
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
900065a0:	f89d 1007 	ldrb.w	r1, [sp, #7]
900065a4:	430b      	orrs	r3, r1
900065a6:	e9c4 2301 	strd	r2, r3, [r4, #4]
}
900065aa:	b003      	add	sp, #12
900065ac:	bd30      	pop	{r4, r5, pc}
900065ae:	f04f 31ff 	mov.w	r1, #4294967295
900065b2:	e7df      	b.n	90006574 <FT5336_GetState+0x20>
    ret = FT5336_ERROR;
900065b4:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
900065b8:	e7f7      	b.n	900065aa <FT5336_GetState+0x56>
900065ba:	bf00      	nop

900065bc <FT5336_GetMultiTouchState>:
{
900065bc:	b570      	push	{r4, r5, r6, lr}
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
900065be:	f100 0518 	add.w	r5, r0, #24
{
900065c2:	b088      	sub	sp, #32
900065c4:	460c      	mov	r4, r1
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
900065c6:	4628      	mov	r0, r5
900065c8:	4669      	mov	r1, sp
900065ca:	f000 f8fd 	bl	900067c8 <ft5336_td_status>
900065ce:	2800      	cmp	r0, #0
900065d0:	f040 809a 	bne.w	90006708 <FT5336_GetMultiTouchState+0x14c>
    if(nb_touch > FT5336_MAX_NB_TOUCH)
900065d4:	f89d 3000 	ldrb.w	r3, [sp]
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
900065d8:	2b05      	cmp	r3, #5
900065da:	bf94      	ite	ls
900065dc:	4619      	movls	r1, r3
900065de:	2100      	movhi	r1, #0
900065e0:	6021      	str	r1, [r4, #0]
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
900065e2:	231e      	movs	r3, #30
900065e4:	466a      	mov	r2, sp
900065e6:	4628      	mov	r0, r5
900065e8:	2103      	movs	r1, #3
900065ea:	f000 f8db 	bl	900067a4 <ft5336_read_reg>
900065ee:	2800      	cmp	r0, #0
900065f0:	f040 808d 	bne.w	9000670e <FT5336_GetMultiTouchState+0x152>
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900065f4:	f89d 1000 	ldrb.w	r1, [sp]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900065f8:	f89d 3002 	ldrb.w	r3, [sp, #2]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900065fc:	020a      	lsls	r2, r1, #8
900065fe:	f89d 5001 	ldrb.w	r5, [sp, #1]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006602:	021b      	lsls	r3, r3, #8
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006604:	f89d c007 	ldrb.w	ip, [sp, #7]
90006608:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
9000660c:	0989      	lsrs	r1, r1, #6
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
9000660e:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006612:	f89d 6011 	ldrb.w	r6, [sp, #17]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006616:	432a      	orrs	r2, r5
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006618:	f89d 5003 	ldrb.w	r5, [sp, #3]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
9000661c:	6421      	str	r1, [r4, #64]	; 0x40
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
9000661e:	0936      	lsrs	r6, r6, #4
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006620:	432b      	orrs	r3, r5
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006622:	6062      	str	r2, [r4, #4]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006624:	f89d 2004 	ldrb.w	r2, [sp, #4]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006628:	61a3      	str	r3, [r4, #24]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
9000662a:	f89d 3005 	ldrb.w	r3, [sp, #5]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
9000662e:	f89d 1006 	ldrb.w	r1, [sp, #6]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006632:	091b      	lsrs	r3, r3, #4
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006634:	62e2      	str	r2, [r4, #44]	; 0x2c
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006636:	f89d 200b 	ldrb.w	r2, [sp, #11]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
9000663a:	020d      	lsls	r5, r1, #8
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
9000663c:	6563      	str	r3, [r4, #84]	; 0x54
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
9000663e:	0989      	lsrs	r1, r1, #6
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006640:	f89d 300c 	ldrb.w	r3, [sp, #12]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006644:	0912      	lsrs	r2, r2, #4
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006646:	6461      	str	r1, [r4, #68]	; 0x44
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006648:	f405 6570 	and.w	r5, r5, #3840	; 0xf00
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
9000664c:	f89d 100a 	ldrb.w	r1, [sp, #10]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006650:	65a2      	str	r2, [r4, #88]	; 0x58
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006652:	021a      	lsls	r2, r3, #8
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006654:	6321      	str	r1, [r4, #48]	; 0x30
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006656:	ea45 050c 	orr.w	r5, r5, ip
9000665a:	f402 6170 	and.w	r1, r2, #3840	; 0xf00
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
9000665e:	f89d 2008 	ldrb.w	r2, [sp, #8]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006662:	099b      	lsrs	r3, r3, #6
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006664:	60a5      	str	r5, [r4, #8]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006666:	0212      	lsls	r2, r2, #8
90006668:	f89d 5009 	ldrb.w	r5, [sp, #9]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
9000666c:	64a3      	str	r3, [r4, #72]	; 0x48
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
9000666e:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006672:	f89d 3010 	ldrb.w	r3, [sp, #16]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006676:	432a      	orrs	r2, r5
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006678:	6363      	str	r3, [r4, #52]	; 0x34
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
9000667a:	f89d 300e 	ldrb.w	r3, [sp, #14]
9000667e:	61e2      	str	r2, [r4, #28]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006680:	f89d 200d 	ldrb.w	r2, [sp, #13]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006684:	021b      	lsls	r3, r3, #8
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006686:	430a      	orrs	r2, r1
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006688:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
9000668c:	60e2      	str	r2, [r4, #12]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
9000668e:	f89d 200f 	ldrb.w	r2, [sp, #15]
90006692:	4313      	orrs	r3, r2
90006694:	6223      	str	r3, [r4, #32]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006696:	65e6      	str	r6, [r4, #92]	; 0x5c
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006698:	f89d 1012 	ldrb.w	r1, [sp, #18]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
9000669c:	f89d 3014 	ldrb.w	r3, [sp, #20]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900066a0:	020a      	lsls	r2, r1, #8
900066a2:	f89d 5013 	ldrb.w	r5, [sp, #19]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900066a6:	021b      	lsls	r3, r3, #8
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900066a8:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
900066ac:	0989      	lsrs	r1, r1, #6
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900066ae:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900066b2:	432a      	orrs	r2, r5
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900066b4:	f89d 5015 	ldrb.w	r5, [sp, #21]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
900066b8:	64e1      	str	r1, [r4, #76]	; 0x4c
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900066ba:	432b      	orrs	r3, r5
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900066bc:	f89d 1018 	ldrb.w	r1, [sp, #24]
900066c0:	6122      	str	r2, [r4, #16]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900066c2:	6263      	str	r3, [r4, #36]	; 0x24
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900066c4:	020b      	lsls	r3, r1, #8
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
900066c6:	f89d 2016 	ldrb.w	r2, [sp, #22]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
900066ca:	0989      	lsrs	r1, r1, #6
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
900066cc:	f89d 5017 	ldrb.w	r5, [sp, #23]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
900066d0:	63a2      	str	r2, [r4, #56]	; 0x38
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900066d2:	f403 6270 	and.w	r2, r3, #3840	; 0xf00
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
900066d6:	f89d 301d 	ldrb.w	r3, [sp, #29]
900066da:	092d      	lsrs	r5, r5, #4
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
900066dc:	6521      	str	r1, [r4, #80]	; 0x50
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
900066de:	091b      	lsrs	r3, r3, #4
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
900066e0:	f89d 101c 	ldrb.w	r1, [sp, #28]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
900066e4:	6625      	str	r5, [r4, #96]	; 0x60
900066e6:	6663      	str	r3, [r4, #100]	; 0x64
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900066e8:	f89d 301a 	ldrb.w	r3, [sp, #26]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
900066ec:	63e1      	str	r1, [r4, #60]	; 0x3c
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900066ee:	021b      	lsls	r3, r3, #8
900066f0:	f89d 101b 	ldrb.w	r1, [sp, #27]
900066f4:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
900066f8:	430b      	orrs	r3, r1
900066fa:	62a3      	str	r3, [r4, #40]	; 0x28
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900066fc:	f89d 3019 	ldrb.w	r3, [sp, #25]
90006700:	4313      	orrs	r3, r2
90006702:	6163      	str	r3, [r4, #20]
}
90006704:	b008      	add	sp, #32
90006706:	bd70      	pop	{r4, r5, r6, pc}
90006708:	f04f 31ff 	mov.w	r1, #4294967295
9000670c:	e768      	b.n	900065e0 <FT5336_GetMultiTouchState+0x24>
    ret = FT5336_ERROR;
9000670e:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
90006712:	e7f7      	b.n	90006704 <FT5336_GetMultiTouchState+0x148>

90006714 <FT5336_GetGesture>:
  return ft5336_gest_id(&pObj->Ctx, GestureId);
90006714:	3018      	adds	r0, #24
90006716:	f000 b84d 	b.w	900067b4 <ft5336_gest_id>
9000671a:	bf00      	nop

9000671c <FT5336_EnableIT>:
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_TRIGGER);
9000671c:	2101      	movs	r1, #1
9000671e:	3018      	adds	r0, #24
90006720:	f000 b8b4 	b.w	9000688c <ft5336_g_mode>

90006724 <FT5336_DisableIT>:
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_POLLING);
90006724:	2100      	movs	r1, #0
90006726:	3018      	adds	r0, #24
90006728:	f000 b8b0 	b.w	9000688c <ft5336_g_mode>

9000672c <FT5336_Init>:
{
9000672c:	b570      	push	{r4, r5, r6, lr}
  if(pObj->IsInitialized == 0U)
9000672e:	f890 5024 	ldrb.w	r5, [r0, #36]	; 0x24
90006732:	b98d      	cbnz	r5, 90006758 <FT5336_Init+0x2c>
    pObj->IO.Init();
90006734:	4606      	mov	r6, r0
90006736:	4604      	mov	r4, r0
90006738:	f856 3b18 	ldr.w	r3, [r6], #24
9000673c:	4798      	blx	r3
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_POLLING);
9000673e:	4629      	mov	r1, r5
90006740:	4630      	mov	r0, r6
90006742:	f000 f8a3 	bl	9000688c <ft5336_g_mode>
  if(ret != FT5336_OK)
90006746:	3800      	subs	r0, #0
    pObj->IsInitialized = 1;
90006748:	f04f 0301 	mov.w	r3, #1
  if(ret != FT5336_OK)
9000674c:	bf18      	it	ne
9000674e:	2001      	movne	r0, #1
    pObj->IsInitialized = 1;
90006750:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
  if(ret != FT5336_OK)
90006754:	4240      	negs	r0, r0
}
90006756:	bd70      	pop	{r4, r5, r6, pc}
  int32_t ret = FT5336_OK;
90006758:	2000      	movs	r0, #0
}
9000675a:	bd70      	pop	{r4, r5, r6, pc}

9000675c <FT5336_ClearIT>:
9000675c:	2000      	movs	r0, #0
9000675e:	4770      	bx	lr

90006760 <FT5336_RegisterBusIO>:
  if (pObj == NULL)
90006760:	b1c0      	cbz	r0, 90006794 <FT5336_RegisterBusIO+0x34>
    pObj->IO.Address   = pIO->Address;
90006762:	890a      	ldrh	r2, [r1, #8]
{
90006764:	b430      	push	{r4, r5}
    pObj->IO.DeInit    = pIO->DeInit;
90006766:	e9d1 3400 	ldrd	r3, r4, [r1]
    pObj->IO.Address   = pIO->Address;
9000676a:	8102      	strh	r2, [r0, #8]
    pObj->IO.DeInit    = pIO->DeInit;
9000676c:	e9c0 3400 	strd	r3, r4, [r0]
    pObj->IO.WriteReg  = pIO->WriteReg;
90006770:	694a      	ldr	r2, [r1, #20]
90006772:	e9d1 5403 	ldrd	r5, r4, [r1, #12]
    pObj->Ctx.ReadReg  = ReadRegWrap;
90006776:	4909      	ldr	r1, [pc, #36]	; (9000679c <FT5336_RegisterBusIO+0x3c>)
    pObj->IO.WriteReg  = pIO->WriteReg;
90006778:	60c5      	str	r5, [r0, #12]
9000677a:	e9c0 4204 	strd	r4, r2, [r0, #16]
    pObj->Ctx.WriteReg = WriteRegWrap;
9000677e:	4a08      	ldr	r2, [pc, #32]	; (900067a0 <FT5336_RegisterBusIO+0x40>)
    pObj->Ctx.handle   = pObj;
90006780:	e9c0 1007 	strd	r1, r0, [r0, #28]
    pObj->Ctx.WriteReg = WriteRegWrap;
90006784:	6182      	str	r2, [r0, #24]
    if(pObj->IO.Init != NULL)
90006786:	b10b      	cbz	r3, 9000678c <FT5336_RegisterBusIO+0x2c>
}
90006788:	bc30      	pop	{r4, r5}
      ret = pObj->IO.Init();
9000678a:	4718      	bx	r3
}
9000678c:	f04f 30ff 	mov.w	r0, #4294967295
90006790:	bc30      	pop	{r4, r5}
90006792:	4770      	bx	lr
90006794:	f04f 30ff 	mov.w	r0, #4294967295
90006798:	4770      	bx	lr
9000679a:	bf00      	nop
9000679c:	900064dd 	.word	0x900064dd
900067a0:	900064ed 	.word	0x900064ed

900067a4 <ft5336_read_reg>:
  * @param  pdata pointer to data to be read
  * @param  length Length of data to read   
  * @retval Component status
  */
int32_t ft5336_read_reg(ft5336_ctx_t *ctx, uint8_t reg, uint8_t* pdata, uint16_t length)
{
900067a4:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
900067a6:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
900067aa:	46a4      	mov	ip, r4
}
900067ac:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
900067b0:	4760      	bx	ip
900067b2:	bf00      	nop

900067b4 <ft5336_gest_id>:
  * @param  ctx Component context 
  * @param  value pointer to the value of FT5336_GEST_ID_REG register
  * @retval Component status
  */
int32_t  ft5336_gest_id(ft5336_ctx_t *ctx, uint8_t *value)
{
900067b4:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
900067b6:	2301      	movs	r3, #1
{
900067b8:	460a      	mov	r2, r1
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
900067ba:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
900067be:	4619      	mov	r1, r3
900067c0:	46a4      	mov	ip, r4
  return ft5336_read_reg(ctx, FT5336_GEST_ID_REG, (uint8_t *)value, 1);
}
900067c2:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
900067c6:	4760      	bx	ip

900067c8 <ft5336_td_status>:
  * @param  ctx Component context 
  * @param  value pointer to the value of Touch Data Status register
  * @retval Component status
  */
int32_t  ft5336_td_status(ft5336_ctx_t *ctx, uint8_t *value)
{
900067c8:	b538      	push	{r3, r4, r5, lr}
900067ca:	460c      	mov	r4, r1
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
900067cc:	2301      	movs	r3, #1
900067ce:	2102      	movs	r1, #2
900067d0:	4622      	mov	r2, r4
900067d2:	e9d0 5001 	ldrd	r5, r0, [r0, #4]
900067d6:	47a8      	blx	r5
  int32_t ret;
  
  ret = ft5336_read_reg(ctx, FT5336_TD_STAT_REG, (uint8_t *)value, 1);
  
  if(ret == 0)
900067d8:	b918      	cbnz	r0, 900067e2 <ft5336_td_status+0x1a>
  {
    *value &= FT5336_TD_STATUS_BIT_MASK; 
900067da:	7823      	ldrb	r3, [r4, #0]
900067dc:	f003 030f 	and.w	r3, r3, #15
900067e0:	7023      	strb	r3, [r4, #0]
    *value = *value >> FT5336_TD_STATUS_BIT_POSITION; 
  }
  
  return ret;
}
900067e2:	bd38      	pop	{r3, r4, r5, pc}

900067e4 <ft5336_radian_value>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_RADIAN_VALUE_REG register
  * @retval Component status
  */
int32_t  ft5336_radian_value(ft5336_ctx_t *ctx, uint8_t value)
{
900067e4:	b510      	push	{r4, lr}
900067e6:	460c      	mov	r4, r1
900067e8:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
900067ea:	2301      	movs	r3, #1
900067ec:	2191      	movs	r1, #145	; 0x91
{
900067ee:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
900067f2:	f10d 0207 	add.w	r2, sp, #7
900067f6:	6804      	ldr	r4, [r0, #0]
900067f8:	6880      	ldr	r0, [r0, #8]
900067fa:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_RADIAN_VALUE_REG, &value, 1);
}
900067fc:	b002      	add	sp, #8
900067fe:	bd10      	pop	{r4, pc}

90006800 <ft5336_offset_left_right>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_OFFSET_LR_REG register
  * @retval Component status
  */
int32_t  ft5336_offset_left_right(ft5336_ctx_t *ctx, uint8_t value)
{
90006800:	b510      	push	{r4, lr}
90006802:	460c      	mov	r4, r1
90006804:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006806:	2301      	movs	r3, #1
90006808:	2192      	movs	r1, #146	; 0x92
{
9000680a:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
9000680e:	f10d 0207 	add.w	r2, sp, #7
90006812:	6804      	ldr	r4, [r0, #0]
90006814:	6880      	ldr	r0, [r0, #8]
90006816:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_OFFSET_LR_REG, &value, 1);
}
90006818:	b002      	add	sp, #8
9000681a:	bd10      	pop	{r4, pc}

9000681c <ft5336_offset_up_down>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_OFFSET_UD_REG register
  * @retval Component status
  */
int32_t  ft5336_offset_up_down(ft5336_ctx_t *ctx, uint8_t value)
{
9000681c:	b510      	push	{r4, lr}
9000681e:	460c      	mov	r4, r1
90006820:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006822:	2301      	movs	r3, #1
90006824:	2193      	movs	r1, #147	; 0x93
{
90006826:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
9000682a:	f10d 0207 	add.w	r2, sp, #7
9000682e:	6804      	ldr	r4, [r0, #0]
90006830:	6880      	ldr	r0, [r0, #8]
90006832:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_OFFSET_UD_REG, &value, 1);
}
90006834:	b002      	add	sp, #8
90006836:	bd10      	pop	{r4, pc}

90006838 <ft5336_disatnce_left_right>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_LR_REG register
  * @retval Component status
  */
int32_t  ft5336_disatnce_left_right(ft5336_ctx_t *ctx, uint8_t value)
{
90006838:	b510      	push	{r4, lr}
9000683a:	460c      	mov	r4, r1
9000683c:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
9000683e:	2301      	movs	r3, #1
90006840:	2194      	movs	r1, #148	; 0x94
{
90006842:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006846:	f10d 0207 	add.w	r2, sp, #7
9000684a:	6804      	ldr	r4, [r0, #0]
9000684c:	6880      	ldr	r0, [r0, #8]
9000684e:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_DISTANCE_LR_REG, &value, 1);
}
90006850:	b002      	add	sp, #8
90006852:	bd10      	pop	{r4, pc}

90006854 <ft5336_distance_up_down>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_UD_REG register
  * @retval Component status
  */
int32_t  ft5336_distance_up_down(ft5336_ctx_t *ctx, uint8_t value)
{
90006854:	b510      	push	{r4, lr}
90006856:	460c      	mov	r4, r1
90006858:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
9000685a:	2301      	movs	r3, #1
9000685c:	2195      	movs	r1, #149	; 0x95
{
9000685e:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006862:	f10d 0207 	add.w	r2, sp, #7
90006866:	6804      	ldr	r4, [r0, #0]
90006868:	6880      	ldr	r0, [r0, #8]
9000686a:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_DISTANCE_UD_REG, &value, 1);
}
9000686c:	b002      	add	sp, #8
9000686e:	bd10      	pop	{r4, pc}

90006870 <ft5336_distance_zoom>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_ZOOM_REG register
  * @retval Component status
  */
int32_t  ft5336_distance_zoom(ft5336_ctx_t *ctx, uint8_t value)
{
90006870:	b510      	push	{r4, lr}
90006872:	460c      	mov	r4, r1
90006874:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006876:	2301      	movs	r3, #1
90006878:	2196      	movs	r1, #150	; 0x96
{
9000687a:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
9000687e:	f10d 0207 	add.w	r2, sp, #7
90006882:	6804      	ldr	r4, [r0, #0]
90006884:	6880      	ldr	r0, [r0, #8]
90006886:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_DISTANCE_ZOOM_REG, &value, 1);
}
90006888:	b002      	add	sp, #8
9000688a:	bd10      	pop	{r4, pc}

9000688c <ft5336_g_mode>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_GMODE_REG register
  * @retval Component status
  */
int32_t  ft5336_g_mode(ft5336_ctx_t *ctx, uint8_t value)
{
9000688c:	b510      	push	{r4, lr}
9000688e:	460c      	mov	r4, r1
90006890:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006892:	2301      	movs	r3, #1
90006894:	21a4      	movs	r1, #164	; 0xa4
{
90006896:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
9000689a:	f10d 0207 	add.w	r2, sp, #7
9000689e:	6804      	ldr	r4, [r0, #0]
900068a0:	6880      	ldr	r0, [r0, #8]
900068a2:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_GMODE_REG, &value, 1);
}
900068a4:	b002      	add	sp, #8
900068a6:	bd10      	pop	{r4, pc}

900068a8 <ft5336_chip_id>:
  * @param  ctx Component context 
  * @param  value Pointer to FT5336_CHIP_ID_REG register value
  * @retval Component status
  */
int32_t  ft5336_chip_id(ft5336_ctx_t *ctx, uint8_t *value)
{
900068a8:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
900068aa:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
{
900068ae:	460a      	mov	r2, r1
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
900068b0:	2301      	movs	r3, #1
900068b2:	46a4      	mov	ip, r4
900068b4:	21a8      	movs	r1, #168	; 0xa8
    *value &= FT5336_CHIP_ID_BIT_MASK; 
    *value = *value >> FT5336_CHIP_ID_BIT_POSITION; 
  }
  
  return ret;
}
900068b6:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
900068ba:	4760      	bx	ip

900068bc <MT48LC4M32B2_Init>:
  * @param  Ctx : Component object pointer
  * @param  pRegMode : Pointer to Register Mode stucture
  * @retval error status
  */
int32_t MT48LC4M32B2_Init(SDRAM_HandleTypeDef *Ctx, MT48LC4M32B2_Context_t *pRegMode) 
{
900068bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  int32_t ret = MT48LC4M32B2_ERROR;
  
  /* Step 1: Configure a clock configuration enable command */
  if(MT48LC4M32B2_ClockEnable(Ctx, pRegMode->TargetBank) == MT48LC4M32B2_OK)
900068be:	680b      	ldr	r3, [r1, #0]
{
900068c0:	460d      	mov	r5, r1
  * @param  Interface : Could be FMC_SDRAM_CMD_TARGET_BANK1 or FMC_SDRAM_CMD_TARGET_BANK2
  * @retval error status
  */
int32_t MT48LC4M32B2_ClockEnable(SDRAM_HandleTypeDef *Ctx, uint32_t Interface) 
{
  Command.CommandMode            = MT48LC4M32B2_CLK_ENABLE_CMD;
900068c2:	4c2a      	ldr	r4, [pc, #168]	; (9000696c <MT48LC4M32B2_Init+0xb0>)
  Command.CommandTarget          = Interface;
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
900068c4:	f64f 72ff 	movw	r2, #65535	; 0xffff
{
900068c8:	4607      	mov	r7, r0
  Command.CommandTarget          = Interface;
900068ca:	6063      	str	r3, [r4, #4]
  Command.ModeRegisterDefinition = 0;
900068cc:	2300      	movs	r3, #0
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
900068ce:	4621      	mov	r1, r4
  Command.ModeRegisterDefinition = 0;
900068d0:	60e3      	str	r3, [r4, #12]
  Command.CommandMode            = MT48LC4M32B2_CLK_ENABLE_CMD;
900068d2:	2301      	movs	r3, #1
900068d4:	6023      	str	r3, [r4, #0]
  Command.AutoRefreshNumber      = 1;
900068d6:	60a3      	str	r3, [r4, #8]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
900068d8:	f005 fd2a 	bl	9000c330 <HAL_SDRAM_SendCommand>
900068dc:	2800      	cmp	r0, #0
900068de:	d142      	bne.n	90006966 <MT48LC4M32B2_Init+0xaa>
  * @retval MT48LC4M32B2_OK
  */
static int32_t MT48LC4M32B2_Delay(uint32_t Delay)
{  
  uint32_t tickstart;
  tickstart = HAL_GetTick();
900068e0:	f000 ff46 	bl	90007770 <HAL_GetTick>
900068e4:	4606      	mov	r6, r0
  while((HAL_GetTick() - tickstart) < Delay)
900068e6:	f000 ff43 	bl	90007770 <HAL_GetTick>
900068ea:	4286      	cmp	r6, r0
900068ec:	d0fb      	beq.n	900068e6 <MT48LC4M32B2_Init+0x2a>
  Command.CommandMode            = MT48LC4M32B2_PALL_CMD;
900068ee:	2302      	movs	r3, #2
    if(MT48LC4M32B2_Precharge(Ctx, pRegMode->TargetBank) == MT48LC4M32B2_OK)
900068f0:	682a      	ldr	r2, [r5, #0]
  Command.AutoRefreshNumber      = 1;
900068f2:	2601      	movs	r6, #1
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
900068f4:	491d      	ldr	r1, [pc, #116]	; (9000696c <MT48LC4M32B2_Init+0xb0>)
  Command.CommandMode            = MT48LC4M32B2_PALL_CMD;
900068f6:	6023      	str	r3, [r4, #0]
  Command.ModeRegisterDefinition = 0;
900068f8:	2300      	movs	r3, #0
  Command.CommandTarget          = Interface;
900068fa:	6062      	str	r2, [r4, #4]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
900068fc:	4638      	mov	r0, r7
900068fe:	f64f 72ff 	movw	r2, #65535	; 0xffff
  Command.AutoRefreshNumber      = 1;
90006902:	60a6      	str	r6, [r4, #8]
  Command.ModeRegisterDefinition = 0;
90006904:	60e3      	str	r3, [r4, #12]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006906:	f005 fd13 	bl	9000c330 <HAL_SDRAM_SendCommand>
9000690a:	bb60      	cbnz	r0, 90006966 <MT48LC4M32B2_Init+0xaa>
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
9000690c:	4917      	ldr	r1, [pc, #92]	; (9000696c <MT48LC4M32B2_Init+0xb0>)
  Command.CommandMode            = RefreshMode;
9000690e:	e9d5 3200 	ldrd	r3, r2, [r5]
  Command.ModeRegisterDefinition = 0;
90006912:	60e0      	str	r0, [r4, #12]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006914:	4638      	mov	r0, r7
  Command.CommandMode            = RefreshMode;
90006916:	e9c4 2300 	strd	r2, r3, [r4]
  Command.AutoRefreshNumber      = 8;
9000691a:	2308      	movs	r3, #8
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
9000691c:	f64f 72ff 	movw	r2, #65535	; 0xffff
  Command.AutoRefreshNumber      = 8;
90006920:	60a3      	str	r3, [r4, #8]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006922:	f005 fd05 	bl	9000c330 <HAL_SDRAM_SendCommand>
90006926:	b9f0      	cbnz	r0, 90006966 <MT48LC4M32B2_Init+0xaa>
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006928:	4910      	ldr	r1, [pc, #64]	; (9000696c <MT48LC4M32B2_Init+0xb0>)
9000692a:	4638      	mov	r0, r7
  tmpmrd = (uint32_t)pRegMode->BurstLength   |\
9000692c:	e9d5 3203 	ldrd	r3, r2, [r5, #12]
90006930:	4313      	orrs	r3, r2
                     pRegMode->BurstType     |\
90006932:	696a      	ldr	r2, [r5, #20]
90006934:	4313      	orrs	r3, r2
                     pRegMode->CASLatency    |\
90006936:	69aa      	ldr	r2, [r5, #24]
90006938:	4313      	orrs	r3, r2
  tmpmrd = (uint32_t)pRegMode->BurstLength   |\
9000693a:	69ea      	ldr	r2, [r5, #28]
9000693c:	4313      	orrs	r3, r2
  Command.CommandTarget          = pRegMode->TargetBank;
9000693e:	682a      	ldr	r2, [r5, #0]
  Command.ModeRegisterDefinition = tmpmrd;
90006940:	60e3      	str	r3, [r4, #12]
  Command.CommandMode            = MT48LC4M32B2_LOAD_MODE_CMD;
90006942:	2304      	movs	r3, #4
  Command.CommandTarget          = pRegMode->TargetBank;
90006944:	e9c4 2601 	strd	r2, r6, [r4, #4]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006948:	f64f 72ff 	movw	r2, #65535	; 0xffff
  Command.CommandMode            = MT48LC4M32B2_LOAD_MODE_CMD;
9000694c:	6023      	str	r3, [r4, #0]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
9000694e:	f005 fcef 	bl	9000c330 <HAL_SDRAM_SendCommand>
90006952:	b940      	cbnz	r0, 90006966 <MT48LC4M32B2_Init+0xaa>
  if(HAL_SDRAM_ProgramRefreshRate(Ctx, RefreshCount) != HAL_OK)
90006954:	68a9      	ldr	r1, [r5, #8]
90006956:	4638      	mov	r0, r7
90006958:	f005 fd0a 	bl	9000c370 <HAL_SDRAM_ProgramRefreshRate>
9000695c:	3800      	subs	r0, #0
9000695e:	bf18      	it	ne
90006960:	2001      	movne	r0, #1
90006962:	4240      	negs	r0, r0
}
90006964:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  int32_t ret = MT48LC4M32B2_ERROR;
90006966:	f04f 30ff 	mov.w	r0, #4294967295
}
9000696a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9000696c:	24009570 	.word	0x24009570

90006970 <BSP_I2C4_DeInit>:
  */
int32_t BSP_I2C4_DeInit(void)
{
  int32_t ret  = BSP_ERROR_NONE;

  I2c4InitCounter--;
90006970:	4a10      	ldr	r2, [pc, #64]	; (900069b4 <BSP_I2C4_DeInit+0x44>)
{
90006972:	b508      	push	{r3, lr}
  I2c4InitCounter--;
90006974:	6813      	ldr	r3, [r2, #0]
90006976:	3b01      	subs	r3, #1
90006978:	6013      	str	r3, [r2, #0]

  if (I2c4InitCounter == 0U)
9000697a:	b10b      	cbz	r3, 90006980 <BSP_I2C4_DeInit+0x10>
  int32_t ret  = BSP_ERROR_NONE;
9000697c:	2000      	movs	r0, #0
      ret = BSP_ERROR_BUS_FAILURE;
    }
  }

  return ret;
}
9000697e:	bd08      	pop	{r3, pc}
  /* Prevent unused argument(s) compilation warning */
  UNUSED(phi2c);

  /* Configure I2C Tx, Rx as alternate function */
  gpio_init_structure.Pin = BUS_I2C4_SCL_PIN;
  HAL_GPIO_DeInit(BUS_I2C4_SCL_GPIO_PORT, gpio_init_structure.Pin );
90006980:	f44f 5180 	mov.w	r1, #4096	; 0x1000
90006984:	480c      	ldr	r0, [pc, #48]	; (900069b8 <BSP_I2C4_DeInit+0x48>)
90006986:	f001 faaf 	bl	90007ee8 <HAL_GPIO_DeInit>
  gpio_init_structure.Pin = BUS_I2C4_SDA_PIN;
  HAL_GPIO_DeInit(BUS_I2C4_SDA_GPIO_PORT, gpio_init_structure.Pin);
9000698a:	480b      	ldr	r0, [pc, #44]	; (900069b8 <BSP_I2C4_DeInit+0x48>)
9000698c:	f44f 5100 	mov.w	r1, #8192	; 0x2000
90006990:	f001 faaa 	bl	90007ee8 <HAL_GPIO_DeInit>

  /* Disable I2C clock */
  BUS_I2C4_CLK_DISABLE();
90006994:	4a09      	ldr	r2, [pc, #36]	; (900069bc <BSP_I2C4_DeInit+0x4c>)
    if (HAL_I2C_DeInit(&hbus_i2c4) != HAL_OK)
90006996:	480a      	ldr	r0, [pc, #40]	; (900069c0 <BSP_I2C4_DeInit+0x50>)
  BUS_I2C4_CLK_DISABLE();
90006998:	f8d2 30f4 	ldr.w	r3, [r2, #244]	; 0xf4
9000699c:	f023 0380 	bic.w	r3, r3, #128	; 0x80
900069a0:	f8c2 30f4 	str.w	r3, [r2, #244]	; 0xf4
    if (HAL_I2C_DeInit(&hbus_i2c4) != HAL_OK)
900069a4:	f001 fd48 	bl	90008438 <HAL_I2C_DeInit>
900069a8:	2800      	cmp	r0, #0
900069aa:	d0e7      	beq.n	9000697c <BSP_I2C4_DeInit+0xc>
      ret = BSP_ERROR_BUS_FAILURE;
900069ac:	f06f 0007 	mvn.w	r0, #7
}
900069b0:	bd08      	pop	{r3, pc}
900069b2:	bf00      	nop
900069b4:	24009580 	.word	0x24009580
900069b8:	58020c00 	.word	0x58020c00
900069bc:	58024400 	.word	0x58024400
900069c0:	24009f88 	.word	0x24009f88

900069c4 <MX_I2C4_Init>:
  hI2c->Init.OwnAddress1      = 0;
900069c4:	2300      	movs	r3, #0
  hI2c->Init.AddressingMode   = I2C_ADDRESSINGMODE_7BIT;
900069c6:	2201      	movs	r2, #1
{
900069c8:	b510      	push	{r4, lr}
  hI2c->Init.OwnAddress1      = 0;
900069ca:	e9c0 1301 	strd	r1, r3, [r0, #4]
  hI2c->Init.DualAddressMode  = I2C_DUALADDRESS_DISABLE;
900069ce:	e9c0 2303 	strd	r2, r3, [r0, #12]
  hI2c->Init.OwnAddress2Masks = I2C_OA2_NOMASK;
900069d2:	e9c0 3305 	strd	r3, r3, [r0, #20]
  hI2c->Init.NoStretchMode    = I2C_NOSTRETCH_DISABLE;
900069d6:	e9c0 3307 	strd	r3, r3, [r0, #28]
{
900069da:	4604      	mov	r4, r0
  if (HAL_I2C_Init(hI2c) != HAL_OK)
900069dc:	f001 fcd4 	bl	90008388 <HAL_I2C_Init>
900069e0:	b108      	cbz	r0, 900069e6 <MX_I2C4_Init+0x22>
    status = HAL_ERROR;
900069e2:	2001      	movs	r0, #1
}
900069e4:	bd10      	pop	{r4, pc}
    if (HAL_I2CEx_ConfigAnalogFilter(hI2c, analog_filter) != HAL_OK)
900069e6:	4601      	mov	r1, r0
900069e8:	4620      	mov	r0, r4
900069ea:	f001 ffe3 	bl	900089b4 <HAL_I2CEx_ConfigAnalogFilter>
900069ee:	2800      	cmp	r0, #0
900069f0:	d1f7      	bne.n	900069e2 <MX_I2C4_Init+0x1e>
      if (HAL_I2CEx_ConfigDigitalFilter(hI2c, I2C_DIGITAL_FILTER_COEF) != HAL_OK)
900069f2:	4601      	mov	r1, r0
900069f4:	4620      	mov	r0, r4
900069f6:	f002 f807 	bl	90008a08 <HAL_I2CEx_ConfigDigitalFilter>
    status = HAL_ERROR;
900069fa:	3800      	subs	r0, #0
900069fc:	bf18      	it	ne
900069fe:	2001      	movne	r0, #1
}
90006a00:	bd10      	pop	{r4, pc}
90006a02:	bf00      	nop

90006a04 <BSP_I2C4_Init>:
  if (I2c4InitCounter == 0U)
90006a04:	4b99      	ldr	r3, [pc, #612]	; (90006c6c <BSP_I2C4_Init+0x268>)
  hbus_i2c4.Instance = BUS_I2C4;
90006a06:	489a      	ldr	r0, [pc, #616]	; (90006c70 <BSP_I2C4_Init+0x26c>)
90006a08:	4a9a      	ldr	r2, [pc, #616]	; (90006c74 <BSP_I2C4_Init+0x270>)
  if (I2c4InitCounter == 0U)
90006a0a:	6819      	ldr	r1, [r3, #0]
{
90006a0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90006a10:	b09f      	sub	sp, #124	; 0x7c
  hbus_i2c4.Instance = BUS_I2C4;
90006a12:	6002      	str	r2, [r0, #0]
  if (I2c4InitCounter == 0U)
90006a14:	9103      	str	r1, [sp, #12]
90006a16:	b119      	cbz	r1, 90006a20 <BSP_I2C4_Init+0x1c>
  int32_t ret = BSP_ERROR_NONE;
90006a18:	2000      	movs	r0, #0
}
90006a1a:	b01f      	add	sp, #124	; 0x7c
90006a1c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    I2c4InitCounter++;
90006a20:	2201      	movs	r2, #1
90006a22:	601a      	str	r2, [r3, #0]
    if (HAL_I2C_GetState(&hbus_i2c4) == HAL_I2C_STATE_RESET)
90006a24:	f001 ffc0 	bl	900089a8 <HAL_I2C_GetState>
90006a28:	2800      	cmp	r0, #0
90006a2a:	d1f5      	bne.n	90006a18 <BSP_I2C4_Init+0x14>
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
90006a2c:	4c92      	ldr	r4, [pc, #584]	; (90006c78 <BSP_I2C4_Init+0x274>)
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
90006a2e:	f44f 5080 	mov.w	r0, #4096	; 0x1000
90006a32:	2112      	movs	r1, #18
  gpio_init_structure.Alternate = BUS_I2C4_SCL_AF;
90006a34:	2504      	movs	r5, #4
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
90006a36:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
90006a3a:	2600      	movs	r6, #0
90006a3c:	2702      	movs	r7, #2
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
90006a3e:	f043 0308 	orr.w	r3, r3, #8
90006a42:	f8c4 30e0 	str.w	r3, [r4, #224]	; 0xe0
90006a46:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
90006a4a:	f003 0308 	and.w	r3, r3, #8
90006a4e:	9315      	str	r3, [sp, #84]	; 0x54
90006a50:	9b15      	ldr	r3, [sp, #84]	; 0x54
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
90006a52:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
90006a56:	f043 0308 	orr.w	r3, r3, #8
90006a5a:	f8c4 30e0 	str.w	r3, [r4, #224]	; 0xe0
90006a5e:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
  gpio_init_structure.Alternate = BUS_I2C4_SCL_AF;
90006a62:	951c      	str	r5, [sp, #112]	; 0x70
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
90006a64:	f003 0308 	and.w	r3, r3, #8
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
90006a68:	e9cd 0118 	strd	r0, r1, [sp, #96]	; 0x60
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
90006a6c:	9316      	str	r3, [sp, #88]	; 0x58
  HAL_GPIO_Init(BUS_I2C4_SCL_GPIO_PORT, &gpio_init_structure);
90006a6e:	a918      	add	r1, sp, #96	; 0x60
90006a70:	4882      	ldr	r0, [pc, #520]	; (90006c7c <BSP_I2C4_Init+0x278>)
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
90006a72:	9b16      	ldr	r3, [sp, #88]	; 0x58
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
90006a74:	e9cd 671a 	strd	r6, r7, [sp, #104]	; 0x68
  HAL_GPIO_Init(BUS_I2C4_SCL_GPIO_PORT, &gpio_init_structure);
90006a78:	f001 f904 	bl	90007c84 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = BUS_I2C4_SDA_PIN;
90006a7c:	2312      	movs	r3, #18
90006a7e:	f44f 5200 	mov.w	r2, #8192	; 0x2000
  HAL_GPIO_Init(BUS_I2C4_SDA_GPIO_PORT, &gpio_init_structure);
90006a82:	a918      	add	r1, sp, #96	; 0x60
90006a84:	487d      	ldr	r0, [pc, #500]	; (90006c7c <BSP_I2C4_Init+0x278>)
  gpio_init_structure.Alternate = BUS_I2C4_SDA_AF;
90006a86:	951c      	str	r5, [sp, #112]	; 0x70
  gpio_init_structure.Pin       = BUS_I2C4_SDA_PIN;
90006a88:	e9cd 2318 	strd	r2, r3, [sp, #96]	; 0x60
90006a8c:	e9cd 671a 	strd	r6, r7, [sp, #104]	; 0x68
  HAL_GPIO_Init(BUS_I2C4_SDA_GPIO_PORT, &gpio_init_structure);
90006a90:	f001 f8f8 	bl	90007c84 <HAL_GPIO_Init>
  BUS_I2C4_CLK_ENABLE();
90006a94:	f8d4 30f4 	ldr.w	r3, [r4, #244]	; 0xf4
90006a98:	f043 0380 	orr.w	r3, r3, #128	; 0x80
90006a9c:	f8c4 30f4 	str.w	r3, [r4, #244]	; 0xf4
90006aa0:	f8d4 30f4 	ldr.w	r3, [r4, #244]	; 0xf4
90006aa4:	f003 0380 	and.w	r3, r3, #128	; 0x80
90006aa8:	9317      	str	r3, [sp, #92]	; 0x5c
90006aaa:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  BUS_I2C4_FORCE_RESET();
90006aac:	f8d4 309c 	ldr.w	r3, [r4, #156]	; 0x9c
90006ab0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
90006ab4:	f8c4 309c 	str.w	r3, [r4, #156]	; 0x9c
  BUS_I2C4_RELEASE_RESET();
90006ab8:	f8d4 309c 	ldr.w	r3, [r4, #156]	; 0x9c
90006abc:	f023 0380 	bic.w	r3, r3, #128	; 0x80
90006ac0:	f8c4 309c 	str.w	r3, [r4, #156]	; 0x9c
        if (MX_I2C4_Init(&hbus_i2c4, I2C_GetTiming(HAL_RCC_GetPCLK2Freq(), BUS_I2C4_FREQUENCY)) != HAL_OK)
90006ac4:	f004 fc94 	bl	9000b3f0 <HAL_RCC_GetPCLK2Freq>
  if((clock_src_freq != 0U) && (i2c_freq != 0U))
90006ac8:	2800      	cmp	r0, #0
90006aca:	f000 81f6 	beq.w	90006eba <BSP_I2C4_Init+0x4b6>
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
90006ace:	4b6c      	ldr	r3, [pc, #432]	; (90006c80 <BSP_I2C4_Init+0x27c>)
  uint32_t prev_presc = I2C_PRESC_MAX;
90006ad0:	f04f 0b10 	mov.w	fp, #16
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
90006ad4:	9e03      	ldr	r6, [sp, #12]
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
90006ad6:	eb03 0350 	add.w	r3, r3, r0, lsr #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006ada:	f8df a1ac 	ldr.w	sl, [pc, #428]	; 90006c88 <BSP_I2C4_Init+0x284>
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
90006ade:	4635      	mov	r5, r6
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
90006ae0:	fbb3 f7f0 	udiv	r7, r3, r0
    (int32_t)tafdel_max - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 4) * (int32_t)ti2cclk);
90006ae4:	00bb      	lsls	r3, r7, #2
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
90006ae6:	9702      	str	r7, [sp, #8]
    (int32_t)tafdel_min - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 3) * (int32_t)ti2cclk);
90006ae8:	eb07 0247 	add.w	r2, r7, r7, lsl #1
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
90006aec:	f5c3 7cc3 	rsb	ip, r3, #390	; 0x186
90006af0:	4b64      	ldr	r3, [pc, #400]	; (90006c84 <BSP_I2C4_Init+0x280>)
  tsdadel_min = (int32_t)I2C_Charac[I2C_speed].tfall + (int32_t)I2C_Charac[I2C_speed].hddat_min -
90006af2:	f1c2 0432 	rsb	r4, r2, #50	; 0x32
    (int32_t)tafdel_min - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 3) * (int32_t)ti2cclk);
90006af6:	0079      	lsls	r1, r7, #1
90006af8:	681b      	ldr	r3, [r3, #0]
90006afa:	ea2c 7cec 	bic.w	ip, ip, ip, asr #31
90006afe:	ea24 74e4 	bic.w	r4, r4, r4, asr #31
90006b02:	9113      	str	r1, [sp, #76]	; 0x4c
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
90006b04:	4699      	mov	r9, r3
90006b06:	930a      	str	r3, [sp, #40]	; 0x28
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
90006b08:	ebb4 0f47 	cmp.w	r4, r7, lsl #1
90006b0c:	46b8      	mov	r8, r7
90006b0e:	eb07 0347 	add.w	r3, r7, r7, lsl #1
90006b12:	bf94      	ite	ls
90006b14:	2101      	movls	r1, #1
90006b16:	2100      	movhi	r1, #0
90006b18:	ebbc 0f47 	cmp.w	ip, r7, lsl #1
90006b1c:	f001 0101 	and.w	r1, r1, #1
90006b20:	eb07 0287 	add.w	r2, r7, r7, lsl #2
90006b24:	bf38      	it	cc
90006b26:	2100      	movcc	r1, #0
90006b28:	429c      	cmp	r4, r3
90006b2a:	ebc7 00c7 	rsb	r0, r7, r7, lsl #3
90006b2e:	9105      	str	r1, [sp, #20]
90006b30:	bf8c      	ite	hi
90006b32:	2100      	movhi	r1, #0
90006b34:	2101      	movls	r1, #1
90006b36:	459c      	cmp	ip, r3
90006b38:	bf38      	it	cc
90006b3a:	2100      	movcc	r1, #0
90006b3c:	ebb4 0f87 	cmp.w	r4, r7, lsl #2
90006b40:	9106      	str	r1, [sp, #24]
90006b42:	eb07 0142 	add.w	r1, r7, r2, lsl #1
90006b46:	9104      	str	r1, [sp, #16]
90006b48:	eb07 0183 	add.w	r1, r7, r3, lsl #2
90006b4c:	9111      	str	r1, [sp, #68]	; 0x44
90006b4e:	bf94      	ite	ls
90006b50:	2101      	movls	r1, #1
90006b52:	2100      	movhi	r1, #0
90006b54:	ebbc 0f87 	cmp.w	ip, r7, lsl #2
90006b58:	f001 0e01 	and.w	lr, r1, #1
90006b5c:	bf38      	it	cc
90006b5e:	f04f 0e00 	movcc.w	lr, #0
90006b62:	4294      	cmp	r4, r2
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
90006b64:	f04f 0100 	mov.w	r1, #0
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
90006b68:	f8cd e01c 	str.w	lr, [sp, #28]
90006b6c:	bf8c      	ite	hi
90006b6e:	f04f 0e00 	movhi.w	lr, #0
90006b72:	f04f 0e01 	movls.w	lr, #1
90006b76:	4594      	cmp	ip, r2
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
90006b78:	9101      	str	r1, [sp, #4]
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
90006b7a:	bf38      	it	cc
90006b7c:	f04f 0e00 	movcc.w	lr, #0
90006b80:	ebb4 0f43 	cmp.w	r4, r3, lsl #1
90006b84:	bf98      	it	ls
90006b86:	2101      	movls	r1, #1
90006b88:	ebbc 0f43 	cmp.w	ip, r3, lsl #1
90006b8c:	f8cd e020 	str.w	lr, [sp, #32]
90006b90:	f001 0101 	and.w	r1, r1, #1
90006b94:	bf38      	it	cc
90006b96:	2100      	movcc	r1, #0
90006b98:	4284      	cmp	r4, r0
90006b9a:	9109      	str	r1, [sp, #36]	; 0x24
90006b9c:	4601      	mov	r1, r0
90006b9e:	bf8c      	ite	hi
90006ba0:	2000      	movhi	r0, #0
90006ba2:	2001      	movls	r0, #1
90006ba4:	458c      	cmp	ip, r1
90006ba6:	bf38      	it	cc
90006ba8:	2000      	movcc	r0, #0
90006baa:	ebb4 0fc7 	cmp.w	r4, r7, lsl #3
90006bae:	900b      	str	r0, [sp, #44]	; 0x2c
90006bb0:	bf94      	ite	ls
90006bb2:	2001      	movls	r0, #1
90006bb4:	2000      	movhi	r0, #0
90006bb6:	ebbc 0fc7 	cmp.w	ip, r7, lsl #3
90006bba:	f000 0001 	and.w	r0, r0, #1
90006bbe:	bf38      	it	cc
90006bc0:	2000      	movcc	r0, #0
90006bc2:	900c      	str	r0, [sp, #48]	; 0x30
90006bc4:	eb07 00c7 	add.w	r0, r7, r7, lsl #3
90006bc8:	4284      	cmp	r4, r0
90006bca:	bf8c      	ite	hi
90006bcc:	f04f 0e00 	movhi.w	lr, #0
90006bd0:	f04f 0e01 	movls.w	lr, #1
90006bd4:	4584      	cmp	ip, r0
90006bd6:	bf38      	it	cc
90006bd8:	f04f 0e00 	movcc.w	lr, #0
90006bdc:	ebb4 0f42 	cmp.w	r4, r2, lsl #1
90006be0:	4670      	mov	r0, lr
90006be2:	bf94      	ite	ls
90006be4:	2001      	movls	r0, #1
90006be6:	2000      	movhi	r0, #0
90006be8:	ebbc 0f42 	cmp.w	ip, r2, lsl #1
90006bec:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
90006bf0:	f04f 0e00 	mov.w	lr, #0
90006bf4:	f000 0001 	and.w	r0, r0, #1
90006bf8:	bf38      	it	cc
90006bfa:	2000      	movcc	r0, #0
90006bfc:	900e      	str	r0, [sp, #56]	; 0x38
90006bfe:	9804      	ldr	r0, [sp, #16]
90006c00:	4284      	cmp	r4, r0
90006c02:	4602      	mov	r2, r0
90006c04:	bf8c      	ite	hi
90006c06:	2200      	movhi	r2, #0
90006c08:	2201      	movls	r2, #1
90006c0a:	4584      	cmp	ip, r0
90006c0c:	bf38      	it	cc
90006c0e:	2200      	movcc	r2, #0
90006c10:	ebb4 0f83 	cmp.w	r4, r3, lsl #2
90006c14:	920f      	str	r2, [sp, #60]	; 0x3c
90006c16:	bf94      	ite	ls
90006c18:	2201      	movls	r2, #1
90006c1a:	2200      	movhi	r2, #0
90006c1c:	ebbc 0f83 	cmp.w	ip, r3, lsl #2
90006c20:	f002 0201 	and.w	r2, r2, #1
90006c24:	bf38      	it	cc
90006c26:	2200      	movcc	r2, #0
90006c28:	9210      	str	r2, [sp, #64]	; 0x40
90006c2a:	9a11      	ldr	r2, [sp, #68]	; 0x44
90006c2c:	4294      	cmp	r4, r2
90006c2e:	4613      	mov	r3, r2
90006c30:	bf8c      	ite	hi
90006c32:	2300      	movhi	r3, #0
90006c34:	2301      	movls	r3, #1
90006c36:	4594      	cmp	ip, r2
90006c38:	bf38      	it	cc
90006c3a:	2300      	movcc	r3, #0
90006c3c:	ebb4 0f41 	cmp.w	r4, r1, lsl #1
90006c40:	9311      	str	r3, [sp, #68]	; 0x44
90006c42:	bf94      	ite	ls
90006c44:	2301      	movls	r3, #1
90006c46:	2300      	movhi	r3, #0
90006c48:	ebbc 0f41 	cmp.w	ip, r1, lsl #1
90006c4c:	f003 0301 	and.w	r3, r3, #1
90006c50:	bf38      	it	cc
90006c52:	2300      	movcc	r3, #0
90006c54:	9312      	str	r3, [sp, #72]	; 0x48
90006c56:	ebc7 1307 	rsb	r3, r7, r7, lsl #4
90006c5a:	429c      	cmp	r4, r3
90006c5c:	bf8c      	ite	hi
90006c5e:	2200      	movhi	r2, #0
90006c60:	2201      	movls	r2, #1
90006c62:	459c      	cmp	ip, r3
90006c64:	bf38      	it	cc
90006c66:	2200      	movcc	r2, #0
90006c68:	9204      	str	r2, [sp, #16]
90006c6a:	e014      	b.n	90006c96 <BSP_I2C4_Init+0x292>
90006c6c:	24009580 	.word	0x24009580
90006c70:	24009f88 	.word	0x24009f88
90006c74:	58001c00 	.word	0x58001c00
90006c78:	58024400 	.word	0x58024400
90006c7c:	58020c00 	.word	0x58020c00
90006c80:	3b9aca00 	.word	0x3b9aca00
90006c84:	24009f84 	.word	0x24009f84
90006c88:	24009584 	.word	0x24009584
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
90006c8c:	f1be 0f10 	cmp.w	lr, #16
90006c90:	44b8      	add	r8, r7
90006c92:	f000 826c 	beq.w	9000716e <BSP_I2C4_Init+0x76a>
      if (tscldel >= (uint32_t)tscldel_min)
90006c96:	f5b8 7faf 	cmp.w	r8, #350	; 0x15e
90006c9a:	4673      	mov	r3, lr
      uint32_t tscldel = (scldel + 1U) * (presc + 1U) * ti2cclk;
90006c9c:	f10e 0e01 	add.w	lr, lr, #1
      if (tscldel >= (uint32_t)tscldel_min)
90006ca0:	d3f4      	bcc.n	90006c8c <BSP_I2C4_Init+0x288>
            if(presc != prev_presc)
90006ca2:	ebbb 0205 	subs.w	r2, fp, r5
90006ca6:	bf18      	it	ne
90006ca8:	2201      	movne	r2, #1
90006caa:	2c00      	cmp	r4, #0
90006cac:	bf18      	it	ne
90006cae:	2200      	movne	r2, #0
90006cb0:	2a00      	cmp	r2, #0
90006cb2:	f040 824a 	bne.w	9000714a <BSP_I2C4_Init+0x746>
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
90006cb6:	45bc      	cmp	ip, r7
90006cb8:	bf34      	ite	cc
90006cba:	2200      	movcc	r2, #0
90006cbc:	2201      	movcs	r2, #1
90006cbe:	42bc      	cmp	r4, r7
90006cc0:	bf88      	it	hi
90006cc2:	2200      	movhi	r2, #0
            if(presc != prev_presc)
90006cc4:	45ab      	cmp	fp, r5
90006cc6:	bf0c      	ite	eq
90006cc8:	2200      	moveq	r2, #0
90006cca:	f002 0201 	andne.w	r2, r2, #1
90006cce:	2a00      	cmp	r2, #0
90006cd0:	f000 80fd 	beq.w	90006ece <BSP_I2C4_Init+0x4ca>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006cd4:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90006cd8:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006cdc:	2001      	movs	r0, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006cde:	f84a 5021 	str.w	r5, [sl, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006ce2:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006ce6:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006cea:	6088      	str	r0, [r1, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006cec:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90006cee:	604b      	str	r3, [r1, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006cf0:	f200 81a5 	bhi.w	9000703e <BSP_I2C4_Init+0x63a>
90006cf4:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90006cf6:	9906      	ldr	r1, [sp, #24]
90006cf8:	45ab      	cmp	fp, r5
90006cfa:	bf0c      	ite	eq
90006cfc:	2100      	moveq	r1, #0
90006cfe:	f001 0101 	andne.w	r1, r1, #1
90006d02:	2900      	cmp	r1, #0
90006d04:	f000 80ff 	beq.w	90006f06 <BSP_I2C4_Init+0x502>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006d08:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90006d0c:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006d10:	2003      	movs	r0, #3
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006d12:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006d16:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006d1a:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006d1e:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006d20:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90006d22:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006d24:	f200 818b 	bhi.w	9000703e <BSP_I2C4_Init+0x63a>
90006d28:	460a      	mov	r2, r1
90006d2a:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90006d2c:	9908      	ldr	r1, [sp, #32]
90006d2e:	45ab      	cmp	fp, r5
90006d30:	bf0c      	ite	eq
90006d32:	2100      	moveq	r1, #0
90006d34:	f001 0101 	andne.w	r1, r1, #1
90006d38:	2900      	cmp	r1, #0
90006d3a:	f000 80ff 	beq.w	90006f3c <BSP_I2C4_Init+0x538>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006d3e:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90006d42:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006d46:	2005      	movs	r0, #5
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006d48:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006d4c:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006d50:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006d54:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006d56:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90006d58:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006d5a:	f200 8170 	bhi.w	9000703e <BSP_I2C4_Init+0x63a>
90006d5e:	460a      	mov	r2, r1
90006d60:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90006d62:	990b      	ldr	r1, [sp, #44]	; 0x2c
90006d64:	45ab      	cmp	fp, r5
90006d66:	bf0c      	ite	eq
90006d68:	2100      	moveq	r1, #0
90006d6a:	f001 0101 	andne.w	r1, r1, #1
90006d6e:	2900      	cmp	r1, #0
90006d70:	f000 80fe 	beq.w	90006f70 <BSP_I2C4_Init+0x56c>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006d74:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90006d78:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006d7c:	2007      	movs	r0, #7
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006d7e:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006d82:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006d86:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006d8a:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006d8c:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90006d8e:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006d90:	f200 8155 	bhi.w	9000703e <BSP_I2C4_Init+0x63a>
90006d94:	460a      	mov	r2, r1
90006d96:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90006d98:	990d      	ldr	r1, [sp, #52]	; 0x34
90006d9a:	45ab      	cmp	fp, r5
90006d9c:	bf0c      	ite	eq
90006d9e:	2100      	moveq	r1, #0
90006da0:	f001 0101 	andne.w	r1, r1, #1
90006da4:	2900      	cmp	r1, #0
90006da6:	f000 80fd 	beq.w	90006fa4 <BSP_I2C4_Init+0x5a0>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006daa:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90006dae:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006db2:	2009      	movs	r0, #9
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006db4:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006db8:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006dbc:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006dc0:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006dc2:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90006dc4:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006dc6:	f200 813a 	bhi.w	9000703e <BSP_I2C4_Init+0x63a>
90006dca:	460a      	mov	r2, r1
90006dcc:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90006dce:	990f      	ldr	r1, [sp, #60]	; 0x3c
90006dd0:	45ab      	cmp	fp, r5
90006dd2:	bf0c      	ite	eq
90006dd4:	2100      	moveq	r1, #0
90006dd6:	f001 0101 	andne.w	r1, r1, #1
90006dda:	2900      	cmp	r1, #0
90006ddc:	f000 80fc 	beq.w	90006fd8 <BSP_I2C4_Init+0x5d4>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006de0:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90006de4:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006de8:	200b      	movs	r0, #11
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006dea:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006dee:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006df2:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006df6:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006df8:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90006dfa:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006dfc:	f200 811f 	bhi.w	9000703e <BSP_I2C4_Init+0x63a>
90006e00:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90006e02:	9e11      	ldr	r6, [sp, #68]	; 0x44
90006e04:	455d      	cmp	r5, fp
90006e06:	bf0c      	ite	eq
90006e08:	2600      	moveq	r6, #0
90006e0a:	f006 0601 	andne.w	r6, r6, #1
90006e0e:	2e00      	cmp	r6, #0
90006e10:	f000 80fb 	beq.w	9000700a <BSP_I2C4_Init+0x606>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006e14:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90006e18:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006e1c:	210d      	movs	r1, #13
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006e1e:	4650      	mov	r0, sl
90006e20:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006e24:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006e28:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90006e2c:	6053      	str	r3, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006e2e:	6091      	str	r1, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006e30:	f200 8105 	bhi.w	9000703e <BSP_I2C4_Init+0x63a>
90006e34:	4631      	mov	r1, r6
90006e36:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90006e38:	9e04      	ldr	r6, [sp, #16]
90006e3a:	455d      	cmp	r5, fp
90006e3c:	bf0c      	ite	eq
90006e3e:	2600      	moveq	r6, #0
90006e40:	f006 0601 	andne.w	r6, r6, #1
90006e44:	2e00      	cmp	r6, #0
90006e46:	f000 817c 	beq.w	90007142 <BSP_I2C4_Init+0x73e>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006e4a:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90006e4e:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006e52:	4650      	mov	r0, sl
90006e54:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
90006e58:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006e5c:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90006e60:	6053      	str	r3, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006e62:	f04f 030f 	mov.w	r3, #15
90006e66:	6093      	str	r3, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006e68:	f200 80e9 	bhi.w	9000703e <BSP_I2C4_Init+0x63a>
90006e6c:	46ab      	mov	fp, r5
        for (sdadel = 0; sdadel < I2C_SDADEL_MAX; sdadel++)
90006e6e:	e70d      	b.n	90006c8c <BSP_I2C4_Init+0x288>
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
90006e70:	9a07      	ldr	r2, [sp, #28]
90006e72:	9b08      	ldr	r3, [sp, #32]
90006e74:	3214      	adds	r2, #20
90006e76:	3301      	adds	r3, #1
90006e78:	9207      	str	r2, [sp, #28]
90006e7a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
90006e7c:	9308      	str	r3, [sp, #32]
90006e7e:	4293      	cmp	r3, r2
90006e80:	f040 80ff 	bne.w	90007082 <BSP_I2C4_Init+0x67e>
        if (idx < I2C_VALID_TIMING_NBR)
90006e84:	297f      	cmp	r1, #127	; 0x7f
90006e86:	d818      	bhi.n	90006eba <BSP_I2C4_Init+0x4b6>
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
90006e88:	eb01 0381 	add.w	r3, r1, r1, lsl #2
90006e8c:	990b      	ldr	r1, [sp, #44]	; 0x2c
90006e8e:	eb01 0283 	add.w	r2, r1, r3, lsl #2
90006e92:	f851 4023 	ldr.w	r4, [r1, r3, lsl #2]
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
90006e96:	6850      	ldr	r0, [r2, #4]
                ((I2c_valid_timing[idx].scll & 0xFFU) << 0);
90006e98:	7c13      	ldrb	r3, [r2, #16]
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
90006e9a:	0500      	lsls	r0, r0, #20
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
90006e9c:	ea43 7304 	orr.w	r3, r3, r4, lsl #28
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
90006ea0:	f400 0070 	and.w	r0, r0, #15728640	; 0xf00000
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
90006ea4:	e9d2 1202 	ldrd	r1, r2, [r2, #8]
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
90006ea8:	4303      	orrs	r3, r0
                ((I2c_valid_timing[idx].tsdadel & 0x0FU) << 16) |\
90006eaa:	0409      	lsls	r1, r1, #16
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
90006eac:	0212      	lsls	r2, r2, #8
                ((I2c_valid_timing[idx].tsdadel & 0x0FU) << 16) |\
90006eae:	f401 2170 	and.w	r1, r1, #983040	; 0xf0000
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
90006eb2:	b292      	uxth	r2, r2
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
90006eb4:	430b      	orrs	r3, r1
90006eb6:	4313      	orrs	r3, r2
90006eb8:	9303      	str	r3, [sp, #12]
        if (MX_I2C4_Init(&hbus_i2c4, I2C_GetTiming(HAL_RCC_GetPCLK2Freq(), BUS_I2C4_FREQUENCY)) != HAL_OK)
90006eba:	9903      	ldr	r1, [sp, #12]
90006ebc:	48b5      	ldr	r0, [pc, #724]	; (90007194 <BSP_I2C4_Init+0x790>)
90006ebe:	f7ff fd81 	bl	900069c4 <MX_I2C4_Init>
90006ec2:	2800      	cmp	r0, #0
90006ec4:	f43f ada8 	beq.w	90006a18 <BSP_I2C4_Init+0x14>
          ret = BSP_ERROR_BUS_FAILURE;
90006ec8:	f06f 0007 	mvn.w	r0, #7
  return ret;
90006ecc:	e5a5      	b.n	90006a1a <BSP_I2C4_Init+0x16>
            if(presc != prev_presc)
90006ece:	4632      	mov	r2, r6
90006ed0:	9905      	ldr	r1, [sp, #20]
90006ed2:	45ab      	cmp	fp, r5
90006ed4:	bf0c      	ite	eq
90006ed6:	2100      	moveq	r1, #0
90006ed8:	f001 0101 	andne.w	r1, r1, #1
90006edc:	2900      	cmp	r1, #0
90006ede:	f43f af0a 	beq.w	90006cf6 <BSP_I2C4_Init+0x2f2>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006ee2:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90006ee6:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006eea:	2002      	movs	r0, #2
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006eec:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006ef0:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006ef4:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006ef8:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006efa:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90006efc:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006efe:	f200 809e 	bhi.w	9000703e <BSP_I2C4_Init+0x63a>
90006f02:	460a      	mov	r2, r1
90006f04:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90006f06:	9907      	ldr	r1, [sp, #28]
90006f08:	45ab      	cmp	fp, r5
90006f0a:	bf0c      	ite	eq
90006f0c:	2100      	moveq	r1, #0
90006f0e:	f001 0101 	andne.w	r1, r1, #1
90006f12:	2900      	cmp	r1, #0
90006f14:	f43f af0a 	beq.w	90006d2c <BSP_I2C4_Init+0x328>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006f18:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90006f1c:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006f20:	2004      	movs	r0, #4
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006f22:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006f26:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006f2a:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006f2e:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006f30:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90006f32:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006f34:	f200 8083 	bhi.w	9000703e <BSP_I2C4_Init+0x63a>
90006f38:	460a      	mov	r2, r1
90006f3a:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90006f3c:	9909      	ldr	r1, [sp, #36]	; 0x24
90006f3e:	45ab      	cmp	fp, r5
90006f40:	bf0c      	ite	eq
90006f42:	2100      	moveq	r1, #0
90006f44:	f001 0101 	andne.w	r1, r1, #1
90006f48:	2900      	cmp	r1, #0
90006f4a:	f43f af0a 	beq.w	90006d62 <BSP_I2C4_Init+0x35e>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006f4e:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90006f52:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006f56:	2006      	movs	r0, #6
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006f58:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006f5c:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006f60:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006f64:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006f66:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90006f68:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006f6a:	d868      	bhi.n	9000703e <BSP_I2C4_Init+0x63a>
90006f6c:	460a      	mov	r2, r1
90006f6e:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90006f70:	990c      	ldr	r1, [sp, #48]	; 0x30
90006f72:	45ab      	cmp	fp, r5
90006f74:	bf0c      	ite	eq
90006f76:	2100      	moveq	r1, #0
90006f78:	f001 0101 	andne.w	r1, r1, #1
90006f7c:	2900      	cmp	r1, #0
90006f7e:	f43f af0b 	beq.w	90006d98 <BSP_I2C4_Init+0x394>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006f82:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90006f86:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006f8a:	2008      	movs	r0, #8
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006f8c:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006f90:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006f94:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006f98:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006f9a:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90006f9c:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006f9e:	d84e      	bhi.n	9000703e <BSP_I2C4_Init+0x63a>
90006fa0:	460a      	mov	r2, r1
90006fa2:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90006fa4:	990e      	ldr	r1, [sp, #56]	; 0x38
90006fa6:	45ab      	cmp	fp, r5
90006fa8:	bf0c      	ite	eq
90006faa:	2100      	moveq	r1, #0
90006fac:	f001 0101 	andne.w	r1, r1, #1
90006fb0:	2900      	cmp	r1, #0
90006fb2:	f43f af0c 	beq.w	90006dce <BSP_I2C4_Init+0x3ca>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006fb6:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90006fba:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006fbe:	200a      	movs	r0, #10
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006fc0:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006fc4:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006fc8:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006fcc:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006fce:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90006fd0:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006fd2:	d834      	bhi.n	9000703e <BSP_I2C4_Init+0x63a>
90006fd4:	460a      	mov	r2, r1
90006fd6:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90006fd8:	9910      	ldr	r1, [sp, #64]	; 0x40
90006fda:	45ab      	cmp	fp, r5
90006fdc:	bf0c      	ite	eq
90006fde:	2100      	moveq	r1, #0
90006fe0:	f001 0101 	andne.w	r1, r1, #1
90006fe4:	2900      	cmp	r1, #0
90006fe6:	f000 80ae 	beq.w	90007146 <BSP_I2C4_Init+0x742>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006fea:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90006fee:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006ff2:	200c      	movs	r0, #12
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006ff4:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006ff8:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006ffc:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007000:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007002:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007004:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007006:	d81a      	bhi.n	9000703e <BSP_I2C4_Init+0x63a>
90007008:	46ab      	mov	fp, r5
            if(presc != prev_presc)
9000700a:	9e12      	ldr	r6, [sp, #72]	; 0x48
9000700c:	455d      	cmp	r5, fp
9000700e:	bf0c      	ite	eq
90007010:	2600      	moveq	r6, #0
90007012:	f006 0601 	andne.w	r6, r6, #1
90007016:	2e00      	cmp	r6, #0
90007018:	f43f af0e 	beq.w	90006e38 <BSP_I2C4_Init+0x434>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000701c:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90007020:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007024:	4650      	mov	r0, sl
90007026:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
9000702a:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000702e:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007032:	6053      	str	r3, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007034:	f04f 030e 	mov.w	r3, #14
90007038:	6093      	str	r3, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000703a:	f67f af17 	bls.w	90006e6c <BSP_I2C4_Init+0x468>
9000703e:	4b56      	ldr	r3, [pc, #344]	; (90007198 <BSP_I2C4_Init+0x794>)
90007040:	900b      	str	r0, [sp, #44]	; 0x2c
90007042:	f8c3 9000 	str.w	r9, [r3]
              I2c_valid_timing_nbr ++;
90007046:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
9000704a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
9000704c:	f240 4201 	movw	r2, #1025	; 0x401
90007050:	f240 2657 	movw	r6, #599	; 0x257
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
90007054:	f640 1ac4 	movw	sl, #2500	; 0x9c4
90007058:	1ad2      	subs	r2, r2, r3
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
9000705a:	f240 4b12 	movw	fp, #1042	; 0x412
9000705e:	920d      	str	r2, [sp, #52]	; 0x34
90007060:	9a02      	ldr	r2, [sp, #8]
90007062:	4296      	cmp	r6, r2
90007064:	bf38      	it	cc
90007066:	4616      	movcc	r6, r2
90007068:	4a4c      	ldr	r2, [pc, #304]	; (9000719c <BSP_I2C4_Init+0x798>)
9000706a:	9207      	str	r2, [sp, #28]
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
9000706c:	2200      	movs	r2, #0
9000706e:	9208      	str	r2, [sp, #32]
90007070:	f04f 32ff 	mov.w	r2, #4294967295
90007074:	4611      	mov	r1, r2
90007076:	f103 0232 	add.w	r2, r3, #50	; 0x32
9000707a:	f6a3 0334 	subw	r3, r3, #2100	; 0x834
9000707e:	920c      	str	r2, [sp, #48]	; 0x30
90007080:	930e      	str	r3, [sp, #56]	; 0x38
    uint32_t tpresc = (I2c_valid_timing[count].presc + 1U) * ti2cclk;
90007082:	9b07      	ldr	r3, [sp, #28]
    for (scll = 0; scll < I2C_SCLL_MAX; scll++)
90007084:	f04f 0800 	mov.w	r8, #0
    uint32_t tpresc = (I2c_valid_timing[count].presc + 1U) * ti2cclk;
90007088:	6818      	ldr	r0, [r3, #0]
9000708a:	9b02      	ldr	r3, [sp, #8]
9000708c:	fb00 3003 	mla	r0, r0, r3, r3
    for (scll = 0; scll < I2C_SCLL_MAX; scll++)
90007090:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90007092:	1a1b      	subs	r3, r3, r0
90007094:	ea4f 0943 	mov.w	r9, r3, lsl #1
90007098:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9000709a:	eb03 0e00 	add.w	lr, r3, r0
9000709e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
900070a0:	4403      	add	r3, r0
900070a2:	9309      	str	r3, [sp, #36]	; 0x24
900070a4:	e006      	b.n	900070b4 <BSP_I2C4_Init+0x6b0>
900070a6:	f5b8 7f80 	cmp.w	r8, #256	; 0x100
900070aa:	4486      	add	lr, r0
900070ac:	eba9 0900 	sub.w	r9, r9, r0
900070b0:	f43f aede 	beq.w	90006e70 <BSP_I2C4_Init+0x46c>
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
900070b4:	f240 5214 	movw	r2, #1300	; 0x514
900070b8:	f8cd 8004 	str.w	r8, [sp, #4]
900070bc:	f1ae 0332 	sub.w	r3, lr, #50	; 0x32
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
900070c0:	f108 0801 	add.w	r8, r8, #1
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
900070c4:	4596      	cmp	lr, r2
900070c6:	d9ee      	bls.n	900070a6 <BSP_I2C4_Init+0x6a2>
900070c8:	9a02      	ldr	r2, [sp, #8]
900070ca:	ebb2 0f93 	cmp.w	r2, r3, lsr #2
900070ce:	d2ea      	bcs.n	900070a6 <BSP_I2C4_Init+0x6a2>
900070d0:	f640 0c34 	movw	ip, #2100	; 0x834
900070d4:	464c      	mov	r4, r9
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
900070d6:	f8cd 9018 	str.w	r9, [sp, #24]
900070da:	2200      	movs	r2, #0
900070dc:	ebac 0c03 	sub.w	ip, ip, r3
900070e0:	9b09      	ldr	r3, [sp, #36]	; 0x24
900070e2:	4689      	mov	r9, r1
900070e4:	4473      	add	r3, lr
900070e6:	e9cd e804 	strd	lr, r8, [sp, #16]
900070ea:	f8dd 8020 	ldr.w	r8, [sp, #32]
900070ee:	f8dd e01c 	ldr.w	lr, [sp, #28]
900070f2:	e005      	b.n	90007100 <BSP_I2C4_Init+0x6fc>
900070f4:	f5b2 7f80 	cmp.w	r2, #256	; 0x100
900070f8:	4403      	add	r3, r0
900070fa:	eba4 0400 	sub.w	r4, r4, r0
900070fe:	d01a      	beq.n	90007136 <BSP_I2C4_Init+0x732>
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
90007100:	eb0c 0103 	add.w	r1, ip, r3
90007104:	4617      	mov	r7, r2
90007106:	f203 15a1 	addw	r5, r3, #417	; 0x1a1
          uint32_t tscl_h = tafdel_min + dnf_delay + (2U * ti2cclk) + ((sclh + 1U) * tpresc);
9000710a:	3201      	adds	r2, #1
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
9000710c:	42b1      	cmp	r1, r6
9000710e:	d9f1      	bls.n	900070f4 <BSP_I2C4_Init+0x6f0>
90007110:	455d      	cmp	r5, fp
90007112:	d8ef      	bhi.n	900070f4 <BSP_I2C4_Init+0x6f0>
            if (error < 0)
90007114:	ea33 0123 	bics.w	r1, r3, r3, asr #32
90007118:	bf28      	it	cs
9000711a:	4621      	movcs	r1, r4
            if ((uint32_t)error < prev_error)
9000711c:	458a      	cmp	sl, r1
9000711e:	d9e9      	bls.n	900070f4 <BSP_I2C4_Init+0x6f0>
              I2c_valid_timing[count].sclh = sclh;
90007120:	468a      	mov	sl, r1
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
90007122:	f5b2 7f80 	cmp.w	r2, #256	; 0x100
              I2c_valid_timing[count].scll = scll;
90007126:	9901      	ldr	r1, [sp, #4]
              I2c_valid_timing[count].sclh = sclh;
90007128:	46c1      	mov	r9, r8
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
9000712a:	4403      	add	r3, r0
9000712c:	eba4 0400 	sub.w	r4, r4, r0
              I2c_valid_timing[count].sclh = sclh;
90007130:	e9ce 7103 	strd	r7, r1, [lr, #12]
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
90007134:	d1e4      	bne.n	90007100 <BSP_I2C4_Init+0x6fc>
90007136:	4649      	mov	r1, r9
90007138:	f8dd 9018 	ldr.w	r9, [sp, #24]
9000713c:	e9dd e804 	ldrd	lr, r8, [sp, #16]
90007140:	e7b1      	b.n	900070a6 <BSP_I2C4_Init+0x6a2>
90007142:	460e      	mov	r6, r1
90007144:	e5a2      	b.n	90006c8c <BSP_I2C4_Init+0x288>
            if(presc != prev_presc)
90007146:	4611      	mov	r1, r2
90007148:	e65b      	b.n	90006e02 <BSP_I2C4_Init+0x3fe>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000714a:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000714e:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007152:	2000      	movs	r0, #0
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007154:	f84a 5021 	str.w	r5, [sl, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007158:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000715c:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007160:	6088      	str	r0, [r1, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007162:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007164:	604b      	str	r3, [r1, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007166:	f63f af6a 	bhi.w	9000703e <BSP_I2C4_Init+0x63a>
9000716a:	46ab      	mov	fp, r5
9000716c:	e6b0      	b.n	90006ed0 <BSP_I2C4_Init+0x4cc>
  for (presc = 0; presc < I2C_PRESC_MAX; presc++)
9000716e:	3501      	adds	r5, #1
90007170:	9b02      	ldr	r3, [sp, #8]
90007172:	2d10      	cmp	r5, #16
90007174:	441f      	add	r7, r3
90007176:	f47f acc7 	bne.w	90006b08 <BSP_I2C4_Init+0x104>
9000717a:	b126      	cbz	r6, 90007186 <BSP_I2C4_Init+0x782>
9000717c:	4b06      	ldr	r3, [pc, #24]	; (90007198 <BSP_I2C4_Init+0x794>)
9000717e:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
90007182:	f8c3 9000 	str.w	r9, [r3]
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
90007186:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90007188:	2b00      	cmp	r3, #0
9000718a:	f43f ae96 	beq.w	90006eba <BSP_I2C4_Init+0x4b6>
9000718e:	4b03      	ldr	r3, [pc, #12]	; (9000719c <BSP_I2C4_Init+0x798>)
90007190:	930b      	str	r3, [sp, #44]	; 0x2c
90007192:	e75a      	b.n	9000704a <BSP_I2C4_Init+0x646>
90007194:	24009f88 	.word	0x24009f88
90007198:	24009f84 	.word	0x24009f84
9000719c:	24009584 	.word	0x24009584

900071a0 <BSP_I2C4_WriteReg>:
{
900071a0:	b530      	push	{r4, r5, lr}
900071a2:	4614      	mov	r4, r2
900071a4:	b085      	sub	sp, #20
  * @param  Length     data length in bytes
  * @retval BSP status
  */
static int32_t I2C4_WriteReg(uint16_t DevAddr, uint16_t Reg, uint16_t MemAddSize, uint8_t *pData, uint16_t Length)
{
  if(HAL_I2C_Mem_Write(&hbus_i2c4, DevAddr, Reg, MemAddSize, pData, Length, 1000) == HAL_OK)
900071a6:	f44f 757a 	mov.w	r5, #1000	; 0x3e8
900071aa:	460a      	mov	r2, r1
900071ac:	9301      	str	r3, [sp, #4]
900071ae:	4601      	mov	r1, r0
900071b0:	2301      	movs	r3, #1
900071b2:	4809      	ldr	r0, [pc, #36]	; (900071d8 <BSP_I2C4_WriteReg+0x38>)
900071b4:	9502      	str	r5, [sp, #8]
900071b6:	9400      	str	r4, [sp, #0]
900071b8:	f001 f958 	bl	9000846c <HAL_I2C_Mem_Write>
900071bc:	b908      	cbnz	r0, 900071c2 <BSP_I2C4_WriteReg+0x22>
}
900071be:	b005      	add	sp, #20
900071c0:	bd30      	pop	{r4, r5, pc}
    if( HAL_I2C_GetError(&hbus_i2c4) == HAL_I2C_ERROR_AF)
900071c2:	4805      	ldr	r0, [pc, #20]	; (900071d8 <BSP_I2C4_WriteReg+0x38>)
900071c4:	f001 fbf4 	bl	900089b0 <HAL_I2C_GetError>
      ret =  BSP_ERROR_PERIPH_FAILURE;
900071c8:	2804      	cmp	r0, #4
900071ca:	bf0c      	ite	eq
900071cc:	f06f 0065 	mvneq.w	r0, #101	; 0x65
900071d0:	f06f 0003 	mvnne.w	r0, #3
900071d4:	e7f3      	b.n	900071be <BSP_I2C4_WriteReg+0x1e>
900071d6:	bf00      	nop
900071d8:	24009f88 	.word	0x24009f88

900071dc <BSP_I2C4_ReadReg>:
{
900071dc:	b530      	push	{r4, r5, lr}
900071de:	4614      	mov	r4, r2
900071e0:	b085      	sub	sp, #20
  * @param  Length     data length in bytes
  * @retval BSP status
  */
static int32_t I2C4_ReadReg(uint16_t DevAddr, uint16_t Reg, uint16_t MemAddSize, uint8_t *pData, uint16_t Length)
{
  if (HAL_I2C_Mem_Read(&hbus_i2c4, DevAddr, Reg, MemAddSize, pData, Length, 1000) == HAL_OK)
900071e2:	f44f 757a 	mov.w	r5, #1000	; 0x3e8
900071e6:	460a      	mov	r2, r1
900071e8:	9301      	str	r3, [sp, #4]
900071ea:	4601      	mov	r1, r0
900071ec:	2301      	movs	r3, #1
900071ee:	4809      	ldr	r0, [pc, #36]	; (90007214 <BSP_I2C4_ReadReg+0x38>)
900071f0:	9502      	str	r5, [sp, #8]
900071f2:	9400      	str	r4, [sp, #0]
900071f4:	f001 fa6e 	bl	900086d4 <HAL_I2C_Mem_Read>
900071f8:	b908      	cbnz	r0, 900071fe <BSP_I2C4_ReadReg+0x22>
}
900071fa:	b005      	add	sp, #20
900071fc:	bd30      	pop	{r4, r5, pc}
    if( HAL_I2C_GetError(&hbus_i2c4) == HAL_I2C_ERROR_AF)
900071fe:	4805      	ldr	r0, [pc, #20]	; (90007214 <BSP_I2C4_ReadReg+0x38>)
90007200:	f001 fbd6 	bl	900089b0 <HAL_I2C_GetError>
      ret =  BSP_ERROR_PERIPH_FAILURE;
90007204:	2804      	cmp	r0, #4
90007206:	bf0c      	ite	eq
90007208:	f06f 0065 	mvneq.w	r0, #101	; 0x65
9000720c:	f06f 0003 	mvnne.w	r0, #3
90007210:	e7f3      	b.n	900071fa <BSP_I2C4_ReadReg+0x1e>
90007212:	bf00      	nop
90007214:	24009f88 	.word	0x24009f88

90007218 <BSP_GetTick>:
  return (int32_t)HAL_GetTick();
90007218:	f000 baaa 	b.w	90007770 <HAL_GetTick>

9000721c <BSP_SDRAM_DeInit>:
  */
int32_t BSP_SDRAM_DeInit(uint32_t Instance)
{
  int32_t ret = BSP_ERROR_NONE;

  if(Instance >= SDRAM_INSTANCES_NBR)
9000721c:	b970      	cbnz	r0, 9000723c <BSP_SDRAM_DeInit+0x20>
{
9000721e:	b510      	push	{r4, lr}
90007220:	4604      	mov	r4, r0
  {
    ret =  BSP_ERROR_WRONG_PARAM;
  }
  else
  {
    (void)HAL_SDRAM_DeInit(&hsdram[Instance]);
90007222:	4808      	ldr	r0, [pc, #32]	; (90007244 <BSP_SDRAM_DeInit+0x28>)
90007224:	f005 f876 	bl	9000c314 <HAL_SDRAM_DeInit>

  /* Prevent unused argument(s) compilation warning */
  UNUSED(hSdram);

  /* Disable NVIC configuration for DMA interrupt */
  HAL_NVIC_DisableIRQ(SDRAM_MDMAx_IRQn);
90007228:	207a      	movs	r0, #122	; 0x7a
9000722a:	f000 fb0b 	bl	90007844 <HAL_NVIC_DisableIRQ>

  /* Deinitialize the stream for new transfer */
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
9000722e:	4b06      	ldr	r3, [pc, #24]	; (90007248 <BSP_SDRAM_DeInit+0x2c>)
90007230:	4806      	ldr	r0, [pc, #24]	; (9000724c <BSP_SDRAM_DeInit+0x30>)
90007232:	6003      	str	r3, [r0, #0]
  (void)HAL_MDMA_DeInit(&mdma_handle);
90007234:	f003 f98e 	bl	9000a554 <HAL_MDMA_DeInit>
  int32_t ret = BSP_ERROR_NONE;
90007238:	4620      	mov	r0, r4
}
9000723a:	bd10      	pop	{r4, pc}
    ret =  BSP_ERROR_WRONG_PARAM;
9000723c:	f06f 0001 	mvn.w	r0, #1
}
90007240:	4770      	bx	lr
90007242:	bf00      	nop
90007244:	24009fdc 	.word	0x24009fdc
90007248:	52000040 	.word	0x52000040
9000724c:	2400a010 	.word	0x2400a010

90007250 <MX_SDRAM_BANK2_Init>:
{
90007250:	b530      	push	{r4, r5, lr}
  hSdram->Init.MemoryDataWidth    = MemoryDataWidth;
90007252:	6102      	str	r2, [r0, #16]
  hSdram->Init.ColumnBitsNumber   = FMC_SDRAM_COLUMN_BITS_NUM_8;
90007254:	2200      	movs	r2, #0
{
90007256:	b089      	sub	sp, #36	; 0x24
  hsdram->Instance = FMC_SDRAM_DEVICE;
90007258:	4c13      	ldr	r4, [pc, #76]	; (900072a8 <MX_SDRAM_BANK2_Init+0x58>)
  hSdram->Init.ColumnBitsNumber   = FMC_SDRAM_COLUMN_BITS_NUM_8;
9000725a:	6082      	str	r2, [r0, #8]
  hsdram->Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
9000725c:	2540      	movs	r5, #64	; 0x40
  hSdram->Init.WriteProtection    = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
9000725e:	61c2      	str	r2, [r0, #28]
  sdram_timing.ExitSelfRefreshDelay = 7;
90007260:	2307      	movs	r3, #7
  hSdram->Init.ReadPipeDelay      = FMC_SDRAM_RPIPE_DELAY_0;
90007262:	6282      	str	r2, [r0, #40]	; 0x28
  sdram_timing.LoadToActiveDelay    = 2;
90007264:	2202      	movs	r2, #2
  hSdram->Init.RowBitsNumber      = RowBitsNumber;
90007266:	60c1      	str	r1, [r0, #12]
  hSdram->Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
90007268:	f44f 71c0 	mov.w	r1, #384	; 0x180
  sdram_timing.LoadToActiveDelay    = 2;
9000726c:	9200      	str	r2, [sp, #0]
  sdram_timing.RCDDelay             = 2;
9000726e:	9206      	str	r2, [sp, #24]
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
90007270:	2201      	movs	r2, #1
  sdram_timing.ExitSelfRefreshDelay = 7;
90007272:	9301      	str	r3, [sp, #4]
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
90007274:	6042      	str	r2, [r0, #4]
  hSdram->Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
90007276:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  hsdram->Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
9000727a:	6165      	str	r5, [r4, #20]
  hSdram->Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
9000727c:	f44f 6500 	mov.w	r5, #2048	; 0x800
  hSdram->Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
90007280:	6181      	str	r1, [r0, #24]
  if(HAL_SDRAM_Init(hSdram, &sdram_timing) != HAL_OK)
90007282:	4669      	mov	r1, sp
  hSdram->Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
90007284:	e9c0 5208 	strd	r5, r2, [r0, #32]
  sdram_timing.SelfRefreshTime      = 4;
90007288:	2204      	movs	r2, #4
9000728a:	e9cd 2302 	strd	r2, r3, [sp, #8]
  sdram_timing.WriteRecoveryTime    = 2;
9000728e:	2202      	movs	r2, #2
90007290:	2302      	movs	r3, #2
90007292:	e9cd 2304 	strd	r2, r3, [sp, #16]
  hsdram->Instance = FMC_SDRAM_DEVICE;
90007296:	4b05      	ldr	r3, [pc, #20]	; (900072ac <MX_SDRAM_BANK2_Init+0x5c>)
90007298:	6023      	str	r3, [r4, #0]
  if(HAL_SDRAM_Init(hSdram, &sdram_timing) != HAL_OK)
9000729a:	f005 f811 	bl	9000c2c0 <HAL_SDRAM_Init>
}
9000729e:	3800      	subs	r0, #0
900072a0:	bf18      	it	ne
900072a2:	2001      	movne	r0, #1
900072a4:	b009      	add	sp, #36	; 0x24
900072a6:	bd30      	pop	{r4, r5, pc}
900072a8:	24009fdc 	.word	0x24009fdc
900072ac:	52004140 	.word	0x52004140

900072b0 <BSP_SDRAM_Init>:
  if(Instance >=SDRAM_INSTANCES_NBR)
900072b0:	2800      	cmp	r0, #0
900072b2:	f040 80d2 	bne.w	9000745a <BSP_SDRAM_Init+0x1aa>
  __HAL_RCC_FMC_CLK_ENABLE();
900072b6:	4b6c      	ldr	r3, [pc, #432]	; (90007468 <BSP_SDRAM_Init+0x1b8>)
  gpio_init_structure.Alternate = GPIO_AF12_FMC;
900072b8:	210c      	movs	r1, #12
  __HAL_RCC_FMC_CLK_ENABLE();
900072ba:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
900072be:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
{
900072c2:	b570      	push	{r4, r5, r6, lr}
  __HAL_RCC_FMC_CLK_ENABLE();
900072c4:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
{
900072c8:	b08e      	sub	sp, #56	; 0x38
  __HAL_RCC_FMC_CLK_ENABLE();
900072ca:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
900072ce:	4605      	mov	r5, r0
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
900072d0:	f24c 7003 	movw	r0, #50947	; 0xc703
  mdma_handle.Init.Request = MDMA_REQUEST_SW;
900072d4:	4c65      	ldr	r4, [pc, #404]	; (9000746c <BSP_SDRAM_Init+0x1bc>)
  __HAL_RCC_FMC_CLK_ENABLE();
900072d6:	f402 5280 	and.w	r2, r2, #4096	; 0x1000
  __HAL_LINKDMA(hsdram, hmdma, mdma_handle);
900072da:	4e65      	ldr	r6, [pc, #404]	; (90007470 <BSP_SDRAM_Init+0x1c0>)
  __HAL_RCC_FMC_CLK_ENABLE();
900072dc:	9201      	str	r2, [sp, #4]
900072de:	9a01      	ldr	r2, [sp, #4]
  SDRAM_MDMAx_CLK_ENABLE();
900072e0:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
900072e4:	f042 0201 	orr.w	r2, r2, #1
900072e8:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
900072ec:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
900072f0:	f002 0201 	and.w	r2, r2, #1
900072f4:	9202      	str	r2, [sp, #8]
900072f6:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOD_CLK_ENABLE();
900072f8:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
900072fc:	f042 0208 	orr.w	r2, r2, #8
90007300:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
90007304:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90007308:	f002 0208 	and.w	r2, r2, #8
9000730c:	9203      	str	r2, [sp, #12]
9000730e:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOE_CLK_ENABLE();
90007310:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90007314:	f042 0210 	orr.w	r2, r2, #16
90007318:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
9000731c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90007320:	f002 0210 	and.w	r2, r2, #16
90007324:	9204      	str	r2, [sp, #16]
90007326:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOF_CLK_ENABLE();
90007328:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
9000732c:	f042 0220 	orr.w	r2, r2, #32
90007330:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
90007334:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90007338:	f002 0220 	and.w	r2, r2, #32
9000733c:	9205      	str	r2, [sp, #20]
9000733e:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
90007340:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90007344:	f042 0240 	orr.w	r2, r2, #64	; 0x40
90007348:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
9000734c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90007350:	f002 0240 	and.w	r2, r2, #64	; 0x40
90007354:	9206      	str	r2, [sp, #24]
90007356:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOH_CLK_ENABLE();
90007358:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
9000735c:	f042 0280 	orr.w	r2, r2, #128	; 0x80
90007360:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
90007364:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
  gpio_init_structure.Alternate = GPIO_AF12_FMC;
90007368:	910c      	str	r1, [sp, #48]	; 0x30
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
9000736a:	2102      	movs	r1, #2
  __HAL_RCC_GPIOH_CLK_ENABLE();
9000736c:	f003 0380 	and.w	r3, r3, #128	; 0x80
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
90007370:	e9cd 0108 	strd	r0, r1, [sp, #32]
90007374:	2001      	movs	r0, #1
90007376:	2103      	movs	r1, #3
  __HAL_RCC_GPIOH_CLK_ENABLE();
90007378:	9307      	str	r3, [sp, #28]
9000737a:	9b07      	ldr	r3, [sp, #28]
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
9000737c:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
  HAL_GPIO_Init(GPIOD, &gpio_init_structure);
90007380:	a908      	add	r1, sp, #32
90007382:	483c      	ldr	r0, [pc, #240]	; (90007474 <BSP_SDRAM_Init+0x1c4>)
90007384:	f000 fc7e 	bl	90007c84 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
90007388:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &gpio_init_structure);
9000738c:	a908      	add	r1, sp, #32
9000738e:	483a      	ldr	r0, [pc, #232]	; (90007478 <BSP_SDRAM_Init+0x1c8>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
90007390:	9308      	str	r3, [sp, #32]
  HAL_GPIO_Init(GPIOE, &gpio_init_structure);
90007392:	f000 fc77 	bl	90007c84 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
90007396:	f64f 033f 	movw	r3, #63551	; 0xf83f
  HAL_GPIO_Init(GPIOF, &gpio_init_structure);
9000739a:	a908      	add	r1, sp, #32
9000739c:	4837      	ldr	r0, [pc, #220]	; (9000747c <BSP_SDRAM_Init+0x1cc>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
9000739e:	9308      	str	r3, [sp, #32]
  HAL_GPIO_Init(GPIOF, &gpio_init_structure);
900073a0:	f000 fc70 	bl	90007c84 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_8 | GPIO_PIN_15;
900073a4:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &gpio_init_structure);
900073a8:	a908      	add	r1, sp, #32
900073aa:	4835      	ldr	r0, [pc, #212]	; (90007480 <BSP_SDRAM_Init+0x1d0>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_8 | GPIO_PIN_15;
900073ac:	9308      	str	r3, [sp, #32]
  HAL_GPIO_Init(GPIOG, &gpio_init_structure);
900073ae:	f000 fc69 	bl	90007c84 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 ;
900073b2:	23e0      	movs	r3, #224	; 0xe0
  HAL_GPIO_Init(GPIOH, &gpio_init_structure);
900073b4:	a908      	add	r1, sp, #32
900073b6:	4833      	ldr	r0, [pc, #204]	; (90007484 <BSP_SDRAM_Init+0x1d4>)
  gpio_init_structure.Pin   = GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 ;
900073b8:	9308      	str	r3, [sp, #32]
  HAL_GPIO_Init(GPIOH, &gpio_init_structure);
900073ba:	f000 fc63 	bl	90007c84 <HAL_GPIO_Init>
  mdma_handle.Init.Priority = MDMA_PRIORITY_HIGH;
900073be:	2380      	movs	r3, #128	; 0x80
  mdma_handle.Init.Request = MDMA_REQUEST_SW;
900073c0:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
  mdma_handle.Init.SourceInc = MDMA_SRC_INC_WORD;
900073c4:	f240 2102 	movw	r1, #514	; 0x202
  HAL_MDMA_DeInit(&mdma_handle);
900073c8:	4620      	mov	r0, r4
  mdma_handle.Init.DestDataSize = MDMA_DEST_DATASIZE_WORD;
900073ca:	6223      	str	r3, [r4, #32]
  mdma_handle.Init.BufferTransferLength = 128;
900073cc:	62a3      	str	r3, [r4, #40]	; 0x28
  mdma_handle.Init.Request = MDMA_REQUEST_SW;
900073ce:	6062      	str	r2, [r4, #4]
  mdma_handle.Init.TransferTriggerMode = MDMA_BLOCK_TRANSFER;
900073d0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
  mdma_handle.Init.SourceInc = MDMA_SRC_INC_WORD;
900073d4:	6161      	str	r1, [r4, #20]
  mdma_handle.Init.TransferTriggerMode = MDMA_BLOCK_TRANSFER;
900073d6:	60a2      	str	r2, [r4, #8]
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
900073d8:	4a2b      	ldr	r2, [pc, #172]	; (90007488 <BSP_SDRAM_Init+0x1d8>)
  __HAL_LINKDMA(hsdram, hmdma, mdma_handle);
900073da:	6334      	str	r4, [r6, #48]	; 0x30
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
900073dc:	6022      	str	r2, [r4, #0]
  __HAL_LINKDMA(hsdram, hmdma, mdma_handle);
900073de:	6426      	str	r6, [r4, #64]	; 0x40
  mdma_handle.Init.Priority = MDMA_PRIORITY_HIGH;
900073e0:	e9c4 3503 	strd	r3, r5, [r4, #12]
  mdma_handle.Init.DestinationInc = MDMA_DEST_INC_WORD;
900073e4:	f640 0308 	movw	r3, #2056	; 0x808
900073e8:	61a3      	str	r3, [r4, #24]
  mdma_handle.Init.SourceDataSize = MDMA_SRC_DATASIZE_WORD;
900073ea:	2320      	movs	r3, #32
900073ec:	61e3      	str	r3, [r4, #28]
  mdma_handle.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
900073ee:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
  mdma_handle.Init.DestBurst = MDMA_DEST_BURST_SINGLE;
900073f2:	e9c4 550b 	strd	r5, r5, [r4, #44]	; 0x2c
  mdma_handle.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
900073f6:	6263      	str	r3, [r4, #36]	; 0x24
  mdma_handle.Init.DestBlockAddressOffset = 0;
900073f8:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
  HAL_MDMA_DeInit(&mdma_handle);
900073fc:	f003 f8aa 	bl	9000a554 <HAL_MDMA_DeInit>
  HAL_MDMA_Init(&mdma_handle);
90007400:	4620      	mov	r0, r4
90007402:	f003 f82d 	bl	9000a460 <HAL_MDMA_Init>
  HAL_NVIC_SetPriority(SDRAM_MDMAx_IRQn, 0x0F, 0);
90007406:	462a      	mov	r2, r5
90007408:	210f      	movs	r1, #15
9000740a:	207a      	movs	r0, #122	; 0x7a
9000740c:	f000 f9ce 	bl	900077ac <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(SDRAM_MDMAx_IRQn);
90007410:	207a      	movs	r0, #122	; 0x7a
90007412:	f000 fa09 	bl	90007828 <HAL_NVIC_EnableIRQ>
    if(MX_SDRAM_BANK2_Init(&hsdram[Instance],FMC_SDRAM_ROW_BITS_NUM_12, FMC_SDRAM_MEM_BUS_WIDTH_16) != HAL_OK)
90007416:	2210      	movs	r2, #16
90007418:	2104      	movs	r1, #4
9000741a:	4630      	mov	r0, r6
9000741c:	f7ff ff18 	bl	90007250 <MX_SDRAM_BANK2_Init>
90007420:	b9f0      	cbnz	r0, 90007460 <BSP_SDRAM_Init+0x1b0>
      pRegMode.TargetBank      = FMC_SDRAM_CMD_TARGET_BANK2;
90007422:	491a      	ldr	r1, [pc, #104]	; (9000748c <BSP_SDRAM_Init+0x1dc>)
90007424:	2208      	movs	r2, #8
90007426:	2303      	movs	r3, #3
      if(MT48LC4M32B2_Init(&hsdram[Instance], &pRegMode) != MT48LC4M32B2_OK)
90007428:	4630      	mov	r0, r6
      pRegMode.TargetBank      = FMC_SDRAM_CMD_TARGET_BANK2;
9000742a:	e9c1 2300 	strd	r2, r3, [r1]
9000742e:	f240 6203 	movw	r2, #1539	; 0x603
90007432:	2300      	movs	r3, #0
90007434:	e9c1 2302 	strd	r2, r3, [r1, #8]
90007438:	2200      	movs	r2, #0
9000743a:	2330      	movs	r3, #48	; 0x30
9000743c:	e9c1 2304 	strd	r2, r3, [r1, #16]
90007440:	2200      	movs	r2, #0
90007442:	f44f 7300 	mov.w	r3, #512	; 0x200
90007446:	e9c1 2306 	strd	r2, r3, [r1, #24]
      if(MT48LC4M32B2_Init(&hsdram[Instance], &pRegMode) != MT48LC4M32B2_OK)
9000744a:	f7ff fa37 	bl	900068bc <MT48LC4M32B2_Init>
        ret =  BSP_ERROR_COMPONENT_FAILURE;
9000744e:	2800      	cmp	r0, #0
90007450:	bf18      	it	ne
90007452:	f06f 0004 	mvnne.w	r0, #4
}
90007456:	b00e      	add	sp, #56	; 0x38
90007458:	bd70      	pop	{r4, r5, r6, pc}
    ret =  BSP_ERROR_WRONG_PARAM;
9000745a:	f06f 0001 	mvn.w	r0, #1
}
9000745e:	4770      	bx	lr
      ret = BSP_ERROR_NO_INIT;
90007460:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
90007464:	e7f7      	b.n	90007456 <BSP_SDRAM_Init+0x1a6>
90007466:	bf00      	nop
90007468:	58024400 	.word	0x58024400
9000746c:	2400a07c 	.word	0x2400a07c
90007470:	24009fdc 	.word	0x24009fdc
90007474:	58020c00 	.word	0x58020c00
90007478:	58021000 	.word	0x58021000
9000747c:	58021400 	.word	0x58021400
90007480:	58021800 	.word	0x58021800
90007484:	58021c00 	.word	0x58021c00
90007488:	52000040 	.word	0x52000040
9000748c:	2400a0e8 	.word	0x2400a0e8

90007490 <BSP_TS_Init>:
  * @param  Instance TS instance. Could be only 0.
  * @param  TS_Init  TS Init structure
  * @retval BSP status
  */
int32_t BSP_TS_Init(uint32_t Instance, TS_Init_t *TS_Init)
{
90007490:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90007494:	b088      	sub	sp, #32
  int32_t ret = BSP_ERROR_NONE;

  if((Instance >=TS_INSTANCES_NBR) || (TS_Init->Width == 0U) ||( TS_Init->Width > TS_MAX_WIDTH) ||\
90007496:	2800      	cmp	r0, #0
90007498:	d16b      	bne.n	90007572 <BSP_TS_Init+0xe2>
9000749a:	680b      	ldr	r3, [r1, #0]
9000749c:	460c      	mov	r4, r1
9000749e:	1e5a      	subs	r2, r3, #1
900074a0:	f5b2 7ff0 	cmp.w	r2, #480	; 0x1e0
900074a4:	d265      	bcs.n	90007572 <BSP_TS_Init+0xe2>
                         (TS_Init->Height == 0U) ||( TS_Init->Height > TS_MAX_HEIGHT) ||\
900074a6:	684a      	ldr	r2, [r1, #4]
900074a8:	1e51      	subs	r1, r2, #1
900074aa:	f5b1 7f88 	cmp.w	r1, #272	; 0x110
900074ae:	d260      	bcs.n	90007572 <BSP_TS_Init+0xe2>
                         (TS_Init->Accuracy > TS_MIN((TS_Init->Width), (TS_Init->Height))))
900074b0:	4293      	cmp	r3, r2
900074b2:	bf28      	it	cs
900074b4:	4613      	movcs	r3, r2
                         (TS_Init->Height == 0U) ||( TS_Init->Height > TS_MAX_HEIGHT) ||\
900074b6:	68e2      	ldr	r2, [r4, #12]
900074b8:	429a      	cmp	r2, r3
900074ba:	d85a      	bhi.n	90007572 <BSP_TS_Init+0xe2>
  FT5336_IO_t              IOCtx;
  static FT5336_Object_t   FT5336Obj;
  uint32_t ft5336_id       = 0;

  /* Configure the touch screen driver */
  IOCtx.Address     = TS_I2C_ADDRESS;
900074bc:	2270      	movs	r2, #112	; 0x70
  IOCtx.Init        = BSP_I2C4_Init;
900074be:	4b31      	ldr	r3, [pc, #196]	; (90007584 <BSP_TS_Init+0xf4>)
  IOCtx.DeInit      = BSP_I2C4_DeInit;
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
  IOCtx.GetTick     = BSP_GetTick;

  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
900074c0:	4d31      	ldr	r5, [pc, #196]	; (90007588 <BSP_TS_Init+0xf8>)
900074c2:	a902      	add	r1, sp, #8
  IOCtx.Address     = TS_I2C_ADDRESS;
900074c4:	f8ad 2010 	strh.w	r2, [sp, #16]
  IOCtx.Init        = BSP_I2C4_Init;
900074c8:	9302      	str	r3, [sp, #8]
  IOCtx.DeInit      = BSP_I2C4_DeInit;
900074ca:	4a30      	ldr	r2, [pc, #192]	; (9000758c <BSP_TS_Init+0xfc>)
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
900074cc:	4b30      	ldr	r3, [pc, #192]	; (90007590 <BSP_TS_Init+0x100>)
  IOCtx.DeInit      = BSP_I2C4_DeInit;
900074ce:	9203      	str	r2, [sp, #12]
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
900074d0:	9306      	str	r3, [sp, #24]
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
900074d2:	4a30      	ldr	r2, [pc, #192]	; (90007594 <BSP_TS_Init+0x104>)
  IOCtx.GetTick     = BSP_GetTick;
900074d4:	4b30      	ldr	r3, [pc, #192]	; (90007598 <BSP_TS_Init+0x108>)
  uint32_t ft5336_id       = 0;
900074d6:	9001      	str	r0, [sp, #4]
  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
900074d8:	4628      	mov	r0, r5
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
900074da:	9205      	str	r2, [sp, #20]
  IOCtx.GetTick     = BSP_GetTick;
900074dc:	9307      	str	r3, [sp, #28]
  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
900074de:	f7ff f93f 	bl	90006760 <FT5336_RegisterBusIO>
900074e2:	2800      	cmp	r0, #0
900074e4:	d14b      	bne.n	9000757e <BSP_TS_Init+0xee>
  {
    ret = BSP_ERROR_BUS_FAILURE;
  }
  else if(FT5336_ReadID(&FT5336Obj, &ft5336_id) != FT5336_OK)
900074e6:	a901      	add	r1, sp, #4
900074e8:	4628      	mov	r0, r5
900074ea:	f7ff f82f 	bl	9000654c <FT5336_ReadID>
900074ee:	2800      	cmp	r0, #0
900074f0:	d145      	bne.n	9000757e <BSP_TS_Init+0xee>
  {
    ret = BSP_ERROR_COMPONENT_FAILURE;
  }
  else if(ft5336_id != FT5336_ID)
900074f2:	9b01      	ldr	r3, [sp, #4]
900074f4:	2b51      	cmp	r3, #81	; 0x51
900074f6:	d142      	bne.n	9000757e <BSP_TS_Init+0xee>
    ret = BSP_ERROR_UNKNOWN_COMPONENT;
  }
  else
  {
    Ts_CompObj[Instance] = &FT5336Obj;
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
900074f8:	4b28      	ldr	r3, [pc, #160]	; (9000759c <BSP_TS_Init+0x10c>)

    if(Ts_Drv->Init(Ts_CompObj[Instance]) != FT5336_OK)
900074fa:	4628      	mov	r0, r5
    Ts_CompObj[Instance] = &FT5336Obj;
900074fc:	4f28      	ldr	r7, [pc, #160]	; (900075a0 <BSP_TS_Init+0x110>)
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
900074fe:	f8df 80a8 	ldr.w	r8, [pc, #168]	; 900075a8 <BSP_TS_Init+0x118>
    Ts_CompObj[Instance] = &FT5336Obj;
90007502:	603d      	str	r5, [r7, #0]
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
90007504:	f8c8 3000 	str.w	r3, [r8]
    if(Ts_Drv->Init(Ts_CompObj[Instance]) != FT5336_OK)
90007508:	681b      	ldr	r3, [r3, #0]
9000750a:	4798      	blx	r3
9000750c:	4606      	mov	r6, r0
9000750e:	2800      	cmp	r0, #0
90007510:	d135      	bne.n	9000757e <BSP_TS_Init+0xee>
      Ts_Ctx[Instance].Width             = TS_Init->Width;
90007512:	4d24      	ldr	r5, [pc, #144]	; (900075a4 <BSP_TS_Init+0x114>)
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
90007514:	a902      	add	r1, sp, #8
90007516:	6838      	ldr	r0, [r7, #0]
90007518:	f8d8 3000 	ldr.w	r3, [r8]
      Ts_Ctx[Instance].Width             = TS_Init->Width;
9000751c:	e9d4 7200 	ldrd	r7, r2, [r4]
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
90007520:	69db      	ldr	r3, [r3, #28]
      Ts_Ctx[Instance].Width             = TS_Init->Width;
90007522:	e9c5 7200 	strd	r7, r2, [r5]
90007526:	68a2      	ldr	r2, [r4, #8]
90007528:	60aa      	str	r2, [r5, #8]
9000752a:	68e2      	ldr	r2, [r4, #12]
9000752c:	60ea      	str	r2, [r5, #12]
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
9000752e:	4798      	blx	r3
90007530:	2800      	cmp	r0, #0
90007532:	db18      	blt.n	90007566 <BSP_TS_Init+0xd6>
        Ts_Ctx[Instance].MaxX = Capabilities.MaxXl;
90007534:	e9dd 3203 	ldrd	r3, r2, [sp, #12]
90007538:	e9c5 3204 	strd	r3, r2, [r5, #16]
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
9000753c:	68e3      	ldr	r3, [r4, #12]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
9000753e:	e9d4 2100 	ldrd	r2, r1, [r4]
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90007542:	441a      	add	r2, r3
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90007544:	440b      	add	r3, r1
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90007546:	3201      	adds	r2, #1
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90007548:	3301      	adds	r3, #1
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
9000754a:	e9c5 2206 	strd	r2, r2, [r5, #24]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
9000754e:	e9c5 330b 	strd	r3, r3, [r5, #44]	; 0x2c
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90007552:	622a      	str	r2, [r5, #32]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90007554:	636b      	str	r3, [r5, #52]	; 0x34
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90007556:	626a      	str	r2, [r5, #36]	; 0x24
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90007558:	63ab      	str	r3, [r5, #56]	; 0x38
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
9000755a:	62aa      	str	r2, [r5, #40]	; 0x28
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
9000755c:	63eb      	str	r3, [r5, #60]	; 0x3c
}
9000755e:	4630      	mov	r0, r6
90007560:	b008      	add	sp, #32
90007562:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        ret = BSP_ERROR_COMPONENT_FAILURE;
90007566:	f06f 0604 	mvn.w	r6, #4
}
9000756a:	4630      	mov	r0, r6
9000756c:	b008      	add	sp, #32
9000756e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    ret = BSP_ERROR_WRONG_PARAM;
90007572:	f06f 0601 	mvn.w	r6, #1
}
90007576:	4630      	mov	r0, r6
90007578:	b008      	add	sp, #32
9000757a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      ret = BSP_ERROR_NO_INIT;
9000757e:	f04f 36ff 	mov.w	r6, #4294967295
90007582:	e7ec      	b.n	9000755e <BSP_TS_Init+0xce>
90007584:	90006a05 	.word	0x90006a05
90007588:	2400a108 	.word	0x2400a108
9000758c:	90006971 	.word	0x90006971
90007590:	900071dd 	.word	0x900071dd
90007594:	900071a1 	.word	0x900071a1
90007598:	90007219 	.word	0x90007219
9000759c:	24000030 	.word	0x24000030
900075a0:	2400a130 	.word	0x2400a130
900075a4:	2400a134 	.word	0x2400a134
900075a8:	2400a174 	.word	0x2400a174

900075ac <BSP_TS_GetState>:
  if(Instance >= TS_INSTANCES_NBR)
900075ac:	2800      	cmp	r0, #0
900075ae:	d157      	bne.n	90007660 <BSP_TS_GetState+0xb4>
    if(Ts_Drv->GetState(Ts_CompObj[Instance], &state) < 0)
900075b0:	4b2d      	ldr	r3, [pc, #180]	; (90007668 <BSP_TS_GetState+0xbc>)
900075b2:	4a2e      	ldr	r2, [pc, #184]	; (9000766c <BSP_TS_GetState+0xc0>)
900075b4:	681b      	ldr	r3, [r3, #0]
900075b6:	6810      	ldr	r0, [r2, #0]
900075b8:	691b      	ldr	r3, [r3, #16]
{
900075ba:	b5f0      	push	{r4, r5, r6, r7, lr}
900075bc:	b085      	sub	sp, #20
900075be:	460c      	mov	r4, r1
    if(Ts_Drv->GetState(Ts_CompObj[Instance], &state) < 0)
900075c0:	a901      	add	r1, sp, #4
900075c2:	4798      	blx	r3
900075c4:	2800      	cmp	r0, #0
900075c6:	db41      	blt.n	9000764c <BSP_TS_GetState+0xa0>
    else if(state.TouchDetected != 0U)
900075c8:	9d01      	ldr	r5, [sp, #4]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_XY) == TS_SWAP_XY)
900075ca:	4b29      	ldr	r3, [pc, #164]	; (90007670 <BSP_TS_GetState+0xc4>)
    else if(state.TouchDetected != 0U)
900075cc:	b93d      	cbnz	r5, 900075de <BSP_TS_GetState+0x32>
      TS_State->TouchX = Ts_Ctx[Instance].PreviousX[0];
900075ce:	699a      	ldr	r2, [r3, #24]
  int32_t ret = BSP_ERROR_NONE;
900075d0:	4628      	mov	r0, r5
      TS_State->TouchY = Ts_Ctx[Instance].PreviousY[0];
900075d2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
      TS_State->TouchDetected = 0U;
900075d4:	6025      	str	r5, [r4, #0]
      TS_State->TouchY = Ts_Ctx[Instance].PreviousY[0];
900075d6:	e9c4 2301 	strd	r2, r3, [r4, #4]
}
900075da:	b005      	add	sp, #20
900075dc:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_XY) == TS_SWAP_XY)
900075de:	6898      	ldr	r0, [r3, #8]
900075e0:	0702      	lsls	r2, r0, #28
      y_oriented = state.TouchY;
900075e2:	e9dd c702 	ldrd	ip, r7, [sp, #8]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_XY) == TS_SWAP_XY)
900075e6:	d435      	bmi.n	90007654 <BSP_TS_GetState+0xa8>
      y_oriented = state.TouchY;
900075e8:	4639      	mov	r1, r7
      x_oriented = state.TouchX;
900075ea:	4662      	mov	r2, ip
        x_oriented = Ts_Ctx[Instance].MaxX - state.TouchX - 1UL;
900075ec:	691e      	ldr	r6, [r3, #16]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_X) == TS_SWAP_X)
900075ee:	f010 0f02 	tst.w	r0, #2
        x_oriented = Ts_Ctx[Instance].MaxX - state.TouchX - 1UL;
900075f2:	bf1c      	itt	ne
900075f4:	f106 32ff 	addne.w	r2, r6, #4294967295
900075f8:	eba2 020c 	subne.w	r2, r2, ip
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_Y) == TS_SWAP_Y)
900075fc:	f010 0f04 	tst.w	r0, #4
        y_oriented = Ts_Ctx[Instance].MaxY - state.TouchY;
90007600:	6958      	ldr	r0, [r3, #20]
90007602:	bf18      	it	ne
90007604:	1bc1      	subne	r1, r0, r7
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
90007606:	681f      	ldr	r7, [r3, #0]
90007608:	fb07 f202 	mul.w	r2, r7, r2
9000760c:	fbb2 f2f6 	udiv	r2, r2, r6
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
90007610:	685e      	ldr	r6, [r3, #4]
      TS_State->TouchDetected = state.TouchDetected;
90007612:	6025      	str	r5, [r4, #0]
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
90007614:	fb06 f101 	mul.w	r1, r6, r1
      x_diff = (TS_State->TouchX > Ts_Ctx[Instance].PreviousX[0])?
90007618:	699e      	ldr	r6, [r3, #24]
        y_diff = (TS_State->TouchY > Ts_Ctx[Instance].PreviousY[0])?
9000761a:	6add      	ldr	r5, [r3, #44]	; 0x2c
        (TS_State->TouchX - Ts_Ctx[Instance].PreviousX[0]):
9000761c:	42b2      	cmp	r2, r6
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
9000761e:	6062      	str	r2, [r4, #4]
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
90007620:	fbb1 f1f0 	udiv	r1, r1, r0
        (TS_State->TouchX - Ts_Ctx[Instance].PreviousX[0]):
90007624:	bf8c      	ite	hi
90007626:	1b90      	subhi	r0, r2, r6
90007628:	1ab0      	subls	r0, r6, r2
          (TS_State->TouchY - Ts_Ctx[Instance].PreviousY[0]):
9000762a:	42a9      	cmp	r1, r5
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
9000762c:	60a1      	str	r1, [r4, #8]
          (TS_State->TouchY - Ts_Ctx[Instance].PreviousY[0]):
9000762e:	bf8c      	ite	hi
90007630:	1b4f      	subhi	r7, r1, r5
90007632:	1a6f      	subls	r7, r5, r1
          if ((x_diff > Ts_Ctx[Instance].Accuracy) || (y_diff > Ts_Ctx[Instance].Accuracy))
90007634:	42b8      	cmp	r0, r7
90007636:	bf38      	it	cc
90007638:	4638      	movcc	r0, r7
9000763a:	68df      	ldr	r7, [r3, #12]
9000763c:	4287      	cmp	r7, r0
  int32_t ret = BSP_ERROR_NONE;
9000763e:	f04f 0000 	mov.w	r0, #0
          if ((x_diff > Ts_Ctx[Instance].Accuracy) || (y_diff > Ts_Ctx[Instance].Accuracy))
90007642:	d20a      	bcs.n	9000765a <BSP_TS_GetState+0xae>
            Ts_Ctx[Instance].PreviousX[0] = TS_State->TouchX;
90007644:	619a      	str	r2, [r3, #24]
            Ts_Ctx[Instance].PreviousY[0] = TS_State->TouchY;
90007646:	62d9      	str	r1, [r3, #44]	; 0x2c
}
90007648:	b005      	add	sp, #20
9000764a:	bdf0      	pop	{r4, r5, r6, r7, pc}
      ret = BSP_ERROR_COMPONENT_FAILURE;
9000764c:	f06f 0004 	mvn.w	r0, #4
}
90007650:	b005      	add	sp, #20
90007652:	bdf0      	pop	{r4, r5, r6, r7, pc}
        y_oriented = state.TouchX;
90007654:	4661      	mov	r1, ip
        x_oriented = state.TouchY;
90007656:	463a      	mov	r2, r7
90007658:	e7c8      	b.n	900075ec <BSP_TS_GetState+0x40>
            TS_State->TouchY = Ts_Ctx[Instance].PreviousY[0];
9000765a:	e9c4 6501 	strd	r6, r5, [r4, #4]
9000765e:	e7bc      	b.n	900075da <BSP_TS_GetState+0x2e>
    ret = BSP_ERROR_WRONG_PARAM;
90007660:	f06f 0001 	mvn.w	r0, #1
}
90007664:	4770      	bx	lr
90007666:	bf00      	nop
90007668:	2400a174 	.word	0x2400a174
9000766c:	2400a130 	.word	0x2400a130
90007670:	2400a134 	.word	0x2400a134

90007674 <SystemInit>:
#endif

extern unsigned int VECTOR_TABLE_LOCATION;

void SystemInit (void)
{
90007674:	b410      	push	{r4}
 __IO uint32_t tmpreg;
#endif /* DATA_IN_D2_SRAM */

  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
90007676:	4c19      	ldr	r4, [pc, #100]	; (900076dc <SystemInit+0x68>)
  /* Reset the RCC clock configuration to the default reset state ------------*/
  /* Set HSION bit */
  RCC->CR |= RCC_CR_HSION;

  /* Reset CFGR register */
  RCC->CFGR = 0x00000000;
90007678:	2200      	movs	r2, #0
  RCC->CR |= RCC_CR_HSION;
9000767a:	4b19      	ldr	r3, [pc, #100]	; (900076e0 <SystemInit+0x6c>)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
9000767c:	f8d4 1088 	ldr.w	r1, [r4, #136]	; 0x88

  /* Reset HSEON, CSSON , CSION,RC48ON, CSIKERON PLL1ON, PLL2ON and PLL3ON bits */
  RCC->CR &= 0xEAF6ED7FU;
90007680:	4818      	ldr	r0, [pc, #96]	; (900076e4 <SystemInit+0x70>)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
90007682:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
90007686:	f8c4 1088 	str.w	r1, [r4, #136]	; 0x88
  RCC->CR |= RCC_CR_HSION;
9000768a:	6819      	ldr	r1, [r3, #0]
  SCB->VTOR = FLASH_BANK2_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
#endif /* VECT_TAB_SRAM */

#else
  /* dual core CM7 or single core line */
  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
9000768c:	4c16      	ldr	r4, [pc, #88]	; (900076e8 <SystemInit+0x74>)
  RCC->CR |= RCC_CR_HSION;
9000768e:	f041 0101 	orr.w	r1, r1, #1
90007692:	6019      	str	r1, [r3, #0]
  RCC->CFGR = 0x00000000;
90007694:	611a      	str	r2, [r3, #16]
  RCC->CR &= 0xEAF6ED7FU;
90007696:	6819      	ldr	r1, [r3, #0]
90007698:	4008      	ands	r0, r1
  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
9000769a:	4914      	ldr	r1, [pc, #80]	; (900076ec <SystemInit+0x78>)
  RCC->CR &= 0xEAF6ED7FU;
9000769c:	6018      	str	r0, [r3, #0]
  RCC->D1CFGR = 0x00000000;
9000769e:	619a      	str	r2, [r3, #24]
  RCC->D2CFGR = 0x00000000;
900076a0:	61da      	str	r2, [r3, #28]
  RCC->D3CFGR = 0x00000000;
900076a2:	621a      	str	r2, [r3, #32]
  RCC->PLLCKSELR = 0x00000000;
900076a4:	629a      	str	r2, [r3, #40]	; 0x28
  RCC->PLLCFGR = 0x00000000;
900076a6:	62da      	str	r2, [r3, #44]	; 0x2c
  RCC->PLL1DIVR = 0x00000000;
900076a8:	631a      	str	r2, [r3, #48]	; 0x30
  RCC->PLL1FRACR = 0x00000000;
900076aa:	635a      	str	r2, [r3, #52]	; 0x34
  RCC->PLL2DIVR = 0x00000000;
900076ac:	639a      	str	r2, [r3, #56]	; 0x38
  RCC->PLL2FRACR = 0x00000000;
900076ae:	63da      	str	r2, [r3, #60]	; 0x3c
  RCC->PLL3DIVR = 0x00000000;
900076b0:	641a      	str	r2, [r3, #64]	; 0x40
  RCC->PLL3FRACR = 0x00000000;
900076b2:	645a      	str	r2, [r3, #68]	; 0x44
  RCC->CR &= 0xFFFBFFFFU;
900076b4:	6818      	ldr	r0, [r3, #0]
900076b6:	f420 2080 	bic.w	r0, r0, #262144	; 0x40000
900076ba:	6018      	str	r0, [r3, #0]
  RCC->CIER = 0x00000000;
900076bc:	661a      	str	r2, [r3, #96]	; 0x60
  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
900076be:	6823      	ldr	r3, [r4, #0]
900076c0:	4019      	ands	r1, r3
900076c2:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
900076c6:	d203      	bcs.n	900076d0 <SystemInit+0x5c>
  {
    /* if stm32h7 revY*/
    /* Change  the switch matrix read issuing capability to 1 for the AXI SRAM target (Target 7) */
    *((__IO uint32_t*)0x51008108) = 0x000000001U;
900076c8:	4b09      	ldr	r3, [pc, #36]	; (900076f0 <SystemInit+0x7c>)
900076ca:	2201      	movs	r2, #1
900076cc:	f8c3 2108 	str.w	r2, [r3, #264]	; 0x108

  /* Configure the Vector Table location add offset address for cortex-M7 ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = D1_AXISRAM_BASE  | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal D1 AXI-RAM */
#elif defined(VECT_TAB_QSPI)
  SCB->VTOR = (unsigned int)&VECTOR_TABLE_LOCATION; /* Vector Table Relocation in External FLASH */
900076d0:	4a08      	ldr	r2, [pc, #32]	; (900076f4 <SystemInit+0x80>)
900076d2:	4b02      	ldr	r3, [pc, #8]	; (900076dc <SystemInit+0x68>)
  SCB->VTOR = FLASH_BANK1_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
#endif

#endif /*DUAL_CORE && CORE_CM4*/

}
900076d4:	f85d 4b04 	ldr.w	r4, [sp], #4
  SCB->VTOR = (unsigned int)&VECTOR_TABLE_LOCATION; /* Vector Table Relocation in External FLASH */
900076d8:	609a      	str	r2, [r3, #8]
}
900076da:	4770      	bx	lr
900076dc:	e000ed00 	.word	0xe000ed00
900076e0:	58024400 	.word	0x58024400
900076e4:	eaf6ed7f 	.word	0xeaf6ed7f
900076e8:	5c001000 	.word	0x5c001000
900076ec:	ffff0000 	.word	0xffff0000
900076f0:	51008000 	.word	0x51008000
900076f4:	90000000 	.word	0x90000000

900076f8 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
900076f8:	b510      	push	{r4, lr}
   __HAL_ART_CONFIG_BASE_ADDRESS(0x08100000UL);  /* Configure the Cortex-M4 ART Base address to the Flash Bank 2 : */
   __HAL_ART_ENABLE();                           /* Enable the Cortex-M4 ART */
#endif /* DUAL_CORE &&  CORE_CM4 */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
900076fa:	2003      	movs	r0, #3
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE)>> RCC_CDCFGR1_CDCPRE_Pos]) & 0x1FU);
#endif

  /* Update the SystemD2Clock global variable */
#if defined(RCC_D1CFGR_HPRE)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
900076fc:	4c12      	ldr	r4, [pc, #72]	; (90007748 <HAL_Init+0x50>)
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
900076fe:	f000 f843 	bl	90007788 <HAL_NVIC_SetPriorityGrouping>
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90007702:	f003 fc65 	bl	9000afd0 <HAL_RCC_GetSysClockFreq>
90007706:	4b11      	ldr	r3, [pc, #68]	; (9000774c <HAL_Init+0x54>)
90007708:	4911      	ldr	r1, [pc, #68]	; (90007750 <HAL_Init+0x58>)
9000770a:	699a      	ldr	r2, [r3, #24]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000770c:	699b      	ldr	r3, [r3, #24]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000770e:	f3c2 2203 	ubfx	r2, r2, #8, #4
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90007712:	f003 030f 	and.w	r3, r3, #15
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90007716:	5c8a      	ldrb	r2, [r1, r2]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90007718:	5ccb      	ldrb	r3, [r1, r3]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000771a:	f002 021f 	and.w	r2, r2, #31
#endif

#if defined(DUAL_CORE) && defined(CORE_CM4)
  SystemCoreClock = SystemD2Clock;
#else
  SystemCoreClock = common_system_clock;
9000771e:	490d      	ldr	r1, [pc, #52]	; (90007754 <HAL_Init+0x5c>)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90007720:	f003 031f 	and.w	r3, r3, #31
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90007724:	40d0      	lsrs	r0, r2
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90007726:	fa20 f303 	lsr.w	r3, r0, r3
  SystemCoreClock = common_system_clock;
9000772a:	6008      	str	r0, [r1, #0]
#endif /* DUAL_CORE && CORE_CM4 */

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
9000772c:	2000      	movs	r0, #0
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000772e:	6023      	str	r3, [r4, #0]
  if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
90007730:	f7fb ff8c 	bl	9000364c <HAL_InitTick>
90007734:	b110      	cbz	r0, 9000773c <HAL_Init+0x44>
  {
    return HAL_ERROR;
90007736:	2401      	movs	r4, #1
  /* Init the low level hardware */
  HAL_MspInit();

  /* Return function status */
  return HAL_OK;
}
90007738:	4620      	mov	r0, r4
9000773a:	bd10      	pop	{r4, pc}
9000773c:	4604      	mov	r4, r0
  HAL_MspInit();
9000773e:	f7fb fd43 	bl	900031c8 <HAL_MspInit>
}
90007742:	4620      	mov	r0, r4
90007744:	bd10      	pop	{r4, pc}
90007746:	bf00      	nop
90007748:	24000064 	.word	0x24000064
9000774c:	58024400 	.word	0x58024400
90007750:	90029b34 	.word	0x90029b34
90007754:	24000060 	.word	0x24000060

90007758 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += (uint32_t)uwTickFreq;
90007758:	4a03      	ldr	r2, [pc, #12]	; (90007768 <HAL_IncTick+0x10>)
9000775a:	4b04      	ldr	r3, [pc, #16]	; (9000776c <HAL_IncTick+0x14>)
9000775c:	6811      	ldr	r1, [r2, #0]
9000775e:	781b      	ldrb	r3, [r3, #0]
90007760:	440b      	add	r3, r1
90007762:	6013      	str	r3, [r2, #0]
}
90007764:	4770      	bx	lr
90007766:	bf00      	nop
90007768:	2400a178 	.word	0x2400a178
9000776c:	24000068 	.word	0x24000068

90007770 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
90007770:	4b01      	ldr	r3, [pc, #4]	; (90007778 <HAL_GetTick+0x8>)
90007772:	6818      	ldr	r0, [r3, #0]
}
90007774:	4770      	bx	lr
90007776:	bf00      	nop
90007778:	2400a178 	.word	0x2400a178

9000777c <HAL_GetREVID>:
  * @brief  Returns the device revision identifier.
  * @retval Device revision identifier
  */
uint32_t HAL_GetREVID(void)
{
   return((DBGMCU->IDCODE) >> 16);
9000777c:	4b01      	ldr	r3, [pc, #4]	; (90007784 <HAL_GetREVID+0x8>)
9000777e:	6818      	ldr	r0, [r3, #0]
}
90007780:	0c00      	lsrs	r0, r0, #16
90007782:	4770      	bx	lr
90007784:	5c001000 	.word	0x5c001000

90007788 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
90007788:	4906      	ldr	r1, [pc, #24]	; (900077a4 <HAL_NVIC_SetPriorityGrouping+0x1c>)
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
9000778a:	f64f 0cff 	movw	ip, #63743	; 0xf8ff
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
9000778e:	0200      	lsls	r0, r0, #8
  reg_value  =  (reg_value                                   |
90007790:	4b05      	ldr	r3, [pc, #20]	; (900077a8 <HAL_NVIC_SetPriorityGrouping+0x20>)
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
90007792:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
90007794:	f400 60e0 	and.w	r0, r0, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
90007798:	ea02 020c 	and.w	r2, r2, ip
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
9000779c:	4310      	orrs	r0, r2
  reg_value  =  (reg_value                                   |
9000779e:	4303      	orrs	r3, r0
  SCB->AIRCR =  reg_value;
900077a0:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));

  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
900077a2:	4770      	bx	lr
900077a4:	e000ed00 	.word	0xe000ed00
900077a8:	05fa0000 	.word	0x05fa0000

900077ac <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
900077ac:	4b1b      	ldr	r3, [pc, #108]	; (9000781c <HAL_NVIC_SetPriority+0x70>)
900077ae:	68db      	ldr	r3, [r3, #12]
900077b0:	f3c3 2302 	ubfx	r3, r3, #8, #3
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{
900077b4:	b500      	push	{lr}
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
900077b6:	f1c3 0e07 	rsb	lr, r3, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
900077ba:	f103 0c04 	add.w	ip, r3, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
900077be:	f1be 0f04 	cmp.w	lr, #4
900077c2:	bf28      	it	cs
900077c4:	f04f 0e04 	movcs.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
900077c8:	f1bc 0f06 	cmp.w	ip, #6
900077cc:	d91a      	bls.n	90007804 <HAL_NVIC_SetPriority+0x58>
900077ce:	3b03      	subs	r3, #3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
900077d0:	f04f 3cff 	mov.w	ip, #4294967295
900077d4:	fa0c fc03 	lsl.w	ip, ip, r3
900077d8:	ea22 020c 	bic.w	r2, r2, ip
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
900077dc:	f04f 3cff 	mov.w	ip, #4294967295
  if ((int32_t)(IRQn) >= 0)
900077e0:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
900077e2:	fa0c fc0e 	lsl.w	ip, ip, lr
900077e6:	ea21 010c 	bic.w	r1, r1, ip
900077ea:	fa01 f103 	lsl.w	r1, r1, r3
900077ee:	ea41 0102 	orr.w	r1, r1, r2
  if ((int32_t)(IRQn) >= 0)
900077f2:	db0a      	blt.n	9000780a <HAL_NVIC_SetPriority+0x5e>
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
900077f4:	0109      	lsls	r1, r1, #4
900077f6:	4b0a      	ldr	r3, [pc, #40]	; (90007820 <HAL_NVIC_SetPriority+0x74>)
900077f8:	b2c9      	uxtb	r1, r1
900077fa:	4403      	add	r3, r0
900077fc:	f883 1300 	strb.w	r1, [r3, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));

  prioritygroup = NVIC_GetPriorityGrouping();

  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
90007800:	f85d fb04 	ldr.w	pc, [sp], #4
90007804:	2200      	movs	r2, #0
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
90007806:	4613      	mov	r3, r2
90007808:	e7e8      	b.n	900077dc <HAL_NVIC_SetPriority+0x30>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
9000780a:	f000 000f 	and.w	r0, r0, #15
9000780e:	0109      	lsls	r1, r1, #4
90007810:	4b04      	ldr	r3, [pc, #16]	; (90007824 <HAL_NVIC_SetPriority+0x78>)
90007812:	b2c9      	uxtb	r1, r1
90007814:	4403      	add	r3, r0
90007816:	7619      	strb	r1, [r3, #24]
90007818:	f85d fb04 	ldr.w	pc, [sp], #4
9000781c:	e000ed00 	.word	0xe000ed00
90007820:	e000e100 	.word	0xe000e100
90007824:	e000ecfc 	.word	0xe000ecfc

90007828 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
90007828:	2800      	cmp	r0, #0
9000782a:	db07      	blt.n	9000783c <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
9000782c:	2301      	movs	r3, #1
9000782e:	f000 011f 	and.w	r1, r0, #31
90007832:	4a03      	ldr	r2, [pc, #12]	; (90007840 <HAL_NVIC_EnableIRQ+0x18>)
90007834:	0940      	lsrs	r0, r0, #5
90007836:	408b      	lsls	r3, r1
90007838:	f842 3020 	str.w	r3, [r2, r0, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
9000783c:	4770      	bx	lr
9000783e:	bf00      	nop
90007840:	e000e100 	.word	0xe000e100

90007844 <HAL_NVIC_DisableIRQ>:
  if ((int32_t)(IRQn) >= 0)
90007844:	2800      	cmp	r0, #0
90007846:	db0c      	blt.n	90007862 <HAL_NVIC_DisableIRQ+0x1e>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90007848:	0943      	lsrs	r3, r0, #5
9000784a:	2201      	movs	r2, #1
9000784c:	f000 001f 	and.w	r0, r0, #31
90007850:	4904      	ldr	r1, [pc, #16]	; (90007864 <HAL_NVIC_DisableIRQ+0x20>)
90007852:	3320      	adds	r3, #32
90007854:	4082      	lsls	r2, r0
90007856:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
9000785a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
9000785e:	f3bf 8f6f 	isb	sy
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
}
90007862:	4770      	bx	lr
90007864:	e000e100 	.word	0xe000e100

90007868 <HAL_MPU_Disable>:
  \details Ensures the apparent order of the explicit memory operations before
           and after the instruction, without ensuring their completion.
 */
__STATIC_FORCEINLINE void __DMB(void)
{
  __ASM volatile ("dmb 0xF":::"memory");
90007868:	f3bf 8f5f 	dmb	sy
{
  /* Make sure outstanding transfers are done */
  __DMB();

  /* Disable fault exceptions */
  SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
9000786c:	4b04      	ldr	r3, [pc, #16]	; (90007880 <HAL_MPU_Disable+0x18>)

  /* Disable the MPU and clear the control register*/
  MPU->CTRL = 0;
9000786e:	2100      	movs	r1, #0
  SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
90007870:	6a5a      	ldr	r2, [r3, #36]	; 0x24
90007872:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
90007876:	625a      	str	r2, [r3, #36]	; 0x24
  MPU->CTRL = 0;
90007878:	f8c3 1094 	str.w	r1, [r3, #148]	; 0x94
}
9000787c:	4770      	bx	lr
9000787e:	bf00      	nop
90007880:	e000ed00 	.word	0xe000ed00

90007884 <HAL_MPU_Enable>:
  * @retval None
  */
void HAL_MPU_Enable(uint32_t MPU_Control)
{
  /* Enable the MPU */
  MPU->CTRL = MPU_Control | MPU_CTRL_ENABLE_Msk;
90007884:	4b06      	ldr	r3, [pc, #24]	; (900078a0 <HAL_MPU_Enable+0x1c>)
90007886:	f040 0001 	orr.w	r0, r0, #1
9000788a:	f8c3 0094 	str.w	r0, [r3, #148]	; 0x94

  /* Enable fault exceptions */
  SCB->SHCSR |= SCB_SHCSR_MEMFAULTENA_Msk;
9000788e:	6a5a      	ldr	r2, [r3, #36]	; 0x24
90007890:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
90007894:	625a      	str	r2, [r3, #36]	; 0x24
  __ASM volatile ("dsb 0xF":::"memory");
90007896:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
9000789a:	f3bf 8f6f 	isb	sy

  /* Ensure MPU setting take effects */
  __DSB();
  __ISB();
}
9000789e:	4770      	bx	lr
900078a0:	e000ed00 	.word	0xe000ed00

900078a4 <HAL_MPU_ConfigRegion>:
  /* Check the parameters */
  assert_param(IS_MPU_REGION_NUMBER(MPU_Init->Number));
  assert_param(IS_MPU_REGION_ENABLE(MPU_Init->Enable));

  /* Set the Region number */
  MPU->RNR = MPU_Init->Number;
900078a4:	4a17      	ldr	r2, [pc, #92]	; (90007904 <HAL_MPU_ConfigRegion+0x60>)
900078a6:	7843      	ldrb	r3, [r0, #1]
900078a8:	f8c2 3098 	str.w	r3, [r2, #152]	; 0x98

  if ((MPU_Init->Enable) != 0UL)
900078ac:	7801      	ldrb	r1, [r0, #0]
900078ae:	b321      	cbz	r1, 900078fa <HAL_MPU_ConfigRegion+0x56>
    assert_param(IS_MPU_ACCESS_CACHEABLE(MPU_Init->IsCacheable));
    assert_param(IS_MPU_ACCESS_BUFFERABLE(MPU_Init->IsBufferable));
    assert_param(IS_MPU_SUB_REGION_DISABLE(MPU_Init->SubRegionDisable));
    assert_param(IS_MPU_REGION_SIZE(MPU_Init->Size));

    MPU->RBAR = MPU_Init->BaseAddress;
900078b0:	6843      	ldr	r3, [r0, #4]
{
900078b2:	b500      	push	{lr}
    MPU->RBAR = MPU_Init->BaseAddress;
900078b4:	f8c2 309c 	str.w	r3, [r2, #156]	; 0x9c
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
                ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
900078b8:	7ac3      	ldrb	r3, [r0, #11]
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
900078ba:	f890 c00c 	ldrb.w	ip, [r0, #12]
                ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
900078be:	061b      	lsls	r3, r3, #24
                ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
                ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
                ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
                ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
900078c0:	f890 e00f 	ldrb.w	lr, [r0, #15]
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
900078c4:	ea43 730c 	orr.w	r3, r3, ip, lsl #28
                ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
900078c8:	f890 c00a 	ldrb.w	ip, [r0, #10]
                ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
900078cc:	430b      	orrs	r3, r1
                ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
900078ce:	7b81      	ldrb	r1, [r0, #14]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
900078d0:	ea43 43cc 	orr.w	r3, r3, ip, lsl #19
                ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
900078d4:	f890 c00d 	ldrb.w	ip, [r0, #13]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
900078d8:	ea43 438c 	orr.w	r3, r3, ip, lsl #18
                ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
900078dc:	f890 c009 	ldrb.w	ip, [r0, #9]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
900078e0:	ea43 4341 	orr.w	r3, r3, r1, lsl #17
900078e4:	7a01      	ldrb	r1, [r0, #8]
900078e6:	ea43 430e 	orr.w	r3, r3, lr, lsl #16
900078ea:	ea43 230c 	orr.w	r3, r3, ip, lsl #8
900078ee:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
900078f2:	f8c2 30a0 	str.w	r3, [r2, #160]	; 0xa0
  else
  {
    MPU->RBAR = 0x00;
    MPU->RASR = 0x00;
  }
}
900078f6:	f85d fb04 	ldr.w	pc, [sp], #4
    MPU->RBAR = 0x00;
900078fa:	f8c2 109c 	str.w	r1, [r2, #156]	; 0x9c
    MPU->RASR = 0x00;
900078fe:	f8c2 10a0 	str.w	r1, [r2, #160]	; 0xa0
90007902:	4770      	bx	lr
90007904:	e000ed00 	.word	0xe000ed00

90007908 <HAL_CRC_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
90007908:	2800      	cmp	r0, #0
9000790a:	d036      	beq.n	9000797a <HAL_CRC_Init+0x72>
{
9000790c:	b510      	push	{r4, lr}
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
9000790e:	7f43      	ldrb	r3, [r0, #29]
90007910:	4604      	mov	r4, r0
90007912:	f003 02ff 	and.w	r2, r3, #255	; 0xff
90007916:	b363      	cbz	r3, 90007972 <HAL_CRC_Init+0x6a>
    hcrc->Lock = HAL_UNLOCKED;
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
  }

  hcrc->State = HAL_CRC_STATE_BUSY;
90007918:	2202      	movs	r2, #2

  /* check whether or not non-default generating polynomial has been
   * picked up by user */
  assert_param(IS_DEFAULT_POLYNOMIAL(hcrc->Init.DefaultPolynomialUse));
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
9000791a:	7923      	ldrb	r3, [r4, #4]
  hcrc->State = HAL_CRC_STATE_BUSY;
9000791c:	7762      	strb	r2, [r4, #29]
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
9000791e:	b9f3      	cbnz	r3, 9000795e <HAL_CRC_Init+0x56>
  {
    /* initialize peripheral with default generating polynomial */
    WRITE_REG(hcrc->Instance->POL, DEFAULT_CRC32_POLY);
90007920:	6823      	ldr	r3, [r4, #0]
90007922:	4a17      	ldr	r2, [pc, #92]	; (90007980 <HAL_CRC_Init+0x78>)
90007924:	615a      	str	r2, [r3, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, CRC_POLYLENGTH_32B);
90007926:	689a      	ldr	r2, [r3, #8]
90007928:	f022 0218 	bic.w	r2, r2, #24
9000792c:	609a      	str	r2, [r3, #8]
  }

  /* check whether or not non-default CRC initial value has been
   * picked up by user */
  assert_param(IS_DEFAULT_INIT_VALUE(hcrc->Init.DefaultInitValueUse));
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
9000792e:	7962      	ldrb	r2, [r4, #5]
90007930:	b18a      	cbz	r2, 90007956 <HAL_CRC_Init+0x4e>
  {
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
  }
  else
  {
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
90007932:	6922      	ldr	r2, [r4, #16]
90007934:	611a      	str	r2, [r3, #16]
  }


  /* set input data inversion mode */
  assert_param(IS_CRC_INPUTDATA_INVERSION_MODE(hcrc->Init.InputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
90007936:	689a      	ldr	r2, [r3, #8]

  /* set output data inversion mode */
  assert_param(IS_CRC_OUTPUTDATA_INVERSION_MODE(hcrc->Init.OutputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
90007938:	e9d4 0105 	ldrd	r0, r1, [r4, #20]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
9000793c:	f022 0260 	bic.w	r2, r2, #96	; 0x60
90007940:	4302      	orrs	r2, r0

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;

  /* Return function status */
  return HAL_OK;
90007942:	2000      	movs	r0, #0
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
90007944:	609a      	str	r2, [r3, #8]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
90007946:	689a      	ldr	r2, [r3, #8]
90007948:	f022 0280 	bic.w	r2, r2, #128	; 0x80
9000794c:	430a      	orrs	r2, r1
  hcrc->State = HAL_CRC_STATE_READY;
9000794e:	2101      	movs	r1, #1
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
90007950:	609a      	str	r2, [r3, #8]
  hcrc->State = HAL_CRC_STATE_READY;
90007952:	7761      	strb	r1, [r4, #29]
}
90007954:	bd10      	pop	{r4, pc}
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
90007956:	f04f 32ff 	mov.w	r2, #4294967295
9000795a:	611a      	str	r2, [r3, #16]
9000795c:	e7eb      	b.n	90007936 <HAL_CRC_Init+0x2e>
    if (HAL_CRCEx_Polynomial_Set(hcrc, hcrc->Init.GeneratingPolynomial, hcrc->Init.CRCLength) != HAL_OK)
9000795e:	e9d4 1202 	ldrd	r1, r2, [r4, #8]
90007962:	4620      	mov	r0, r4
90007964:	f000 f80e 	bl	90007984 <HAL_CRCEx_Polynomial_Set>
90007968:	b908      	cbnz	r0, 9000796e <HAL_CRC_Init+0x66>
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
9000796a:	6823      	ldr	r3, [r4, #0]
9000796c:	e7df      	b.n	9000792e <HAL_CRC_Init+0x26>
    return HAL_ERROR;
9000796e:	2001      	movs	r0, #1
}
90007970:	bd10      	pop	{r4, pc}
    hcrc->Lock = HAL_UNLOCKED;
90007972:	7702      	strb	r2, [r0, #28]
    HAL_CRC_MspInit(hcrc);
90007974:	f7fb fc42 	bl	900031fc <HAL_CRC_MspInit>
90007978:	e7ce      	b.n	90007918 <HAL_CRC_Init+0x10>
    return HAL_ERROR;
9000797a:	2001      	movs	r0, #1
}
9000797c:	4770      	bx	lr
9000797e:	bf00      	nop
90007980:	04c11db7 	.word	0x04c11db7

90007984 <HAL_CRCEx_Polynomial_Set>:

  /* Check the parameters */
  assert_param(IS_CRC_POL_LENGTH(PolyLength));

  /* Ensure that the generating polynomial is odd */ 
  if ((Pol & (uint32_t)(0x1U)) ==  0U)
90007984:	07cb      	lsls	r3, r1, #31
90007986:	d51a      	bpl.n	900079be <HAL_CRCEx_Polynomial_Set+0x3a>
     * definition. HAL_ERROR is reported if Pol degree is
     * larger than that indicated by PolyLength.
     * Look for MSB position: msb will contain the degree of
     *  the second to the largest polynomial member. E.g., for
     *  X^7 + X^6 + X^5 + X^2 + 1, msb = 6. */
    while ((msb-- > 0U) && ((Pol & ((uint32_t)(0x1U) << (msb & 0x1FU))) == 0U))
90007988:	231e      	movs	r3, #30
{
9000798a:	b410      	push	{r4}
9000798c:	e001      	b.n	90007992 <HAL_CRCEx_Polynomial_Set+0xe>
    while ((msb-- > 0U) && ((Pol & ((uint32_t)(0x1U) << (msb & 0x1FU))) == 0U))
9000798e:	3b01      	subs	r3, #1
90007990:	d317      	bcc.n	900079c2 <HAL_CRCEx_Polynomial_Set+0x3e>
90007992:	fa21 fc03 	lsr.w	ip, r1, r3
90007996:	f01c 0f01 	tst.w	ip, #1
9000799a:	d0f8      	beq.n	9000798e <HAL_CRCEx_Polynomial_Set+0xa>
    {
    }

    switch (PolyLength)
9000799c:	2a18      	cmp	r2, #24
9000799e:	d811      	bhi.n	900079c4 <HAL_CRCEx_Polynomial_Set+0x40>
900079a0:	e8df f002 	tbb	[pc, r2]
900079a4:	10101016 	.word	0x10101016
900079a8:	10101010 	.word	0x10101010
900079ac:	10101024 	.word	0x10101024
900079b0:	10101010 	.word	0x10101010
900079b4:	10101021 	.word	0x10101021
900079b8:	10101010 	.word	0x10101010
900079bc:	14          	.byte	0x14
900079bd:	00          	.byte	0x00
    status =  HAL_ERROR;
900079be:	2001      	movs	r0, #1
    /* set generating polynomial size */
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
  }
  /* Return function status */
  return status;
}
900079c0:	4770      	bx	lr
    switch (PolyLength)
900079c2:	b12a      	cbz	r2, 900079d0 <HAL_CRCEx_Polynomial_Set+0x4c>
        status =  HAL_ERROR;
900079c4:	2001      	movs	r0, #1
}
900079c6:	f85d 4b04 	ldr.w	r4, [sp], #4
900079ca:	4770      	bx	lr
        if (msb >= HAL_CRC_LENGTH_7B)
900079cc:	2b06      	cmp	r3, #6
900079ce:	d8f9      	bhi.n	900079c4 <HAL_CRCEx_Polynomial_Set+0x40>
    WRITE_REG(hcrc->Instance->POL, Pol);
900079d0:	6804      	ldr	r4, [r0, #0]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
900079d2:	2000      	movs	r0, #0
    WRITE_REG(hcrc->Instance->POL, Pol);
900079d4:	6161      	str	r1, [r4, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
900079d6:	68a3      	ldr	r3, [r4, #8]
900079d8:	f023 0318 	bic.w	r3, r3, #24
900079dc:	4313      	orrs	r3, r2
900079de:	60a3      	str	r3, [r4, #8]
}
900079e0:	f85d 4b04 	ldr.w	r4, [sp], #4
900079e4:	4770      	bx	lr
        if (msb >= HAL_CRC_LENGTH_8B)
900079e6:	2b07      	cmp	r3, #7
900079e8:	d9f2      	bls.n	900079d0 <HAL_CRCEx_Polynomial_Set+0x4c>
900079ea:	e7eb      	b.n	900079c4 <HAL_CRCEx_Polynomial_Set+0x40>
        if (msb >= HAL_CRC_LENGTH_16B)
900079ec:	2b0f      	cmp	r3, #15
900079ee:	d9ef      	bls.n	900079d0 <HAL_CRCEx_Polynomial_Set+0x4c>
900079f0:	e7e8      	b.n	900079c4 <HAL_CRCEx_Polynomial_Set+0x40>
900079f2:	bf00      	nop

900079f4 <HAL_DMA2D_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
900079f4:	2800      	cmp	r0, #0
900079f6:	d035      	beq.n	90007a64 <HAL_DMA2D_Init+0x70>
{
900079f8:	b538      	push	{r3, r4, r5, lr}

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
900079fa:	f890 3061 	ldrb.w	r3, [r0, #97]	; 0x61
900079fe:	4604      	mov	r4, r0
90007a00:	f003 02ff 	and.w	r2, r3, #255	; 0xff
90007a04:	b34b      	cbz	r3, 90007a5a <HAL_DMA2D_Init+0x66>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
90007a06:	6823      	ldr	r3, [r4, #0]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
90007a08:	2002      	movs	r0, #2
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
90007a0a:	6862      	ldr	r2, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
90007a0c:	f884 0061 	strb.w	r0, [r4, #97]	; 0x61
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
90007a10:	69e1      	ldr	r1, [r4, #28]
90007a12:	681d      	ldr	r5, [r3, #0]
90007a14:	4814      	ldr	r0, [pc, #80]	; (90007a68 <HAL_DMA2D_Init+0x74>)
90007a16:	4311      	orrs	r1, r2

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
90007a18:	68a2      	ldr	r2, [r4, #8]
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
90007a1a:	4028      	ands	r0, r5
             hdma2d->Init.ColorMode | hdma2d->Init.BytesSwap);

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
90007a1c:	68e5      	ldr	r5, [r4, #12]
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
90007a1e:	4301      	orrs	r1, r0
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
90007a20:	69a0      	ldr	r0, [r4, #24]
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
90007a22:	6019      	str	r1, [r3, #0]
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
90007a24:	4302      	orrs	r2, r0
90007a26:	6b59      	ldr	r1, [r3, #52]	; 0x34
90007a28:	4810      	ldr	r0, [pc, #64]	; (90007a6c <HAL_DMA2D_Init+0x78>)
90007a2a:	4008      	ands	r0, r1
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
90007a2c:	4910      	ldr	r1, [pc, #64]	; (90007a70 <HAL_DMA2D_Init+0x7c>)
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
90007a2e:	4302      	orrs	r2, r0
90007a30:	635a      	str	r2, [r3, #52]	; 0x34
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
90007a32:	6c1a      	ldr	r2, [r3, #64]	; 0x40
90007a34:	4011      	ands	r1, r2
  /* DMA2D OPFCCR AI and RBS fields setting (Output Alpha Inversion)*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
90007a36:	e9d4 0204 	ldrd	r0, r2, [r4, #16]
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
90007a3a:	4329      	orrs	r1, r5
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
90007a3c:	0552      	lsls	r2, r2, #21
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
90007a3e:	6419      	str	r1, [r3, #64]	; 0x40
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
90007a40:	6b59      	ldr	r1, [r3, #52]	; 0x34
90007a42:	ea42 5200 	orr.w	r2, r2, r0, lsl #20
             ((hdma2d->Init.AlphaInverted << DMA2D_OPFCCR_AI_Pos) | \
              (hdma2d->Init.RedBlueSwap << DMA2D_OPFCCR_RBS_Pos)));


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
90007a46:	2000      	movs	r0, #0
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
90007a48:	f421 1140 	bic.w	r1, r1, #3145728	; 0x300000
90007a4c:	430a      	orrs	r2, r1
90007a4e:	635a      	str	r2, [r3, #52]	; 0x34

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
90007a50:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
90007a52:	6660      	str	r0, [r4, #100]	; 0x64
  hdma2d->State  = HAL_DMA2D_STATE_READY;
90007a54:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61

  return HAL_OK;
}
90007a58:	bd38      	pop	{r3, r4, r5, pc}
    hdma2d->Lock = HAL_UNLOCKED;
90007a5a:	f880 2060 	strb.w	r2, [r0, #96]	; 0x60
    HAL_DMA2D_MspInit(hdma2d);
90007a5e:	f7fb fbe5 	bl	9000322c <HAL_DMA2D_MspInit>
90007a62:	e7d0      	b.n	90007a06 <HAL_DMA2D_Init+0x12>
    return HAL_ERROR;
90007a64:	2001      	movs	r0, #1
}
90007a66:	4770      	bx	lr
90007a68:	fff8ffbf 	.word	0xfff8ffbf
90007a6c:	fffffef8 	.word	0xfffffef8
90007a70:	ffff0000 	.word	0xffff0000

90007a74 <HAL_DMA2D_LineEventCallback>:
90007a74:	4770      	bx	lr
90007a76:	bf00      	nop

90007a78 <HAL_DMA2D_CLUTLoadingCpltCallback>:
90007a78:	4770      	bx	lr
90007a7a:	bf00      	nop

90007a7c <HAL_DMA2D_IRQHandler>:
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
90007a7c:	6803      	ldr	r3, [r0, #0]
{
90007a7e:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
90007a80:	685d      	ldr	r5, [r3, #4]
{
90007a82:	4604      	mov	r4, r0
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
90007a84:	681e      	ldr	r6, [r3, #0]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
90007a86:	07ea      	lsls	r2, r5, #31
90007a88:	d501      	bpl.n	90007a8e <HAL_DMA2D_IRQHandler+0x12>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
90007a8a:	05f1      	lsls	r1, r6, #23
90007a8c:	d456      	bmi.n	90007b3c <HAL_DMA2D_IRQHandler+0xc0>
        hdma2d->XferErrorCallback(hdma2d);
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
90007a8e:	06aa      	lsls	r2, r5, #26
90007a90:	d501      	bpl.n	90007a96 <HAL_DMA2D_IRQHandler+0x1a>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
90007a92:	04b3      	lsls	r3, r6, #18
90007a94:	d43b      	bmi.n	90007b0e <HAL_DMA2D_IRQHandler+0x92>
        hdma2d->XferErrorCallback(hdma2d);
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
90007a96:	0728      	lsls	r0, r5, #28
90007a98:	d501      	bpl.n	90007a9e <HAL_DMA2D_IRQHandler+0x22>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
90007a9a:	0531      	lsls	r1, r6, #20
90007a9c:	d421      	bmi.n	90007ae2 <HAL_DMA2D_IRQHandler+0x66>
        hdma2d->XferErrorCallback(hdma2d);
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
90007a9e:	076a      	lsls	r2, r5, #29
90007aa0:	d501      	bpl.n	90007aa6 <HAL_DMA2D_IRQHandler+0x2a>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
90007aa2:	0573      	lsls	r3, r6, #21
90007aa4:	d472      	bmi.n	90007b8c <HAL_DMA2D_IRQHandler+0x110>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
90007aa6:	07a8      	lsls	r0, r5, #30
90007aa8:	d501      	bpl.n	90007aae <HAL_DMA2D_IRQHandler+0x32>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
90007aaa:	05b1      	lsls	r1, r6, #22
90007aac:	d404      	bmi.n	90007ab8 <HAL_DMA2D_IRQHandler+0x3c>
        hdma2d->XferCpltCallback(hdma2d);
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
90007aae:	06ea      	lsls	r2, r5, #27
90007ab0:	d501      	bpl.n	90007ab6 <HAL_DMA2D_IRQHandler+0x3a>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
90007ab2:	04f3      	lsls	r3, r6, #19
90007ab4:	d457      	bmi.n	90007b66 <HAL_DMA2D_IRQHandler+0xea>
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
90007ab6:	bd70      	pop	{r4, r5, r6, pc}
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
90007ab8:	6823      	ldr	r3, [r4, #0]
90007aba:	681a      	ldr	r2, [r3, #0]
90007abc:	f422 7200 	bic.w	r2, r2, #512	; 0x200
90007ac0:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
90007ac2:	2202      	movs	r2, #2
90007ac4:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_READY;
90007ac6:	2201      	movs	r2, #1
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
90007ac8:	6e63      	ldr	r3, [r4, #100]	; 0x64
90007aca:	6663      	str	r3, [r4, #100]	; 0x64
      __HAL_UNLOCK(hdma2d);
90007acc:	2300      	movs	r3, #0
      hdma2d->State = HAL_DMA2D_STATE_READY;
90007ace:	f884 2061 	strb.w	r2, [r4, #97]	; 0x61
      __HAL_UNLOCK(hdma2d);
90007ad2:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
      if (hdma2d->XferCpltCallback != NULL)
90007ad6:	6a23      	ldr	r3, [r4, #32]
90007ad8:	2b00      	cmp	r3, #0
90007ada:	d0e8      	beq.n	90007aae <HAL_DMA2D_IRQHandler+0x32>
        hdma2d->XferCpltCallback(hdma2d);
90007adc:	4620      	mov	r0, r4
90007ade:	4798      	blx	r3
90007ae0:	e7e5      	b.n	90007aae <HAL_DMA2D_IRQHandler+0x32>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
90007ae2:	6823      	ldr	r3, [r4, #0]
90007ae4:	681a      	ldr	r2, [r3, #0]
90007ae6:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
90007aea:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
90007aec:	2208      	movs	r2, #8
90007aee:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
90007af0:	2204      	movs	r2, #4
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
90007af2:	6e63      	ldr	r3, [r4, #100]	; 0x64
90007af4:	4313      	orrs	r3, r2
90007af6:	6663      	str	r3, [r4, #100]	; 0x64
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
90007af8:	f884 2061 	strb.w	r2, [r4, #97]	; 0x61
      __HAL_UNLOCK(hdma2d);
90007afc:	2200      	movs	r2, #0
      if (hdma2d->XferErrorCallback != NULL)
90007afe:	6a63      	ldr	r3, [r4, #36]	; 0x24
      __HAL_UNLOCK(hdma2d);
90007b00:	f884 2060 	strb.w	r2, [r4, #96]	; 0x60
      if (hdma2d->XferErrorCallback != NULL)
90007b04:	2b00      	cmp	r3, #0
90007b06:	d0ca      	beq.n	90007a9e <HAL_DMA2D_IRQHandler+0x22>
        hdma2d->XferErrorCallback(hdma2d);
90007b08:	4620      	mov	r0, r4
90007b0a:	4798      	blx	r3
90007b0c:	e7c7      	b.n	90007a9e <HAL_DMA2D_IRQHandler+0x22>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
90007b0e:	6823      	ldr	r3, [r4, #0]
90007b10:	681a      	ldr	r2, [r3, #0]
90007b12:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
90007b16:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
90007b18:	2220      	movs	r2, #32
90007b1a:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
90007b1c:	2204      	movs	r2, #4
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
90007b1e:	6e63      	ldr	r3, [r4, #100]	; 0x64
90007b20:	f043 0302 	orr.w	r3, r3, #2
90007b24:	6663      	str	r3, [r4, #100]	; 0x64
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
90007b26:	f884 2061 	strb.w	r2, [r4, #97]	; 0x61
      __HAL_UNLOCK(hdma2d);
90007b2a:	2200      	movs	r2, #0
      if (hdma2d->XferErrorCallback != NULL)
90007b2c:	6a63      	ldr	r3, [r4, #36]	; 0x24
      __HAL_UNLOCK(hdma2d);
90007b2e:	f884 2060 	strb.w	r2, [r4, #96]	; 0x60
      if (hdma2d->XferErrorCallback != NULL)
90007b32:	2b00      	cmp	r3, #0
90007b34:	d0af      	beq.n	90007a96 <HAL_DMA2D_IRQHandler+0x1a>
        hdma2d->XferErrorCallback(hdma2d);
90007b36:	4620      	mov	r0, r4
90007b38:	4798      	blx	r3
90007b3a:	e7ac      	b.n	90007a96 <HAL_DMA2D_IRQHandler+0x1a>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
90007b3c:	681a      	ldr	r2, [r3, #0]
90007b3e:	f422 7280 	bic.w	r2, r2, #256	; 0x100
90007b42:	601a      	str	r2, [r3, #0]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
90007b44:	6e42      	ldr	r2, [r0, #100]	; 0x64
90007b46:	f042 0201 	orr.w	r2, r2, #1
90007b4a:	6642      	str	r2, [r0, #100]	; 0x64
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
90007b4c:	2201      	movs	r2, #1
90007b4e:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
90007b50:	2304      	movs	r3, #4
90007b52:	f880 3061 	strb.w	r3, [r0, #97]	; 0x61
      __HAL_UNLOCK(hdma2d);
90007b56:	2300      	movs	r3, #0
90007b58:	f880 3060 	strb.w	r3, [r0, #96]	; 0x60
      if (hdma2d->XferErrorCallback != NULL)
90007b5c:	6a43      	ldr	r3, [r0, #36]	; 0x24
90007b5e:	2b00      	cmp	r3, #0
90007b60:	d095      	beq.n	90007a8e <HAL_DMA2D_IRQHandler+0x12>
        hdma2d->XferErrorCallback(hdma2d);
90007b62:	4798      	blx	r3
90007b64:	e793      	b.n	90007a8e <HAL_DMA2D_IRQHandler+0x12>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
90007b66:	6823      	ldr	r3, [r4, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
90007b68:	2010      	movs	r0, #16
      hdma2d->State = HAL_DMA2D_STATE_READY;
90007b6a:	2101      	movs	r1, #1
      __HAL_UNLOCK(hdma2d);
90007b6c:	2500      	movs	r5, #0
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
90007b6e:	681a      	ldr	r2, [r3, #0]
90007b70:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
90007b74:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
90007b76:	6098      	str	r0, [r3, #8]
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
90007b78:	4620      	mov	r0, r4
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
90007b7a:	6e63      	ldr	r3, [r4, #100]	; 0x64
      __HAL_UNLOCK(hdma2d);
90007b7c:	f884 5060 	strb.w	r5, [r4, #96]	; 0x60
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
90007b80:	6663      	str	r3, [r4, #100]	; 0x64
      hdma2d->State = HAL_DMA2D_STATE_READY;
90007b82:	f884 1061 	strb.w	r1, [r4, #97]	; 0x61
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
90007b86:	f7ff ff77 	bl	90007a78 <HAL_DMA2D_CLUTLoadingCpltCallback>
}
90007b8a:	bd70      	pop	{r4, r5, r6, pc}
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
90007b8c:	6823      	ldr	r3, [r4, #0]
      HAL_DMA2D_LineEventCallback(hdma2d);
90007b8e:	4620      	mov	r0, r4
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
90007b90:	681a      	ldr	r2, [r3, #0]
90007b92:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
90007b96:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
90007b98:	2204      	movs	r2, #4
90007b9a:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
90007b9c:	f7ff ff6a 	bl	90007a74 <HAL_DMA2D_LineEventCallback>
90007ba0:	e781      	b.n	90007aa6 <HAL_DMA2D_IRQHandler+0x2a>
90007ba2:	bf00      	nop

90007ba4 <HAL_DMA2D_ConfigLayer>:
  {
    assert_param(IS_DMA2D_CHROMA_SUB_SAMPLING(hdma2d->LayerCfg[LayerIdx].ChromaSubSampling));
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
90007ba4:	f890 2060 	ldrb.w	r2, [r0, #96]	; 0x60
90007ba8:	2a01      	cmp	r2, #1
90007baa:	d065      	beq.n	90007c78 <HAL_DMA2D_ConfigLayer+0xd4>
90007bac:	4603      	mov	r3, r0
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
90007bae:	ebc1 00c1 	rsb	r0, r1, r1, lsl #3
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
90007bb2:	2202      	movs	r2, #2
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
90007bb4:	eb03 0080 	add.w	r0, r3, r0, lsl #2
{
90007bb8:	b470      	push	{r4, r5, r6}
  __HAL_LOCK(hdma2d);
90007bba:	2401      	movs	r4, #1
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
90007bbc:	f883 2061 	strb.w	r2, [r3, #97]	; 0x61
  __HAL_LOCK(hdma2d);
90007bc0:	f883 4060 	strb.w	r4, [r3, #96]	; 0x60
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
90007bc4:	6b82      	ldr	r2, [r0, #56]	; 0x38
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
90007bc6:	6ac4      	ldr	r4, [r0, #44]	; 0x2c
90007bc8:	6b05      	ldr	r5, [r0, #48]	; 0x30
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
90007bca:	0512      	lsls	r2, r2, #20
  regMask  = (DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA | DMA2D_BGPFCCR_AI | DMA2D_BGPFCCR_RBS);


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
90007bcc:	f1a4 0c09 	sub.w	ip, r4, #9
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
90007bd0:	ea42 4205 	orr.w	r2, r2, r5, lsl #16
90007bd4:	6bc5      	ldr	r5, [r0, #60]	; 0x3c
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
90007bd6:	f1bc 0f01 	cmp.w	ip, #1
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
90007bda:	ea42 0204 	orr.w	r2, r2, r4
90007bde:	ea42 5245 	orr.w	r2, r2, r5, lsl #21
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
90007be2:	d922      	bls.n	90007c2a <HAL_DMA2D_ConfigLayer+0x86>
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
  }
  else
  {
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
90007be4:	6b45      	ldr	r5, [r0, #52]	; 0x34
90007be6:	ea42 6205 	orr.w	r2, r2, r5, lsl #24
  }

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
90007bea:	b981      	cbnz	r1, 90007c0e <HAL_DMA2D_ConfigLayer+0x6a>
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90007bec:	6818      	ldr	r0, [r3, #0]
90007bee:	4923      	ldr	r1, [pc, #140]	; (90007c7c <HAL_DMA2D_ConfigLayer+0xd8>)
90007bf0:	6a45      	ldr	r5, [r0, #36]	; 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
90007bf2:	6a9c      	ldr	r4, [r3, #40]	; 0x28
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90007bf4:	4029      	ands	r1, r5
90007bf6:	4311      	orrs	r1, r2
90007bf8:	6241      	str	r1, [r0, #36]	; 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
90007bfa:	6184      	str	r4, [r0, #24]
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
90007bfc:	2200      	movs	r2, #0
  hdma2d->State = HAL_DMA2D_STATE_READY;
90007bfe:	2101      	movs	r1, #1

  return HAL_OK;
90007c00:	4610      	mov	r0, r2
  hdma2d->State = HAL_DMA2D_STATE_READY;
90007c02:	f883 1061 	strb.w	r1, [r3, #97]	; 0x61
  __HAL_UNLOCK(hdma2d);
90007c06:	f883 2060 	strb.w	r2, [r3, #96]	; 0x60
}
90007c0a:	bc70      	pop	{r4, r5, r6}
90007c0c:	4770      	bx	lr
    if (pLayerCfg->InputColorMode == DMA2D_INPUT_YCBCR)
90007c0e:	2c0b      	cmp	r4, #11
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90007c10:	681c      	ldr	r4, [r3, #0]
    if (pLayerCfg->InputColorMode == DMA2D_INPUT_YCBCR)
90007c12:	d129      	bne.n	90007c68 <HAL_DMA2D_ConfigLayer+0xc4>
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90007c14:	69e5      	ldr	r5, [r4, #28]
90007c16:	491a      	ldr	r1, [pc, #104]	; (90007c80 <HAL_DMA2D_ConfigLayer+0xdc>)
90007c18:	4029      	ands	r1, r5
      regValue |= (pLayerCfg->ChromaSubSampling << DMA2D_FGPFCCR_CSS_Pos);
90007c1a:	6c05      	ldr	r5, [r0, #64]	; 0x40
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
90007c1c:	6a80      	ldr	r0, [r0, #40]	; 0x28
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90007c1e:	ea41 4185 	orr.w	r1, r1, r5, lsl #18
90007c22:	4311      	orrs	r1, r2
90007c24:	61e1      	str	r1, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
90007c26:	6120      	str	r0, [r4, #16]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
90007c28:	e7e8      	b.n	90007bfc <HAL_DMA2D_ConfigLayer+0x58>
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
90007c2a:	6b44      	ldr	r4, [r0, #52]	; 0x34
90007c2c:	f004 447f 	and.w	r4, r4, #4278190080	; 0xff000000
90007c30:	4314      	orrs	r4, r2
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
90007c32:	b961      	cbnz	r1, 90007c4e <HAL_DMA2D_ConfigLayer+0xaa>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90007c34:	6819      	ldr	r1, [r3, #0]
90007c36:	4a11      	ldr	r2, [pc, #68]	; (90007c7c <HAL_DMA2D_ConfigLayer+0xd8>)
90007c38:	6a4e      	ldr	r6, [r1, #36]	; 0x24
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
90007c3a:	6b58      	ldr	r0, [r3, #52]	; 0x34
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90007c3c:	4032      	ands	r2, r6
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
90007c3e:	6a9d      	ldr	r5, [r3, #40]	; 0x28
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
90007c40:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90007c44:	4322      	orrs	r2, r4
90007c46:	624a      	str	r2, [r1, #36]	; 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
90007c48:	618d      	str	r5, [r1, #24]
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
90007c4a:	6288      	str	r0, [r1, #40]	; 0x28
90007c4c:	e7d6      	b.n	90007bfc <HAL_DMA2D_ConfigLayer+0x58>
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90007c4e:	6819      	ldr	r1, [r3, #0]
90007c50:	4a0a      	ldr	r2, [pc, #40]	; (90007c7c <HAL_DMA2D_ConfigLayer+0xd8>)
90007c52:	69cd      	ldr	r5, [r1, #28]
90007c54:	402a      	ands	r2, r5
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
90007c56:	6a85      	ldr	r5, [r0, #40]	; 0x28
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90007c58:	4322      	orrs	r2, r4
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
90007c5a:	6b44      	ldr	r4, [r0, #52]	; 0x34
90007c5c:	f024 447f 	bic.w	r4, r4, #4278190080	; 0xff000000
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90007c60:	61ca      	str	r2, [r1, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
90007c62:	610d      	str	r5, [r1, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
90007c64:	620c      	str	r4, [r1, #32]
90007c66:	e7c9      	b.n	90007bfc <HAL_DMA2D_ConfigLayer+0x58>
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90007c68:	69e5      	ldr	r5, [r4, #28]
90007c6a:	4904      	ldr	r1, [pc, #16]	; (90007c7c <HAL_DMA2D_ConfigLayer+0xd8>)
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
90007c6c:	6a80      	ldr	r0, [r0, #40]	; 0x28
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90007c6e:	4029      	ands	r1, r5
90007c70:	4311      	orrs	r1, r2
90007c72:	61e1      	str	r1, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
90007c74:	6120      	str	r0, [r4, #16]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
90007c76:	e7c1      	b.n	90007bfc <HAL_DMA2D_ConfigLayer+0x58>
  __HAL_LOCK(hdma2d);
90007c78:	2002      	movs	r0, #2
}
90007c7a:	4770      	bx	lr
90007c7c:	00ccfff0 	.word	0x00ccfff0
90007c80:	00c0fff0 	.word	0x00c0fff0

90007c84 <HAL_GPIO_Init>:
  * @param  GPIO_Init: pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
90007c84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != 0x00U)
90007c88:	680c      	ldr	r4, [r1, #0]
{
90007c8a:	b083      	sub	sp, #12
  while (((GPIO_Init->Pin) >> position) != 0x00U)
90007c8c:	2c00      	cmp	r4, #0
90007c8e:	f000 80a7 	beq.w	90007de0 <HAL_GPIO_Init+0x15c>
90007c92:	f04f 0c00 	mov.w	ip, #0
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
90007c96:	4f8a      	ldr	r7, [pc, #552]	; (90007ec0 <HAL_GPIO_Init+0x23c>)
  uint32_t position = 0x00U;
90007c98:	4663      	mov	r3, ip
    iocurrent = (GPIO_Init->Pin) & (1UL << position);
90007c9a:	2201      	movs	r2, #1
90007c9c:	409a      	lsls	r2, r3
    if (iocurrent != 0x00U)
90007c9e:	ea12 0e04 	ands.w	lr, r2, r4
90007ca2:	f000 8096 	beq.w	90007dd2 <HAL_GPIO_Init+0x14e>
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
90007ca6:	684d      	ldr	r5, [r1, #4]
90007ca8:	f005 0903 	and.w	r9, r5, #3
90007cac:	f109 36ff 	add.w	r6, r9, #4294967295
90007cb0:	2e01      	cmp	r6, #1
90007cb2:	f240 8098 	bls.w	90007de6 <HAL_GPIO_Init+0x162>
      if ((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
90007cb6:	f1b9 0f03 	cmp.w	r9, #3
90007cba:	f040 80d2 	bne.w	90007e62 <HAL_GPIO_Init+0x1de>
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
90007cbe:	fa09 f20c 	lsl.w	r2, r9, ip
90007cc2:	ea6f 0802 	mvn.w	r8, r2
      temp = GPIOx->MODER;
90007cc6:	6806      	ldr	r6, [r0, #0]
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
90007cc8:	f415 3f40 	tst.w	r5, #196608	; 0x30000
      temp &= ~(GPIO_MODER_MODE0 << (position * 2U));
90007ccc:	ea06 0608 	and.w	r6, r6, r8
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
90007cd0:	ea42 0206 	orr.w	r2, r2, r6
      GPIOx->MODER = temp;
90007cd4:	6002      	str	r2, [r0, #0]
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
90007cd6:	d07c      	beq.n	90007dd2 <HAL_GPIO_Init+0x14e>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
90007cd8:	f8d7 20f4 	ldr.w	r2, [r7, #244]	; 0xf4
90007cdc:	f023 0803 	bic.w	r8, r3, #3

        temp = SYSCFG->EXTICR[position >> 2U];
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
90007ce0:	f003 0903 	and.w	r9, r3, #3
90007ce4:	260f      	movs	r6, #15
        __HAL_RCC_SYSCFG_CLK_ENABLE();
90007ce6:	f042 0202 	orr.w	r2, r2, #2
90007cea:	f108 48b0 	add.w	r8, r8, #1476395008	; 0x58000000
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
90007cee:	ea4f 0989 	mov.w	r9, r9, lsl #2
        __HAL_RCC_SYSCFG_CLK_ENABLE();
90007cf2:	f8c7 20f4 	str.w	r2, [r7, #244]	; 0xf4
90007cf6:	f508 6880 	add.w	r8, r8, #1024	; 0x400
90007cfa:	f8d7 20f4 	ldr.w	r2, [r7, #244]	; 0xf4
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
90007cfe:	fa06 f609 	lsl.w	r6, r6, r9
        __HAL_RCC_SYSCFG_CLK_ENABLE();
90007d02:	f002 0202 	and.w	r2, r2, #2
90007d06:	9201      	str	r2, [sp, #4]
90007d08:	9a01      	ldr	r2, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
90007d0a:	f8d8 2008 	ldr.w	r2, [r8, #8]
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
90007d0e:	ea22 0206 	bic.w	r2, r2, r6
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
90007d12:	4e6c      	ldr	r6, [pc, #432]	; (90007ec4 <HAL_GPIO_Init+0x240>)
90007d14:	42b0      	cmp	r0, r6
90007d16:	d028      	beq.n	90007d6a <HAL_GPIO_Init+0xe6>
90007d18:	f506 6680 	add.w	r6, r6, #1024	; 0x400
90007d1c:	42b0      	cmp	r0, r6
90007d1e:	f000 80ac 	beq.w	90007e7a <HAL_GPIO_Init+0x1f6>
90007d22:	4e69      	ldr	r6, [pc, #420]	; (90007ec8 <HAL_GPIO_Init+0x244>)
90007d24:	42b0      	cmp	r0, r6
90007d26:	f000 80ad 	beq.w	90007e84 <HAL_GPIO_Init+0x200>
90007d2a:	4e68      	ldr	r6, [pc, #416]	; (90007ecc <HAL_GPIO_Init+0x248>)
90007d2c:	42b0      	cmp	r0, r6
90007d2e:	f000 809f 	beq.w	90007e70 <HAL_GPIO_Init+0x1ec>
90007d32:	4e67      	ldr	r6, [pc, #412]	; (90007ed0 <HAL_GPIO_Init+0x24c>)
90007d34:	42b0      	cmp	r0, r6
90007d36:	f000 80af 	beq.w	90007e98 <HAL_GPIO_Init+0x214>
90007d3a:	4e66      	ldr	r6, [pc, #408]	; (90007ed4 <HAL_GPIO_Init+0x250>)
90007d3c:	42b0      	cmp	r0, r6
90007d3e:	f000 80b0 	beq.w	90007ea2 <HAL_GPIO_Init+0x21e>
90007d42:	4e65      	ldr	r6, [pc, #404]	; (90007ed8 <HAL_GPIO_Init+0x254>)
90007d44:	42b0      	cmp	r0, r6
90007d46:	f000 80a2 	beq.w	90007e8e <HAL_GPIO_Init+0x20a>
90007d4a:	4e64      	ldr	r6, [pc, #400]	; (90007edc <HAL_GPIO_Init+0x258>)
90007d4c:	42b0      	cmp	r0, r6
90007d4e:	f000 80ad 	beq.w	90007eac <HAL_GPIO_Init+0x228>
90007d52:	4e63      	ldr	r6, [pc, #396]	; (90007ee0 <HAL_GPIO_Init+0x25c>)
90007d54:	42b0      	cmp	r0, r6
90007d56:	f000 80ae 	beq.w	90007eb6 <HAL_GPIO_Init+0x232>
90007d5a:	4e62      	ldr	r6, [pc, #392]	; (90007ee4 <HAL_GPIO_Init+0x260>)
90007d5c:	42b0      	cmp	r0, r6
90007d5e:	bf0c      	ite	eq
90007d60:	2609      	moveq	r6, #9
90007d62:	260a      	movne	r6, #10
90007d64:	fa06 f609 	lsl.w	r6, r6, r9
90007d68:	4332      	orrs	r2, r6
        SYSCFG->EXTICR[position >> 2U] = temp;
90007d6a:	f8c8 2008 	str.w	r2, [r8, #8]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR1;
90007d6e:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
90007d72:	f415 1f80 	tst.w	r5, #1048576	; 0x100000
        temp &= ~(iocurrent);
90007d76:	ea6f 060e 	mvn.w	r6, lr
        temp = EXTI->RTSR1;
90007d7a:	6812      	ldr	r2, [r2, #0]
        {
          temp |= iocurrent;
        }
        EXTI->RTSR1 = temp;
90007d7c:	f04f 48b0 	mov.w	r8, #1476395008	; 0x58000000
        temp &= ~(iocurrent);
90007d80:	bf0c      	ite	eq
90007d82:	4032      	andeq	r2, r6
          temp |= iocurrent;
90007d84:	ea4e 0202 	orrne.w	r2, lr, r2

        temp = EXTI->FTSR1;
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
90007d88:	f415 1f00 	tst.w	r5, #2097152	; 0x200000
        EXTI->RTSR1 = temp;
90007d8c:	f8c8 2000 	str.w	r2, [r8]
        temp = EXTI->FTSR1;
90007d90:	f8d8 2004 	ldr.w	r2, [r8, #4]
        {
          temp |= iocurrent;
        }
        EXTI->FTSR1 = temp;
90007d94:	f04f 48b0 	mov.w	r8, #1476395008	; 0x58000000
        temp &= ~(iocurrent);
90007d98:	bf0c      	ite	eq
90007d9a:	4032      	andeq	r2, r6
          temp |= iocurrent;
90007d9c:	ea4e 0202 	orrne.w	r2, lr, r2

        temp = EXTI_CurrentCPU->EMR1;
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
90007da0:	f415 3f00 	tst.w	r5, #131072	; 0x20000
        EXTI->FTSR1 = temp;
90007da4:	f8c8 2004 	str.w	r2, [r8, #4]
        temp = EXTI_CurrentCPU->EMR1;
90007da8:	f8d8 2084 	ldr.w	r2, [r8, #132]	; 0x84
        {
          temp |= iocurrent;
        }
        EXTI_CurrentCPU->EMR1 = temp;
90007dac:	f04f 48b0 	mov.w	r8, #1476395008	; 0x58000000
        temp &= ~(iocurrent);
90007db0:	bf0c      	ite	eq
90007db2:	4032      	andeq	r2, r6
          temp |= iocurrent;
90007db4:	ea4e 0202 	orrne.w	r2, lr, r2

        /* Clear EXTI line configuration */
        temp = EXTI_CurrentCPU->IMR1;
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & EXTI_IT) != 0x00U)
90007db8:	03ed      	lsls	r5, r5, #15
        {
          temp |= iocurrent;
        }
        EXTI_CurrentCPU->IMR1 = temp;
90007dba:	f04f 45b0 	mov.w	r5, #1476395008	; 0x58000000
        EXTI_CurrentCPU->EMR1 = temp;
90007dbe:	f8c8 2084 	str.w	r2, [r8, #132]	; 0x84
        temp = EXTI_CurrentCPU->IMR1;
90007dc2:	f8d8 2080 	ldr.w	r2, [r8, #128]	; 0x80
        temp &= ~(iocurrent);
90007dc6:	bf54      	ite	pl
90007dc8:	4032      	andpl	r2, r6
          temp |= iocurrent;
90007dca:	ea4e 0202 	orrmi.w	r2, lr, r2
        EXTI_CurrentCPU->IMR1 = temp;
90007dce:	f8c5 2080 	str.w	r2, [r5, #128]	; 0x80
      }
    }

    position++;
90007dd2:	3301      	adds	r3, #1
  while (((GPIO_Init->Pin) >> position) != 0x00U)
90007dd4:	f10c 0c02 	add.w	ip, ip, #2
90007dd8:	fa34 f203 	lsrs.w	r2, r4, r3
90007ddc:	f47f af5d 	bne.w	90007c9a <HAL_GPIO_Init+0x16>
  }
}
90007de0:	b003      	add	sp, #12
90007de2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
90007de6:	f04f 0803 	mov.w	r8, #3
        temp = GPIOx->OSPEEDR;
90007dea:	6886      	ldr	r6, [r0, #8]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
90007dec:	fa08 f80c 	lsl.w	r8, r8, ip
90007df0:	ea26 0a08 	bic.w	sl, r6, r8
        temp |= (GPIO_Init->Speed << (position * 2U));
90007df4:	68ce      	ldr	r6, [r1, #12]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
90007df6:	ea6f 0808 	mvn.w	r8, r8
        temp |= (GPIO_Init->Speed << (position * 2U));
90007dfa:	fa06 f60c 	lsl.w	r6, r6, ip
90007dfe:	ea46 060a 	orr.w	r6, r6, sl
        GPIOx->OSPEEDR = temp;
90007e02:	6086      	str	r6, [r0, #8]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
90007e04:	f3c5 1600 	ubfx	r6, r5, #4, #1
        temp = GPIOx->OTYPER;
90007e08:	f8d0 a004 	ldr.w	sl, [r0, #4]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
90007e0c:	409e      	lsls	r6, r3
        temp &= ~(GPIO_OTYPER_OT0 << position) ;
90007e0e:	ea2a 0202 	bic.w	r2, sl, r2
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
90007e12:	4332      	orrs	r2, r6
        GPIOx->OTYPER = temp;
90007e14:	6042      	str	r2, [r0, #4]
      temp = GPIOx->PUPDR;
90007e16:	68c2      	ldr	r2, [r0, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
90007e18:	f1b9 0f02 	cmp.w	r9, #2
      temp |= ((GPIO_Init->Pull) << (position * 2U));
90007e1c:	688e      	ldr	r6, [r1, #8]
      temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
90007e1e:	ea02 0208 	and.w	r2, r2, r8
      temp |= ((GPIO_Init->Pull) << (position * 2U));
90007e22:	fa06 f60c 	lsl.w	r6, r6, ip
90007e26:	ea46 0602 	orr.w	r6, r6, r2
      GPIOx->PUPDR = temp;
90007e2a:	fa09 f20c 	lsl.w	r2, r9, ip
90007e2e:	60c6      	str	r6, [r0, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
90007e30:	f47f af49 	bne.w	90007cc6 <HAL_GPIO_Init+0x42>
        temp = GPIOx->AFR[position >> 3U];
90007e34:	ea4f 09d3 	mov.w	r9, r3, lsr #3
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
90007e38:	f003 0b07 	and.w	fp, r3, #7
90007e3c:	260f      	movs	r6, #15
90007e3e:	eb00 0989 	add.w	r9, r0, r9, lsl #2
90007e42:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
        temp = GPIOx->AFR[position >> 3U];
90007e46:	f8d9 a020 	ldr.w	sl, [r9, #32]
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
90007e4a:	fa06 f60b 	lsl.w	r6, r6, fp
90007e4e:	ea2a 0a06 	bic.w	sl, sl, r6
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
90007e52:	690e      	ldr	r6, [r1, #16]
90007e54:	fa06 f60b 	lsl.w	r6, r6, fp
90007e58:	ea46 060a 	orr.w	r6, r6, sl
        GPIOx->AFR[position >> 3U] = temp;
90007e5c:	f8c9 6020 	str.w	r6, [r9, #32]
90007e60:	e731      	b.n	90007cc6 <HAL_GPIO_Init+0x42>
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
90007e62:	f04f 0803 	mov.w	r8, #3
90007e66:	fa08 f80c 	lsl.w	r8, r8, ip
90007e6a:	ea6f 0808 	mvn.w	r8, r8
90007e6e:	e7d2      	b.n	90007e16 <HAL_GPIO_Init+0x192>
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
90007e70:	2603      	movs	r6, #3
90007e72:	fa06 f609 	lsl.w	r6, r6, r9
90007e76:	4332      	orrs	r2, r6
90007e78:	e777      	b.n	90007d6a <HAL_GPIO_Init+0xe6>
90007e7a:	2601      	movs	r6, #1
90007e7c:	fa06 f609 	lsl.w	r6, r6, r9
90007e80:	4332      	orrs	r2, r6
90007e82:	e772      	b.n	90007d6a <HAL_GPIO_Init+0xe6>
90007e84:	2602      	movs	r6, #2
90007e86:	fa06 f609 	lsl.w	r6, r6, r9
90007e8a:	4332      	orrs	r2, r6
90007e8c:	e76d      	b.n	90007d6a <HAL_GPIO_Init+0xe6>
90007e8e:	2606      	movs	r6, #6
90007e90:	fa06 f609 	lsl.w	r6, r6, r9
90007e94:	4332      	orrs	r2, r6
90007e96:	e768      	b.n	90007d6a <HAL_GPIO_Init+0xe6>
90007e98:	2604      	movs	r6, #4
90007e9a:	fa06 f609 	lsl.w	r6, r6, r9
90007e9e:	4332      	orrs	r2, r6
90007ea0:	e763      	b.n	90007d6a <HAL_GPIO_Init+0xe6>
90007ea2:	2605      	movs	r6, #5
90007ea4:	fa06 f609 	lsl.w	r6, r6, r9
90007ea8:	4332      	orrs	r2, r6
90007eaa:	e75e      	b.n	90007d6a <HAL_GPIO_Init+0xe6>
90007eac:	2607      	movs	r6, #7
90007eae:	fa06 f609 	lsl.w	r6, r6, r9
90007eb2:	4332      	orrs	r2, r6
90007eb4:	e759      	b.n	90007d6a <HAL_GPIO_Init+0xe6>
90007eb6:	2608      	movs	r6, #8
90007eb8:	fa06 f609 	lsl.w	r6, r6, r9
90007ebc:	4332      	orrs	r2, r6
90007ebe:	e754      	b.n	90007d6a <HAL_GPIO_Init+0xe6>
90007ec0:	58024400 	.word	0x58024400
90007ec4:	58020000 	.word	0x58020000
90007ec8:	58020800 	.word	0x58020800
90007ecc:	58020c00 	.word	0x58020c00
90007ed0:	58021000 	.word	0x58021000
90007ed4:	58021400 	.word	0x58021400
90007ed8:	58021800 	.word	0x58021800
90007edc:	58021c00 	.word	0x58021c00
90007ee0:	58022000 	.word	0x58022000
90007ee4:	58022400 	.word	0x58022400

90007ee8 <HAL_GPIO_DeInit>:
  /* Check the parameters */
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* Configure the port pins */
  while ((GPIO_Pin >> position) != 0x00U)
90007ee8:	2900      	cmp	r1, #0
90007eea:	f000 80a4 	beq.w	90008036 <HAL_GPIO_DeInit+0x14e>
  uint32_t position = 0x00U;
90007eee:	2300      	movs	r3, #0
{
90007ef0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90007ef4:	f8df 9168 	ldr.w	r9, [pc, #360]	; 90008060 <HAL_GPIO_DeInit+0x178>
90007ef8:	b083      	sub	sp, #12
    {
      /*------------------------- EXTI Mode Configuration --------------------*/
      /* Clear the External Interrupt or Event for the current IO */
      tmp = SYSCFG->EXTICR[position >> 2U];
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
90007efa:	f8df 8168 	ldr.w	r8, [pc, #360]	; 90008064 <HAL_GPIO_DeInit+0x17c>
90007efe:	f8df a168 	ldr.w	sl, [pc, #360]	; 90008068 <HAL_GPIO_DeInit+0x180>
90007f02:	f8df b168 	ldr.w	fp, [pc, #360]	; 9000806c <HAL_GPIO_DeInit+0x184>
    iocurrent = GPIO_Pin & (1UL << position) ;
90007f06:	f04f 0e01 	mov.w	lr, #1
90007f0a:	fa0e f203 	lsl.w	r2, lr, r3
    if (iocurrent != 0x00U)
90007f0e:	ea12 0c01 	ands.w	ip, r2, r1
90007f12:	d06b      	beq.n	90007fec <HAL_GPIO_DeInit+0x104>
      tmp = SYSCFG->EXTICR[position >> 2U];
90007f14:	f023 0503 	bic.w	r5, r3, #3
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
90007f18:	f003 0403 	and.w	r4, r3, #3
90007f1c:	260f      	movs	r6, #15
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
90007f1e:	4540      	cmp	r0, r8
90007f20:	444d      	add	r5, r9
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
90007f22:	ea4f 0484 	mov.w	r4, r4, lsl #2
      tmp = SYSCFG->EXTICR[position >> 2U];
90007f26:	68af      	ldr	r7, [r5, #8]
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
90007f28:	fa06 f604 	lsl.w	r6, r6, r4
90007f2c:	ea07 0706 	and.w	r7, r7, r6
90007f30:	9701      	str	r7, [sp, #4]
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
90007f32:	d01f      	beq.n	90007f74 <HAL_GPIO_DeInit+0x8c>
90007f34:	4550      	cmp	r0, sl
90007f36:	d01a      	beq.n	90007f6e <HAL_GPIO_DeInit+0x86>
90007f38:	4558      	cmp	r0, fp
90007f3a:	d05e      	beq.n	90007ffa <HAL_GPIO_DeInit+0x112>
90007f3c:	4f43      	ldr	r7, [pc, #268]	; (9000804c <HAL_GPIO_DeInit+0x164>)
90007f3e:	42b8      	cmp	r0, r7
90007f40:	d065      	beq.n	9000800e <HAL_GPIO_DeInit+0x126>
90007f42:	4f43      	ldr	r7, [pc, #268]	; (90008050 <HAL_GPIO_DeInit+0x168>)
90007f44:	42b8      	cmp	r0, r7
90007f46:	d067      	beq.n	90008018 <HAL_GPIO_DeInit+0x130>
90007f48:	4f42      	ldr	r7, [pc, #264]	; (90008054 <HAL_GPIO_DeInit+0x16c>)
90007f4a:	42b8      	cmp	r0, r7
90007f4c:	d05a      	beq.n	90008004 <HAL_GPIO_DeInit+0x11c>
90007f4e:	4f42      	ldr	r7, [pc, #264]	; (90008058 <HAL_GPIO_DeInit+0x170>)
90007f50:	42b8      	cmp	r0, r7
90007f52:	d06b      	beq.n	9000802c <HAL_GPIO_DeInit+0x144>
90007f54:	4f41      	ldr	r7, [pc, #260]	; (9000805c <HAL_GPIO_DeInit+0x174>)
90007f56:	42b8      	cmp	r0, r7
90007f58:	d06e      	beq.n	90008038 <HAL_GPIO_DeInit+0x150>
90007f5a:	f8df e114 	ldr.w	lr, [pc, #276]	; 90008070 <HAL_GPIO_DeInit+0x188>
90007f5e:	4570      	cmp	r0, lr
90007f60:	d05f      	beq.n	90008022 <HAL_GPIO_DeInit+0x13a>
90007f62:	f8df e110 	ldr.w	lr, [pc, #272]	; 90008074 <HAL_GPIO_DeInit+0x18c>
90007f66:	4570      	cmp	r0, lr
90007f68:	d06b      	beq.n	90008042 <HAL_GPIO_DeInit+0x15a>
90007f6a:	f04f 0e0a 	mov.w	lr, #10
90007f6e:	fa0e f404 	lsl.w	r4, lr, r4
90007f72:	e000      	b.n	90007f76 <HAL_GPIO_DeInit+0x8e>
90007f74:	2400      	movs	r4, #0
90007f76:	9f01      	ldr	r7, [sp, #4]
90007f78:	42a7      	cmp	r7, r4
90007f7a:	d119      	bne.n	90007fb0 <HAL_GPIO_DeInit+0xc8>
      {
        /* Clear EXTI line configuration for Current CPU */
        EXTI_CurrentCPU->IMR1 &= ~(iocurrent);
90007f7c:	f04f 44b0 	mov.w	r4, #1476395008	; 0x58000000
90007f80:	f8d4 7080 	ldr.w	r7, [r4, #128]	; 0x80
90007f84:	ea27 070c 	bic.w	r7, r7, ip
90007f88:	f8c4 7080 	str.w	r7, [r4, #128]	; 0x80
        EXTI_CurrentCPU->EMR1 &= ~(iocurrent);
90007f8c:	f8d4 7084 	ldr.w	r7, [r4, #132]	; 0x84
90007f90:	ea27 070c 	bic.w	r7, r7, ip
90007f94:	f8c4 7084 	str.w	r7, [r4, #132]	; 0x84

        /* Clear Rising Falling edge configuration */
        EXTI->FTSR1 &= ~(iocurrent);
90007f98:	6867      	ldr	r7, [r4, #4]
90007f9a:	ea27 070c 	bic.w	r7, r7, ip
90007f9e:	6067      	str	r7, [r4, #4]
        EXTI->RTSR1 &= ~(iocurrent);
90007fa0:	6827      	ldr	r7, [r4, #0]
90007fa2:	ea27 070c 	bic.w	r7, r7, ip
90007fa6:	6027      	str	r7, [r4, #0]

        tmp = 0x0FUL << (4U * (position & 0x03U));
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
90007fa8:	68ac      	ldr	r4, [r5, #8]
90007faa:	ea24 0406 	bic.w	r4, r4, r6
90007fae:	60ac      	str	r4, [r5, #8]
      }

      /*------------------------- GPIO Mode Configuration --------------------*/
      /* Configure IO in Analog Mode */
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
90007fb0:	005d      	lsls	r5, r3, #1
90007fb2:	2403      	movs	r4, #3

      /* Configure the default Alternate Function in current IO */
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
90007fb4:	f003 0607 	and.w	r6, r3, #7
90007fb8:	270f      	movs	r7, #15
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
90007fba:	40ac      	lsls	r4, r5
90007fbc:	6805      	ldr	r5, [r0, #0]
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
90007fbe:	00b6      	lsls	r6, r6, #2
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
90007fc0:	4325      	orrs	r5, r4
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
90007fc2:	40b7      	lsls	r7, r6
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
90007fc4:	6005      	str	r5, [r0, #0]
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
90007fc6:	08dd      	lsrs	r5, r3, #3
90007fc8:	eb00 0585 	add.w	r5, r0, r5, lsl #2
90007fcc:	6a2e      	ldr	r6, [r5, #32]
90007fce:	ea26 0607 	bic.w	r6, r6, r7
90007fd2:	622e      	str	r6, [r5, #32]

      /* Deactivate the Pull-up and Pull-down resistor for the current IO */
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
90007fd4:	68c5      	ldr	r5, [r0, #12]
90007fd6:	ea25 0504 	bic.w	r5, r5, r4
90007fda:	60c5      	str	r5, [r0, #12]

      /* Configure the default value IO Output Type */
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT0 << position) ;
90007fdc:	6845      	ldr	r5, [r0, #4]
90007fde:	ea25 0202 	bic.w	r2, r5, r2
90007fe2:	6042      	str	r2, [r0, #4]

      /* Configure the default value for IO Speed */
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
90007fe4:	6882      	ldr	r2, [r0, #8]
90007fe6:	ea22 0204 	bic.w	r2, r2, r4
90007fea:	6082      	str	r2, [r0, #8]
    }

    position++;
90007fec:	3301      	adds	r3, #1
  while ((GPIO_Pin >> position) != 0x00U)
90007fee:	fa31 f203 	lsrs.w	r2, r1, r3
90007ff2:	d188      	bne.n	90007f06 <HAL_GPIO_DeInit+0x1e>
  }
}
90007ff4:	b003      	add	sp, #12
90007ff6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
90007ffa:	f04f 0e02 	mov.w	lr, #2
90007ffe:	fa0e f404 	lsl.w	r4, lr, r4
90008002:	e7b8      	b.n	90007f76 <HAL_GPIO_DeInit+0x8e>
90008004:	f04f 0e05 	mov.w	lr, #5
90008008:	fa0e f404 	lsl.w	r4, lr, r4
9000800c:	e7b3      	b.n	90007f76 <HAL_GPIO_DeInit+0x8e>
9000800e:	f04f 0e03 	mov.w	lr, #3
90008012:	fa0e f404 	lsl.w	r4, lr, r4
90008016:	e7ae      	b.n	90007f76 <HAL_GPIO_DeInit+0x8e>
90008018:	f04f 0e04 	mov.w	lr, #4
9000801c:	fa0e f404 	lsl.w	r4, lr, r4
90008020:	e7a9      	b.n	90007f76 <HAL_GPIO_DeInit+0x8e>
90008022:	f04f 0e08 	mov.w	lr, #8
90008026:	fa0e f404 	lsl.w	r4, lr, r4
9000802a:	e7a4      	b.n	90007f76 <HAL_GPIO_DeInit+0x8e>
9000802c:	f04f 0e06 	mov.w	lr, #6
90008030:	fa0e f404 	lsl.w	r4, lr, r4
90008034:	e79f      	b.n	90007f76 <HAL_GPIO_DeInit+0x8e>
90008036:	4770      	bx	lr
90008038:	f04f 0e07 	mov.w	lr, #7
9000803c:	fa0e f404 	lsl.w	r4, lr, r4
90008040:	e799      	b.n	90007f76 <HAL_GPIO_DeInit+0x8e>
90008042:	f04f 0e09 	mov.w	lr, #9
90008046:	fa0e f404 	lsl.w	r4, lr, r4
9000804a:	e794      	b.n	90007f76 <HAL_GPIO_DeInit+0x8e>
9000804c:	58020c00 	.word	0x58020c00
90008050:	58021000 	.word	0x58021000
90008054:	58021400 	.word	0x58021400
90008058:	58021800 	.word	0x58021800
9000805c:	58021c00 	.word	0x58021c00
90008060:	58000400 	.word	0x58000400
90008064:	58020000 	.word	0x58020000
90008068:	58020400 	.word	0x58020400
9000806c:	58020800 	.word	0x58020800
90008070:	58022000 	.word	0x58022000
90008074:	58022400 	.word	0x58022400

90008078 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if ((GPIOx->IDR & GPIO_Pin) != 0x00U)
90008078:	6903      	ldr	r3, [r0, #16]
9000807a:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
9000807c:	bf14      	ite	ne
9000807e:	2001      	movne	r0, #1
90008080:	2000      	moveq	r0, #0
90008082:	4770      	bx	lr

90008084 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
90008084:	b902      	cbnz	r2, 90008088 <HAL_GPIO_WritePin+0x4>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << GPIO_NUMBER;
90008086:	0409      	lsls	r1, r1, #16
90008088:	6181      	str	r1, [r0, #24]
  }
}
9000808a:	4770      	bx	lr

9000808c <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
9000808c:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
9000808e:	ea01 0203 	and.w	r2, r1, r3
90008092:	ea21 0103 	bic.w	r1, r1, r3
90008096:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
9000809a:	6181      	str	r1, [r0, #24]
}
9000809c:	4770      	bx	lr
9000809e:	bf00      	nop

900080a0 <I2C_WaitOnTXISFlagUntilTimeout>:
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnTXISFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout,
                                                        uint32_t Tickstart)
{
900080a0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
900080a4:	6803      	ldr	r3, [r0, #0]
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
          {
            /* Check for the Timeout */
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
            {
              error_code |= HAL_I2C_ERROR_TIMEOUT;
900080a6:	f04f 0820 	mov.w	r8, #32
{
900080aa:	4605      	mov	r5, r0
900080ac:	460e      	mov	r6, r1
900080ae:	4617      	mov	r7, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
900080b0:	6998      	ldr	r0, [r3, #24]
900080b2:	f010 0902 	ands.w	r9, r0, #2
900080b6:	f040 809e 	bne.w	900081f6 <I2C_WaitOnTXISFlagUntilTimeout+0x156>
  uint32_t itflag   = hi2c->Instance->ISR;
900080ba:	699c      	ldr	r4, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
900080bc:	f014 0410 	ands.w	r4, r4, #16
900080c0:	d068      	beq.n	90008194 <I2C_WaitOnTXISFlagUntilTimeout+0xf4>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
900080c2:	2210      	movs	r2, #16
  uint32_t tickstart = Tickstart;
900080c4:	463c      	mov	r4, r7
  HAL_StatusTypeDef status = HAL_OK;
900080c6:	46ca      	mov	sl, r9
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
900080c8:	61da      	str	r2, [r3, #28]
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
900080ca:	1c71      	adds	r1, r6, #1
900080cc:	699a      	ldr	r2, [r3, #24]
900080ce:	d163      	bne.n	90008198 <I2C_WaitOnTXISFlagUntilTimeout+0xf8>
900080d0:	0690      	lsls	r0, r2, #26
900080d2:	f100 8093 	bmi.w	900081fc <I2C_WaitOnTXISFlagUntilTimeout+0x15c>
900080d6:	f1ba 0f00 	cmp.w	sl, #0
900080da:	d104      	bne.n	900080e6 <I2C_WaitOnTXISFlagUntilTimeout+0x46>
900080dc:	699c      	ldr	r4, [r3, #24]
900080de:	06a1      	lsls	r1, r4, #26
900080e0:	d5fc      	bpl.n	900080dc <I2C_WaitOnTXISFlagUntilTimeout+0x3c>

    /* In case STOP Flag is detected, clear it */
    if (status == HAL_OK)
    {
      /* Clear STOP Flag */
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
900080e2:	f8c3 801c 	str.w	r8, [r3, #28]
    }

    error_code |= HAL_I2C_ERROR_AF;
900080e6:	f049 0404 	orr.w	r4, r9, #4

    status = HAL_ERROR;
900080ea:	2101      	movs	r1, #1
  }

  /* Refresh Content of Status register */
  itflag = hi2c->Instance->ISR;
900080ec:	699a      	ldr	r2, [r3, #24]

  /* Then verify if an additional errors occurs */
  /* Check if a Bus error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
900080ee:	05d0      	lsls	r0, r2, #23
900080f0:	d530      	bpl.n	90008154 <I2C_WaitOnTXISFlagUntilTimeout+0xb4>
  {
    error_code |= HAL_I2C_ERROR_BERR;

    /* Clear BERR flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
900080f2:	f44f 7180 	mov.w	r1, #256	; 0x100

    status = HAL_ERROR;
  }

  /* Check if an Over-Run/Under-Run error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
900080f6:	0556      	lsls	r6, r2, #21
    error_code |= HAL_I2C_ERROR_BERR;
900080f8:	f044 0401 	orr.w	r4, r4, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
900080fc:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
900080fe:	d504      	bpl.n	9000810a <I2C_WaitOnTXISFlagUntilTimeout+0x6a>
  {
    error_code |= HAL_I2C_ERROR_OVR;

    /* Clear OVR flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90008100:	f44f 6180 	mov.w	r1, #1024	; 0x400
    error_code |= HAL_I2C_ERROR_OVR;
90008104:	f044 0408 	orr.w	r4, r4, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90008108:	61d9      	str	r1, [r3, #28]

    status = HAL_ERROR;
  }

  /* Check if an Arbitration Loss error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
9000810a:	0591      	lsls	r1, r2, #22
9000810c:	d504      	bpl.n	90008118 <I2C_WaitOnTXISFlagUntilTimeout+0x78>
  {
    error_code |= HAL_I2C_ERROR_ARLO;

    /* Clear ARLO flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
9000810e:	f44f 7200 	mov.w	r2, #512	; 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
90008112:	f044 0402 	orr.w	r4, r4, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90008116:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
90008118:	699a      	ldr	r2, [r3, #24]
9000811a:	0790      	lsls	r0, r2, #30
9000811c:	d501      	bpl.n	90008122 <I2C_WaitOnTXISFlagUntilTimeout+0x82>
    hi2c->Instance->TXDR = 0x00U;
9000811e:	2200      	movs	r2, #0
90008120:	629a      	str	r2, [r3, #40]	; 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
90008122:	699a      	ldr	r2, [r3, #24]
90008124:	07d1      	lsls	r1, r2, #31
90008126:	d403      	bmi.n	90008130 <I2C_WaitOnTXISFlagUntilTimeout+0x90>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
90008128:	699a      	ldr	r2, [r3, #24]
9000812a:	f042 0201 	orr.w	r2, r2, #1
9000812e:	619a      	str	r2, [r3, #24]
  {
    /* Flush TX register */
    I2C_Flush_TXDR(hi2c);

    /* Clear Configuration Register 2 */
    I2C_RESET_CR2(hi2c);
90008130:	685a      	ldr	r2, [r3, #4]

    hi2c->ErrorCode |= error_code;
    hi2c->State = HAL_I2C_STATE_READY;
    hi2c->Mode = HAL_I2C_MODE_NONE;
90008132:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
90008134:	4834      	ldr	r0, [pc, #208]	; (90008208 <I2C_WaitOnTXISFlagUntilTimeout+0x168>)
    hi2c->State = HAL_I2C_STATE_READY;
90008136:	2620      	movs	r6, #32
    I2C_RESET_CR2(hi2c);
90008138:	4002      	ands	r2, r0
      return HAL_ERROR;
9000813a:	2001      	movs	r0, #1
    I2C_RESET_CR2(hi2c);
9000813c:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= error_code;
9000813e:	6c6b      	ldr	r3, [r5, #68]	; 0x44

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
90008140:	f885 1040 	strb.w	r1, [r5, #64]	; 0x40
    hi2c->ErrorCode |= error_code;
90008144:	4323      	orrs	r3, r4
90008146:	646b      	str	r3, [r5, #68]	; 0x44
    hi2c->State = HAL_I2C_STATE_READY;
90008148:	f885 6041 	strb.w	r6, [r5, #65]	; 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
9000814c:	f885 1042 	strb.w	r1, [r5, #66]	; 0x42
}
90008150:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90008154:	0550      	lsls	r0, r2, #21
90008156:	d4d3      	bmi.n	90008100 <I2C_WaitOnTXISFlagUntilTimeout+0x60>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90008158:	0592      	lsls	r2, r2, #22
9000815a:	d4d8      	bmi.n	9000810e <I2C_WaitOnTXISFlagUntilTimeout+0x6e>
  if (status != HAL_OK)
9000815c:	2900      	cmp	r1, #0
9000815e:	d1db      	bne.n	90008118 <I2C_WaitOnTXISFlagUntilTimeout+0x78>
    if (Timeout != HAL_MAX_DELAY)
90008160:	1c72      	adds	r2, r6, #1
90008162:	d0a5      	beq.n	900080b0 <I2C_WaitOnTXISFlagUntilTimeout+0x10>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008164:	f7ff fb04 	bl	90007770 <HAL_GetTick>
90008168:	1bc0      	subs	r0, r0, r7
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET))
9000816a:	682b      	ldr	r3, [r5, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000816c:	42b0      	cmp	r0, r6
9000816e:	d801      	bhi.n	90008174 <I2C_WaitOnTXISFlagUntilTimeout+0xd4>
90008170:	2e00      	cmp	r6, #0
90008172:	d19d      	bne.n	900080b0 <I2C_WaitOnTXISFlagUntilTimeout+0x10>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET))
90008174:	699a      	ldr	r2, [r3, #24]
90008176:	f012 0202 	ands.w	r2, r2, #2
9000817a:	d199      	bne.n	900080b0 <I2C_WaitOnTXISFlagUntilTimeout+0x10>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000817c:	6c6b      	ldr	r3, [r5, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000817e:	2120      	movs	r1, #32
          __HAL_UNLOCK(hi2c);
90008180:	2001      	movs	r0, #1
90008182:	f885 2040 	strb.w	r2, [r5, #64]	; 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008186:	430b      	orrs	r3, r1
90008188:	646b      	str	r3, [r5, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000818a:	f885 1041 	strb.w	r1, [r5, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
9000818e:	f885 2042 	strb.w	r2, [r5, #66]	; 0x42
          return HAL_ERROR;
90008192:	e7dd      	b.n	90008150 <I2C_WaitOnTXISFlagUntilTimeout+0xb0>
  HAL_StatusTypeDef status = HAL_OK;
90008194:	4621      	mov	r1, r4
90008196:	e7a9      	b.n	900080ec <I2C_WaitOnTXISFlagUntilTimeout+0x4c>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90008198:	0692      	lsls	r2, r2, #26
9000819a:	d42f      	bmi.n	900081fc <I2C_WaitOnTXISFlagUntilTimeout+0x15c>
9000819c:	f1ba 0f00 	cmp.w	sl, #0
900081a0:	d1a1      	bne.n	900080e6 <I2C_WaitOnTXISFlagUntilTimeout+0x46>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
900081a2:	f7ff fae5 	bl	90007770 <HAL_GetTick>
900081a6:	1b00      	subs	r0, r0, r4
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
900081a8:	682b      	ldr	r3, [r5, #0]
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
900081aa:	4286      	cmp	r6, r0
900081ac:	d301      	bcc.n	900081b2 <I2C_WaitOnTXISFlagUntilTimeout+0x112>
900081ae:	2e00      	cmp	r6, #0
900081b0:	d18b      	bne.n	900080ca <I2C_WaitOnTXISFlagUntilTimeout+0x2a>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
900081b2:	6858      	ldr	r0, [r3, #4]
          tmp2 = hi2c->Mode;
900081b4:	f895 2042 	ldrb.w	r2, [r5, #66]	; 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
900081b8:	6999      	ldr	r1, [r3, #24]
          tmp2 = hi2c->Mode;
900081ba:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
900081bc:	0409      	lsls	r1, r1, #16
900081be:	d50b      	bpl.n	900081d8 <I2C_WaitOnTXISFlagUntilTimeout+0x138>
              (tmp1 != I2C_CR2_STOP) && \
900081c0:	0441      	lsls	r1, r0, #17
900081c2:	d409      	bmi.n	900081d8 <I2C_WaitOnTXISFlagUntilTimeout+0x138>
900081c4:	2a20      	cmp	r2, #32
900081c6:	d007      	beq.n	900081d8 <I2C_WaitOnTXISFlagUntilTimeout+0x138>
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
900081c8:	685a      	ldr	r2, [r3, #4]
900081ca:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
900081ce:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
900081d0:	f7ff face 	bl	90007770 <HAL_GetTick>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
900081d4:	682b      	ldr	r3, [r5, #0]
            tickstart = HAL_GetTick();
900081d6:	4604      	mov	r4, r0
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
900081d8:	699a      	ldr	r2, [r3, #24]
900081da:	0690      	lsls	r0, r2, #26
900081dc:	f53f af75 	bmi.w	900080ca <I2C_WaitOnTXISFlagUntilTimeout+0x2a>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
900081e0:	f7ff fac6 	bl	90007770 <HAL_GetTick>
900081e4:	1b00      	subs	r0, r0, r4
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
900081e6:	682b      	ldr	r3, [r5, #0]
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
900081e8:	2819      	cmp	r0, #25
900081ea:	d9f5      	bls.n	900081d8 <I2C_WaitOnTXISFlagUntilTimeout+0x138>
              error_code |= HAL_I2C_ERROR_TIMEOUT;
900081ec:	f04f 0920 	mov.w	r9, #32
              status = HAL_ERROR;
900081f0:	f04f 0a01 	mov.w	sl, #1
900081f4:	e769      	b.n	900080ca <I2C_WaitOnTXISFlagUntilTimeout+0x2a>
  return HAL_OK;
900081f6:	2000      	movs	r0, #0
}
900081f8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    if (status == HAL_OK)
900081fc:	f1ba 0f00 	cmp.w	sl, #0
90008200:	f43f af6f 	beq.w	900080e2 <I2C_WaitOnTXISFlagUntilTimeout+0x42>
90008204:	e76f      	b.n	900080e6 <I2C_WaitOnTXISFlagUntilTimeout+0x46>
90008206:	bf00      	nop
90008208:	fe00e800 	.word	0xfe00e800

9000820c <I2C_WaitOnSTOPFlagUntilTimeout>:
{
9000820c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90008210:	4690      	mov	r8, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90008212:	6802      	ldr	r2, [r0, #0]
{
90008214:	460f      	mov	r7, r1
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90008216:	6991      	ldr	r1, [r2, #24]
90008218:	068c      	lsls	r4, r1, #26
9000821a:	d469      	bmi.n	900082f0 <I2C_WaitOnSTOPFlagUntilTimeout+0xe4>
9000821c:	4606      	mov	r6, r0
9000821e:	4613      	mov	r3, r2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90008220:	f04f 0910 	mov.w	r9, #16
  uint32_t itflag   = hi2c->Instance->ISR;
90008224:	6994      	ldr	r4, [r2, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
90008226:	f014 0410 	ands.w	r4, r4, #16
9000822a:	d064      	beq.n	900082f6 <I2C_WaitOnSTOPFlagUntilTimeout+0xea>
  uint32_t error_code = 0;
9000822c:	2500      	movs	r5, #0
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
9000822e:	4613      	mov	r3, r2
  uint32_t tickstart = Tickstart;
90008230:	4644      	mov	r4, r8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90008232:	f8c2 901c 	str.w	r9, [r2, #28]
  HAL_StatusTypeDef status = HAL_OK;
90008236:	46aa      	mov	sl, r5
90008238:	1c79      	adds	r1, r7, #1
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
9000823a:	699a      	ldr	r2, [r3, #24]
9000823c:	d15d      	bne.n	900082fa <I2C_WaitOnSTOPFlagUntilTimeout+0xee>
9000823e:	0690      	lsls	r0, r2, #26
90008240:	f100 8083 	bmi.w	9000834a <I2C_WaitOnSTOPFlagUntilTimeout+0x13e>
90008244:	f1ba 0f00 	cmp.w	sl, #0
90008248:	d104      	bne.n	90008254 <I2C_WaitOnSTOPFlagUntilTimeout+0x48>
9000824a:	699c      	ldr	r4, [r3, #24]
9000824c:	06a1      	lsls	r1, r4, #26
9000824e:	d5fc      	bpl.n	9000824a <I2C_WaitOnSTOPFlagUntilTimeout+0x3e>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90008250:	2220      	movs	r2, #32
90008252:	61da      	str	r2, [r3, #28]
    error_code |= HAL_I2C_ERROR_AF;
90008254:	f045 0404 	orr.w	r4, r5, #4
    status = HAL_ERROR;
90008258:	2101      	movs	r1, #1
  itflag = hi2c->Instance->ISR;
9000825a:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
9000825c:	05d0      	lsls	r0, r2, #23
9000825e:	d530      	bpl.n	900082c2 <I2C_WaitOnSTOPFlagUntilTimeout+0xb6>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90008260:	f44f 7180 	mov.w	r1, #256	; 0x100
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90008264:	0555      	lsls	r5, r2, #21
    error_code |= HAL_I2C_ERROR_BERR;
90008266:	f044 0401 	orr.w	r4, r4, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
9000826a:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
9000826c:	d504      	bpl.n	90008278 <I2C_WaitOnSTOPFlagUntilTimeout+0x6c>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
9000826e:	f44f 6180 	mov.w	r1, #1024	; 0x400
    error_code |= HAL_I2C_ERROR_OVR;
90008272:	f044 0408 	orr.w	r4, r4, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90008276:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90008278:	0591      	lsls	r1, r2, #22
9000827a:	d504      	bpl.n	90008286 <I2C_WaitOnSTOPFlagUntilTimeout+0x7a>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
9000827c:	f44f 7200 	mov.w	r2, #512	; 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
90008280:	f044 0402 	orr.w	r4, r4, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90008284:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
90008286:	699a      	ldr	r2, [r3, #24]
90008288:	0795      	lsls	r5, r2, #30
9000828a:	d501      	bpl.n	90008290 <I2C_WaitOnSTOPFlagUntilTimeout+0x84>
    hi2c->Instance->TXDR = 0x00U;
9000828c:	2200      	movs	r2, #0
9000828e:	629a      	str	r2, [r3, #40]	; 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
90008290:	699a      	ldr	r2, [r3, #24]
90008292:	07d0      	lsls	r0, r2, #31
90008294:	d403      	bmi.n	9000829e <I2C_WaitOnSTOPFlagUntilTimeout+0x92>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
90008296:	699a      	ldr	r2, [r3, #24]
90008298:	f042 0201 	orr.w	r2, r2, #1
9000829c:	619a      	str	r2, [r3, #24]
    I2C_RESET_CR2(hi2c);
9000829e:	685a      	ldr	r2, [r3, #4]
    hi2c->Mode = HAL_I2C_MODE_NONE;
900082a0:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
900082a2:	4837      	ldr	r0, [pc, #220]	; (90008380 <I2C_WaitOnSTOPFlagUntilTimeout+0x174>)
    hi2c->State = HAL_I2C_STATE_READY;
900082a4:	2520      	movs	r5, #32
    I2C_RESET_CR2(hi2c);
900082a6:	4002      	ands	r2, r0
      return HAL_ERROR;
900082a8:	2001      	movs	r0, #1
    I2C_RESET_CR2(hi2c);
900082aa:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= error_code;
900082ac:	6c73      	ldr	r3, [r6, #68]	; 0x44
    __HAL_UNLOCK(hi2c);
900082ae:	f886 1040 	strb.w	r1, [r6, #64]	; 0x40
    hi2c->ErrorCode |= error_code;
900082b2:	4323      	orrs	r3, r4
900082b4:	6473      	str	r3, [r6, #68]	; 0x44
    hi2c->State = HAL_I2C_STATE_READY;
900082b6:	f886 5041 	strb.w	r5, [r6, #65]	; 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
900082ba:	f886 1042 	strb.w	r1, [r6, #66]	; 0x42
}
900082be:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
900082c2:	0550      	lsls	r0, r2, #21
900082c4:	d4d3      	bmi.n	9000826e <I2C_WaitOnSTOPFlagUntilTimeout+0x62>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
900082c6:	0592      	lsls	r2, r2, #22
900082c8:	d4d8      	bmi.n	9000827c <I2C_WaitOnSTOPFlagUntilTimeout+0x70>
  if (status != HAL_OK)
900082ca:	2900      	cmp	r1, #0
900082cc:	d1db      	bne.n	90008286 <I2C_WaitOnSTOPFlagUntilTimeout+0x7a>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
900082ce:	f7ff fa4f 	bl	90007770 <HAL_GetTick>
900082d2:	eba0 0008 	sub.w	r0, r0, r8
900082d6:	42b8      	cmp	r0, r7
900082d8:	d801      	bhi.n	900082de <I2C_WaitOnSTOPFlagUntilTimeout+0xd2>
900082da:	2f00      	cmp	r7, #0
900082dc:	d132      	bne.n	90008344 <I2C_WaitOnSTOPFlagUntilTimeout+0x138>
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET))
900082de:	6832      	ldr	r2, [r6, #0]
900082e0:	6991      	ldr	r1, [r2, #24]
900082e2:	4613      	mov	r3, r2
900082e4:	f011 0120 	ands.w	r1, r1, #32
900082e8:	d034      	beq.n	90008354 <I2C_WaitOnSTOPFlagUntilTimeout+0x148>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
900082ea:	6991      	ldr	r1, [r2, #24]
900082ec:	0689      	lsls	r1, r1, #26
900082ee:	d599      	bpl.n	90008224 <I2C_WaitOnSTOPFlagUntilTimeout+0x18>
  return HAL_OK;
900082f0:	2000      	movs	r0, #0
}
900082f2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  HAL_StatusTypeDef status = HAL_OK;
900082f6:	4621      	mov	r1, r4
900082f8:	e7af      	b.n	9000825a <I2C_WaitOnSTOPFlagUntilTimeout+0x4e>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
900082fa:	0692      	lsls	r2, r2, #26
900082fc:	d425      	bmi.n	9000834a <I2C_WaitOnSTOPFlagUntilTimeout+0x13e>
900082fe:	f1ba 0f00 	cmp.w	sl, #0
90008302:	d1a7      	bne.n	90008254 <I2C_WaitOnSTOPFlagUntilTimeout+0x48>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90008304:	f7ff fa34 	bl	90007770 <HAL_GetTick>
90008308:	1b00      	subs	r0, r0, r4
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
9000830a:	6833      	ldr	r3, [r6, #0]
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
9000830c:	4287      	cmp	r7, r0
9000830e:	d301      	bcc.n	90008314 <I2C_WaitOnSTOPFlagUntilTimeout+0x108>
90008310:	2f00      	cmp	r7, #0
90008312:	d191      	bne.n	90008238 <I2C_WaitOnSTOPFlagUntilTimeout+0x2c>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90008314:	6858      	ldr	r0, [r3, #4]
          tmp2 = hi2c->Mode;
90008316:	f896 2042 	ldrb.w	r2, [r6, #66]	; 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
9000831a:	6999      	ldr	r1, [r3, #24]
          tmp2 = hi2c->Mode;
9000831c:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
9000831e:	0409      	lsls	r1, r1, #16
90008320:	d503      	bpl.n	9000832a <I2C_WaitOnSTOPFlagUntilTimeout+0x11e>
              (tmp1 != I2C_CR2_STOP) && \
90008322:	0441      	lsls	r1, r0, #17
90008324:	d401      	bmi.n	9000832a <I2C_WaitOnSTOPFlagUntilTimeout+0x11e>
90008326:	2a20      	cmp	r2, #32
90008328:	d121      	bne.n	9000836e <I2C_WaitOnSTOPFlagUntilTimeout+0x162>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
9000832a:	699a      	ldr	r2, [r3, #24]
9000832c:	0690      	lsls	r0, r2, #26
9000832e:	d483      	bmi.n	90008238 <I2C_WaitOnSTOPFlagUntilTimeout+0x2c>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90008330:	f7ff fa1e 	bl	90007770 <HAL_GetTick>
90008334:	1b00      	subs	r0, r0, r4
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90008336:	6833      	ldr	r3, [r6, #0]
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90008338:	2819      	cmp	r0, #25
9000833a:	d9f6      	bls.n	9000832a <I2C_WaitOnSTOPFlagUntilTimeout+0x11e>
              error_code |= HAL_I2C_ERROR_TIMEOUT;
9000833c:	2520      	movs	r5, #32
              status = HAL_ERROR;
9000833e:	f04f 0a01 	mov.w	sl, #1
90008342:	e779      	b.n	90008238 <I2C_WaitOnSTOPFlagUntilTimeout+0x2c>
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET))
90008344:	6833      	ldr	r3, [r6, #0]
90008346:	461a      	mov	r2, r3
90008348:	e7cf      	b.n	900082ea <I2C_WaitOnSTOPFlagUntilTimeout+0xde>
    if (status == HAL_OK)
9000834a:	f1ba 0f00 	cmp.w	sl, #0
9000834e:	f43f af7f 	beq.w	90008250 <I2C_WaitOnSTOPFlagUntilTimeout+0x44>
90008352:	e77f      	b.n	90008254 <I2C_WaitOnSTOPFlagUntilTimeout+0x48>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008354:	6c73      	ldr	r3, [r6, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90008356:	2220      	movs	r2, #32
          __HAL_UNLOCK(hi2c);
90008358:	2001      	movs	r0, #1
9000835a:	f886 1040 	strb.w	r1, [r6, #64]	; 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000835e:	4313      	orrs	r3, r2
90008360:	6473      	str	r3, [r6, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90008362:	f886 2041 	strb.w	r2, [r6, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
90008366:	f886 1042 	strb.w	r1, [r6, #66]	; 0x42
}
9000836a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
9000836e:	685a      	ldr	r2, [r3, #4]
90008370:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
90008374:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
90008376:	f7ff f9fb 	bl	90007770 <HAL_GetTick>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
9000837a:	6833      	ldr	r3, [r6, #0]
            tickstart = HAL_GetTick();
9000837c:	4604      	mov	r4, r0
9000837e:	e7d4      	b.n	9000832a <I2C_WaitOnSTOPFlagUntilTimeout+0x11e>
90008380:	fe00e800 	.word	0xfe00e800

90008384 <HAL_I2C_MspInit>:
}
90008384:	4770      	bx	lr
90008386:	bf00      	nop

90008388 <HAL_I2C_Init>:
  if (hi2c == NULL)
90008388:	2800      	cmp	r0, #0
9000838a:	d04e      	beq.n	9000842a <HAL_I2C_Init+0xa2>
{
9000838c:	b510      	push	{r4, lr}
  if (hi2c->State == HAL_I2C_STATE_RESET)
9000838e:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
90008392:	4604      	mov	r4, r0
90008394:	f003 02ff 	and.w	r2, r3, #255	; 0xff
90008398:	2b00      	cmp	r3, #0
9000839a:	d041      	beq.n	90008420 <HAL_I2C_Init+0x98>
  __HAL_I2C_DISABLE(hi2c);
9000839c:	6823      	ldr	r3, [r4, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
9000839e:	2124      	movs	r1, #36	; 0x24
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
900083a0:	6862      	ldr	r2, [r4, #4]
  hi2c->State = HAL_I2C_STATE_BUSY;
900083a2:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
  __HAL_I2C_DISABLE(hi2c);
900083a6:	6819      	ldr	r1, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
900083a8:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
900083ac:	68e0      	ldr	r0, [r4, #12]
  __HAL_I2C_DISABLE(hi2c);
900083ae:	f021 0101 	bic.w	r1, r1, #1
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
900083b2:	2801      	cmp	r0, #1
  __HAL_I2C_DISABLE(hi2c);
900083b4:	6019      	str	r1, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
900083b6:	611a      	str	r2, [r3, #16]
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
900083b8:	689a      	ldr	r2, [r3, #8]
900083ba:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
900083be:	609a      	str	r2, [r3, #8]
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
900083c0:	68a2      	ldr	r2, [r4, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
900083c2:	d029      	beq.n	90008418 <HAL_I2C_Init+0x90>
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
900083c4:	f442 4204 	orr.w	r2, r2, #33792	; 0x8400
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
900083c8:	2802      	cmp	r0, #2
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
900083ca:	609a      	str	r2, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
900083cc:	d102      	bne.n	900083d4 <HAL_I2C_Init+0x4c>
    hi2c->Instance->CR2 = (I2C_CR2_ADD10);
900083ce:	f44f 6200 	mov.w	r2, #2048	; 0x800
900083d2:	605a      	str	r2, [r3, #4]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
900083d4:	6858      	ldr	r0, [r3, #4]
  hi2c->State = HAL_I2C_STATE_READY;
900083d6:	f04f 0c20 	mov.w	ip, #32
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
900083da:	4915      	ldr	r1, [pc, #84]	; (90008430 <HAL_I2C_Init+0xa8>)
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
900083dc:	6922      	ldr	r2, [r4, #16]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
900083de:	4301      	orrs	r1, r0
900083e0:	6059      	str	r1, [r3, #4]
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
900083e2:	68d9      	ldr	r1, [r3, #12]
900083e4:	f421 4100 	bic.w	r1, r1, #32768	; 0x8000
900083e8:	60d9      	str	r1, [r3, #12]
                          (hi2c->Init.OwnAddress2Masks << 8));
900083ea:	e9d4 0105 	ldrd	r0, r1, [r4, #20]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
900083ee:	4302      	orrs	r2, r0
900083f0:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
900083f4:	e9d4 1007 	ldrd	r1, r0, [r4, #28]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
900083f8:	60da      	str	r2, [r3, #12]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
900083fa:	2200      	movs	r2, #0
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
900083fc:	4301      	orrs	r1, r0
  return HAL_OK;
900083fe:	4610      	mov	r0, r2
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
90008400:	6019      	str	r1, [r3, #0]
  __HAL_I2C_ENABLE(hi2c);
90008402:	6819      	ldr	r1, [r3, #0]
90008404:	f041 0101 	orr.w	r1, r1, #1
90008408:	6019      	str	r1, [r3, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
9000840a:	6462      	str	r2, [r4, #68]	; 0x44
  hi2c->State = HAL_I2C_STATE_READY;
9000840c:	f884 c041 	strb.w	ip, [r4, #65]	; 0x41
  hi2c->PreviousState = I2C_STATE_NONE;
90008410:	6322      	str	r2, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
90008412:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
}
90008416:	bd10      	pop	{r4, pc}
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
90008418:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
9000841c:	609a      	str	r2, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
9000841e:	e7d9      	b.n	900083d4 <HAL_I2C_Init+0x4c>
    hi2c->Lock = HAL_UNLOCKED;
90008420:	f880 2040 	strb.w	r2, [r0, #64]	; 0x40
    HAL_I2C_MspInit(hi2c);
90008424:	f7ff ffae 	bl	90008384 <HAL_I2C_MspInit>
90008428:	e7b8      	b.n	9000839c <HAL_I2C_Init+0x14>
    return HAL_ERROR;
9000842a:	2001      	movs	r0, #1
}
9000842c:	4770      	bx	lr
9000842e:	bf00      	nop
90008430:	02008000 	.word	0x02008000

90008434 <HAL_I2C_MspDeInit>:
90008434:	4770      	bx	lr
90008436:	bf00      	nop

90008438 <HAL_I2C_DeInit>:
  if (hi2c == NULL)
90008438:	b1b0      	cbz	r0, 90008468 <HAL_I2C_DeInit+0x30>
  __HAL_I2C_DISABLE(hi2c);
9000843a:	6802      	ldr	r2, [r0, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
9000843c:	2324      	movs	r3, #36	; 0x24
{
9000843e:	b510      	push	{r4, lr}
  hi2c->State = HAL_I2C_STATE_BUSY;
90008440:	f880 3041 	strb.w	r3, [r0, #65]	; 0x41
90008444:	4604      	mov	r4, r0
  __HAL_I2C_DISABLE(hi2c);
90008446:	6813      	ldr	r3, [r2, #0]
90008448:	f023 0301 	bic.w	r3, r3, #1
9000844c:	6013      	str	r3, [r2, #0]
  HAL_I2C_MspDeInit(hi2c);
9000844e:	f7ff fff1 	bl	90008434 <HAL_I2C_MspDeInit>
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
90008452:	2300      	movs	r3, #0
90008454:	6463      	str	r3, [r4, #68]	; 0x44
  return HAL_OK;
90008456:	4618      	mov	r0, r3
  hi2c->State = HAL_I2C_STATE_RESET;
90008458:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hi2c);
9000845c:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
  hi2c->PreviousState = I2C_STATE_NONE;
90008460:	6323      	str	r3, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
90008462:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
}
90008466:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
90008468:	2001      	movs	r0, #1
}
9000846a:	4770      	bx	lr

9000846c <HAL_I2C_Mem_Write>:
{
9000846c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90008470:	4698      	mov	r8, r3
  if (hi2c->State == HAL_I2C_STATE_READY)
90008472:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
{
90008476:	f8bd a024 	ldrh.w	sl, [sp, #36]	; 0x24
  if (hi2c->State == HAL_I2C_STATE_READY)
9000847a:	2b20      	cmp	r3, #32
{
9000847c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  if (hi2c->State == HAL_I2C_STATE_READY)
9000847e:	d132      	bne.n	900084e6 <HAL_I2C_Mem_Write+0x7a>
    if ((pData == NULL) || (Size == 0U))
90008480:	9b08      	ldr	r3, [sp, #32]
90008482:	4604      	mov	r4, r0
90008484:	b34b      	cbz	r3, 900084da <HAL_I2C_Mem_Write+0x6e>
90008486:	f1ba 0f00 	cmp.w	sl, #0
9000848a:	d026      	beq.n	900084da <HAL_I2C_Mem_Write+0x6e>
    __HAL_LOCK(hi2c);
9000848c:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
90008490:	2b01      	cmp	r3, #1
90008492:	d028      	beq.n	900084e6 <HAL_I2C_Mem_Write+0x7a>
90008494:	2301      	movs	r3, #1
90008496:	460e      	mov	r6, r1
90008498:	4691      	mov	r9, r2
9000849a:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
    tickstart = HAL_GetTick();
9000849e:	f7ff f967 	bl	90007770 <HAL_GetTick>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
900084a2:	6823      	ldr	r3, [r4, #0]
    tickstart = HAL_GetTick();
900084a4:	4605      	mov	r5, r0
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
900084a6:	699a      	ldr	r2, [r3, #24]
900084a8:	0411      	lsls	r1, r2, #16
900084aa:	d51f      	bpl.n	900084ec <HAL_I2C_Mem_Write+0x80>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
900084ac:	f7ff f960 	bl	90007770 <HAL_GetTick>
900084b0:	1b40      	subs	r0, r0, r5
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
900084b2:	6823      	ldr	r3, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
900084b4:	2819      	cmp	r0, #25
900084b6:	d9f6      	bls.n	900084a6 <HAL_I2C_Mem_Write+0x3a>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
900084b8:	699a      	ldr	r2, [r3, #24]
900084ba:	0412      	lsls	r2, r2, #16
900084bc:	d5f3      	bpl.n	900084a6 <HAL_I2C_Mem_Write+0x3a>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
900084be:	6c63      	ldr	r3, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
900084c0:	2120      	movs	r1, #32
          hi2c->Mode = HAL_I2C_MODE_NONE;
900084c2:	2200      	movs	r2, #0
      return HAL_ERROR;
900084c4:	2001      	movs	r0, #1
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
900084c6:	430b      	orrs	r3, r1
          __HAL_UNLOCK(hi2c);
900084c8:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
900084cc:	6463      	str	r3, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
900084ce:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
900084d2:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
}
900084d6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
900084da:	f44f 7300 	mov.w	r3, #512	; 0x200
      return  HAL_ERROR;
900084de:	2001      	movs	r0, #1
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
900084e0:	6463      	str	r3, [r4, #68]	; 0x44
}
900084e2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    return HAL_BUSY;
900084e6:	2002      	movs	r0, #2
}
900084e8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    hi2c->pBuffPtr  = pData;
900084ec:	9a08      	ldr	r2, [sp, #32]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
900084ee:	2121      	movs	r1, #33	; 0x21
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_TRANSFER_MODE(Mode));
  assert_param(IS_TRANSFER_REQUEST(Request));

  /* Declaration of tmp to prevent undefined behavior of volatile usage */
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
900084f0:	f3c6 0609 	ubfx	r6, r6, #0, #10
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
900084f4:	4620      	mov	r0, r4
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
900084f6:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
900084fa:	2140      	movs	r1, #64	; 0x40
    hi2c->pBuffPtr  = pData;
900084fc:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
900084fe:	2200      	movs	r2, #0
    hi2c->Mode      = HAL_I2C_MODE_MEM;
90008500:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
    hi2c->XferISR   = NULL;
90008504:	6362      	str	r2, [r4, #52]	; 0x34
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
90008506:	6462      	str	r2, [r4, #68]	; 0x44
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
                             (uint32_t)Mode | (uint32_t)Request) & (~0x80000000U));

  /* update CR2 register */
  MODIFY_REG(hi2c->Instance->CR2, \
90008508:	496d      	ldr	r1, [pc, #436]	; (900086c0 <HAL_I2C_Mem_Write+0x254>)
    hi2c->XferCount = Size;
9000850a:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
9000850e:	685a      	ldr	r2, [r3, #4]
90008510:	400a      	ands	r2, r1
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
90008512:	fa5f f188 	uxtb.w	r1, r8
  MODIFY_REG(hi2c->Instance->CR2, \
90008516:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
9000851a:	496a      	ldr	r1, [pc, #424]	; (900086c4 <HAL_I2C_Mem_Write+0x258>)
9000851c:	4332      	orrs	r2, r6
9000851e:	4311      	orrs	r1, r2
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90008520:	462a      	mov	r2, r5
  MODIFY_REG(hi2c->Instance->CR2, \
90008522:	6059      	str	r1, [r3, #4]
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90008524:	4639      	mov	r1, r7
90008526:	f7ff fdbb 	bl	900080a0 <I2C_WaitOnTXISFlagUntilTimeout>
9000852a:	2800      	cmp	r0, #0
9000852c:	d175      	bne.n	9000861a <HAL_I2C_Mem_Write+0x1ae>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
9000852e:	f1b8 0f01 	cmp.w	r8, #1
90008532:	d00a      	beq.n	9000854a <HAL_I2C_Mem_Write+0xde>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
90008534:	ea4f 2219 	mov.w	r2, r9, lsr #8
90008538:	6823      	ldr	r3, [r4, #0]
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000853a:	4639      	mov	r1, r7
9000853c:	4620      	mov	r0, r4
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
9000853e:	629a      	str	r2, [r3, #40]	; 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90008540:	462a      	mov	r2, r5
90008542:	f7ff fdad 	bl	900080a0 <I2C_WaitOnTXISFlagUntilTimeout>
90008546:	2800      	cmp	r0, #0
90008548:	d167      	bne.n	9000861a <HAL_I2C_Mem_Write+0x1ae>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
9000854a:	fa5f f389 	uxtb.w	r3, r9
9000854e:	6822      	ldr	r2, [r4, #0]
90008550:	6293      	str	r3, [r2, #40]	; 0x28
90008552:	1c78      	adds	r0, r7, #1
90008554:	d14a      	bne.n	900085ec <HAL_I2C_Mem_Write+0x180>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90008556:	6993      	ldr	r3, [r2, #24]
90008558:	0619      	lsls	r1, r3, #24
9000855a:	d5fc      	bpl.n	90008556 <HAL_I2C_Mem_Write+0xea>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
9000855c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
9000855e:	b29b      	uxth	r3, r3
90008560:	2bff      	cmp	r3, #255	; 0xff
90008562:	f240 808a 	bls.w	9000867a <HAL_I2C_Mem_Write+0x20e>
  MODIFY_REG(hi2c->Instance->CR2, \
90008566:	6853      	ldr	r3, [r2, #4]
90008568:	4957      	ldr	r1, [pc, #348]	; (900086c8 <HAL_I2C_Mem_Write+0x25c>)
9000856a:	400b      	ands	r3, r1
9000856c:	4957      	ldr	r1, [pc, #348]	; (900086cc <HAL_I2C_Mem_Write+0x260>)
9000856e:	4333      	orrs	r3, r6
90008570:	4319      	orrs	r1, r3
      hi2c->XferSize = MAX_NBYTE_SIZE;
90008572:	23ff      	movs	r3, #255	; 0xff
90008574:	8523      	strh	r3, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
90008576:	6051      	str	r1, [r2, #4]
90008578:	f8df 814c 	ldr.w	r8, [pc, #332]	; 900086c8 <HAL_I2C_Mem_Write+0x25c>
          hi2c->XferSize = MAX_NBYTE_SIZE;
9000857c:	f04f 0aff 	mov.w	sl, #255	; 0xff
  MODIFY_REG(hi2c->Instance->CR2, \
90008580:	f8df 9148 	ldr.w	r9, [pc, #328]	; 900086cc <HAL_I2C_Mem_Write+0x260>
90008584:	e004      	b.n	90008590 <HAL_I2C_Mem_Write+0x124>
    } while (hi2c->XferCount > 0U);
90008586:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
90008588:	b29b      	uxth	r3, r3
9000858a:	2b00      	cmp	r3, #0
9000858c:	f000 8083 	beq.w	90008696 <HAL_I2C_Mem_Write+0x22a>
      if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
90008590:	462a      	mov	r2, r5
90008592:	4639      	mov	r1, r7
90008594:	4620      	mov	r0, r4
90008596:	f7ff fd83 	bl	900080a0 <I2C_WaitOnTXISFlagUntilTimeout>
9000859a:	2800      	cmp	r0, #0
9000859c:	d16b      	bne.n	90008676 <HAL_I2C_Mem_Write+0x20a>
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
9000859e:	6a62      	ldr	r2, [r4, #36]	; 0x24
900085a0:	6821      	ldr	r1, [r4, #0]
900085a2:	f812 0b01 	ldrb.w	r0, [r2], #1
      hi2c->XferSize--;
900085a6:	8d23      	ldrh	r3, [r4, #40]	; 0x28
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
900085a8:	6288      	str	r0, [r1, #40]	; 0x28
      hi2c->pBuffPtr++;
900085aa:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferSize--;
900085ac:	3b01      	subs	r3, #1
      hi2c->XferCount--;
900085ae:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
900085b0:	b29b      	uxth	r3, r3
      hi2c->XferCount--;
900085b2:	3a01      	subs	r2, #1
      hi2c->XferSize--;
900085b4:	8523      	strh	r3, [r4, #40]	; 0x28
      hi2c->XferCount--;
900085b6:	b292      	uxth	r2, r2
900085b8:	8562      	strh	r2, [r4, #42]	; 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
900085ba:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
900085bc:	b292      	uxth	r2, r2
900085be:	2a00      	cmp	r2, #0
900085c0:	d0e1      	beq.n	90008586 <HAL_I2C_Mem_Write+0x11a>
900085c2:	2b00      	cmp	r3, #0
900085c4:	d1df      	bne.n	90008586 <HAL_I2C_Mem_Write+0x11a>
900085c6:	1c78      	adds	r0, r7, #1
900085c8:	d12c      	bne.n	90008624 <HAL_I2C_Mem_Write+0x1b8>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
900085ca:	698b      	ldr	r3, [r1, #24]
900085cc:	061a      	lsls	r2, r3, #24
900085ce:	d5fc      	bpl.n	900085ca <HAL_I2C_Mem_Write+0x15e>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
900085d0:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
900085d2:	b29b      	uxth	r3, r3
900085d4:	2bff      	cmp	r3, #255	; 0xff
900085d6:	d940      	bls.n	9000865a <HAL_I2C_Mem_Write+0x1ee>
  MODIFY_REG(hi2c->Instance->CR2, \
900085d8:	684b      	ldr	r3, [r1, #4]
          hi2c->XferSize = MAX_NBYTE_SIZE;
900085da:	f8a4 a028 	strh.w	sl, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
900085de:	ea03 0308 	and.w	r3, r3, r8
900085e2:	4333      	orrs	r3, r6
900085e4:	ea43 0309 	orr.w	r3, r3, r9
900085e8:	604b      	str	r3, [r1, #4]
             ((I2C_CR2_SADD | I2C_CR2_NBYTES | I2C_CR2_RELOAD | I2C_CR2_AUTOEND | \
               (I2C_CR2_RD_WRN & (uint32_t)(Request >> (31U - I2C_CR2_RD_WRN_Pos))) | \
               I2C_CR2_START | I2C_CR2_STOP)), tmp);
}
900085ea:	e7cc      	b.n	90008586 <HAL_I2C_Mem_Write+0x11a>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
900085ec:	6993      	ldr	r3, [r2, #24]
900085ee:	061b      	lsls	r3, r3, #24
900085f0:	d4b4      	bmi.n	9000855c <HAL_I2C_Mem_Write+0xf0>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
900085f2:	f7ff f8bd 	bl	90007770 <HAL_GetTick>
900085f6:	1b40      	subs	r0, r0, r5
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
900085f8:	6822      	ldr	r2, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
900085fa:	4287      	cmp	r7, r0
900085fc:	d301      	bcc.n	90008602 <HAL_I2C_Mem_Write+0x196>
900085fe:	2f00      	cmp	r7, #0
90008600:	d1a7      	bne.n	90008552 <HAL_I2C_Mem_Write+0xe6>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90008602:	6993      	ldr	r3, [r2, #24]
90008604:	f013 0380 	ands.w	r3, r3, #128	; 0x80
90008608:	d1a3      	bne.n	90008552 <HAL_I2C_Mem_Write+0xe6>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000860a:	6c62      	ldr	r2, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000860c:	2120      	movs	r1, #32
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000860e:	430a      	orrs	r2, r1
90008610:	6462      	str	r2, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90008612:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
90008616:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
      __HAL_UNLOCK(hi2c);
9000861a:	2300      	movs	r3, #0
      return HAL_ERROR;
9000861c:	2001      	movs	r0, #1
      __HAL_UNLOCK(hi2c);
9000861e:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
      return HAL_ERROR;
90008622:	e75e      	b.n	900084e2 <HAL_I2C_Mem_Write+0x76>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90008624:	698b      	ldr	r3, [r1, #24]
90008626:	061b      	lsls	r3, r3, #24
90008628:	d4d2      	bmi.n	900085d0 <HAL_I2C_Mem_Write+0x164>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000862a:	f7ff f8a1 	bl	90007770 <HAL_GetTick>
9000862e:	1b40      	subs	r0, r0, r5
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90008630:	6821      	ldr	r1, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008632:	4287      	cmp	r7, r0
90008634:	d301      	bcc.n	9000863a <HAL_I2C_Mem_Write+0x1ce>
90008636:	2f00      	cmp	r7, #0
90008638:	d1c5      	bne.n	900085c6 <HAL_I2C_Mem_Write+0x15a>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000863a:	698b      	ldr	r3, [r1, #24]
9000863c:	f013 0380 	ands.w	r3, r3, #128	; 0x80
90008640:	d1c1      	bne.n	900085c6 <HAL_I2C_Mem_Write+0x15a>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008642:	6c62      	ldr	r2, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90008644:	2120      	movs	r1, #32
          return HAL_ERROR;
90008646:	2001      	movs	r0, #1
          __HAL_UNLOCK(hi2c);
90008648:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000864c:	430a      	orrs	r2, r1
9000864e:	6462      	str	r2, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90008650:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
90008654:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
          return HAL_ERROR;
90008658:	e743      	b.n	900084e2 <HAL_I2C_Mem_Write+0x76>
          hi2c->XferSize = hi2c->XferCount;
9000865a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
9000865c:	b29b      	uxth	r3, r3
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
9000865e:	b2da      	uxtb	r2, r3
          hi2c->XferSize = hi2c->XferCount;
90008660:	8523      	strh	r3, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
90008662:	684b      	ldr	r3, [r1, #4]
90008664:	ea03 0308 	and.w	r3, r3, r8
90008668:	4333      	orrs	r3, r6
9000866a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9000866e:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
90008672:	604b      	str	r3, [r1, #4]
}
90008674:	e787      	b.n	90008586 <HAL_I2C_Mem_Write+0x11a>
        return HAL_ERROR;
90008676:	2001      	movs	r0, #1
90008678:	e733      	b.n	900084e2 <HAL_I2C_Mem_Write+0x76>
      hi2c->XferSize = hi2c->XferCount;
9000867a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
9000867c:	4812      	ldr	r0, [pc, #72]	; (900086c8 <HAL_I2C_Mem_Write+0x25c>)
      hi2c->XferSize = hi2c->XferCount;
9000867e:	b29b      	uxth	r3, r3
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
90008680:	b2d9      	uxtb	r1, r3
      hi2c->XferSize = hi2c->XferCount;
90008682:	8523      	strh	r3, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
90008684:	6853      	ldr	r3, [r2, #4]
90008686:	4003      	ands	r3, r0
90008688:	4333      	orrs	r3, r6
9000868a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
9000868e:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
90008692:	6053      	str	r3, [r2, #4]
}
90008694:	e770      	b.n	90008578 <HAL_I2C_Mem_Write+0x10c>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
90008696:	462a      	mov	r2, r5
90008698:	4639      	mov	r1, r7
9000869a:	4620      	mov	r0, r4
9000869c:	f7ff fdb6 	bl	9000820c <I2C_WaitOnSTOPFlagUntilTimeout>
900086a0:	2800      	cmp	r0, #0
900086a2:	d1e8      	bne.n	90008676 <HAL_I2C_Mem_Write+0x20a>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
900086a4:	6823      	ldr	r3, [r4, #0]
900086a6:	2120      	movs	r1, #32
    I2C_RESET_CR2(hi2c);
900086a8:	4d09      	ldr	r5, [pc, #36]	; (900086d0 <HAL_I2C_Mem_Write+0x264>)
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
900086aa:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
900086ac:	685a      	ldr	r2, [r3, #4]
900086ae:	402a      	ands	r2, r5
900086b0:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
900086b2:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
900086b6:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
900086ba:	f884 0042 	strb.w	r0, [r4, #66]	; 0x42
    return HAL_OK;
900086be:	e710      	b.n	900084e2 <HAL_I2C_Mem_Write+0x76>
900086c0:	fc009800 	.word	0xfc009800
900086c4:	01002000 	.word	0x01002000
900086c8:	fc009c00 	.word	0xfc009c00
900086cc:	01ff0000 	.word	0x01ff0000
900086d0:	fe00e800 	.word	0xfe00e800

900086d4 <HAL_I2C_Mem_Read>:
{
900086d4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
900086d8:	461c      	mov	r4, r3
  if (hi2c->State == HAL_I2C_STATE_READY)
900086da:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
{
900086de:	f8bd 902c 	ldrh.w	r9, [sp, #44]	; 0x2c
  if (hi2c->State == HAL_I2C_STATE_READY)
900086e2:	2b20      	cmp	r3, #32
{
900086e4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
  if (hi2c->State == HAL_I2C_STATE_READY)
900086e6:	d137      	bne.n	90008758 <HAL_I2C_Mem_Read+0x84>
    if ((pData == NULL) || (Size == 0U))
900086e8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
900086ea:	4683      	mov	fp, r0
900086ec:	b36b      	cbz	r3, 9000874a <HAL_I2C_Mem_Read+0x76>
900086ee:	f1b9 0f00 	cmp.w	r9, #0
900086f2:	d02a      	beq.n	9000874a <HAL_I2C_Mem_Read+0x76>
    __HAL_LOCK(hi2c);
900086f4:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
900086f8:	2b01      	cmp	r3, #1
900086fa:	d02d      	beq.n	90008758 <HAL_I2C_Mem_Read+0x84>
900086fc:	2301      	movs	r3, #1
900086fe:	460f      	mov	r7, r1
90008700:	4690      	mov	r8, r2
90008702:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
    tickstart = HAL_GetTick();
90008706:	f7ff f833 	bl	90007770 <HAL_GetTick>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000870a:	f8db 3000 	ldr.w	r3, [fp]
    tickstart = HAL_GetTick();
9000870e:	4606      	mov	r6, r0
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90008710:	699a      	ldr	r2, [r3, #24]
90008712:	0410      	lsls	r0, r2, #16
90008714:	d523      	bpl.n	9000875e <HAL_I2C_Mem_Read+0x8a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008716:	f7ff f82b 	bl	90007770 <HAL_GetTick>
9000871a:	1b80      	subs	r0, r0, r6
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000871c:	f8db 3000 	ldr.w	r3, [fp]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008720:	2819      	cmp	r0, #25
90008722:	d9f5      	bls.n	90008710 <HAL_I2C_Mem_Read+0x3c>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90008724:	699a      	ldr	r2, [r3, #24]
90008726:	0411      	lsls	r1, r2, #16
90008728:	d5f2      	bpl.n	90008710 <HAL_I2C_Mem_Read+0x3c>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000872a:	f8db 3044 	ldr.w	r3, [fp, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000872e:	2120      	movs	r1, #32
          hi2c->Mode = HAL_I2C_MODE_NONE;
90008730:	2200      	movs	r2, #0
      return HAL_ERROR;
90008732:	2001      	movs	r0, #1
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008734:	430b      	orrs	r3, r1
          __HAL_UNLOCK(hi2c);
90008736:	f88b 2040 	strb.w	r2, [fp, #64]	; 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000873a:	f8cb 3044 	str.w	r3, [fp, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000873e:	f88b 1041 	strb.w	r1, [fp, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
90008742:	f88b 2042 	strb.w	r2, [fp, #66]	; 0x42
}
90008746:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
9000874a:	f44f 7300 	mov.w	r3, #512	; 0x200
      return  HAL_ERROR;
9000874e:	2001      	movs	r0, #1
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
90008750:	f8cb 3044 	str.w	r3, [fp, #68]	; 0x44
}
90008754:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    return HAL_BUSY;
90008758:	2002      	movs	r0, #2
}
9000875a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    hi2c->pBuffPtr  = pData;
9000875e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
90008760:	2122      	movs	r1, #34	; 0x22
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
90008762:	f3c7 0709 	ubfx	r7, r7, #0, #10
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90008766:	4658      	mov	r0, fp
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
90008768:	f88b 1041 	strb.w	r1, [fp, #65]	; 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
9000876c:	2140      	movs	r1, #64	; 0x40
    hi2c->pBuffPtr  = pData;
9000876e:	f8cb 2024 	str.w	r2, [fp, #36]	; 0x24
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
90008772:	2200      	movs	r2, #0
    hi2c->Mode      = HAL_I2C_MODE_MEM;
90008774:	f88b 1042 	strb.w	r1, [fp, #66]	; 0x42
    hi2c->XferISR   = NULL;
90008778:	f8cb 2034 	str.w	r2, [fp, #52]	; 0x34
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
9000877c:	f8cb 2044 	str.w	r2, [fp, #68]	; 0x44
  MODIFY_REG(hi2c->Instance->CR2, \
90008780:	4983      	ldr	r1, [pc, #524]	; (90008990 <HAL_I2C_Mem_Read+0x2bc>)
    hi2c->XferCount = Size;
90008782:	f8ab 902a 	strh.w	r9, [fp, #42]	; 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90008786:	685a      	ldr	r2, [r3, #4]
90008788:	400a      	ands	r2, r1
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
9000878a:	b2e1      	uxtb	r1, r4
  MODIFY_REG(hi2c->Instance->CR2, \
9000878c:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90008790:	4629      	mov	r1, r5
  MODIFY_REG(hi2c->Instance->CR2, \
90008792:	433a      	orrs	r2, r7
90008794:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
90008798:	605a      	str	r2, [r3, #4]
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000879a:	4632      	mov	r2, r6
9000879c:	f7ff fc80 	bl	900080a0 <I2C_WaitOnTXISFlagUntilTimeout>
900087a0:	2800      	cmp	r0, #0
900087a2:	f040 8091 	bne.w	900088c8 <HAL_I2C_Mem_Read+0x1f4>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
900087a6:	2c01      	cmp	r4, #1
900087a8:	d00c      	beq.n	900087c4 <HAL_I2C_Mem_Read+0xf0>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
900087aa:	ea4f 2218 	mov.w	r2, r8, lsr #8
900087ae:	f8db 3000 	ldr.w	r3, [fp]
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
900087b2:	4629      	mov	r1, r5
900087b4:	4658      	mov	r0, fp
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
900087b6:	629a      	str	r2, [r3, #40]	; 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
900087b8:	4632      	mov	r2, r6
900087ba:	f7ff fc71 	bl	900080a0 <I2C_WaitOnTXISFlagUntilTimeout>
900087be:	2800      	cmp	r0, #0
900087c0:	f040 8082 	bne.w	900088c8 <HAL_I2C_Mem_Read+0x1f4>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
900087c4:	fa5f f388 	uxtb.w	r3, r8
900087c8:	f8db 4000 	ldr.w	r4, [fp]
900087cc:	62a3      	str	r3, [r4, #40]	; 0x28
900087ce:	1c6a      	adds	r2, r5, #1
900087d0:	d160      	bne.n	90008894 <HAL_I2C_Mem_Read+0x1c0>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
900087d2:	69a3      	ldr	r3, [r4, #24]
900087d4:	065b      	lsls	r3, r3, #25
900087d6:	d5fc      	bpl.n	900087d2 <HAL_I2C_Mem_Read+0xfe>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
900087d8:	f8bb 302a 	ldrh.w	r3, [fp, #42]	; 0x2a
900087dc:	b29b      	uxth	r3, r3
900087de:	2bff      	cmp	r3, #255	; 0xff
900087e0:	f240 80ae 	bls.w	90008940 <HAL_I2C_Mem_Read+0x26c>
  MODIFY_REG(hi2c->Instance->CR2, \
900087e4:	6863      	ldr	r3, [r4, #4]
900087e6:	4a6a      	ldr	r2, [pc, #424]	; (90008990 <HAL_I2C_Mem_Read+0x2bc>)
900087e8:	4013      	ands	r3, r2
900087ea:	4a6a      	ldr	r2, [pc, #424]	; (90008994 <HAL_I2C_Mem_Read+0x2c0>)
900087ec:	433b      	orrs	r3, r7
900087ee:	431a      	orrs	r2, r3
      hi2c->XferSize = MAX_NBYTE_SIZE;
900087f0:	23ff      	movs	r3, #255	; 0xff
900087f2:	f8ab 3028 	strh.w	r3, [fp, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
900087f6:	6062      	str	r2, [r4, #4]
900087f8:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 900089a0 <HAL_I2C_Mem_Read+0x2cc>
          hi2c->XferSize = MAX_NBYTE_SIZE;
900087fc:	f04f 0aff 	mov.w	sl, #255	; 0xff
  MODIFY_REG(hi2c->Instance->CR2, \
90008800:	f8df 91a0 	ldr.w	r9, [pc, #416]	; 900089a4 <HAL_I2C_Mem_Read+0x2d0>
90008804:	1c69      	adds	r1, r5, #1
90008806:	d127      	bne.n	90008858 <HAL_I2C_Mem_Read+0x184>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90008808:	69a3      	ldr	r3, [r4, #24]
9000880a:	075a      	lsls	r2, r3, #29
9000880c:	d5fc      	bpl.n	90008808 <HAL_I2C_Mem_Read+0x134>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
9000880e:	6a62      	ldr	r2, [r4, #36]	; 0x24
90008810:	f8db 3024 	ldr.w	r3, [fp, #36]	; 0x24
90008814:	701a      	strb	r2, [r3, #0]
      hi2c->XferCount--;
90008816:	f8bb 202a 	ldrh.w	r2, [fp, #42]	; 0x2a
      hi2c->pBuffPtr++;
9000881a:	f8db 3024 	ldr.w	r3, [fp, #36]	; 0x24
      hi2c->XferCount--;
9000881e:	3a01      	subs	r2, #1
      hi2c->pBuffPtr++;
90008820:	3301      	adds	r3, #1
      hi2c->XferCount--;
90008822:	b292      	uxth	r2, r2
      hi2c->pBuffPtr++;
90008824:	f8cb 3024 	str.w	r3, [fp, #36]	; 0x24
      hi2c->XferSize--;
90008828:	f8bb 3028 	ldrh.w	r3, [fp, #40]	; 0x28
      hi2c->XferCount--;
9000882c:	f8ab 202a 	strh.w	r2, [fp, #42]	; 0x2a
      hi2c->XferSize--;
90008830:	3b01      	subs	r3, #1
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
90008832:	f8bb 202a 	ldrh.w	r2, [fp, #42]	; 0x2a
      hi2c->XferSize--;
90008836:	b29b      	uxth	r3, r3
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
90008838:	b292      	uxth	r2, r2
      hi2c->XferSize--;
9000883a:	f8ab 3028 	strh.w	r3, [fp, #40]	; 0x28
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
9000883e:	b10a      	cbz	r2, 90008844 <HAL_I2C_Mem_Read+0x170>
90008840:	2b00      	cmp	r3, #0
90008842:	d046      	beq.n	900088d2 <HAL_I2C_Mem_Read+0x1fe>
    } while (hi2c->XferCount > 0U);
90008844:	f8bb 302a 	ldrh.w	r3, [fp, #42]	; 0x2a
90008848:	b29b      	uxth	r3, r3
9000884a:	2b00      	cmp	r3, #0
9000884c:	f000 8088 	beq.w	90008960 <HAL_I2C_Mem_Read+0x28c>
90008850:	1c69      	adds	r1, r5, #1
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90008852:	f8db 4000 	ldr.w	r4, [fp]
90008856:	d0d7      	beq.n	90008808 <HAL_I2C_Mem_Read+0x134>
90008858:	69a3      	ldr	r3, [r4, #24]
9000885a:	075b      	lsls	r3, r3, #29
9000885c:	d4d7      	bmi.n	9000880e <HAL_I2C_Mem_Read+0x13a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000885e:	f7fe ff87 	bl	90007770 <HAL_GetTick>
90008862:	1b80      	subs	r0, r0, r6
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90008864:	f8db 4000 	ldr.w	r4, [fp]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008868:	4285      	cmp	r5, r0
9000886a:	d301      	bcc.n	90008870 <HAL_I2C_Mem_Read+0x19c>
9000886c:	2d00      	cmp	r5, #0
9000886e:	d1c9      	bne.n	90008804 <HAL_I2C_Mem_Read+0x130>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90008870:	69a3      	ldr	r3, [r4, #24]
90008872:	f013 0304 	ands.w	r3, r3, #4
90008876:	d1c5      	bne.n	90008804 <HAL_I2C_Mem_Read+0x130>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008878:	f8db 2044 	ldr.w	r2, [fp, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000887c:	2120      	movs	r1, #32
          return HAL_ERROR;
9000887e:	2001      	movs	r0, #1
          __HAL_UNLOCK(hi2c);
90008880:	f88b 3040 	strb.w	r3, [fp, #64]	; 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008884:	430a      	orrs	r2, r1
90008886:	f8cb 2044 	str.w	r2, [fp, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000888a:	f88b 1041 	strb.w	r1, [fp, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
9000888e:	f88b 3042 	strb.w	r3, [fp, #66]	; 0x42
          return HAL_ERROR;
90008892:	e75f      	b.n	90008754 <HAL_I2C_Mem_Read+0x80>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90008894:	69a3      	ldr	r3, [r4, #24]
90008896:	0658      	lsls	r0, r3, #25
90008898:	d49e      	bmi.n	900087d8 <HAL_I2C_Mem_Read+0x104>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000889a:	f7fe ff69 	bl	90007770 <HAL_GetTick>
9000889e:	1b80      	subs	r0, r0, r6
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
900088a0:	f8db 4000 	ldr.w	r4, [fp]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
900088a4:	4285      	cmp	r5, r0
900088a6:	d301      	bcc.n	900088ac <HAL_I2C_Mem_Read+0x1d8>
900088a8:	2d00      	cmp	r5, #0
900088aa:	d190      	bne.n	900087ce <HAL_I2C_Mem_Read+0xfa>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
900088ac:	69a3      	ldr	r3, [r4, #24]
900088ae:	f013 0340 	ands.w	r3, r3, #64	; 0x40
900088b2:	d18c      	bne.n	900087ce <HAL_I2C_Mem_Read+0xfa>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
900088b4:	f8db 2044 	ldr.w	r2, [fp, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
900088b8:	2120      	movs	r1, #32
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
900088ba:	430a      	orrs	r2, r1
900088bc:	f8cb 2044 	str.w	r2, [fp, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
900088c0:	f88b 1041 	strb.w	r1, [fp, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
900088c4:	f88b 3042 	strb.w	r3, [fp, #66]	; 0x42
      __HAL_UNLOCK(hi2c);
900088c8:	2300      	movs	r3, #0
      return HAL_ERROR;
900088ca:	2001      	movs	r0, #1
      __HAL_UNLOCK(hi2c);
900088cc:	f88b 3040 	strb.w	r3, [fp, #64]	; 0x40
      return HAL_ERROR;
900088d0:	e740      	b.n	90008754 <HAL_I2C_Mem_Read+0x80>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
900088d2:	f8db 2000 	ldr.w	r2, [fp]
900088d6:	1c68      	adds	r0, r5, #1
900088d8:	d111      	bne.n	900088fe <HAL_I2C_Mem_Read+0x22a>
900088da:	6993      	ldr	r3, [r2, #24]
900088dc:	0619      	lsls	r1, r3, #24
900088de:	d5fc      	bpl.n	900088da <HAL_I2C_Mem_Read+0x206>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
900088e0:	f8bb 302a 	ldrh.w	r3, [fp, #42]	; 0x2a
900088e4:	b29b      	uxth	r3, r3
900088e6:	2bff      	cmp	r3, #255	; 0xff
900088e8:	d91a      	bls.n	90008920 <HAL_I2C_Mem_Read+0x24c>
  MODIFY_REG(hi2c->Instance->CR2, \
900088ea:	6853      	ldr	r3, [r2, #4]
          hi2c->XferSize = MAX_NBYTE_SIZE;
900088ec:	f8ab a028 	strh.w	sl, [fp, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
900088f0:	ea03 0308 	and.w	r3, r3, r8
900088f4:	433b      	orrs	r3, r7
900088f6:	ea43 0309 	orr.w	r3, r3, r9
900088fa:	6053      	str	r3, [r2, #4]
}
900088fc:	e7a2      	b.n	90008844 <HAL_I2C_Mem_Read+0x170>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
900088fe:	6993      	ldr	r3, [r2, #24]
90008900:	061b      	lsls	r3, r3, #24
90008902:	d4ed      	bmi.n	900088e0 <HAL_I2C_Mem_Read+0x20c>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008904:	f7fe ff34 	bl	90007770 <HAL_GetTick>
90008908:	1b80      	subs	r0, r0, r6
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000890a:	f8db 2000 	ldr.w	r2, [fp]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000890e:	4285      	cmp	r5, r0
90008910:	d301      	bcc.n	90008916 <HAL_I2C_Mem_Read+0x242>
90008912:	2d00      	cmp	r5, #0
90008914:	d1df      	bne.n	900088d6 <HAL_I2C_Mem_Read+0x202>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90008916:	6993      	ldr	r3, [r2, #24]
90008918:	f013 0380 	ands.w	r3, r3, #128	; 0x80
9000891c:	d1db      	bne.n	900088d6 <HAL_I2C_Mem_Read+0x202>
9000891e:	e7ab      	b.n	90008878 <HAL_I2C_Mem_Read+0x1a4>
          hi2c->XferSize = hi2c->XferCount;
90008920:	f8bb 302a 	ldrh.w	r3, [fp, #42]	; 0x2a
90008924:	b29b      	uxth	r3, r3
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
90008926:	b2d9      	uxtb	r1, r3
          hi2c->XferSize = hi2c->XferCount;
90008928:	f8ab 3028 	strh.w	r3, [fp, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
9000892c:	6853      	ldr	r3, [r2, #4]
9000892e:	ea03 0308 	and.w	r3, r3, r8
90008932:	433b      	orrs	r3, r7
90008934:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
90008938:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
9000893c:	6053      	str	r3, [r2, #4]
}
9000893e:	e781      	b.n	90008844 <HAL_I2C_Mem_Read+0x170>
      hi2c->XferSize = hi2c->XferCount;
90008940:	f8bb 302a 	ldrh.w	r3, [fp, #42]	; 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90008944:	4912      	ldr	r1, [pc, #72]	; (90008990 <HAL_I2C_Mem_Read+0x2bc>)
      hi2c->XferSize = hi2c->XferCount;
90008946:	b29b      	uxth	r3, r3
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
90008948:	b2da      	uxtb	r2, r3
      hi2c->XferSize = hi2c->XferCount;
9000894a:	f8ab 3028 	strh.w	r3, [fp, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
9000894e:	6863      	ldr	r3, [r4, #4]
90008950:	400b      	ands	r3, r1
90008952:	433b      	orrs	r3, r7
90008954:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
90008958:	4a0f      	ldr	r2, [pc, #60]	; (90008998 <HAL_I2C_Mem_Read+0x2c4>)
9000895a:	431a      	orrs	r2, r3
9000895c:	6062      	str	r2, [r4, #4]
}
9000895e:	e74b      	b.n	900087f8 <HAL_I2C_Mem_Read+0x124>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
90008960:	4632      	mov	r2, r6
90008962:	4629      	mov	r1, r5
90008964:	4658      	mov	r0, fp
90008966:	f7ff fc51 	bl	9000820c <I2C_WaitOnSTOPFlagUntilTimeout>
9000896a:	b970      	cbnz	r0, 9000898a <HAL_I2C_Mem_Read+0x2b6>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
9000896c:	f8db 3000 	ldr.w	r3, [fp]
90008970:	2120      	movs	r1, #32
    I2C_RESET_CR2(hi2c);
90008972:	4c0a      	ldr	r4, [pc, #40]	; (9000899c <HAL_I2C_Mem_Read+0x2c8>)
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90008974:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
90008976:	685a      	ldr	r2, [r3, #4]
90008978:	4022      	ands	r2, r4
9000897a:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
9000897c:	f88b 1041 	strb.w	r1, [fp, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
90008980:	f88b 0040 	strb.w	r0, [fp, #64]	; 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
90008984:	f88b 0042 	strb.w	r0, [fp, #66]	; 0x42
    return HAL_OK;
90008988:	e6e4      	b.n	90008754 <HAL_I2C_Mem_Read+0x80>
      return HAL_ERROR;
9000898a:	2001      	movs	r0, #1
9000898c:	e6e2      	b.n	90008754 <HAL_I2C_Mem_Read+0x80>
9000898e:	bf00      	nop
90008990:	fc009800 	.word	0xfc009800
90008994:	01ff2400 	.word	0x01ff2400
90008998:	02002400 	.word	0x02002400
9000899c:	fe00e800 	.word	0xfe00e800
900089a0:	fc009c00 	.word	0xfc009c00
900089a4:	01ff0000 	.word	0x01ff0000

900089a8 <HAL_I2C_GetState>:
  return hi2c->State;
900089a8:	f890 0041 	ldrb.w	r0, [r0, #65]	; 0x41
}
900089ac:	4770      	bx	lr
900089ae:	bf00      	nop

900089b0 <HAL_I2C_GetError>:
  return hi2c->ErrorCode;
900089b0:	6c40      	ldr	r0, [r0, #68]	; 0x44
}
900089b2:	4770      	bx	lr

900089b4 <HAL_I2CEx_ConfigAnalogFilter>:
{
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
900089b4:	f890 2041 	ldrb.w	r2, [r0, #65]	; 0x41
900089b8:	2a20      	cmp	r2, #32
900089ba:	d123      	bne.n	90008a04 <HAL_I2CEx_ConfigAnalogFilter+0x50>
900089bc:	fa5f fc82 	uxtb.w	ip, r2
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
900089c0:	f890 2040 	ldrb.w	r2, [r0, #64]	; 0x40
900089c4:	4603      	mov	r3, r0
900089c6:	2a01      	cmp	r2, #1
900089c8:	d01c      	beq.n	90008a04 <HAL_I2CEx_ConfigAnalogFilter+0x50>

    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
900089ca:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
900089cc:	2024      	movs	r0, #36	; 0x24
{
900089ce:	b500      	push	{lr}
    hi2c->State = HAL_I2C_STATE_BUSY;
900089d0:	f883 0041 	strb.w	r0, [r3, #65]	; 0x41
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
900089d4:	f04f 0e00 	mov.w	lr, #0
    __HAL_I2C_DISABLE(hi2c);
900089d8:	6810      	ldr	r0, [r2, #0]
900089da:	f020 0001 	bic.w	r0, r0, #1
900089de:	6010      	str	r0, [r2, #0]
    hi2c->Instance->CR1 &= ~(I2C_CR1_ANFOFF);
900089e0:	6810      	ldr	r0, [r2, #0]
900089e2:	f420 5080 	bic.w	r0, r0, #4096	; 0x1000
900089e6:	6010      	str	r0, [r2, #0]
    hi2c->Instance->CR1 |= AnalogFilter;
900089e8:	6810      	ldr	r0, [r2, #0]
900089ea:	4301      	orrs	r1, r0

    return HAL_OK;
900089ec:	4670      	mov	r0, lr
    hi2c->Instance->CR1 |= AnalogFilter;
900089ee:	6011      	str	r1, [r2, #0]
    __HAL_I2C_ENABLE(hi2c);
900089f0:	6811      	ldr	r1, [r2, #0]
900089f2:	f041 0101 	orr.w	r1, r1, #1
900089f6:	6011      	str	r1, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
900089f8:	f883 c041 	strb.w	ip, [r3, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
900089fc:	f883 e040 	strb.w	lr, [r3, #64]	; 0x40
  }
  else
  {
    return HAL_BUSY;
  }
}
90008a00:	f85d fb04 	ldr.w	pc, [sp], #4
    return HAL_BUSY;
90008a04:	2002      	movs	r0, #2
}
90008a06:	4770      	bx	lr

90008a08 <HAL_I2CEx_ConfigDigitalFilter>:

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
90008a08:	f890 2041 	ldrb.w	r2, [r0, #65]	; 0x41
90008a0c:	2a20      	cmp	r2, #32
90008a0e:	d122      	bne.n	90008a56 <HAL_I2CEx_ConfigDigitalFilter+0x4e>
90008a10:	4603      	mov	r3, r0
{
90008a12:	b500      	push	{lr}
90008a14:	fa5f fe82 	uxtb.w	lr, r2
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
90008a18:	f890 2040 	ldrb.w	r2, [r0, #64]	; 0x40
90008a1c:	2a01      	cmp	r2, #1
90008a1e:	d01c      	beq.n	90008a5a <HAL_I2CEx_ConfigDigitalFilter+0x52>

    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
90008a20:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
90008a22:	2024      	movs	r0, #36	; 0x24
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
90008a24:	f04f 0c00 	mov.w	ip, #0
    hi2c->State = HAL_I2C_STATE_BUSY;
90008a28:	f883 0041 	strb.w	r0, [r3, #65]	; 0x41
    __HAL_I2C_DISABLE(hi2c);
90008a2c:	6810      	ldr	r0, [r2, #0]
90008a2e:	f020 0001 	bic.w	r0, r0, #1
90008a32:	6010      	str	r0, [r2, #0]
    tmpreg = hi2c->Instance->CR1;
90008a34:	6810      	ldr	r0, [r2, #0]
    tmpreg &= ~(I2C_CR1_DNF);
90008a36:	f420 6070 	bic.w	r0, r0, #3840	; 0xf00
    tmpreg |= DigitalFilter << 8U;
90008a3a:	ea40 2101 	orr.w	r1, r0, r1, lsl #8

    return HAL_OK;
90008a3e:	4660      	mov	r0, ip
    hi2c->Instance->CR1 = tmpreg;
90008a40:	6011      	str	r1, [r2, #0]
    __HAL_I2C_ENABLE(hi2c);
90008a42:	6811      	ldr	r1, [r2, #0]
90008a44:	f041 0101 	orr.w	r1, r1, #1
90008a48:	6011      	str	r1, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
90008a4a:	f883 e041 	strb.w	lr, [r3, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
90008a4e:	f883 c040 	strb.w	ip, [r3, #64]	; 0x40
  }
  else
  {
    return HAL_BUSY;
  }
}
90008a52:	f85d fb04 	ldr.w	pc, [sp], #4
    return HAL_BUSY;
90008a56:	2002      	movs	r0, #2
}
90008a58:	4770      	bx	lr
    return HAL_BUSY;
90008a5a:	2002      	movs	r0, #2
}
90008a5c:	f85d fb04 	ldr.w	pc, [sp], #4

90008a60 <JPEG_Bits_To_SizeCodes>:
  * @param  Huffcode pointer to codes table
  * @param  LastK pointer to last Coeff (table dimension)
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Bits_To_SizeCodes(uint8_t *Bits, uint8_t *Huffsize, uint32_t *Huffcode, uint32_t *LastK)
{
90008a60:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90008a64:	460d      	mov	r5, r1
90008a66:	4614      	mov	r4, r2
90008a68:	469a      	mov	sl, r3

  /* Figure C.1: Generation of table of Huffman code sizes */
  p = 0;
  for (l = 0; l < 16UL; l++)
  {
    i = (uint32_t)Bits[l];
90008a6a:	7806      	ldrb	r6, [r0, #0]
    if ((p + i) > 256UL)
90008a6c:	4681      	mov	r9, r0
    i = (uint32_t)Bits[l];
90008a6e:	2701      	movs	r7, #1
  p = 0;
90008a70:	f04f 0800 	mov.w	r8, #0
90008a74:	e006      	b.n	90008a84 <JPEG_Bits_To_SizeCodes+0x24>
    i = (uint32_t)Bits[l];
90008a76:	f819 6f01 	ldrb.w	r6, [r9, #1]!
    if ((p + i) > 256UL)
90008a7a:	eb06 0308 	add.w	r3, r6, r8
90008a7e:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
90008a82:	d837      	bhi.n	90008af4 <JPEG_Bits_To_SizeCodes+0x94>
      /* check for table overflow */
      return HAL_ERROR;
    }
    while (i != 0UL)
    {
      Huffsize[p] = (uint8_t) l + 1U;
90008a84:	eb05 0008 	add.w	r0, r5, r8
90008a88:	4632      	mov	r2, r6
90008a8a:	4639      	mov	r1, r7
    while (i != 0UL)
90008a8c:	b116      	cbz	r6, 90008a94 <JPEG_Bits_To_SizeCodes+0x34>
      p++;
90008a8e:	44b0      	add	r8, r6
      Huffsize[p] = (uint8_t) l + 1U;
90008a90:	f01d fd36 	bl	90026500 <memset>
  for (l = 0; l < 16UL; l++)
90008a94:	2f10      	cmp	r7, #16
    if ((p + i) > 256UL)
90008a96:	f107 0701 	add.w	r7, r7, #1
  for (l = 0; l < 16UL; l++)
90008a9a:	d1ec      	bne.n	90008a76 <JPEG_Bits_To_SizeCodes+0x16>
      i--;
    }
  }
  Huffsize[p] = 0;
90008a9c:	2300      	movs	r3, #0
90008a9e:	f805 3008 	strb.w	r3, [r5, r8]
  *LastK = p;
90008aa2:	f8ca 8000 	str.w	r8, [sl]

  /* Figure C.2: Generation of table of Huffman codes */
  code = 0;
  si = Huffsize[0];
90008aa6:	7828      	ldrb	r0, [r5, #0]
90008aa8:	4601      	mov	r1, r0
  p = 0;
  while (Huffsize[p] != 0U)
90008aaa:	b300      	cbz	r0, 90008aee <JPEG_Bits_To_SizeCodes+0x8e>
90008aac:	f06f 4840 	mvn.w	r8, #3221225472	; 0xc0000000
    /* code must fit in "size" bits (si), no code is allowed to be all ones*/
    if(si > 31UL)
    {
      return HAL_ERROR;
    }
    if (((uint32_t) code) >= (((uint32_t) 1) << si))
90008ab0:	2701      	movs	r7, #1
  p = 0;
90008ab2:	461a      	mov	r2, r3
    while (((uint32_t) Huffsize[p]) == si)
90008ab4:	4288      	cmp	r0, r1
90008ab6:	d10f      	bne.n	90008ad8 <JPEG_Bits_To_SizeCodes+0x78>
90008ab8:	eb02 0008 	add.w	r0, r2, r8
90008abc:	1c56      	adds	r6, r2, #1
90008abe:	eb05 0c02 	add.w	ip, r5, r2
90008ac2:	eb04 0080 	add.w	r0, r4, r0, lsl #2
90008ac6:	1af6      	subs	r6, r6, r3
      Huffcode[p] = code;
90008ac8:	f840 3f04 	str.w	r3, [r0, #4]!
      p++;
90008acc:	18f2      	adds	r2, r6, r3
    while (((uint32_t) Huffsize[p]) == si)
90008ace:	f81c ef01 	ldrb.w	lr, [ip, #1]!
      code++;
90008ad2:	3301      	adds	r3, #1
    while (((uint32_t) Huffsize[p]) == si)
90008ad4:	458e      	cmp	lr, r1
90008ad6:	d0f7      	beq.n	90008ac8 <JPEG_Bits_To_SizeCodes+0x68>
    if(si > 31UL)
90008ad8:	291f      	cmp	r1, #31
90008ada:	d80b      	bhi.n	90008af4 <JPEG_Bits_To_SizeCodes+0x94>
    if (((uint32_t) code) >= (((uint32_t) 1) << si))
90008adc:	fa07 f001 	lsl.w	r0, r7, r1
90008ae0:	4298      	cmp	r0, r3
90008ae2:	d907      	bls.n	90008af4 <JPEG_Bits_To_SizeCodes+0x94>
  while (Huffsize[p] != 0U)
90008ae4:	5ca8      	ldrb	r0, [r5, r2]
    {
      return HAL_ERROR;
    }
    code <<= 1;
90008ae6:	005b      	lsls	r3, r3, #1
    si++;
90008ae8:	3101      	adds	r1, #1
  while (Huffsize[p] != 0U)
90008aea:	2800      	cmp	r0, #0
90008aec:	d1e2      	bne.n	90008ab4 <JPEG_Bits_To_SizeCodes+0x54>
  }
  /* Return function status */
  return HAL_OK;
90008aee:	2000      	movs	r0, #0
}
90008af0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      return HAL_ERROR;
90008af4:	2001      	movs	r0, #1
}
90008af6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90008afa:	bf00      	nop

90008afc <JPEG_DCHuff_BitsVals_To_SizeCodes>:
  * @param  DC_SizeCodesTable pointer to DC huffman Sizes/Codes table
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_DCHuff_BitsVals_To_SizeCodes(JPEG_DCHuffTableTypeDef *DC_BitsValsTable,
                                                           JPEG_DC_HuffCodeTableTypeDef *DC_SizeCodesTable)
{
90008afc:	b5f0      	push	{r4, r5, r6, r7, lr}
90008afe:	f2ad 5d14 	subw	sp, sp, #1300	; 0x514
90008b02:	460d      	mov	r5, r1
90008b04:	4604      	mov	r4, r0
  uint32_t k;
  uint32_t l;
  uint32_t lastK;
  uint8_t huffsize[257];
  uint32_t huffcode[257];
  error = JPEG_Bits_To_SizeCodes(DC_BitsValsTable->Bits, huffsize, huffcode, &lastK);
90008b06:	ab01      	add	r3, sp, #4
90008b08:	aa43      	add	r2, sp, #268	; 0x10c
90008b0a:	a902      	add	r1, sp, #8
90008b0c:	f7ff ffa8 	bl	90008a60 <JPEG_Bits_To_SizeCodes>
  if (error != HAL_OK)
90008b10:	b9d0      	cbnz	r0, 90008b48 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4c>
    return  error;
  }
  /* Figure C.3: ordering procedure for encoding procedure code tables */
  k = 0;

  while (k < lastK)
90008b12:	9f01      	ldr	r7, [sp, #4]
90008b14:	b1c7      	cbz	r7, 90008b48 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4c>
90008b16:	370f      	adds	r7, #15
90008b18:	f50d 7e86 	add.w	lr, sp, #268	; 0x10c
90008b1c:	a902      	add	r1, sp, #8
90008b1e:	f104 0c0f 	add.w	ip, r4, #15
90008b22:	4427      	add	r7, r4
90008b24:	e009      	b.n	90008b3a <JPEG_DCHuff_BitsVals_To_SizeCodes+0x3e>
      return HAL_ERROR; /* Huffman Table overflow error*/
    }
    else
    {
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
      DC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
90008b26:	f811 2b01 	ldrb.w	r2, [r1], #1
  while (k < lastK)
90008b2a:	45bc      	cmp	ip, r7
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
90008b2c:	f85e 6b04 	ldr.w	r6, [lr], #4
      DC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
90008b30:	f102 32ff 	add.w	r2, r2, #4294967295
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
90008b34:	60e6      	str	r6, [r4, #12]
      DC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
90008b36:	54ea      	strb	r2, [r5, r3]
  while (k < lastK)
90008b38:	d006      	beq.n	90008b48 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4c>
    l = DC_BitsValsTable->HuffVal[k];
90008b3a:	f81c 3f01 	ldrb.w	r3, [ip, #1]!
    if (l >= JPEG_DC_HUFF_TABLE_SIZE)
90008b3e:	2b0b      	cmp	r3, #11
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
90008b40:	eb05 0483 	add.w	r4, r5, r3, lsl #2
    if (l >= JPEG_DC_HUFF_TABLE_SIZE)
90008b44:	d9ef      	bls.n	90008b26 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x2a>
      return HAL_ERROR; /* Huffman Table overflow error*/
90008b46:	2001      	movs	r0, #1
    }
  }

  /* Return function status */
  return HAL_OK;
}
90008b48:	f20d 5d14 	addw	sp, sp, #1300	; 0x514
90008b4c:	bdf0      	pop	{r4, r5, r6, r7, pc}
90008b4e:	bf00      	nop

90008b50 <JPEG_Set_HuffDC_Mem>:
  * @param  DCTableAddress Encoder DC huffman table address it could be HUFFENC_DC0 or HUFFENC_DC1.
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Set_HuffDC_Mem(JPEG_HandleTypeDef *hjpeg, JPEG_DCHuffTableTypeDef *HuffTableDC,
                                             const __IO uint32_t *DCTableAddress)
{
90008b50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  uint32_t i;
  uint32_t lsb;
  uint32_t msb;
  __IO uint32_t *address, *addressDef;

  if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC0))
90008b54:	6804      	ldr	r4, [r0, #0]
{
90008b56:	b093      	sub	sp, #76	; 0x4c
90008b58:	4608      	mov	r0, r1
  if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC0))
90008b5a:	f504 63f8 	add.w	r3, r4, #1984	; 0x7c0
90008b5e:	429a      	cmp	r2, r3
90008b60:	f000 809d 	beq.w	90008c9e <JPEG_Set_HuffDC_Mem+0x14e>
  {
    address = (hjpeg->Instance->HUFFENC_DC0 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
  }
  else if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC1))
90008b64:	f504 63fc 	add.w	r3, r4, #2016	; 0x7e0
90008b68:	429a      	cmp	r2, r3
90008b6a:	d003      	beq.n	90008b74 <JPEG_Set_HuffDC_Mem+0x24>
  {
    address = (hjpeg->Instance->HUFFENC_DC1 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
  }
  else
  {
    return HAL_ERROR;
90008b6c:	2001      	movs	r0, #1
    }
  }

  /* Return function status */
  return HAL_OK;
}
90008b6e:	b013      	add	sp, #76	; 0x4c
90008b70:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    address = (hjpeg->Instance->HUFFENC_DC1 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
90008b74:	f504 64ff 	add.w	r4, r4, #2040	; 0x7f8
    error = JPEG_DCHuff_BitsVals_To_SizeCodes(HuffTableDC, &dcSizeCodesTable);
90008b78:	a903      	add	r1, sp, #12
90008b7a:	f7ff ffbf 	bl	90008afc <JPEG_DCHuff_BitsVals_To_SizeCodes>
    if (error != HAL_OK)
90008b7e:	2800      	cmp	r0, #0
90008b80:	d1f5      	bne.n	90008b6e <JPEG_Set_HuffDC_Mem+0x1e>
    *addressDef = 0x0FFF0FFF;
90008b82:	f06f 23f0 	mvn.w	r3, #4026593280	; 0xf000f000
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008b86:	f89d a017 	ldrb.w	sl, [sp, #23]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008b8a:	f89d e016 	ldrb.w	lr, [sp, #22]
    *addressDef = 0x0FFF0FFF;
90008b8e:	6023      	str	r3, [r4, #0]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008b90:	ea4f 2a0a 	mov.w	sl, sl, lsl #8
    *addressDef = 0x0FFF0FFF;
90008b94:	6063      	str	r3, [r4, #4]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008b96:	ea4f 2e0e 	mov.w	lr, lr, lsl #8
90008b9a:	f89d 300e 	ldrb.w	r3, [sp, #14]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008b9e:	f40a 6a70 	and.w	sl, sl, #3840	; 0xf00
90008ba2:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008ba6:	f40e 6e70 	and.w	lr, lr, #3840	; 0xf00
90008baa:	021b      	lsls	r3, r3, #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008bac:	f89d 9015 	ldrb.w	r9, [sp, #21]
90008bb0:	ea4a 0a02 	orr.w	sl, sl, r2
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008bb4:	f89d c014 	ldrb.w	ip, [sp, #20]
90008bb8:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008bbc:	ea4f 2909 	mov.w	r9, r9, lsl #8
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008bc0:	ea4f 2c0c 	mov.w	ip, ip, lsl #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008bc4:	f89d 8013 	ldrb.w	r8, [sp, #19]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008bc8:	9301      	str	r3, [sp, #4]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008bca:	f409 6970 	and.w	r9, r9, #3840	; 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008bce:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
90008bd2:	f40c 6c70 	and.w	ip, ip, #3840	; 0xf00
90008bd6:	f89d 1012 	ldrb.w	r1, [sp, #18]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008bda:	ea4f 2808 	mov.w	r8, r8, lsl #8
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008bde:	ea4e 0e03 	orr.w	lr, lr, r3
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008be2:	f89d 7011 	ldrb.w	r7, [sp, #17]
90008be6:	f408 6870 	and.w	r8, r8, #3840	; 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008bea:	0209      	lsls	r1, r1, #8
      *address = lsb | (msb << 16);
90008bec:	ea4e 4e0a 	orr.w	lr, lr, sl, lsl #16
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008bf0:	f89d 2010 	ldrb.w	r2, [sp, #16]
90008bf4:	f401 6170 	and.w	r1, r1, #3840	; 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008bf8:	023f      	lsls	r7, r7, #8
      *address = lsb | (msb << 16);
90008bfa:	f844 ec04 	str.w	lr, [r4, #-4]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008bfe:	0212      	lsls	r2, r2, #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008c00:	f89d e03c 	ldrb.w	lr, [sp, #60]	; 0x3c
90008c04:	f407 6770 	and.w	r7, r7, #3840	; 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008c08:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008c0c:	f89d 600f 	ldrb.w	r6, [sp, #15]
90008c10:	ea49 090e 	orr.w	r9, r9, lr
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008c14:	f89d e038 	ldrb.w	lr, [sp, #56]	; 0x38
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008c18:	0236      	lsls	r6, r6, #8
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008c1a:	9b01      	ldr	r3, [sp, #4]
90008c1c:	ea4c 0c0e 	orr.w	ip, ip, lr
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008c20:	f89d 500d 	ldrb.w	r5, [sp, #13]
90008c24:	f406 6670 	and.w	r6, r6, #3840	; 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008c28:	f89d b00c 	ldrb.w	fp, [sp, #12]
      *address = lsb | (msb << 16);
90008c2c:	ea4c 4c09 	orr.w	ip, ip, r9, lsl #16
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008c30:	022d      	lsls	r5, r5, #8
      *address = lsb | (msb << 16);
90008c32:	f844 cc08 	str.w	ip, [r4, #-8]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008c36:	ea4f 2b0b 	mov.w	fp, fp, lsl #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008c3a:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
90008c3e:	f405 6570 	and.w	r5, r5, #3840	; 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008c42:	f40b 6b70 	and.w	fp, fp, #3840	; 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008c46:	ea48 080c 	orr.w	r8, r8, ip
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008c4a:	f89d c030 	ldrb.w	ip, [sp, #48]	; 0x30
90008c4e:	ea41 010c 	orr.w	r1, r1, ip
      *address = lsb | (msb << 16);
90008c52:	ea41 4108 	orr.w	r1, r1, r8, lsl #16
90008c56:	f844 1c0c 	str.w	r1, [r4, #-12]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008c5a:	f89d 102c 	ldrb.w	r1, [sp, #44]	; 0x2c
90008c5e:	430f      	orrs	r7, r1
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008c60:	f89d 1028 	ldrb.w	r1, [sp, #40]	; 0x28
90008c64:	430a      	orrs	r2, r1
      *address = lsb | (msb << 16);
90008c66:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
90008c6a:	f844 2c10 	str.w	r2, [r4, #-16]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008c6e:	f89d 2024 	ldrb.w	r2, [sp, #36]	; 0x24
90008c72:	4316      	orrs	r6, r2
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008c74:	f89d 2020 	ldrb.w	r2, [sp, #32]
90008c78:	4313      	orrs	r3, r2
      *address = lsb | (msb << 16);
90008c7a:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
90008c7e:	f844 3c14 	str.w	r3, [r4, #-20]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008c82:	f89d 301c 	ldrb.w	r3, [sp, #28]
90008c86:	431d      	orrs	r5, r3
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008c88:	f89d 3018 	ldrb.w	r3, [sp, #24]
90008c8c:	ea4b 0303 	orr.w	r3, fp, r3
      *address = lsb | (msb << 16);
90008c90:	ea43 4305 	orr.w	r3, r3, r5, lsl #16
90008c94:	f844 3c18 	str.w	r3, [r4, #-24]
}
90008c98:	b013      	add	sp, #76	; 0x4c
90008c9a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    address = (hjpeg->Instance->HUFFENC_DC0 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
90008c9e:	f504 64fb 	add.w	r4, r4, #2008	; 0x7d8
90008ca2:	e769      	b.n	90008b78 <JPEG_Set_HuffDC_Mem+0x28>

90008ca4 <JPEG_Set_HuffAC_Mem>:
  * @param  ACTableAddress Encoder AC huffman table address it could be HUFFENC_AC0 or HUFFENC_AC1.
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Set_HuffAC_Mem(JPEG_HandleTypeDef *hjpeg, JPEG_ACHuffTableTypeDef *HuffTableAC,
                                             const __IO uint32_t *ACTableAddress)
{
90008ca4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_StatusTypeDef error;
  JPEG_AC_HuffCodeTableTypeDef acSizeCodesTable;
  uint32_t i, lsb, msb;
  __IO uint32_t *address, *addressDef;

  if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC0))
90008ca8:	6804      	ldr	r4, [r0, #0]
{
90008caa:	f6ad 0d3c 	subw	sp, sp, #2108	; 0x83c
90008cae:	460d      	mov	r5, r1
  if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC0))
90008cb0:	f504 63a0 	add.w	r3, r4, #1280	; 0x500
90008cb4:	429a      	cmp	r2, r3
90008cb6:	d042      	beq.n	90008d3e <JPEG_Set_HuffAC_Mem+0x9a>
  {
    address = (hjpeg->Instance->HUFFENC_AC0 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
  }
  else if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC1))
90008cb8:	f504 63cc 	add.w	r3, r4, #1632	; 0x660
90008cbc:	429a      	cmp	r2, r3
90008cbe:	d004      	beq.n	90008cca <JPEG_Set_HuffAC_Mem+0x26>
      return HAL_ERROR; /* Huffman Table overflow error*/
90008cc0:	2001      	movs	r0, #1
    }
  }

  /* Return function status */
  return HAL_OK;
}
90008cc2:	f60d 0d3c 	addw	sp, sp, #2108	; 0x83c
90008cc6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    address = (hjpeg->Instance->HUFFENC_AC1 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
90008cca:	f204 74a4 	addw	r4, r4, #1956	; 0x7a4
  error = JPEG_Bits_To_SizeCodes(AC_BitsValsTable->Bits, huffsize, huffcode, &lastK);
90008cce:	4628      	mov	r0, r5
90008cd0:	466b      	mov	r3, sp
90008cd2:	f20d 4234 	addw	r2, sp, #1076	; 0x434
90008cd6:	a901      	add	r1, sp, #4
90008cd8:	f7ff fec2 	bl	90008a60 <JPEG_Bits_To_SizeCodes>
  if (error != HAL_OK)
90008cdc:	2800      	cmp	r0, #0
90008cde:	d1f0      	bne.n	90008cc2 <JPEG_Set_HuffAC_Mem+0x1e>
  while (k < lastK)
90008ce0:	9b00      	ldr	r3, [sp, #0]
90008ce2:	b37b      	cbz	r3, 90008d44 <JPEG_Set_HuffAC_Mem+0xa0>
90008ce4:	330f      	adds	r3, #15
90008ce6:	f20d 4734 	addw	r7, sp, #1076	; 0x434
90008cea:	f10d 0c04 	add.w	ip, sp, #4
90008cee:	f105 020f 	add.w	r2, r5, #15
90008cf2:	eb05 0e03 	add.w	lr, r5, r3
      AC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
90008cf6:	ae42      	add	r6, sp, #264	; 0x108
90008cf8:	e011      	b.n	90008d1e <JPEG_Set_HuffAC_Mem+0x7a>
      l = (msb * 10UL) + lsb - 1UL;
90008cfa:	eb03 0345 	add.w	r3, r3, r5, lsl #1
    if (l >= JPEG_AC_HUFF_TABLE_SIZE)
90008cfe:	2ba1      	cmp	r3, #161	; 0xa1
90008d00:	d8de      	bhi.n	90008cc0 <JPEG_Set_HuffAC_Mem+0x1c>
      AC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
90008d02:	f81c 5b01 	ldrb.w	r5, [ip], #1
      AC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
90008d06:	eb06 0883 	add.w	r8, r6, r3, lsl #2
90008d0a:	f857 9b04 	ldr.w	r9, [r7], #4
  while (k < lastK)
90008d0e:	4596      	cmp	lr, r2
      AC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
90008d10:	f105 35ff 	add.w	r5, r5, #4294967295
      AC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
90008d14:	4631      	mov	r1, r6
90008d16:	f8c8 90a4 	str.w	r9, [r8, #164]	; 0xa4
      AC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
90008d1a:	54f5      	strb	r5, [r6, r3]
  while (k < lastK)
90008d1c:	d013      	beq.n	90008d46 <JPEG_Set_HuffAC_Mem+0xa2>
    l = AC_BitsValsTable->HuffVal[k];
90008d1e:	f812 1f01 	ldrb.w	r1, [r2, #1]!
      l = 160; /*l = 0x00 EOB code*/
90008d22:	23a0      	movs	r3, #160	; 0xa0
    if (l == 0UL)
90008d24:	2900      	cmp	r1, #0
90008d26:	d0ec      	beq.n	90008d02 <JPEG_Set_HuffAC_Mem+0x5e>
      msb = (l & 0xF0UL) >> 4;
90008d28:	090d      	lsrs	r5, r1, #4
      lsb = (l & 0x0FUL);
90008d2a:	f001 030f 	and.w	r3, r1, #15
    else if (l == 0xF0UL) /* l = 0xF0 ZRL code*/
90008d2e:	29f0      	cmp	r1, #240	; 0xf0
      l = (msb * 10UL) + lsb - 1UL;
90008d30:	eb05 0585 	add.w	r5, r5, r5, lsl #2
90008d34:	f103 33ff 	add.w	r3, r3, #4294967295
    else if (l == 0xF0UL) /* l = 0xF0 ZRL code*/
90008d38:	d1df      	bne.n	90008cfa <JPEG_Set_HuffAC_Mem+0x56>
      l = 161;
90008d3a:	23a1      	movs	r3, #161	; 0xa1
90008d3c:	e7e1      	b.n	90008d02 <JPEG_Set_HuffAC_Mem+0x5e>
    address = (hjpeg->Instance->HUFFENC_AC0 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
90008d3e:	f204 6444 	addw	r4, r4, #1604	; 0x644
90008d42:	e7c4      	b.n	90008cce <JPEG_Set_HuffAC_Mem+0x2a>
90008d44:	a942      	add	r1, sp, #264	; 0x108
      *addressDef = 0x0FFF0FFF;
90008d46:	f06f 23f0 	mvn.w	r3, #4026593280	; 0xf000f000
    *addressDef = 0x0FD10FD0;
90008d4a:	4a1a      	ldr	r2, [pc, #104]	; (90008db4 <JPEG_Set_HuffAC_Mem+0x110>)
90008d4c:	eba1 0c81 	sub.w	ip, r1, r1, lsl #2
90008d50:	f10d 0566 	add.w	r5, sp, #102	; 0x66
      *addressDef = 0x0FFF0FFF;
90008d54:	6023      	str	r3, [r4, #0]
90008d56:	6063      	str	r3, [r4, #4]
90008d58:	f50c 7e4a 	add.w	lr, ip, #808	; 0x328
90008d5c:	60a3      	str	r3, [r4, #8]
    *addressDef = 0x0FD30FD2;
90008d5e:	f103 33d3 	add.w	r3, r3, #3553874899	; 0xd3d3d3d3
    *addressDef = 0x0FD10FD0;
90008d62:	60e2      	str	r2, [r4, #12]
    *addressDef = 0x0FD30FD2;
90008d64:	f50c 7c49 	add.w	ip, ip, #804	; 0x324
90008d68:	f103 232c 	add.w	r3, r3, #738208768	; 0x2c002c00
90008d6c:	6123      	str	r3, [r4, #16]
    *addressDef = 0x0FD50FD4;
90008d6e:	f103 1302 	add.w	r3, r3, #131074	; 0x20002
90008d72:	6163      	str	r3, [r4, #20]
    *addressDef = 0x0FD70FD6;
90008d74:	f103 1302 	add.w	r3, r3, #131074	; 0x20002
90008d78:	61a3      	str	r3, [r4, #24]
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
90008d7a:	f891 20a1 	ldrb.w	r2, [r1, #161]	; 0xa1
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
90008d7e:	f891 30a0 	ldrb.w	r3, [r1, #160]	; 0xa0
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
90008d82:	0212      	lsls	r2, r2, #8
90008d84:	f81e 7021 	ldrb.w	r7, [lr, r1, lsl #2]
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
90008d88:	021b      	lsls	r3, r3, #8
90008d8a:	f81c 6021 	ldrb.w	r6, [ip, r1, lsl #2]
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
90008d8e:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
    while (i > 1UL)
90008d92:	3902      	subs	r1, #2
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
90008d94:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
90008d98:	433a      	orrs	r2, r7
    while (i > 1UL)
90008d9a:	428d      	cmp	r5, r1
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
90008d9c:	ea43 0306 	orr.w	r3, r3, r6
      *address = lsb | (msb << 16);
90008da0:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
90008da4:	f844 3d04 	str.w	r3, [r4, #-4]!
    while (i > 1UL)
90008da8:	d1e7      	bne.n	90008d7a <JPEG_Set_HuffAC_Mem+0xd6>
}
90008daa:	f60d 0d3c 	addw	sp, sp, #2108	; 0x83c
90008dae:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90008db2:	bf00      	nop
90008db4:	0fd10fd0 	.word	0x0fd10fd0

90008db8 <JPEG_Init_Process>:
  * @retval None
  */
static void JPEG_Init_Process(JPEG_HandleTypeDef *hjpeg)
{
  /*Reset pause*/
  hjpeg->Context &= (~(JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT));
90008db8:	6d43      	ldr	r3, [r0, #84]	; 0x54
90008dba:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
90008dbe:	6543      	str	r3, [r0, #84]	; 0x54

  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90008dc0:	6d43      	ldr	r3, [r0, #84]	; 0x54
90008dc2:	f003 0303 	and.w	r3, r3, #3
90008dc6:	2b02      	cmp	r3, #2
  {
    /*Set JPEG Codec to Decoding mode */
    hjpeg->Instance->CONFR1 |= JPEG_CONFR1_DE;
90008dc8:	6803      	ldr	r3, [r0, #0]
90008dca:	685a      	ldr	r2, [r3, #4]
90008dcc:	bf0c      	ite	eq
90008dce:	f042 0208 	orreq.w	r2, r2, #8
  }
  else /* JPEG_CONTEXT_ENCODE */
  {
    /*Set JPEG Codec to Encoding mode */
    hjpeg->Instance->CONFR1 &= ~JPEG_CONFR1_DE;
90008dd2:	f022 0208 	bicne.w	r2, r2, #8
90008dd6:	605a      	str	r2, [r3, #4]
  }

  /*Stop JPEG processing */
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90008dd8:	681a      	ldr	r2, [r3, #0]
90008dda:	f022 0201 	bic.w	r2, r2, #1
90008dde:	601a      	str	r2, [r3, #0]

  /* Disable All Interrupts */
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
90008de0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
90008de2:	f022 027e 	bic.w	r2, r2, #126	; 0x7e
90008de6:	631a      	str	r2, [r3, #48]	; 0x30

  /* Flush input and output FIFOs*/
  hjpeg->Instance->CR |= JPEG_CR_IFF;
90008de8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
90008dea:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
90008dee:	631a      	str	r2, [r3, #48]	; 0x30
  hjpeg->Instance->CR |= JPEG_CR_OFF;
90008df0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
90008df2:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
90008df6:	631a      	str	r2, [r3, #48]	; 0x30

  /* Clear all flags */
  __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
90008df8:	6b9a      	ldr	r2, [r3, #56]	; 0x38
90008dfa:	f042 0260 	orr.w	r2, r2, #96	; 0x60
90008dfe:	639a      	str	r2, [r3, #56]	; 0x38

  /*Start Encoding/Decoding*/
  hjpeg->Instance->CONFR0 |=  JPEG_CONFR0_START;
90008e00:	681a      	ldr	r2, [r3, #0]
90008e02:	f042 0201 	orr.w	r2, r2, #1
90008e06:	601a      	str	r2, [r3, #0]

  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
90008e08:	6d42      	ldr	r2, [r0, #84]	; 0x54
90008e0a:	f002 020c 	and.w	r2, r2, #12
90008e0e:	2a08      	cmp	r2, #8
90008e10:	d00a      	beq.n	90008e28 <JPEG_Init_Process+0x70>
  {
    /*Enable IN/OUT, end of Conversation, and end of header parsing interruptions*/
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_IFT | JPEG_IT_IFNF | JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC | JPEG_IT_HPD);
  }
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
90008e12:	6d42      	ldr	r2, [r0, #84]	; 0x54
90008e14:	f002 020c 	and.w	r2, r2, #12
90008e18:	2a0c      	cmp	r2, #12
90008e1a:	d000      	beq.n	90008e1e <JPEG_Init_Process+0x66>
  }
  else
  {
    /* Nothing to do */
  }
}
90008e1c:	4770      	bx	lr
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
90008e1e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
90008e20:	f042 0260 	orr.w	r2, r2, #96	; 0x60
90008e24:	631a      	str	r2, [r3, #48]	; 0x30
}
90008e26:	4770      	bx	lr
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_IFT | JPEG_IT_IFNF | JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC | JPEG_IT_HPD);
90008e28:	6b1a      	ldr	r2, [r3, #48]	; 0x30
90008e2a:	f042 026e 	orr.w	r2, r2, #110	; 0x6e
90008e2e:	631a      	str	r2, [r3, #48]	; 0x30
90008e30:	4770      	bx	lr
90008e32:	bf00      	nop

90008e34 <JPEG_DMA_StartProcess>:
  /*if the MDMA In is triggred with JPEG In FIFO Threshold flag
      then MDMA In buffer size is 32 bytes
    else (MDMA In is triggred with JPEG In FIFO not full flag)
      then MDMA In buffer size is 4 bytes
    */
  inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
90008e34:	6b01      	ldr	r1, [r0, #48]	; 0x30
    else (MDMA Out is triggred with JPEG Out FIFO not empty flag)
      then MDMA buffer size is 4 bytes
    */
  outXfrSize = hjpeg->hdmaout->Init.BufferTransferLength;

  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
90008e36:	6a82      	ldr	r2, [r0, #40]	; 0x28
{
90008e38:	b5f0      	push	{r4, r5, r6, r7, lr}
  inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
90008e3a:	6a8d      	ldr	r5, [r1, #40]	; 0x28
{
90008e3c:	b083      	sub	sp, #12
  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
90008e3e:	42aa      	cmp	r2, r5
90008e40:	d32d      	bcc.n	90008e9e <JPEG_DMA_StartProcess+0x6a>
90008e42:	4604      	mov	r4, r0
  outXfrSize = hjpeg->hdmaout->Init.BufferTransferLength;
90008e44:	6b40      	ldr	r0, [r0, #52]	; 0x34
  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
90008e46:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
  outXfrSize = hjpeg->hdmaout->Init.BufferTransferLength;
90008e48:	6a86      	ldr	r6, [r0, #40]	; 0x28
  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
90008e4a:	42b3      	cmp	r3, r6
90008e4c:	d327      	bcc.n	90008e9e <JPEG_DMA_StartProcess+0x6a>
    return HAL_ERROR;
  }
  /* Set the JPEG MDMA In transfer complete callback */
  hjpeg->hdmain->XferCpltCallback = JPEG_MDMAInCpltCallback;
  /* Set the MDMA In error callback */
  hjpeg->hdmain->XferErrorCallback = JPEG_MDMAErrorCallback;
90008e4e:	4f1b      	ldr	r7, [pc, #108]	; (90008ebc <JPEG_DMA_StartProcess+0x88>)
  hjpeg->hdmain->XferCpltCallback = JPEG_MDMAInCpltCallback;
90008e50:	f8df c074 	ldr.w	ip, [pc, #116]	; 90008ec8 <JPEG_DMA_StartProcess+0x94>
  hjpeg->hdmain->XferErrorCallback = JPEG_MDMAErrorCallback;
90008e54:	654f      	str	r7, [r1, #84]	; 0x54
  hjpeg->hdmain->XferCpltCallback = JPEG_MDMAInCpltCallback;
90008e56:	f8c1 c044 	str.w	ip, [r1, #68]	; 0x44

  /* Set the JPEG MDMA Out transfer complete callback */
  hjpeg->hdmaout->XferCpltCallback = JPEG_MDMAOutCpltCallback;
90008e5a:	4919      	ldr	r1, [pc, #100]	; (90008ec0 <JPEG_DMA_StartProcess+0x8c>)
  /* Set the MDMA In error callback */
  hjpeg->hdmaout->XferErrorCallback = JPEG_MDMAErrorCallback;
90008e5c:	6547      	str	r7, [r0, #84]	; 0x54
  hjpeg->hdmaout->XferCpltCallback = JPEG_MDMAOutCpltCallback;
90008e5e:	6441      	str	r1, [r0, #68]	; 0x44
  /* Set the MDMA Out Abort callback */
  hjpeg->hdmaout->XferAbortCallback = JPEG_MDMAOutAbortCallback;
90008e60:	4918      	ldr	r1, [pc, #96]	; (90008ec4 <JPEG_DMA_StartProcess+0x90>)
90008e62:	6581      	str	r1, [r0, #88]	; 0x58

  if ((inXfrSize == 0UL) || (outXfrSize == 0UL))
90008e64:	b1a5      	cbz	r5, 90008e90 <JPEG_DMA_StartProcess+0x5c>
90008e66:	b19e      	cbz	r6, 90008e90 <JPEG_DMA_StartProcess+0x5c>
  {
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
    return HAL_ERROR;
  }
  /*MDMA transfer size (BNDTR) must be a multiple of MDMA buffer size (TLEN)*/
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
90008e68:	fbb2 f1f5 	udiv	r1, r2, r5
90008e6c:	fb05 2111 	mls	r1, r5, r1, r2
  /*MDMA transfer size (BNDTR) must be a multiple of MDMA buffer size (TLEN)*/
  hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % outXfrSize);


  /* Start MDMA FIFO Out transfer */
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
90008e70:	2501      	movs	r5, #1
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
90008e72:	1a52      	subs	r2, r2, r1
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
90008e74:	6821      	ldr	r1, [r4, #0]
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
90008e76:	62a2      	str	r2, [r4, #40]	; 0x28
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
90008e78:	3144      	adds	r1, #68	; 0x44
  hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % outXfrSize);
90008e7a:	fbb3 f2f6 	udiv	r2, r3, r6
90008e7e:	fb06 3212 	mls	r2, r6, r2, r3
90008e82:	1a9b      	subs	r3, r3, r2
90008e84:	62e3      	str	r3, [r4, #44]	; 0x2c
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
90008e86:	9500      	str	r5, [sp, #0]
90008e88:	69e2      	ldr	r2, [r4, #28]
90008e8a:	f001 fbb5 	bl	9000a5f8 <HAL_MDMA_Start_IT>
90008e8e:	b148      	cbz	r0, 90008ea4 <JPEG_DMA_StartProcess+0x70>
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
90008e90:	6d23      	ldr	r3, [r4, #80]	; 0x50
    return HAL_ERROR;
90008e92:	2001      	movs	r0, #1
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
90008e94:	f043 0304 	orr.w	r3, r3, #4
90008e98:	6523      	str	r3, [r4, #80]	; 0x50
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
    return HAL_ERROR;
  }

  return HAL_OK;
}
90008e9a:	b003      	add	sp, #12
90008e9c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    return HAL_ERROR;
90008e9e:	2001      	movs	r0, #1
}
90008ea0:	b003      	add	sp, #12
90008ea2:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (HAL_MDMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
90008ea4:	6822      	ldr	r2, [r4, #0]
90008ea6:	6aa3      	ldr	r3, [r4, #40]	; 0x28
90008ea8:	69a1      	ldr	r1, [r4, #24]
90008eaa:	3240      	adds	r2, #64	; 0x40
90008eac:	9500      	str	r5, [sp, #0]
90008eae:	6b20      	ldr	r0, [r4, #48]	; 0x30
90008eb0:	f001 fba2 	bl	9000a5f8 <HAL_MDMA_Start_IT>
90008eb4:	2800      	cmp	r0, #0
90008eb6:	d0f3      	beq.n	90008ea0 <JPEG_DMA_StartProcess+0x6c>
90008eb8:	e7ea      	b.n	90008e90 <JPEG_DMA_StartProcess+0x5c>
90008eba:	bf00      	nop
90008ebc:	900093ed 	.word	0x900093ed
90008ec0:	90009665 	.word	0x90009665
90008ec4:	900096e5 	.word	0x900096e5
90008ec8:	90009419 	.word	0x90009419

90008ecc <HAL_JPEG_GetInfo.part.0>:
  if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF_1)
90008ecc:	6803      	ldr	r3, [r0, #0]
90008ece:	685a      	ldr	r2, [r3, #4]
90008ed0:	f002 0203 	and.w	r2, r2, #3
90008ed4:	2a02      	cmp	r2, #2
HAL_StatusTypeDef HAL_JPEG_GetInfo(JPEG_HandleTypeDef *hjpeg, JPEG_ConfTypeDef *pInfo)
90008ed6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90008eda:	4689      	mov	r9, r1
  if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF_1)
90008edc:	f000 8094 	beq.w	90009008 <HAL_JPEG_GetInfo.part.0+0x13c>
  else if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == 0UL)
90008ee0:	685c      	ldr	r4, [r3, #4]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
90008ee2:	685a      	ldr	r2, [r3, #4]
  else if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == 0UL)
90008ee4:	f014 0403 	ands.w	r4, r4, #3
90008ee8:	d172      	bne.n	90008fd0 <HAL_JPEG_GetInfo.part.0+0x104>
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
90008eea:	0c12      	lsrs	r2, r2, #16
    pInfo->ColorSpace = JPEG_YCBCR_COLORSPACE;
90008eec:	600c      	str	r4, [r1, #0]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
90008eee:	608a      	str	r2, [r1, #8]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
90008ef0:	68da      	ldr	r2, [r3, #12]
90008ef2:	0c12      	lsrs	r2, r2, #16
90008ef4:	60ca      	str	r2, [r1, #12]
  if ((pInfo->ColorSpace == JPEG_YCBCR_COLORSPACE) || (pInfo->ColorSpace == JPEG_CMYK_COLORSPACE))
90008ef6:	4a5f      	ldr	r2, [pc, #380]	; (90009074 <HAL_JPEG_GetInfo.part.0+0x1a8>)
  */
static uint32_t JPEG_GetQuality(JPEG_HandleTypeDef *hjpeg)
{
  uint32_t quality = 0;
  uint32_t quantRow, quantVal, scale, i, j;
  __IO uint32_t *tableAddress = hjpeg->Instance->QMEM0;
90008ef8:	f103 0c50 	add.w	ip, r3, #80	; 0x50
      pInfo->ChromaSubsampling = JPEG_422_SUBSAMPLING; /*16x8 block*/
90008efc:	f8c9 4004 	str.w	r4, [r9, #4]
  uint32_t quality = 0;
90008f00:	2600      	movs	r6, #0
90008f02:	f102 0540 	add.w	r5, r2, #64	; 0x40
        quality += 100UL;
      }
      else
      {
        /* Note that the quantization coefficients must be specified in the table in zigzag order */
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
90008f06:	f04f 0e64 	mov.w	lr, #100	; 0x64
        {
          quality += (200UL - scale) / 2UL;
        }
        else
        {
          quality += 5000UL / scale;
90008f0a:	f241 3488 	movw	r4, #5000	; 0x1388
90008f0e:	e033      	b.n	90008f78 <HAL_JPEG_GetInfo.part.0+0xac>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
90008f10:	f892 8001 	ldrb.w	r8, [r2, #1]
90008f14:	fb0e f707 	mul.w	r7, lr, r7
90008f18:	6bc1      	ldr	r1, [r0, #60]	; 0x3c
90008f1a:	f811 8008 	ldrb.w	r8, [r1, r8]
90008f1e:	fbb7 f7f8 	udiv	r7, r7, r8
        if (scale <= 100UL)
90008f22:	2f64      	cmp	r7, #100	; 0x64
90008f24:	d961      	bls.n	90008fea <HAL_JPEG_GetInfo.part.0+0x11e>
          quality += 5000UL / scale;
90008f26:	fbb4 f7f7 	udiv	r7, r4, r7
90008f2a:	443e      	add	r6, r7
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
90008f2c:	f3c3 4707 	ubfx	r7, r3, #16, #8
      if (quantVal == 1UL)
90008f30:	2f01      	cmp	r7, #1
90008f32:	d03d      	beq.n	90008fb0 <HAL_JPEG_GetInfo.part.0+0xe4>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
90008f34:	f892 8002 	ldrb.w	r8, [r2, #2]
90008f38:	fb0e f707 	mul.w	r7, lr, r7
90008f3c:	6bc1      	ldr	r1, [r0, #60]	; 0x3c
90008f3e:	f811 8008 	ldrb.w	r8, [r1, r8]
90008f42:	fbb7 f7f8 	udiv	r7, r7, r8
        if (scale <= 100UL)
90008f46:	2f64      	cmp	r7, #100	; 0x64
90008f48:	d94a      	bls.n	90008fe0 <HAL_JPEG_GetInfo.part.0+0x114>
          quality += 5000UL / scale;
90008f4a:	fbb4 f7f7 	udiv	r7, r4, r7
90008f4e:	443e      	add	r6, r7
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
90008f50:	0e1b      	lsrs	r3, r3, #24
      if (quantVal == 1UL)
90008f52:	2b01      	cmp	r3, #1
90008f54:	d030      	beq.n	90008fb8 <HAL_JPEG_GetInfo.part.0+0xec>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
90008f56:	78d7      	ldrb	r7, [r2, #3]
90008f58:	fb0e f303 	mul.w	r3, lr, r3
90008f5c:	6bc1      	ldr	r1, [r0, #60]	; 0x3c
90008f5e:	5dcf      	ldrb	r7, [r1, r7]
90008f60:	fbb3 f3f7 	udiv	r3, r3, r7
        if (scale <= 100UL)
90008f64:	2b64      	cmp	r3, #100	; 0x64
90008f66:	d94a      	bls.n	90008ffe <HAL_JPEG_GetInfo.part.0+0x132>
          quality += 5000UL / scale;
90008f68:	fbb4 f3f3 	udiv	r3, r4, r3
90008f6c:	441e      	add	r6, r3
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
90008f6e:	3204      	adds	r2, #4
        }
      }
    }

    i += 4UL;
    tableAddress ++;
90008f70:	f10c 0c04 	add.w	ip, ip, #4
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
90008f74:	4295      	cmp	r5, r2
90008f76:	d025      	beq.n	90008fc4 <HAL_JPEG_GetInfo.part.0+0xf8>
    quantRow = *tableAddress;
90008f78:	f8dc 3000 	ldr.w	r3, [ip]
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
90008f7c:	b2df      	uxtb	r7, r3
      if (quantVal == 1UL)
90008f7e:	2f01      	cmp	r7, #1
90008f80:	d02c      	beq.n	90008fdc <HAL_JPEG_GetInfo.part.0+0x110>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
90008f82:	f892 8000 	ldrb.w	r8, [r2]
90008f86:	fb0e f707 	mul.w	r7, lr, r7
90008f8a:	6bc1      	ldr	r1, [r0, #60]	; 0x3c
90008f8c:	f811 8008 	ldrb.w	r8, [r1, r8]
90008f90:	fbb7 f7f8 	udiv	r7, r7, r8
        if (scale <= 100UL)
90008f94:	2f64      	cmp	r7, #100	; 0x64
90008f96:	d92d      	bls.n	90008ff4 <HAL_JPEG_GetInfo.part.0+0x128>
          quality += 5000UL / scale;
90008f98:	fbb4 f7f7 	udiv	r7, r4, r7
90008f9c:	443e      	add	r6, r7
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
90008f9e:	f3c3 2707 	ubfx	r7, r3, #8, #8
      if (quantVal == 1UL)
90008fa2:	2f01      	cmp	r7, #1
90008fa4:	d1b4      	bne.n	90008f10 <HAL_JPEG_GetInfo.part.0+0x44>
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
90008fa6:	f3c3 4707 	ubfx	r7, r3, #16, #8
        quality += 100UL;
90008faa:	3664      	adds	r6, #100	; 0x64
      if (quantVal == 1UL)
90008fac:	2f01      	cmp	r7, #1
90008fae:	d1c1      	bne.n	90008f34 <HAL_JPEG_GetInfo.part.0+0x68>
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
90008fb0:	0e1b      	lsrs	r3, r3, #24
        quality += 100UL;
90008fb2:	3664      	adds	r6, #100	; 0x64
      if (quantVal == 1UL)
90008fb4:	2b01      	cmp	r3, #1
90008fb6:	d1ce      	bne.n	90008f56 <HAL_JPEG_GetInfo.part.0+0x8a>
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
90008fb8:	3204      	adds	r2, #4
        quality += 100UL;
90008fba:	3664      	adds	r6, #100	; 0x64
    tableAddress ++;
90008fbc:	f10c 0c04 	add.w	ip, ip, #4
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
90008fc0:	4295      	cmp	r5, r2
90008fc2:	d1d9      	bne.n	90008f78 <HAL_JPEG_GetInfo.part.0+0xac>
  }

  return (quality / 64UL);
90008fc4:	09b6      	lsrs	r6, r6, #6
  return HAL_OK;
90008fc6:	2000      	movs	r0, #0
  pInfo->ImageQuality = JPEG_GetQuality(hjpeg);
90008fc8:	f8c9 6010 	str.w	r6, [r9, #16]
}
90008fcc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  else if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF)
90008fd0:	f002 0203 	and.w	r2, r2, #3
90008fd4:	2a03      	cmp	r2, #3
90008fd6:	d14a      	bne.n	9000906e <HAL_JPEG_GetInfo.part.0+0x1a2>
90008fd8:	2430      	movs	r4, #48	; 0x30
90008fda:	e016      	b.n	9000900a <HAL_JPEG_GetInfo.part.0+0x13e>
        quality += 100UL;
90008fdc:	3664      	adds	r6, #100	; 0x64
90008fde:	e7de      	b.n	90008f9e <HAL_JPEG_GetInfo.part.0+0xd2>
          quality += (200UL - scale) / 2UL;
90008fe0:	f1c7 07c8 	rsb	r7, r7, #200	; 0xc8
90008fe4:	eb06 0657 	add.w	r6, r6, r7, lsr #1
90008fe8:	e7b2      	b.n	90008f50 <HAL_JPEG_GetInfo.part.0+0x84>
90008fea:	f1c7 07c8 	rsb	r7, r7, #200	; 0xc8
90008fee:	eb06 0657 	add.w	r6, r6, r7, lsr #1
90008ff2:	e79b      	b.n	90008f2c <HAL_JPEG_GetInfo.part.0+0x60>
90008ff4:	f1c7 07c8 	rsb	r7, r7, #200	; 0xc8
90008ff8:	eb06 0657 	add.w	r6, r6, r7, lsr #1
90008ffc:	e7cf      	b.n	90008f9e <HAL_JPEG_GetInfo.part.0+0xd2>
90008ffe:	f1c3 03c8 	rsb	r3, r3, #200	; 0xc8
90009002:	eb06 0653 	add.w	r6, r6, r3, lsr #1
90009006:	e7b2      	b.n	90008f6e <HAL_JPEG_GetInfo.part.0+0xa2>
90009008:	2410      	movs	r4, #16
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
9000900a:	685a      	ldr	r2, [r3, #4]
    pInfo->ColorSpace = JPEG_YCBCR_COLORSPACE;
9000900c:	f8c9 4000 	str.w	r4, [r9]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
90009010:	0c12      	lsrs	r2, r2, #16
90009012:	f8c9 2008 	str.w	r2, [r9, #8]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
90009016:	68da      	ldr	r2, [r3, #12]
    yblockNb  = (hjpeg->Instance->CONFR4 & JPEG_CONFR4_NB) >> 4;
90009018:	691d      	ldr	r5, [r3, #16]
    cBblockNb = (hjpeg->Instance->CONFR5 & JPEG_CONFR5_NB) >> 4;
9000901a:	695f      	ldr	r7, [r3, #20]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
9000901c:	0c12      	lsrs	r2, r2, #16
    cRblockNb = (hjpeg->Instance->CONFR6 & JPEG_CONFR6_NB) >> 4;
9000901e:	699e      	ldr	r6, [r3, #24]
    if ((yblockNb == 1UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
90009020:	f017 0ff0 	tst.w	r7, #240	; 0xf0
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
90009024:	f8c9 200c 	str.w	r2, [r9, #12]
    cRblockNb = (hjpeg->Instance->CONFR6 & JPEG_CONFR6_NB) >> 4;
90009028:	ea4f 1616 	mov.w	r6, r6, lsr #4
    yblockNb  = (hjpeg->Instance->CONFR4 & JPEG_CONFR4_NB) >> 4;
9000902c:	ea4f 1215 	mov.w	r2, r5, lsr #4
90009030:	f3c5 1503 	ubfx	r5, r5, #4, #4
    cBblockNb = (hjpeg->Instance->CONFR5 & JPEG_CONFR5_NB) >> 4;
90009034:	ea4f 1c17 	mov.w	ip, r7, lsr #4
    if ((yblockNb == 1UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
90009038:	d108      	bne.n	9000904c <HAL_JPEG_GetInfo.part.0+0x180>
9000903a:	2d01      	cmp	r5, #1
9000903c:	d106      	bne.n	9000904c <HAL_JPEG_GetInfo.part.0+0x180>
9000903e:	f016 0f0f 	tst.w	r6, #15
90009042:	bf0c      	ite	eq
90009044:	2401      	moveq	r4, #1
90009046:	2400      	movne	r4, #0
90009048:	0064      	lsls	r4, r4, #1
9000904a:	e754      	b.n	90008ef6 <HAL_JPEG_GetInfo.part.0+0x2a>
    else if ((yblockNb == 0UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
9000904c:	ea42 020c 	orr.w	r2, r2, ip
90009050:	f012 040f 	ands.w	r4, r2, #15
90009054:	f43f af4f 	beq.w	90008ef6 <HAL_JPEG_GetInfo.part.0+0x2a>
    else if ((yblockNb == 3UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
90009058:	ea4c 0206 	orr.w	r2, ip, r6
9000905c:	f3c2 0203 	ubfx	r2, r2, #0, #4
90009060:	2d03      	cmp	r5, #3
90009062:	bf08      	it	eq
90009064:	2a00      	cmpeq	r2, #0
90009066:	bf0c      	ite	eq
90009068:	2401      	moveq	r4, #1
9000906a:	2400      	movne	r4, #0
9000906c:	e743      	b.n	90008ef6 <HAL_JPEG_GetInfo.part.0+0x2a>
    return HAL_ERROR;
9000906e:	2001      	movs	r0, #1
}
90009070:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90009074:	90029d64 	.word	0x90029d64

90009078 <HAL_JPEG_Init>:
  if (hjpeg == NULL)
90009078:	2800      	cmp	r0, #0
9000907a:	f000 810b 	beq.w	90009294 <HAL_JPEG_Init+0x21c>
{
9000907e:	b570      	push	{r4, r5, r6, lr}
  if (hjpeg->State == HAL_JPEG_STATE_RESET)
90009080:	f890 304d 	ldrb.w	r3, [r0, #77]	; 0x4d
90009084:	4604      	mov	r4, r0
90009086:	f003 02ff 	and.w	r2, r3, #255	; 0xff
9000908a:	2b00      	cmp	r3, #0
9000908c:	f000 80fd 	beq.w	9000928a <HAL_JPEG_Init+0x212>
  __HAL_JPEG_ENABLE(hjpeg);
90009090:	6822      	ldr	r2, [r4, #0]
  hjpeg->State = HAL_JPEG_STATE_BUSY;
90009092:	2102      	movs	r1, #2
  hjpeg->QuantTable2 = NULL;
90009094:	2300      	movs	r3, #0
  hjpeg->QuantTable0 = (uint8_t *)((uint32_t)JPEG_LUM_QuantTable);
90009096:	4880      	ldr	r0, [pc, #512]	; (90009298 <HAL_JPEG_Init+0x220>)
  hjpeg->State = HAL_JPEG_STATE_BUSY;
90009098:	f884 104d 	strb.w	r1, [r4, #77]	; 0x4d
  __HAL_JPEG_ENABLE(hjpeg);
9000909c:	6b11      	ldr	r1, [r2, #48]	; 0x30
9000909e:	f041 0101 	orr.w	r1, r1, #1
900090a2:	6311      	str	r1, [r2, #48]	; 0x30
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
900090a4:	6811      	ldr	r1, [r2, #0]
900090a6:	f021 0101 	bic.w	r1, r1, #1
900090aa:	6011      	str	r1, [r2, #0]
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
900090ac:	6b11      	ldr	r1, [r2, #48]	; 0x30
900090ae:	f021 017e 	bic.w	r1, r1, #126	; 0x7e
900090b2:	6311      	str	r1, [r2, #48]	; 0x30
  hjpeg->Instance->CR |= JPEG_CR_IFF;
900090b4:	6b11      	ldr	r1, [r2, #48]	; 0x30
900090b6:	f441 5100 	orr.w	r1, r1, #8192	; 0x2000
900090ba:	6311      	str	r1, [r2, #48]	; 0x30
  hjpeg->Instance->CR |= JPEG_CR_OFF;
900090bc:	6b11      	ldr	r1, [r2, #48]	; 0x30
900090be:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
900090c2:	6311      	str	r1, [r2, #48]	; 0x30
  __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
900090c4:	6b91      	ldr	r1, [r2, #56]	; 0x38
900090c6:	f041 0160 	orr.w	r1, r1, #96	; 0x60
900090ca:	6391      	str	r1, [r2, #56]	; 0x38
  hjpeg->QuantTable1 = (uint8_t *)((uint32_t)JPEG_CHROM_QuantTable);
900090cc:	4973      	ldr	r1, [pc, #460]	; (9000929c <HAL_JPEG_Init+0x224>)
  hjpeg->QuantTable0 = (uint8_t *)((uint32_t)JPEG_LUM_QuantTable);
900090ce:	63e0      	str	r0, [r4, #60]	; 0x3c
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
900090d0:	2001      	movs	r0, #1
  hjpeg->QuantTable3 = NULL;
900090d2:	64a3      	str	r3, [r4, #72]	; 0x48
  hjpeg->QuantTable1 = (uint8_t *)((uint32_t)JPEG_CHROM_QuantTable);
900090d4:	e9c4 1310 	strd	r1, r3, [r4, #64]	; 0x40
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
900090d8:	f8c2 336c 	str.w	r3, [r2, #876]	; 0x36c
900090dc:	f04f 3101 	mov.w	r1, #16843009	; 0x1010101
900090e0:	4b6f      	ldr	r3, [pc, #444]	; (900092a0 <HAL_JPEG_Init+0x228>)
900090e2:	f8c2 0368 	str.w	r0, [r2, #872]	; 0x368
900090e6:	f8c2 1364 	str.w	r1, [r2, #868]	; 0x364
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
900090ea:	486e      	ldr	r0, [pc, #440]	; (900092a4 <HAL_JPEG_Init+0x22c>)
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
900090ec:	f8c2 3360 	str.w	r3, [r2, #864]	; 0x360
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
900090f0:	4b6d      	ldr	r3, [pc, #436]	; (900092a8 <HAL_JPEG_Init+0x230>)
900090f2:	f8c2 0378 	str.w	r0, [r2, #888]	; 0x378
900090f6:	496d      	ldr	r1, [pc, #436]	; (900092ac <HAL_JPEG_Init+0x234>)
900090f8:	f8c2 3374 	str.w	r3, [r2, #884]	; 0x374
    *address = (((uint32_t)HuffTableAC0->Bits[index - 1UL] & 0xFFUL) << 24) |
900090fc:	4b6c      	ldr	r3, [pc, #432]	; (900092b0 <HAL_JPEG_Init+0x238>)
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
900090fe:	f8c2 1370 	str.w	r1, [r2, #880]	; 0x370
    *address = (((uint32_t)HuffTableAC0->Bits[index - 1UL] & 0xFFUL) << 24) |
90009102:	486c      	ldr	r0, [pc, #432]	; (900092b4 <HAL_JPEG_Init+0x23c>)
90009104:	f8c2 3388 	str.w	r3, [r2, #904]	; 0x388
90009108:	496b      	ldr	r1, [pc, #428]	; (900092b8 <HAL_JPEG_Init+0x240>)
9000910a:	4b6c      	ldr	r3, [pc, #432]	; (900092bc <HAL_JPEG_Init+0x244>)
9000910c:	f8c2 0384 	str.w	r0, [r2, #900]	; 0x384
90009110:	f8c2 1380 	str.w	r1, [r2, #896]	; 0x380
90009114:	f8c2 337c 	str.w	r3, [r2, #892]	; 0x37c
  value = value | (((uint32_t)HuffTableAC0->HuffVal[161] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC0->HuffVal[160] & 0xFFUL);
90009118:	f64f 23f9 	movw	r3, #64249	; 0xfaf9
  value = *address & 0xFFFF0000U;
9000911c:	f8d2 042c 	ldr.w	r0, [r2, #1068]	; 0x42c
90009120:	4967      	ldr	r1, [pc, #412]	; (900092c0 <HAL_JPEG_Init+0x248>)
90009122:	4001      	ands	r1, r0
  address--; /* address = hjpeg->Instance->DHTMEM + 50*/
90009124:	f502 6085 	add.w	r0, r2, #1064	; 0x428
  value = value | (((uint32_t)HuffTableAC0->HuffVal[161] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC0->HuffVal[160] & 0xFFUL);
90009128:	430b      	orrs	r3, r1
  *address = value;
9000912a:	4966      	ldr	r1, [pc, #408]	; (900092c4 <HAL_JPEG_Init+0x24c>)
9000912c:	f1a1 06a0 	sub.w	r6, r1, #160	; 0xa0
90009130:	f8c2 342c 	str.w	r3, [r2, #1068]	; 0x42c
               (((uint32_t)HuffTableAC0->HuffVal[index - 2UL] & 0xFFUL) << 16) |
90009134:	f891 30ae 	ldrb.w	r3, [r1, #174]	; 0xae
  while (index > 3UL)
90009138:	3904      	subs	r1, #4
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000913a:	f891 e0b3 	ldrb.w	lr, [r1, #179]	; 0xb3
               (((uint32_t)HuffTableAC0->HuffVal[index - 2UL] & 0xFFUL) << 16) |
9000913e:	041b      	lsls	r3, r3, #16
               ((uint32_t)HuffTableAC0->HuffVal[index - 4UL] & 0xFFUL);
90009140:	f891 c0b0 	ldrb.w	ip, [r1, #176]	; 0xb0
               (((uint32_t)HuffTableAC0->HuffVal[index - 3UL] & 0xFFUL) << 8) |
90009144:	f891 50b1 	ldrb.w	r5, [r1, #177]	; 0xb1
  while (index > 3UL)
90009148:	42b1      	cmp	r1, r6
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000914a:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
               (((uint32_t)HuffTableAC0->HuffVal[index - 3UL] & 0xFFUL) << 8) |
9000914e:	ea43 030c 	orr.w	r3, r3, ip
90009152:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
90009156:	f840 3904 	str.w	r3, [r0], #-4
  while (index > 3UL)
9000915a:	d1eb      	bne.n	90009134 <HAL_JPEG_Init+0xbc>
  value = *address & 0x0000FFFFU;
9000915c:	f8d2 342c 	ldr.w	r3, [r2, #1068]	; 0x42c
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
90009160:	f04f 3101 	mov.w	r1, #16843009	; 0x1010101
  value = *address & 0xFFFF0000U;
90009164:	4856      	ldr	r0, [pc, #344]	; (900092c0 <HAL_JPEG_Init+0x248>)
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
90009166:	2501      	movs	r5, #1
  value = *address & 0x0000FFFFU;
90009168:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableDC1->Bits[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableDC1->Bits[0] & 0xFFUL) << 16);
9000916a:	f043 7340 	orr.w	r3, r3, #50331648	; 0x3000000
  *address = value;
9000916e:	f8c2 342c 	str.w	r3, [r2, #1068]	; 0x42c
  value = *address & 0xFFFF0000U;
90009172:	f8d2 343c 	ldr.w	r3, [r2, #1084]	; 0x43c
90009176:	4003      	ands	r3, r0
  *address = value;
90009178:	f8c2 343c 	str.w	r3, [r2, #1084]	; 0x43c
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000917c:	f8c2 5438 	str.w	r5, [r2, #1080]	; 0x438
90009180:	f8c2 1434 	str.w	r1, [r2, #1076]	; 0x434
90009184:	f8c2 1430 	str.w	r1, [r2, #1072]	; 0x430
  value = value | (((uint32_t)HuffTableDC1->HuffVal[11] & 0xFFUL) << 8) | ((uint32_t)HuffTableDC1->HuffVal[10] & 0xFFUL);
90009188:	f640 310a 	movw	r1, #2826	; 0xb0a
  value = *address & 0x0000FFFFUL;
9000918c:	f8d2 343c 	ldr.w	r3, [r2, #1084]	; 0x43c
90009190:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableDC1->HuffVal[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableDC1->HuffVal[0] & 0xFFUL) <<
90009192:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
  *address = value;
90009196:	f8c2 343c 	str.w	r3, [r2, #1084]	; 0x43c
  value = *address & 0xFFFF0000UL;
9000919a:	f8d2 3448 	ldr.w	r3, [r2, #1096]	; 0x448
9000919e:	4003      	ands	r3, r0
  value = value | (((uint32_t)HuffTableDC1->HuffVal[11] & 0xFFUL) << 8) | ((uint32_t)HuffTableDC1->HuffVal[10] & 0xFFUL);
900091a0:	4319      	orrs	r1, r3
    *address = (((uint32_t)HuffTableDC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
900091a2:	4b49      	ldr	r3, [pc, #292]	; (900092c8 <HAL_JPEG_Init+0x250>)
  *address = value;
900091a4:	f8c2 1448 	str.w	r1, [r2, #1096]	; 0x448
  value = value | (((uint32_t)HuffTableAC1->Bits[15] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC1->Bits[14] & 0xFFUL);
900091a8:	f247 7102 	movw	r1, #30466	; 0x7702
    *address = (((uint32_t)HuffTableDC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
900091ac:	f8c2 3444 	str.w	r3, [r2, #1092]	; 0x444
900091b0:	f1a3 3304 	sub.w	r3, r3, #67372036	; 0x4040404
900091b4:	f8c2 3440 	str.w	r3, [r2, #1088]	; 0x440
  value = *address & 0x0000FFFFU;
900091b8:	f8d2 3448 	ldr.w	r3, [r2, #1096]	; 0x448
900091bc:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableAC1->Bits[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableAC1->Bits[0] & 0xFFUL) << 16);
900091be:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
  *address = value;
900091c2:	f8c2 3448 	str.w	r3, [r2, #1096]	; 0x448
  value = *address & 0xFFFF0000U;
900091c6:	f8d2 3458 	ldr.w	r3, [r2, #1112]	; 0x458
900091ca:	4003      	ands	r3, r0
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
900091cc:	483f      	ldr	r0, [pc, #252]	; (900092cc <HAL_JPEG_Init+0x254>)
  value = value | (((uint32_t)HuffTableAC1->Bits[15] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC1->Bits[14] & 0xFFUL);
900091ce:	4319      	orrs	r1, r3
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
900091d0:	4b3f      	ldr	r3, [pc, #252]	; (900092d0 <HAL_JPEG_Init+0x258>)
  *address = value;
900091d2:	f8c2 1458 	str.w	r1, [r2, #1112]	; 0x458
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
900091d6:	493f      	ldr	r1, [pc, #252]	; (900092d4 <HAL_JPEG_Init+0x25c>)
900091d8:	f8c2 0454 	str.w	r0, [r2, #1108]	; 0x454
  address = (hjpeg->Instance->DHTMEM + 102);
900091dc:	f502 609f 	add.w	r0, r2, #1272	; 0x4f8
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
900091e0:	f8c2 1450 	str.w	r1, [r2, #1104]	; 0x450
900091e4:	f8c2 344c 	str.w	r3, [r2, #1100]	; 0x44c
  value = *address & 0x0000FFFFUL;
900091e8:	f8d2 3458 	ldr.w	r3, [r2, #1112]	; 0x458
  value = value | (((uint32_t)HuffTableAC1->HuffVal[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableAC1->HuffVal[0] & 0xFFUL) <<
900091ec:	493a      	ldr	r1, [pc, #232]	; (900092d8 <HAL_JPEG_Init+0x260>)
  value = *address & 0x0000FFFFUL;
900091ee:	b29b      	uxth	r3, r3
900091f0:	f1a1 06a0 	sub.w	r6, r1, #160	; 0xa0
  value = value | (((uint32_t)HuffTableAC1->HuffVal[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableAC1->HuffVal[0] & 0xFFUL) <<
900091f4:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
  *address = value;
900091f8:	f8c2 3458 	str.w	r3, [r2, #1112]	; 0x458
               (((uint32_t)HuffTableAC1->HuffVal[index] & 0xFFUL) << 16) |
900091fc:	f891 30b0 	ldrb.w	r3, [r1, #176]	; 0xb0
  while (index > 3UL)
90009200:	3904      	subs	r1, #4
    *address = (((uint32_t)HuffTableAC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
90009202:	f891 50b5 	ldrb.w	r5, [r1, #181]	; 0xb5
               (((uint32_t)HuffTableAC1->HuffVal[index] & 0xFFUL) << 16) |
90009206:	041b      	lsls	r3, r3, #16
               ((uint32_t)HuffTableAC1->HuffVal[index - 2UL] & 0xFFUL);
90009208:	f891 e0b2 	ldrb.w	lr, [r1, #178]	; 0xb2
               (((uint32_t)HuffTableAC1->HuffVal[index - 1UL] & 0xFFUL) << 8) |
9000920c:	f891 c0b3 	ldrb.w	ip, [r1, #179]	; 0xb3
  while (index > 3UL)
90009210:	42b1      	cmp	r1, r6
               (((uint32_t)HuffTableAC1->HuffVal[index - 1UL] & 0xFFUL) << 8) |
90009212:	ea43 6305 	orr.w	r3, r3, r5, lsl #24
90009216:	ea43 030e 	orr.w	r3, r3, lr
9000921a:	ea43 230c 	orr.w	r3, r3, ip, lsl #8
    *address = (((uint32_t)HuffTableAC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
9000921e:	f840 3904 	str.w	r3, [r0], #-4
  while (index > 3UL)
90009222:	d1eb      	bne.n	900091fc <HAL_JPEG_Init+0x184>
  error = JPEG_Set_HuffAC_Mem(hjpeg, (JPEG_ACHuffTableTypeDef *)(uint32_t)&JPEG_ACLUM_HuffTable,
90009224:	f502 62a0 	add.w	r2, r2, #1280	; 0x500
90009228:	4926      	ldr	r1, [pc, #152]	; (900092c4 <HAL_JPEG_Init+0x24c>)
9000922a:	4620      	mov	r0, r4
9000922c:	f7ff fd3a 	bl	90008ca4 <JPEG_Set_HuffAC_Mem>
  if (error != HAL_OK)
90009230:	b118      	cbz	r0, 9000923a <HAL_JPEG_Init+0x1c2>
    hjpeg->ErrorCode = HAL_JPEG_ERROR_HUFF_TABLE;
90009232:	2301      	movs	r3, #1
    return HAL_ERROR;
90009234:	4618      	mov	r0, r3
    hjpeg->ErrorCode = HAL_JPEG_ERROR_HUFF_TABLE;
90009236:	6523      	str	r3, [r4, #80]	; 0x50
}
90009238:	bd70      	pop	{r4, r5, r6, pc}
                              (hjpeg->Instance->HUFFENC_AC1));
9000923a:	6822      	ldr	r2, [r4, #0]
  error = JPEG_Set_HuffAC_Mem(hjpeg, (JPEG_ACHuffTableTypeDef *)(uint32_t)&JPEG_ACCHROM_HuffTable,
9000923c:	4620      	mov	r0, r4
9000923e:	4926      	ldr	r1, [pc, #152]	; (900092d8 <HAL_JPEG_Init+0x260>)
90009240:	f502 62cc 	add.w	r2, r2, #1632	; 0x660
90009244:	f7ff fd2e 	bl	90008ca4 <JPEG_Set_HuffAC_Mem>
  if (error != HAL_OK)
90009248:	2800      	cmp	r0, #0
9000924a:	d1f2      	bne.n	90009232 <HAL_JPEG_Init+0x1ba>
                              hjpeg->Instance->HUFFENC_DC0);
9000924c:	6822      	ldr	r2, [r4, #0]
  error = JPEG_Set_HuffDC_Mem(hjpeg, (JPEG_DCHuffTableTypeDef *)(uint32_t)&JPEG_DCLUM_HuffTable,
9000924e:	4620      	mov	r0, r4
90009250:	4922      	ldr	r1, [pc, #136]	; (900092dc <HAL_JPEG_Init+0x264>)
90009252:	f502 62f8 	add.w	r2, r2, #1984	; 0x7c0
90009256:	f7ff fc7b 	bl	90008b50 <JPEG_Set_HuffDC_Mem>
  if (error != HAL_OK)
9000925a:	2800      	cmp	r0, #0
9000925c:	d1e9      	bne.n	90009232 <HAL_JPEG_Init+0x1ba>
                              hjpeg->Instance->HUFFENC_DC1);
9000925e:	6822      	ldr	r2, [r4, #0]
  error = JPEG_Set_HuffDC_Mem(hjpeg, (JPEG_DCHuffTableTypeDef *)(uint32_t)&JPEG_DCCHROM_HuffTable,
90009260:	4620      	mov	r0, r4
90009262:	491f      	ldr	r1, [pc, #124]	; (900092e0 <HAL_JPEG_Init+0x268>)
90009264:	f502 62fc 	add.w	r2, r2, #2016	; 0x7e0
90009268:	f7ff fc72 	bl	90008b50 <JPEG_Set_HuffDC_Mem>
  if (JPEG_Set_HuffEnc_Mem(hjpeg) != HAL_OK)
9000926c:	2800      	cmp	r0, #0
9000926e:	d1e0      	bne.n	90009232 <HAL_JPEG_Init+0x1ba>
  hjpeg->Instance->CONFR1 |= JPEG_CONFR1_HDR;
90009270:	6822      	ldr	r2, [r4, #0]
  hjpeg->State = HAL_JPEG_STATE_READY;
90009272:	2101      	movs	r1, #1
  hjpeg->Instance->CONFR1 |= JPEG_CONFR1_HDR;
90009274:	6853      	ldr	r3, [r2, #4]
90009276:	f443 7380 	orr.w	r3, r3, #256	; 0x100
9000927a:	6053      	str	r3, [r2, #4]
  hjpeg->JpegInCount = 0;
9000927c:	6220      	str	r0, [r4, #32]
  hjpeg->JpegOutCount = 0;
9000927e:	6260      	str	r0, [r4, #36]	; 0x24
  hjpeg->State = HAL_JPEG_STATE_READY;
90009280:	f884 104d 	strb.w	r1, [r4, #77]	; 0x4d
  hjpeg->ErrorCode = HAL_JPEG_ERROR_NONE;
90009284:	6520      	str	r0, [r4, #80]	; 0x50
  hjpeg->Context = 0;
90009286:	6560      	str	r0, [r4, #84]	; 0x54
}
90009288:	bd70      	pop	{r4, r5, r6, pc}
    hjpeg->Lock = HAL_UNLOCKED;
9000928a:	f880 204c 	strb.w	r2, [r0, #76]	; 0x4c
    HAL_JPEG_MspInit(hjpeg);
9000928e:	f7f9 fff1 	bl	90003274 <HAL_JPEG_MspInit>
90009292:	e6fd      	b.n	90009090 <HAL_JPEG_Init+0x18>
    return HAL_ERROR;
90009294:	2001      	movs	r0, #1
}
90009296:	4770      	bx	lr
90009298:	90029d24 	.word	0x90029d24
9000929c:	90029cac 	.word	0x90029cac
900092a0:	01050100 	.word	0x01050100
900092a4:	0b0a0908 	.word	0x0b0a0908
900092a8:	07060504 	.word	0x07060504
900092ac:	03020100 	.word	0x03020100
900092b0:	7d010000 	.word	0x7d010000
900092b4:	04040505 	.word	0x04040505
900092b8:	03040203 	.word	0x03040203
900092bc:	03010200 	.word	0x03010200
900092c0:	ffff0000 	.word	0xffff0000
900092c4:	90029bf8 	.word	0x90029bf8
900092c8:	09080706 	.word	0x09080706
900092cc:	01000404 	.word	0x01000404
900092d0:	04040201 	.word	0x04040201
900092d4:	05070403 	.word	0x05070403
900092d8:	90029b44 	.word	0x90029b44
900092dc:	90029d08 	.word	0x90029d08
900092e0:	90029cec 	.word	0x90029cec

900092e4 <HAL_JPEG_Decode_DMA>:
  if ((hjpeg == NULL) || (pDataIn == NULL) || (pDataOutMCU == NULL))
900092e4:	2b00      	cmp	r3, #0
900092e6:	bf18      	it	ne
900092e8:	2900      	cmpne	r1, #0
900092ea:	d03b      	beq.n	90009364 <HAL_JPEG_Decode_DMA+0x80>
{
900092ec:	b570      	push	{r4, r5, r6, lr}
  if ((hjpeg == NULL) || (pDataIn == NULL) || (pDataOutMCU == NULL))
900092ee:	fab0 f580 	clz	r5, r0
900092f2:	4604      	mov	r4, r0
900092f4:	096d      	lsrs	r5, r5, #5
900092f6:	b330      	cbz	r0, 90009346 <HAL_JPEG_Decode_DMA+0x62>
  __HAL_LOCK(hjpeg);
900092f8:	f890 c04c 	ldrb.w	ip, [r0, #76]	; 0x4c
900092fc:	f1bc 0f01 	cmp.w	ip, #1
90009300:	d02e      	beq.n	90009360 <HAL_JPEG_Decode_DMA+0x7c>
  if (hjpeg->State == HAL_JPEG_STATE_READY)
90009302:	f890 c04d 	ldrb.w	ip, [r0, #77]	; 0x4d
  __HAL_LOCK(hjpeg);
90009306:	f04f 0e01 	mov.w	lr, #1
  if (hjpeg->State == HAL_JPEG_STATE_READY)
9000930a:	45f4      	cmp	ip, lr
9000930c:	fa5f f68c 	uxtb.w	r6, ip
  __HAL_LOCK(hjpeg);
90009310:	f880 e04c 	strb.w	lr, [r0, #76]	; 0x4c
  if (hjpeg->State == HAL_JPEG_STATE_READY)
90009314:	d119      	bne.n	9000934a <HAL_JPEG_Decode_DMA+0x66>
    hjpeg->InDataLength = InDataLength;
90009316:	6282      	str	r2, [r0, #40]	; 0x28
    hjpeg->pJpegOutBuffPtr = pDataOutMCU;
90009318:	e9c0 1306 	strd	r1, r3, [r0, #24]
    hjpeg->OutDataLength = OutDataLength;
9000931c:	9b04      	ldr	r3, [sp, #16]
9000931e:	62c3      	str	r3, [r0, #44]	; 0x2c
    hjpeg->State = HAL_JPEG_STATE_BUSY_DECODING;
90009320:	2304      	movs	r3, #4
90009322:	f880 304d 	strb.w	r3, [r0, #77]	; 0x4d
    hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK);
90009326:	6d43      	ldr	r3, [r0, #84]	; 0x54
90009328:	f023 030f 	bic.w	r3, r3, #15
9000932c:	6543      	str	r3, [r0, #84]	; 0x54
    hjpeg->Context |= (JPEG_CONTEXT_DECODE | JPEG_CONTEXT_DMA);
9000932e:	6d43      	ldr	r3, [r0, #84]	; 0x54
90009330:	f043 030e 	orr.w	r3, r3, #14
90009334:	6543      	str	r3, [r0, #84]	; 0x54
    hjpeg->JpegInCount = 0;
90009336:	6205      	str	r5, [r0, #32]
    hjpeg->JpegOutCount = 0;
90009338:	6245      	str	r5, [r0, #36]	; 0x24
    JPEG_Init_Process(hjpeg);
9000933a:	f7ff fd3d 	bl	90008db8 <JPEG_Init_Process>
    if (JPEG_DMA_StartProcess(hjpeg) != HAL_OK)
9000933e:	f7ff fd79 	bl	90008e34 <JPEG_DMA_StartProcess>
90009342:	b930      	cbnz	r0, 90009352 <HAL_JPEG_Decode_DMA+0x6e>
}
90009344:	bd70      	pop	{r4, r5, r6, pc}
    return HAL_ERROR;
90009346:	2001      	movs	r0, #1
}
90009348:	bd70      	pop	{r4, r5, r6, pc}
    return HAL_BUSY;
9000934a:	2002      	movs	r0, #2
    __HAL_UNLOCK(hjpeg);
9000934c:	f884 504c 	strb.w	r5, [r4, #76]	; 0x4c
}
90009350:	bd70      	pop	{r4, r5, r6, pc}
      hjpeg->State = HAL_JPEG_STATE_ERROR;
90009352:	2306      	movs	r3, #6
      return HAL_ERROR;
90009354:	4630      	mov	r0, r6
      __HAL_UNLOCK(hjpeg);
90009356:	f884 504c 	strb.w	r5, [r4, #76]	; 0x4c
      hjpeg->State = HAL_JPEG_STATE_ERROR;
9000935a:	f884 304d 	strb.w	r3, [r4, #77]	; 0x4d
}
9000935e:	bd70      	pop	{r4, r5, r6, pc}
  __HAL_LOCK(hjpeg);
90009360:	2002      	movs	r0, #2
}
90009362:	bd70      	pop	{r4, r5, r6, pc}
    return HAL_ERROR;
90009364:	2001      	movs	r0, #1
}
90009366:	4770      	bx	lr

90009368 <HAL_JPEG_Pause>:
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
90009368:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000936a:	f003 030c 	and.w	r3, r3, #12
9000936e:	2b0c      	cmp	r3, #12
90009370:	d01a      	beq.n	900093a8 <HAL_JPEG_Pause+0x40>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
90009372:	6d43      	ldr	r3, [r0, #84]	; 0x54
90009374:	f003 030c 	and.w	r3, r3, #12
90009378:	2b08      	cmp	r3, #8
9000937a:	d001      	beq.n	90009380 <HAL_JPEG_Pause+0x18>
}
9000937c:	2000      	movs	r0, #0
9000937e:	4770      	bx	lr
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
90009380:	07ca      	lsls	r2, r1, #31
90009382:	d41f      	bmi.n	900093c4 <HAL_JPEG_Pause+0x5c>
90009384:	f04f 3cff 	mov.w	ip, #4294967295
90009388:	f06f 0228 	mvn.w	r2, #40	; 0x28
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
9000938c:	078b      	lsls	r3, r1, #30
9000938e:	d504      	bpl.n	9000939a <HAL_JPEG_Pause+0x32>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_OUTPUT;
90009390:	6d43      	ldr	r3, [r0, #84]	; 0x54
90009392:	4694      	mov	ip, r2
90009394:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
90009398:	6543      	str	r3, [r0, #84]	; 0x54
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
9000939a:	6802      	ldr	r2, [r0, #0]
}
9000939c:	2000      	movs	r0, #0
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
9000939e:	6b13      	ldr	r3, [r2, #48]	; 0x30
900093a0:	ea03 030c 	and.w	r3, r3, ip
900093a4:	6313      	str	r3, [r2, #48]	; 0x30
}
900093a6:	4770      	bx	lr
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
900093a8:	07cb      	lsls	r3, r1, #31
900093aa:	d503      	bpl.n	900093b4 <HAL_JPEG_Pause+0x4c>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
900093ac:	6d43      	ldr	r3, [r0, #84]	; 0x54
900093ae:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
900093b2:	6543      	str	r3, [r0, #84]	; 0x54
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
900093b4:	0789      	lsls	r1, r1, #30
900093b6:	d5e1      	bpl.n	9000937c <HAL_JPEG_Pause+0x14>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_OUTPUT;
900093b8:	6d43      	ldr	r3, [r0, #84]	; 0x54
900093ba:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
900093be:	6543      	str	r3, [r0, #84]	; 0x54
}
900093c0:	2000      	movs	r0, #0
900093c2:	4770      	bx	lr
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
900093c4:	6d43      	ldr	r3, [r0, #84]	; 0x54
900093c6:	f06f 0c06 	mvn.w	ip, #6
900093ca:	f06f 022e 	mvn.w	r2, #46	; 0x2e
900093ce:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
900093d2:	6543      	str	r3, [r0, #84]	; 0x54
      mask |= (JPEG_IT_IFT | JPEG_IT_IFNF);
900093d4:	e7da      	b.n	9000938c <HAL_JPEG_Pause+0x24>
900093d6:	bf00      	nop

900093d8 <HAL_JPEG_ConfigInputBuffer>:
  hjpeg->pJpegInBuffPtr =  pNewInputBuffer;
900093d8:	6181      	str	r1, [r0, #24]
  hjpeg->InDataLength = InDataLength;
900093da:	6282      	str	r2, [r0, #40]	; 0x28
}
900093dc:	4770      	bx	lr
900093de:	bf00      	nop

900093e0 <HAL_JPEG_ConfigOutputBuffer>:
  hjpeg->pJpegOutBuffPtr = pNewOutputBuffer;
900093e0:	61c1      	str	r1, [r0, #28]
  hjpeg->OutDataLength = OutDataLength;
900093e2:	62c2      	str	r2, [r0, #44]	; 0x2c
}
900093e4:	4770      	bx	lr
900093e6:	bf00      	nop

900093e8 <HAL_JPEG_EncodeCpltCallback>:
900093e8:	4770      	bx	lr
900093ea:	bf00      	nop

900093ec <JPEG_MDMAErrorCallback>:
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
900093ec:	6c00      	ldr	r0, [r0, #64]	; 0x40
  hjpeg->State = HAL_JPEG_STATE_READY;
900093ee:	2101      	movs	r1, #1
{
900093f0:	b508      	push	{r3, lr}
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
900093f2:	6803      	ldr	r3, [r0, #0]
900093f4:	681a      	ldr	r2, [r3, #0]
900093f6:	f022 0201 	bic.w	r2, r2, #1
900093fa:	601a      	str	r2, [r3, #0]
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
900093fc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
900093fe:	f022 027e 	bic.w	r2, r2, #126	; 0x7e
90009402:	631a      	str	r2, [r3, #48]	; 0x30
  hjpeg->State = HAL_JPEG_STATE_READY;
90009404:	f880 104d 	strb.w	r1, [r0, #77]	; 0x4d
  hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
90009408:	6d03      	ldr	r3, [r0, #80]	; 0x50
9000940a:	f043 0304 	orr.w	r3, r3, #4
9000940e:	6503      	str	r3, [r0, #80]	; 0x50
  HAL_JPEG_ErrorCallback(hjpeg);
90009410:	f7f8 fa50 	bl	900018b4 <HAL_JPEG_ErrorCallback>
}
90009414:	bd08      	pop	{r3, pc}
90009416:	bf00      	nop

90009418 <JPEG_MDMAInCpltCallback>:
{
90009418:	b530      	push	{r4, r5, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
9000941a:	6c04      	ldr	r4, [r0, #64]	; 0x40
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) == JPEG_CONTEXT_DMA)
9000941c:	f248 010c 	movw	r1, #32780	; 0x800c
{
90009420:	b083      	sub	sp, #12
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
90009422:	6822      	ldr	r2, [r4, #0]
90009424:	6b13      	ldr	r3, [r2, #48]	; 0x30
90009426:	f023 037e 	bic.w	r3, r3, #126	; 0x7e
9000942a:	6313      	str	r3, [r2, #48]	; 0x30
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) == JPEG_CONTEXT_DMA)
9000942c:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000942e:	400b      	ands	r3, r1
90009430:	2b0c      	cmp	r3, #12
90009432:	d001      	beq.n	90009438 <JPEG_MDMAInCpltCallback+0x20>
}
90009434:	b003      	add	sp, #12
90009436:	bd30      	pop	{r4, r5, pc}
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
90009438:	6802      	ldr	r2, [r0, #0]
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
9000943a:	4620      	mov	r0, r4
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000943c:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000943e:	6952      	ldr	r2, [r2, #20]
    inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
90009440:	6b21      	ldr	r1, [r4, #48]	; 0x30
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
90009442:	f3c2 0210 	ubfx	r2, r2, #0, #17
    inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
90009446:	6a8d      	ldr	r5, [r1, #40]	; 0x28
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
90009448:	1a9b      	subs	r3, r3, r2
9000944a:	6223      	str	r3, [r4, #32]
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
9000944c:	6a21      	ldr	r1, [r4, #32]
9000944e:	f7f8 f9bd 	bl	900017cc <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength >= inXfrSize)
90009452:	6aa3      	ldr	r3, [r4, #40]	; 0x28
90009454:	42ab      	cmp	r3, r5
90009456:	d311      	bcc.n	9000947c <JPEG_MDMAInCpltCallback+0x64>
      if (inXfrSize == 0UL)
90009458:	b305      	cbz	r5, 9000949c <JPEG_MDMAInCpltCallback+0x84>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
9000945a:	fbb3 f2f5 	udiv	r2, r3, r5
9000945e:	fb05 3212 	mls	r2, r5, r2, r3
90009462:	1a9b      	subs	r3, r3, r2
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
90009464:	6d62      	ldr	r2, [r4, #84]	; 0x54
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
90009466:	62a3      	str	r3, [r4, #40]	; 0x28
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
90009468:	04d1      	lsls	r1, r2, #19
9000946a:	d400      	bmi.n	9000946e <JPEG_MDMAInCpltCallback+0x56>
9000946c:	b963      	cbnz	r3, 90009488 <JPEG_MDMAInCpltCallback+0x70>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
9000946e:	6822      	ldr	r2, [r4, #0]
90009470:	6b13      	ldr	r3, [r2, #48]	; 0x30
90009472:	f043 0360 	orr.w	r3, r3, #96	; 0x60
90009476:	6313      	str	r3, [r2, #48]	; 0x30
}
90009478:	b003      	add	sp, #12
9000947a:	bd30      	pop	{r4, r5, pc}
    else if (hjpeg->InDataLength > 0UL)
9000947c:	b1cb      	cbz	r3, 900094b2 <JPEG_MDMAInCpltCallback+0x9a>
      if ((hjpeg->InDataLength % 4UL) != 0UL)
9000947e:	0798      	lsls	r0, r3, #30
90009480:	d119      	bne.n	900094b6 <JPEG_MDMAInCpltCallback+0x9e>
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
90009482:	6d62      	ldr	r2, [r4, #84]	; 0x54
90009484:	04d2      	lsls	r2, r2, #19
90009486:	d4f2      	bmi.n	9000946e <JPEG_MDMAInCpltCallback+0x56>
      if (HAL_MDMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
90009488:	6822      	ldr	r2, [r4, #0]
9000948a:	2501      	movs	r5, #1
9000948c:	69a1      	ldr	r1, [r4, #24]
9000948e:	6b20      	ldr	r0, [r4, #48]	; 0x30
90009490:	3240      	adds	r2, #64	; 0x40
90009492:	9500      	str	r5, [sp, #0]
90009494:	f001 f8b0 	bl	9000a5f8 <HAL_MDMA_Start_IT>
90009498:	2800      	cmp	r0, #0
9000949a:	d0e8      	beq.n	9000946e <JPEG_MDMAInCpltCallback+0x56>
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000949c:	6d23      	ldr	r3, [r4, #80]	; 0x50
        hjpeg->State = HAL_JPEG_STATE_ERROR;
9000949e:	2206      	movs	r2, #6
        HAL_JPEG_ErrorCallback(hjpeg);
900094a0:	4620      	mov	r0, r4
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
900094a2:	f043 0304 	orr.w	r3, r3, #4
900094a6:	6523      	str	r3, [r4, #80]	; 0x50
        hjpeg->State = HAL_JPEG_STATE_ERROR;
900094a8:	f884 204d 	strb.w	r2, [r4, #77]	; 0x4d
        HAL_JPEG_ErrorCallback(hjpeg);
900094ac:	f7f8 fa02 	bl	900018b4 <HAL_JPEG_ErrorCallback>
        return;
900094b0:	e7c0      	b.n	90009434 <JPEG_MDMAInCpltCallback+0x1c>
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
900094b2:	6d63      	ldr	r3, [r4, #84]	; 0x54
900094b4:	e7db      	b.n	9000946e <JPEG_MDMAInCpltCallback+0x56>
        hjpeg->InDataLength = ((hjpeg->InDataLength / 4UL) + 1UL) * 4UL;
900094b6:	f023 0303 	bic.w	r3, r3, #3
900094ba:	3304      	adds	r3, #4
900094bc:	e7d2      	b.n	90009464 <JPEG_MDMAInCpltCallback+0x4c>
900094be:	bf00      	nop

900094c0 <JPEG_DMA_PollResidualData>:
{
900094c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
      if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
900094c2:	6802      	ldr	r2, [r0, #0]
900094c4:	2610      	movs	r6, #16
{
900094c6:	4604      	mov	r4, r0
    if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
900094c8:	6d65      	ldr	r5, [r4, #84]	; 0x54
900094ca:	f415 5500 	ands.w	r5, r5, #8192	; 0x2000
900094ce:	d11d      	bne.n	9000950c <JPEG_DMA_PollResidualData+0x4c>
      if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
900094d0:	6b53      	ldr	r3, [r2, #52]	; 0x34
900094d2:	06df      	lsls	r7, r3, #27
900094d4:	d51a      	bpl.n	9000950c <JPEG_DMA_PollResidualData+0x4c>
        dataOut = hjpeg->Instance->DOR;
900094d6:	6c53      	ldr	r3, [r2, #68]	; 0x44
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataOut & 0x000000FFUL);
900094d8:	69e7      	ldr	r7, [r4, #28]
900094da:	6a62      	ldr	r2, [r4, #36]	; 0x24
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataOut & 0x0000FF00UL) >> 8);
900094dc:	0a18      	lsrs	r0, r3, #8
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataOut & 0x00FF0000UL) >> 16);
900094de:	0c19      	lsrs	r1, r3, #16
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataOut & 0x000000FFUL);
900094e0:	54bb      	strb	r3, [r7, r2]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataOut & 0xFF000000UL) >> 24);
900094e2:	0e1b      	lsrs	r3, r3, #24
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataOut & 0x0000FF00UL) >> 8);
900094e4:	6a67      	ldr	r7, [r4, #36]	; 0x24
900094e6:	69e2      	ldr	r2, [r4, #28]
900094e8:	443a      	add	r2, r7
900094ea:	7050      	strb	r0, [r2, #1]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataOut & 0x00FF0000UL) >> 16);
900094ec:	6a60      	ldr	r0, [r4, #36]	; 0x24
900094ee:	69e2      	ldr	r2, [r4, #28]
900094f0:	4402      	add	r2, r0
900094f2:	7091      	strb	r1, [r2, #2]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataOut & 0xFF000000UL) >> 24);
900094f4:	6a61      	ldr	r1, [r4, #36]	; 0x24
900094f6:	69e2      	ldr	r2, [r4, #28]
900094f8:	440a      	add	r2, r1
900094fa:	70d3      	strb	r3, [r2, #3]
        hjpeg->JpegOutCount += 4UL;
900094fc:	6a63      	ldr	r3, [r4, #36]	; 0x24
        if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
900094fe:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
        hjpeg->JpegOutCount += 4UL;
90009500:	3304      	adds	r3, #4
90009502:	6263      	str	r3, [r4, #36]	; 0x24
        if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
90009504:	6a63      	ldr	r3, [r4, #36]	; 0x24
90009506:	4293      	cmp	r3, r2
90009508:	d021      	beq.n	9000954e <JPEG_DMA_PollResidualData+0x8e>
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
9000950a:	6822      	ldr	r2, [r4, #0]
  for (count = JPEG_FIFO_SIZE; count > 0UL; count--)
9000950c:	3e01      	subs	r6, #1
9000950e:	d1db      	bne.n	900094c8 <JPEG_DMA_PollResidualData+0x8>
  tmpContext = hjpeg->Context;
90009510:	6d61      	ldr	r1, [r4, #84]	; 0x54
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
90009512:	6b53      	ldr	r3, [r2, #52]	; 0x34
90009514:	06d8      	lsls	r0, r3, #27
90009516:	d501      	bpl.n	9000951c <JPEG_DMA_PollResidualData+0x5c>
90009518:	048b      	lsls	r3, r1, #18
9000951a:	d417      	bmi.n	9000954c <JPEG_DMA_PollResidualData+0x8c>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000951c:	6813      	ldr	r3, [r2, #0]
9000951e:	f023 0301 	bic.w	r3, r3, #1
90009522:	6013      	str	r3, [r2, #0]
    if (hjpeg->JpegOutCount > 0UL)
90009524:	6a63      	ldr	r3, [r4, #36]	; 0x24
90009526:	b9eb      	cbnz	r3, 90009564 <JPEG_DMA_PollResidualData+0xa4>
    tmpContext = hjpeg->Context;
90009528:	6d63      	ldr	r3, [r4, #84]	; 0x54
    __HAL_UNLOCK(hjpeg);
9000952a:	2000      	movs	r0, #0
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000952c:	6d62      	ldr	r2, [r4, #84]	; 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000952e:	2101      	movs	r1, #1
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009530:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
90009534:	f884 004c 	strb.w	r0, [r4, #76]	; 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
90009538:	f402 4282 	and.w	r2, r2, #16640	; 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000953c:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000953e:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
90009540:	6562      	str	r2, [r4, #84]	; 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
90009542:	f884 104d 	strb.w	r1, [r4, #77]	; 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009546:	d00a      	beq.n	9000955e <JPEG_DMA_PollResidualData+0x9e>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
90009548:	f7ff ff4e 	bl	900093e8 <HAL_JPEG_EncodeCpltCallback>
}
9000954c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
          HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000954e:	6a62      	ldr	r2, [r4, #36]	; 0x24
90009550:	4620      	mov	r0, r4
90009552:	69e1      	ldr	r1, [r4, #28]
90009554:	f7f8 f95a 	bl	9000180c <HAL_JPEG_DataReadyCallback>
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
90009558:	6822      	ldr	r2, [r4, #0]
          hjpeg->JpegOutCount = 0;
9000955a:	6265      	str	r5, [r4, #36]	; 0x24
9000955c:	e7d6      	b.n	9000950c <JPEG_DMA_PollResidualData+0x4c>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000955e:	f7f8 f9ab 	bl	900018b8 <HAL_JPEG_DecodeCpltCallback>
}
90009562:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009564:	6a62      	ldr	r2, [r4, #36]	; 0x24
90009566:	4620      	mov	r0, r4
90009568:	69e1      	ldr	r1, [r4, #28]
9000956a:	f7f8 f94f 	bl	9000180c <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000956e:	2300      	movs	r3, #0
90009570:	6263      	str	r3, [r4, #36]	; 0x24
90009572:	e7d9      	b.n	90009528 <JPEG_DMA_PollResidualData+0x68>

90009574 <HAL_JPEG_Resume>:
  if ((hjpeg->Context & (JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT)) == 0UL)
90009574:	6d43      	ldr	r3, [r0, #84]	; 0x54
90009576:	f413 5f40 	tst.w	r3, #12288	; 0x3000
9000957a:	d028      	beq.n	900095ce <HAL_JPEG_Resume+0x5a>
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000957c:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000957e:	f003 030c 	and.w	r3, r3, #12
90009582:	2b0c      	cmp	r3, #12
{
90009584:	b570      	push	{r4, r5, r6, lr}
90009586:	4604      	mov	r4, r0
90009588:	b082      	sub	sp, #8
9000958a:	460d      	mov	r5, r1
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000958c:	d007      	beq.n	9000959e <HAL_JPEG_Resume+0x2a>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000958e:	6d43      	ldr	r3, [r0, #84]	; 0x54
90009590:	f003 030c 	and.w	r3, r3, #12
90009594:	2b08      	cmp	r3, #8
90009596:	d037      	beq.n	90009608 <HAL_JPEG_Resume+0x94>
  return HAL_OK;
90009598:	2000      	movs	r0, #0
}
9000959a:	b002      	add	sp, #8
9000959c:	bd70      	pop	{r4, r5, r6, pc}
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
9000959e:	07c8      	lsls	r0, r1, #31
900095a0:	d417      	bmi.n	900095d2 <HAL_JPEG_Resume+0x5e>
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
900095a2:	07a9      	lsls	r1, r5, #30
900095a4:	d5f8      	bpl.n	90009598 <HAL_JPEG_Resume+0x24>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
900095a6:	6d63      	ldr	r3, [r4, #84]	; 0x54
900095a8:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
900095ac:	6563      	str	r3, [r4, #84]	; 0x54
      if ((hjpeg->Context & JPEG_CONTEXT_ENDING_DMA) != 0UL)
900095ae:	6d63      	ldr	r3, [r4, #84]	; 0x54
900095b0:	041a      	lsls	r2, r3, #16
900095b2:	d453      	bmi.n	9000965c <HAL_JPEG_Resume+0xe8>
        xfrSize = hjpeg->hdmaout->Init.BufferTransferLength;
900095b4:	6b60      	ldr	r0, [r4, #52]	; 0x34
900095b6:	6a82      	ldr	r2, [r0, #40]	; 0x28
        if (xfrSize == 0UL)
900095b8:	2a00      	cmp	r2, #0
900095ba:	d13e      	bne.n	9000963a <HAL_JPEG_Resume+0xc6>
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
900095bc:	6d23      	ldr	r3, [r4, #80]	; 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
900095be:	2206      	movs	r2, #6
          return HAL_ERROR;
900095c0:	2001      	movs	r0, #1
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
900095c2:	f043 0304 	orr.w	r3, r3, #4
900095c6:	6523      	str	r3, [r4, #80]	; 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
900095c8:	f884 204d 	strb.w	r2, [r4, #77]	; 0x4d
          return HAL_ERROR;
900095cc:	e7e5      	b.n	9000959a <HAL_JPEG_Resume+0x26>
    return HAL_ERROR;
900095ce:	2001      	movs	r0, #1
}
900095d0:	4770      	bx	lr
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
900095d2:	6d63      	ldr	r3, [r4, #84]	; 0x54
      xfrSize = hjpeg->hdmain->Init.BufferTransferLength;
900095d4:	6b20      	ldr	r0, [r4, #48]	; 0x30
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
900095d6:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
      xfrSize = hjpeg->hdmain->Init.BufferTransferLength;
900095da:	6a82      	ldr	r2, [r0, #40]	; 0x28
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
900095dc:	6563      	str	r3, [r4, #84]	; 0x54
      if (xfrSize == 0UL)
900095de:	2a00      	cmp	r2, #0
900095e0:	d0ec      	beq.n	900095bc <HAL_JPEG_Resume+0x48>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % xfrSize);
900095e2:	6aa3      	ldr	r3, [r4, #40]	; 0x28
900095e4:	fbb3 f1f2 	udiv	r1, r3, r2
900095e8:	fb02 3211 	mls	r2, r2, r1, r3
900095ec:	1a9b      	subs	r3, r3, r2
900095ee:	62a3      	str	r3, [r4, #40]	; 0x28
      if (hjpeg->InDataLength > 0UL)
900095f0:	2b00      	cmp	r3, #0
900095f2:	d0d6      	beq.n	900095a2 <HAL_JPEG_Resume+0x2e>
        if (HAL_MDMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
900095f4:	6822      	ldr	r2, [r4, #0]
900095f6:	2601      	movs	r6, #1
900095f8:	3240      	adds	r2, #64	; 0x40
900095fa:	9600      	str	r6, [sp, #0]
900095fc:	69a1      	ldr	r1, [r4, #24]
900095fe:	f000 fffb 	bl	9000a5f8 <HAL_MDMA_Start_IT>
90009602:	2800      	cmp	r0, #0
90009604:	d0cd      	beq.n	900095a2 <HAL_JPEG_Resume+0x2e>
90009606:	e7d9      	b.n	900095bc <HAL_JPEG_Resume+0x48>
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
90009608:	f011 0101 	ands.w	r1, r1, #1
9000960c:	d013      	beq.n	90009636 <HAL_JPEG_Resume+0xc2>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000960e:	6d43      	ldr	r3, [r0, #84]	; 0x54
90009610:	222e      	movs	r2, #46	; 0x2e
      mask |= (JPEG_IT_IFT | JPEG_IT_IFNF);
90009612:	2106      	movs	r1, #6
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
90009614:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
90009618:	6543      	str	r3, [r0, #84]	; 0x54
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
9000961a:	07ab      	lsls	r3, r5, #30
9000961c:	d504      	bpl.n	90009628 <HAL_JPEG_Resume+0xb4>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
9000961e:	6d63      	ldr	r3, [r4, #84]	; 0x54
      mask |= (JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC);
90009620:	4611      	mov	r1, r2
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
90009622:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
90009626:	6563      	str	r3, [r4, #84]	; 0x54
    __HAL_JPEG_ENABLE_IT(hjpeg, mask);
90009628:	6822      	ldr	r2, [r4, #0]
  return HAL_OK;
9000962a:	2000      	movs	r0, #0
    __HAL_JPEG_ENABLE_IT(hjpeg, mask);
9000962c:	6b13      	ldr	r3, [r2, #48]	; 0x30
9000962e:	430b      	orrs	r3, r1
90009630:	6313      	str	r3, [r2, #48]	; 0x30
}
90009632:	b002      	add	sp, #8
90009634:	bd70      	pop	{r4, r5, r6, pc}
90009636:	2228      	movs	r2, #40	; 0x28
90009638:	e7ef      	b.n	9000961a <HAL_JPEG_Resume+0xa6>
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
9000963a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000963c:	2501      	movs	r5, #1
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
9000963e:	fbb3 f1f2 	udiv	r1, r3, r2
90009642:	fb02 3211 	mls	r2, r2, r1, r3
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
90009646:	6821      	ldr	r1, [r4, #0]
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
90009648:	1a9b      	subs	r3, r3, r2
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000964a:	3144      	adds	r1, #68	; 0x44
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
9000964c:	62e3      	str	r3, [r4, #44]	; 0x2c
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000964e:	9500      	str	r5, [sp, #0]
90009650:	69e2      	ldr	r2, [r4, #28]
90009652:	f000 ffd1 	bl	9000a5f8 <HAL_MDMA_Start_IT>
90009656:	2800      	cmp	r0, #0
90009658:	d09e      	beq.n	90009598 <HAL_JPEG_Resume+0x24>
9000965a:	e7af      	b.n	900095bc <HAL_JPEG_Resume+0x48>
        JPEG_DMA_PollResidualData(hjpeg);
9000965c:	4620      	mov	r0, r4
9000965e:	f7ff ff2f 	bl	900094c0 <JPEG_DMA_PollResidualData>
90009662:	e799      	b.n	90009598 <HAL_JPEG_Resume+0x24>

90009664 <JPEG_MDMAOutCpltCallback>:
{
90009664:	b530      	push	{r4, r5, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
90009666:	6c04      	ldr	r4, [r0, #64]	; 0x40
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) ==
90009668:	f248 010c 	movw	r1, #32780	; 0x800c
{
9000966c:	b083      	sub	sp, #12
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000966e:	6823      	ldr	r3, [r4, #0]
90009670:	6b1a      	ldr	r2, [r3, #48]	; 0x30
90009672:	f022 027e 	bic.w	r2, r2, #126	; 0x7e
90009676:	631a      	str	r2, [r3, #48]	; 0x30
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) ==
90009678:	6d62      	ldr	r2, [r4, #84]	; 0x54
9000967a:	400a      	ands	r2, r1
9000967c:	2a0c      	cmp	r2, #12
9000967e:	d001      	beq.n	90009684 <JPEG_MDMAOutCpltCallback+0x20>
}
90009680:	b003      	add	sp, #12
90009682:	bd30      	pop	{r4, r5, pc}
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF) == 0UL)
90009684:	6b5a      	ldr	r2, [r3, #52]	; 0x34
90009686:	0692      	lsls	r2, r2, #26
90009688:	d505      	bpl.n	90009696 <JPEG_MDMAOutCpltCallback+0x32>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
9000968a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000968c:	f042 0260 	orr.w	r2, r2, #96	; 0x60
90009690:	631a      	str	r2, [r3, #48]	; 0x30
}
90009692:	b003      	add	sp, #12
90009694:	bd30      	pop	{r4, r5, pc}
      hjpeg->JpegOutCount = hjpeg->OutDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
90009696:	6802      	ldr	r2, [r0, #0]
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009698:	4620      	mov	r0, r4
      hjpeg->JpegOutCount = hjpeg->OutDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000969a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000969c:	6952      	ldr	r2, [r2, #20]
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000969e:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount = hjpeg->OutDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
900096a0:	f3c2 0210 	ubfx	r2, r2, #0, #17
900096a4:	1a9b      	subs	r3, r3, r2
900096a6:	6263      	str	r3, [r4, #36]	; 0x24
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
900096a8:	6a62      	ldr	r2, [r4, #36]	; 0x24
900096aa:	f7f8 f8af 	bl	9000180c <HAL_JPEG_DataReadyCallback>
      if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
900096ae:	6d63      	ldr	r3, [r4, #84]	; 0x54
900096b0:	049b      	lsls	r3, r3, #18
900096b2:	d501      	bpl.n	900096b8 <JPEG_MDMAOutCpltCallback+0x54>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
900096b4:	6823      	ldr	r3, [r4, #0]
900096b6:	e7e8      	b.n	9000968a <JPEG_MDMAOutCpltCallback+0x26>
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
900096b8:	6821      	ldr	r1, [r4, #0]
900096ba:	2501      	movs	r5, #1
900096bc:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
900096be:	69e2      	ldr	r2, [r4, #28]
900096c0:	3144      	adds	r1, #68	; 0x44
900096c2:	6b60      	ldr	r0, [r4, #52]	; 0x34
900096c4:	9500      	str	r5, [sp, #0]
900096c6:	f000 ff97 	bl	9000a5f8 <HAL_MDMA_Start_IT>
900096ca:	2800      	cmp	r0, #0
900096cc:	d0f2      	beq.n	900096b4 <JPEG_MDMAOutCpltCallback+0x50>
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
900096ce:	6d23      	ldr	r3, [r4, #80]	; 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
900096d0:	2206      	movs	r2, #6
          HAL_JPEG_ErrorCallback(hjpeg);
900096d2:	4620      	mov	r0, r4
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
900096d4:	f043 0304 	orr.w	r3, r3, #4
900096d8:	6523      	str	r3, [r4, #80]	; 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
900096da:	f884 204d 	strb.w	r2, [r4, #77]	; 0x4d
          HAL_JPEG_ErrorCallback(hjpeg);
900096de:	f7f8 f8e9 	bl	900018b4 <HAL_JPEG_ErrorCallback>
          return;
900096e2:	e7cd      	b.n	90009680 <JPEG_MDMAOutCpltCallback+0x1c>

900096e4 <JPEG_MDMAOutAbortCallback>:
{
900096e4:	b538      	push	{r3, r4, r5, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
900096e6:	6c04      	ldr	r4, [r0, #64]	; 0x40
  if ((hjpeg->Context & JPEG_CONTEXT_ENDING_DMA) != 0UL)
900096e8:	6d63      	ldr	r3, [r4, #84]	; 0x54
900096ea:	041a      	lsls	r2, r3, #16
900096ec:	d400      	bmi.n	900096f0 <JPEG_MDMAOutAbortCallback+0xc>
}
900096ee:	bd38      	pop	{r3, r4, r5, pc}
  hjpeg->JpegOutCount = hjpeg->OutDataLength - (hjpeg->hdmaout->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
900096f0:	6b63      	ldr	r3, [r4, #52]	; 0x34
900096f2:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
900096f4:	681b      	ldr	r3, [r3, #0]
900096f6:	695b      	ldr	r3, [r3, #20]
900096f8:	f3c3 0310 	ubfx	r3, r3, #0, #17
900096fc:	1ad3      	subs	r3, r2, r3
900096fe:	6263      	str	r3, [r4, #36]	; 0x24
  if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
90009700:	6a63      	ldr	r3, [r4, #36]	; 0x24
90009702:	429a      	cmp	r2, r3
90009704:	d025      	beq.n	90009752 <JPEG_MDMAOutAbortCallback+0x6e>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL)
90009706:	6822      	ldr	r2, [r4, #0]
90009708:	6b55      	ldr	r5, [r2, #52]	; 0x34
9000970a:	f015 0510 	ands.w	r5, r5, #16
9000970e:	d118      	bne.n	90009742 <JPEG_MDMAOutAbortCallback+0x5e>
    if (hjpeg->JpegOutCount > 0UL)
90009710:	6a63      	ldr	r3, [r4, #36]	; 0x24
90009712:	bb4b      	cbnz	r3, 90009768 <JPEG_MDMAOutAbortCallback+0x84>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90009714:	6813      	ldr	r3, [r2, #0]
    __HAL_UNLOCK(hjpeg);
90009716:	2000      	movs	r0, #0
    hjpeg->State = HAL_JPEG_STATE_READY;
90009718:	2101      	movs	r1, #1
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000971a:	f023 0301 	bic.w	r3, r3, #1
9000971e:	6013      	str	r3, [r2, #0]
    tmpContext = hjpeg->Context;
90009720:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
90009722:	6d62      	ldr	r2, [r4, #84]	; 0x54
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009724:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
90009728:	f884 004c 	strb.w	r0, [r4, #76]	; 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000972c:	f402 4282 	and.w	r2, r2, #16640	; 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
90009730:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009732:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
90009734:	6562      	str	r2, [r4, #84]	; 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
90009736:	f884 104d 	strb.w	r1, [r4, #77]	; 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000973a:	d012      	beq.n	90009762 <JPEG_MDMAOutAbortCallback+0x7e>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
9000973c:	f7ff fe54 	bl	900093e8 <HAL_JPEG_EncodeCpltCallback>
}
90009740:	bd38      	pop	{r3, r4, r5, pc}
  else if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
90009742:	6d63      	ldr	r3, [r4, #84]	; 0x54
90009744:	049b      	lsls	r3, r3, #18
90009746:	d4d2      	bmi.n	900096ee <JPEG_MDMAOutAbortCallback+0xa>
    JPEG_DMA_PollResidualData(hjpeg);
90009748:	4620      	mov	r0, r4
}
9000974a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    JPEG_DMA_PollResidualData(hjpeg);
9000974e:	f7ff beb7 	b.w	900094c0 <JPEG_DMA_PollResidualData>
    HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009752:	6a62      	ldr	r2, [r4, #36]	; 0x24
90009754:	4620      	mov	r0, r4
90009756:	69e1      	ldr	r1, [r4, #28]
90009758:	f7f8 f858 	bl	9000180c <HAL_JPEG_DataReadyCallback>
    hjpeg->JpegOutCount = 0;
9000975c:	2300      	movs	r3, #0
9000975e:	6263      	str	r3, [r4, #36]	; 0x24
90009760:	e7d1      	b.n	90009706 <JPEG_MDMAOutAbortCallback+0x22>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
90009762:	f7f8 f8a9 	bl	900018b8 <HAL_JPEG_DecodeCpltCallback>
}
90009766:	bd38      	pop	{r3, r4, r5, pc}
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009768:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000976a:	4620      	mov	r0, r4
9000976c:	69e1      	ldr	r1, [r4, #28]
9000976e:	f7f8 f84d 	bl	9000180c <HAL_JPEG_DataReadyCallback>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90009772:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount = 0;
90009774:	6265      	str	r5, [r4, #36]	; 0x24
90009776:	e7cd      	b.n	90009714 <JPEG_MDMAOutAbortCallback+0x30>

90009778 <JPEG_Process>:
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009778:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000977a:	f003 0303 	and.w	r3, r3, #3
9000977e:	2b02      	cmp	r3, #2
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
90009780:	6803      	ldr	r3, [r0, #0]
{
90009782:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90009786:	4604      	mov	r4, r0
90009788:	b082      	sub	sp, #8
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000978a:	d01f      	beq.n	900097cc <JPEG_Process+0x54>
  if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL)
9000978c:	6d62      	ldr	r2, [r4, #84]	; 0x54
9000978e:	04d7      	lsls	r7, r2, #19
90009790:	d407      	bmi.n	900097a2 <JPEG_Process+0x2a>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_IFTF) != 0UL)
90009792:	6b5a      	ldr	r2, [r3, #52]	; 0x34
90009794:	0796      	lsls	r6, r2, #30
90009796:	f100 811d 	bmi.w	900099d4 <JPEG_Process+0x25c>
    else if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_IFNFF) != 0UL)
9000979a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000979c:	0750      	lsls	r0, r2, #29
9000979e:	f100 81b1 	bmi.w	90009b04 <JPEG_Process+0x38c>
  if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
900097a2:	6d65      	ldr	r5, [r4, #84]	; 0x54
900097a4:	f415 5500 	ands.w	r5, r5, #8192	; 0x2000
900097a8:	d107      	bne.n	900097ba <JPEG_Process+0x42>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFTF) != 0UL)
900097aa:	6b5e      	ldr	r6, [r3, #52]	; 0x34
900097ac:	f016 0608 	ands.w	r6, r6, #8
900097b0:	d14c      	bne.n	9000984c <JPEG_Process+0xd4>
    else if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
900097b2:	6b5a      	ldr	r2, [r3, #52]	; 0x34
900097b4:	06d2      	lsls	r2, r2, #27
900097b6:	f100 81e3 	bmi.w	90009b80 <JPEG_Process+0x408>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
900097ba:	6b5a      	ldr	r2, [r3, #52]	; 0x34
900097bc:	f002 0238 	and.w	r2, r2, #56	; 0x38
900097c0:	2a20      	cmp	r2, #32
900097c2:	d01a      	beq.n	900097fa <JPEG_Process+0x82>
  return JPEG_PROCESS_ONGOING;
900097c4:	2000      	movs	r0, #0
}
900097c6:	b002      	add	sp, #8
900097c8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
900097cc:	6b5a      	ldr	r2, [r3, #52]	; 0x34
900097ce:	0652      	lsls	r2, r2, #25
900097d0:	d5dc      	bpl.n	9000978c <JPEG_Process+0x14>
      (void) HAL_JPEG_GetInfo(hjpeg, &hjpeg->Conf);
900097d2:	1d01      	adds	r1, r0, #4
  if ((hjpeg == NULL) || (pInfo == NULL))
900097d4:	9101      	str	r1, [sp, #4]
900097d6:	f7ff fb79 	bl	90008ecc <HAL_JPEG_GetInfo.part.0>
      hjpeg->Conf.ImageQuality = 0;
900097da:	2300      	movs	r3, #0
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
900097dc:	9901      	ldr	r1, [sp, #4]
900097de:	4620      	mov	r0, r4
      hjpeg->Conf.ImageQuality = 0;
900097e0:	6163      	str	r3, [r4, #20]
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
900097e2:	f7f7 ffbd 	bl	90001760 <HAL_JPEG_InfoReadyCallback>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_IT_HPD);
900097e6:	6823      	ldr	r3, [r4, #0]
900097e8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
900097ea:	f022 0240 	bic.w	r2, r2, #64	; 0x40
900097ee:	631a      	str	r2, [r3, #48]	; 0x30
      __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_HPDF);
900097f0:	6b9a      	ldr	r2, [r3, #56]	; 0x38
900097f2:	f042 0240 	orr.w	r2, r2, #64	; 0x40
900097f6:	639a      	str	r2, [r3, #56]	; 0x38
900097f8:	e7c8      	b.n	9000978c <JPEG_Process+0x14>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
900097fa:	681a      	ldr	r2, [r3, #0]
900097fc:	f022 0201 	bic.w	r2, r2, #1
90009800:	601a      	str	r2, [r3, #0]
    if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
90009802:	6d62      	ldr	r2, [r4, #84]	; 0x54
90009804:	f002 020c 	and.w	r2, r2, #12
90009808:	2a08      	cmp	r2, #8
9000980a:	f000 81e6 	beq.w	90009bda <JPEG_Process+0x462>
    __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
9000980e:	6b9a      	ldr	r2, [r3, #56]	; 0x38
90009810:	f042 0260 	orr.w	r2, r2, #96	; 0x60
90009814:	639a      	str	r2, [r3, #56]	; 0x38
    if (hjpeg->JpegOutCount > 0UL)
90009816:	6a63      	ldr	r3, [r4, #36]	; 0x24
90009818:	2b00      	cmp	r3, #0
9000981a:	f040 81e3 	bne.w	90009be4 <JPEG_Process+0x46c>
    tmpContext = hjpeg->Context;
9000981e:	6d63      	ldr	r3, [r4, #84]	; 0x54
    __HAL_UNLOCK(hjpeg);
90009820:	2100      	movs	r1, #0
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
90009822:	6d62      	ldr	r2, [r4, #84]	; 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
90009824:	2501      	movs	r5, #1
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009826:	f003 0303 	and.w	r3, r3, #3
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000982a:	4620      	mov	r0, r4
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000982c:	f402 4282 	and.w	r2, r2, #16640	; 0x4100
    __HAL_UNLOCK(hjpeg);
90009830:	f884 104c 	strb.w	r1, [r4, #76]	; 0x4c
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009834:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
90009836:	6562      	str	r2, [r4, #84]	; 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
90009838:	f884 504d 	strb.w	r5, [r4, #77]	; 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000983c:	f000 81c9 	beq.w	90009bd2 <JPEG_Process+0x45a>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
90009840:	f7ff fdd2 	bl	900093e8 <HAL_JPEG_EncodeCpltCallback>
    return JPEG_PROCESS_DONE;
90009844:	4628      	mov	r0, r5
}
90009846:	b002      	add	sp, #8
90009848:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (hjpeg->OutDataLength >= (hjpeg->JpegOutCount + (nbOutputWords * 4UL)))
9000984c:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000984e:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
90009850:	3220      	adds	r2, #32
90009852:	4296      	cmp	r6, r2
90009854:	f0c0 81e4 	bcc.w	90009c20 <JPEG_Process+0x4a8>
      dataword = hjpeg->Instance->DOR;
90009858:	6c5b      	ldr	r3, [r3, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000985a:	69e1      	ldr	r1, [r4, #28]
9000985c:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000985e:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
90009860:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009862:	69e2      	ldr	r2, [r4, #28]
90009864:	440a      	add	r2, r1
90009866:	0a19      	lsrs	r1, r3, #8
90009868:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000986a:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000986c:	69e2      	ldr	r2, [r4, #28]
9000986e:	440a      	add	r2, r1
90009870:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009872:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009874:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009876:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009878:	69e2      	ldr	r2, [r4, #28]
9000987a:	440a      	add	r2, r1
9000987c:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000987e:	6a63      	ldr	r3, [r4, #36]	; 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
90009880:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
90009882:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009884:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
90009886:	6263      	str	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
90009888:	6c53      	ldr	r3, [r2, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000988a:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000988c:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000988e:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009890:	69e2      	ldr	r2, [r4, #28]
90009892:	440a      	add	r2, r1
90009894:	0a19      	lsrs	r1, r3, #8
90009896:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009898:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000989a:	69e2      	ldr	r2, [r4, #28]
9000989c:	440a      	add	r2, r1
9000989e:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
900098a0:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
900098a2:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
900098a4:	6a61      	ldr	r1, [r4, #36]	; 0x24
900098a6:	69e2      	ldr	r2, [r4, #28]
900098a8:	440a      	add	r2, r1
900098aa:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
900098ac:	6a63      	ldr	r3, [r4, #36]	; 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
900098ae:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
900098b0:	3304      	adds	r3, #4
900098b2:	6263      	str	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
900098b4:	6c53      	ldr	r3, [r2, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
900098b6:	6a62      	ldr	r2, [r4, #36]	; 0x24
900098b8:	69e1      	ldr	r1, [r4, #28]
900098ba:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
900098bc:	6a61      	ldr	r1, [r4, #36]	; 0x24
900098be:	69e2      	ldr	r2, [r4, #28]
900098c0:	440a      	add	r2, r1
900098c2:	0a19      	lsrs	r1, r3, #8
900098c4:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
900098c6:	6a61      	ldr	r1, [r4, #36]	; 0x24
900098c8:	69e2      	ldr	r2, [r4, #28]
900098ca:	440a      	add	r2, r1
900098cc:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
900098ce:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
900098d0:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
900098d2:	6a61      	ldr	r1, [r4, #36]	; 0x24
900098d4:	69e2      	ldr	r2, [r4, #28]
900098d6:	440a      	add	r2, r1
900098d8:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
900098da:	6a63      	ldr	r3, [r4, #36]	; 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
900098dc:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
900098de:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
900098e0:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
900098e2:	6263      	str	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
900098e4:	6c53      	ldr	r3, [r2, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
900098e6:	6a62      	ldr	r2, [r4, #36]	; 0x24
900098e8:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
900098ea:	6a61      	ldr	r1, [r4, #36]	; 0x24
900098ec:	69e2      	ldr	r2, [r4, #28]
900098ee:	440a      	add	r2, r1
900098f0:	0a19      	lsrs	r1, r3, #8
900098f2:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
900098f4:	6a61      	ldr	r1, [r4, #36]	; 0x24
900098f6:	69e2      	ldr	r2, [r4, #28]
900098f8:	440a      	add	r2, r1
900098fa:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
900098fc:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
900098fe:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009900:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009902:	69e2      	ldr	r2, [r4, #28]
90009904:	440a      	add	r2, r1
90009906:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
90009908:	6a63      	ldr	r3, [r4, #36]	; 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000990a:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000990c:	3304      	adds	r3, #4
9000990e:	6263      	str	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
90009910:	6c53      	ldr	r3, [r2, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009912:	6a62      	ldr	r2, [r4, #36]	; 0x24
90009914:	69e1      	ldr	r1, [r4, #28]
90009916:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
90009918:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000991a:	69e2      	ldr	r2, [r4, #28]
9000991c:	440a      	add	r2, r1
9000991e:	0a19      	lsrs	r1, r3, #8
90009920:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009922:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009924:	69e2      	ldr	r2, [r4, #28]
90009926:	440a      	add	r2, r1
90009928:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000992a:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000992c:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000992e:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009930:	69e2      	ldr	r2, [r4, #28]
90009932:	440a      	add	r2, r1
90009934:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
90009936:	6a63      	ldr	r3, [r4, #36]	; 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
90009938:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000993a:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000993c:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
9000993e:	6263      	str	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
90009940:	6c53      	ldr	r3, [r2, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009942:	6a62      	ldr	r2, [r4, #36]	; 0x24
90009944:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
90009946:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009948:	69e2      	ldr	r2, [r4, #28]
9000994a:	440a      	add	r2, r1
9000994c:	0a19      	lsrs	r1, r3, #8
9000994e:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009950:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009952:	69e2      	ldr	r2, [r4, #28]
90009954:	440a      	add	r2, r1
90009956:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009958:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000995a:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000995c:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000995e:	69e2      	ldr	r2, [r4, #28]
90009960:	440a      	add	r2, r1
90009962:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
90009964:	6a63      	ldr	r3, [r4, #36]	; 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
90009966:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
90009968:	3304      	adds	r3, #4
9000996a:	6263      	str	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000996c:	6c53      	ldr	r3, [r2, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000996e:	6a62      	ldr	r2, [r4, #36]	; 0x24
90009970:	69e1      	ldr	r1, [r4, #28]
90009972:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
90009974:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009976:	69e2      	ldr	r2, [r4, #28]
90009978:	440a      	add	r2, r1
9000997a:	0a19      	lsrs	r1, r3, #8
9000997c:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000997e:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009980:	69e2      	ldr	r2, [r4, #28]
90009982:	440a      	add	r2, r1
90009984:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009986:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009988:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000998a:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000998c:	69e2      	ldr	r2, [r4, #28]
9000998e:	440a      	add	r2, r1
90009990:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
90009992:	6a63      	ldr	r3, [r4, #36]	; 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
90009994:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
90009996:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009998:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
9000999a:	6263      	str	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000999c:	6c53      	ldr	r3, [r2, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000999e:	6a62      	ldr	r2, [r4, #36]	; 0x24
900099a0:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
900099a2:	6a61      	ldr	r1, [r4, #36]	; 0x24
900099a4:	69e2      	ldr	r2, [r4, #28]
900099a6:	440a      	add	r2, r1
900099a8:	0a19      	lsrs	r1, r3, #8
900099aa:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
900099ac:	6a61      	ldr	r1, [r4, #36]	; 0x24
900099ae:	69e2      	ldr	r2, [r4, #28]
900099b0:	440a      	add	r2, r1
900099b2:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
900099b4:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
900099b6:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
900099b8:	6a61      	ldr	r1, [r4, #36]	; 0x24
900099ba:	69e2      	ldr	r2, [r4, #28]
900099bc:	440a      	add	r2, r1
900099be:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
900099c0:	6a63      	ldr	r3, [r4, #36]	; 0x24
900099c2:	3304      	adds	r3, #4
900099c4:	6263      	str	r3, [r4, #36]	; 0x24
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
900099c6:	6a63      	ldr	r3, [r4, #36]	; 0x24
900099c8:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
900099ca:	429a      	cmp	r2, r3
900099cc:	f000 82ae 	beq.w	90009f2c <JPEG_Process+0x7b4>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
900099d0:	6823      	ldr	r3, [r4, #0]
900099d2:	e6f2      	b.n	900097ba <JPEG_Process+0x42>
  if ((hjpeg->InDataLength == 0UL) || (nbRequestWords == 0UL))
900099d4:	6aa2      	ldr	r2, [r4, #40]	; 0x28
900099d6:	2a00      	cmp	r2, #0
900099d8:	f000 810c 	beq.w	90009bf4 <JPEG_Process+0x47c>
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
900099dc:	6a21      	ldr	r1, [r4, #32]
900099de:	428a      	cmp	r2, r1
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
900099e0:	6a21      	ldr	r1, [r4, #32]
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
900099e2:	f240 81a4 	bls.w	90009d2e <JPEG_Process+0x5b6>
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
900099e6:	1a52      	subs	r2, r2, r1
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
900099e8:	6d61      	ldr	r1, [r4, #84]	; 0x54
900099ea:	04cd      	lsls	r5, r1, #19
900099ec:	f53f aed9 	bmi.w	900097a2 <JPEG_Process+0x2a>
900099f0:	2a00      	cmp	r2, #0
900099f2:	f43f aed6 	beq.w	900097a2 <JPEG_Process+0x2a>
    if (nb_words >= nbRequestWords)
900099f6:	2a1f      	cmp	r2, #31
    nb_words = nb_bytes / 4UL;
900099f8:	ea4f 0192 	mov.w	r1, r2, lsr #2
    if (nb_words >= nbRequestWords)
900099fc:	f240 8203 	bls.w	90009e06 <JPEG_Process+0x68e>
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009a00:	69a2      	ldr	r2, [r4, #24]
        input_count = hjpeg->JpegInCount;
90009a02:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009a04:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009a06:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009a08:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009a0a:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009a0c:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009a0e:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009a10:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
90009a14:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009a16:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009a1a:	6419      	str	r1, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
90009a1c:	6a21      	ldr	r1, [r4, #32]
90009a1e:	3104      	adds	r1, #4
90009a20:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
90009a22:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009a24:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009a26:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009a28:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009a2a:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009a2c:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009a2e:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009a30:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
90009a34:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009a36:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009a3a:	6419      	str	r1, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
90009a3c:	6a21      	ldr	r1, [r4, #32]
90009a3e:	3104      	adds	r1, #4
90009a40:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
90009a42:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009a44:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009a46:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009a48:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009a4a:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009a4c:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009a4e:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009a50:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
90009a54:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009a56:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009a5a:	6419      	str	r1, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
90009a5c:	6a21      	ldr	r1, [r4, #32]
90009a5e:	3104      	adds	r1, #4
90009a60:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
90009a62:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009a64:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009a66:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009a68:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009a6a:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009a6c:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009a6e:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009a70:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
90009a74:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009a76:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009a7a:	6419      	str	r1, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
90009a7c:	6a21      	ldr	r1, [r4, #32]
90009a7e:	3104      	adds	r1, #4
90009a80:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
90009a82:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009a84:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009a86:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009a88:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009a8a:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009a8c:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009a8e:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009a90:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
90009a94:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009a96:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009a9a:	6419      	str	r1, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
90009a9c:	6a21      	ldr	r1, [r4, #32]
90009a9e:	3104      	adds	r1, #4
90009aa0:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
90009aa2:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009aa4:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009aa6:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009aa8:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009aaa:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009aac:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009aae:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009ab0:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
90009ab4:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009ab6:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009aba:	6419      	str	r1, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
90009abc:	6a21      	ldr	r1, [r4, #32]
90009abe:	3104      	adds	r1, #4
90009ac0:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
90009ac2:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009ac4:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009ac6:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009ac8:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009aca:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009acc:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009ace:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009ad0:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
90009ad4:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009ad6:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009ada:	6419      	str	r1, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
90009adc:	6a21      	ldr	r1, [r4, #32]
90009ade:	3104      	adds	r1, #4
90009ae0:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
90009ae2:	6a20      	ldr	r0, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009ae4:	1881      	adds	r1, r0, r2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009ae6:	5c85      	ldrb	r5, [r0, r2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009ae8:	788a      	ldrb	r2, [r1, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009aea:	78c8      	ldrb	r0, [r1, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009aec:	0412      	lsls	r2, r2, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009aee:	7849      	ldrb	r1, [r1, #1]
90009af0:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
90009af4:	432a      	orrs	r2, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009af6:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009afa:	641a      	str	r2, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
90009afc:	6a22      	ldr	r2, [r4, #32]
90009afe:	3204      	adds	r2, #4
90009b00:	6222      	str	r2, [r4, #32]
      for (index = 0; index < nbRequestWords; index++)
90009b02:	e64e      	b.n	900097a2 <JPEG_Process+0x2a>
  if ((hjpeg->InDataLength == 0UL) || (nbRequestWords == 0UL))
90009b04:	6aa2      	ldr	r2, [r4, #40]	; 0x28
90009b06:	2a00      	cmp	r2, #0
90009b08:	d074      	beq.n	90009bf4 <JPEG_Process+0x47c>
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
90009b0a:	6a21      	ldr	r1, [r4, #32]
90009b0c:	428a      	cmp	r2, r1
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
90009b0e:	6a21      	ldr	r1, [r4, #32]
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
90009b10:	f200 8164 	bhi.w	90009ddc <JPEG_Process+0x664>
  else if (hjpeg->InDataLength == hjpeg->JpegInCount)
90009b14:	428a      	cmp	r2, r1
90009b16:	f040 810c 	bne.w	90009d32 <JPEG_Process+0x5ba>
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
90009b1a:	6a21      	ldr	r1, [r4, #32]
90009b1c:	4620      	mov	r0, r4
90009b1e:	f7f7 fe55 	bl	900017cc <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength > 4UL)
90009b22:	6aa2      	ldr	r2, [r4, #40]	; 0x28
90009b24:	2a04      	cmp	r2, #4
90009b26:	d902      	bls.n	90009b2e <JPEG_Process+0x3b6>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % 4UL);
90009b28:	f022 0203 	bic.w	r2, r2, #3
90009b2c:	62a2      	str	r2, [r4, #40]	; 0x28
    hjpeg->JpegInCount = 0;
90009b2e:	2100      	movs	r1, #0
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009b30:	6823      	ldr	r3, [r4, #0]
    hjpeg->JpegInCount = 0;
90009b32:	6221      	str	r1, [r4, #32]
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
90009b34:	6d61      	ldr	r1, [r4, #84]	; 0x54
90009b36:	04c9      	lsls	r1, r1, #19
90009b38:	f53f ae33 	bmi.w	900097a2 <JPEG_Process+0x2a>
90009b3c:	2a00      	cmp	r2, #0
90009b3e:	f43f ae30 	beq.w	900097a2 <JPEG_Process+0x2a>
    if (nb_words >= nbRequestWords)
90009b42:	0891      	lsrs	r1, r2, #2
90009b44:	f040 8203 	bne.w	90009f4e <JPEG_Process+0x7d6>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
90009b48:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
90009b4a:	2a01      	cmp	r2, #1
          hjpeg->JpegInCount++;
90009b4c:	6a21      	ldr	r1, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
90009b4e:	69a5      	ldr	r5, [r4, #24]
          hjpeg->JpegInCount++;
90009b50:	f101 0101 	add.w	r1, r1, #1
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
90009b54:	5c28      	ldrb	r0, [r5, r0]
          hjpeg->JpegInCount++;
90009b56:	6221      	str	r1, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
90009b58:	d010      	beq.n	90009b7c <JPEG_Process+0x404>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
90009b5a:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
90009b5c:	2a03      	cmp	r2, #3
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
90009b5e:	5c69      	ldrb	r1, [r5, r1]
90009b60:	ea40 2001 	orr.w	r0, r0, r1, lsl #8
          hjpeg->JpegInCount++;
90009b64:	6a21      	ldr	r1, [r4, #32]
90009b66:	f101 0101 	add.w	r1, r1, #1
90009b6a:	6221      	str	r1, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
90009b6c:	d106      	bne.n	90009b7c <JPEG_Process+0x404>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
90009b6e:	6a22      	ldr	r2, [r4, #32]
90009b70:	5ca9      	ldrb	r1, [r5, r2]
          hjpeg->JpegInCount++;
90009b72:	6a22      	ldr	r2, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
90009b74:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
          hjpeg->JpegInCount++;
90009b78:	3201      	adds	r2, #1
90009b7a:	6222      	str	r2, [r4, #32]
        hjpeg->Instance->DIR = dataword;
90009b7c:	6418      	str	r0, [r3, #64]	; 0x40
90009b7e:	e610      	b.n	900097a2 <JPEG_Process+0x2a>
  if (hjpeg->OutDataLength >= (hjpeg->JpegOutCount + (nbOutputWords * 4UL)))
90009b80:	6a62      	ldr	r2, [r4, #36]	; 0x24
90009b82:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
90009b84:	3204      	adds	r2, #4
90009b86:	4295      	cmp	r5, r2
90009b88:	f0c0 80d5 	bcc.w	90009d36 <JPEG_Process+0x5be>
      dataword = hjpeg->Instance->DOR;
90009b8c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009b8e:	69e1      	ldr	r1, [r4, #28]
90009b90:	6a62      	ldr	r2, [r4, #36]	; 0x24
90009b92:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
90009b94:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009b96:	69e2      	ldr	r2, [r4, #28]
90009b98:	440a      	add	r2, r1
90009b9a:	0a19      	lsrs	r1, r3, #8
90009b9c:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009b9e:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009ba0:	69e2      	ldr	r2, [r4, #28]
90009ba2:	440a      	add	r2, r1
90009ba4:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009ba6:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009ba8:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009baa:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009bac:	69e2      	ldr	r2, [r4, #28]
90009bae:	440a      	add	r2, r1
90009bb0:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
90009bb2:	6a63      	ldr	r3, [r4, #36]	; 0x24
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
90009bb4:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
      hjpeg->JpegOutCount += 4UL;
90009bb6:	3304      	adds	r3, #4
90009bb8:	6263      	str	r3, [r4, #36]	; 0x24
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
90009bba:	6a63      	ldr	r3, [r4, #36]	; 0x24
90009bbc:	429a      	cmp	r2, r3
90009bbe:	f47f af07 	bne.w	900099d0 <JPEG_Process+0x258>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009bc2:	6a62      	ldr	r2, [r4, #36]	; 0x24
90009bc4:	4620      	mov	r0, r4
90009bc6:	69e1      	ldr	r1, [r4, #28]
90009bc8:	f7f7 fe20 	bl	9000180c <HAL_JPEG_DataReadyCallback>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
90009bcc:	6823      	ldr	r3, [r4, #0]
      hjpeg->JpegOutCount = 0;
90009bce:	6266      	str	r6, [r4, #36]	; 0x24
90009bd0:	e5f3      	b.n	900097ba <JPEG_Process+0x42>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
90009bd2:	f7f7 fe71 	bl	900018b8 <HAL_JPEG_DecodeCpltCallback>
    return JPEG_PROCESS_DONE;
90009bd6:	4628      	mov	r0, r5
90009bd8:	e5f5      	b.n	900097c6 <JPEG_Process+0x4e>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
90009bda:	6b1a      	ldr	r2, [r3, #48]	; 0x30
90009bdc:	f022 027e 	bic.w	r2, r2, #126	; 0x7e
90009be0:	631a      	str	r2, [r3, #48]	; 0x30
90009be2:	e614      	b.n	9000980e <JPEG_Process+0x96>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009be4:	6a62      	ldr	r2, [r4, #36]	; 0x24
90009be6:	4620      	mov	r0, r4
90009be8:	69e1      	ldr	r1, [r4, #28]
90009bea:	f7f7 fe0f 	bl	9000180c <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
90009bee:	2300      	movs	r3, #0
90009bf0:	6263      	str	r3, [r4, #36]	; 0x24
90009bf2:	e614      	b.n	9000981e <JPEG_Process+0xa6>
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
90009bf4:	6d62      	ldr	r2, [r4, #84]	; 0x54
90009bf6:	f002 020c 	and.w	r2, r2, #12
90009bfa:	2a0c      	cmp	r2, #12
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
90009bfc:	6d62      	ldr	r2, [r4, #84]	; 0x54
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
90009bfe:	f000 80fd 	beq.w	90009dfc <JPEG_Process+0x684>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
90009c02:	f002 020c 	and.w	r2, r2, #12
90009c06:	2a08      	cmp	r2, #8
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
90009c08:	6d62      	ldr	r2, [r4, #84]	; 0x54
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
90009c0a:	f47f adca 	bne.w	900097a2 <JPEG_Process+0x2a>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
90009c0e:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
90009c12:	6562      	str	r2, [r4, #84]	; 0x54
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
90009c14:	6b1a      	ldr	r2, [r3, #48]	; 0x30
90009c16:	f022 0206 	bic.w	r2, r2, #6
90009c1a:	631a      	str	r2, [r3, #48]	; 0x30
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
90009c1c:	6d62      	ldr	r2, [r4, #84]	; 0x54
90009c1e:	e5c0      	b.n	900097a2 <JPEG_Process+0x2a>
  else if (hjpeg->OutDataLength > hjpeg->JpegOutCount)
90009c20:	6a62      	ldr	r2, [r4, #36]	; 0x24
90009c22:	4296      	cmp	r6, r2
90009c24:	f67f adc9 	bls.w	900097ba <JPEG_Process+0x42>
    nb_words = (hjpeg->OutDataLength - hjpeg->JpegOutCount) / 4UL;
90009c28:	6a60      	ldr	r0, [r4, #36]	; 0x24
90009c2a:	1a30      	subs	r0, r6, r0
    for (index = 0; index < nb_words; index++)
90009c2c:	0880      	lsrs	r0, r0, #2
90009c2e:	d020      	beq.n	90009c72 <JPEG_Process+0x4fa>
90009c30:	4629      	mov	r1, r5
90009c32:	e000      	b.n	90009c36 <JPEG_Process+0x4be>
      dataword = hjpeg->Instance->DOR;
90009c34:	6823      	ldr	r3, [r4, #0]
90009c36:	6c5b      	ldr	r3, [r3, #68]	; 0x44
    for (index = 0; index < nb_words; index++)
90009c38:	3101      	adds	r1, #1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009c3a:	6a62      	ldr	r2, [r4, #36]	; 0x24
90009c3c:	69e6      	ldr	r6, [r4, #28]
    for (index = 0; index < nb_words; index++)
90009c3e:	4288      	cmp	r0, r1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009c40:	54b3      	strb	r3, [r6, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
90009c42:	6a66      	ldr	r6, [r4, #36]	; 0x24
90009c44:	69e2      	ldr	r2, [r4, #28]
90009c46:	4432      	add	r2, r6
90009c48:	ea4f 2613 	mov.w	r6, r3, lsr #8
90009c4c:	7056      	strb	r6, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009c4e:	6a66      	ldr	r6, [r4, #36]	; 0x24
90009c50:	69e2      	ldr	r2, [r4, #28]
90009c52:	4432      	add	r2, r6
90009c54:	ea4f 4613 	mov.w	r6, r3, lsr #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009c58:	ea4f 6313 	mov.w	r3, r3, lsr #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009c5c:	7096      	strb	r6, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009c5e:	6a66      	ldr	r6, [r4, #36]	; 0x24
90009c60:	69e2      	ldr	r2, [r4, #28]
90009c62:	4432      	add	r2, r6
90009c64:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
90009c66:	6a63      	ldr	r3, [r4, #36]	; 0x24
90009c68:	f103 0304 	add.w	r3, r3, #4
90009c6c:	6263      	str	r3, [r4, #36]	; 0x24
    for (index = 0; index < nb_words; index++)
90009c6e:	d1e1      	bne.n	90009c34 <JPEG_Process+0x4bc>
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
90009c70:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
90009c72:	6a63      	ldr	r3, [r4, #36]	; 0x24
90009c74:	42b3      	cmp	r3, r6
90009c76:	f000 8161 	beq.w	90009f3c <JPEG_Process+0x7c4>
      nb_bytes = hjpeg->OutDataLength - hjpeg->JpegOutCount;
90009c7a:	f8d4 8024 	ldr.w	r8, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
90009c7e:	6823      	ldr	r3, [r4, #0]
      for (index = 0; index < nb_bytes; index++)
90009c80:	ebb6 0008 	subs.w	r0, r6, r8
      dataword = hjpeg->Instance->DOR;
90009c84:	6c5f      	ldr	r7, [r3, #68]	; 0x44
      for (index = 0; index < nb_bytes; index++)
90009c86:	d00e      	beq.n	90009ca6 <JPEG_Process+0x52e>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
90009c88:	f005 0303 	and.w	r3, r5, #3
90009c8c:	6a62      	ldr	r2, [r4, #36]	; 0x24
90009c8e:	69e1      	ldr	r1, [r4, #28]
      for (index = 0; index < nb_bytes; index++)
90009c90:	3501      	adds	r5, #1
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
90009c92:	00db      	lsls	r3, r3, #3
      for (index = 0; index < nb_bytes; index++)
90009c94:	42a8      	cmp	r0, r5
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
90009c96:	fa27 f303 	lsr.w	r3, r7, r3
90009c9a:	548b      	strb	r3, [r1, r2]
        hjpeg->JpegOutCount++;
90009c9c:	6a63      	ldr	r3, [r4, #36]	; 0x24
90009c9e:	f103 0301 	add.w	r3, r3, #1
90009ca2:	6263      	str	r3, [r4, #36]	; 0x24
      for (index = 0; index < nb_bytes; index++)
90009ca4:	d1f0      	bne.n	90009c88 <JPEG_Process+0x510>
      nb_bytes = 4UL - nb_bytes;
90009ca6:	f108 0804 	add.w	r8, r8, #4
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009caa:	6a62      	ldr	r2, [r4, #36]	; 0x24
90009cac:	69e1      	ldr	r1, [r4, #28]
90009cae:	4620      	mov	r0, r4
      nb_bytes = 4UL - nb_bytes;
90009cb0:	eba8 0806 	sub.w	r8, r8, r6
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009cb4:	f7f7 fdaa 	bl	9000180c <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
90009cb8:	2300      	movs	r3, #0
      for (index = nb_bytes; index < 4UL; index++)
90009cba:	f1b8 0f03 	cmp.w	r8, #3
      hjpeg->JpegOutCount = 0;
90009cbe:	6263      	str	r3, [r4, #36]	; 0x24
      for (index = nb_bytes; index < 4UL; index++)
90009cc0:	f63f ae86 	bhi.w	900099d0 <JPEG_Process+0x258>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
90009cc4:	ea4f 03c8 	mov.w	r3, r8, lsl #3
90009cc8:	6a62      	ldr	r2, [r4, #36]	; 0x24
90009cca:	69e1      	ldr	r1, [r4, #28]
      for (index = nb_bytes; index < 4UL; index++)
90009ccc:	f1b8 0f03 	cmp.w	r8, #3
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
90009cd0:	fa27 f003 	lsr.w	r0, r7, r3
90009cd4:	5488      	strb	r0, [r1, r2]
        hjpeg->JpegOutCount++;
90009cd6:	6a62      	ldr	r2, [r4, #36]	; 0x24
90009cd8:	f102 0201 	add.w	r2, r2, #1
90009cdc:	6262      	str	r2, [r4, #36]	; 0x24
      for (index = nb_bytes; index < 4UL; index++)
90009cde:	f43f ae77 	beq.w	900099d0 <JPEG_Process+0x258>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
90009ce2:	f103 0208 	add.w	r2, r3, #8
90009ce6:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009ce8:	69e0      	ldr	r0, [r4, #28]
      for (index = nb_bytes; index < 4UL; index++)
90009cea:	f1b8 0f02 	cmp.w	r8, #2
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
90009cee:	fa27 f202 	lsr.w	r2, r7, r2
90009cf2:	5442      	strb	r2, [r0, r1]
        hjpeg->JpegOutCount++;
90009cf4:	6a62      	ldr	r2, [r4, #36]	; 0x24
90009cf6:	f102 0201 	add.w	r2, r2, #1
90009cfa:	6262      	str	r2, [r4, #36]	; 0x24
      for (index = nb_bytes; index < 4UL; index++)
90009cfc:	f108 0202 	add.w	r2, r8, #2
90009d00:	f43f ae66 	beq.w	900099d0 <JPEG_Process+0x258>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
90009d04:	3310      	adds	r3, #16
90009d06:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009d08:	69e0      	ldr	r0, [r4, #28]
      for (index = nb_bytes; index < 4UL; index++)
90009d0a:	2a02      	cmp	r2, #2
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
90009d0c:	fa27 f303 	lsr.w	r3, r7, r3
90009d10:	5443      	strb	r3, [r0, r1]
        hjpeg->JpegOutCount++;
90009d12:	6a63      	ldr	r3, [r4, #36]	; 0x24
90009d14:	f103 0301 	add.w	r3, r3, #1
90009d18:	6263      	str	r3, [r4, #36]	; 0x24
      for (index = nb_bytes; index < 4UL; index++)
90009d1a:	f47f ae59 	bne.w	900099d0 <JPEG_Process+0x258>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
90009d1e:	6a63      	ldr	r3, [r4, #36]	; 0x24
90009d20:	0e3f      	lsrs	r7, r7, #24
90009d22:	69e2      	ldr	r2, [r4, #28]
90009d24:	54d7      	strb	r7, [r2, r3]
        hjpeg->JpegOutCount++;
90009d26:	6a63      	ldr	r3, [r4, #36]	; 0x24
90009d28:	3301      	adds	r3, #1
90009d2a:	6263      	str	r3, [r4, #36]	; 0x24
      for (index = nb_bytes; index < 4UL; index++)
90009d2c:	e650      	b.n	900099d0 <JPEG_Process+0x258>
  else if (hjpeg->InDataLength == hjpeg->JpegInCount)
90009d2e:	428a      	cmp	r2, r1
90009d30:	d056      	beq.n	90009de0 <JPEG_Process+0x668>
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
90009d32:	6d62      	ldr	r2, [r4, #84]	; 0x54
90009d34:	e535      	b.n	900097a2 <JPEG_Process+0x2a>
  else if (hjpeg->OutDataLength > hjpeg->JpegOutCount)
90009d36:	6a62      	ldr	r2, [r4, #36]	; 0x24
90009d38:	4295      	cmp	r5, r2
90009d3a:	f67f ad3e 	bls.w	900097ba <JPEG_Process+0x42>
    nb_words = (hjpeg->OutDataLength - hjpeg->JpegOutCount) / 4UL;
90009d3e:	6a60      	ldr	r0, [r4, #36]	; 0x24
90009d40:	1a28      	subs	r0, r5, r0
    for (index = 0; index < nb_words; index++)
90009d42:	0880      	lsrs	r0, r0, #2
90009d44:	d020      	beq.n	90009d88 <JPEG_Process+0x610>
90009d46:	4631      	mov	r1, r6
90009d48:	e000      	b.n	90009d4c <JPEG_Process+0x5d4>
      dataword = hjpeg->Instance->DOR;
90009d4a:	6823      	ldr	r3, [r4, #0]
90009d4c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
    for (index = 0; index < nb_words; index++)
90009d4e:	3101      	adds	r1, #1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009d50:	6a62      	ldr	r2, [r4, #36]	; 0x24
90009d52:	69e5      	ldr	r5, [r4, #28]
    for (index = 0; index < nb_words; index++)
90009d54:	4288      	cmp	r0, r1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009d56:	54ab      	strb	r3, [r5, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
90009d58:	6a65      	ldr	r5, [r4, #36]	; 0x24
90009d5a:	69e2      	ldr	r2, [r4, #28]
90009d5c:	442a      	add	r2, r5
90009d5e:	ea4f 2513 	mov.w	r5, r3, lsr #8
90009d62:	7055      	strb	r5, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009d64:	6a65      	ldr	r5, [r4, #36]	; 0x24
90009d66:	69e2      	ldr	r2, [r4, #28]
90009d68:	442a      	add	r2, r5
90009d6a:	ea4f 4513 	mov.w	r5, r3, lsr #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009d6e:	ea4f 6313 	mov.w	r3, r3, lsr #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009d72:	7095      	strb	r5, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009d74:	6a65      	ldr	r5, [r4, #36]	; 0x24
90009d76:	69e2      	ldr	r2, [r4, #28]
90009d78:	442a      	add	r2, r5
90009d7a:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
90009d7c:	6a63      	ldr	r3, [r4, #36]	; 0x24
90009d7e:	f103 0304 	add.w	r3, r3, #4
90009d82:	6263      	str	r3, [r4, #36]	; 0x24
    for (index = 0; index < nb_words; index++)
90009d84:	d1e1      	bne.n	90009d4a <JPEG_Process+0x5d2>
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
90009d86:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
90009d88:	6a63      	ldr	r3, [r4, #36]	; 0x24
90009d8a:	429d      	cmp	r5, r3
90009d8c:	f000 80d6 	beq.w	90009f3c <JPEG_Process+0x7c4>
      nb_bytes = hjpeg->OutDataLength - hjpeg->JpegOutCount;
90009d90:	f8d4 8024 	ldr.w	r8, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
90009d94:	6823      	ldr	r3, [r4, #0]
      for (index = 0; index < nb_bytes; index++)
90009d96:	ebb5 0008 	subs.w	r0, r5, r8
      dataword = hjpeg->Instance->DOR;
90009d9a:	6c5f      	ldr	r7, [r3, #68]	; 0x44
      for (index = 0; index < nb_bytes; index++)
90009d9c:	d00e      	beq.n	90009dbc <JPEG_Process+0x644>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
90009d9e:	f006 0303 	and.w	r3, r6, #3
90009da2:	6a62      	ldr	r2, [r4, #36]	; 0x24
90009da4:	69e1      	ldr	r1, [r4, #28]
      for (index = 0; index < nb_bytes; index++)
90009da6:	3601      	adds	r6, #1
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
90009da8:	00db      	lsls	r3, r3, #3
      for (index = 0; index < nb_bytes; index++)
90009daa:	42b0      	cmp	r0, r6
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
90009dac:	fa27 f303 	lsr.w	r3, r7, r3
90009db0:	548b      	strb	r3, [r1, r2]
        hjpeg->JpegOutCount++;
90009db2:	6a63      	ldr	r3, [r4, #36]	; 0x24
90009db4:	f103 0301 	add.w	r3, r3, #1
90009db8:	6263      	str	r3, [r4, #36]	; 0x24
      for (index = 0; index < nb_bytes; index++)
90009dba:	d1f0      	bne.n	90009d9e <JPEG_Process+0x626>
      nb_bytes = 4UL - nb_bytes;
90009dbc:	f108 0804 	add.w	r8, r8, #4
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009dc0:	6a62      	ldr	r2, [r4, #36]	; 0x24
90009dc2:	69e1      	ldr	r1, [r4, #28]
90009dc4:	4620      	mov	r0, r4
      nb_bytes = 4UL - nb_bytes;
90009dc6:	eba8 0805 	sub.w	r8, r8, r5
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009dca:	f7f7 fd1f 	bl	9000180c <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
90009dce:	2300      	movs	r3, #0
      for (index = nb_bytes; index < 4UL; index++)
90009dd0:	f1b8 0f03 	cmp.w	r8, #3
      hjpeg->JpegOutCount = 0;
90009dd4:	6263      	str	r3, [r4, #36]	; 0x24
      for (index = nb_bytes; index < 4UL; index++)
90009dd6:	f67f af75 	bls.w	90009cc4 <JPEG_Process+0x54c>
90009dda:	e5f9      	b.n	900099d0 <JPEG_Process+0x258>
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
90009ddc:	1a52      	subs	r2, r2, r1
90009dde:	e6a9      	b.n	90009b34 <JPEG_Process+0x3bc>
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
90009de0:	6a21      	ldr	r1, [r4, #32]
90009de2:	4620      	mov	r0, r4
90009de4:	f7f7 fcf2 	bl	900017cc <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength > 4UL)
90009de8:	6aa2      	ldr	r2, [r4, #40]	; 0x28
90009dea:	2a04      	cmp	r2, #4
90009dec:	d902      	bls.n	90009df4 <JPEG_Process+0x67c>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % 4UL);
90009dee:	f022 0203 	bic.w	r2, r2, #3
90009df2:	62a2      	str	r2, [r4, #40]	; 0x28
    hjpeg->JpegInCount = 0;
90009df4:	2100      	movs	r1, #0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009df6:	6823      	ldr	r3, [r4, #0]
    hjpeg->JpegInCount = 0;
90009df8:	6221      	str	r1, [r4, #32]
    nb_bytes = hjpeg->InDataLength;
90009dfa:	e5f5      	b.n	900099e8 <JPEG_Process+0x270>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
90009dfc:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
90009e00:	6562      	str	r2, [r4, #84]	; 0x54
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
90009e02:	6d62      	ldr	r2, [r4, #84]	; 0x54
90009e04:	e4cd      	b.n	900097a2 <JPEG_Process+0x2a>
      if (nb_words > 0UL)
90009e06:	2a03      	cmp	r2, #3
90009e08:	f240 80a4 	bls.w	90009f54 <JPEG_Process+0x7dc>
        for (index = 0; index < nb_words; index++)
90009e0c:	2900      	cmp	r1, #0
90009e0e:	f43f acc8 	beq.w	900097a2 <JPEG_Process+0x2a>
          input_count = hjpeg->JpegInCount;
90009e12:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
90009e14:	2901      	cmp	r1, #1
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009e16:	69a2      	ldr	r2, [r4, #24]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009e18:	eb02 0500 	add.w	r5, r2, r0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009e1c:	5c16      	ldrb	r6, [r2, r0]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009e1e:	78a8      	ldrb	r0, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009e20:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009e22:	ea4f 4000 	mov.w	r0, r0, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009e26:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009e28:	ea40 2007 	orr.w	r0, r0, r7, lsl #8
90009e2c:	ea40 0006 	orr.w	r0, r0, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009e30:	ea40 6005 	orr.w	r0, r0, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009e34:	6418      	str	r0, [r3, #64]	; 0x40
          hjpeg->JpegInCount += 4UL;
90009e36:	6a20      	ldr	r0, [r4, #32]
90009e38:	f100 0004 	add.w	r0, r0, #4
90009e3c:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
90009e3e:	f43f acb0 	beq.w	900097a2 <JPEG_Process+0x2a>
          input_count = hjpeg->JpegInCount;
90009e42:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
90009e44:	2902      	cmp	r1, #2
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009e46:	eb02 0500 	add.w	r5, r2, r0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009e4a:	5c16      	ldrb	r6, [r2, r0]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009e4c:	78a8      	ldrb	r0, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009e4e:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009e50:	ea4f 4000 	mov.w	r0, r0, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009e54:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009e56:	ea40 2007 	orr.w	r0, r0, r7, lsl #8
90009e5a:	ea40 0006 	orr.w	r0, r0, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009e5e:	ea40 6005 	orr.w	r0, r0, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009e62:	6418      	str	r0, [r3, #64]	; 0x40
          hjpeg->JpegInCount += 4UL;
90009e64:	6a20      	ldr	r0, [r4, #32]
90009e66:	f100 0004 	add.w	r0, r0, #4
90009e6a:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
90009e6c:	f43f ac99 	beq.w	900097a2 <JPEG_Process+0x2a>
          input_count = hjpeg->JpegInCount;
90009e70:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
90009e72:	2903      	cmp	r1, #3
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009e74:	eb02 0500 	add.w	r5, r2, r0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009e78:	5c16      	ldrb	r6, [r2, r0]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009e7a:	78a8      	ldrb	r0, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009e7c:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009e7e:	ea4f 4000 	mov.w	r0, r0, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009e82:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009e84:	ea40 2007 	orr.w	r0, r0, r7, lsl #8
90009e88:	ea40 0006 	orr.w	r0, r0, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009e8c:	ea40 6005 	orr.w	r0, r0, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009e90:	6418      	str	r0, [r3, #64]	; 0x40
          hjpeg->JpegInCount += 4UL;
90009e92:	6a20      	ldr	r0, [r4, #32]
90009e94:	f100 0004 	add.w	r0, r0, #4
90009e98:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
90009e9a:	f43f ac82 	beq.w	900097a2 <JPEG_Process+0x2a>
          input_count = hjpeg->JpegInCount;
90009e9e:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
90009ea0:	2904      	cmp	r1, #4
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009ea2:	eb02 0500 	add.w	r5, r2, r0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009ea6:	5c16      	ldrb	r6, [r2, r0]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009ea8:	78a8      	ldrb	r0, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009eaa:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009eac:	ea4f 4000 	mov.w	r0, r0, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009eb0:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009eb2:	ea40 2007 	orr.w	r0, r0, r7, lsl #8
90009eb6:	ea40 0006 	orr.w	r0, r0, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009eba:	ea40 6005 	orr.w	r0, r0, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009ebe:	6418      	str	r0, [r3, #64]	; 0x40
          hjpeg->JpegInCount += 4UL;
90009ec0:	6a20      	ldr	r0, [r4, #32]
90009ec2:	f100 0004 	add.w	r0, r0, #4
90009ec6:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
90009ec8:	f43f ac6b 	beq.w	900097a2 <JPEG_Process+0x2a>
          input_count = hjpeg->JpegInCount;
90009ecc:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
90009ece:	2905      	cmp	r1, #5
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009ed0:	eb02 0500 	add.w	r5, r2, r0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009ed4:	5c16      	ldrb	r6, [r2, r0]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009ed6:	78a8      	ldrb	r0, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009ed8:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009eda:	ea4f 4000 	mov.w	r0, r0, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009ede:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009ee0:	ea40 2007 	orr.w	r0, r0, r7, lsl #8
90009ee4:	ea40 0006 	orr.w	r0, r0, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009ee8:	ea40 6005 	orr.w	r0, r0, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009eec:	6418      	str	r0, [r3, #64]	; 0x40
          hjpeg->JpegInCount += 4UL;
90009eee:	6a20      	ldr	r0, [r4, #32]
90009ef0:	f100 0004 	add.w	r0, r0, #4
90009ef4:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
90009ef6:	f43f ac54 	beq.w	900097a2 <JPEG_Process+0x2a>
          input_count = hjpeg->JpegInCount;
90009efa:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
90009efc:	2907      	cmp	r1, #7
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009efe:	eb02 0500 	add.w	r5, r2, r0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009f02:	5c16      	ldrb	r6, [r2, r0]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009f04:	78a8      	ldrb	r0, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009f06:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009f08:	ea4f 4000 	mov.w	r0, r0, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009f0c:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009f0e:	ea40 2007 	orr.w	r0, r0, r7, lsl #8
90009f12:	ea40 0006 	orr.w	r0, r0, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009f16:	ea40 6005 	orr.w	r0, r0, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009f1a:	6418      	str	r0, [r3, #64]	; 0x40
          hjpeg->JpegInCount += 4UL;
90009f1c:	6a20      	ldr	r0, [r4, #32]
90009f1e:	f100 0004 	add.w	r0, r0, #4
90009f22:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
90009f24:	f47f ac3d 	bne.w	900097a2 <JPEG_Process+0x2a>
          input_count = hjpeg->JpegInCount;
90009f28:	6a20      	ldr	r0, [r4, #32]
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009f2a:	e5db      	b.n	90009ae4 <JPEG_Process+0x36c>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009f2c:	6a62      	ldr	r2, [r4, #36]	; 0x24
90009f2e:	4620      	mov	r0, r4
90009f30:	69e1      	ldr	r1, [r4, #28]
90009f32:	f7f7 fc6b 	bl	9000180c <HAL_JPEG_DataReadyCallback>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
90009f36:	6823      	ldr	r3, [r4, #0]
      hjpeg->JpegOutCount = 0;
90009f38:	6265      	str	r5, [r4, #36]	; 0x24
90009f3a:	e43e      	b.n	900097ba <JPEG_Process+0x42>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009f3c:	6a62      	ldr	r2, [r4, #36]	; 0x24
90009f3e:	4620      	mov	r0, r4
90009f40:	69e1      	ldr	r1, [r4, #28]
90009f42:	f7f7 fc63 	bl	9000180c <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
90009f46:	2200      	movs	r2, #0
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
90009f48:	6823      	ldr	r3, [r4, #0]
      hjpeg->JpegOutCount = 0;
90009f4a:	6262      	str	r2, [r4, #36]	; 0x24
90009f4c:	e435      	b.n	900097ba <JPEG_Process+0x42>
        input_count = hjpeg->JpegInCount;
90009f4e:	6a22      	ldr	r2, [r4, #32]
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009f50:	69a0      	ldr	r0, [r4, #24]
90009f52:	e5c7      	b.n	90009ae4 <JPEG_Process+0x36c>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
90009f54:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
90009f56:	2a01      	cmp	r2, #1
          hjpeg->JpegInCount++;
90009f58:	6a20      	ldr	r0, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
90009f5a:	69a5      	ldr	r5, [r4, #24]
          hjpeg->JpegInCount++;
90009f5c:	f100 0001 	add.w	r0, r0, #1
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
90009f60:	5c69      	ldrb	r1, [r5, r1]
          hjpeg->JpegInCount++;
90009f62:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
90009f64:	d010      	beq.n	90009f88 <JPEG_Process+0x810>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
90009f66:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
90009f68:	2a03      	cmp	r2, #3
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
90009f6a:	5c28      	ldrb	r0, [r5, r0]
90009f6c:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
          hjpeg->JpegInCount++;
90009f70:	6a20      	ldr	r0, [r4, #32]
90009f72:	f100 0001 	add.w	r0, r0, #1
90009f76:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
90009f78:	d106      	bne.n	90009f88 <JPEG_Process+0x810>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
90009f7a:	6a22      	ldr	r2, [r4, #32]
90009f7c:	5ca8      	ldrb	r0, [r5, r2]
          hjpeg->JpegInCount++;
90009f7e:	6a22      	ldr	r2, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
90009f80:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
          hjpeg->JpegInCount++;
90009f84:	3201      	adds	r2, #1
90009f86:	6222      	str	r2, [r4, #32]
        hjpeg->Instance->DIR = dataword;
90009f88:	6419      	str	r1, [r3, #64]	; 0x40
90009f8a:	e40a      	b.n	900097a2 <JPEG_Process+0x2a>

90009f8c <HAL_JPEG_IRQHandler>:
  switch (hjpeg->State)
90009f8c:	f890 304d 	ldrb.w	r3, [r0, #77]	; 0x4d
90009f90:	3b03      	subs	r3, #3
90009f92:	2b01      	cmp	r3, #1
90009f94:	d900      	bls.n	90009f98 <HAL_JPEG_IRQHandler+0xc>
90009f96:	4770      	bx	lr
      if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
90009f98:	6d43      	ldr	r3, [r0, #84]	; 0x54
90009f9a:	f003 030c 	and.w	r3, r3, #12
90009f9e:	2b08      	cmp	r3, #8
{
90009fa0:	b530      	push	{r4, r5, lr}
90009fa2:	4604      	mov	r4, r0
90009fa4:	b083      	sub	sp, #12
      if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
90009fa6:	d006      	beq.n	90009fb6 <HAL_JPEG_IRQHandler+0x2a>
      else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
90009fa8:	6d43      	ldr	r3, [r0, #84]	; 0x54
90009faa:	f003 030c 	and.w	r3, r3, #12
90009fae:	2b0c      	cmp	r3, #12
90009fb0:	d006      	beq.n	90009fc0 <HAL_JPEG_IRQHandler+0x34>
}
90009fb2:	b003      	add	sp, #12
90009fb4:	bd30      	pop	{r4, r5, pc}
90009fb6:	b003      	add	sp, #12
90009fb8:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
        (void) JPEG_Process(hjpeg);
90009fbc:	f7ff bbdc 	b.w	90009778 <JPEG_Process>
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009fc0:	6d43      	ldr	r3, [r0, #84]	; 0x54
90009fc2:	f003 0303 	and.w	r3, r3, #3
90009fc6:	2b02      	cmp	r3, #2
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
90009fc8:	6803      	ldr	r3, [r0, #0]
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009fca:	d045      	beq.n	9000a058 <HAL_JPEG_IRQHandler+0xcc>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF) != 0UL)
90009fcc:	6b5a      	ldr	r2, [r3, #52]	; 0x34
90009fce:	0692      	lsls	r2, r2, #26
90009fd0:	d5ef      	bpl.n	90009fb2 <HAL_JPEG_IRQHandler+0x26>
    hjpeg->Context |= JPEG_CONTEXT_ENDING_DMA;
90009fd2:	6d62      	ldr	r2, [r4, #84]	; 0x54
    if (hjpeg->hdmain->State == HAL_MDMA_STATE_BUSY)
90009fd4:	6b20      	ldr	r0, [r4, #48]	; 0x30
    hjpeg->Context |= JPEG_CONTEXT_ENDING_DMA;
90009fd6:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
90009fda:	6562      	str	r2, [r4, #84]	; 0x54
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90009fdc:	681a      	ldr	r2, [r3, #0]
90009fde:	f022 0201 	bic.w	r2, r2, #1
90009fe2:	601a      	str	r2, [r3, #0]
    __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
90009fe4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
90009fe6:	f022 027e 	bic.w	r2, r2, #126	; 0x7e
90009fea:	631a      	str	r2, [r3, #48]	; 0x30
    __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
90009fec:	6b9a      	ldr	r2, [r3, #56]	; 0x38
90009fee:	f042 0260 	orr.w	r2, r2, #96	; 0x60
90009ff2:	639a      	str	r2, [r3, #56]	; 0x38
    if (hjpeg->hdmain->State == HAL_MDMA_STATE_BUSY)
90009ff4:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
90009ff8:	2b02      	cmp	r3, #2
90009ffa:	d052      	beq.n	9000a0a2 <HAL_JPEG_IRQHandler+0x116>
    if (hjpeg->hdmaout->State == HAL_MDMA_STATE_BUSY)
90009ffc:	6b60      	ldr	r0, [r4, #52]	; 0x34
90009ffe:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
9000a002:	2b02      	cmp	r3, #2
9000a004:	d03f      	beq.n	9000a086 <HAL_JPEG_IRQHandler+0xfa>
  hjpeg->JpegOutCount = hjpeg->OutDataLength - (hjpeg->hdmaout->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000a006:	6803      	ldr	r3, [r0, #0]
9000a008:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000a00a:	695b      	ldr	r3, [r3, #20]
9000a00c:	f3c3 0310 	ubfx	r3, r3, #0, #17
9000a010:	1ad3      	subs	r3, r2, r3
9000a012:	6263      	str	r3, [r4, #36]	; 0x24
  if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
9000a014:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000a016:	429a      	cmp	r2, r3
9000a018:	d046      	beq.n	9000a0a8 <HAL_JPEG_IRQHandler+0x11c>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL)
9000a01a:	6822      	ldr	r2, [r4, #0]
9000a01c:	6b55      	ldr	r5, [r2, #52]	; 0x34
9000a01e:	f015 0510 	ands.w	r5, r5, #16
9000a022:	d135      	bne.n	9000a090 <HAL_JPEG_IRQHandler+0x104>
    if (hjpeg->JpegOutCount > 0UL)
9000a024:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000a026:	2b00      	cmp	r3, #0
9000a028:	d149      	bne.n	9000a0be <HAL_JPEG_IRQHandler+0x132>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000a02a:	6813      	ldr	r3, [r2, #0]
    __HAL_UNLOCK(hjpeg);
9000a02c:	2000      	movs	r0, #0
    hjpeg->State = HAL_JPEG_STATE_READY;
9000a02e:	2101      	movs	r1, #1
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000a030:	f023 0301 	bic.w	r3, r3, #1
9000a034:	6013      	str	r3, [r2, #0]
    tmpContext = hjpeg->Context;
9000a036:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000a038:	6d62      	ldr	r2, [r4, #84]	; 0x54
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a03a:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
9000a03e:	f884 004c 	strb.w	r0, [r4, #76]	; 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000a042:	f402 4282 	and.w	r2, r2, #16640	; 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000a046:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a048:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000a04a:	6562      	str	r2, [r4, #84]	; 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000a04c:	f884 104d 	strb.w	r1, [r4, #77]	; 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a050:	d032      	beq.n	9000a0b8 <HAL_JPEG_IRQHandler+0x12c>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
9000a052:	f7ff f9c9 	bl	900093e8 <HAL_JPEG_EncodeCpltCallback>
9000a056:	e7ac      	b.n	90009fb2 <HAL_JPEG_IRQHandler+0x26>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
9000a058:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000a05a:	0651      	lsls	r1, r2, #25
9000a05c:	d5b6      	bpl.n	90009fcc <HAL_JPEG_IRQHandler+0x40>
      (void) HAL_JPEG_GetInfo(hjpeg, &hjpeg->Conf);
9000a05e:	1d01      	adds	r1, r0, #4
  if ((hjpeg == NULL) || (pInfo == NULL))
9000a060:	9101      	str	r1, [sp, #4]
9000a062:	f7fe ff33 	bl	90008ecc <HAL_JPEG_GetInfo.part.0>
      hjpeg->Conf.ImageQuality = 0;
9000a066:	2300      	movs	r3, #0
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
9000a068:	9901      	ldr	r1, [sp, #4]
9000a06a:	4620      	mov	r0, r4
      hjpeg->Conf.ImageQuality = 0;
9000a06c:	6163      	str	r3, [r4, #20]
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
9000a06e:	f7f7 fb77 	bl	90001760 <HAL_JPEG_InfoReadyCallback>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_IT_HPD);
9000a072:	6823      	ldr	r3, [r4, #0]
9000a074:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000a076:	f022 0240 	bic.w	r2, r2, #64	; 0x40
9000a07a:	631a      	str	r2, [r3, #48]	; 0x30
      __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_HPDF);
9000a07c:	6b9a      	ldr	r2, [r3, #56]	; 0x38
9000a07e:	f042 0240 	orr.w	r2, r2, #64	; 0x40
9000a082:	639a      	str	r2, [r3, #56]	; 0x38
9000a084:	e7a2      	b.n	90009fcc <HAL_JPEG_IRQHandler+0x40>
}
9000a086:	b003      	add	sp, #12
9000a088:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
      (void) HAL_MDMA_Abort_IT(hjpeg->hdmaout);
9000a08c:	f000 bb30 	b.w	9000a6f0 <HAL_MDMA_Abort_IT>
  else if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000a090:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000a092:	049b      	lsls	r3, r3, #18
9000a094:	d48d      	bmi.n	90009fb2 <HAL_JPEG_IRQHandler+0x26>
    JPEG_DMA_PollResidualData(hjpeg);
9000a096:	4620      	mov	r0, r4
}
9000a098:	b003      	add	sp, #12
9000a09a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
    JPEG_DMA_PollResidualData(hjpeg);
9000a09e:	f7ff ba0f 	b.w	900094c0 <JPEG_DMA_PollResidualData>
      (void) HAL_MDMA_Abort_IT(hjpeg->hdmain);
9000a0a2:	f000 fb25 	bl	9000a6f0 <HAL_MDMA_Abort_IT>
9000a0a6:	e7a9      	b.n	90009ffc <HAL_JPEG_IRQHandler+0x70>
    HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a0a8:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000a0aa:	4620      	mov	r0, r4
9000a0ac:	69e1      	ldr	r1, [r4, #28]
9000a0ae:	f7f7 fbad 	bl	9000180c <HAL_JPEG_DataReadyCallback>
    hjpeg->JpegOutCount = 0;
9000a0b2:	2300      	movs	r3, #0
9000a0b4:	6263      	str	r3, [r4, #36]	; 0x24
9000a0b6:	e7b0      	b.n	9000a01a <HAL_JPEG_IRQHandler+0x8e>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000a0b8:	f7f7 fbfe 	bl	900018b8 <HAL_JPEG_DecodeCpltCallback>
9000a0bc:	e779      	b.n	90009fb2 <HAL_JPEG_IRQHandler+0x26>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a0be:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000a0c0:	4620      	mov	r0, r4
9000a0c2:	69e1      	ldr	r1, [r4, #28]
9000a0c4:	f7f7 fba2 	bl	9000180c <HAL_JPEG_DataReadyCallback>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000a0c8:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000a0ca:	6265      	str	r5, [r4, #36]	; 0x24
9000a0cc:	e7ad      	b.n	9000a02a <HAL_JPEG_IRQHandler+0x9e>
9000a0ce:	bf00      	nop

9000a0d0 <HAL_LTDC_Init>:
{
  uint32_t tmp;
  uint32_t tmp1;

  /* Check the LTDC peripheral state */
  if (hltdc == NULL)
9000a0d0:	2800      	cmp	r0, #0
9000a0d2:	d067      	beq.n	9000a1a4 <HAL_LTDC_Init+0xd4>
{
9000a0d4:	b538      	push	{r3, r4, r5, lr}
    }
    /* Init the low level hardware */
    hltdc->MspInitCallback(hltdc);
  }
#else
  if (hltdc->State == HAL_LTDC_STATE_RESET)
9000a0d6:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
9000a0da:	4604      	mov	r4, r0
9000a0dc:	f003 02ff 	and.w	r2, r3, #255	; 0xff
9000a0e0:	2b00      	cmp	r3, #0
9000a0e2:	d05a      	beq.n	9000a19a <HAL_LTDC_Init+0xca>
  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;

  /* Configure the HS, VS, DE and PC polarity */
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000a0e4:	68a0      	ldr	r0, [r4, #8]
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000a0e6:	2102      	movs	r1, #2
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000a0e8:	e9d4 3200 	ldrd	r3, r2, [r4]
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000a0ec:	f884 10a1 	strb.w	r1, [r4, #161]	; 0xa1
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000a0f0:	4302      	orrs	r2, r0
9000a0f2:	68e1      	ldr	r1, [r4, #12]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
9000a0f4:	6998      	ldr	r0, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000a0f6:	430a      	orrs	r2, r1
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
9000a0f8:	6921      	ldr	r1, [r4, #16]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
9000a0fa:	f020 4070 	bic.w	r0, r0, #4026531840	; 0xf0000000
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
9000a0fe:	430a      	orrs	r2, r1

  /* Set Synchronization size */
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
9000a100:	4929      	ldr	r1, [pc, #164]	; (9000a1a8 <HAL_LTDC_Init+0xd8>)
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
9000a102:	6198      	str	r0, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000a104:	6998      	ldr	r0, [r3, #24]
9000a106:	4302      	orrs	r2, r0
  tmp = (hltdc->Init.HorizontalSync << 16U);
9000a108:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000a10a:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
9000a10c:	689a      	ldr	r2, [r3, #8]
9000a10e:	400a      	ands	r2, r1
9000a110:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
9000a112:	689a      	ldr	r2, [r3, #8]
9000a114:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
9000a118:	69a0      	ldr	r0, [r4, #24]
9000a11a:	4302      	orrs	r2, r0

  /* Set Accumulated Back porch */
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
9000a11c:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
9000a11e:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
9000a120:	68da      	ldr	r2, [r3, #12]
9000a122:	400a      	ands	r2, r1
9000a124:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
9000a126:	68da      	ldr	r2, [r3, #12]
9000a128:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
9000a12c:	6a20      	ldr	r0, [r4, #32]
9000a12e:	4302      	orrs	r2, r0

  /* Set Accumulated Active Width */
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
9000a130:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
9000a132:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
9000a134:	691a      	ldr	r2, [r3, #16]
9000a136:	400a      	ands	r2, r1
9000a138:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
9000a13a:	691a      	ldr	r2, [r3, #16]
9000a13c:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
9000a140:	6aa0      	ldr	r0, [r4, #40]	; 0x28
9000a142:	4302      	orrs	r2, r0

  /* Set Total Width */
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
  tmp = (hltdc->Init.TotalWidth << 16U);
9000a144:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
9000a146:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
9000a148:	695a      	ldr	r2, [r3, #20]
9000a14a:	400a      	ands	r2, r1
9000a14c:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
9000a14e:	695a      	ldr	r2, [r3, #20]
9000a150:	6b21      	ldr	r1, [r4, #48]	; 0x30
9000a152:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
9000a156:	430a      	orrs	r2, r1
9000a158:	615a      	str	r2, [r3, #20]

  /* Set the background color value */
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
9000a15a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
9000a15c:	f894 0035 	ldrb.w	r0, [r4, #53]	; 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
9000a160:	f002 427f 	and.w	r2, r2, #4278190080	; 0xff000000
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
9000a164:	f894 1036 	ldrb.w	r1, [r4, #54]	; 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
9000a168:	62da      	str	r2, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
9000a16a:	6add      	ldr	r5, [r3, #44]	; 0x2c
9000a16c:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
9000a170:	432a      	orrs	r2, r5
9000a172:	ea42 2200 	orr.w	r2, r2, r0, lsl #8

  /* Enable LTDC by setting LTDCEN bit */
  __HAL_LTDC_ENABLE(hltdc);

  /* Initialize the error code */
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
9000a176:	2000      	movs	r0, #0
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
9000a178:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
9000a17c:	62da      	str	r2, [r3, #44]	; 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
9000a17e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000a180:	f042 0206 	orr.w	r2, r2, #6
9000a184:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_LTDC_ENABLE(hltdc);
9000a186:	699a      	ldr	r2, [r3, #24]
9000a188:	f042 0201 	orr.w	r2, r2, #1
9000a18c:	619a      	str	r2, [r3, #24]

  /* Initialize the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
9000a18e:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
9000a190:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
9000a194:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1

  return HAL_OK;
}
9000a198:	bd38      	pop	{r3, r4, r5, pc}
    hltdc->Lock = HAL_UNLOCKED;
9000a19a:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
9000a19e:	f7f9 f8f5 	bl	9000338c <HAL_LTDC_MspInit>
9000a1a2:	e79f      	b.n	9000a0e4 <HAL_LTDC_Init+0x14>
    return HAL_ERROR;
9000a1a4:	2001      	movs	r0, #1
}
9000a1a6:	4770      	bx	lr
9000a1a8:	f000f800 	.word	0xf000f800

9000a1ac <HAL_LTDC_ErrorCallback>:
9000a1ac:	4770      	bx	lr
9000a1ae:	bf00      	nop

9000a1b0 <HAL_LTDC_ReloadEventCallback>:
9000a1b0:	4770      	bx	lr
9000a1b2:	bf00      	nop

9000a1b4 <HAL_LTDC_IRQHandler>:
  *                the configuration information for the LTDC.
  * @retval HAL status
  */
void HAL_LTDC_IRQHandler(LTDC_HandleTypeDef *hltdc)
{
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
9000a1b4:	6803      	ldr	r3, [r0, #0]
{
9000a1b6:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
9000a1b8:	6b9d      	ldr	r5, [r3, #56]	; 0x38
{
9000a1ba:	4604      	mov	r4, r0
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
9000a1bc:	6b5e      	ldr	r6, [r3, #52]	; 0x34

  /* Transfer Error Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
9000a1be:	076a      	lsls	r2, r5, #29
9000a1c0:	d501      	bpl.n	9000a1c6 <HAL_LTDC_IRQHandler+0x12>
9000a1c2:	0771      	lsls	r1, r6, #29
9000a1c4:	d41d      	bmi.n	9000a202 <HAL_LTDC_IRQHandler+0x4e>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* FIFO underrun Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
9000a1c6:	07aa      	lsls	r2, r5, #30
9000a1c8:	d501      	bpl.n	9000a1ce <HAL_LTDC_IRQHandler+0x1a>
9000a1ca:	07b3      	lsls	r3, r6, #30
9000a1cc:	d42d      	bmi.n	9000a22a <HAL_LTDC_IRQHandler+0x76>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Line Interrupt management ************************************************/
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
9000a1ce:	07e8      	lsls	r0, r5, #31
9000a1d0:	d501      	bpl.n	9000a1d6 <HAL_LTDC_IRQHandler+0x22>
9000a1d2:	07f1      	lsls	r1, r6, #31
9000a1d4:	d440      	bmi.n	9000a258 <HAL_LTDC_IRQHandler+0xa4>
    HAL_LTDC_LineEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Register reload Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
9000a1d6:	072a      	lsls	r2, r5, #28
9000a1d8:	d501      	bpl.n	9000a1de <HAL_LTDC_IRQHandler+0x2a>
9000a1da:	0733      	lsls	r3, r6, #28
9000a1dc:	d400      	bmi.n	9000a1e0 <HAL_LTDC_IRQHandler+0x2c>
#else
    /*Call Legacy Reload Event callback */
    HAL_LTDC_ReloadEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }
}
9000a1de:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
9000a1e0:	6823      	ldr	r3, [r4, #0]
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
9000a1e2:	2008      	movs	r0, #8
    hltdc->State = HAL_LTDC_STATE_READY;
9000a1e4:	2501      	movs	r5, #1
    __HAL_UNLOCK(hltdc);
9000a1e6:	2100      	movs	r1, #0
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
9000a1e8:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000a1ea:	f022 0208 	bic.w	r2, r2, #8
9000a1ee:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
9000a1f0:	63d8      	str	r0, [r3, #60]	; 0x3c
    HAL_LTDC_ReloadEventCallback(hltdc);
9000a1f2:	4620      	mov	r0, r4
    hltdc->State = HAL_LTDC_STATE_READY;
9000a1f4:	f884 50a1 	strb.w	r5, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
9000a1f8:	f884 10a0 	strb.w	r1, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
9000a1fc:	f7ff ffd8 	bl	9000a1b0 <HAL_LTDC_ReloadEventCallback>
}
9000a200:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
9000a202:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000a204:	f022 0204 	bic.w	r2, r2, #4
9000a208:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
9000a20a:	2204      	movs	r2, #4
9000a20c:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
9000a20e:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
9000a212:	f043 0301 	orr.w	r3, r3, #1
9000a216:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
9000a21a:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
9000a21c:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
9000a220:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
9000a224:	f7ff ffc2 	bl	9000a1ac <HAL_LTDC_ErrorCallback>
9000a228:	e7cd      	b.n	9000a1c6 <HAL_LTDC_IRQHandler+0x12>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
9000a22a:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_ErrorCallback(hltdc);
9000a22c:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
9000a22e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000a230:	f022 0202 	bic.w	r2, r2, #2
9000a234:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
9000a236:	2202      	movs	r2, #2
9000a238:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->State = HAL_LTDC_STATE_ERROR;
9000a23a:	2204      	movs	r2, #4
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
9000a23c:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
9000a240:	f043 0302 	orr.w	r3, r3, #2
9000a244:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
9000a248:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
9000a24a:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
9000a24e:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
9000a252:	f7ff ffab 	bl	9000a1ac <HAL_LTDC_ErrorCallback>
9000a256:	e7ba      	b.n	9000a1ce <HAL_LTDC_IRQHandler+0x1a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000a258:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_LineEventCallback(hltdc);
9000a25a:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000a25c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000a25e:	f022 0201 	bic.w	r2, r2, #1
9000a262:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
9000a264:	2201      	movs	r2, #1
9000a266:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
9000a268:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
9000a26a:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
9000a26e:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
9000a272:	f7f8 fb81 	bl	90002978 <HAL_LTDC_LineEventCallback>
9000a276:	e7ae      	b.n	9000a1d6 <HAL_LTDC_IRQHandler+0x22>

9000a278 <HAL_LTDC_ConfigLayer>:
  assert_param(IS_LTDC_BLENDING_FACTOR2(pLayerCfg->BlendingFactor2));
  assert_param(IS_LTDC_CFBLL(pLayerCfg->ImageWidth));
  assert_param(IS_LTDC_CFBLNBR(pLayerCfg->ImageHeight));

  /* Process locked */
  __HAL_LOCK(hltdc);
9000a278:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
9000a27c:	2b01      	cmp	r3, #1
9000a27e:	f000 80c0 	beq.w	9000a402 <HAL_LTDC_ConfigLayer+0x18a>

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000a282:	2302      	movs	r3, #2
{
9000a284:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

  /* Copy new layer configuration into handle structure */
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000a288:	f04f 0e34 	mov.w	lr, #52	; 0x34
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000a28c:	f8d0 9000 	ldr.w	r9, [r0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000a290:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
{
9000a294:	b083      	sub	sp, #12
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000a296:	fb0e 0e02 	mla	lr, lr, r2, r0
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000a29a:	01d2      	lsls	r2, r2, #7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000a29c:	f8d9 300c 	ldr.w	r3, [r9, #12]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000a2a0:	460c      	mov	r4, r1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000a2a2:	f102 0684 	add.w	r6, r2, #132	; 0x84
9000a2a6:	460d      	mov	r5, r1
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000a2a8:	f3c3 4b0b 	ubfx	fp, r3, #16, #12
9000a2ac:	4680      	mov	r8, r0
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000a2ae:	eb09 0c06 	add.w	ip, r9, r6
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000a2b2:	f10e 0e38 	add.w	lr, lr, #56	; 0x38
  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000a2b6:	f8df a160 	ldr.w	sl, [pc, #352]	; 9000a418 <HAL_LTDC_ConfigLayer+0x1a0>
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000a2ba:	f8dc 3004 	ldr.w	r3, [ip, #4]
9000a2be:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
9000a2c2:	9301      	str	r3, [sp, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000a2c4:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
9000a2c6:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
9000a2ca:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000a2cc:	686f      	ldr	r7, [r5, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000a2ce:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
9000a2d2:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
9000a2d4:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
9000a2d8:	6823      	ldr	r3, [r4, #0]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000a2da:	44bb      	add	fp, r7
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000a2dc:	f8ce 3000 	str.w	r3, [lr]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000a2e0:	9b01      	ldr	r3, [sp, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
9000a2e2:	682a      	ldr	r2, [r5, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000a2e4:	f8cc 3004 	str.w	r3, [ip, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
9000a2e8:	f8d9 300c 	ldr.w	r3, [r9, #12]
9000a2ec:	1c51      	adds	r1, r2, #1
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000a2ee:	68e8      	ldr	r0, [r5, #12]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
9000a2f0:	f3c3 430b 	ubfx	r3, r3, #16, #12
  tmp2 = (pLayerCfg->Alpha0 << 24U);
9000a2f4:	f8d5 e018 	ldr.w	lr, [r5, #24]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
9000a2f8:	440b      	add	r3, r1
9000a2fa:	ea43 430b 	orr.w	r3, r3, fp, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
9000a2fe:	f8cc 3004 	str.w	r3, [ip, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000a302:	f8d9 100c 	ldr.w	r1, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
9000a306:	f8dc 3008 	ldr.w	r3, [ip, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000a30a:	f3c1 010a 	ubfx	r1, r1, #0, #11
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
9000a30e:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000a312:	4401      	add	r1, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
9000a314:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
9000a318:	68ab      	ldr	r3, [r5, #8]
9000a31a:	f8d9 000c 	ldr.w	r0, [r9, #12]
9000a31e:	3301      	adds	r3, #1
9000a320:	f3c0 000a 	ubfx	r0, r0, #0, #11
9000a324:	4403      	add	r3, r0
9000a326:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
9000a32a:	6929      	ldr	r1, [r5, #16]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
9000a32c:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
9000a330:	f8dc 3010 	ldr.w	r3, [ip, #16]
9000a334:	f023 0307 	bic.w	r3, r3, #7
9000a338:	f8cc 3010 	str.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
9000a33c:	f8cc 1010 	str.w	r1, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
9000a340:	f8dc 3018 	ldr.w	r3, [ip, #24]
9000a344:	2300      	movs	r3, #0
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
9000a346:	f895 0032 	ldrb.w	r0, [r5, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
9000a34a:	f895 4031 	ldrb.w	r4, [r5, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
9000a34e:	f8cc 3018 	str.w	r3, [ip, #24]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
9000a352:	f895 3030 	ldrb.w	r3, [r5, #48]	; 0x30
9000a356:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
9000a35a:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
9000a35e:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
9000a362:	f8cc 3018 	str.w	r3, [ip, #24]
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
9000a366:	f8dc 3014 	ldr.w	r3, [ip, #20]
9000a36a:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
9000a36e:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
9000a372:	696b      	ldr	r3, [r5, #20]
9000a374:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000a378:	f8dc 001c 	ldr.w	r0, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
9000a37c:	69eb      	ldr	r3, [r5, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000a37e:	ea00 0a0a 	and.w	sl, r0, sl
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
9000a382:	6a28      	ldr	r0, [r5, #32]
9000a384:	4303      	orrs	r3, r0
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000a386:	f8cc a01c 	str.w	sl, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
9000a38a:	f8cc 301c 	str.w	r3, [ip, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
9000a38e:	f8dc 3028 	ldr.w	r3, [ip, #40]	; 0x28
9000a392:	2300      	movs	r3, #0
9000a394:	f8cc 3028 	str.w	r3, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
9000a398:	6a6b      	ldr	r3, [r5, #36]	; 0x24
9000a39a:	f8cc 3028 	str.w	r3, [ip, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
9000a39e:	bb59      	cbnz	r1, 9000a3f8 <HAL_LTDC_ConfigLayer+0x180>
  {
    tmp = 4U;
9000a3a0:	2304      	movs	r3, #4
    tmp = 1U;
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
9000a3a2:	1abf      	subs	r7, r7, r2
9000a3a4:	6aaa      	ldr	r2, [r5, #40]	; 0x28
9000a3a6:	fb03 f707 	mul.w	r7, r3, r7
9000a3aa:	fb02 f303 	mul.w	r3, r2, r3
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
9000a3ae:	6aea      	ldr	r2, [r5, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
9000a3b0:	3707      	adds	r7, #7
9000a3b2:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
9000a3b6:	f8dc 302c 	ldr.w	r3, [ip, #44]	; 0x2c
9000a3ba:	f003 23e0 	and.w	r3, r3, #3758153728	; 0xe000e000
9000a3be:	f8cc 302c 	str.w	r3, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
9000a3c2:	f8cc 702c 	str.w	r7, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
9000a3c6:	4b12      	ldr	r3, [pc, #72]	; (9000a410 <HAL_LTDC_ConfigLayer+0x198>)
9000a3c8:	f8dc 1030 	ldr.w	r1, [ip, #48]	; 0x30
9000a3cc:	400b      	ands	r3, r1
9000a3ce:	f8cc 3030 	str.w	r3, [ip, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
9000a3d2:	f8cc 2030 	str.w	r2, [ip, #48]	; 0x30
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
9000a3d6:	2201      	movs	r2, #1

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
9000a3d8:	f859 3006 	ldr.w	r3, [r9, r6]
9000a3dc:	4313      	orrs	r3, r2
9000a3de:	f849 3006 	str.w	r3, [r9, r6]
  __HAL_UNLOCK(hltdc);
9000a3e2:	2300      	movs	r3, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
9000a3e4:	f8c9 2024 	str.w	r2, [r9, #36]	; 0x24
  return HAL_OK;
9000a3e8:	4618      	mov	r0, r3
  hltdc->State  = HAL_LTDC_STATE_READY;
9000a3ea:	f888 20a1 	strb.w	r2, [r8, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
9000a3ee:	f888 30a0 	strb.w	r3, [r8, #160]	; 0xa0
}
9000a3f2:	b003      	add	sp, #12
9000a3f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
9000a3f8:	3901      	subs	r1, #1
9000a3fa:	2906      	cmp	r1, #6
9000a3fc:	d903      	bls.n	9000a406 <HAL_LTDC_ConfigLayer+0x18e>
  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
9000a3fe:	2301      	movs	r3, #1
9000a400:	e7cf      	b.n	9000a3a2 <HAL_LTDC_ConfigLayer+0x12a>
  __HAL_LOCK(hltdc);
9000a402:	2002      	movs	r0, #2
}
9000a404:	4770      	bx	lr
9000a406:	4b03      	ldr	r3, [pc, #12]	; (9000a414 <HAL_LTDC_ConfigLayer+0x19c>)
9000a408:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
9000a40c:	e7c9      	b.n	9000a3a2 <HAL_LTDC_ConfigLayer+0x12a>
9000a40e:	bf00      	nop
9000a410:	fffff800 	.word	0xfffff800
9000a414:	90029da4 	.word	0x90029da4
9000a418:	fffff8f8 	.word	0xfffff8f8

9000a41c <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
9000a41c:	f890 20a0 	ldrb.w	r2, [r0, #160]	; 0xa0
9000a420:	2a01      	cmp	r2, #1
9000a422:	d019      	beq.n	9000a458 <HAL_LTDC_ProgramLineEvent+0x3c>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000a424:	6802      	ldr	r2, [r0, #0]
9000a426:	4603      	mov	r3, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000a428:	2002      	movs	r0, #2
  __HAL_UNLOCK(hltdc);
9000a42a:	f04f 0c00 	mov.w	ip, #0
{
9000a42e:	b410      	push	{r4}
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000a430:	f883 00a1 	strb.w	r0, [r3, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000a434:	6b50      	ldr	r0, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
9000a436:	4c09      	ldr	r4, [pc, #36]	; (9000a45c <HAL_LTDC_ProgramLineEvent+0x40>)
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000a438:	f020 0001 	bic.w	r0, r0, #1
9000a43c:	6350      	str	r0, [r2, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
9000a43e:	2001      	movs	r0, #1
  LTDC->LIPCR = (uint32_t)Line;
9000a440:	6421      	str	r1, [r4, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
9000a442:	6b51      	ldr	r1, [r2, #52]	; 0x34
9000a444:	4301      	orrs	r1, r0
9000a446:	6351      	str	r1, [r2, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
9000a448:	f883 00a1 	strb.w	r0, [r3, #161]	; 0xa1
  return HAL_OK;
9000a44c:	4660      	mov	r0, ip
  __HAL_UNLOCK(hltdc);
9000a44e:	f883 c0a0 	strb.w	ip, [r3, #160]	; 0xa0
}
9000a452:	f85d 4b04 	ldr.w	r4, [sp], #4
9000a456:	4770      	bx	lr
  __HAL_LOCK(hltdc);
9000a458:	2002      	movs	r0, #2
}
9000a45a:	4770      	bx	lr
9000a45c:	50001000 	.word	0x50001000

9000a460 <HAL_MDMA_Init>:
  * @param  hmdma: Pointer to a MDMA_HandleTypeDef structure that contains
  *               the configuration information for the specified MDMA Channel.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_MDMA_Init(MDMA_HandleTypeDef *hmdma)
{
9000a460:	b538      	push	{r3, r4, r5, lr}
9000a462:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
9000a464:	f7fd f984 	bl	90007770 <HAL_GetTick>

  /* Check the MDMA peripheral handle */
  if(hmdma == NULL)
9000a468:	2c00      	cmp	r4, #0
9000a46a:	d05a      	beq.n	9000a522 <HAL_MDMA_Init+0xc2>

  /* Change MDMA peripheral state */
  hmdma->State = HAL_MDMA_STATE_BUSY;

  /* Disable the MDMA channel */
  __HAL_MDMA_DISABLE(hmdma);
9000a46c:	6823      	ldr	r3, [r4, #0]
  hmdma->State = HAL_MDMA_STATE_BUSY;
9000a46e:	2202      	movs	r2, #2
  __HAL_UNLOCK(hmdma);
9000a470:	2100      	movs	r1, #0
9000a472:	4605      	mov	r5, r0
  hmdma->State = HAL_MDMA_STATE_BUSY;
9000a474:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
  __HAL_UNLOCK(hmdma);
9000a478:	f884 103c 	strb.w	r1, [r4, #60]	; 0x3c
  __HAL_MDMA_DISABLE(hmdma);
9000a47c:	68da      	ldr	r2, [r3, #12]
9000a47e:	f022 0201 	bic.w	r2, r2, #1
9000a482:	60da      	str	r2, [r3, #12]

  /* Check if the MDMA channel is effectively disabled */
  while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000a484:	e005      	b.n	9000a492 <HAL_MDMA_Init+0x32>
  {
    /* Check for the Timeout */
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_MDMA_ABORT)
9000a486:	f7fd f973 	bl	90007770 <HAL_GetTick>
9000a48a:	1b43      	subs	r3, r0, r5
9000a48c:	2b05      	cmp	r3, #5
9000a48e:	d841      	bhi.n	9000a514 <HAL_MDMA_Init+0xb4>
  while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000a490:	6823      	ldr	r3, [r4, #0]
9000a492:	68da      	ldr	r2, [r3, #12]
9000a494:	07d2      	lsls	r2, r2, #31
9000a496:	d4f6      	bmi.n	9000a486 <HAL_MDMA_Init+0x26>
  /* Write new CTCR Register value */
  hmdma->Instance->CTCR =  hmdma->Init.SourceInc      | hmdma->Init.DestinationInc | \
                           hmdma->Init.SourceDataSize | hmdma->Init.DestDataSize   | \
                           hmdma->Init.DataAlignment  | hmdma->Init.SourceBurst    | \
                           hmdma->Init.DestBurst                                   | \
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
9000a498:	e9d4 2505 	ldrd	r2, r5, [r4, #20]
9000a49c:	69e0      	ldr	r0, [r4, #28]
9000a49e:	432a      	orrs	r2, r5
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
9000a4a0:	68e1      	ldr	r1, [r4, #12]
9000a4a2:	6925      	ldr	r5, [r4, #16]
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
9000a4a4:	4302      	orrs	r2, r0
9000a4a6:	6a20      	ldr	r0, [r4, #32]
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
9000a4a8:	4329      	orrs	r1, r5
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
9000a4aa:	4302      	orrs	r2, r0
9000a4ac:	6a60      	ldr	r0, [r4, #36]	; 0x24
9000a4ae:	4302      	orrs	r2, r0
9000a4b0:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
9000a4b2:	4302      	orrs	r2, r0
9000a4b4:	6b20      	ldr	r0, [r4, #48]	; 0x30
9000a4b6:	4302      	orrs	r2, r0
9000a4b8:	68a0      	ldr	r0, [r4, #8]
9000a4ba:	4302      	orrs	r2, r0
9000a4bc:	6aa0      	ldr	r0, [r4, #40]	; 0x28
9000a4be:	3801      	subs	r0, #1
9000a4c0:	ea42 4280 	orr.w	r2, r2, r0, lsl #18
                           hmdma->Init.TransferTriggerMode;

  /* If SW request set the CTCR register to SW Request Mode */
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000a4c4:	6860      	ldr	r0, [r4, #4]
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
9000a4c6:	60d9      	str	r1, [r3, #12]
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000a4c8:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
  hmdma->Instance->CTCR =  hmdma->Init.SourceInc      | hmdma->Init.DestinationInc | \
9000a4cc:	611a      	str	r2, [r3, #16]
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000a4ce:	d103      	bne.n	9000a4d8 <HAL_MDMA_Init+0x78>
    -If the request is done by SW : BWM could be set to 1 or 0.
    -If the request is done by a peripheral :
    If mask address not set (0) => BWM must be set to 0
    If mask address set (different than 0) => BWM could be set to 1 or 0
    */
    hmdma->Instance->CTCR |= (MDMA_CTCR_SWRM | MDMA_CTCR_BWM);
9000a4d0:	691a      	ldr	r2, [r3, #16]
9000a4d2:	f042 4240 	orr.w	r2, r2, #3221225472	; 0xc0000000
9000a4d6:	611a      	str	r2, [r3, #16]
  }

  /* Reset CBNDTR Register */
  hmdma->Instance->CBNDTR = 0;
9000a4d8:	2100      	movs	r1, #0

  /* if block source address offset is negative set the Block Repeat Source address Update Mode to decrement */
  if(hmdma->Init.SourceBlockAddressOffset < 0)
9000a4da:	6b62      	ldr	r2, [r4, #52]	; 0x34
9000a4dc:	428a      	cmp	r2, r1
  hmdma->Instance->CBNDTR = 0;
9000a4de:	6159      	str	r1, [r3, #20]
  if(hmdma->Init.SourceBlockAddressOffset < 0)
9000a4e0:	db30      	blt.n	9000a544 <HAL_MDMA_Init+0xe4>
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
  }
  else
  {
    /* Write new CBRUR Register value : source repeat block offset */
    hmdma->Instance->CBRUR = (((uint32_t)hmdma->Init.SourceBlockAddressOffset) & 0x0000FFFFU);
9000a4e2:	b292      	uxth	r2, r2
9000a4e4:	621a      	str	r2, [r3, #32]
  }

  /* If block destination address offset is negative set the Block Repeat destination address Update Mode to decrement */
  if(hmdma->Init.DestBlockAddressOffset < 0)
9000a4e6:	6ba2      	ldr	r2, [r4, #56]	; 0x38
9000a4e8:	2a00      	cmp	r2, #0
9000a4ea:	db1c      	blt.n	9000a526 <HAL_MDMA_Init+0xc6>
    hmdma->Instance->CBRUR |= ((blockoffset & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
  }
  else
  {
    /*write new CBRUR Register value : destination repeat block offset */
    hmdma->Instance->CBRUR |= ((((uint32_t)hmdma->Init.DestBlockAddressOffset) & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
9000a4ec:	6a19      	ldr	r1, [r3, #32]
  }

  /* if HW request set the HW request and the requet CleraMask and ClearData MaskData, */
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000a4ee:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
    hmdma->Instance->CBRUR |= ((((uint32_t)hmdma->Init.DestBlockAddressOffset) & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
9000a4f2:	ea41 4202 	orr.w	r2, r1, r2, lsl #16
9000a4f6:	621a      	str	r2, [r3, #32]
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000a4f8:	d021      	beq.n	9000a53e <HAL_MDMA_Init+0xde>
  {
    /* Set the HW request in CTRB register  */
    hmdma->Instance->CTBR = hmdma->Init.Request & MDMA_CTBR_TSEL;
9000a4fa:	b2c0      	uxtb	r0, r0
9000a4fc:	6298      	str	r0, [r3, #40]	; 0x28
  {
    hmdma->Instance->CTBR = 0;
  }

  /* Write Link Address Register */
  hmdma->Instance->CLAR =  0;
9000a4fe:	2200      	movs	r2, #0
  hmdma->State = HAL_MDMA_STATE_READY;
9000a500:	2101      	movs	r1, #1
  hmdma->Instance->CLAR =  0;
9000a502:	625a      	str	r2, [r3, #36]	; 0x24
  return HAL_OK;
9000a504:	4610      	mov	r0, r2
  hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000a506:	66a2      	str	r2, [r4, #104]	; 0x68
  hmdma->LinkedListNodeCounter  = 0;
9000a508:	6662      	str	r2, [r4, #100]	; 0x64
  hmdma->State = HAL_MDMA_STATE_READY;
9000a50a:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
  hmdma->LastLinkedListNodeAddress   = 0;
9000a50e:	e9c4 2217 	strd	r2, r2, [r4, #92]	; 0x5c
}
9000a512:	bd38      	pop	{r3, r4, r5, pc}
      hmdma->ErrorCode = HAL_MDMA_ERROR_TIMEOUT;
9000a514:	2240      	movs	r2, #64	; 0x40
      hmdma->State = HAL_MDMA_STATE_ERROR;
9000a516:	2303      	movs	r3, #3
      return HAL_ERROR;
9000a518:	2001      	movs	r0, #1
      hmdma->ErrorCode = HAL_MDMA_ERROR_TIMEOUT;
9000a51a:	66a2      	str	r2, [r4, #104]	; 0x68
      hmdma->State = HAL_MDMA_STATE_ERROR;
9000a51c:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
}
9000a520:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
9000a522:	2001      	movs	r0, #1
}
9000a524:	bd38      	pop	{r3, r4, r5, pc}
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRDUM;
9000a526:	6959      	ldr	r1, [r3, #20]
    blockoffset = (uint32_t)(- hmdma->Init.DestBlockAddressOffset);
9000a528:	4252      	negs	r2, r2
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000a52a:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRDUM;
9000a52e:	f441 2100 	orr.w	r1, r1, #524288	; 0x80000
9000a532:	6159      	str	r1, [r3, #20]
    hmdma->Instance->CBRUR |= ((blockoffset & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
9000a534:	6a19      	ldr	r1, [r3, #32]
9000a536:	ea41 4202 	orr.w	r2, r1, r2, lsl #16
9000a53a:	621a      	str	r2, [r3, #32]
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000a53c:	d1dd      	bne.n	9000a4fa <HAL_MDMA_Init+0x9a>
    hmdma->Instance->CTBR = 0;
9000a53e:	2200      	movs	r2, #0
9000a540:	629a      	str	r2, [r3, #40]	; 0x28
9000a542:	e7dc      	b.n	9000a4fe <HAL_MDMA_Init+0x9e>
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
9000a544:	6959      	ldr	r1, [r3, #20]
    blockoffset = (uint32_t)(- hmdma->Init.SourceBlockAddressOffset);
9000a546:	4252      	negs	r2, r2
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
9000a548:	f441 2180 	orr.w	r1, r1, #262144	; 0x40000
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
9000a54c:	b292      	uxth	r2, r2
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
9000a54e:	6159      	str	r1, [r3, #20]
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
9000a550:	621a      	str	r2, [r3, #32]
9000a552:	e7c8      	b.n	9000a4e6 <HAL_MDMA_Init+0x86>

9000a554 <HAL_MDMA_DeInit>:
  if(hmdma == NULL)
9000a554:	b1f8      	cbz	r0, 9000a596 <HAL_MDMA_DeInit+0x42>
  __HAL_MDMA_DISABLE(hmdma);
9000a556:	6802      	ldr	r2, [r0, #0]
9000a558:	4601      	mov	r1, r0
  hmdma->Instance->CCR  = 0;
9000a55a:	2300      	movs	r3, #0
  __HAL_MDMA_DISABLE(hmdma);
9000a55c:	68d0      	ldr	r0, [r2, #12]
{
9000a55e:	b410      	push	{r4}
  __HAL_MDMA_DISABLE(hmdma);
9000a560:	f020 0001 	bic.w	r0, r0, #1
  __HAL_MDMA_CLEAR_FLAG(hmdma,(MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BRT | MDMA_FLAG_BT | MDMA_FLAG_BFTC));
9000a564:	241f      	movs	r4, #31
  __HAL_MDMA_DISABLE(hmdma);
9000a566:	60d0      	str	r0, [r2, #12]
  return HAL_OK;
9000a568:	4618      	mov	r0, r3
  hmdma->Instance->CCR  = 0;
9000a56a:	60d3      	str	r3, [r2, #12]
  hmdma->Instance->CTCR = 0;
9000a56c:	6113      	str	r3, [r2, #16]
  hmdma->Instance->CBNDTR = 0;
9000a56e:	6153      	str	r3, [r2, #20]
  hmdma->Instance->CSAR = 0;
9000a570:	6193      	str	r3, [r2, #24]
  hmdma->Instance->CDAR = 0;
9000a572:	61d3      	str	r3, [r2, #28]
  hmdma->Instance->CBRUR = 0;
9000a574:	6213      	str	r3, [r2, #32]
  hmdma->Instance->CLAR = 0;
9000a576:	6253      	str	r3, [r2, #36]	; 0x24
  hmdma->Instance->CTBR = 0;
9000a578:	6293      	str	r3, [r2, #40]	; 0x28
  hmdma->Instance->CMAR = 0;
9000a57a:	6313      	str	r3, [r2, #48]	; 0x30
  hmdma->Instance->CMDR = 0;
9000a57c:	6353      	str	r3, [r2, #52]	; 0x34
  __HAL_MDMA_CLEAR_FLAG(hmdma,(MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BRT | MDMA_FLAG_BT | MDMA_FLAG_BFTC));
9000a57e:	6054      	str	r4, [r2, #4]
  hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000a580:	668b      	str	r3, [r1, #104]	; 0x68
  __HAL_UNLOCK(hmdma);
9000a582:	f881 303c 	strb.w	r3, [r1, #60]	; 0x3c
  hmdma->State = HAL_MDMA_STATE_RESET;
9000a586:	f881 303d 	strb.w	r3, [r1, #61]	; 0x3d
}
9000a58a:	f85d 4b04 	ldr.w	r4, [sp], #4
  hmdma->LinkedListNodeCounter  = 0;
9000a58e:	664b      	str	r3, [r1, #100]	; 0x64
  hmdma->LastLinkedListNodeAddress   = 0;
9000a590:	e9c1 3317 	strd	r3, r3, [r1, #92]	; 0x5c
}
9000a594:	4770      	bx	lr
    return HAL_ERROR;
9000a596:	2001      	movs	r0, #1
}
9000a598:	4770      	bx	lr
9000a59a:	bf00      	nop

9000a59c <HAL_MDMA_ConfigPostRequestMask>:
  if(hmdma == NULL)
9000a59c:	b310      	cbz	r0, 9000a5e4 <HAL_MDMA_ConfigPostRequestMask+0x48>
9000a59e:	4603      	mov	r3, r0
  __HAL_LOCK(hmdma);
9000a5a0:	f890 003c 	ldrb.w	r0, [r0, #60]	; 0x3c
9000a5a4:	2801      	cmp	r0, #1
9000a5a6:	d01f      	beq.n	9000a5e8 <HAL_MDMA_ConfigPostRequestMask+0x4c>
{
9000a5a8:	b530      	push	{r4, r5, lr}
  __HAL_LOCK(hmdma);
9000a5aa:	f04f 0e01 	mov.w	lr, #1
  if(HAL_MDMA_STATE_READY == hmdma->State)
9000a5ae:	f893 c03d 	ldrb.w	ip, [r3, #61]	; 0x3d
9000a5b2:	45f4      	cmp	ip, lr
9000a5b4:	fa5f f08c 	uxtb.w	r0, ip
  __HAL_LOCK(hmdma);
9000a5b8:	f883 e03c 	strb.w	lr, [r3, #60]	; 0x3c
  if(HAL_MDMA_STATE_READY == hmdma->State)
9000a5bc:	d004      	beq.n	9000a5c8 <HAL_MDMA_ConfigPostRequestMask+0x2c>
    status =  HAL_ERROR;
9000a5be:	4670      	mov	r0, lr
  __HAL_UNLOCK(hmdma);
9000a5c0:	2200      	movs	r2, #0
9000a5c2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
}
9000a5c6:	bd30      	pop	{r4, r5, pc}
    if((hmdma->Instance->CTCR & MDMA_CTCR_SWRM) == 0U)
9000a5c8:	681d      	ldr	r5, [r3, #0]
9000a5ca:	692c      	ldr	r4, [r5, #16]
9000a5cc:	f014 4480 	ands.w	r4, r4, #1073741824	; 0x40000000
9000a5d0:	d1f6      	bne.n	9000a5c0 <HAL_MDMA_ConfigPostRequestMask+0x24>
      hmdma->Instance->CMAR = MaskAddress;
9000a5d2:	6329      	str	r1, [r5, #48]	; 0x30
      hmdma->Instance->CMDR = MaskData;
9000a5d4:	636a      	str	r2, [r5, #52]	; 0x34
        hmdma->Instance->CTCR &=  ~MDMA_CTCR_BWM;
9000a5d6:	692a      	ldr	r2, [r5, #16]
      if(MaskAddress == 0U)
9000a5d8:	b941      	cbnz	r1, 9000a5ec <HAL_MDMA_ConfigPostRequestMask+0x50>
        hmdma->Instance->CTCR &=  ~MDMA_CTCR_BWM;
9000a5da:	f022 4200 	bic.w	r2, r2, #2147483648	; 0x80000000
  HAL_StatusTypeDef  status = HAL_OK;
9000a5de:	4608      	mov	r0, r1
        hmdma->Instance->CTCR &=  ~MDMA_CTCR_BWM;
9000a5e0:	612a      	str	r2, [r5, #16]
9000a5e2:	e7ed      	b.n	9000a5c0 <HAL_MDMA_ConfigPostRequestMask+0x24>
    return HAL_ERROR;
9000a5e4:	2001      	movs	r0, #1
9000a5e6:	4770      	bx	lr
  __HAL_LOCK(hmdma);
9000a5e8:	2002      	movs	r0, #2
}
9000a5ea:	4770      	bx	lr
        hmdma->Instance->CTCR |=  MDMA_CTCR_BWM;
9000a5ec:	f042 4200 	orr.w	r2, r2, #2147483648	; 0x80000000
  HAL_StatusTypeDef  status = HAL_OK;
9000a5f0:	4620      	mov	r0, r4
        hmdma->Instance->CTCR |=  MDMA_CTCR_BWM;
9000a5f2:	612a      	str	r2, [r5, #16]
9000a5f4:	e7e4      	b.n	9000a5c0 <HAL_MDMA_ConfigPostRequestMask+0x24>
9000a5f6:	bf00      	nop

9000a5f8 <HAL_MDMA_Start_IT>:
  if(hmdma == NULL)
9000a5f8:	2800      	cmp	r0, #0
9000a5fa:	d06f      	beq.n	9000a6dc <HAL_MDMA_Start_IT+0xe4>
9000a5fc:	4684      	mov	ip, r0
  __HAL_LOCK(hmdma);
9000a5fe:	f890 003c 	ldrb.w	r0, [r0, #60]	; 0x3c
9000a602:	2801      	cmp	r0, #1
9000a604:	d072      	beq.n	9000a6ec <HAL_MDMA_Start_IT+0xf4>
9000a606:	2001      	movs	r0, #1
9000a608:	f88c 003c 	strb.w	r0, [ip, #60]	; 0x3c
  if(HAL_MDMA_STATE_READY == hmdma->State)
9000a60c:	f89c 003d 	ldrb.w	r0, [ip, #61]	; 0x3d
9000a610:	2801      	cmp	r0, #1
9000a612:	d004      	beq.n	9000a61e <HAL_MDMA_Start_IT+0x26>
    __HAL_UNLOCK(hmdma);
9000a614:	2300      	movs	r3, #0
    return HAL_BUSY;
9000a616:	2002      	movs	r0, #2
    __HAL_UNLOCK(hmdma);
9000a618:	f88c 303c 	strb.w	r3, [ip, #60]	; 0x3c
    return HAL_BUSY;
9000a61c:	4770      	bx	lr
    hmdma->State = HAL_MDMA_STATE_BUSY;
9000a61e:	2002      	movs	r0, #2
  MODIFY_REG(hmdma->Instance->CBNDTR ,MDMA_CBNDTR_BNDT, (BlockDataLength & MDMA_CBNDTR_BNDT));
9000a620:	f3c3 0310 	ubfx	r3, r3, #0, #17
  if((addressMask == 0x20000000U) || (addressMask == 0x00000000U))
9000a624:	f011 4f5f 	tst.w	r1, #3741319168	; 0xdf000000
{
9000a628:	b530      	push	{r4, r5, lr}
  MODIFY_REG(hmdma->Instance->CBNDTR , MDMA_CBNDTR_BRC , ((BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos) & MDMA_CBNDTR_BRC);
9000a62a:	9d03      	ldr	r5, [sp, #12]
    hmdma->State = HAL_MDMA_STATE_BUSY;
9000a62c:	f88c 003d 	strb.w	r0, [ip, #61]	; 0x3d
    hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000a630:	f04f 0000 	mov.w	r0, #0
    __HAL_MDMA_DISABLE(hmdma);
9000a634:	f8dc 4000 	ldr.w	r4, [ip]
  MODIFY_REG(hmdma->Instance->CBNDTR , MDMA_CBNDTR_BRC , ((BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos) & MDMA_CBNDTR_BRC);
9000a638:	f105 3eff 	add.w	lr, r5, #4294967295
    hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000a63c:	f8cc 0068 	str.w	r0, [ip, #104]	; 0x68
  MODIFY_REG(hmdma->Instance->CBNDTR ,MDMA_CBNDTR_BNDT, (BlockDataLength & MDMA_CBNDTR_BNDT));
9000a640:	f5a0 3000 	sub.w	r0, r0, #131072	; 0x20000
    __HAL_MDMA_DISABLE(hmdma);
9000a644:	68e5      	ldr	r5, [r4, #12]
9000a646:	f025 0501 	bic.w	r5, r5, #1
9000a64a:	60e5      	str	r5, [r4, #12]
  MODIFY_REG(hmdma->Instance->CBNDTR ,MDMA_CBNDTR_BNDT, (BlockDataLength & MDMA_CBNDTR_BNDT));
9000a64c:	6965      	ldr	r5, [r4, #20]
9000a64e:	ea00 0005 	and.w	r0, r0, r5
9000a652:	ea40 0003 	orr.w	r0, r0, r3
9000a656:	6160      	str	r0, [r4, #20]
  MODIFY_REG(hmdma->Instance->CBNDTR , MDMA_CBNDTR_BRC , ((BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos) & MDMA_CBNDTR_BRC);
9000a658:	6963      	ldr	r3, [r4, #20]
9000a65a:	f3c3 0313 	ubfx	r3, r3, #0, #20
9000a65e:	ea43 530e 	orr.w	r3, r3, lr, lsl #20
9000a662:	6163      	str	r3, [r4, #20]
  __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_CISR_BRTIF | MDMA_CISR_BTIF | MDMA_CISR_TCIF);
9000a664:	f04f 031f 	mov.w	r3, #31
9000a668:	6063      	str	r3, [r4, #4]
  hmdma->Instance->CDAR = DstAddress;
9000a66a:	61e2      	str	r2, [r4, #28]
  hmdma->Instance->CSAR = SrcAddress;
9000a66c:	61a1      	str	r1, [r4, #24]
    hmdma->Instance->CTBR |= MDMA_CTBR_SBUS;
9000a66e:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000a670:	bf0c      	ite	eq
9000a672:	f443 3380 	orreq.w	r3, r3, #65536	; 0x10000
    hmdma->Instance->CTBR &= (~MDMA_CTBR_SBUS);
9000a676:	f423 3380 	bicne.w	r3, r3, #65536	; 0x10000
  if((addressMask == 0x20000000U) || (addressMask == 0x00000000U))
9000a67a:	f012 4f5f 	tst.w	r2, #3741319168	; 0xdf000000
    if(hmdma->XferBlockCpltCallback != NULL)
9000a67e:	f8dc 204c 	ldr.w	r2, [ip, #76]	; 0x4c
    hmdma->Instance->CTBR &= (~MDMA_CTBR_SBUS);
9000a682:	62a3      	str	r3, [r4, #40]	; 0x28
    hmdma->Instance->CTBR |= MDMA_CTBR_DBUS;
9000a684:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000a686:	bf0c      	ite	eq
9000a688:	f443 3300 	orreq.w	r3, r3, #131072	; 0x20000
    hmdma->Instance->CTBR &= (~MDMA_CTBR_DBUS);
9000a68c:	f423 3300 	bicne.w	r3, r3, #131072	; 0x20000
9000a690:	62a3      	str	r3, [r4, #40]	; 0x28
  hmdma->Instance->CLAR = (uint32_t)hmdma->FirstLinkedListNodeAddress;
9000a692:	f8dc 305c 	ldr.w	r3, [ip, #92]	; 0x5c
9000a696:	6263      	str	r3, [r4, #36]	; 0x24
    __HAL_MDMA_ENABLE_IT(hmdma, (MDMA_IT_TE | MDMA_IT_CTC));
9000a698:	68e3      	ldr	r3, [r4, #12]
9000a69a:	f043 0306 	orr.w	r3, r3, #6
9000a69e:	60e3      	str	r3, [r4, #12]
    if(hmdma->XferBlockCpltCallback != NULL)
9000a6a0:	b11a      	cbz	r2, 9000a6aa <HAL_MDMA_Start_IT+0xb2>
      __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BT);
9000a6a2:	68e3      	ldr	r3, [r4, #12]
9000a6a4:	f043 0310 	orr.w	r3, r3, #16
9000a6a8:	60e3      	str	r3, [r4, #12]
    if(hmdma->XferRepeatBlockCpltCallback != NULL)
9000a6aa:	f8dc 3050 	ldr.w	r3, [ip, #80]	; 0x50
9000a6ae:	b11b      	cbz	r3, 9000a6b8 <HAL_MDMA_Start_IT+0xc0>
      __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BRT);
9000a6b0:	68e3      	ldr	r3, [r4, #12]
9000a6b2:	f043 0308 	orr.w	r3, r3, #8
9000a6b6:	60e3      	str	r3, [r4, #12]
    if(hmdma->XferBufferCpltCallback != NULL)
9000a6b8:	f8dc 3048 	ldr.w	r3, [ip, #72]	; 0x48
9000a6bc:	b11b      	cbz	r3, 9000a6c6 <HAL_MDMA_Start_IT+0xce>
      __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BFTC);
9000a6be:	68e3      	ldr	r3, [r4, #12]
9000a6c0:	f043 0320 	orr.w	r3, r3, #32
9000a6c4:	60e3      	str	r3, [r4, #12]
    __HAL_MDMA_ENABLE(hmdma);
9000a6c6:	68e3      	ldr	r3, [r4, #12]
    if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000a6c8:	f8dc 2004 	ldr.w	r2, [ip, #4]
    __HAL_MDMA_ENABLE(hmdma);
9000a6cc:	f043 0301 	orr.w	r3, r3, #1
    if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000a6d0:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
    __HAL_MDMA_ENABLE(hmdma);
9000a6d4:	60e3      	str	r3, [r4, #12]
    if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000a6d6:	d003      	beq.n	9000a6e0 <HAL_MDMA_Start_IT+0xe8>
  return HAL_OK;
9000a6d8:	2000      	movs	r0, #0
}
9000a6da:	bd30      	pop	{r4, r5, pc}
    return HAL_ERROR;
9000a6dc:	2001      	movs	r0, #1
9000a6de:	4770      	bx	lr
      hmdma->Instance->CCR |=  MDMA_CCR_SWRQ;
9000a6e0:	68e3      	ldr	r3, [r4, #12]
  return HAL_OK;
9000a6e2:	2000      	movs	r0, #0
      hmdma->Instance->CCR |=  MDMA_CCR_SWRQ;
9000a6e4:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
9000a6e8:	60e3      	str	r3, [r4, #12]
}
9000a6ea:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hmdma);
9000a6ec:	2002      	movs	r0, #2
}
9000a6ee:	4770      	bx	lr

9000a6f0 <HAL_MDMA_Abort_IT>:
  if(hmdma == NULL)
9000a6f0:	4603      	mov	r3, r0
9000a6f2:	b188      	cbz	r0, 9000a718 <HAL_MDMA_Abort_IT+0x28>
  if(HAL_MDMA_STATE_BUSY != hmdma->State)
9000a6f4:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
9000a6f8:	2a02      	cmp	r2, #2
9000a6fa:	d003      	beq.n	9000a704 <HAL_MDMA_Abort_IT+0x14>
    hmdma->ErrorCode = HAL_MDMA_ERROR_NO_XFER;
9000a6fc:	2280      	movs	r2, #128	; 0x80
    return HAL_ERROR;
9000a6fe:	2001      	movs	r0, #1
    hmdma->ErrorCode = HAL_MDMA_ERROR_NO_XFER;
9000a700:	669a      	str	r2, [r3, #104]	; 0x68
    return HAL_ERROR;
9000a702:	4770      	bx	lr
    __HAL_MDMA_DISABLE(hmdma);
9000a704:	6802      	ldr	r2, [r0, #0]
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000a706:	2104      	movs	r1, #4
  return HAL_OK;
9000a708:	2000      	movs	r0, #0
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000a70a:	f883 103d 	strb.w	r1, [r3, #61]	; 0x3d
    __HAL_MDMA_DISABLE(hmdma);
9000a70e:	68d3      	ldr	r3, [r2, #12]
9000a710:	f023 0301 	bic.w	r3, r3, #1
9000a714:	60d3      	str	r3, [r2, #12]
  return HAL_OK;
9000a716:	4770      	bx	lr
    return HAL_ERROR;
9000a718:	2001      	movs	r0, #1
}
9000a71a:	4770      	bx	lr

9000a71c <HAL_MDMA_IRQHandler>:
{
9000a71c:	b530      	push	{r4, r5, lr}
  __IO uint32_t count = 0;
9000a71e:	2300      	movs	r3, #0
{
9000a720:	b083      	sub	sp, #12
  if((MDMA->GISR0 & generalIntFlag) == 0U)
9000a722:	f04f 45a4 	mov.w	r5, #1375731712	; 0x52000000
{
9000a726:	4604      	mov	r4, r0
  __IO uint32_t count = 0;
9000a728:	9301      	str	r3, [sp, #4]
  generalIntFlag =  1UL << ((((uint32_t)hmdma->Instance - (uint32_t)(MDMA_Channel0))/HAL_MDMA_CHANNEL_SIZE) & 0x1FU);
9000a72a:	2101      	movs	r1, #1
  uint32_t timeout = SystemCoreClock / 9600U;
9000a72c:	4b57      	ldr	r3, [pc, #348]	; (9000a88c <HAL_MDMA_IRQHandler+0x170>)
  if((MDMA->GISR0 & generalIntFlag) == 0U)
9000a72e:	6828      	ldr	r0, [r5, #0]
  generalIntFlag =  1UL << ((((uint32_t)hmdma->Instance - (uint32_t)(MDMA_Channel0))/HAL_MDMA_CHANNEL_SIZE) & 0x1FU);
9000a730:	4a57      	ldr	r2, [pc, #348]	; (9000a890 <HAL_MDMA_IRQHandler+0x174>)
  uint32_t timeout = SystemCoreClock / 9600U;
9000a732:	681d      	ldr	r5, [r3, #0]
  generalIntFlag =  1UL << ((((uint32_t)hmdma->Instance - (uint32_t)(MDMA_Channel0))/HAL_MDMA_CHANNEL_SIZE) & 0x1FU);
9000a734:	6823      	ldr	r3, [r4, #0]
9000a736:	441a      	add	r2, r3
9000a738:	f3c2 1284 	ubfx	r2, r2, #6, #5
9000a73c:	fa01 f202 	lsl.w	r2, r1, r2
  if((MDMA->GISR0 & generalIntFlag) == 0U)
9000a740:	4202      	tst	r2, r0
9000a742:	f000 80a0 	beq.w	9000a886 <HAL_MDMA_IRQHandler+0x16a>
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_TE) != 0U))
9000a746:	681a      	ldr	r2, [r3, #0]
9000a748:	07d1      	lsls	r1, r2, #31
9000a74a:	d529      	bpl.n	9000a7a0 <HAL_MDMA_IRQHandler+0x84>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_TE) != 0U)
9000a74c:	68da      	ldr	r2, [r3, #12]
9000a74e:	0792      	lsls	r2, r2, #30
9000a750:	d526      	bpl.n	9000a7a0 <HAL_MDMA_IRQHandler+0x84>
      __HAL_MDMA_DISABLE_IT(hmdma, MDMA_IT_TE);
9000a752:	68da      	ldr	r2, [r3, #12]
9000a754:	f022 0202 	bic.w	r2, r2, #2
9000a758:	60da      	str	r2, [r3, #12]
      errorFlag = hmdma->Instance->CESR;
9000a75a:	689a      	ldr	r2, [r3, #8]
        hmdma->ErrorCode |= HAL_MDMA_ERROR_READ_XFER;
9000a75c:	6ea1      	ldr	r1, [r4, #104]	; 0x68
      if((errorFlag & MDMA_CESR_TED) == 0U)
9000a75e:	0610      	lsls	r0, r2, #24
        hmdma->ErrorCode |= HAL_MDMA_ERROR_READ_XFER;
9000a760:	bf54      	ite	pl
9000a762:	f041 0101 	orrpl.w	r1, r1, #1
        hmdma->ErrorCode |= HAL_MDMA_ERROR_WRITE_XFER;
9000a766:	f041 0102 	orrmi.w	r1, r1, #2
9000a76a:	66a1      	str	r1, [r4, #104]	; 0x68
      if((errorFlag & MDMA_CESR_TEMD) != 0U)
9000a76c:	0591      	lsls	r1, r2, #22
9000a76e:	d503      	bpl.n	9000a778 <HAL_MDMA_IRQHandler+0x5c>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_MASK_DATA;
9000a770:	6ea1      	ldr	r1, [r4, #104]	; 0x68
9000a772:	f041 0104 	orr.w	r1, r1, #4
9000a776:	66a1      	str	r1, [r4, #104]	; 0x68
      if((errorFlag & MDMA_CESR_TELD) != 0U)
9000a778:	05d0      	lsls	r0, r2, #23
9000a77a:	d503      	bpl.n	9000a784 <HAL_MDMA_IRQHandler+0x68>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_LINKED_LIST;
9000a77c:	6ea1      	ldr	r1, [r4, #104]	; 0x68
9000a77e:	f041 0108 	orr.w	r1, r1, #8
9000a782:	66a1      	str	r1, [r4, #104]	; 0x68
      if((errorFlag & MDMA_CESR_ASE) != 0U)
9000a784:	0551      	lsls	r1, r2, #21
9000a786:	d503      	bpl.n	9000a790 <HAL_MDMA_IRQHandler+0x74>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_ALIGNMENT;
9000a788:	6ea1      	ldr	r1, [r4, #104]	; 0x68
9000a78a:	f041 0110 	orr.w	r1, r1, #16
9000a78e:	66a1      	str	r1, [r4, #104]	; 0x68
      if((errorFlag & MDMA_CESR_BSE) != 0U)
9000a790:	0510      	lsls	r0, r2, #20
9000a792:	d503      	bpl.n	9000a79c <HAL_MDMA_IRQHandler+0x80>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_BLOCK_SIZE;
9000a794:	6ea2      	ldr	r2, [r4, #104]	; 0x68
9000a796:	f042 0220 	orr.w	r2, r2, #32
9000a79a:	66a2      	str	r2, [r4, #104]	; 0x68
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_TE);
9000a79c:	2201      	movs	r2, #1
9000a79e:	605a      	str	r2, [r3, #4]
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BFTC) != 0U))
9000a7a0:	681a      	ldr	r2, [r3, #0]
9000a7a2:	06d1      	lsls	r1, r2, #27
9000a7a4:	d509      	bpl.n	9000a7ba <HAL_MDMA_IRQHandler+0x9e>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BFTC) != 0U)
9000a7a6:	68da      	ldr	r2, [r3, #12]
9000a7a8:	0692      	lsls	r2, r2, #26
9000a7aa:	d506      	bpl.n	9000a7ba <HAL_MDMA_IRQHandler+0x9e>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BFTC);
9000a7ac:	2110      	movs	r1, #16
      if(hmdma->XferBufferCpltCallback != NULL)
9000a7ae:	6ca2      	ldr	r2, [r4, #72]	; 0x48
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BFTC);
9000a7b0:	6059      	str	r1, [r3, #4]
      if(hmdma->XferBufferCpltCallback != NULL)
9000a7b2:	b112      	cbz	r2, 9000a7ba <HAL_MDMA_IRQHandler+0x9e>
        hmdma->XferBufferCpltCallback(hmdma);
9000a7b4:	4620      	mov	r0, r4
9000a7b6:	4790      	blx	r2
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BT) != 0U))
9000a7b8:	6823      	ldr	r3, [r4, #0]
9000a7ba:	681a      	ldr	r2, [r3, #0]
9000a7bc:	0710      	lsls	r0, r2, #28
9000a7be:	d509      	bpl.n	9000a7d4 <HAL_MDMA_IRQHandler+0xb8>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BT) != 0U)
9000a7c0:	68da      	ldr	r2, [r3, #12]
9000a7c2:	06d1      	lsls	r1, r2, #27
9000a7c4:	d506      	bpl.n	9000a7d4 <HAL_MDMA_IRQHandler+0xb8>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BT);
9000a7c6:	2108      	movs	r1, #8
      if(hmdma->XferBlockCpltCallback != NULL)
9000a7c8:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BT);
9000a7ca:	6059      	str	r1, [r3, #4]
      if(hmdma->XferBlockCpltCallback != NULL)
9000a7cc:	b112      	cbz	r2, 9000a7d4 <HAL_MDMA_IRQHandler+0xb8>
        hmdma->XferBlockCpltCallback(hmdma);
9000a7ce:	4620      	mov	r0, r4
9000a7d0:	4790      	blx	r2
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BRT) != 0U))
9000a7d2:	6823      	ldr	r3, [r4, #0]
9000a7d4:	681a      	ldr	r2, [r3, #0]
9000a7d6:	0752      	lsls	r2, r2, #29
9000a7d8:	d509      	bpl.n	9000a7ee <HAL_MDMA_IRQHandler+0xd2>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BRT) != 0U)
9000a7da:	68da      	ldr	r2, [r3, #12]
9000a7dc:	0710      	lsls	r0, r2, #28
9000a7de:	d506      	bpl.n	9000a7ee <HAL_MDMA_IRQHandler+0xd2>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BRT);
9000a7e0:	2104      	movs	r1, #4
      if(hmdma->XferRepeatBlockCpltCallback != NULL)
9000a7e2:	6d22      	ldr	r2, [r4, #80]	; 0x50
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BRT);
9000a7e4:	6059      	str	r1, [r3, #4]
      if(hmdma->XferRepeatBlockCpltCallback != NULL)
9000a7e6:	b112      	cbz	r2, 9000a7ee <HAL_MDMA_IRQHandler+0xd2>
        hmdma->XferRepeatBlockCpltCallback(hmdma);
9000a7e8:	4620      	mov	r0, r4
9000a7ea:	4790      	blx	r2
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_CTC) != 0U))
9000a7ec:	6823      	ldr	r3, [r4, #0]
9000a7ee:	681a      	ldr	r2, [r3, #0]
9000a7f0:	0791      	lsls	r1, r2, #30
9000a7f2:	d516      	bpl.n	9000a822 <HAL_MDMA_IRQHandler+0x106>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_CTC) != 0U)
9000a7f4:	68da      	ldr	r2, [r3, #12]
9000a7f6:	0752      	lsls	r2, r2, #29
9000a7f8:	d513      	bpl.n	9000a822 <HAL_MDMA_IRQHandler+0x106>
      __HAL_MDMA_DISABLE_IT(hmdma, (MDMA_IT_TE | MDMA_IT_CTC | MDMA_IT_BT | MDMA_IT_BRT | MDMA_IT_BFTC));
9000a7fa:	68da      	ldr	r2, [r3, #12]
9000a7fc:	f022 023e 	bic.w	r2, r2, #62	; 0x3e
9000a800:	60da      	str	r2, [r3, #12]
      if(HAL_MDMA_STATE_ABORT == hmdma->State)
9000a802:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
9000a806:	2a04      	cmp	r2, #4
9000a808:	d034      	beq.n	9000a874 <HAL_MDMA_IRQHandler+0x158>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_CTC);
9000a80a:	2202      	movs	r2, #2
      __HAL_UNLOCK(hmdma);
9000a80c:	2100      	movs	r1, #0
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_CTC);
9000a80e:	605a      	str	r2, [r3, #4]
      hmdma->State = HAL_MDMA_STATE_READY;
9000a810:	2201      	movs	r2, #1
      if(hmdma->XferCpltCallback != NULL)
9000a812:	6c63      	ldr	r3, [r4, #68]	; 0x44
      __HAL_UNLOCK(hmdma);
9000a814:	f884 103c 	strb.w	r1, [r4, #60]	; 0x3c
      hmdma->State = HAL_MDMA_STATE_READY;
9000a818:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      if(hmdma->XferCpltCallback != NULL)
9000a81c:	b10b      	cbz	r3, 9000a822 <HAL_MDMA_IRQHandler+0x106>
        hmdma->XferCpltCallback(hmdma);
9000a81e:	4620      	mov	r0, r4
9000a820:	4798      	blx	r3
  if(hmdma->ErrorCode != HAL_MDMA_ERROR_NONE)
9000a822:	6ea3      	ldr	r3, [r4, #104]	; 0x68
9000a824:	2b00      	cmp	r3, #0
9000a826:	d02e      	beq.n	9000a886 <HAL_MDMA_IRQHandler+0x16a>
    __HAL_MDMA_DISABLE(hmdma);
9000a828:	6821      	ldr	r1, [r4, #0]
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000a82a:	2004      	movs	r0, #4
  uint32_t timeout = SystemCoreClock / 9600U;
9000a82c:	4b19      	ldr	r3, [pc, #100]	; (9000a894 <HAL_MDMA_IRQHandler+0x178>)
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000a82e:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  uint32_t timeout = SystemCoreClock / 9600U;
9000a832:	fba3 3205 	umull	r3, r2, r3, r5
    __HAL_MDMA_DISABLE(hmdma);
9000a836:	68cb      	ldr	r3, [r1, #12]
9000a838:	f023 0301 	bic.w	r3, r3, #1
  uint32_t timeout = SystemCoreClock / 9600U;
9000a83c:	0a92      	lsrs	r2, r2, #10
    __HAL_MDMA_DISABLE(hmdma);
9000a83e:	60cb      	str	r3, [r1, #12]
9000a840:	e002      	b.n	9000a848 <HAL_MDMA_IRQHandler+0x12c>
    while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U);
9000a842:	68cb      	ldr	r3, [r1, #12]
9000a844:	07d8      	lsls	r0, r3, #31
9000a846:	d504      	bpl.n	9000a852 <HAL_MDMA_IRQHandler+0x136>
      if (++count > timeout)
9000a848:	9b01      	ldr	r3, [sp, #4]
9000a84a:	3301      	adds	r3, #1
9000a84c:	4293      	cmp	r3, r2
9000a84e:	9301      	str	r3, [sp, #4]
9000a850:	d9f7      	bls.n	9000a842 <HAL_MDMA_IRQHandler+0x126>
    __HAL_UNLOCK(hmdma);
9000a852:	2300      	movs	r3, #0
9000a854:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000a858:	68cb      	ldr	r3, [r1, #12]
9000a85a:	07db      	lsls	r3, r3, #31
      hmdma->State = HAL_MDMA_STATE_ERROR;
9000a85c:	bf4c      	ite	mi
9000a85e:	2303      	movmi	r3, #3
      hmdma->State = HAL_MDMA_STATE_READY;
9000a860:	2301      	movpl	r3, #1
9000a862:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    if (hmdma->XferErrorCallback != NULL)
9000a866:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000a868:	b16b      	cbz	r3, 9000a886 <HAL_MDMA_IRQHandler+0x16a>
      hmdma->XferErrorCallback(hmdma);
9000a86a:	4620      	mov	r0, r4
}
9000a86c:	b003      	add	sp, #12
9000a86e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
      hmdma->XferErrorCallback(hmdma);
9000a872:	4718      	bx	r3
        __HAL_UNLOCK(hmdma);
9000a874:	2100      	movs	r1, #0
        hmdma->State = HAL_MDMA_STATE_READY;
9000a876:	2201      	movs	r2, #1
        if(hmdma->XferAbortCallback != NULL)
9000a878:	6da3      	ldr	r3, [r4, #88]	; 0x58
        __HAL_UNLOCK(hmdma);
9000a87a:	f884 103c 	strb.w	r1, [r4, #60]	; 0x3c
        hmdma->State = HAL_MDMA_STATE_READY;
9000a87e:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        if(hmdma->XferAbortCallback != NULL)
9000a882:	2b00      	cmp	r3, #0
9000a884:	d1f1      	bne.n	9000a86a <HAL_MDMA_IRQHandler+0x14e>
}
9000a886:	b003      	add	sp, #12
9000a888:	bd30      	pop	{r4, r5, pc}
9000a88a:	bf00      	nop
9000a88c:	24000060 	.word	0x24000060
9000a890:	adffffc0 	.word	0xadffffc0
9000a894:	1b4e81b5 	.word	0x1b4e81b5

9000a898 <HAL_PWREx_ConfigSupply>:
  *         PWR_SMPS_2V5_SUPPLIES_EXT are used only for lines that supports SMPS
  *         regulator.
  * @retval HAL status.
  */
HAL_StatusTypeDef HAL_PWREx_ConfigSupply (uint32_t SupplySource)
{
9000a898:	b538      	push	{r3, r4, r5, lr}
  /* Check the parameters */
  assert_param (IS_PWR_SUPPLY (SupplySource));

  /* Check if supply source was configured */
#if defined (PWR_FLAG_SCUEN)
  if (__HAL_PWR_GET_FLAG (PWR_FLAG_SCUEN) == 0U)
9000a89a:	4c10      	ldr	r4, [pc, #64]	; (9000a8dc <HAL_PWREx_ConfigSupply+0x44>)
9000a89c:	68e3      	ldr	r3, [r4, #12]
9000a89e:	f013 0f04 	tst.w	r3, #4
#else
  if ((PWR->CR3 & (PWR_CR3_SMPSEN | PWR_CR3_LDOEN | PWR_CR3_BYPASS)) != (PWR_CR3_SMPSEN | PWR_CR3_LDOEN))
#endif /* defined (PWR_FLAG_SCUEN) */
  {
    /* Check supply configuration */
    if ((PWR->CR3 & PWR_SUPPLY_CONFIG_MASK) != SupplySource)
9000a8a2:	68e3      	ldr	r3, [r4, #12]
  if (__HAL_PWR_GET_FLAG (PWR_FLAG_SCUEN) == 0U)
9000a8a4:	d105      	bne.n	9000a8b2 <HAL_PWREx_ConfigSupply+0x1a>
    if ((PWR->CR3 & PWR_SUPPLY_CONFIG_MASK) != SupplySource)
9000a8a6:	f003 0307 	and.w	r3, r3, #7
    {
      /* Supply configuration update locked, can't apply a new supply config */
      return HAL_ERROR;
9000a8aa:	1a18      	subs	r0, r3, r0
9000a8ac:	bf18      	it	ne
9000a8ae:	2001      	movne	r0, #1
    }
  }
#endif /* defined (SMPS) */

  return HAL_OK;
}
9000a8b0:	bd38      	pop	{r3, r4, r5, pc}
  MODIFY_REG (PWR->CR3, PWR_SUPPLY_CONFIG_MASK, SupplySource);
9000a8b2:	f023 0307 	bic.w	r3, r3, #7
9000a8b6:	4303      	orrs	r3, r0
9000a8b8:	60e3      	str	r3, [r4, #12]
  tickstart = HAL_GetTick ();
9000a8ba:	f7fc ff59 	bl	90007770 <HAL_GetTick>
9000a8be:	4605      	mov	r5, r0
  while (__HAL_PWR_GET_FLAG (PWR_FLAG_ACTVOSRDY) == 0U)
9000a8c0:	e005      	b.n	9000a8ce <HAL_PWREx_ConfigSupply+0x36>
    if ((HAL_GetTick () - tickstart) > PWR_FLAG_SETTING_DELAY)
9000a8c2:	f7fc ff55 	bl	90007770 <HAL_GetTick>
9000a8c6:	1b40      	subs	r0, r0, r5
9000a8c8:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
9000a8cc:	d804      	bhi.n	9000a8d8 <HAL_PWREx_ConfigSupply+0x40>
  while (__HAL_PWR_GET_FLAG (PWR_FLAG_ACTVOSRDY) == 0U)
9000a8ce:	6863      	ldr	r3, [r4, #4]
9000a8d0:	049b      	lsls	r3, r3, #18
9000a8d2:	d5f6      	bpl.n	9000a8c2 <HAL_PWREx_ConfigSupply+0x2a>
  return HAL_OK;
9000a8d4:	2000      	movs	r0, #0
}
9000a8d6:	bd38      	pop	{r3, r4, r5, pc}
      return HAL_ERROR;
9000a8d8:	2001      	movs	r0, #1
}
9000a8da:	bd38      	pop	{r3, r4, r5, pc}
9000a8dc:	58024800 	.word	0x58024800

9000a8e0 <HAL_RCC_GetSysClockFreq.part.0>:
    case RCC_CFGR_SWS_PLL1:  /* PLL1 used as system clock  source */

      /* PLL_VCO = (HSE_VALUE or HSI_VALUE or CSI_VALUE/ PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLR
      */
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000a8e0:	4b3b      	ldr	r3, [pc, #236]	; (9000a9d0 <HAL_RCC_GetSysClockFreq.part.0+0xf0>)
uint32_t HAL_RCC_GetSysClockFreq(void)
9000a8e2:	b430      	push	{r4, r5}
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000a8e4:	6a9a      	ldr	r2, [r3, #40]	; 0x28
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000a8e6:	6a9c      	ldr	r4, [r3, #40]	; 0x28
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000a8e8:	6add      	ldr	r5, [r3, #44]	; 0x2c
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));

      if (pllm != 0U)
9000a8ea:	f414 7f7c 	tst.w	r4, #1008	; 0x3f0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000a8ee:	6b59      	ldr	r1, [r3, #52]	; 0x34
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000a8f0:	f3c4 1005 	ubfx	r0, r4, #4, #6
      if (pllm != 0U)
9000a8f4:	d038      	beq.n	9000a968 <HAL_RCC_GetSysClockFreq.part.0+0x88>
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000a8f6:	f3c1 01cc 	ubfx	r1, r1, #3, #13
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000a8fa:	f005 0501 	and.w	r5, r5, #1
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000a8fe:	f002 0203 	and.w	r2, r2, #3
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000a902:	fb05 f101 	mul.w	r1, r5, r1
9000a906:	2a01      	cmp	r2, #1
9000a908:	ee07 1a90 	vmov	s15, r1
9000a90c:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
      {
        switch (pllsource)
9000a910:	d002      	beq.n	9000a918 <HAL_RCC_GetSysClockFreq.part.0+0x38>
9000a912:	2a02      	cmp	r2, #2
9000a914:	d04e      	beq.n	9000a9b4 <HAL_RCC_GetSysClockFreq.part.0+0xd4>
9000a916:	b34a      	cbz	r2, 9000a96c <HAL_RCC_GetSysClockFreq.part.0+0x8c>
          case RCC_PLLSOURCE_HSE:  /* HSE used as PLL clock source */
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
            break;

          default:
            pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000a918:	ee07 0a90 	vmov	s15, r0
9000a91c:	ed9f 5a2d 	vldr	s10, [pc, #180]	; 9000a9d4 <HAL_RCC_GetSysClockFreq.part.0+0xf4>
9000a920:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000a924:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9000a926:	eec5 6a27 	vdiv.f32	s13, s10, s15
9000a92a:	eddf 5a2b 	vldr	s11, [pc, #172]	; 9000a9d8 <HAL_RCC_GetSysClockFreq.part.0+0xf8>
9000a92e:	f3c3 0308 	ubfx	r3, r3, #0, #9
9000a932:	ee07 3a90 	vmov	s15, r3
9000a936:	eeb7 6a00 	vmov.f32	s12, #112	; 0x3f800000  1.0
9000a93a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000a93e:	eee7 7a25 	vfma.f32	s15, s14, s11
9000a942:	ee77 7a86 	vadd.f32	s15, s15, s12
9000a946:	ee66 6aa7 	vmul.f32	s13, s13, s15
            break;
        }
        pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >> 9) + 1U) ;
9000a94a:	4b21      	ldr	r3, [pc, #132]	; (9000a9d0 <HAL_RCC_GetSysClockFreq.part.0+0xf0>)
9000a94c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9000a94e:	f3c3 2346 	ubfx	r3, r3, #9, #7
9000a952:	3301      	adds	r3, #1
        sysclockfreq = (uint32_t)(float_t)(pllvco / (float_t)pllp);
9000a954:	ee07 3a90 	vmov	s15, r3
9000a958:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
9000a95c:	eec6 7a87 	vdiv.f32	s15, s13, s14
9000a960:	eefc 7ae7 	vcvt.u32.f32	s15, s15
9000a964:	ee17 0a90 	vmov	r0, s15
      sysclockfreq = CSI_VALUE;
      break;
  }

  return sysclockfreq;
}
9000a968:	bc30      	pop	{r4, r5}
9000a96a:	4770      	bx	lr
            if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000a96c:	681a      	ldr	r2, [r3, #0]
9000a96e:	0692      	lsls	r2, r2, #26
9000a970:	d527      	bpl.n	9000a9c2 <HAL_RCC_GetSysClockFreq.part.0+0xe2>
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000a972:	6819      	ldr	r1, [r3, #0]
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000a974:	ee07 0a90 	vmov	s15, r0
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000a978:	4a18      	ldr	r2, [pc, #96]	; (9000a9dc <HAL_RCC_GetSysClockFreq.part.0+0xfc>)
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000a97a:	eef7 5a00 	vmov.f32	s11, #112	; 0x3f800000  1.0
9000a97e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000a980:	f3c1 01c1 	ubfx	r1, r1, #3, #2
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000a984:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000a988:	ed9f 5a13 	vldr	s10, [pc, #76]	; 9000a9d8 <HAL_RCC_GetSysClockFreq.part.0+0xf8>
9000a98c:	f3c3 0308 	ubfx	r3, r3, #0, #9
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000a990:	40ca      	lsrs	r2, r1
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000a992:	ee06 3a90 	vmov	s13, r3
9000a996:	ee06 2a10 	vmov	s12, r2
9000a99a:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9000a99e:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
9000a9a2:	eee7 6a05 	vfma.f32	s13, s14, s10
9000a9a6:	ee86 7a27 	vdiv.f32	s14, s12, s15
9000a9aa:	ee76 6aa5 	vadd.f32	s13, s13, s11
9000a9ae:	ee66 6a87 	vmul.f32	s13, s13, s14
9000a9b2:	e7ca      	b.n	9000a94a <HAL_RCC_GetSysClockFreq.part.0+0x6a>
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000a9b4:	ee07 0a90 	vmov	s15, r0
9000a9b8:	ed9f 5a09 	vldr	s10, [pc, #36]	; 9000a9e0 <HAL_RCC_GetSysClockFreq.part.0+0x100>
9000a9bc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000a9c0:	e7b0      	b.n	9000a924 <HAL_RCC_GetSysClockFreq.part.0+0x44>
              pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000a9c2:	ee07 0a90 	vmov	s15, r0
9000a9c6:	ed9f 5a07 	vldr	s10, [pc, #28]	; 9000a9e4 <HAL_RCC_GetSysClockFreq.part.0+0x104>
9000a9ca:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000a9ce:	e7a9      	b.n	9000a924 <HAL_RCC_GetSysClockFreq.part.0+0x44>
9000a9d0:	58024400 	.word	0x58024400
9000a9d4:	4a742400 	.word	0x4a742400
9000a9d8:	39000000 	.word	0x39000000
9000a9dc:	03d09000 	.word	0x03d09000
9000a9e0:	4bbebc20 	.word	0x4bbebc20
9000a9e4:	4c742400 	.word	0x4c742400

9000a9e8 <HAL_RCC_OscConfig>:
  if (RCC_OscInitStruct == NULL)
9000a9e8:	2800      	cmp	r0, #0
9000a9ea:	f000 81e8 	beq.w	9000adbe <HAL_RCC_OscConfig+0x3d6>
{
9000a9ee:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
9000a9f0:	6803      	ldr	r3, [r0, #0]
9000a9f2:	4604      	mov	r4, r0
9000a9f4:	07d9      	lsls	r1, r3, #31
9000a9f6:	d52e      	bpl.n	9000aa56 <HAL_RCC_OscConfig+0x6e>
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000a9f8:	49a4      	ldr	r1, [pc, #656]	; (9000ac8c <HAL_RCC_OscConfig+0x2a4>)
9000a9fa:	690a      	ldr	r2, [r1, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
9000a9fc:	6a89      	ldr	r1, [r1, #40]	; 0x28
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000a9fe:	f002 0238 	and.w	r2, r2, #56	; 0x38
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSE) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSE)))
9000aa02:	2a10      	cmp	r2, #16
9000aa04:	f000 8107 	beq.w	9000ac16 <HAL_RCC_OscConfig+0x22e>
9000aa08:	2a18      	cmp	r2, #24
9000aa0a:	f000 80ff 	beq.w	9000ac0c <HAL_RCC_OscConfig+0x224>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000aa0e:	6863      	ldr	r3, [r4, #4]
9000aa10:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
9000aa14:	f000 812a 	beq.w	9000ac6c <HAL_RCC_OscConfig+0x284>
9000aa18:	2b00      	cmp	r3, #0
9000aa1a:	f000 8168 	beq.w	9000acee <HAL_RCC_OscConfig+0x306>
9000aa1e:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
9000aa22:	4b9a      	ldr	r3, [pc, #616]	; (9000ac8c <HAL_RCC_OscConfig+0x2a4>)
9000aa24:	681a      	ldr	r2, [r3, #0]
9000aa26:	f000 8289 	beq.w	9000af3c <HAL_RCC_OscConfig+0x554>
9000aa2a:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
9000aa2e:	601a      	str	r2, [r3, #0]
9000aa30:	681a      	ldr	r2, [r3, #0]
9000aa32:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
9000aa36:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
9000aa38:	f7fc fe9a 	bl	90007770 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000aa3c:	4e93      	ldr	r6, [pc, #588]	; (9000ac8c <HAL_RCC_OscConfig+0x2a4>)
        tickstart = HAL_GetTick();
9000aa3e:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000aa40:	e005      	b.n	9000aa4e <HAL_RCC_OscConfig+0x66>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
9000aa42:	f7fc fe95 	bl	90007770 <HAL_GetTick>
9000aa46:	1b40      	subs	r0, r0, r5
9000aa48:	2864      	cmp	r0, #100	; 0x64
9000aa4a:	f200 814e 	bhi.w	9000acea <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000aa4e:	6833      	ldr	r3, [r6, #0]
9000aa50:	039b      	lsls	r3, r3, #14
9000aa52:	d5f6      	bpl.n	9000aa42 <HAL_RCC_OscConfig+0x5a>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
9000aa54:	6823      	ldr	r3, [r4, #0]
9000aa56:	079d      	lsls	r5, r3, #30
9000aa58:	f100 808a 	bmi.w	9000ab70 <HAL_RCC_OscConfig+0x188>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000aa5c:	06d9      	lsls	r1, r3, #27
9000aa5e:	d533      	bpl.n	9000aac8 <HAL_RCC_OscConfig+0xe0>
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000aa60:	4a8a      	ldr	r2, [pc, #552]	; (9000ac8c <HAL_RCC_OscConfig+0x2a4>)
9000aa62:	6913      	ldr	r3, [r2, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
9000aa64:	6a92      	ldr	r2, [r2, #40]	; 0x28
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000aa66:	f003 0338 	and.w	r3, r3, #56	; 0x38
    if ((temp_sysclksrc == RCC_CFGR_SWS_CSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_CSI)))
9000aa6a:	2b08      	cmp	r3, #8
9000aa6c:	f000 80e3 	beq.w	9000ac36 <HAL_RCC_OscConfig+0x24e>
9000aa70:	2b18      	cmp	r3, #24
9000aa72:	f000 80db 	beq.w	9000ac2c <HAL_RCC_OscConfig+0x244>
      if ((RCC_OscInitStruct->CSIState) != RCC_CSI_OFF)
9000aa76:	69e3      	ldr	r3, [r4, #28]
        __HAL_RCC_CSI_ENABLE();
9000aa78:	4d84      	ldr	r5, [pc, #528]	; (9000ac8c <HAL_RCC_OscConfig+0x2a4>)
      if ((RCC_OscInitStruct->CSIState) != RCC_CSI_OFF)
9000aa7a:	2b00      	cmp	r3, #0
9000aa7c:	f000 816f 	beq.w	9000ad5e <HAL_RCC_OscConfig+0x376>
        __HAL_RCC_CSI_ENABLE();
9000aa80:	682b      	ldr	r3, [r5, #0]
9000aa82:	f043 0380 	orr.w	r3, r3, #128	; 0x80
9000aa86:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000aa88:	f7fc fe72 	bl	90007770 <HAL_GetTick>
9000aa8c:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
9000aa8e:	e005      	b.n	9000aa9c <HAL_RCC_OscConfig+0xb4>
          if ((HAL_GetTick() - tickstart) > CSI_TIMEOUT_VALUE)
9000aa90:	f7fc fe6e 	bl	90007770 <HAL_GetTick>
9000aa94:	1b80      	subs	r0, r0, r6
9000aa96:	2802      	cmp	r0, #2
9000aa98:	f200 8127 	bhi.w	9000acea <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
9000aa9c:	682b      	ldr	r3, [r5, #0]
9000aa9e:	05db      	lsls	r3, r3, #23
9000aaa0:	d5f6      	bpl.n	9000aa90 <HAL_RCC_OscConfig+0xa8>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000aaa2:	f7fc fe6b 	bl	9000777c <HAL_GetREVID>
9000aaa6:	f241 0303 	movw	r3, #4099	; 0x1003
9000aaaa:	4298      	cmp	r0, r3
9000aaac:	f200 826d 	bhi.w	9000af8a <HAL_RCC_OscConfig+0x5a2>
9000aab0:	6a22      	ldr	r2, [r4, #32]
9000aab2:	686b      	ldr	r3, [r5, #4]
9000aab4:	2a20      	cmp	r2, #32
9000aab6:	f023 43f8 	bic.w	r3, r3, #2080374784	; 0x7c000000
9000aaba:	bf0c      	ite	eq
9000aabc:	f043 4380 	orreq.w	r3, r3, #1073741824	; 0x40000000
9000aac0:	ea43 6382 	orrne.w	r3, r3, r2, lsl #26
9000aac4:	606b      	str	r3, [r5, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000aac6:	6823      	ldr	r3, [r4, #0]
9000aac8:	071d      	lsls	r5, r3, #28
9000aaca:	d516      	bpl.n	9000aafa <HAL_RCC_OscConfig+0x112>
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
9000aacc:	6963      	ldr	r3, [r4, #20]
      __HAL_RCC_LSI_ENABLE();
9000aace:	4d6f      	ldr	r5, [pc, #444]	; (9000ac8c <HAL_RCC_OscConfig+0x2a4>)
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
9000aad0:	2b00      	cmp	r3, #0
9000aad2:	f000 8122 	beq.w	9000ad1a <HAL_RCC_OscConfig+0x332>
      __HAL_RCC_LSI_ENABLE();
9000aad6:	6f6b      	ldr	r3, [r5, #116]	; 0x74
9000aad8:	f043 0301 	orr.w	r3, r3, #1
9000aadc:	676b      	str	r3, [r5, #116]	; 0x74
      tickstart = HAL_GetTick();
9000aade:	f7fc fe47 	bl	90007770 <HAL_GetTick>
9000aae2:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
9000aae4:	e005      	b.n	9000aaf2 <HAL_RCC_OscConfig+0x10a>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
9000aae6:	f7fc fe43 	bl	90007770 <HAL_GetTick>
9000aaea:	1b80      	subs	r0, r0, r6
9000aaec:	2802      	cmp	r0, #2
9000aaee:	f200 80fc 	bhi.w	9000acea <HAL_RCC_OscConfig+0x302>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
9000aaf2:	6f6b      	ldr	r3, [r5, #116]	; 0x74
9000aaf4:	0798      	lsls	r0, r3, #30
9000aaf6:	d5f6      	bpl.n	9000aae6 <HAL_RCC_OscConfig+0xfe>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
9000aaf8:	6823      	ldr	r3, [r4, #0]
9000aafa:	069a      	lsls	r2, r3, #26
9000aafc:	d516      	bpl.n	9000ab2c <HAL_RCC_OscConfig+0x144>
    if ((RCC_OscInitStruct->HSI48State) != RCC_HSI48_OFF)
9000aafe:	69a3      	ldr	r3, [r4, #24]
      __HAL_RCC_HSI48_ENABLE();
9000ab00:	4d62      	ldr	r5, [pc, #392]	; (9000ac8c <HAL_RCC_OscConfig+0x2a4>)
    if ((RCC_OscInitStruct->HSI48State) != RCC_HSI48_OFF)
9000ab02:	2b00      	cmp	r3, #0
9000ab04:	f000 811a 	beq.w	9000ad3c <HAL_RCC_OscConfig+0x354>
      __HAL_RCC_HSI48_ENABLE();
9000ab08:	682b      	ldr	r3, [r5, #0]
9000ab0a:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
9000ab0e:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
9000ab10:	f7fc fe2e 	bl	90007770 <HAL_GetTick>
9000ab14:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
9000ab16:	e005      	b.n	9000ab24 <HAL_RCC_OscConfig+0x13c>
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
9000ab18:	f7fc fe2a 	bl	90007770 <HAL_GetTick>
9000ab1c:	1b80      	subs	r0, r0, r6
9000ab1e:	2802      	cmp	r0, #2
9000ab20:	f200 80e3 	bhi.w	9000acea <HAL_RCC_OscConfig+0x302>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
9000ab24:	682b      	ldr	r3, [r5, #0]
9000ab26:	049f      	lsls	r7, r3, #18
9000ab28:	d5f6      	bpl.n	9000ab18 <HAL_RCC_OscConfig+0x130>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
9000ab2a:	6823      	ldr	r3, [r4, #0]
9000ab2c:	0759      	lsls	r1, r3, #29
9000ab2e:	f100 80a3 	bmi.w	9000ac78 <HAL_RCC_OscConfig+0x290>
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
9000ab32:	6a60      	ldr	r0, [r4, #36]	; 0x24
9000ab34:	b1d0      	cbz	r0, 9000ab6c <HAL_RCC_OscConfig+0x184>
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL1)
9000ab36:	4d55      	ldr	r5, [pc, #340]	; (9000ac8c <HAL_RCC_OscConfig+0x2a4>)
9000ab38:	692b      	ldr	r3, [r5, #16]
9000ab3a:	f003 0338 	and.w	r3, r3, #56	; 0x38
9000ab3e:	2b18      	cmp	r3, #24
9000ab40:	f000 81ae 	beq.w	9000aea0 <HAL_RCC_OscConfig+0x4b8>
        __HAL_RCC_PLL_DISABLE();
9000ab44:	682b      	ldr	r3, [r5, #0]
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
9000ab46:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
9000ab48:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
9000ab4c:	602b      	str	r3, [r5, #0]
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
9000ab4e:	f000 8142 	beq.w	9000add6 <HAL_RCC_OscConfig+0x3ee>
        tickstart = HAL_GetTick();
9000ab52:	f7fc fe0d 	bl	90007770 <HAL_GetTick>
9000ab56:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000ab58:	e005      	b.n	9000ab66 <HAL_RCC_OscConfig+0x17e>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
9000ab5a:	f7fc fe09 	bl	90007770 <HAL_GetTick>
9000ab5e:	1b00      	subs	r0, r0, r4
9000ab60:	2802      	cmp	r0, #2
9000ab62:	f200 80c2 	bhi.w	9000acea <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000ab66:	682b      	ldr	r3, [r5, #0]
9000ab68:	019b      	lsls	r3, r3, #6
9000ab6a:	d4f6      	bmi.n	9000ab5a <HAL_RCC_OscConfig+0x172>
  return HAL_OK;
9000ab6c:	2000      	movs	r0, #0
}
9000ab6e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000ab70:	4a46      	ldr	r2, [pc, #280]	; (9000ac8c <HAL_RCC_OscConfig+0x2a4>)
9000ab72:	6913      	ldr	r3, [r2, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
9000ab74:	6a92      	ldr	r2, [r2, #40]	; 0x28
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
9000ab76:	f013 0338 	ands.w	r3, r3, #56	; 0x38
9000ab7a:	d12d      	bne.n	9000abd8 <HAL_RCC_OscConfig+0x1f0>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
9000ab7c:	4b43      	ldr	r3, [pc, #268]	; (9000ac8c <HAL_RCC_OscConfig+0x2a4>)
9000ab7e:	68e2      	ldr	r2, [r4, #12]
9000ab80:	681b      	ldr	r3, [r3, #0]
9000ab82:	0759      	lsls	r1, r3, #29
9000ab84:	d501      	bpl.n	9000ab8a <HAL_RCC_OscConfig+0x1a2>
9000ab86:	2a00      	cmp	r2, #0
9000ab88:	d04e      	beq.n	9000ac28 <HAL_RCC_OscConfig+0x240>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000ab8a:	4d40      	ldr	r5, [pc, #256]	; (9000ac8c <HAL_RCC_OscConfig+0x2a4>)
9000ab8c:	682b      	ldr	r3, [r5, #0]
9000ab8e:	f023 0319 	bic.w	r3, r3, #25
9000ab92:	4313      	orrs	r3, r2
9000ab94:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000ab96:	f7fc fdeb 	bl	90007770 <HAL_GetTick>
9000ab9a:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000ab9c:	e005      	b.n	9000abaa <HAL_RCC_OscConfig+0x1c2>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
9000ab9e:	f7fc fde7 	bl	90007770 <HAL_GetTick>
9000aba2:	1b80      	subs	r0, r0, r6
9000aba4:	2802      	cmp	r0, #2
9000aba6:	f200 80a0 	bhi.w	9000acea <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000abaa:	682b      	ldr	r3, [r5, #0]
9000abac:	075b      	lsls	r3, r3, #29
9000abae:	d5f6      	bpl.n	9000ab9e <HAL_RCC_OscConfig+0x1b6>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
9000abb0:	f7fc fde4 	bl	9000777c <HAL_GetREVID>
9000abb4:	f241 0303 	movw	r3, #4099	; 0x1003
9000abb8:	4298      	cmp	r0, r3
9000abba:	f200 80f7 	bhi.w	9000adac <HAL_RCC_OscConfig+0x3c4>
9000abbe:	6922      	ldr	r2, [r4, #16]
9000abc0:	686b      	ldr	r3, [r5, #4]
9000abc2:	2a40      	cmp	r2, #64	; 0x40
9000abc4:	f423 337c 	bic.w	r3, r3, #258048	; 0x3f000
9000abc8:	bf0c      	ite	eq
9000abca:	f443 3300 	orreq.w	r3, r3, #131072	; 0x20000
9000abce:	ea43 3302 	orrne.w	r3, r3, r2, lsl #12
9000abd2:	606b      	str	r3, [r5, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000abd4:	6823      	ldr	r3, [r4, #0]
9000abd6:	e741      	b.n	9000aa5c <HAL_RCC_OscConfig+0x74>
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
9000abd8:	2b18      	cmp	r3, #24
9000abda:	f000 80e3 	beq.w	9000ada4 <HAL_RCC_OscConfig+0x3bc>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000abde:	4d2b      	ldr	r5, [pc, #172]	; (9000ac8c <HAL_RCC_OscConfig+0x2a4>)
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
9000abe0:	68e2      	ldr	r2, [r4, #12]
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000abe2:	682b      	ldr	r3, [r5, #0]
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
9000abe4:	2a00      	cmp	r2, #0
9000abe6:	f000 80cc 	beq.w	9000ad82 <HAL_RCC_OscConfig+0x39a>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000abea:	f023 0319 	bic.w	r3, r3, #25
9000abee:	4313      	orrs	r3, r2
9000abf0:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000abf2:	f7fc fdbd 	bl	90007770 <HAL_GetTick>
9000abf6:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000abf8:	e004      	b.n	9000ac04 <HAL_RCC_OscConfig+0x21c>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
9000abfa:	f7fc fdb9 	bl	90007770 <HAL_GetTick>
9000abfe:	1b80      	subs	r0, r0, r6
9000ac00:	2802      	cmp	r0, #2
9000ac02:	d872      	bhi.n	9000acea <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000ac04:	682b      	ldr	r3, [r5, #0]
9000ac06:	075f      	lsls	r7, r3, #29
9000ac08:	d5f7      	bpl.n	9000abfa <HAL_RCC_OscConfig+0x212>
9000ac0a:	e7d1      	b.n	9000abb0 <HAL_RCC_OscConfig+0x1c8>
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSE) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSE)))
9000ac0c:	f001 0103 	and.w	r1, r1, #3
9000ac10:	2902      	cmp	r1, #2
9000ac12:	f47f aefc 	bne.w	9000aa0e <HAL_RCC_OscConfig+0x26>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
9000ac16:	4a1d      	ldr	r2, [pc, #116]	; (9000ac8c <HAL_RCC_OscConfig+0x2a4>)
9000ac18:	6812      	ldr	r2, [r2, #0]
9000ac1a:	0392      	lsls	r2, r2, #14
9000ac1c:	f57f af1b 	bpl.w	9000aa56 <HAL_RCC_OscConfig+0x6e>
9000ac20:	6862      	ldr	r2, [r4, #4]
9000ac22:	2a00      	cmp	r2, #0
9000ac24:	f47f af17 	bne.w	9000aa56 <HAL_RCC_OscConfig+0x6e>
        return HAL_ERROR;
9000ac28:	2001      	movs	r0, #1
}
9000ac2a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    if ((temp_sysclksrc == RCC_CFGR_SWS_CSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_CSI)))
9000ac2c:	f002 0203 	and.w	r2, r2, #3
9000ac30:	2a01      	cmp	r2, #1
9000ac32:	f47f af20 	bne.w	9000aa76 <HAL_RCC_OscConfig+0x8e>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U) && (RCC_OscInitStruct->CSIState != RCC_CSI_ON))
9000ac36:	4b15      	ldr	r3, [pc, #84]	; (9000ac8c <HAL_RCC_OscConfig+0x2a4>)
9000ac38:	681b      	ldr	r3, [r3, #0]
9000ac3a:	05da      	lsls	r2, r3, #23
9000ac3c:	d502      	bpl.n	9000ac44 <HAL_RCC_OscConfig+0x25c>
9000ac3e:	69e3      	ldr	r3, [r4, #28]
9000ac40:	2b80      	cmp	r3, #128	; 0x80
9000ac42:	d1f1      	bne.n	9000ac28 <HAL_RCC_OscConfig+0x240>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000ac44:	f7fc fd9a 	bl	9000777c <HAL_GetREVID>
9000ac48:	f241 0303 	movw	r3, #4099	; 0x1003
9000ac4c:	4298      	cmp	r0, r3
9000ac4e:	f200 80b8 	bhi.w	9000adc2 <HAL_RCC_OscConfig+0x3da>
9000ac52:	6a22      	ldr	r2, [r4, #32]
9000ac54:	2a20      	cmp	r2, #32
9000ac56:	f000 81a7 	beq.w	9000afa8 <HAL_RCC_OscConfig+0x5c0>
9000ac5a:	490c      	ldr	r1, [pc, #48]	; (9000ac8c <HAL_RCC_OscConfig+0x2a4>)
9000ac5c:	684b      	ldr	r3, [r1, #4]
9000ac5e:	f023 43f8 	bic.w	r3, r3, #2080374784	; 0x7c000000
9000ac62:	ea43 6382 	orr.w	r3, r3, r2, lsl #26
9000ac66:	604b      	str	r3, [r1, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000ac68:	6823      	ldr	r3, [r4, #0]
9000ac6a:	e72d      	b.n	9000aac8 <HAL_RCC_OscConfig+0xe0>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000ac6c:	4a07      	ldr	r2, [pc, #28]	; (9000ac8c <HAL_RCC_OscConfig+0x2a4>)
9000ac6e:	6813      	ldr	r3, [r2, #0]
9000ac70:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
9000ac74:	6013      	str	r3, [r2, #0]
      if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
9000ac76:	e6df      	b.n	9000aa38 <HAL_RCC_OscConfig+0x50>
    PWR->CR1 |= PWR_CR1_DBP;
9000ac78:	4d05      	ldr	r5, [pc, #20]	; (9000ac90 <HAL_RCC_OscConfig+0x2a8>)
9000ac7a:	682b      	ldr	r3, [r5, #0]
9000ac7c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
9000ac80:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
9000ac82:	f7fc fd75 	bl	90007770 <HAL_GetTick>
9000ac86:	4606      	mov	r6, r0
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000ac88:	e009      	b.n	9000ac9e <HAL_RCC_OscConfig+0x2b6>
9000ac8a:	bf00      	nop
9000ac8c:	58024400 	.word	0x58024400
9000ac90:	58024800 	.word	0x58024800
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
9000ac94:	f7fc fd6c 	bl	90007770 <HAL_GetTick>
9000ac98:	1b80      	subs	r0, r0, r6
9000ac9a:	2864      	cmp	r0, #100	; 0x64
9000ac9c:	d825      	bhi.n	9000acea <HAL_RCC_OscConfig+0x302>
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000ac9e:	682b      	ldr	r3, [r5, #0]
9000aca0:	05da      	lsls	r2, r3, #23
9000aca2:	d5f7      	bpl.n	9000ac94 <HAL_RCC_OscConfig+0x2ac>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000aca4:	68a3      	ldr	r3, [r4, #8]
9000aca6:	2b01      	cmp	r3, #1
9000aca8:	f000 8178 	beq.w	9000af9c <HAL_RCC_OscConfig+0x5b4>
9000acac:	2b00      	cmp	r3, #0
9000acae:	f000 8153 	beq.w	9000af58 <HAL_RCC_OscConfig+0x570>
9000acb2:	2b05      	cmp	r3, #5
9000acb4:	4ba5      	ldr	r3, [pc, #660]	; (9000af4c <HAL_RCC_OscConfig+0x564>)
9000acb6:	6f1a      	ldr	r2, [r3, #112]	; 0x70
9000acb8:	f000 817f 	beq.w	9000afba <HAL_RCC_OscConfig+0x5d2>
9000acbc:	f022 0201 	bic.w	r2, r2, #1
9000acc0:	671a      	str	r2, [r3, #112]	; 0x70
9000acc2:	6f1a      	ldr	r2, [r3, #112]	; 0x70
9000acc4:	f022 0204 	bic.w	r2, r2, #4
9000acc8:	671a      	str	r2, [r3, #112]	; 0x70
      tickstart = HAL_GetTick();
9000acca:	f7fc fd51 	bl	90007770 <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000acce:	4e9f      	ldr	r6, [pc, #636]	; (9000af4c <HAL_RCC_OscConfig+0x564>)
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000acd0:	f241 3788 	movw	r7, #5000	; 0x1388
      tickstart = HAL_GetTick();
9000acd4:	4605      	mov	r5, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000acd6:	e004      	b.n	9000ace2 <HAL_RCC_OscConfig+0x2fa>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000acd8:	f7fc fd4a 	bl	90007770 <HAL_GetTick>
9000acdc:	1b40      	subs	r0, r0, r5
9000acde:	42b8      	cmp	r0, r7
9000ace0:	d803      	bhi.n	9000acea <HAL_RCC_OscConfig+0x302>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000ace2:	6f33      	ldr	r3, [r6, #112]	; 0x70
9000ace4:	079b      	lsls	r3, r3, #30
9000ace6:	d5f7      	bpl.n	9000acd8 <HAL_RCC_OscConfig+0x2f0>
9000ace8:	e723      	b.n	9000ab32 <HAL_RCC_OscConfig+0x14a>
            return HAL_TIMEOUT;
9000acea:	2003      	movs	r0, #3
}
9000acec:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000acee:	4d97      	ldr	r5, [pc, #604]	; (9000af4c <HAL_RCC_OscConfig+0x564>)
9000acf0:	682b      	ldr	r3, [r5, #0]
9000acf2:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
9000acf6:	602b      	str	r3, [r5, #0]
9000acf8:	682b      	ldr	r3, [r5, #0]
9000acfa:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
9000acfe:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000ad00:	f7fc fd36 	bl	90007770 <HAL_GetTick>
9000ad04:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
9000ad06:	e004      	b.n	9000ad12 <HAL_RCC_OscConfig+0x32a>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
9000ad08:	f7fc fd32 	bl	90007770 <HAL_GetTick>
9000ad0c:	1b80      	subs	r0, r0, r6
9000ad0e:	2864      	cmp	r0, #100	; 0x64
9000ad10:	d8eb      	bhi.n	9000acea <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
9000ad12:	682b      	ldr	r3, [r5, #0]
9000ad14:	039f      	lsls	r7, r3, #14
9000ad16:	d4f7      	bmi.n	9000ad08 <HAL_RCC_OscConfig+0x320>
9000ad18:	e69c      	b.n	9000aa54 <HAL_RCC_OscConfig+0x6c>
      __HAL_RCC_LSI_DISABLE();
9000ad1a:	6f6b      	ldr	r3, [r5, #116]	; 0x74
9000ad1c:	f023 0301 	bic.w	r3, r3, #1
9000ad20:	676b      	str	r3, [r5, #116]	; 0x74
      tickstart = HAL_GetTick();
9000ad22:	f7fc fd25 	bl	90007770 <HAL_GetTick>
9000ad26:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
9000ad28:	e004      	b.n	9000ad34 <HAL_RCC_OscConfig+0x34c>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
9000ad2a:	f7fc fd21 	bl	90007770 <HAL_GetTick>
9000ad2e:	1b80      	subs	r0, r0, r6
9000ad30:	2802      	cmp	r0, #2
9000ad32:	d8da      	bhi.n	9000acea <HAL_RCC_OscConfig+0x302>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
9000ad34:	6f6b      	ldr	r3, [r5, #116]	; 0x74
9000ad36:	0799      	lsls	r1, r3, #30
9000ad38:	d4f7      	bmi.n	9000ad2a <HAL_RCC_OscConfig+0x342>
9000ad3a:	e6dd      	b.n	9000aaf8 <HAL_RCC_OscConfig+0x110>
      __HAL_RCC_HSI48_DISABLE();
9000ad3c:	682b      	ldr	r3, [r5, #0]
9000ad3e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
9000ad42:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
9000ad44:	f7fc fd14 	bl	90007770 <HAL_GetTick>
9000ad48:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
9000ad4a:	e004      	b.n	9000ad56 <HAL_RCC_OscConfig+0x36e>
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
9000ad4c:	f7fc fd10 	bl	90007770 <HAL_GetTick>
9000ad50:	1b80      	subs	r0, r0, r6
9000ad52:	2802      	cmp	r0, #2
9000ad54:	d8c9      	bhi.n	9000acea <HAL_RCC_OscConfig+0x302>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
9000ad56:	682b      	ldr	r3, [r5, #0]
9000ad58:	0498      	lsls	r0, r3, #18
9000ad5a:	d4f7      	bmi.n	9000ad4c <HAL_RCC_OscConfig+0x364>
9000ad5c:	e6e5      	b.n	9000ab2a <HAL_RCC_OscConfig+0x142>
        __HAL_RCC_CSI_DISABLE();
9000ad5e:	682b      	ldr	r3, [r5, #0]
9000ad60:	f023 0380 	bic.w	r3, r3, #128	; 0x80
9000ad64:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000ad66:	f7fc fd03 	bl	90007770 <HAL_GetTick>
9000ad6a:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
9000ad6c:	e004      	b.n	9000ad78 <HAL_RCC_OscConfig+0x390>
          if ((HAL_GetTick() - tickstart) > CSI_TIMEOUT_VALUE)
9000ad6e:	f7fc fcff 	bl	90007770 <HAL_GetTick>
9000ad72:	1b80      	subs	r0, r0, r6
9000ad74:	2802      	cmp	r0, #2
9000ad76:	d8b8      	bhi.n	9000acea <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
9000ad78:	682b      	ldr	r3, [r5, #0]
9000ad7a:	05df      	lsls	r7, r3, #23
9000ad7c:	d4f7      	bmi.n	9000ad6e <HAL_RCC_OscConfig+0x386>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000ad7e:	6823      	ldr	r3, [r4, #0]
9000ad80:	e6a2      	b.n	9000aac8 <HAL_RCC_OscConfig+0xe0>
        __HAL_RCC_HSI_DISABLE();
9000ad82:	f023 0301 	bic.w	r3, r3, #1
9000ad86:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000ad88:	f7fc fcf2 	bl	90007770 <HAL_GetTick>
9000ad8c:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
9000ad8e:	e004      	b.n	9000ad9a <HAL_RCC_OscConfig+0x3b2>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
9000ad90:	f7fc fcee 	bl	90007770 <HAL_GetTick>
9000ad94:	1b80      	subs	r0, r0, r6
9000ad96:	2802      	cmp	r0, #2
9000ad98:	d8a7      	bhi.n	9000acea <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
9000ad9a:	682b      	ldr	r3, [r5, #0]
9000ad9c:	0758      	lsls	r0, r3, #29
9000ad9e:	d4f7      	bmi.n	9000ad90 <HAL_RCC_OscConfig+0x3a8>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000ada0:	6823      	ldr	r3, [r4, #0]
9000ada2:	e65b      	b.n	9000aa5c <HAL_RCC_OscConfig+0x74>
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
9000ada4:	0790      	lsls	r0, r2, #30
9000ada6:	f47f af1a 	bne.w	9000abde <HAL_RCC_OscConfig+0x1f6>
9000adaa:	e6e7      	b.n	9000ab7c <HAL_RCC_OscConfig+0x194>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
9000adac:	686b      	ldr	r3, [r5, #4]
9000adae:	6922      	ldr	r2, [r4, #16]
9000adb0:	f023 43fe 	bic.w	r3, r3, #2130706432	; 0x7f000000
9000adb4:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
9000adb8:	606b      	str	r3, [r5, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000adba:	6823      	ldr	r3, [r4, #0]
9000adbc:	e64e      	b.n	9000aa5c <HAL_RCC_OscConfig+0x74>
    return HAL_ERROR;
9000adbe:	2001      	movs	r0, #1
}
9000adc0:	4770      	bx	lr
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000adc2:	4a62      	ldr	r2, [pc, #392]	; (9000af4c <HAL_RCC_OscConfig+0x564>)
9000adc4:	6a21      	ldr	r1, [r4, #32]
9000adc6:	68d3      	ldr	r3, [r2, #12]
9000adc8:	f023 537c 	bic.w	r3, r3, #1056964608	; 0x3f000000
9000adcc:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
9000add0:	60d3      	str	r3, [r2, #12]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000add2:	6823      	ldr	r3, [r4, #0]
9000add4:	e678      	b.n	9000aac8 <HAL_RCC_OscConfig+0xe0>
        tickstart = HAL_GetTick();
9000add6:	f7fc fccb 	bl	90007770 <HAL_GetTick>
9000adda:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000addc:	e004      	b.n	9000ade8 <HAL_RCC_OscConfig+0x400>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
9000adde:	f7fc fcc7 	bl	90007770 <HAL_GetTick>
9000ade2:	1b80      	subs	r0, r0, r6
9000ade4:	2802      	cmp	r0, #2
9000ade6:	d880      	bhi.n	9000acea <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000ade8:	682b      	ldr	r3, [r5, #0]
9000adea:	0199      	lsls	r1, r3, #6
9000adec:	d4f7      	bmi.n	9000adde <HAL_RCC_OscConfig+0x3f6>
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
9000adee:	6aa9      	ldr	r1, [r5, #40]	; 0x28
9000adf0:	4b57      	ldr	r3, [pc, #348]	; (9000af50 <HAL_RCC_OscConfig+0x568>)
9000adf2:	6aa2      	ldr	r2, [r4, #40]	; 0x28
9000adf4:	400b      	ands	r3, r1
        __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000adf6:	4957      	ldr	r1, [pc, #348]	; (9000af54 <HAL_RCC_OscConfig+0x56c>)
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000adf8:	4e54      	ldr	r6, [pc, #336]	; (9000af4c <HAL_RCC_OscConfig+0x564>)
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
9000adfa:	4313      	orrs	r3, r2
9000adfc:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000adfe:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
9000ae02:	62ab      	str	r3, [r5, #40]	; 0x28
9000ae04:	e9d4 320d 	ldrd	r3, r2, [r4, #52]	; 0x34
9000ae08:	3b01      	subs	r3, #1
9000ae0a:	3a01      	subs	r2, #1
9000ae0c:	025b      	lsls	r3, r3, #9
9000ae0e:	0412      	lsls	r2, r2, #16
9000ae10:	b29b      	uxth	r3, r3
9000ae12:	f402 02fe 	and.w	r2, r2, #8323072	; 0x7f0000
9000ae16:	4313      	orrs	r3, r2
9000ae18:	6b22      	ldr	r2, [r4, #48]	; 0x30
9000ae1a:	3a01      	subs	r2, #1
9000ae1c:	f3c2 0208 	ubfx	r2, r2, #0, #9
9000ae20:	4313      	orrs	r3, r2
9000ae22:	6be2      	ldr	r2, [r4, #60]	; 0x3c
9000ae24:	3a01      	subs	r2, #1
9000ae26:	0612      	lsls	r2, r2, #24
9000ae28:	f002 42fe 	and.w	r2, r2, #2130706432	; 0x7f000000
9000ae2c:	4313      	orrs	r3, r2
9000ae2e:	632b      	str	r3, [r5, #48]	; 0x30
        __HAL_RCC_PLLFRACN_DISABLE();
9000ae30:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000ae32:	f023 0301 	bic.w	r3, r3, #1
9000ae36:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000ae38:	6b6a      	ldr	r2, [r5, #52]	; 0x34
9000ae3a:	6ca3      	ldr	r3, [r4, #72]	; 0x48
9000ae3c:	4011      	ands	r1, r2
9000ae3e:	ea41 01c3 	orr.w	r1, r1, r3, lsl #3
9000ae42:	6369      	str	r1, [r5, #52]	; 0x34
        __HAL_RCC_PLL_VCIRANGE(RCC_OscInitStruct->PLL.PLLRGE) ;
9000ae44:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000ae46:	6c22      	ldr	r2, [r4, #64]	; 0x40
9000ae48:	f023 030c 	bic.w	r3, r3, #12
9000ae4c:	4313      	orrs	r3, r2
9000ae4e:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLL_VCORANGE(RCC_OscInitStruct->PLL.PLLVCOSEL) ;
9000ae50:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000ae52:	6c62      	ldr	r2, [r4, #68]	; 0x44
9000ae54:	f023 0302 	bic.w	r3, r3, #2
9000ae58:	4313      	orrs	r3, r2
9000ae5a:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
9000ae5c:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000ae5e:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
9000ae62:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000ae64:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000ae66:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
9000ae6a:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVR);
9000ae6c:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000ae6e:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
9000ae72:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLLFRACN_ENABLE();
9000ae74:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000ae76:	f043 0301 	orr.w	r3, r3, #1
9000ae7a:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLL_ENABLE();
9000ae7c:	682b      	ldr	r3, [r5, #0]
9000ae7e:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
9000ae82:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000ae84:	f7fc fc74 	bl	90007770 <HAL_GetTick>
9000ae88:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000ae8a:	e005      	b.n	9000ae98 <HAL_RCC_OscConfig+0x4b0>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
9000ae8c:	f7fc fc70 	bl	90007770 <HAL_GetTick>
9000ae90:	1b00      	subs	r0, r0, r4
9000ae92:	2802      	cmp	r0, #2
9000ae94:	f63f af29 	bhi.w	9000acea <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000ae98:	6833      	ldr	r3, [r6, #0]
9000ae9a:	019a      	lsls	r2, r3, #6
9000ae9c:	d5f6      	bpl.n	9000ae8c <HAL_RCC_OscConfig+0x4a4>
9000ae9e:	e665      	b.n	9000ab6c <HAL_RCC_OscConfig+0x184>
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
9000aea0:	2801      	cmp	r0, #1
      temp1_pllckcfg = RCC->PLLCKSELR;
9000aea2:	6aaa      	ldr	r2, [r5, #40]	; 0x28
      temp2_pllckcfg = RCC->PLL1DIVR;
9000aea4:	6b2e      	ldr	r6, [r5, #48]	; 0x30
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
9000aea6:	f43f ae62 	beq.w	9000ab6e <HAL_RCC_OscConfig+0x186>
          (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
9000aeaa:	f002 0303 	and.w	r3, r2, #3
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
9000aeae:	6aa1      	ldr	r1, [r4, #40]	; 0x28
9000aeb0:	428b      	cmp	r3, r1
9000aeb2:	f47f aeb9 	bne.w	9000ac28 <HAL_RCC_OscConfig+0x240>
          ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
9000aeb6:	f3c2 1205 	ubfx	r2, r2, #4, #6
          (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
9000aeba:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000aebc:	429a      	cmp	r2, r3
9000aebe:	f47f aeb3 	bne.w	9000ac28 <HAL_RCC_OscConfig+0x240>
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
9000aec2:	6b23      	ldr	r3, [r4, #48]	; 0x30
9000aec4:	f3c6 0208 	ubfx	r2, r6, #0, #9
9000aec8:	3b01      	subs	r3, #1
          ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
9000aeca:	429a      	cmp	r2, r3
9000aecc:	f47f aeac 	bne.w	9000ac28 <HAL_RCC_OscConfig+0x240>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
9000aed0:	6b63      	ldr	r3, [r4, #52]	; 0x34
9000aed2:	f3c6 2246 	ubfx	r2, r6, #9, #7
9000aed6:	3b01      	subs	r3, #1
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
9000aed8:	429a      	cmp	r2, r3
9000aeda:	f47f aea5 	bne.w	9000ac28 <HAL_RCC_OscConfig+0x240>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
9000aede:	6ba3      	ldr	r3, [r4, #56]	; 0x38
9000aee0:	f3c6 4206 	ubfx	r2, r6, #16, #7
9000aee4:	3b01      	subs	r3, #1
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
9000aee6:	429a      	cmp	r2, r3
9000aee8:	f47f ae9e 	bne.w	9000ac28 <HAL_RCC_OscConfig+0x240>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_R1) >> RCC_PLL1DIVR_R1_Pos) != (RCC_OscInitStruct->PLL.PLLR - 1U)))
9000aeec:	6be3      	ldr	r3, [r4, #60]	; 0x3c
9000aeee:	f3c6 6606 	ubfx	r6, r6, #24, #7
9000aef2:	3b01      	subs	r3, #1
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
9000aef4:	429e      	cmp	r6, r3
9000aef6:	f47f ae97 	bne.w	9000ac28 <HAL_RCC_OscConfig+0x240>
        temp1_pllckcfg = ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> RCC_PLL1FRACR_FRACN1_Pos);
9000aefa:	6b6b      	ldr	r3, [r5, #52]	; 0x34
        if (RCC_OscInitStruct->PLL.PLLFRACN != temp1_pllckcfg)
9000aefc:	6ca2      	ldr	r2, [r4, #72]	; 0x48
        temp1_pllckcfg = ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> RCC_PLL1FRACR_FRACN1_Pos);
9000aefe:	f3c3 03cc 	ubfx	r3, r3, #3, #13
        if (RCC_OscInitStruct->PLL.PLLFRACN != temp1_pllckcfg)
9000af02:	429a      	cmp	r2, r3
9000af04:	f43f ae32 	beq.w	9000ab6c <HAL_RCC_OscConfig+0x184>
          __HAL_RCC_PLLFRACN_DISABLE();
9000af08:	4a10      	ldr	r2, [pc, #64]	; (9000af4c <HAL_RCC_OscConfig+0x564>)
9000af0a:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
9000af0c:	f023 0301 	bic.w	r3, r3, #1
9000af10:	62d3      	str	r3, [r2, #44]	; 0x2c
          tickstart = HAL_GetTick();
9000af12:	f7fc fc2d 	bl	90007770 <HAL_GetTick>
9000af16:	4605      	mov	r5, r0
          while ((HAL_GetTick() - tickstart) < PLL_FRAC_TIMEOUT_VALUE)
9000af18:	f7fc fc2a 	bl	90007770 <HAL_GetTick>
9000af1c:	42a8      	cmp	r0, r5
9000af1e:	d0fb      	beq.n	9000af18 <HAL_RCC_OscConfig+0x530>
          __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000af20:	4a0a      	ldr	r2, [pc, #40]	; (9000af4c <HAL_RCC_OscConfig+0x564>)
  return HAL_OK;
9000af22:	2000      	movs	r0, #0
          __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000af24:	6ca1      	ldr	r1, [r4, #72]	; 0x48
9000af26:	4b0b      	ldr	r3, [pc, #44]	; (9000af54 <HAL_RCC_OscConfig+0x56c>)
9000af28:	6b54      	ldr	r4, [r2, #52]	; 0x34
9000af2a:	4023      	ands	r3, r4
9000af2c:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
9000af30:	6353      	str	r3, [r2, #52]	; 0x34
          __HAL_RCC_PLLFRACN_ENABLE();
9000af32:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
9000af34:	f043 0301 	orr.w	r3, r3, #1
9000af38:	62d3      	str	r3, [r2, #44]	; 0x2c
}
9000af3a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000af3c:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
9000af40:	601a      	str	r2, [r3, #0]
9000af42:	681a      	ldr	r2, [r3, #0]
9000af44:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
9000af48:	601a      	str	r2, [r3, #0]
9000af4a:	e575      	b.n	9000aa38 <HAL_RCC_OscConfig+0x50>
9000af4c:	58024400 	.word	0x58024400
9000af50:	fffffc0c 	.word	0xfffffc0c
9000af54:	ffff0007 	.word	0xffff0007
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000af58:	4d1c      	ldr	r5, [pc, #112]	; (9000afcc <HAL_RCC_OscConfig+0x5e4>)
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000af5a:	f241 3788 	movw	r7, #5000	; 0x1388
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000af5e:	6f2b      	ldr	r3, [r5, #112]	; 0x70
9000af60:	f023 0301 	bic.w	r3, r3, #1
9000af64:	672b      	str	r3, [r5, #112]	; 0x70
9000af66:	6f2b      	ldr	r3, [r5, #112]	; 0x70
9000af68:	f023 0304 	bic.w	r3, r3, #4
9000af6c:	672b      	str	r3, [r5, #112]	; 0x70
      tickstart = HAL_GetTick();
9000af6e:	f7fc fbff 	bl	90007770 <HAL_GetTick>
9000af72:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
9000af74:	e005      	b.n	9000af82 <HAL_RCC_OscConfig+0x59a>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000af76:	f7fc fbfb 	bl	90007770 <HAL_GetTick>
9000af7a:	1b80      	subs	r0, r0, r6
9000af7c:	42b8      	cmp	r0, r7
9000af7e:	f63f aeb4 	bhi.w	9000acea <HAL_RCC_OscConfig+0x302>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
9000af82:	6f2b      	ldr	r3, [r5, #112]	; 0x70
9000af84:	0798      	lsls	r0, r3, #30
9000af86:	d4f6      	bmi.n	9000af76 <HAL_RCC_OscConfig+0x58e>
9000af88:	e5d3      	b.n	9000ab32 <HAL_RCC_OscConfig+0x14a>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000af8a:	68eb      	ldr	r3, [r5, #12]
9000af8c:	6a22      	ldr	r2, [r4, #32]
9000af8e:	f023 537c 	bic.w	r3, r3, #1056964608	; 0x3f000000
9000af92:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
9000af96:	60eb      	str	r3, [r5, #12]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000af98:	6823      	ldr	r3, [r4, #0]
9000af9a:	e595      	b.n	9000aac8 <HAL_RCC_OscConfig+0xe0>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000af9c:	4a0b      	ldr	r2, [pc, #44]	; (9000afcc <HAL_RCC_OscConfig+0x5e4>)
9000af9e:	6f13      	ldr	r3, [r2, #112]	; 0x70
9000afa0:	f043 0301 	orr.w	r3, r3, #1
9000afa4:	6713      	str	r3, [r2, #112]	; 0x70
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
9000afa6:	e690      	b.n	9000acca <HAL_RCC_OscConfig+0x2e2>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000afa8:	4a08      	ldr	r2, [pc, #32]	; (9000afcc <HAL_RCC_OscConfig+0x5e4>)
9000afaa:	6853      	ldr	r3, [r2, #4]
9000afac:	f023 43f8 	bic.w	r3, r3, #2080374784	; 0x7c000000
9000afb0:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
9000afb4:	6053      	str	r3, [r2, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000afb6:	6823      	ldr	r3, [r4, #0]
9000afb8:	e586      	b.n	9000aac8 <HAL_RCC_OscConfig+0xe0>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000afba:	f042 0204 	orr.w	r2, r2, #4
9000afbe:	671a      	str	r2, [r3, #112]	; 0x70
9000afc0:	6f1a      	ldr	r2, [r3, #112]	; 0x70
9000afc2:	f042 0201 	orr.w	r2, r2, #1
9000afc6:	671a      	str	r2, [r3, #112]	; 0x70
9000afc8:	e67f      	b.n	9000acca <HAL_RCC_OscConfig+0x2e2>
9000afca:	bf00      	nop
9000afcc:	58024400 	.word	0x58024400

9000afd0 <HAL_RCC_GetSysClockFreq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000afd0:	4a47      	ldr	r2, [pc, #284]	; (9000b0f0 <HAL_RCC_GetSysClockFreq+0x120>)
9000afd2:	6913      	ldr	r3, [r2, #16]
9000afd4:	f003 0338 	and.w	r3, r3, #56	; 0x38
9000afd8:	2b10      	cmp	r3, #16
9000afda:	d004      	beq.n	9000afe6 <HAL_RCC_GetSysClockFreq+0x16>
9000afdc:	2b18      	cmp	r3, #24
9000afde:	d00d      	beq.n	9000affc <HAL_RCC_GetSysClockFreq+0x2c>
9000afe0:	b11b      	cbz	r3, 9000afea <HAL_RCC_GetSysClockFreq+0x1a>
      sysclockfreq = CSI_VALUE;
9000afe2:	4844      	ldr	r0, [pc, #272]	; (9000b0f4 <HAL_RCC_GetSysClockFreq+0x124>)
9000afe4:	4770      	bx	lr
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000afe6:	4844      	ldr	r0, [pc, #272]	; (9000b0f8 <HAL_RCC_GetSysClockFreq+0x128>)
9000afe8:	4770      	bx	lr
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000afea:	6813      	ldr	r3, [r2, #0]
9000afec:	0699      	lsls	r1, r3, #26
9000afee:	d54a      	bpl.n	9000b086 <HAL_RCC_GetSysClockFreq+0xb6>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000aff0:	6813      	ldr	r3, [r2, #0]
9000aff2:	4842      	ldr	r0, [pc, #264]	; (9000b0fc <HAL_RCC_GetSysClockFreq+0x12c>)
9000aff4:	f3c3 03c1 	ubfx	r3, r3, #3, #2
9000aff8:	40d8      	lsrs	r0, r3
9000affa:	4770      	bx	lr
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000affc:	6a93      	ldr	r3, [r2, #40]	; 0x28
{
9000affe:	b430      	push	{r4, r5}
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000b000:	6a94      	ldr	r4, [r2, #40]	; 0x28
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000b002:	6ad5      	ldr	r5, [r2, #44]	; 0x2c
      if (pllm != 0U)
9000b004:	f414 7f7c 	tst.w	r4, #1008	; 0x3f0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000b008:	6b51      	ldr	r1, [r2, #52]	; 0x34
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000b00a:	f3c4 1005 	ubfx	r0, r4, #4, #6
      if (pllm != 0U)
9000b00e:	d038      	beq.n	9000b082 <HAL_RCC_GetSysClockFreq+0xb2>
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000b010:	f3c1 01cc 	ubfx	r1, r1, #3, #13
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000b014:	f005 0501 	and.w	r5, r5, #1
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000b018:	f003 0303 	and.w	r3, r3, #3
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000b01c:	fb05 f101 	mul.w	r1, r5, r1
9000b020:	2b01      	cmp	r3, #1
9000b022:	ee07 1a90 	vmov	s15, r1
9000b026:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
        switch (pllsource)
9000b02a:	d002      	beq.n	9000b032 <HAL_RCC_GetSysClockFreq+0x62>
9000b02c:	2b02      	cmp	r3, #2
9000b02e:	d02c      	beq.n	9000b08a <HAL_RCC_GetSysClockFreq+0xba>
9000b030:	b393      	cbz	r3, 9000b098 <HAL_RCC_GetSysClockFreq+0xc8>
            pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000b032:	ee07 0a90 	vmov	s15, r0
9000b036:	ed9f 5a32 	vldr	s10, [pc, #200]	; 9000b100 <HAL_RCC_GetSysClockFreq+0x130>
9000b03a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000b03e:	6b13      	ldr	r3, [r2, #48]	; 0x30
9000b040:	eec5 6a27 	vdiv.f32	s13, s10, s15
9000b044:	eddf 5a2f 	vldr	s11, [pc, #188]	; 9000b104 <HAL_RCC_GetSysClockFreq+0x134>
9000b048:	f3c3 0308 	ubfx	r3, r3, #0, #9
9000b04c:	ee07 3a90 	vmov	s15, r3
9000b050:	eeb7 6a00 	vmov.f32	s12, #112	; 0x3f800000  1.0
9000b054:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000b058:	eee7 7a25 	vfma.f32	s15, s14, s11
9000b05c:	ee77 7a86 	vadd.f32	s15, s15, s12
9000b060:	ee66 6aa7 	vmul.f32	s13, s13, s15
        pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >> 9) + 1U) ;
9000b064:	4b22      	ldr	r3, [pc, #136]	; (9000b0f0 <HAL_RCC_GetSysClockFreq+0x120>)
9000b066:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9000b068:	f3c3 2346 	ubfx	r3, r3, #9, #7
9000b06c:	3301      	adds	r3, #1
        sysclockfreq = (uint32_t)(float_t)(pllvco / (float_t)pllp);
9000b06e:	ee07 3a90 	vmov	s15, r3
9000b072:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
9000b076:	eec6 7a87 	vdiv.f32	s15, s13, s14
9000b07a:	eefc 7ae7 	vcvt.u32.f32	s15, s15
9000b07e:	ee17 0a90 	vmov	r0, s15
}
9000b082:	bc30      	pop	{r4, r5}
9000b084:	4770      	bx	lr
        sysclockfreq = (uint32_t) HSI_VALUE;
9000b086:	481d      	ldr	r0, [pc, #116]	; (9000b0fc <HAL_RCC_GetSysClockFreq+0x12c>)
}
9000b088:	4770      	bx	lr
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000b08a:	ee07 0a90 	vmov	s15, r0
9000b08e:	ed9f 5a1e 	vldr	s10, [pc, #120]	; 9000b108 <HAL_RCC_GetSysClockFreq+0x138>
9000b092:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000b096:	e7d2      	b.n	9000b03e <HAL_RCC_GetSysClockFreq+0x6e>
            if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000b098:	6813      	ldr	r3, [r2, #0]
9000b09a:	069b      	lsls	r3, r3, #26
9000b09c:	d520      	bpl.n	9000b0e0 <HAL_RCC_GetSysClockFreq+0x110>
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000b09e:	6814      	ldr	r4, [r2, #0]
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000b0a0:	ee07 0a90 	vmov	s15, r0
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000b0a4:	4915      	ldr	r1, [pc, #84]	; (9000b0fc <HAL_RCC_GetSysClockFreq+0x12c>)
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000b0a6:	eef7 5a00 	vmov.f32	s11, #112	; 0x3f800000  1.0
9000b0aa:	6b13      	ldr	r3, [r2, #48]	; 0x30
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000b0ac:	f3c4 04c1 	ubfx	r4, r4, #3, #2
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000b0b0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000b0b4:	ed9f 5a13 	vldr	s10, [pc, #76]	; 9000b104 <HAL_RCC_GetSysClockFreq+0x134>
9000b0b8:	f3c3 0308 	ubfx	r3, r3, #0, #9
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000b0bc:	40e1      	lsrs	r1, r4
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000b0be:	ee06 3a90 	vmov	s13, r3
9000b0c2:	ee06 1a10 	vmov	s12, r1
9000b0c6:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9000b0ca:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
9000b0ce:	eee7 6a05 	vfma.f32	s13, s14, s10
9000b0d2:	ee86 7a27 	vdiv.f32	s14, s12, s15
9000b0d6:	ee76 6aa5 	vadd.f32	s13, s13, s11
9000b0da:	ee66 6a87 	vmul.f32	s13, s13, s14
9000b0de:	e7c1      	b.n	9000b064 <HAL_RCC_GetSysClockFreq+0x94>
              pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000b0e0:	ee07 0a90 	vmov	s15, r0
9000b0e4:	ed9f 5a09 	vldr	s10, [pc, #36]	; 9000b10c <HAL_RCC_GetSysClockFreq+0x13c>
9000b0e8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000b0ec:	e7a7      	b.n	9000b03e <HAL_RCC_GetSysClockFreq+0x6e>
9000b0ee:	bf00      	nop
9000b0f0:	58024400 	.word	0x58024400
9000b0f4:	003d0900 	.word	0x003d0900
9000b0f8:	017d7840 	.word	0x017d7840
9000b0fc:	03d09000 	.word	0x03d09000
9000b100:	4a742400 	.word	0x4a742400
9000b104:	39000000 	.word	0x39000000
9000b108:	4bbebc20 	.word	0x4bbebc20
9000b10c:	4c742400 	.word	0x4c742400

9000b110 <HAL_RCC_ClockConfig>:
  if (RCC_ClkInitStruct == NULL)
9000b110:	2800      	cmp	r0, #0
9000b112:	f000 810c 	beq.w	9000b32e <HAL_RCC_ClockConfig+0x21e>
  if (FLatency > __HAL_FLASH_GET_LATENCY())
9000b116:	4a8c      	ldr	r2, [pc, #560]	; (9000b348 <HAL_RCC_ClockConfig+0x238>)
9000b118:	6813      	ldr	r3, [r2, #0]
9000b11a:	f003 030f 	and.w	r3, r3, #15
9000b11e:	428b      	cmp	r3, r1
{
9000b120:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000b124:	4604      	mov	r4, r0
9000b126:	460d      	mov	r5, r1
  if (FLatency > __HAL_FLASH_GET_LATENCY())
9000b128:	d20c      	bcs.n	9000b144 <HAL_RCC_ClockConfig+0x34>
    __HAL_FLASH_SET_LATENCY(FLatency);
9000b12a:	6813      	ldr	r3, [r2, #0]
9000b12c:	f023 030f 	bic.w	r3, r3, #15
9000b130:	430b      	orrs	r3, r1
9000b132:	6013      	str	r3, [r2, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
9000b134:	6813      	ldr	r3, [r2, #0]
9000b136:	f003 030f 	and.w	r3, r3, #15
9000b13a:	428b      	cmp	r3, r1
9000b13c:	d002      	beq.n	9000b144 <HAL_RCC_ClockConfig+0x34>
    return HAL_ERROR;
9000b13e:	2001      	movs	r0, #1
}
9000b140:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
9000b144:	6823      	ldr	r3, [r4, #0]
9000b146:	075f      	lsls	r7, r3, #29
9000b148:	d50b      	bpl.n	9000b162 <HAL_RCC_ClockConfig+0x52>
    if ((RCC_ClkInitStruct->APB3CLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
9000b14a:	4980      	ldr	r1, [pc, #512]	; (9000b34c <HAL_RCC_ClockConfig+0x23c>)
9000b14c:	6920      	ldr	r0, [r4, #16]
9000b14e:	698a      	ldr	r2, [r1, #24]
9000b150:	f002 0270 	and.w	r2, r2, #112	; 0x70
9000b154:	4290      	cmp	r0, r2
9000b156:	d904      	bls.n	9000b162 <HAL_RCC_ClockConfig+0x52>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
9000b158:	698a      	ldr	r2, [r1, #24]
9000b15a:	f022 0270 	bic.w	r2, r2, #112	; 0x70
9000b15e:	4302      	orrs	r2, r0
9000b160:	618a      	str	r2, [r1, #24]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
9000b162:	071e      	lsls	r6, r3, #28
9000b164:	d50b      	bpl.n	9000b17e <HAL_RCC_ClockConfig+0x6e>
    if ((RCC_ClkInitStruct->APB1CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
9000b166:	4979      	ldr	r1, [pc, #484]	; (9000b34c <HAL_RCC_ClockConfig+0x23c>)
9000b168:	6960      	ldr	r0, [r4, #20]
9000b16a:	69ca      	ldr	r2, [r1, #28]
9000b16c:	f002 0270 	and.w	r2, r2, #112	; 0x70
9000b170:	4290      	cmp	r0, r2
9000b172:	d904      	bls.n	9000b17e <HAL_RCC_ClockConfig+0x6e>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
9000b174:	69ca      	ldr	r2, [r1, #28]
9000b176:	f022 0270 	bic.w	r2, r2, #112	; 0x70
9000b17a:	4302      	orrs	r2, r0
9000b17c:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
9000b17e:	06d8      	lsls	r0, r3, #27
9000b180:	d50b      	bpl.n	9000b19a <HAL_RCC_ClockConfig+0x8a>
    if ((RCC_ClkInitStruct->APB2CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
9000b182:	4972      	ldr	r1, [pc, #456]	; (9000b34c <HAL_RCC_ClockConfig+0x23c>)
9000b184:	69a0      	ldr	r0, [r4, #24]
9000b186:	69ca      	ldr	r2, [r1, #28]
9000b188:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
9000b18c:	4290      	cmp	r0, r2
9000b18e:	d904      	bls.n	9000b19a <HAL_RCC_ClockConfig+0x8a>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
9000b190:	69ca      	ldr	r2, [r1, #28]
9000b192:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
9000b196:	4302      	orrs	r2, r0
9000b198:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
9000b19a:	0699      	lsls	r1, r3, #26
9000b19c:	d50b      	bpl.n	9000b1b6 <HAL_RCC_ClockConfig+0xa6>
    if ((RCC_ClkInitStruct->APB4CLKDivider) > (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
9000b19e:	496b      	ldr	r1, [pc, #428]	; (9000b34c <HAL_RCC_ClockConfig+0x23c>)
9000b1a0:	69e0      	ldr	r0, [r4, #28]
9000b1a2:	6a0a      	ldr	r2, [r1, #32]
9000b1a4:	f002 0270 	and.w	r2, r2, #112	; 0x70
9000b1a8:	4290      	cmp	r0, r2
9000b1aa:	d904      	bls.n	9000b1b6 <HAL_RCC_ClockConfig+0xa6>
      MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider));
9000b1ac:	6a0a      	ldr	r2, [r1, #32]
9000b1ae:	f022 0270 	bic.w	r2, r2, #112	; 0x70
9000b1b2:	4302      	orrs	r2, r0
9000b1b4:	620a      	str	r2, [r1, #32]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
9000b1b6:	079a      	lsls	r2, r3, #30
9000b1b8:	f140 80ab 	bpl.w	9000b312 <HAL_RCC_ClockConfig+0x202>
    if ((RCC_ClkInitStruct->AHBCLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_HPRE))
9000b1bc:	4863      	ldr	r0, [pc, #396]	; (9000b34c <HAL_RCC_ClockConfig+0x23c>)
9000b1be:	68e1      	ldr	r1, [r4, #12]
9000b1c0:	6982      	ldr	r2, [r0, #24]
9000b1c2:	f002 020f 	and.w	r2, r2, #15
9000b1c6:	4291      	cmp	r1, r2
9000b1c8:	d904      	bls.n	9000b1d4 <HAL_RCC_ClockConfig+0xc4>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
9000b1ca:	6982      	ldr	r2, [r0, #24]
9000b1cc:	f022 020f 	bic.w	r2, r2, #15
9000b1d0:	430a      	orrs	r2, r1
9000b1d2:	6182      	str	r2, [r0, #24]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
9000b1d4:	07d8      	lsls	r0, r3, #31
9000b1d6:	d530      	bpl.n	9000b23a <HAL_RCC_ClockConfig+0x12a>
    MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1CPRE, RCC_ClkInitStruct->SYSCLKDivider);
9000b1d8:	4a5c      	ldr	r2, [pc, #368]	; (9000b34c <HAL_RCC_ClockConfig+0x23c>)
9000b1da:	68a1      	ldr	r1, [r4, #8]
9000b1dc:	6993      	ldr	r3, [r2, #24]
9000b1de:	f423 6370 	bic.w	r3, r3, #3840	; 0xf00
9000b1e2:	430b      	orrs	r3, r1
9000b1e4:	6193      	str	r3, [r2, #24]
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
9000b1e6:	6861      	ldr	r1, [r4, #4]
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000b1e8:	6813      	ldr	r3, [r2, #0]
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
9000b1ea:	2902      	cmp	r1, #2
9000b1ec:	f000 80a1 	beq.w	9000b332 <HAL_RCC_ClockConfig+0x222>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
9000b1f0:	2903      	cmp	r1, #3
9000b1f2:	f000 8098 	beq.w	9000b326 <HAL_RCC_ClockConfig+0x216>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_CSI)
9000b1f6:	2901      	cmp	r1, #1
9000b1f8:	f000 80a1 	beq.w	9000b33e <HAL_RCC_ClockConfig+0x22e>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000b1fc:	0758      	lsls	r0, r3, #29
9000b1fe:	d59e      	bpl.n	9000b13e <HAL_RCC_ClockConfig+0x2e>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
9000b200:	4e52      	ldr	r6, [pc, #328]	; (9000b34c <HAL_RCC_ClockConfig+0x23c>)
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
9000b202:	f241 3888 	movw	r8, #5000	; 0x1388
    MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
9000b206:	6933      	ldr	r3, [r6, #16]
9000b208:	f023 0307 	bic.w	r3, r3, #7
9000b20c:	430b      	orrs	r3, r1
9000b20e:	6133      	str	r3, [r6, #16]
    tickstart = HAL_GetTick();
9000b210:	f7fc faae 	bl	90007770 <HAL_GetTick>
9000b214:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
9000b216:	e005      	b.n	9000b224 <HAL_RCC_ClockConfig+0x114>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
9000b218:	f7fc faaa 	bl	90007770 <HAL_GetTick>
9000b21c:	1bc0      	subs	r0, r0, r7
9000b21e:	4540      	cmp	r0, r8
9000b220:	f200 808b 	bhi.w	9000b33a <HAL_RCC_ClockConfig+0x22a>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
9000b224:	6933      	ldr	r3, [r6, #16]
9000b226:	6862      	ldr	r2, [r4, #4]
9000b228:	f003 0338 	and.w	r3, r3, #56	; 0x38
9000b22c:	ebb3 0fc2 	cmp.w	r3, r2, lsl #3
9000b230:	d1f2      	bne.n	9000b218 <HAL_RCC_ClockConfig+0x108>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
9000b232:	6823      	ldr	r3, [r4, #0]
9000b234:	0799      	lsls	r1, r3, #30
9000b236:	d506      	bpl.n	9000b246 <HAL_RCC_ClockConfig+0x136>
    if ((RCC_ClkInitStruct->AHBCLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_HPRE))
9000b238:	68e1      	ldr	r1, [r4, #12]
9000b23a:	4844      	ldr	r0, [pc, #272]	; (9000b34c <HAL_RCC_ClockConfig+0x23c>)
9000b23c:	6982      	ldr	r2, [r0, #24]
9000b23e:	f002 020f 	and.w	r2, r2, #15
9000b242:	428a      	cmp	r2, r1
9000b244:	d869      	bhi.n	9000b31a <HAL_RCC_ClockConfig+0x20a>
  if (FLatency < __HAL_FLASH_GET_LATENCY())
9000b246:	4940      	ldr	r1, [pc, #256]	; (9000b348 <HAL_RCC_ClockConfig+0x238>)
9000b248:	680a      	ldr	r2, [r1, #0]
9000b24a:	f002 020f 	and.w	r2, r2, #15
9000b24e:	42aa      	cmp	r2, r5
9000b250:	d90a      	bls.n	9000b268 <HAL_RCC_ClockConfig+0x158>
    __HAL_FLASH_SET_LATENCY(FLatency);
9000b252:	680a      	ldr	r2, [r1, #0]
9000b254:	f022 020f 	bic.w	r2, r2, #15
9000b258:	432a      	orrs	r2, r5
9000b25a:	600a      	str	r2, [r1, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
9000b25c:	680a      	ldr	r2, [r1, #0]
9000b25e:	f002 020f 	and.w	r2, r2, #15
9000b262:	42aa      	cmp	r2, r5
9000b264:	f47f af6b 	bne.w	9000b13e <HAL_RCC_ClockConfig+0x2e>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
9000b268:	075a      	lsls	r2, r3, #29
9000b26a:	d50b      	bpl.n	9000b284 <HAL_RCC_ClockConfig+0x174>
    if ((RCC_ClkInitStruct->APB3CLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
9000b26c:	4937      	ldr	r1, [pc, #220]	; (9000b34c <HAL_RCC_ClockConfig+0x23c>)
9000b26e:	6920      	ldr	r0, [r4, #16]
9000b270:	698a      	ldr	r2, [r1, #24]
9000b272:	f002 0270 	and.w	r2, r2, #112	; 0x70
9000b276:	4290      	cmp	r0, r2
9000b278:	d204      	bcs.n	9000b284 <HAL_RCC_ClockConfig+0x174>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
9000b27a:	698a      	ldr	r2, [r1, #24]
9000b27c:	f022 0270 	bic.w	r2, r2, #112	; 0x70
9000b280:	4302      	orrs	r2, r0
9000b282:	618a      	str	r2, [r1, #24]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
9000b284:	071f      	lsls	r7, r3, #28
9000b286:	d50b      	bpl.n	9000b2a0 <HAL_RCC_ClockConfig+0x190>
    if ((RCC_ClkInitStruct->APB1CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
9000b288:	4930      	ldr	r1, [pc, #192]	; (9000b34c <HAL_RCC_ClockConfig+0x23c>)
9000b28a:	6960      	ldr	r0, [r4, #20]
9000b28c:	69ca      	ldr	r2, [r1, #28]
9000b28e:	f002 0270 	and.w	r2, r2, #112	; 0x70
9000b292:	4290      	cmp	r0, r2
9000b294:	d204      	bcs.n	9000b2a0 <HAL_RCC_ClockConfig+0x190>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
9000b296:	69ca      	ldr	r2, [r1, #28]
9000b298:	f022 0270 	bic.w	r2, r2, #112	; 0x70
9000b29c:	4302      	orrs	r2, r0
9000b29e:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
9000b2a0:	06de      	lsls	r6, r3, #27
9000b2a2:	d50b      	bpl.n	9000b2bc <HAL_RCC_ClockConfig+0x1ac>
    if ((RCC_ClkInitStruct->APB2CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
9000b2a4:	4929      	ldr	r1, [pc, #164]	; (9000b34c <HAL_RCC_ClockConfig+0x23c>)
9000b2a6:	69a0      	ldr	r0, [r4, #24]
9000b2a8:	69ca      	ldr	r2, [r1, #28]
9000b2aa:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
9000b2ae:	4290      	cmp	r0, r2
9000b2b0:	d204      	bcs.n	9000b2bc <HAL_RCC_ClockConfig+0x1ac>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
9000b2b2:	69ca      	ldr	r2, [r1, #28]
9000b2b4:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
9000b2b8:	4302      	orrs	r2, r0
9000b2ba:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
9000b2bc:	069d      	lsls	r5, r3, #26
9000b2be:	d50b      	bpl.n	9000b2d8 <HAL_RCC_ClockConfig+0x1c8>
    if ((RCC_ClkInitStruct->APB4CLKDivider) < (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
9000b2c0:	4a22      	ldr	r2, [pc, #136]	; (9000b34c <HAL_RCC_ClockConfig+0x23c>)
9000b2c2:	69e1      	ldr	r1, [r4, #28]
9000b2c4:	6a13      	ldr	r3, [r2, #32]
9000b2c6:	f003 0370 	and.w	r3, r3, #112	; 0x70
9000b2ca:	4299      	cmp	r1, r3
9000b2cc:	d204      	bcs.n	9000b2d8 <HAL_RCC_ClockConfig+0x1c8>
      MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider));
9000b2ce:	6a13      	ldr	r3, [r2, #32]
9000b2d0:	f023 0370 	bic.w	r3, r3, #112	; 0x70
9000b2d4:	430b      	orrs	r3, r1
9000b2d6:	6213      	str	r3, [r2, #32]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000b2d8:	f7ff fe7a 	bl	9000afd0 <HAL_RCC_GetSysClockFreq>
9000b2dc:	4a1b      	ldr	r2, [pc, #108]	; (9000b34c <HAL_RCC_ClockConfig+0x23c>)
9000b2de:	4603      	mov	r3, r0
9000b2e0:	481b      	ldr	r0, [pc, #108]	; (9000b350 <HAL_RCC_ClockConfig+0x240>)
9000b2e2:	6991      	ldr	r1, [r2, #24]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000b2e4:	6992      	ldr	r2, [r2, #24]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000b2e6:	f3c1 2103 	ubfx	r1, r1, #8, #4
  SystemCoreClock = common_system_clock;
9000b2ea:	4d1a      	ldr	r5, [pc, #104]	; (9000b354 <HAL_RCC_ClockConfig+0x244>)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000b2ec:	f002 020f 	and.w	r2, r2, #15
9000b2f0:	4c19      	ldr	r4, [pc, #100]	; (9000b358 <HAL_RCC_ClockConfig+0x248>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000b2f2:	5c41      	ldrb	r1, [r0, r1]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000b2f4:	5c82      	ldrb	r2, [r0, r2]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000b2f6:	f001 011f 	and.w	r1, r1, #31
  halstatus = HAL_InitTick(uwTickPrio);
9000b2fa:	4818      	ldr	r0, [pc, #96]	; (9000b35c <HAL_RCC_ClockConfig+0x24c>)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000b2fc:	f002 021f 	and.w	r2, r2, #31
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000b300:	40cb      	lsrs	r3, r1
  halstatus = HAL_InitTick(uwTickPrio);
9000b302:	6800      	ldr	r0, [r0, #0]
  SystemCoreClock = common_system_clock;
9000b304:	602b      	str	r3, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000b306:	40d3      	lsrs	r3, r2
9000b308:	6023      	str	r3, [r4, #0]
}
9000b30a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  halstatus = HAL_InitTick(uwTickPrio);
9000b30e:	f7f8 b99d 	b.w	9000364c <HAL_InitTick>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
9000b312:	07da      	lsls	r2, r3, #31
9000b314:	f53f af60 	bmi.w	9000b1d8 <HAL_RCC_ClockConfig+0xc8>
9000b318:	e795      	b.n	9000b246 <HAL_RCC_ClockConfig+0x136>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
9000b31a:	6982      	ldr	r2, [r0, #24]
9000b31c:	f022 020f 	bic.w	r2, r2, #15
9000b320:	430a      	orrs	r2, r1
9000b322:	6182      	str	r2, [r0, #24]
9000b324:	e78f      	b.n	9000b246 <HAL_RCC_ClockConfig+0x136>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000b326:	019f      	lsls	r7, r3, #6
9000b328:	f53f af6a 	bmi.w	9000b200 <HAL_RCC_ClockConfig+0xf0>
9000b32c:	e707      	b.n	9000b13e <HAL_RCC_ClockConfig+0x2e>
    return HAL_ERROR;
9000b32e:	2001      	movs	r0, #1
}
9000b330:	4770      	bx	lr
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000b332:	039b      	lsls	r3, r3, #14
9000b334:	f53f af64 	bmi.w	9000b200 <HAL_RCC_ClockConfig+0xf0>
9000b338:	e701      	b.n	9000b13e <HAL_RCC_ClockConfig+0x2e>
        return HAL_TIMEOUT;
9000b33a:	2003      	movs	r0, #3
9000b33c:	e700      	b.n	9000b140 <HAL_RCC_ClockConfig+0x30>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
9000b33e:	05de      	lsls	r6, r3, #23
9000b340:	f53f af5e 	bmi.w	9000b200 <HAL_RCC_ClockConfig+0xf0>
9000b344:	e6fb      	b.n	9000b13e <HAL_RCC_ClockConfig+0x2e>
9000b346:	bf00      	nop
9000b348:	52002000 	.word	0x52002000
9000b34c:	58024400 	.word	0x58024400
9000b350:	90029b34 	.word	0x90029b34
9000b354:	24000060 	.word	0x24000060
9000b358:	24000064 	.word	0x24000064
9000b35c:	2400006c 	.word	0x2400006c

9000b360 <HAL_RCC_GetPCLK1Freq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000b360:	4a1c      	ldr	r2, [pc, #112]	; (9000b3d4 <HAL_RCC_GetPCLK1Freq+0x74>)
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
9000b362:	b538      	push	{r3, r4, r5, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000b364:	6913      	ldr	r3, [r2, #16]
9000b366:	f003 0338 	and.w	r3, r3, #56	; 0x38
9000b36a:	2b10      	cmp	r3, #16
9000b36c:	d021      	beq.n	9000b3b2 <HAL_RCC_GetPCLK1Freq+0x52>
9000b36e:	2b18      	cmp	r3, #24
9000b370:	d02a      	beq.n	9000b3c8 <HAL_RCC_GetPCLK1Freq+0x68>
9000b372:	b303      	cbz	r3, 9000b3b6 <HAL_RCC_GetPCLK1Freq+0x56>
      sysclockfreq = CSI_VALUE;
9000b374:	4818      	ldr	r0, [pc, #96]	; (9000b3d8 <HAL_RCC_GetPCLK1Freq+0x78>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000b376:	4a17      	ldr	r2, [pc, #92]	; (9000b3d4 <HAL_RCC_GetPCLK1Freq+0x74>)
9000b378:	4918      	ldr	r1, [pc, #96]	; (9000b3dc <HAL_RCC_GetPCLK1Freq+0x7c>)
9000b37a:	6993      	ldr	r3, [r2, #24]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000b37c:	4c18      	ldr	r4, [pc, #96]	; (9000b3e0 <HAL_RCC_GetPCLK1Freq+0x80>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000b37e:	f3c3 2303 	ubfx	r3, r3, #8, #4
  SystemCoreClock = common_system_clock;
9000b382:	4d18      	ldr	r5, [pc, #96]	; (9000b3e4 <HAL_RCC_GetPCLK1Freq+0x84>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000b384:	5ccb      	ldrb	r3, [r1, r3]
9000b386:	f003 031f 	and.w	r3, r3, #31
9000b38a:	40d8      	lsrs	r0, r3
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000b38c:	6993      	ldr	r3, [r2, #24]
9000b38e:	f003 030f 	and.w	r3, r3, #15
  SystemCoreClock = common_system_clock;
9000b392:	6028      	str	r0, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000b394:	5ccb      	ldrb	r3, [r1, r3]
9000b396:	f003 031f 	and.w	r3, r3, #31
9000b39a:	fa20 f303 	lsr.w	r3, r0, r3
9000b39e:	6023      	str	r3, [r4, #0]
#if defined (RCC_D2CFGR_D2PPRE1)
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1) >> RCC_D2CFGR_D2PPRE1_Pos]) & 0x1FU));
9000b3a0:	69d2      	ldr	r2, [r2, #28]
9000b3a2:	f3c2 1202 	ubfx	r2, r2, #4, #3
9000b3a6:	5c88      	ldrb	r0, [r1, r2]
9000b3a8:	f000 001f 	and.w	r0, r0, #31
#else
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE1) >> RCC_CDCFGR2_CDPPRE1_Pos]) & 0x1FU));
#endif
}
9000b3ac:	fa23 f000 	lsr.w	r0, r3, r0
9000b3b0:	bd38      	pop	{r3, r4, r5, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000b3b2:	480d      	ldr	r0, [pc, #52]	; (9000b3e8 <HAL_RCC_GetPCLK1Freq+0x88>)
9000b3b4:	e7df      	b.n	9000b376 <HAL_RCC_GetPCLK1Freq+0x16>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000b3b6:	6813      	ldr	r3, [r2, #0]
9000b3b8:	069b      	lsls	r3, r3, #26
9000b3ba:	d508      	bpl.n	9000b3ce <HAL_RCC_GetPCLK1Freq+0x6e>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000b3bc:	6813      	ldr	r3, [r2, #0]
9000b3be:	480b      	ldr	r0, [pc, #44]	; (9000b3ec <HAL_RCC_GetPCLK1Freq+0x8c>)
9000b3c0:	f3c3 03c1 	ubfx	r3, r3, #3, #2
9000b3c4:	40d8      	lsrs	r0, r3
9000b3c6:	e7d6      	b.n	9000b376 <HAL_RCC_GetPCLK1Freq+0x16>
9000b3c8:	f7ff fa8a 	bl	9000a8e0 <HAL_RCC_GetSysClockFreq.part.0>
9000b3cc:	e7d3      	b.n	9000b376 <HAL_RCC_GetPCLK1Freq+0x16>
        sysclockfreq = (uint32_t) HSI_VALUE;
9000b3ce:	4807      	ldr	r0, [pc, #28]	; (9000b3ec <HAL_RCC_GetPCLK1Freq+0x8c>)
9000b3d0:	e7d1      	b.n	9000b376 <HAL_RCC_GetPCLK1Freq+0x16>
9000b3d2:	bf00      	nop
9000b3d4:	58024400 	.word	0x58024400
9000b3d8:	003d0900 	.word	0x003d0900
9000b3dc:	90029b34 	.word	0x90029b34
9000b3e0:	24000064 	.word	0x24000064
9000b3e4:	24000060 	.word	0x24000060
9000b3e8:	017d7840 	.word	0x017d7840
9000b3ec:	03d09000 	.word	0x03d09000

9000b3f0 <HAL_RCC_GetPCLK2Freq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000b3f0:	4a1c      	ldr	r2, [pc, #112]	; (9000b464 <HAL_RCC_GetPCLK2Freq+0x74>)
  * @note   Each time PCLK2 changes, this function must be called to update the
  *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
9000b3f2:	b538      	push	{r3, r4, r5, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000b3f4:	6913      	ldr	r3, [r2, #16]
9000b3f6:	f003 0338 	and.w	r3, r3, #56	; 0x38
9000b3fa:	2b10      	cmp	r3, #16
9000b3fc:	d021      	beq.n	9000b442 <HAL_RCC_GetPCLK2Freq+0x52>
9000b3fe:	2b18      	cmp	r3, #24
9000b400:	d02a      	beq.n	9000b458 <HAL_RCC_GetPCLK2Freq+0x68>
9000b402:	b303      	cbz	r3, 9000b446 <HAL_RCC_GetPCLK2Freq+0x56>
      sysclockfreq = CSI_VALUE;
9000b404:	4818      	ldr	r0, [pc, #96]	; (9000b468 <HAL_RCC_GetPCLK2Freq+0x78>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000b406:	4a17      	ldr	r2, [pc, #92]	; (9000b464 <HAL_RCC_GetPCLK2Freq+0x74>)
9000b408:	4918      	ldr	r1, [pc, #96]	; (9000b46c <HAL_RCC_GetPCLK2Freq+0x7c>)
9000b40a:	6993      	ldr	r3, [r2, #24]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000b40c:	4c18      	ldr	r4, [pc, #96]	; (9000b470 <HAL_RCC_GetPCLK2Freq+0x80>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000b40e:	f3c3 2303 	ubfx	r3, r3, #8, #4
  SystemCoreClock = common_system_clock;
9000b412:	4d18      	ldr	r5, [pc, #96]	; (9000b474 <HAL_RCC_GetPCLK2Freq+0x84>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000b414:	5ccb      	ldrb	r3, [r1, r3]
9000b416:	f003 031f 	and.w	r3, r3, #31
9000b41a:	40d8      	lsrs	r0, r3
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000b41c:	6993      	ldr	r3, [r2, #24]
9000b41e:	f003 030f 	and.w	r3, r3, #15
  SystemCoreClock = common_system_clock;
9000b422:	6028      	str	r0, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000b424:	5ccb      	ldrb	r3, [r1, r3]
9000b426:	f003 031f 	and.w	r3, r3, #31
9000b42a:	fa20 f303 	lsr.w	r3, r0, r3
9000b42e:	6023      	str	r3, [r4, #0]
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
#if defined(RCC_D2CFGR_D2PPRE2)
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE2) >> RCC_D2CFGR_D2PPRE2_Pos]) & 0x1FU));
9000b430:	69d2      	ldr	r2, [r2, #28]
9000b432:	f3c2 2202 	ubfx	r2, r2, #8, #3
9000b436:	5c88      	ldrb	r0, [r1, r2]
9000b438:	f000 001f 	and.w	r0, r0, #31
#else
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE2) >> RCC_CDCFGR2_CDPPRE2_Pos]) & 0x1FU));
#endif
}
9000b43c:	fa23 f000 	lsr.w	r0, r3, r0
9000b440:	bd38      	pop	{r3, r4, r5, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000b442:	480d      	ldr	r0, [pc, #52]	; (9000b478 <HAL_RCC_GetPCLK2Freq+0x88>)
9000b444:	e7df      	b.n	9000b406 <HAL_RCC_GetPCLK2Freq+0x16>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000b446:	6813      	ldr	r3, [r2, #0]
9000b448:	069b      	lsls	r3, r3, #26
9000b44a:	d508      	bpl.n	9000b45e <HAL_RCC_GetPCLK2Freq+0x6e>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000b44c:	6813      	ldr	r3, [r2, #0]
9000b44e:	480b      	ldr	r0, [pc, #44]	; (9000b47c <HAL_RCC_GetPCLK2Freq+0x8c>)
9000b450:	f3c3 03c1 	ubfx	r3, r3, #3, #2
9000b454:	40d8      	lsrs	r0, r3
9000b456:	e7d6      	b.n	9000b406 <HAL_RCC_GetPCLK2Freq+0x16>
9000b458:	f7ff fa42 	bl	9000a8e0 <HAL_RCC_GetSysClockFreq.part.0>
9000b45c:	e7d3      	b.n	9000b406 <HAL_RCC_GetPCLK2Freq+0x16>
        sysclockfreq = (uint32_t) HSI_VALUE;
9000b45e:	4807      	ldr	r0, [pc, #28]	; (9000b47c <HAL_RCC_GetPCLK2Freq+0x8c>)
9000b460:	e7d1      	b.n	9000b406 <HAL_RCC_GetPCLK2Freq+0x16>
9000b462:	bf00      	nop
9000b464:	58024400 	.word	0x58024400
9000b468:	003d0900 	.word	0x003d0900
9000b46c:	90029b34 	.word	0x90029b34
9000b470:	24000064 	.word	0x24000064
9000b474:	24000060 	.word	0x24000060
9000b478:	017d7840 	.word	0x017d7840
9000b47c:	03d09000 	.word	0x03d09000

9000b480 <HAL_RCC_GetClockConfig>:
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_D1PCLK1 | RCC_CLOCKTYPE_PCLK1 |
                                 RCC_CLOCKTYPE_PCLK2 |  RCC_CLOCKTYPE_D3PCLK1  ;

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
9000b480:	4b13      	ldr	r3, [pc, #76]	; (9000b4d0 <HAL_RCC_GetClockConfig+0x50>)
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_D1PCLK1 | RCC_CLOCKTYPE_PCLK1 |
9000b482:	223f      	movs	r2, #63	; 0x3f
9000b484:	6002      	str	r2, [r0, #0]
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
9000b486:	691a      	ldr	r2, [r3, #16]
9000b488:	f002 0207 	and.w	r2, r2, #7
9000b48c:	6042      	str	r2, [r0, #4]

#if defined(RCC_D1CFGR_D1CPRE)
  /* Get the SYSCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_D1CPRE);
9000b48e:	699a      	ldr	r2, [r3, #24]
9000b490:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
9000b494:	6082      	str	r2, [r0, #8]

  /* Get the D1HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_HPRE);
9000b496:	699a      	ldr	r2, [r3, #24]
9000b498:	f002 020f 	and.w	r2, r2, #15
9000b49c:	60c2      	str	r2, [r0, #12]

  /* Get the APB3 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB3CLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_D1PPRE);
9000b49e:	699a      	ldr	r2, [r3, #24]
9000b4a0:	f002 0270 	and.w	r2, r2, #112	; 0x70
9000b4a4:	6102      	str	r2, [r0, #16]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1);
9000b4a6:	69da      	ldr	r2, [r3, #28]
9000b4a8:	f002 0270 	and.w	r2, r2, #112	; 0x70
9000b4ac:	6142      	str	r2, [r0, #20]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)(RCC->D2CFGR & RCC_D2CFGR_D2PPRE2);
9000b4ae:	69da      	ldr	r2, [r3, #28]
9000b4b0:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
9000b4b4:	6182      	str	r2, [r0, #24]

  /* Get the APB4 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->D3CFGR & RCC_D3CFGR_D3PPRE);
9000b4b6:	6a1b      	ldr	r3, [r3, #32]
{
9000b4b8:	b410      	push	{r4}
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->D3CFGR & RCC_D3CFGR_D3PPRE);
9000b4ba:	f003 0370 	and.w	r3, r3, #112	; 0x70
  /* Get the APB4 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->SRDCFGR & RCC_SRDCFGR_SRDPPRE);
#endif

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
9000b4be:	4c05      	ldr	r4, [pc, #20]	; (9000b4d4 <HAL_RCC_GetClockConfig+0x54>)
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->D3CFGR & RCC_D3CFGR_D3PPRE);
9000b4c0:	61c3      	str	r3, [r0, #28]
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
9000b4c2:	6823      	ldr	r3, [r4, #0]
}
9000b4c4:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
9000b4c8:	f003 030f 	and.w	r3, r3, #15
9000b4cc:	600b      	str	r3, [r1, #0]
}
9000b4ce:	4770      	bx	lr
9000b4d0:	58024400 	.word	0x58024400
9000b4d4:	52002000 	.word	0x52002000

9000b4d8 <RCCEx_PLL2_Config>:
  * @note   PLL2 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL2_Config(RCC_PLL2InitTypeDef *pll2, uint32_t Divider)
{
9000b4d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  assert_param(IS_RCC_PLL2RGE_VALUE(pll2->PLL2RGE));
  assert_param(IS_RCC_PLL2VCO_VALUE(pll2->PLL2VCOSEL));
  assert_param(IS_RCC_PLLFRACN_VALUE(pll2->PLL2FRACN));

  /* Check that PLL2 OSC clock source is already set */
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b4da:	4c3a      	ldr	r4, [pc, #232]	; (9000b5c4 <RCCEx_PLL2_Config+0xec>)
9000b4dc:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000b4de:	f003 0303 	and.w	r3, r3, #3
9000b4e2:	2b03      	cmp	r3, #3
9000b4e4:	d067      	beq.n	9000b5b6 <RCCEx_PLL2_Config+0xde>


  else
  {
    /* Disable  PLL2. */
    __HAL_RCC_PLL2_DISABLE();
9000b4e6:	6823      	ldr	r3, [r4, #0]
9000b4e8:	4606      	mov	r6, r0
9000b4ea:	460f      	mov	r7, r1
9000b4ec:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
9000b4f0:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000b4f2:	f7fc f93d 	bl	90007770 <HAL_GetTick>
9000b4f6:	4605      	mov	r5, r0

    /* Wait till PLL is disabled */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
9000b4f8:	e004      	b.n	9000b504 <RCCEx_PLL2_Config+0x2c>
    {
      if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
9000b4fa:	f7fc f939 	bl	90007770 <HAL_GetTick>
9000b4fe:	1b43      	subs	r3, r0, r5
9000b500:	2b02      	cmp	r3, #2
9000b502:	d856      	bhi.n	9000b5b2 <RCCEx_PLL2_Config+0xda>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
9000b504:	6823      	ldr	r3, [r4, #0]
9000b506:	011a      	lsls	r2, r3, #4
9000b508:	d4f7      	bmi.n	9000b4fa <RCCEx_PLL2_Config+0x22>
        return HAL_TIMEOUT;
      }
    }

    /* Configure PLL2 multiplication and division factors. */
    __HAL_RCC_PLL2_CONFIG(pll2->PLL2M,
9000b50a:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000b50c:	6832      	ldr	r2, [r6, #0]
9000b50e:	f423 337c 	bic.w	r3, r3, #258048	; 0x3f000
9000b512:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
9000b516:	62a3      	str	r3, [r4, #40]	; 0x28
9000b518:	e9d6 3202 	ldrd	r3, r2, [r6, #8]
9000b51c:	3b01      	subs	r3, #1
9000b51e:	3a01      	subs	r2, #1
9000b520:	025b      	lsls	r3, r3, #9
9000b522:	0412      	lsls	r2, r2, #16
9000b524:	b29b      	uxth	r3, r3
9000b526:	f402 02fe 	and.w	r2, r2, #8323072	; 0x7f0000
9000b52a:	4313      	orrs	r3, r2
9000b52c:	6872      	ldr	r2, [r6, #4]
9000b52e:	3a01      	subs	r2, #1
9000b530:	f3c2 0208 	ubfx	r2, r2, #0, #9
9000b534:	4313      	orrs	r3, r2
9000b536:	6932      	ldr	r2, [r6, #16]
9000b538:	3a01      	subs	r2, #1
9000b53a:	0612      	lsls	r2, r2, #24
9000b53c:	f002 42fe 	and.w	r2, r2, #2130706432	; 0x7f000000
9000b540:	4313      	orrs	r3, r2
9000b542:	63a3      	str	r3, [r4, #56]	; 0x38
                          pll2->PLL2P,
                          pll2->PLL2Q,
                          pll2->PLL2R);

    /* Select PLL2 input reference frequency range: VCI */
    __HAL_RCC_PLL2_VCIRANGE(pll2->PLL2RGE) ;
9000b544:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000b546:	6972      	ldr	r2, [r6, #20]
9000b548:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
9000b54c:	4313      	orrs	r3, r2
9000b54e:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Select PLL2 output frequency range : VCO */
    __HAL_RCC_PLL2_VCORANGE(pll2->PLL2VCOSEL) ;
9000b550:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000b552:	69b3      	ldr	r3, [r6, #24]
9000b554:	f022 0220 	bic.w	r2, r2, #32
9000b558:	431a      	orrs	r2, r3

    /* Disable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_DISABLE();

    /* Configures PLL2 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL2FRACN_CONFIG(pll2->PLL2FRACN);
9000b55a:	4b1b      	ldr	r3, [pc, #108]	; (9000b5c8 <RCCEx_PLL2_Config+0xf0>)
    __HAL_RCC_PLL2_VCORANGE(pll2->PLL2VCOSEL) ;
9000b55c:	62e2      	str	r2, [r4, #44]	; 0x2c
    __HAL_RCC_PLL2FRACN_DISABLE();
9000b55e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000b560:	f022 0210 	bic.w	r2, r2, #16
9000b564:	62e2      	str	r2, [r4, #44]	; 0x2c
    __HAL_RCC_PLL2FRACN_CONFIG(pll2->PLL2FRACN);
9000b566:	6be1      	ldr	r1, [r4, #60]	; 0x3c
9000b568:	69f2      	ldr	r2, [r6, #28]
9000b56a:	400b      	ands	r3, r1
9000b56c:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
9000b570:	63e3      	str	r3, [r4, #60]	; 0x3c

    /* Enable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_ENABLE();
9000b572:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000b574:	f043 0310 	orr.w	r3, r3, #16
9000b578:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Enable the PLL2 clock output */
    if (Divider == DIVIDER_P_UPDATE)
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVP);
9000b57a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    if (Divider == DIVIDER_P_UPDATE)
9000b57c:	b1ef      	cbz	r7, 9000b5ba <RCCEx_PLL2_Config+0xe2>
    }
    else if (Divider == DIVIDER_Q_UPDATE)
9000b57e:	2f01      	cmp	r7, #1
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVQ);
9000b580:	bf0c      	ite	eq
9000b582:	f443 1380 	orreq.w	r3, r3, #1048576	; 0x100000
    }
    else
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVR);
9000b586:	f443 1300 	orrne.w	r3, r3, #2097152	; 0x200000
9000b58a:	62e3      	str	r3, [r4, #44]	; 0x2c
    }

    /* Enable  PLL2. */
    __HAL_RCC_PLL2_ENABLE();
9000b58c:	4c0d      	ldr	r4, [pc, #52]	; (9000b5c4 <RCCEx_PLL2_Config+0xec>)
9000b58e:	6823      	ldr	r3, [r4, #0]
9000b590:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
9000b594:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000b596:	f7fc f8eb 	bl	90007770 <HAL_GetTick>
9000b59a:	4605      	mov	r5, r0

    /* Wait till PLL2 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
9000b59c:	e004      	b.n	9000b5a8 <RCCEx_PLL2_Config+0xd0>
    {
      if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
9000b59e:	f7fc f8e7 	bl	90007770 <HAL_GetTick>
9000b5a2:	1b40      	subs	r0, r0, r5
9000b5a4:	2802      	cmp	r0, #2
9000b5a6:	d804      	bhi.n	9000b5b2 <RCCEx_PLL2_Config+0xda>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
9000b5a8:	6823      	ldr	r3, [r4, #0]
9000b5aa:	011b      	lsls	r3, r3, #4
9000b5ac:	d5f7      	bpl.n	9000b59e <RCCEx_PLL2_Config+0xc6>
    }

  }


  return status;
9000b5ae:	2000      	movs	r0, #0
}
9000b5b0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        return HAL_TIMEOUT;
9000b5b2:	2003      	movs	r0, #3
}
9000b5b4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    return HAL_ERROR;
9000b5b6:	2001      	movs	r0, #1
}
9000b5b8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVP);
9000b5ba:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
9000b5be:	62e3      	str	r3, [r4, #44]	; 0x2c
9000b5c0:	e7e4      	b.n	9000b58c <RCCEx_PLL2_Config+0xb4>
9000b5c2:	bf00      	nop
9000b5c4:	58024400 	.word	0x58024400
9000b5c8:	ffff0007 	.word	0xffff0007

9000b5cc <RCCEx_PLL3_Config>:
  * @note   PLL3 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL3_Config(RCC_PLL3InitTypeDef *pll3, uint32_t Divider)
{
9000b5cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  assert_param(IS_RCC_PLL3RGE_VALUE(pll3->PLL3RGE));
  assert_param(IS_RCC_PLL3VCO_VALUE(pll3->PLL3VCOSEL));
  assert_param(IS_RCC_PLLFRACN_VALUE(pll3->PLL3FRACN));

  /* Check that PLL3 OSC clock source is already set */
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b5ce:	4c3a      	ldr	r4, [pc, #232]	; (9000b6b8 <RCCEx_PLL3_Config+0xec>)
9000b5d0:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000b5d2:	f003 0303 	and.w	r3, r3, #3
9000b5d6:	2b03      	cmp	r3, #3
9000b5d8:	d067      	beq.n	9000b6aa <RCCEx_PLL3_Config+0xde>


  else
  {
    /* Disable  PLL3. */
    __HAL_RCC_PLL3_DISABLE();
9000b5da:	6823      	ldr	r3, [r4, #0]
9000b5dc:	4606      	mov	r6, r0
9000b5de:	460f      	mov	r7, r1
9000b5e0:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
9000b5e4:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000b5e6:	f7fc f8c3 	bl	90007770 <HAL_GetTick>
9000b5ea:	4605      	mov	r5, r0
    /* Wait till PLL3 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
9000b5ec:	e004      	b.n	9000b5f8 <RCCEx_PLL3_Config+0x2c>
    {
      if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
9000b5ee:	f7fc f8bf 	bl	90007770 <HAL_GetTick>
9000b5f2:	1b43      	subs	r3, r0, r5
9000b5f4:	2b02      	cmp	r3, #2
9000b5f6:	d856      	bhi.n	9000b6a6 <RCCEx_PLL3_Config+0xda>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
9000b5f8:	6823      	ldr	r3, [r4, #0]
9000b5fa:	009a      	lsls	r2, r3, #2
9000b5fc:	d4f7      	bmi.n	9000b5ee <RCCEx_PLL3_Config+0x22>
        return HAL_TIMEOUT;
      }
    }

    /* Configure the PLL3  multiplication and division factors. */
    __HAL_RCC_PLL3_CONFIG(pll3->PLL3M,
9000b5fe:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000b600:	6832      	ldr	r2, [r6, #0]
9000b602:	f023 737c 	bic.w	r3, r3, #66060288	; 0x3f00000
9000b606:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
9000b60a:	62a3      	str	r3, [r4, #40]	; 0x28
9000b60c:	e9d6 3202 	ldrd	r3, r2, [r6, #8]
9000b610:	3b01      	subs	r3, #1
9000b612:	3a01      	subs	r2, #1
9000b614:	025b      	lsls	r3, r3, #9
9000b616:	0412      	lsls	r2, r2, #16
9000b618:	b29b      	uxth	r3, r3
9000b61a:	f402 02fe 	and.w	r2, r2, #8323072	; 0x7f0000
9000b61e:	4313      	orrs	r3, r2
9000b620:	6872      	ldr	r2, [r6, #4]
9000b622:	3a01      	subs	r2, #1
9000b624:	f3c2 0208 	ubfx	r2, r2, #0, #9
9000b628:	4313      	orrs	r3, r2
9000b62a:	6932      	ldr	r2, [r6, #16]
9000b62c:	3a01      	subs	r2, #1
9000b62e:	0612      	lsls	r2, r2, #24
9000b630:	f002 42fe 	and.w	r2, r2, #2130706432	; 0x7f000000
9000b634:	4313      	orrs	r3, r2
9000b636:	6423      	str	r3, [r4, #64]	; 0x40
                          pll3->PLL3P,
                          pll3->PLL3Q,
                          pll3->PLL3R);

    /* Select PLL3 input reference frequency range: VCI */
    __HAL_RCC_PLL3_VCIRANGE(pll3->PLL3RGE) ;
9000b638:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000b63a:	6972      	ldr	r2, [r6, #20]
9000b63c:	f423 6340 	bic.w	r3, r3, #3072	; 0xc00
9000b640:	4313      	orrs	r3, r2
9000b642:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Select PLL3 output frequency range : VCO */
    __HAL_RCC_PLL3_VCORANGE(pll3->PLL3VCOSEL) ;
9000b644:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000b646:	69b3      	ldr	r3, [r6, #24]
9000b648:	f422 7200 	bic.w	r2, r2, #512	; 0x200
9000b64c:	431a      	orrs	r2, r3

    /* Disable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_DISABLE();

    /* Configures PLL3 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL3FRACN_CONFIG(pll3->PLL3FRACN);
9000b64e:	4b1b      	ldr	r3, [pc, #108]	; (9000b6bc <RCCEx_PLL3_Config+0xf0>)
    __HAL_RCC_PLL3_VCORANGE(pll3->PLL3VCOSEL) ;
9000b650:	62e2      	str	r2, [r4, #44]	; 0x2c
    __HAL_RCC_PLL3FRACN_DISABLE();
9000b652:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000b654:	f422 7280 	bic.w	r2, r2, #256	; 0x100
9000b658:	62e2      	str	r2, [r4, #44]	; 0x2c
    __HAL_RCC_PLL3FRACN_CONFIG(pll3->PLL3FRACN);
9000b65a:	6c61      	ldr	r1, [r4, #68]	; 0x44
9000b65c:	69f2      	ldr	r2, [r6, #28]
9000b65e:	400b      	ands	r3, r1
9000b660:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
9000b664:	6463      	str	r3, [r4, #68]	; 0x44

    /* Enable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_ENABLE();
9000b666:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000b668:	f443 7380 	orr.w	r3, r3, #256	; 0x100
9000b66c:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Enable the PLL3 clock output */
    if (Divider == DIVIDER_P_UPDATE)
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVP);
9000b66e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    if (Divider == DIVIDER_P_UPDATE)
9000b670:	b1ef      	cbz	r7, 9000b6ae <RCCEx_PLL3_Config+0xe2>
    }
    else if (Divider == DIVIDER_Q_UPDATE)
9000b672:	2f01      	cmp	r7, #1
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVQ);
9000b674:	bf0c      	ite	eq
9000b676:	f443 0300 	orreq.w	r3, r3, #8388608	; 0x800000
    }
    else
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVR);
9000b67a:	f043 7380 	orrne.w	r3, r3, #16777216	; 0x1000000
9000b67e:	62e3      	str	r3, [r4, #44]	; 0x2c
    }

    /* Enable  PLL3. */
    __HAL_RCC_PLL3_ENABLE();
9000b680:	4c0d      	ldr	r4, [pc, #52]	; (9000b6b8 <RCCEx_PLL3_Config+0xec>)
9000b682:	6823      	ldr	r3, [r4, #0]
9000b684:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
9000b688:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000b68a:	f7fc f871 	bl	90007770 <HAL_GetTick>
9000b68e:	4605      	mov	r5, r0

    /* Wait till PLL3 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
9000b690:	e004      	b.n	9000b69c <RCCEx_PLL3_Config+0xd0>
    {
      if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
9000b692:	f7fc f86d 	bl	90007770 <HAL_GetTick>
9000b696:	1b40      	subs	r0, r0, r5
9000b698:	2802      	cmp	r0, #2
9000b69a:	d804      	bhi.n	9000b6a6 <RCCEx_PLL3_Config+0xda>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
9000b69c:	6823      	ldr	r3, [r4, #0]
9000b69e:	009b      	lsls	r3, r3, #2
9000b6a0:	d5f7      	bpl.n	9000b692 <RCCEx_PLL3_Config+0xc6>
    }

  }


  return status;
9000b6a2:	2000      	movs	r0, #0
}
9000b6a4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        return HAL_TIMEOUT;
9000b6a6:	2003      	movs	r0, #3
}
9000b6a8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    return HAL_ERROR;
9000b6aa:	2001      	movs	r0, #1
}
9000b6ac:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVP);
9000b6ae:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
9000b6b2:	62e3      	str	r3, [r4, #44]	; 0x2c
9000b6b4:	e7e4      	b.n	9000b680 <RCCEx_PLL3_Config+0xb4>
9000b6b6:	bf00      	nop
9000b6b8:	58024400 	.word	0x58024400
9000b6bc:	ffff0007 	.word	0xffff0007

9000b6c0 <HAL_RCCEx_PeriphCLKConfig>:
{
9000b6c0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
9000b6c4:	e9d0 3200 	ldrd	r3, r2, [r0]
{
9000b6c8:	4604      	mov	r4, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
9000b6ca:	011d      	lsls	r5, r3, #4
9000b6cc:	f003 6600 	and.w	r6, r3, #134217728	; 0x8000000
9000b6d0:	d523      	bpl.n	9000b71a <HAL_RCCEx_PeriphCLKConfig+0x5a>
    switch (PeriphClkInit->SpdifrxClockSelection)
9000b6d2:	6e81      	ldr	r1, [r0, #104]	; 0x68
9000b6d4:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
9000b6d8:	f000 8553 	beq.w	9000c182 <HAL_RCCEx_PeriphCLKConfig+0xac2>
9000b6dc:	d812      	bhi.n	9000b704 <HAL_RCCEx_PeriphCLKConfig+0x44>
9000b6de:	2900      	cmp	r1, #0
9000b6e0:	f000 85a9 	beq.w	9000c236 <HAL_RCCEx_PeriphCLKConfig+0xb76>
9000b6e4:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
9000b6e8:	f040 85a2 	bne.w	9000c230 <HAL_RCCEx_PeriphCLKConfig+0xb70>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
9000b6ec:	2102      	movs	r1, #2
9000b6ee:	3008      	adds	r0, #8
9000b6f0:	f7ff fef2 	bl	9000b4d8 <RCCEx_PLL2_Config>
9000b6f4:	4606      	mov	r6, r0
    if (ret == HAL_OK)
9000b6f6:	2e00      	cmp	r6, #0
9000b6f8:	f040 8522 	bne.w	9000c140 <HAL_RCCEx_PeriphCLKConfig+0xa80>
      __HAL_RCC_SPDIFRX_CONFIG(PeriphClkInit->SpdifrxClockSelection);
9000b6fc:	6ea1      	ldr	r1, [r4, #104]	; 0x68
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
9000b6fe:	e9d4 3200 	ldrd	r3, r2, [r4]
9000b702:	e003      	b.n	9000b70c <HAL_RCCEx_PeriphCLKConfig+0x4c>
    switch (PeriphClkInit->SpdifrxClockSelection)
9000b704:	f5b1 1f40 	cmp.w	r1, #3145728	; 0x300000
9000b708:	f040 8592 	bne.w	9000c230 <HAL_RCCEx_PeriphCLKConfig+0xb70>
      __HAL_RCC_SPDIFRX_CONFIG(PeriphClkInit->SpdifrxClockSelection);
9000b70c:	4dae      	ldr	r5, [pc, #696]	; (9000b9c8 <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000b70e:	2600      	movs	r6, #0
9000b710:	6d28      	ldr	r0, [r5, #80]	; 0x50
9000b712:	f420 1040 	bic.w	r0, r0, #3145728	; 0x300000
9000b716:	4301      	orrs	r1, r0
9000b718:	6529      	str	r1, [r5, #80]	; 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
9000b71a:	05d8      	lsls	r0, r3, #23
9000b71c:	d50a      	bpl.n	9000b734 <HAL_RCCEx_PeriphCLKConfig+0x74>
    switch (PeriphClkInit->Sai1ClockSelection)
9000b71e:	6da1      	ldr	r1, [r4, #88]	; 0x58
9000b720:	2904      	cmp	r1, #4
9000b722:	d806      	bhi.n	9000b732 <HAL_RCCEx_PeriphCLKConfig+0x72>
9000b724:	e8df f011 	tbh	[pc, r1, lsl #1]
9000b728:	053d0536 	.word	0x053d0536
9000b72c:	0323051a 	.word	0x0323051a
9000b730:	0323      	.short	0x0323
9000b732:	2601      	movs	r6, #1
9000b734:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
9000b736:	0599      	lsls	r1, r3, #22
9000b738:	d51d      	bpl.n	9000b776 <HAL_RCCEx_PeriphCLKConfig+0xb6>
    switch (PeriphClkInit->Sai23ClockSelection)
9000b73a:	6de1      	ldr	r1, [r4, #92]	; 0x5c
9000b73c:	2980      	cmp	r1, #128	; 0x80
9000b73e:	f000 8516 	beq.w	9000c16e <HAL_RCCEx_PeriphCLKConfig+0xaae>
9000b742:	f200 80f9 	bhi.w	9000b938 <HAL_RCCEx_PeriphCLKConfig+0x278>
9000b746:	2900      	cmp	r1, #0
9000b748:	f000 8433 	beq.w	9000bfb2 <HAL_RCCEx_PeriphCLKConfig+0x8f2>
9000b74c:	2940      	cmp	r1, #64	; 0x40
9000b74e:	f040 80fa 	bne.w	9000b946 <HAL_RCCEx_PeriphCLKConfig+0x286>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000b752:	2100      	movs	r1, #0
9000b754:	f104 0008 	add.w	r0, r4, #8
9000b758:	f7ff febe 	bl	9000b4d8 <RCCEx_PLL2_Config>
9000b75c:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
9000b75e:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000b762:	2d00      	cmp	r5, #0
9000b764:	f040 83fe 	bne.w	9000bf64 <HAL_RCCEx_PeriphCLKConfig+0x8a4>
      __HAL_RCC_SAI23_CONFIG(PeriphClkInit->Sai23ClockSelection);
9000b768:	4f97      	ldr	r7, [pc, #604]	; (9000b9c8 <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000b76a:	6de0      	ldr	r0, [r4, #92]	; 0x5c
9000b76c:	6d39      	ldr	r1, [r7, #80]	; 0x50
9000b76e:	f421 71e0 	bic.w	r1, r1, #448	; 0x1c0
9000b772:	4301      	orrs	r1, r0
9000b774:	6539      	str	r1, [r7, #80]	; 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
9000b776:	055f      	lsls	r7, r3, #21
9000b778:	d521      	bpl.n	9000b7be <HAL_RCCEx_PeriphCLKConfig+0xfe>
    switch (PeriphClkInit->Sai4AClockSelection)
9000b77a:	f8d4 10a8 	ldr.w	r1, [r4, #168]	; 0xa8
9000b77e:	f5b1 0f80 	cmp.w	r1, #4194304	; 0x400000
9000b782:	f000 8521 	beq.w	9000c1c8 <HAL_RCCEx_PeriphCLKConfig+0xb08>
9000b786:	f200 80e1 	bhi.w	9000b94c <HAL_RCCEx_PeriphCLKConfig+0x28c>
9000b78a:	2900      	cmp	r1, #0
9000b78c:	f000 8418 	beq.w	9000bfc0 <HAL_RCCEx_PeriphCLKConfig+0x900>
9000b790:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
9000b794:	f040 80e2 	bne.w	9000b95c <HAL_RCCEx_PeriphCLKConfig+0x29c>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000b798:	2100      	movs	r1, #0
9000b79a:	f104 0008 	add.w	r0, r4, #8
9000b79e:	f7ff fe9b 	bl	9000b4d8 <RCCEx_PLL2_Config>
9000b7a2:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
9000b7a4:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000b7a8:	2d00      	cmp	r5, #0
9000b7aa:	f040 83e2 	bne.w	9000bf72 <HAL_RCCEx_PeriphCLKConfig+0x8b2>
      __HAL_RCC_SAI4A_CONFIG(PeriphClkInit->Sai4AClockSelection);
9000b7ae:	4f86      	ldr	r7, [pc, #536]	; (9000b9c8 <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000b7b0:	f8d4 00a8 	ldr.w	r0, [r4, #168]	; 0xa8
9000b7b4:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000b7b6:	f421 0160 	bic.w	r1, r1, #14680064	; 0xe00000
9000b7ba:	4301      	orrs	r1, r0
9000b7bc:	65b9      	str	r1, [r7, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
9000b7be:	0518      	lsls	r0, r3, #20
9000b7c0:	d521      	bpl.n	9000b806 <HAL_RCCEx_PeriphCLKConfig+0x146>
    switch (PeriphClkInit->Sai4BClockSelection)
9000b7c2:	f8d4 10ac 	ldr.w	r1, [r4, #172]	; 0xac
9000b7c6:	f1b1 7f00 	cmp.w	r1, #33554432	; 0x2000000
9000b7ca:	f000 84bd 	beq.w	9000c148 <HAL_RCCEx_PeriphCLKConfig+0xa88>
9000b7ce:	f200 80c8 	bhi.w	9000b962 <HAL_RCCEx_PeriphCLKConfig+0x2a2>
9000b7d2:	2900      	cmp	r1, #0
9000b7d4:	f000 83e7 	beq.w	9000bfa6 <HAL_RCCEx_PeriphCLKConfig+0x8e6>
9000b7d8:	f1b1 7f80 	cmp.w	r1, #16777216	; 0x1000000
9000b7dc:	f040 80c9 	bne.w	9000b972 <HAL_RCCEx_PeriphCLKConfig+0x2b2>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000b7e0:	2100      	movs	r1, #0
9000b7e2:	f104 0008 	add.w	r0, r4, #8
9000b7e6:	f7ff fe77 	bl	9000b4d8 <RCCEx_PLL2_Config>
9000b7ea:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
9000b7ec:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000b7f0:	2d00      	cmp	r5, #0
9000b7f2:	f040 83b5 	bne.w	9000bf60 <HAL_RCCEx_PeriphCLKConfig+0x8a0>
      __HAL_RCC_SAI4B_CONFIG(PeriphClkInit->Sai4BClockSelection);
9000b7f6:	4f74      	ldr	r7, [pc, #464]	; (9000b9c8 <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000b7f8:	f8d4 00ac 	ldr.w	r0, [r4, #172]	; 0xac
9000b7fc:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000b7fe:	f021 61e0 	bic.w	r1, r1, #117440512	; 0x7000000
9000b802:	4301      	orrs	r1, r0
9000b804:	65b9      	str	r1, [r7, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
9000b806:	0199      	lsls	r1, r3, #6
9000b808:	d518      	bpl.n	9000b83c <HAL_RCCEx_PeriphCLKConfig+0x17c>
    switch (PeriphClkInit->QspiClockSelection)
9000b80a:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
9000b80c:	2920      	cmp	r1, #32
9000b80e:	f000 841f 	beq.w	9000c050 <HAL_RCCEx_PeriphCLKConfig+0x990>
9000b812:	f200 80b1 	bhi.w	9000b978 <HAL_RCCEx_PeriphCLKConfig+0x2b8>
9000b816:	b139      	cbz	r1, 9000b828 <HAL_RCCEx_PeriphCLKConfig+0x168>
9000b818:	2910      	cmp	r1, #16
9000b81a:	f040 80b0 	bne.w	9000b97e <HAL_RCCEx_PeriphCLKConfig+0x2be>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000b81e:	486a      	ldr	r0, [pc, #424]	; (9000b9c8 <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000b820:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000b822:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000b826:	62c1      	str	r1, [r0, #44]	; 0x2c
    if (ret == HAL_OK)
9000b828:	2d00      	cmp	r5, #0
9000b82a:	f040 83d8 	bne.w	9000bfde <HAL_RCCEx_PeriphCLKConfig+0x91e>
      __HAL_RCC_QSPI_CONFIG(PeriphClkInit->QspiClockSelection);
9000b82e:	4f66      	ldr	r7, [pc, #408]	; (9000b9c8 <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000b830:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
9000b832:	6cf9      	ldr	r1, [r7, #76]	; 0x4c
9000b834:	f021 0130 	bic.w	r1, r1, #48	; 0x30
9000b838:	4301      	orrs	r1, r0
9000b83a:	64f9      	str	r1, [r7, #76]	; 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI123) == RCC_PERIPHCLK_SPI123)
9000b83c:	04df      	lsls	r7, r3, #19
9000b83e:	d51f      	bpl.n	9000b880 <HAL_RCCEx_PeriphCLKConfig+0x1c0>
    switch (PeriphClkInit->Spi123ClockSelection)
9000b840:	6e21      	ldr	r1, [r4, #96]	; 0x60
9000b842:	f5b1 5f00 	cmp.w	r1, #8192	; 0x2000
9000b846:	f000 84b5 	beq.w	9000c1b4 <HAL_RCCEx_PeriphCLKConfig+0xaf4>
9000b84a:	f200 809b 	bhi.w	9000b984 <HAL_RCCEx_PeriphCLKConfig+0x2c4>
9000b84e:	2900      	cmp	r1, #0
9000b850:	f000 83a3 	beq.w	9000bf9a <HAL_RCCEx_PeriphCLKConfig+0x8da>
9000b854:	f5b1 5f80 	cmp.w	r1, #4096	; 0x1000
9000b858:	f040 809c 	bne.w	9000b994 <HAL_RCCEx_PeriphCLKConfig+0x2d4>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000b85c:	2100      	movs	r1, #0
9000b85e:	f104 0008 	add.w	r0, r4, #8
9000b862:	f7ff fe39 	bl	9000b4d8 <RCCEx_PLL2_Config>
9000b866:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
9000b868:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000b86c:	2d00      	cmp	r5, #0
9000b86e:	f040 837b 	bne.w	9000bf68 <HAL_RCCEx_PeriphCLKConfig+0x8a8>
      __HAL_RCC_SPI123_CONFIG(PeriphClkInit->Spi123ClockSelection);
9000b872:	4f55      	ldr	r7, [pc, #340]	; (9000b9c8 <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000b874:	6e20      	ldr	r0, [r4, #96]	; 0x60
9000b876:	6d39      	ldr	r1, [r7, #80]	; 0x50
9000b878:	f421 41e0 	bic.w	r1, r1, #28672	; 0x7000
9000b87c:	4301      	orrs	r1, r0
9000b87e:	6539      	str	r1, [r7, #80]	; 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
9000b880:	0498      	lsls	r0, r3, #18
9000b882:	d51d      	bpl.n	9000b8c0 <HAL_RCCEx_PeriphCLKConfig+0x200>
    switch (PeriphClkInit->Spi45ClockSelection)
9000b884:	6e61      	ldr	r1, [r4, #100]	; 0x64
9000b886:	f5b1 3f00 	cmp.w	r1, #131072	; 0x20000
9000b88a:	f000 8410 	beq.w	9000c0ae <HAL_RCCEx_PeriphCLKConfig+0x9ee>
9000b88e:	f200 8084 	bhi.w	9000b99a <HAL_RCCEx_PeriphCLKConfig+0x2da>
9000b892:	b159      	cbz	r1, 9000b8ac <HAL_RCCEx_PeriphCLKConfig+0x1ec>
9000b894:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
9000b898:	f040 8087 	bne.w	9000b9aa <HAL_RCCEx_PeriphCLKConfig+0x2ea>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
9000b89c:	2101      	movs	r1, #1
9000b89e:	f104 0008 	add.w	r0, r4, #8
9000b8a2:	f7ff fe19 	bl	9000b4d8 <RCCEx_PLL2_Config>
9000b8a6:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
9000b8a8:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000b8ac:	2d00      	cmp	r5, #0
9000b8ae:	f040 839a 	bne.w	9000bfe6 <HAL_RCCEx_PeriphCLKConfig+0x926>
      __HAL_RCC_SPI45_CONFIG(PeriphClkInit->Spi45ClockSelection);
9000b8b2:	4f45      	ldr	r7, [pc, #276]	; (9000b9c8 <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000b8b4:	6e60      	ldr	r0, [r4, #100]	; 0x64
9000b8b6:	6d39      	ldr	r1, [r7, #80]	; 0x50
9000b8b8:	f421 21e0 	bic.w	r1, r1, #458752	; 0x70000
9000b8bc:	4301      	orrs	r1, r0
9000b8be:	6539      	str	r1, [r7, #80]	; 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
9000b8c0:	0459      	lsls	r1, r3, #17
9000b8c2:	d51d      	bpl.n	9000b900 <HAL_RCCEx_PeriphCLKConfig+0x240>
    switch (PeriphClkInit->Spi6ClockSelection)
9000b8c4:	f8d4 10b0 	ldr.w	r1, [r4, #176]	; 0xb0
9000b8c8:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
9000b8cc:	f000 83fb 	beq.w	9000c0c6 <HAL_RCCEx_PeriphCLKConfig+0xa06>
9000b8d0:	d86e      	bhi.n	9000b9b0 <HAL_RCCEx_PeriphCLKConfig+0x2f0>
9000b8d2:	b151      	cbz	r1, 9000b8ea <HAL_RCCEx_PeriphCLKConfig+0x22a>
9000b8d4:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
9000b8d8:	d172      	bne.n	9000b9c0 <HAL_RCCEx_PeriphCLKConfig+0x300>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
9000b8da:	2101      	movs	r1, #1
9000b8dc:	f104 0008 	add.w	r0, r4, #8
9000b8e0:	f7ff fdfa 	bl	9000b4d8 <RCCEx_PLL2_Config>
9000b8e4:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
9000b8e6:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000b8ea:	2d00      	cmp	r5, #0
9000b8ec:	f040 837f 	bne.w	9000bfee <HAL_RCCEx_PeriphCLKConfig+0x92e>
      __HAL_RCC_SPI6_CONFIG(PeriphClkInit->Spi6ClockSelection);
9000b8f0:	4f35      	ldr	r7, [pc, #212]	; (9000b9c8 <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000b8f2:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
9000b8f6:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000b8f8:	f021 41e0 	bic.w	r1, r1, #1879048192	; 0x70000000
9000b8fc:	4301      	orrs	r1, r0
9000b8fe:	65b9      	str	r1, [r7, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
9000b900:	041f      	lsls	r7, r3, #16
9000b902:	d50d      	bpl.n	9000b920 <HAL_RCCEx_PeriphCLKConfig+0x260>
    switch (PeriphClkInit->FdcanClockSelection)
9000b904:	6f21      	ldr	r1, [r4, #112]	; 0x70
9000b906:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
9000b90a:	f000 83c8 	beq.w	9000c09e <HAL_RCCEx_PeriphCLKConfig+0x9de>
9000b90e:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
9000b912:	f000 823b 	beq.w	9000bd8c <HAL_RCCEx_PeriphCLKConfig+0x6cc>
9000b916:	2900      	cmp	r1, #0
9000b918:	f000 8240 	beq.w	9000bd9c <HAL_RCCEx_PeriphCLKConfig+0x6dc>
9000b91c:	2601      	movs	r6, #1
9000b91e:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FMC) == RCC_PERIPHCLK_FMC)
9000b920:	01d8      	lsls	r0, r3, #7
9000b922:	d562      	bpl.n	9000b9ea <HAL_RCCEx_PeriphCLKConfig+0x32a>
    switch (PeriphClkInit->FmcClockSelection)
9000b924:	6ca1      	ldr	r1, [r4, #72]	; 0x48
9000b926:	2903      	cmp	r1, #3
9000b928:	f200 84bf 	bhi.w	9000c2aa <HAL_RCCEx_PeriphCLKConfig+0xbea>
9000b92c:	e8df f011 	tbh	[pc, r1, lsl #1]
9000b930:	004e0053 	.word	0x004e0053
9000b934:	005303e2 	.word	0x005303e2
    switch (PeriphClkInit->Sai23ClockSelection)
9000b938:	29c0      	cmp	r1, #192	; 0xc0
9000b93a:	f43f af12 	beq.w	9000b762 <HAL_RCCEx_PeriphCLKConfig+0xa2>
9000b93e:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
9000b942:	f43f af0e 	beq.w	9000b762 <HAL_RCCEx_PeriphCLKConfig+0xa2>
9000b946:	2601      	movs	r6, #1
9000b948:	4635      	mov	r5, r6
9000b94a:	e714      	b.n	9000b776 <HAL_RCCEx_PeriphCLKConfig+0xb6>
    switch (PeriphClkInit->Sai4AClockSelection)
9000b94c:	f5b1 0fc0 	cmp.w	r1, #6291456	; 0x600000
9000b950:	f43f af2a 	beq.w	9000b7a8 <HAL_RCCEx_PeriphCLKConfig+0xe8>
9000b954:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
9000b958:	f43f af26 	beq.w	9000b7a8 <HAL_RCCEx_PeriphCLKConfig+0xe8>
9000b95c:	2601      	movs	r6, #1
9000b95e:	4635      	mov	r5, r6
9000b960:	e72d      	b.n	9000b7be <HAL_RCCEx_PeriphCLKConfig+0xfe>
    switch (PeriphClkInit->Sai4BClockSelection)
9000b962:	f1b1 7f40 	cmp.w	r1, #50331648	; 0x3000000
9000b966:	f43f af43 	beq.w	9000b7f0 <HAL_RCCEx_PeriphCLKConfig+0x130>
9000b96a:	f1b1 6f80 	cmp.w	r1, #67108864	; 0x4000000
9000b96e:	f43f af3f 	beq.w	9000b7f0 <HAL_RCCEx_PeriphCLKConfig+0x130>
9000b972:	2601      	movs	r6, #1
9000b974:	4635      	mov	r5, r6
9000b976:	e746      	b.n	9000b806 <HAL_RCCEx_PeriphCLKConfig+0x146>
    switch (PeriphClkInit->QspiClockSelection)
9000b978:	2930      	cmp	r1, #48	; 0x30
9000b97a:	f43f af55 	beq.w	9000b828 <HAL_RCCEx_PeriphCLKConfig+0x168>
9000b97e:	2601      	movs	r6, #1
9000b980:	4635      	mov	r5, r6
9000b982:	e75b      	b.n	9000b83c <HAL_RCCEx_PeriphCLKConfig+0x17c>
    switch (PeriphClkInit->Spi123ClockSelection)
9000b984:	f5b1 5f40 	cmp.w	r1, #12288	; 0x3000
9000b988:	f43f af70 	beq.w	9000b86c <HAL_RCCEx_PeriphCLKConfig+0x1ac>
9000b98c:	f5b1 4f80 	cmp.w	r1, #16384	; 0x4000
9000b990:	f43f af6c 	beq.w	9000b86c <HAL_RCCEx_PeriphCLKConfig+0x1ac>
9000b994:	2601      	movs	r6, #1
9000b996:	4635      	mov	r5, r6
9000b998:	e772      	b.n	9000b880 <HAL_RCCEx_PeriphCLKConfig+0x1c0>
    switch (PeriphClkInit->Spi45ClockSelection)
9000b99a:	f421 3080 	bic.w	r0, r1, #65536	; 0x10000
9000b99e:	f5b0 2f80 	cmp.w	r0, #262144	; 0x40000
9000b9a2:	d083      	beq.n	9000b8ac <HAL_RCCEx_PeriphCLKConfig+0x1ec>
9000b9a4:	f5b1 3f40 	cmp.w	r1, #196608	; 0x30000
9000b9a8:	d080      	beq.n	9000b8ac <HAL_RCCEx_PeriphCLKConfig+0x1ec>
9000b9aa:	2601      	movs	r6, #1
9000b9ac:	4635      	mov	r5, r6
9000b9ae:	e787      	b.n	9000b8c0 <HAL_RCCEx_PeriphCLKConfig+0x200>
    switch (PeriphClkInit->Spi6ClockSelection)
9000b9b0:	f021 5080 	bic.w	r0, r1, #268435456	; 0x10000000
9000b9b4:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
9000b9b8:	d097      	beq.n	9000b8ea <HAL_RCCEx_PeriphCLKConfig+0x22a>
9000b9ba:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
9000b9be:	d094      	beq.n	9000b8ea <HAL_RCCEx_PeriphCLKConfig+0x22a>
9000b9c0:	2601      	movs	r6, #1
9000b9c2:	4635      	mov	r5, r6
9000b9c4:	e79c      	b.n	9000b900 <HAL_RCCEx_PeriphCLKConfig+0x240>
9000b9c6:	bf00      	nop
9000b9c8:	58024400 	.word	0x58024400
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000b9cc:	4839      	ldr	r0, [pc, #228]	; (9000bab4 <HAL_RCCEx_PeriphCLKConfig+0x3f4>)
9000b9ce:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000b9d0:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000b9d4:	62c1      	str	r1, [r0, #44]	; 0x2c
    if (ret == HAL_OK)
9000b9d6:	2d00      	cmp	r5, #0
9000b9d8:	f040 8303 	bne.w	9000bfe2 <HAL_RCCEx_PeriphCLKConfig+0x922>
      __HAL_RCC_FMC_CONFIG(PeriphClkInit->FmcClockSelection);
9000b9dc:	4f35      	ldr	r7, [pc, #212]	; (9000bab4 <HAL_RCCEx_PeriphCLKConfig+0x3f4>)
9000b9de:	6ca0      	ldr	r0, [r4, #72]	; 0x48
9000b9e0:	6cf9      	ldr	r1, [r7, #76]	; 0x4c
9000b9e2:	f021 0103 	bic.w	r1, r1, #3
9000b9e6:	4301      	orrs	r1, r0
9000b9e8:	64f9      	str	r1, [r7, #76]	; 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
9000b9ea:	0259      	lsls	r1, r3, #9
9000b9ec:	f100 826a 	bmi.w	9000bec4 <HAL_RCCEx_PeriphCLKConfig+0x804>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000b9f0:	07d8      	lsls	r0, r3, #31
9000b9f2:	d52f      	bpl.n	9000ba54 <HAL_RCCEx_PeriphCLKConfig+0x394>
    switch (PeriphClkInit->Usart16ClockSelection)
9000b9f4:	6fe1      	ldr	r1, [r4, #124]	; 0x7c
9000b9f6:	2928      	cmp	r1, #40	; 0x28
9000b9f8:	d82a      	bhi.n	9000ba50 <HAL_RCCEx_PeriphCLKConfig+0x390>
9000b9fa:	e8df f011 	tbh	[pc, r1, lsl #1]
9000b9fe:	020a      	.short	0x020a
9000ba00:	00290029 	.word	0x00290029
9000ba04:	00290029 	.word	0x00290029
9000ba08:	00290029 	.word	0x00290029
9000ba0c:	02020029 	.word	0x02020029
9000ba10:	00290029 	.word	0x00290029
9000ba14:	00290029 	.word	0x00290029
9000ba18:	00290029 	.word	0x00290029
9000ba1c:	04070029 	.word	0x04070029
9000ba20:	00290029 	.word	0x00290029
9000ba24:	00290029 	.word	0x00290029
9000ba28:	00290029 	.word	0x00290029
9000ba2c:	020a0029 	.word	0x020a0029
9000ba30:	00290029 	.word	0x00290029
9000ba34:	00290029 	.word	0x00290029
9000ba38:	00290029 	.word	0x00290029
9000ba3c:	020a0029 	.word	0x020a0029
9000ba40:	00290029 	.word	0x00290029
9000ba44:	00290029 	.word	0x00290029
9000ba48:	00290029 	.word	0x00290029
9000ba4c:	020a0029 	.word	0x020a0029
9000ba50:	2601      	movs	r6, #1
9000ba52:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
9000ba54:	0799      	lsls	r1, r3, #30
9000ba56:	d51d      	bpl.n	9000ba94 <HAL_RCCEx_PeriphCLKConfig+0x3d4>
    switch (PeriphClkInit->Usart234578ClockSelection)
9000ba58:	6fa1      	ldr	r1, [r4, #120]	; 0x78
9000ba5a:	2905      	cmp	r1, #5
9000ba5c:	f200 8421 	bhi.w	9000c2a2 <HAL_RCCEx_PeriphCLKConfig+0xbe2>
9000ba60:	e8df f011 	tbh	[pc, r1, lsl #1]
9000ba64:	0006000e 	.word	0x0006000e
9000ba68:	000e03c8 	.word	0x000e03c8
9000ba6c:	000e000e 	.word	0x000e000e
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
9000ba70:	2101      	movs	r1, #1
9000ba72:	f104 0008 	add.w	r0, r4, #8
9000ba76:	f7ff fd2f 	bl	9000b4d8 <RCCEx_PLL2_Config>
9000ba7a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
9000ba7c:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000ba80:	2d00      	cmp	r5, #0
9000ba82:	f040 82b8 	bne.w	9000bff6 <HAL_RCCEx_PeriphCLKConfig+0x936>
      __HAL_RCC_USART234578_CONFIG(PeriphClkInit->Usart234578ClockSelection);
9000ba86:	4f0b      	ldr	r7, [pc, #44]	; (9000bab4 <HAL_RCCEx_PeriphCLKConfig+0x3f4>)
9000ba88:	6fa0      	ldr	r0, [r4, #120]	; 0x78
9000ba8a:	6d79      	ldr	r1, [r7, #84]	; 0x54
9000ba8c:	f021 0107 	bic.w	r1, r1, #7
9000ba90:	4301      	orrs	r1, r0
9000ba92:	6579      	str	r1, [r7, #84]	; 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
9000ba94:	075f      	lsls	r7, r3, #29
9000ba96:	d522      	bpl.n	9000bade <HAL_RCCEx_PeriphCLKConfig+0x41e>
    switch (PeriphClkInit->Lpuart1ClockSelection)
9000ba98:	f8d4 1094 	ldr.w	r1, [r4, #148]	; 0x94
9000ba9c:	2905      	cmp	r1, #5
9000ba9e:	f200 8408 	bhi.w	9000c2b2 <HAL_RCCEx_PeriphCLKConfig+0xbf2>
9000baa2:	e8df f011 	tbh	[pc, r1, lsl #1]
9000baa6:	0011      	.short	0x0011
9000baa8:	039b0009 	.word	0x039b0009
9000baac:	00110011 	.word	0x00110011
9000bab0:	0011      	.short	0x0011
9000bab2:	bf00      	nop
9000bab4:	58024400 	.word	0x58024400
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
9000bab8:	2101      	movs	r1, #1
9000baba:	f104 0008 	add.w	r0, r4, #8
9000babe:	f7ff fd0b 	bl	9000b4d8 <RCCEx_PLL2_Config>
9000bac2:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
9000bac4:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bac8:	2d00      	cmp	r5, #0
9000baca:	f040 8286 	bne.w	9000bfda <HAL_RCCEx_PeriphCLKConfig+0x91a>
      __HAL_RCC_LPUART1_CONFIG(PeriphClkInit->Lpuart1ClockSelection);
9000bace:	4fae      	ldr	r7, [pc, #696]	; (9000bd88 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000bad0:	f8d4 0094 	ldr.w	r0, [r4, #148]	; 0x94
9000bad4:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000bad6:	f021 0107 	bic.w	r1, r1, #7
9000bada:	4301      	orrs	r1, r0
9000badc:	65b9      	str	r1, [r7, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
9000bade:	0698      	lsls	r0, r3, #26
9000bae0:	d51f      	bpl.n	9000bb22 <HAL_RCCEx_PeriphCLKConfig+0x462>
    switch (PeriphClkInit->Lptim1ClockSelection)
9000bae2:	f8d4 1090 	ldr.w	r1, [r4, #144]	; 0x90
9000bae6:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
9000baea:	f000 82f7 	beq.w	9000c0dc <HAL_RCCEx_PeriphCLKConfig+0xa1c>
9000baee:	f200 810b 	bhi.w	9000bd08 <HAL_RCCEx_PeriphCLKConfig+0x648>
9000baf2:	b159      	cbz	r1, 9000bb0c <HAL_RCCEx_PeriphCLKConfig+0x44c>
9000baf4:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
9000baf8:	f040 8110 	bne.w	9000bd1c <HAL_RCCEx_PeriphCLKConfig+0x65c>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000bafc:	2100      	movs	r1, #0
9000bafe:	f104 0008 	add.w	r0, r4, #8
9000bb02:	f7ff fce9 	bl	9000b4d8 <RCCEx_PLL2_Config>
9000bb06:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
9000bb08:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bb0c:	2d00      	cmp	r5, #0
9000bb0e:	f040 8260 	bne.w	9000bfd2 <HAL_RCCEx_PeriphCLKConfig+0x912>
      __HAL_RCC_LPTIM1_CONFIG(PeriphClkInit->Lptim1ClockSelection);
9000bb12:	4f9d      	ldr	r7, [pc, #628]	; (9000bd88 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000bb14:	f8d4 0090 	ldr.w	r0, [r4, #144]	; 0x90
9000bb18:	6d79      	ldr	r1, [r7, #84]	; 0x54
9000bb1a:	f021 41e0 	bic.w	r1, r1, #1879048192	; 0x70000000
9000bb1e:	4301      	orrs	r1, r0
9000bb20:	6579      	str	r1, [r7, #84]	; 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
9000bb22:	0659      	lsls	r1, r3, #25
9000bb24:	d51f      	bpl.n	9000bb66 <HAL_RCCEx_PeriphCLKConfig+0x4a6>
    switch (PeriphClkInit->Lptim2ClockSelection)
9000bb26:	f8d4 109c 	ldr.w	r1, [r4, #156]	; 0x9c
9000bb2a:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
9000bb2e:	f000 829b 	beq.w	9000c068 <HAL_RCCEx_PeriphCLKConfig+0x9a8>
9000bb32:	f200 80f6 	bhi.w	9000bd22 <HAL_RCCEx_PeriphCLKConfig+0x662>
9000bb36:	b159      	cbz	r1, 9000bb50 <HAL_RCCEx_PeriphCLKConfig+0x490>
9000bb38:	f5b1 6f80 	cmp.w	r1, #1024	; 0x400
9000bb3c:	f040 80fb 	bne.w	9000bd36 <HAL_RCCEx_PeriphCLKConfig+0x676>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000bb40:	2100      	movs	r1, #0
9000bb42:	f104 0008 	add.w	r0, r4, #8
9000bb46:	f7ff fcc7 	bl	9000b4d8 <RCCEx_PLL2_Config>
9000bb4a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
9000bb4c:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bb50:	2d00      	cmp	r5, #0
9000bb52:	f040 824e 	bne.w	9000bff2 <HAL_RCCEx_PeriphCLKConfig+0x932>
      __HAL_RCC_LPTIM2_CONFIG(PeriphClkInit->Lptim2ClockSelection);
9000bb56:	4f8c      	ldr	r7, [pc, #560]	; (9000bd88 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000bb58:	f8d4 009c 	ldr.w	r0, [r4, #156]	; 0x9c
9000bb5c:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000bb5e:	f421 51e0 	bic.w	r1, r1, #7168	; 0x1c00
9000bb62:	4301      	orrs	r1, r0
9000bb64:	65b9      	str	r1, [r7, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
9000bb66:	061f      	lsls	r7, r3, #24
9000bb68:	d51f      	bpl.n	9000bbaa <HAL_RCCEx_PeriphCLKConfig+0x4ea>
    switch (PeriphClkInit->Lptim345ClockSelection)
9000bb6a:	f8d4 10a0 	ldr.w	r1, [r4, #160]	; 0xa0
9000bb6e:	f5b1 4f80 	cmp.w	r1, #16384	; 0x4000
9000bb72:	f000 8289 	beq.w	9000c088 <HAL_RCCEx_PeriphCLKConfig+0x9c8>
9000bb76:	f200 80e1 	bhi.w	9000bd3c <HAL_RCCEx_PeriphCLKConfig+0x67c>
9000bb7a:	b159      	cbz	r1, 9000bb94 <HAL_RCCEx_PeriphCLKConfig+0x4d4>
9000bb7c:	f5b1 5f00 	cmp.w	r1, #8192	; 0x2000
9000bb80:	f040 80e6 	bne.w	9000bd50 <HAL_RCCEx_PeriphCLKConfig+0x690>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000bb84:	2100      	movs	r1, #0
9000bb86:	f104 0008 	add.w	r0, r4, #8
9000bb8a:	f7ff fca5 	bl	9000b4d8 <RCCEx_PLL2_Config>
9000bb8e:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
9000bb90:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bb94:	2d00      	cmp	r5, #0
9000bb96:	f040 8228 	bne.w	9000bfea <HAL_RCCEx_PeriphCLKConfig+0x92a>
      __HAL_RCC_LPTIM345_CONFIG(PeriphClkInit->Lptim345ClockSelection);
9000bb9a:	4f7b      	ldr	r7, [pc, #492]	; (9000bd88 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000bb9c:	f8d4 00a0 	ldr.w	r0, [r4, #160]	; 0xa0
9000bba0:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000bba2:	f421 4160 	bic.w	r1, r1, #57344	; 0xe000
9000bba6:	4301      	orrs	r1, r0
9000bba8:	65b9      	str	r1, [r7, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
9000bbaa:	0718      	lsls	r0, r3, #28
9000bbac:	d50b      	bpl.n	9000bbc6 <HAL_RCCEx_PeriphCLKConfig+0x506>
    if ((PeriphClkInit->I2c123ClockSelection) == RCC_I2C123CLKSOURCE_PLL3)
9000bbae:	f8d4 0084 	ldr.w	r0, [r4, #132]	; 0x84
9000bbb2:	f5b0 5f80 	cmp.w	r0, #4096	; 0x1000
9000bbb6:	f000 82a9 	beq.w	9000c10c <HAL_RCCEx_PeriphCLKConfig+0xa4c>
    __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
9000bbba:	4f73      	ldr	r7, [pc, #460]	; (9000bd88 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000bbbc:	6d79      	ldr	r1, [r7, #84]	; 0x54
9000bbbe:	f421 5140 	bic.w	r1, r1, #12288	; 0x3000
9000bbc2:	4301      	orrs	r1, r0
9000bbc4:	6579      	str	r1, [r7, #84]	; 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
9000bbc6:	06d9      	lsls	r1, r3, #27
9000bbc8:	d50b      	bpl.n	9000bbe2 <HAL_RCCEx_PeriphCLKConfig+0x522>
    if ((PeriphClkInit->I2c4ClockSelection) == RCC_I2C4CLKSOURCE_PLL3)
9000bbca:	f8d4 0098 	ldr.w	r0, [r4, #152]	; 0x98
9000bbce:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
9000bbd2:	f000 82a8 	beq.w	9000c126 <HAL_RCCEx_PeriphCLKConfig+0xa66>
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
9000bbd6:	4f6c      	ldr	r7, [pc, #432]	; (9000bd88 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000bbd8:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000bbda:	f421 7140 	bic.w	r1, r1, #768	; 0x300
9000bbde:	4301      	orrs	r1, r0
9000bbe0:	65b9      	str	r1, [r7, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
9000bbe2:	031f      	lsls	r7, r3, #12
9000bbe4:	d50e      	bpl.n	9000bc04 <HAL_RCCEx_PeriphCLKConfig+0x544>
    switch (PeriphClkInit->AdcClockSelection)
9000bbe6:	f8d4 10a4 	ldr.w	r1, [r4, #164]	; 0xa4
9000bbea:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
9000bbee:	f000 80f4 	beq.w	9000bdda <HAL_RCCEx_PeriphCLKConfig+0x71a>
9000bbf2:	f5b1 3f00 	cmp.w	r1, #131072	; 0x20000
9000bbf6:	f000 80f8 	beq.w	9000bdea <HAL_RCCEx_PeriphCLKConfig+0x72a>
9000bbfa:	2900      	cmp	r1, #0
9000bbfc:	f000 821c 	beq.w	9000c038 <HAL_RCCEx_PeriphCLKConfig+0x978>
9000bc00:	2601      	movs	r6, #1
9000bc02:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
9000bc04:	0358      	lsls	r0, r3, #13
9000bc06:	d50f      	bpl.n	9000bc28 <HAL_RCCEx_PeriphCLKConfig+0x568>
    switch (PeriphClkInit->UsbClockSelection)
9000bc08:	f8d4 1088 	ldr.w	r1, [r4, #136]	; 0x88
9000bc0c:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
9000bc10:	f000 80cf 	beq.w	9000bdb2 <HAL_RCCEx_PeriphCLKConfig+0x6f2>
9000bc14:	f5b1 1f40 	cmp.w	r1, #3145728	; 0x300000
9000bc18:	f000 80d3 	beq.w	9000bdc2 <HAL_RCCEx_PeriphCLKConfig+0x702>
9000bc1c:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
9000bc20:	f000 8202 	beq.w	9000c028 <HAL_RCCEx_PeriphCLKConfig+0x968>
9000bc24:	2601      	movs	r6, #1
9000bc26:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC) == RCC_PERIPHCLK_SDMMC)
9000bc28:	03d9      	lsls	r1, r3, #15
9000bc2a:	d509      	bpl.n	9000bc40 <HAL_RCCEx_PeriphCLKConfig+0x580>
    switch (PeriphClkInit->SdmmcClockSelection)
9000bc2c:	6d21      	ldr	r1, [r4, #80]	; 0x50
9000bc2e:	2900      	cmp	r1, #0
9000bc30:	f000 81f1 	beq.w	9000c016 <HAL_RCCEx_PeriphCLKConfig+0x956>
9000bc34:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
9000bc38:	f000 819d 	beq.w	9000bf76 <HAL_RCCEx_PeriphCLKConfig+0x8b6>
9000bc3c:	2601      	movs	r6, #1
9000bc3e:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
9000bc40:	009f      	lsls	r7, r3, #2
9000bc42:	f100 80f1 	bmi.w	9000be28 <HAL_RCCEx_PeriphCLKConfig+0x768>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == RCC_PERIPHCLK_RNG)
9000bc46:	0398      	lsls	r0, r3, #14
9000bc48:	d50c      	bpl.n	9000bc64 <HAL_RCCEx_PeriphCLKConfig+0x5a4>
    switch (PeriphClkInit->RngClockSelection)
9000bc4a:	f8d4 1080 	ldr.w	r1, [r4, #128]	; 0x80
9000bc4e:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
9000bc52:	f000 81d8 	beq.w	9000c006 <HAL_RCCEx_PeriphCLKConfig+0x946>
9000bc56:	d97e      	bls.n	9000bd56 <HAL_RCCEx_PeriphCLKConfig+0x696>
9000bc58:	f421 7080 	bic.w	r0, r1, #256	; 0x100
9000bc5c:	f5b0 7f00 	cmp.w	r0, #512	; 0x200
9000bc60:	d07b      	beq.n	9000bd5a <HAL_RCCEx_PeriphCLKConfig+0x69a>
9000bc62:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SWPMI1) == RCC_PERIPHCLK_SWPMI1)
9000bc64:	02d9      	lsls	r1, r3, #11
9000bc66:	d506      	bpl.n	9000bc76 <HAL_RCCEx_PeriphCLKConfig+0x5b6>
    __HAL_RCC_SWPMI1_CONFIG(PeriphClkInit->Swpmi1ClockSelection);
9000bc68:	4847      	ldr	r0, [pc, #284]	; (9000bd88 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000bc6a:	6f65      	ldr	r5, [r4, #116]	; 0x74
9000bc6c:	6d01      	ldr	r1, [r0, #80]	; 0x50
9000bc6e:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
9000bc72:	4329      	orrs	r1, r5
9000bc74:	6501      	str	r1, [r0, #80]	; 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_HRTIM1) == RCC_PERIPHCLK_HRTIM1)
9000bc76:	00df      	lsls	r7, r3, #3
9000bc78:	d507      	bpl.n	9000bc8a <HAL_RCCEx_PeriphCLKConfig+0x5ca>
    __HAL_RCC_HRTIM1_CONFIG(PeriphClkInit->Hrtim1ClockSelection);
9000bc7a:	4843      	ldr	r0, [pc, #268]	; (9000bd88 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000bc7c:	f8d4 50b8 	ldr.w	r5, [r4, #184]	; 0xb8
9000bc80:	6901      	ldr	r1, [r0, #16]
9000bc82:	f421 4180 	bic.w	r1, r1, #16384	; 0x4000
9000bc86:	4329      	orrs	r1, r5
9000bc88:	6101      	str	r1, [r0, #16]
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DFSDM1) == RCC_PERIPHCLK_DFSDM1)
9000bc8a:	029d      	lsls	r5, r3, #10
9000bc8c:	d506      	bpl.n	9000bc9c <HAL_RCCEx_PeriphCLKConfig+0x5dc>
    __HAL_RCC_DFSDM1_CONFIG(PeriphClkInit->Dfsdm1ClockSelection);
9000bc8e:	483e      	ldr	r0, [pc, #248]	; (9000bd88 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000bc90:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
9000bc92:	6d01      	ldr	r1, [r0, #80]	; 0x50
9000bc94:	f021 7180 	bic.w	r1, r1, #16777216	; 0x1000000
9000bc98:	4329      	orrs	r1, r5
9000bc9a:	6501      	str	r1, [r0, #80]	; 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == RCC_PERIPHCLK_TIM)
9000bc9c:	0058      	lsls	r0, r3, #1
9000bc9e:	d509      	bpl.n	9000bcb4 <HAL_RCCEx_PeriphCLKConfig+0x5f4>
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
9000bca0:	4939      	ldr	r1, [pc, #228]	; (9000bd88 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000bca2:	6908      	ldr	r0, [r1, #16]
9000bca4:	f420 4000 	bic.w	r0, r0, #32768	; 0x8000
9000bca8:	6108      	str	r0, [r1, #16]
9000bcaa:	6908      	ldr	r0, [r1, #16]
9000bcac:	f8d4 50bc 	ldr.w	r5, [r4, #188]	; 0xbc
9000bcb0:	4328      	orrs	r0, r5
9000bcb2:	6108      	str	r0, [r1, #16]
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CKPER) == RCC_PERIPHCLK_CKPER)
9000bcb4:	2b00      	cmp	r3, #0
9000bcb6:	da06      	bge.n	9000bcc6 <HAL_RCCEx_PeriphCLKConfig+0x606>
    __HAL_RCC_CLKP_CONFIG(PeriphClkInit->CkperClockSelection);
9000bcb8:	4833      	ldr	r0, [pc, #204]	; (9000bd88 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000bcba:	6d65      	ldr	r5, [r4, #84]	; 0x54
9000bcbc:	6cc1      	ldr	r1, [r0, #76]	; 0x4c
9000bcbe:	f021 5140 	bic.w	r1, r1, #805306368	; 0x30000000
9000bcc2:	4329      	orrs	r1, r5
9000bcc4:	64c1      	str	r1, [r0, #76]	; 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CEC) == RCC_PERIPHCLK_CEC)
9000bcc6:	0219      	lsls	r1, r3, #8
9000bcc8:	d507      	bpl.n	9000bcda <HAL_RCCEx_PeriphCLKConfig+0x61a>
    __HAL_RCC_CEC_CONFIG(PeriphClkInit->CecClockSelection);
9000bcca:	492f      	ldr	r1, [pc, #188]	; (9000bd88 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000bccc:	f8d4 008c 	ldr.w	r0, [r4, #140]	; 0x8c
9000bcd0:	6d4b      	ldr	r3, [r1, #84]	; 0x54
9000bcd2:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
9000bcd6:	4303      	orrs	r3, r0
9000bcd8:	654b      	str	r3, [r1, #84]	; 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVP) == RCC_PERIPHCLK_PLL2_DIVP)
9000bcda:	07d3      	lsls	r3, r2, #31
9000bcdc:	f100 80b0 	bmi.w	9000be40 <HAL_RCCEx_PeriphCLKConfig+0x780>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVQ) == RCC_PERIPHCLK_PLL2_DIVQ)
9000bce0:	0797      	lsls	r7, r2, #30
9000bce2:	f100 80ba 	bmi.w	9000be5a <HAL_RCCEx_PeriphCLKConfig+0x79a>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVR) == RCC_PERIPHCLK_PLL2_DIVR)
9000bce6:	0755      	lsls	r5, r2, #29
9000bce8:	f100 80c4 	bmi.w	9000be74 <HAL_RCCEx_PeriphCLKConfig+0x7b4>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVP) == RCC_PERIPHCLK_PLL3_DIVP)
9000bcec:	0710      	lsls	r0, r2, #28
9000bcee:	f100 80ce 	bmi.w	9000be8e <HAL_RCCEx_PeriphCLKConfig+0x7ce>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVQ) == RCC_PERIPHCLK_PLL3_DIVQ)
9000bcf2:	06d1      	lsls	r1, r2, #27
9000bcf4:	f100 80d8 	bmi.w	9000bea8 <HAL_RCCEx_PeriphCLKConfig+0x7e8>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
9000bcf8:	0692      	lsls	r2, r2, #26
9000bcfa:	f100 8125 	bmi.w	9000bf48 <HAL_RCCEx_PeriphCLKConfig+0x888>
    return HAL_OK;
9000bcfe:	1e30      	subs	r0, r6, #0
9000bd00:	bf18      	it	ne
9000bd02:	2001      	movne	r0, #1
}
9000bd04:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    switch (PeriphClkInit->Lptim1ClockSelection)
9000bd08:	f021 5080 	bic.w	r0, r1, #268435456	; 0x10000000
9000bd0c:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
9000bd10:	f43f aefc 	beq.w	9000bb0c <HAL_RCCEx_PeriphCLKConfig+0x44c>
9000bd14:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
9000bd18:	f43f aef8 	beq.w	9000bb0c <HAL_RCCEx_PeriphCLKConfig+0x44c>
9000bd1c:	2601      	movs	r6, #1
9000bd1e:	4635      	mov	r5, r6
9000bd20:	e6ff      	b.n	9000bb22 <HAL_RCCEx_PeriphCLKConfig+0x462>
    switch (PeriphClkInit->Lptim2ClockSelection)
9000bd22:	f421 6080 	bic.w	r0, r1, #1024	; 0x400
9000bd26:	f5b0 5f80 	cmp.w	r0, #4096	; 0x1000
9000bd2a:	f43f af11 	beq.w	9000bb50 <HAL_RCCEx_PeriphCLKConfig+0x490>
9000bd2e:	f5b1 6f40 	cmp.w	r1, #3072	; 0xc00
9000bd32:	f43f af0d 	beq.w	9000bb50 <HAL_RCCEx_PeriphCLKConfig+0x490>
9000bd36:	2601      	movs	r6, #1
9000bd38:	4635      	mov	r5, r6
9000bd3a:	e714      	b.n	9000bb66 <HAL_RCCEx_PeriphCLKConfig+0x4a6>
    switch (PeriphClkInit->Lptim345ClockSelection)
9000bd3c:	f421 5000 	bic.w	r0, r1, #8192	; 0x2000
9000bd40:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
9000bd44:	f43f af26 	beq.w	9000bb94 <HAL_RCCEx_PeriphCLKConfig+0x4d4>
9000bd48:	f5b1 4fc0 	cmp.w	r1, #24576	; 0x6000
9000bd4c:	f43f af22 	beq.w	9000bb94 <HAL_RCCEx_PeriphCLKConfig+0x4d4>
9000bd50:	2601      	movs	r6, #1
9000bd52:	4635      	mov	r5, r6
9000bd54:	e729      	b.n	9000bbaa <HAL_RCCEx_PeriphCLKConfig+0x4ea>
    switch (PeriphClkInit->RngClockSelection)
9000bd56:	2900      	cmp	r1, #0
9000bd58:	d183      	bne.n	9000bc62 <HAL_RCCEx_PeriphCLKConfig+0x5a2>
    if (ret == HAL_OK)
9000bd5a:	2d00      	cmp	r5, #0
9000bd5c:	f040 8151 	bne.w	9000c002 <HAL_RCCEx_PeriphCLKConfig+0x942>
      __HAL_RCC_RNG_CONFIG(PeriphClkInit->RngClockSelection);
9000bd60:	4d09      	ldr	r5, [pc, #36]	; (9000bd88 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000bd62:	6d68      	ldr	r0, [r5, #84]	; 0x54
9000bd64:	f420 7040 	bic.w	r0, r0, #768	; 0x300
9000bd68:	4301      	orrs	r1, r0
9000bd6a:	6569      	str	r1, [r5, #84]	; 0x54
9000bd6c:	e77a      	b.n	9000bc64 <HAL_RCCEx_PeriphCLKConfig+0x5a4>
    switch (PeriphClkInit->Sai1ClockSelection)
9000bd6e:	4635      	mov	r5, r6
    if (ret == HAL_OK)
9000bd70:	2d00      	cmp	r5, #0
9000bd72:	f040 80fb 	bne.w	9000bf6c <HAL_RCCEx_PeriphCLKConfig+0x8ac>
      __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
9000bd76:	4f04      	ldr	r7, [pc, #16]	; (9000bd88 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000bd78:	6da0      	ldr	r0, [r4, #88]	; 0x58
9000bd7a:	6d39      	ldr	r1, [r7, #80]	; 0x50
9000bd7c:	f021 0107 	bic.w	r1, r1, #7
9000bd80:	4301      	orrs	r1, r0
9000bd82:	6539      	str	r1, [r7, #80]	; 0x50
9000bd84:	e4d7      	b.n	9000b736 <HAL_RCCEx_PeriphCLKConfig+0x76>
9000bd86:	bf00      	nop
9000bd88:	58024400 	.word	0x58024400
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
9000bd8c:	2101      	movs	r1, #1
9000bd8e:	f104 0008 	add.w	r0, r4, #8
9000bd92:	f7ff fba1 	bl	9000b4d8 <RCCEx_PLL2_Config>
9000bd96:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FMC) == RCC_PERIPHCLK_FMC)
9000bd98:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bd9c:	2d00      	cmp	r5, #0
9000bd9e:	f040 811a 	bne.w	9000bfd6 <HAL_RCCEx_PeriphCLKConfig+0x916>
      __HAL_RCC_FDCAN_CONFIG(PeriphClkInit->FdcanClockSelection);
9000bda2:	4fb7      	ldr	r7, [pc, #732]	; (9000c080 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000bda4:	6f20      	ldr	r0, [r4, #112]	; 0x70
9000bda6:	6d39      	ldr	r1, [r7, #80]	; 0x50
9000bda8:	f021 5140 	bic.w	r1, r1, #805306368	; 0x30000000
9000bdac:	4301      	orrs	r1, r0
9000bdae:	6539      	str	r1, [r7, #80]	; 0x50
9000bdb0:	e5b6      	b.n	9000b920 <HAL_RCCEx_PeriphCLKConfig+0x260>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000bdb2:	2101      	movs	r1, #1
9000bdb4:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000bdb8:	f7ff fc08 	bl	9000b5cc <RCCEx_PLL3_Config>
9000bdbc:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC) == RCC_PERIPHCLK_SDMMC)
9000bdbe:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bdc2:	2d00      	cmp	r5, #0
9000bdc4:	f040 811b 	bne.w	9000bffe <HAL_RCCEx_PeriphCLKConfig+0x93e>
      __HAL_RCC_USB_CONFIG(PeriphClkInit->UsbClockSelection);
9000bdc8:	4fad      	ldr	r7, [pc, #692]	; (9000c080 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000bdca:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
9000bdce:	6d79      	ldr	r1, [r7, #84]	; 0x54
9000bdd0:	f421 1140 	bic.w	r1, r1, #3145728	; 0x300000
9000bdd4:	4301      	orrs	r1, r0
9000bdd6:	6579      	str	r1, [r7, #84]	; 0x54
9000bdd8:	e726      	b.n	9000bc28 <HAL_RCCEx_PeriphCLKConfig+0x568>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000bdda:	2102      	movs	r1, #2
9000bddc:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000bde0:	f7ff fbf4 	bl	9000b5cc <RCCEx_PLL3_Config>
9000bde4:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
9000bde6:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bdea:	2d00      	cmp	r5, #0
9000bdec:	f040 8105 	bne.w	9000bffa <HAL_RCCEx_PeriphCLKConfig+0x93a>
      __HAL_RCC_ADC_CONFIG(PeriphClkInit->AdcClockSelection);
9000bdf0:	4fa3      	ldr	r7, [pc, #652]	; (9000c080 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000bdf2:	f8d4 00a4 	ldr.w	r0, [r4, #164]	; 0xa4
9000bdf6:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000bdf8:	f421 3140 	bic.w	r1, r1, #196608	; 0x30000
9000bdfc:	4301      	orrs	r1, r0
9000bdfe:	65b9      	str	r1, [r7, #88]	; 0x58
9000be00:	e700      	b.n	9000bc04 <HAL_RCCEx_PeriphCLKConfig+0x544>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
9000be02:	2101      	movs	r1, #1
9000be04:	f104 0008 	add.w	r0, r4, #8
9000be08:	f7ff fb66 	bl	9000b4d8 <RCCEx_PLL2_Config>
9000be0c:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
9000be0e:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000be12:	2d00      	cmp	r5, #0
9000be14:	f040 80db 	bne.w	9000bfce <HAL_RCCEx_PeriphCLKConfig+0x90e>
      __HAL_RCC_USART16_CONFIG(PeriphClkInit->Usart16ClockSelection);
9000be18:	4f99      	ldr	r7, [pc, #612]	; (9000c080 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000be1a:	6fe0      	ldr	r0, [r4, #124]	; 0x7c
9000be1c:	6d79      	ldr	r1, [r7, #84]	; 0x54
9000be1e:	f021 0138 	bic.w	r1, r1, #56	; 0x38
9000be22:	4301      	orrs	r1, r0
9000be24:	6579      	str	r1, [r7, #84]	; 0x54
9000be26:	e615      	b.n	9000ba54 <HAL_RCCEx_PeriphCLKConfig+0x394>
    if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000be28:	2102      	movs	r1, #2
9000be2a:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000be2e:	f7ff fbcd 	bl	9000b5cc <RCCEx_PLL3_Config>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == RCC_PERIPHCLK_RNG)
9000be32:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000be36:	2800      	cmp	r0, #0
9000be38:	f43f af05 	beq.w	9000bc46 <HAL_RCCEx_PeriphCLKConfig+0x586>
      status = HAL_ERROR;
9000be3c:	2601      	movs	r6, #1
9000be3e:	e702      	b.n	9000bc46 <HAL_RCCEx_PeriphCLKConfig+0x586>
    ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000be40:	2100      	movs	r1, #0
9000be42:	f104 0008 	add.w	r0, r4, #8
9000be46:	f7ff fb47 	bl	9000b4d8 <RCCEx_PLL2_Config>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVQ) == RCC_PERIPHCLK_PLL2_DIVQ)
9000be4a:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000be4c:	2800      	cmp	r0, #0
9000be4e:	f43f af47 	beq.w	9000bce0 <HAL_RCCEx_PeriphCLKConfig+0x620>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVQ) == RCC_PERIPHCLK_PLL2_DIVQ)
9000be52:	0797      	lsls	r7, r2, #30
9000be54:	4606      	mov	r6, r0
9000be56:	f57f af46 	bpl.w	9000bce6 <HAL_RCCEx_PeriphCLKConfig+0x626>
    ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
9000be5a:	2101      	movs	r1, #1
9000be5c:	f104 0008 	add.w	r0, r4, #8
9000be60:	f7ff fb3a 	bl	9000b4d8 <RCCEx_PLL2_Config>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVR) == RCC_PERIPHCLK_PLL2_DIVR)
9000be64:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000be66:	2800      	cmp	r0, #0
9000be68:	f43f af3d 	beq.w	9000bce6 <HAL_RCCEx_PeriphCLKConfig+0x626>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVR) == RCC_PERIPHCLK_PLL2_DIVR)
9000be6c:	0755      	lsls	r5, r2, #29
9000be6e:	4606      	mov	r6, r0
9000be70:	f57f af3c 	bpl.w	9000bcec <HAL_RCCEx_PeriphCLKConfig+0x62c>
    ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
9000be74:	2102      	movs	r1, #2
9000be76:	f104 0008 	add.w	r0, r4, #8
9000be7a:	f7ff fb2d 	bl	9000b4d8 <RCCEx_PLL2_Config>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVP) == RCC_PERIPHCLK_PLL3_DIVP)
9000be7e:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000be80:	2800      	cmp	r0, #0
9000be82:	f43f af33 	beq.w	9000bcec <HAL_RCCEx_PeriphCLKConfig+0x62c>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVP) == RCC_PERIPHCLK_PLL3_DIVP)
9000be86:	4606      	mov	r6, r0
9000be88:	0710      	lsls	r0, r2, #28
9000be8a:	f57f af32 	bpl.w	9000bcf2 <HAL_RCCEx_PeriphCLKConfig+0x632>
    ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
9000be8e:	2100      	movs	r1, #0
9000be90:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000be94:	f7ff fb9a 	bl	9000b5cc <RCCEx_PLL3_Config>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVQ) == RCC_PERIPHCLK_PLL3_DIVQ)
9000be98:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000be9a:	2800      	cmp	r0, #0
9000be9c:	f43f af29 	beq.w	9000bcf2 <HAL_RCCEx_PeriphCLKConfig+0x632>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVQ) == RCC_PERIPHCLK_PLL3_DIVQ)
9000bea0:	06d1      	lsls	r1, r2, #27
9000bea2:	4606      	mov	r6, r0
9000bea4:	f57f af28 	bpl.w	9000bcf8 <HAL_RCCEx_PeriphCLKConfig+0x638>
    ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000bea8:	f104 0528 	add.w	r5, r4, #40	; 0x28
9000beac:	2101      	movs	r1, #1
9000beae:	4628      	mov	r0, r5
9000beb0:	f7ff fb8c 	bl	9000b5cc <RCCEx_PLL3_Config>
    if (ret == HAL_OK)
9000beb4:	2800      	cmp	r0, #0
9000beb6:	f000 80c9 	beq.w	9000c04c <HAL_RCCEx_PeriphCLKConfig+0x98c>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
9000beba:	6863      	ldr	r3, [r4, #4]
9000bebc:	069b      	lsls	r3, r3, #26
9000bebe:	d54c      	bpl.n	9000bf5a <HAL_RCCEx_PeriphCLKConfig+0x89a>
9000bec0:	4606      	mov	r6, r0
9000bec2:	e043      	b.n	9000bf4c <HAL_RCCEx_PeriphCLKConfig+0x88c>
    SET_BIT(PWR->CR1, PWR_CR1_DBP);
9000bec4:	4f6f      	ldr	r7, [pc, #444]	; (9000c084 <HAL_RCCEx_PeriphCLKConfig+0x9c4>)
9000bec6:	683b      	ldr	r3, [r7, #0]
9000bec8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
9000becc:	603b      	str	r3, [r7, #0]
    tickstart = HAL_GetTick();
9000bece:	f7fb fc4f 	bl	90007770 <HAL_GetTick>
9000bed2:	4680      	mov	r8, r0
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000bed4:	e006      	b.n	9000bee4 <HAL_RCCEx_PeriphCLKConfig+0x824>
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
9000bed6:	f7fb fc4b 	bl	90007770 <HAL_GetTick>
9000beda:	eba0 0008 	sub.w	r0, r0, r8
9000bede:	2864      	cmp	r0, #100	; 0x64
9000bee0:	f200 81a0 	bhi.w	9000c224 <HAL_RCCEx_PeriphCLKConfig+0xb64>
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000bee4:	683b      	ldr	r3, [r7, #0]
9000bee6:	05da      	lsls	r2, r3, #23
9000bee8:	d5f5      	bpl.n	9000bed6 <HAL_RCCEx_PeriphCLKConfig+0x816>
    if (ret == HAL_OK)
9000beea:	2d00      	cmp	r5, #0
9000beec:	f040 81d4 	bne.w	9000c298 <HAL_RCCEx_PeriphCLKConfig+0xbd8>
      if ((RCC->BDCR & RCC_BDCR_RTCSEL) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL))
9000bef0:	4a63      	ldr	r2, [pc, #396]	; (9000c080 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000bef2:	f8d4 30b4 	ldr.w	r3, [r4, #180]	; 0xb4
9000bef6:	6f11      	ldr	r1, [r2, #112]	; 0x70
9000bef8:	4059      	eors	r1, r3
9000befa:	f411 7f40 	tst.w	r1, #768	; 0x300
9000befe:	d00b      	beq.n	9000bf18 <HAL_RCCEx_PeriphCLKConfig+0x858>
        tmpreg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
9000bf00:	6f11      	ldr	r1, [r2, #112]	; 0x70
        __HAL_RCC_BACKUPRESET_FORCE();
9000bf02:	6f10      	ldr	r0, [r2, #112]	; 0x70
        tmpreg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
9000bf04:	f421 7140 	bic.w	r1, r1, #768	; 0x300
        __HAL_RCC_BACKUPRESET_FORCE();
9000bf08:	f440 3080 	orr.w	r0, r0, #65536	; 0x10000
9000bf0c:	6710      	str	r0, [r2, #112]	; 0x70
        __HAL_RCC_BACKUPRESET_RELEASE();
9000bf0e:	6f10      	ldr	r0, [r2, #112]	; 0x70
9000bf10:	f420 3080 	bic.w	r0, r0, #65536	; 0x10000
9000bf14:	6710      	str	r0, [r2, #112]	; 0x70
        RCC->BDCR = tmpreg;
9000bf16:	6711      	str	r1, [r2, #112]	; 0x70
      if (PeriphClkInit->RTCClockSelection == RCC_RTCCLKSOURCE_LSE)
9000bf18:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
9000bf1c:	f000 819e 	beq.w	9000c25c <HAL_RCCEx_PeriphCLKConfig+0xb9c>
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
9000bf20:	f403 7240 	and.w	r2, r3, #768	; 0x300
9000bf24:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
9000bf28:	f000 81ac 	beq.w	9000c284 <HAL_RCCEx_PeriphCLKConfig+0xbc4>
9000bf2c:	4954      	ldr	r1, [pc, #336]	; (9000c080 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000bf2e:	690a      	ldr	r2, [r1, #16]
9000bf30:	f422 527c 	bic.w	r2, r2, #16128	; 0x3f00
9000bf34:	610a      	str	r2, [r1, #16]
9000bf36:	4852      	ldr	r0, [pc, #328]	; (9000c080 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000bf38:	f3c3 010b 	ubfx	r1, r3, #0, #12
9000bf3c:	6f07      	ldr	r7, [r0, #112]	; 0x70
9000bf3e:	4339      	orrs	r1, r7
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000bf40:	e9d4 3200 	ldrd	r3, r2, [r4]
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
9000bf44:	6701      	str	r1, [r0, #112]	; 0x70
9000bf46:	e553      	b.n	9000b9f0 <HAL_RCCEx_PeriphCLKConfig+0x330>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000bf48:	f104 0528 	add.w	r5, r4, #40	; 0x28
    ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000bf4c:	2102      	movs	r1, #2
9000bf4e:	4628      	mov	r0, r5
9000bf50:	f7ff fb3c 	bl	9000b5cc <RCCEx_PLL3_Config>
    if (ret == HAL_OK)
9000bf54:	2800      	cmp	r0, #0
9000bf56:	f43f aed2 	beq.w	9000bcfe <HAL_RCCEx_PeriphCLKConfig+0x63e>
  return HAL_ERROR;
9000bf5a:	2001      	movs	r0, #1
}
9000bf5c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
9000bf60:	462e      	mov	r6, r5
9000bf62:	e450      	b.n	9000b806 <HAL_RCCEx_PeriphCLKConfig+0x146>
9000bf64:	462e      	mov	r6, r5
9000bf66:	e406      	b.n	9000b776 <HAL_RCCEx_PeriphCLKConfig+0xb6>
9000bf68:	462e      	mov	r6, r5
9000bf6a:	e489      	b.n	9000b880 <HAL_RCCEx_PeriphCLKConfig+0x1c0>
9000bf6c:	462e      	mov	r6, r5
9000bf6e:	f7ff bbe2 	b.w	9000b736 <HAL_RCCEx_PeriphCLKConfig+0x76>
9000bf72:	462e      	mov	r6, r5
9000bf74:	e423      	b.n	9000b7be <HAL_RCCEx_PeriphCLKConfig+0xfe>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
9000bf76:	2102      	movs	r1, #2
9000bf78:	f104 0008 	add.w	r0, r4, #8
9000bf7c:	f7ff faac 	bl	9000b4d8 <RCCEx_PLL2_Config>
9000bf80:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
9000bf82:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bf86:	2d00      	cmp	r5, #0
9000bf88:	d14c      	bne.n	9000c024 <HAL_RCCEx_PeriphCLKConfig+0x964>
      __HAL_RCC_SDMMC_CONFIG(PeriphClkInit->SdmmcClockSelection);
9000bf8a:	4f3d      	ldr	r7, [pc, #244]	; (9000c080 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000bf8c:	6d20      	ldr	r0, [r4, #80]	; 0x50
9000bf8e:	6cf9      	ldr	r1, [r7, #76]	; 0x4c
9000bf90:	f421 3180 	bic.w	r1, r1, #65536	; 0x10000
9000bf94:	4301      	orrs	r1, r0
9000bf96:	64f9      	str	r1, [r7, #76]	; 0x4c
9000bf98:	e652      	b.n	9000bc40 <HAL_RCCEx_PeriphCLKConfig+0x580>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000bf9a:	4839      	ldr	r0, [pc, #228]	; (9000c080 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000bf9c:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000bf9e:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000bfa2:	62c1      	str	r1, [r0, #44]	; 0x2c
        break;
9000bfa4:	e462      	b.n	9000b86c <HAL_RCCEx_PeriphCLKConfig+0x1ac>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000bfa6:	4836      	ldr	r0, [pc, #216]	; (9000c080 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000bfa8:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000bfaa:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000bfae:	62c1      	str	r1, [r0, #44]	; 0x2c
        break;
9000bfb0:	e41e      	b.n	9000b7f0 <HAL_RCCEx_PeriphCLKConfig+0x130>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000bfb2:	4833      	ldr	r0, [pc, #204]	; (9000c080 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000bfb4:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000bfb6:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000bfba:	62c1      	str	r1, [r0, #44]	; 0x2c
        break;
9000bfbc:	f7ff bbd1 	b.w	9000b762 <HAL_RCCEx_PeriphCLKConfig+0xa2>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000bfc0:	482f      	ldr	r0, [pc, #188]	; (9000c080 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000bfc2:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000bfc4:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000bfc8:	62c1      	str	r1, [r0, #44]	; 0x2c
        break;
9000bfca:	f7ff bbed 	b.w	9000b7a8 <HAL_RCCEx_PeriphCLKConfig+0xe8>
9000bfce:	462e      	mov	r6, r5
9000bfd0:	e540      	b.n	9000ba54 <HAL_RCCEx_PeriphCLKConfig+0x394>
9000bfd2:	462e      	mov	r6, r5
9000bfd4:	e5a5      	b.n	9000bb22 <HAL_RCCEx_PeriphCLKConfig+0x462>
9000bfd6:	462e      	mov	r6, r5
9000bfd8:	e4a2      	b.n	9000b920 <HAL_RCCEx_PeriphCLKConfig+0x260>
9000bfda:	462e      	mov	r6, r5
9000bfdc:	e57f      	b.n	9000bade <HAL_RCCEx_PeriphCLKConfig+0x41e>
9000bfde:	462e      	mov	r6, r5
9000bfe0:	e42c      	b.n	9000b83c <HAL_RCCEx_PeriphCLKConfig+0x17c>
9000bfe2:	462e      	mov	r6, r5
9000bfe4:	e501      	b.n	9000b9ea <HAL_RCCEx_PeriphCLKConfig+0x32a>
9000bfe6:	462e      	mov	r6, r5
9000bfe8:	e46a      	b.n	9000b8c0 <HAL_RCCEx_PeriphCLKConfig+0x200>
9000bfea:	462e      	mov	r6, r5
9000bfec:	e5dd      	b.n	9000bbaa <HAL_RCCEx_PeriphCLKConfig+0x4ea>
9000bfee:	462e      	mov	r6, r5
9000bff0:	e486      	b.n	9000b900 <HAL_RCCEx_PeriphCLKConfig+0x240>
9000bff2:	462e      	mov	r6, r5
9000bff4:	e5b7      	b.n	9000bb66 <HAL_RCCEx_PeriphCLKConfig+0x4a6>
9000bff6:	462e      	mov	r6, r5
9000bff8:	e54c      	b.n	9000ba94 <HAL_RCCEx_PeriphCLKConfig+0x3d4>
9000bffa:	462e      	mov	r6, r5
9000bffc:	e602      	b.n	9000bc04 <HAL_RCCEx_PeriphCLKConfig+0x544>
9000bffe:	462e      	mov	r6, r5
9000c000:	e612      	b.n	9000bc28 <HAL_RCCEx_PeriphCLKConfig+0x568>
9000c002:	462e      	mov	r6, r5
9000c004:	e62e      	b.n	9000bc64 <HAL_RCCEx_PeriphCLKConfig+0x5a4>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000c006:	4f1e      	ldr	r7, [pc, #120]	; (9000c080 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000c008:	6af8      	ldr	r0, [r7, #44]	; 0x2c
9000c00a:	f440 3000 	orr.w	r0, r0, #131072	; 0x20000
9000c00e:	62f8      	str	r0, [r7, #44]	; 0x2c
    if (ret == HAL_OK)
9000c010:	2d00      	cmp	r5, #0
9000c012:	d1f6      	bne.n	9000c002 <HAL_RCCEx_PeriphCLKConfig+0x942>
9000c014:	e6a4      	b.n	9000bd60 <HAL_RCCEx_PeriphCLKConfig+0x6a0>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000c016:	481a      	ldr	r0, [pc, #104]	; (9000c080 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000c018:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000c01a:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000c01e:	62c1      	str	r1, [r0, #44]	; 0x2c
    if (ret == HAL_OK)
9000c020:	2d00      	cmp	r5, #0
9000c022:	d0b2      	beq.n	9000bf8a <HAL_RCCEx_PeriphCLKConfig+0x8ca>
9000c024:	462e      	mov	r6, r5
9000c026:	e60b      	b.n	9000bc40 <HAL_RCCEx_PeriphCLKConfig+0x580>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000c028:	4815      	ldr	r0, [pc, #84]	; (9000c080 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000c02a:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000c02c:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000c030:	62c1      	str	r1, [r0, #44]	; 0x2c
    if (ret == HAL_OK)
9000c032:	2d00      	cmp	r5, #0
9000c034:	d1e3      	bne.n	9000bffe <HAL_RCCEx_PeriphCLKConfig+0x93e>
9000c036:	e6c7      	b.n	9000bdc8 <HAL_RCCEx_PeriphCLKConfig+0x708>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000c038:	f104 0008 	add.w	r0, r4, #8
9000c03c:	f7ff fa4c 	bl	9000b4d8 <RCCEx_PLL2_Config>
9000c040:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
9000c042:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c046:	2d00      	cmp	r5, #0
9000c048:	d1d7      	bne.n	9000bffa <HAL_RCCEx_PeriphCLKConfig+0x93a>
9000c04a:	e6d1      	b.n	9000bdf0 <HAL_RCCEx_PeriphCLKConfig+0x730>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
9000c04c:	6862      	ldr	r2, [r4, #4]
9000c04e:	e653      	b.n	9000bcf8 <HAL_RCCEx_PeriphCLKConfig+0x638>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
9000c050:	2102      	movs	r1, #2
9000c052:	f104 0008 	add.w	r0, r4, #8
9000c056:	f7ff fa3f 	bl	9000b4d8 <RCCEx_PLL2_Config>
9000c05a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI123) == RCC_PERIPHCLK_SPI123)
9000c05c:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c060:	2d00      	cmp	r5, #0
9000c062:	d1bc      	bne.n	9000bfde <HAL_RCCEx_PeriphCLKConfig+0x91e>
9000c064:	f7ff bbe3 	b.w	9000b82e <HAL_RCCEx_PeriphCLKConfig+0x16e>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000c068:	2102      	movs	r1, #2
9000c06a:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000c06e:	f7ff faad 	bl	9000b5cc <RCCEx_PLL3_Config>
9000c072:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
9000c074:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c078:	2d00      	cmp	r5, #0
9000c07a:	d1ba      	bne.n	9000bff2 <HAL_RCCEx_PeriphCLKConfig+0x932>
9000c07c:	e56b      	b.n	9000bb56 <HAL_RCCEx_PeriphCLKConfig+0x496>
9000c07e:	bf00      	nop
9000c080:	58024400 	.word	0x58024400
9000c084:	58024800 	.word	0x58024800
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000c088:	2102      	movs	r1, #2
9000c08a:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000c08e:	f7ff fa9d 	bl	9000b5cc <RCCEx_PLL3_Config>
9000c092:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
9000c094:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c098:	2d00      	cmp	r5, #0
9000c09a:	d1a6      	bne.n	9000bfea <HAL_RCCEx_PeriphCLKConfig+0x92a>
9000c09c:	e57d      	b.n	9000bb9a <HAL_RCCEx_PeriphCLKConfig+0x4da>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000c09e:	4886      	ldr	r0, [pc, #536]	; (9000c2b8 <HAL_RCCEx_PeriphCLKConfig+0xbf8>)
9000c0a0:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000c0a2:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000c0a6:	62c1      	str	r1, [r0, #44]	; 0x2c
    if (ret == HAL_OK)
9000c0a8:	2d00      	cmp	r5, #0
9000c0aa:	d194      	bne.n	9000bfd6 <HAL_RCCEx_PeriphCLKConfig+0x916>
9000c0ac:	e679      	b.n	9000bda2 <HAL_RCCEx_PeriphCLKConfig+0x6e2>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000c0ae:	2101      	movs	r1, #1
9000c0b0:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000c0b4:	f7ff fa8a 	bl	9000b5cc <RCCEx_PLL3_Config>
9000c0b8:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
9000c0ba:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c0be:	2d00      	cmp	r5, #0
9000c0c0:	d191      	bne.n	9000bfe6 <HAL_RCCEx_PeriphCLKConfig+0x926>
9000c0c2:	f7ff bbf6 	b.w	9000b8b2 <HAL_RCCEx_PeriphCLKConfig+0x1f2>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000c0c6:	2101      	movs	r1, #1
9000c0c8:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000c0cc:	f7ff fa7e 	bl	9000b5cc <RCCEx_PLL3_Config>
9000c0d0:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
9000c0d2:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c0d6:	2d00      	cmp	r5, #0
9000c0d8:	d189      	bne.n	9000bfee <HAL_RCCEx_PeriphCLKConfig+0x92e>
9000c0da:	e409      	b.n	9000b8f0 <HAL_RCCEx_PeriphCLKConfig+0x230>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000c0dc:	2102      	movs	r1, #2
9000c0de:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000c0e2:	f7ff fa73 	bl	9000b5cc <RCCEx_PLL3_Config>
9000c0e6:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
9000c0e8:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c0ec:	2d00      	cmp	r5, #0
9000c0ee:	f47f af70 	bne.w	9000bfd2 <HAL_RCCEx_PeriphCLKConfig+0x912>
9000c0f2:	e50e      	b.n	9000bb12 <HAL_RCCEx_PeriphCLKConfig+0x452>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
9000c0f4:	2102      	movs	r1, #2
9000c0f6:	f104 0008 	add.w	r0, r4, #8
9000c0fa:	f7ff f9ed 	bl	9000b4d8 <RCCEx_PLL2_Config>
9000c0fe:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
9000c100:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c104:	2d00      	cmp	r5, #0
9000c106:	f47f af6c 	bne.w	9000bfe2 <HAL_RCCEx_PeriphCLKConfig+0x922>
9000c10a:	e467      	b.n	9000b9dc <HAL_RCCEx_PeriphCLKConfig+0x31c>
      if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000c10c:	2102      	movs	r1, #2
9000c10e:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000c112:	f7ff fa5b 	bl	9000b5cc <RCCEx_PLL3_Config>
9000c116:	2800      	cmp	r0, #0
9000c118:	f040 8094 	bne.w	9000c244 <HAL_RCCEx_PeriphCLKConfig+0xb84>
    __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
9000c11c:	f8d4 0084 	ldr.w	r0, [r4, #132]	; 0x84
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
9000c120:	e9d4 3200 	ldrd	r3, r2, [r4]
9000c124:	e549      	b.n	9000bbba <HAL_RCCEx_PeriphCLKConfig+0x4fa>
      if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000c126:	2102      	movs	r1, #2
9000c128:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000c12c:	f7ff fa4e 	bl	9000b5cc <RCCEx_PLL3_Config>
9000c130:	2800      	cmp	r0, #0
9000c132:	f040 808d 	bne.w	9000c250 <HAL_RCCEx_PeriphCLKConfig+0xb90>
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
9000c136:	f8d4 0098 	ldr.w	r0, [r4, #152]	; 0x98
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
9000c13a:	e9d4 3200 	ldrd	r3, r2, [r4]
9000c13e:	e54a      	b.n	9000bbd6 <HAL_RCCEx_PeriphCLKConfig+0x516>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
9000c140:	e9d4 3200 	ldrd	r3, r2, [r4]
9000c144:	f7ff bae9 	b.w	9000b71a <HAL_RCCEx_PeriphCLKConfig+0x5a>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
9000c148:	2100      	movs	r1, #0
9000c14a:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000c14e:	f7ff fa3d 	bl	9000b5cc <RCCEx_PLL3_Config>
9000c152:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
9000c154:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000c158:	f7ff bb4a 	b.w	9000b7f0 <HAL_RCCEx_PeriphCLKConfig+0x130>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
9000c15c:	2100      	movs	r1, #0
9000c15e:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000c162:	f7ff fa33 	bl	9000b5cc <RCCEx_PLL3_Config>
9000c166:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
9000c168:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000c16c:	e600      	b.n	9000bd70 <HAL_RCCEx_PeriphCLKConfig+0x6b0>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
9000c16e:	2100      	movs	r1, #0
9000c170:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000c174:	f7ff fa2a 	bl	9000b5cc <RCCEx_PLL3_Config>
9000c178:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
9000c17a:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000c17e:	f7ff baf0 	b.w	9000b762 <HAL_RCCEx_PeriphCLKConfig+0xa2>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000c182:	2102      	movs	r1, #2
9000c184:	3028      	adds	r0, #40	; 0x28
9000c186:	f7ff fa21 	bl	9000b5cc <RCCEx_PLL3_Config>
9000c18a:	4606      	mov	r6, r0
    if (ret == HAL_OK)
9000c18c:	2e00      	cmp	r6, #0
9000c18e:	f43f aab5 	beq.w	9000b6fc <HAL_RCCEx_PeriphCLKConfig+0x3c>
9000c192:	e7d5      	b.n	9000c140 <HAL_RCCEx_PeriphCLKConfig+0xa80>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000c194:	4848      	ldr	r0, [pc, #288]	; (9000c2b8 <HAL_RCCEx_PeriphCLKConfig+0xbf8>)
        break;
9000c196:	4635      	mov	r5, r6
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000c198:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000c19a:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000c19e:	62c1      	str	r1, [r0, #44]	; 0x2c
        break;
9000c1a0:	e5e6      	b.n	9000bd70 <HAL_RCCEx_PeriphCLKConfig+0x6b0>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000c1a2:	2100      	movs	r1, #0
9000c1a4:	f104 0008 	add.w	r0, r4, #8
9000c1a8:	f7ff f996 	bl	9000b4d8 <RCCEx_PLL2_Config>
9000c1ac:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
9000c1ae:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000c1b2:	e5dd      	b.n	9000bd70 <HAL_RCCEx_PeriphCLKConfig+0x6b0>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
9000c1b4:	2100      	movs	r1, #0
9000c1b6:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000c1ba:	f7ff fa07 	bl	9000b5cc <RCCEx_PLL3_Config>
9000c1be:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
9000c1c0:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000c1c4:	f7ff bb52 	b.w	9000b86c <HAL_RCCEx_PeriphCLKConfig+0x1ac>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
9000c1c8:	2100      	movs	r1, #0
9000c1ca:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000c1ce:	f7ff f9fd 	bl	9000b5cc <RCCEx_PLL3_Config>
9000c1d2:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
9000c1d4:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000c1d8:	f7ff bae6 	b.w	9000b7a8 <HAL_RCCEx_PeriphCLKConfig+0xe8>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000c1dc:	2101      	movs	r1, #1
9000c1de:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000c1e2:	f7ff f9f3 	bl	9000b5cc <RCCEx_PLL3_Config>
9000c1e6:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
9000c1e8:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c1ec:	2d00      	cmp	r5, #0
9000c1ee:	f47f aef4 	bne.w	9000bfda <HAL_RCCEx_PeriphCLKConfig+0x91a>
9000c1f2:	e46c      	b.n	9000bace <HAL_RCCEx_PeriphCLKConfig+0x40e>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000c1f4:	2101      	movs	r1, #1
9000c1f6:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000c1fa:	f7ff f9e7 	bl	9000b5cc <RCCEx_PLL3_Config>
9000c1fe:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
9000c200:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c204:	2d00      	cmp	r5, #0
9000c206:	f47f aef6 	bne.w	9000bff6 <HAL_RCCEx_PeriphCLKConfig+0x936>
9000c20a:	e43c      	b.n	9000ba86 <HAL_RCCEx_PeriphCLKConfig+0x3c6>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000c20c:	2101      	movs	r1, #1
9000c20e:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000c212:	f7ff f9db 	bl	9000b5cc <RCCEx_PLL3_Config>
9000c216:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
9000c218:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c21c:	2d00      	cmp	r5, #0
9000c21e:	f47f aed6 	bne.w	9000bfce <HAL_RCCEx_PeriphCLKConfig+0x90e>
9000c222:	e5f9      	b.n	9000be18 <HAL_RCCEx_PeriphCLKConfig+0x758>
        status = ret;
9000c224:	2603      	movs	r6, #3
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000c226:	e9d4 3200 	ldrd	r3, r2, [r4]
9000c22a:	4635      	mov	r5, r6
9000c22c:	f7ff bbe0 	b.w	9000b9f0 <HAL_RCCEx_PeriphCLKConfig+0x330>
    switch (PeriphClkInit->SpdifrxClockSelection)
9000c230:	2601      	movs	r6, #1
9000c232:	f7ff ba72 	b.w	9000b71a <HAL_RCCEx_PeriphCLKConfig+0x5a>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000c236:	4d20      	ldr	r5, [pc, #128]	; (9000c2b8 <HAL_RCCEx_PeriphCLKConfig+0xbf8>)
9000c238:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
9000c23a:	f440 3000 	orr.w	r0, r0, #131072	; 0x20000
9000c23e:	62e8      	str	r0, [r5, #44]	; 0x2c
    if (ret == HAL_OK)
9000c240:	f7ff ba64 	b.w	9000b70c <HAL_RCCEx_PeriphCLKConfig+0x4c>
    __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
9000c244:	f8d4 0084 	ldr.w	r0, [r4, #132]	; 0x84
        status = HAL_ERROR;
9000c248:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
9000c24a:	e9d4 3200 	ldrd	r3, r2, [r4]
9000c24e:	e4b4      	b.n	9000bbba <HAL_RCCEx_PeriphCLKConfig+0x4fa>
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
9000c250:	f8d4 0098 	ldr.w	r0, [r4, #152]	; 0x98
        status = HAL_ERROR;
9000c254:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
9000c256:	e9d4 3200 	ldrd	r3, r2, [r4]
9000c25a:	e4bc      	b.n	9000bbd6 <HAL_RCCEx_PeriphCLKConfig+0x516>
        tickstart = HAL_GetTick();
9000c25c:	f7fb fa88 	bl	90007770 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000c260:	f8df 8054 	ldr.w	r8, [pc, #84]	; 9000c2b8 <HAL_RCCEx_PeriphCLKConfig+0xbf8>
        tickstart = HAL_GetTick();
9000c264:	4607      	mov	r7, r0
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000c266:	f241 3988 	movw	r9, #5000	; 0x1388
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000c26a:	e004      	b.n	9000c276 <HAL_RCCEx_PeriphCLKConfig+0xbb6>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000c26c:	f7fb fa80 	bl	90007770 <HAL_GetTick>
9000c270:	1bc0      	subs	r0, r0, r7
9000c272:	4548      	cmp	r0, r9
9000c274:	d8d6      	bhi.n	9000c224 <HAL_RCCEx_PeriphCLKConfig+0xb64>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000c276:	f8d8 3070 	ldr.w	r3, [r8, #112]	; 0x70
9000c27a:	079b      	lsls	r3, r3, #30
9000c27c:	d5f6      	bpl.n	9000c26c <HAL_RCCEx_PeriphCLKConfig+0xbac>
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
9000c27e:	f8d4 30b4 	ldr.w	r3, [r4, #180]	; 0xb4
9000c282:	e64d      	b.n	9000bf20 <HAL_RCCEx_PeriphCLKConfig+0x860>
9000c284:	480c      	ldr	r0, [pc, #48]	; (9000c2b8 <HAL_RCCEx_PeriphCLKConfig+0xbf8>)
9000c286:	4a0d      	ldr	r2, [pc, #52]	; (9000c2bc <HAL_RCCEx_PeriphCLKConfig+0xbfc>)
9000c288:	6901      	ldr	r1, [r0, #16]
9000c28a:	ea02 1213 	and.w	r2, r2, r3, lsr #4
9000c28e:	f421 517c 	bic.w	r1, r1, #16128	; 0x3f00
9000c292:	430a      	orrs	r2, r1
9000c294:	6102      	str	r2, [r0, #16]
9000c296:	e64e      	b.n	9000bf36 <HAL_RCCEx_PeriphCLKConfig+0x876>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000c298:	e9d4 3200 	ldrd	r3, r2, [r4]
9000c29c:	462e      	mov	r6, r5
9000c29e:	f7ff bba7 	b.w	9000b9f0 <HAL_RCCEx_PeriphCLKConfig+0x330>
    switch (PeriphClkInit->Usart234578ClockSelection)
9000c2a2:	2601      	movs	r6, #1
9000c2a4:	4635      	mov	r5, r6
9000c2a6:	f7ff bbf5 	b.w	9000ba94 <HAL_RCCEx_PeriphCLKConfig+0x3d4>
    switch (PeriphClkInit->FmcClockSelection)
9000c2aa:	2601      	movs	r6, #1
9000c2ac:	4635      	mov	r5, r6
9000c2ae:	f7ff bb9c 	b.w	9000b9ea <HAL_RCCEx_PeriphCLKConfig+0x32a>
    switch (PeriphClkInit->Lpuart1ClockSelection)
9000c2b2:	2601      	movs	r6, #1
9000c2b4:	4635      	mov	r5, r6
9000c2b6:	e412      	b.n	9000bade <HAL_RCCEx_PeriphCLKConfig+0x41e>
9000c2b8:	58024400 	.word	0x58024400
9000c2bc:	00ffffcf 	.word	0x00ffffcf

9000c2c0 <HAL_SDRAM_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
9000c2c0:	b318      	cbz	r0, 9000c30a <HAL_SDRAM_Init+0x4a>
{
9000c2c2:	b538      	push	{r3, r4, r5, lr}
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
9000c2c4:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
9000c2c8:	4604      	mov	r4, r0
9000c2ca:	460d      	mov	r5, r1
9000c2cc:	f003 02ff 	and.w	r2, r3, #255	; 0xff
9000c2d0:	b1b3      	cbz	r3, 9000c300 <HAL_SDRAM_Init+0x40>

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
9000c2d2:	4621      	mov	r1, r4
  hsdram->State = HAL_SDRAM_STATE_BUSY;
9000c2d4:	2302      	movs	r3, #2
9000c2d6:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
9000c2da:	f851 0b04 	ldr.w	r0, [r1], #4
9000c2de:	f000 fa39 	bl	9000c754 <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
9000c2e2:	6862      	ldr	r2, [r4, #4]
9000c2e4:	4629      	mov	r1, r5
9000c2e6:	6820      	ldr	r0, [r4, #0]
9000c2e8:	f000 fa72 	bl	9000c7d0 <FMC_SDRAM_Timing_Init>

  /* Enable FMC Peripheral */
  __FMC_ENABLE();
9000c2ec:	4a08      	ldr	r2, [pc, #32]	; (9000c310 <HAL_SDRAM_Init+0x50>)
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
9000c2ee:	2101      	movs	r1, #1

  return HAL_OK;
9000c2f0:	2000      	movs	r0, #0
  __FMC_ENABLE();
9000c2f2:	6813      	ldr	r3, [r2, #0]
9000c2f4:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
9000c2f8:	6013      	str	r3, [r2, #0]
  hsdram->State = HAL_SDRAM_STATE_READY;
9000c2fa:	f884 102c 	strb.w	r1, [r4, #44]	; 0x2c
}
9000c2fe:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->Lock = HAL_UNLOCKED;
9000c300:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d
    HAL_SDRAM_MspInit(hsdram);
9000c304:	f7f7 f8f0 	bl	900034e8 <HAL_SDRAM_MspInit>
9000c308:	e7e3      	b.n	9000c2d2 <HAL_SDRAM_Init+0x12>
    return HAL_ERROR;
9000c30a:	2001      	movs	r0, #1
}
9000c30c:	4770      	bx	lr
9000c30e:	bf00      	nop
9000c310:	52004000 	.word	0x52004000

9000c314 <HAL_SDRAM_DeInit>:
  * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
  *                the configuration information for SDRAM module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_DeInit(SDRAM_HandleTypeDef *hsdram)
{
9000c314:	b510      	push	{r4, lr}
9000c316:	4604      	mov	r4, r0

  /* DeInit the low level hardware */
  hsdram->MspDeInitCallback(hsdram);
#else
  /* Initialize the low level hardware (MSP) */
  HAL_SDRAM_MspDeInit(hsdram);
9000c318:	f7f7 f962 	bl	900035e0 <HAL_SDRAM_MspDeInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */

  /* Configure the SDRAM registers with their reset values */
  (void)FMC_SDRAM_DeInit(hsdram->Instance, hsdram->Init.SDBank);
9000c31c:	e9d4 0100 	ldrd	r0, r1, [r4]
9000c320:	f000 faa4 	bl	9000c86c <FMC_SDRAM_DeInit>

  /* Reset the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_RESET;
9000c324:	2000      	movs	r0, #0
9000c326:	f884 002c 	strb.w	r0, [r4, #44]	; 0x2c

  /* Release Lock */
  __HAL_UNLOCK(hsdram);
9000c32a:	f884 002d 	strb.w	r0, [r4, #45]	; 0x2d

  return HAL_OK;
}
9000c32e:	bd10      	pop	{r4, pc}

9000c330 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
9000c330:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
9000c332:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
{
9000c336:	4604      	mov	r4, r0

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
9000c338:	2b02      	cmp	r3, #2
  HAL_SDRAM_StateTypeDef state = hsdram->State;
9000c33a:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
9000c33c:	d004      	beq.n	9000c348 <HAL_SDRAM_SendCommand+0x18>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
9000c33e:	f000 06fb 	and.w	r6, r0, #251	; 0xfb
9000c342:	2e01      	cmp	r6, #1
9000c344:	d001      	beq.n	9000c34a <HAL_SDRAM_SendCommand+0x1a>
      hsdram->State = HAL_SDRAM_STATE_READY;
    }
  }
  else
  {
    return HAL_ERROR;
9000c346:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
9000c348:	bd70      	pop	{r4, r5, r6, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000c34a:	2302      	movs	r3, #2
9000c34c:	460d      	mov	r5, r1
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
9000c34e:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000c350:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
9000c354:	f000 fa9e 	bl	9000c894 <FMC_SDRAM_SendCommand>
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
9000c358:	682b      	ldr	r3, [r5, #0]
9000c35a:	2b02      	cmp	r3, #2
9000c35c:	d003      	beq.n	9000c366 <HAL_SDRAM_SendCommand+0x36>
  return HAL_OK;
9000c35e:	2000      	movs	r0, #0
      hsdram->State = HAL_SDRAM_STATE_READY;
9000c360:	f884 602c 	strb.w	r6, [r4, #44]	; 0x2c
}
9000c364:	bd70      	pop	{r4, r5, r6, pc}
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
9000c366:	2305      	movs	r3, #5
  return HAL_OK;
9000c368:	2000      	movs	r0, #0
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
9000c36a:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
}
9000c36e:	bd70      	pop	{r4, r5, r6, pc}

9000c370 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
9000c370:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
9000c372:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
{
9000c376:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
9000c378:	2b02      	cmp	r3, #2
9000c37a:	b2d8      	uxtb	r0, r3
9000c37c:	d005      	beq.n	9000c38a <HAL_SDRAM_ProgramRefreshRate+0x1a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
9000c37e:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
9000c382:	2b01      	cmp	r3, #1
9000c384:	b2dd      	uxtb	r5, r3
9000c386:	d001      	beq.n	9000c38c <HAL_SDRAM_ProgramRefreshRate+0x1c>
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
  }
  else
  {
    return HAL_ERROR;
9000c388:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
9000c38a:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000c38c:	2302      	movs	r3, #2
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
9000c38e:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000c390:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
9000c394:	f000 fa96 	bl	9000c8c4 <FMC_SDRAM_ProgramRefreshRate>
  return HAL_OK;
9000c398:	2000      	movs	r0, #0
    hsdram->State = HAL_SDRAM_STATE_READY;
9000c39a:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
}
9000c39e:	bd38      	pop	{r3, r4, r5, pc}

9000c3a0 <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
9000c3a0:	4770      	bx	lr
9000c3a2:	bf00      	nop

9000c3a4 <HAL_TIM_Base_Init>:
  if (htim == NULL)
9000c3a4:	2800      	cmp	r0, #0
9000c3a6:	f000 80a5 	beq.w	9000c4f4 <HAL_TIM_Base_Init+0x150>
{
9000c3aa:	b538      	push	{r3, r4, r5, lr}
  if (htim->State == HAL_TIM_STATE_RESET)
9000c3ac:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
9000c3b0:	4604      	mov	r4, r0
9000c3b2:	f003 02ff 	and.w	r2, r3, #255	; 0xff
9000c3b6:	2b00      	cmp	r3, #0
9000c3b8:	d076      	beq.n	9000c4a8 <HAL_TIM_Base_Init+0x104>
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
9000c3ba:	6822      	ldr	r2, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
9000c3bc:	2302      	movs	r3, #2
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000c3be:	494e      	ldr	r1, [pc, #312]	; (9000c4f8 <HAL_TIM_Base_Init+0x154>)
9000c3c0:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
  htim->State = HAL_TIM_STATE_BUSY;
9000c3c4:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000c3c8:	eba2 0101 	sub.w	r1, r2, r1
  tmpcr1 = TIMx->CR1;
9000c3cc:	6813      	ldr	r3, [r2, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000c3ce:	fab1 f181 	clz	r1, r1
9000c3d2:	ea4f 1151 	mov.w	r1, r1, lsr #5
9000c3d6:	d027      	beq.n	9000c428 <HAL_TIM_Base_Init+0x84>
9000c3d8:	bb31      	cbnz	r1, 9000c428 <HAL_TIM_Base_Init+0x84>
9000c3da:	4848      	ldr	r0, [pc, #288]	; (9000c4fc <HAL_TIM_Base_Init+0x158>)
9000c3dc:	4d48      	ldr	r5, [pc, #288]	; (9000c500 <HAL_TIM_Base_Init+0x15c>)
9000c3de:	4282      	cmp	r2, r0
9000c3e0:	d067      	beq.n	9000c4b2 <HAL_TIM_Base_Init+0x10e>
9000c3e2:	f500 6080 	add.w	r0, r0, #1024	; 0x400
9000c3e6:	4282      	cmp	r2, r0
9000c3e8:	d063      	beq.n	9000c4b2 <HAL_TIM_Base_Init+0x10e>
9000c3ea:	1b55      	subs	r5, r2, r5
9000c3ec:	f500 6080 	add.w	r0, r0, #1024	; 0x400
9000c3f0:	fab5 f585 	clz	r5, r5
9000c3f4:	4282      	cmp	r2, r0
9000c3f6:	ea4f 1555 	mov.w	r5, r5, lsr #5
9000c3fa:	d063      	beq.n	9000c4c4 <HAL_TIM_Base_Init+0x120>
9000c3fc:	2d00      	cmp	r5, #0
9000c3fe:	d161      	bne.n	9000c4c4 <HAL_TIM_Base_Init+0x120>
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
9000c400:	4840      	ldr	r0, [pc, #256]	; (9000c504 <HAL_TIM_Base_Init+0x160>)
9000c402:	4941      	ldr	r1, [pc, #260]	; (9000c508 <HAL_TIM_Base_Init+0x164>)
9000c404:	428a      	cmp	r2, r1
9000c406:	bf18      	it	ne
9000c408:	4282      	cmpne	r2, r0
9000c40a:	d065      	beq.n	9000c4d8 <HAL_TIM_Base_Init+0x134>
9000c40c:	f501 6180 	add.w	r1, r1, #1024	; 0x400
9000c410:	428a      	cmp	r2, r1
9000c412:	d061      	beq.n	9000c4d8 <HAL_TIM_Base_Init+0x134>
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000c414:	69a0      	ldr	r0, [r4, #24]
9000c416:	f023 0380 	bic.w	r3, r3, #128	; 0x80

  TIMx->CR1 = tmpcr1;

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
9000c41a:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000c41c:	4303      	orrs	r3, r0
  TIMx->CR1 = tmpcr1;
9000c41e:	6013      	str	r3, [r2, #0]

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
9000c420:	6863      	ldr	r3, [r4, #4]
  TIMx->ARR = (uint32_t)Structure->Period ;
9000c422:	62d1      	str	r1, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
9000c424:	6293      	str	r3, [r2, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000c426:	e023      	b.n	9000c470 <HAL_TIM_Base_Init+0xcc>
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000c428:	4d35      	ldr	r5, [pc, #212]	; (9000c500 <HAL_TIM_Base_Init+0x15c>)
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
9000c42a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
9000c42e:	68a0      	ldr	r0, [r4, #8]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000c430:	1b55      	subs	r5, r2, r5
    tmpcr1 |= Structure->CounterMode;
9000c432:	4303      	orrs	r3, r0
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000c434:	fab5 f585 	clz	r5, r5
9000c438:	096d      	lsrs	r5, r5, #5
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000c43a:	6920      	ldr	r0, [r4, #16]
    tmpcr1 &= ~TIM_CR1_CKD;
9000c43c:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000c440:	4303      	orrs	r3, r0
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000c442:	69a0      	ldr	r0, [r4, #24]
9000c444:	f023 0380 	bic.w	r3, r3, #128	; 0x80
9000c448:	4303      	orrs	r3, r0
  TIMx->CR1 = tmpcr1;
9000c44a:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
9000c44c:	68e3      	ldr	r3, [r4, #12]
9000c44e:	62d3      	str	r3, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
9000c450:	6863      	ldr	r3, [r4, #4]
9000c452:	6293      	str	r3, [r2, #40]	; 0x28
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000c454:	b951      	cbnz	r1, 9000c46c <HAL_TIM_Base_Init+0xc8>
9000c456:	b94d      	cbnz	r5, 9000c46c <HAL_TIM_Base_Init+0xc8>
9000c458:	492a      	ldr	r1, [pc, #168]	; (9000c504 <HAL_TIM_Base_Init+0x160>)
9000c45a:	4b2b      	ldr	r3, [pc, #172]	; (9000c508 <HAL_TIM_Base_Init+0x164>)
9000c45c:	429a      	cmp	r2, r3
9000c45e:	bf18      	it	ne
9000c460:	428a      	cmpne	r2, r1
9000c462:	d003      	beq.n	9000c46c <HAL_TIM_Base_Init+0xc8>
9000c464:	f503 6380 	add.w	r3, r3, #1024	; 0x400
9000c468:	429a      	cmp	r2, r3
9000c46a:	d101      	bne.n	9000c470 <HAL_TIM_Base_Init+0xcc>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
9000c46c:	6963      	ldr	r3, [r4, #20]
9000c46e:	6313      	str	r3, [r2, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
9000c470:	2301      	movs	r3, #1
  return HAL_OK;
9000c472:	2000      	movs	r0, #0
  TIMx->EGR = TIM_EGR_UG;
9000c474:	6153      	str	r3, [r2, #20]
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
9000c476:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
9000c47a:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
9000c47e:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
9000c482:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
9000c486:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
9000c48a:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
9000c48e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
9000c492:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
9000c496:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
9000c49a:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
9000c49e:	f884 3047 	strb.w	r3, [r4, #71]	; 0x47
  htim->State = HAL_TIM_STATE_READY;
9000c4a2:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
}
9000c4a6:	bd38      	pop	{r3, r4, r5, pc}
    htim->Lock = HAL_UNLOCKED;
9000c4a8:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
9000c4ac:	f7ff ff78 	bl	9000c3a0 <HAL_TIM_Base_MspInit>
9000c4b0:	e783      	b.n	9000c3ba <HAL_TIM_Base_Init+0x16>
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000c4b2:	1b55      	subs	r5, r2, r5
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
9000c4b4:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
9000c4b8:	68a0      	ldr	r0, [r4, #8]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000c4ba:	fab5 f585 	clz	r5, r5
    tmpcr1 |= Structure->CounterMode;
9000c4be:	4303      	orrs	r3, r0
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000c4c0:	096d      	lsrs	r5, r5, #5
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
9000c4c2:	e7ba      	b.n	9000c43a <HAL_TIM_Base_Init+0x96>
    tmpcr1 |= Structure->CounterMode;
9000c4c4:	68a0      	ldr	r0, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
9000c4c6:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
9000c4ca:	4303      	orrs	r3, r0
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000c4cc:	480f      	ldr	r0, [pc, #60]	; (9000c50c <HAL_TIM_Base_Init+0x168>)
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
9000c4ce:	4282      	cmp	r2, r0
9000c4d0:	d0b3      	beq.n	9000c43a <HAL_TIM_Base_Init+0x96>
9000c4d2:	2d00      	cmp	r5, #0
9000c4d4:	d1b1      	bne.n	9000c43a <HAL_TIM_Base_Init+0x96>
9000c4d6:	e793      	b.n	9000c400 <HAL_TIM_Base_Init+0x5c>
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000c4d8:	6920      	ldr	r0, [r4, #16]
    tmpcr1 &= ~TIM_CR1_CKD;
9000c4da:	f423 7340 	bic.w	r3, r3, #768	; 0x300
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000c4de:	69a1      	ldr	r1, [r4, #24]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000c4e0:	4303      	orrs	r3, r0
  TIMx->ARR = (uint32_t)Structure->Period ;
9000c4e2:	68e0      	ldr	r0, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000c4e4:	f023 0380 	bic.w	r3, r3, #128	; 0x80
9000c4e8:	430b      	orrs	r3, r1
  TIMx->PSC = Structure->Prescaler;
9000c4ea:	6861      	ldr	r1, [r4, #4]
  TIMx->CR1 = tmpcr1;
9000c4ec:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
9000c4ee:	62d0      	str	r0, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
9000c4f0:	6291      	str	r1, [r2, #40]	; 0x28
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000c4f2:	e7b1      	b.n	9000c458 <HAL_TIM_Base_Init+0xb4>
    return HAL_ERROR;
9000c4f4:	2001      	movs	r0, #1
}
9000c4f6:	4770      	bx	lr
9000c4f8:	40010000 	.word	0x40010000
9000c4fc:	40000400 	.word	0x40000400
9000c500:	40010400 	.word	0x40010400
9000c504:	40014000 	.word	0x40014000
9000c508:	40014400 	.word	0x40014400
9000c50c:	40000c00 	.word	0x40000c00

9000c510 <HAL_TIM_Base_Start_IT>:
  if (htim->State != HAL_TIM_STATE_READY)
9000c510:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
9000c514:	2b01      	cmp	r3, #1
9000c516:	d141      	bne.n	9000c59c <HAL_TIM_Base_Start_IT+0x8c>
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000c518:	6802      	ldr	r2, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
9000c51a:	2102      	movs	r1, #2
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000c51c:	4b24      	ldr	r3, [pc, #144]	; (9000c5b0 <HAL_TIM_Base_Start_IT+0xa0>)
9000c51e:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
9000c522:	bf18      	it	ne
9000c524:	429a      	cmpne	r2, r3
{
9000c526:	b430      	push	{r4, r5}
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000c528:	bf0c      	ite	eq
9000c52a:	2301      	moveq	r3, #1
9000c52c:	2300      	movne	r3, #0
9000c52e:	4d21      	ldr	r5, [pc, #132]	; (9000c5b4 <HAL_TIM_Base_Start_IT+0xa4>)
9000c530:	4c21      	ldr	r4, [pc, #132]	; (9000c5b8 <HAL_TIM_Base_Start_IT+0xa8>)
9000c532:	42aa      	cmp	r2, r5
9000c534:	bf08      	it	eq
9000c536:	f043 0301 	orreq.w	r3, r3, #1
  htim->State = HAL_TIM_STATE_BUSY;
9000c53a:	f880 103d 	strb.w	r1, [r0, #61]	; 0x3d
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000c53e:	68d1      	ldr	r1, [r2, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000c540:	42a2      	cmp	r2, r4
9000c542:	bf08      	it	eq
9000c544:	f043 0301 	orreq.w	r3, r3, #1
9000c548:	f504 6480 	add.w	r4, r4, #1024	; 0x400
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000c54c:	f041 0101 	orr.w	r1, r1, #1
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000c550:	481a      	ldr	r0, [pc, #104]	; (9000c5bc <HAL_TIM_Base_Start_IT+0xac>)
9000c552:	42a2      	cmp	r2, r4
9000c554:	bf08      	it	eq
9000c556:	f043 0301 	orreq.w	r3, r3, #1
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000c55a:	60d1      	str	r1, [r2, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000c55c:	4282      	cmp	r2, r0
9000c55e:	bf08      	it	eq
9000c560:	f043 0301 	orreq.w	r3, r3, #1
9000c564:	4916      	ldr	r1, [pc, #88]	; (9000c5c0 <HAL_TIM_Base_Start_IT+0xb0>)
9000c566:	428a      	cmp	r2, r1
9000c568:	bf08      	it	eq
9000c56a:	f043 0301 	orreq.w	r3, r3, #1
9000c56e:	b933      	cbnz	r3, 9000c57e <HAL_TIM_Base_Start_IT+0x6e>
9000c570:	f500 5070 	add.w	r0, r0, #15360	; 0x3c00
9000c574:	1a10      	subs	r0, r2, r0
9000c576:	fab0 f080 	clz	r0, r0
9000c57a:	0940      	lsrs	r0, r0, #5
9000c57c:	b198      	cbz	r0, 9000c5a6 <HAL_TIM_Base_Start_IT+0x96>
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
9000c57e:	6891      	ldr	r1, [r2, #8]
9000c580:	4b10      	ldr	r3, [pc, #64]	; (9000c5c4 <HAL_TIM_Base_Start_IT+0xb4>)
9000c582:	400b      	ands	r3, r1
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
9000c584:	2b06      	cmp	r3, #6
9000c586:	d00b      	beq.n	9000c5a0 <HAL_TIM_Base_Start_IT+0x90>
9000c588:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
9000c58c:	d008      	beq.n	9000c5a0 <HAL_TIM_Base_Start_IT+0x90>
      __HAL_TIM_ENABLE(htim);
9000c58e:	6813      	ldr	r3, [r2, #0]
  return HAL_OK;
9000c590:	2000      	movs	r0, #0
      __HAL_TIM_ENABLE(htim);
9000c592:	f043 0301 	orr.w	r3, r3, #1
9000c596:	6013      	str	r3, [r2, #0]
}
9000c598:	bc30      	pop	{r4, r5}
9000c59a:	4770      	bx	lr
    return HAL_ERROR;
9000c59c:	2001      	movs	r0, #1
}
9000c59e:	4770      	bx	lr
  return HAL_OK;
9000c5a0:	2000      	movs	r0, #0
}
9000c5a2:	bc30      	pop	{r4, r5}
9000c5a4:	4770      	bx	lr
    __HAL_TIM_ENABLE(htim);
9000c5a6:	6813      	ldr	r3, [r2, #0]
9000c5a8:	f043 0301 	orr.w	r3, r3, #1
9000c5ac:	6013      	str	r3, [r2, #0]
9000c5ae:	e7f3      	b.n	9000c598 <HAL_TIM_Base_Start_IT+0x88>
9000c5b0:	40010000 	.word	0x40010000
9000c5b4:	40000400 	.word	0x40000400
9000c5b8:	40000800 	.word	0x40000800
9000c5bc:	40010400 	.word	0x40010400
9000c5c0:	40001800 	.word	0x40001800
9000c5c4:	00010007 	.word	0x00010007

9000c5c8 <HAL_TIM_OC_DelayElapsedCallback>:
9000c5c8:	4770      	bx	lr
9000c5ca:	bf00      	nop

9000c5cc <HAL_TIM_IC_CaptureCallback>:
9000c5cc:	4770      	bx	lr
9000c5ce:	bf00      	nop

9000c5d0 <HAL_TIM_PWM_PulseFinishedCallback>:
9000c5d0:	4770      	bx	lr
9000c5d2:	bf00      	nop

9000c5d4 <HAL_TIM_TriggerCallback>:
9000c5d4:	4770      	bx	lr
9000c5d6:	bf00      	nop

9000c5d8 <HAL_TIM_IRQHandler>:
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
9000c5d8:	6803      	ldr	r3, [r0, #0]
9000c5da:	691a      	ldr	r2, [r3, #16]
9000c5dc:	0791      	lsls	r1, r2, #30
{
9000c5de:	b510      	push	{r4, lr}
9000c5e0:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
9000c5e2:	d502      	bpl.n	9000c5ea <HAL_TIM_IRQHandler+0x12>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
9000c5e4:	68da      	ldr	r2, [r3, #12]
9000c5e6:	0792      	lsls	r2, r2, #30
9000c5e8:	d468      	bmi.n	9000c6bc <HAL_TIM_IRQHandler+0xe4>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
9000c5ea:	691a      	ldr	r2, [r3, #16]
9000c5ec:	0752      	lsls	r2, r2, #29
9000c5ee:	d502      	bpl.n	9000c5f6 <HAL_TIM_IRQHandler+0x1e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
9000c5f0:	68da      	ldr	r2, [r3, #12]
9000c5f2:	0750      	lsls	r0, r2, #29
9000c5f4:	d44f      	bmi.n	9000c696 <HAL_TIM_IRQHandler+0xbe>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
9000c5f6:	691a      	ldr	r2, [r3, #16]
9000c5f8:	0711      	lsls	r1, r2, #28
9000c5fa:	d502      	bpl.n	9000c602 <HAL_TIM_IRQHandler+0x2a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
9000c5fc:	68da      	ldr	r2, [r3, #12]
9000c5fe:	0712      	lsls	r2, r2, #28
9000c600:	d437      	bmi.n	9000c672 <HAL_TIM_IRQHandler+0x9a>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
9000c602:	691a      	ldr	r2, [r3, #16]
9000c604:	06d0      	lsls	r0, r2, #27
9000c606:	d502      	bpl.n	9000c60e <HAL_TIM_IRQHandler+0x36>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
9000c608:	68da      	ldr	r2, [r3, #12]
9000c60a:	06d1      	lsls	r1, r2, #27
9000c60c:	d41e      	bmi.n	9000c64c <HAL_TIM_IRQHandler+0x74>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
9000c60e:	691a      	ldr	r2, [r3, #16]
9000c610:	07d2      	lsls	r2, r2, #31
9000c612:	d502      	bpl.n	9000c61a <HAL_TIM_IRQHandler+0x42>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
9000c614:	68da      	ldr	r2, [r3, #12]
9000c616:	07d0      	lsls	r0, r2, #31
9000c618:	d469      	bmi.n	9000c6ee <HAL_TIM_IRQHandler+0x116>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
9000c61a:	691a      	ldr	r2, [r3, #16]
9000c61c:	0611      	lsls	r1, r2, #24
9000c61e:	d502      	bpl.n	9000c626 <HAL_TIM_IRQHandler+0x4e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
9000c620:	68da      	ldr	r2, [r3, #12]
9000c622:	0612      	lsls	r2, r2, #24
9000c624:	d46b      	bmi.n	9000c6fe <HAL_TIM_IRQHandler+0x126>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK2) != RESET)
9000c626:	691a      	ldr	r2, [r3, #16]
9000c628:	05d0      	lsls	r0, r2, #23
9000c62a:	d502      	bpl.n	9000c632 <HAL_TIM_IRQHandler+0x5a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
9000c62c:	68da      	ldr	r2, [r3, #12]
9000c62e:	0611      	lsls	r1, r2, #24
9000c630:	d46d      	bmi.n	9000c70e <HAL_TIM_IRQHandler+0x136>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
9000c632:	691a      	ldr	r2, [r3, #16]
9000c634:	0652      	lsls	r2, r2, #25
9000c636:	d502      	bpl.n	9000c63e <HAL_TIM_IRQHandler+0x66>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
9000c638:	68da      	ldr	r2, [r3, #12]
9000c63a:	0650      	lsls	r0, r2, #25
9000c63c:	d46f      	bmi.n	9000c71e <HAL_TIM_IRQHandler+0x146>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
9000c63e:	691a      	ldr	r2, [r3, #16]
9000c640:	0691      	lsls	r1, r2, #26
9000c642:	d502      	bpl.n	9000c64a <HAL_TIM_IRQHandler+0x72>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
9000c644:	68da      	ldr	r2, [r3, #12]
9000c646:	0692      	lsls	r2, r2, #26
9000c648:	d449      	bmi.n	9000c6de <HAL_TIM_IRQHandler+0x106>
}
9000c64a:	bd10      	pop	{r4, pc}
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
9000c64c:	f06f 0110 	mvn.w	r1, #16
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
9000c650:	2208      	movs	r2, #8
        HAL_TIM_IC_CaptureCallback(htim);
9000c652:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
9000c654:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
9000c656:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
9000c658:	69db      	ldr	r3, [r3, #28]
9000c65a:	f413 7f40 	tst.w	r3, #768	; 0x300
9000c65e:	d16f      	bne.n	9000c740 <HAL_TIM_IRQHandler+0x168>
        HAL_TIM_OC_DelayElapsedCallback(htim);
9000c660:	f7ff ffb2 	bl	9000c5c8 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
9000c664:	4620      	mov	r0, r4
9000c666:	f7ff ffb3 	bl	9000c5d0 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000c66a:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
9000c66c:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000c66e:	7722      	strb	r2, [r4, #28]
9000c670:	e7cd      	b.n	9000c60e <HAL_TIM_IRQHandler+0x36>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
9000c672:	f06f 0108 	mvn.w	r1, #8
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
9000c676:	2204      	movs	r2, #4
        HAL_TIM_IC_CaptureCallback(htim);
9000c678:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
9000c67a:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
9000c67c:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
9000c67e:	69db      	ldr	r3, [r3, #28]
9000c680:	079b      	lsls	r3, r3, #30
9000c682:	d15a      	bne.n	9000c73a <HAL_TIM_IRQHandler+0x162>
        HAL_TIM_OC_DelayElapsedCallback(htim);
9000c684:	f7ff ffa0 	bl	9000c5c8 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
9000c688:	4620      	mov	r0, r4
9000c68a:	f7ff ffa1 	bl	9000c5d0 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000c68e:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
9000c690:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000c692:	7722      	strb	r2, [r4, #28]
9000c694:	e7b5      	b.n	9000c602 <HAL_TIM_IRQHandler+0x2a>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
9000c696:	f06f 0104 	mvn.w	r1, #4
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
9000c69a:	2202      	movs	r2, #2
        HAL_TIM_IC_CaptureCallback(htim);
9000c69c:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
9000c69e:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
9000c6a0:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
9000c6a2:	699b      	ldr	r3, [r3, #24]
9000c6a4:	f413 7f40 	tst.w	r3, #768	; 0x300
9000c6a8:	d144      	bne.n	9000c734 <HAL_TIM_IRQHandler+0x15c>
        HAL_TIM_OC_DelayElapsedCallback(htim);
9000c6aa:	f7ff ff8d 	bl	9000c5c8 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
9000c6ae:	4620      	mov	r0, r4
9000c6b0:	f7ff ff8e 	bl	9000c5d0 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000c6b4:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
9000c6b6:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000c6b8:	7722      	strb	r2, [r4, #28]
9000c6ba:	e79c      	b.n	9000c5f6 <HAL_TIM_IRQHandler+0x1e>
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
9000c6bc:	f06f 0102 	mvn.w	r1, #2
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
9000c6c0:	2201      	movs	r2, #1
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
9000c6c2:	6119      	str	r1, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
9000c6c4:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
9000c6c6:	699b      	ldr	r3, [r3, #24]
9000c6c8:	0799      	lsls	r1, r3, #30
9000c6ca:	d130      	bne.n	9000c72e <HAL_TIM_IRQHandler+0x156>
          HAL_TIM_OC_DelayElapsedCallback(htim);
9000c6cc:	f7ff ff7c 	bl	9000c5c8 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
9000c6d0:	4620      	mov	r0, r4
9000c6d2:	f7ff ff7d 	bl	9000c5d0 <HAL_TIM_PWM_PulseFinishedCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000c6d6:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
9000c6d8:	6823      	ldr	r3, [r4, #0]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000c6da:	7722      	strb	r2, [r4, #28]
9000c6dc:	e785      	b.n	9000c5ea <HAL_TIM_IRQHandler+0x12>
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
9000c6de:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
9000c6e2:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
9000c6e4:	611a      	str	r2, [r3, #16]
}
9000c6e6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
9000c6ea:	f000 b82d 	b.w	9000c748 <HAL_TIMEx_CommutCallback>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
9000c6ee:	f06f 0201 	mvn.w	r2, #1
      HAL_TIM_PeriodElapsedCallback(htim);
9000c6f2:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
9000c6f4:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
9000c6f6:	f7f6 fd5b 	bl	900031b0 <HAL_TIM_PeriodElapsedCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
9000c6fa:	6823      	ldr	r3, [r4, #0]
9000c6fc:	e78d      	b.n	9000c61a <HAL_TIM_IRQHandler+0x42>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
9000c6fe:	f06f 0280 	mvn.w	r2, #128	; 0x80
      HAL_TIMEx_BreakCallback(htim);
9000c702:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
9000c704:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
9000c706:	f000 f821 	bl	9000c74c <HAL_TIMEx_BreakCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK2) != RESET)
9000c70a:	6823      	ldr	r3, [r4, #0]
9000c70c:	e78b      	b.n	9000c626 <HAL_TIM_IRQHandler+0x4e>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
9000c70e:	f46f 7280 	mvn.w	r2, #256	; 0x100
      HAL_TIMEx_Break2Callback(htim);
9000c712:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
9000c714:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_Break2Callback(htim);
9000c716:	f000 f81b 	bl	9000c750 <HAL_TIMEx_Break2Callback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
9000c71a:	6823      	ldr	r3, [r4, #0]
9000c71c:	e789      	b.n	9000c632 <HAL_TIM_IRQHandler+0x5a>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
9000c71e:	f06f 0240 	mvn.w	r2, #64	; 0x40
      HAL_TIM_TriggerCallback(htim);
9000c722:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
9000c724:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
9000c726:	f7ff ff55 	bl	9000c5d4 <HAL_TIM_TriggerCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
9000c72a:	6823      	ldr	r3, [r4, #0]
9000c72c:	e787      	b.n	9000c63e <HAL_TIM_IRQHandler+0x66>
          HAL_TIM_IC_CaptureCallback(htim);
9000c72e:	f7ff ff4d 	bl	9000c5cc <HAL_TIM_IC_CaptureCallback>
9000c732:	e7d0      	b.n	9000c6d6 <HAL_TIM_IRQHandler+0xfe>
        HAL_TIM_IC_CaptureCallback(htim);
9000c734:	f7ff ff4a 	bl	9000c5cc <HAL_TIM_IC_CaptureCallback>
9000c738:	e7bc      	b.n	9000c6b4 <HAL_TIM_IRQHandler+0xdc>
        HAL_TIM_IC_CaptureCallback(htim);
9000c73a:	f7ff ff47 	bl	9000c5cc <HAL_TIM_IC_CaptureCallback>
9000c73e:	e7a6      	b.n	9000c68e <HAL_TIM_IRQHandler+0xb6>
        HAL_TIM_IC_CaptureCallback(htim);
9000c740:	f7ff ff44 	bl	9000c5cc <HAL_TIM_IC_CaptureCallback>
9000c744:	e791      	b.n	9000c66a <HAL_TIM_IRQHandler+0x92>
9000c746:	bf00      	nop

9000c748 <HAL_TIMEx_CommutCallback>:
9000c748:	4770      	bx	lr
9000c74a:	bf00      	nop

9000c74c <HAL_TIMEx_BreakCallback>:
9000c74c:	4770      	bx	lr
9000c74e:	bf00      	nop

9000c750 <HAL_TIMEx_Break2Callback>:
9000c750:	4770      	bx	lr
9000c752:	bf00      	nop

9000c754 <FMC_SDRAM_Init>:
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
9000c754:	680b      	ldr	r3, [r1, #0]
{
9000c756:	b410      	push	{r4}
  if (Init->SDBank == FMC_SDRAM_BANK1)
9000c758:	b9d3      	cbnz	r3, 9000c790 <FMC_SDRAM_Init+0x3c>
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000c75a:	6804      	ldr	r4, [r0, #0]
9000c75c:	f5a3 4300 	sub.w	r3, r3, #32768	; 0x8000
9000c760:	684a      	ldr	r2, [r1, #4]
9000c762:	4023      	ands	r3, r4
9000c764:	4313      	orrs	r3, r2
9000c766:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
9000c76a:	4323      	orrs	r3, r4
9000c76c:	4313      	orrs	r3, r2
9000c76e:	e9d1 4204 	ldrd	r4, r2, [r1, #16]
9000c772:	4323      	orrs	r3, r4
9000c774:	4313      	orrs	r3, r2
9000c776:	e9d1 4206 	ldrd	r4, r2, [r1, #24]
9000c77a:	4323      	orrs	r3, r4
9000c77c:	4313      	orrs	r3, r2
9000c77e:	e9d1 4208 	ldrd	r4, r2, [r1, #32]
9000c782:	4323      	orrs	r3, r4
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
9000c784:	f85d 4b04 	ldr.w	r4, [sp], #4
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000c788:	4313      	orrs	r3, r2
9000c78a:	6003      	str	r3, [r0, #0]
}
9000c78c:	2000      	movs	r0, #0
9000c78e:	4770      	bx	lr
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000c790:	6802      	ldr	r2, [r0, #0]
9000c792:	e9d1 4307 	ldrd	r4, r3, [r1, #28]
9000c796:	f422 42f8 	bic.w	r2, r2, #31744	; 0x7c00
9000c79a:	4322      	orrs	r2, r4
9000c79c:	6a4c      	ldr	r4, [r1, #36]	; 0x24
9000c79e:	431a      	orrs	r2, r3
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
9000c7a0:	4b0a      	ldr	r3, [pc, #40]	; (9000c7cc <FMC_SDRAM_Init+0x78>)
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000c7a2:	4322      	orrs	r2, r4
9000c7a4:	6002      	str	r2, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
9000c7a6:	6842      	ldr	r2, [r0, #4]
9000c7a8:	4013      	ands	r3, r2
9000c7aa:	e9d1 4201 	ldrd	r4, r2, [r1, #4]
9000c7ae:	4323      	orrs	r3, r4
9000c7b0:	4313      	orrs	r3, r2
9000c7b2:	e9d1 4203 	ldrd	r4, r2, [r1, #12]
9000c7b6:	4323      	orrs	r3, r4
9000c7b8:	4313      	orrs	r3, r2
9000c7ba:	e9d1 4205 	ldrd	r4, r2, [r1, #20]
9000c7be:	4323      	orrs	r3, r4
}
9000c7c0:	f85d 4b04 	ldr.w	r4, [sp], #4
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
9000c7c4:	4313      	orrs	r3, r2
9000c7c6:	6043      	str	r3, [r0, #4]
}
9000c7c8:	2000      	movs	r0, #0
9000c7ca:	4770      	bx	lr
9000c7cc:	ffff8000 	.word	0xffff8000

9000c7d0 <FMC_SDRAM_Timing_Init>:
  * @param  Bank SDRAM bank number
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
9000c7d0:	b430      	push	{r4, r5}
  assert_param(IS_FMC_RP_DELAY(Timing->RPDelay));
  assert_param(IS_FMC_RCD_DELAY(Timing->RCDDelay));
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
9000c7d2:	bb0a      	cbnz	r2, 9000c818 <FMC_SDRAM_Timing_Init+0x48>
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000c7d4:	6883      	ldr	r3, [r0, #8]
9000c7d6:	e9d1 2400 	ldrd	r2, r4, [r1]
9000c7da:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
9000c7de:	3c01      	subs	r4, #1
9000c7e0:	3a01      	subs	r2, #1
9000c7e2:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
9000c7e6:	4313      	orrs	r3, r2
9000c7e8:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
9000c7ec:	3c01      	subs	r4, #1
9000c7ee:	3a01      	subs	r2, #1
9000c7f0:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
9000c7f4:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
9000c7f8:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
9000c7fc:	698a      	ldr	r2, [r1, #24]
9000c7fe:	3d01      	subs	r5, #1
9000c800:	1e61      	subs	r1, r4, #1
9000c802:	3a01      	subs	r2, #1
9000c804:	ea43 4305 	orr.w	r3, r3, r5, lsl #16
9000c808:	ea43 5301 	orr.w	r3, r3, r1, lsl #20
9000c80c:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTRx_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTRx_TRCD_Pos)));
  }

  return HAL_OK;
}
9000c810:	bc30      	pop	{r4, r5}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000c812:	6083      	str	r3, [r0, #8]
}
9000c814:	2000      	movs	r0, #0
9000c816:	4770      	bx	lr
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000c818:	6885      	ldr	r5, [r0, #8]
9000c81a:	68ca      	ldr	r2, [r1, #12]
9000c81c:	4b12      	ldr	r3, [pc, #72]	; (9000c868 <FMC_SDRAM_Timing_Init+0x98>)
9000c81e:	1e54      	subs	r4, r2, #1
9000c820:	694a      	ldr	r2, [r1, #20]
9000c822:	402b      	ands	r3, r5
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000c824:	688d      	ldr	r5, [r1, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000c826:	3a01      	subs	r2, #1
9000c828:	ea43 3304 	orr.w	r3, r3, r4, lsl #12
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000c82c:	f105 3cff 	add.w	ip, r5, #4294967295
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000c830:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000c834:	e9d1 2400 	ldrd	r2, r4, [r1]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000c838:	6083      	str	r3, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000c83a:	68c3      	ldr	r3, [r0, #12]
9000c83c:	3c01      	subs	r4, #1
9000c83e:	3a01      	subs	r2, #1
9000c840:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
9000c844:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
9000c848:	690c      	ldr	r4, [r1, #16]
9000c84a:	4313      	orrs	r3, r2
9000c84c:	698a      	ldr	r2, [r1, #24]
9000c84e:	1e61      	subs	r1, r4, #1
9000c850:	ea43 230c 	orr.w	r3, r3, ip, lsl #8
9000c854:	3a01      	subs	r2, #1
9000c856:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
9000c85a:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
}
9000c85e:	bc30      	pop	{r4, r5}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000c860:	60c3      	str	r3, [r0, #12]
}
9000c862:	2000      	movs	r0, #0
9000c864:	4770      	bx	lr
9000c866:	bf00      	nop
9000c868:	ff0f0fff 	.word	0xff0f0fff

9000c86c <FMC_SDRAM_DeInit>:
  * @brief  DeInitializes the FMC_SDRAM peripheral
  * @param  Device Pointer to SDRAM device instance
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_DeInit(FMC_SDRAM_TypeDef *Device, uint32_t Bank)
{
9000c86c:	b430      	push	{r4, r5}
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* De-initialize the SDRAM device */
  Device->SDCR[Bank] = 0x000002D0U;
  Device->SDTR[Bank] = 0x0FFFFFFFU;
  Device->SDCMR      = 0x00000000U;
9000c86e:	2200      	movs	r2, #0
{
9000c870:	4603      	mov	r3, r0
  Device->SDCR[Bank] = 0x000002D0U;
9000c872:	f44f 7534 	mov.w	r5, #720	; 0x2d0
  Device->SDTR[Bank] = 0x0FFFFFFFU;
9000c876:	f06f 4470 	mvn.w	r4, #4026531840	; 0xf0000000
9000c87a:	eb00 0c81 	add.w	ip, r0, r1, lsl #2
  Device->SDCR[Bank] = 0x000002D0U;
9000c87e:	f840 5021 	str.w	r5, [r0, r1, lsl #2]
  Device->SDRTR      = 0x00000000U;
  Device->SDSR       = 0x00000000U;

  return HAL_OK;
}
9000c882:	4610      	mov	r0, r2
  Device->SDTR[Bank] = 0x0FFFFFFFU;
9000c884:	f8cc 4008 	str.w	r4, [ip, #8]
  Device->SDCMR      = 0x00000000U;
9000c888:	611a      	str	r2, [r3, #16]
  Device->SDRTR      = 0x00000000U;
9000c88a:	615a      	str	r2, [r3, #20]
  Device->SDSR       = 0x00000000U;
9000c88c:	619a      	str	r2, [r3, #24]
}
9000c88e:	bc30      	pop	{r4, r5}
9000c890:	4770      	bx	lr
9000c892:	bf00      	nop

9000c894 <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
9000c894:	b410      	push	{r4}
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000c896:	e9d1 3400 	ldrd	r3, r4, [r1]
{
9000c89a:	4602      	mov	r2, r0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000c89c:	6900      	ldr	r0, [r0, #16]
9000c89e:	4323      	orrs	r3, r4
9000c8a0:	e9d1 1402 	ldrd	r1, r4, [r1, #8]
9000c8a4:	ea43 2344 	orr.w	r3, r3, r4, lsl #9
9000c8a8:	4c05      	ldr	r4, [pc, #20]	; (9000c8c0 <FMC_SDRAM_SendCommand+0x2c>)
9000c8aa:	3901      	subs	r1, #1
9000c8ac:	4004      	ands	r4, r0
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Prevent unused argument(s) compilation warning */
  UNUSED(Timeout);
  return HAL_OK;
}
9000c8ae:	2000      	movs	r0, #0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000c8b0:	4323      	orrs	r3, r4
}
9000c8b2:	f85d 4b04 	ldr.w	r4, [sp], #4
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000c8b6:	ea43 1341 	orr.w	r3, r3, r1, lsl #5
9000c8ba:	6113      	str	r3, [r2, #16]
}
9000c8bc:	4770      	bx	lr
9000c8be:	bf00      	nop
9000c8c0:	ffc00000 	.word	0xffc00000

9000c8c4 <FMC_SDRAM_ProgramRefreshRate>:
  * @param  Device Pointer to SDRAM device instance
  * @param  RefreshRate The SDRAM refresh rate value.
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_ProgramRefreshRate(FMC_SDRAM_TypeDef *Device, uint32_t RefreshRate)
{
9000c8c4:	4602      	mov	r2, r0
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
9000c8c6:	4b05      	ldr	r3, [pc, #20]	; (9000c8dc <FMC_SDRAM_ProgramRefreshRate+0x18>)

  return HAL_OK;
}
9000c8c8:	2000      	movs	r0, #0
{
9000c8ca:	b410      	push	{r4}
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
9000c8cc:	6954      	ldr	r4, [r2, #20]
9000c8ce:	4023      	ands	r3, r4
}
9000c8d0:	f85d 4b04 	ldr.w	r4, [sp], #4
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
9000c8d4:	ea43 0141 	orr.w	r1, r3, r1, lsl #1
9000c8d8:	6151      	str	r1, [r2, #20]
}
9000c8da:	4770      	bx	lr
9000c8dc:	ffffc001 	.word	0xffffc001

9000c8e0 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
9000c8e0:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
9000c8e2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000c8e6:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
9000c8e8:	f002 fdea 	bl	9000f4c0 <xTaskGetSchedulerState>
9000c8ec:	2801      	cmp	r0, #1
9000c8ee:	d100      	bne.n	9000c8f2 <SysTick_Handler+0x12>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
9000c8f0:	bd08      	pop	{r3, pc}
9000c8f2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
9000c8f6:	f000 bd05 	b.w	9000d304 <xPortSysTickHandler>
9000c8fa:	bf00      	nop

9000c8fc <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
9000c8fc:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
9000c900:	b92b      	cbnz	r3, 9000c90e <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
9000c902:	4b06      	ldr	r3, [pc, #24]	; (9000c91c <osKernelInitialize+0x20>)
9000c904:	6818      	ldr	r0, [r3, #0]
9000c906:	b928      	cbnz	r0, 9000c914 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
9000c908:	2201      	movs	r2, #1
9000c90a:	601a      	str	r2, [r3, #0]
      stat = osOK;
9000c90c:	4770      	bx	lr
    stat = osErrorISR;
9000c90e:	f06f 0005 	mvn.w	r0, #5
9000c912:	4770      	bx	lr
    } else {
      stat = osError;
9000c914:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
9000c918:	4770      	bx	lr
9000c91a:	bf00      	nop
9000c91c:	2400a3dc 	.word	0x2400a3dc

9000c920 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
9000c920:	b510      	push	{r4, lr}
9000c922:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
9000c926:	b974      	cbnz	r4, 9000c946 <osKernelStart+0x26>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
9000c928:	4b08      	ldr	r3, [pc, #32]	; (9000c94c <osKernelStart+0x2c>)
9000c92a:	681a      	ldr	r2, [r3, #0]
9000c92c:	2a01      	cmp	r2, #1
9000c92e:	d107      	bne.n	9000c940 <osKernelStart+0x20>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
9000c930:	4907      	ldr	r1, [pc, #28]	; (9000c950 <osKernelStart+0x30>)
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
9000c932:	2202      	movs	r2, #2
9000c934:	77cc      	strb	r4, [r1, #31]
9000c936:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
9000c938:	f002 fae2 	bl	9000ef00 <vTaskStartScheduler>
      stat = osOK;
9000c93c:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
9000c93e:	bd10      	pop	{r4, pc}
      stat = osError;
9000c940:	f04f 30ff 	mov.w	r0, #4294967295
}
9000c944:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
9000c946:	f06f 0005 	mvn.w	r0, #5
}
9000c94a:	bd10      	pop	{r4, pc}
9000c94c:	2400a3dc 	.word	0x2400a3dc
9000c950:	e000ed00 	.word	0xe000ed00

9000c954 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
9000c954:	b5f0      	push	{r4, r5, r6, r7, lr}
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
9000c956:	2500      	movs	r5, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
9000c958:	b087      	sub	sp, #28
9000c95a:	4614      	mov	r4, r2
  hTask = NULL;
9000c95c:	9505      	str	r5, [sp, #20]
9000c95e:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
9000c962:	bb5a      	cbnz	r2, 9000c9bc <osThreadNew+0x68>
9000c964:	4606      	mov	r6, r0
9000c966:	b348      	cbz	r0, 9000c9bc <osThreadNew+0x68>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
9000c968:	b1e4      	cbz	r4, 9000c9a4 <osThreadNew+0x50>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
9000c96a:	69a7      	ldr	r7, [r4, #24]
9000c96c:	bb4f      	cbnz	r7, 9000c9c2 <osThreadNew+0x6e>
9000c96e:	2718      	movs	r7, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
9000c970:	6863      	ldr	r3, [r4, #4]
9000c972:	07db      	lsls	r3, r3, #31
9000c974:	d422      	bmi.n	9000c9bc <osThreadNew+0x68>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
9000c976:	6963      	ldr	r3, [r4, #20]
9000c978:	b33b      	cbz	r3, 9000c9ca <osThreadNew+0x76>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
9000c97a:	ea4f 0c93 	mov.w	ip, r3, lsr #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
9000c97e:	68a0      	ldr	r0, [r4, #8]
      if (attr->name != NULL) {
9000c980:	6825      	ldr	r5, [r4, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
9000c982:	b338      	cbz	r0, 9000c9d4 <osThreadNew+0x80>
9000c984:	68e2      	ldr	r2, [r4, #12]
9000c986:	2a5f      	cmp	r2, #95	; 0x5f
9000c988:	d918      	bls.n	9000c9bc <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
9000c98a:	6924      	ldr	r4, [r4, #16]
9000c98c:	b1b3      	cbz	r3, 9000c9bc <osThreadNew+0x68>
9000c98e:	b1ac      	cbz	r4, 9000c9bc <osThreadNew+0x68>
      mem = 0;
    }

    if (mem == 1) {
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
9000c990:	460b      	mov	r3, r1
9000c992:	4662      	mov	r2, ip
9000c994:	4629      	mov	r1, r5
9000c996:	9700      	str	r7, [sp, #0]
9000c998:	e9cd 4001 	strd	r4, r0, [sp, #4]
9000c99c:	4630      	mov	r0, r6
9000c99e:	f002 f8c1 	bl	9000eb24 <xTaskCreateStatic>
9000c9a2:	e00c      	b.n	9000c9be <osThreadNew+0x6a>
9000c9a4:	2280      	movs	r2, #128	; 0x80
    prio  = (UBaseType_t)osPriorityNormal;
9000c9a6:	2718      	movs	r7, #24
      #endif
    }
    else {
      if (mem == 0) {
        #if (configSUPPORT_DYNAMIC_ALLOCATION == 1)
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
9000c9a8:	460b      	mov	r3, r1
9000c9aa:	4621      	mov	r1, r4
9000c9ac:	ac05      	add	r4, sp, #20
9000c9ae:	4630      	mov	r0, r6
9000c9b0:	9700      	str	r7, [sp, #0]
9000c9b2:	9401      	str	r4, [sp, #4]
9000c9b4:	f002 f960 	bl	9000ec78 <xTaskCreate>
9000c9b8:	2801      	cmp	r0, #1
9000c9ba:	d009      	beq.n	9000c9d0 <osThreadNew+0x7c>
        return (NULL);
9000c9bc:	2000      	movs	r0, #0
      }
    }
  }

  return ((osThreadId_t)hTask);
}
9000c9be:	b007      	add	sp, #28
9000c9c0:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
9000c9c2:	1e7a      	subs	r2, r7, #1
9000c9c4:	2a37      	cmp	r2, #55	; 0x37
9000c9c6:	d9d3      	bls.n	9000c970 <osThreadNew+0x1c>
9000c9c8:	e7f8      	b.n	9000c9bc <osThreadNew+0x68>
    stack = configMINIMAL_STACK_SIZE;
9000c9ca:	f04f 0c80 	mov.w	ip, #128	; 0x80
9000c9ce:	e7d6      	b.n	9000c97e <osThreadNew+0x2a>
  return ((osThreadId_t)hTask);
9000c9d0:	9805      	ldr	r0, [sp, #20]
9000c9d2:	e7f4      	b.n	9000c9be <osThreadNew+0x6a>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
9000c9d4:	68e3      	ldr	r3, [r4, #12]
9000c9d6:	2b00      	cmp	r3, #0
9000c9d8:	d1f1      	bne.n	9000c9be <osThreadNew+0x6a>
9000c9da:	6923      	ldr	r3, [r4, #16]
9000c9dc:	2b00      	cmp	r3, #0
9000c9de:	d1ee      	bne.n	9000c9be <osThreadNew+0x6a>
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
9000c9e0:	fa1f f28c 	uxth.w	r2, ip
9000c9e4:	462c      	mov	r4, r5
9000c9e6:	e7df      	b.n	9000c9a8 <osThreadNew+0x54>

9000c9e8 <osThreadSuspend>:

  return (stat);
}

#if (configUSE_OS2_THREAD_SUSPEND_RESUME == 1)
osStatus_t osThreadSuspend (osThreadId_t thread_id) {
9000c9e8:	b510      	push	{r4, lr}
9000c9ea:	f3ef 8405 	mrs	r4, IPSR
  TaskHandle_t hTask = (TaskHandle_t)thread_id;
  osStatus_t stat;

  if (IS_IRQ()) {
9000c9ee:	b924      	cbnz	r4, 9000c9fa <osThreadSuspend+0x12>
    stat = osErrorISR;
  }
  else if (hTask == NULL) {
9000c9f0:	b130      	cbz	r0, 9000ca00 <osThreadSuspend+0x18>
    stat = osErrorParameter;
  }
  else {
    stat = osOK;
    vTaskSuspend (hTask);
9000c9f2:	f002 fbbf 	bl	9000f174 <vTaskSuspend>
    stat = osOK;
9000c9f6:	4620      	mov	r0, r4
  }

  return (stat);
}
9000c9f8:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
9000c9fa:	f06f 0005 	mvn.w	r0, #5
}
9000c9fe:	bd10      	pop	{r4, pc}
    stat = osErrorParameter;
9000ca00:	f06f 0003 	mvn.w	r0, #3
}
9000ca04:	bd10      	pop	{r4, pc}
9000ca06:	bf00      	nop

9000ca08 <osThreadResume>:

osStatus_t osThreadResume (osThreadId_t thread_id) {
9000ca08:	b510      	push	{r4, lr}
9000ca0a:	f3ef 8405 	mrs	r4, IPSR
  TaskHandle_t hTask = (TaskHandle_t)thread_id;
  osStatus_t stat;

  if (IS_IRQ()) {
9000ca0e:	b924      	cbnz	r4, 9000ca1a <osThreadResume+0x12>
    stat = osErrorISR;
  }
  else if (hTask == NULL) {
9000ca10:	b130      	cbz	r0, 9000ca20 <osThreadResume+0x18>
    stat = osErrorParameter;
  }
  else {
    stat = osOK;
    vTaskResume (hTask);
9000ca12:	f002 fa23 	bl	9000ee5c <vTaskResume>
    stat = osOK;
9000ca16:	4620      	mov	r0, r4
  }

  return (stat);
}
9000ca18:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
9000ca1a:	f06f 0005 	mvn.w	r0, #5
}
9000ca1e:	bd10      	pop	{r4, pc}
    stat = osErrorParameter;
9000ca20:	f06f 0003 	mvn.w	r0, #3
}
9000ca24:	bd10      	pop	{r4, pc}
9000ca26:	bf00      	nop

9000ca28 <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
9000ca28:	b510      	push	{r4, lr}
9000ca2a:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
9000ca2e:	b92c      	cbnz	r4, 9000ca3c <osDelay+0x14>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
9000ca30:	b900      	cbnz	r0, 9000ca34 <osDelay+0xc>
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
9000ca32:	bd10      	pop	{r4, pc}
      vTaskDelay(ticks);
9000ca34:	f002 f9bc 	bl	9000edb0 <vTaskDelay>
    stat = osOK;
9000ca38:	4620      	mov	r0, r4
}
9000ca3a:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
9000ca3c:	f06f 0005 	mvn.w	r0, #5
}
9000ca40:	bd10      	pop	{r4, pc}
9000ca42:	bf00      	nop

9000ca44 <osMutexNew>:
}

/*---------------------------------------------------------------------------*/
#if (configUSE_OS2_MUTEX == 1)

osMutexId_t osMutexNew (const osMutexAttr_t *attr) {
9000ca44:	b570      	push	{r4, r5, r6, lr}
9000ca46:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hMutex = NULL;

  if (!IS_IRQ()) {
9000ca4a:	b9db      	cbnz	r3, 9000ca84 <osMutexNew+0x40>
    if (attr != NULL) {
9000ca4c:	4604      	mov	r4, r0
9000ca4e:	b1e0      	cbz	r0, 9000ca8a <osMutexNew+0x46>
      type = attr->attr_bits;
9000ca50:	6846      	ldr	r6, [r0, #4]
      rmtx = 1U;
    } else {
      rmtx = 0U;
    }

    if ((type & osMutexRobust) != osMutexRobust) {
9000ca52:	0733      	lsls	r3, r6, #28
9000ca54:	d416      	bmi.n	9000ca84 <osMutexNew+0x40>
      mem = -1;

      if (attr != NULL) {
        if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
9000ca56:	6881      	ldr	r1, [r0, #8]
    if ((type & osMutexRecursive) == osMutexRecursive) {
9000ca58:	f006 0601 	and.w	r6, r6, #1
        if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
9000ca5c:	68c3      	ldr	r3, [r0, #12]
9000ca5e:	b181      	cbz	r1, 9000ca82 <osMutexNew+0x3e>
9000ca60:	2b4f      	cmp	r3, #79	; 0x4f
9000ca62:	d90f      	bls.n	9000ca84 <osMutexNew+0x40>
        mem = 0;
      }

      if (mem == 1) {
        #if (configSUPPORT_STATIC_ALLOCATION == 1)
          if (rmtx != 0U) {
9000ca64:	b31e      	cbz	r6, 9000caae <osMutexNew+0x6a>
            #if (configUSE_RECURSIVE_MUTEXES == 1)
            hMutex = xSemaphoreCreateRecursiveMutexStatic (attr->cb_mem);
9000ca66:	2004      	movs	r0, #4
9000ca68:	f001 f85e 	bl	9000db28 <xQueueCreateMutexStatic>
9000ca6c:	4605      	mov	r5, r0
          #endif
        }
      }

      #if (configQUEUE_REGISTRY_SIZE > 0)
      if (hMutex != NULL) {
9000ca6e:	b14d      	cbz	r5, 9000ca84 <osMutexNew+0x40>
        if (attr != NULL) {
          name = attr->name;
        } else {
          name = NULL;
        }
        vQueueAddToRegistry (hMutex, name);
9000ca70:	6821      	ldr	r1, [r4, #0]
9000ca72:	4628      	mov	r0, r5
9000ca74:	f001 fdb2 	bl	9000e5dc <vQueueAddToRegistry>
      }
      #endif

      if ((hMutex != NULL) && (rmtx != 0U)) {
9000ca78:	b12e      	cbz	r6, 9000ca86 <osMutexNew+0x42>
        hMutex = (SemaphoreHandle_t)((uint32_t)hMutex | 1U);
9000ca7a:	f045 0501 	orr.w	r5, r5, #1
      }
    }
  }

  return ((osMutexId_t)hMutex);
}
9000ca7e:	4628      	mov	r0, r5
9000ca80:	bd70      	pop	{r4, r5, r6, pc}
          if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
9000ca82:	b163      	cbz	r3, 9000ca9e <osMutexNew+0x5a>
  hMutex = NULL;
9000ca84:	2500      	movs	r5, #0
}
9000ca86:	4628      	mov	r0, r5
9000ca88:	bd70      	pop	{r4, r5, r6, pc}
              hMutex = xSemaphoreCreateMutex ();
9000ca8a:	2001      	movs	r0, #1
9000ca8c:	f001 f8bc 	bl	9000dc08 <xQueueCreateMutex>
      if (hMutex != NULL) {
9000ca90:	4605      	mov	r5, r0
9000ca92:	2800      	cmp	r0, #0
9000ca94:	d0f6      	beq.n	9000ca84 <osMutexNew+0x40>
        vQueueAddToRegistry (hMutex, name);
9000ca96:	4621      	mov	r1, r4
9000ca98:	f001 fda0 	bl	9000e5dc <vQueueAddToRegistry>
      if ((hMutex != NULL) && (rmtx != 0U)) {
9000ca9c:	e7f3      	b.n	9000ca86 <osMutexNew+0x42>
            if (rmtx != 0U) {
9000ca9e:	b15e      	cbz	r6, 9000cab8 <osMutexNew+0x74>
              hMutex = xSemaphoreCreateRecursiveMutex ();
9000caa0:	2004      	movs	r0, #4
9000caa2:	f001 f8b1 	bl	9000dc08 <xQueueCreateMutex>
      if (hMutex != NULL) {
9000caa6:	4605      	mov	r5, r0
9000caa8:	2800      	cmp	r0, #0
9000caaa:	d1e1      	bne.n	9000ca70 <osMutexNew+0x2c>
9000caac:	e7ea      	b.n	9000ca84 <osMutexNew+0x40>
            hMutex = xSemaphoreCreateMutexStatic (attr->cb_mem);
9000caae:	2001      	movs	r0, #1
9000cab0:	f001 f83a 	bl	9000db28 <xQueueCreateMutexStatic>
9000cab4:	4605      	mov	r5, r0
9000cab6:	e7da      	b.n	9000ca6e <osMutexNew+0x2a>
              hMutex = xSemaphoreCreateMutex ();
9000cab8:	2001      	movs	r0, #1
9000caba:	f001 f8a5 	bl	9000dc08 <xQueueCreateMutex>
      if (hMutex != NULL) {
9000cabe:	4605      	mov	r5, r0
9000cac0:	e7d5      	b.n	9000ca6e <osMutexNew+0x2a>
9000cac2:	bf00      	nop

9000cac4 <osMutexAcquire>:
osStatus_t osMutexAcquire (osMutexId_t mutex_id, uint32_t timeout) {
  SemaphoreHandle_t hMutex;
  osStatus_t stat;
  uint32_t rmtx;

  hMutex = (SemaphoreHandle_t)((uint32_t)mutex_id & ~1U);
9000cac4:	f020 0201 	bic.w	r2, r0, #1

  rmtx = (uint32_t)mutex_id & 1U;
9000cac8:	f000 0301 	and.w	r3, r0, #1
9000cacc:	f3ef 8005 	mrs	r0, IPSR

  stat = osOK;

  if (IS_IRQ()) {
9000cad0:	b9a8      	cbnz	r0, 9000cafe <osMutexAcquire+0x3a>
    stat = osErrorISR;
  }
  else if (hMutex == NULL) {
9000cad2:	b1ba      	cbz	r2, 9000cb04 <osMutexAcquire+0x40>
    stat = osErrorParameter;
  }
  else {
    if (rmtx != 0U) {
      #if (configUSE_RECURSIVE_MUTEXES == 1)
      if (xSemaphoreTakeRecursive (hMutex, timeout) != pdPASS) {
9000cad4:	4610      	mov	r0, r2
osStatus_t osMutexAcquire (osMutexId_t mutex_id, uint32_t timeout) {
9000cad6:	b510      	push	{r4, lr}
9000cad8:	460c      	mov	r4, r1
    if (rmtx != 0U) {
9000cada:	b953      	cbnz	r3, 9000caf2 <osMutexAcquire+0x2e>
        }
      }
      #endif
    }
    else {
      if (xSemaphoreTake (hMutex, timeout) != pdPASS) {
9000cadc:	f001 fb0c 	bl	9000e0f8 <xQueueSemaphoreTake>
9000cae0:	2801      	cmp	r0, #1
9000cae2:	d00a      	beq.n	9000cafa <osMutexAcquire+0x36>
          stat = osErrorResource;
9000cae4:	2c00      	cmp	r4, #0
9000cae6:	bf14      	ite	ne
9000cae8:	f06f 0001 	mvnne.w	r0, #1
9000caec:	f06f 0002 	mvneq.w	r0, #2
      }
    }
  }

  return (stat);
}
9000caf0:	bd10      	pop	{r4, pc}
      if (xSemaphoreTakeRecursive (hMutex, timeout) != pdPASS) {
9000caf2:	f001 fc89 	bl	9000e408 <xQueueTakeMutexRecursive>
9000caf6:	2801      	cmp	r0, #1
9000caf8:	d1f4      	bne.n	9000cae4 <osMutexAcquire+0x20>
  stat = osOK;
9000cafa:	2000      	movs	r0, #0
}
9000cafc:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
9000cafe:	f06f 0005 	mvn.w	r0, #5
9000cb02:	4770      	bx	lr
    stat = osErrorParameter;
9000cb04:	f06f 0003 	mvn.w	r0, #3
}
9000cb08:	4770      	bx	lr
9000cb0a:	bf00      	nop

9000cb0c <osMutexRelease>:
9000cb0c:	f3ef 8205 	mrs	r2, IPSR

  rmtx = (uint32_t)mutex_id & 1U;

  stat = osOK;

  if (IS_IRQ()) {
9000cb10:	b9ba      	cbnz	r2, 9000cb42 <osMutexRelease+0x36>
osStatus_t osMutexRelease (osMutexId_t mutex_id) {
9000cb12:	b510      	push	{r4, lr}
9000cb14:	f020 0401 	bic.w	r4, r0, #1
    stat = osErrorISR;
  }
  else if (hMutex == NULL) {
9000cb18:	b1b4      	cbz	r4, 9000cb48 <osMutexRelease+0x3c>
    stat = osErrorParameter;
  }
  else {
    if (rmtx != 0U) {
9000cb1a:	f000 0301 	and.w	r3, r0, #1
9000cb1e:	b943      	cbnz	r3, 9000cb32 <osMutexRelease+0x26>
        stat = osErrorResource;
      }
      #endif
    }
    else {
      if (xSemaphoreGive (hMutex) != pdPASS) {
9000cb20:	461a      	mov	r2, r3
9000cb22:	4619      	mov	r1, r3
9000cb24:	4620      	mov	r0, r4
9000cb26:	f000 fe7d 	bl	9000d824 <xQueueGenericSend>
9000cb2a:	2801      	cmp	r0, #1
9000cb2c:	d106      	bne.n	9000cb3c <osMutexRelease+0x30>
  stat = osOK;
9000cb2e:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
9000cb30:	bd10      	pop	{r4, pc}
      if (xSemaphoreGiveRecursive (hMutex) != pdPASS) {
9000cb32:	4620      	mov	r0, r4
9000cb34:	f001 f848 	bl	9000dbc8 <xQueueGiveMutexRecursive>
9000cb38:	2801      	cmp	r0, #1
9000cb3a:	d0f8      	beq.n	9000cb2e <osMutexRelease+0x22>
        stat = osErrorResource;
9000cb3c:	f06f 0002 	mvn.w	r0, #2
}
9000cb40:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
9000cb42:	f06f 0005 	mvn.w	r0, #5
}
9000cb46:	4770      	bx	lr
    stat = osErrorParameter;
9000cb48:	f06f 0003 	mvn.w	r0, #3
}
9000cb4c:	bd10      	pop	{r4, pc}
9000cb4e:	bf00      	nop

9000cb50 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
9000cb50:	b5f0      	push	{r4, r5, r6, r7, lr}
9000cb52:	b083      	sub	sp, #12
9000cb54:	f3ef 8605 	mrs	r6, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
9000cb58:	b98e      	cbnz	r6, 9000cb7e <osSemaphoreNew+0x2e>
9000cb5a:	4605      	mov	r5, r0
9000cb5c:	b178      	cbz	r0, 9000cb7e <osSemaphoreNew+0x2e>
9000cb5e:	4288      	cmp	r0, r1
9000cb60:	460f      	mov	r7, r1
9000cb62:	d30c      	bcc.n	9000cb7e <osSemaphoreNew+0x2e>
    mem = -1;

    if (attr != NULL) {
9000cb64:	4614      	mov	r4, r2
9000cb66:	b182      	cbz	r2, 9000cb8a <osSemaphoreNew+0x3a>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
9000cb68:	e9d2 2302 	ldrd	r2, r3, [r2, #8]
9000cb6c:	b15a      	cbz	r2, 9000cb86 <osSemaphoreNew+0x36>
9000cb6e:	2b4f      	cmp	r3, #79	; 0x4f
9000cb70:	d905      	bls.n	9000cb7e <osSemaphoreNew+0x2e>
    else {
      mem = 0;
    }

    if (mem != -1) {
      if (max_count == 1U) {
9000cb72:	2801      	cmp	r0, #1
9000cb74:	d032      	beq.n	9000cbdc <osSemaphoreNew+0x8c>
        }
      }
      else {
        if (mem == 1) {
          #if (configSUPPORT_STATIC_ALLOCATION == 1)
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
9000cb76:	f000 fdad 	bl	9000d6d4 <xQueueCreateCountingSemaphoreStatic>
          #endif
        }
      }
      
      #if (configQUEUE_REGISTRY_SIZE > 0)
      if (hSemaphore != NULL) {
9000cb7a:	4605      	mov	r5, r0
9000cb7c:	b978      	cbnz	r0, 9000cb9e <osSemaphoreNew+0x4e>
  hSemaphore = NULL;
9000cb7e:	2500      	movs	r5, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
9000cb80:	4628      	mov	r0, r5
9000cb82:	b003      	add	sp, #12
9000cb84:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
9000cb86:	2b00      	cmp	r3, #0
9000cb88:	d1f9      	bne.n	9000cb7e <osSemaphoreNew+0x2e>
      if (max_count == 1U) {
9000cb8a:	2d01      	cmp	r5, #1
9000cb8c:	d00f      	beq.n	9000cbae <osSemaphoreNew+0x5e>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
9000cb8e:	4628      	mov	r0, r5
9000cb90:	4639      	mov	r1, r7
9000cb92:	f000 fe01 	bl	9000d798 <xQueueCreateCountingSemaphore>
9000cb96:	4605      	mov	r5, r0
      if (hSemaphore != NULL) {
9000cb98:	2d00      	cmp	r5, #0
9000cb9a:	d0f0      	beq.n	9000cb7e <osSemaphoreNew+0x2e>
        if (attr != NULL) {
9000cb9c:	b104      	cbz	r4, 9000cba0 <osSemaphoreNew+0x50>
          name = attr->name;
9000cb9e:	6824      	ldr	r4, [r4, #0]
        vQueueAddToRegistry (hSemaphore, name);
9000cba0:	4628      	mov	r0, r5
9000cba2:	4621      	mov	r1, r4
9000cba4:	f001 fd1a 	bl	9000e5dc <vQueueAddToRegistry>
}
9000cba8:	4628      	mov	r0, r5
9000cbaa:	b003      	add	sp, #12
9000cbac:	bdf0      	pop	{r4, r5, r6, r7, pc}
            hSemaphore = xSemaphoreCreateBinary();
9000cbae:	4628      	mov	r0, r5
9000cbb0:	2203      	movs	r2, #3
9000cbb2:	2100      	movs	r1, #0
9000cbb4:	f000 fd4c 	bl	9000d650 <xQueueGenericCreate>
9000cbb8:	4605      	mov	r5, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
9000cbba:	2d00      	cmp	r5, #0
9000cbbc:	d0df      	beq.n	9000cb7e <osSemaphoreNew+0x2e>
9000cbbe:	2f00      	cmp	r7, #0
9000cbc0:	d0ea      	beq.n	9000cb98 <osSemaphoreNew+0x48>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
9000cbc2:	2300      	movs	r3, #0
9000cbc4:	4628      	mov	r0, r5
9000cbc6:	461a      	mov	r2, r3
9000cbc8:	4619      	mov	r1, r3
9000cbca:	f000 fe2b 	bl	9000d824 <xQueueGenericSend>
9000cbce:	2801      	cmp	r0, #1
9000cbd0:	d0e4      	beq.n	9000cb9c <osSemaphoreNew+0x4c>
            vSemaphoreDelete (hSemaphore);
9000cbd2:	4628      	mov	r0, r5
            hSemaphore = NULL;
9000cbd4:	2500      	movs	r5, #0
            vSemaphoreDelete (hSemaphore);
9000cbd6:	f001 fcbb 	bl	9000e550 <vQueueDelete>
      if (hSemaphore != NULL) {
9000cbda:	e7d1      	b.n	9000cb80 <osSemaphoreNew+0x30>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
9000cbdc:	4613      	mov	r3, r2
9000cbde:	2203      	movs	r2, #3
9000cbe0:	4631      	mov	r1, r6
9000cbe2:	9200      	str	r2, [sp, #0]
9000cbe4:	4632      	mov	r2, r6
9000cbe6:	f000 fcc7 	bl	9000d578 <xQueueGenericCreateStatic>
9000cbea:	4605      	mov	r5, r0
9000cbec:	e7e5      	b.n	9000cbba <osSemaphoreNew+0x6a>
9000cbee:	bf00      	nop

9000cbf0 <osSemaphoreAcquire>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
9000cbf0:	b370      	cbz	r0, 9000cc50 <osSemaphoreAcquire+0x60>
osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
9000cbf2:	b510      	push	{r4, lr}
9000cbf4:	460c      	mov	r4, r1
9000cbf6:	b082      	sub	sp, #8
9000cbf8:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
9000cbfc:	b1c3      	cbz	r3, 9000cc30 <osSemaphoreAcquire+0x40>
    if (timeout != 0U) {
9000cbfe:	bb21      	cbnz	r1, 9000cc4a <osSemaphoreAcquire+0x5a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
9000cc00:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
9000cc02:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
9000cc04:	f001 fc20 	bl	9000e448 <xQueueReceiveFromISR>
9000cc08:	2801      	cmp	r0, #1
9000cc0a:	d11a      	bne.n	9000cc42 <osSemaphoreAcquire+0x52>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
9000cc0c:	9b01      	ldr	r3, [sp, #4]
9000cc0e:	b913      	cbnz	r3, 9000cc16 <osSemaphoreAcquire+0x26>
  stat = osOK;
9000cc10:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
9000cc12:	b002      	add	sp, #8
9000cc14:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
9000cc16:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000cc1a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000cc1e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000cc22:	f3bf 8f4f 	dsb	sy
9000cc26:	f3bf 8f6f 	isb	sy
  stat = osOK;
9000cc2a:	4620      	mov	r0, r4
}
9000cc2c:	b002      	add	sp, #8
9000cc2e:	bd10      	pop	{r4, pc}
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
9000cc30:	f001 fa62 	bl	9000e0f8 <xQueueSemaphoreTake>
9000cc34:	2801      	cmp	r0, #1
9000cc36:	d0eb      	beq.n	9000cc10 <osSemaphoreAcquire+0x20>
      if (timeout != 0U) {
9000cc38:	b11c      	cbz	r4, 9000cc42 <osSemaphoreAcquire+0x52>
        stat = osErrorTimeout;
9000cc3a:	f06f 0001 	mvn.w	r0, #1
}
9000cc3e:	b002      	add	sp, #8
9000cc40:	bd10      	pop	{r4, pc}
        stat = osErrorResource;
9000cc42:	f06f 0002 	mvn.w	r0, #2
}
9000cc46:	b002      	add	sp, #8
9000cc48:	bd10      	pop	{r4, pc}
    stat = osErrorParameter;
9000cc4a:	f06f 0003 	mvn.w	r0, #3
9000cc4e:	e7e0      	b.n	9000cc12 <osSemaphoreAcquire+0x22>
9000cc50:	f06f 0003 	mvn.w	r0, #3
}
9000cc54:	4770      	bx	lr
9000cc56:	bf00      	nop

9000cc58 <osSemaphoreRelease>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
9000cc58:	b330      	cbz	r0, 9000cca8 <osSemaphoreRelease+0x50>
osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
9000cc5a:	b510      	push	{r4, lr}
9000cc5c:	b082      	sub	sp, #8
9000cc5e:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
9000cc62:	b1ab      	cbz	r3, 9000cc90 <osSemaphoreRelease+0x38>
    yield = pdFALSE;
9000cc64:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
9000cc66:	a901      	add	r1, sp, #4
    yield = pdFALSE;
9000cc68:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
9000cc6a:	f001 f86f 	bl	9000dd4c <xQueueGiveFromISR>
9000cc6e:	2801      	cmp	r0, #1
9000cc70:	d117      	bne.n	9000cca2 <osSemaphoreRelease+0x4a>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
9000cc72:	9b01      	ldr	r3, [sp, #4]
9000cc74:	b193      	cbz	r3, 9000cc9c <osSemaphoreRelease+0x44>
9000cc76:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000cc7a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000cc7e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000cc82:	f3bf 8f4f 	dsb	sy
9000cc86:	f3bf 8f6f 	isb	sy
  stat = osOK;
9000cc8a:	4620      	mov	r0, r4
      stat = osErrorResource;
    }
  }

  return (stat);
}
9000cc8c:	b002      	add	sp, #8
9000cc8e:	bd10      	pop	{r4, pc}
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
9000cc90:	461a      	mov	r2, r3
9000cc92:	4619      	mov	r1, r3
9000cc94:	f000 fdc6 	bl	9000d824 <xQueueGenericSend>
9000cc98:	2801      	cmp	r0, #1
9000cc9a:	d102      	bne.n	9000cca2 <osSemaphoreRelease+0x4a>
  stat = osOK;
9000cc9c:	2000      	movs	r0, #0
}
9000cc9e:	b002      	add	sp, #8
9000cca0:	bd10      	pop	{r4, pc}
      stat = osErrorResource;
9000cca2:	f06f 0002 	mvn.w	r0, #2
9000cca6:	e7fa      	b.n	9000cc9e <osSemaphoreRelease+0x46>
    stat = osErrorParameter;
9000cca8:	f06f 0003 	mvn.w	r0, #3
}
9000ccac:	4770      	bx	lr
9000ccae:	bf00      	nop

9000ccb0 <osSemaphoreGetCount>:

uint32_t osSemaphoreGetCount (osSemaphoreId_t semaphore_id) {
  SemaphoreHandle_t hSemaphore = (SemaphoreHandle_t)semaphore_id;
  uint32_t count;

  if (hSemaphore == NULL) {
9000ccb0:	b130      	cbz	r0, 9000ccc0 <osSemaphoreGetCount+0x10>
9000ccb2:	f3ef 8305 	mrs	r3, IPSR
    count = 0U;
  }
  else if (IS_IRQ()) {
9000ccb6:	b10b      	cbz	r3, 9000ccbc <osSemaphoreGetCount+0xc>
    count = uxQueueMessagesWaitingFromISR (hSemaphore);
9000ccb8:	f001 bc3c 	b.w	9000e534 <uxQueueMessagesWaitingFromISR>
  } else {
    count = (uint32_t)uxSemaphoreGetCount (hSemaphore);
9000ccbc:	f001 bc24 	b.w	9000e508 <uxQueueMessagesWaiting>
  }

  return (count);
}
9000ccc0:	4770      	bx	lr
9000ccc2:	bf00      	nop

9000ccc4 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
9000ccc4:	b5f0      	push	{r4, r5, r6, r7, lr}
9000ccc6:	b083      	sub	sp, #12
9000ccc8:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
9000cccc:	b987      	cbnz	r7, 9000ccf0 <osMessageQueueNew+0x2c>
9000ccce:	4605      	mov	r5, r0
9000ccd0:	b170      	cbz	r0, 9000ccf0 <osMessageQueueNew+0x2c>
9000ccd2:	b169      	cbz	r1, 9000ccf0 <osMessageQueueNew+0x2c>
    mem = -1;

    if (attr != NULL) {
9000ccd4:	4614      	mov	r4, r2
9000ccd6:	b17a      	cbz	r2, 9000ccf8 <osMessageQueueNew+0x34>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
9000ccd8:	6893      	ldr	r3, [r2, #8]
9000ccda:	b1cb      	cbz	r3, 9000cd10 <osMessageQueueNew+0x4c>
9000ccdc:	68d2      	ldr	r2, [r2, #12]
9000ccde:	2a4f      	cmp	r2, #79	; 0x4f
9000cce0:	d906      	bls.n	9000ccf0 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
9000cce2:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
9000cce4:	b122      	cbz	r2, 9000ccf0 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
9000cce6:	fb01 f505 	mul.w	r5, r1, r5
9000ccea:	6966      	ldr	r6, [r4, #20]
9000ccec:	42ae      	cmp	r6, r5
9000ccee:	d21f      	bcs.n	9000cd30 <osMessageQueueNew+0x6c>
  hQueue = NULL;
9000ccf0:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
9000ccf2:	4628      	mov	r0, r5
9000ccf4:	b003      	add	sp, #12
9000ccf6:	bdf0      	pop	{r4, r5, r6, r7, pc}
          hQueue = xQueueCreate (msg_count, msg_size);
9000ccf8:	f000 fcaa 	bl	9000d650 <xQueueGenericCreate>
    if (hQueue != NULL) {
9000ccfc:	4605      	mov	r5, r0
9000ccfe:	2800      	cmp	r0, #0
9000cd00:	d0f6      	beq.n	9000ccf0 <osMessageQueueNew+0x2c>
      vQueueAddToRegistry (hQueue, name);
9000cd02:	4628      	mov	r0, r5
9000cd04:	4621      	mov	r1, r4
9000cd06:	f001 fc69 	bl	9000e5dc <vQueueAddToRegistry>
}
9000cd0a:	4628      	mov	r0, r5
9000cd0c:	b003      	add	sp, #12
9000cd0e:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
9000cd10:	68d3      	ldr	r3, [r2, #12]
9000cd12:	2b00      	cmp	r3, #0
9000cd14:	d1ec      	bne.n	9000ccf0 <osMessageQueueNew+0x2c>
9000cd16:	6913      	ldr	r3, [r2, #16]
9000cd18:	2b00      	cmp	r3, #0
9000cd1a:	d1e9      	bne.n	9000ccf0 <osMessageQueueNew+0x2c>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
9000cd1c:	6952      	ldr	r2, [r2, #20]
9000cd1e:	2a00      	cmp	r2, #0
9000cd20:	d1e6      	bne.n	9000ccf0 <osMessageQueueNew+0x2c>
          hQueue = xQueueCreate (msg_count, msg_size);
9000cd22:	f000 fc95 	bl	9000d650 <xQueueGenericCreate>
    if (hQueue != NULL) {
9000cd26:	4605      	mov	r5, r0
9000cd28:	2800      	cmp	r0, #0
9000cd2a:	d0e1      	beq.n	9000ccf0 <osMessageQueueNew+0x2c>
        name = attr->name;
9000cd2c:	6824      	ldr	r4, [r4, #0]
9000cd2e:	e7e8      	b.n	9000cd02 <osMessageQueueNew+0x3e>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
9000cd30:	9700      	str	r7, [sp, #0]
9000cd32:	f000 fc21 	bl	9000d578 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
9000cd36:	4605      	mov	r5, r0
9000cd38:	2800      	cmp	r0, #0
9000cd3a:	d1f7      	bne.n	9000cd2c <osMessageQueueNew+0x68>
9000cd3c:	e7d8      	b.n	9000ccf0 <osMessageQueueNew+0x2c>
9000cd3e:	bf00      	nop

9000cd40 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
9000cd40:	b530      	push	{r4, r5, lr}
9000cd42:	461c      	mov	r4, r3
9000cd44:	b083      	sub	sp, #12
9000cd46:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
9000cd4a:	b30b      	cbz	r3, 9000cd90 <osMessageQueuePut+0x50>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
9000cd4c:	3c00      	subs	r4, #0
9000cd4e:	bf18      	it	ne
9000cd50:	2401      	movne	r4, #1
9000cd52:	2900      	cmp	r1, #0
9000cd54:	bf08      	it	eq
9000cd56:	f044 0401 	orreq.w	r4, r4, #1
9000cd5a:	bb7c      	cbnz	r4, 9000cdbc <osMessageQueuePut+0x7c>
9000cd5c:	fab0 f480 	clz	r4, r0
9000cd60:	0964      	lsrs	r4, r4, #5
9000cd62:	b358      	cbz	r0, 9000cdbc <osMessageQueuePut+0x7c>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
9000cd64:	4623      	mov	r3, r4
9000cd66:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
9000cd68:	9401      	str	r4, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
9000cd6a:	f000 ff85 	bl	9000dc78 <xQueueGenericSendFromISR>
9000cd6e:	2801      	cmp	r0, #1
9000cd70:	d120      	bne.n	9000cdb4 <osMessageQueuePut+0x74>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
9000cd72:	9b01      	ldr	r3, [sp, #4]
9000cd74:	b1db      	cbz	r3, 9000cdae <osMessageQueuePut+0x6e>
9000cd76:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000cd7a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000cd7e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000cd82:	f3bf 8f4f 	dsb	sy
9000cd86:	f3bf 8f6f 	isb	sy
  stat = osOK;
9000cd8a:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
9000cd8c:	b003      	add	sp, #12
9000cd8e:	bd30      	pop	{r4, r5, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
9000cd90:	b1a0      	cbz	r0, 9000cdbc <osMessageQueuePut+0x7c>
9000cd92:	fab1 f381 	clz	r3, r1
9000cd96:	095b      	lsrs	r3, r3, #5
9000cd98:	b181      	cbz	r1, 9000cdbc <osMessageQueuePut+0x7c>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
9000cd9a:	4622      	mov	r2, r4
9000cd9c:	f000 fd42 	bl	9000d824 <xQueueGenericSend>
9000cda0:	2801      	cmp	r0, #1
9000cda2:	d004      	beq.n	9000cdae <osMessageQueuePut+0x6e>
        if (timeout != 0U) {
9000cda4:	b134      	cbz	r4, 9000cdb4 <osMessageQueuePut+0x74>
          stat = osErrorTimeout;
9000cda6:	f06f 0001 	mvn.w	r0, #1
}
9000cdaa:	b003      	add	sp, #12
9000cdac:	bd30      	pop	{r4, r5, pc}
  stat = osOK;
9000cdae:	2000      	movs	r0, #0
}
9000cdb0:	b003      	add	sp, #12
9000cdb2:	bd30      	pop	{r4, r5, pc}
          stat = osErrorResource;
9000cdb4:	f06f 0002 	mvn.w	r0, #2
}
9000cdb8:	b003      	add	sp, #12
9000cdba:	bd30      	pop	{r4, r5, pc}
      stat = osErrorParameter;
9000cdbc:	f06f 0003 	mvn.w	r0, #3
9000cdc0:	e7e4      	b.n	9000cd8c <osMessageQueuePut+0x4c>
9000cdc2:	bf00      	nop

9000cdc4 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
9000cdc4:	b530      	push	{r4, r5, lr}
9000cdc6:	461c      	mov	r4, r3
9000cdc8:	b083      	sub	sp, #12
9000cdca:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
9000cdce:	b303      	cbz	r3, 9000ce12 <osMessageQueueGet+0x4e>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
9000cdd0:	3c00      	subs	r4, #0
9000cdd2:	bf18      	it	ne
9000cdd4:	2401      	movne	r4, #1
9000cdd6:	2900      	cmp	r1, #0
9000cdd8:	bf08      	it	eq
9000cdda:	f044 0401 	orreq.w	r4, r4, #1
9000cdde:	bb5c      	cbnz	r4, 9000ce38 <osMessageQueueGet+0x74>
9000cde0:	fab0 f480 	clz	r4, r0
9000cde4:	0964      	lsrs	r4, r4, #5
9000cde6:	b338      	cbz	r0, 9000ce38 <osMessageQueueGet+0x74>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
9000cde8:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
9000cdea:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
9000cdec:	f001 fb2c 	bl	9000e448 <xQueueReceiveFromISR>
9000cdf0:	2801      	cmp	r0, #1
9000cdf2:	d11d      	bne.n	9000ce30 <osMessageQueueGet+0x6c>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
9000cdf4:	9b01      	ldr	r3, [sp, #4]
9000cdf6:	b1c3      	cbz	r3, 9000ce2a <osMessageQueueGet+0x66>
9000cdf8:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000cdfc:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000ce00:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000ce04:	f3bf 8f4f 	dsb	sy
9000ce08:	f3bf 8f6f 	isb	sy
  stat = osOK;
9000ce0c:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
9000ce0e:	b003      	add	sp, #12
9000ce10:	bd30      	pop	{r4, r5, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
9000ce12:	b188      	cbz	r0, 9000ce38 <osMessageQueueGet+0x74>
9000ce14:	b181      	cbz	r1, 9000ce38 <osMessageQueueGet+0x74>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
9000ce16:	4622      	mov	r2, r4
9000ce18:	f000 fff0 	bl	9000ddfc <xQueueReceive>
9000ce1c:	2801      	cmp	r0, #1
9000ce1e:	d004      	beq.n	9000ce2a <osMessageQueueGet+0x66>
        if (timeout != 0U) {
9000ce20:	b134      	cbz	r4, 9000ce30 <osMessageQueueGet+0x6c>
          stat = osErrorTimeout;
9000ce22:	f06f 0001 	mvn.w	r0, #1
}
9000ce26:	b003      	add	sp, #12
9000ce28:	bd30      	pop	{r4, r5, pc}
  stat = osOK;
9000ce2a:	2000      	movs	r0, #0
}
9000ce2c:	b003      	add	sp, #12
9000ce2e:	bd30      	pop	{r4, r5, pc}
          stat = osErrorResource;
9000ce30:	f06f 0002 	mvn.w	r0, #2
}
9000ce34:	b003      	add	sp, #12
9000ce36:	bd30      	pop	{r4, r5, pc}
      stat = osErrorParameter;
9000ce38:	f06f 0003 	mvn.w	r0, #3
9000ce3c:	e7e7      	b.n	9000ce0e <osMessageQueueGet+0x4a>
9000ce3e:	bf00      	nop

9000ce40 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
9000ce40:	4b04      	ldr	r3, [pc, #16]	; (9000ce54 <vApplicationGetIdleTaskMemory+0x14>)
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
9000ce42:	b410      	push	{r4}
  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
9000ce44:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
9000ce46:	2380      	movs	r3, #128	; 0x80
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
9000ce48:	4c03      	ldr	r4, [pc, #12]	; (9000ce58 <vApplicationGetIdleTaskMemory+0x18>)
9000ce4a:	600c      	str	r4, [r1, #0]
}
9000ce4c:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
9000ce50:	6013      	str	r3, [r2, #0]
}
9000ce52:	4770      	bx	lr
9000ce54:	2400a37c 	.word	0x2400a37c
9000ce58:	2400a17c 	.word	0x2400a17c

9000ce5c <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
9000ce5c:	4b05      	ldr	r3, [pc, #20]	; (9000ce74 <vApplicationGetTimerTaskMemory+0x18>)
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
9000ce5e:	b410      	push	{r4}
  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
9000ce60:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
9000ce62:	f44f 7380 	mov.w	r3, #256	; 0x100
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
9000ce66:	4c04      	ldr	r4, [pc, #16]	; (9000ce78 <vApplicationGetTimerTaskMemory+0x1c>)
9000ce68:	600c      	str	r4, [r1, #0]
}
9000ce6a:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
9000ce6e:	6013      	str	r3, [r2, #0]
}
9000ce70:	4770      	bx	lr
9000ce72:	bf00      	nop
9000ce74:	2400a7e0 	.word	0x2400a7e0
9000ce78:	2400a3e0 	.word	0x2400a3e0

9000ce7c <pvPortMalloc>:
static size_t xBlockAllocatedBit = 0;

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
9000ce7c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000ce80:	4605      	mov	r5, r0
BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
void *pvReturn = NULL;

	vTaskSuspendAll();
9000ce82:	f002 f8d9 	bl	9000f038 <vTaskSuspendAll>
	{
		/* If this is the first call to malloc then the heap will require
		initialisation to setup the list of free blocks. */
		if( pxEnd == NULL )
9000ce86:	4a54      	ldr	r2, [pc, #336]	; (9000cfd8 <pvPortMalloc+0x15c>)
9000ce88:	6816      	ldr	r6, [r2, #0]
9000ce8a:	2e00      	cmp	r6, #0
9000ce8c:	d06f      	beq.n	9000cf6e <pvPortMalloc+0xf2>

		/* Check the requested block size is not so large that the top bit is
		set.  The top bit of the block size member of the BlockLink_t structure
		is used to determine who owns the block - the application or the
		kernel, so it must be free. */
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
9000ce8e:	4b53      	ldr	r3, [pc, #332]	; (9000cfdc <pvPortMalloc+0x160>)
9000ce90:	681f      	ldr	r7, [r3, #0]
		{
			/* The wanted size is increased so it can contain a BlockLink_t
			structure in addition to the requested amount of bytes. */
			if( xWantedSize > 0 )
9000ce92:	423d      	tst	r5, r7
9000ce94:	d12e      	bne.n	9000cef4 <pvPortMalloc+0x78>
9000ce96:	b36d      	cbz	r5, 9000cef4 <pvPortMalloc+0x78>
			{
				xWantedSize += xHeapStructSize;
9000ce98:	f105 0408 	add.w	r4, r5, #8

				/* Ensure that blocks are always aligned to the required number
				of bytes. */
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
9000ce9c:	076d      	lsls	r5, r5, #29
9000ce9e:	d002      	beq.n	9000cea6 <pvPortMalloc+0x2a>
				{
					/* Byte alignment required. */
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
9000cea0:	f024 0407 	bic.w	r4, r4, #7
9000cea4:	3408      	adds	r4, #8
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}

			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
9000cea6:	b32c      	cbz	r4, 9000cef4 <pvPortMalloc+0x78>
9000cea8:	f8df c148 	ldr.w	ip, [pc, #328]	; 9000cff4 <pvPortMalloc+0x178>
9000ceac:	f8dc 5000 	ldr.w	r5, [ip]
9000ceb0:	42a5      	cmp	r5, r4
9000ceb2:	d31f      	bcc.n	9000cef4 <pvPortMalloc+0x78>
			{
				/* Traverse the list from the start	(lowest address) block until
				one	of adequate size is found. */
				pxPreviousBlock = &xStart;
				pxBlock = xStart.pxNextFreeBlock;
9000ceb4:	484a      	ldr	r0, [pc, #296]	; (9000cfe0 <pvPortMalloc+0x164>)
9000ceb6:	6803      	ldr	r3, [r0, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
9000ceb8:	e003      	b.n	9000cec2 <pvPortMalloc+0x46>
9000ceba:	681a      	ldr	r2, [r3, #0]
9000cebc:	b122      	cbz	r2, 9000cec8 <pvPortMalloc+0x4c>
9000cebe:	4618      	mov	r0, r3
9000cec0:	4613      	mov	r3, r2
9000cec2:	6859      	ldr	r1, [r3, #4]
9000cec4:	42a1      	cmp	r1, r4
9000cec6:	d3f8      	bcc.n	9000ceba <pvPortMalloc+0x3e>
					pxBlock = pxBlock->pxNextFreeBlock;
				}

				/* If the end marker was reached then a block of adequate size
				was	not found. */
				if( pxBlock != pxEnd )
9000cec8:	42b3      	cmp	r3, r6
9000ceca:	d013      	beq.n	9000cef4 <pvPortMalloc+0x78>
				{
					/* Return the memory space pointed to - jumping over the
					BlockLink_t structure at its start. */
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
9000cecc:	4698      	mov	r8, r3
					of the list of free blocks. */
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;

					/* If the block is larger than required it can be split into
					two. */
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
9000cece:	1b0a      	subs	r2, r1, r4
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
9000ced0:	f858 eb08 	ldr.w	lr, [r8], #8
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
9000ced4:	2a10      	cmp	r2, #16
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
9000ced6:	f8c0 e000 	str.w	lr, [r0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
9000ceda:	d929      	bls.n	9000cf30 <pvPortMalloc+0xb4>
					{
						/* This block is to be split into two.  Create a new
						block following the number of bytes requested. The void
						cast is used to prevent byte alignment warnings from the
						compiler. */
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
9000cedc:	1919      	adds	r1, r3, r4
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
9000cede:	0748      	lsls	r0, r1, #29
9000cee0:	d00f      	beq.n	9000cf02 <pvPortMalloc+0x86>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
9000cee2:	f04f 0350 	mov.w	r3, #80	; 0x50
9000cee6:	f383 8811 	msr	BASEPRI, r3
9000ceea:	f3bf 8f6f 	isb	sy
9000ceee:	f3bf 8f4f 	dsb	sy
9000cef2:	e7fe      	b.n	9000cef2 <pvPortMalloc+0x76>
			mtCOVERAGE_TEST_MARKER();
		}

		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
9000cef4:	f04f 0800 	mov.w	r8, #0
9000cef8:	f002 f8a6 	bl	9000f048 <xTaskResumeAll>
	}
	#endif

	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
	return pvReturn;
}
9000cefc:	4640      	mov	r0, r8
9000cefe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
9000cf02:	604a      	str	r2, [r1, #4]
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
9000cf04:	4a36      	ldr	r2, [pc, #216]	; (9000cfe0 <pvPortMalloc+0x164>)
						pxBlock->xBlockSize = xWantedSize;
9000cf06:	605c      	str	r4, [r3, #4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
9000cf08:	4614      	mov	r4, r2
9000cf0a:	6812      	ldr	r2, [r2, #0]
9000cf0c:	4291      	cmp	r1, r2
9000cf0e:	d8fb      	bhi.n	9000cf08 <pvPortMalloc+0x8c>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
9000cf10:	6860      	ldr	r0, [r4, #4]
9000cf12:	eb04 0e00 	add.w	lr, r4, r0
9000cf16:	4571      	cmp	r1, lr
9000cf18:	d04a      	beq.n	9000cfb0 <pvPortMalloc+0x134>
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000cf1a:	f8d1 e004 	ldr.w	lr, [r1, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000cf1e:	eb01 000e 	add.w	r0, r1, lr
9000cf22:	4282      	cmp	r2, r0
9000cf24:	d050      	beq.n	9000cfc8 <pvPortMalloc+0x14c>

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
9000cf26:	428c      	cmp	r4, r1
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000cf28:	600a      	str	r2, [r1, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
9000cf2a:	bf18      	it	ne
9000cf2c:	6021      	strne	r1, [r4, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000cf2e:	6859      	ldr	r1, [r3, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
9000cf30:	4a2c      	ldr	r2, [pc, #176]	; (9000cfe4 <pvPortMalloc+0x168>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000cf32:	1a6d      	subs	r5, r5, r1
					pxBlock->xBlockSize |= xBlockAllocatedBit;
9000cf34:	4339      	orrs	r1, r7
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
9000cf36:	6810      	ldr	r0, [r2, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000cf38:	f8cc 5000 	str.w	r5, [ip]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
9000cf3c:	4285      	cmp	r5, r0
					pxBlock->pxNextFreeBlock = NULL;
9000cf3e:	f04f 0000 	mov.w	r0, #0
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
9000cf42:	bf38      	it	cc
9000cf44:	6015      	strcc	r5, [r2, #0]
					xNumberOfSuccessfulAllocations++;
9000cf46:	4a28      	ldr	r2, [pc, #160]	; (9000cfe8 <pvPortMalloc+0x16c>)
					pxBlock->pxNextFreeBlock = NULL;
9000cf48:	e9c3 0100 	strd	r0, r1, [r3]
					xNumberOfSuccessfulAllocations++;
9000cf4c:	6813      	ldr	r3, [r2, #0]
9000cf4e:	3301      	adds	r3, #1
9000cf50:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
9000cf52:	f002 f879 	bl	9000f048 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
9000cf56:	f018 0f07 	tst.w	r8, #7
9000cf5a:	d0cf      	beq.n	9000cefc <pvPortMalloc+0x80>
9000cf5c:	f04f 0350 	mov.w	r3, #80	; 0x50
9000cf60:	f383 8811 	msr	BASEPRI, r3
9000cf64:	f3bf 8f6f 	isb	sy
9000cf68:	f3bf 8f4f 	dsb	sy
9000cf6c:	e7fe      	b.n	9000cf6c <pvPortMalloc+0xf0>
	uxAddress = ( size_t ) ucHeap;
9000cf6e:	4b1f      	ldr	r3, [pc, #124]	; (9000cfec <pvPortMalloc+0x170>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
9000cf70:	075e      	lsls	r6, r3, #29
9000cf72:	d117      	bne.n	9000cfa4 <pvPortMalloc+0x128>
9000cf74:	4e1e      	ldr	r6, [pc, #120]	; (9000cff0 <pvPortMalloc+0x174>)
9000cf76:	4619      	mov	r1, r3
	uxAddress -= xHeapStructSize;
9000cf78:	3e08      	subs	r6, #8
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
9000cf7a:	f04f 4700 	mov.w	r7, #2147483648	; 0x80000000
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
9000cf7e:	4818      	ldr	r0, [pc, #96]	; (9000cfe0 <pvPortMalloc+0x164>)
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
9000cf80:	f026 0607 	bic.w	r6, r6, #7
	pxEnd = ( void * ) uxAddress;
9000cf84:	6016      	str	r6, [r2, #0]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
9000cf86:	1af3      	subs	r3, r6, r3
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
9000cf88:	4a16      	ldr	r2, [pc, #88]	; (9000cfe4 <pvPortMalloc+0x168>)
9000cf8a:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
9000cf8c:	4a19      	ldr	r2, [pc, #100]	; (9000cff4 <pvPortMalloc+0x178>)
9000cf8e:	6013      	str	r3, [r2, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
9000cf90:	4a12      	ldr	r2, [pc, #72]	; (9000cfdc <pvPortMalloc+0x160>)
9000cf92:	6017      	str	r7, [r2, #0]
	xStart.xBlockSize = ( size_t ) 0;
9000cf94:	2200      	movs	r2, #0
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
9000cf96:	e9c0 1200 	strd	r1, r2, [r0]
	pxEnd->pxNextFreeBlock = NULL;
9000cf9a:	e9c6 2200 	strd	r2, r2, [r6]
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
9000cf9e:	e9c1 6300 	strd	r6, r3, [r1]
}
9000cfa2:	e776      	b.n	9000ce92 <pvPortMalloc+0x16>
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
9000cfa4:	3307      	adds	r3, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
9000cfa6:	4e12      	ldr	r6, [pc, #72]	; (9000cff0 <pvPortMalloc+0x174>)
	pucAlignedHeap = ( uint8_t * ) uxAddress;
9000cfa8:	f023 0107 	bic.w	r1, r3, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
9000cfac:	460b      	mov	r3, r1
9000cfae:	e7e3      	b.n	9000cf78 <pvPortMalloc+0xfc>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000cfb0:	6849      	ldr	r1, [r1, #4]
9000cfb2:	eb00 0e01 	add.w	lr, r0, r1
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000cfb6:	eb04 010e 	add.w	r1, r4, lr
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000cfba:	f8c4 e004 	str.w	lr, [r4, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000cfbe:	428a      	cmp	r2, r1
9000cfc0:	d001      	beq.n	9000cfc6 <pvPortMalloc+0x14a>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000cfc2:	6022      	str	r2, [r4, #0]
	if( pxIterator != pxBlockToInsert )
9000cfc4:	e7b3      	b.n	9000cf2e <pvPortMalloc+0xb2>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000cfc6:	4621      	mov	r1, r4
		if( pxIterator->pxNextFreeBlock != pxEnd )
9000cfc8:	42b2      	cmp	r2, r6
9000cfca:	d0ac      	beq.n	9000cf26 <pvPortMalloc+0xaa>
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000cfcc:	6850      	ldr	r0, [r2, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000cfce:	6812      	ldr	r2, [r2, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000cfd0:	4470      	add	r0, lr
9000cfd2:	6048      	str	r0, [r1, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000cfd4:	e7a7      	b.n	9000cf26 <pvPortMalloc+0xaa>
9000cfd6:	bf00      	nop
9000cfd8:	2400a840 	.word	0x2400a840
9000cfdc:	24022ee4 	.word	0x24022ee4
9000cfe0:	24022ef8 	.word	0x24022ef8
9000cfe4:	24022eec 	.word	0x24022eec
9000cfe8:	24022ef0 	.word	0x24022ef0
9000cfec:	2400a844 	.word	0x2400a844
9000cff0:	24022ee4 	.word	0x24022ee4
9000cff4:	24022ee8 	.word	0x24022ee8

9000cff8 <vPortFree>:
	if( pv != NULL )
9000cff8:	b1d0      	cbz	r0, 9000d030 <vPortFree+0x38>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
9000cffa:	4a2c      	ldr	r2, [pc, #176]	; (9000d0ac <vPortFree+0xb4>)
9000cffc:	f850 3c04 	ldr.w	r3, [r0, #-4]
9000d000:	6812      	ldr	r2, [r2, #0]
9000d002:	4213      	tst	r3, r2
9000d004:	d00b      	beq.n	9000d01e <vPortFree+0x26>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
9000d006:	f850 1c08 	ldr.w	r1, [r0, #-8]
9000d00a:	b191      	cbz	r1, 9000d032 <vPortFree+0x3a>
9000d00c:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d010:	f383 8811 	msr	BASEPRI, r3
9000d014:	f3bf 8f6f 	isb	sy
9000d018:	f3bf 8f4f 	dsb	sy
9000d01c:	e7fe      	b.n	9000d01c <vPortFree+0x24>
9000d01e:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d022:	f383 8811 	msr	BASEPRI, r3
9000d026:	f3bf 8f6f 	isb	sy
9000d02a:	f3bf 8f4f 	dsb	sy
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
9000d02e:	e7fe      	b.n	9000d02e <vPortFree+0x36>
9000d030:	4770      	bx	lr
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
9000d032:	ea23 0302 	bic.w	r3, r3, r2
{
9000d036:	b530      	push	{r4, r5, lr}
9000d038:	b083      	sub	sp, #12
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
9000d03a:	f840 3c04 	str.w	r3, [r0, #-4]
		puc -= xHeapStructSize;
9000d03e:	f1a0 0408 	sub.w	r4, r0, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
9000d042:	4d1b      	ldr	r5, [pc, #108]	; (9000d0b0 <vPortFree+0xb8>)
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
9000d044:	9001      	str	r0, [sp, #4]
				vTaskSuspendAll();
9000d046:	f001 fff7 	bl	9000f038 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
9000d04a:	9801      	ldr	r0, [sp, #4]
9000d04c:	682a      	ldr	r2, [r5, #0]
9000d04e:	f850 1c04 	ldr.w	r1, [r0, #-4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
9000d052:	4b18      	ldr	r3, [pc, #96]	; (9000d0b4 <vPortFree+0xbc>)
					xFreeBytesRemaining += pxLink->xBlockSize;
9000d054:	440a      	add	r2, r1
9000d056:	602a      	str	r2, [r5, #0]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
9000d058:	461a      	mov	r2, r3
9000d05a:	681b      	ldr	r3, [r3, #0]
9000d05c:	429c      	cmp	r4, r3
9000d05e:	d8fb      	bhi.n	9000d058 <vPortFree+0x60>
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
9000d060:	6850      	ldr	r0, [r2, #4]
9000d062:	eb02 0c00 	add.w	ip, r2, r0
9000d066:	4564      	cmp	r4, ip
9000d068:	d00f      	beq.n	9000d08a <vPortFree+0x92>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000d06a:	1860      	adds	r0, r4, r1
9000d06c:	4283      	cmp	r3, r0
9000d06e:	d014      	beq.n	9000d09a <vPortFree+0xa2>
	if( pxIterator != pxBlockToInsert )
9000d070:	42a2      	cmp	r2, r4
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000d072:	6023      	str	r3, [r4, #0]
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
9000d074:	bf18      	it	ne
9000d076:	6014      	strne	r4, [r2, #0]
					xNumberOfSuccessfulFrees++;
9000d078:	4a0f      	ldr	r2, [pc, #60]	; (9000d0b8 <vPortFree+0xc0>)
9000d07a:	6813      	ldr	r3, [r2, #0]
9000d07c:	3301      	adds	r3, #1
9000d07e:	6013      	str	r3, [r2, #0]
}
9000d080:	b003      	add	sp, #12
9000d082:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
				( void ) xTaskResumeAll();
9000d086:	f001 bfdf 	b.w	9000f048 <xTaskResumeAll>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000d08a:	4401      	add	r1, r0
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000d08c:	1850      	adds	r0, r2, r1
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000d08e:	6051      	str	r1, [r2, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000d090:	4283      	cmp	r3, r0
9000d092:	d001      	beq.n	9000d098 <vPortFree+0xa0>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000d094:	6013      	str	r3, [r2, #0]
	if( pxIterator != pxBlockToInsert )
9000d096:	e7ef      	b.n	9000d078 <vPortFree+0x80>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000d098:	4614      	mov	r4, r2
		if( pxIterator->pxNextFreeBlock != pxEnd )
9000d09a:	4808      	ldr	r0, [pc, #32]	; (9000d0bc <vPortFree+0xc4>)
9000d09c:	6800      	ldr	r0, [r0, #0]
9000d09e:	4283      	cmp	r3, r0
9000d0a0:	d0e6      	beq.n	9000d070 <vPortFree+0x78>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000d0a2:	e9d3 3000 	ldrd	r3, r0, [r3]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000d0a6:	4401      	add	r1, r0
9000d0a8:	6061      	str	r1, [r4, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000d0aa:	e7e1      	b.n	9000d070 <vPortFree+0x78>
9000d0ac:	24022ee4 	.word	0x24022ee4
9000d0b0:	24022ee8 	.word	0x24022ee8
9000d0b4:	24022ef8 	.word	0x24022ef8
9000d0b8:	24022ef4 	.word	0x24022ef4
9000d0bc:	2400a840 	.word	0x2400a840

9000d0c0 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
9000d0c0:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
9000d0c4:	f04f 31ff 	mov.w	r1, #4294967295
	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
9000d0c8:	2200      	movs	r2, #0
	pxList->xListEnd.xItemValue = portMAX_DELAY;
9000d0ca:	6081      	str	r1, [r0, #8]
	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
9000d0cc:	6002      	str	r2, [r0, #0]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
9000d0ce:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
9000d0d0:	e9c0 3303 	strd	r3, r3, [r0, #12]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
9000d0d4:	4770      	bx	lr
9000d0d6:	bf00      	nop

9000d0d8 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
9000d0d8:	2300      	movs	r3, #0
9000d0da:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
9000d0dc:	4770      	bx	lr
9000d0de:	bf00      	nop

9000d0e0 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
9000d0e0:	6843      	ldr	r3, [r0, #4]
	pxIndex->pxPrevious = pxNewListItem;

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
9000d0e2:	6802      	ldr	r2, [r0, #0]
{
9000d0e4:	b410      	push	{r4}
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
9000d0e6:	689c      	ldr	r4, [r3, #8]
	( pxList->uxNumberOfItems )++;
9000d0e8:	3201      	adds	r2, #1
	pxNewListItem->pxNext = pxIndex;
9000d0ea:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
9000d0ec:	608c      	str	r4, [r1, #8]
	pxIndex->pxPrevious->pxNext = pxNewListItem;
9000d0ee:	689c      	ldr	r4, [r3, #8]
9000d0f0:	6061      	str	r1, [r4, #4]
	pxIndex->pxPrevious = pxNewListItem;
9000d0f2:	6099      	str	r1, [r3, #8]
}
9000d0f4:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxNewListItem->pxContainer = pxList;
9000d0f8:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
9000d0fa:	6002      	str	r2, [r0, #0]
}
9000d0fc:	4770      	bx	lr
9000d0fe:	bf00      	nop

9000d100 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
9000d100:	b430      	push	{r4, r5}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
9000d102:	680d      	ldr	r5, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
9000d104:	1c6b      	adds	r3, r5, #1
9000d106:	d010      	beq.n	9000d12a <vListInsert+0x2a>
			4) Using a queue or semaphore before it has been initialised or
			   before the scheduler has been started (are interrupts firing
			   before vTaskStartScheduler() has been called?).
		**********************************************************************/

		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
9000d108:	f100 0308 	add.w	r3, r0, #8
9000d10c:	461c      	mov	r4, r3
9000d10e:	685b      	ldr	r3, [r3, #4]
9000d110:	681a      	ldr	r2, [r3, #0]
9000d112:	42aa      	cmp	r2, r5
9000d114:	d9fa      	bls.n	9000d10c <vListInsert+0xc>

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
9000d116:	6802      	ldr	r2, [r0, #0]
	pxNewListItem->pxNext = pxIterator->pxNext;
9000d118:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
9000d11a:	3201      	adds	r2, #1
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
9000d11c:	6099      	str	r1, [r3, #8]
	pxNewListItem->pxPrevious = pxIterator;
9000d11e:	608c      	str	r4, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
9000d120:	6061      	str	r1, [r4, #4]
	pxNewListItem->pxContainer = pxList;
9000d122:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
9000d124:	6002      	str	r2, [r0, #0]
}
9000d126:	bc30      	pop	{r4, r5}
9000d128:	4770      	bx	lr
		pxIterator = pxList->xListEnd.pxPrevious;
9000d12a:	6904      	ldr	r4, [r0, #16]
	pxNewListItem->pxNext = pxIterator->pxNext;
9000d12c:	6863      	ldr	r3, [r4, #4]
9000d12e:	e7f2      	b.n	9000d116 <vListInsert+0x16>

9000d130 <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
9000d130:	6903      	ldr	r3, [r0, #16]
{
9000d132:	b410      	push	{r4}

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
9000d134:	685c      	ldr	r4, [r3, #4]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
9000d136:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
	if( pxList->pxIndex == pxItemToRemove )
9000d13a:	4284      	cmp	r4, r0

	pxItemToRemove->pxContainer = NULL;
	( pxList->uxNumberOfItems )--;

	return pxList->uxNumberOfItems;
}
9000d13c:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
9000d140:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
9000d142:	6051      	str	r1, [r2, #4]
	pxItemToRemove->pxContainer = NULL;
9000d144:	f04f 0100 	mov.w	r1, #0
		pxList->pxIndex = pxItemToRemove->pxPrevious;
9000d148:	bf08      	it	eq
9000d14a:	605a      	streq	r2, [r3, #4]
	( pxList->uxNumberOfItems )--;
9000d14c:	681a      	ldr	r2, [r3, #0]
	pxItemToRemove->pxContainer = NULL;
9000d14e:	6101      	str	r1, [r0, #16]
	( pxList->uxNumberOfItems )--;
9000d150:	3a01      	subs	r2, #1
9000d152:	601a      	str	r2, [r3, #0]
	return pxList->uxNumberOfItems;
9000d154:	6818      	ldr	r0, [r3, #0]
}
9000d156:	4770      	bx	lr

9000d158 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
9000d158:	4808      	ldr	r0, [pc, #32]	; (9000d17c <prvPortStartFirstTask+0x24>)
9000d15a:	6800      	ldr	r0, [r0, #0]
9000d15c:	6800      	ldr	r0, [r0, #0]
9000d15e:	f380 8808 	msr	MSP, r0
9000d162:	f04f 0000 	mov.w	r0, #0
9000d166:	f380 8814 	msr	CONTROL, r0
9000d16a:	b662      	cpsie	i
9000d16c:	b661      	cpsie	f
9000d16e:	f3bf 8f4f 	dsb	sy
9000d172:	f3bf 8f6f 	isb	sy
9000d176:	df00      	svc	0
9000d178:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
9000d17a:	0000      	.short	0x0000
9000d17c:	e000ed08 	.word	0xe000ed08

9000d180 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
9000d180:	f8df 000c 	ldr.w	r0, [pc, #12]	; 9000d190 <vPortEnableVFP+0x10>
9000d184:	6801      	ldr	r1, [r0, #0]
9000d186:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
9000d18a:	6001      	str	r1, [r0, #0]
9000d18c:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
9000d18e:	0000      	.short	0x0000
9000d190:	e000ed88 	.word	0xe000ed88

9000d194 <prvTaskExitError>:
	configASSERT( uxCriticalNesting == ~0UL );
9000d194:	4b0e      	ldr	r3, [pc, #56]	; (9000d1d0 <prvTaskExitError+0x3c>)
{
9000d196:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
9000d198:	2200      	movs	r2, #0
	configASSERT( uxCriticalNesting == ~0UL );
9000d19a:	681b      	ldr	r3, [r3, #0]
volatile uint32_t ulDummy = 0;
9000d19c:	9201      	str	r2, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
9000d19e:	3301      	adds	r3, #1
9000d1a0:	d008      	beq.n	9000d1b4 <prvTaskExitError+0x20>
9000d1a2:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d1a6:	f383 8811 	msr	BASEPRI, r3
9000d1aa:	f3bf 8f6f 	isb	sy
9000d1ae:	f3bf 8f4f 	dsb	sy
9000d1b2:	e7fe      	b.n	9000d1b2 <prvTaskExitError+0x1e>
9000d1b4:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d1b8:	f383 8811 	msr	BASEPRI, r3
9000d1bc:	f3bf 8f6f 	isb	sy
9000d1c0:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
9000d1c4:	9b01      	ldr	r3, [sp, #4]
9000d1c6:	2b00      	cmp	r3, #0
9000d1c8:	d0fc      	beq.n	9000d1c4 <prvTaskExitError+0x30>
}
9000d1ca:	b002      	add	sp, #8
9000d1cc:	4770      	bx	lr
9000d1ce:	bf00      	nop
9000d1d0:	24000070 	.word	0x24000070

9000d1d4 <pxPortInitialiseStack>:
{
9000d1d4:	4603      	mov	r3, r0
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
9000d1d6:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
9000d1da:	4809      	ldr	r0, [pc, #36]	; (9000d200 <pxPortInitialiseStack+0x2c>)
{
9000d1dc:	b410      	push	{r4}
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
9000d1de:	f04f 7480 	mov.w	r4, #16777216	; 0x1000000
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
9000d1e2:	f843 0c0c 	str.w	r0, [r3, #-12]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
9000d1e6:	f843 2c20 	str.w	r2, [r3, #-32]
}
9000d1ea:	f1a3 0044 	sub.w	r0, r3, #68	; 0x44
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
9000d1ee:	e943 1402 	strd	r1, r4, [r3, #-8]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
9000d1f2:	f06f 0102 	mvn.w	r1, #2
}
9000d1f6:	f85d 4b04 	ldr.w	r4, [sp], #4
	*pxTopOfStack = portINITIAL_EXC_RETURN;
9000d1fa:	f843 1c24 	str.w	r1, [r3, #-36]
}
9000d1fe:	4770      	bx	lr
9000d200:	9000d195 	.word	0x9000d195
	...

9000d210 <SVC_Handler>:
	__asm volatile (
9000d210:	4b07      	ldr	r3, [pc, #28]	; (9000d230 <pxCurrentTCBConst2>)
9000d212:	6819      	ldr	r1, [r3, #0]
9000d214:	6808      	ldr	r0, [r1, #0]
9000d216:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000d21a:	f380 8809 	msr	PSP, r0
9000d21e:	f3bf 8f6f 	isb	sy
9000d222:	f04f 0000 	mov.w	r0, #0
9000d226:	f380 8811 	msr	BASEPRI, r0
9000d22a:	4770      	bx	lr
9000d22c:	f3af 8000 	nop.w

9000d230 <pxCurrentTCBConst2>:
9000d230:	24022f48 	.word	0x24022f48

9000d234 <vPortEnterCritical>:
9000d234:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d238:	f383 8811 	msr	BASEPRI, r3
9000d23c:	f3bf 8f6f 	isb	sy
9000d240:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
9000d244:	4a0b      	ldr	r2, [pc, #44]	; (9000d274 <vPortEnterCritical+0x40>)
9000d246:	6813      	ldr	r3, [r2, #0]
9000d248:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
9000d24a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
9000d24c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
9000d24e:	d000      	beq.n	9000d252 <vPortEnterCritical+0x1e>
}
9000d250:	4770      	bx	lr
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
9000d252:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000d256:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
9000d25a:	b2db      	uxtb	r3, r3
9000d25c:	2b00      	cmp	r3, #0
9000d25e:	d0f7      	beq.n	9000d250 <vPortEnterCritical+0x1c>
9000d260:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d264:	f383 8811 	msr	BASEPRI, r3
9000d268:	f3bf 8f6f 	isb	sy
9000d26c:	f3bf 8f4f 	dsb	sy
9000d270:	e7fe      	b.n	9000d270 <vPortEnterCritical+0x3c>
9000d272:	bf00      	nop
9000d274:	24000070 	.word	0x24000070

9000d278 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
9000d278:	4a08      	ldr	r2, [pc, #32]	; (9000d29c <vPortExitCritical+0x24>)
9000d27a:	6813      	ldr	r3, [r2, #0]
9000d27c:	b943      	cbnz	r3, 9000d290 <vPortExitCritical+0x18>
9000d27e:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d282:	f383 8811 	msr	BASEPRI, r3
9000d286:	f3bf 8f6f 	isb	sy
9000d28a:	f3bf 8f4f 	dsb	sy
9000d28e:	e7fe      	b.n	9000d28e <vPortExitCritical+0x16>
	uxCriticalNesting--;
9000d290:	3b01      	subs	r3, #1
9000d292:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
9000d294:	b90b      	cbnz	r3, 9000d29a <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
9000d296:	f383 8811 	msr	BASEPRI, r3
}
9000d29a:	4770      	bx	lr
9000d29c:	24000070 	.word	0x24000070

9000d2a0 <PendSV_Handler>:
	__asm volatile
9000d2a0:	f3ef 8009 	mrs	r0, PSP
9000d2a4:	f3bf 8f6f 	isb	sy
9000d2a8:	4b15      	ldr	r3, [pc, #84]	; (9000d300 <pxCurrentTCBConst>)
9000d2aa:	681a      	ldr	r2, [r3, #0]
9000d2ac:	f01e 0f10 	tst.w	lr, #16
9000d2b0:	bf08      	it	eq
9000d2b2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
9000d2b6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000d2ba:	6010      	str	r0, [r2, #0]
9000d2bc:	e92d 0009 	stmdb	sp!, {r0, r3}
9000d2c0:	f04f 0050 	mov.w	r0, #80	; 0x50
9000d2c4:	f380 8811 	msr	BASEPRI, r0
9000d2c8:	f3bf 8f4f 	dsb	sy
9000d2cc:	f3bf 8f6f 	isb	sy
9000d2d0:	f001 fef6 	bl	9000f0c0 <vTaskSwitchContext>
9000d2d4:	f04f 0000 	mov.w	r0, #0
9000d2d8:	f380 8811 	msr	BASEPRI, r0
9000d2dc:	bc09      	pop	{r0, r3}
9000d2de:	6819      	ldr	r1, [r3, #0]
9000d2e0:	6808      	ldr	r0, [r1, #0]
9000d2e2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000d2e6:	f01e 0f10 	tst.w	lr, #16
9000d2ea:	bf08      	it	eq
9000d2ec:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
9000d2f0:	f380 8809 	msr	PSP, r0
9000d2f4:	f3bf 8f6f 	isb	sy
9000d2f8:	4770      	bx	lr
9000d2fa:	bf00      	nop
9000d2fc:	f3af 8000 	nop.w

9000d300 <pxCurrentTCBConst>:
9000d300:	24022f48 	.word	0x24022f48

9000d304 <xPortSysTickHandler>:
{
9000d304:	b508      	push	{r3, lr}
	__asm volatile
9000d306:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d30a:	f383 8811 	msr	BASEPRI, r3
9000d30e:	f3bf 8f6f 	isb	sy
9000d312:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
9000d316:	f001 fead 	bl	9000f074 <xTaskIncrementTick>
9000d31a:	b128      	cbz	r0, 9000d328 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
9000d31c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000d320:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000d324:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
9000d328:	2300      	movs	r3, #0
9000d32a:	f383 8811 	msr	BASEPRI, r3
}
9000d32e:	bd08      	pop	{r3, pc}

9000d330 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
9000d330:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
9000d334:	2300      	movs	r3, #0
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9000d336:	4806      	ldr	r0, [pc, #24]	; (9000d350 <vPortSetupTimerInterrupt+0x20>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
9000d338:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9000d33a:	4906      	ldr	r1, [pc, #24]	; (9000d354 <vPortSetupTimerInterrupt+0x24>)
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
9000d33c:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9000d33e:	6803      	ldr	r3, [r0, #0]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
9000d340:	2007      	movs	r0, #7
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9000d342:	fba1 1303 	umull	r1, r3, r1, r3
9000d346:	099b      	lsrs	r3, r3, #6
9000d348:	3b01      	subs	r3, #1
9000d34a:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
9000d34c:	6110      	str	r0, [r2, #16]
}
9000d34e:	4770      	bx	lr
9000d350:	24000060 	.word	0x24000060
9000d354:	10624dd3 	.word	0x10624dd3

9000d358 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
9000d358:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000d35c:	4a48      	ldr	r2, [pc, #288]	; (9000d480 <xPortStartScheduler+0x128>)
9000d35e:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
9000d362:	4291      	cmp	r1, r2
9000d364:	d041      	beq.n	9000d3ea <xPortStartScheduler+0x92>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
9000d366:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
9000d36a:	4b46      	ldr	r3, [pc, #280]	; (9000d484 <xPortStartScheduler+0x12c>)
9000d36c:	429a      	cmp	r2, r3
9000d36e:	d033      	beq.n	9000d3d8 <xPortStartScheduler+0x80>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
9000d370:	4b45      	ldr	r3, [pc, #276]	; (9000d488 <xPortStartScheduler+0x130>)
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
9000d372:	20ff      	movs	r0, #255	; 0xff
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9000d374:	4945      	ldr	r1, [pc, #276]	; (9000d48c <xPortStartScheduler+0x134>)
{
9000d376:	b570      	push	{r4, r5, r6, lr}
		ulOriginalPriority = *pucFirstUserPriorityRegister;
9000d378:	781a      	ldrb	r2, [r3, #0]
{
9000d37a:	b084      	sub	sp, #16
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
9000d37c:	4c44      	ldr	r4, [pc, #272]	; (9000d490 <xPortStartScheduler+0x138>)
		ulOriginalPriority = *pucFirstUserPriorityRegister;
9000d37e:	b2d2      	uxtb	r2, r2
9000d380:	9202      	str	r2, [sp, #8]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
9000d382:	2207      	movs	r2, #7
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
9000d384:	7018      	strb	r0, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
9000d386:	781b      	ldrb	r3, [r3, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
9000d388:	6022      	str	r2, [r4, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
9000d38a:	b2db      	uxtb	r3, r3
9000d38c:	f88d 3007 	strb.w	r3, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9000d390:	f89d 3007 	ldrb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000d394:	f89d 2007 	ldrb.w	r2, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9000d398:	f003 0350 	and.w	r3, r3, #80	; 0x50
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000d39c:	0610      	lsls	r0, r2, #24
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9000d39e:	700b      	strb	r3, [r1, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000d3a0:	d511      	bpl.n	9000d3c6 <xPortStartScheduler+0x6e>
9000d3a2:	2206      	movs	r2, #6
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
9000d3a4:	f89d 3007 	ldrb.w	r3, [sp, #7]
9000d3a8:	4610      	mov	r0, r2
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000d3aa:	3a01      	subs	r2, #1
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
9000d3ac:	005b      	lsls	r3, r3, #1
9000d3ae:	b2db      	uxtb	r3, r3
9000d3b0:	f88d 3007 	strb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000d3b4:	f89d 1007 	ldrb.w	r1, [sp, #7]
9000d3b8:	0609      	lsls	r1, r1, #24
9000d3ba:	d4f3      	bmi.n	9000d3a4 <xPortStartScheduler+0x4c>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
9000d3bc:	2803      	cmp	r0, #3
9000d3be:	6020      	str	r0, [r4, #0]
9000d3c0:	f88d 3007 	strb.w	r3, [sp, #7]
9000d3c4:	d01a      	beq.n	9000d3fc <xPortStartScheduler+0xa4>
	__asm volatile
9000d3c6:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d3ca:	f383 8811 	msr	BASEPRI, r3
9000d3ce:	f3bf 8f6f 	isb	sy
9000d3d2:	f3bf 8f4f 	dsb	sy
9000d3d6:	e7fe      	b.n	9000d3d6 <xPortStartScheduler+0x7e>
9000d3d8:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d3dc:	f383 8811 	msr	BASEPRI, r3
9000d3e0:	f3bf 8f6f 	isb	sy
9000d3e4:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
9000d3e8:	e7fe      	b.n	9000d3e8 <xPortStartScheduler+0x90>
9000d3ea:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d3ee:	f383 8811 	msr	BASEPRI, r3
9000d3f2:	f3bf 8f6f 	isb	sy
9000d3f6:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
9000d3fa:	e7fe      	b.n	9000d3fa <xPortStartScheduler+0xa2>
		*pucFirstUserPriorityRegister = ulOriginalPriority;
9000d3fc:	9b02      	ldr	r3, [sp, #8]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
9000d3fe:	f04f 25e0 	mov.w	r5, #3758153728	; 0xe000e000
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
9000d402:	f44f 7140 	mov.w	r1, #768	; 0x300
		*pucFirstUserPriorityRegister = ulOriginalPriority;
9000d406:	4a20      	ldr	r2, [pc, #128]	; (9000d488 <xPortStartScheduler+0x130>)
9000d408:	b2db      	uxtb	r3, r3
	uxCriticalNesting = 0;
9000d40a:	4e22      	ldr	r6, [pc, #136]	; (9000d494 <xPortStartScheduler+0x13c>)
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
9000d40c:	6021      	str	r1, [r4, #0]
	uxCriticalNesting = 0;
9000d40e:	2400      	movs	r4, #0
		*pucFirstUserPriorityRegister = ulOriginalPriority;
9000d410:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
9000d412:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
9000d416:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
9000d41a:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
9000d41e:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
9000d422:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
9000d426:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	vPortSetupTimerInterrupt();
9000d42a:	f7ff ff81 	bl	9000d330 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
9000d42e:	6034      	str	r4, [r6, #0]
	vPortEnableVFP();
9000d430:	f7ff fea6 	bl	9000d180 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
9000d434:	f8d5 3f34 	ldr.w	r3, [r5, #3892]	; 0xf34
9000d438:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
9000d43c:	f8c5 3f34 	str.w	r3, [r5, #3892]	; 0xf34
	prvPortStartFirstTask();
9000d440:	f7ff fe8a 	bl	9000d158 <prvPortStartFirstTask>
	vTaskSwitchContext();
9000d444:	f001 fe3c 	bl	9000f0c0 <vTaskSwitchContext>
	configASSERT( uxCriticalNesting == ~0UL );
9000d448:	6833      	ldr	r3, [r6, #0]
volatile uint32_t ulDummy = 0;
9000d44a:	9403      	str	r4, [sp, #12]
	configASSERT( uxCriticalNesting == ~0UL );
9000d44c:	3301      	adds	r3, #1
9000d44e:	d008      	beq.n	9000d462 <xPortStartScheduler+0x10a>
9000d450:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d454:	f383 8811 	msr	BASEPRI, r3
9000d458:	f3bf 8f6f 	isb	sy
9000d45c:	f3bf 8f4f 	dsb	sy
9000d460:	e7fe      	b.n	9000d460 <xPortStartScheduler+0x108>
9000d462:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d466:	f383 8811 	msr	BASEPRI, r3
9000d46a:	f3bf 8f6f 	isb	sy
9000d46e:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
9000d472:	9b03      	ldr	r3, [sp, #12]
9000d474:	2b00      	cmp	r3, #0
9000d476:	d0fc      	beq.n	9000d472 <xPortStartScheduler+0x11a>
}
9000d478:	2000      	movs	r0, #0
9000d47a:	b004      	add	sp, #16
9000d47c:	bd70      	pop	{r4, r5, r6, pc}
9000d47e:	bf00      	nop
9000d480:	410fc271 	.word	0x410fc271
9000d484:	410fc270 	.word	0x410fc270
9000d488:	e000e400 	.word	0xe000e400
9000d48c:	24022f00 	.word	0x24022f00
9000d490:	24022f04 	.word	0x24022f04
9000d494:	24000070 	.word	0x24000070

9000d498 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
9000d498:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
9000d49c:	2b0f      	cmp	r3, #15
9000d49e:	d90e      	bls.n	9000d4be <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
9000d4a0:	4911      	ldr	r1, [pc, #68]	; (9000d4e8 <vPortValidateInterruptPriority+0x50>)
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
9000d4a2:	4a12      	ldr	r2, [pc, #72]	; (9000d4ec <vPortValidateInterruptPriority+0x54>)
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
9000d4a4:	5c5b      	ldrb	r3, [r3, r1]
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
9000d4a6:	7812      	ldrb	r2, [r2, #0]
9000d4a8:	429a      	cmp	r2, r3
9000d4aa:	d908      	bls.n	9000d4be <vPortValidateInterruptPriority+0x26>
9000d4ac:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d4b0:	f383 8811 	msr	BASEPRI, r3
9000d4b4:	f3bf 8f6f 	isb	sy
9000d4b8:	f3bf 8f4f 	dsb	sy
9000d4bc:	e7fe      	b.n	9000d4bc <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
9000d4be:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000d4c2:	4a0b      	ldr	r2, [pc, #44]	; (9000d4f0 <vPortValidateInterruptPriority+0x58>)
9000d4c4:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
9000d4c8:	6812      	ldr	r2, [r2, #0]
9000d4ca:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
9000d4ce:	4293      	cmp	r3, r2
9000d4d0:	d908      	bls.n	9000d4e4 <vPortValidateInterruptPriority+0x4c>
9000d4d2:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d4d6:	f383 8811 	msr	BASEPRI, r3
9000d4da:	f3bf 8f6f 	isb	sy
9000d4de:	f3bf 8f4f 	dsb	sy
9000d4e2:	e7fe      	b.n	9000d4e2 <vPortValidateInterruptPriority+0x4a>
	}
9000d4e4:	4770      	bx	lr
9000d4e6:	bf00      	nop
9000d4e8:	e000e3f0 	.word	0xe000e3f0
9000d4ec:	24022f00 	.word	0x24022f00
9000d4f0:	24022f04 	.word	0x24022f04

9000d4f4 <prvCopyDataToQueue>:

#endif /* configUSE_MUTEXES */
/*-----------------------------------------------------------*/

static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseType_t xPosition )
{
9000d4f4:	b570      	push	{r4, r5, r6, lr}
9000d4f6:	4615      	mov	r5, r2

	/* This function is called from a critical section. */

	uxMessagesWaiting = pxQueue->uxMessagesWaiting;

	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
9000d4f8:	6c02      	ldr	r2, [r0, #64]	; 0x40
{
9000d4fa:	4604      	mov	r4, r0
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000d4fc:	6b86      	ldr	r6, [r0, #56]	; 0x38
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
9000d4fe:	b92a      	cbnz	r2, 9000d50c <prvCopyDataToQueue+0x18>
	{
		#if ( configUSE_MUTEXES == 1 )
		{
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9000d500:	6805      	ldr	r5, [r0, #0]
9000d502:	b365      	cbz	r5, 9000d55e <prvCopyDataToQueue+0x6a>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000d504:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
9000d506:	4610      	mov	r0, r2
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000d508:	63a6      	str	r6, [r4, #56]	; 0x38

	return xReturn;
}
9000d50a:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
9000d50c:	b97d      	cbnz	r5, 9000d52e <prvCopyDataToQueue+0x3a>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
9000d50e:	6840      	ldr	r0, [r0, #4]
9000d510:	f019 f8d7 	bl	900266c2 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000d514:	6863      	ldr	r3, [r4, #4]
9000d516:	6c22      	ldr	r2, [r4, #64]	; 0x40
9000d518:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9000d51a:	68a2      	ldr	r2, [r4, #8]
9000d51c:	4293      	cmp	r3, r2
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000d51e:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9000d520:	d319      	bcc.n	9000d556 <prvCopyDataToQueue+0x62>
			pxQueue->pcWriteTo = pxQueue->pcHead;
9000d522:	6822      	ldr	r2, [r4, #0]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000d524:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
9000d526:	4628      	mov	r0, r5
			pxQueue->pcWriteTo = pxQueue->pcHead;
9000d528:	6062      	str	r2, [r4, #4]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000d52a:	63a6      	str	r6, [r4, #56]	; 0x38
}
9000d52c:	bd70      	pop	{r4, r5, r6, pc}
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
9000d52e:	68c0      	ldr	r0, [r0, #12]
9000d530:	f019 f8c7 	bl	900266c2 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
9000d534:	6c22      	ldr	r2, [r4, #64]	; 0x40
9000d536:	68e3      	ldr	r3, [r4, #12]
9000d538:	4251      	negs	r1, r2
9000d53a:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9000d53c:	6822      	ldr	r2, [r4, #0]
9000d53e:	4293      	cmp	r3, r2
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
9000d540:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9000d542:	d202      	bcs.n	9000d54a <prvCopyDataToQueue+0x56>
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
9000d544:	68a3      	ldr	r3, [r4, #8]
9000d546:	440b      	add	r3, r1
9000d548:	60e3      	str	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
9000d54a:	2d02      	cmp	r5, #2
9000d54c:	d00d      	beq.n	9000d56a <prvCopyDataToQueue+0x76>
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000d54e:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
9000d550:	2000      	movs	r0, #0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000d552:	63a6      	str	r6, [r4, #56]	; 0x38
}
9000d554:	bd70      	pop	{r4, r5, r6, pc}
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000d556:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
9000d558:	4628      	mov	r0, r5
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000d55a:	63a6      	str	r6, [r4, #56]	; 0x38
}
9000d55c:	bd70      	pop	{r4, r5, r6, pc}
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
9000d55e:	6880      	ldr	r0, [r0, #8]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000d560:	3601      	adds	r6, #1
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
9000d562:	f002 f803 	bl	9000f56c <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
9000d566:	60a5      	str	r5, [r4, #8]
9000d568:	e7ce      	b.n	9000d508 <prvCopyDataToQueue+0x14>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9000d56a:	2e01      	cmp	r6, #1
BaseType_t xReturn = pdFALSE;
9000d56c:	f04f 0000 	mov.w	r0, #0
9000d570:	bf38      	it	cc
9000d572:	2601      	movcc	r6, #1
9000d574:	e7c8      	b.n	9000d508 <prvCopyDataToQueue+0x14>
9000d576:	bf00      	nop

9000d578 <xQueueGenericCreateStatic>:
	{
9000d578:	b530      	push	{r4, r5, lr}
9000d57a:	b083      	sub	sp, #12
9000d57c:	f89d 4018 	ldrb.w	r4, [sp, #24]
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
9000d580:	b940      	cbnz	r0, 9000d594 <xQueueGenericCreateStatic+0x1c>
9000d582:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d586:	f383 8811 	msr	BASEPRI, r3
9000d58a:	f3bf 8f6f 	isb	sy
9000d58e:	f3bf 8f4f 	dsb	sy
9000d592:	e7fe      	b.n	9000d592 <xQueueGenericCreateStatic+0x1a>
		configASSERT( pxStaticQueue != NULL );
9000d594:	461d      	mov	r5, r3
9000d596:	b153      	cbz	r3, 9000d5ae <xQueueGenericCreateStatic+0x36>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
9000d598:	b30a      	cbz	r2, 9000d5de <xQueueGenericCreateStatic+0x66>
9000d59a:	b989      	cbnz	r1, 9000d5c0 <xQueueGenericCreateStatic+0x48>
9000d59c:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d5a0:	f383 8811 	msr	BASEPRI, r3
9000d5a4:	f3bf 8f6f 	isb	sy
9000d5a8:	f3bf 8f4f 	dsb	sy
9000d5ac:	e7fe      	b.n	9000d5ac <xQueueGenericCreateStatic+0x34>
9000d5ae:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d5b2:	f383 8811 	msr	BASEPRI, r3
9000d5b6:	f3bf 8f6f 	isb	sy
9000d5ba:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
9000d5be:	e7fe      	b.n	9000d5be <xQueueGenericCreateStatic+0x46>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
9000d5c0:	b16a      	cbz	r2, 9000d5de <xQueueGenericCreateStatic+0x66>
			volatile size_t xSize = sizeof( StaticQueue_t );
9000d5c2:	2350      	movs	r3, #80	; 0x50
9000d5c4:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
9000d5c6:	9b01      	ldr	r3, [sp, #4]
9000d5c8:	2b50      	cmp	r3, #80	; 0x50
9000d5ca:	d013      	beq.n	9000d5f4 <xQueueGenericCreateStatic+0x7c>
9000d5cc:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d5d0:	f383 8811 	msr	BASEPRI, r3
9000d5d4:	f3bf 8f6f 	isb	sy
9000d5d8:	f3bf 8f4f 	dsb	sy
9000d5dc:	e7fe      	b.n	9000d5dc <xQueueGenericCreateStatic+0x64>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
9000d5de:	2900      	cmp	r1, #0
9000d5e0:	d0ef      	beq.n	9000d5c2 <xQueueGenericCreateStatic+0x4a>
9000d5e2:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d5e6:	f383 8811 	msr	BASEPRI, r3
9000d5ea:	f3bf 8f6f 	isb	sy
9000d5ee:	f3bf 8f4f 	dsb	sy
9000d5f2:	e7fe      	b.n	9000d5f2 <xQueueGenericCreateStatic+0x7a>
	if( uxItemSize == ( UBaseType_t ) 0 )
9000d5f4:	2900      	cmp	r1, #0
9000d5f6:	bf08      	it	eq
9000d5f8:	462a      	moveq	r2, r5
	pxNewQueue->uxLength = uxQueueLength;
9000d5fa:	63e8      	str	r0, [r5, #60]	; 0x3c
	pxNewQueue->uxItemSize = uxItemSize;
9000d5fc:	6429      	str	r1, [r5, #64]	; 0x40
9000d5fe:	602a      	str	r2, [r5, #0]
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
9000d600:	9a01      	ldr	r2, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9000d602:	2201      	movs	r2, #1
9000d604:	f885 2046 	strb.w	r2, [r5, #70]	; 0x46
	taskENTER_CRITICAL();
9000d608:	f7ff fe14 	bl	9000d234 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000d60c:	6829      	ldr	r1, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000d60e:	2300      	movs	r3, #0
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000d610:	6069      	str	r1, [r5, #4]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000d612:	63ab      	str	r3, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000d614:	e9d5 200f 	ldrd	r2, r0, [r5, #60]	; 0x3c
9000d618:	fb00 f202 	mul.w	r2, r0, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000d61c:	1a10      	subs	r0, r2, r0
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000d61e:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000d620:	4401      	add	r1, r0
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000d622:	60aa      	str	r2, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
9000d624:	22ff      	movs	r2, #255	; 0xff
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000d626:	f105 0010 	add.w	r0, r5, #16
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000d62a:	60e9      	str	r1, [r5, #12]
		pxQueue->cRxLock = queueUNLOCKED;
9000d62c:	f885 2044 	strb.w	r2, [r5, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000d630:	f885 2045 	strb.w	r2, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000d634:	f7ff fd44 	bl	9000d0c0 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000d638:	f105 0024 	add.w	r0, r5, #36	; 0x24
9000d63c:	f7ff fd40 	bl	9000d0c0 <vListInitialise>
	taskEXIT_CRITICAL();
9000d640:	f7ff fe1a 	bl	9000d278 <vPortExitCritical>
	}
9000d644:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
9000d646:	f885 404c 	strb.w	r4, [r5, #76]	; 0x4c
	}
9000d64a:	b003      	add	sp, #12
9000d64c:	bd30      	pop	{r4, r5, pc}
9000d64e:	bf00      	nop

9000d650 <xQueueGenericCreate>:
	{
9000d650:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
9000d652:	b940      	cbnz	r0, 9000d666 <xQueueGenericCreate+0x16>
9000d654:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d658:	f383 8811 	msr	BASEPRI, r3
9000d65c:	f3bf 8f6f 	isb	sy
9000d660:	f3bf 8f4f 	dsb	sy
9000d664:	e7fe      	b.n	9000d664 <xQueueGenericCreate+0x14>
9000d666:	4605      	mov	r5, r0
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000d668:	fb01 f000 	mul.w	r0, r1, r0
9000d66c:	460e      	mov	r6, r1
9000d66e:	4617      	mov	r7, r2
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
9000d670:	3050      	adds	r0, #80	; 0x50
9000d672:	f7ff fc03 	bl	9000ce7c <pvPortMalloc>
		if( pxNewQueue != NULL )
9000d676:	4604      	mov	r4, r0
9000d678:	b340      	cbz	r0, 9000d6cc <xQueueGenericCreate+0x7c>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
9000d67a:	2300      	movs	r3, #0
9000d67c:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
9000d680:	b336      	cbz	r6, 9000d6d0 <xQueueGenericCreate+0x80>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000d682:	f100 0350 	add.w	r3, r0, #80	; 0x50
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
9000d686:	6023      	str	r3, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
9000d688:	e9c4 560f 	strd	r5, r6, [r4, #60]	; 0x3c
	taskENTER_CRITICAL();
9000d68c:	f7ff fdd2 	bl	9000d234 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000d690:	6822      	ldr	r2, [r4, #0]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000d692:	f104 0010 	add.w	r0, r4, #16
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000d696:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000d698:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	; 0x3c
9000d69c:	fb01 f303 	mul.w	r3, r1, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000d6a0:	1a59      	subs	r1, r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000d6a2:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000d6a4:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000d6a6:	60a3      	str	r3, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000d6a8:	2100      	movs	r1, #0
		pxQueue->cRxLock = queueUNLOCKED;
9000d6aa:	23ff      	movs	r3, #255	; 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000d6ac:	60e2      	str	r2, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000d6ae:	63a1      	str	r1, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
9000d6b0:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000d6b4:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000d6b8:	f7ff fd02 	bl	9000d0c0 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000d6bc:	f104 0024 	add.w	r0, r4, #36	; 0x24
9000d6c0:	f7ff fcfe 	bl	9000d0c0 <vListInitialise>
	taskEXIT_CRITICAL();
9000d6c4:	f7ff fdd8 	bl	9000d278 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
9000d6c8:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
9000d6cc:	4620      	mov	r0, r4
9000d6ce:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9000d6d0:	4603      	mov	r3, r0
9000d6d2:	e7d8      	b.n	9000d686 <xQueueGenericCreate+0x36>

9000d6d4 <xQueueCreateCountingSemaphoreStatic>:
		configASSERT( uxMaxCount != 0 );
9000d6d4:	b940      	cbnz	r0, 9000d6e8 <xQueueCreateCountingSemaphoreStatic+0x14>
9000d6d6:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d6da:	f383 8811 	msr	BASEPRI, r3
9000d6de:	f3bf 8f6f 	isb	sy
9000d6e2:	f3bf 8f4f 	dsb	sy
9000d6e6:	e7fe      	b.n	9000d6e6 <xQueueCreateCountingSemaphoreStatic+0x12>
		configASSERT( uxInitialCount <= uxMaxCount );
9000d6e8:	4288      	cmp	r0, r1
9000d6ea:	d208      	bcs.n	9000d6fe <xQueueCreateCountingSemaphoreStatic+0x2a>
9000d6ec:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d6f0:	f383 8811 	msr	BASEPRI, r3
9000d6f4:	f3bf 8f6f 	isb	sy
9000d6f8:	f3bf 8f4f 	dsb	sy
9000d6fc:	e7fe      	b.n	9000d6fc <xQueueCreateCountingSemaphoreStatic+0x28>
	{
9000d6fe:	b530      	push	{r4, r5, lr}
9000d700:	4615      	mov	r5, r2
9000d702:	b085      	sub	sp, #20
		configASSERT( pxStaticQueue != NULL );
9000d704:	2a00      	cmp	r2, #0
9000d706:	d03d      	beq.n	9000d784 <xQueueCreateCountingSemaphoreStatic+0xb0>
			volatile size_t xSize = sizeof( StaticQueue_t );
9000d708:	2350      	movs	r3, #80	; 0x50
9000d70a:	9303      	str	r3, [sp, #12]
			configASSERT( xSize == sizeof( Queue_t ) );
9000d70c:	9b03      	ldr	r3, [sp, #12]
9000d70e:	2b50      	cmp	r3, #80	; 0x50
9000d710:	d008      	beq.n	9000d724 <xQueueCreateCountingSemaphoreStatic+0x50>
9000d712:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d716:	f383 8811 	msr	BASEPRI, r3
9000d71a:	f3bf 8f6f 	isb	sy
9000d71e:	f3bf 8f4f 	dsb	sy
9000d722:	e7fe      	b.n	9000d722 <xQueueCreateCountingSemaphoreStatic+0x4e>
	pxNewQueue->uxItemSize = uxItemSize;
9000d724:	2400      	movs	r4, #0
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9000d726:	2301      	movs	r3, #1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
9000d728:	602a      	str	r2, [r5, #0]
	pxNewQueue->uxLength = uxQueueLength;
9000d72a:	63d0      	str	r0, [r2, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9000d72c:	f882 3046 	strb.w	r3, [r2, #70]	; 0x46
	pxNewQueue->uxItemSize = uxItemSize;
9000d730:	6414      	str	r4, [r2, #64]	; 0x40
9000d732:	9101      	str	r1, [sp, #4]
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
9000d734:	9b03      	ldr	r3, [sp, #12]
	taskENTER_CRITICAL();
9000d736:	f7ff fd7d 	bl	9000d234 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000d73a:	6828      	ldr	r0, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000d73c:	63ac      	str	r4, [r5, #56]	; 0x38
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000d73e:	6068      	str	r0, [r5, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000d740:	e9d5 3c0f 	ldrd	r3, ip, [r5, #60]	; 0x3c
9000d744:	fb03 f30c 	mul.w	r3, r3, ip
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000d748:	eba3 0c0c 	sub.w	ip, r3, ip
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000d74c:	4403      	add	r3, r0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000d74e:	4484      	add	ip, r0
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000d750:	60ab      	str	r3, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
9000d752:	23ff      	movs	r3, #255	; 0xff
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000d754:	f105 0010 	add.w	r0, r5, #16
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000d758:	f8c5 c00c 	str.w	ip, [r5, #12]
		pxQueue->cRxLock = queueUNLOCKED;
9000d75c:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000d760:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000d764:	f7ff fcac 	bl	9000d0c0 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000d768:	f105 0024 	add.w	r0, r5, #36	; 0x24
9000d76c:	f7ff fca8 	bl	9000d0c0 <vListInitialise>
	taskEXIT_CRITICAL();
9000d770:	f7ff fd82 	bl	9000d278 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
9000d774:	2302      	movs	r3, #2
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
9000d776:	9901      	ldr	r1, [sp, #4]
	}
9000d778:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
9000d77a:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
9000d77e:	63a9      	str	r1, [r5, #56]	; 0x38
	}
9000d780:	b005      	add	sp, #20
9000d782:	bd30      	pop	{r4, r5, pc}
9000d784:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d788:	f383 8811 	msr	BASEPRI, r3
9000d78c:	f3bf 8f6f 	isb	sy
9000d790:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
9000d794:	e7fe      	b.n	9000d794 <xQueueCreateCountingSemaphoreStatic+0xc0>
9000d796:	bf00      	nop

9000d798 <xQueueCreateCountingSemaphore>:
	{
9000d798:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxMaxCount != 0 );
9000d79a:	b940      	cbnz	r0, 9000d7ae <xQueueCreateCountingSemaphore+0x16>
9000d79c:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d7a0:	f383 8811 	msr	BASEPRI, r3
9000d7a4:	f3bf 8f6f 	isb	sy
9000d7a8:	f3bf 8f4f 	dsb	sy
9000d7ac:	e7fe      	b.n	9000d7ac <xQueueCreateCountingSemaphore+0x14>
		configASSERT( uxInitialCount <= uxMaxCount );
9000d7ae:	4288      	cmp	r0, r1
9000d7b0:	4604      	mov	r4, r0
9000d7b2:	460e      	mov	r6, r1
9000d7b4:	d208      	bcs.n	9000d7c8 <xQueueCreateCountingSemaphore+0x30>
9000d7b6:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d7ba:	f383 8811 	msr	BASEPRI, r3
9000d7be:	f3bf 8f6f 	isb	sy
9000d7c2:	f3bf 8f4f 	dsb	sy
9000d7c6:	e7fe      	b.n	9000d7c6 <xQueueCreateCountingSemaphore+0x2e>
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
9000d7c8:	2050      	movs	r0, #80	; 0x50
9000d7ca:	f7ff fb57 	bl	9000ce7c <pvPortMalloc>
		if( pxNewQueue != NULL )
9000d7ce:	4605      	mov	r5, r0
9000d7d0:	b330      	cbz	r0, 9000d820 <xQueueCreateCountingSemaphore+0x88>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
9000d7d2:	2700      	movs	r7, #0
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
9000d7d4:	6000      	str	r0, [r0, #0]
	pxNewQueue->uxLength = uxQueueLength;
9000d7d6:	63c4      	str	r4, [r0, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
9000d7d8:	f880 7046 	strb.w	r7, [r0, #70]	; 0x46
	pxNewQueue->uxItemSize = uxItemSize;
9000d7dc:	6407      	str	r7, [r0, #64]	; 0x40
	taskENTER_CRITICAL();
9000d7de:	f7ff fd29 	bl	9000d234 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000d7e2:	682a      	ldr	r2, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000d7e4:	63af      	str	r7, [r5, #56]	; 0x38
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000d7e6:	f105 0010 	add.w	r0, r5, #16
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000d7ea:	606a      	str	r2, [r5, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000d7ec:	e9d5 310f 	ldrd	r3, r1, [r5, #60]	; 0x3c
9000d7f0:	fb01 f303 	mul.w	r3, r1, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000d7f4:	1a59      	subs	r1, r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000d7f6:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000d7f8:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000d7fa:	60ab      	str	r3, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
9000d7fc:	23ff      	movs	r3, #255	; 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000d7fe:	60ea      	str	r2, [r5, #12]
		pxQueue->cRxLock = queueUNLOCKED;
9000d800:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000d804:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000d808:	f7ff fc5a 	bl	9000d0c0 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000d80c:	f105 0024 	add.w	r0, r5, #36	; 0x24
9000d810:	f7ff fc56 	bl	9000d0c0 <vListInitialise>
	taskEXIT_CRITICAL();
9000d814:	f7ff fd30 	bl	9000d278 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
9000d818:	2302      	movs	r3, #2
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
9000d81a:	63ae      	str	r6, [r5, #56]	; 0x38
		pxNewQueue->ucQueueType = ucQueueType;
9000d81c:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
	}
9000d820:	4628      	mov	r0, r5
9000d822:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

9000d824 <xQueueGenericSend>:
{
9000d824:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9000d828:	b084      	sub	sp, #16
9000d82a:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
9000d82c:	2800      	cmp	r0, #0
9000d82e:	f000 8103 	beq.w	9000da38 <xQueueGenericSend+0x214>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000d832:	4688      	mov	r8, r1
9000d834:	4604      	mov	r4, r0
9000d836:	461f      	mov	r7, r3
9000d838:	2900      	cmp	r1, #0
9000d83a:	f000 8097 	beq.w	9000d96c <xQueueGenericSend+0x148>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
9000d83e:	2f02      	cmp	r7, #2
9000d840:	d10b      	bne.n	9000d85a <xQueueGenericSend+0x36>
9000d842:	6be3      	ldr	r3, [r4, #60]	; 0x3c
9000d844:	2b01      	cmp	r3, #1
9000d846:	d008      	beq.n	9000d85a <xQueueGenericSend+0x36>
9000d848:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d84c:	f383 8811 	msr	BASEPRI, r3
9000d850:	f3bf 8f6f 	isb	sy
9000d854:	f3bf 8f4f 	dsb	sy
9000d858:	e7fe      	b.n	9000d858 <xQueueGenericSend+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000d85a:	f001 fe31 	bl	9000f4c0 <xTaskGetSchedulerState>
9000d85e:	2800      	cmp	r0, #0
9000d860:	f000 80f3 	beq.w	9000da4a <xQueueGenericSend+0x226>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000d864:	f1a7 0902 	sub.w	r9, r7, #2
9000d868:	2500      	movs	r5, #0
			{
				/* Tasks that are removed from the event list will get added to
				the pending ready list as the scheduler is still suspended. */
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
				{
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000d86a:	f104 0624 	add.w	r6, r4, #36	; 0x24
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000d86e:	fab9 f989 	clz	r9, r9
9000d872:	ea4f 1959 	mov.w	r9, r9, lsr #5
		taskENTER_CRITICAL();
9000d876:	f7ff fcdd 	bl	9000d234 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000d87a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
9000d87c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
9000d87e:	429a      	cmp	r2, r3
9000d880:	f0c0 80f0 	bcc.w	9000da64 <xQueueGenericSend+0x240>
9000d884:	f1b9 0f00 	cmp.w	r9, #0
9000d888:	f040 80ec 	bne.w	9000da64 <xQueueGenericSend+0x240>
				if( xTicksToWait == ( TickType_t ) 0 )
9000d88c:	9b01      	ldr	r3, [sp, #4]
9000d88e:	2b00      	cmp	r3, #0
9000d890:	f000 8101 	beq.w	9000da96 <xQueueGenericSend+0x272>
				else if( xEntryTimeSet == pdFALSE )
9000d894:	2d00      	cmp	r5, #0
9000d896:	f000 80cb 	beq.w	9000da30 <xQueueGenericSend+0x20c>
		taskEXIT_CRITICAL();
9000d89a:	f7ff fced 	bl	9000d278 <vPortExitCritical>
		vTaskSuspendAll();
9000d89e:	f001 fbcb 	bl	9000f038 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
9000d8a2:	f7ff fcc7 	bl	9000d234 <vPortEnterCritical>
9000d8a6:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000d8aa:	2bff      	cmp	r3, #255	; 0xff
9000d8ac:	d102      	bne.n	9000d8b4 <xQueueGenericSend+0x90>
9000d8ae:	2300      	movs	r3, #0
9000d8b0:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
9000d8b4:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000d8b8:	2bff      	cmp	r3, #255	; 0xff
9000d8ba:	d102      	bne.n	9000d8c2 <xQueueGenericSend+0x9e>
9000d8bc:	2300      	movs	r3, #0
9000d8be:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
9000d8c2:	f7ff fcd9 	bl	9000d278 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
9000d8c6:	a901      	add	r1, sp, #4
9000d8c8:	a802      	add	r0, sp, #8
9000d8ca:	f001 fda5 	bl	9000f418 <xTaskCheckForTimeOut>
9000d8ce:	2800      	cmp	r0, #0
9000d8d0:	f040 80e5 	bne.w	9000da9e <xQueueGenericSend+0x27a>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
9000d8d4:	f7ff fcae 	bl	9000d234 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
9000d8d8:	6ba2      	ldr	r2, [r4, #56]	; 0x38
9000d8da:	6be3      	ldr	r3, [r4, #60]	; 0x3c
9000d8dc:	429a      	cmp	r2, r3
9000d8de:	d052      	beq.n	9000d986 <xQueueGenericSend+0x162>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
9000d8e0:	f7ff fcca 	bl	9000d278 <vPortExitCritical>
	taskENTER_CRITICAL();
9000d8e4:	f7ff fca6 	bl	9000d234 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000d8e8:	f894 2045 	ldrb.w	r2, [r4, #69]	; 0x45
9000d8ec:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000d8ee:	2d00      	cmp	r5, #0
9000d8f0:	dc04      	bgt.n	9000d8fc <xQueueGenericSend+0xd8>
9000d8f2:	e011      	b.n	9000d918 <xQueueGenericSend+0xf4>
			--cTxLock;
9000d8f4:	1e6a      	subs	r2, r5, #1
9000d8f6:	b2d3      	uxtb	r3, r2
9000d8f8:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000d8fa:	b16b      	cbz	r3, 9000d918 <xQueueGenericSend+0xf4>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000d8fc:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000d8fe:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000d900:	b153      	cbz	r3, 9000d918 <xQueueGenericSend+0xf4>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000d902:	f001 fd33 	bl	9000f36c <xTaskRemoveFromEventList>
9000d906:	2800      	cmp	r0, #0
9000d908:	d0f4      	beq.n	9000d8f4 <xQueueGenericSend+0xd0>
						vTaskMissedYield();
9000d90a:	f001 fdcd 	bl	9000f4a8 <vTaskMissedYield>
			--cTxLock;
9000d90e:	1e6a      	subs	r2, r5, #1
9000d910:	b2d3      	uxtb	r3, r2
9000d912:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000d914:	2b00      	cmp	r3, #0
9000d916:	d1f1      	bne.n	9000d8fc <xQueueGenericSend+0xd8>
		pxQueue->cTxLock = queueUNLOCKED;
9000d918:	23ff      	movs	r3, #255	; 0xff
9000d91a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
9000d91e:	f7ff fcab 	bl	9000d278 <vPortExitCritical>
	taskENTER_CRITICAL();
9000d922:	f7ff fc87 	bl	9000d234 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000d926:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
9000d92a:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000d92c:	2d00      	cmp	r5, #0
9000d92e:	dd14      	ble.n	9000d95a <xQueueGenericSend+0x136>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000d930:	f104 0a10 	add.w	sl, r4, #16
9000d934:	e003      	b.n	9000d93e <xQueueGenericSend+0x11a>
				--cRxLock;
9000d936:	1e6a      	subs	r2, r5, #1
9000d938:	b2d3      	uxtb	r3, r2
9000d93a:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000d93c:	b16b      	cbz	r3, 9000d95a <xQueueGenericSend+0x136>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000d93e:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000d940:	4650      	mov	r0, sl
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000d942:	b153      	cbz	r3, 9000d95a <xQueueGenericSend+0x136>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000d944:	f001 fd12 	bl	9000f36c <xTaskRemoveFromEventList>
9000d948:	2800      	cmp	r0, #0
9000d94a:	d0f4      	beq.n	9000d936 <xQueueGenericSend+0x112>
					vTaskMissedYield();
9000d94c:	f001 fdac 	bl	9000f4a8 <vTaskMissedYield>
				--cRxLock;
9000d950:	1e6a      	subs	r2, r5, #1
9000d952:	b2d3      	uxtb	r3, r2
9000d954:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000d956:	2b00      	cmp	r3, #0
9000d958:	d1f1      	bne.n	9000d93e <xQueueGenericSend+0x11a>
		pxQueue->cRxLock = queueUNLOCKED;
9000d95a:	23ff      	movs	r3, #255	; 0xff
9000d95c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
9000d960:	f7ff fc8a 	bl	9000d278 <vPortExitCritical>
				( void ) xTaskResumeAll();
9000d964:	f001 fb70 	bl	9000f048 <xTaskResumeAll>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000d968:	2501      	movs	r5, #1
9000d96a:	e784      	b.n	9000d876 <xQueueGenericSend+0x52>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000d96c:	6c03      	ldr	r3, [r0, #64]	; 0x40
9000d96e:	2b00      	cmp	r3, #0
9000d970:	f43f af65 	beq.w	9000d83e <xQueueGenericSend+0x1a>
9000d974:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d978:	f383 8811 	msr	BASEPRI, r3
9000d97c:	f3bf 8f6f 	isb	sy
9000d980:	f3bf 8f4f 	dsb	sy
9000d984:	e7fe      	b.n	9000d984 <xQueueGenericSend+0x160>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
9000d986:	f104 0a10 	add.w	sl, r4, #16
	taskEXIT_CRITICAL();
9000d98a:	f7ff fc75 	bl	9000d278 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
9000d98e:	9901      	ldr	r1, [sp, #4]
9000d990:	4650      	mov	r0, sl
9000d992:	f001 fc5d 	bl	9000f250 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
9000d996:	f7ff fc4d 	bl	9000d234 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000d99a:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000d99e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000d9a0:	2d00      	cmp	r5, #0
9000d9a2:	dc04      	bgt.n	9000d9ae <xQueueGenericSend+0x18a>
9000d9a4:	e011      	b.n	9000d9ca <xQueueGenericSend+0x1a6>
			--cTxLock;
9000d9a6:	1e6b      	subs	r3, r5, #1
9000d9a8:	b2da      	uxtb	r2, r3
9000d9aa:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000d9ac:	b16a      	cbz	r2, 9000d9ca <xQueueGenericSend+0x1a6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000d9ae:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000d9b0:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000d9b2:	b153      	cbz	r3, 9000d9ca <xQueueGenericSend+0x1a6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000d9b4:	f001 fcda 	bl	9000f36c <xTaskRemoveFromEventList>
9000d9b8:	2800      	cmp	r0, #0
9000d9ba:	d0f4      	beq.n	9000d9a6 <xQueueGenericSend+0x182>
						vTaskMissedYield();
9000d9bc:	f001 fd74 	bl	9000f4a8 <vTaskMissedYield>
			--cTxLock;
9000d9c0:	1e6b      	subs	r3, r5, #1
9000d9c2:	b2da      	uxtb	r2, r3
9000d9c4:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000d9c6:	2a00      	cmp	r2, #0
9000d9c8:	d1f1      	bne.n	9000d9ae <xQueueGenericSend+0x18a>
		pxQueue->cTxLock = queueUNLOCKED;
9000d9ca:	23ff      	movs	r3, #255	; 0xff
9000d9cc:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
9000d9d0:	f7ff fc52 	bl	9000d278 <vPortExitCritical>
	taskENTER_CRITICAL();
9000d9d4:	f7ff fc2e 	bl	9000d234 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000d9d8:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000d9dc:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000d9de:	2d00      	cmp	r5, #0
9000d9e0:	dc04      	bgt.n	9000d9ec <xQueueGenericSend+0x1c8>
9000d9e2:	e011      	b.n	9000da08 <xQueueGenericSend+0x1e4>
				--cRxLock;
9000d9e4:	1e6b      	subs	r3, r5, #1
9000d9e6:	b2da      	uxtb	r2, r3
9000d9e8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000d9ea:	b16a      	cbz	r2, 9000da08 <xQueueGenericSend+0x1e4>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000d9ec:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000d9ee:	4650      	mov	r0, sl
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000d9f0:	b153      	cbz	r3, 9000da08 <xQueueGenericSend+0x1e4>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000d9f2:	f001 fcbb 	bl	9000f36c <xTaskRemoveFromEventList>
9000d9f6:	2800      	cmp	r0, #0
9000d9f8:	d0f4      	beq.n	9000d9e4 <xQueueGenericSend+0x1c0>
					vTaskMissedYield();
9000d9fa:	f001 fd55 	bl	9000f4a8 <vTaskMissedYield>
				--cRxLock;
9000d9fe:	1e6b      	subs	r3, r5, #1
9000da00:	b2da      	uxtb	r2, r3
9000da02:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000da04:	2a00      	cmp	r2, #0
9000da06:	d1f1      	bne.n	9000d9ec <xQueueGenericSend+0x1c8>
		pxQueue->cRxLock = queueUNLOCKED;
9000da08:	23ff      	movs	r3, #255	; 0xff
9000da0a:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
9000da0e:	f7ff fc33 	bl	9000d278 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
9000da12:	f001 fb19 	bl	9000f048 <xTaskResumeAll>
9000da16:	2800      	cmp	r0, #0
9000da18:	d1a6      	bne.n	9000d968 <xQueueGenericSend+0x144>
					portYIELD_WITHIN_API();
9000da1a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000da1e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000da22:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000da26:	f3bf 8f4f 	dsb	sy
9000da2a:	f3bf 8f6f 	isb	sy
9000da2e:	e79b      	b.n	9000d968 <xQueueGenericSend+0x144>
					vTaskInternalSetTimeOutState( &xTimeOut );
9000da30:	a802      	add	r0, sp, #8
9000da32:	f001 fce5 	bl	9000f400 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
9000da36:	e730      	b.n	9000d89a <xQueueGenericSend+0x76>
9000da38:	f04f 0350 	mov.w	r3, #80	; 0x50
9000da3c:	f383 8811 	msr	BASEPRI, r3
9000da40:	f3bf 8f6f 	isb	sy
9000da44:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000da48:	e7fe      	b.n	9000da48 <xQueueGenericSend+0x224>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000da4a:	9b01      	ldr	r3, [sp, #4]
9000da4c:	2b00      	cmp	r3, #0
9000da4e:	f43f af09 	beq.w	9000d864 <xQueueGenericSend+0x40>
9000da52:	f04f 0350 	mov.w	r3, #80	; 0x50
9000da56:	f383 8811 	msr	BASEPRI, r3
9000da5a:	f3bf 8f6f 	isb	sy
9000da5e:	f3bf 8f4f 	dsb	sy
9000da62:	e7fe      	b.n	9000da62 <xQueueGenericSend+0x23e>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
9000da64:	463a      	mov	r2, r7
9000da66:	4641      	mov	r1, r8
9000da68:	4620      	mov	r0, r4
9000da6a:	f7ff fd43 	bl	9000d4f4 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000da6e:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000da70:	2b00      	cmp	r3, #0
9000da72:	d152      	bne.n	9000db1a <xQueueGenericSend+0x2f6>
					else if( xYieldRequired != pdFALSE )
9000da74:	b148      	cbz	r0, 9000da8a <xQueueGenericSend+0x266>
						queueYIELD_IF_USING_PREEMPTION();
9000da76:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000da7a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000da7e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000da82:	f3bf 8f4f 	dsb	sy
9000da86:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
9000da8a:	f7ff fbf5 	bl	9000d278 <vPortExitCritical>
				return pdPASS;
9000da8e:	2001      	movs	r0, #1
}
9000da90:	b004      	add	sp, #16
9000da92:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
					taskEXIT_CRITICAL();
9000da96:	f7ff fbef 	bl	9000d278 <vPortExitCritical>
					return errQUEUE_FULL;
9000da9a:	4648      	mov	r0, r9
9000da9c:	e7f8      	b.n	9000da90 <xQueueGenericSend+0x26c>
	taskENTER_CRITICAL();
9000da9e:	f7ff fbc9 	bl	9000d234 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000daa2:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000daa6:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000daa8:	2d00      	cmp	r5, #0
9000daaa:	dd10      	ble.n	9000dace <xQueueGenericSend+0x2aa>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000daac:	f104 0624 	add.w	r6, r4, #36	; 0x24
9000dab0:	e003      	b.n	9000daba <xQueueGenericSend+0x296>
			--cTxLock;
9000dab2:	1e6b      	subs	r3, r5, #1
9000dab4:	b2da      	uxtb	r2, r3
9000dab6:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000dab8:	b14a      	cbz	r2, 9000dace <xQueueGenericSend+0x2aa>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000daba:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000dabc:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000dabe:	b133      	cbz	r3, 9000dace <xQueueGenericSend+0x2aa>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000dac0:	f001 fc54 	bl	9000f36c <xTaskRemoveFromEventList>
9000dac4:	2800      	cmp	r0, #0
9000dac6:	d0f4      	beq.n	9000dab2 <xQueueGenericSend+0x28e>
						vTaskMissedYield();
9000dac8:	f001 fcee 	bl	9000f4a8 <vTaskMissedYield>
9000dacc:	e7f1      	b.n	9000dab2 <xQueueGenericSend+0x28e>
		pxQueue->cTxLock = queueUNLOCKED;
9000dace:	23ff      	movs	r3, #255	; 0xff
9000dad0:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
9000dad4:	f7ff fbd0 	bl	9000d278 <vPortExitCritical>
	taskENTER_CRITICAL();
9000dad8:	f7ff fbac 	bl	9000d234 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000dadc:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000dae0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000dae2:	2d00      	cmp	r5, #0
9000dae4:	dd10      	ble.n	9000db08 <xQueueGenericSend+0x2e4>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000dae6:	f104 0610 	add.w	r6, r4, #16
9000daea:	e003      	b.n	9000daf4 <xQueueGenericSend+0x2d0>
				--cRxLock;
9000daec:	1e6b      	subs	r3, r5, #1
9000daee:	b2da      	uxtb	r2, r3
9000daf0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000daf2:	b14a      	cbz	r2, 9000db08 <xQueueGenericSend+0x2e4>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000daf4:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000daf6:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000daf8:	b133      	cbz	r3, 9000db08 <xQueueGenericSend+0x2e4>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000dafa:	f001 fc37 	bl	9000f36c <xTaskRemoveFromEventList>
9000dafe:	2800      	cmp	r0, #0
9000db00:	d0f4      	beq.n	9000daec <xQueueGenericSend+0x2c8>
					vTaskMissedYield();
9000db02:	f001 fcd1 	bl	9000f4a8 <vTaskMissedYield>
9000db06:	e7f1      	b.n	9000daec <xQueueGenericSend+0x2c8>
		pxQueue->cRxLock = queueUNLOCKED;
9000db08:	23ff      	movs	r3, #255	; 0xff
9000db0a:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
9000db0e:	f7ff fbb3 	bl	9000d278 <vPortExitCritical>
			( void ) xTaskResumeAll();
9000db12:	f001 fa99 	bl	9000f048 <xTaskResumeAll>
			return errQUEUE_FULL;
9000db16:	2000      	movs	r0, #0
9000db18:	e7ba      	b.n	9000da90 <xQueueGenericSend+0x26c>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000db1a:	f104 0024 	add.w	r0, r4, #36	; 0x24
9000db1e:	f001 fc25 	bl	9000f36c <xTaskRemoveFromEventList>
9000db22:	2800      	cmp	r0, #0
9000db24:	d0b1      	beq.n	9000da8a <xQueueGenericSend+0x266>
9000db26:	e7a6      	b.n	9000da76 <xQueueGenericSend+0x252>

9000db28 <xQueueCreateMutexStatic>:
		configASSERT( pxStaticQueue != NULL );
9000db28:	b179      	cbz	r1, 9000db4a <xQueueCreateMutexStatic+0x22>
			volatile size_t xSize = sizeof( StaticQueue_t );
9000db2a:	2350      	movs	r3, #80	; 0x50
	{
9000db2c:	b570      	push	{r4, r5, r6, lr}
9000db2e:	b082      	sub	sp, #8
			volatile size_t xSize = sizeof( StaticQueue_t );
9000db30:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
9000db32:	9b01      	ldr	r3, [sp, #4]
9000db34:	2b50      	cmp	r3, #80	; 0x50
9000db36:	d011      	beq.n	9000db5c <xQueueCreateMutexStatic+0x34>
9000db38:	f04f 0350 	mov.w	r3, #80	; 0x50
9000db3c:	f383 8811 	msr	BASEPRI, r3
9000db40:	f3bf 8f6f 	isb	sy
9000db44:	f3bf 8f4f 	dsb	sy
9000db48:	e7fe      	b.n	9000db48 <xQueueCreateMutexStatic+0x20>
9000db4a:	f04f 0350 	mov.w	r3, #80	; 0x50
9000db4e:	f383 8811 	msr	BASEPRI, r3
9000db52:	f3bf 8f6f 	isb	sy
9000db56:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
9000db5a:	e7fe      	b.n	9000db5a <xQueueCreateMutexStatic+0x32>
	pxNewQueue->uxItemSize = uxItemSize;
9000db5c:	2600      	movs	r6, #0
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9000db5e:	2301      	movs	r3, #1
9000db60:	460c      	mov	r4, r1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
9000db62:	6009      	str	r1, [r1, #0]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9000db64:	f881 3046 	strb.w	r3, [r1, #70]	; 0x46
9000db68:	4605      	mov	r5, r0
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
9000db6a:	9a01      	ldr	r2, [sp, #4]
	pxNewQueue->uxItemSize = uxItemSize;
9000db6c:	e9c1 360f 	strd	r3, r6, [r1, #60]	; 0x3c
	taskENTER_CRITICAL();
9000db70:	f7ff fb60 	bl	9000d234 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000db74:	6821      	ldr	r1, [r4, #0]
		pxQueue->cRxLock = queueUNLOCKED;
9000db76:	23ff      	movs	r3, #255	; 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000db78:	63a6      	str	r6, [r4, #56]	; 0x38
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000db7a:	6061      	str	r1, [r4, #4]
		pxQueue->cRxLock = queueUNLOCKED;
9000db7c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000db80:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000db84:	e9d4 200f 	ldrd	r2, r0, [r4, #60]	; 0x3c
9000db88:	fb00 f202 	mul.w	r2, r0, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000db8c:	1a10      	subs	r0, r2, r0
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000db8e:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000db90:	4401      	add	r1, r0
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000db92:	f104 0010 	add.w	r0, r4, #16
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000db96:	e9c4 2102 	strd	r2, r1, [r4, #8]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000db9a:	f7ff fa91 	bl	9000d0c0 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000db9e:	f104 0024 	add.w	r0, r4, #36	; 0x24
9000dba2:	f7ff fa8d 	bl	9000d0c0 <vListInitialise>
	taskEXIT_CRITICAL();
9000dba6:	f7ff fb67 	bl	9000d278 <vPortExitCritical>
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
9000dbaa:	4633      	mov	r3, r6
9000dbac:	4632      	mov	r2, r6
9000dbae:	4631      	mov	r1, r6
9000dbb0:	4620      	mov	r0, r4
		pxNewQueue->ucQueueType = ucQueueType;
9000dbb2:	f884 504c 	strb.w	r5, [r4, #76]	; 0x4c
			pxNewQueue->u.xSemaphore.xMutexHolder = NULL;
9000dbb6:	60a6      	str	r6, [r4, #8]
			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
9000dbb8:	6026      	str	r6, [r4, #0]
			pxNewQueue->u.xSemaphore.uxRecursiveCallCount = 0;
9000dbba:	60e6      	str	r6, [r4, #12]
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
9000dbbc:	f7ff fe32 	bl	9000d824 <xQueueGenericSend>
	}
9000dbc0:	4620      	mov	r0, r4
9000dbc2:	b002      	add	sp, #8
9000dbc4:	bd70      	pop	{r4, r5, r6, pc}
9000dbc6:	bf00      	nop

9000dbc8 <xQueueGiveMutexRecursive>:
	{
9000dbc8:	b538      	push	{r3, r4, r5, lr}
		configASSERT( pxMutex );
9000dbca:	b138      	cbz	r0, 9000dbdc <xQueueGiveMutexRecursive+0x14>
		if( pxMutex->u.xSemaphore.xMutexHolder == xTaskGetCurrentTaskHandle() )
9000dbcc:	6885      	ldr	r5, [r0, #8]
9000dbce:	4604      	mov	r4, r0
9000dbd0:	f001 fc70 	bl	9000f4b4 <xTaskGetCurrentTaskHandle>
9000dbd4:	4285      	cmp	r5, r0
9000dbd6:	d00a      	beq.n	9000dbee <xQueueGiveMutexRecursive+0x26>
			xReturn = pdFAIL;
9000dbd8:	2000      	movs	r0, #0
	}
9000dbda:	bd38      	pop	{r3, r4, r5, pc}
9000dbdc:	f04f 0350 	mov.w	r3, #80	; 0x50
9000dbe0:	f383 8811 	msr	BASEPRI, r3
9000dbe4:	f3bf 8f6f 	isb	sy
9000dbe8:	f3bf 8f4f 	dsb	sy
		configASSERT( pxMutex );
9000dbec:	e7fe      	b.n	9000dbec <xQueueGiveMutexRecursive+0x24>
			( pxMutex->u.xSemaphore.uxRecursiveCallCount )--;
9000dbee:	68e3      	ldr	r3, [r4, #12]
9000dbf0:	3b01      	subs	r3, #1
9000dbf2:	60e3      	str	r3, [r4, #12]
			if( pxMutex->u.xSemaphore.uxRecursiveCallCount == ( UBaseType_t ) 0 )
9000dbf4:	b10b      	cbz	r3, 9000dbfa <xQueueGiveMutexRecursive+0x32>
			xReturn = pdPASS;
9000dbf6:	2001      	movs	r0, #1
	}
9000dbf8:	bd38      	pop	{r3, r4, r5, pc}
				( void ) xQueueGenericSend( pxMutex, NULL, queueMUTEX_GIVE_BLOCK_TIME, queueSEND_TO_BACK );
9000dbfa:	461a      	mov	r2, r3
9000dbfc:	4619      	mov	r1, r3
9000dbfe:	4620      	mov	r0, r4
9000dc00:	f7ff fe10 	bl	9000d824 <xQueueGenericSend>
			xReturn = pdPASS;
9000dc04:	2001      	movs	r0, #1
	}
9000dc06:	bd38      	pop	{r3, r4, r5, pc}

9000dc08 <xQueueCreateMutex>:
	{
9000dc08:	b570      	push	{r4, r5, r6, lr}
9000dc0a:	4605      	mov	r5, r0
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
9000dc0c:	2050      	movs	r0, #80	; 0x50
9000dc0e:	f7ff f935 	bl	9000ce7c <pvPortMalloc>
		if( pxNewQueue != NULL )
9000dc12:	4604      	mov	r4, r0
9000dc14:	b370      	cbz	r0, 9000dc74 <xQueueCreateMutex+0x6c>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
9000dc16:	2600      	movs	r6, #0
	pxNewQueue->uxLength = uxQueueLength;
9000dc18:	2301      	movs	r3, #1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
9000dc1a:	6020      	str	r0, [r4, #0]
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
9000dc1c:	f880 6046 	strb.w	r6, [r0, #70]	; 0x46
	pxNewQueue->uxItemSize = uxItemSize;
9000dc20:	e9c0 360f 	strd	r3, r6, [r0, #60]	; 0x3c
	taskENTER_CRITICAL();
9000dc24:	f7ff fb06 	bl	9000d234 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dc28:	6821      	ldr	r1, [r4, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000dc2a:	63a6      	str	r6, [r4, #56]	; 0x38
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000dc2c:	f104 0010 	add.w	r0, r4, #16
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000dc30:	6061      	str	r1, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dc32:	e9d4 230f 	ldrd	r2, r3, [r4, #60]	; 0x3c
9000dc36:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dc3a:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dc3c:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dc3e:	4419      	add	r1, r3
		pxQueue->cRxLock = queueUNLOCKED;
9000dc40:	23ff      	movs	r3, #255	; 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dc42:	e9c4 2102 	strd	r2, r1, [r4, #8]
		pxQueue->cRxLock = queueUNLOCKED;
9000dc46:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000dc4a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000dc4e:	f7ff fa37 	bl	9000d0c0 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000dc52:	f104 0024 	add.w	r0, r4, #36	; 0x24
9000dc56:	f7ff fa33 	bl	9000d0c0 <vListInitialise>
	taskEXIT_CRITICAL();
9000dc5a:	f7ff fb0d 	bl	9000d278 <vPortExitCritical>
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
9000dc5e:	4633      	mov	r3, r6
9000dc60:	4632      	mov	r2, r6
9000dc62:	4631      	mov	r1, r6
9000dc64:	4620      	mov	r0, r4
		pxNewQueue->ucQueueType = ucQueueType;
9000dc66:	f884 504c 	strb.w	r5, [r4, #76]	; 0x4c
			pxNewQueue->u.xSemaphore.xMutexHolder = NULL;
9000dc6a:	60a6      	str	r6, [r4, #8]
			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
9000dc6c:	6026      	str	r6, [r4, #0]
			pxNewQueue->u.xSemaphore.uxRecursiveCallCount = 0;
9000dc6e:	60e6      	str	r6, [r4, #12]
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
9000dc70:	f7ff fdd8 	bl	9000d824 <xQueueGenericSend>
	}
9000dc74:	4620      	mov	r0, r4
9000dc76:	bd70      	pop	{r4, r5, r6, pc}

9000dc78 <xQueueGenericSendFromISR>:
	configASSERT( pxQueue );
9000dc78:	2800      	cmp	r0, #0
9000dc7a:	d04e      	beq.n	9000dd1a <xQueueGenericSendFromISR+0xa2>
{
9000dc7c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000dc80:	460e      	mov	r6, r1
9000dc82:	4604      	mov	r4, r0
9000dc84:	4617      	mov	r7, r2
9000dc86:	461d      	mov	r5, r3
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000dc88:	b339      	cbz	r1, 9000dcda <xQueueGenericSendFromISR+0x62>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
9000dc8a:	2d02      	cmp	r5, #2
9000dc8c:	d10b      	bne.n	9000dca6 <xQueueGenericSendFromISR+0x2e>
9000dc8e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
9000dc90:	2b01      	cmp	r3, #1
9000dc92:	d008      	beq.n	9000dca6 <xQueueGenericSendFromISR+0x2e>
9000dc94:	f04f 0350 	mov.w	r3, #80	; 0x50
9000dc98:	f383 8811 	msr	BASEPRI, r3
9000dc9c:	f3bf 8f6f 	isb	sy
9000dca0:	f3bf 8f4f 	dsb	sy
9000dca4:	e7fe      	b.n	9000dca4 <xQueueGenericSendFromISR+0x2c>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
9000dca6:	f7ff fbf7 	bl	9000d498 <vPortValidateInterruptPriority>
	__asm volatile
9000dcaa:	f3ef 8811 	mrs	r8, BASEPRI
9000dcae:	f04f 0350 	mov.w	r3, #80	; 0x50
9000dcb2:	f383 8811 	msr	BASEPRI, r3
9000dcb6:	f3bf 8f6f 	isb	sy
9000dcba:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000dcbe:	6ba2      	ldr	r2, [r4, #56]	; 0x38
9000dcc0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
9000dcc2:	429a      	cmp	r2, r3
9000dcc4:	d315      	bcc.n	9000dcf2 <xQueueGenericSendFromISR+0x7a>
9000dcc6:	f1a5 0002 	sub.w	r0, r5, #2
9000dcca:	fab0 f080 	clz	r0, r0
9000dcce:	0940      	lsrs	r0, r0, #5
9000dcd0:	b978      	cbnz	r0, 9000dcf2 <xQueueGenericSendFromISR+0x7a>
	__asm volatile
9000dcd2:	f388 8811 	msr	BASEPRI, r8
}
9000dcd6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000dcda:	6c03      	ldr	r3, [r0, #64]	; 0x40
9000dcdc:	2b00      	cmp	r3, #0
9000dcde:	d0d4      	beq.n	9000dc8a <xQueueGenericSendFromISR+0x12>
	__asm volatile
9000dce0:	f04f 0350 	mov.w	r3, #80	; 0x50
9000dce4:	f383 8811 	msr	BASEPRI, r3
9000dce8:	f3bf 8f6f 	isb	sy
9000dcec:	f3bf 8f4f 	dsb	sy
9000dcf0:	e7fe      	b.n	9000dcf0 <xQueueGenericSendFromISR+0x78>
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
9000dcf2:	462a      	mov	r2, r5
			const int8_t cTxLock = pxQueue->cTxLock;
9000dcf4:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
9000dcf8:	4631      	mov	r1, r6
9000dcfa:	4620      	mov	r0, r4
			const int8_t cTxLock = pxQueue->cTxLock;
9000dcfc:	b26d      	sxtb	r5, r5
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
9000dcfe:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
9000dd00:	f7ff fbf8 	bl	9000d4f4 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
9000dd04:	1c6b      	adds	r3, r5, #1
9000dd06:	d011      	beq.n	9000dd2c <xQueueGenericSendFromISR+0xb4>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
9000dd08:	1c6b      	adds	r3, r5, #1
			xReturn = pdPASS;
9000dd0a:	2001      	movs	r0, #1
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
9000dd0c:	b25b      	sxtb	r3, r3
9000dd0e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	__asm volatile
9000dd12:	f388 8811 	msr	BASEPRI, r8
}
9000dd16:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	__asm volatile
9000dd1a:	f04f 0350 	mov.w	r3, #80	; 0x50
9000dd1e:	f383 8811 	msr	BASEPRI, r3
9000dd22:	f3bf 8f6f 	isb	sy
9000dd26:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000dd2a:	e7fe      	b.n	9000dd2a <xQueueGenericSendFromISR+0xb2>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000dd2c:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000dd2e:	b90b      	cbnz	r3, 9000dd34 <xQueueGenericSendFromISR+0xbc>
			xReturn = pdPASS;
9000dd30:	2001      	movs	r0, #1
9000dd32:	e7ce      	b.n	9000dcd2 <xQueueGenericSendFromISR+0x5a>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000dd34:	f104 0024 	add.w	r0, r4, #36	; 0x24
9000dd38:	f001 fb18 	bl	9000f36c <xTaskRemoveFromEventList>
							if( pxHigherPriorityTaskWoken != NULL )
9000dd3c:	2800      	cmp	r0, #0
9000dd3e:	d0f7      	beq.n	9000dd30 <xQueueGenericSendFromISR+0xb8>
9000dd40:	2f00      	cmp	r7, #0
9000dd42:	d0f5      	beq.n	9000dd30 <xQueueGenericSendFromISR+0xb8>
								*pxHigherPriorityTaskWoken = pdTRUE;
9000dd44:	2301      	movs	r3, #1
			xReturn = pdPASS;
9000dd46:	4618      	mov	r0, r3
								*pxHigherPriorityTaskWoken = pdTRUE;
9000dd48:	603b      	str	r3, [r7, #0]
9000dd4a:	e7c2      	b.n	9000dcd2 <xQueueGenericSendFromISR+0x5a>

9000dd4c <xQueueGiveFromISR>:
	configASSERT( pxQueue );
9000dd4c:	b360      	cbz	r0, 9000dda8 <xQueueGiveFromISR+0x5c>
	configASSERT( pxQueue->uxItemSize == 0 );
9000dd4e:	6c03      	ldr	r3, [r0, #64]	; 0x40
{
9000dd50:	b570      	push	{r4, r5, r6, lr}
9000dd52:	4604      	mov	r4, r0
	configASSERT( pxQueue->uxItemSize == 0 );
9000dd54:	b143      	cbz	r3, 9000dd68 <xQueueGiveFromISR+0x1c>
9000dd56:	f04f 0350 	mov.w	r3, #80	; 0x50
9000dd5a:	f383 8811 	msr	BASEPRI, r3
9000dd5e:	f3bf 8f6f 	isb	sy
9000dd62:	f3bf 8f4f 	dsb	sy
9000dd66:	e7fe      	b.n	9000dd66 <xQueueGiveFromISR+0x1a>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
9000dd68:	6803      	ldr	r3, [r0, #0]
9000dd6a:	460d      	mov	r5, r1
9000dd6c:	b32b      	cbz	r3, 9000ddba <xQueueGiveFromISR+0x6e>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
9000dd6e:	f7ff fb93 	bl	9000d498 <vPortValidateInterruptPriority>
	__asm volatile
9000dd72:	f3ef 8611 	mrs	r6, BASEPRI
9000dd76:	f04f 0350 	mov.w	r3, #80	; 0x50
9000dd7a:	f383 8811 	msr	BASEPRI, r3
9000dd7e:	f3bf 8f6f 	isb	sy
9000dd82:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000dd86:	6ba3      	ldr	r3, [r4, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
9000dd88:	6be2      	ldr	r2, [r4, #60]	; 0x3c
9000dd8a:	429a      	cmp	r2, r3
9000dd8c:	d921      	bls.n	9000ddd2 <xQueueGiveFromISR+0x86>
			const int8_t cTxLock = pxQueue->cTxLock;
9000dd8e:	f894 2045 	ldrb.w	r2, [r4, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000dd92:	3301      	adds	r3, #1
			if( cTxLock == queueUNLOCKED )
9000dd94:	2aff      	cmp	r2, #255	; 0xff
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000dd96:	63a3      	str	r3, [r4, #56]	; 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
9000dd98:	b253      	sxtb	r3, r2
			if( cTxLock == queueUNLOCKED )
9000dd9a:	d01e      	beq.n	9000ddda <xQueueGiveFromISR+0x8e>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
9000dd9c:	3301      	adds	r3, #1
			xReturn = pdPASS;
9000dd9e:	2001      	movs	r0, #1
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
9000dda0:	b25b      	sxtb	r3, r3
9000dda2:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
9000dda6:	e015      	b.n	9000ddd4 <xQueueGiveFromISR+0x88>
	__asm volatile
9000dda8:	f04f 0350 	mov.w	r3, #80	; 0x50
9000ddac:	f383 8811 	msr	BASEPRI, r3
9000ddb0:	f3bf 8f6f 	isb	sy
9000ddb4:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000ddb8:	e7fe      	b.n	9000ddb8 <xQueueGiveFromISR+0x6c>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
9000ddba:	6883      	ldr	r3, [r0, #8]
9000ddbc:	2b00      	cmp	r3, #0
9000ddbe:	d0d6      	beq.n	9000dd6e <xQueueGiveFromISR+0x22>
9000ddc0:	f04f 0350 	mov.w	r3, #80	; 0x50
9000ddc4:	f383 8811 	msr	BASEPRI, r3
9000ddc8:	f3bf 8f6f 	isb	sy
9000ddcc:	f3bf 8f4f 	dsb	sy
9000ddd0:	e7fe      	b.n	9000ddd0 <xQueueGiveFromISR+0x84>
			xReturn = errQUEUE_FULL;
9000ddd2:	2000      	movs	r0, #0
	__asm volatile
9000ddd4:	f386 8811 	msr	BASEPRI, r6
}
9000ddd8:	bd70      	pop	{r4, r5, r6, pc}
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000ddda:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000dddc:	b90b      	cbnz	r3, 9000dde2 <xQueueGiveFromISR+0x96>
			xReturn = pdPASS;
9000ddde:	2001      	movs	r0, #1
9000dde0:	e7f8      	b.n	9000ddd4 <xQueueGiveFromISR+0x88>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000dde2:	f104 0024 	add.w	r0, r4, #36	; 0x24
9000dde6:	f001 fac1 	bl	9000f36c <xTaskRemoveFromEventList>
							if( pxHigherPriorityTaskWoken != NULL )
9000ddea:	2d00      	cmp	r5, #0
9000ddec:	d0f7      	beq.n	9000ddde <xQueueGiveFromISR+0x92>
9000ddee:	2800      	cmp	r0, #0
9000ddf0:	d0f5      	beq.n	9000ddde <xQueueGiveFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
9000ddf2:	2301      	movs	r3, #1
			xReturn = pdPASS;
9000ddf4:	4618      	mov	r0, r3
								*pxHigherPriorityTaskWoken = pdTRUE;
9000ddf6:	602b      	str	r3, [r5, #0]
9000ddf8:	e7ec      	b.n	9000ddd4 <xQueueGiveFromISR+0x88>
9000ddfa:	bf00      	nop

9000ddfc <xQueueReceive>:
{
9000ddfc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9000de00:	b085      	sub	sp, #20
9000de02:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
9000de04:	2800      	cmp	r0, #0
9000de06:	f000 815c 	beq.w	9000e0c2 <xQueueReceive+0x2c6>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000de0a:	460f      	mov	r7, r1
9000de0c:	4604      	mov	r4, r0
9000de0e:	2900      	cmp	r1, #0
9000de10:	d079      	beq.n	9000df06 <xQueueReceive+0x10a>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000de12:	f001 fb55 	bl	9000f4c0 <xTaskGetSchedulerState>
9000de16:	2800      	cmp	r0, #0
9000de18:	f000 8081 	beq.w	9000df1e <xQueueReceive+0x122>
		taskENTER_CRITICAL();
9000de1c:	f7ff fa0a 	bl	9000d234 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000de20:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9000de22:	2d00      	cmp	r5, #0
9000de24:	f040 8138 	bne.w	9000e098 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
9000de28:	9b01      	ldr	r3, [sp, #4]
9000de2a:	2b00      	cmp	r3, #0
9000de2c:	f000 80d5 	beq.w	9000dfda <xQueueReceive+0x1de>
		prvLockQueue( pxQueue );
9000de30:	46a8      	mov	r8, r5
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000de32:	f104 0624 	add.w	r6, r4, #36	; 0x24
					vTaskInternalSetTimeOutState( &xTimeOut );
9000de36:	a802      	add	r0, sp, #8
9000de38:	f001 fae2 	bl	9000f400 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
9000de3c:	f7ff fa1c 	bl	9000d278 <vPortExitCritical>
		vTaskSuspendAll();
9000de40:	f001 f8fa 	bl	9000f038 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
9000de44:	f7ff f9f6 	bl	9000d234 <vPortEnterCritical>
9000de48:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000de4c:	2bff      	cmp	r3, #255	; 0xff
9000de4e:	d101      	bne.n	9000de54 <xQueueReceive+0x58>
9000de50:	f884 8044 	strb.w	r8, [r4, #68]	; 0x44
9000de54:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000de58:	2bff      	cmp	r3, #255	; 0xff
9000de5a:	d101      	bne.n	9000de60 <xQueueReceive+0x64>
9000de5c:	f884 8045 	strb.w	r8, [r4, #69]	; 0x45
9000de60:	f7ff fa0a 	bl	9000d278 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
9000de64:	a901      	add	r1, sp, #4
9000de66:	a802      	add	r0, sp, #8
9000de68:	f001 fad6 	bl	9000f418 <xTaskCheckForTimeOut>
9000de6c:	2800      	cmp	r0, #0
9000de6e:	d163      	bne.n	9000df38 <xQueueReceive+0x13c>
	taskENTER_CRITICAL();
9000de70:	f7ff f9e0 	bl	9000d234 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
9000de74:	6ba3      	ldr	r3, [r4, #56]	; 0x38
9000de76:	2b00      	cmp	r3, #0
9000de78:	f000 80b5 	beq.w	9000dfe6 <xQueueReceive+0x1ea>
	taskEXIT_CRITICAL();
9000de7c:	f7ff f9fc 	bl	9000d278 <vPortExitCritical>
	taskENTER_CRITICAL();
9000de80:	f7ff f9d8 	bl	9000d234 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000de84:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000de88:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000de8a:	2d00      	cmp	r5, #0
9000de8c:	dc04      	bgt.n	9000de98 <xQueueReceive+0x9c>
9000de8e:	e011      	b.n	9000deb4 <xQueueReceive+0xb8>
			--cTxLock;
9000de90:	1e6b      	subs	r3, r5, #1
9000de92:	b2da      	uxtb	r2, r3
9000de94:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000de96:	b16a      	cbz	r2, 9000deb4 <xQueueReceive+0xb8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000de98:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000de9a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000de9c:	b153      	cbz	r3, 9000deb4 <xQueueReceive+0xb8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000de9e:	f001 fa65 	bl	9000f36c <xTaskRemoveFromEventList>
9000dea2:	2800      	cmp	r0, #0
9000dea4:	d0f4      	beq.n	9000de90 <xQueueReceive+0x94>
						vTaskMissedYield();
9000dea6:	f001 faff 	bl	9000f4a8 <vTaskMissedYield>
			--cTxLock;
9000deaa:	1e6b      	subs	r3, r5, #1
9000deac:	b2da      	uxtb	r2, r3
9000deae:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000deb0:	2a00      	cmp	r2, #0
9000deb2:	d1f1      	bne.n	9000de98 <xQueueReceive+0x9c>
		pxQueue->cTxLock = queueUNLOCKED;
9000deb4:	23ff      	movs	r3, #255	; 0xff
9000deb6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
9000deba:	f7ff f9dd 	bl	9000d278 <vPortExitCritical>
	taskENTER_CRITICAL();
9000debe:	f7ff f9b9 	bl	9000d234 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000dec2:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000dec6:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000dec8:	2d00      	cmp	r5, #0
9000deca:	dd14      	ble.n	9000def6 <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000decc:	f104 0910 	add.w	r9, r4, #16
9000ded0:	e003      	b.n	9000deda <xQueueReceive+0xde>
				--cRxLock;
9000ded2:	1e6b      	subs	r3, r5, #1
9000ded4:	b2da      	uxtb	r2, r3
9000ded6:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000ded8:	b16a      	cbz	r2, 9000def6 <xQueueReceive+0xfa>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000deda:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000dedc:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000dede:	b153      	cbz	r3, 9000def6 <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000dee0:	f001 fa44 	bl	9000f36c <xTaskRemoveFromEventList>
9000dee4:	2800      	cmp	r0, #0
9000dee6:	d0f4      	beq.n	9000ded2 <xQueueReceive+0xd6>
					vTaskMissedYield();
9000dee8:	f001 fade 	bl	9000f4a8 <vTaskMissedYield>
				--cRxLock;
9000deec:	1e6b      	subs	r3, r5, #1
9000deee:	b2da      	uxtb	r2, r3
9000def0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000def2:	2a00      	cmp	r2, #0
9000def4:	d1f1      	bne.n	9000deda <xQueueReceive+0xde>
		pxQueue->cRxLock = queueUNLOCKED;
9000def6:	23ff      	movs	r3, #255	; 0xff
9000def8:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
9000defc:	f7ff f9bc 	bl	9000d278 <vPortExitCritical>
				( void ) xTaskResumeAll();
9000df00:	f001 f8a2 	bl	9000f048 <xTaskResumeAll>
		taskENTER_CRITICAL();
9000df04:	e060      	b.n	9000dfc8 <xQueueReceive+0x1cc>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000df06:	6c03      	ldr	r3, [r0, #64]	; 0x40
9000df08:	2b00      	cmp	r3, #0
9000df0a:	d082      	beq.n	9000de12 <xQueueReceive+0x16>
	__asm volatile
9000df0c:	f04f 0350 	mov.w	r3, #80	; 0x50
9000df10:	f383 8811 	msr	BASEPRI, r3
9000df14:	f3bf 8f6f 	isb	sy
9000df18:	f3bf 8f4f 	dsb	sy
9000df1c:	e7fe      	b.n	9000df1c <xQueueReceive+0x120>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000df1e:	9b01      	ldr	r3, [sp, #4]
9000df20:	2b00      	cmp	r3, #0
9000df22:	f43f af7b 	beq.w	9000de1c <xQueueReceive+0x20>
9000df26:	f04f 0350 	mov.w	r3, #80	; 0x50
9000df2a:	f383 8811 	msr	BASEPRI, r3
9000df2e:	f3bf 8f6f 	isb	sy
9000df32:	f3bf 8f4f 	dsb	sy
9000df36:	e7fe      	b.n	9000df36 <xQueueReceive+0x13a>
	taskENTER_CRITICAL();
9000df38:	f7ff f97c 	bl	9000d234 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000df3c:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000df40:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000df42:	2d00      	cmp	r5, #0
9000df44:	dc04      	bgt.n	9000df50 <xQueueReceive+0x154>
9000df46:	e011      	b.n	9000df6c <xQueueReceive+0x170>
			--cTxLock;
9000df48:	1e6b      	subs	r3, r5, #1
9000df4a:	b2da      	uxtb	r2, r3
9000df4c:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000df4e:	b16a      	cbz	r2, 9000df6c <xQueueReceive+0x170>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000df50:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000df52:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000df54:	b153      	cbz	r3, 9000df6c <xQueueReceive+0x170>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000df56:	f001 fa09 	bl	9000f36c <xTaskRemoveFromEventList>
9000df5a:	2800      	cmp	r0, #0
9000df5c:	d0f4      	beq.n	9000df48 <xQueueReceive+0x14c>
						vTaskMissedYield();
9000df5e:	f001 faa3 	bl	9000f4a8 <vTaskMissedYield>
			--cTxLock;
9000df62:	1e6b      	subs	r3, r5, #1
9000df64:	b2da      	uxtb	r2, r3
9000df66:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000df68:	2a00      	cmp	r2, #0
9000df6a:	d1f1      	bne.n	9000df50 <xQueueReceive+0x154>
		pxQueue->cTxLock = queueUNLOCKED;
9000df6c:	23ff      	movs	r3, #255	; 0xff
9000df6e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
9000df72:	f7ff f981 	bl	9000d278 <vPortExitCritical>
	taskENTER_CRITICAL();
9000df76:	f7ff f95d 	bl	9000d234 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000df7a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000df7e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000df80:	2d00      	cmp	r5, #0
9000df82:	dd14      	ble.n	9000dfae <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000df84:	f104 0910 	add.w	r9, r4, #16
9000df88:	e003      	b.n	9000df92 <xQueueReceive+0x196>
				--cRxLock;
9000df8a:	1e6b      	subs	r3, r5, #1
9000df8c:	b2da      	uxtb	r2, r3
9000df8e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000df90:	b16a      	cbz	r2, 9000dfae <xQueueReceive+0x1b2>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000df92:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000df94:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000df96:	b153      	cbz	r3, 9000dfae <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000df98:	f001 f9e8 	bl	9000f36c <xTaskRemoveFromEventList>
9000df9c:	2800      	cmp	r0, #0
9000df9e:	d0f4      	beq.n	9000df8a <xQueueReceive+0x18e>
					vTaskMissedYield();
9000dfa0:	f001 fa82 	bl	9000f4a8 <vTaskMissedYield>
				--cRxLock;
9000dfa4:	1e6b      	subs	r3, r5, #1
9000dfa6:	b2da      	uxtb	r2, r3
9000dfa8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000dfaa:	2a00      	cmp	r2, #0
9000dfac:	d1f1      	bne.n	9000df92 <xQueueReceive+0x196>
		pxQueue->cRxLock = queueUNLOCKED;
9000dfae:	23ff      	movs	r3, #255	; 0xff
9000dfb0:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
9000dfb4:	f7ff f960 	bl	9000d278 <vPortExitCritical>
			( void ) xTaskResumeAll();
9000dfb8:	f001 f846 	bl	9000f048 <xTaskResumeAll>
	taskENTER_CRITICAL();
9000dfbc:	f7ff f93a 	bl	9000d234 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
9000dfc0:	6ba3      	ldr	r3, [r4, #56]	; 0x38
9000dfc2:	b153      	cbz	r3, 9000dfda <xQueueReceive+0x1de>
	taskEXIT_CRITICAL();
9000dfc4:	f7ff f958 	bl	9000d278 <vPortExitCritical>
		taskENTER_CRITICAL();
9000dfc8:	f7ff f934 	bl	9000d234 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000dfcc:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9000dfce:	2d00      	cmp	r5, #0
9000dfd0:	d162      	bne.n	9000e098 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
9000dfd2:	9b01      	ldr	r3, [sp, #4]
9000dfd4:	2b00      	cmp	r3, #0
9000dfd6:	f47f af31 	bne.w	9000de3c <xQueueReceive+0x40>
					taskEXIT_CRITICAL();
9000dfda:	f7ff f94d 	bl	9000d278 <vPortExitCritical>
					return errQUEUE_EMPTY;
9000dfde:	2000      	movs	r0, #0
}
9000dfe0:	b005      	add	sp, #20
9000dfe2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
9000dfe6:	f7ff f947 	bl	9000d278 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
9000dfea:	9901      	ldr	r1, [sp, #4]
9000dfec:	4630      	mov	r0, r6
9000dfee:	f001 f92f 	bl	9000f250 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
9000dff2:	f7ff f91f 	bl	9000d234 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000dff6:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000dffa:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000dffc:	2d00      	cmp	r5, #0
9000dffe:	dc04      	bgt.n	9000e00a <xQueueReceive+0x20e>
9000e000:	e011      	b.n	9000e026 <xQueueReceive+0x22a>
			--cTxLock;
9000e002:	1e6b      	subs	r3, r5, #1
9000e004:	b2da      	uxtb	r2, r3
9000e006:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e008:	b16a      	cbz	r2, 9000e026 <xQueueReceive+0x22a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e00a:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e00c:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e00e:	b153      	cbz	r3, 9000e026 <xQueueReceive+0x22a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e010:	f001 f9ac 	bl	9000f36c <xTaskRemoveFromEventList>
9000e014:	2800      	cmp	r0, #0
9000e016:	d0f4      	beq.n	9000e002 <xQueueReceive+0x206>
						vTaskMissedYield();
9000e018:	f001 fa46 	bl	9000f4a8 <vTaskMissedYield>
			--cTxLock;
9000e01c:	1e6b      	subs	r3, r5, #1
9000e01e:	b2da      	uxtb	r2, r3
9000e020:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e022:	2a00      	cmp	r2, #0
9000e024:	d1f1      	bne.n	9000e00a <xQueueReceive+0x20e>
		pxQueue->cTxLock = queueUNLOCKED;
9000e026:	23ff      	movs	r3, #255	; 0xff
9000e028:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
9000e02c:	f7ff f924 	bl	9000d278 <vPortExitCritical>
	taskENTER_CRITICAL();
9000e030:	f7ff f900 	bl	9000d234 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000e034:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000e038:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e03a:	2d00      	cmp	r5, #0
9000e03c:	dd14      	ble.n	9000e068 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e03e:	f104 0910 	add.w	r9, r4, #16
9000e042:	e003      	b.n	9000e04c <xQueueReceive+0x250>
				--cRxLock;
9000e044:	1e6b      	subs	r3, r5, #1
9000e046:	b2da      	uxtb	r2, r3
9000e048:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e04a:	b16a      	cbz	r2, 9000e068 <xQueueReceive+0x26c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e04c:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e04e:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e050:	b153      	cbz	r3, 9000e068 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e052:	f001 f98b 	bl	9000f36c <xTaskRemoveFromEventList>
9000e056:	2800      	cmp	r0, #0
9000e058:	d0f4      	beq.n	9000e044 <xQueueReceive+0x248>
					vTaskMissedYield();
9000e05a:	f001 fa25 	bl	9000f4a8 <vTaskMissedYield>
				--cRxLock;
9000e05e:	1e6b      	subs	r3, r5, #1
9000e060:	b2da      	uxtb	r2, r3
9000e062:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e064:	2a00      	cmp	r2, #0
9000e066:	d1f1      	bne.n	9000e04c <xQueueReceive+0x250>
		pxQueue->cRxLock = queueUNLOCKED;
9000e068:	23ff      	movs	r3, #255	; 0xff
9000e06a:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
9000e06e:	f7ff f903 	bl	9000d278 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
9000e072:	f000 ffe9 	bl	9000f048 <xTaskResumeAll>
9000e076:	2800      	cmp	r0, #0
9000e078:	d1a6      	bne.n	9000dfc8 <xQueueReceive+0x1cc>
					portYIELD_WITHIN_API();
9000e07a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000e07e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000e082:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000e086:	f3bf 8f4f 	dsb	sy
9000e08a:	f3bf 8f6f 	isb	sy
		taskENTER_CRITICAL();
9000e08e:	f7ff f8d1 	bl	9000d234 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000e092:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9000e094:	2d00      	cmp	r5, #0
9000e096:	d09c      	beq.n	9000dfd2 <xQueueReceive+0x1d6>
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
9000e098:	6c22      	ldr	r2, [r4, #64]	; 0x40
9000e09a:	b152      	cbz	r2, 9000e0b2 <xQueueReceive+0x2b6>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000e09c:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000e09e:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000e0a0:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000e0a2:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000e0a4:	60e1      	str	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000e0a6:	d301      	bcc.n	9000e0ac <xQueueReceive+0x2b0>
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
9000e0a8:	6821      	ldr	r1, [r4, #0]
9000e0aa:	60e1      	str	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
9000e0ac:	4638      	mov	r0, r7
9000e0ae:	f018 fb08 	bl	900266c2 <memcpy>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
9000e0b2:	3d01      	subs	r5, #1
9000e0b4:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e0b6:	6923      	ldr	r3, [r4, #16]
9000e0b8:	b963      	cbnz	r3, 9000e0d4 <xQueueReceive+0x2d8>
				taskEXIT_CRITICAL();
9000e0ba:	f7ff f8dd 	bl	9000d278 <vPortExitCritical>
				return pdPASS;
9000e0be:	2001      	movs	r0, #1
9000e0c0:	e78e      	b.n	9000dfe0 <xQueueReceive+0x1e4>
9000e0c2:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e0c6:	f383 8811 	msr	BASEPRI, r3
9000e0ca:	f3bf 8f6f 	isb	sy
9000e0ce:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
9000e0d2:	e7fe      	b.n	9000e0d2 <xQueueReceive+0x2d6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e0d4:	f104 0010 	add.w	r0, r4, #16
9000e0d8:	f001 f948 	bl	9000f36c <xTaskRemoveFromEventList>
9000e0dc:	2800      	cmp	r0, #0
9000e0de:	d0ec      	beq.n	9000e0ba <xQueueReceive+0x2be>
						queueYIELD_IF_USING_PREEMPTION();
9000e0e0:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000e0e4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000e0e8:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000e0ec:	f3bf 8f4f 	dsb	sy
9000e0f0:	f3bf 8f6f 	isb	sy
9000e0f4:	e7e1      	b.n	9000e0ba <xQueueReceive+0x2be>
9000e0f6:	bf00      	nop

9000e0f8 <xQueueSemaphoreTake>:
{
9000e0f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000e0fc:	b084      	sub	sp, #16
9000e0fe:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
9000e100:	2800      	cmp	r0, #0
9000e102:	d05c      	beq.n	9000e1be <xQueueSemaphoreTake+0xc6>
	configASSERT( pxQueue->uxItemSize == 0 );
9000e104:	6c07      	ldr	r7, [r0, #64]	; 0x40
9000e106:	4604      	mov	r4, r0
9000e108:	b147      	cbz	r7, 9000e11c <xQueueSemaphoreTake+0x24>
9000e10a:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e10e:	f383 8811 	msr	BASEPRI, r3
9000e112:	f3bf 8f6f 	isb	sy
9000e116:	f3bf 8f4f 	dsb	sy
9000e11a:	e7fe      	b.n	9000e11a <xQueueSemaphoreTake+0x22>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000e11c:	f001 f9d0 	bl	9000f4c0 <xTaskGetSchedulerState>
9000e120:	4605      	mov	r5, r0
9000e122:	2800      	cmp	r0, #0
9000e124:	d054      	beq.n	9000e1d0 <xQueueSemaphoreTake+0xd8>
9000e126:	463d      	mov	r5, r7
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e128:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
9000e12c:	f7ff f882 	bl	9000d234 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
9000e130:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
9000e132:	2b00      	cmp	r3, #0
9000e134:	f040 8149 	bne.w	9000e3ca <xQueueSemaphoreTake+0x2d2>
				if( xTicksToWait == ( TickType_t ) 0 )
9000e138:	9b01      	ldr	r3, [sp, #4]
9000e13a:	2b00      	cmp	r3, #0
9000e13c:	f000 813a 	beq.w	9000e3b4 <xQueueSemaphoreTake+0x2bc>
				else if( xEntryTimeSet == pdFALSE )
9000e140:	2d00      	cmp	r5, #0
9000e142:	f000 809d 	beq.w	9000e280 <xQueueSemaphoreTake+0x188>
		taskEXIT_CRITICAL();
9000e146:	f7ff f897 	bl	9000d278 <vPortExitCritical>
		vTaskSuspendAll();
9000e14a:	f000 ff75 	bl	9000f038 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
9000e14e:	f7ff f871 	bl	9000d234 <vPortEnterCritical>
9000e152:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000e156:	2bff      	cmp	r3, #255	; 0xff
9000e158:	d102      	bne.n	9000e160 <xQueueSemaphoreTake+0x68>
9000e15a:	2300      	movs	r3, #0
9000e15c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
9000e160:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000e164:	2bff      	cmp	r3, #255	; 0xff
9000e166:	d102      	bne.n	9000e16e <xQueueSemaphoreTake+0x76>
9000e168:	2300      	movs	r3, #0
9000e16a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
9000e16e:	f7ff f883 	bl	9000d278 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
9000e172:	a901      	add	r1, sp, #4
9000e174:	a802      	add	r0, sp, #8
9000e176:	f001 f94f 	bl	9000f418 <xTaskCheckForTimeOut>
9000e17a:	2800      	cmp	r0, #0
9000e17c:	d135      	bne.n	9000e1ea <xQueueSemaphoreTake+0xf2>
	taskENTER_CRITICAL();
9000e17e:	f7ff f859 	bl	9000d234 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
9000e182:	6ba3      	ldr	r3, [r4, #56]	; 0x38
9000e184:	2b00      	cmp	r3, #0
9000e186:	f000 80a4 	beq.w	9000e2d2 <xQueueSemaphoreTake+0x1da>
	taskEXIT_CRITICAL();
9000e18a:	f7ff f875 	bl	9000d278 <vPortExitCritical>
	taskENTER_CRITICAL();
9000e18e:	f7ff f851 	bl	9000d234 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000e192:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000e196:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e198:	2d00      	cmp	r5, #0
9000e19a:	dc05      	bgt.n	9000e1a8 <xQueueSemaphoreTake+0xb0>
9000e19c:	e074      	b.n	9000e288 <xQueueSemaphoreTake+0x190>
			--cTxLock;
9000e19e:	1e6b      	subs	r3, r5, #1
9000e1a0:	b2da      	uxtb	r2, r3
9000e1a2:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e1a4:	2a00      	cmp	r2, #0
9000e1a6:	d06f      	beq.n	9000e288 <xQueueSemaphoreTake+0x190>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e1a8:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e1aa:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e1ac:	2b00      	cmp	r3, #0
9000e1ae:	d06b      	beq.n	9000e288 <xQueueSemaphoreTake+0x190>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e1b0:	f001 f8dc 	bl	9000f36c <xTaskRemoveFromEventList>
9000e1b4:	2800      	cmp	r0, #0
9000e1b6:	d0f2      	beq.n	9000e19e <xQueueSemaphoreTake+0xa6>
						vTaskMissedYield();
9000e1b8:	f001 f976 	bl	9000f4a8 <vTaskMissedYield>
9000e1bc:	e7ef      	b.n	9000e19e <xQueueSemaphoreTake+0xa6>
9000e1be:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e1c2:	f383 8811 	msr	BASEPRI, r3
9000e1c6:	f3bf 8f6f 	isb	sy
9000e1ca:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
9000e1ce:	e7fe      	b.n	9000e1ce <xQueueSemaphoreTake+0xd6>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000e1d0:	9b01      	ldr	r3, [sp, #4]
9000e1d2:	2b00      	cmp	r3, #0
9000e1d4:	f000 80d4 	beq.w	9000e380 <xQueueSemaphoreTake+0x288>
9000e1d8:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e1dc:	f383 8811 	msr	BASEPRI, r3
9000e1e0:	f3bf 8f6f 	isb	sy
9000e1e4:	f3bf 8f4f 	dsb	sy
9000e1e8:	e7fe      	b.n	9000e1e8 <xQueueSemaphoreTake+0xf0>
	taskENTER_CRITICAL();
9000e1ea:	f7ff f823 	bl	9000d234 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000e1ee:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000e1f2:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e1f4:	2d00      	cmp	r5, #0
9000e1f6:	dc04      	bgt.n	9000e202 <xQueueSemaphoreTake+0x10a>
9000e1f8:	e011      	b.n	9000e21e <xQueueSemaphoreTake+0x126>
			--cTxLock;
9000e1fa:	1e6b      	subs	r3, r5, #1
9000e1fc:	b2da      	uxtb	r2, r3
9000e1fe:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e200:	b16a      	cbz	r2, 9000e21e <xQueueSemaphoreTake+0x126>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e202:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e204:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e206:	b153      	cbz	r3, 9000e21e <xQueueSemaphoreTake+0x126>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e208:	f001 f8b0 	bl	9000f36c <xTaskRemoveFromEventList>
9000e20c:	2800      	cmp	r0, #0
9000e20e:	d0f4      	beq.n	9000e1fa <xQueueSemaphoreTake+0x102>
						vTaskMissedYield();
9000e210:	f001 f94a 	bl	9000f4a8 <vTaskMissedYield>
			--cTxLock;
9000e214:	1e6b      	subs	r3, r5, #1
9000e216:	b2da      	uxtb	r2, r3
9000e218:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e21a:	2a00      	cmp	r2, #0
9000e21c:	d1f1      	bne.n	9000e202 <xQueueSemaphoreTake+0x10a>
		pxQueue->cTxLock = queueUNLOCKED;
9000e21e:	23ff      	movs	r3, #255	; 0xff
9000e220:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
9000e224:	f7ff f828 	bl	9000d278 <vPortExitCritical>
	taskENTER_CRITICAL();
9000e228:	f7ff f804 	bl	9000d234 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000e22c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000e230:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e232:	2d00      	cmp	r5, #0
9000e234:	dd14      	ble.n	9000e260 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e236:	f104 0810 	add.w	r8, r4, #16
9000e23a:	e003      	b.n	9000e244 <xQueueSemaphoreTake+0x14c>
				--cRxLock;
9000e23c:	1e6b      	subs	r3, r5, #1
9000e23e:	b2da      	uxtb	r2, r3
9000e240:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e242:	b16a      	cbz	r2, 9000e260 <xQueueSemaphoreTake+0x168>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e244:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e246:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e248:	b153      	cbz	r3, 9000e260 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e24a:	f001 f88f 	bl	9000f36c <xTaskRemoveFromEventList>
9000e24e:	2800      	cmp	r0, #0
9000e250:	d0f4      	beq.n	9000e23c <xQueueSemaphoreTake+0x144>
					vTaskMissedYield();
9000e252:	f001 f929 	bl	9000f4a8 <vTaskMissedYield>
				--cRxLock;
9000e256:	1e6b      	subs	r3, r5, #1
9000e258:	b2da      	uxtb	r2, r3
9000e25a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e25c:	2a00      	cmp	r2, #0
9000e25e:	d1f1      	bne.n	9000e244 <xQueueSemaphoreTake+0x14c>
		pxQueue->cRxLock = queueUNLOCKED;
9000e260:	23ff      	movs	r3, #255	; 0xff
9000e262:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
9000e266:	f7ff f807 	bl	9000d278 <vPortExitCritical>
			( void ) xTaskResumeAll();
9000e26a:	f000 feed 	bl	9000f048 <xTaskResumeAll>
	taskENTER_CRITICAL();
9000e26e:	f7fe ffe1 	bl	9000d234 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
9000e272:	6ba3      	ldr	r3, [r4, #56]	; 0x38
9000e274:	2b00      	cmp	r3, #0
9000e276:	d07c      	beq.n	9000e372 <xQueueSemaphoreTake+0x27a>
	taskEXIT_CRITICAL();
9000e278:	f7fe fffe 	bl	9000d278 <vPortExitCritical>
	return xReturn;
9000e27c:	2501      	movs	r5, #1
9000e27e:	e755      	b.n	9000e12c <xQueueSemaphoreTake+0x34>
					vTaskInternalSetTimeOutState( &xTimeOut );
9000e280:	a802      	add	r0, sp, #8
9000e282:	f001 f8bd 	bl	9000f400 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
9000e286:	e75e      	b.n	9000e146 <xQueueSemaphoreTake+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
9000e288:	23ff      	movs	r3, #255	; 0xff
9000e28a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
9000e28e:	f7fe fff3 	bl	9000d278 <vPortExitCritical>
	taskENTER_CRITICAL();
9000e292:	f7fe ffcf 	bl	9000d234 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000e296:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000e29a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e29c:	2d00      	cmp	r5, #0
9000e29e:	dd10      	ble.n	9000e2c2 <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e2a0:	f104 0810 	add.w	r8, r4, #16
9000e2a4:	e003      	b.n	9000e2ae <xQueueSemaphoreTake+0x1b6>
				--cRxLock;
9000e2a6:	1e6b      	subs	r3, r5, #1
9000e2a8:	b2da      	uxtb	r2, r3
9000e2aa:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e2ac:	b14a      	cbz	r2, 9000e2c2 <xQueueSemaphoreTake+0x1ca>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e2ae:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e2b0:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e2b2:	b133      	cbz	r3, 9000e2c2 <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e2b4:	f001 f85a 	bl	9000f36c <xTaskRemoveFromEventList>
9000e2b8:	2800      	cmp	r0, #0
9000e2ba:	d0f4      	beq.n	9000e2a6 <xQueueSemaphoreTake+0x1ae>
					vTaskMissedYield();
9000e2bc:	f001 f8f4 	bl	9000f4a8 <vTaskMissedYield>
9000e2c0:	e7f1      	b.n	9000e2a6 <xQueueSemaphoreTake+0x1ae>
		pxQueue->cRxLock = queueUNLOCKED;
9000e2c2:	23ff      	movs	r3, #255	; 0xff
9000e2c4:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
9000e2c8:	f7fe ffd6 	bl	9000d278 <vPortExitCritical>
				( void ) xTaskResumeAll();
9000e2cc:	f000 febc 	bl	9000f048 <xTaskResumeAll>
9000e2d0:	e7d4      	b.n	9000e27c <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
9000e2d2:	f7fe ffd1 	bl	9000d278 <vPortExitCritical>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9000e2d6:	6823      	ldr	r3, [r4, #0]
9000e2d8:	2b00      	cmp	r3, #0
9000e2da:	d062      	beq.n	9000e3a2 <xQueueSemaphoreTake+0x2aa>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
9000e2dc:	9901      	ldr	r1, [sp, #4]
9000e2de:	4630      	mov	r0, r6
9000e2e0:	f000 ffb6 	bl	9000f250 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
9000e2e4:	f7fe ffa6 	bl	9000d234 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000e2e8:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000e2ec:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e2ee:	2d00      	cmp	r5, #0
9000e2f0:	dc04      	bgt.n	9000e2fc <xQueueSemaphoreTake+0x204>
9000e2f2:	e00d      	b.n	9000e310 <xQueueSemaphoreTake+0x218>
			--cTxLock;
9000e2f4:	1e6b      	subs	r3, r5, #1
9000e2f6:	b2da      	uxtb	r2, r3
9000e2f8:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e2fa:	b14a      	cbz	r2, 9000e310 <xQueueSemaphoreTake+0x218>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e2fc:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e2fe:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e300:	b133      	cbz	r3, 9000e310 <xQueueSemaphoreTake+0x218>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e302:	f001 f833 	bl	9000f36c <xTaskRemoveFromEventList>
9000e306:	2800      	cmp	r0, #0
9000e308:	d0f4      	beq.n	9000e2f4 <xQueueSemaphoreTake+0x1fc>
						vTaskMissedYield();
9000e30a:	f001 f8cd 	bl	9000f4a8 <vTaskMissedYield>
9000e30e:	e7f1      	b.n	9000e2f4 <xQueueSemaphoreTake+0x1fc>
		pxQueue->cTxLock = queueUNLOCKED;
9000e310:	23ff      	movs	r3, #255	; 0xff
9000e312:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
9000e316:	f7fe ffaf 	bl	9000d278 <vPortExitCritical>
	taskENTER_CRITICAL();
9000e31a:	f7fe ff8b 	bl	9000d234 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000e31e:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000e322:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e324:	2d00      	cmp	r5, #0
9000e326:	dd10      	ble.n	9000e34a <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e328:	f104 0810 	add.w	r8, r4, #16
9000e32c:	e003      	b.n	9000e336 <xQueueSemaphoreTake+0x23e>
				--cRxLock;
9000e32e:	1e6b      	subs	r3, r5, #1
9000e330:	b2da      	uxtb	r2, r3
9000e332:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e334:	b14a      	cbz	r2, 9000e34a <xQueueSemaphoreTake+0x252>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e336:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e338:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e33a:	b133      	cbz	r3, 9000e34a <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e33c:	f001 f816 	bl	9000f36c <xTaskRemoveFromEventList>
9000e340:	2800      	cmp	r0, #0
9000e342:	d0f4      	beq.n	9000e32e <xQueueSemaphoreTake+0x236>
					vTaskMissedYield();
9000e344:	f001 f8b0 	bl	9000f4a8 <vTaskMissedYield>
9000e348:	e7f1      	b.n	9000e32e <xQueueSemaphoreTake+0x236>
		pxQueue->cRxLock = queueUNLOCKED;
9000e34a:	23ff      	movs	r3, #255	; 0xff
9000e34c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
9000e350:	f7fe ff92 	bl	9000d278 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
9000e354:	f000 fe78 	bl	9000f048 <xTaskResumeAll>
9000e358:	2800      	cmp	r0, #0
9000e35a:	d18f      	bne.n	9000e27c <xQueueSemaphoreTake+0x184>
					portYIELD_WITHIN_API();
9000e35c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000e360:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000e364:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000e368:	f3bf 8f4f 	dsb	sy
9000e36c:	f3bf 8f6f 	isb	sy
9000e370:	e784      	b.n	9000e27c <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
9000e372:	f7fe ff81 	bl	9000d278 <vPortExitCritical>
					if( xInheritanceOccurred != pdFALSE )
9000e376:	b92f      	cbnz	r7, 9000e384 <xQueueSemaphoreTake+0x28c>
}
9000e378:	4638      	mov	r0, r7
9000e37a:	b004      	add	sp, #16
9000e37c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9000e380:	4607      	mov	r7, r0
9000e382:	e6d1      	b.n	9000e128 <xQueueSemaphoreTake+0x30>
						taskENTER_CRITICAL();
9000e384:	f7fe ff56 	bl	9000d234 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
9000e388:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000e38a:	b119      	cbz	r1, 9000e394 <xQueueSemaphoreTake+0x29c>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
9000e38c:	6b23      	ldr	r3, [r4, #48]	; 0x30
9000e38e:	6819      	ldr	r1, [r3, #0]
9000e390:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
9000e394:	68a0      	ldr	r0, [r4, #8]
				return errQUEUE_EMPTY;
9000e396:	2700      	movs	r7, #0
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
9000e398:	f001 f92e 	bl	9000f5f8 <vTaskPriorityDisinheritAfterTimeout>
						taskEXIT_CRITICAL();
9000e39c:	f7fe ff6c 	bl	9000d278 <vPortExitCritical>
9000e3a0:	e7ea      	b.n	9000e378 <xQueueSemaphoreTake+0x280>
						taskENTER_CRITICAL();
9000e3a2:	f7fe ff47 	bl	9000d234 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
9000e3a6:	68a0      	ldr	r0, [r4, #8]
9000e3a8:	f001 f89a 	bl	9000f4e0 <xTaskPriorityInherit>
9000e3ac:	4607      	mov	r7, r0
						taskEXIT_CRITICAL();
9000e3ae:	f7fe ff63 	bl	9000d278 <vPortExitCritical>
9000e3b2:	e793      	b.n	9000e2dc <xQueueSemaphoreTake+0x1e4>
						configASSERT( xInheritanceOccurred == pdFALSE );
9000e3b4:	2f00      	cmp	r7, #0
9000e3b6:	d0f1      	beq.n	9000e39c <xQueueSemaphoreTake+0x2a4>
9000e3b8:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e3bc:	f383 8811 	msr	BASEPRI, r3
9000e3c0:	f3bf 8f6f 	isb	sy
9000e3c4:	f3bf 8f4f 	dsb	sy
9000e3c8:	e7fe      	b.n	9000e3c8 <xQueueSemaphoreTake+0x2d0>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
9000e3ca:	3b01      	subs	r3, #1
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9000e3cc:	6822      	ldr	r2, [r4, #0]
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
9000e3ce:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9000e3d0:	b12a      	cbz	r2, 9000e3de <xQueueSemaphoreTake+0x2e6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e3d2:	6923      	ldr	r3, [r4, #16]
9000e3d4:	b93b      	cbnz	r3, 9000e3e6 <xQueueSemaphoreTake+0x2ee>
				return pdPASS;
9000e3d6:	2701      	movs	r7, #1
				taskEXIT_CRITICAL();
9000e3d8:	f7fe ff4e 	bl	9000d278 <vPortExitCritical>
				return pdPASS;
9000e3dc:	e7cc      	b.n	9000e378 <xQueueSemaphoreTake+0x280>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
9000e3de:	f001 f95f 	bl	9000f6a0 <pvTaskIncrementMutexHeldCount>
9000e3e2:	60a0      	str	r0, [r4, #8]
9000e3e4:	e7f5      	b.n	9000e3d2 <xQueueSemaphoreTake+0x2da>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e3e6:	f104 0010 	add.w	r0, r4, #16
9000e3ea:	f000 ffbf 	bl	9000f36c <xTaskRemoveFromEventList>
9000e3ee:	2800      	cmp	r0, #0
9000e3f0:	d0f1      	beq.n	9000e3d6 <xQueueSemaphoreTake+0x2de>
						queueYIELD_IF_USING_PREEMPTION();
9000e3f2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000e3f6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000e3fa:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000e3fe:	f3bf 8f4f 	dsb	sy
9000e402:	f3bf 8f6f 	isb	sy
9000e406:	e7e6      	b.n	9000e3d6 <xQueueSemaphoreTake+0x2de>

9000e408 <xQueueTakeMutexRecursive>:
		configASSERT( pxMutex );
9000e408:	b1a8      	cbz	r0, 9000e436 <xQueueTakeMutexRecursive+0x2e>
	{
9000e40a:	b570      	push	{r4, r5, r6, lr}
		if( pxMutex->u.xSemaphore.xMutexHolder == xTaskGetCurrentTaskHandle() )
9000e40c:	6886      	ldr	r6, [r0, #8]
9000e40e:	4604      	mov	r4, r0
9000e410:	460d      	mov	r5, r1
9000e412:	f001 f84f 	bl	9000f4b4 <xTaskGetCurrentTaskHandle>
9000e416:	4286      	cmp	r6, r0
9000e418:	d008      	beq.n	9000e42c <xQueueTakeMutexRecursive+0x24>
			xReturn = xQueueSemaphoreTake( pxMutex, xTicksToWait );
9000e41a:	4629      	mov	r1, r5
9000e41c:	4620      	mov	r0, r4
9000e41e:	f7ff fe6b 	bl	9000e0f8 <xQueueSemaphoreTake>
			if( xReturn != pdFAIL )
9000e422:	b110      	cbz	r0, 9000e42a <xQueueTakeMutexRecursive+0x22>
				( pxMutex->u.xSemaphore.uxRecursiveCallCount )++;
9000e424:	68e3      	ldr	r3, [r4, #12]
9000e426:	3301      	adds	r3, #1
9000e428:	60e3      	str	r3, [r4, #12]
	}
9000e42a:	bd70      	pop	{r4, r5, r6, pc}
			( pxMutex->u.xSemaphore.uxRecursiveCallCount )++;
9000e42c:	68e3      	ldr	r3, [r4, #12]
			xReturn = pdPASS;
9000e42e:	2001      	movs	r0, #1
			( pxMutex->u.xSemaphore.uxRecursiveCallCount )++;
9000e430:	4403      	add	r3, r0
9000e432:	60e3      	str	r3, [r4, #12]
	}
9000e434:	bd70      	pop	{r4, r5, r6, pc}
9000e436:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e43a:	f383 8811 	msr	BASEPRI, r3
9000e43e:	f3bf 8f6f 	isb	sy
9000e442:	f3bf 8f4f 	dsb	sy
		configASSERT( pxMutex );
9000e446:	e7fe      	b.n	9000e446 <xQueueTakeMutexRecursive+0x3e>

9000e448 <xQueueReceiveFromISR>:
{
9000e448:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	configASSERT( pxQueue );
9000e44c:	b310      	cbz	r0, 9000e494 <xQueueReceiveFromISR+0x4c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000e44e:	460e      	mov	r6, r1
9000e450:	4604      	mov	r4, r0
9000e452:	4617      	mov	r7, r2
9000e454:	b191      	cbz	r1, 9000e47c <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
9000e456:	f7ff f81f 	bl	9000d498 <vPortValidateInterruptPriority>
	__asm volatile
9000e45a:	f3ef 8911 	mrs	r9, BASEPRI
9000e45e:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e462:	f383 8811 	msr	BASEPRI, r3
9000e466:	f3bf 8f6f 	isb	sy
9000e46a:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000e46e:	6ba5      	ldr	r5, [r4, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9000e470:	b9cd      	cbnz	r5, 9000e4a6 <xQueueReceiveFromISR+0x5e>
			xReturn = pdFAIL;
9000e472:	4628      	mov	r0, r5
	__asm volatile
9000e474:	f389 8811 	msr	BASEPRI, r9
}
9000e478:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000e47c:	6c03      	ldr	r3, [r0, #64]	; 0x40
9000e47e:	2b00      	cmp	r3, #0
9000e480:	d0e9      	beq.n	9000e456 <xQueueReceiveFromISR+0xe>
	__asm volatile
9000e482:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e486:	f383 8811 	msr	BASEPRI, r3
9000e48a:	f3bf 8f6f 	isb	sy
9000e48e:	f3bf 8f4f 	dsb	sy
9000e492:	e7fe      	b.n	9000e492 <xQueueReceiveFromISR+0x4a>
9000e494:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e498:	f383 8811 	msr	BASEPRI, r3
9000e49c:	f3bf 8f6f 	isb	sy
9000e4a0:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000e4a4:	e7fe      	b.n	9000e4a4 <xQueueReceiveFromISR+0x5c>
			const int8_t cRxLock = pxQueue->cRxLock;
9000e4a6:	f894 8044 	ldrb.w	r8, [r4, #68]	; 0x44
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
9000e4aa:	6c22      	ldr	r2, [r4, #64]	; 0x40
			const int8_t cRxLock = pxQueue->cRxLock;
9000e4ac:	fa4f f888 	sxtb.w	r8, r8
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
9000e4b0:	b142      	cbz	r2, 9000e4c4 <xQueueReceiveFromISR+0x7c>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000e4b2:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000e4b4:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000e4b6:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000e4b8:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000e4ba:	60e1      	str	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000e4bc:	d215      	bcs.n	9000e4ea <xQueueReceiveFromISR+0xa2>
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
9000e4be:	4630      	mov	r0, r6
9000e4c0:	f018 f8ff 	bl	900266c2 <memcpy>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
9000e4c4:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
9000e4c6:	f1b8 3fff 	cmp.w	r8, #4294967295
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
9000e4ca:	63a5      	str	r5, [r4, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
9000e4cc:	d009      	beq.n	9000e4e2 <xQueueReceiveFromISR+0x9a>
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
9000e4ce:	f108 0301 	add.w	r3, r8, #1
			xReturn = pdPASS;
9000e4d2:	2001      	movs	r0, #1
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
9000e4d4:	b25b      	sxtb	r3, r3
9000e4d6:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	__asm volatile
9000e4da:	f389 8811 	msr	BASEPRI, r9
}
9000e4de:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e4e2:	6923      	ldr	r3, [r4, #16]
9000e4e4:	b923      	cbnz	r3, 9000e4f0 <xQueueReceiveFromISR+0xa8>
			xReturn = pdPASS;
9000e4e6:	2001      	movs	r0, #1
9000e4e8:	e7c4      	b.n	9000e474 <xQueueReceiveFromISR+0x2c>
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
9000e4ea:	6821      	ldr	r1, [r4, #0]
9000e4ec:	60e1      	str	r1, [r4, #12]
9000e4ee:	e7e6      	b.n	9000e4be <xQueueReceiveFromISR+0x76>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e4f0:	f104 0010 	add.w	r0, r4, #16
9000e4f4:	f000 ff3a 	bl	9000f36c <xTaskRemoveFromEventList>
						if( pxHigherPriorityTaskWoken != NULL )
9000e4f8:	2f00      	cmp	r7, #0
9000e4fa:	d0f4      	beq.n	9000e4e6 <xQueueReceiveFromISR+0x9e>
9000e4fc:	2800      	cmp	r0, #0
9000e4fe:	d0f2      	beq.n	9000e4e6 <xQueueReceiveFromISR+0x9e>
							*pxHigherPriorityTaskWoken = pdTRUE;
9000e500:	2301      	movs	r3, #1
			xReturn = pdPASS;
9000e502:	4618      	mov	r0, r3
							*pxHigherPriorityTaskWoken = pdTRUE;
9000e504:	603b      	str	r3, [r7, #0]
9000e506:	e7b5      	b.n	9000e474 <xQueueReceiveFromISR+0x2c>

9000e508 <uxQueueMessagesWaiting>:
	configASSERT( xQueue );
9000e508:	b158      	cbz	r0, 9000e522 <uxQueueMessagesWaiting+0x1a>
{
9000e50a:	b510      	push	{r4, lr}
9000e50c:	4604      	mov	r4, r0
9000e50e:	b082      	sub	sp, #8
	taskENTER_CRITICAL();
9000e510:	f7fe fe90 	bl	9000d234 <vPortEnterCritical>
		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
9000e514:	6ba0      	ldr	r0, [r4, #56]	; 0x38
9000e516:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
9000e518:	f7fe feae 	bl	9000d278 <vPortExitCritical>
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
9000e51c:	9801      	ldr	r0, [sp, #4]
9000e51e:	b002      	add	sp, #8
9000e520:	bd10      	pop	{r4, pc}
	__asm volatile
9000e522:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e526:	f383 8811 	msr	BASEPRI, r3
9000e52a:	f3bf 8f6f 	isb	sy
9000e52e:	f3bf 8f4f 	dsb	sy
	configASSERT( xQueue );
9000e532:	e7fe      	b.n	9000e532 <uxQueueMessagesWaiting+0x2a>

9000e534 <uxQueueMessagesWaitingFromISR>:
	configASSERT( pxQueue );
9000e534:	b108      	cbz	r0, 9000e53a <uxQueueMessagesWaitingFromISR+0x6>
	uxReturn = pxQueue->uxMessagesWaiting;
9000e536:	6b80      	ldr	r0, [r0, #56]	; 0x38
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
9000e538:	4770      	bx	lr
9000e53a:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e53e:	f383 8811 	msr	BASEPRI, r3
9000e542:	f3bf 8f6f 	isb	sy
9000e546:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000e54a:	e7fe      	b.n	9000e54a <uxQueueMessagesWaitingFromISR+0x16>
9000e54c:	0000      	movs	r0, r0
	...

9000e550 <vQueueDelete>:
	configASSERT( pxQueue );
9000e550:	b1e0      	cbz	r0, 9000e58c <vQueueDelete+0x3c>

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
9000e552:	4b21      	ldr	r3, [pc, #132]	; (9000e5d8 <vQueueDelete+0x88>)
9000e554:	685a      	ldr	r2, [r3, #4]
9000e556:	4290      	cmp	r0, r2
9000e558:	d02b      	beq.n	9000e5b2 <vQueueDelete+0x62>
9000e55a:	68da      	ldr	r2, [r3, #12]
9000e55c:	4290      	cmp	r0, r2
9000e55e:	d02a      	beq.n	9000e5b6 <vQueueDelete+0x66>
9000e560:	695a      	ldr	r2, [r3, #20]
9000e562:	4290      	cmp	r0, r2
9000e564:	d029      	beq.n	9000e5ba <vQueueDelete+0x6a>
9000e566:	69da      	ldr	r2, [r3, #28]
9000e568:	4290      	cmp	r0, r2
9000e56a:	d028      	beq.n	9000e5be <vQueueDelete+0x6e>
9000e56c:	6a5a      	ldr	r2, [r3, #36]	; 0x24
9000e56e:	4290      	cmp	r0, r2
9000e570:	d027      	beq.n	9000e5c2 <vQueueDelete+0x72>
9000e572:	6ada      	ldr	r2, [r3, #44]	; 0x2c
9000e574:	4290      	cmp	r0, r2
9000e576:	d014      	beq.n	9000e5a2 <vQueueDelete+0x52>
9000e578:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000e57a:	4290      	cmp	r0, r2
9000e57c:	d023      	beq.n	9000e5c6 <vQueueDelete+0x76>
9000e57e:	6bda      	ldr	r2, [r3, #60]	; 0x3c
9000e580:	4290      	cmp	r0, r2
9000e582:	d022      	beq.n	9000e5ca <vQueueDelete+0x7a>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
9000e584:	f890 3046 	ldrb.w	r3, [r0, #70]	; 0x46
9000e588:	b14b      	cbz	r3, 9000e59e <vQueueDelete+0x4e>
}
9000e58a:	4770      	bx	lr
9000e58c:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e590:	f383 8811 	msr	BASEPRI, r3
9000e594:	f3bf 8f6f 	isb	sy
9000e598:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000e59c:	e7fe      	b.n	9000e59c <vQueueDelete+0x4c>
			vPortFree( pxQueue );
9000e59e:	f7fe bd2b 	b.w	9000cff8 <vPortFree>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
9000e5a2:	2205      	movs	r2, #5
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
9000e5a4:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
9000e5a8:	ed9f 7b09 	vldr	d7, [pc, #36]	; 9000e5d0 <vQueueDelete+0x80>
9000e5ac:	ed83 7b00 	vstr	d7, [r3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
				break;
9000e5b0:	e7e8      	b.n	9000e584 <vQueueDelete+0x34>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
9000e5b2:	2200      	movs	r2, #0
9000e5b4:	e7f6      	b.n	9000e5a4 <vQueueDelete+0x54>
9000e5b6:	2201      	movs	r2, #1
9000e5b8:	e7f4      	b.n	9000e5a4 <vQueueDelete+0x54>
9000e5ba:	2202      	movs	r2, #2
9000e5bc:	e7f2      	b.n	9000e5a4 <vQueueDelete+0x54>
9000e5be:	2203      	movs	r2, #3
9000e5c0:	e7f0      	b.n	9000e5a4 <vQueueDelete+0x54>
9000e5c2:	2204      	movs	r2, #4
9000e5c4:	e7ee      	b.n	9000e5a4 <vQueueDelete+0x54>
9000e5c6:	2206      	movs	r2, #6
9000e5c8:	e7ec      	b.n	9000e5a4 <vQueueDelete+0x54>
9000e5ca:	2207      	movs	r2, #7
9000e5cc:	e7ea      	b.n	9000e5a4 <vQueueDelete+0x54>
9000e5ce:	bf00      	nop
	...
9000e5d8:	24022f08 	.word	0x24022f08

9000e5dc <vQueueAddToRegistry>:
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
9000e5dc:	4b12      	ldr	r3, [pc, #72]	; (9000e628 <vQueueAddToRegistry+0x4c>)
9000e5de:	681a      	ldr	r2, [r3, #0]
9000e5e0:	b17a      	cbz	r2, 9000e602 <vQueueAddToRegistry+0x26>
9000e5e2:	689a      	ldr	r2, [r3, #8]
9000e5e4:	b162      	cbz	r2, 9000e600 <vQueueAddToRegistry+0x24>
9000e5e6:	691a      	ldr	r2, [r3, #16]
9000e5e8:	b192      	cbz	r2, 9000e610 <vQueueAddToRegistry+0x34>
9000e5ea:	699a      	ldr	r2, [r3, #24]
9000e5ec:	b192      	cbz	r2, 9000e614 <vQueueAddToRegistry+0x38>
9000e5ee:	6a1a      	ldr	r2, [r3, #32]
9000e5f0:	b192      	cbz	r2, 9000e618 <vQueueAddToRegistry+0x3c>
9000e5f2:	6a9a      	ldr	r2, [r3, #40]	; 0x28
9000e5f4:	b192      	cbz	r2, 9000e61c <vQueueAddToRegistry+0x40>
9000e5f6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000e5f8:	b192      	cbz	r2, 9000e620 <vQueueAddToRegistry+0x44>
9000e5fa:	6b9a      	ldr	r2, [r3, #56]	; 0x38
9000e5fc:	b192      	cbz	r2, 9000e624 <vQueueAddToRegistry+0x48>
	}
9000e5fe:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
9000e600:	2201      	movs	r2, #1
				xQueueRegistry[ ux ].xHandle = xQueue;
9000e602:	eb03 0cc2 	add.w	ip, r3, r2, lsl #3
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
9000e606:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
9000e60a:	f8cc 0004 	str.w	r0, [ip, #4]
	}
9000e60e:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
9000e610:	2202      	movs	r2, #2
9000e612:	e7f6      	b.n	9000e602 <vQueueAddToRegistry+0x26>
9000e614:	2203      	movs	r2, #3
9000e616:	e7f4      	b.n	9000e602 <vQueueAddToRegistry+0x26>
9000e618:	2204      	movs	r2, #4
9000e61a:	e7f2      	b.n	9000e602 <vQueueAddToRegistry+0x26>
9000e61c:	2205      	movs	r2, #5
9000e61e:	e7f0      	b.n	9000e602 <vQueueAddToRegistry+0x26>
9000e620:	2206      	movs	r2, #6
9000e622:	e7ee      	b.n	9000e602 <vQueueAddToRegistry+0x26>
9000e624:	2207      	movs	r2, #7
9000e626:	e7ec      	b.n	9000e602 <vQueueAddToRegistry+0x26>
9000e628:	24022f08 	.word	0x24022f08

9000e62c <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
9000e62c:	b570      	push	{r4, r5, r6, lr}
9000e62e:	4605      	mov	r5, r0
9000e630:	460e      	mov	r6, r1
9000e632:	4614      	mov	r4, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
9000e634:	f7fe fdfe 	bl	9000d234 <vPortEnterCritical>
9000e638:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
9000e63c:	2bff      	cmp	r3, #255	; 0xff
9000e63e:	d102      	bne.n	9000e646 <vQueueWaitForMessageRestricted+0x1a>
9000e640:	2300      	movs	r3, #0
9000e642:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
9000e646:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
9000e64a:	2bff      	cmp	r3, #255	; 0xff
9000e64c:	d102      	bne.n	9000e654 <vQueueWaitForMessageRestricted+0x28>
9000e64e:	2300      	movs	r3, #0
9000e650:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
9000e654:	f7fe fe10 	bl	9000d278 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
9000e658:	6bab      	ldr	r3, [r5, #56]	; 0x38
9000e65a:	2b00      	cmp	r3, #0
9000e65c:	d043      	beq.n	9000e6e6 <vQueueWaitForMessageRestricted+0xba>
	taskENTER_CRITICAL();
9000e65e:	f7fe fde9 	bl	9000d234 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000e662:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
9000e666:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e668:	2c00      	cmp	r4, #0
9000e66a:	dd14      	ble.n	9000e696 <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e66c:	f105 0624 	add.w	r6, r5, #36	; 0x24
9000e670:	e003      	b.n	9000e67a <vQueueWaitForMessageRestricted+0x4e>
			--cTxLock;
9000e672:	1e63      	subs	r3, r4, #1
9000e674:	b2da      	uxtb	r2, r3
9000e676:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e678:	b16a      	cbz	r2, 9000e696 <vQueueWaitForMessageRestricted+0x6a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e67a:	6a6b      	ldr	r3, [r5, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e67c:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e67e:	b153      	cbz	r3, 9000e696 <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e680:	f000 fe74 	bl	9000f36c <xTaskRemoveFromEventList>
9000e684:	2800      	cmp	r0, #0
9000e686:	d0f4      	beq.n	9000e672 <vQueueWaitForMessageRestricted+0x46>
						vTaskMissedYield();
9000e688:	f000 ff0e 	bl	9000f4a8 <vTaskMissedYield>
			--cTxLock;
9000e68c:	1e63      	subs	r3, r4, #1
9000e68e:	b2da      	uxtb	r2, r3
9000e690:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e692:	2a00      	cmp	r2, #0
9000e694:	d1f1      	bne.n	9000e67a <vQueueWaitForMessageRestricted+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
9000e696:	23ff      	movs	r3, #255	; 0xff
9000e698:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
	taskEXIT_CRITICAL();
9000e69c:	f7fe fdec 	bl	9000d278 <vPortExitCritical>
	taskENTER_CRITICAL();
9000e6a0:	f7fe fdc8 	bl	9000d234 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000e6a4:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
9000e6a8:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e6aa:	2c00      	cmp	r4, #0
9000e6ac:	dd14      	ble.n	9000e6d8 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e6ae:	f105 0610 	add.w	r6, r5, #16
9000e6b2:	e003      	b.n	9000e6bc <vQueueWaitForMessageRestricted+0x90>
				--cRxLock;
9000e6b4:	1e63      	subs	r3, r4, #1
9000e6b6:	b2da      	uxtb	r2, r3
9000e6b8:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e6ba:	b16a      	cbz	r2, 9000e6d8 <vQueueWaitForMessageRestricted+0xac>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e6bc:	692b      	ldr	r3, [r5, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e6be:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e6c0:	b153      	cbz	r3, 9000e6d8 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e6c2:	f000 fe53 	bl	9000f36c <xTaskRemoveFromEventList>
9000e6c6:	2800      	cmp	r0, #0
9000e6c8:	d0f4      	beq.n	9000e6b4 <vQueueWaitForMessageRestricted+0x88>
					vTaskMissedYield();
9000e6ca:	f000 feed 	bl	9000f4a8 <vTaskMissedYield>
				--cRxLock;
9000e6ce:	1e63      	subs	r3, r4, #1
9000e6d0:	b2da      	uxtb	r2, r3
9000e6d2:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e6d4:	2a00      	cmp	r2, #0
9000e6d6:	d1f1      	bne.n	9000e6bc <vQueueWaitForMessageRestricted+0x90>
		pxQueue->cRxLock = queueUNLOCKED;
9000e6d8:	23ff      	movs	r3, #255	; 0xff
9000e6da:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
	}
9000e6de:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
9000e6e2:	f7fe bdc9 	b.w	9000d278 <vPortExitCritical>
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
9000e6e6:	4622      	mov	r2, r4
9000e6e8:	4631      	mov	r1, r6
9000e6ea:	f105 0024 	add.w	r0, r5, #36	; 0x24
9000e6ee:	f000 fdf3 	bl	9000f2d8 <vTaskPlaceOnEventListRestricted>
9000e6f2:	e7b4      	b.n	9000e65e <vQueueWaitForMessageRestricted+0x32>

9000e6f4 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
9000e6f4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9000e6f8:	4605      	mov	r5, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
9000e6fa:	f7fe fd9b 	bl	9000d234 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
9000e6fe:	4a34      	ldr	r2, [pc, #208]	; (9000e7d0 <prvAddNewTaskToReadyList+0xdc>)
		if( pxCurrentTCB == NULL )
9000e700:	4e34      	ldr	r6, [pc, #208]	; (9000e7d4 <prvAddNewTaskToReadyList+0xe0>)
		uxCurrentNumberOfTasks++;
9000e702:	6813      	ldr	r3, [r2, #0]
9000e704:	3301      	adds	r3, #1
9000e706:	6013      	str	r3, [r2, #0]
		if( pxCurrentTCB == NULL )
9000e708:	6833      	ldr	r3, [r6, #0]
9000e70a:	2b00      	cmp	r3, #0
9000e70c:	d032      	beq.n	9000e774 <prvAddNewTaskToReadyList+0x80>
		else
		{
			/* If the scheduler is not already running, make this task the
			current task if it is the highest priority task to be created
			so far. */
			if( xSchedulerRunning == pdFALSE )
9000e70e:	4c32      	ldr	r4, [pc, #200]	; (9000e7d8 <prvAddNewTaskToReadyList+0xe4>)
9000e710:	6823      	ldr	r3, [r4, #0]
9000e712:	b33b      	cbz	r3, 9000e764 <prvAddNewTaskToReadyList+0x70>
			{
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
9000e714:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
9000e716:	4f31      	ldr	r7, [pc, #196]	; (9000e7dc <prvAddNewTaskToReadyList+0xe8>)
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

		uxTaskNumber++;
9000e718:	4a31      	ldr	r2, [pc, #196]	; (9000e7e0 <prvAddNewTaskToReadyList+0xec>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
		}
		#endif /* configUSE_TRACE_FACILITY */
		traceTASK_CREATE( pxNewTCB );

		prvAddTaskToReadyList( pxNewTCB );
9000e71a:	4932      	ldr	r1, [pc, #200]	; (9000e7e4 <prvAddNewTaskToReadyList+0xf0>)
		uxTaskNumber++;
9000e71c:	6813      	ldr	r3, [r2, #0]
9000e71e:	3301      	adds	r3, #1
9000e720:	6013      	str	r3, [r2, #0]
			pxNewTCB->uxTCBNumber = uxTaskNumber;
9000e722:	646b      	str	r3, [r5, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
9000e724:	680b      	ldr	r3, [r1, #0]
9000e726:	4283      	cmp	r3, r0
9000e728:	d200      	bcs.n	9000e72c <prvAddNewTaskToReadyList+0x38>
9000e72a:	6008      	str	r0, [r1, #0]
9000e72c:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9000e730:	1d29      	adds	r1, r5, #4
9000e732:	eb07 0080 	add.w	r0, r7, r0, lsl #2
9000e736:	f7fe fcd3 	bl	9000d0e0 <vListInsertEnd>

		portSETUP_TCB( pxNewTCB );
	}
	taskEXIT_CRITICAL();
9000e73a:	f7fe fd9d 	bl	9000d278 <vPortExitCritical>

	if( xSchedulerRunning != pdFALSE )
9000e73e:	6823      	ldr	r3, [r4, #0]
9000e740:	b173      	cbz	r3, 9000e760 <prvAddNewTaskToReadyList+0x6c>
	{
		/* If the created task is of a higher priority than the current task
		then it should run now. */
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
9000e742:	6832      	ldr	r2, [r6, #0]
9000e744:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000e746:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
9000e748:	429a      	cmp	r2, r3
9000e74a:	d209      	bcs.n	9000e760 <prvAddNewTaskToReadyList+0x6c>
		{
			taskYIELD_IF_USING_PREEMPTION();
9000e74c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000e750:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000e754:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000e758:	f3bf 8f4f 	dsb	sy
9000e75c:	f3bf 8f6f 	isb	sy
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
9000e760:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
9000e764:	6833      	ldr	r3, [r6, #0]
9000e766:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
9000e768:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9000e76a:	4f1c      	ldr	r7, [pc, #112]	; (9000e7dc <prvAddNewTaskToReadyList+0xe8>)
9000e76c:	4283      	cmp	r3, r0
9000e76e:	d8d3      	bhi.n	9000e718 <prvAddNewTaskToReadyList+0x24>
					pxCurrentTCB = pxNewTCB;
9000e770:	6035      	str	r5, [r6, #0]
9000e772:	e7d1      	b.n	9000e718 <prvAddNewTaskToReadyList+0x24>
			pxCurrentTCB = pxNewTCB;
9000e774:	6035      	str	r5, [r6, #0]
			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
9000e776:	6813      	ldr	r3, [r2, #0]
9000e778:	2b01      	cmp	r3, #1
9000e77a:	d003      	beq.n	9000e784 <prvAddNewTaskToReadyList+0x90>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
9000e77c:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
9000e77e:	4f17      	ldr	r7, [pc, #92]	; (9000e7dc <prvAddNewTaskToReadyList+0xe8>)
9000e780:	4c15      	ldr	r4, [pc, #84]	; (9000e7d8 <prvAddNewTaskToReadyList+0xe4>)
9000e782:	e7c9      	b.n	9000e718 <prvAddNewTaskToReadyList+0x24>
9000e784:	4f15      	ldr	r7, [pc, #84]	; (9000e7dc <prvAddNewTaskToReadyList+0xe8>)
9000e786:	463c      	mov	r4, r7
9000e788:	f507 688c 	add.w	r8, r7, #1120	; 0x460
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
9000e78c:	4620      	mov	r0, r4
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
9000e78e:	3414      	adds	r4, #20
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
9000e790:	f7fe fc96 	bl	9000d0c0 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
9000e794:	45a0      	cmp	r8, r4
9000e796:	d1f9      	bne.n	9000e78c <prvAddNewTaskToReadyList+0x98>
	}

	vListInitialise( &xDelayedTaskList1 );
9000e798:	f8df 9060 	ldr.w	r9, [pc, #96]	; 9000e7fc <prvAddNewTaskToReadyList+0x108>
	vListInitialise( &xDelayedTaskList2 );
9000e79c:	f8df 8060 	ldr.w	r8, [pc, #96]	; 9000e800 <prvAddNewTaskToReadyList+0x10c>
	vListInitialise( &xDelayedTaskList1 );
9000e7a0:	4648      	mov	r0, r9
9000e7a2:	4c0d      	ldr	r4, [pc, #52]	; (9000e7d8 <prvAddNewTaskToReadyList+0xe4>)
9000e7a4:	f7fe fc8c 	bl	9000d0c0 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
9000e7a8:	4640      	mov	r0, r8
9000e7aa:	f7fe fc89 	bl	9000d0c0 <vListInitialise>
	vListInitialise( &xPendingReadyList );
9000e7ae:	480e      	ldr	r0, [pc, #56]	; (9000e7e8 <prvAddNewTaskToReadyList+0xf4>)
9000e7b0:	f7fe fc86 	bl	9000d0c0 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
9000e7b4:	480d      	ldr	r0, [pc, #52]	; (9000e7ec <prvAddNewTaskToReadyList+0xf8>)
9000e7b6:	f7fe fc83 	bl	9000d0c0 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
9000e7ba:	480d      	ldr	r0, [pc, #52]	; (9000e7f0 <prvAddNewTaskToReadyList+0xfc>)
9000e7bc:	f7fe fc80 	bl	9000d0c0 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
9000e7c0:	4b0c      	ldr	r3, [pc, #48]	; (9000e7f4 <prvAddNewTaskToReadyList+0x100>)
		prvAddTaskToReadyList( pxNewTCB );
9000e7c2:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
	pxDelayedTaskList = &xDelayedTaskList1;
9000e7c4:	f8c3 9000 	str.w	r9, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
9000e7c8:	4b0b      	ldr	r3, [pc, #44]	; (9000e7f8 <prvAddNewTaskToReadyList+0x104>)
9000e7ca:	f8c3 8000 	str.w	r8, [r3]
}
9000e7ce:	e7a3      	b.n	9000e718 <prvAddNewTaskToReadyList+0x24>
9000e7d0:	240233b4 	.word	0x240233b4
9000e7d4:	24022f48 	.word	0x24022f48
9000e7d8:	24023410 	.word	0x24023410
9000e7dc:	24022f54 	.word	0x24022f54
9000e7e0:	240233c0 	.word	0x240233c0
9000e7e4:	240233c4 	.word	0x240233c4
9000e7e8:	240233fc 	.word	0x240233fc
9000e7ec:	24023428 	.word	0x24023428
9000e7f0:	24023414 	.word	0x24023414
9000e7f4:	24022f4c 	.word	0x24022f4c
9000e7f8:	24022f50 	.word	0x24022f50
9000e7fc:	240233c8 	.word	0x240233c8
9000e800:	240233dc 	.word	0x240233dc

9000e804 <prvIdleTask>:
{
9000e804:	b580      	push	{r7, lr}
9000e806:	4c22      	ldr	r4, [pc, #136]	; (9000e890 <prvIdleTask+0x8c>)
				taskYIELD();
9000e808:	f04f 29e0 	mov.w	r9, #3758153728	; 0xe000e000
9000e80c:	4e21      	ldr	r6, [pc, #132]	; (9000e894 <prvIdleTask+0x90>)
9000e80e:	f04f 5880 	mov.w	r8, #268435456	; 0x10000000
9000e812:	4d21      	ldr	r5, [pc, #132]	; (9000e898 <prvIdleTask+0x94>)
9000e814:	4f21      	ldr	r7, [pc, #132]	; (9000e89c <prvIdleTask+0x98>)
	{
		TCB_t *pxTCB;

		/* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
		being called too often in the idle task. */
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
9000e816:	6823      	ldr	r3, [r4, #0]
9000e818:	b353      	cbz	r3, 9000e870 <prvIdleTask+0x6c>
		{
			taskENTER_CRITICAL();
9000e81a:	f7fe fd0b 	bl	9000d234 <vPortEnterCritical>
			{
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000e81e:	68f3      	ldr	r3, [r6, #12]
9000e820:	f8d3 a00c 	ldr.w	sl, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000e824:	f10a 0004 	add.w	r0, sl, #4
9000e828:	f7fe fc82 	bl	9000d130 <uxListRemove>
				--uxCurrentNumberOfTasks;
9000e82c:	682b      	ldr	r3, [r5, #0]
9000e82e:	3b01      	subs	r3, #1
9000e830:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
9000e832:	6823      	ldr	r3, [r4, #0]
9000e834:	3b01      	subs	r3, #1
9000e836:	6023      	str	r3, [r4, #0]
			}
			taskEXIT_CRITICAL();
9000e838:	f7fe fd1e 	bl	9000d278 <vPortExitCritical>
		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolidated for readability reasons. */
		{
			/* The task could have been allocated statically or dynamically, so
			check what was statically allocated before trying to free the
			memory. */
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
9000e83c:	f89a 305d 	ldrb.w	r3, [sl, #93]	; 0x5d
9000e840:	b163      	cbz	r3, 9000e85c <prvIdleTask+0x58>
				/* Both the stack and TCB were allocated dynamically, so both
				must be freed. */
				vPortFree( pxTCB->pxStack );
				vPortFree( pxTCB );
			}
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
9000e842:	2b01      	cmp	r3, #1
9000e844:	d020      	beq.n	9000e888 <prvIdleTask+0x84>
			}
			else
			{
				/* Neither the stack nor the TCB were allocated dynamically, so
				nothing needs to be freed. */
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
9000e846:	2b02      	cmp	r3, #2
9000e848:	d0e5      	beq.n	9000e816 <prvIdleTask+0x12>
9000e84a:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e84e:	f383 8811 	msr	BASEPRI, r3
9000e852:	f3bf 8f6f 	isb	sy
9000e856:	f3bf 8f4f 	dsb	sy
9000e85a:	e7fe      	b.n	9000e85a <prvIdleTask+0x56>
				vPortFree( pxTCB->pxStack );
9000e85c:	f8da 0030 	ldr.w	r0, [sl, #48]	; 0x30
9000e860:	f7fe fbca 	bl	9000cff8 <vPortFree>
				vPortFree( pxTCB );
9000e864:	4650      	mov	r0, sl
9000e866:	f7fe fbc7 	bl	9000cff8 <vPortFree>
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
9000e86a:	6823      	ldr	r3, [r4, #0]
9000e86c:	2b00      	cmp	r3, #0
9000e86e:	d1d4      	bne.n	9000e81a <prvIdleTask+0x16>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
9000e870:	683b      	ldr	r3, [r7, #0]
9000e872:	2b01      	cmp	r3, #1
9000e874:	d905      	bls.n	9000e882 <prvIdleTask+0x7e>
				taskYIELD();
9000e876:	f8c9 8d04 	str.w	r8, [r9, #3332]	; 0xd04
9000e87a:	f3bf 8f4f 	dsb	sy
9000e87e:	f3bf 8f6f 	isb	sy
			vApplicationIdleHook();
9000e882:	f7f4 f945 	bl	90002b10 <vApplicationIdleHook>
		prvCheckTasksWaitingTermination();
9000e886:	e7c6      	b.n	9000e816 <prvIdleTask+0x12>
				vPortFree( pxTCB );
9000e888:	4650      	mov	r0, sl
9000e88a:	f7fe fbb5 	bl	9000cff8 <vPortFree>
9000e88e:	e7c2      	b.n	9000e816 <prvIdleTask+0x12>
9000e890:	240233b8 	.word	0x240233b8
9000e894:	24023428 	.word	0x24023428
9000e898:	240233b4 	.word	0x240233b4
9000e89c:	24022f54 	.word	0x24022f54

9000e8a0 <xTaskIncrementTick.part.0>:
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
9000e8a0:	4b4a      	ldr	r3, [pc, #296]	; (9000e9cc <xTaskIncrementTick.part.0+0x12c>)
BaseType_t xTaskIncrementTick( void )
9000e8a2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
9000e8a6:	681e      	ldr	r6, [r3, #0]
BaseType_t xTaskIncrementTick( void )
9000e8a8:	b083      	sub	sp, #12
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
9000e8aa:	3601      	adds	r6, #1
		xTickCount = xConstTickCount;
9000e8ac:	601e      	str	r6, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
9000e8ae:	2e00      	cmp	r6, #0
9000e8b0:	d040      	beq.n	9000e934 <xTaskIncrementTick.part.0+0x94>
9000e8b2:	f8df b12c 	ldr.w	fp, [pc, #300]	; 9000e9e0 <xTaskIncrementTick.part.0+0x140>
		if( xConstTickCount >= xNextTaskUnblockTime )
9000e8b6:	f8db 3000 	ldr.w	r3, [fp]
9000e8ba:	429e      	cmp	r6, r3
9000e8bc:	d347      	bcc.n	9000e94e <xTaskIncrementTick.part.0+0xae>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000e8be:	4f44      	ldr	r7, [pc, #272]	; (9000e9d0 <xTaskIncrementTick.part.0+0x130>)
9000e8c0:	683b      	ldr	r3, [r7, #0]
9000e8c2:	681d      	ldr	r5, [r3, #0]
9000e8c4:	2d00      	cmp	r5, #0
9000e8c6:	d077      	beq.n	9000e9b8 <xTaskIncrementTick.part.0+0x118>
BaseType_t xSwitchRequired = pdFALSE;
9000e8c8:	2500      	movs	r5, #0
9000e8ca:	f8df 9118 	ldr.w	r9, [pc, #280]	; 9000e9e4 <xTaskIncrementTick.part.0+0x144>
9000e8ce:	f8df a118 	ldr.w	sl, [pc, #280]	; 9000e9e8 <xTaskIncrementTick.part.0+0x148>
					prvAddTaskToReadyList( pxTCB );
9000e8d2:	f8df 8118 	ldr.w	r8, [pc, #280]	; 9000e9ec <xTaskIncrementTick.part.0+0x14c>
9000e8d6:	e022      	b.n	9000e91e <xTaskIncrementTick.part.0+0x7e>
9000e8d8:	9101      	str	r1, [sp, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000e8da:	f7fe fc29 	bl	9000d130 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
9000e8de:	6aa3      	ldr	r3, [r4, #40]	; 0x28
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
9000e8e0:	f104 0018 	add.w	r0, r4, #24
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
9000e8e4:	9901      	ldr	r1, [sp, #4]
9000e8e6:	b113      	cbz	r3, 9000e8ee <xTaskIncrementTick.part.0+0x4e>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
9000e8e8:	f7fe fc22 	bl	9000d130 <uxListRemove>
9000e8ec:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
9000e8ee:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000e8f0:	f8d8 2000 	ldr.w	r2, [r8]
9000e8f4:	eb03 0083 	add.w	r0, r3, r3, lsl #2
9000e8f8:	4293      	cmp	r3, r2
9000e8fa:	eb09 0080 	add.w	r0, r9, r0, lsl #2
9000e8fe:	d901      	bls.n	9000e904 <xTaskIncrementTick.part.0+0x64>
9000e900:	f8c8 3000 	str.w	r3, [r8]
9000e904:	f7fe fbec 	bl	9000d0e0 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
9000e908:	f8da 2000 	ldr.w	r2, [sl]
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000e90c:	683b      	ldr	r3, [r7, #0]
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
9000e90e:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
9000e910:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000e912:	681b      	ldr	r3, [r3, #0]
							xSwitchRequired = pdTRUE;
9000e914:	4291      	cmp	r1, r2
9000e916:	bf28      	it	cs
9000e918:	2501      	movcs	r5, #1
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000e91a:	2b00      	cmp	r3, #0
9000e91c:	d050      	beq.n	9000e9c0 <xTaskIncrementTick.part.0+0x120>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000e91e:	683b      	ldr	r3, [r7, #0]
9000e920:	68db      	ldr	r3, [r3, #12]
9000e922:	68dc      	ldr	r4, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
9000e924:	6863      	ldr	r3, [r4, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000e926:	1d21      	adds	r1, r4, #4
					if( xConstTickCount < xItemValue )
9000e928:	429e      	cmp	r6, r3
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000e92a:	4608      	mov	r0, r1
					if( xConstTickCount < xItemValue )
9000e92c:	d2d4      	bcs.n	9000e8d8 <xTaskIncrementTick.part.0+0x38>
						xNextTaskUnblockTime = xItemValue;
9000e92e:	f8cb 3000 	str.w	r3, [fp]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
9000e932:	e011      	b.n	9000e958 <xTaskIncrementTick.part.0+0xb8>
			taskSWITCH_DELAYED_LISTS();
9000e934:	4b26      	ldr	r3, [pc, #152]	; (9000e9d0 <xTaskIncrementTick.part.0+0x130>)
9000e936:	681a      	ldr	r2, [r3, #0]
9000e938:	6812      	ldr	r2, [r2, #0]
9000e93a:	b30a      	cbz	r2, 9000e980 <xTaskIncrementTick.part.0+0xe0>
9000e93c:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e940:	f383 8811 	msr	BASEPRI, r3
9000e944:	f3bf 8f6f 	isb	sy
9000e948:	f3bf 8f4f 	dsb	sy
9000e94c:	e7fe      	b.n	9000e94c <xTaskIncrementTick.part.0+0xac>
BaseType_t xSwitchRequired = pdFALSE;
9000e94e:	2500      	movs	r5, #0
9000e950:	f8df 9090 	ldr.w	r9, [pc, #144]	; 9000e9e4 <xTaskIncrementTick.part.0+0x144>
9000e954:	f8df a090 	ldr.w	sl, [pc, #144]	; 9000e9e8 <xTaskIncrementTick.part.0+0x148>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
9000e958:	f8da 3000 	ldr.w	r3, [sl]
			if( xYieldPending != pdFALSE )
9000e95c:	491d      	ldr	r1, [pc, #116]	; (9000e9d4 <xTaskIncrementTick.part.0+0x134>)
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
9000e95e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9000e960:	eb03 0383 	add.w	r3, r3, r3, lsl #2
9000e964:	009b      	lsls	r3, r3, #2
9000e966:	f859 2003 	ldr.w	r2, [r9, r3]
			if( xYieldPending != pdFALSE )
9000e96a:	680b      	ldr	r3, [r1, #0]
				xSwitchRequired = pdTRUE;
9000e96c:	2a02      	cmp	r2, #2
9000e96e:	bf28      	it	cs
9000e970:	2501      	movcs	r5, #1
				xSwitchRequired = pdTRUE;
9000e972:	2b00      	cmp	r3, #0
}
9000e974:	bf0c      	ite	eq
9000e976:	4628      	moveq	r0, r5
9000e978:	2001      	movne	r0, #1
9000e97a:	b003      	add	sp, #12
9000e97c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			taskSWITCH_DELAYED_LISTS();
9000e980:	4a15      	ldr	r2, [pc, #84]	; (9000e9d8 <xTaskIncrementTick.part.0+0x138>)
9000e982:	6818      	ldr	r0, [r3, #0]
9000e984:	6811      	ldr	r1, [r2, #0]
9000e986:	6019      	str	r1, [r3, #0]
9000e988:	4914      	ldr	r1, [pc, #80]	; (9000e9dc <xTaskIncrementTick.part.0+0x13c>)
9000e98a:	6010      	str	r0, [r2, #0]
9000e98c:	680a      	ldr	r2, [r1, #0]
9000e98e:	3201      	adds	r2, #1
9000e990:	600a      	str	r2, [r1, #0]

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000e992:	681a      	ldr	r2, [r3, #0]
9000e994:	6812      	ldr	r2, [r2, #0]
9000e996:	b932      	cbnz	r2, 9000e9a6 <xTaskIncrementTick.part.0+0x106>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
9000e998:	f8df b044 	ldr.w	fp, [pc, #68]	; 9000e9e0 <xTaskIncrementTick.part.0+0x140>
9000e99c:	f04f 33ff 	mov.w	r3, #4294967295
9000e9a0:	f8cb 3000 	str.w	r3, [fp]
9000e9a4:	e787      	b.n	9000e8b6 <xTaskIncrementTick.part.0+0x16>
	{
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000e9a6:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
9000e9a8:	f8df b034 	ldr.w	fp, [pc, #52]	; 9000e9e0 <xTaskIncrementTick.part.0+0x140>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000e9ac:	68db      	ldr	r3, [r3, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
9000e9ae:	68db      	ldr	r3, [r3, #12]
9000e9b0:	685b      	ldr	r3, [r3, #4]
9000e9b2:	f8cb 3000 	str.w	r3, [fp]
	}
}
9000e9b6:	e77e      	b.n	9000e8b6 <xTaskIncrementTick.part.0+0x16>
9000e9b8:	f8df 9028 	ldr.w	r9, [pc, #40]	; 9000e9e4 <xTaskIncrementTick.part.0+0x144>
9000e9bc:	f8df a028 	ldr.w	sl, [pc, #40]	; 9000e9e8 <xTaskIncrementTick.part.0+0x148>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000e9c0:	f04f 33ff 	mov.w	r3, #4294967295
9000e9c4:	f8cb 3000 	str.w	r3, [fp]
					break;
9000e9c8:	e7c6      	b.n	9000e958 <xTaskIncrementTick.part.0+0xb8>
9000e9ca:	bf00      	nop
9000e9cc:	2402343c 	.word	0x2402343c
9000e9d0:	24022f4c 	.word	0x24022f4c
9000e9d4:	24023440 	.word	0x24023440
9000e9d8:	24022f50 	.word	0x24022f50
9000e9dc:	240233f4 	.word	0x240233f4
9000e9e0:	240233f0 	.word	0x240233f0
9000e9e4:	24022f54 	.word	0x24022f54
9000e9e8:	24022f48 	.word	0x24022f48
9000e9ec:	240233c4 	.word	0x240233c4

9000e9f0 <xTaskResumeAll.part.0>:
BaseType_t xTaskResumeAll( void )
9000e9f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		--uxSchedulerSuspended;
9000e9f4:	4d41      	ldr	r5, [pc, #260]	; (9000eafc <xTaskResumeAll.part.0+0x10c>)
BaseType_t xTaskResumeAll( void )
9000e9f6:	b083      	sub	sp, #12
	taskENTER_CRITICAL();
9000e9f8:	f7fe fc1c 	bl	9000d234 <vPortEnterCritical>
		--uxSchedulerSuspended;
9000e9fc:	682b      	ldr	r3, [r5, #0]
9000e9fe:	3b01      	subs	r3, #1
9000ea00:	602b      	str	r3, [r5, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
9000ea02:	682b      	ldr	r3, [r5, #0]
9000ea04:	2b00      	cmp	r3, #0
9000ea06:	d161      	bne.n	9000eacc <xTaskResumeAll.part.0+0xdc>
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
9000ea08:	4b3d      	ldr	r3, [pc, #244]	; (9000eb00 <xTaskResumeAll.part.0+0x110>)
9000ea0a:	681b      	ldr	r3, [r3, #0]
9000ea0c:	2b00      	cmp	r3, #0
9000ea0e:	d05d      	beq.n	9000eacc <xTaskResumeAll.part.0+0xdc>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
9000ea10:	4e3c      	ldr	r6, [pc, #240]	; (9000eb04 <xTaskResumeAll.part.0+0x114>)
9000ea12:	6833      	ldr	r3, [r6, #0]
9000ea14:	2b00      	cmp	r3, #0
9000ea16:	d06e      	beq.n	9000eaf6 <xTaskResumeAll.part.0+0x106>
9000ea18:	4f3b      	ldr	r7, [pc, #236]	; (9000eb08 <xTaskResumeAll.part.0+0x118>)
9000ea1a:	f8df 90fc 	ldr.w	r9, [pc, #252]	; 9000eb18 <xTaskResumeAll.part.0+0x128>
9000ea1e:	f8df 80fc 	ldr.w	r8, [pc, #252]	; 9000eb1c <xTaskResumeAll.part.0+0x12c>
9000ea22:	f8df a0fc 	ldr.w	sl, [pc, #252]	; 9000eb20 <xTaskResumeAll.part.0+0x130>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000ea26:	68f3      	ldr	r3, [r6, #12]
9000ea28:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000ea2a:	f104 0b04 	add.w	fp, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
9000ea2e:	f104 0018 	add.w	r0, r4, #24
9000ea32:	f7fe fb7d 	bl	9000d130 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000ea36:	4658      	mov	r0, fp
9000ea38:	f7fe fb7a 	bl	9000d130 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
9000ea3c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000ea3e:	683a      	ldr	r2, [r7, #0]
9000ea40:	4659      	mov	r1, fp
9000ea42:	eb03 0083 	add.w	r0, r3, r3, lsl #2
9000ea46:	4293      	cmp	r3, r2
9000ea48:	eb09 0080 	add.w	r0, r9, r0, lsl #2
9000ea4c:	d900      	bls.n	9000ea50 <xTaskResumeAll.part.0+0x60>
9000ea4e:	603b      	str	r3, [r7, #0]
9000ea50:	f7fe fb46 	bl	9000d0e0 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
9000ea54:	f8d8 3000 	ldr.w	r3, [r8]
9000ea58:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000ea5a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9000ea5c:	429a      	cmp	r2, r3
9000ea5e:	d33d      	bcc.n	9000eadc <xTaskResumeAll.part.0+0xec>
						xYieldPending = pdTRUE;
9000ea60:	2301      	movs	r3, #1
9000ea62:	f8ca 3000 	str.w	r3, [sl]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
9000ea66:	6833      	ldr	r3, [r6, #0]
9000ea68:	2b00      	cmp	r3, #0
9000ea6a:	d1dc      	bne.n	9000ea26 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000ea6c:	4b27      	ldr	r3, [pc, #156]	; (9000eb0c <xTaskResumeAll.part.0+0x11c>)
9000ea6e:	681a      	ldr	r2, [r3, #0]
9000ea70:	6812      	ldr	r2, [r2, #0]
9000ea72:	2a00      	cmp	r2, #0
9000ea74:	d03a      	beq.n	9000eaec <xTaskResumeAll.part.0+0xfc>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000ea76:	681a      	ldr	r2, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
9000ea78:	4b25      	ldr	r3, [pc, #148]	; (9000eb10 <xTaskResumeAll.part.0+0x120>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000ea7a:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
9000ea7c:	68d2      	ldr	r2, [r2, #12]
9000ea7e:	6852      	ldr	r2, [r2, #4]
9000ea80:	601a      	str	r2, [r3, #0]
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
9000ea82:	4e24      	ldr	r6, [pc, #144]	; (9000eb14 <xTaskResumeAll.part.0+0x124>)
9000ea84:	6834      	ldr	r4, [r6, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
9000ea86:	b194      	cbz	r4, 9000eaae <xTaskResumeAll.part.0+0xbe>
								xYieldPending = pdTRUE;
9000ea88:	2701      	movs	r7, #1
9000ea8a:	e006      	b.n	9000ea9a <xTaskResumeAll.part.0+0xaa>
9000ea8c:	f7ff ff08 	bl	9000e8a0 <xTaskIncrementTick.part.0>
							if( xTaskIncrementTick() != pdFALSE )
9000ea90:	b108      	cbz	r0, 9000ea96 <xTaskResumeAll.part.0+0xa6>
								xYieldPending = pdTRUE;
9000ea92:	f8ca 7000 	str.w	r7, [sl]
						} while( xPendedCounts > ( TickType_t ) 0U );
9000ea96:	3c01      	subs	r4, #1
9000ea98:	d008      	beq.n	9000eaac <xTaskResumeAll.part.0+0xbc>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
9000ea9a:	682b      	ldr	r3, [r5, #0]
9000ea9c:	2b00      	cmp	r3, #0
9000ea9e:	d0f5      	beq.n	9000ea8c <xTaskResumeAll.part.0+0x9c>
		++xPendedTicks;
9000eaa0:	6833      	ldr	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
9000eaa2:	3c01      	subs	r4, #1
		++xPendedTicks;
9000eaa4:	f103 0301 	add.w	r3, r3, #1
9000eaa8:	6033      	str	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
9000eaaa:	d1f6      	bne.n	9000ea9a <xTaskResumeAll.part.0+0xaa>
						xPendedTicks = 0;
9000eaac:	6034      	str	r4, [r6, #0]
				if( xYieldPending != pdFALSE )
9000eaae:	f8da 3000 	ldr.w	r3, [sl]
9000eab2:	b15b      	cbz	r3, 9000eacc <xTaskResumeAll.part.0+0xdc>
					taskYIELD_IF_USING_PREEMPTION();
9000eab4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000eab8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000eabc:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000eac0:	f3bf 8f4f 	dsb	sy
9000eac4:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
9000eac8:	2001      	movs	r0, #1
9000eaca:	e000      	b.n	9000eace <xTaskResumeAll.part.0+0xde>
BaseType_t xAlreadyYielded = pdFALSE;
9000eacc:	2000      	movs	r0, #0
9000eace:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
9000ead0:	f7fe fbd2 	bl	9000d278 <vPortExitCritical>
}
9000ead4:	9801      	ldr	r0, [sp, #4]
9000ead6:	b003      	add	sp, #12
9000ead8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
9000eadc:	6833      	ldr	r3, [r6, #0]
9000eade:	2b00      	cmp	r3, #0
9000eae0:	d1a1      	bne.n	9000ea26 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000eae2:	4b0a      	ldr	r3, [pc, #40]	; (9000eb0c <xTaskResumeAll.part.0+0x11c>)
9000eae4:	681a      	ldr	r2, [r3, #0]
9000eae6:	6812      	ldr	r2, [r2, #0]
9000eae8:	2a00      	cmp	r2, #0
9000eaea:	d1c4      	bne.n	9000ea76 <xTaskResumeAll.part.0+0x86>
		xNextTaskUnblockTime = portMAX_DELAY;
9000eaec:	4b08      	ldr	r3, [pc, #32]	; (9000eb10 <xTaskResumeAll.part.0+0x120>)
9000eaee:	f04f 32ff 	mov.w	r2, #4294967295
9000eaf2:	601a      	str	r2, [r3, #0]
9000eaf4:	e7c5      	b.n	9000ea82 <xTaskResumeAll.part.0+0x92>
9000eaf6:	f8df a028 	ldr.w	sl, [pc, #40]	; 9000eb20 <xTaskResumeAll.part.0+0x130>
9000eafa:	e7c2      	b.n	9000ea82 <xTaskResumeAll.part.0+0x92>
9000eafc:	240233bc 	.word	0x240233bc
9000eb00:	240233b4 	.word	0x240233b4
9000eb04:	240233fc 	.word	0x240233fc
9000eb08:	240233c4 	.word	0x240233c4
9000eb0c:	24022f4c 	.word	0x24022f4c
9000eb10:	240233f0 	.word	0x240233f0
9000eb14:	240233f8 	.word	0x240233f8
9000eb18:	24022f54 	.word	0x24022f54
9000eb1c:	24022f48 	.word	0x24022f48
9000eb20:	24023440 	.word	0x24023440

9000eb24 <xTaskCreateStatic>:
	{
9000eb24:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9000eb28:	b083      	sub	sp, #12
9000eb2a:	4698      	mov	r8, r3
		configASSERT( puxStackBuffer != NULL );
9000eb2c:	e9dd 340b 	ldrd	r3, r4, [sp, #44]	; 0x2c
9000eb30:	b1bb      	cbz	r3, 9000eb62 <xTaskCreateStatic+0x3e>
		configASSERT( pxTaskBuffer != NULL );
9000eb32:	b16c      	cbz	r4, 9000eb50 <xTaskCreateStatic+0x2c>
			volatile size_t xSize = sizeof( StaticTask_t );
9000eb34:	2360      	movs	r3, #96	; 0x60
9000eb36:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( TCB_t ) );
9000eb38:	9b01      	ldr	r3, [sp, #4]
9000eb3a:	2b60      	cmp	r3, #96	; 0x60
9000eb3c:	d01a      	beq.n	9000eb74 <xTaskCreateStatic+0x50>
9000eb3e:	f04f 0350 	mov.w	r3, #80	; 0x50
9000eb42:	f383 8811 	msr	BASEPRI, r3
9000eb46:	f3bf 8f6f 	isb	sy
9000eb4a:	f3bf 8f4f 	dsb	sy
9000eb4e:	e7fe      	b.n	9000eb4e <xTaskCreateStatic+0x2a>
9000eb50:	f04f 0350 	mov.w	r3, #80	; 0x50
9000eb54:	f383 8811 	msr	BASEPRI, r3
9000eb58:	f3bf 8f6f 	isb	sy
9000eb5c:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
9000eb60:	e7fe      	b.n	9000eb60 <xTaskCreateStatic+0x3c>
9000eb62:	f04f 0350 	mov.w	r3, #80	; 0x50
9000eb66:	f383 8811 	msr	BASEPRI, r3
9000eb6a:	f3bf 8f6f 	isb	sy
9000eb6e:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
9000eb72:	e7fe      	b.n	9000eb72 <xTaskCreateStatic+0x4e>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
9000eb74:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000eb76:	0096      	lsls	r6, r2, #2
9000eb78:	4607      	mov	r7, r0
9000eb7a:	460d      	mov	r5, r1
9000eb7c:	4618      	mov	r0, r3
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
9000eb7e:	6323      	str	r3, [r4, #48]	; 0x30
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
9000eb80:	9b01      	ldr	r3, [sp, #4]
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
9000eb82:	2302      	movs	r3, #2
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000eb84:	4632      	mov	r2, r6
9000eb86:	21a5      	movs	r1, #165	; 0xa5
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
9000eb88:	f884 305d 	strb.w	r3, [r4, #93]	; 0x5d
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000eb8c:	f017 fcb8 	bl	90026500 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
9000eb90:	1f32      	subs	r2, r6, #4
9000eb92:	6b23      	ldr	r3, [r4, #48]	; 0x30
9000eb94:	4413      	add	r3, r2
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
9000eb96:	f023 0907 	bic.w	r9, r3, #7
	if( pcName != NULL )
9000eb9a:	2d00      	cmp	r5, #0
9000eb9c:	d069      	beq.n	9000ec72 <xTaskCreateStatic+0x14e>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000eb9e:	782b      	ldrb	r3, [r5, #0]
9000eba0:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
			if( pcName[ x ] == ( char ) 0x00 )
9000eba4:	2b00      	cmp	r3, #0
9000eba6:	d03b      	beq.n	9000ec20 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000eba8:	786b      	ldrb	r3, [r5, #1]
9000ebaa:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
			if( pcName[ x ] == ( char ) 0x00 )
9000ebae:	2b00      	cmp	r3, #0
9000ebb0:	d036      	beq.n	9000ec20 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ebb2:	78ab      	ldrb	r3, [r5, #2]
9000ebb4:	f884 3036 	strb.w	r3, [r4, #54]	; 0x36
			if( pcName[ x ] == ( char ) 0x00 )
9000ebb8:	b393      	cbz	r3, 9000ec20 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ebba:	78eb      	ldrb	r3, [r5, #3]
9000ebbc:	f884 3037 	strb.w	r3, [r4, #55]	; 0x37
			if( pcName[ x ] == ( char ) 0x00 )
9000ebc0:	b373      	cbz	r3, 9000ec20 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ebc2:	792b      	ldrb	r3, [r5, #4]
9000ebc4:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
			if( pcName[ x ] == ( char ) 0x00 )
9000ebc8:	b353      	cbz	r3, 9000ec20 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ebca:	796b      	ldrb	r3, [r5, #5]
9000ebcc:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
			if( pcName[ x ] == ( char ) 0x00 )
9000ebd0:	b333      	cbz	r3, 9000ec20 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ebd2:	79ab      	ldrb	r3, [r5, #6]
9000ebd4:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
9000ebd8:	b313      	cbz	r3, 9000ec20 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ebda:	79eb      	ldrb	r3, [r5, #7]
9000ebdc:	f884 303b 	strb.w	r3, [r4, #59]	; 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
9000ebe0:	b1f3      	cbz	r3, 9000ec20 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ebe2:	7a2b      	ldrb	r3, [r5, #8]
9000ebe4:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
9000ebe8:	b1d3      	cbz	r3, 9000ec20 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ebea:	7a6b      	ldrb	r3, [r5, #9]
9000ebec:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
9000ebf0:	b1b3      	cbz	r3, 9000ec20 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ebf2:	7aab      	ldrb	r3, [r5, #10]
9000ebf4:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
9000ebf8:	b193      	cbz	r3, 9000ec20 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ebfa:	7aeb      	ldrb	r3, [r5, #11]
9000ebfc:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
9000ec00:	b173      	cbz	r3, 9000ec20 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ec02:	7b2b      	ldrb	r3, [r5, #12]
9000ec04:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
			if( pcName[ x ] == ( char ) 0x00 )
9000ec08:	b153      	cbz	r3, 9000ec20 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ec0a:	7b6b      	ldrb	r3, [r5, #13]
9000ec0c:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
			if( pcName[ x ] == ( char ) 0x00 )
9000ec10:	b133      	cbz	r3, 9000ec20 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ec12:	7bab      	ldrb	r3, [r5, #14]
9000ec14:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
			if( pcName[ x ] == ( char ) 0x00 )
9000ec18:	b113      	cbz	r3, 9000ec20 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ec1a:	7beb      	ldrb	r3, [r5, #15]
9000ec1c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
9000ec20:	2300      	movs	r3, #0
9000ec22:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
9000ec26:	9d0a      	ldr	r5, [sp, #40]	; 0x28
		pxNewTCB->uxMutexesHeld = 0;
9000ec28:	2600      	movs	r6, #0
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9000ec2a:	1d20      	adds	r0, r4, #4
9000ec2c:	2d37      	cmp	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
9000ec2e:	6526      	str	r6, [r4, #80]	; 0x50
9000ec30:	bf28      	it	cs
9000ec32:	2537      	movcs	r5, #55	; 0x37
	pxNewTCB->uxPriority = uxPriority;
9000ec34:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
9000ec36:	64e5      	str	r5, [r4, #76]	; 0x4c
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000ec38:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9000ec3c:	f7fe fa4c 	bl	9000d0d8 <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
9000ec40:	f104 0018 	add.w	r0, r4, #24
9000ec44:	f7fe fa48 	bl	9000d0d8 <vListInitialiseItem>
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000ec48:	4642      	mov	r2, r8
9000ec4a:	4639      	mov	r1, r7
		pxNewTCB->ulNotifiedValue = 0;
9000ec4c:	65a6      	str	r6, [r4, #88]	; 0x58
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000ec4e:	4648      	mov	r0, r9
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000ec50:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
9000ec52:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
9000ec54:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
9000ec56:	6566      	str	r6, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
9000ec58:	f884 605c 	strb.w	r6, [r4, #92]	; 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000ec5c:	f7fe faba 	bl	9000d1d4 <pxPortInitialiseStack>
9000ec60:	4603      	mov	r3, r0
			prvAddNewTaskToReadyList( pxNewTCB );
9000ec62:	4620      	mov	r0, r4
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000ec64:	6023      	str	r3, [r4, #0]
			prvAddNewTaskToReadyList( pxNewTCB );
9000ec66:	f7ff fd45 	bl	9000e6f4 <prvAddNewTaskToReadyList>
	}
9000ec6a:	4620      	mov	r0, r4
9000ec6c:	b003      	add	sp, #12
9000ec6e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
9000ec72:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
9000ec76:	e7d6      	b.n	9000ec26 <xTaskCreateStatic+0x102>

9000ec78 <xTaskCreate>:
	{
9000ec78:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
9000ec7c:	0096      	lsls	r6, r2, #2
	{
9000ec7e:	4680      	mov	r8, r0
9000ec80:	460d      	mov	r5, r1
9000ec82:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
9000ec84:	4630      	mov	r0, r6
9000ec86:	f7fe f8f9 	bl	9000ce7c <pvPortMalloc>
			if( pxStack != NULL )
9000ec8a:	2800      	cmp	r0, #0
9000ec8c:	f000 8083 	beq.w	9000ed96 <xTaskCreate+0x11e>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
9000ec90:	4607      	mov	r7, r0
9000ec92:	2060      	movs	r0, #96	; 0x60
9000ec94:	f7fe f8f2 	bl	9000ce7c <pvPortMalloc>
				if( pxNewTCB != NULL )
9000ec98:	4604      	mov	r4, r0
9000ec9a:	2800      	cmp	r0, #0
9000ec9c:	d07f      	beq.n	9000ed9e <xTaskCreate+0x126>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
9000ec9e:	2300      	movs	r3, #0
					pxNewTCB->pxStack = pxStack;
9000eca0:	6307      	str	r7, [r0, #48]	; 0x30
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000eca2:	4632      	mov	r2, r6
9000eca4:	4638      	mov	r0, r7
9000eca6:	21a5      	movs	r1, #165	; 0xa5
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
9000eca8:	f884 305d 	strb.w	r3, [r4, #93]	; 0x5d
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000ecac:	f017 fc28 	bl	90026500 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
9000ecb0:	f8d4 a030 	ldr.w	sl, [r4, #48]	; 0x30
	if( pcName != NULL )
9000ecb4:	2d00      	cmp	r5, #0
9000ecb6:	d078      	beq.n	9000edaa <xTaskCreate+0x132>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ecb8:	782b      	ldrb	r3, [r5, #0]
9000ecba:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
			if( pcName[ x ] == ( char ) 0x00 )
9000ecbe:	2b00      	cmp	r3, #0
9000ecc0:	d03b      	beq.n	9000ed3a <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ecc2:	786b      	ldrb	r3, [r5, #1]
9000ecc4:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
			if( pcName[ x ] == ( char ) 0x00 )
9000ecc8:	2b00      	cmp	r3, #0
9000ecca:	d036      	beq.n	9000ed3a <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000eccc:	78ab      	ldrb	r3, [r5, #2]
9000ecce:	f884 3036 	strb.w	r3, [r4, #54]	; 0x36
			if( pcName[ x ] == ( char ) 0x00 )
9000ecd2:	b393      	cbz	r3, 9000ed3a <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ecd4:	78eb      	ldrb	r3, [r5, #3]
9000ecd6:	f884 3037 	strb.w	r3, [r4, #55]	; 0x37
			if( pcName[ x ] == ( char ) 0x00 )
9000ecda:	b373      	cbz	r3, 9000ed3a <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ecdc:	792b      	ldrb	r3, [r5, #4]
9000ecde:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
			if( pcName[ x ] == ( char ) 0x00 )
9000ece2:	b353      	cbz	r3, 9000ed3a <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ece4:	796b      	ldrb	r3, [r5, #5]
9000ece6:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
			if( pcName[ x ] == ( char ) 0x00 )
9000ecea:	b333      	cbz	r3, 9000ed3a <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ecec:	79ab      	ldrb	r3, [r5, #6]
9000ecee:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
9000ecf2:	b313      	cbz	r3, 9000ed3a <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ecf4:	79eb      	ldrb	r3, [r5, #7]
9000ecf6:	f884 303b 	strb.w	r3, [r4, #59]	; 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
9000ecfa:	b1f3      	cbz	r3, 9000ed3a <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ecfc:	7a2b      	ldrb	r3, [r5, #8]
9000ecfe:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
9000ed02:	b1d3      	cbz	r3, 9000ed3a <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ed04:	7a6b      	ldrb	r3, [r5, #9]
9000ed06:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
9000ed0a:	b1b3      	cbz	r3, 9000ed3a <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ed0c:	7aab      	ldrb	r3, [r5, #10]
9000ed0e:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
9000ed12:	b193      	cbz	r3, 9000ed3a <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ed14:	7aeb      	ldrb	r3, [r5, #11]
9000ed16:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
9000ed1a:	b173      	cbz	r3, 9000ed3a <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ed1c:	7b2b      	ldrb	r3, [r5, #12]
9000ed1e:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
			if( pcName[ x ] == ( char ) 0x00 )
9000ed22:	b153      	cbz	r3, 9000ed3a <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ed24:	7b6b      	ldrb	r3, [r5, #13]
9000ed26:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
			if( pcName[ x ] == ( char ) 0x00 )
9000ed2a:	b133      	cbz	r3, 9000ed3a <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ed2c:	7bab      	ldrb	r3, [r5, #14]
9000ed2e:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
			if( pcName[ x ] == ( char ) 0x00 )
9000ed32:	b113      	cbz	r3, 9000ed3a <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ed34:	7beb      	ldrb	r3, [r5, #15]
9000ed36:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
9000ed3a:	2300      	movs	r3, #0
9000ed3c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
9000ed40:	9d08      	ldr	r5, [sp, #32]
		pxNewTCB->uxMutexesHeld = 0;
9000ed42:	2700      	movs	r7, #0
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9000ed44:	1d20      	adds	r0, r4, #4
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
9000ed46:	3e04      	subs	r6, #4
9000ed48:	2d37      	cmp	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
9000ed4a:	6527      	str	r7, [r4, #80]	; 0x50
9000ed4c:	bf28      	it	cs
9000ed4e:	2537      	movcs	r5, #55	; 0x37
	pxNewTCB->uxPriority = uxPriority;
9000ed50:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
9000ed52:	64e5      	str	r5, [r4, #76]	; 0x4c
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000ed54:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9000ed58:	f7fe f9be 	bl	9000d0d8 <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
9000ed5c:	f104 0018 	add.w	r0, r4, #24
9000ed60:	f7fe f9ba 	bl	9000d0d8 <vListInitialiseItem>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
9000ed64:	eb0a 0006 	add.w	r0, sl, r6
		pxNewTCB->ulNotifiedValue = 0;
9000ed68:	65a7      	str	r7, [r4, #88]	; 0x58
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000ed6a:	464a      	mov	r2, r9
9000ed6c:	4641      	mov	r1, r8
9000ed6e:	f020 0007 	bic.w	r0, r0, #7
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000ed72:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
9000ed74:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
9000ed76:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
9000ed78:	6567      	str	r7, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
9000ed7a:	f884 705c 	strb.w	r7, [r4, #92]	; 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000ed7e:	f7fe fa29 	bl	9000d1d4 <pxPortInitialiseStack>
	if( pxCreatedTask != NULL )
9000ed82:	9b09      	ldr	r3, [sp, #36]	; 0x24
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000ed84:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
9000ed86:	b103      	cbz	r3, 9000ed8a <xTaskCreate+0x112>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
9000ed88:	601c      	str	r4, [r3, #0]
			prvAddNewTaskToReadyList( pxNewTCB );
9000ed8a:	4620      	mov	r0, r4
9000ed8c:	f7ff fcb2 	bl	9000e6f4 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
9000ed90:	2001      	movs	r0, #1
	}
9000ed92:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
9000ed96:	f04f 30ff 	mov.w	r0, #4294967295
	}
9000ed9a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
					vPortFree( pxStack );
9000ed9e:	4638      	mov	r0, r7
9000eda0:	f7fe f92a 	bl	9000cff8 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
9000eda4:	f04f 30ff 	mov.w	r0, #4294967295
9000eda8:	e7f3      	b.n	9000ed92 <xTaskCreate+0x11a>
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
9000edaa:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
9000edae:	e7c7      	b.n	9000ed40 <xTaskCreate+0xc8>

9000edb0 <vTaskDelay>:
	{
9000edb0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
9000edb2:	b950      	cbnz	r0, 9000edca <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
9000edb4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000edb8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000edbc:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000edc0:	f3bf 8f4f 	dsb	sy
9000edc4:	f3bf 8f6f 	isb	sy
	}
9000edc8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			configASSERT( uxSchedulerSuspended == 0 );
9000edca:	4d1e      	ldr	r5, [pc, #120]	; (9000ee44 <vTaskDelay+0x94>)
9000edcc:	682b      	ldr	r3, [r5, #0]
9000edce:	b143      	cbz	r3, 9000ede2 <vTaskDelay+0x32>
9000edd0:	f04f 0350 	mov.w	r3, #80	; 0x50
9000edd4:	f383 8811 	msr	BASEPRI, r3
9000edd8:	f3bf 8f6f 	isb	sy
9000eddc:	f3bf 8f4f 	dsb	sy
9000ede0:	e7fe      	b.n	9000ede0 <vTaskDelay+0x30>
	++uxSchedulerSuspended;
9000ede2:	682b      	ldr	r3, [r5, #0]
9000ede4:	4604      	mov	r4, r0
9000ede6:	3301      	adds	r3, #1
9000ede8:	602b      	str	r3, [r5, #0]
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
9000edea:	4b17      	ldr	r3, [pc, #92]	; (9000ee48 <vTaskDelay+0x98>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000edec:	4e17      	ldr	r6, [pc, #92]	; (9000ee4c <vTaskDelay+0x9c>)
const TickType_t xConstTickCount = xTickCount;
9000edee:	681f      	ldr	r7, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000edf0:	6830      	ldr	r0, [r6, #0]
9000edf2:	3004      	adds	r0, #4
9000edf4:	f7fe f99c 	bl	9000d130 <uxListRemove>
		else
		{
			/* Calculate the time at which the task should be woken if the event
			does not occur.  This may overflow but this doesn't matter, the
			kernel will manage it correctly. */
			xTimeToWake = xConstTickCount + xTicksToWait;
9000edf8:	19e4      	adds	r4, r4, r7

			/* The list item will be inserted in wake time order. */
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
9000edfa:	6833      	ldr	r3, [r6, #0]
9000edfc:	605c      	str	r4, [r3, #4]

			if( xTimeToWake < xConstTickCount )
9000edfe:	d315      	bcc.n	9000ee2c <vTaskDelay+0x7c>
			{
				/* Wake time has overflowed.  Place this item in the overflow
				list. */
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000ee00:	4b13      	ldr	r3, [pc, #76]	; (9000ee50 <vTaskDelay+0xa0>)
9000ee02:	6818      	ldr	r0, [r3, #0]
9000ee04:	6831      	ldr	r1, [r6, #0]
9000ee06:	3104      	adds	r1, #4
9000ee08:	f7fe f97a 	bl	9000d100 <vListInsert>
	configASSERT( uxSchedulerSuspended );
9000ee0c:	682b      	ldr	r3, [r5, #0]
9000ee0e:	b943      	cbnz	r3, 9000ee22 <vTaskDelay+0x72>
9000ee10:	f04f 0350 	mov.w	r3, #80	; 0x50
9000ee14:	f383 8811 	msr	BASEPRI, r3
9000ee18:	f3bf 8f6f 	isb	sy
9000ee1c:	f3bf 8f4f 	dsb	sy
9000ee20:	e7fe      	b.n	9000ee20 <vTaskDelay+0x70>
9000ee22:	f7ff fde5 	bl	9000e9f0 <xTaskResumeAll.part.0>
		if( xAlreadyYielded == pdFALSE )
9000ee26:	2800      	cmp	r0, #0
9000ee28:	d0c4      	beq.n	9000edb4 <vTaskDelay+0x4>
	}
9000ee2a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			}
			else
			{
				/* The wake time has not overflowed, so the current block list
				is used. */
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000ee2c:	4b09      	ldr	r3, [pc, #36]	; (9000ee54 <vTaskDelay+0xa4>)
9000ee2e:	6818      	ldr	r0, [r3, #0]
9000ee30:	6831      	ldr	r1, [r6, #0]
9000ee32:	3104      	adds	r1, #4
9000ee34:	f7fe f964 	bl	9000d100 <vListInsert>

				/* If the task entering the blocked state was placed at the
				head of the list of blocked tasks then xNextTaskUnblockTime
				needs to be updated too. */
				if( xTimeToWake < xNextTaskUnblockTime )
9000ee38:	4b07      	ldr	r3, [pc, #28]	; (9000ee58 <vTaskDelay+0xa8>)
9000ee3a:	681a      	ldr	r2, [r3, #0]
9000ee3c:	4294      	cmp	r4, r2
9000ee3e:	d2e5      	bcs.n	9000ee0c <vTaskDelay+0x5c>
				{
					xNextTaskUnblockTime = xTimeToWake;
9000ee40:	601c      	str	r4, [r3, #0]
9000ee42:	e7e3      	b.n	9000ee0c <vTaskDelay+0x5c>
9000ee44:	240233bc 	.word	0x240233bc
9000ee48:	2402343c 	.word	0x2402343c
9000ee4c:	24022f48 	.word	0x24022f48
9000ee50:	24022f50 	.word	0x24022f50
9000ee54:	24022f4c 	.word	0x24022f4c
9000ee58:	240233f0 	.word	0x240233f0

9000ee5c <vTaskResume>:
		configASSERT( xTaskToResume );
9000ee5c:	b198      	cbz	r0, 9000ee86 <vTaskResume+0x2a>
	{
9000ee5e:	b530      	push	{r4, r5, lr}
		if( ( pxTCB != pxCurrentTCB ) && ( pxTCB != NULL ) )
9000ee60:	4d22      	ldr	r5, [pc, #136]	; (9000eeec <vTaskResume+0x90>)
	{
9000ee62:	b083      	sub	sp, #12
9000ee64:	4604      	mov	r4, r0
		if( ( pxTCB != pxCurrentTCB ) && ( pxTCB != NULL ) )
9000ee66:	682b      	ldr	r3, [r5, #0]
9000ee68:	4283      	cmp	r3, r0
9000ee6a:	d00a      	beq.n	9000ee82 <vTaskResume+0x26>
			taskENTER_CRITICAL();
9000ee6c:	f7fe f9e2 	bl	9000d234 <vPortEnterCritical>
		if( listIS_CONTAINED_WITHIN( &xSuspendedTaskList, &( pxTCB->xStateListItem ) ) != pdFALSE )
9000ee70:	4b1f      	ldr	r3, [pc, #124]	; (9000eef0 <vTaskResume+0x94>)
9000ee72:	6962      	ldr	r2, [r4, #20]
9000ee74:	429a      	cmp	r2, r3
9000ee76:	d00f      	beq.n	9000ee98 <vTaskResume+0x3c>
	}
9000ee78:	b003      	add	sp, #12
9000ee7a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
			taskEXIT_CRITICAL();
9000ee7e:	f7fe b9fb 	b.w	9000d278 <vPortExitCritical>
	}
9000ee82:	b003      	add	sp, #12
9000ee84:	bd30      	pop	{r4, r5, pc}
9000ee86:	f04f 0350 	mov.w	r3, #80	; 0x50
9000ee8a:	f383 8811 	msr	BASEPRI, r3
9000ee8e:	f3bf 8f6f 	isb	sy
9000ee92:	f3bf 8f4f 	dsb	sy
		configASSERT( xTaskToResume );
9000ee96:	e7fe      	b.n	9000ee96 <vTaskResume+0x3a>
			if( listIS_CONTAINED_WITHIN( &xPendingReadyList, &( pxTCB->xEventListItem ) ) == pdFALSE )
9000ee98:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000ee9a:	4a16      	ldr	r2, [pc, #88]	; (9000eef4 <vTaskResume+0x98>)
				if( listIS_CONTAINED_WITHIN( NULL, &( pxTCB->xEventListItem ) ) != pdFALSE ) /*lint !e961.  The cast is only redundant when NULL is used. */
9000ee9c:	4293      	cmp	r3, r2
9000ee9e:	d0eb      	beq.n	9000ee78 <vTaskResume+0x1c>
9000eea0:	2b00      	cmp	r3, #0
9000eea2:	d1e9      	bne.n	9000ee78 <vTaskResume+0x1c>
					( void ) uxListRemove(  &( pxTCB->xStateListItem ) );
9000eea4:	1d21      	adds	r1, r4, #4
9000eea6:	4608      	mov	r0, r1
9000eea8:	9101      	str	r1, [sp, #4]
9000eeaa:	f7fe f941 	bl	9000d130 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
9000eeae:	4b12      	ldr	r3, [pc, #72]	; (9000eef8 <vTaskResume+0x9c>)
9000eeb0:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
9000eeb2:	681a      	ldr	r2, [r3, #0]
9000eeb4:	9901      	ldr	r1, [sp, #4]
9000eeb6:	4290      	cmp	r0, r2
9000eeb8:	d900      	bls.n	9000eebc <vTaskResume+0x60>
9000eeba:	6018      	str	r0, [r3, #0]
9000eebc:	4b0f      	ldr	r3, [pc, #60]	; (9000eefc <vTaskResume+0xa0>)
9000eebe:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9000eec2:	eb03 0080 	add.w	r0, r3, r0, lsl #2
9000eec6:	f7fe f90b 	bl	9000d0e0 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
9000eeca:	682b      	ldr	r3, [r5, #0]
9000eecc:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000eece:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9000eed0:	429a      	cmp	r2, r3
9000eed2:	d3d1      	bcc.n	9000ee78 <vTaskResume+0x1c>
						taskYIELD_IF_USING_PREEMPTION();
9000eed4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000eed8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000eedc:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000eee0:	f3bf 8f4f 	dsb	sy
9000eee4:	f3bf 8f6f 	isb	sy
9000eee8:	e7c6      	b.n	9000ee78 <vTaskResume+0x1c>
9000eeea:	bf00      	nop
9000eeec:	24022f48 	.word	0x24022f48
9000eef0:	24023414 	.word	0x24023414
9000eef4:	240233fc 	.word	0x240233fc
9000eef8:	240233c4 	.word	0x240233c4
9000eefc:	24022f54 	.word	0x24022f54

9000ef00 <vTaskStartScheduler>:
{
9000ef00:	b570      	push	{r4, r5, r6, lr}
9000ef02:	b084      	sub	sp, #16
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
9000ef04:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
9000ef06:	4668      	mov	r0, sp
9000ef08:	aa02      	add	r2, sp, #8
9000ef0a:	a901      	add	r1, sp, #4
		StackType_t *pxIdleTaskStackBuffer = NULL;
9000ef0c:	e9cd 4400 	strd	r4, r4, [sp]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
9000ef10:	f7fd ff96 	bl	9000ce40 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
9000ef14:	9d00      	ldr	r5, [sp, #0]
9000ef16:	e9dd 0601 	ldrd	r0, r6, [sp, #4]
		configASSERT( puxStackBuffer != NULL );
9000ef1a:	b1b8      	cbz	r0, 9000ef4c <vTaskStartScheduler+0x4c>
		configASSERT( pxTaskBuffer != NULL );
9000ef1c:	b16d      	cbz	r5, 9000ef3a <vTaskStartScheduler+0x3a>
			volatile size_t xSize = sizeof( StaticTask_t );
9000ef1e:	2260      	movs	r2, #96	; 0x60
9000ef20:	9203      	str	r2, [sp, #12]
			configASSERT( xSize == sizeof( TCB_t ) );
9000ef22:	9a03      	ldr	r2, [sp, #12]
9000ef24:	2a60      	cmp	r2, #96	; 0x60
9000ef26:	d01a      	beq.n	9000ef5e <vTaskStartScheduler+0x5e>
9000ef28:	f04f 0350 	mov.w	r3, #80	; 0x50
9000ef2c:	f383 8811 	msr	BASEPRI, r3
9000ef30:	f3bf 8f6f 	isb	sy
9000ef34:	f3bf 8f4f 	dsb	sy
9000ef38:	e7fe      	b.n	9000ef38 <vTaskStartScheduler+0x38>
9000ef3a:	f04f 0350 	mov.w	r3, #80	; 0x50
9000ef3e:	f383 8811 	msr	BASEPRI, r3
9000ef42:	f3bf 8f6f 	isb	sy
9000ef46:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
9000ef4a:	e7fe      	b.n	9000ef4a <vTaskStartScheduler+0x4a>
9000ef4c:	f04f 0350 	mov.w	r3, #80	; 0x50
9000ef50:	f383 8811 	msr	BASEPRI, r3
9000ef54:	f3bf 8f6f 	isb	sy
9000ef58:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
9000ef5c:	e7fe      	b.n	9000ef5c <vTaskStartScheduler+0x5c>
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000ef5e:	00b6      	lsls	r6, r6, #2
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
9000ef60:	2302      	movs	r3, #2
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000ef62:	21a5      	movs	r1, #165	; 0xa5
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
9000ef64:	6328      	str	r0, [r5, #48]	; 0x30
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000ef66:	4632      	mov	r2, r6
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
9000ef68:	f885 305d 	strb.w	r3, [r5, #93]	; 0x5d
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
9000ef6c:	9b03      	ldr	r3, [sp, #12]
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000ef6e:	f017 fac7 	bl	90026500 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
9000ef72:	1f33      	subs	r3, r6, #4
9000ef74:	6b2a      	ldr	r2, [r5, #48]	; 0x30
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ef76:	492a      	ldr	r1, [pc, #168]	; (9000f020 <vTaskStartScheduler+0x120>)
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9000ef78:	1d28      	adds	r0, r5, #4
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
9000ef7a:	441a      	add	r2, r3
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ef7c:	f885 4038 	strb.w	r4, [r5, #56]	; 0x38
9000ef80:	6369      	str	r1, [r5, #52]	; 0x34
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
9000ef82:	f885 4043 	strb.w	r4, [r5, #67]	; 0x43
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
9000ef86:	f022 0607 	bic.w	r6, r2, #7
	pxNewTCB->uxPriority = uxPriority;
9000ef8a:	62ec      	str	r4, [r5, #44]	; 0x2c
		pxNewTCB->uxMutexesHeld = 0;
9000ef8c:	e9c5 4413 	strd	r4, r4, [r5, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9000ef90:	f7fe f8a2 	bl	9000d0d8 <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
9000ef94:	f105 0018 	add.w	r0, r5, #24
9000ef98:	f7fe f89e 	bl	9000d0d8 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000ef9c:	2338      	movs	r3, #56	; 0x38
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000ef9e:	4622      	mov	r2, r4
9000efa0:	4920      	ldr	r1, [pc, #128]	; (9000f024 <vTaskStartScheduler+0x124>)
		pxNewTCB->ulNotifiedValue = 0;
9000efa2:	65ac      	str	r4, [r5, #88]	; 0x58
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000efa4:	4630      	mov	r0, r6
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000efa6:	61ab      	str	r3, [r5, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
9000efa8:	612d      	str	r5, [r5, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
9000efaa:	626d      	str	r5, [r5, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
9000efac:	656c      	str	r4, [r5, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
9000efae:	f885 405c 	strb.w	r4, [r5, #92]	; 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000efb2:	f7fe f90f 	bl	9000d1d4 <pxPortInitialiseStack>
9000efb6:	4603      	mov	r3, r0
			prvAddNewTaskToReadyList( pxNewTCB );
9000efb8:	4628      	mov	r0, r5
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000efba:	602b      	str	r3, [r5, #0]
			prvAddNewTaskToReadyList( pxNewTCB );
9000efbc:	f7ff fb9a 	bl	9000e6f4 <prvAddNewTaskToReadyList>
			xReturn = xTimerCreateTimerTask();
9000efc0:	f000 fd12 	bl	9000f9e8 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
9000efc4:	2801      	cmp	r0, #1
9000efc6:	d00c      	beq.n	9000efe2 <vTaskStartScheduler+0xe2>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
9000efc8:	3001      	adds	r0, #1
9000efca:	d001      	beq.n	9000efd0 <vTaskStartScheduler+0xd0>
}
9000efcc:	b004      	add	sp, #16
9000efce:	bd70      	pop	{r4, r5, r6, pc}
9000efd0:	f04f 0350 	mov.w	r3, #80	; 0x50
9000efd4:	f383 8811 	msr	BASEPRI, r3
9000efd8:	f3bf 8f6f 	isb	sy
9000efdc:	f3bf 8f4f 	dsb	sy
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
9000efe0:	e7fe      	b.n	9000efe0 <vTaskStartScheduler+0xe0>
9000efe2:	f04f 0350 	mov.w	r3, #80	; 0x50
9000efe6:	f383 8811 	msr	BASEPRI, r3
9000efea:	f3bf 8f6f 	isb	sy
9000efee:	f3bf 8f4f 	dsb	sy
		xNextTaskUnblockTime = portMAX_DELAY;
9000eff2:	4b0d      	ldr	r3, [pc, #52]	; (9000f028 <vTaskStartScheduler+0x128>)
9000eff4:	f04f 32ff 	mov.w	r2, #4294967295
		xSchedulerRunning = pdTRUE;
9000eff8:	490c      	ldr	r1, [pc, #48]	; (9000f02c <vTaskStartScheduler+0x12c>)
		xNextTaskUnblockTime = portMAX_DELAY;
9000effa:	601a      	str	r2, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
9000effc:	4b0c      	ldr	r3, [pc, #48]	; (9000f030 <vTaskStartScheduler+0x130>)
		traceTASK_SWITCHED_IN();
9000effe:	4a0d      	ldr	r2, [pc, #52]	; (9000f034 <vTaskStartScheduler+0x134>)
		xSchedulerRunning = pdTRUE;
9000f000:	6008      	str	r0, [r1, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
9000f002:	601c      	str	r4, [r3, #0]
		traceTASK_SWITCHED_IN();
9000f004:	6813      	ldr	r3, [r2, #0]
		if( xTask == NULL )
9000f006:	b143      	cbz	r3, 9000f01a <vTaskStartScheduler+0x11a>
		if( xTCB->pxTaskTag != NULL )
9000f008:	6d5b      	ldr	r3, [r3, #84]	; 0x54
9000f00a:	b10b      	cbz	r3, 9000f010 <vTaskStartScheduler+0x110>
			xReturn = xTCB->pxTaskTag( pvParameter );
9000f00c:	2000      	movs	r0, #0
9000f00e:	4798      	blx	r3
}
9000f010:	b004      	add	sp, #16
9000f012:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		if( xPortStartScheduler() != pdFALSE )
9000f016:	f7fe b99f 	b.w	9000d358 <xPortStartScheduler>
			xTCB = pxCurrentTCB;
9000f01a:	6813      	ldr	r3, [r2, #0]
9000f01c:	e7f4      	b.n	9000f008 <vTaskStartScheduler+0x108>
9000f01e:	bf00      	nop
9000f020:	454c4449 	.word	0x454c4449
9000f024:	9000e805 	.word	0x9000e805
9000f028:	240233f0 	.word	0x240233f0
9000f02c:	24023410 	.word	0x24023410
9000f030:	2402343c 	.word	0x2402343c
9000f034:	24022f48 	.word	0x24022f48

9000f038 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
9000f038:	4a02      	ldr	r2, [pc, #8]	; (9000f044 <vTaskSuspendAll+0xc>)
9000f03a:	6813      	ldr	r3, [r2, #0]
9000f03c:	3301      	adds	r3, #1
9000f03e:	6013      	str	r3, [r2, #0]
}
9000f040:	4770      	bx	lr
9000f042:	bf00      	nop
9000f044:	240233bc 	.word	0x240233bc

9000f048 <xTaskResumeAll>:
	configASSERT( uxSchedulerSuspended );
9000f048:	4b06      	ldr	r3, [pc, #24]	; (9000f064 <xTaskResumeAll+0x1c>)
9000f04a:	681b      	ldr	r3, [r3, #0]
9000f04c:	b943      	cbnz	r3, 9000f060 <xTaskResumeAll+0x18>
9000f04e:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f052:	f383 8811 	msr	BASEPRI, r3
9000f056:	f3bf 8f6f 	isb	sy
9000f05a:	f3bf 8f4f 	dsb	sy
9000f05e:	e7fe      	b.n	9000f05e <xTaskResumeAll+0x16>
9000f060:	f7ff bcc6 	b.w	9000e9f0 <xTaskResumeAll.part.0>
9000f064:	240233bc 	.word	0x240233bc

9000f068 <xTaskGetTickCount>:
		xTicks = xTickCount;
9000f068:	4b01      	ldr	r3, [pc, #4]	; (9000f070 <xTaskGetTickCount+0x8>)
9000f06a:	6818      	ldr	r0, [r3, #0]
}
9000f06c:	4770      	bx	lr
9000f06e:	bf00      	nop
9000f070:	2402343c 	.word	0x2402343c

9000f074 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
9000f074:	4b05      	ldr	r3, [pc, #20]	; (9000f08c <xTaskIncrementTick+0x18>)
9000f076:	681b      	ldr	r3, [r3, #0]
9000f078:	b90b      	cbnz	r3, 9000f07e <xTaskIncrementTick+0xa>
9000f07a:	f7ff bc11 	b.w	9000e8a0 <xTaskIncrementTick.part.0>
		++xPendedTicks;
9000f07e:	4a04      	ldr	r2, [pc, #16]	; (9000f090 <xTaskIncrementTick+0x1c>)
}
9000f080:	2000      	movs	r0, #0
		++xPendedTicks;
9000f082:	6813      	ldr	r3, [r2, #0]
9000f084:	3301      	adds	r3, #1
9000f086:	6013      	str	r3, [r2, #0]
}
9000f088:	4770      	bx	lr
9000f08a:	bf00      	nop
9000f08c:	240233bc 	.word	0x240233bc
9000f090:	240233f8 	.word	0x240233f8

9000f094 <vTaskSetApplicationTaskTag>:
	{
9000f094:	b538      	push	{r3, r4, r5, lr}
9000f096:	460d      	mov	r5, r1
		if( xTask == NULL )
9000f098:	b138      	cbz	r0, 9000f0aa <vTaskSetApplicationTaskTag+0x16>
9000f09a:	4604      	mov	r4, r0
		taskENTER_CRITICAL();
9000f09c:	f7fe f8ca 	bl	9000d234 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
9000f0a0:	6565      	str	r5, [r4, #84]	; 0x54
	}
9000f0a2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
9000f0a6:	f7fe b8e7 	b.w	9000d278 <vPortExitCritical>
			xTCB = ( TCB_t * ) pxCurrentTCB;
9000f0aa:	4b04      	ldr	r3, [pc, #16]	; (9000f0bc <vTaskSetApplicationTaskTag+0x28>)
9000f0ac:	681c      	ldr	r4, [r3, #0]
		taskENTER_CRITICAL();
9000f0ae:	f7fe f8c1 	bl	9000d234 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
9000f0b2:	6565      	str	r5, [r4, #84]	; 0x54
	}
9000f0b4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
9000f0b8:	f7fe b8de 	b.w	9000d278 <vPortExitCritical>
9000f0bc:	24022f48 	.word	0x24022f48

9000f0c0 <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
9000f0c0:	4b27      	ldr	r3, [pc, #156]	; (9000f160 <vTaskSwitchContext+0xa0>)
9000f0c2:	681b      	ldr	r3, [r3, #0]
9000f0c4:	b11b      	cbz	r3, 9000f0ce <vTaskSwitchContext+0xe>
		xYieldPending = pdTRUE;
9000f0c6:	4b27      	ldr	r3, [pc, #156]	; (9000f164 <vTaskSwitchContext+0xa4>)
9000f0c8:	2201      	movs	r2, #1
9000f0ca:	601a      	str	r2, [r3, #0]
9000f0cc:	4770      	bx	lr
{
9000f0ce:	b570      	push	{r4, r5, r6, lr}
		xYieldPending = pdFALSE;
9000f0d0:	4a24      	ldr	r2, [pc, #144]	; (9000f164 <vTaskSwitchContext+0xa4>)
		traceTASK_SWITCHED_OUT();
9000f0d2:	4c25      	ldr	r4, [pc, #148]	; (9000f168 <vTaskSwitchContext+0xa8>)
		xYieldPending = pdFALSE;
9000f0d4:	6013      	str	r3, [r2, #0]
		traceTASK_SWITCHED_OUT();
9000f0d6:	6823      	ldr	r3, [r4, #0]
		if( xTask == NULL )
9000f0d8:	2b00      	cmp	r3, #0
9000f0da:	d036      	beq.n	9000f14a <vTaskSwitchContext+0x8a>
		if( xTCB->pxTaskTag != NULL )
9000f0dc:	6d5b      	ldr	r3, [r3, #84]	; 0x54
9000f0de:	b10b      	cbz	r3, 9000f0e4 <vTaskSwitchContext+0x24>
			xReturn = xTCB->pxTaskTag( pvParameter );
9000f0e0:	2001      	movs	r0, #1
9000f0e2:	4798      	blx	r3
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000f0e4:	4d21      	ldr	r5, [pc, #132]	; (9000f16c <vTaskSwitchContext+0xac>)
9000f0e6:	4922      	ldr	r1, [pc, #136]	; (9000f170 <vTaskSwitchContext+0xb0>)
9000f0e8:	682b      	ldr	r3, [r5, #0]
9000f0ea:	eb03 0283 	add.w	r2, r3, r3, lsl #2
9000f0ee:	0098      	lsls	r0, r3, #2
9000f0f0:	0092      	lsls	r2, r2, #2
9000f0f2:	588a      	ldr	r2, [r1, r2]
9000f0f4:	b942      	cbnz	r2, 9000f108 <vTaskSwitchContext+0x48>
9000f0f6:	b1fb      	cbz	r3, 9000f138 <vTaskSwitchContext+0x78>
9000f0f8:	3b01      	subs	r3, #1
9000f0fa:	eb03 0283 	add.w	r2, r3, r3, lsl #2
9000f0fe:	0098      	lsls	r0, r3, #2
9000f100:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
9000f104:	2a00      	cmp	r2, #0
9000f106:	d0f6      	beq.n	9000f0f6 <vTaskSwitchContext+0x36>
9000f108:	4418      	add	r0, r3
9000f10a:	eb01 0c80 	add.w	ip, r1, r0, lsl #2
9000f10e:	f8dc 1004 	ldr.w	r1, [ip, #4]
9000f112:	4662      	mov	r2, ip
9000f114:	6849      	ldr	r1, [r1, #4]
9000f116:	3208      	adds	r2, #8
9000f118:	4291      	cmp	r1, r2
9000f11a:	f8cc 1004 	str.w	r1, [ip, #4]
9000f11e:	d01b      	beq.n	9000f158 <vTaskSwitchContext+0x98>
9000f120:	68ca      	ldr	r2, [r1, #12]
9000f122:	6022      	str	r2, [r4, #0]
9000f124:	602b      	str	r3, [r5, #0]
		traceTASK_SWITCHED_IN();
9000f126:	6823      	ldr	r3, [r4, #0]
		if( xTask == NULL )
9000f128:	b1a3      	cbz	r3, 9000f154 <vTaskSwitchContext+0x94>
		if( xTCB->pxTaskTag != NULL )
9000f12a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
9000f12c:	b11b      	cbz	r3, 9000f136 <vTaskSwitchContext+0x76>
			xReturn = xTCB->pxTaskTag( pvParameter );
9000f12e:	2000      	movs	r0, #0
}
9000f130:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			xReturn = xTCB->pxTaskTag( pvParameter );
9000f134:	4718      	bx	r3
}
9000f136:	bd70      	pop	{r4, r5, r6, pc}
9000f138:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f13c:	f383 8811 	msr	BASEPRI, r3
9000f140:	f3bf 8f6f 	isb	sy
9000f144:	f3bf 8f4f 	dsb	sy
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000f148:	e7fe      	b.n	9000f148 <vTaskSwitchContext+0x88>
			xTCB = pxCurrentTCB;
9000f14a:	6823      	ldr	r3, [r4, #0]
		if( xTCB->pxTaskTag != NULL )
9000f14c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
9000f14e:	2b00      	cmp	r3, #0
9000f150:	d1c6      	bne.n	9000f0e0 <vTaskSwitchContext+0x20>
9000f152:	e7c7      	b.n	9000f0e4 <vTaskSwitchContext+0x24>
			xTCB = pxCurrentTCB;
9000f154:	6823      	ldr	r3, [r4, #0]
9000f156:	e7e8      	b.n	9000f12a <vTaskSwitchContext+0x6a>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000f158:	6849      	ldr	r1, [r1, #4]
9000f15a:	f8cc 1004 	str.w	r1, [ip, #4]
9000f15e:	e7df      	b.n	9000f120 <vTaskSwitchContext+0x60>
9000f160:	240233bc 	.word	0x240233bc
9000f164:	24023440 	.word	0x24023440
9000f168:	24022f48 	.word	0x24022f48
9000f16c:	240233c4 	.word	0x240233c4
9000f170:	24022f54 	.word	0x24022f54

9000f174 <vTaskSuspend>:
	{
9000f174:	b570      	push	{r4, r5, r6, lr}
9000f176:	4604      	mov	r4, r0
			pxTCB = prvGetTCBFromHandle( xTaskToSuspend );
9000f178:	4e2e      	ldr	r6, [pc, #184]	; (9000f234 <vTaskSuspend+0xc0>)
		taskENTER_CRITICAL();
9000f17a:	f7fe f85b 	bl	9000d234 <vPortEnterCritical>
			pxTCB = prvGetTCBFromHandle( xTaskToSuspend );
9000f17e:	2c00      	cmp	r4, #0
9000f180:	d03a      	beq.n	9000f1f8 <vTaskSuspend+0x84>
			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000f182:	1d25      	adds	r5, r4, #4
9000f184:	4628      	mov	r0, r5
9000f186:	f7fd ffd3 	bl	9000d130 <uxListRemove>
			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
9000f18a:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000f18c:	b11b      	cbz	r3, 9000f196 <vTaskSuspend+0x22>
				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
9000f18e:	f104 0018 	add.w	r0, r4, #24
9000f192:	f7fd ffcd 	bl	9000d130 <uxListRemove>
			vListInsertEnd( &xSuspendedTaskList, &( pxTCB->xStateListItem ) );
9000f196:	4629      	mov	r1, r5
9000f198:	4827      	ldr	r0, [pc, #156]	; (9000f238 <vTaskSuspend+0xc4>)
9000f19a:	f7fd ffa1 	bl	9000d0e0 <vListInsertEnd>
				if( pxTCB->ucNotifyState == taskWAITING_NOTIFICATION )
9000f19e:	f894 305c 	ldrb.w	r3, [r4, #92]	; 0x5c
9000f1a2:	2b01      	cmp	r3, #1
9000f1a4:	d102      	bne.n	9000f1ac <vTaskSuspend+0x38>
					pxTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
9000f1a6:	2300      	movs	r3, #0
9000f1a8:	f884 305c 	strb.w	r3, [r4, #92]	; 0x5c
		if( xSchedulerRunning != pdFALSE )
9000f1ac:	4d23      	ldr	r5, [pc, #140]	; (9000f23c <vTaskSuspend+0xc8>)
		taskEXIT_CRITICAL();
9000f1ae:	f7fe f863 	bl	9000d278 <vPortExitCritical>
		if( xSchedulerRunning != pdFALSE )
9000f1b2:	682b      	ldr	r3, [r5, #0]
9000f1b4:	b98b      	cbnz	r3, 9000f1da <vTaskSuspend+0x66>
		if( pxTCB == pxCurrentTCB )
9000f1b6:	6833      	ldr	r3, [r6, #0]
9000f1b8:	42a3      	cmp	r3, r4
9000f1ba:	d000      	beq.n	9000f1be <vTaskSuspend+0x4a>
	}
9000f1bc:	bd70      	pop	{r4, r5, r6, pc}
			if( xSchedulerRunning != pdFALSE )
9000f1be:	682b      	ldr	r3, [r5, #0]
9000f1c0:	b30b      	cbz	r3, 9000f206 <vTaskSuspend+0x92>
				configASSERT( uxSchedulerSuspended == 0 );
9000f1c2:	4b1f      	ldr	r3, [pc, #124]	; (9000f240 <vTaskSuspend+0xcc>)
9000f1c4:	681b      	ldr	r3, [r3, #0]
9000f1c6:	b333      	cbz	r3, 9000f216 <vTaskSuspend+0xa2>
9000f1c8:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f1cc:	f383 8811 	msr	BASEPRI, r3
9000f1d0:	f3bf 8f6f 	isb	sy
9000f1d4:	f3bf 8f4f 	dsb	sy
9000f1d8:	e7fe      	b.n	9000f1d8 <vTaskSuspend+0x64>
			taskENTER_CRITICAL();
9000f1da:	f7fe f82b 	bl	9000d234 <vPortEnterCritical>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000f1de:	4b19      	ldr	r3, [pc, #100]	; (9000f244 <vTaskSuspend+0xd0>)
9000f1e0:	681a      	ldr	r2, [r3, #0]
9000f1e2:	6812      	ldr	r2, [r2, #0]
9000f1e4:	b152      	cbz	r2, 9000f1fc <vTaskSuspend+0x88>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000f1e6:	681a      	ldr	r2, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
9000f1e8:	4b17      	ldr	r3, [pc, #92]	; (9000f248 <vTaskSuspend+0xd4>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000f1ea:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
9000f1ec:	68d2      	ldr	r2, [r2, #12]
9000f1ee:	6852      	ldr	r2, [r2, #4]
9000f1f0:	601a      	str	r2, [r3, #0]
			taskEXIT_CRITICAL();
9000f1f2:	f7fe f841 	bl	9000d278 <vPortExitCritical>
9000f1f6:	e7de      	b.n	9000f1b6 <vTaskSuspend+0x42>
			pxTCB = prvGetTCBFromHandle( xTaskToSuspend );
9000f1f8:	6834      	ldr	r4, [r6, #0]
9000f1fa:	e7c2      	b.n	9000f182 <vTaskSuspend+0xe>
		xNextTaskUnblockTime = portMAX_DELAY;
9000f1fc:	4b12      	ldr	r3, [pc, #72]	; (9000f248 <vTaskSuspend+0xd4>)
9000f1fe:	f04f 32ff 	mov.w	r2, #4294967295
9000f202:	601a      	str	r2, [r3, #0]
9000f204:	e7f5      	b.n	9000f1f2 <vTaskSuspend+0x7e>
				if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == uxCurrentNumberOfTasks ) /*lint !e931 Right has no side effect, just volatile. */
9000f206:	490c      	ldr	r1, [pc, #48]	; (9000f238 <vTaskSuspend+0xc4>)
9000f208:	4a10      	ldr	r2, [pc, #64]	; (9000f24c <vTaskSuspend+0xd8>)
9000f20a:	6809      	ldr	r1, [r1, #0]
9000f20c:	6812      	ldr	r2, [r2, #0]
9000f20e:	4291      	cmp	r1, r2
9000f210:	d10c      	bne.n	9000f22c <vTaskSuspend+0xb8>
					pxCurrentTCB = NULL;
9000f212:	6033      	str	r3, [r6, #0]
	}
9000f214:	bd70      	pop	{r4, r5, r6, pc}
				portYIELD_WITHIN_API();
9000f216:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000f21a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000f21e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000f222:	f3bf 8f4f 	dsb	sy
9000f226:	f3bf 8f6f 	isb	sy
	}
9000f22a:	bd70      	pop	{r4, r5, r6, pc}
9000f22c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
					vTaskSwitchContext();
9000f230:	f7ff bf46 	b.w	9000f0c0 <vTaskSwitchContext>
9000f234:	24022f48 	.word	0x24022f48
9000f238:	24023414 	.word	0x24023414
9000f23c:	24023410 	.word	0x24023410
9000f240:	240233bc 	.word	0x240233bc
9000f244:	24022f4c 	.word	0x24022f4c
9000f248:	240233f0 	.word	0x240233f0
9000f24c:	240233b4 	.word	0x240233b4

9000f250 <vTaskPlaceOnEventList>:
	configASSERT( pxEventList );
9000f250:	b1f0      	cbz	r0, 9000f290 <vTaskPlaceOnEventList+0x40>
{
9000f252:	b570      	push	{r4, r5, r6, lr}
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
9000f254:	4d1a      	ldr	r5, [pc, #104]	; (9000f2c0 <vTaskPlaceOnEventList+0x70>)
9000f256:	460c      	mov	r4, r1
9000f258:	6829      	ldr	r1, [r5, #0]
9000f25a:	3118      	adds	r1, #24
9000f25c:	f7fd ff50 	bl	9000d100 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
9000f260:	4b18      	ldr	r3, [pc, #96]	; (9000f2c4 <vTaskPlaceOnEventList+0x74>)
9000f262:	681e      	ldr	r6, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000f264:	6828      	ldr	r0, [r5, #0]
9000f266:	3004      	adds	r0, #4
9000f268:	f7fd ff62 	bl	9000d130 <uxListRemove>
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
9000f26c:	1c63      	adds	r3, r4, #1
9000f26e:	d020      	beq.n	9000f2b2 <vTaskPlaceOnEventList+0x62>
			xTimeToWake = xConstTickCount + xTicksToWait;
9000f270:	19a4      	adds	r4, r4, r6
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
9000f272:	682b      	ldr	r3, [r5, #0]
9000f274:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
9000f276:	d214      	bcs.n	9000f2a2 <vTaskPlaceOnEventList+0x52>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f278:	4b13      	ldr	r3, [pc, #76]	; (9000f2c8 <vTaskPlaceOnEventList+0x78>)
9000f27a:	6818      	ldr	r0, [r3, #0]
9000f27c:	6829      	ldr	r1, [r5, #0]
9000f27e:	3104      	adds	r1, #4
9000f280:	f7fd ff3e 	bl	9000d100 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
9000f284:	4b11      	ldr	r3, [pc, #68]	; (9000f2cc <vTaskPlaceOnEventList+0x7c>)
9000f286:	681a      	ldr	r2, [r3, #0]
9000f288:	4294      	cmp	r4, r2
9000f28a:	d200      	bcs.n	9000f28e <vTaskPlaceOnEventList+0x3e>
					xNextTaskUnblockTime = xTimeToWake;
9000f28c:	601c      	str	r4, [r3, #0]
}
9000f28e:	bd70      	pop	{r4, r5, r6, pc}
9000f290:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f294:	f383 8811 	msr	BASEPRI, r3
9000f298:	f3bf 8f6f 	isb	sy
9000f29c:	f3bf 8f4f 	dsb	sy
	configASSERT( pxEventList );
9000f2a0:	e7fe      	b.n	9000f2a0 <vTaskPlaceOnEventList+0x50>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f2a2:	4b0b      	ldr	r3, [pc, #44]	; (9000f2d0 <vTaskPlaceOnEventList+0x80>)
9000f2a4:	6818      	ldr	r0, [r3, #0]
9000f2a6:	6829      	ldr	r1, [r5, #0]
}
9000f2a8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f2ac:	3104      	adds	r1, #4
9000f2ae:	f7fd bf27 	b.w	9000d100 <vListInsert>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f2b2:	6829      	ldr	r1, [r5, #0]
9000f2b4:	4807      	ldr	r0, [pc, #28]	; (9000f2d4 <vTaskPlaceOnEventList+0x84>)
9000f2b6:	3104      	adds	r1, #4
}
9000f2b8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f2bc:	f7fd bf10 	b.w	9000d0e0 <vListInsertEnd>
9000f2c0:	24022f48 	.word	0x24022f48
9000f2c4:	2402343c 	.word	0x2402343c
9000f2c8:	24022f4c 	.word	0x24022f4c
9000f2cc:	240233f0 	.word	0x240233f0
9000f2d0:	24022f50 	.word	0x24022f50
9000f2d4:	24023414 	.word	0x24023414

9000f2d8 <vTaskPlaceOnEventListRestricted>:
		configASSERT( pxEventList );
9000f2d8:	b358      	cbz	r0, 9000f332 <vTaskPlaceOnEventListRestricted+0x5a>
	{
9000f2da:	b570      	push	{r4, r5, r6, lr}
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
9000f2dc:	4e1d      	ldr	r6, [pc, #116]	; (9000f354 <vTaskPlaceOnEventListRestricted+0x7c>)
9000f2de:	460c      	mov	r4, r1
9000f2e0:	4615      	mov	r5, r2
9000f2e2:	6831      	ldr	r1, [r6, #0]
9000f2e4:	3118      	adds	r1, #24
9000f2e6:	f7fd fefb 	bl	9000d0e0 <vListInsertEnd>
		if( xWaitIndefinitely != pdFALSE )
9000f2ea:	b165      	cbz	r5, 9000f306 <vTaskPlaceOnEventListRestricted+0x2e>
const TickType_t xConstTickCount = xTickCount;
9000f2ec:	4b1a      	ldr	r3, [pc, #104]	; (9000f358 <vTaskPlaceOnEventListRestricted+0x80>)
9000f2ee:	681b      	ldr	r3, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000f2f0:	6830      	ldr	r0, [r6, #0]
9000f2f2:	3004      	adds	r0, #4
9000f2f4:	f7fd ff1c 	bl	9000d130 <uxListRemove>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f2f8:	6831      	ldr	r1, [r6, #0]
9000f2fa:	4818      	ldr	r0, [pc, #96]	; (9000f35c <vTaskPlaceOnEventListRestricted+0x84>)
9000f2fc:	3104      	adds	r1, #4
	}
9000f2fe:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f302:	f7fd beed 	b.w	9000d0e0 <vListInsertEnd>
const TickType_t xConstTickCount = xTickCount;
9000f306:	4b14      	ldr	r3, [pc, #80]	; (9000f358 <vTaskPlaceOnEventListRestricted+0x80>)
9000f308:	681d      	ldr	r5, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000f30a:	6830      	ldr	r0, [r6, #0]
9000f30c:	3004      	adds	r0, #4
9000f30e:	f7fd ff0f 	bl	9000d130 <uxListRemove>
			xTimeToWake = xConstTickCount + xTicksToWait;
9000f312:	1964      	adds	r4, r4, r5
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
9000f314:	6833      	ldr	r3, [r6, #0]
9000f316:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
9000f318:	d214      	bcs.n	9000f344 <vTaskPlaceOnEventListRestricted+0x6c>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f31a:	4b11      	ldr	r3, [pc, #68]	; (9000f360 <vTaskPlaceOnEventListRestricted+0x88>)
9000f31c:	6818      	ldr	r0, [r3, #0]
9000f31e:	6831      	ldr	r1, [r6, #0]
9000f320:	3104      	adds	r1, #4
9000f322:	f7fd feed 	bl	9000d100 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
9000f326:	4b0f      	ldr	r3, [pc, #60]	; (9000f364 <vTaskPlaceOnEventListRestricted+0x8c>)
9000f328:	681a      	ldr	r2, [r3, #0]
9000f32a:	4294      	cmp	r4, r2
9000f32c:	d200      	bcs.n	9000f330 <vTaskPlaceOnEventListRestricted+0x58>
					xNextTaskUnblockTime = xTimeToWake;
9000f32e:	601c      	str	r4, [r3, #0]
	}
9000f330:	bd70      	pop	{r4, r5, r6, pc}
9000f332:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f336:	f383 8811 	msr	BASEPRI, r3
9000f33a:	f3bf 8f6f 	isb	sy
9000f33e:	f3bf 8f4f 	dsb	sy
		configASSERT( pxEventList );
9000f342:	e7fe      	b.n	9000f342 <vTaskPlaceOnEventListRestricted+0x6a>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f344:	4b08      	ldr	r3, [pc, #32]	; (9000f368 <vTaskPlaceOnEventListRestricted+0x90>)
9000f346:	6818      	ldr	r0, [r3, #0]
9000f348:	6831      	ldr	r1, [r6, #0]
	}
9000f34a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f34e:	3104      	adds	r1, #4
9000f350:	f7fd bed6 	b.w	9000d100 <vListInsert>
9000f354:	24022f48 	.word	0x24022f48
9000f358:	2402343c 	.word	0x2402343c
9000f35c:	24023414 	.word	0x24023414
9000f360:	24022f4c 	.word	0x24022f4c
9000f364:	240233f0 	.word	0x240233f0
9000f368:	24022f50 	.word	0x24022f50

9000f36c <xTaskRemoveFromEventList>:
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000f36c:	68c3      	ldr	r3, [r0, #12]
{
9000f36e:	b530      	push	{r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000f370:	68dc      	ldr	r4, [r3, #12]
{
9000f372:	b083      	sub	sp, #12
	configASSERT( pxUnblockedTCB );
9000f374:	b35c      	cbz	r4, 9000f3ce <xTaskRemoveFromEventList+0x62>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
9000f376:	f104 0518 	add.w	r5, r4, #24
9000f37a:	4628      	mov	r0, r5
9000f37c:	f7fd fed8 	bl	9000d130 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
9000f380:	4b19      	ldr	r3, [pc, #100]	; (9000f3e8 <xTaskRemoveFromEventList+0x7c>)
9000f382:	681b      	ldr	r3, [r3, #0]
9000f384:	b17b      	cbz	r3, 9000f3a6 <xTaskRemoveFromEventList+0x3a>
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
9000f386:	4629      	mov	r1, r5
9000f388:	4818      	ldr	r0, [pc, #96]	; (9000f3ec <xTaskRemoveFromEventList+0x80>)
9000f38a:	f7fd fea9 	bl	9000d0e0 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
9000f38e:	4b18      	ldr	r3, [pc, #96]	; (9000f3f0 <xTaskRemoveFromEventList+0x84>)
9000f390:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000f392:	681b      	ldr	r3, [r3, #0]
9000f394:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9000f396:	429a      	cmp	r2, r3
9000f398:	d922      	bls.n	9000f3e0 <xTaskRemoveFromEventList+0x74>
		xYieldPending = pdTRUE;
9000f39a:	2301      	movs	r3, #1
9000f39c:	4a15      	ldr	r2, [pc, #84]	; (9000f3f4 <xTaskRemoveFromEventList+0x88>)
		xReturn = pdTRUE;
9000f39e:	4618      	mov	r0, r3
		xYieldPending = pdTRUE;
9000f3a0:	6013      	str	r3, [r2, #0]
}
9000f3a2:	b003      	add	sp, #12
9000f3a4:	bd30      	pop	{r4, r5, pc}
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
9000f3a6:	1d21      	adds	r1, r4, #4
9000f3a8:	4608      	mov	r0, r1
9000f3aa:	9101      	str	r1, [sp, #4]
9000f3ac:	f7fd fec0 	bl	9000d130 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
9000f3b0:	4a11      	ldr	r2, [pc, #68]	; (9000f3f8 <xTaskRemoveFromEventList+0x8c>)
9000f3b2:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000f3b4:	6810      	ldr	r0, [r2, #0]
9000f3b6:	9901      	ldr	r1, [sp, #4]
9000f3b8:	4283      	cmp	r3, r0
9000f3ba:	d900      	bls.n	9000f3be <xTaskRemoveFromEventList+0x52>
9000f3bc:	6013      	str	r3, [r2, #0]
9000f3be:	eb03 0383 	add.w	r3, r3, r3, lsl #2
9000f3c2:	480e      	ldr	r0, [pc, #56]	; (9000f3fc <xTaskRemoveFromEventList+0x90>)
9000f3c4:	eb00 0083 	add.w	r0, r0, r3, lsl #2
9000f3c8:	f7fd fe8a 	bl	9000d0e0 <vListInsertEnd>
9000f3cc:	e7df      	b.n	9000f38e <xTaskRemoveFromEventList+0x22>
9000f3ce:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f3d2:	f383 8811 	msr	BASEPRI, r3
9000f3d6:	f3bf 8f6f 	isb	sy
9000f3da:	f3bf 8f4f 	dsb	sy
	configASSERT( pxUnblockedTCB );
9000f3de:	e7fe      	b.n	9000f3de <xTaskRemoveFromEventList+0x72>
		xReturn = pdFALSE;
9000f3e0:	2000      	movs	r0, #0
}
9000f3e2:	b003      	add	sp, #12
9000f3e4:	bd30      	pop	{r4, r5, pc}
9000f3e6:	bf00      	nop
9000f3e8:	240233bc 	.word	0x240233bc
9000f3ec:	240233fc 	.word	0x240233fc
9000f3f0:	24022f48 	.word	0x24022f48
9000f3f4:	24023440 	.word	0x24023440
9000f3f8:	240233c4 	.word	0x240233c4
9000f3fc:	24022f54 	.word	0x24022f54

9000f400 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
9000f400:	4a03      	ldr	r2, [pc, #12]	; (9000f410 <vTaskInternalSetTimeOutState+0x10>)
	pxTimeOut->xTimeOnEntering = xTickCount;
9000f402:	4b04      	ldr	r3, [pc, #16]	; (9000f414 <vTaskInternalSetTimeOutState+0x14>)
	pxTimeOut->xOverflowCount = xNumOfOverflows;
9000f404:	6812      	ldr	r2, [r2, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
9000f406:	681b      	ldr	r3, [r3, #0]
9000f408:	e9c0 2300 	strd	r2, r3, [r0]
}
9000f40c:	4770      	bx	lr
9000f40e:	bf00      	nop
9000f410:	240233f4 	.word	0x240233f4
9000f414:	2402343c 	.word	0x2402343c

9000f418 <xTaskCheckForTimeOut>:
	configASSERT( pxTimeOut );
9000f418:	b328      	cbz	r0, 9000f466 <xTaskCheckForTimeOut+0x4e>
{
9000f41a:	b5f0      	push	{r4, r5, r6, r7, lr}
9000f41c:	460d      	mov	r5, r1
9000f41e:	b083      	sub	sp, #12
	configASSERT( pxTicksToWait );
9000f420:	b1c1      	cbz	r1, 9000f454 <xTaskCheckForTimeOut+0x3c>
9000f422:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
9000f424:	f7fd ff06 	bl	9000d234 <vPortEnterCritical>
			if( *pxTicksToWait == portMAX_DELAY )
9000f428:	682b      	ldr	r3, [r5, #0]
		const TickType_t xConstTickCount = xTickCount;
9000f42a:	4a1d      	ldr	r2, [pc, #116]	; (9000f4a0 <xTaskCheckForTimeOut+0x88>)
			if( *pxTicksToWait == portMAX_DELAY )
9000f42c:	1c58      	adds	r0, r3, #1
		const TickType_t xConstTickCount = xTickCount;
9000f42e:	6811      	ldr	r1, [r2, #0]
			if( *pxTicksToWait == portMAX_DELAY )
9000f430:	d030      	beq.n	9000f494 <xTaskCheckForTimeOut+0x7c>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
9000f432:	f8df c070 	ldr.w	ip, [pc, #112]	; 9000f4a4 <xTaskCheckForTimeOut+0x8c>
9000f436:	6826      	ldr	r6, [r4, #0]
9000f438:	f8dc 7000 	ldr.w	r7, [ip]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
9000f43c:	6860      	ldr	r0, [r4, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
9000f43e:	42be      	cmp	r6, r7
9000f440:	d01a      	beq.n	9000f478 <xTaskCheckForTimeOut+0x60>
9000f442:	4288      	cmp	r0, r1
9000f444:	d818      	bhi.n	9000f478 <xTaskCheckForTimeOut+0x60>
			xReturn = pdTRUE;
9000f446:	2001      	movs	r0, #1
9000f448:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
9000f44a:	f7fd ff15 	bl	9000d278 <vPortExitCritical>
}
9000f44e:	9801      	ldr	r0, [sp, #4]
9000f450:	b003      	add	sp, #12
9000f452:	bdf0      	pop	{r4, r5, r6, r7, pc}
9000f454:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f458:	f383 8811 	msr	BASEPRI, r3
9000f45c:	f3bf 8f6f 	isb	sy
9000f460:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTicksToWait );
9000f464:	e7fe      	b.n	9000f464 <xTaskCheckForTimeOut+0x4c>
9000f466:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f46a:	f383 8811 	msr	BASEPRI, r3
9000f46e:	f3bf 8f6f 	isb	sy
9000f472:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTimeOut );
9000f476:	e7fe      	b.n	9000f476 <xTaskCheckForTimeOut+0x5e>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
9000f478:	eba1 0e00 	sub.w	lr, r1, r0
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
9000f47c:	4573      	cmp	r3, lr
9000f47e:	d90b      	bls.n	9000f498 <xTaskCheckForTimeOut+0x80>
			*pxTicksToWait -= xElapsedTime;
9000f480:	1a5b      	subs	r3, r3, r1
	pxTimeOut->xOverflowCount = xNumOfOverflows;
9000f482:	f8dc 1000 	ldr.w	r1, [ip]
	pxTimeOut->xTimeOnEntering = xTickCount;
9000f486:	6812      	ldr	r2, [r2, #0]
			*pxTicksToWait -= xElapsedTime;
9000f488:	4403      	add	r3, r0
			xReturn = pdFALSE;
9000f48a:	2000      	movs	r0, #0
			*pxTicksToWait -= xElapsedTime;
9000f48c:	602b      	str	r3, [r5, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
9000f48e:	e9c4 1200 	strd	r1, r2, [r4]
			xReturn = pdFALSE;
9000f492:	e7d9      	b.n	9000f448 <xTaskCheckForTimeOut+0x30>
				xReturn = pdFALSE;
9000f494:	2000      	movs	r0, #0
9000f496:	e7d7      	b.n	9000f448 <xTaskCheckForTimeOut+0x30>
			*pxTicksToWait = 0;
9000f498:	2300      	movs	r3, #0
			xReturn = pdTRUE;
9000f49a:	2001      	movs	r0, #1
			*pxTicksToWait = 0;
9000f49c:	602b      	str	r3, [r5, #0]
			xReturn = pdTRUE;
9000f49e:	e7d3      	b.n	9000f448 <xTaskCheckForTimeOut+0x30>
9000f4a0:	2402343c 	.word	0x2402343c
9000f4a4:	240233f4 	.word	0x240233f4

9000f4a8 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
9000f4a8:	4b01      	ldr	r3, [pc, #4]	; (9000f4b0 <vTaskMissedYield+0x8>)
9000f4aa:	2201      	movs	r2, #1
9000f4ac:	601a      	str	r2, [r3, #0]
}
9000f4ae:	4770      	bx	lr
9000f4b0:	24023440 	.word	0x24023440

9000f4b4 <xTaskGetCurrentTaskHandle>:
		xReturn = pxCurrentTCB;
9000f4b4:	4b01      	ldr	r3, [pc, #4]	; (9000f4bc <xTaskGetCurrentTaskHandle+0x8>)
9000f4b6:	6818      	ldr	r0, [r3, #0]
	}
9000f4b8:	4770      	bx	lr
9000f4ba:	bf00      	nop
9000f4bc:	24022f48 	.word	0x24022f48

9000f4c0 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
9000f4c0:	4b05      	ldr	r3, [pc, #20]	; (9000f4d8 <xTaskGetSchedulerState+0x18>)
9000f4c2:	681b      	ldr	r3, [r3, #0]
9000f4c4:	b133      	cbz	r3, 9000f4d4 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
9000f4c6:	4b05      	ldr	r3, [pc, #20]	; (9000f4dc <xTaskGetSchedulerState+0x1c>)
9000f4c8:	6818      	ldr	r0, [r3, #0]
9000f4ca:	fab0 f080 	clz	r0, r0
9000f4ce:	0940      	lsrs	r0, r0, #5
9000f4d0:	0040      	lsls	r0, r0, #1
9000f4d2:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
9000f4d4:	2001      	movs	r0, #1
	}
9000f4d6:	4770      	bx	lr
9000f4d8:	24023410 	.word	0x24023410
9000f4dc:	240233bc 	.word	0x240233bc

9000f4e0 <xTaskPriorityInherit>:
	{
9000f4e0:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
9000f4e2:	4604      	mov	r4, r0
	{
9000f4e4:	b082      	sub	sp, #8
		if( pxMutexHolder != NULL )
9000f4e6:	b1c8      	cbz	r0, 9000f51c <xTaskPriorityInherit+0x3c>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
9000f4e8:	4d1d      	ldr	r5, [pc, #116]	; (9000f560 <xTaskPriorityInherit+0x80>)
9000f4ea:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
9000f4ec:	682a      	ldr	r2, [r5, #0]
9000f4ee:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
9000f4f0:	4293      	cmp	r3, r2
9000f4f2:	d215      	bcs.n	9000f520 <xTaskPriorityInherit+0x40>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
9000f4f4:	6982      	ldr	r2, [r0, #24]
9000f4f6:	2a00      	cmp	r2, #0
9000f4f8:	db04      	blt.n	9000f504 <xTaskPriorityInherit+0x24>
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000f4fa:	682a      	ldr	r2, [r5, #0]
9000f4fc:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
9000f4fe:	f1c2 0238 	rsb	r2, r2, #56	; 0x38
9000f502:	6182      	str	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
9000f504:	4e17      	ldr	r6, [pc, #92]	; (9000f564 <xTaskPriorityInherit+0x84>)
9000f506:	eb03 0383 	add.w	r3, r3, r3, lsl #2
9000f50a:	6962      	ldr	r2, [r4, #20]
9000f50c:	eb06 0383 	add.w	r3, r6, r3, lsl #2
9000f510:	429a      	cmp	r2, r3
9000f512:	d00e      	beq.n	9000f532 <xTaskPriorityInherit+0x52>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
9000f514:	682b      	ldr	r3, [r5, #0]
				xReturn = pdTRUE;
9000f516:	2001      	movs	r0, #1
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
9000f518:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9000f51a:	62e3      	str	r3, [r4, #44]	; 0x2c
	}
9000f51c:	b002      	add	sp, #8
9000f51e:	bd70      	pop	{r4, r5, r6, pc}
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
9000f520:	682b      	ldr	r3, [r5, #0]
9000f522:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
9000f524:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9000f526:	4298      	cmp	r0, r3
9000f528:	bf2c      	ite	cs
9000f52a:	2000      	movcs	r0, #0
9000f52c:	2001      	movcc	r0, #1
	}
9000f52e:	b002      	add	sp, #8
9000f530:	bd70      	pop	{r4, r5, r6, pc}
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000f532:	1d21      	adds	r1, r4, #4
9000f534:	4608      	mov	r0, r1
9000f536:	9101      	str	r1, [sp, #4]
9000f538:	f7fd fdfa 	bl	9000d130 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
9000f53c:	682a      	ldr	r2, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
9000f53e:	4b0a      	ldr	r3, [pc, #40]	; (9000f568 <xTaskPriorityInherit+0x88>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
9000f540:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
9000f542:	681a      	ldr	r2, [r3, #0]
9000f544:	9901      	ldr	r1, [sp, #4]
9000f546:	4290      	cmp	r0, r2
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
9000f548:	62e0      	str	r0, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
9000f54a:	d900      	bls.n	9000f54e <xTaskPriorityInherit+0x6e>
9000f54c:	6018      	str	r0, [r3, #0]
9000f54e:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9000f552:	eb06 0080 	add.w	r0, r6, r0, lsl #2
9000f556:	f7fd fdc3 	bl	9000d0e0 <vListInsertEnd>
				xReturn = pdTRUE;
9000f55a:	2001      	movs	r0, #1
9000f55c:	e7de      	b.n	9000f51c <xTaskPriorityInherit+0x3c>
9000f55e:	bf00      	nop
9000f560:	24022f48 	.word	0x24022f48
9000f564:	24022f54 	.word	0x24022f54
9000f568:	240233c4 	.word	0x240233c4

9000f56c <xTaskPriorityDisinherit>:
		if( pxMutexHolder != NULL )
9000f56c:	b318      	cbz	r0, 9000f5b6 <xTaskPriorityDisinherit+0x4a>
			configASSERT( pxTCB == pxCurrentTCB );
9000f56e:	4b1f      	ldr	r3, [pc, #124]	; (9000f5ec <xTaskPriorityDisinherit+0x80>)
	{
9000f570:	b510      	push	{r4, lr}
			configASSERT( pxTCB == pxCurrentTCB );
9000f572:	681c      	ldr	r4, [r3, #0]
	{
9000f574:	b082      	sub	sp, #8
			configASSERT( pxTCB == pxCurrentTCB );
9000f576:	4284      	cmp	r4, r0
9000f578:	d008      	beq.n	9000f58c <xTaskPriorityDisinherit+0x20>
9000f57a:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f57e:	f383 8811 	msr	BASEPRI, r3
9000f582:	f3bf 8f6f 	isb	sy
9000f586:	f3bf 8f4f 	dsb	sy
9000f58a:	e7fe      	b.n	9000f58a <xTaskPriorityDisinherit+0x1e>
			configASSERT( pxTCB->uxMutexesHeld );
9000f58c:	6d23      	ldr	r3, [r4, #80]	; 0x50
9000f58e:	b14b      	cbz	r3, 9000f5a4 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
9000f590:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
			( pxTCB->uxMutexesHeld )--;
9000f592:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
9000f594:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
9000f596:	6523      	str	r3, [r4, #80]	; 0x50
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
9000f598:	4291      	cmp	r1, r2
9000f59a:	d000      	beq.n	9000f59e <xTaskPriorityDisinherit+0x32>
9000f59c:	b16b      	cbz	r3, 9000f5ba <xTaskPriorityDisinherit+0x4e>
	BaseType_t xReturn = pdFALSE;
9000f59e:	2000      	movs	r0, #0
	}
9000f5a0:	b002      	add	sp, #8
9000f5a2:	bd10      	pop	{r4, pc}
9000f5a4:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f5a8:	f383 8811 	msr	BASEPRI, r3
9000f5ac:	f3bf 8f6f 	isb	sy
9000f5b0:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
9000f5b4:	e7fe      	b.n	9000f5b4 <xTaskPriorityDisinherit+0x48>
	BaseType_t xReturn = pdFALSE;
9000f5b6:	2000      	movs	r0, #0
	}
9000f5b8:	4770      	bx	lr
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000f5ba:	1d21      	adds	r1, r4, #4
9000f5bc:	4608      	mov	r0, r1
9000f5be:	9101      	str	r1, [sp, #4]
9000f5c0:	f7fd fdb6 	bl	9000d130 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
9000f5c4:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
9000f5c6:	4b0a      	ldr	r3, [pc, #40]	; (9000f5f0 <xTaskPriorityDisinherit+0x84>)
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000f5c8:	f1c0 0238 	rsb	r2, r0, #56	; 0x38
					prvAddTaskToReadyList( pxTCB );
9000f5cc:	9901      	ldr	r1, [sp, #4]
					pxTCB->uxPriority = pxTCB->uxBasePriority;
9000f5ce:	62e0      	str	r0, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000f5d0:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
9000f5d2:	681a      	ldr	r2, [r3, #0]
9000f5d4:	4290      	cmp	r0, r2
9000f5d6:	d900      	bls.n	9000f5da <xTaskPriorityDisinherit+0x6e>
9000f5d8:	6018      	str	r0, [r3, #0]
9000f5da:	4b06      	ldr	r3, [pc, #24]	; (9000f5f4 <xTaskPriorityDisinherit+0x88>)
9000f5dc:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9000f5e0:	eb03 0080 	add.w	r0, r3, r0, lsl #2
9000f5e4:	f7fd fd7c 	bl	9000d0e0 <vListInsertEnd>
					xReturn = pdTRUE;
9000f5e8:	2001      	movs	r0, #1
		return xReturn;
9000f5ea:	e7d9      	b.n	9000f5a0 <xTaskPriorityDisinherit+0x34>
9000f5ec:	24022f48 	.word	0x24022f48
9000f5f0:	240233c4 	.word	0x240233c4
9000f5f4:	24022f54 	.word	0x24022f54

9000f5f8 <vTaskPriorityDisinheritAfterTimeout>:
		if( pxMutexHolder != NULL )
9000f5f8:	2800      	cmp	r0, #0
9000f5fa:	d040      	beq.n	9000f67e <vTaskPriorityDisinheritAfterTimeout+0x86>
			configASSERT( pxTCB->uxMutexesHeld );
9000f5fc:	6d03      	ldr	r3, [r0, #80]	; 0x50
	{
9000f5fe:	b530      	push	{r4, r5, lr}
9000f600:	4604      	mov	r4, r0
9000f602:	b083      	sub	sp, #12
			configASSERT( pxTCB->uxMutexesHeld );
9000f604:	b153      	cbz	r3, 9000f61c <vTaskPriorityDisinheritAfterTimeout+0x24>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
9000f606:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
			if( pxTCB->uxPriority != uxPriorityToUse )
9000f608:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000f60a:	4281      	cmp	r1, r0
9000f60c:	bf38      	it	cc
9000f60e:	4601      	movcc	r1, r0
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
9000f610:	2b01      	cmp	r3, #1
9000f612:	d101      	bne.n	9000f618 <vTaskPriorityDisinheritAfterTimeout+0x20>
9000f614:	428a      	cmp	r2, r1
9000f616:	d10a      	bne.n	9000f62e <vTaskPriorityDisinheritAfterTimeout+0x36>
	}
9000f618:	b003      	add	sp, #12
9000f61a:	bd30      	pop	{r4, r5, pc}
9000f61c:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f620:	f383 8811 	msr	BASEPRI, r3
9000f624:	f3bf 8f6f 	isb	sy
9000f628:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
9000f62c:	e7fe      	b.n	9000f62c <vTaskPriorityDisinheritAfterTimeout+0x34>
					configASSERT( pxTCB != pxCurrentTCB );
9000f62e:	4b19      	ldr	r3, [pc, #100]	; (9000f694 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
9000f630:	681b      	ldr	r3, [r3, #0]
9000f632:	42a3      	cmp	r3, r4
9000f634:	d024      	beq.n	9000f680 <vTaskPriorityDisinheritAfterTimeout+0x88>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
9000f636:	69a3      	ldr	r3, [r4, #24]
					pxTCB->uxPriority = uxPriorityToUse;
9000f638:	62e1      	str	r1, [r4, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
9000f63a:	2b00      	cmp	r3, #0
9000f63c:	db02      	blt.n	9000f644 <vTaskPriorityDisinheritAfterTimeout+0x4c>
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000f63e:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
9000f642:	61a1      	str	r1, [r4, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
9000f644:	4d14      	ldr	r5, [pc, #80]	; (9000f698 <vTaskPriorityDisinheritAfterTimeout+0xa0>)
9000f646:	eb02 0282 	add.w	r2, r2, r2, lsl #2
9000f64a:	6961      	ldr	r1, [r4, #20]
9000f64c:	eb05 0382 	add.w	r3, r5, r2, lsl #2
9000f650:	4299      	cmp	r1, r3
9000f652:	d1e1      	bne.n	9000f618 <vTaskPriorityDisinheritAfterTimeout+0x20>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000f654:	1d21      	adds	r1, r4, #4
9000f656:	4608      	mov	r0, r1
9000f658:	9101      	str	r1, [sp, #4]
9000f65a:	f7fd fd69 	bl	9000d130 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
9000f65e:	4b0f      	ldr	r3, [pc, #60]	; (9000f69c <vTaskPriorityDisinheritAfterTimeout+0xa4>)
9000f660:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
9000f662:	681a      	ldr	r2, [r3, #0]
9000f664:	9901      	ldr	r1, [sp, #4]
9000f666:	4290      	cmp	r0, r2
9000f668:	d900      	bls.n	9000f66c <vTaskPriorityDisinheritAfterTimeout+0x74>
9000f66a:	6018      	str	r0, [r3, #0]
9000f66c:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9000f670:	eb05 0080 	add.w	r0, r5, r0, lsl #2
	}
9000f674:	b003      	add	sp, #12
9000f676:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
9000f67a:	f7fd bd31 	b.w	9000d0e0 <vListInsertEnd>
9000f67e:	4770      	bx	lr
9000f680:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f684:	f383 8811 	msr	BASEPRI, r3
9000f688:	f3bf 8f6f 	isb	sy
9000f68c:	f3bf 8f4f 	dsb	sy
					configASSERT( pxTCB != pxCurrentTCB );
9000f690:	e7fe      	b.n	9000f690 <vTaskPriorityDisinheritAfterTimeout+0x98>
9000f692:	bf00      	nop
9000f694:	24022f48 	.word	0x24022f48
9000f698:	24022f54 	.word	0x24022f54
9000f69c:	240233c4 	.word	0x240233c4

9000f6a0 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
9000f6a0:	4b04      	ldr	r3, [pc, #16]	; (9000f6b4 <pvTaskIncrementMutexHeldCount+0x14>)
9000f6a2:	681a      	ldr	r2, [r3, #0]
9000f6a4:	b11a      	cbz	r2, 9000f6ae <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
9000f6a6:	6819      	ldr	r1, [r3, #0]
9000f6a8:	6d0a      	ldr	r2, [r1, #80]	; 0x50
9000f6aa:	3201      	adds	r2, #1
9000f6ac:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
9000f6ae:	6818      	ldr	r0, [r3, #0]
	}
9000f6b0:	4770      	bx	lr
9000f6b2:	bf00      	nop
9000f6b4:	24022f48 	.word	0x24022f48

9000f6b8 <prvSwitchTimerLists>:
	}
}
/*-----------------------------------------------------------*/

static void prvSwitchTimerLists( void )
{
9000f6b8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9000f6bc:	4e22      	ldr	r6, [pc, #136]	; (9000f748 <prvSwitchTimerLists+0x90>)
9000f6be:	b085      	sub	sp, #20
	if( xTimerQueue != NULL )
9000f6c0:	f8df 908c 	ldr.w	r9, [pc, #140]	; 9000f750 <prvSwitchTimerLists+0x98>
		xMessage.xMessageID = xCommandID;
9000f6c4:	f04f 0800 	mov.w	r8, #0

	/* The tick count has overflowed.  The timer lists must be switched.
	If there are any timers still referenced from the current timer list
	then they must have expired and should be processed before the lists
	are switched. */
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
9000f6c8:	e00d      	b.n	9000f6e6 <prvSwitchTimerLists+0x2e>
	{
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
9000f6ca:	68db      	ldr	r3, [r3, #12]

		/* Remove the timer from the list. */
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000f6cc:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
9000f6ce:	681f      	ldr	r7, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
9000f6d0:	1d25      	adds	r5, r4, #4
9000f6d2:	4628      	mov	r0, r5
9000f6d4:	f7fd fd2c 	bl	9000d130 <uxListRemove>
		traceTIMER_EXPIRED( pxTimer );

		/* Execute its callback, then send a command to restart the timer if
		it is an auto-reload timer.  It cannot be restarted here as the lists
		have not yet been switched. */
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
9000f6d8:	6a23      	ldr	r3, [r4, #32]
9000f6da:	4620      	mov	r0, r4
9000f6dc:	4798      	blx	r3

		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
9000f6de:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
9000f6e2:	075b      	lsls	r3, r3, #29
9000f6e4:	d40a      	bmi.n	9000f6fc <prvSwitchTimerLists+0x44>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
9000f6e6:	6833      	ldr	r3, [r6, #0]
9000f6e8:	681a      	ldr	r2, [r3, #0]
9000f6ea:	2a00      	cmp	r2, #0
9000f6ec:	d1ed      	bne.n	9000f6ca <prvSwitchTimerLists+0x12>
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxTemp = pxCurrentTimerList;
	pxCurrentTimerList = pxOverflowTimerList;
9000f6ee:	4a17      	ldr	r2, [pc, #92]	; (9000f74c <prvSwitchTimerLists+0x94>)
9000f6f0:	6811      	ldr	r1, [r2, #0]
	pxOverflowTimerList = pxTemp;
9000f6f2:	6013      	str	r3, [r2, #0]
	pxCurrentTimerList = pxOverflowTimerList;
9000f6f4:	6031      	str	r1, [r6, #0]
}
9000f6f6:	b005      	add	sp, #20
9000f6f8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
9000f6fc:	69a3      	ldr	r3, [r4, #24]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
9000f6fe:	4629      	mov	r1, r5
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
9000f700:	443b      	add	r3, r7
			if( xReloadTime > xNextExpireTime )
9000f702:	429f      	cmp	r7, r3
9000f704:	d205      	bcs.n	9000f712 <prvSwitchTimerLists+0x5a>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
9000f706:	6830      	ldr	r0, [r6, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
9000f708:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
9000f70a:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
9000f70c:	f7fd fcf8 	bl	9000d100 <vListInsert>
9000f710:	e7e9      	b.n	9000f6e6 <prvSwitchTimerLists+0x2e>
	if( xTimerQueue != NULL )
9000f712:	f8d9 3000 	ldr.w	r3, [r9]
9000f716:	b16b      	cbz	r3, 9000f734 <prvSwitchTimerLists+0x7c>
		xMessage.u.xTimerParameters.pxTimer = xTimer;
9000f718:	9402      	str	r4, [sp, #8]
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
9000f71a:	e9cd 8700 	strd	r8, r7, [sp]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
9000f71e:	f7ff fecf 	bl	9000f4c0 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
9000f722:	2300      	movs	r3, #0
9000f724:	4669      	mov	r1, sp
9000f726:	f8d9 0000 	ldr.w	r0, [r9]
9000f72a:	461a      	mov	r2, r3
9000f72c:	f7fe f87a 	bl	9000d824 <xQueueGenericSend>
				configASSERT( xResult );
9000f730:	2800      	cmp	r0, #0
9000f732:	d1d8      	bne.n	9000f6e6 <prvSwitchTimerLists+0x2e>
9000f734:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f738:	f383 8811 	msr	BASEPRI, r3
9000f73c:	f3bf 8f6f 	isb	sy
9000f740:	f3bf 8f4f 	dsb	sy
9000f744:	e7fe      	b.n	9000f744 <prvSwitchTimerLists+0x8c>
9000f746:	bf00      	nop
9000f748:	24023444 	.word	0x24023444
9000f74c:	24023448 	.word	0x24023448
9000f750:	24023568 	.word	0x24023568

9000f754 <prvTimerTask>:
{
9000f754:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000f758:	4e9f      	ldr	r6, [pc, #636]	; (9000f9d8 <prvTimerTask+0x284>)
9000f75a:	b089      	sub	sp, #36	; 0x24
9000f75c:	4d9f      	ldr	r5, [pc, #636]	; (9000f9dc <prvTimerTask+0x288>)
					portYIELD_WITHIN_API();
9000f75e:	f04f 29e0 	mov.w	r9, #3758153728	; 0xe000e000
9000f762:	4c9f      	ldr	r4, [pc, #636]	; (9000f9e0 <prvTimerTask+0x28c>)
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
9000f764:	6833      	ldr	r3, [r6, #0]
9000f766:	681f      	ldr	r7, [r3, #0]
9000f768:	2f00      	cmp	r7, #0
9000f76a:	f000 80b2 	beq.w	9000f8d2 <prvTimerTask+0x17e>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
9000f76e:	68db      	ldr	r3, [r3, #12]
9000f770:	681f      	ldr	r7, [r3, #0]
	vTaskSuspendAll();
9000f772:	f7ff fc61 	bl	9000f038 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
9000f776:	f7ff fc77 	bl	9000f068 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
9000f77a:	682a      	ldr	r2, [r5, #0]
	xTimeNow = xTaskGetTickCount();
9000f77c:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
9000f77e:	4290      	cmp	r0, r2
9000f780:	f0c0 80af 	bcc.w	9000f8e2 <prvTimerTask+0x18e>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
9000f784:	4287      	cmp	r7, r0
	xLastTime = xTimeNow;
9000f786:	6028      	str	r0, [r5, #0]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
9000f788:	f200 80d0 	bhi.w	9000f92c <prvTimerTask+0x1d8>
				( void ) xTaskResumeAll();
9000f78c:	f7ff fc5c 	bl	9000f048 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000f790:	6832      	ldr	r2, [r6, #0]
9000f792:	68d2      	ldr	r2, [r2, #12]
9000f794:	f8d2 b00c 	ldr.w	fp, [r2, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
9000f798:	f10b 0804 	add.w	r8, fp, #4
9000f79c:	4640      	mov	r0, r8
9000f79e:	f7fd fcc7 	bl	9000d130 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
9000f7a2:	f89b 0028 	ldrb.w	r0, [fp, #40]	; 0x28
9000f7a6:	0741      	lsls	r1, r0, #29
9000f7a8:	f100 80d0 	bmi.w	9000f94c <prvTimerTask+0x1f8>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
9000f7ac:	f020 0001 	bic.w	r0, r0, #1
9000f7b0:	f88b 0028 	strb.w	r0, [fp, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
9000f7b4:	f8db 3020 	ldr.w	r3, [fp, #32]
9000f7b8:	4658      	mov	r0, fp
9000f7ba:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
9000f7bc:	2200      	movs	r2, #0
9000f7be:	4669      	mov	r1, sp
9000f7c0:	6820      	ldr	r0, [r4, #0]
9000f7c2:	f7fe fb1b 	bl	9000ddfc <xQueueReceive>
9000f7c6:	2800      	cmp	r0, #0
9000f7c8:	d0cc      	beq.n	9000f764 <prvTimerTask+0x10>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
9000f7ca:	9b00      	ldr	r3, [sp, #0]
9000f7cc:	2b00      	cmp	r3, #0
9000f7ce:	db77      	blt.n	9000f8c0 <prvTimerTask+0x16c>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
9000f7d0:	9f02      	ldr	r7, [sp, #8]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
9000f7d2:	697b      	ldr	r3, [r7, #20]
9000f7d4:	b113      	cbz	r3, 9000f7dc <prvTimerTask+0x88>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
9000f7d6:	1d38      	adds	r0, r7, #4
9000f7d8:	f7fd fcaa 	bl	9000d130 <uxListRemove>
	xTimeNow = xTaskGetTickCount();
9000f7dc:	f7ff fc44 	bl	9000f068 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
9000f7e0:	682b      	ldr	r3, [r5, #0]
	xTimeNow = xTaskGetTickCount();
9000f7e2:	4680      	mov	r8, r0
	if( xTimeNow < xLastTime )
9000f7e4:	4298      	cmp	r0, r3
9000f7e6:	f0c0 8083 	bcc.w	9000f8f0 <prvTimerTask+0x19c>
			switch( xMessage.xMessageID )
9000f7ea:	9b00      	ldr	r3, [sp, #0]
	xLastTime = xTimeNow;
9000f7ec:	f8c5 8000 	str.w	r8, [r5]
			switch( xMessage.xMessageID )
9000f7f0:	2b09      	cmp	r3, #9
9000f7f2:	d8e3      	bhi.n	9000f7bc <prvTimerTask+0x68>
9000f7f4:	e8df f003 	tbb	[pc, r3]
9000f7f8:	54050505 	.word	0x54050505
9000f7fc:	05055b3e 	.word	0x05055b3e
9000f800:	3e54      	.short	0x3e54
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
9000f802:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
9000f806:	69ba      	ldr	r2, [r7, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
9000f808:	f043 0301 	orr.w	r3, r3, #1
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
9000f80c:	613f      	str	r7, [r7, #16]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
9000f80e:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
9000f812:	9b01      	ldr	r3, [sp, #4]
9000f814:	1899      	adds	r1, r3, r2
9000f816:	bf2c      	ite	cs
9000f818:	2001      	movcs	r0, #1
9000f81a:	2000      	movcc	r0, #0
	if( xNextExpiryTime <= xTimeNow )
9000f81c:	4541      	cmp	r1, r8
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
9000f81e:	6079      	str	r1, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
9000f820:	f200 8086 	bhi.w	9000f930 <prvTimerTask+0x1dc>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000f824:	eba8 0303 	sub.w	r3, r8, r3
9000f828:	429a      	cmp	r2, r3
9000f82a:	f200 80c0 	bhi.w	9000f9ae <prvTimerTask+0x25a>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
9000f82e:	6a3b      	ldr	r3, [r7, #32]
9000f830:	4638      	mov	r0, r7
9000f832:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
9000f834:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
9000f838:	075b      	lsls	r3, r3, #29
9000f83a:	d5bf      	bpl.n	9000f7bc <prvTimerTask+0x68>
	if( xTimerQueue != NULL )
9000f83c:	6822      	ldr	r2, [r4, #0]
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
9000f83e:	9901      	ldr	r1, [sp, #4]
9000f840:	69bb      	ldr	r3, [r7, #24]
	if( xTimerQueue != NULL )
9000f842:	b172      	cbz	r2, 9000f862 <prvTimerTask+0x10e>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
9000f844:	440b      	add	r3, r1
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
9000f846:	e9cd 3705 	strd	r3, r7, [sp, #20]
		xMessage.xMessageID = xCommandID;
9000f84a:	2300      	movs	r3, #0
9000f84c:	9304      	str	r3, [sp, #16]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
9000f84e:	f7ff fe37 	bl	9000f4c0 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
9000f852:	2300      	movs	r3, #0
9000f854:	a904      	add	r1, sp, #16
9000f856:	6820      	ldr	r0, [r4, #0]
9000f858:	461a      	mov	r2, r3
9000f85a:	f7fd ffe3 	bl	9000d824 <xQueueGenericSend>
							configASSERT( xResult );
9000f85e:	2800      	cmp	r0, #0
9000f860:	d1ac      	bne.n	9000f7bc <prvTimerTask+0x68>
9000f862:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f866:	f383 8811 	msr	BASEPRI, r3
9000f86a:	f3bf 8f6f 	isb	sy
9000f86e:	f3bf 8f4f 	dsb	sy
9000f872:	e7fe      	b.n	9000f872 <prvTimerTask+0x11e>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
9000f874:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
9000f878:	f043 0301 	orr.w	r3, r3, #1
9000f87c:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
9000f880:	9b01      	ldr	r3, [sp, #4]
9000f882:	61bb      	str	r3, [r7, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
9000f884:	2b00      	cmp	r3, #0
9000f886:	f000 809e 	beq.w	9000f9c6 <prvTimerTask+0x272>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
9000f88a:	4443      	add	r3, r8
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
9000f88c:	1d39      	adds	r1, r7, #4
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
9000f88e:	613f      	str	r7, [r7, #16]
	if( xNextExpiryTime <= xTimeNow )
9000f890:	4543      	cmp	r3, r8
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
9000f892:	607b      	str	r3, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
9000f894:	d856      	bhi.n	9000f944 <prvTimerTask+0x1f0>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
9000f896:	4b53      	ldr	r3, [pc, #332]	; (9000f9e4 <prvTimerTask+0x290>)
9000f898:	6818      	ldr	r0, [r3, #0]
9000f89a:	f7fd fc31 	bl	9000d100 <vListInsert>
	return xProcessTimerNow;
9000f89e:	e78d      	b.n	9000f7bc <prvTimerTask+0x68>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
9000f8a0:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
9000f8a4:	f023 0301 	bic.w	r3, r3, #1
9000f8a8:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					break;
9000f8ac:	e786      	b.n	9000f7bc <prvTimerTask+0x68>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
9000f8ae:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
9000f8b2:	079a      	lsls	r2, r3, #30
9000f8b4:	d572      	bpl.n	9000f99c <prvTimerTask+0x248>
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
9000f8b6:	f023 0301 	bic.w	r3, r3, #1
9000f8ba:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
9000f8be:	e77d      	b.n	9000f7bc <prvTimerTask+0x68>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
9000f8c0:	9b01      	ldr	r3, [sp, #4]
9000f8c2:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
9000f8c6:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
9000f8c8:	9b00      	ldr	r3, [sp, #0]
9000f8ca:	2b00      	cmp	r3, #0
9000f8cc:	f6ff af76 	blt.w	9000f7bc <prvTimerTask+0x68>
9000f8d0:	e77e      	b.n	9000f7d0 <prvTimerTask+0x7c>
	vTaskSuspendAll();
9000f8d2:	f7ff fbb1 	bl	9000f038 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
9000f8d6:	f7ff fbc7 	bl	9000f068 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
9000f8da:	682a      	ldr	r2, [r5, #0]
	xTimeNow = xTaskGetTickCount();
9000f8dc:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
9000f8de:	4282      	cmp	r2, r0
9000f8e0:	d909      	bls.n	9000f8f6 <prvTimerTask+0x1a2>
		prvSwitchTimerLists();
9000f8e2:	f7ff fee9 	bl	9000f6b8 <prvSwitchTimerLists>
	xLastTime = xTimeNow;
9000f8e6:	f8c5 a000 	str.w	sl, [r5]
			( void ) xTaskResumeAll();
9000f8ea:	f7ff fbad 	bl	9000f048 <xTaskResumeAll>
9000f8ee:	e765      	b.n	9000f7bc <prvTimerTask+0x68>
		prvSwitchTimerLists();
9000f8f0:	f7ff fee2 	bl	9000f6b8 <prvSwitchTimerLists>
		*pxTimerListsWereSwitched = pdTRUE;
9000f8f4:	e779      	b.n	9000f7ea <prvTimerTask+0x96>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
9000f8f6:	4b3b      	ldr	r3, [pc, #236]	; (9000f9e4 <prvTimerTask+0x290>)
	xLastTime = xTimeNow;
9000f8f8:	f8c5 a000 	str.w	sl, [r5]
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
9000f8fc:	681a      	ldr	r2, [r3, #0]
9000f8fe:	6812      	ldr	r2, [r2, #0]
9000f900:	fab2 f282 	clz	r2, r2
9000f904:	0952      	lsrs	r2, r2, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
9000f906:	eba7 010a 	sub.w	r1, r7, sl
9000f90a:	6820      	ldr	r0, [r4, #0]
9000f90c:	f7fe fe8e 	bl	9000e62c <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
9000f910:	f7ff fb9a 	bl	9000f048 <xTaskResumeAll>
9000f914:	2800      	cmp	r0, #0
9000f916:	f47f af51 	bne.w	9000f7bc <prvTimerTask+0x68>
					portYIELD_WITHIN_API();
9000f91a:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
9000f91e:	f8c9 3d04 	str.w	r3, [r9, #3332]	; 0xd04
9000f922:	f3bf 8f4f 	dsb	sy
9000f926:	f3bf 8f6f 	isb	sy
9000f92a:	e747      	b.n	9000f7bc <prvTimerTask+0x68>
9000f92c:	2200      	movs	r2, #0
9000f92e:	e7ea      	b.n	9000f906 <prvTimerTask+0x1b2>
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
9000f930:	4543      	cmp	r3, r8
9000f932:	d902      	bls.n	9000f93a <prvTimerTask+0x1e6>
9000f934:	2800      	cmp	r0, #0
9000f936:	f43f af7a 	beq.w	9000f82e <prvTimerTask+0xda>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
9000f93a:	1d39      	adds	r1, r7, #4
9000f93c:	6830      	ldr	r0, [r6, #0]
9000f93e:	f7fd fbdf 	bl	9000d100 <vListInsert>
	return xProcessTimerNow;
9000f942:	e73b      	b.n	9000f7bc <prvTimerTask+0x68>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
9000f944:	6830      	ldr	r0, [r6, #0]
9000f946:	f7fd fbdb 	bl	9000d100 <vListInsert>
9000f94a:	e737      	b.n	9000f7bc <prvTimerTask+0x68>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
9000f94c:	f8db 2018 	ldr.w	r2, [fp, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
9000f950:	f8cb b010 	str.w	fp, [fp, #16]
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
9000f954:	18b8      	adds	r0, r7, r2
	if( xNextExpiryTime <= xTimeNow )
9000f956:	4582      	cmp	sl, r0
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
9000f958:	f8cb 0004 	str.w	r0, [fp, #4]
	if( xNextExpiryTime <= xTimeNow )
9000f95c:	d322      	bcc.n	9000f9a4 <prvTimerTask+0x250>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000f95e:	ebaa 0307 	sub.w	r3, sl, r7
9000f962:	429a      	cmp	r2, r3
9000f964:	d829      	bhi.n	9000f9ba <prvTimerTask+0x266>
	if( xTimerQueue != NULL )
9000f966:	6823      	ldr	r3, [r4, #0]
9000f968:	b17b      	cbz	r3, 9000f98a <prvTimerTask+0x236>
		xMessage.xMessageID = xCommandID;
9000f96a:	2300      	movs	r3, #0
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
9000f96c:	9705      	str	r7, [sp, #20]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
9000f96e:	f8cd b018 	str.w	fp, [sp, #24]
		xMessage.xMessageID = xCommandID;
9000f972:	9304      	str	r3, [sp, #16]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
9000f974:	f7ff fda4 	bl	9000f4c0 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
9000f978:	2300      	movs	r3, #0
9000f97a:	a904      	add	r1, sp, #16
9000f97c:	6820      	ldr	r0, [r4, #0]
9000f97e:	461a      	mov	r2, r3
9000f980:	f7fd ff50 	bl	9000d824 <xQueueGenericSend>
			configASSERT( xResult );
9000f984:	2800      	cmp	r0, #0
9000f986:	f47f af15 	bne.w	9000f7b4 <prvTimerTask+0x60>
9000f98a:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f98e:	f383 8811 	msr	BASEPRI, r3
9000f992:	f3bf 8f6f 	isb	sy
9000f996:	f3bf 8f4f 	dsb	sy
9000f99a:	e7fe      	b.n	9000f99a <prvTimerTask+0x246>
							vPortFree( pxTimer );
9000f99c:	4638      	mov	r0, r7
9000f99e:	f7fd fb2b 	bl	9000cff8 <vPortFree>
9000f9a2:	e70b      	b.n	9000f7bc <prvTimerTask+0x68>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
9000f9a4:	4641      	mov	r1, r8
9000f9a6:	6830      	ldr	r0, [r6, #0]
9000f9a8:	f7fd fbaa 	bl	9000d100 <vListInsert>
	return xProcessTimerNow;
9000f9ac:	e702      	b.n	9000f7b4 <prvTimerTask+0x60>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
9000f9ae:	4b0d      	ldr	r3, [pc, #52]	; (9000f9e4 <prvTimerTask+0x290>)
9000f9b0:	1d39      	adds	r1, r7, #4
9000f9b2:	6818      	ldr	r0, [r3, #0]
9000f9b4:	f7fd fba4 	bl	9000d100 <vListInsert>
	return xProcessTimerNow;
9000f9b8:	e700      	b.n	9000f7bc <prvTimerTask+0x68>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
9000f9ba:	4b0a      	ldr	r3, [pc, #40]	; (9000f9e4 <prvTimerTask+0x290>)
9000f9bc:	4641      	mov	r1, r8
9000f9be:	6818      	ldr	r0, [r3, #0]
9000f9c0:	f7fd fb9e 	bl	9000d100 <vListInsert>
	return xProcessTimerNow;
9000f9c4:	e6f6      	b.n	9000f7b4 <prvTimerTask+0x60>
9000f9c6:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f9ca:	f383 8811 	msr	BASEPRI, r3
9000f9ce:	f3bf 8f6f 	isb	sy
9000f9d2:	f3bf 8f4f 	dsb	sy
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
9000f9d6:	e7fe      	b.n	9000f9d6 <prvTimerTask+0x282>
9000f9d8:	24023444 	.word	0x24023444
9000f9dc:	24023514 	.word	0x24023514
9000f9e0:	24023568 	.word	0x24023568
9000f9e4:	24023448 	.word	0x24023448

9000f9e8 <xTimerCreateTimerTask>:
{
9000f9e8:	b5f0      	push	{r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
9000f9ea:	4c23      	ldr	r4, [pc, #140]	; (9000fa78 <xTimerCreateTimerTask+0x90>)
{
9000f9ec:	b089      	sub	sp, #36	; 0x24
	taskENTER_CRITICAL();
9000f9ee:	f7fd fc21 	bl	9000d234 <vPortEnterCritical>
		if( xTimerQueue == NULL )
9000f9f2:	6825      	ldr	r5, [r4, #0]
9000f9f4:	b335      	cbz	r5, 9000fa44 <xTimerCreateTimerTask+0x5c>
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
9000f9f6:	f7fd fc3f 	bl	9000d278 <vPortExitCritical>
	if( xTimerQueue != NULL )
9000f9fa:	6823      	ldr	r3, [r4, #0]
9000f9fc:	b1cb      	cbz	r3, 9000fa32 <xTimerCreateTimerTask+0x4a>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
9000f9fe:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
9000fa00:	aa07      	add	r2, sp, #28
9000fa02:	a906      	add	r1, sp, #24
9000fa04:	a805      	add	r0, sp, #20
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
9000fa06:	2502      	movs	r5, #2
			StackType_t *pxTimerTaskStackBuffer = NULL;
9000fa08:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
9000fa0c:	f7fd fa26 	bl	9000ce5c <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
9000fa10:	4623      	mov	r3, r4
9000fa12:	9a07      	ldr	r2, [sp, #28]
9000fa14:	9500      	str	r5, [sp, #0]
9000fa16:	e9dd 0105 	ldrd	r0, r1, [sp, #20]
9000fa1a:	e9cd 1001 	strd	r1, r0, [sp, #4]
9000fa1e:	4917      	ldr	r1, [pc, #92]	; (9000fa7c <xTimerCreateTimerTask+0x94>)
9000fa20:	4817      	ldr	r0, [pc, #92]	; (9000fa80 <xTimerCreateTimerTask+0x98>)
9000fa22:	f7ff f87f 	bl	9000eb24 <xTaskCreateStatic>
9000fa26:	4b17      	ldr	r3, [pc, #92]	; (9000fa84 <xTimerCreateTimerTask+0x9c>)
9000fa28:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
9000fa2a:	b110      	cbz	r0, 9000fa32 <xTimerCreateTimerTask+0x4a>
}
9000fa2c:	2001      	movs	r0, #1
9000fa2e:	b009      	add	sp, #36	; 0x24
9000fa30:	bdf0      	pop	{r4, r5, r6, r7, pc}
9000fa32:	f04f 0350 	mov.w	r3, #80	; 0x50
9000fa36:	f383 8811 	msr	BASEPRI, r3
9000fa3a:	f3bf 8f6f 	isb	sy
9000fa3e:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
9000fa42:	e7fe      	b.n	9000fa42 <xTimerCreateTimerTask+0x5a>
			vListInitialise( &xActiveTimerList1 );
9000fa44:	4f10      	ldr	r7, [pc, #64]	; (9000fa88 <xTimerCreateTimerTask+0xa0>)
			vListInitialise( &xActiveTimerList2 );
9000fa46:	4e11      	ldr	r6, [pc, #68]	; (9000fa8c <xTimerCreateTimerTask+0xa4>)
			vListInitialise( &xActiveTimerList1 );
9000fa48:	4638      	mov	r0, r7
9000fa4a:	f7fd fb39 	bl	9000d0c0 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
9000fa4e:	4630      	mov	r0, r6
9000fa50:	f7fd fb36 	bl	9000d0c0 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
9000fa54:	4a0e      	ldr	r2, [pc, #56]	; (9000fa90 <xTimerCreateTimerTask+0xa8>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
9000fa56:	9500      	str	r5, [sp, #0]
9000fa58:	2110      	movs	r1, #16
			pxCurrentTimerList = &xActiveTimerList1;
9000fa5a:	6017      	str	r7, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
9000fa5c:	200a      	movs	r0, #10
			pxOverflowTimerList = &xActiveTimerList2;
9000fa5e:	4a0d      	ldr	r2, [pc, #52]	; (9000fa94 <xTimerCreateTimerTask+0xac>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
9000fa60:	4b0d      	ldr	r3, [pc, #52]	; (9000fa98 <xTimerCreateTimerTask+0xb0>)
			pxOverflowTimerList = &xActiveTimerList2;
9000fa62:	6016      	str	r6, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
9000fa64:	4a0d      	ldr	r2, [pc, #52]	; (9000fa9c <xTimerCreateTimerTask+0xb4>)
9000fa66:	f7fd fd87 	bl	9000d578 <xQueueGenericCreateStatic>
9000fa6a:	6020      	str	r0, [r4, #0]
				if( xTimerQueue != NULL )
9000fa6c:	2800      	cmp	r0, #0
9000fa6e:	d0c2      	beq.n	9000f9f6 <xTimerCreateTimerTask+0xe>
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
9000fa70:	490b      	ldr	r1, [pc, #44]	; (9000faa0 <xTimerCreateTimerTask+0xb8>)
9000fa72:	f7fe fdb3 	bl	9000e5dc <vQueueAddToRegistry>
9000fa76:	e7be      	b.n	9000f9f6 <xTimerCreateTimerTask+0xe>
9000fa78:	24023568 	.word	0x24023568
9000fa7c:	90029dc8 	.word	0x90029dc8
9000fa80:	9000f755 	.word	0x9000f755
9000fa84:	2402356c 	.word	0x2402356c
9000fa88:	240234ec 	.word	0x240234ec
9000fa8c:	24023500 	.word	0x24023500
9000fa90:	24023444 	.word	0x24023444
9000fa94:	24023448 	.word	0x24023448
9000fa98:	24023518 	.word	0x24023518
9000fa9c:	2402344c 	.word	0x2402344c
9000faa0:	90029dc0 	.word	0x90029dc0

9000faa4 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
9000faa4:	8880      	ldrh	r0, [r0, #4]
9000faa6:	4770      	bx	lr

9000faa8 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
9000faa8:	b570      	push	{r4, r5, r6, lr}
9000faaa:	6803      	ldr	r3, [r0, #0]
9000faac:	460c      	mov	r4, r1
9000faae:	2100      	movs	r1, #0
9000fab0:	4605      	mov	r5, r0
9000fab2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
9000fab4:	4798      	blx	r3
9000fab6:	4606      	mov	r6, r0
9000fab8:	682b      	ldr	r3, [r5, #0]
9000faba:	4628      	mov	r0, r5
9000fabc:	1ba4      	subs	r4, r4, r6
9000fabe:	6a1b      	ldr	r3, [r3, #32]
9000fac0:	b2a4      	uxth	r4, r4
9000fac2:	4798      	blx	r3
9000fac4:	fbb4 f0f0 	udiv	r0, r4, r0
9000fac8:	bd70      	pop	{r4, r5, r6, pc}

9000faca <_ZN8touchgfx17AbstractPartition5clearEv>:
9000faca:	2300      	movs	r3, #0
9000facc:	8083      	strh	r3, [r0, #4]
9000face:	4770      	bx	lr

9000fad0 <_ZN8touchgfx17AbstractPartition8allocateEt>:
9000fad0:	b510      	push	{r4, lr}
9000fad2:	6803      	ldr	r3, [r0, #0]
9000fad4:	4604      	mov	r4, r0
9000fad6:	8881      	ldrh	r1, [r0, #4]
9000fad8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
9000fada:	4798      	blx	r3
9000fadc:	88a3      	ldrh	r3, [r4, #4]
9000fade:	3301      	adds	r3, #1
9000fae0:	80a3      	strh	r3, [r4, #4]
9000fae2:	bd10      	pop	{r4, pc}

9000fae4 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
9000fae4:	6803      	ldr	r3, [r0, #0]
9000fae6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
9000fae8:	4718      	bx	r3

9000faea <_ZN8touchgfx17AbstractPartitionD1Ev>:
9000faea:	4770      	bx	lr

9000faec <_ZN8touchgfx17AbstractPartitionC1Ev>:
9000faec:	4a02      	ldr	r2, [pc, #8]	; (9000faf8 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
9000faee:	6002      	str	r2, [r0, #0]
9000faf0:	2200      	movs	r2, #0
9000faf2:	8082      	strh	r2, [r0, #4]
9000faf4:	4770      	bx	lr
9000faf6:	bf00      	nop
9000faf8:	90029dd8 	.word	0x90029dd8

9000fafc <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
9000fafc:	6a83      	ldr	r3, [r0, #40]	; 0x28
9000fafe:	2000      	movs	r0, #0
9000fb00:	b12b      	cbz	r3, 9000fb0e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
9000fb02:	b920      	cbnz	r0, 9000fb0e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
9000fb04:	1a5a      	subs	r2, r3, r1
9000fb06:	699b      	ldr	r3, [r3, #24]
9000fb08:	4250      	negs	r0, r2
9000fb0a:	4150      	adcs	r0, r2
9000fb0c:	e7f8      	b.n	9000fb00 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
9000fb0e:	4770      	bx	lr

9000fb10 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
9000fb10:	2300      	movs	r3, #0
9000fb12:	6148      	str	r0, [r1, #20]
9000fb14:	618b      	str	r3, [r1, #24]
9000fb16:	6a83      	ldr	r3, [r0, #40]	; 0x28
9000fb18:	b913      	cbnz	r3, 9000fb20 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
9000fb1a:	6281      	str	r1, [r0, #40]	; 0x28
9000fb1c:	4770      	bx	lr
9000fb1e:	4613      	mov	r3, r2
9000fb20:	699a      	ldr	r2, [r3, #24]
9000fb22:	2a00      	cmp	r2, #0
9000fb24:	d1fb      	bne.n	9000fb1e <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
9000fb26:	6199      	str	r1, [r3, #24]
9000fb28:	4770      	bx	lr

9000fb2a <_ZN8touchgfx9Container9removeAllEv>:
9000fb2a:	2200      	movs	r2, #0
9000fb2c:	6a83      	ldr	r3, [r0, #40]	; 0x28
9000fb2e:	b123      	cbz	r3, 9000fb3a <_ZN8touchgfx9Container9removeAllEv+0x10>
9000fb30:	6999      	ldr	r1, [r3, #24]
9000fb32:	6281      	str	r1, [r0, #40]	; 0x28
9000fb34:	e9c3 2205 	strd	r2, r2, [r3, #20]
9000fb38:	e7f8      	b.n	9000fb2c <_ZN8touchgfx9Container9removeAllEv+0x2>
9000fb3a:	4770      	bx	lr

9000fb3c <_ZN8touchgfx9Container6unlinkEv>:
9000fb3c:	2300      	movs	r3, #0
9000fb3e:	6283      	str	r3, [r0, #40]	; 0x28
9000fb40:	4770      	bx	lr

9000fb42 <_ZNK8touchgfx9Container12getSolidRectEv>:
9000fb42:	2200      	movs	r2, #0
9000fb44:	8002      	strh	r2, [r0, #0]
9000fb46:	8042      	strh	r2, [r0, #2]
9000fb48:	8082      	strh	r2, [r0, #4]
9000fb4a:	80c2      	strh	r2, [r0, #6]
9000fb4c:	4770      	bx	lr

9000fb4e <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
9000fb4e:	b570      	push	{r4, r5, r6, lr}
9000fb50:	460d      	mov	r5, r1
9000fb52:	4616      	mov	r6, r2
9000fb54:	6a84      	ldr	r4, [r0, #40]	; 0x28
9000fb56:	b13c      	cbz	r4, 9000fb68 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
9000fb58:	6823      	ldr	r3, [r4, #0]
9000fb5a:	4620      	mov	r0, r4
9000fb5c:	4632      	mov	r2, r6
9000fb5e:	4629      	mov	r1, r5
9000fb60:	6d5b      	ldr	r3, [r3, #84]	; 0x54
9000fb62:	4798      	blx	r3
9000fb64:	69a4      	ldr	r4, [r4, #24]
9000fb66:	e7f6      	b.n	9000fb56 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
9000fb68:	bd70      	pop	{r4, r5, r6, pc}

9000fb6a <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
9000fb6a:	b538      	push	{r3, r4, r5, lr}
9000fb6c:	460d      	mov	r5, r1
9000fb6e:	6a84      	ldr	r4, [r0, #40]	; 0x28
9000fb70:	b134      	cbz	r4, 9000fb80 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
9000fb72:	682b      	ldr	r3, [r5, #0]
9000fb74:	4621      	mov	r1, r4
9000fb76:	4628      	mov	r0, r5
9000fb78:	689b      	ldr	r3, [r3, #8]
9000fb7a:	4798      	blx	r3
9000fb7c:	69a4      	ldr	r4, [r4, #24]
9000fb7e:	e7f7      	b.n	9000fb70 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
9000fb80:	bd38      	pop	{r3, r4, r5, pc}

9000fb82 <_ZN8touchgfx9ContainerD1Ev>:
9000fb82:	4770      	bx	lr

9000fb84 <_ZN8touchgfx9ContainerD0Ev>:
9000fb84:	b510      	push	{r4, lr}
9000fb86:	4604      	mov	r4, r0
9000fb88:	212c      	movs	r1, #44	; 0x2c
9000fb8a:	f016 f9b2 	bl	90025ef2 <_ZdlPvj>
9000fb8e:	4620      	mov	r0, r4
9000fb90:	bd10      	pop	{r4, pc}

9000fb92 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
9000fb92:	6a83      	ldr	r3, [r0, #40]	; 0x28
9000fb94:	b19b      	cbz	r3, 9000fbbe <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
9000fb96:	428b      	cmp	r3, r1
9000fb98:	d109      	bne.n	9000fbae <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
9000fb9a:	699a      	ldr	r2, [r3, #24]
9000fb9c:	2100      	movs	r1, #0
9000fb9e:	6159      	str	r1, [r3, #20]
9000fba0:	6282      	str	r2, [r0, #40]	; 0x28
9000fba2:	b902      	cbnz	r2, 9000fba6 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
9000fba4:	4770      	bx	lr
9000fba6:	6199      	str	r1, [r3, #24]
9000fba8:	4770      	bx	lr
9000fbaa:	4613      	mov	r3, r2
9000fbac:	b13a      	cbz	r2, 9000fbbe <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
9000fbae:	699a      	ldr	r2, [r3, #24]
9000fbb0:	428a      	cmp	r2, r1
9000fbb2:	d1fa      	bne.n	9000fbaa <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
9000fbb4:	698a      	ldr	r2, [r1, #24]
9000fbb6:	619a      	str	r2, [r3, #24]
9000fbb8:	2300      	movs	r3, #0
9000fbba:	e9c1 3305 	strd	r3, r3, [r1, #20]
9000fbbe:	4770      	bx	lr

9000fbc0 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
9000fbc0:	b410      	push	{r4}
9000fbc2:	6a83      	ldr	r3, [r0, #40]	; 0x28
9000fbc4:	4604      	mov	r4, r0
9000fbc6:	b92b      	cbnz	r3, 9000fbd4 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
9000fbc8:	6803      	ldr	r3, [r0, #0]
9000fbca:	4611      	mov	r1, r2
9000fbcc:	f85d 4b04 	ldr.w	r4, [sp], #4
9000fbd0:	6e1b      	ldr	r3, [r3, #96]	; 0x60
9000fbd2:	4718      	bx	r3
9000fbd4:	b941      	cbnz	r1, 9000fbe8 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
9000fbd6:	6193      	str	r3, [r2, #24]
9000fbd8:	6282      	str	r2, [r0, #40]	; 0x28
9000fbda:	6154      	str	r4, [r2, #20]
9000fbdc:	f85d 4b04 	ldr.w	r4, [sp], #4
9000fbe0:	4770      	bx	lr
9000fbe2:	4603      	mov	r3, r0
9000fbe4:	2800      	cmp	r0, #0
9000fbe6:	d0f9      	beq.n	9000fbdc <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
9000fbe8:	4299      	cmp	r1, r3
9000fbea:	6998      	ldr	r0, [r3, #24]
9000fbec:	d1f9      	bne.n	9000fbe2 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
9000fbee:	6190      	str	r0, [r2, #24]
9000fbf0:	618a      	str	r2, [r1, #24]
9000fbf2:	e7f2      	b.n	9000fbda <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

9000fbf4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
9000fbf4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000fbf8:	461f      	mov	r7, r3
9000fbfa:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
9000fbfe:	460d      	mov	r5, r1
9000fc00:	4616      	mov	r6, r2
9000fc02:	b103      	cbz	r3, 9000fc06 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
9000fc04:	6038      	str	r0, [r7, #0]
9000fc06:	6a84      	ldr	r4, [r0, #40]	; 0x28
9000fc08:	b314      	cbz	r4, 9000fc50 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
9000fc0a:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
9000fc0e:	b1eb      	cbz	r3, 9000fc4c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
9000fc10:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
9000fc14:	428d      	cmp	r5, r1
9000fc16:	db19      	blt.n	9000fc4c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
9000fc18:	b289      	uxth	r1, r1
9000fc1a:	8923      	ldrh	r3, [r4, #8]
9000fc1c:	440b      	add	r3, r1
9000fc1e:	b21b      	sxth	r3, r3
9000fc20:	429d      	cmp	r5, r3
9000fc22:	da13      	bge.n	9000fc4c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
9000fc24:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
9000fc28:	4296      	cmp	r6, r2
9000fc2a:	db0f      	blt.n	9000fc4c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
9000fc2c:	b292      	uxth	r2, r2
9000fc2e:	8963      	ldrh	r3, [r4, #10]
9000fc30:	4413      	add	r3, r2
9000fc32:	b21b      	sxth	r3, r3
9000fc34:	429e      	cmp	r6, r3
9000fc36:	da09      	bge.n	9000fc4c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
9000fc38:	6823      	ldr	r3, [r4, #0]
9000fc3a:	1ab2      	subs	r2, r6, r2
9000fc3c:	1a69      	subs	r1, r5, r1
9000fc3e:	4620      	mov	r0, r4
9000fc40:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
9000fc44:	b212      	sxth	r2, r2
9000fc46:	463b      	mov	r3, r7
9000fc48:	b209      	sxth	r1, r1
9000fc4a:	47c0      	blx	r8
9000fc4c:	69a4      	ldr	r4, [r4, #24]
9000fc4e:	e7db      	b.n	9000fc08 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
9000fc50:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

9000fc54 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
9000fc54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000fc58:	4c6d      	ldr	r4, [pc, #436]	; (9000fe10 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1bc>)
9000fc5a:	b0a1      	sub	sp, #132	; 0x84
9000fc5c:	4606      	mov	r6, r0
9000fc5e:	6824      	ldr	r4, [r4, #0]
9000fc60:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
9000fc62:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
9000fc66:	2400      	movs	r4, #0
9000fc68:	9303      	str	r3, [sp, #12]
9000fc6a:	802c      	strh	r4, [r5, #0]
9000fc6c:	9d2b      	ldr	r5, [sp, #172]	; 0xac
9000fc6e:	802c      	strh	r4, [r5, #0]
9000fc70:	601c      	str	r4, [r3, #0]
9000fc72:	e9cd 1201 	strd	r1, r2, [sp, #4]
9000fc76:	f7ff ffbd 	bl	9000fbf4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
9000fc7a:	f1b9 0f03 	cmp.w	r9, #3
9000fc7e:	f340 80c1 	ble.w	9000fe04 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b0>
9000fc82:	4631      	mov	r1, r6
9000fc84:	a80c      	add	r0, sp, #48	; 0x30
9000fc86:	f006 f8fb 	bl	90015e80 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9000fc8a:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
9000fc8e:	9306      	str	r3, [sp, #24]
9000fc90:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
9000fc94:	9307      	str	r3, [sp, #28]
9000fc96:	9b03      	ldr	r3, [sp, #12]
9000fc98:	f8d3 a000 	ldr.w	sl, [r3]
9000fc9c:	f1ba 0f00 	cmp.w	sl, #0
9000fca0:	f000 80b3 	beq.w	9000fe0a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b6>
9000fca4:	4651      	mov	r1, sl
9000fca6:	a810      	add	r0, sp, #64	; 0x40
9000fca8:	f006 f8ea 	bl	90015e80 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9000fcac:	2002      	movs	r0, #2
9000fcae:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
9000fcb2:	9b01      	ldr	r3, [sp, #4]
9000fcb4:	9a06      	ldr	r2, [sp, #24]
9000fcb6:	fb91 f1f0 	sdiv	r1, r1, r0
9000fcba:	189d      	adds	r5, r3, r2
9000fcbc:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
9000fcc0:	9a07      	ldr	r2, [sp, #28]
9000fcc2:	4419      	add	r1, r3
9000fcc4:	9b02      	ldr	r3, [sp, #8]
9000fcc6:	4413      	add	r3, r2
9000fcc8:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
9000fccc:	1a6d      	subs	r5, r5, r1
9000fcce:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
9000fcd2:	fb92 f2f0 	sdiv	r2, r2, r0
9000fcd6:	440a      	add	r2, r1
9000fcd8:	1a9b      	subs	r3, r3, r2
9000fcda:	435b      	muls	r3, r3
9000fcdc:	fb05 3505 	mla	r5, r5, r5, r3
9000fce0:	4f4c      	ldr	r7, [pc, #304]	; (9000fe14 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
9000fce2:	ac10      	add	r4, sp, #64	; 0x40
9000fce4:	f1b9 0f0c 	cmp.w	r9, #12
9000fce8:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
9000fcea:	c40f      	stmia	r4!, {r0, r1, r2, r3}
9000fcec:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
9000fcee:	c40f      	stmia	r4!, {r0, r1, r2, r3}
9000fcf0:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
9000fcf2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
9000fcf4:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
9000fcf8:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
9000fcfc:	f04f 0303 	mov.w	r3, #3
9000fd00:	bfd8      	it	le
9000fd02:	f109 32ff 	addle.w	r2, r9, #4294967295
9000fd06:	f04f 0400 	mov.w	r4, #0
9000fd0a:	f8cd 9000 	str.w	r9, [sp]
9000fd0e:	bfcc      	ite	gt
9000fd10:	4698      	movgt	r8, r3
9000fd12:	fb92 f8f3 	sdivle	r8, r2, r3
9000fd16:	1c63      	adds	r3, r4, #1
9000fd18:	aa10      	add	r2, sp, #64	; 0x40
9000fd1a:	f004 0401 	and.w	r4, r4, #1
9000fd1e:	f04f 0b00 	mov.w	fp, #0
9000fd22:	9308      	str	r3, [sp, #32]
9000fd24:	9b00      	ldr	r3, [sp, #0]
9000fd26:	eb02 1444 	add.w	r4, r2, r4, lsl #5
9000fd2a:	fb93 f3f8 	sdiv	r3, r3, r8
9000fd2e:	3404      	adds	r4, #4
9000fd30:	b29b      	uxth	r3, r3
9000fd32:	9304      	str	r3, [sp, #16]
9000fd34:	9a04      	ldr	r2, [sp, #16]
9000fd36:	f854 3c04 	ldr.w	r3, [r4, #-4]
9000fd3a:	fb13 f302 	smulbb	r3, r3, r2
9000fd3e:	9a01      	ldr	r2, [sp, #4]
9000fd40:	b29b      	uxth	r3, r3
9000fd42:	1899      	adds	r1, r3, r2
9000fd44:	9305      	str	r3, [sp, #20]
9000fd46:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
9000fd4a:	b209      	sxth	r1, r1
9000fd4c:	4299      	cmp	r1, r3
9000fd4e:	db4d      	blt.n	9000fdec <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
9000fd50:	8932      	ldrh	r2, [r6, #8]
9000fd52:	4413      	add	r3, r2
9000fd54:	b21b      	sxth	r3, r3
9000fd56:	4299      	cmp	r1, r3
9000fd58:	da48      	bge.n	9000fdec <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
9000fd5a:	9b04      	ldr	r3, [sp, #16]
9000fd5c:	6827      	ldr	r7, [r4, #0]
9000fd5e:	fb17 f703 	smulbb	r7, r7, r3
9000fd62:	9b02      	ldr	r3, [sp, #8]
9000fd64:	b2bf      	uxth	r7, r7
9000fd66:	18fa      	adds	r2, r7, r3
9000fd68:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
9000fd6c:	b212      	sxth	r2, r2
9000fd6e:	429a      	cmp	r2, r3
9000fd70:	db3c      	blt.n	9000fdec <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
9000fd72:	8970      	ldrh	r0, [r6, #10]
9000fd74:	4403      	add	r3, r0
9000fd76:	b21b      	sxth	r3, r3
9000fd78:	429a      	cmp	r2, r3
9000fd7a:	da37      	bge.n	9000fdec <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
9000fd7c:	2300      	movs	r3, #0
9000fd7e:	4630      	mov	r0, r6
9000fd80:	930b      	str	r3, [sp, #44]	; 0x2c
9000fd82:	ab0b      	add	r3, sp, #44	; 0x2c
9000fd84:	f7ff ff36 	bl	9000fbf4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
9000fd88:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
9000fd8a:	b37a      	cbz	r2, 9000fdec <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
9000fd8c:	4552      	cmp	r2, sl
9000fd8e:	d02d      	beq.n	9000fdec <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
9000fd90:	4611      	mov	r1, r2
9000fd92:	a80e      	add	r0, sp, #56	; 0x38
9000fd94:	9209      	str	r2, [sp, #36]	; 0x24
9000fd96:	f006 f873 	bl	90015e80 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9000fd9a:	f04f 0e02 	mov.w	lr, #2
9000fd9e:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
9000fda2:	9a06      	ldr	r2, [sp, #24]
9000fda4:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
9000fda8:	9b01      	ldr	r3, [sp, #4]
9000fdaa:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
9000fdae:	4413      	add	r3, r2
9000fdb0:	9a07      	ldr	r2, [sp, #28]
9000fdb2:	fb91 f1fe 	sdiv	r1, r1, lr
9000fdb6:	fb9c fcfe 	sdiv	ip, ip, lr
9000fdba:	4401      	add	r1, r0
9000fdbc:	1a58      	subs	r0, r3, r1
9000fdbe:	9b02      	ldr	r3, [sp, #8]
9000fdc0:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
9000fdc4:	4413      	add	r3, r2
9000fdc6:	9a09      	ldr	r2, [sp, #36]	; 0x24
9000fdc8:	448c      	add	ip, r1
9000fdca:	eba3 030c 	sub.w	r3, r3, ip
9000fdce:	435b      	muls	r3, r3
9000fdd0:	fb00 3300 	mla	r3, r0, r0, r3
9000fdd4:	42ab      	cmp	r3, r5
9000fdd6:	d208      	bcs.n	9000fdea <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
9000fdd8:	990b      	ldr	r1, [sp, #44]	; 0x2c
9000fdda:	461d      	mov	r5, r3
9000fddc:	9803      	ldr	r0, [sp, #12]
9000fdde:	6001      	str	r1, [r0, #0]
9000fde0:	992a      	ldr	r1, [sp, #168]	; 0xa8
9000fde2:	9805      	ldr	r0, [sp, #20]
9000fde4:	8008      	strh	r0, [r1, #0]
9000fde6:	992b      	ldr	r1, [sp, #172]	; 0xac
9000fde8:	800f      	strh	r7, [r1, #0]
9000fdea:	4692      	mov	sl, r2
9000fdec:	f10b 0b01 	add.w	fp, fp, #1
9000fdf0:	3408      	adds	r4, #8
9000fdf2:	f1bb 0f04 	cmp.w	fp, #4
9000fdf6:	d19d      	bne.n	9000fd34 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
9000fdf8:	9b00      	ldr	r3, [sp, #0]
9000fdfa:	9c08      	ldr	r4, [sp, #32]
9000fdfc:	444b      	add	r3, r9
9000fdfe:	4544      	cmp	r4, r8
9000fe00:	9300      	str	r3, [sp, #0]
9000fe02:	d188      	bne.n	9000fd16 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
9000fe04:	b021      	add	sp, #132	; 0x84
9000fe06:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9000fe0a:	f04f 35ff 	mov.w	r5, #4294967295
9000fe0e:	e767      	b.n	9000fce0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
9000fe10:	2402357c 	.word	0x2402357c
9000fe14:	90027074 	.word	0x90027074

9000fe18 <_ZN8touchgfx4RectaNERKS0_>:
9000fe18:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9000fe1c:	f9b1 7000 	ldrsh.w	r7, [r1]
9000fe20:	888c      	ldrh	r4, [r1, #4]
9000fe22:	f9b0 9000 	ldrsh.w	r9, [r0]
9000fe26:	443c      	add	r4, r7
9000fe28:	b2a4      	uxth	r4, r4
9000fe2a:	fa0f f884 	sxth.w	r8, r4
9000fe2e:	45c1      	cmp	r9, r8
9000fe30:	da2f      	bge.n	9000fe92 <_ZN8touchgfx4RectaNERKS0_+0x7a>
9000fe32:	8882      	ldrh	r2, [r0, #4]
9000fe34:	444a      	add	r2, r9
9000fe36:	b292      	uxth	r2, r2
9000fe38:	fa0f fe82 	sxth.w	lr, r2
9000fe3c:	4577      	cmp	r7, lr
9000fe3e:	da28      	bge.n	9000fe92 <_ZN8touchgfx4RectaNERKS0_+0x7a>
9000fe40:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
9000fe44:	88cb      	ldrh	r3, [r1, #6]
9000fe46:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
9000fe4a:	442b      	add	r3, r5
9000fe4c:	b21b      	sxth	r3, r3
9000fe4e:	429e      	cmp	r6, r3
9000fe50:	da1f      	bge.n	9000fe92 <_ZN8touchgfx4RectaNERKS0_+0x7a>
9000fe52:	88c3      	ldrh	r3, [r0, #6]
9000fe54:	4433      	add	r3, r6
9000fe56:	b29b      	uxth	r3, r3
9000fe58:	fa0f fc83 	sxth.w	ip, r3
9000fe5c:	4565      	cmp	r5, ip
9000fe5e:	da18      	bge.n	9000fe92 <_ZN8touchgfx4RectaNERKS0_+0x7a>
9000fe60:	454f      	cmp	r7, r9
9000fe62:	bfb8      	it	lt
9000fe64:	464f      	movlt	r7, r9
9000fe66:	42b5      	cmp	r5, r6
9000fe68:	bfb8      	it	lt
9000fe6a:	4635      	movlt	r5, r6
9000fe6c:	45f0      	cmp	r8, lr
9000fe6e:	bfd8      	it	le
9000fe70:	4622      	movle	r2, r4
9000fe72:	1bd2      	subs	r2, r2, r7
9000fe74:	8082      	strh	r2, [r0, #4]
9000fe76:	884a      	ldrh	r2, [r1, #2]
9000fe78:	88c9      	ldrh	r1, [r1, #6]
9000fe7a:	8007      	strh	r7, [r0, #0]
9000fe7c:	440a      	add	r2, r1
9000fe7e:	8045      	strh	r5, [r0, #2]
9000fe80:	b292      	uxth	r2, r2
9000fe82:	b211      	sxth	r1, r2
9000fe84:	458c      	cmp	ip, r1
9000fe86:	bfa8      	it	ge
9000fe88:	4613      	movge	r3, r2
9000fe8a:	1b5b      	subs	r3, r3, r5
9000fe8c:	80c3      	strh	r3, [r0, #6]
9000fe8e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9000fe92:	2300      	movs	r3, #0
9000fe94:	8003      	strh	r3, [r0, #0]
9000fe96:	8043      	strh	r3, [r0, #2]
9000fe98:	8083      	strh	r3, [r0, #4]
9000fe9a:	80c3      	strh	r3, [r0, #6]
9000fe9c:	e7f7      	b.n	9000fe8e <_ZN8touchgfx4RectaNERKS0_+0x76>

9000fe9e <_ZNK8touchgfx4Rect7isEmptyEv>:
9000fe9e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
9000fea2:	2b00      	cmp	r3, #0
9000fea4:	dd06      	ble.n	9000feb4 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
9000fea6:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
9000feaa:	2800      	cmp	r0, #0
9000feac:	bfcc      	ite	gt
9000feae:	2000      	movgt	r0, #0
9000feb0:	2001      	movle	r0, #1
9000feb2:	4770      	bx	lr
9000feb4:	2001      	movs	r0, #1
9000feb6:	4770      	bx	lr

9000feb8 <_ZNK8touchgfx9Container16getContainedAreaEv>:
9000feb8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000febc:	2300      	movs	r3, #0
9000febe:	4604      	mov	r4, r0
9000fec0:	6a8d      	ldr	r5, [r1, #40]	; 0x28
9000fec2:	8003      	strh	r3, [r0, #0]
9000fec4:	8043      	strh	r3, [r0, #2]
9000fec6:	8083      	strh	r3, [r0, #4]
9000fec8:	80c3      	strh	r3, [r0, #6]
9000feca:	2d00      	cmp	r5, #0
9000fecc:	d040      	beq.n	9000ff50 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
9000fece:	1d28      	adds	r0, r5, #4
9000fed0:	f7ff ffe5 	bl	9000fe9e <_ZNK8touchgfx4Rect7isEmptyEv>
9000fed4:	b988      	cbnz	r0, 9000fefa <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
9000fed6:	4620      	mov	r0, r4
9000fed8:	f7ff ffe1 	bl	9000fe9e <_ZNK8touchgfx4Rect7isEmptyEv>
9000fedc:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
9000fee0:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
9000fee4:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
9000fee8:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
9000feec:	b138      	cbz	r0, 9000fefe <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
9000feee:	8022      	strh	r2, [r4, #0]
9000fef0:	8063      	strh	r3, [r4, #2]
9000fef2:	f8a4 e004 	strh.w	lr, [r4, #4]
9000fef6:	f8a4 c006 	strh.w	ip, [r4, #6]
9000fefa:	69ad      	ldr	r5, [r5, #24]
9000fefc:	e7e5      	b.n	9000feca <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
9000fefe:	f9b4 0000 	ldrsh.w	r0, [r4]
9000ff02:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
9000ff06:	4290      	cmp	r0, r2
9000ff08:	4607      	mov	r7, r0
9000ff0a:	f8b4 8004 	ldrh.w	r8, [r4, #4]
9000ff0e:	460e      	mov	r6, r1
9000ff10:	bfa8      	it	ge
9000ff12:	4617      	movge	r7, r2
9000ff14:	4299      	cmp	r1, r3
9000ff16:	4472      	add	r2, lr
9000ff18:	f8b4 e006 	ldrh.w	lr, [r4, #6]
9000ff1c:	bfa8      	it	ge
9000ff1e:	461e      	movge	r6, r3
9000ff20:	4440      	add	r0, r8
9000ff22:	4471      	add	r1, lr
9000ff24:	4463      	add	r3, ip
9000ff26:	b200      	sxth	r0, r0
9000ff28:	8027      	strh	r7, [r4, #0]
9000ff2a:	b212      	sxth	r2, r2
9000ff2c:	8066      	strh	r6, [r4, #2]
9000ff2e:	b209      	sxth	r1, r1
9000ff30:	b21b      	sxth	r3, r3
9000ff32:	4290      	cmp	r0, r2
9000ff34:	bfac      	ite	ge
9000ff36:	ebc7 0200 	rsbge	r2, r7, r0
9000ff3a:	ebc7 0202 	rsblt	r2, r7, r2
9000ff3e:	4299      	cmp	r1, r3
9000ff40:	bfac      	ite	ge
9000ff42:	ebc6 0301 	rsbge	r3, r6, r1
9000ff46:	ebc6 0303 	rsblt	r3, r6, r3
9000ff4a:	80a2      	strh	r2, [r4, #4]
9000ff4c:	80e3      	strh	r3, [r4, #6]
9000ff4e:	e7d4      	b.n	9000fefa <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
9000ff50:	4620      	mov	r0, r4
9000ff52:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

9000ff56 <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
9000ff56:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
9000ff5a:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
9000ff5e:	b383      	cbz	r3, 9000ffc2 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
9000ff60:	6a84      	ldr	r4, [r0, #40]	; 0x28
9000ff62:	b374      	cbz	r4, 9000ffc2 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
9000ff64:	f9b1 5000 	ldrsh.w	r5, [r1]
9000ff68:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
9000ff6c:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
9000ff70:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
9000ff74:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
9000ff78:	b303      	cbz	r3, 9000ffbc <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
9000ff7a:	4668      	mov	r0, sp
9000ff7c:	1d21      	adds	r1, r4, #4
9000ff7e:	f8ad 5000 	strh.w	r5, [sp]
9000ff82:	f8ad 6002 	strh.w	r6, [sp, #2]
9000ff86:	f8ad 7004 	strh.w	r7, [sp, #4]
9000ff8a:	f8ad 8006 	strh.w	r8, [sp, #6]
9000ff8e:	f7ff ff43 	bl	9000fe18 <_ZN8touchgfx4RectaNERKS0_>
9000ff92:	4668      	mov	r0, sp
9000ff94:	f7ff ff83 	bl	9000fe9e <_ZNK8touchgfx4Rect7isEmptyEv>
9000ff98:	b980      	cbnz	r0, 9000ffbc <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
9000ff9a:	f8bd 3000 	ldrh.w	r3, [sp]
9000ff9e:	4669      	mov	r1, sp
9000ffa0:	88a2      	ldrh	r2, [r4, #4]
9000ffa2:	4620      	mov	r0, r4
9000ffa4:	1a9b      	subs	r3, r3, r2
9000ffa6:	88e2      	ldrh	r2, [r4, #6]
9000ffa8:	f8ad 3000 	strh.w	r3, [sp]
9000ffac:	f8bd 3002 	ldrh.w	r3, [sp, #2]
9000ffb0:	1a9b      	subs	r3, r3, r2
9000ffb2:	f8ad 3002 	strh.w	r3, [sp, #2]
9000ffb6:	6823      	ldr	r3, [r4, #0]
9000ffb8:	689b      	ldr	r3, [r3, #8]
9000ffba:	4798      	blx	r3
9000ffbc:	69a4      	ldr	r4, [r4, #24]
9000ffbe:	2c00      	cmp	r4, #0
9000ffc0:	d1d8      	bne.n	9000ff74 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
9000ffc2:	b002      	add	sp, #8
9000ffc4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

9000ffc8 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
9000ffc8:	b573      	push	{r0, r1, r4, r5, r6, lr}
9000ffca:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
9000ffce:	460d      	mov	r5, r1
9000ffd0:	4616      	mov	r6, r2
9000ffd2:	b323      	cbz	r3, 9001001e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
9000ffd4:	6a84      	ldr	r4, [r0, #40]	; 0x28
9000ffd6:	b314      	cbz	r4, 9001001e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
9000ffd8:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
9000ffdc:	b1eb      	cbz	r3, 9001001a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
9000ffde:	6828      	ldr	r0, [r5, #0]
9000ffe0:	466b      	mov	r3, sp
9000ffe2:	6869      	ldr	r1, [r5, #4]
9000ffe4:	c303      	stmia	r3!, {r0, r1}
9000ffe6:	4668      	mov	r0, sp
9000ffe8:	1d21      	adds	r1, r4, #4
9000ffea:	f7ff ff15 	bl	9000fe18 <_ZN8touchgfx4RectaNERKS0_>
9000ffee:	4668      	mov	r0, sp
9000fff0:	f7ff ff55 	bl	9000fe9e <_ZNK8touchgfx4Rect7isEmptyEv>
9000fff4:	b988      	cbnz	r0, 9001001a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
9000fff6:	f8bd 3000 	ldrh.w	r3, [sp]
9000fffa:	4669      	mov	r1, sp
9000fffc:	88a2      	ldrh	r2, [r4, #4]
9000fffe:	4620      	mov	r0, r4
90010000:	1a9b      	subs	r3, r3, r2
90010002:	88e2      	ldrh	r2, [r4, #6]
90010004:	f8ad 3000 	strh.w	r3, [sp]
90010008:	f8bd 3002 	ldrh.w	r3, [sp, #2]
9001000c:	1a9b      	subs	r3, r3, r2
9001000e:	4632      	mov	r2, r6
90010010:	f8ad 3002 	strh.w	r3, [sp, #2]
90010014:	6823      	ldr	r3, [r4, #0]
90010016:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
90010018:	4798      	blx	r3
9001001a:	69a4      	ldr	r4, [r4, #24]
9001001c:	e7db      	b.n	9000ffd6 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
9001001e:	b002      	add	sp, #8
90010020:	bd70      	pop	{r4, r5, r6, pc}

90010022 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
90010022:	6803      	ldr	r3, [r0, #0]
90010024:	b513      	push	{r0, r1, r4, lr}
90010026:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
9001002a:	2300      	movs	r3, #0
9001002c:	e9cd 3300 	strd	r3, r3, [sp]
90010030:	466b      	mov	r3, sp
90010032:	47a0      	blx	r4
90010034:	b002      	add	sp, #8
90010036:	bd10      	pop	{r4, pc}

90010038 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
90010038:	2301      	movs	r3, #1
9001003a:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
9001003e:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
90010042:	4770      	bx	lr

90010044 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
90010044:	2301      	movs	r3, #1
90010046:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
9001004a:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
9001004e:	4770      	bx	lr

90010050 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
90010050:	6843      	ldr	r3, [r0, #4]
90010052:	2201      	movs	r2, #1
90010054:	725a      	strb	r2, [r3, #9]
90010056:	6840      	ldr	r0, [r0, #4]
90010058:	6803      	ldr	r3, [r0, #0]
9001005a:	691b      	ldr	r3, [r3, #16]
9001005c:	4718      	bx	r3

9001005e <_ZN8touchgfx3HAL8flushDMAEv>:
9001005e:	6840      	ldr	r0, [r0, #4]
90010060:	6803      	ldr	r3, [r0, #0]
90010062:	689b      	ldr	r3, [r3, #8]
90010064:	4718      	bx	r3

90010066 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
90010066:	b530      	push	{r4, r5, lr}
90010068:	b08b      	sub	sp, #44	; 0x2c
9001006a:	6804      	ldr	r4, [r0, #0]
9001006c:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
90010070:	9509      	str	r5, [sp, #36]	; 0x24
90010072:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
90010076:	9508      	str	r5, [sp, #32]
90010078:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
9001007c:	9507      	str	r5, [sp, #28]
9001007e:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
90010082:	9506      	str	r5, [sp, #24]
90010084:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
90010088:	9505      	str	r5, [sp, #20]
9001008a:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
9001008e:	9504      	str	r5, [sp, #16]
90010090:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
90010094:	9503      	str	r5, [sp, #12]
90010096:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
9001009a:	9502      	str	r5, [sp, #8]
9001009c:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
900100a0:	e9cd 3500 	strd	r3, r5, [sp]
900100a4:	4613      	mov	r3, r2
900100a6:	6be4      	ldr	r4, [r4, #60]	; 0x3c
900100a8:	2200      	movs	r2, #0
900100aa:	47a0      	blx	r4
900100ac:	b00b      	add	sp, #44	; 0x2c
900100ae:	bd30      	pop	{r4, r5, pc}

900100b0 <_ZN8touchgfx3HAL10beginFrameEv>:
900100b0:	4b04      	ldr	r3, [pc, #16]	; (900100c4 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
900100b2:	781b      	ldrb	r3, [r3, #0]
900100b4:	b123      	cbz	r3, 900100c0 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
900100b6:	f890 006e 	ldrb.w	r0, [r0, #110]	; 0x6e
900100ba:	f080 0001 	eor.w	r0, r0, #1
900100be:	4770      	bx	lr
900100c0:	2001      	movs	r0, #1
900100c2:	4770      	bx	lr
900100c4:	2402357a 	.word	0x2402357a

900100c8 <_ZN8touchgfx3HAL8endFrameEv>:
900100c8:	b510      	push	{r4, lr}
900100ca:	4604      	mov	r4, r0
900100cc:	6840      	ldr	r0, [r0, #4]
900100ce:	6803      	ldr	r3, [r0, #0]
900100d0:	689b      	ldr	r3, [r3, #8]
900100d2:	4798      	blx	r3
900100d4:	f894 306d 	ldrb.w	r3, [r4, #109]	; 0x6d
900100d8:	b113      	cbz	r3, 900100e0 <_ZN8touchgfx3HAL8endFrameEv+0x18>
900100da:	2301      	movs	r3, #1
900100dc:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
900100e0:	bd10      	pop	{r4, pc}

900100e2 <_ZN8touchgfx3HAL10initializeEv>:
900100e2:	b510      	push	{r4, lr}
900100e4:	4604      	mov	r4, r0
900100e6:	f7f1 fc57 	bl	90001998 <_ZN8touchgfx10OSWrappers10initializeEv>
900100ea:	f7f0 fa09 	bl	90000500 <_ZN8touchgfx4GPIO4initEv>
900100ee:	6860      	ldr	r0, [r4, #4]
900100f0:	6803      	ldr	r3, [r0, #0]
900100f2:	68db      	ldr	r3, [r3, #12]
900100f4:	4798      	blx	r3
900100f6:	68e0      	ldr	r0, [r4, #12]
900100f8:	6803      	ldr	r3, [r0, #0]
900100fa:	689b      	ldr	r3, [r3, #8]
900100fc:	4798      	blx	r3
900100fe:	6823      	ldr	r3, [r4, #0]
90010100:	4620      	mov	r0, r4
90010102:	6f5b      	ldr	r3, [r3, #116]	; 0x74
90010104:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90010108:	4718      	bx	r3
	...

9001010c <_ZN8touchgfx3HAL4tickEv>:
9001010c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
9001010e:	6803      	ldr	r3, [r0, #0]
90010110:	4604      	mov	r4, r0
90010112:	4d5b      	ldr	r5, [pc, #364]	; (90010280 <_ZN8touchgfx3HAL4tickEv+0x174>)
90010114:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
90010118:	4798      	blx	r3
9001011a:	2800      	cmp	r0, #0
9001011c:	f000 8095 	beq.w	9001024a <_ZN8touchgfx3HAL4tickEv+0x13e>
90010120:	2001      	movs	r0, #1
90010122:	2600      	movs	r6, #0
90010124:	f7f0 fa16 	bl	90000554 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
90010128:	f894 306a 	ldrb.w	r3, [r4, #106]	; 0x6a
9001012c:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
90010130:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
90010134:	f894 3079 	ldrb.w	r3, [r4, #121]	; 0x79
90010138:	f884 606a 	strb.w	r6, [r4, #106]	; 0x6a
9001013c:	b133      	cbz	r3, 9001014c <_ZN8touchgfx3HAL4tickEv+0x40>
9001013e:	6823      	ldr	r3, [r4, #0]
90010140:	4620      	mov	r0, r4
90010142:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
90010146:	4798      	blx	r3
90010148:	f884 6079 	strb.w	r6, [r4, #121]	; 0x79
9001014c:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
90010150:	2601      	movs	r6, #1
90010152:	6862      	ldr	r2, [r4, #4]
90010154:	f083 0301 	eor.w	r3, r3, #1
90010158:	702e      	strb	r6, [r5, #0]
9001015a:	7253      	strb	r3, [r2, #9]
9001015c:	f004 fd7c 	bl	90014c58 <_ZN8touchgfx11Application11getInstanceEv>
90010160:	6803      	ldr	r3, [r0, #0]
90010162:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90010164:	4798      	blx	r3
90010166:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
9001016a:	b90b      	cbnz	r3, 90010170 <_ZN8touchgfx3HAL4tickEv+0x64>
9001016c:	f884 606b 	strb.w	r6, [r4, #107]	; 0x6b
90010170:	f004 fd72 	bl	90014c58 <_ZN8touchgfx11Application11getInstanceEv>
90010174:	6803      	ldr	r3, [r0, #0]
90010176:	695b      	ldr	r3, [r3, #20]
90010178:	4798      	blx	r3
9001017a:	6de0      	ldr	r0, [r4, #92]	; 0x5c
9001017c:	6803      	ldr	r3, [r0, #0]
9001017e:	691b      	ldr	r3, [r3, #16]
90010180:	4798      	blx	r3
90010182:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
90010186:	f894 206c 	ldrb.w	r2, [r4, #108]	; 0x6c
9001018a:	3b01      	subs	r3, #1
9001018c:	b2db      	uxtb	r3, r3
9001018e:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
90010192:	b10a      	cbz	r2, 90010198 <_ZN8touchgfx3HAL4tickEv+0x8c>
90010194:	2b00      	cmp	r3, #0
90010196:	d1eb      	bne.n	90010170 <_ZN8touchgfx3HAL4tickEv+0x64>
90010198:	4a3a      	ldr	r2, [pc, #232]	; (90010284 <_ZN8touchgfx3HAL4tickEv+0x178>)
9001019a:	f994 1068 	ldrsb.w	r1, [r4, #104]	; 0x68
9001019e:	7813      	ldrb	r3, [r2, #0]
900101a0:	3301      	adds	r3, #1
900101a2:	b25b      	sxtb	r3, r3
900101a4:	4299      	cmp	r1, r3
900101a6:	7013      	strb	r3, [r2, #0]
900101a8:	dc10      	bgt.n	900101cc <_ZN8touchgfx3HAL4tickEv+0xc0>
900101aa:	2300      	movs	r3, #0
900101ac:	68e0      	ldr	r0, [r4, #12]
900101ae:	a902      	add	r1, sp, #8
900101b0:	7013      	strb	r3, [r2, #0]
900101b2:	aa03      	add	r2, sp, #12
900101b4:	6803      	ldr	r3, [r0, #0]
900101b6:	68db      	ldr	r3, [r3, #12]
900101b8:	4798      	blx	r3
900101ba:	6823      	ldr	r3, [r4, #0]
900101bc:	2800      	cmp	r0, #0
900101be:	d050      	beq.n	90010262 <_ZN8touchgfx3HAL4tickEv+0x156>
900101c0:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
900101c4:	4620      	mov	r0, r4
900101c6:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
900101ca:	4798      	blx	r3
900101cc:	2300      	movs	r3, #0
900101ce:	6960      	ldr	r0, [r4, #20]
900101d0:	f88d 3007 	strb.w	r3, [sp, #7]
900101d4:	b158      	cbz	r0, 900101ee <_ZN8touchgfx3HAL4tickEv+0xe2>
900101d6:	6803      	ldr	r3, [r0, #0]
900101d8:	f10d 0107 	add.w	r1, sp, #7
900101dc:	68db      	ldr	r3, [r3, #12]
900101de:	4798      	blx	r3
900101e0:	b128      	cbz	r0, 900101ee <_ZN8touchgfx3HAL4tickEv+0xe2>
900101e2:	6de0      	ldr	r0, [r4, #92]	; 0x5c
900101e4:	f89d 1007 	ldrb.w	r1, [sp, #7]
900101e8:	6803      	ldr	r3, [r0, #0]
900101ea:	68db      	ldr	r3, [r3, #12]
900101ec:	4798      	blx	r3
900101ee:	f104 001c 	add.w	r0, r4, #28
900101f2:	f015 fa0b 	bl	9002560c <_ZN8touchgfx8Gestures4tickEv>
900101f6:	f894 3070 	ldrb.w	r3, [r4, #112]	; 0x70
900101fa:	b30b      	cbz	r3, 90010240 <_ZN8touchgfx3HAL4tickEv+0x134>
900101fc:	6920      	ldr	r0, [r4, #16]
900101fe:	6803      	ldr	r3, [r0, #0]
90010200:	691b      	ldr	r3, [r3, #16]
90010202:	4798      	blx	r3
90010204:	6f63      	ldr	r3, [r4, #116]	; 0x74
90010206:	4606      	mov	r6, r0
90010208:	b903      	cbnz	r3, 9001020c <_ZN8touchgfx3HAL4tickEv+0x100>
9001020a:	6760      	str	r0, [r4, #116]	; 0x74
9001020c:	6f63      	ldr	r3, [r4, #116]	; 0x74
9001020e:	4a1e      	ldr	r2, [pc, #120]	; (90010288 <_ZN8touchgfx3HAL4tickEv+0x17c>)
90010210:	1af3      	subs	r3, r6, r3
90010212:	4293      	cmp	r3, r2
90010214:	d914      	bls.n	90010240 <_ZN8touchgfx3HAL4tickEv+0x134>
90010216:	6920      	ldr	r0, [r4, #16]
90010218:	6803      	ldr	r3, [r0, #0]
9001021a:	699b      	ldr	r3, [r3, #24]
9001021c:	4798      	blx	r3
9001021e:	6f63      	ldr	r3, [r4, #116]	; 0x74
90010220:	2264      	movs	r2, #100	; 0x64
90010222:	1af3      	subs	r3, r6, r3
90010224:	fbb3 f3f2 	udiv	r3, r3, r2
90010228:	fbb0 f0f3 	udiv	r0, r0, r3
9001022c:	2800      	cmp	r0, #0
9001022e:	dc1d      	bgt.n	9001026c <_ZN8touchgfx3HAL4tickEv+0x160>
90010230:	f884 2069 	strb.w	r2, [r4, #105]	; 0x69
90010234:	6920      	ldr	r0, [r4, #16]
90010236:	2100      	movs	r1, #0
90010238:	6803      	ldr	r3, [r0, #0]
9001023a:	69db      	ldr	r3, [r3, #28]
9001023c:	4798      	blx	r3
9001023e:	6766      	str	r6, [r4, #116]	; 0x74
90010240:	f004 fd0a 	bl	90014c58 <_ZN8touchgfx11Application11getInstanceEv>
90010244:	6803      	ldr	r3, [r0, #0]
90010246:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90010248:	4798      	blx	r3
9001024a:	6823      	ldr	r3, [r4, #0]
9001024c:	4620      	mov	r0, r4
9001024e:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
90010252:	4798      	blx	r3
90010254:	2001      	movs	r0, #1
90010256:	f7f0 f9b1 	bl	900005bc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
9001025a:	2300      	movs	r3, #0
9001025c:	702b      	strb	r3, [r5, #0]
9001025e:	b004      	add	sp, #16
90010260:	bd70      	pop	{r4, r5, r6, pc}
90010262:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
90010266:	4620      	mov	r0, r4
90010268:	4798      	blx	r3
9001026a:	e7af      	b.n	900101cc <_ZN8touchgfx3HAL4tickEv+0xc0>
9001026c:	2863      	cmp	r0, #99	; 0x63
9001026e:	bfcb      	itete	gt
90010270:	2300      	movgt	r3, #0
90010272:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
90010276:	f884 3069 	strbgt.w	r3, [r4, #105]	; 0x69
9001027a:	f884 0069 	strble.w	r0, [r4, #105]	; 0x69
9001027e:	e7d9      	b.n	90010234 <_ZN8touchgfx3HAL4tickEv+0x128>
90010280:	24023580 	.word	0x24023580
90010284:	24023581 	.word	0x24023581
90010288:	05f5e100 	.word	0x05f5e100

9001028c <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
9001028c:	b510      	push	{r4, lr}
9001028e:	4604      	mov	r4, r0
90010290:	f7f1 fbb4 	bl	900019fc <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
90010294:	2200      	movs	r2, #0
90010296:	6863      	ldr	r3, [r4, #4]
90010298:	729a      	strb	r2, [r3, #10]
9001029a:	bd10      	pop	{r4, pc}

9001029c <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
9001029c:	65c1      	str	r1, [r0, #92]	; 0x5c
9001029e:	301c      	adds	r0, #28
900102a0:	f015 b9b2 	b.w	90025608 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

900102a4 <_ZN8touchgfx3HAL5touchEll>:
900102a4:	b530      	push	{r4, r5, lr}
900102a6:	b087      	sub	sp, #28
900102a8:	4604      	mov	r4, r0
900102aa:	a804      	add	r0, sp, #16
900102ac:	e9cd 1204 	strd	r1, r2, [sp, #16]
900102b0:	f004 fa9c 	bl	900147ec <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
900102b4:	9b04      	ldr	r3, [sp, #16]
900102b6:	a906      	add	r1, sp, #24
900102b8:	a803      	add	r0, sp, #12
900102ba:	f8ad 300c 	strh.w	r3, [sp, #12]
900102be:	9b05      	ldr	r3, [sp, #20]
900102c0:	f821 3d0a 	strh.w	r3, [r1, #-10]!
900102c4:	f004 fae4 	bl	90014890 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
900102c8:	f894 106f 	ldrb.w	r1, [r4, #111]	; 0x6f
900102cc:	f104 001c 	add.w	r0, r4, #28
900102d0:	f8bd 200c 	ldrh.w	r2, [sp, #12]
900102d4:	f8bd 300e 	ldrh.w	r3, [sp, #14]
900102d8:	b189      	cbz	r1, 900102fe <_ZN8touchgfx3HAL5touchEll+0x5a>
900102da:	f8b4 5064 	ldrh.w	r5, [r4, #100]	; 0x64
900102de:	9300      	str	r3, [sp, #0]
900102e0:	4613      	mov	r3, r2
900102e2:	f8b4 1060 	ldrh.w	r1, [r4, #96]	; 0x60
900102e6:	462a      	mov	r2, r5
900102e8:	f015 f99e 	bl	90025628 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
900102ec:	b128      	cbz	r0, 900102fa <_ZN8touchgfx3HAL5touchEll+0x56>
900102ee:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
900102f2:	6623      	str	r3, [r4, #96]	; 0x60
900102f4:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
900102f8:	6663      	str	r3, [r4, #100]	; 0x64
900102fa:	b007      	add	sp, #28
900102fc:	bd30      	pop	{r4, r5, pc}
900102fe:	f015 f9d3 	bl	900256a8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
90010302:	2301      	movs	r3, #1
90010304:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
90010308:	e7f1      	b.n	900102ee <_ZN8touchgfx3HAL5touchEll+0x4a>

9001030a <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
9001030a:	b510      	push	{r4, lr}
9001030c:	2b00      	cmp	r3, #0
9001030e:	d046      	beq.n	9001039e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
90010310:	ea81 0002 	eor.w	r0, r1, r2
90010314:	07c4      	lsls	r4, r0, #31
90010316:	d508      	bpl.n	9001032a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
90010318:	440b      	add	r3, r1
9001031a:	3a01      	subs	r2, #1
9001031c:	428b      	cmp	r3, r1
9001031e:	d93e      	bls.n	9001039e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
90010320:	f812 0f01 	ldrb.w	r0, [r2, #1]!
90010324:	f801 0b01 	strb.w	r0, [r1], #1
90010328:	e7f8      	b.n	9001031c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
9001032a:	07d0      	lsls	r0, r2, #31
9001032c:	bf42      	ittt	mi
9001032e:	f812 0b01 	ldrbmi.w	r0, [r2], #1
90010332:	f103 33ff 	addmi.w	r3, r3, #4294967295
90010336:	f801 0b01 	strbmi.w	r0, [r1], #1
9001033a:	2b01      	cmp	r3, #1
9001033c:	d911      	bls.n	90010362 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
9001033e:	ea81 0402 	eor.w	r4, r1, r2
90010342:	4610      	mov	r0, r2
90010344:	07a4      	lsls	r4, r4, #30
90010346:	d022      	beq.n	9001038e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
90010348:	f023 0401 	bic.w	r4, r3, #1
9001034c:	440c      	add	r4, r1
9001034e:	428c      	cmp	r4, r1
90010350:	4602      	mov	r2, r0
90010352:	d904      	bls.n	9001035e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
90010354:	8812      	ldrh	r2, [r2, #0]
90010356:	3002      	adds	r0, #2
90010358:	f821 2b02 	strh.w	r2, [r1], #2
9001035c:	e7f7      	b.n	9001034e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
9001035e:	f003 0301 	and.w	r3, r3, #1
90010362:	f023 0003 	bic.w	r0, r3, #3
90010366:	4408      	add	r0, r1
90010368:	4288      	cmp	r0, r1
9001036a:	4614      	mov	r4, r2
9001036c:	d904      	bls.n	90010378 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
9001036e:	6824      	ldr	r4, [r4, #0]
90010370:	3204      	adds	r2, #4
90010372:	f841 4b04 	str.w	r4, [r1], #4
90010376:	e7f7      	b.n	90010368 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
90010378:	f003 0303 	and.w	r3, r3, #3
9001037c:	3a01      	subs	r2, #1
9001037e:	440b      	add	r3, r1
90010380:	428b      	cmp	r3, r1
90010382:	d90c      	bls.n	9001039e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
90010384:	f812 0f01 	ldrb.w	r0, [r2, #1]!
90010388:	f801 0b01 	strb.w	r0, [r1], #1
9001038c:	e7f8      	b.n	90010380 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
9001038e:	0790      	lsls	r0, r2, #30
90010390:	d0e7      	beq.n	90010362 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
90010392:	f832 0b02 	ldrh.w	r0, [r2], #2
90010396:	3b02      	subs	r3, #2
90010398:	f821 0b02 	strh.w	r0, [r1], #2
9001039c:	e7e1      	b.n	90010362 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
9001039e:	2001      	movs	r0, #1
900103a0:	bd10      	pop	{r4, pc}

900103a2 <_ZN8touchgfx3HAL7noTouchEv>:
900103a2:	b510      	push	{r4, lr}
900103a4:	f890 306f 	ldrb.w	r3, [r0, #111]	; 0x6f
900103a8:	4604      	mov	r4, r0
900103aa:	b153      	cbz	r3, 900103c2 <_ZN8touchgfx3HAL7noTouchEv+0x20>
900103ac:	f8b0 3064 	ldrh.w	r3, [r0, #100]	; 0x64
900103b0:	2101      	movs	r1, #1
900103b2:	f8b0 2060 	ldrh.w	r2, [r0, #96]	; 0x60
900103b6:	301c      	adds	r0, #28
900103b8:	f015 f976 	bl	900256a8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
900103bc:	2300      	movs	r3, #0
900103be:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
900103c2:	bd10      	pop	{r4, pc}

900103c4 <_ZN8touchgfx8Drawable5setXYEss>:
900103c4:	b570      	push	{r4, r5, r6, lr}
900103c6:	6803      	ldr	r3, [r0, #0]
900103c8:	4604      	mov	r4, r0
900103ca:	4615      	mov	r5, r2
900103cc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
900103ce:	4798      	blx	r3
900103d0:	6823      	ldr	r3, [r4, #0]
900103d2:	4629      	mov	r1, r5
900103d4:	4620      	mov	r0, r4
900103d6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
900103d8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900103dc:	4718      	bx	r3
	...

900103e0 <_ZN8touchgfx3HAL3lcdEv>:
900103e0:	4b04      	ldr	r3, [pc, #16]	; (900103f4 <_ZN8touchgfx3HAL3lcdEv+0x14>)
900103e2:	681b      	ldr	r3, [r3, #0]
900103e4:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
900103e8:	b10a      	cbz	r2, 900103ee <_ZN8touchgfx3HAL3lcdEv+0xe>
900103ea:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
900103ec:	b900      	cbnz	r0, 900103f0 <_ZN8touchgfx3HAL3lcdEv+0x10>
900103ee:	6898      	ldr	r0, [r3, #8]
900103f0:	4770      	bx	lr
900103f2:	bf00      	nop
900103f4:	2402357c 	.word	0x2402357c

900103f8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
900103f8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900103fc:	b085      	sub	sp, #20
900103fe:	4604      	mov	r4, r0
90010400:	2000      	movs	r0, #0
90010402:	4699      	mov	r9, r3
90010404:	ad04      	add	r5, sp, #16
90010406:	460f      	mov	r7, r1
90010408:	4690      	mov	r8, r2
9001040a:	f845 0d04 	str.w	r0, [r5, #-4]!
9001040e:	69a0      	ldr	r0, [r4, #24]
90010410:	6806      	ldr	r6, [r0, #0]
90010412:	9501      	str	r5, [sp, #4]
90010414:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
90010418:	9500      	str	r5, [sp, #0]
9001041a:	6835      	ldr	r5, [r6, #0]
9001041c:	47a8      	blx	r5
9001041e:	4d10      	ldr	r5, [pc, #64]	; (90010460 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
90010420:	4606      	mov	r6, r0
90010422:	f8a5 9000 	strh.w	r9, [r5]
90010426:	f7ff ffdb 	bl	900103e0 <_ZN8touchgfx3HAL3lcdEv>
9001042a:	6803      	ldr	r3, [r0, #0]
9001042c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001042e:	4798      	blx	r3
90010430:	b128      	cbz	r0, 9001043e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
90010432:	2801      	cmp	r0, #1
90010434:	d00b      	beq.n	9001044e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
90010436:	4630      	mov	r0, r6
90010438:	b005      	add	sp, #20
9001043a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9001043e:	882b      	ldrh	r3, [r5, #0]
90010440:	fb08 7203 	mla	r2, r8, r3, r7
90010444:	9b03      	ldr	r3, [sp, #12]
90010446:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
9001044a:	63e3      	str	r3, [r4, #60]	; 0x3c
9001044c:	e7f3      	b.n	90010436 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
9001044e:	882a      	ldrh	r2, [r5, #0]
90010450:	9b03      	ldr	r3, [sp, #12]
90010452:	fb08 7202 	mla	r2, r8, r2, r7
90010456:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9001045a:	1a9a      	subs	r2, r3, r2
9001045c:	63e2      	str	r2, [r4, #60]	; 0x3c
9001045e:	e7ea      	b.n	90010436 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
90010460:	24023576 	.word	0x24023576

90010464 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
90010464:	b5f0      	push	{r4, r5, r6, r7, lr}
90010466:	b08b      	sub	sp, #44	; 0x2c
90010468:	4617      	mov	r7, r2
9001046a:	4604      	mov	r4, r0
9001046c:	460e      	mov	r6, r1
9001046e:	461d      	mov	r5, r3
90010470:	f7ff ffb6 	bl	900103e0 <_ZN8touchgfx3HAL3lcdEv>
90010474:	6803      	ldr	r3, [r0, #0]
90010476:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90010478:	4798      	blx	r3
9001047a:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
9001047e:	9007      	str	r0, [sp, #28]
90010480:	4631      	mov	r1, r6
90010482:	6822      	ldr	r2, [r4, #0]
90010484:	e9cd 0308 	strd	r0, r3, [sp, #32]
90010488:	4b0c      	ldr	r3, [pc, #48]	; (900104bc <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
9001048a:	4620      	mov	r0, r4
9001048c:	881b      	ldrh	r3, [r3, #0]
9001048e:	9306      	str	r3, [sp, #24]
90010490:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
90010494:	9305      	str	r3, [sp, #20]
90010496:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
9001049a:	9304      	str	r3, [sp, #16]
9001049c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
900104a0:	9303      	str	r3, [sp, #12]
900104a2:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
900104a6:	9302      	str	r3, [sp, #8]
900104a8:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
900104ac:	e9cd 5300 	strd	r5, r3, [sp]
900104b0:	463b      	mov	r3, r7
900104b2:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
900104b4:	2200      	movs	r2, #0
900104b6:	47a8      	blx	r5
900104b8:	b00b      	add	sp, #44	; 0x2c
900104ba:	bdf0      	pop	{r4, r5, r6, r7, pc}
900104bc:	24023576 	.word	0x24023576

900104c0 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
900104c0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900104c4:	4698      	mov	r8, r3
900104c6:	6803      	ldr	r3, [r0, #0]
900104c8:	b08b      	sub	sp, #44	; 0x2c
900104ca:	4617      	mov	r7, r2
900104cc:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
900104ce:	460e      	mov	r6, r1
900104d0:	4b13      	ldr	r3, [pc, #76]	; (90010520 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
900104d2:	4604      	mov	r4, r0
900104d4:	f8b3 9000 	ldrh.w	r9, [r3]
900104d8:	f7ff ff82 	bl	900103e0 <_ZN8touchgfx3HAL3lcdEv>
900104dc:	6803      	ldr	r3, [r0, #0]
900104de:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900104e0:	4798      	blx	r3
900104e2:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
900104e6:	2200      	movs	r2, #0
900104e8:	4631      	mov	r1, r6
900104ea:	e9cd 0308 	strd	r0, r3, [sp, #32]
900104ee:	2302      	movs	r3, #2
900104f0:	4620      	mov	r0, r4
900104f2:	e9cd 9306 	strd	r9, r3, [sp, #24]
900104f6:	2301      	movs	r3, #1
900104f8:	9305      	str	r3, [sp, #20]
900104fa:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
900104fe:	9304      	str	r3, [sp, #16]
90010500:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
90010504:	9303      	str	r3, [sp, #12]
90010506:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
9001050a:	9302      	str	r3, [sp, #8]
9001050c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
90010510:	e9cd 8300 	strd	r8, r3, [sp]
90010514:	463b      	mov	r3, r7
90010516:	47a8      	blx	r5
90010518:	b00b      	add	sp, #44	; 0x2c
9001051a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9001051e:	bf00      	nop
90010520:	24023576 	.word	0x24023576

90010524 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
90010524:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90010528:	4698      	mov	r8, r3
9001052a:	6803      	ldr	r3, [r0, #0]
9001052c:	b087      	sub	sp, #28
9001052e:	460e      	mov	r6, r1
90010530:	6d9d      	ldr	r5, [r3, #88]	; 0x58
90010532:	4617      	mov	r7, r2
90010534:	4b0f      	ldr	r3, [pc, #60]	; (90010574 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
90010536:	4604      	mov	r4, r0
90010538:	f8b3 9000 	ldrh.w	r9, [r3]
9001053c:	f7ff ff50 	bl	900103e0 <_ZN8touchgfx3HAL3lcdEv>
90010540:	6803      	ldr	r3, [r0, #0]
90010542:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90010544:	4798      	blx	r3
90010546:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
9001054a:	463a      	mov	r2, r7
9001054c:	4631      	mov	r1, r6
9001054e:	f8cd 900c 	str.w	r9, [sp, #12]
90010552:	e9cd 0304 	strd	r0, r3, [sp, #16]
90010556:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
9001055a:	4620      	mov	r0, r4
9001055c:	9302      	str	r3, [sp, #8]
9001055e:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
90010562:	9301      	str	r3, [sp, #4]
90010564:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
90010568:	9300      	str	r3, [sp, #0]
9001056a:	4643      	mov	r3, r8
9001056c:	47a8      	blx	r5
9001056e:	b007      	add	sp, #28
90010570:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90010574:	24023576 	.word	0x24023576

90010578 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
90010578:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001057c:	4604      	mov	r4, r0
9001057e:	b08f      	sub	sp, #60	; 0x3c
90010580:	4610      	mov	r0, r2
90010582:	460d      	mov	r5, r1
90010584:	4691      	mov	r9, r2
90010586:	461e      	mov	r6, r3
90010588:	f007 fc12 	bl	90017db0 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
9001058c:	2800      	cmp	r0, #0
9001058e:	f000 809d 	beq.w	900106cc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
90010592:	6823      	ldr	r3, [r4, #0]
90010594:	4620      	mov	r0, r4
90010596:	f8df b198 	ldr.w	fp, [pc, #408]	; 90010730 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
9001059a:	f10d 0838 	add.w	r8, sp, #56	; 0x38
9001059e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
900105a0:	4798      	blx	r3
900105a2:	6823      	ldr	r3, [r4, #0]
900105a4:	4620      	mov	r0, r4
900105a6:	f8df a18c 	ldr.w	sl, [pc, #396]	; 90010734 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
900105aa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900105ac:	4798      	blx	r3
900105ae:	f8bb 3000 	ldrh.w	r3, [fp]
900105b2:	4f5c      	ldr	r7, [pc, #368]	; (90010724 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
900105b4:	9301      	str	r3, [sp, #4]
900105b6:	f8ba 3000 	ldrh.w	r3, [sl]
900105ba:	f828 9d1c 	strh.w	r9, [r8, #-28]!
900105be:	4640      	mov	r0, r8
900105c0:	9302      	str	r3, [sp, #8]
900105c2:	883b      	ldrh	r3, [r7, #0]
900105c4:	9303      	str	r3, [sp, #12]
900105c6:	4b58      	ldr	r3, [pc, #352]	; (90010728 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
900105c8:	881a      	ldrh	r2, [r3, #0]
900105ca:	9305      	str	r3, [sp, #20]
900105cc:	9204      	str	r2, [sp, #16]
900105ce:	f007 fc83 	bl	90017ed8 <_ZNK8touchgfx6Bitmap8getWidthEv>
900105d2:	8038      	strh	r0, [r7, #0]
900105d4:	4640      	mov	r0, r8
900105d6:	f007 fcb3 	bl	90017f40 <_ZNK8touchgfx6Bitmap9getHeightEv>
900105da:	9b05      	ldr	r3, [sp, #20]
900105dc:	b280      	uxth	r0, r0
900105de:	8018      	strh	r0, [r3, #0]
900105e0:	4b52      	ldr	r3, [pc, #328]	; (9001072c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
900105e2:	781b      	ldrb	r3, [r3, #0]
900105e4:	2b00      	cmp	r3, #0
900105e6:	d174      	bne.n	900106d2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
900105e8:	883b      	ldrh	r3, [r7, #0]
900105ea:	f8aa 0000 	strh.w	r0, [sl]
900105ee:	f8ab 3000 	strh.w	r3, [fp]
900105f2:	4648      	mov	r0, r9
900105f4:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
900105f8:	f007 fbda 	bl	90017db0 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
900105fc:	2200      	movs	r2, #0
900105fe:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
90010602:	4611      	mov	r1, r2
90010604:	4628      	mov	r0, r5
90010606:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
9001060a:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
9001060e:	f7ff fed9 	bl	900103c4 <_ZN8touchgfx8Drawable5setXYEss>
90010612:	2301      	movs	r3, #1
90010614:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
90010618:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
9001061c:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
90010620:	2b00      	cmp	r3, #0
90010622:	dd5c      	ble.n	900106de <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
90010624:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
90010628:	2b00      	cmp	r3, #0
9001062a:	dd58      	ble.n	900106de <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
9001062c:	462a      	mov	r2, r5
9001062e:	ab0a      	add	r3, sp, #40	; 0x28
90010630:	f852 0f04 	ldr.w	r0, [r2, #4]!
90010634:	6851      	ldr	r1, [r2, #4]
90010636:	c303      	stmia	r3!, {r0, r1}
90010638:	4631      	mov	r1, r6
9001063a:	a80a      	add	r0, sp, #40	; 0x28
9001063c:	f7ff fbec 	bl	9000fe18 <_ZN8touchgfx4RectaNERKS0_>
90010640:	4b38      	ldr	r3, [pc, #224]	; (90010724 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
90010642:	2100      	movs	r1, #0
90010644:	f9b3 2000 	ldrsh.w	r2, [r3]
90010648:	4b37      	ldr	r3, [pc, #220]	; (90010728 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
9001064a:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
9001064e:	aa0a      	add	r2, sp, #40	; 0x28
90010650:	f9b3 3000 	ldrsh.w	r3, [r3]
90010654:	910c      	str	r1, [sp, #48]	; 0x30
90010656:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
9001065a:	ab08      	add	r3, sp, #32
9001065c:	e892 0003 	ldmia.w	r2, {r0, r1}
90010660:	e883 0003 	stmia.w	r3, {r0, r1}
90010664:	4618      	mov	r0, r3
90010666:	a90c      	add	r1, sp, #48	; 0x30
90010668:	f7ff fbd6 	bl	9000fe18 <_ZN8touchgfx4RectaNERKS0_>
9001066c:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
9001066e:	2b00      	cmp	r3, #0
90010670:	d13c      	bne.n	900106ec <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
90010672:	2000      	movs	r0, #0
90010674:	f884 0058 	strb.w	r0, [r4, #88]	; 0x58
90010678:	2600      	movs	r6, #0
9001067a:	696b      	ldr	r3, [r5, #20]
9001067c:	a908      	add	r1, sp, #32
9001067e:	682a      	ldr	r2, [r5, #0]
90010680:	4628      	mov	r0, r5
90010682:	9305      	str	r3, [sp, #20]
90010684:	616e      	str	r6, [r5, #20]
90010686:	6892      	ldr	r2, [r2, #8]
90010688:	4790      	blx	r2
9001068a:	9b05      	ldr	r3, [sp, #20]
9001068c:	4652      	mov	r2, sl
9001068e:	4649      	mov	r1, r9
90010690:	616b      	str	r3, [r5, #20]
90010692:	4628      	mov	r0, r5
90010694:	f884 6058 	strb.w	r6, [r4, #88]	; 0x58
90010698:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
9001069c:	f7ff fe92 	bl	900103c4 <_ZN8touchgfx8Drawable5setXYEss>
900106a0:	9a01      	ldr	r2, [sp, #4]
900106a2:	4b23      	ldr	r3, [pc, #140]	; (90010730 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
900106a4:	4620      	mov	r0, r4
900106a6:	801a      	strh	r2, [r3, #0]
900106a8:	9a02      	ldr	r2, [sp, #8]
900106aa:	4b22      	ldr	r3, [pc, #136]	; (90010734 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
900106ac:	801a      	strh	r2, [r3, #0]
900106ae:	9a03      	ldr	r2, [sp, #12]
900106b0:	4b1c      	ldr	r3, [pc, #112]	; (90010724 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
900106b2:	801a      	strh	r2, [r3, #0]
900106b4:	4b1c      	ldr	r3, [pc, #112]	; (90010728 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
900106b6:	9a04      	ldr	r2, [sp, #16]
900106b8:	801a      	strh	r2, [r3, #0]
900106ba:	6823      	ldr	r3, [r4, #0]
900106bc:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
900106c0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
900106c2:	4798      	blx	r3
900106c4:	6823      	ldr	r3, [r4, #0]
900106c6:	4620      	mov	r0, r4
900106c8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900106ca:	4798      	blx	r3
900106cc:	b00f      	add	sp, #60	; 0x3c
900106ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900106d2:	883b      	ldrh	r3, [r7, #0]
900106d4:	f8ab 0000 	strh.w	r0, [fp]
900106d8:	f8aa 3000 	strh.w	r3, [sl]
900106dc:	e789      	b.n	900105f2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
900106de:	462a      	mov	r2, r5
900106e0:	ab0a      	add	r3, sp, #40	; 0x28
900106e2:	f852 0f04 	ldr.w	r0, [r2, #4]!
900106e6:	6851      	ldr	r1, [r2, #4]
900106e8:	c303      	stmia	r3!, {r0, r1}
900106ea:	e7a9      	b.n	90010640 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
900106ec:	a807      	add	r0, sp, #28
900106ee:	f007 fd63 	bl	900181b8 <_ZNK8touchgfx6Bitmap9getFormatEv>
900106f2:	4606      	mov	r6, r0
900106f4:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
900106f6:	6803      	ldr	r3, [r0, #0]
900106f8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900106fa:	4798      	blx	r3
900106fc:	4286      	cmp	r6, r0
900106fe:	d1b8      	bne.n	90010672 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
90010700:	f7ff fe6e 	bl	900103e0 <_ZN8touchgfx3HAL3lcdEv>
90010704:	6803      	ldr	r3, [r0, #0]
90010706:	4606      	mov	r6, r0
90010708:	a807      	add	r0, sp, #28
9001070a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
9001070c:	9305      	str	r3, [sp, #20]
9001070e:	f007 fd53 	bl	900181b8 <_ZNK8touchgfx6Bitmap9getFormatEv>
90010712:	9b05      	ldr	r3, [sp, #20]
90010714:	4601      	mov	r1, r0
90010716:	4630      	mov	r0, r6
90010718:	4798      	blx	r3
9001071a:	f080 0001 	eor.w	r0, r0, #1
9001071e:	b2c0      	uxtb	r0, r0
90010720:	e7a8      	b.n	90010674 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
90010722:	bf00      	nop
90010724:	24023570 	.word	0x24023570
90010728:	24023572 	.word	0x24023572
9001072c:	24023574 	.word	0x24023574
90010730:	24023576 	.word	0x24023576
90010734:	24023578 	.word	0x24023578

90010738 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
90010738:	4b07      	ldr	r3, [pc, #28]	; (90010758 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
9001073a:	b510      	push	{r4, lr}
9001073c:	781b      	ldrb	r3, [r3, #0]
9001073e:	4604      	mov	r4, r0
90010740:	b13b      	cbz	r3, 90010752 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
90010742:	6803      	ldr	r3, [r0, #0]
90010744:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90010746:	4798      	blx	r3
90010748:	6be3      	ldr	r3, [r4, #60]	; 0x3c
9001074a:	4283      	cmp	r3, r0
9001074c:	d101      	bne.n	90010752 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
9001074e:	6c20      	ldr	r0, [r4, #64]	; 0x40
90010750:	bd10      	pop	{r4, pc}
90010752:	6be0      	ldr	r0, [r4, #60]	; 0x3c
90010754:	e7fc      	b.n	90010750 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
90010756:	bf00      	nop
90010758:	2402357a 	.word	0x2402357a

9001075c <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
9001075c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90010760:	461d      	mov	r5, r3
90010762:	b08a      	sub	sp, #40	; 0x28
90010764:	f44f 6380 	mov.w	r3, #1024	; 0x400
90010768:	4690      	mov	r8, r2
9001076a:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
9001076e:	2400      	movs	r4, #0
90010770:	4607      	mov	r7, r0
90010772:	fb06 8505 	mla	r5, r6, r5, r8
90010776:	9404      	str	r4, [sp, #16]
90010778:	f88d 4020 	strb.w	r4, [sp, #32]
9001077c:	e9cd 3101 	strd	r3, r1, [sp, #4]
90010780:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
90010784:	f8ad 3018 	strh.w	r3, [sp, #24]
90010788:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
9001078c:	f8ad 301a 	strh.w	r3, [sp, #26]
90010790:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
90010794:	f8ad 301c 	strh.w	r3, [sp, #28]
90010798:	f7ff ffce 	bl	90010738 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
9001079c:	eb00 0545 	add.w	r5, r0, r5, lsl #1
900107a0:	6878      	ldr	r0, [r7, #4]
900107a2:	f8ad 601e 	strh.w	r6, [sp, #30]
900107a6:	a901      	add	r1, sp, #4
900107a8:	9505      	str	r5, [sp, #20]
900107aa:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
900107ae:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
900107b2:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
900107b6:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
900107ba:	6803      	ldr	r3, [r0, #0]
900107bc:	685b      	ldr	r3, [r3, #4]
900107be:	4798      	blx	r3
900107c0:	b00a      	add	sp, #40	; 0x28
900107c2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

900107c6 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
900107c6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900107ca:	b08b      	sub	sp, #44	; 0x2c
900107cc:	2400      	movs	r4, #0
900107ce:	4691      	mov	r9, r2
900107d0:	461d      	mov	r5, r3
900107d2:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
900107d6:	f44f 6300 	mov.w	r3, #2048	; 0x800
900107da:	4688      	mov	r8, r1
900107dc:	4607      	mov	r7, r0
900107de:	9404      	str	r4, [sp, #16]
900107e0:	fb06 9505 	mla	r5, r6, r5, r9
900107e4:	e9cd 3401 	strd	r3, r4, [sp, #4]
900107e8:	f7ff ffa6 	bl	90010738 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
900107ec:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
900107f0:	eb00 0545 	add.w	r5, r0, r5, lsl #1
900107f4:	6878      	ldr	r0, [r7, #4]
900107f6:	f8ad 3018 	strh.w	r3, [sp, #24]
900107fa:	a901      	add	r1, sp, #4
900107fc:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
90010800:	9505      	str	r5, [sp, #20]
90010802:	f8ad 301a 	strh.w	r3, [sp, #26]
90010806:	f8ad 401c 	strh.w	r4, [sp, #28]
9001080a:	f8ad 601e 	strh.w	r6, [sp, #30]
9001080e:	f8cd 8010 	str.w	r8, [sp, #16]
90010812:	f8ad 4020 	strh.w	r4, [sp, #32]
90010816:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
9001081a:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
9001081e:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
90010822:	6803      	ldr	r3, [r0, #0]
90010824:	685b      	ldr	r3, [r3, #4]
90010826:	4798      	blx	r3
90010828:	b00b      	add	sp, #44	; 0x2c
9001082a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

90010830 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
90010830:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90010834:	b08a      	sub	sp, #40	; 0x28
90010836:	4698      	mov	r8, r3
90010838:	2300      	movs	r3, #0
9001083a:	4606      	mov	r6, r0
9001083c:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
90010840:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
90010844:	2d0b      	cmp	r5, #11
90010846:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
9001084a:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
9001084e:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
90010852:	9304      	str	r3, [sp, #16]
90010854:	d137      	bne.n	900108c6 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x96>
90010856:	2380      	movs	r3, #128	; 0x80
90010858:	f88d 0020 	strb.w	r0, [sp, #32]
9001085c:	4630      	mov	r0, r6
9001085e:	9203      	str	r2, [sp, #12]
90010860:	e9cd 3101 	strd	r3, r1, [sp, #4]
90010864:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
90010868:	f8ad 3018 	strh.w	r3, [sp, #24]
9001086c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
90010870:	f8ad 301a 	strh.w	r3, [sp, #26]
90010874:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
90010878:	f8ad 301c 	strh.w	r3, [sp, #28]
9001087c:	f7ff ff5c 	bl	90010738 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90010880:	2c0b      	cmp	r4, #11
90010882:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
90010886:	f8ad 701e 	strh.w	r7, [sp, #30]
9001088a:	bf94      	ite	ls
9001088c:	4b19      	ldrls	r3, [pc, #100]	; (900108f4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
9001088e:	2100      	movhi	r1, #0
90010890:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
90010894:	bf98      	it	ls
90010896:	5d19      	ldrbls	r1, [r3, r4]
90010898:	fb02 8307 	mla	r3, r2, r7, r8
9001089c:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
900108a0:	10c9      	asrs	r1, r1, #3
900108a2:	fb01 0003 	mla	r0, r1, r3, r0
900108a6:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
900108aa:	a901      	add	r1, sp, #4
900108ac:	9005      	str	r0, [sp, #20]
900108ae:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
900108b2:	2300      	movs	r3, #0
900108b4:	6870      	ldr	r0, [r6, #4]
900108b6:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
900108ba:	6803      	ldr	r3, [r0, #0]
900108bc:	685b      	ldr	r3, [r3, #4]
900108be:	4798      	blx	r3
900108c0:	b00a      	add	sp, #40	; 0x28
900108c2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900108c6:	2d02      	cmp	r5, #2
900108c8:	d109      	bne.n	900108de <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xae>
900108ca:	28ff      	cmp	r0, #255	; 0xff
900108cc:	d105      	bne.n	900108da <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xaa>
900108ce:	f1bc 0f00 	cmp.w	ip, #0
900108d2:	bf14      	ite	ne
900108d4:	2340      	movne	r3, #64	; 0x40
900108d6:	2320      	moveq	r3, #32
900108d8:	e7be      	b.n	90010858 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
900108da:	2340      	movs	r3, #64	; 0x40
900108dc:	e7bc      	b.n	90010858 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
900108de:	28ff      	cmp	r0, #255	; 0xff
900108e0:	d105      	bne.n	900108ee <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xbe>
900108e2:	f1bc 0f00 	cmp.w	ip, #0
900108e6:	bf14      	ite	ne
900108e8:	2304      	movne	r3, #4
900108ea:	2301      	moveq	r3, #1
900108ec:	e7b4      	b.n	90010858 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
900108ee:	2304      	movs	r3, #4
900108f0:	e7b2      	b.n	90010858 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
900108f2:	bf00      	nop
900108f4:	90029e94 	.word	0x90029e94

900108f8 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
900108f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900108fc:	b08b      	sub	sp, #44	; 0x2c
900108fe:	461d      	mov	r5, r3
90010900:	2400      	movs	r4, #0
90010902:	4688      	mov	r8, r1
90010904:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
90010908:	4693      	mov	fp, r2
9001090a:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
9001090e:	4607      	mov	r7, r0
90010910:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
90010914:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
90010918:	9404      	str	r4, [sp, #16]
9001091a:	bf14      	ite	ne
9001091c:	2308      	movne	r3, #8
9001091e:	2302      	moveq	r3, #2
90010920:	fb05 b50a 	mla	r5, r5, sl, fp
90010924:	e9cd 3401 	strd	r3, r4, [sp, #4]
90010928:	f7ff ff06 	bl	90010738 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
9001092c:	2e0b      	cmp	r6, #11
9001092e:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
90010932:	a901      	add	r1, sp, #4
90010934:	bf98      	it	ls
90010936:	4b13      	ldrls	r3, [pc, #76]	; (90010984 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
90010938:	f8ad a01e 	strh.w	sl, [sp, #30]
9001093c:	bf98      	it	ls
9001093e:	5d9c      	ldrbls	r4, [r3, r6]
90010940:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
90010944:	10e4      	asrs	r4, r4, #3
90010946:	f8cd 8010 	str.w	r8, [sp, #16]
9001094a:	f8ad 3018 	strh.w	r3, [sp, #24]
9001094e:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
90010952:	fb04 0405 	mla	r4, r4, r5, r0
90010956:	6878      	ldr	r0, [r7, #4]
90010958:	f8ad 301a 	strh.w	r3, [sp, #26]
9001095c:	2300      	movs	r3, #0
9001095e:	9405      	str	r4, [sp, #20]
90010960:	f8ad 301c 	strh.w	r3, [sp, #28]
90010964:	f88d 9020 	strb.w	r9, [sp, #32]
90010968:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
9001096c:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
90010970:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
90010974:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
90010978:	6803      	ldr	r3, [r0, #0]
9001097a:	685b      	ldr	r3, [r3, #4]
9001097c:	4798      	blx	r3
9001097e:	b00b      	add	sp, #44	; 0x2c
90010980:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90010984:	90029e94 	.word	0x90029e94

90010988 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
90010988:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001098c:	461e      	mov	r6, r3
9001098e:	4b0a      	ldr	r3, [pc, #40]	; (900109b8 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
90010990:	460f      	mov	r7, r1
90010992:	4690      	mov	r8, r2
90010994:	881d      	ldrh	r5, [r3, #0]
90010996:	f7ff fd23 	bl	900103e0 <_ZN8touchgfx3HAL3lcdEv>
9001099a:	6803      	ldr	r3, [r0, #0]
9001099c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001099e:	4798      	blx	r3
900109a0:	280b      	cmp	r0, #11
900109a2:	bf96      	itet	ls
900109a4:	4b05      	ldrls	r3, [pc, #20]	; (900109bc <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
900109a6:	2400      	movhi	r4, #0
900109a8:	5c1c      	ldrbls	r4, [r3, r0]
900109aa:	fb08 7005 	mla	r0, r8, r5, r7
900109ae:	10e4      	asrs	r4, r4, #3
900109b0:	fb04 6000 	mla	r0, r4, r0, r6
900109b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900109b8:	24023576 	.word	0x24023576
900109bc:	90029e94 	.word	0x90029e94

900109c0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
900109c0:	b5f0      	push	{r4, r5, r6, r7, lr}
900109c2:	b08b      	sub	sp, #44	; 0x2c
900109c4:	461f      	mov	r7, r3
900109c6:	4604      	mov	r4, r0
900109c8:	4616      	mov	r6, r2
900109ca:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
900109ce:	2500      	movs	r5, #0
900109d0:	e9cd 3101 	strd	r3, r1, [sp, #4]
900109d4:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
900109d8:	9504      	str	r5, [sp, #16]
900109da:	f8ad 3018 	strh.w	r3, [sp, #24]
900109de:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
900109e2:	f8ad 301a 	strh.w	r3, [sp, #26]
900109e6:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
900109ea:	f8ad 301c 	strh.w	r3, [sp, #28]
900109ee:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
900109f2:	f88d 3020 	strb.w	r3, [sp, #32]
900109f6:	f7ff fe9f 	bl	90010738 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
900109fa:	463a      	mov	r2, r7
900109fc:	4631      	mov	r1, r6
900109fe:	4603      	mov	r3, r0
90010a00:	4620      	mov	r0, r4
90010a02:	f7ff ffc1 	bl	90010988 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
90010a06:	4b0e      	ldr	r3, [pc, #56]	; (90010a40 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
90010a08:	9005      	str	r0, [sp, #20]
90010a0a:	881b      	ldrh	r3, [r3, #0]
90010a0c:	f8ad 301e 	strh.w	r3, [sp, #30]
90010a10:	f7ff fce6 	bl	900103e0 <_ZN8touchgfx3HAL3lcdEv>
90010a14:	6803      	ldr	r3, [r0, #0]
90010a16:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90010a18:	4798      	blx	r3
90010a1a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
90010a1c:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
90010a20:	a901      	add	r1, sp, #4
90010a22:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
90010a26:	9304      	str	r3, [sp, #16]
90010a28:	6860      	ldr	r0, [r4, #4]
90010a2a:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
90010a2e:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
90010a32:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
90010a36:	6803      	ldr	r3, [r0, #0]
90010a38:	685b      	ldr	r3, [r3, #4]
90010a3a:	4798      	blx	r3
90010a3c:	b00b      	add	sp, #44	; 0x2c
90010a3e:	bdf0      	pop	{r4, r5, r6, r7, pc}
90010a40:	24023576 	.word	0x24023576

90010a44 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
90010a44:	b5f0      	push	{r4, r5, r6, r7, lr}
90010a46:	b08d      	sub	sp, #52	; 0x34
90010a48:	2501      	movs	r5, #1
90010a4a:	4604      	mov	r4, r0
90010a4c:	466b      	mov	r3, sp
90010a4e:	9503      	str	r5, [sp, #12]
90010a50:	e883 0006 	stmia.w	r3, {r1, r2}
90010a54:	2300      	movs	r3, #0
90010a56:	f8bd 6000 	ldrh.w	r6, [sp]
90010a5a:	f8bd 7002 	ldrh.w	r7, [sp, #2]
90010a5e:	9306      	str	r3, [sp, #24]
90010a60:	6803      	ldr	r3, [r0, #0]
90010a62:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90010a64:	4798      	blx	r3
90010a66:	463a      	mov	r2, r7
90010a68:	4631      	mov	r1, r6
90010a6a:	4603      	mov	r3, r0
90010a6c:	4620      	mov	r0, r4
90010a6e:	f7ff ff8b 	bl	90010988 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
90010a72:	6c63      	ldr	r3, [r4, #68]	; 0x44
90010a74:	9004      	str	r0, [sp, #16]
90010a76:	9307      	str	r3, [sp, #28]
90010a78:	f8bd 3004 	ldrh.w	r3, [sp, #4]
90010a7c:	f8ad 3020 	strh.w	r3, [sp, #32]
90010a80:	f8bd 3006 	ldrh.w	r3, [sp, #6]
90010a84:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
90010a88:	4b0e      	ldr	r3, [pc, #56]	; (90010ac4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
90010a8a:	881b      	ldrh	r3, [r3, #0]
90010a8c:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
90010a90:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
90010a94:	f7ff fca4 	bl	900103e0 <_ZN8touchgfx3HAL3lcdEv>
90010a98:	6803      	ldr	r3, [r0, #0]
90010a9a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90010a9c:	4798      	blx	r3
90010a9e:	23ff      	movs	r3, #255	; 0xff
90010aa0:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
90010aa4:	a903      	add	r1, sp, #12
90010aa6:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
90010aaa:	6860      	ldr	r0, [r4, #4]
90010aac:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
90010ab0:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
90010ab4:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
90010ab8:	6803      	ldr	r3, [r0, #0]
90010aba:	685b      	ldr	r3, [r3, #4]
90010abc:	4798      	blx	r3
90010abe:	6c60      	ldr	r0, [r4, #68]	; 0x44
90010ac0:	b00d      	add	sp, #52	; 0x34
90010ac2:	bdf0      	pop	{r4, r5, r6, r7, pc}
90010ac4:	24023576 	.word	0x24023576

90010ac8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
90010ac8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90010acc:	b08c      	sub	sp, #48	; 0x30
90010ace:	461e      	mov	r6, r3
90010ad0:	2300      	movs	r3, #0
90010ad2:	4604      	mov	r4, r0
90010ad4:	466d      	mov	r5, sp
90010ad6:	9306      	str	r3, [sp, #24]
90010ad8:	6803      	ldr	r3, [r0, #0]
90010ada:	e885 0006 	stmia.w	r5, {r1, r2}
90010ade:	2501      	movs	r5, #1
90010ae0:	f8bd 7000 	ldrh.w	r7, [sp]
90010ae4:	f8bd 8002 	ldrh.w	r8, [sp, #2]
90010ae8:	9503      	str	r5, [sp, #12]
90010aea:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90010aec:	4798      	blx	r3
90010aee:	4642      	mov	r2, r8
90010af0:	4639      	mov	r1, r7
90010af2:	4603      	mov	r3, r0
90010af4:	4620      	mov	r0, r4
90010af6:	f7ff ff47 	bl	90010988 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
90010afa:	f8bd 3004 	ldrh.w	r3, [sp, #4]
90010afe:	9004      	str	r0, [sp, #16]
90010b00:	f8ad 3020 	strh.w	r3, [sp, #32]
90010b04:	f8bd 3006 	ldrh.w	r3, [sp, #6]
90010b08:	9607      	str	r6, [sp, #28]
90010b0a:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
90010b0e:	4b10      	ldr	r3, [pc, #64]	; (90010b50 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
90010b10:	881b      	ldrh	r3, [r3, #0]
90010b12:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
90010b16:	9b12      	ldr	r3, [sp, #72]	; 0x48
90010b18:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
90010b1c:	f7ff fc60 	bl	900103e0 <_ZN8touchgfx3HAL3lcdEv>
90010b20:	6803      	ldr	r3, [r0, #0]
90010b22:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90010b24:	4798      	blx	r3
90010b26:	23ff      	movs	r3, #255	; 0xff
90010b28:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
90010b2c:	a903      	add	r1, sp, #12
90010b2e:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
90010b32:	6860      	ldr	r0, [r4, #4]
90010b34:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
90010b38:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
90010b3c:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
90010b40:	6803      	ldr	r3, [r0, #0]
90010b42:	685b      	ldr	r3, [r3, #4]
90010b44:	4798      	blx	r3
90010b46:	4630      	mov	r0, r6
90010b48:	b00c      	add	sp, #48	; 0x30
90010b4a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90010b4e:	bf00      	nop
90010b50:	24023576 	.word	0x24023576

90010b54 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
90010b54:	b5f0      	push	{r4, r5, r6, r7, lr}
90010b56:	b085      	sub	sp, #20
90010b58:	4605      	mov	r5, r0
90010b5a:	ac02      	add	r4, sp, #8
90010b5c:	e884 0006 	stmia.w	r4, {r1, r2}
90010b60:	f8bd 6008 	ldrh.w	r6, [sp, #8]
90010b64:	f8bd 700a 	ldrh.w	r7, [sp, #10]
90010b68:	f7ff fde6 	bl	90010738 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90010b6c:	4631      	mov	r1, r6
90010b6e:	4603      	mov	r3, r0
90010b70:	463a      	mov	r2, r7
90010b72:	4628      	mov	r0, r5
90010b74:	f7ff ff08 	bl	90010988 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
90010b78:	4a05      	ldr	r2, [pc, #20]	; (90010b90 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
90010b7a:	682b      	ldr	r3, [r5, #0]
90010b7c:	8812      	ldrh	r2, [r2, #0]
90010b7e:	9200      	str	r2, [sp, #0]
90010b80:	6ede      	ldr	r6, [r3, #108]	; 0x6c
90010b82:	4603      	mov	r3, r0
90010b84:	4628      	mov	r0, r5
90010b86:	e894 0006 	ldmia.w	r4, {r1, r2}
90010b8a:	47b0      	blx	r6
90010b8c:	b005      	add	sp, #20
90010b8e:	bdf0      	pop	{r4, r5, r6, r7, pc}
90010b90:	24023576 	.word	0x24023576

90010b94 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
90010b94:	b570      	push	{r4, r5, r6, lr}
90010b96:	f890 306e 	ldrb.w	r3, [r0, #110]	; 0x6e
90010b9a:	4604      	mov	r4, r0
90010b9c:	b19b      	cbz	r3, 90010bc6 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
90010b9e:	2002      	movs	r0, #2
90010ba0:	f7ef fd40 	bl	90000624 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
90010ba4:	2300      	movs	r3, #0
90010ba6:	4620      	mov	r0, r4
90010ba8:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
90010bac:	f884 306d 	strb.w	r3, [r4, #109]	; 0x6d
90010bb0:	6823      	ldr	r3, [r4, #0]
90010bb2:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
90010bb6:	f7ff fdbf 	bl	90010738 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90010bba:	4601      	mov	r1, r0
90010bbc:	4620      	mov	r0, r4
90010bbe:	462b      	mov	r3, r5
90010bc0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90010bc4:	4718      	bx	r3
90010bc6:	bd70      	pop	{r4, r5, r6, pc}

90010bc8 <_ZN8touchgfx3HAL12setMCUActiveEb>:
90010bc8:	b570      	push	{r4, r5, r6, lr}
90010bca:	4605      	mov	r5, r0
90010bcc:	460c      	mov	r4, r1
90010bce:	2003      	movs	r0, #3
90010bd0:	b149      	cbz	r1, 90010be6 <_ZN8touchgfx3HAL12setMCUActiveEb+0x1e>
90010bd2:	f7ef fcbf 	bl	90000554 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
90010bd6:	6928      	ldr	r0, [r5, #16]
90010bd8:	b168      	cbz	r0, 90010bf6 <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
90010bda:	6803      	ldr	r3, [r0, #0]
90010bdc:	2101      	movs	r1, #1
90010bde:	695b      	ldr	r3, [r3, #20]
90010be0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90010be4:	4718      	bx	r3
90010be6:	f7ef fce9 	bl	900005bc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
90010bea:	6928      	ldr	r0, [r5, #16]
90010bec:	b118      	cbz	r0, 90010bf6 <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
90010bee:	6803      	ldr	r3, [r0, #0]
90010bf0:	4621      	mov	r1, r4
90010bf2:	695b      	ldr	r3, [r3, #20]
90010bf4:	e7f4      	b.n	90010be0 <_ZN8touchgfx3HAL12setMCUActiveEb+0x18>
90010bf6:	bd70      	pop	{r4, r5, r6, pc}

90010bf8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
90010bf8:	b538      	push	{r3, r4, r5, lr}
90010bfa:	f890 307b 	ldrb.w	r3, [r0, #123]	; 0x7b
90010bfe:	4604      	mov	r4, r0
90010c00:	460d      	mov	r5, r1
90010c02:	428b      	cmp	r3, r1
90010c04:	d006      	beq.n	90010c14 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
90010c06:	6803      	ldr	r3, [r0, #0]
90010c08:	b929      	cbnz	r1, 90010c16 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
90010c0a:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
90010c0e:	4798      	blx	r3
90010c10:	f884 507b 	strb.w	r5, [r4, #123]	; 0x7b
90010c14:	bd38      	pop	{r3, r4, r5, pc}
90010c16:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
90010c1a:	e7f8      	b.n	90010c0e <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

90010c1c <_ZN8touchgfx3HAL15lockFrameBufferEv>:
90010c1c:	4b0d      	ldr	r3, [pc, #52]	; (90010c54 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
90010c1e:	b510      	push	{r4, lr}
90010c20:	781b      	ldrb	r3, [r3, #0]
90010c22:	4604      	mov	r4, r0
90010c24:	b95b      	cbnz	r3, 90010c3e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
90010c26:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
90010c2a:	2b02      	cmp	r3, #2
90010c2c:	d007      	beq.n	90010c3e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
90010c2e:	6840      	ldr	r0, [r0, #4]
90010c30:	f000 f91a 	bl	90010e68 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
90010c34:	b118      	cbz	r0, 90010c3e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
90010c36:	6862      	ldr	r2, [r4, #4]
90010c38:	7a53      	ldrb	r3, [r2, #9]
90010c3a:	2b00      	cmp	r3, #0
90010c3c:	d0fc      	beq.n	90010c38 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
90010c3e:	f7f0 fed5 	bl	900019ec <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
90010c42:	4620      	mov	r0, r4
90010c44:	2100      	movs	r1, #0
90010c46:	f7ff ffd7 	bl	90010bf8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
90010c4a:	4620      	mov	r0, r4
90010c4c:	f7ff fd74 	bl	90010738 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90010c50:	bd10      	pop	{r4, pc}
90010c52:	bf00      	nop
90010c54:	2402357a 	.word	0x2402357a

90010c58 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
90010c58:	b570      	push	{r4, r5, r6, lr}
90010c5a:	4604      	mov	r4, r0
90010c5c:	6803      	ldr	r3, [r0, #0]
90010c5e:	b919      	cbnz	r1, 90010c68 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
90010c60:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90010c62:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90010c66:	4718      	bx	r3
90010c68:	2200      	movs	r2, #0
90010c6a:	f890 607b 	ldrb.w	r6, [r0, #123]	; 0x7b
90010c6e:	f880 207b 	strb.w	r2, [r0, #123]	; 0x7b
90010c72:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90010c74:	4798      	blx	r3
90010c76:	6863      	ldr	r3, [r4, #4]
90010c78:	2101      	movs	r1, #1
90010c7a:	4605      	mov	r5, r0
90010c7c:	4620      	mov	r0, r4
90010c7e:	7299      	strb	r1, [r3, #10]
90010c80:	f884 607b 	strb.w	r6, [r4, #123]	; 0x7b
90010c84:	f7ff ffb8 	bl	90010bf8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
90010c88:	4628      	mov	r0, r5
90010c8a:	bd70      	pop	{r4, r5, r6, pc}

90010c8c <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
90010c8c:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
90010c90:	1a13      	subs	r3, r2, r0
90010c92:	4258      	negs	r0, r3
90010c94:	4158      	adcs	r0, r3
90010c96:	4770      	bx	lr

90010c98 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
90010c98:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
90010c9c:	1a9b      	subs	r3, r3, r2
90010c9e:	2b00      	cmp	r3, #0
90010ca0:	bfdc      	itt	le
90010ca2:	6882      	ldrle	r2, [r0, #8]
90010ca4:	189b      	addle	r3, r3, r2
90010ca6:	2b01      	cmp	r3, #1
90010ca8:	bfcc      	ite	gt
90010caa:	2000      	movgt	r0, #0
90010cac:	2001      	movle	r0, #1
90010cae:	4770      	bx	lr

90010cb0 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
90010cb0:	6902      	ldr	r2, [r0, #16]
90010cb2:	6843      	ldr	r3, [r0, #4]
90010cb4:	2024      	movs	r0, #36	; 0x24
90010cb6:	fb00 3002 	mla	r0, r0, r2, r3
90010cba:	4770      	bx	lr

90010cbc <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
90010cbc:	6803      	ldr	r3, [r0, #0]
90010cbe:	691b      	ldr	r3, [r3, #16]
90010cc0:	4718      	bx	r3

90010cc2 <_ZN8touchgfx13DMA_Interface7executeEv>:
90010cc2:	2301      	movs	r3, #1
90010cc4:	b570      	push	{r4, r5, r6, lr}
90010cc6:	7203      	strb	r3, [r0, #8]
90010cc8:	4604      	mov	r4, r0
90010cca:	6840      	ldr	r0, [r0, #4]
90010ccc:	6803      	ldr	r3, [r0, #0]
90010cce:	699b      	ldr	r3, [r3, #24]
90010cd0:	4798      	blx	r3
90010cd2:	6803      	ldr	r3, [r0, #0]
90010cd4:	4605      	mov	r5, r0
90010cd6:	2b40      	cmp	r3, #64	; 0x40
90010cd8:	d00c      	beq.n	90010cf4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90010cda:	d810      	bhi.n	90010cfe <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
90010cdc:	2b04      	cmp	r3, #4
90010cde:	d01d      	beq.n	90010d1c <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
90010ce0:	d804      	bhi.n	90010cec <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
90010ce2:	2b01      	cmp	r3, #1
90010ce4:	d006      	beq.n	90010cf4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90010ce6:	2b02      	cmp	r3, #2
90010ce8:	d02c      	beq.n	90010d44 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
90010cea:	bd70      	pop	{r4, r5, r6, pc}
90010cec:	2b08      	cmp	r3, #8
90010cee:	d01d      	beq.n	90010d2c <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
90010cf0:	2b20      	cmp	r3, #32
90010cf2:	d1fa      	bne.n	90010cea <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
90010cf4:	6823      	ldr	r3, [r4, #0]
90010cf6:	4620      	mov	r0, r4
90010cf8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90010cfa:	4798      	blx	r3
90010cfc:	e013      	b.n	90010d26 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
90010cfe:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
90010d02:	d0f7      	beq.n	90010cf4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90010d04:	d804      	bhi.n	90010d10 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
90010d06:	2b80      	cmp	r3, #128	; 0x80
90010d08:	d0f4      	beq.n	90010cf4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90010d0a:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
90010d0e:	e7f0      	b.n	90010cf2 <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
90010d10:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
90010d14:	d0ee      	beq.n	90010cf4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90010d16:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
90010d1a:	e7e5      	b.n	90010ce8 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
90010d1c:	6823      	ldr	r3, [r4, #0]
90010d1e:	7f01      	ldrb	r1, [r0, #28]
90010d20:	4620      	mov	r0, r4
90010d22:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90010d24:	4798      	blx	r3
90010d26:	6823      	ldr	r3, [r4, #0]
90010d28:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90010d2a:	e006      	b.n	90010d3a <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
90010d2c:	6823      	ldr	r3, [r4, #0]
90010d2e:	7f01      	ldrb	r1, [r0, #28]
90010d30:	4620      	mov	r0, r4
90010d32:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90010d34:	4798      	blx	r3
90010d36:	6823      	ldr	r3, [r4, #0]
90010d38:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90010d3a:	4629      	mov	r1, r5
90010d3c:	4620      	mov	r0, r4
90010d3e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90010d42:	4718      	bx	r3
90010d44:	6823      	ldr	r3, [r4, #0]
90010d46:	4620      	mov	r0, r4
90010d48:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90010d4a:	4798      	blx	r3
90010d4c:	e7f3      	b.n	90010d36 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

90010d4e <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
90010d4e:	4770      	bx	lr

90010d50 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
90010d50:	4770      	bx	lr

90010d52 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
90010d52:	4770      	bx	lr

90010d54 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
90010d54:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
90010d58:	b510      	push	{r4, lr}
90010d5a:	1ad2      	subs	r2, r2, r3
90010d5c:	2a00      	cmp	r2, #0
90010d5e:	bfdc      	itt	le
90010d60:	6884      	ldrle	r4, [r0, #8]
90010d62:	1912      	addle	r2, r2, r4
90010d64:	2a01      	cmp	r2, #1
90010d66:	dd16      	ble.n	90010d96 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
90010d68:	6842      	ldr	r2, [r0, #4]
90010d6a:	2424      	movs	r4, #36	; 0x24
90010d6c:	fb04 2303 	mla	r3, r4, r3, r2
90010d70:	f101 0220 	add.w	r2, r1, #32
90010d74:	f851 4b04 	ldr.w	r4, [r1], #4
90010d78:	4291      	cmp	r1, r2
90010d7a:	f843 4b04 	str.w	r4, [r3], #4
90010d7e:	d1f9      	bne.n	90010d74 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
90010d80:	780a      	ldrb	r2, [r1, #0]
90010d82:	701a      	strb	r2, [r3, #0]
90010d84:	68c3      	ldr	r3, [r0, #12]
90010d86:	6882      	ldr	r2, [r0, #8]
90010d88:	f3bf 8f5b 	dmb	ish
90010d8c:	3301      	adds	r3, #1
90010d8e:	429a      	cmp	r2, r3
90010d90:	bfd8      	it	le
90010d92:	1a9b      	suble	r3, r3, r2
90010d94:	60c3      	str	r3, [r0, #12]
90010d96:	bd10      	pop	{r4, pc}

90010d98 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
90010d98:	6903      	ldr	r3, [r0, #16]
90010d9a:	6882      	ldr	r2, [r0, #8]
90010d9c:	f3bf 8f5b 	dmb	ish
90010da0:	3301      	adds	r3, #1
90010da2:	429a      	cmp	r2, r3
90010da4:	bfd8      	it	le
90010da6:	1a9b      	suble	r3, r3, r2
90010da8:	6103      	str	r3, [r0, #16]
90010daa:	4770      	bx	lr

90010dac <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
90010dac:	b570      	push	{r4, r5, r6, lr}
90010dae:	4604      	mov	r4, r0
90010db0:	460e      	mov	r6, r1
90010db2:	6860      	ldr	r0, [r4, #4]
90010db4:	6803      	ldr	r3, [r0, #0]
90010db6:	685b      	ldr	r3, [r3, #4]
90010db8:	4798      	blx	r3
90010dba:	2800      	cmp	r0, #0
90010dbc:	d1f9      	bne.n	90010db2 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
90010dbe:	4d0d      	ldr	r5, [pc, #52]	; (90010df4 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
90010dc0:	6828      	ldr	r0, [r5, #0]
90010dc2:	6803      	ldr	r3, [r0, #0]
90010dc4:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
90010dc6:	4798      	blx	r3
90010dc8:	f7f0 fe1e 	bl	90001a08 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
90010dcc:	6828      	ldr	r0, [r5, #0]
90010dce:	2101      	movs	r1, #1
90010dd0:	f7ff ff12 	bl	90010bf8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
90010dd4:	6860      	ldr	r0, [r4, #4]
90010dd6:	4631      	mov	r1, r6
90010dd8:	6803      	ldr	r3, [r0, #0]
90010dda:	689b      	ldr	r3, [r3, #8]
90010ddc:	4798      	blx	r3
90010dde:	6823      	ldr	r3, [r4, #0]
90010de0:	4620      	mov	r0, r4
90010de2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90010de4:	4798      	blx	r3
90010de6:	6828      	ldr	r0, [r5, #0]
90010de8:	6803      	ldr	r3, [r0, #0]
90010dea:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90010dee:	6f9b      	ldr	r3, [r3, #120]	; 0x78
90010df0:	4718      	bx	r3
90010df2:	bf00      	nop
90010df4:	2402357c 	.word	0x2402357c

90010df8 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
90010df8:	b508      	push	{r3, lr}
90010dfa:	f7f0 fdf7 	bl	900019ec <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
90010dfe:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
90010e02:	f7f0 bdfb 	b.w	900019fc <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

90010e06 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
90010e06:	b510      	push	{r4, lr}
90010e08:	4604      	mov	r4, r0
90010e0a:	2114      	movs	r1, #20
90010e0c:	f015 f871 	bl	90025ef2 <_ZdlPvj>
90010e10:	4620      	mov	r0, r4
90010e12:	bd10      	pop	{r4, pc}

90010e14 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
90010e14:	b570      	push	{r4, r5, r6, lr}
90010e16:	4604      	mov	r4, r0
90010e18:	6840      	ldr	r0, [r0, #4]
90010e1a:	6803      	ldr	r3, [r0, #0]
90010e1c:	681b      	ldr	r3, [r3, #0]
90010e1e:	4798      	blx	r3
90010e20:	4605      	mov	r5, r0
90010e22:	b930      	cbnz	r0, 90010e32 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
90010e24:	7a23      	ldrb	r3, [r4, #8]
90010e26:	b123      	cbz	r3, 90010e32 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
90010e28:	6860      	ldr	r0, [r4, #4]
90010e2a:	6803      	ldr	r3, [r0, #0]
90010e2c:	695b      	ldr	r3, [r3, #20]
90010e2e:	4798      	blx	r3
90010e30:	7225      	strb	r5, [r4, #8]
90010e32:	6860      	ldr	r0, [r4, #4]
90010e34:	6803      	ldr	r3, [r0, #0]
90010e36:	681b      	ldr	r3, [r3, #0]
90010e38:	4798      	blx	r3
90010e3a:	b928      	cbnz	r0, 90010e48 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
90010e3c:	6823      	ldr	r3, [r4, #0]
90010e3e:	4620      	mov	r0, r4
90010e40:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90010e42:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90010e46:	4718      	bx	r3
90010e48:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90010e4c:	f7f0 bde4 	b.w	90001a18 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

90010e50 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
90010e50:	b510      	push	{r4, lr}
90010e52:	6082      	str	r2, [r0, #8]
90010e54:	2200      	movs	r2, #0
90010e56:	4c03      	ldr	r4, [pc, #12]	; (90010e64 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
90010e58:	e9c0 2203 	strd	r2, r2, [r0, #12]
90010e5c:	e9c0 4100 	strd	r4, r1, [r0]
90010e60:	bd10      	pop	{r4, pc}
90010e62:	bf00      	nop
90010e64:	90029ea8 	.word	0x90029ea8

90010e68 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
90010e68:	6840      	ldr	r0, [r0, #4]
90010e6a:	6803      	ldr	r3, [r0, #0]
90010e6c:	681b      	ldr	r3, [r3, #0]
90010e6e:	4718      	bx	r3

90010e70 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
90010e70:	094a      	lsrs	r2, r1, #5
90010e72:	4b06      	ldr	r3, [pc, #24]	; (90010e8c <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
90010e74:	60c1      	str	r1, [r0, #12]
90010e76:	ea03 2311 	and.w	r3, r3, r1, lsr #8
90010e7a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90010e7e:	f3c1 01c4 	ubfx	r1, r1, #3, #5
90010e82:	4313      	orrs	r3, r2
90010e84:	4319      	orrs	r1, r3
90010e86:	8201      	strh	r1, [r0, #16]
90010e88:	4770      	bx	lr
90010e8a:	bf00      	nop
90010e8c:	fffff800 	.word	0xfffff800

90010e90 <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
90010e90:	f1a0 0008 	sub.w	r0, r0, #8
90010e94:	e7ec      	b.n	90010e70 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
90010e96:	bf00      	nop

90010e98 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
90010e98:	b508      	push	{r3, lr}
90010e9a:	4b05      	ldr	r3, [pc, #20]	; (90010eb0 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
90010e9c:	6818      	ldr	r0, [r3, #0]
90010e9e:	6803      	ldr	r3, [r0, #0]
90010ea0:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
90010ea4:	4798      	blx	r3
90010ea6:	1e43      	subs	r3, r0, #1
90010ea8:	4258      	negs	r0, r3
90010eaa:	4158      	adcs	r0, r3
90010eac:	bd08      	pop	{r3, pc}
90010eae:	bf00      	nop
90010eb0:	2402357c 	.word	0x2402357c

90010eb4 <_ZN8touchgfx13PainterRGB565D1Ev>:
90010eb4:	4770      	bx	lr

90010eb6 <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
90010eb6:	3808      	subs	r0, #8
90010eb8:	4770      	bx	lr

90010eba <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
90010eba:	b430      	push	{r4, r5}
90010ebc:	eb01 0442 	add.w	r4, r1, r2, lsl #1
90010ec0:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
90010ec4:	8a02      	ldrh	r2, [r0, #16]
90010ec6:	f89d 3010 	ldrb.w	r3, [sp, #16]
90010eca:	4629      	mov	r1, r5
90010ecc:	9202      	str	r2, [sp, #8]
90010ece:	68c2      	ldr	r2, [r0, #12]
90010ed0:	4620      	mov	r0, r4
90010ed2:	bc30      	pop	{r4, r5}
90010ed4:	f7f1 b878 	b.w	90001fc8 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

90010ed8 <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
90010ed8:	f7f1 b86c 	b.w	90001fb4 <_ZN8touchgfx5paint8tearDownEv>

90010edc <_ZN8touchgfx13PainterRGB565D0Ev>:
90010edc:	b510      	push	{r4, lr}
90010ede:	4604      	mov	r4, r0
90010ee0:	2114      	movs	r1, #20
90010ee2:	f015 f806 	bl	90025ef2 <_ZdlPvj>
90010ee6:	4620      	mov	r0, r4
90010ee8:	bd10      	pop	{r4, pc}

90010eea <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
90010eea:	f1a0 0008 	sub.w	r0, r0, #8
90010eee:	e7f5      	b.n	90010edc <_ZN8touchgfx13PainterRGB565D0Ev>

90010ef0 <_ZNK8touchgfx13AbstractShape14getMinimalRectEv>:
90010ef0:	f101 0344 	add.w	r3, r1, #68	; 0x44
90010ef4:	4602      	mov	r2, r0
90010ef6:	cb03      	ldmia	r3!, {r0, r1}
90010ef8:	6010      	str	r0, [r2, #0]
90010efa:	4610      	mov	r0, r2
90010efc:	6051      	str	r1, [r2, #4]
90010efe:	4770      	bx	lr

90010f00 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
90010f00:	b507      	push	{r0, r1, r2, lr}
90010f02:	f44f 4200 	mov.w	r2, #32768	; 0x8000
90010f06:	ab01      	add	r3, sp, #4
90010f08:	6809      	ldr	r1, [r1, #0]
90010f0a:	6800      	ldr	r0, [r0, #0]
90010f0c:	f005 f8ea 	bl	900160e4 <_ZN8touchgfx6muldivElllRl>
90010f10:	b003      	add	sp, #12
90010f12:	f85d fb04 	ldr.w	pc, [sp], #4
	...

90010f18 <_ZN8touchgfx7CWRUtil4sineEi>:
90010f18:	f44f 73b4 	mov.w	r3, #360	; 0x168
90010f1c:	fb90 f2f3 	sdiv	r2, r0, r3
90010f20:	fb02 0013 	mls	r0, r2, r3, r0
90010f24:	2800      	cmp	r0, #0
90010f26:	bfb8      	it	lt
90010f28:	18c0      	addlt	r0, r0, r3
90010f2a:	4b0a      	ldr	r3, [pc, #40]	; (90010f54 <_ZN8touchgfx7CWRUtil4sineEi+0x3c>)
90010f2c:	285a      	cmp	r0, #90	; 0x5a
90010f2e:	dc02      	bgt.n	90010f36 <_ZN8touchgfx7CWRUtil4sineEi+0x1e>
90010f30:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
90010f34:	4770      	bx	lr
90010f36:	28b4      	cmp	r0, #180	; 0xb4
90010f38:	dc02      	bgt.n	90010f40 <_ZN8touchgfx7CWRUtil4sineEi+0x28>
90010f3a:	f1c0 00b4 	rsb	r0, r0, #180	; 0xb4
90010f3e:	e7f7      	b.n	90010f30 <_ZN8touchgfx7CWRUtil4sineEi+0x18>
90010f40:	f5b0 7f87 	cmp.w	r0, #270	; 0x10e
90010f44:	bfd4      	ite	le
90010f46:	38b4      	suble	r0, #180	; 0xb4
90010f48:	f5c0 70b4 	rsbgt	r0, r0, #360	; 0x168
90010f4c:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
90010f50:	4240      	negs	r0, r0
90010f52:	4770      	bx	lr
90010f54:	90029efc 	.word	0x90029efc

90010f58 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>:
90010f58:	f44f 5334 	mov.w	r3, #11520	; 0x2d00
90010f5c:	fb90 f2f3 	sdiv	r2, r0, r3
90010f60:	b573      	push	{r0, r1, r4, r5, r6, lr}
90010f62:	fb02 0013 	mls	r0, r2, r3, r0
90010f66:	2800      	cmp	r0, #0
90010f68:	bfb8      	it	lt
90010f6a:	18c0      	addlt	r0, r0, r3
90010f6c:	1144      	asrs	r4, r0, #5
90010f6e:	f000 061f 	and.w	r6, r0, #31
90010f72:	4620      	mov	r0, r4
90010f74:	f7ff ffd0 	bl	90010f18 <_ZN8touchgfx7CWRUtil4sineEi>
90010f78:	4605      	mov	r5, r0
90010f7a:	b90e      	cbnz	r6, 90010f80 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x28>
90010f7c:	b002      	add	sp, #8
90010f7e:	bd70      	pop	{r4, r5, r6, pc}
90010f80:	1c60      	adds	r0, r4, #1
90010f82:	f7ff ffc9 	bl	90010f18 <_ZN8touchgfx7CWRUtil4sineEi>
90010f86:	ab01      	add	r3, sp, #4
90010f88:	2220      	movs	r2, #32
90010f8a:	4631      	mov	r1, r6
90010f8c:	1b40      	subs	r0, r0, r5
90010f8e:	f005 f8a9 	bl	900160e4 <_ZN8touchgfx6muldivElllRl>
90010f92:	4428      	add	r0, r5
90010f94:	e7f2      	b.n	90010f7c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x24>

90010f96 <_ZN8touchgfx7CWRUtil5mulQ5ENS0_2Q5ENS0_3Q10E>:
90010f96:	b507      	push	{r0, r1, r2, lr}
90010f98:	f44f 6280 	mov.w	r2, #1024	; 0x400
90010f9c:	ab01      	add	r3, sp, #4
90010f9e:	0140      	lsls	r0, r0, #5
90010fa0:	f005 f8a0 	bl	900160e4 <_ZN8touchgfx6muldivElllRl>
90010fa4:	2320      	movs	r3, #32
90010fa6:	fb90 f0f3 	sdiv	r0, r0, r3
90010faa:	b003      	add	sp, #12
90010fac:	f85d fb04 	ldr.w	pc, [sp], #4

90010fb0 <_ZN8touchgfx13AbstractShapeC1Ev>:
90010fb0:	b510      	push	{r4, lr}
90010fb2:	4604      	mov	r4, r0
90010fb4:	f000 f9a0 	bl	900112f8 <_ZN8touchgfx12CanvasWidgetC1Ev>
90010fb8:	4b08      	ldr	r3, [pc, #32]	; (90010fdc <_ZN8touchgfx13AbstractShapeC1Ev+0x2c>)
90010fba:	f44f 6280 	mov.w	r2, #1024	; 0x400
90010fbe:	4620      	mov	r0, r4
90010fc0:	6023      	str	r3, [r4, #0]
90010fc2:	2300      	movs	r3, #0
90010fc4:	e9c4 220f 	strd	r2, r2, [r4, #60]	; 0x3c
90010fc8:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
90010fcc:	63a3      	str	r3, [r4, #56]	; 0x38
90010fce:	60a3      	str	r3, [r4, #8]
90010fd0:	e9c4 330c 	strd	r3, r3, [r4, #48]	; 0x30
90010fd4:	e9c4 3311 	strd	r3, r3, [r4, #68]	; 0x44
90010fd8:	bd10      	pop	{r4, pc}
90010fda:	bf00      	nop
90010fdc:	90029fbc 	.word	0x90029fbc

90010fe0 <_ZN8touchgfx13AbstractShape24updateAbstractShapeCacheEv>:
90010fe0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90010fe4:	6803      	ldr	r3, [r0, #0]
90010fe6:	b087      	sub	sp, #28
90010fe8:	4604      	mov	r4, r0
90010fea:	2500      	movs	r5, #0
90010fec:	6f1b      	ldr	r3, [r3, #112]	; 0x70
90010fee:	4798      	blx	r3
90010ff0:	9000      	str	r0, [sp, #0]
90010ff2:	6ba0      	ldr	r0, [r4, #56]	; 0x38
90010ff4:	462e      	mov	r6, r5
90010ff6:	46a8      	mov	r8, r5
90010ff8:	462f      	mov	r7, r5
90010ffa:	f5c0 6034 	rsb	r0, r0, #2880	; 0xb40
90010ffe:	46a9      	mov	r9, r5
90011000:	f7ff ffaa 	bl	90010f58 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
90011004:	9002      	str	r0, [sp, #8]
90011006:	6ba0      	ldr	r0, [r4, #56]	; 0x38
90011008:	f7ff ffa6 	bl	90010f58 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
9001100c:	9003      	str	r0, [sp, #12]
9001100e:	9b00      	ldr	r3, [sp, #0]
90011010:	429d      	cmp	r5, r3
90011012:	da6d      	bge.n	900110f0 <_ZN8touchgfx13AbstractShape24updateAbstractShapeCacheEv+0x110>
90011014:	6823      	ldr	r3, [r4, #0]
90011016:	4629      	mov	r1, r5
90011018:	4620      	mov	r0, r4
9001101a:	6f9b      	ldr	r3, [r3, #120]	; 0x78
9001101c:	4798      	blx	r3
9001101e:	6823      	ldr	r3, [r4, #0]
90011020:	4682      	mov	sl, r0
90011022:	4629      	mov	r1, r5
90011024:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
90011026:	4620      	mov	r0, r4
90011028:	4798      	blx	r3
9001102a:	6be1      	ldr	r1, [r4, #60]	; 0x3c
9001102c:	4683      	mov	fp, r0
9001102e:	4650      	mov	r0, sl
90011030:	f7ff ffb1 	bl	90010f96 <_ZN8touchgfx7CWRUtil5mulQ5ENS0_2Q5ENS0_3Q10E>
90011034:	a902      	add	r1, sp, #8
90011036:	9004      	str	r0, [sp, #16]
90011038:	a804      	add	r0, sp, #16
9001103a:	f7ff ff61 	bl	90010f00 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
9001103e:	6b22      	ldr	r2, [r4, #48]	; 0x30
90011040:	6c21      	ldr	r1, [r4, #64]	; 0x40
90011042:	4402      	add	r2, r0
90011044:	4658      	mov	r0, fp
90011046:	9201      	str	r2, [sp, #4]
90011048:	f7ff ffa5 	bl	90010f96 <_ZN8touchgfx7CWRUtil5mulQ5ENS0_2Q5ENS0_3Q10E>
9001104c:	ab06      	add	r3, sp, #24
9001104e:	a903      	add	r1, sp, #12
90011050:	f843 0d04 	str.w	r0, [r3, #-4]!
90011054:	4618      	mov	r0, r3
90011056:	f7ff ff53 	bl	90010f00 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
9001105a:	9a01      	ldr	r2, [sp, #4]
9001105c:	1a12      	subs	r2, r2, r0
9001105e:	b125      	cbz	r5, 9001106a <_ZN8touchgfx13AbstractShape24updateAbstractShapeCacheEv+0x8a>
90011060:	2320      	movs	r3, #32
90011062:	fb92 f3f3 	sdiv	r3, r2, r3
90011066:	429f      	cmp	r7, r3
90011068:	da03      	bge.n	90011072 <_ZN8touchgfx13AbstractShape24updateAbstractShapeCacheEv+0x92>
9001106a:	2720      	movs	r7, #32
9001106c:	fb92 f7f7 	sdiv	r7, r2, r7
90011070:	b125      	cbz	r5, 9001107c <_ZN8touchgfx13AbstractShape24updateAbstractShapeCacheEv+0x9c>
90011072:	2320      	movs	r3, #32
90011074:	fb92 f3f3 	sdiv	r3, r2, r3
90011078:	4599      	cmp	r9, r3
9001107a:	dd03      	ble.n	90011084 <_ZN8touchgfx13AbstractShape24updateAbstractShapeCacheEv+0xa4>
9001107c:	f04f 0920 	mov.w	r9, #32
90011080:	fb92 f9f9 	sdiv	r9, r2, r9
90011084:	6c21      	ldr	r1, [r4, #64]	; 0x40
90011086:	4658      	mov	r0, fp
90011088:	9201      	str	r2, [sp, #4]
9001108a:	f7ff ff84 	bl	90010f96 <_ZN8touchgfx7CWRUtil5mulQ5ENS0_2Q5ENS0_3Q10E>
9001108e:	a902      	add	r1, sp, #8
90011090:	9004      	str	r0, [sp, #16]
90011092:	a804      	add	r0, sp, #16
90011094:	f7ff ff34 	bl	90010f00 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90011098:	6b63      	ldr	r3, [r4, #52]	; 0x34
9001109a:	6be1      	ldr	r1, [r4, #60]	; 0x3c
9001109c:	eb00 0b03 	add.w	fp, r0, r3
900110a0:	4650      	mov	r0, sl
900110a2:	f7ff ff78 	bl	90010f96 <_ZN8touchgfx7CWRUtil5mulQ5ENS0_2Q5ENS0_3Q10E>
900110a6:	ab06      	add	r3, sp, #24
900110a8:	a903      	add	r1, sp, #12
900110aa:	f843 0d04 	str.w	r0, [r3, #-4]!
900110ae:	4618      	mov	r0, r3
900110b0:	f7ff ff26 	bl	90010f00 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
900110b4:	9a01      	ldr	r2, [sp, #4]
900110b6:	eb00 030b 	add.w	r3, r0, fp
900110ba:	b125      	cbz	r5, 900110c6 <_ZN8touchgfx13AbstractShape24updateAbstractShapeCacheEv+0xe6>
900110bc:	2120      	movs	r1, #32
900110be:	fb93 f1f1 	sdiv	r1, r3, r1
900110c2:	428e      	cmp	r6, r1
900110c4:	da03      	bge.n	900110ce <_ZN8touchgfx13AbstractShape24updateAbstractShapeCacheEv+0xee>
900110c6:	2620      	movs	r6, #32
900110c8:	fb93 f6f6 	sdiv	r6, r3, r6
900110cc:	b125      	cbz	r5, 900110d8 <_ZN8touchgfx13AbstractShape24updateAbstractShapeCacheEv+0xf8>
900110ce:	2120      	movs	r1, #32
900110d0:	fb93 f1f1 	sdiv	r1, r3, r1
900110d4:	4588      	cmp	r8, r1
900110d6:	dd03      	ble.n	900110e0 <_ZN8touchgfx13AbstractShape24updateAbstractShapeCacheEv+0x100>
900110d8:	f04f 0820 	mov.w	r8, #32
900110dc:	fb93 f8f8 	sdiv	r8, r3, r8
900110e0:	6821      	ldr	r1, [r4, #0]
900110e2:	4620      	mov	r0, r4
900110e4:	f8d1 a080 	ldr.w	sl, [r1, #128]	; 0x80
900110e8:	4629      	mov	r1, r5
900110ea:	47d0      	blx	sl
900110ec:	3501      	adds	r5, #1
900110ee:	e78e      	b.n	9001100e <_ZN8touchgfx13AbstractShape24updateAbstractShapeCacheEv+0x2e>
900110f0:	3701      	adds	r7, #1
900110f2:	3601      	adds	r6, #1
900110f4:	f8a4 9044 	strh.w	r9, [r4, #68]	; 0x44
900110f8:	f8a4 8046 	strh.w	r8, [r4, #70]	; 0x46
900110fc:	eba7 0909 	sub.w	r9, r7, r9
90011100:	eba6 0808 	sub.w	r8, r6, r8
90011104:	f8a4 9048 	strh.w	r9, [r4, #72]	; 0x48
90011108:	f8a4 804a 	strh.w	r8, [r4, #74]	; 0x4a
9001110c:	b007      	add	sp, #28
9001110e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

90011114 <_ZNK8touchgfx13AbstractShape16drawCanvasWidgetERKNS_4RectE>:
90011114:	b5f0      	push	{r4, r5, r6, r7, lr}
90011116:	6803      	ldr	r3, [r0, #0]
90011118:	b0a3      	sub	sp, #140	; 0x8c
9001111a:	4604      	mov	r4, r0
9001111c:	460f      	mov	r7, r1
9001111e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
90011120:	4798      	blx	r3
90011122:	4606      	mov	r6, r0
90011124:	2800      	cmp	r0, #0
90011126:	d04f      	beq.n	900111c8 <_ZNK8touchgfx13AbstractShape16drawCanvasWidgetERKNS_4RectE+0xb4>
90011128:	4621      	mov	r1, r4
9001112a:	a803      	add	r0, sp, #12
9001112c:	6aa5      	ldr	r5, [r4, #40]	; 0x28
9001112e:	f004 fea7 	bl	90015e80 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90011132:	6823      	ldr	r3, [r4, #0]
90011134:	4620      	mov	r0, r4
90011136:	6e5b      	ldr	r3, [r3, #100]	; 0x64
90011138:	4798      	blx	r3
9001113a:	aa03      	add	r2, sp, #12
9001113c:	4629      	mov	r1, r5
9001113e:	9000      	str	r0, [sp, #0]
90011140:	463b      	mov	r3, r7
90011142:	a805      	add	r0, sp, #20
90011144:	f014 fbfe 	bl	90025944 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
90011148:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
9001114c:	2100      	movs	r1, #0
9001114e:	4620      	mov	r0, r4
90011150:	f88d 3058 	strb.w	r3, [sp, #88]	; 0x58
90011154:	6823      	ldr	r3, [r4, #0]
90011156:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
9001115a:	4798      	blx	r3
9001115c:	6823      	ldr	r3, [r4, #0]
9001115e:	4605      	mov	r5, r0
90011160:	2100      	movs	r1, #0
90011162:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
90011166:	4620      	mov	r0, r4
90011168:	4798      	blx	r3
9001116a:	4629      	mov	r1, r5
9001116c:	2501      	movs	r5, #1
9001116e:	4602      	mov	r2, r0
90011170:	a805      	add	r0, sp, #20
90011172:	f014 fd33 	bl	90025bdc <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
90011176:	42b5      	cmp	r5, r6
90011178:	da17      	bge.n	900111aa <_ZNK8touchgfx13AbstractShape16drawCanvasWidgetERKNS_4RectE+0x96>
9001117a:	6823      	ldr	r3, [r4, #0]
9001117c:	4629      	mov	r1, r5
9001117e:	4620      	mov	r0, r4
90011180:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
90011184:	4798      	blx	r3
90011186:	6823      	ldr	r3, [r4, #0]
90011188:	4607      	mov	r7, r0
9001118a:	4629      	mov	r1, r5
9001118c:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
90011190:	4620      	mov	r0, r4
90011192:	4798      	blx	r3
90011194:	4639      	mov	r1, r7
90011196:	4602      	mov	r2, r0
90011198:	a805      	add	r0, sp, #20
9001119a:	f014 fd6c 	bl	90025c76 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
9001119e:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
900111a2:	429a      	cmp	r2, r3
900111a4:	d30e      	bcc.n	900111c4 <_ZNK8touchgfx13AbstractShape16drawCanvasWidgetERKNS_4RectE+0xb0>
900111a6:	3501      	adds	r5, #1
900111a8:	e7e5      	b.n	90011176 <_ZNK8touchgfx13AbstractShape16drawCanvasWidgetERKNS_4RectE+0x62>
900111aa:	21ff      	movs	r1, #255	; 0xff
900111ac:	a805      	add	r0, sp, #20
900111ae:	f014 fc5d 	bl	90025a6c <_ZN8touchgfx6Canvas6renderEh>
900111b2:	4604      	mov	r4, r0
900111b4:	4b05      	ldr	r3, [pc, #20]	; (900111cc <_ZNK8touchgfx13AbstractShape16drawCanvasWidgetERKNS_4RectE+0xb8>)
900111b6:	a80a      	add	r0, sp, #40	; 0x28
900111b8:	9305      	str	r3, [sp, #20]
900111ba:	f001 f9af 	bl	9001251c <_ZN8touchgfx7OutlineD1Ev>
900111be:	4620      	mov	r0, r4
900111c0:	b023      	add	sp, #140	; 0x8c
900111c2:	bdf0      	pop	{r4, r5, r6, r7, pc}
900111c4:	2400      	movs	r4, #0
900111c6:	e7f5      	b.n	900111b4 <_ZNK8touchgfx13AbstractShape16drawCanvasWidgetERKNS_4RectE+0xa0>
900111c8:	2401      	movs	r4, #1
900111ca:	e7f8      	b.n	900111be <_ZNK8touchgfx13AbstractShape16drawCanvasWidgetERKNS_4RectE+0xaa>
900111cc:	9002a808 	.word	0x9002a808

900111d0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
900111d0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
900111d2:	6803      	ldr	r3, [r0, #0]
900111d4:	460d      	mov	r5, r1
900111d6:	4604      	mov	r4, r0
900111d8:	4601      	mov	r1, r0
900111da:	6e9b      	ldr	r3, [r3, #104]	; 0x68
900111dc:	a802      	add	r0, sp, #8
900111de:	4798      	blx	r3
900111e0:	6828      	ldr	r0, [r5, #0]
900111e2:	6869      	ldr	r1, [r5, #4]
900111e4:	466b      	mov	r3, sp
900111e6:	c303      	stmia	r3!, {r0, r1}
900111e8:	4668      	mov	r0, sp
900111ea:	4619      	mov	r1, r3
900111ec:	f7fe fe14 	bl	9000fe18 <_ZN8touchgfx4RectaNERKS0_>
900111f0:	6aa0      	ldr	r0, [r4, #40]	; 0x28
900111f2:	b188      	cbz	r0, 90011218 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
900111f4:	6803      	ldr	r3, [r0, #0]
900111f6:	1d21      	adds	r1, r4, #4
900111f8:	68db      	ldr	r3, [r3, #12]
900111fa:	4798      	blx	r3
900111fc:	b160      	cbz	r0, 90011218 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
900111fe:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
90011202:	2b00      	cmp	r3, #0
90011204:	dd08      	ble.n	90011218 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90011206:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
9001120a:	2d00      	cmp	r5, #0
9001120c:	dd04      	ble.n	90011218 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
9001120e:	4a2b      	ldr	r2, [pc, #172]	; (900112bc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
90011210:	7812      	ldrb	r2, [r2, #0]
90011212:	b11a      	cbz	r2, 9001121c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
90011214:	2a01      	cmp	r2, #1
90011216:	d029      	beq.n	9001126c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
90011218:	b004      	add	sp, #16
9001121a:	bd70      	pop	{r4, r5, r6, pc}
9001121c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90011220:	441d      	add	r5, r3
90011222:	b2ad      	uxth	r5, r5
90011224:	b22e      	sxth	r6, r5
90011226:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
9001122a:	42b3      	cmp	r3, r6
9001122c:	daf4      	bge.n	90011218 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
9001122e:	6823      	ldr	r3, [r4, #0]
90011230:	4669      	mov	r1, sp
90011232:	4620      	mov	r0, r4
90011234:	6edb      	ldr	r3, [r3, #108]	; 0x6c
90011236:	4798      	blx	r3
90011238:	b940      	cbnz	r0, 9001124c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
9001123a:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
9001123e:	2b01      	cmp	r3, #1
90011240:	d004      	beq.n	9001124c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
90011242:	3301      	adds	r3, #1
90011244:	105b      	asrs	r3, r3, #1
90011246:	f8ad 3006 	strh.w	r3, [sp, #6]
9001124a:	e7f0      	b.n	9001122e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
9001124c:	f8bd 2006 	ldrh.w	r2, [sp, #6]
90011250:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90011254:	4413      	add	r3, r2
90011256:	b29b      	uxth	r3, r3
90011258:	441a      	add	r2, r3
9001125a:	f8ad 3002 	strh.w	r3, [sp, #2]
9001125e:	b212      	sxth	r2, r2
90011260:	4296      	cmp	r6, r2
90011262:	dae0      	bge.n	90011226 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
90011264:	1aeb      	subs	r3, r5, r3
90011266:	f8ad 3006 	strh.w	r3, [sp, #6]
9001126a:	e7dc      	b.n	90011226 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
9001126c:	f8bd 5000 	ldrh.w	r5, [sp]
90011270:	441d      	add	r5, r3
90011272:	b2ad      	uxth	r5, r5
90011274:	b22e      	sxth	r6, r5
90011276:	f9bd 3000 	ldrsh.w	r3, [sp]
9001127a:	42b3      	cmp	r3, r6
9001127c:	dacc      	bge.n	90011218 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
9001127e:	6823      	ldr	r3, [r4, #0]
90011280:	4669      	mov	r1, sp
90011282:	4620      	mov	r0, r4
90011284:	6edb      	ldr	r3, [r3, #108]	; 0x6c
90011286:	4798      	blx	r3
90011288:	b940      	cbnz	r0, 9001129c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
9001128a:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
9001128e:	2b01      	cmp	r3, #1
90011290:	d004      	beq.n	9001129c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
90011292:	3301      	adds	r3, #1
90011294:	105b      	asrs	r3, r3, #1
90011296:	f8ad 3004 	strh.w	r3, [sp, #4]
9001129a:	e7f0      	b.n	9001127e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
9001129c:	f8bd 2004 	ldrh.w	r2, [sp, #4]
900112a0:	f8bd 3000 	ldrh.w	r3, [sp]
900112a4:	4413      	add	r3, r2
900112a6:	b29b      	uxth	r3, r3
900112a8:	441a      	add	r2, r3
900112aa:	f8ad 3000 	strh.w	r3, [sp]
900112ae:	b212      	sxth	r2, r2
900112b0:	4296      	cmp	r6, r2
900112b2:	dae0      	bge.n	90011276 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
900112b4:	1aeb      	subs	r3, r5, r3
900112b6:	f8ad 3004 	strh.w	r3, [sp, #4]
900112ba:	e7dc      	b.n	90011276 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
900112bc:	24023574 	.word	0x24023574

900112c0 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
900112c0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
900112c2:	6803      	ldr	r3, [r0, #0]
900112c4:	4604      	mov	r4, r0
900112c6:	4601      	mov	r1, r0
900112c8:	4668      	mov	r0, sp
900112ca:	6e9b      	ldr	r3, [r3, #104]	; 0x68
900112cc:	4798      	blx	r3
900112ce:	2100      	movs	r1, #0
900112d0:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
900112d4:	4668      	mov	r0, sp
900112d6:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
900112da:	9102      	str	r1, [sp, #8]
900112dc:	a902      	add	r1, sp, #8
900112de:	f8ad 200c 	strh.w	r2, [sp, #12]
900112e2:	f8ad 300e 	strh.w	r3, [sp, #14]
900112e6:	f7fe fd97 	bl	9000fe18 <_ZN8touchgfx4RectaNERKS0_>
900112ea:	6823      	ldr	r3, [r4, #0]
900112ec:	4669      	mov	r1, sp
900112ee:	4620      	mov	r0, r4
900112f0:	691b      	ldr	r3, [r3, #16]
900112f2:	4798      	blx	r3
900112f4:	b004      	add	sp, #16
900112f6:	bd10      	pop	{r4, pc}

900112f8 <_ZN8touchgfx12CanvasWidgetC1Ev>:
900112f8:	2101      	movs	r1, #1
900112fa:	2200      	movs	r2, #0
900112fc:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
90011300:	490a      	ldr	r1, [pc, #40]	; (9001132c <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
90011302:	8082      	strh	r2, [r0, #4]
90011304:	6001      	str	r1, [r0, #0]
90011306:	21ff      	movs	r1, #255	; 0xff
90011308:	80c2      	strh	r2, [r0, #6]
9001130a:	8102      	strh	r2, [r0, #8]
9001130c:	8142      	strh	r2, [r0, #10]
9001130e:	8182      	strh	r2, [r0, #12]
90011310:	81c2      	strh	r2, [r0, #14]
90011312:	8202      	strh	r2, [r0, #16]
90011314:	8242      	strh	r2, [r0, #18]
90011316:	61c2      	str	r2, [r0, #28]
90011318:	8402      	strh	r2, [r0, #32]
9001131a:	8442      	strh	r2, [r0, #34]	; 0x22
9001131c:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
90011320:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
90011324:	6282      	str	r2, [r0, #40]	; 0x28
90011326:	e9c0 2205 	strd	r2, r2, [r0, #20]
9001132a:	4770      	bx	lr
9001132c:	9002a050 	.word	0x9002a050

90011330 <_ZNK8touchgfx14SnapshotWidget17invalidateContentEv>:
90011330:	b508      	push	{r3, lr}
90011332:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
90011336:	b10b      	cbz	r3, 9001133c <_ZNK8touchgfx14SnapshotWidget17invalidateContentEv+0xc>
90011338:	f7f1 f856 	bl	900023e8 <_ZNK8touchgfx8Drawable17invalidateContentEv>
9001133c:	bd08      	pop	{r3, pc}

9001133e <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>:
9001133e:	6803      	ldr	r3, [r0, #0]
90011340:	f64f 71fe 	movw	r1, #65534	; 0xfffe
90011344:	6e5b      	ldr	r3, [r3, #100]	; 0x64
90011346:	4718      	bx	r3

90011348 <_ZN8touchgfx14SnapshotWidgetD1Ev>:
90011348:	4770      	bx	lr

9001134a <_ZN8touchgfx14SnapshotWidgetD0Ev>:
9001134a:	b510      	push	{r4, lr}
9001134c:	4604      	mov	r4, r0
9001134e:	212c      	movs	r1, #44	; 0x2c
90011350:	f014 fdcf 	bl	90025ef2 <_ZdlPvj>
90011354:	4620      	mov	r0, r4
90011356:	bd10      	pop	{r4, pc}

90011358 <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv>:
90011358:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
9001135c:	2bff      	cmp	r3, #255	; 0xff
9001135e:	b510      	push	{r4, lr}
90011360:	d104      	bne.n	9001136c <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x14>
90011362:	8cca      	ldrh	r2, [r1, #38]	; 0x26
90011364:	f64f 73ff 	movw	r3, #65535	; 0xffff
90011368:	429a      	cmp	r2, r3
9001136a:	d105      	bne.n	90011378 <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x20>
9001136c:	2300      	movs	r3, #0
9001136e:	8003      	strh	r3, [r0, #0]
90011370:	8043      	strh	r3, [r0, #2]
90011372:	8083      	strh	r3, [r0, #4]
90011374:	80c3      	strh	r3, [r0, #6]
90011376:	bd10      	pop	{r4, pc}
90011378:	2300      	movs	r3, #0
9001137a:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
9001137e:	f9b1 200a 	ldrsh.w	r2, [r1, #10]
90011382:	8003      	strh	r3, [r0, #0]
90011384:	8043      	strh	r3, [r0, #2]
90011386:	8084      	strh	r4, [r0, #4]
90011388:	80c2      	strh	r2, [r0, #6]
9001138a:	e7f4      	b.n	90011376 <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x1e>

9001138c <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE>:
9001138c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90011390:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
90011394:	b087      	sub	sp, #28
90011396:	4604      	mov	r4, r0
90011398:	4689      	mov	r9, r1
9001139a:	b363      	cbz	r3, 900113f6 <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE+0x6a>
9001139c:	8cc2      	ldrh	r2, [r0, #38]	; 0x26
9001139e:	f64f 73ff 	movw	r3, #65535	; 0xffff
900113a2:	429a      	cmp	r2, r3
900113a4:	d027      	beq.n	900113f6 <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE+0x6a>
900113a6:	ad06      	add	r5, sp, #24
900113a8:	2700      	movs	r7, #0
900113aa:	f825 2d0c 	strh.w	r2, [r5, #-12]!
900113ae:	4628      	mov	r0, r5
900113b0:	f006 fd92 	bl	90017ed8 <_ZNK8touchgfx6Bitmap8getWidthEv>
900113b4:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
900113b8:	a904      	add	r1, sp, #16
900113ba:	f8ad 0014 	strh.w	r0, [sp, #20]
900113be:	f8ad 3016 	strh.w	r3, [sp, #22]
900113c2:	4620      	mov	r0, r4
900113c4:	6823      	ldr	r3, [r4, #0]
900113c6:	9704      	str	r7, [sp, #16]
900113c8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900113ca:	4798      	blx	r3
900113cc:	f7ff f808 	bl	900103e0 <_ZN8touchgfx3HAL3lcdEv>
900113d0:	6803      	ldr	r3, [r0, #0]
900113d2:	4606      	mov	r6, r0
900113d4:	4628      	mov	r0, r5
900113d6:	f8d3 800c 	ldr.w	r8, [r3, #12]
900113da:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
900113dc:	f8ad 300c 	strh.w	r3, [sp, #12]
900113e0:	f006 fe66 	bl	900180b0 <_ZNK8touchgfx6Bitmap7getDataEv>
900113e4:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
900113e8:	4601      	mov	r1, r0
900113ea:	9701      	str	r7, [sp, #4]
900113ec:	aa04      	add	r2, sp, #16
900113ee:	9300      	str	r3, [sp, #0]
900113f0:	4630      	mov	r0, r6
900113f2:	464b      	mov	r3, r9
900113f4:	47c0      	blx	r8
900113f6:	b007      	add	sp, #28
900113f8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

900113fc <_ZN8touchgfx14SnapshotWidget12makeSnapshotEt>:
900113fc:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
900113fe:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
90011402:	460d      	mov	r5, r1
90011404:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
90011408:	2100      	movs	r1, #0
9001140a:	f8ad 3006 	strh.w	r3, [sp, #6]
9001140e:	4604      	mov	r4, r0
90011410:	6803      	ldr	r3, [r0, #0]
90011412:	f8ad 2004 	strh.w	r2, [sp, #4]
90011416:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90011418:	9100      	str	r1, [sp, #0]
9001141a:	4669      	mov	r1, sp
9001141c:	4798      	blx	r3
9001141e:	4621      	mov	r1, r4
90011420:	a802      	add	r0, sp, #8
90011422:	f004 fd2d 	bl	90015e80 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90011426:	f7fe ffdb 	bl	900103e0 <_ZN8touchgfx3HAL3lcdEv>
9001142a:	6803      	ldr	r3, [r0, #0]
9001142c:	aa02      	add	r2, sp, #8
9001142e:	4669      	mov	r1, sp
90011430:	695e      	ldr	r6, [r3, #20]
90011432:	462b      	mov	r3, r5
90011434:	47b0      	blx	r6
90011436:	f64f 73ff 	movw	r3, #65535	; 0xffff
9001143a:	2800      	cmp	r0, #0
9001143c:	bf08      	it	eq
9001143e:	461d      	moveq	r5, r3
90011440:	84e5      	strh	r5, [r4, #38]	; 0x26
90011442:	b004      	add	sp, #16
90011444:	bd70      	pop	{r4, r5, r6, pc}
	...

90011448 <_ZN8touchgfx14SnapshotWidgetC1Ev>:
90011448:	2200      	movs	r2, #0
9001144a:	8082      	strh	r2, [r0, #4]
9001144c:	80c2      	strh	r2, [r0, #6]
9001144e:	8102      	strh	r2, [r0, #8]
90011450:	8142      	strh	r2, [r0, #10]
90011452:	8182      	strh	r2, [r0, #12]
90011454:	81c2      	strh	r2, [r0, #14]
90011456:	8202      	strh	r2, [r0, #16]
90011458:	8242      	strh	r2, [r0, #18]
9001145a:	61c2      	str	r2, [r0, #28]
9001145c:	8402      	strh	r2, [r0, #32]
9001145e:	8442      	strh	r2, [r0, #34]	; 0x22
90011460:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
90011464:	e9c0 2205 	strd	r2, r2, [r0, #20]
90011468:	2201      	movs	r2, #1
9001146a:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
9001146e:	4a04      	ldr	r2, [pc, #16]	; (90011480 <_ZN8touchgfx14SnapshotWidgetC1Ev+0x38>)
90011470:	6002      	str	r2, [r0, #0]
90011472:	f64f 72ff 	movw	r2, #65535	; 0xffff
90011476:	84c2      	strh	r2, [r0, #38]	; 0x26
90011478:	f880 2028 	strb.w	r2, [r0, #40]	; 0x28
9001147c:	4770      	bx	lr
9001147e:	bf00      	nop
90011480:	9002a0c8 	.word	0x9002a0c8

90011484 <_ZNK8touchgfx5Image17invalidateContentEv>:
90011484:	b508      	push	{r3, lr}
90011486:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
9001148a:	b10b      	cbz	r3, 90011490 <_ZNK8touchgfx5Image17invalidateContentEv+0xc>
9001148c:	f7f0 ffac 	bl	900023e8 <_ZNK8touchgfx8Drawable17invalidateContentEv>
90011490:	bd08      	pop	{r3, pc}

90011492 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>:
90011492:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
90011496:	4770      	bx	lr

90011498 <_ZN8touchgfx13ScalableImage19getScalingAlgorithmEv>:
90011498:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
9001149c:	4770      	bx	lr

9001149e <_ZN8touchgfx13ScalableImageD1Ev>:
9001149e:	4770      	bx	lr

900114a0 <_ZN8touchgfx13ScalableImageD0Ev>:
900114a0:	b510      	push	{r4, lr}
900114a2:	4604      	mov	r4, r0
900114a4:	212c      	movs	r1, #44	; 0x2c
900114a6:	f014 fd24 	bl	90025ef2 <_ZdlPvj>
900114aa:	4620      	mov	r0, r4
900114ac:	bd10      	pop	{r4, pc}

900114ae <_ZNK8touchgfx13ScalableImage12getSolidRectEv>:
900114ae:	b5f0      	push	{r4, r5, r6, r7, lr}
900114b0:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
900114b4:	b085      	sub	sp, #20
900114b6:	4604      	mov	r4, r0
900114b8:	460d      	mov	r5, r1
900114ba:	2bff      	cmp	r3, #255	; 0xff
900114bc:	d128      	bne.n	90011510 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x62>
900114be:	f101 0626 	add.w	r6, r1, #38	; 0x26
900114c2:	4668      	mov	r0, sp
900114c4:	4631      	mov	r1, r6
900114c6:	f006 fd6f 	bl	90017fa8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
900114ca:	f9bd 7004 	ldrsh.w	r7, [sp, #4]
900114ce:	4630      	mov	r0, r6
900114d0:	f006 fd02 	bl	90017ed8 <_ZNK8touchgfx6Bitmap8getWidthEv>
900114d4:	4287      	cmp	r7, r0
900114d6:	d11b      	bne.n	90011510 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x62>
900114d8:	f9bd 7006 	ldrsh.w	r7, [sp, #6]
900114dc:	4630      	mov	r0, r6
900114de:	f006 fd2f 	bl	90017f40 <_ZNK8touchgfx6Bitmap9getHeightEv>
900114e2:	4287      	cmp	r7, r0
900114e4:	d114      	bne.n	90011510 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x62>
900114e6:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
900114ea:	2100      	movs	r1, #0
900114ec:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
900114f0:	f8ad 300e 	strh.w	r3, [sp, #14]
900114f4:	466b      	mov	r3, sp
900114f6:	9102      	str	r1, [sp, #8]
900114f8:	f8ad 200c 	strh.w	r2, [sp, #12]
900114fc:	cb03      	ldmia	r3!, {r0, r1}
900114fe:	6020      	str	r0, [r4, #0]
90011500:	4620      	mov	r0, r4
90011502:	6061      	str	r1, [r4, #4]
90011504:	4619      	mov	r1, r3
90011506:	f7fe fc87 	bl	9000fe18 <_ZN8touchgfx4RectaNERKS0_>
9001150a:	4620      	mov	r0, r4
9001150c:	b005      	add	sp, #20
9001150e:	bdf0      	pop	{r4, r5, r6, r7, pc}
90011510:	2300      	movs	r3, #0
90011512:	8023      	strh	r3, [r4, #0]
90011514:	8063      	strh	r3, [r4, #2]
90011516:	80a3      	strh	r3, [r4, #4]
90011518:	80e3      	strh	r3, [r4, #6]
9001151a:	e7f6      	b.n	9001150a <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x5c>

9001151c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>:
9001151c:	b538      	push	{r3, r4, r5, lr}
9001151e:	2300      	movs	r3, #0
90011520:	2501      	movs	r5, #1
90011522:	4604      	mov	r4, r0
90011524:	8083      	strh	r3, [r0, #4]
90011526:	80c3      	strh	r3, [r0, #6]
90011528:	8103      	strh	r3, [r0, #8]
9001152a:	8143      	strh	r3, [r0, #10]
9001152c:	8183      	strh	r3, [r0, #12]
9001152e:	81c3      	strh	r3, [r0, #14]
90011530:	8203      	strh	r3, [r0, #16]
90011532:	8243      	strh	r3, [r0, #18]
90011534:	61c3      	str	r3, [r0, #28]
90011536:	8403      	strh	r3, [r0, #32]
90011538:	8443      	strh	r3, [r0, #34]	; 0x22
9001153a:	f880 3024 	strb.w	r3, [r0, #36]	; 0x24
9001153e:	f880 5025 	strb.w	r5, [r0, #37]	; 0x25
90011542:	e9c0 3305 	strd	r3, r3, [r0, #20]
90011546:	4b07      	ldr	r3, [pc, #28]	; (90011564 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE+0x48>)
90011548:	6003      	str	r3, [r0, #0]
9001154a:	880b      	ldrh	r3, [r1, #0]
9001154c:	84c3      	strh	r3, [r0, #38]	; 0x26
9001154e:	23ff      	movs	r3, #255	; 0xff
90011550:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
90011554:	f000 ff6f 	bl	90012436 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90011558:	4b03      	ldr	r3, [pc, #12]	; (90011568 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE+0x4c>)
9001155a:	f884 5029 	strb.w	r5, [r4, #41]	; 0x29
9001155e:	4620      	mov	r0, r4
90011560:	6023      	str	r3, [r4, #0]
90011562:	bd38      	pop	{r3, r4, r5, pc}
90011564:	9002a384 	.word	0x9002a384
90011568:	9002a138 	.word	0x9002a138

9001156c <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv>:
9001156c:	4603      	mov	r3, r0
9001156e:	3026      	adds	r0, #38	; 0x26
90011570:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
90011574:	b90b      	cbnz	r3, 9001157a <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv+0xe>
90011576:	f004 bd27 	b.w	90015fc8 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
9001157a:	f004 bd35 	b.w	90015fe8 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>
	...

90011580 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>:
90011580:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90011584:	4604      	mov	r4, r0
90011586:	b0b3      	sub	sp, #204	; 0xcc
90011588:	469b      	mov	fp, r3
9001158a:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
9001158e:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
90011592:	2500      	movs	r5, #0
90011594:	f8ad 0048 	strh.w	r0, [sp, #72]	; 0x48
90011598:	f8ad 304a 	strh.w	r3, [sp, #74]	; 0x4a
9001159c:	ab11      	add	r3, sp, #68	; 0x44
9001159e:	9206      	str	r2, [sp, #24]
900115a0:	4618      	mov	r0, r3
900115a2:	9511      	str	r5, [sp, #68]	; 0x44
900115a4:	9307      	str	r3, [sp, #28]
900115a6:	ad13      	add	r5, sp, #76	; 0x4c
900115a8:	e9dd a93c 	ldrd	sl, r9, [sp, #240]	; 0xf0
900115ac:	e9dd 873e 	ldrd	r8, r7, [sp, #248]	; 0xf8
900115b0:	f7fe fc32 	bl	9000fe18 <_ZN8touchgfx4RectaNERKS0_>
900115b4:	9b07      	ldr	r3, [sp, #28]
900115b6:	e893 0003 	ldmia.w	r3, {r0, r1}
900115ba:	e885 0003 	stmia.w	r5, {r0, r1}
900115be:	6821      	ldr	r1, [r4, #0]
900115c0:	4620      	mov	r0, r4
900115c2:	6ace      	ldr	r6, [r1, #44]	; 0x2c
900115c4:	4629      	mov	r1, r5
900115c6:	47b0      	blx	r6
900115c8:	4621      	mov	r1, r4
900115ca:	a815      	add	r0, sp, #84	; 0x54
900115cc:	1d26      	adds	r6, r4, #4
900115ce:	f004 fc57 	bl	90015e80 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900115d2:	a815      	add	r0, sp, #84	; 0x54
900115d4:	f003 f98a 	bl	900148ec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
900115d8:	9b07      	ldr	r3, [sp, #28]
900115da:	4631      	mov	r1, r6
900115dc:	4618      	mov	r0, r3
900115de:	f003 f9c9 	bl	90014974 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
900115e2:	4628      	mov	r0, r5
900115e4:	f104 0526 	add.w	r5, r4, #38	; 0x26
900115e8:	f003 f980 	bl	900148ec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
900115ec:	4628      	mov	r0, r5
900115ee:	f006 fd5f 	bl	900180b0 <_ZNK8touchgfx6Bitmap7getDataEv>
900115f2:	9007      	str	r0, [sp, #28]
900115f4:	2800      	cmp	r0, #0
900115f6:	f000 80ce 	beq.w	90011796 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x216>
900115fa:	f8db 200c 	ldr.w	r2, [fp, #12]
900115fe:	a809      	add	r0, sp, #36	; 0x24
90011600:	f8db 1000 	ldr.w	r1, [fp]
90011604:	920c      	str	r2, [sp, #48]	; 0x30
90011606:	f8da 2000 	ldr.w	r2, [sl]
9001160a:	9109      	str	r1, [sp, #36]	; 0x24
9001160c:	920d      	str	r2, [sp, #52]	; 0x34
9001160e:	f8da 2004 	ldr.w	r2, [sl, #4]
90011612:	f8db 1004 	ldr.w	r1, [fp, #4]
90011616:	920e      	str	r2, [sp, #56]	; 0x38
90011618:	f8da 2008 	ldr.w	r2, [sl, #8]
9001161c:	910a      	str	r1, [sp, #40]	; 0x28
9001161e:	920f      	str	r2, [sp, #60]	; 0x3c
90011620:	f8db 1008 	ldr.w	r1, [fp, #8]
90011624:	f8da 200c 	ldr.w	r2, [sl, #12]
90011628:	910b      	str	r1, [sp, #44]	; 0x2c
9001162a:	a90d      	add	r1, sp, #52	; 0x34
9001162c:	9210      	str	r2, [sp, #64]	; 0x40
9001162e:	4632      	mov	r2, r6
90011630:	f003 f984 	bl	9001493c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
90011634:	4632      	mov	r2, r6
90011636:	a90e      	add	r1, sp, #56	; 0x38
90011638:	a80a      	add	r0, sp, #40	; 0x28
9001163a:	f003 f97f 	bl	9001493c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
9001163e:	4632      	mov	r2, r6
90011640:	a90f      	add	r1, sp, #60	; 0x3c
90011642:	a80b      	add	r0, sp, #44	; 0x2c
90011644:	f003 f97a 	bl	9001493c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
90011648:	4632      	mov	r2, r6
9001164a:	a910      	add	r1, sp, #64	; 0x40
9001164c:	a80c      	add	r0, sp, #48	; 0x30
9001164e:	f003 f975 	bl	9001493c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
90011652:	eddd 7a0d 	vldr	s15, [sp, #52]	; 0x34
90011656:	ed97 3a00 	vldr	s6, [r7]
9001165a:	eef0 6a67 	vmov.f32	s13, s15
9001165e:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
90011662:	edd7 4a01 	vldr	s9, [r7, #4]
90011666:	eeb0 7a67 	vmov.f32	s14, s15
9001166a:	eddd 7a0e 	vldr	s15, [sp, #56]	; 0x38
9001166e:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
90011672:	ed99 2a00 	vldr	s4, [r9]
90011676:	eeb0 6a67 	vmov.f32	s12, s15
9001167a:	eddd 7a0b 	vldr	s15, [sp, #44]	; 0x2c
9001167e:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
90011682:	edd8 2a00 	vldr	s5, [r8]
90011686:	edd9 3a01 	vldr	s7, [r9, #4]
9001168a:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
9001168e:	ed98 4a01 	vldr	s8, [r8, #4]
90011692:	ed99 5a02 	vldr	s10, [r9, #8]
90011696:	edd8 5a02 	vldr	s11, [r8, #8]
9001169a:	ee16 6a10 	vmov	r6, s12
9001169e:	eeb0 6a67 	vmov.f32	s12, s15
900116a2:	eddd 7a0f 	vldr	s15, [sp, #60]	; 0x3c
900116a6:	f8d9 e00c 	ldr.w	lr, [r9, #12]
900116aa:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
900116ae:	f8d8 c00c 	ldr.w	ip, [r8, #12]
900116b2:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
900116b6:	ed8d 2a20 	vstr	s4, [sp, #128]	; 0x80
900116ba:	ee16 0a10 	vmov	r0, s12
900116be:	eeb0 6a67 	vmov.f32	s12, s15
900116c2:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
900116c6:	edcd 2a21 	vstr	s5, [sp, #132]	; 0x84
900116ca:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
900116ce:	ed8d 3a22 	vstr	s6, [sp, #136]	; 0x88
900116d2:	ed8d 7a23 	vstr	s14, [sp, #140]	; 0x8c
900116d6:	edcd 3a25 	vstr	s7, [sp, #148]	; 0x94
900116da:	ee16 1a10 	vmov	r1, s12
900116de:	eeb0 6a67 	vmov.f32	s12, s15
900116e2:	eddd 7a10 	vldr	s15, [sp, #64]	; 0x40
900116e6:	ed8d 4a26 	vstr	s8, [sp, #152]	; 0x98
900116ea:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
900116ee:	edcd 4a27 	vstr	s9, [sp, #156]	; 0x9c
900116f2:	f8d7 a008 	ldr.w	sl, [r7, #8]
900116f6:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
900116fa:	68ff      	ldr	r7, [r7, #12]
900116fc:	ee16 2a10 	vmov	r2, s12
90011700:	ed9d 6a09 	vldr	s12, [sp, #36]	; 0x24
90011704:	9624      	str	r6, [sp, #144]	; 0x90
90011706:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
9001170a:	e9cd 0128 	strd	r0, r1, [sp, #160]	; 0xa0
9001170e:	ed8d 6a1e 	vstr	s12, [sp, #120]	; 0x78
90011712:	4628      	mov	r0, r5
90011714:	ed8d 5a2a 	vstr	s10, [sp, #168]	; 0xa8
90011718:	9b06      	ldr	r3, [sp, #24]
9001171a:	922d      	str	r2, [sp, #180]	; 0xb4
9001171c:	4a1f      	ldr	r2, [pc, #124]	; (9001179c <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x21c>)
9001171e:	9317      	str	r3, [sp, #92]	; 0x5c
90011720:	8812      	ldrh	r2, [r2, #0]
90011722:	9b07      	ldr	r3, [sp, #28]
90011724:	9218      	str	r2, [sp, #96]	; 0x60
90011726:	9319      	str	r3, [sp, #100]	; 0x64
90011728:	edcd 5a2b 	vstr	s11, [sp, #172]	; 0xac
9001172c:	edcd 7a2e 	vstr	s15, [sp, #184]	; 0xb8
90011730:	f8cd e0bc 	str.w	lr, [sp, #188]	; 0xbc
90011734:	f8cd c0c0 	str.w	ip, [sp, #192]	; 0xc0
90011738:	f8cd a0b0 	str.w	sl, [sp, #176]	; 0xb0
9001173c:	9731      	str	r7, [sp, #196]	; 0xc4
9001173e:	f006 fce7 	bl	90018110 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
90011742:	901a      	str	r0, [sp, #104]	; 0x68
90011744:	4628      	mov	r0, r5
90011746:	f006 fbc7 	bl	90017ed8 <_ZNK8touchgfx6Bitmap8getWidthEv>
9001174a:	901b      	str	r0, [sp, #108]	; 0x6c
9001174c:	4628      	mov	r0, r5
9001174e:	f006 fbf7 	bl	90017f40 <_ZNK8touchgfx6Bitmap9getHeightEv>
90011752:	901c      	str	r0, [sp, #112]	; 0x70
90011754:	4628      	mov	r0, r5
90011756:	f006 fbbf 	bl	90017ed8 <_ZNK8touchgfx6Bitmap8getWidthEv>
9001175a:	4b11      	ldr	r3, [pc, #68]	; (900117a0 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x220>)
9001175c:	901d      	str	r0, [sp, #116]	; 0x74
9001175e:	681b      	ldr	r3, [r3, #0]
90011760:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
90011764:	b10a      	cbz	r2, 9001176a <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x1ea>
90011766:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
90011768:	b905      	cbnz	r5, 9001176c <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x1ec>
9001176a:	689d      	ldr	r5, [r3, #8]
9001176c:	682b      	ldr	r3, [r5, #0]
9001176e:	4620      	mov	r0, r4
90011770:	6c1e      	ldr	r6, [r3, #64]	; 0x40
90011772:	f7ff fefb 	bl	9001156c <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv>
90011776:	f64f 73ff 	movw	r3, #65535	; 0xffff
9001177a:	aa1e      	add	r2, sp, #120	; 0x78
9001177c:	a917      	add	r1, sp, #92	; 0x5c
9001177e:	9304      	str	r3, [sp, #16]
90011780:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
90011784:	e9cd 0302 	strd	r0, r3, [sp, #8]
90011788:	ab13      	add	r3, sp, #76	; 0x4c
9001178a:	4628      	mov	r0, r5
9001178c:	9301      	str	r3, [sp, #4]
9001178e:	ab15      	add	r3, sp, #84	; 0x54
90011790:	9300      	str	r3, [sp, #0]
90011792:	ab19      	add	r3, sp, #100	; 0x64
90011794:	47b0      	blx	r6
90011796:	b033      	add	sp, #204	; 0xcc
90011798:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001179c:	24023576 	.word	0x24023576
900117a0:	2402357c 	.word	0x2402357c

900117a4 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE>:
900117a4:	b570      	push	{r4, r5, r6, lr}
900117a6:	ed2d 8b04 	vpush	{d8-d9}
900117aa:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
900117ae:	b098      	sub	sp, #96	; 0x60
900117b0:	4604      	mov	r4, r0
900117b2:	460e      	mov	r6, r1
900117b4:	2b00      	cmp	r3, #0
900117b6:	d065      	beq.n	90011884 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xe0>
900117b8:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
900117bc:	f100 0526 	add.w	r5, r0, #38	; 0x26
900117c0:	ed9f 8a37 	vldr	s16, [pc, #220]	; 900118a0 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xfc>
900117c4:	ee09 3a10 	vmov	s18, r3
900117c8:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
900117cc:	4628      	mov	r0, r5
900117ce:	ee08 3a90 	vmov	s17, r3
900117d2:	4b34      	ldr	r3, [pc, #208]	; (900118a4 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x100>)
900117d4:	eeb8 9ac9 	vcvt.f32.s32	s18, s18
900117d8:	930c      	str	r3, [sp, #48]	; 0x30
900117da:	eef8 8ae8 	vcvt.f32.s32	s17, s17
900117de:	930d      	str	r3, [sp, #52]	; 0x34
900117e0:	930e      	str	r3, [sp, #56]	; 0x38
900117e2:	ee39 9a08 	vadd.f32	s18, s18, s16
900117e6:	930f      	str	r3, [sp, #60]	; 0x3c
900117e8:	f006 fb76 	bl	90017ed8 <_ZNK8touchgfx6Bitmap8getWidthEv>
900117ec:	ee07 0a90 	vmov	s15, r0
900117f0:	4628      	mov	r0, r5
900117f2:	ee78 8a88 	vadd.f32	s17, s17, s16
900117f6:	eef8 9ae7 	vcvt.f32.s32	s19, s15
900117fa:	f006 fba1 	bl	90017f40 <_ZNK8touchgfx6Bitmap9getHeightEv>
900117fe:	4b2a      	ldr	r3, [pc, #168]	; (900118a8 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x104>)
90011800:	ee07 0a90 	vmov	s15, r0
90011804:	781b      	ldrb	r3, [r3, #0]
90011806:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
9001180a:	eef0 7a48 	vmov.f32	s15, s16
9001180e:	2b01      	cmp	r3, #1
90011810:	d13c      	bne.n	9001188c <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xe8>
90011812:	eef0 6a69 	vmov.f32	s13, s19
90011816:	ee19 3a90 	vmov	r3, s19
9001181a:	eeb0 6a47 	vmov.f32	s12, s14
9001181e:	eef0 5a47 	vmov.f32	s11, s14
90011822:	eef0 9a48 	vmov.f32	s19, s16
90011826:	eeb0 7a48 	vmov.f32	s14, s16
9001182a:	9314      	str	r3, [sp, #80]	; 0x50
9001182c:	ab14      	add	r3, sp, #80	; 0x50
9001182e:	2200      	movs	r2, #0
90011830:	4631      	mov	r1, r6
90011832:	9303      	str	r3, [sp, #12]
90011834:	ab10      	add	r3, sp, #64	; 0x40
90011836:	4620      	mov	r0, r4
90011838:	edcd 7a04 	vstr	s15, [sp, #16]
9001183c:	9302      	str	r3, [sp, #8]
9001183e:	ab0c      	add	r3, sp, #48	; 0x30
90011840:	ed8d 9a05 	vstr	s18, [sp, #20]
90011844:	9301      	str	r3, [sp, #4]
90011846:	ab08      	add	r3, sp, #32
90011848:	ed8d 9a06 	vstr	s18, [sp, #24]
9001184c:	9300      	str	r3, [sp, #0]
9001184e:	ab04      	add	r3, sp, #16
90011850:	edcd 7a07 	vstr	s15, [sp, #28]
90011854:	edcd 7a08 	vstr	s15, [sp, #32]
90011858:	edcd 7a09 	vstr	s15, [sp, #36]	; 0x24
9001185c:	edcd 8a0a 	vstr	s17, [sp, #40]	; 0x28
90011860:	edcd 8a0b 	vstr	s17, [sp, #44]	; 0x2c
90011864:	edcd 7a10 	vstr	s15, [sp, #64]	; 0x40
90011868:	edcd 9a11 	vstr	s19, [sp, #68]	; 0x44
9001186c:	edcd 5a12 	vstr	s11, [sp, #72]	; 0x48
90011870:	ed8d 6a13 	vstr	s12, [sp, #76]	; 0x4c
90011874:	edcd 7a15 	vstr	s15, [sp, #84]	; 0x54
90011878:	ed8d 7a16 	vstr	s14, [sp, #88]	; 0x58
9001187c:	edcd 6a17 	vstr	s13, [sp, #92]	; 0x5c
90011880:	f7ff fe7e 	bl	90011580 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>
90011884:	b018      	add	sp, #96	; 0x60
90011886:	ecbd 8b04 	vpop	{d8-d9}
9001188a:	bd70      	pop	{r4, r5, r6, pc}
9001188c:	eef0 6a47 	vmov.f32	s13, s14
90011890:	ee18 3a10 	vmov	r3, s16
90011894:	eef0 5a69 	vmov.f32	s11, s19
90011898:	eeb0 6a48 	vmov.f32	s12, s16
9001189c:	e7c5      	b.n	9001182a <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x86>
9001189e:	bf00      	nop
900118a0:	00000000 	.word	0x00000000
900118a4:	42c80000 	.word	0x42c80000
900118a8:	24023574 	.word	0x24023574

900118ac <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
900118ac:	2000      	movs	r0, #0
900118ae:	4770      	bx	lr

900118b0 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
900118b0:	4b07      	ldr	r3, [pc, #28]	; (900118d0 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
900118b2:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
900118b4:	881b      	ldrh	r3, [r3, #0]
900118b6:	4293      	cmp	r3, r2
900118b8:	bf81      	itttt	hi
900118ba:	4b06      	ldrhi	r3, [pc, #24]	; (900118d4 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
900118bc:	681b      	ldrhi	r3, [r3, #0]
900118be:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
900118c2:	7858      	ldrbhi	r0, [r3, #1]
900118c4:	bf8c      	ite	hi
900118c6:	f000 0003 	andhi.w	r0, r0, #3
900118ca:	2000      	movls	r0, #0
900118cc:	4770      	bx	lr
900118ce:	bf00      	nop
900118d0:	240235d8 	.word	0x240235d8
900118d4:	240235d4 	.word	0x240235d4

900118d8 <_ZN8touchgfx8TextAreaD1Ev>:
900118d8:	4770      	bx	lr
	...

900118dc <_ZNK8touchgfx8TextArea13getTextHeightEv>:
900118dc:	4b11      	ldr	r3, [pc, #68]	; (90011924 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
900118de:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900118e2:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
900118e4:	4604      	mov	r4, r0
900118e6:	881b      	ldrh	r3, [r3, #0]
900118e8:	428b      	cmp	r3, r1
900118ea:	d918      	bls.n	9001191e <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
900118ec:	6803      	ldr	r3, [r0, #0]
900118ee:	6f9d      	ldr	r5, [r3, #120]	; 0x78
900118f0:	4b0d      	ldr	r3, [pc, #52]	; (90011928 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
900118f2:	6818      	ldr	r0, [r3, #0]
900118f4:	f7f2 fefe 	bl	900046f4 <_ZNK8touchgfx5Texts7getTextEt>
900118f8:	6823      	ldr	r3, [r4, #0]
900118fa:	4606      	mov	r6, r0
900118fc:	4620      	mov	r0, r4
900118fe:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
90011900:	4798      	blx	r3
90011902:	6823      	ldr	r3, [r4, #0]
90011904:	4607      	mov	r7, r0
90011906:	4620      	mov	r0, r4
90011908:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
9001190c:	4798      	blx	r3
9001190e:	463a      	mov	r2, r7
90011910:	4603      	mov	r3, r0
90011912:	4631      	mov	r1, r6
90011914:	4620      	mov	r0, r4
90011916:	46ac      	mov	ip, r5
90011918:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
9001191c:	4760      	bx	ip
9001191e:	2000      	movs	r0, #0
90011920:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90011924:	240235d8 	.word	0x240235d8
90011928:	240235e0 	.word	0x240235e0

9001192c <_ZNK8touchgfx8TextArea12getTextWidthEv>:
9001192c:	4b18      	ldr	r3, [pc, #96]	; (90011990 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
9001192e:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
90011932:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
90011934:	4604      	mov	r4, r0
90011936:	881b      	ldrh	r3, [r3, #0]
90011938:	428b      	cmp	r3, r1
9001193a:	d926      	bls.n	9001198a <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
9001193c:	4b15      	ldr	r3, [pc, #84]	; (90011994 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
9001193e:	681b      	ldr	r3, [r3, #0]
90011940:	eb03 0241 	add.w	r2, r3, r1, lsl #1
90011944:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
90011948:	4b13      	ldr	r3, [pc, #76]	; (90011998 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
9001194a:	7855      	ldrb	r5, [r2, #1]
9001194c:	681b      	ldr	r3, [r3, #0]
9001194e:	f3c5 0581 	ubfx	r5, r5, #2, #2
90011952:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
90011956:	6833      	ldr	r3, [r6, #0]
90011958:	69df      	ldr	r7, [r3, #28]
9001195a:	4b10      	ldr	r3, [pc, #64]	; (9001199c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
9001195c:	6818      	ldr	r0, [r3, #0]
9001195e:	f7f2 fec9 	bl	900046f4 <_ZNK8touchgfx5Texts7getTextEt>
90011962:	6823      	ldr	r3, [r4, #0]
90011964:	4680      	mov	r8, r0
90011966:	4620      	mov	r0, r4
90011968:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
9001196a:	4798      	blx	r3
9001196c:	6823      	ldr	r3, [r4, #0]
9001196e:	4681      	mov	r9, r0
90011970:	4620      	mov	r0, r4
90011972:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
90011976:	4798      	blx	r3
90011978:	464b      	mov	r3, r9
9001197a:	9000      	str	r0, [sp, #0]
9001197c:	4642      	mov	r2, r8
9001197e:	4629      	mov	r1, r5
90011980:	4630      	mov	r0, r6
90011982:	47b8      	blx	r7
90011984:	b003      	add	sp, #12
90011986:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9001198a:	2000      	movs	r0, #0
9001198c:	e7fa      	b.n	90011984 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
9001198e:	bf00      	nop
90011990:	240235d8 	.word	0x240235d8
90011994:	240235d4 	.word	0x240235d4
90011998:	240235dc 	.word	0x240235dc
9001199c:	240235e0 	.word	0x240235e0

900119a0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
900119a0:	b40e      	push	{r1, r2, r3}
900119a2:	4b30      	ldr	r3, [pc, #192]	; (90011a64 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
900119a4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900119a8:	881a      	ldrh	r2, [r3, #0]
900119aa:	b09d      	sub	sp, #116	; 0x74
900119ac:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
900119ae:	4604      	mov	r4, r0
900119b0:	429a      	cmp	r2, r3
900119b2:	d954      	bls.n	90011a5e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
900119b4:	aa26      	add	r2, sp, #152	; 0x98
900119b6:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 90011a68 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
900119ba:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 90011a6c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
900119be:	9202      	str	r2, [sp, #8]
900119c0:	f8d9 2000 	ldr.w	r2, [r9]
900119c4:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
900119c8:	f8d8 3000 	ldr.w	r3, [r8]
900119cc:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
900119d0:	682b      	ldr	r3, [r5, #0]
900119d2:	4628      	mov	r0, r5
900119d4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
900119d6:	4798      	blx	r3
900119d8:	4606      	mov	r6, r0
900119da:	b207      	sxth	r7, r0
900119dc:	a803      	add	r0, sp, #12
900119de:	f004 feee 	bl	900167be <_ZN8touchgfx12TextProviderC1Ev>
900119e2:	682b      	ldr	r3, [r5, #0]
900119e4:	4628      	mov	r0, r5
900119e6:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
900119e8:	4798      	blx	r3
900119ea:	682b      	ldr	r3, [r5, #0]
900119ec:	4682      	mov	sl, r0
900119ee:	4628      	mov	r0, r5
900119f0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
900119f2:	4798      	blx	r3
900119f4:	4653      	mov	r3, sl
900119f6:	9000      	str	r0, [sp, #0]
900119f8:	a803      	add	r0, sp, #12
900119fa:	9a02      	ldr	r2, [sp, #8]
900119fc:	9925      	ldr	r1, [sp, #148]	; 0x94
900119fe:	f004 ff39 	bl	90016874 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90011a02:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
90011a04:	f8d9 3000 	ldr.w	r3, [r9]
90011a08:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
90011a0c:	8925      	ldrh	r5, [r4, #8]
90011a0e:	eb03 0142 	add.w	r1, r3, r2, lsl #1
90011a12:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
90011a16:	eba5 050c 	sub.w	r5, r5, ip
90011a1a:	784a      	ldrb	r2, [r1, #1]
90011a1c:	f8d8 3000 	ldr.w	r3, [r8]
90011a20:	b22d      	sxth	r5, r5
90011a22:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
90011a26:	f3c2 0281 	ubfx	r2, r2, #2, #2
90011a2a:	9500      	str	r5, [sp, #0]
90011a2c:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
90011a30:	a803      	add	r0, sp, #12
90011a32:	f002 fc61 	bl	900142f8 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
90011a36:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
90011a3a:	b203      	sxth	r3, r0
90011a3c:	18b9      	adds	r1, r7, r2
90011a3e:	2900      	cmp	r1, #0
90011a40:	dd0b      	ble.n	90011a5a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
90011a42:	3b01      	subs	r3, #1
90011a44:	fb13 f302 	smulbb	r3, r3, r2
90011a48:	fb16 3300 	smlabb	r3, r6, r0, r3
90011a4c:	b21f      	sxth	r7, r3
90011a4e:	4638      	mov	r0, r7
90011a50:	b01d      	add	sp, #116	; 0x74
90011a52:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90011a56:	b003      	add	sp, #12
90011a58:	4770      	bx	lr
90011a5a:	2b00      	cmp	r3, #0
90011a5c:	dcf7      	bgt.n	90011a4e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
90011a5e:	2700      	movs	r7, #0
90011a60:	e7f5      	b.n	90011a4e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
90011a62:	bf00      	nop
90011a64:	240235d8 	.word	0x240235d8
90011a68:	240235d4 	.word	0x240235d4
90011a6c:	240235dc 	.word	0x240235dc

90011a70 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
90011a70:	4bbd      	ldr	r3, [pc, #756]	; (90011d68 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
90011a72:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90011a76:	460c      	mov	r4, r1
90011a78:	881b      	ldrh	r3, [r3, #0]
90011a7a:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
90011a7c:	b0a9      	sub	sp, #164	; 0xa4
90011a7e:	4680      	mov	r8, r0
90011a80:	428b      	cmp	r3, r1
90011a82:	d809      	bhi.n	90011a98 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
90011a84:	2300      	movs	r3, #0
90011a86:	f04f 32ff 	mov.w	r2, #4294967295
90011a8a:	6083      	str	r3, [r0, #8]
90011a8c:	e9c0 3200 	strd	r3, r2, [r0]
90011a90:	4640      	mov	r0, r8
90011a92:	b029      	add	sp, #164	; 0xa4
90011a94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90011a98:	4eb4      	ldr	r6, [pc, #720]	; (90011d6c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
90011a9a:	6833      	ldr	r3, [r6, #0]
90011a9c:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
90011aa0:	4bb3      	ldr	r3, [pc, #716]	; (90011d70 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
90011aa2:	681b      	ldr	r3, [r3, #0]
90011aa4:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
90011aa8:	4bb2      	ldr	r3, [pc, #712]	; (90011d74 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
90011aaa:	6818      	ldr	r0, [r3, #0]
90011aac:	f7f2 fe22 	bl	900046f4 <_ZNK8touchgfx5Texts7getTextEt>
90011ab0:	682b      	ldr	r3, [r5, #0]
90011ab2:	4681      	mov	r9, r0
90011ab4:	4628      	mov	r0, r5
90011ab6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90011ab8:	4798      	blx	r3
90011aba:	8ea7      	ldrh	r7, [r4, #52]	; 0x34
90011abc:	b203      	sxth	r3, r0
90011abe:	4682      	mov	sl, r0
90011ac0:	4407      	add	r7, r0
90011ac2:	a80f      	add	r0, sp, #60	; 0x3c
90011ac4:	9304      	str	r3, [sp, #16]
90011ac6:	b2bb      	uxth	r3, r7
90011ac8:	9303      	str	r3, [sp, #12]
90011aca:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
90011ace:	2b00      	cmp	r3, #0
90011ad0:	f040 80a5 	bne.w	90011c1e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1ae>
90011ad4:	f004 fe73 	bl	900167be <_ZN8touchgfx12TextProviderC1Ev>
90011ad8:	682b      	ldr	r3, [r5, #0]
90011ada:	4628      	mov	r0, r5
90011adc:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
90011ade:	4798      	blx	r3
90011ae0:	682b      	ldr	r3, [r5, #0]
90011ae2:	4606      	mov	r6, r0
90011ae4:	4628      	mov	r0, r5
90011ae6:	6d1b      	ldr	r3, [r3, #80]	; 0x50
90011ae8:	4798      	blx	r3
90011aea:	6823      	ldr	r3, [r4, #0]
90011aec:	4607      	mov	r7, r0
90011aee:	4620      	mov	r0, r4
90011af0:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
90011af2:	4798      	blx	r3
90011af4:	6823      	ldr	r3, [r4, #0]
90011af6:	4683      	mov	fp, r0
90011af8:	4620      	mov	r0, r4
90011afa:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
90011afe:	4798      	blx	r3
90011b00:	463b      	mov	r3, r7
90011b02:	4649      	mov	r1, r9
90011b04:	4632      	mov	r2, r6
90011b06:	2600      	movs	r6, #0
90011b08:	e9cd b000 	strd	fp, r0, [sp]
90011b0c:	a80f      	add	r0, sp, #60	; 0x3c
90011b0e:	4637      	mov	r7, r6
90011b10:	f004 fec5 	bl	9001689e <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
90011b14:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
90011b18:	f8df b250 	ldr.w	fp, [pc, #592]	; 90011d6c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
90011b1c:	f013 0ffd 	tst.w	r3, #253	; 0xfd
90011b20:	bf0c      	ite	eq
90011b22:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
90011b26:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
90011b2a:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
90011b2c:	4629      	mov	r1, r5
90011b2e:	f8db 3000 	ldr.w	r3, [fp]
90011b32:	a80f      	add	r0, sp, #60	; 0x3c
90011b34:	3701      	adds	r7, #1
90011b36:	eb03 0342 	add.w	r3, r3, r2, lsl #1
90011b3a:	f647 72ff 	movw	r2, #32767	; 0x7fff
90011b3e:	b2bf      	uxth	r7, r7
90011b40:	785b      	ldrb	r3, [r3, #1]
90011b42:	f3c3 0381 	ubfx	r3, r3, #2, #2
90011b46:	f002 f8de 	bl	90013d06 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
90011b4a:	9b03      	ldr	r3, [sp, #12]
90011b4c:	4286      	cmp	r6, r0
90011b4e:	eba9 0903 	sub.w	r9, r9, r3
90011b52:	bfb8      	it	lt
90011b54:	4606      	movlt	r6, r0
90011b56:	a80f      	add	r0, sp, #60	; 0x3c
90011b58:	fa0f f989 	sxth.w	r9, r9
90011b5c:	b236      	sxth	r6, r6
90011b5e:	f004 fe55 	bl	9001680c <_ZN8touchgfx12TextProvider11endOfStringEv>
90011b62:	b918      	cbnz	r0, 90011b6c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
90011b64:	7a2b      	ldrb	r3, [r5, #8]
90011b66:	444b      	add	r3, r9
90011b68:	2b00      	cmp	r3, #0
90011b6a:	dcde      	bgt.n	90011b2a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xba>
90011b6c:	9b03      	ldr	r3, [sp, #12]
90011b6e:	4620      	mov	r0, r4
90011b70:	9a04      	ldr	r2, [sp, #16]
90011b72:	fb13 f707 	smulbb	r7, r3, r7
90011b76:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
90011b78:	f895 9009 	ldrb.w	r9, [r5, #9]
90011b7c:	1aff      	subs	r7, r7, r3
90011b7e:	b2bf      	uxth	r7, r7
90011b80:	b23b      	sxth	r3, r7
90011b82:	429a      	cmp	r2, r3
90011b84:	bfa8      	it	ge
90011b86:	4657      	movge	r7, sl
90011b88:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
90011b8c:	f013 0ffd 	tst.w	r3, #253	; 0xfd
90011b90:	6823      	ldr	r3, [r4, #0]
90011b92:	444f      	add	r7, r9
90011b94:	6edb      	ldr	r3, [r3, #108]	; 0x6c
90011b96:	bf08      	it	eq
90011b98:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
90011b9c:	fa1f f987 	uxth.w	r9, r7
90011ba0:	bf18      	it	ne
90011ba2:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
90011ba6:	4798      	blx	r3
90011ba8:	2801      	cmp	r0, #1
90011baa:	fa0f f789 	sxth.w	r7, r9
90011bae:	b2b3      	uxth	r3, r6
90011bb0:	f000 80e2 	beq.w	90011d78 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
90011bb4:	2802      	cmp	r0, #2
90011bb6:	f894 6037 	ldrb.w	r6, [r4, #55]	; 0x37
90011bba:	f000 80e3 	beq.w	90011d84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
90011bbe:	7aea      	ldrb	r2, [r5, #11]
90011bc0:	b236      	sxth	r6, r6
90011bc2:	7b2d      	ldrb	r5, [r5, #12]
90011bc4:	1ab6      	subs	r6, r6, r2
90011bc6:	442a      	add	r2, r5
90011bc8:	fa1f fa86 	uxth.w	sl, r6
90011bcc:	4413      	add	r3, r2
90011bce:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
90011bd2:	fa0f fb8a 	sxth.w	fp, sl
90011bd6:	b29b      	uxth	r3, r3
90011bd8:	2a02      	cmp	r2, #2
90011bda:	b21e      	sxth	r6, r3
90011bdc:	f000 80d6 	beq.w	90011d8c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
90011be0:	2a03      	cmp	r2, #3
90011be2:	f000 80de 	beq.w	90011da2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
90011be6:	2a01      	cmp	r2, #1
90011be8:	f040 80e6 	bne.w	90011db8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
90011bec:	8925      	ldrh	r5, [r4, #8]
90011bee:	4633      	mov	r3, r6
90011bf0:	463e      	mov	r6, r7
90011bf2:	eba5 0909 	sub.w	r9, r5, r9
90011bf6:	461f      	mov	r7, r3
90011bf8:	465d      	mov	r5, fp
90011bfa:	fa0f fb89 	sxth.w	fp, r9
90011bfe:	4b5d      	ldr	r3, [pc, #372]	; (90011d74 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
90011c00:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
90011c02:	6818      	ldr	r0, [r3, #0]
90011c04:	f7f2 fd76 	bl	900046f4 <_ZNK8touchgfx5Texts7getTextEt>
90011c08:	f8a8 b000 	strh.w	fp, [r8]
90011c0c:	f8a8 5002 	strh.w	r5, [r8, #2]
90011c10:	f8a8 6004 	strh.w	r6, [r8, #4]
90011c14:	f8a8 7006 	strh.w	r7, [r8, #6]
90011c18:	f8c8 0008 	str.w	r0, [r8, #8]
90011c1c:	e738      	b.n	90011a90 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
90011c1e:	f004 fdce 	bl	900167be <_ZN8touchgfx12TextProviderC1Ev>
90011c22:	682b      	ldr	r3, [r5, #0]
90011c24:	4628      	mov	r0, r5
90011c26:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
90011c28:	4798      	blx	r3
90011c2a:	682b      	ldr	r3, [r5, #0]
90011c2c:	4607      	mov	r7, r0
90011c2e:	4628      	mov	r0, r5
90011c30:	6d1b      	ldr	r3, [r3, #80]	; 0x50
90011c32:	4798      	blx	r3
90011c34:	6823      	ldr	r3, [r4, #0]
90011c36:	4683      	mov	fp, r0
90011c38:	4620      	mov	r0, r4
90011c3a:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
90011c3c:	4798      	blx	r3
90011c3e:	6822      	ldr	r2, [r4, #0]
90011c40:	9005      	str	r0, [sp, #20]
90011c42:	4620      	mov	r0, r4
90011c44:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
90011c48:	4790      	blx	r2
90011c4a:	9b05      	ldr	r3, [sp, #20]
90011c4c:	463a      	mov	r2, r7
90011c4e:	4649      	mov	r1, r9
90011c50:	9001      	str	r0, [sp, #4]
90011c52:	a80f      	add	r0, sp, #60	; 0x3c
90011c54:	9300      	str	r3, [sp, #0]
90011c56:	465b      	mov	r3, fp
90011c58:	f004 fe21 	bl	9001689e <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
90011c5c:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
90011c60:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
90011c64:	af0f      	add	r7, sp, #60	; 0x3c
90011c66:	f013 0ffd 	tst.w	r3, #253	; 0xfd
90011c6a:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
90011c6e:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
90011c70:	bf0a      	itet	eq
90011c72:	464a      	moveq	r2, r9
90011c74:	461a      	movne	r2, r3
90011c76:	4699      	moveq	r9, r3
90011c78:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
90011c7c:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
90011c80:	1ad2      	subs	r2, r2, r3
90011c82:	6833      	ldr	r3, [r6, #0]
90011c84:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	; 0x34
90011c88:	eb03 0341 	add.w	r3, r3, r1, lsl #1
90011c8c:	7859      	ldrb	r1, [r3, #1]
90011c8e:	2300      	movs	r3, #0
90011c90:	9707      	str	r7, [sp, #28]
90011c92:	f3c1 0181 	ubfx	r1, r1, #2, #2
90011c96:	f8ad 3018 	strh.w	r3, [sp, #24]
90011c9a:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
90011c9e:	f88d 1020 	strb.w	r1, [sp, #32]
90011ca2:	9509      	str	r5, [sp, #36]	; 0x24
90011ca4:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
90011ca8:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
90011cac:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
90011cb0:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
90011cb4:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
90011cb8:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
90011cbc:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
90011cc0:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
90011cc4:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
90011cc8:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
90011ccc:	b350      	cbz	r0, 90011d24 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
90011cce:	682b      	ldr	r3, [r5, #0]
90011cd0:	4628      	mov	r0, r5
90011cd2:	695b      	ldr	r3, [r3, #20]
90011cd4:	4798      	blx	r3
90011cd6:	4607      	mov	r7, r0
90011cd8:	b320      	cbz	r0, 90011d24 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
90011cda:	9809      	ldr	r0, [sp, #36]	; 0x24
90011cdc:	4639      	mov	r1, r7
90011cde:	6803      	ldr	r3, [r0, #0]
90011ce0:	68db      	ldr	r3, [r3, #12]
90011ce2:	4798      	blx	r3
90011ce4:	4606      	mov	r6, r0
90011ce6:	b1e8      	cbz	r0, 90011d24 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
90011ce8:	7b43      	ldrb	r3, [r0, #13]
90011cea:	7a82      	ldrb	r2, [r0, #10]
90011cec:	005b      	lsls	r3, r3, #1
90011cee:	f403 7380 	and.w	r3, r3, #256	; 0x100
90011cf2:	4313      	orrs	r3, r2
90011cf4:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
90011cf8:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
90011cfc:	2b06      	cmp	r3, #6
90011cfe:	d111      	bne.n	90011d24 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
90011d00:	9809      	ldr	r0, [sp, #36]	; 0x24
90011d02:	4632      	mov	r2, r6
90011d04:	4639      	mov	r1, r7
90011d06:	6803      	ldr	r3, [r0, #0]
90011d08:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90011d0a:	4798      	blx	r3
90011d0c:	7b73      	ldrb	r3, [r6, #13]
90011d0e:	005b      	lsls	r3, r3, #1
90011d10:	f403 7280 	and.w	r2, r3, #256	; 0x100
90011d14:	7ab3      	ldrb	r3, [r6, #10]
90011d16:	4313      	orrs	r3, r2
90011d18:	4418      	add	r0, r3
90011d1a:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
90011d1e:	4418      	add	r0, r3
90011d20:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
90011d24:	2600      	movs	r6, #0
90011d26:	4637      	mov	r7, r6
90011d28:	a806      	add	r0, sp, #24
90011d2a:	3701      	adds	r7, #1
90011d2c:	f002 f9e1 	bl	900140f2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
90011d30:	f8bd 0036 	ldrh.w	r0, [sp, #54]	; 0x36
90011d34:	9b03      	ldr	r3, [sp, #12]
90011d36:	b2bf      	uxth	r7, r7
90011d38:	4286      	cmp	r6, r0
90011d3a:	eba9 0903 	sub.w	r9, r9, r3
90011d3e:	f8bd 3018 	ldrh.w	r3, [sp, #24]
90011d42:	bfb8      	it	lt
90011d44:	4606      	movlt	r6, r0
90011d46:	fa0f f989 	sxth.w	r9, r9
90011d4a:	b236      	sxth	r6, r6
90011d4c:	2b00      	cmp	r3, #0
90011d4e:	f43f af0d 	beq.w	90011b6c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
90011d52:	f89d 303a 	ldrb.w	r3, [sp, #58]	; 0x3a
90011d56:	2b00      	cmp	r3, #0
90011d58:	f47f af08 	bne.w	90011b6c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
90011d5c:	7a2b      	ldrb	r3, [r5, #8]
90011d5e:	444b      	add	r3, r9
90011d60:	2b00      	cmp	r3, #0
90011d62:	dce1      	bgt.n	90011d28 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b8>
90011d64:	e702      	b.n	90011b6c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
90011d66:	bf00      	nop
90011d68:	240235d8 	.word	0x240235d8
90011d6c:	240235d4 	.word	0x240235d4
90011d70:	240235dc 	.word	0x240235dc
90011d74:	240235e0 	.word	0x240235e0
90011d78:	ebaa 0606 	sub.w	r6, sl, r6
90011d7c:	2002      	movs	r0, #2
90011d7e:	fb96 f6f0 	sdiv	r6, r6, r0
90011d82:	e71c      	b.n	90011bbe <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14e>
90011d84:	441e      	add	r6, r3
90011d86:	ebaa 0606 	sub.w	r6, sl, r6
90011d8a:	e718      	b.n	90011bbe <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14e>
90011d8c:	8925      	ldrh	r5, [r4, #8]
90011d8e:	1aed      	subs	r5, r5, r3
90011d90:	eba5 050a 	sub.w	r5, r5, sl
90011d94:	fa0f fb85 	sxth.w	fp, r5
90011d98:	8965      	ldrh	r5, [r4, #10]
90011d9a:	eba5 0509 	sub.w	r5, r5, r9
90011d9e:	b22d      	sxth	r5, r5
90011da0:	e72d      	b.n	90011bfe <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>
90011da2:	8965      	ldrh	r5, [r4, #10]
90011da4:	f04f 0b00 	mov.w	fp, #0
90011da8:	1aed      	subs	r5, r5, r3
90011daa:	4633      	mov	r3, r6
90011dac:	463e      	mov	r6, r7
90011dae:	eba5 050a 	sub.w	r5, r5, sl
90011db2:	461f      	mov	r7, r3
90011db4:	b22d      	sxth	r5, r5
90011db6:	e722      	b.n	90011bfe <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>
90011db8:	2500      	movs	r5, #0
90011dba:	e720      	b.n	90011bfe <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>

90011dbc <_ZN8touchgfx8TextAreaD0Ev>:
90011dbc:	b510      	push	{r4, lr}
90011dbe:	4604      	mov	r4, r0
90011dc0:	2148      	movs	r1, #72	; 0x48
90011dc2:	f014 f896 	bl	90025ef2 <_ZdlPvj>
90011dc6:	4620      	mov	r0, r4
90011dc8:	bd10      	pop	{r4, pc}
	...

90011dcc <_ZNK8touchgfx8TextArea17invalidateContentEv>:
90011dcc:	b513      	push	{r0, r1, r4, lr}
90011dce:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
90011dd2:	4604      	mov	r4, r0
90011dd4:	b1fb      	cbz	r3, 90011e16 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
90011dd6:	4b16      	ldr	r3, [pc, #88]	; (90011e30 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
90011dd8:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
90011dda:	881b      	ldrh	r3, [r3, #0]
90011ddc:	428b      	cmp	r3, r1
90011dde:	d91a      	bls.n	90011e16 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
90011de0:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
90011de4:	2b00      	cmp	r3, #0
90011de6:	dd16      	ble.n	90011e16 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
90011de8:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
90011dec:	2b00      	cmp	r3, #0
90011dee:	dd12      	ble.n	90011e16 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
90011df0:	4b10      	ldr	r3, [pc, #64]	; (90011e34 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
90011df2:	6818      	ldr	r0, [r3, #0]
90011df4:	f7f2 fc7e 	bl	900046f4 <_ZNK8touchgfx5Texts7getTextEt>
90011df8:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
90011dfc:	6822      	ldr	r2, [r4, #0]
90011dfe:	2b00      	cmp	r3, #0
90011e00:	db06      	blt.n	90011e10 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
90011e02:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
90011e06:	2b00      	cmp	r3, #0
90011e08:	db02      	blt.n	90011e10 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
90011e0a:	6c63      	ldr	r3, [r4, #68]	; 0x44
90011e0c:	4298      	cmp	r0, r3
90011e0e:	d004      	beq.n	90011e1a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
90011e10:	6953      	ldr	r3, [r2, #20]
90011e12:	4620      	mov	r0, r4
90011e14:	4798      	blx	r3
90011e16:	b002      	add	sp, #8
90011e18:	bd10      	pop	{r4, pc}
90011e1a:	f104 013c 	add.w	r1, r4, #60	; 0x3c
90011e1e:	466b      	mov	r3, sp
90011e20:	6912      	ldr	r2, [r2, #16]
90011e22:	c903      	ldmia	r1, {r0, r1}
90011e24:	e883 0003 	stmia.w	r3, {r0, r1}
90011e28:	4619      	mov	r1, r3
90011e2a:	4620      	mov	r0, r4
90011e2c:	4790      	blx	r2
90011e2e:	e7f2      	b.n	90011e16 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
90011e30:	240235d8 	.word	0x240235d8
90011e34:	240235e0 	.word	0x240235e0

90011e38 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
90011e38:	4b45      	ldr	r3, [pc, #276]	; (90011f50 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
90011e3a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90011e3e:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
90011e40:	b08e      	sub	sp, #56	; 0x38
90011e42:	881b      	ldrh	r3, [r3, #0]
90011e44:	4604      	mov	r4, r0
90011e46:	4293      	cmp	r3, r2
90011e48:	d97e      	bls.n	90011f48 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
90011e4a:	6808      	ldr	r0, [r1, #0]
90011e4c:	ab05      	add	r3, sp, #20
90011e4e:	6849      	ldr	r1, [r1, #4]
90011e50:	4d40      	ldr	r5, [pc, #256]	; (90011f54 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
90011e52:	c303      	stmia	r3!, {r0, r1}
90011e54:	4611      	mov	r1, r2
90011e56:	6828      	ldr	r0, [r5, #0]
90011e58:	f7f2 fc4c 	bl	900046f4 <_ZNK8touchgfx5Texts7getTextEt>
90011e5c:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
90011e60:	2b00      	cmp	r3, #0
90011e62:	db11      	blt.n	90011e88 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
90011e64:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
90011e68:	2b00      	cmp	r3, #0
90011e6a:	db0d      	blt.n	90011e88 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
90011e6c:	6c63      	ldr	r3, [r4, #68]	; 0x44
90011e6e:	4298      	cmp	r0, r3
90011e70:	d10a      	bne.n	90011e88 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
90011e72:	f104 023c 	add.w	r2, r4, #60	; 0x3c
90011e76:	ab09      	add	r3, sp, #36	; 0x24
90011e78:	e892 0003 	ldmia.w	r2, {r0, r1}
90011e7c:	e883 0003 	stmia.w	r3, {r0, r1}
90011e80:	4619      	mov	r1, r3
90011e82:	a805      	add	r0, sp, #20
90011e84:	f7fd ffc8 	bl	9000fe18 <_ZN8touchgfx4RectaNERKS0_>
90011e88:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
90011e8c:	2b00      	cmp	r3, #0
90011e8e:	dd5b      	ble.n	90011f48 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
90011e90:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
90011e94:	2b00      	cmp	r3, #0
90011e96:	dd57      	ble.n	90011f48 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
90011e98:	4f2f      	ldr	r7, [pc, #188]	; (90011f58 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
90011e9a:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
90011e9c:	683b      	ldr	r3, [r7, #0]
90011e9e:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
90011ea2:	4b2e      	ldr	r3, [pc, #184]	; (90011f5c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
90011ea4:	681b      	ldr	r3, [r3, #0]
90011ea6:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
90011eaa:	2e00      	cmp	r6, #0
90011eac:	d04c      	beq.n	90011f48 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
90011eae:	6823      	ldr	r3, [r4, #0]
90011eb0:	4620      	mov	r0, r4
90011eb2:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
90011eb6:	6edb      	ldr	r3, [r3, #108]	; 0x6c
90011eb8:	4798      	blx	r3
90011eba:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
90011ebc:	683b      	ldr	r3, [r7, #0]
90011ebe:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
90011ec2:	eb03 0342 	add.w	r3, r3, r2, lsl #1
90011ec6:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
90011eca:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
90011ece:	785b      	ldrb	r3, [r3, #1]
90011ed0:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
90011ed4:	f3c3 0381 	ubfx	r3, r3, #2, #2
90011ed8:	6b21      	ldr	r1, [r4, #48]	; 0x30
90011eda:	9609      	str	r6, [sp, #36]	; 0x24
90011edc:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
90011ee0:	4b1f      	ldr	r3, [pc, #124]	; (90011f60 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
90011ee2:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
90011ee6:	681b      	ldr	r3, [r3, #0]
90011ee8:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
90011eec:	910b      	str	r1, [sp, #44]	; 0x2c
90011eee:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
90011ef2:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
90011ef6:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
90011efa:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
90011efe:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
90011f02:	b10a      	cbz	r2, 90011f08 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
90011f04:	6cde      	ldr	r6, [r3, #76]	; 0x4c
90011f06:	b906      	cbnz	r6, 90011f0a <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
90011f08:	689e      	ldr	r6, [r3, #8]
90011f0a:	af07      	add	r7, sp, #28
90011f0c:	4621      	mov	r1, r4
90011f0e:	4638      	mov	r0, r7
90011f10:	f003 ffb6 	bl	90015e80 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90011f14:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
90011f16:	6828      	ldr	r0, [r5, #0]
90011f18:	f7f2 fbec 	bl	900046f4 <_ZNK8touchgfx5Texts7getTextEt>
90011f1c:	6823      	ldr	r3, [r4, #0]
90011f1e:	4605      	mov	r5, r0
90011f20:	4620      	mov	r0, r4
90011f22:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
90011f24:	4798      	blx	r3
90011f26:	6823      	ldr	r3, [r4, #0]
90011f28:	4680      	mov	r8, r0
90011f2a:	4620      	mov	r0, r4
90011f2c:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
90011f30:	4798      	blx	r3
90011f32:	ab09      	add	r3, sp, #36	; 0x24
90011f34:	9501      	str	r5, [sp, #4]
90011f36:	9300      	str	r3, [sp, #0]
90011f38:	ab05      	add	r3, sp, #20
90011f3a:	e9cd 8002 	strd	r8, r0, [sp, #8]
90011f3e:	4630      	mov	r0, r6
90011f40:	e897 0006 	ldmia.w	r7, {r1, r2}
90011f44:	f7f2 fb86 	bl	90004654 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
90011f48:	b00e      	add	sp, #56	; 0x38
90011f4a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90011f4e:	bf00      	nop
90011f50:	240235d8 	.word	0x240235d8
90011f54:	240235e0 	.word	0x240235e0
90011f58:	240235d4 	.word	0x240235d4
90011f5c:	240235dc 	.word	0x240235dc
90011f60:	2402357c 	.word	0x2402357c

90011f64 <_ZN8touchgfx8Drawable14setWidthHeightEss>:
90011f64:	b570      	push	{r4, r5, r6, lr}
90011f66:	6803      	ldr	r3, [r0, #0]
90011f68:	4604      	mov	r4, r0
90011f6a:	4615      	mov	r5, r2
90011f6c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90011f6e:	4798      	blx	r3
90011f70:	6823      	ldr	r3, [r4, #0]
90011f72:	4629      	mov	r1, r5
90011f74:	4620      	mov	r0, r4
90011f76:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90011f78:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90011f7c:	4718      	bx	r3
	...

90011f80 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
90011f80:	b538      	push	{r3, r4, r5, lr}
90011f82:	4b0e      	ldr	r3, [pc, #56]	; (90011fbc <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
90011f84:	4604      	mov	r4, r0
90011f86:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
90011f88:	881b      	ldrh	r3, [r3, #0]
90011f8a:	429a      	cmp	r2, r3
90011f8c:	d214      	bcs.n	90011fb8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
90011f8e:	6803      	ldr	r3, [r0, #0]
90011f90:	6f5b      	ldr	r3, [r3, #116]	; 0x74
90011f92:	4798      	blx	r3
90011f94:	6823      	ldr	r3, [r4, #0]
90011f96:	4605      	mov	r5, r0
90011f98:	4620      	mov	r0, r4
90011f9a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
90011f9c:	4798      	blx	r3
90011f9e:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
90011fa2:	b22d      	sxth	r5, r5
90011fa4:	4601      	mov	r1, r0
90011fa6:	f013 0ffd 	tst.w	r3, #253	; 0xfd
90011faa:	bf06      	itte	eq
90011fac:	4602      	moveq	r2, r0
90011fae:	4629      	moveq	r1, r5
90011fb0:	462a      	movne	r2, r5
90011fb2:	4620      	mov	r0, r4
90011fb4:	f7ff ffd6 	bl	90011f64 <_ZN8touchgfx8Drawable14setWidthHeightEss>
90011fb8:	bd38      	pop	{r3, r4, r5, pc}
90011fba:	bf00      	nop
90011fbc:	240235d8 	.word	0x240235d8

90011fc0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
90011fc0:	b530      	push	{r4, r5, lr}
90011fc2:	888b      	ldrh	r3, [r1, #4]
90011fc4:	b085      	sub	sp, #20
90011fc6:	4604      	mov	r4, r0
90011fc8:	8583      	strh	r3, [r0, #44]	; 0x2c
90011fca:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
90011fce:	b923      	cbnz	r3, 90011fda <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
90011fd0:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
90011fd4:	b90b      	cbnz	r3, 90011fda <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
90011fd6:	f7ff ffd3 	bl	90011f80 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
90011fda:	6823      	ldr	r3, [r4, #0]
90011fdc:	466d      	mov	r5, sp
90011fde:	4621      	mov	r1, r4
90011fe0:	343c      	adds	r4, #60	; 0x3c
90011fe2:	4628      	mov	r0, r5
90011fe4:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
90011fe8:	4798      	blx	r3
90011fea:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90011fee:	e884 0007 	stmia.w	r4, {r0, r1, r2}
90011ff2:	b005      	add	sp, #20
90011ff4:	bd30      	pop	{r4, r5, pc}

90011ff6 <_ZNK8touchgfx3Box12getSolidRectEv>:
90011ff6:	2300      	movs	r3, #0
90011ff8:	8083      	strh	r3, [r0, #4]
90011ffa:	80c3      	strh	r3, [r0, #6]
90011ffc:	8003      	strh	r3, [r0, #0]
90011ffe:	8043      	strh	r3, [r0, #2]
90012000:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
90012004:	2bff      	cmp	r3, #255	; 0xff
90012006:	bf01      	itttt	eq
90012008:	890b      	ldrheq	r3, [r1, #8]
9001200a:	8083      	strheq	r3, [r0, #4]
9001200c:	894b      	ldrheq	r3, [r1, #10]
9001200e:	80c3      	strheq	r3, [r0, #6]
90012010:	4770      	bx	lr
	...

90012014 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
90012014:	b537      	push	{r0, r1, r2, r4, r5, lr}
90012016:	4604      	mov	r4, r0
90012018:	466b      	mov	r3, sp
9001201a:	6808      	ldr	r0, [r1, #0]
9001201c:	6849      	ldr	r1, [r1, #4]
9001201e:	c303      	stmia	r3!, {r0, r1}
90012020:	6823      	ldr	r3, [r4, #0]
90012022:	4669      	mov	r1, sp
90012024:	4620      	mov	r0, r4
90012026:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90012028:	4798      	blx	r3
9001202a:	4b08      	ldr	r3, [pc, #32]	; (9001204c <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
9001202c:	681b      	ldr	r3, [r3, #0]
9001202e:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
90012032:	b10a      	cbz	r2, 90012038 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
90012034:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
90012036:	b900      	cbnz	r0, 9001203a <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
90012038:	6898      	ldr	r0, [r3, #8]
9001203a:	6803      	ldr	r3, [r0, #0]
9001203c:	4669      	mov	r1, sp
9001203e:	6aa2      	ldr	r2, [r4, #40]	; 0x28
90012040:	6a1d      	ldr	r5, [r3, #32]
90012042:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
90012046:	47a8      	blx	r5
90012048:	b003      	add	sp, #12
9001204a:	bd30      	pop	{r4, r5, pc}
9001204c:	2402357c 	.word	0x2402357c

90012050 <_ZN8touchgfx3BoxD1Ev>:
90012050:	4770      	bx	lr

90012052 <_ZN8touchgfx3BoxD0Ev>:
90012052:	b510      	push	{r4, lr}
90012054:	4604      	mov	r4, r0
90012056:	212c      	movs	r1, #44	; 0x2c
90012058:	f013 ff4b 	bl	90025ef2 <_ZdlPvj>
9001205c:	4620      	mov	r0, r4
9001205e:	bd10      	pop	{r4, pc}

90012060 <_ZNK8touchgfx3Box17invalidateContentEv>:
90012060:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
90012064:	b12a      	cbz	r2, 90012072 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
90012066:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
9001206a:	b112      	cbz	r2, 90012072 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
9001206c:	6803      	ldr	r3, [r0, #0]
9001206e:	695b      	ldr	r3, [r3, #20]
90012070:	4718      	bx	r3
90012072:	4770      	bx	lr

90012074 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
90012074:	4b30      	ldr	r3, [pc, #192]	; (90012138 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
90012076:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9001207a:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
9001207c:	b08d      	sub	sp, #52	; 0x34
9001207e:	881b      	ldrh	r3, [r3, #0]
90012080:	4604      	mov	r4, r0
90012082:	460f      	mov	r7, r1
90012084:	4293      	cmp	r3, r2
90012086:	d954      	bls.n	90012132 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
90012088:	4b2c      	ldr	r3, [pc, #176]	; (9001213c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
9001208a:	6819      	ldr	r1, [r3, #0]
9001208c:	eb01 0342 	add.w	r3, r1, r2, lsl #1
90012090:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
90012094:	4a2a      	ldr	r2, [pc, #168]	; (90012140 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
90012096:	6812      	ldr	r2, [r2, #0]
90012098:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
9001209c:	2900      	cmp	r1, #0
9001209e:	d048      	beq.n	90012132 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
900120a0:	785a      	ldrb	r2, [r3, #1]
900120a2:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
900120a6:	f3c2 0801 	ubfx	r8, r2, #0, #2
900120aa:	f3c2 0281 	ubfx	r2, r2, #2, #2
900120ae:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
900120b2:	4b24      	ldr	r3, [pc, #144]	; (90012144 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
900120b4:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
900120b8:	681a      	ldr	r2, [r3, #0]
900120ba:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
900120be:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
900120c2:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
900120c6:	6b26      	ldr	r6, [r4, #48]	; 0x30
900120c8:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
900120cc:	f892 3058 	ldrb.w	r3, [r2, #88]	; 0x58
900120d0:	9107      	str	r1, [sp, #28]
900120d2:	f88d 8020 	strb.w	r8, [sp, #32]
900120d6:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
900120da:	9609      	str	r6, [sp, #36]	; 0x24
900120dc:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
900120e0:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
900120e4:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
900120e8:	b10b      	cbz	r3, 900120ee <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
900120ea:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
900120ec:	b905      	cbnz	r5, 900120f0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
900120ee:	6895      	ldr	r5, [r2, #8]
900120f0:	ae05      	add	r6, sp, #20
900120f2:	4621      	mov	r1, r4
900120f4:	4630      	mov	r0, r6
900120f6:	f003 fec3 	bl	90015e80 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900120fa:	4b13      	ldr	r3, [pc, #76]	; (90012148 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
900120fc:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
900120fe:	6818      	ldr	r0, [r3, #0]
90012100:	f7f2 faf8 	bl	900046f4 <_ZNK8touchgfx5Texts7getTextEt>
90012104:	6823      	ldr	r3, [r4, #0]
90012106:	4680      	mov	r8, r0
90012108:	4620      	mov	r0, r4
9001210a:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
9001210c:	4798      	blx	r3
9001210e:	6823      	ldr	r3, [r4, #0]
90012110:	4681      	mov	r9, r0
90012112:	4620      	mov	r0, r4
90012114:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
90012118:	4798      	blx	r3
9001211a:	ab07      	add	r3, sp, #28
9001211c:	f8cd 8004 	str.w	r8, [sp, #4]
90012120:	9300      	str	r3, [sp, #0]
90012122:	463b      	mov	r3, r7
90012124:	e9cd 9002 	strd	r9, r0, [sp, #8]
90012128:	4628      	mov	r0, r5
9001212a:	e896 0006 	ldmia.w	r6, {r1, r2}
9001212e:	f7f2 fa91 	bl	90004654 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
90012132:	b00d      	add	sp, #52	; 0x34
90012134:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90012138:	240235d8 	.word	0x240235d8
9001213c:	240235d4 	.word	0x240235d4
90012140:	240235dc 	.word	0x240235dc
90012144:	2402357c 	.word	0x2402357c
90012148:	240235e0 	.word	0x240235e0

9001214c <_ZN8touchgfx13BoxWithBorderD1Ev>:
9001214c:	4770      	bx	lr

9001214e <_ZN8touchgfx13BoxWithBorderD0Ev>:
9001214e:	b510      	push	{r4, lr}
90012150:	4604      	mov	r4, r0
90012152:	2134      	movs	r1, #52	; 0x34
90012154:	f013 fecd 	bl	90025ef2 <_ZdlPvj>
90012158:	4620      	mov	r0, r4
9001215a:	bd10      	pop	{r4, pc}

9001215c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE>:
9001215c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90012160:	8e03      	ldrh	r3, [r0, #48]	; 0x30
90012162:	4604      	mov	r4, r0
90012164:	460e      	mov	r6, r1
90012166:	b08e      	sub	sp, #56	; 0x38
90012168:	b218      	sxth	r0, r3
9001216a:	8921      	ldrh	r1, [r4, #8]
9001216c:	005b      	lsls	r3, r3, #1
9001216e:	8962      	ldrh	r2, [r4, #10]
90012170:	f8ad 0000 	strh.w	r0, [sp]
90012174:	b29b      	uxth	r3, r3
90012176:	f8ad 0002 	strh.w	r0, [sp, #2]
9001217a:	1ac9      	subs	r1, r1, r3
9001217c:	1ad3      	subs	r3, r2, r3
9001217e:	b209      	sxth	r1, r1
90012180:	b21b      	sxth	r3, r3
90012182:	2900      	cmp	r1, #0
90012184:	f8ad 1004 	strh.w	r1, [sp, #4]
90012188:	f8ad 3006 	strh.w	r3, [sp, #6]
9001218c:	dd5e      	ble.n	9001224c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
9001218e:	2b00      	cmp	r3, #0
90012190:	dd5c      	ble.n	9001224c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
90012192:	6830      	ldr	r0, [r6, #0]
90012194:	ab02      	add	r3, sp, #8
90012196:	6871      	ldr	r1, [r6, #4]
90012198:	c303      	stmia	r3!, {r0, r1}
9001219a:	4669      	mov	r1, sp
9001219c:	a802      	add	r0, sp, #8
9001219e:	f7fd fe3b 	bl	9000fe18 <_ZN8touchgfx4RectaNERKS0_>
900121a2:	4620      	mov	r0, r4
900121a4:	a902      	add	r1, sp, #8
900121a6:	f7ff ff35 	bl	90012014 <_ZNK8touchgfx3Box4drawERKNS_4RectE>
900121aa:	8e20      	ldrh	r0, [r4, #48]	; 0x30
900121ac:	2800      	cmp	r0, #0
900121ae:	d05f      	beq.n	90012270 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
900121b0:	8963      	ldrh	r3, [r4, #10]
900121b2:	b202      	sxth	r2, r0
900121b4:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
900121b8:	2500      	movs	r5, #0
900121ba:	1a1f      	subs	r7, r3, r0
900121bc:	eba3 0340 	sub.w	r3, r3, r0, lsl #1
900121c0:	f8ad 101c 	strh.w	r1, [sp, #28]
900121c4:	b21b      	sxth	r3, r3
900121c6:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
900121ca:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
900121ce:	af04      	add	r7, sp, #16
900121d0:	1a09      	subs	r1, r1, r0
900121d2:	9506      	str	r5, [sp, #24]
900121d4:	f8ad 201e 	strh.w	r2, [sp, #30]
900121d8:	f8ad 5020 	strh.w	r5, [sp, #32]
900121dc:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
900121e0:	f8ad 5028 	strh.w	r5, [sp, #40]	; 0x28
900121e4:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
900121e8:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
900121ec:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
900121f0:	f8ad 1030 	strh.w	r1, [sp, #48]	; 0x30
900121f4:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
900121f8:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
900121fc:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
90012200:	ab06      	add	r3, sp, #24
90012202:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
90012206:	e893 0003 	ldmia.w	r3, {r0, r1}
9001220a:	e887 0003 	stmia.w	r7, {r0, r1}
9001220e:	4631      	mov	r1, r6
90012210:	4638      	mov	r0, r7
90012212:	f7fd fe01 	bl	9000fe18 <_ZN8touchgfx4RectaNERKS0_>
90012216:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
9001221a:	2b00      	cmp	r3, #0
9001221c:	dd12      	ble.n	90012244 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
9001221e:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
90012222:	2b00      	cmp	r3, #0
90012224:	dd0e      	ble.n	90012244 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
90012226:	6823      	ldr	r3, [r4, #0]
90012228:	4639      	mov	r1, r7
9001222a:	4620      	mov	r0, r4
9001222c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001222e:	4798      	blx	r3
90012230:	f7fe f8d6 	bl	900103e0 <_ZN8touchgfx3HAL3lcdEv>
90012234:	6803      	ldr	r3, [r0, #0]
90012236:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
90012238:	4639      	mov	r1, r7
9001223a:	f8d3 8020 	ldr.w	r8, [r3, #32]
9001223e:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
90012242:	47c0      	blx	r8
90012244:	3501      	adds	r5, #1
90012246:	2d04      	cmp	r5, #4
90012248:	d1da      	bne.n	90012200 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xa4>
9001224a:	e011      	b.n	90012270 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
9001224c:	6830      	ldr	r0, [r6, #0]
9001224e:	ab06      	add	r3, sp, #24
90012250:	6871      	ldr	r1, [r6, #4]
90012252:	c303      	stmia	r3!, {r0, r1}
90012254:	6823      	ldr	r3, [r4, #0]
90012256:	a906      	add	r1, sp, #24
90012258:	4620      	mov	r0, r4
9001225a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001225c:	4798      	blx	r3
9001225e:	f7fe f8bf 	bl	900103e0 <_ZN8touchgfx3HAL3lcdEv>
90012262:	6803      	ldr	r3, [r0, #0]
90012264:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
90012266:	a906      	add	r1, sp, #24
90012268:	6a1d      	ldr	r5, [r3, #32]
9001226a:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
9001226e:	47a8      	blx	r5
90012270:	b00e      	add	sp, #56	; 0x38
90012272:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

90012276 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
90012276:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
9001227a:	4770      	bx	lr

9001227c <_ZNK8touchgfx6Button17invalidateContentEv>:
9001227c:	b508      	push	{r3, lr}
9001227e:	f890 3032 	ldrb.w	r3, [r0, #50]	; 0x32
90012282:	b10b      	cbz	r3, 90012288 <_ZNK8touchgfx6Button17invalidateContentEv+0xc>
90012284:	f7f0 f8b0 	bl	900023e8 <_ZNK8touchgfx8Drawable17invalidateContentEv>
90012288:	bd08      	pop	{r3, pc}

9001228a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_>:
9001228a:	4770      	bx	lr

9001228c <_ZN8touchgfx14ButtonWithIconD1Ev>:
9001228c:	4770      	bx	lr

9001228e <_ZN8touchgfx14ButtonWithIconD0Ev>:
9001228e:	b510      	push	{r4, lr}
90012290:	4604      	mov	r4, r0
90012292:	213c      	movs	r1, #60	; 0x3c
90012294:	f013 fe2d 	bl	90025ef2 <_ZdlPvj>
90012298:	4620      	mov	r0, r4
9001229a:	bd10      	pop	{r4, pc}

9001229c <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>:
9001229c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900122a0:	461c      	mov	r4, r3
900122a2:	4606      	mov	r6, r0
900122a4:	9f06      	ldr	r7, [sp, #24]
900122a6:	f013 fd74 	bl	90025d92 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
900122aa:	8823      	ldrh	r3, [r4, #0]
900122ac:	f04f 0802 	mov.w	r8, #2
900122b0:	f9b6 5008 	ldrsh.w	r5, [r6, #8]
900122b4:	4638      	mov	r0, r7
900122b6:	86b3      	strh	r3, [r6, #52]	; 0x34
900122b8:	883b      	ldrh	r3, [r7, #0]
900122ba:	fb95 f5f8 	sdiv	r5, r5, r8
900122be:	86f3      	strh	r3, [r6, #54]	; 0x36
900122c0:	b2ad      	uxth	r5, r5
900122c2:	f005 fe09 	bl	90017ed8 <_ZNK8touchgfx6Bitmap8getWidthEv>
900122c6:	f9b6 400a 	ldrsh.w	r4, [r6, #10]
900122ca:	fb90 f0f8 	sdiv	r0, r0, r8
900122ce:	1a2d      	subs	r5, r5, r0
900122d0:	4638      	mov	r0, r7
900122d2:	fb94 f4f8 	sdiv	r4, r4, r8
900122d6:	8735      	strh	r5, [r6, #56]	; 0x38
900122d8:	b2a4      	uxth	r4, r4
900122da:	f005 fe31 	bl	90017f40 <_ZNK8touchgfx6Bitmap9getHeightEv>
900122de:	fb90 f0f8 	sdiv	r0, r0, r8
900122e2:	1a24      	subs	r4, r4, r0
900122e4:	8774      	strh	r4, [r6, #58]	; 0x3a
900122e6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

900122ea <_ZN8touchgfx14AbstractButton13executeActionEv>:
900122ea:	b510      	push	{r4, lr}
900122ec:	4604      	mov	r4, r0
900122ee:	6a80      	ldr	r0, [r0, #40]	; 0x28
900122f0:	b150      	cbz	r0, 90012308 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
900122f2:	6803      	ldr	r3, [r0, #0]
900122f4:	68db      	ldr	r3, [r3, #12]
900122f6:	4798      	blx	r3
900122f8:	b130      	cbz	r0, 90012308 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
900122fa:	6aa0      	ldr	r0, [r4, #40]	; 0x28
900122fc:	4621      	mov	r1, r4
900122fe:	6803      	ldr	r3, [r0, #0]
90012300:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90012304:	689b      	ldr	r3, [r3, #8]
90012306:	4718      	bx	r3
90012308:	bd10      	pop	{r4, pc}
	...

9001230c <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE>:
9001230c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90012310:	4604      	mov	r4, r0
90012312:	b08c      	sub	sp, #48	; 0x30
90012314:	460d      	mov	r5, r1
90012316:	f013 fd6f 	bl	90025df8 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
9001231a:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
9001231e:	2b00      	cmp	r3, #0
90012320:	d05d      	beq.n	900123de <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd2>
90012322:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
90012324:	a805      	add	r0, sp, #20
90012326:	f8ad 3014 	strh.w	r3, [sp, #20]
9001232a:	f9b4 8038 	ldrsh.w	r8, [r4, #56]	; 0x38
9001232e:	f9b4 703a 	ldrsh.w	r7, [r4, #58]	; 0x3a
90012332:	f005 fdd1 	bl	90017ed8 <_ZNK8touchgfx6Bitmap8getWidthEv>
90012336:	4606      	mov	r6, r0
90012338:	a805      	add	r0, sp, #20
9001233a:	f005 fe01 	bl	90017f40 <_ZNK8touchgfx6Bitmap9getHeightEv>
9001233e:	6869      	ldr	r1, [r5, #4]
90012340:	f8ad 001e 	strh.w	r0, [sp, #30]
90012344:	ab08      	add	r3, sp, #32
90012346:	6828      	ldr	r0, [r5, #0]
90012348:	ad08      	add	r5, sp, #32
9001234a:	f8ad 8018 	strh.w	r8, [sp, #24]
9001234e:	f8ad 701a 	strh.w	r7, [sp, #26]
90012352:	f8ad 601c 	strh.w	r6, [sp, #28]
90012356:	c303      	stmia	r3!, {r0, r1}
90012358:	a906      	add	r1, sp, #24
9001235a:	4628      	mov	r0, r5
9001235c:	f7fd fd5c 	bl	9000fe18 <_ZN8touchgfx4RectaNERKS0_>
90012360:	f8bd 2014 	ldrh.w	r2, [sp, #20]
90012364:	f64f 73ff 	movw	r3, #65535	; 0xffff
90012368:	429a      	cmp	r2, r3
9001236a:	d035      	beq.n	900123d8 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
9001236c:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
90012370:	2b00      	cmp	r3, #0
90012372:	dd31      	ble.n	900123d8 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
90012374:	f9bd 3026 	ldrsh.w	r3, [sp, #38]	; 0x26
90012378:	2b00      	cmp	r3, #0
9001237a:	dd2d      	ble.n	900123d8 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
9001237c:	2300      	movs	r3, #0
9001237e:	a90a      	add	r1, sp, #40	; 0x28
90012380:	4620      	mov	r0, r4
90012382:	e9cd 330a 	strd	r3, r3, [sp, #40]	; 0x28
90012386:	6823      	ldr	r3, [r4, #0]
90012388:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001238a:	4798      	blx	r3
9001238c:	f8bd 3020 	ldrh.w	r3, [sp, #32]
90012390:	8f22      	ldrh	r2, [r4, #56]	; 0x38
90012392:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
90012396:	1a9b      	subs	r3, r3, r2
90012398:	f8ad 3020 	strh.w	r3, [sp, #32]
9001239c:	8f63      	ldrh	r3, [r4, #58]	; 0x3a
9001239e:	1ac9      	subs	r1, r1, r3
900123a0:	f8ad 1022 	strh.w	r1, [sp, #34]	; 0x22
900123a4:	490f      	ldr	r1, [pc, #60]	; (900123e4 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd8>)
900123a6:	6809      	ldr	r1, [r1, #0]
900123a8:	f891 0058 	ldrb.w	r0, [r1, #88]	; 0x58
900123ac:	b108      	cbz	r0, 900123b2 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa6>
900123ae:	6cc8      	ldr	r0, [r1, #76]	; 0x4c
900123b0:	b900      	cbnz	r0, 900123b4 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa8>
900123b2:	6888      	ldr	r0, [r1, #8]
900123b4:	f8bd 102a 	ldrh.w	r1, [sp, #42]	; 0x2a
900123b8:	2601      	movs	r6, #1
900123ba:	440b      	add	r3, r1
900123bc:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
900123c0:	440a      	add	r2, r1
900123c2:	6801      	ldr	r1, [r0, #0]
900123c4:	9602      	str	r6, [sp, #8]
900123c6:	b21b      	sxth	r3, r3
900123c8:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
900123cc:	b212      	sxth	r2, r2
900123ce:	e9cd 5400 	strd	r5, r4, [sp]
900123d2:	688c      	ldr	r4, [r1, #8]
900123d4:	a905      	add	r1, sp, #20
900123d6:	47a0      	blx	r4
900123d8:	b00c      	add	sp, #48	; 0x30
900123da:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900123de:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
900123e0:	e7a0      	b.n	90012324 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x18>
900123e2:	bf00      	nop
900123e4:	2402357c 	.word	0x2402357c

900123e8 <_ZN8touchgfx14ButtonWithIconC1Ev>:
900123e8:	2101      	movs	r1, #1
900123ea:	2200      	movs	r2, #0
900123ec:	b510      	push	{r4, lr}
900123ee:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
900123f2:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
900123f6:	f64f 71ff 	movw	r1, #65535	; 0xffff
900123fa:	4c0d      	ldr	r4, [pc, #52]	; (90012430 <_ZN8touchgfx14ButtonWithIconC1Ev+0x48>)
900123fc:	8082      	strh	r2, [r0, #4]
900123fe:	80c2      	strh	r2, [r0, #6]
90012400:	8102      	strh	r2, [r0, #8]
90012402:	8142      	strh	r2, [r0, #10]
90012404:	8182      	strh	r2, [r0, #12]
90012406:	81c2      	strh	r2, [r0, #14]
90012408:	8202      	strh	r2, [r0, #16]
9001240a:	8242      	strh	r2, [r0, #18]
9001240c:	61c2      	str	r2, [r0, #28]
9001240e:	8402      	strh	r2, [r0, #32]
90012410:	8442      	strh	r2, [r0, #34]	; 0x22
90012412:	6282      	str	r2, [r0, #40]	; 0x28
90012414:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
90012418:	85c1      	strh	r1, [r0, #46]	; 0x2e
9001241a:	8601      	strh	r1, [r0, #48]	; 0x30
9001241c:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
90012420:	6004      	str	r4, [r0, #0]
90012422:	8681      	strh	r1, [r0, #52]	; 0x34
90012424:	86c1      	strh	r1, [r0, #54]	; 0x36
90012426:	8702      	strh	r2, [r0, #56]	; 0x38
90012428:	8742      	strh	r2, [r0, #58]	; 0x3a
9001242a:	e9c0 2205 	strd	r2, r2, [r0, #20]
9001242e:	bd10      	pop	{r4, pc}
90012430:	9002a30c 	.word	0x9002a30c

90012434 <_ZN8touchgfx5ImageD1Ev>:
90012434:	4770      	bx	lr

90012436 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
90012436:	b570      	push	{r4, r5, r6, lr}
90012438:	880b      	ldrh	r3, [r1, #0]
9001243a:	460d      	mov	r5, r1
9001243c:	4604      	mov	r4, r0
9001243e:	84c3      	strh	r3, [r0, #38]	; 0x26
90012440:	4608      	mov	r0, r1
90012442:	f005 fd49 	bl	90017ed8 <_ZNK8touchgfx6Bitmap8getWidthEv>
90012446:	4606      	mov	r6, r0
90012448:	4628      	mov	r0, r5
9001244a:	f005 fd79 	bl	90017f40 <_ZNK8touchgfx6Bitmap9getHeightEv>
9001244e:	6823      	ldr	r3, [r4, #0]
90012450:	4605      	mov	r5, r0
90012452:	4631      	mov	r1, r6
90012454:	4620      	mov	r0, r4
90012456:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90012458:	4798      	blx	r3
9001245a:	6823      	ldr	r3, [r4, #0]
9001245c:	4629      	mov	r1, r5
9001245e:	4620      	mov	r0, r4
90012460:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90012462:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90012466:	4718      	bx	r3

90012468 <_ZN8touchgfx5ImageD0Ev>:
90012468:	b510      	push	{r4, lr}
9001246a:	4604      	mov	r4, r0
9001246c:	212c      	movs	r1, #44	; 0x2c
9001246e:	f013 fd40 	bl	90025ef2 <_ZdlPvj>
90012472:	4620      	mov	r0, r4
90012474:	bd10      	pop	{r4, pc}

90012476 <_ZNK8touchgfx5Image12getSolidRectEv>:
90012476:	b510      	push	{r4, lr}
90012478:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
9001247c:	4604      	mov	r4, r0
9001247e:	2bff      	cmp	r3, #255	; 0xff
90012480:	d006      	beq.n	90012490 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
90012482:	2300      	movs	r3, #0
90012484:	8003      	strh	r3, [r0, #0]
90012486:	8043      	strh	r3, [r0, #2]
90012488:	8083      	strh	r3, [r0, #4]
9001248a:	80c3      	strh	r3, [r0, #6]
9001248c:	4620      	mov	r0, r4
9001248e:	bd10      	pop	{r4, pc}
90012490:	3126      	adds	r1, #38	; 0x26
90012492:	f005 fd89 	bl	90017fa8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
90012496:	e7f9      	b.n	9001248c <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

90012498 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
90012498:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001249c:	4604      	mov	r4, r0
9001249e:	b088      	sub	sp, #32
900124a0:	2500      	movs	r5, #0
900124a2:	460f      	mov	r7, r1
900124a4:	f854 3b26 	ldr.w	r3, [r4], #38
900124a8:	a904      	add	r1, sp, #16
900124aa:	4606      	mov	r6, r0
900124ac:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900124ae:	e9cd 5504 	strd	r5, r5, [sp, #16]
900124b2:	4798      	blx	r3
900124b4:	4620      	mov	r0, r4
900124b6:	f005 fd0f 	bl	90017ed8 <_ZNK8touchgfx6Bitmap8getWidthEv>
900124ba:	4680      	mov	r8, r0
900124bc:	4620      	mov	r0, r4
900124be:	f005 fd3f 	bl	90017f40 <_ZNK8touchgfx6Bitmap9getHeightEv>
900124c2:	9506      	str	r5, [sp, #24]
900124c4:	ad06      	add	r5, sp, #24
900124c6:	f8ad 001e 	strh.w	r0, [sp, #30]
900124ca:	4639      	mov	r1, r7
900124cc:	f8ad 801c 	strh.w	r8, [sp, #28]
900124d0:	4628      	mov	r0, r5
900124d2:	f7fd fca1 	bl	9000fe18 <_ZN8touchgfx4RectaNERKS0_>
900124d6:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
900124da:	2b00      	cmp	r3, #0
900124dc:	dd19      	ble.n	90012512 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
900124de:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
900124e2:	2b00      	cmp	r3, #0
900124e4:	dd15      	ble.n	90012512 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
900124e6:	4b0c      	ldr	r3, [pc, #48]	; (90012518 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
900124e8:	681b      	ldr	r3, [r3, #0]
900124ea:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
900124ee:	b10a      	cbz	r2, 900124f4 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
900124f0:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
900124f2:	b900      	cbnz	r0, 900124f6 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
900124f4:	6898      	ldr	r0, [r3, #8]
900124f6:	2701      	movs	r7, #1
900124f8:	6801      	ldr	r1, [r0, #0]
900124fa:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
900124fe:	9702      	str	r7, [sp, #8]
90012500:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
90012504:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
90012508:	e9cd 5600 	strd	r5, r6, [sp]
9001250c:	688d      	ldr	r5, [r1, #8]
9001250e:	4621      	mov	r1, r4
90012510:	47a8      	blx	r5
90012512:	b008      	add	sp, #32
90012514:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90012518:	2402357c 	.word	0x2402357c

9001251c <_ZN8touchgfx7OutlineD1Ev>:
9001251c:	4770      	bx	lr

9001251e <_ZN8touchgfx7OutlineD0Ev>:
9001251e:	b510      	push	{r4, lr}
90012520:	4604      	mov	r4, r0
90012522:	2130      	movs	r1, #48	; 0x30
90012524:	f013 fce5 	bl	90025ef2 <_ZdlPvj>
90012528:	4620      	mov	r0, r4
9001252a:	bd10      	pop	{r4, pc}

9001252c <_ZN8touchgfx7Outline5resetEv>:
9001252c:	b510      	push	{r4, lr}
9001252e:	4604      	mov	r4, r0
90012530:	f000 fe86 	bl	90013240 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
90012534:	60e0      	str	r0, [r4, #12]
90012536:	f000 fe89 	bl	9001324c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
9001253a:	68e3      	ldr	r3, [r4, #12]
9001253c:	08c0      	lsrs	r0, r0, #3
9001253e:	2200      	movs	r2, #0
90012540:	f647 71ff 	movw	r1, #32767	; 0x7fff
90012544:	6123      	str	r3, [r4, #16]
90012546:	3801      	subs	r0, #1
90012548:	60a2      	str	r2, [r4, #8]
9001254a:	6060      	str	r0, [r4, #4]
9001254c:	8019      	strh	r1, [r3, #0]
9001254e:	8059      	strh	r1, [r3, #2]
90012550:	809a      	strh	r2, [r3, #4]
90012552:	80da      	strh	r2, [r3, #6]
90012554:	6a63      	ldr	r3, [r4, #36]	; 0x24
90012556:	f023 0301 	bic.w	r3, r3, #1
9001255a:	f043 0302 	orr.w	r3, r3, #2
9001255e:	6263      	str	r3, [r4, #36]	; 0x24
90012560:	bd10      	pop	{r4, pc}
	...

90012564 <_ZN8touchgfx7OutlineC1Ev>:
90012564:	4b0a      	ldr	r3, [pc, #40]	; (90012590 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
90012566:	b510      	push	{r4, lr}
90012568:	6003      	str	r3, [r0, #0]
9001256a:	2300      	movs	r3, #0
9001256c:	4604      	mov	r4, r0
9001256e:	6243      	str	r3, [r0, #36]	; 0x24
90012570:	e9c0 3301 	strd	r3, r3, [r0, #4]
90012574:	e9c0 3303 	strd	r3, r3, [r0, #12]
90012578:	e9c0 3305 	strd	r3, r3, [r0, #20]
9001257c:	e9c0 3307 	strd	r3, r3, [r0, #28]
90012580:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
90012584:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
90012588:	f7ff ffd0 	bl	9001252c <_ZN8touchgfx7Outline5resetEv>
9001258c:	4620      	mov	r0, r4
9001258e:	bd10      	pop	{r4, pc}
90012590:	9002a3f0 	.word	0x9002a3f0

90012594 <_ZN8touchgfx7Outline10renderLineEiiii>:
90012594:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90012598:	b093      	sub	sp, #76	; 0x4c
9001259a:	1156      	asrs	r6, r2, #5
9001259c:	9c1c      	ldr	r4, [sp, #112]	; 0x70
9001259e:	9305      	str	r3, [sp, #20]
900125a0:	1153      	asrs	r3, r2, #5
900125a2:	f004 051f 	and.w	r5, r4, #31
900125a6:	9303      	str	r3, [sp, #12]
900125a8:	1163      	asrs	r3, r4, #5
900125aa:	9504      	str	r5, [sp, #16]
900125ac:	1165      	asrs	r5, r4, #5
900125ae:	9306      	str	r3, [sp, #24]
900125b0:	f002 031f 	and.w	r3, r2, #31
900125b4:	42ae      	cmp	r6, r5
900125b6:	f040 80f4 	bne.w	900127a2 <_ZN8touchgfx7Outline10renderLineEiiii+0x20e>
900125ba:	9c04      	ldr	r4, [sp, #16]
900125bc:	9a05      	ldr	r2, [sp, #20]
900125be:	42a3      	cmp	r3, r4
900125c0:	ea4f 1e62 	mov.w	lr, r2, asr #5
900125c4:	6902      	ldr	r2, [r0, #16]
900125c6:	d125      	bne.n	90012614 <_ZN8touchgfx7Outline10renderLineEiiii+0x80>
900125c8:	f9b2 3000 	ldrsh.w	r3, [r2]
900125cc:	459e      	cmp	lr, r3
900125ce:	d103      	bne.n	900125d8 <_ZN8touchgfx7Outline10renderLineEiiii+0x44>
900125d0:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
900125d4:	429e      	cmp	r6, r3
900125d6:	d035      	beq.n	90012644 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
900125d8:	88d1      	ldrh	r1, [r2, #6]
900125da:	8893      	ldrh	r3, [r2, #4]
900125dc:	430b      	orrs	r3, r1
900125de:	d010      	beq.n	90012602 <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
900125e0:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
900125e4:	2b00      	cmp	r3, #0
900125e6:	db0c      	blt.n	90012602 <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
900125e8:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
900125ea:	428b      	cmp	r3, r1
900125ec:	da09      	bge.n	90012602 <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
900125ee:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
900125f2:	428b      	cmp	r3, r1
900125f4:	f103 0301 	add.w	r3, r3, #1
900125f8:	bf38      	it	cc
900125fa:	3208      	addcc	r2, #8
900125fc:	6083      	str	r3, [r0, #8]
900125fe:	bf38      	it	cc
90012600:	6102      	strcc	r2, [r0, #16]
90012602:	6903      	ldr	r3, [r0, #16]
90012604:	9a03      	ldr	r2, [sp, #12]
90012606:	f8a3 e000 	strh.w	lr, [r3]
9001260a:	805a      	strh	r2, [r3, #2]
9001260c:	2200      	movs	r2, #0
9001260e:	809a      	strh	r2, [r3, #4]
90012610:	80da      	strh	r2, [r3, #6]
90012612:	e017      	b.n	90012644 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90012614:	9c05      	ldr	r4, [sp, #20]
90012616:	114e      	asrs	r6, r1, #5
90012618:	f001 0c1f 	and.w	ip, r1, #31
9001261c:	f8b2 8004 	ldrh.w	r8, [r2, #4]
90012620:	f004 041f 	and.w	r4, r4, #31
90012624:	4576      	cmp	r6, lr
90012626:	f8b2 a006 	ldrh.w	sl, [r2, #6]
9001262a:	9402      	str	r4, [sp, #8]
9001262c:	9c04      	ldr	r4, [sp, #16]
9001262e:	eba4 0403 	sub.w	r4, r4, r3
90012632:	d10a      	bne.n	9001264a <_ZN8touchgfx7Outline10renderLineEiiii+0xb6>
90012634:	9b02      	ldr	r3, [sp, #8]
90012636:	44a0      	add	r8, r4
90012638:	449c      	add	ip, r3
9001263a:	f8a2 8004 	strh.w	r8, [r2, #4]
9001263e:	fb04 a40c 	mla	r4, r4, ip, sl
90012642:	80d4      	strh	r4, [r2, #6]
90012644:	b013      	add	sp, #76	; 0x4c
90012646:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001264a:	9d05      	ldr	r5, [sp, #20]
9001264c:	1a69      	subs	r1, r5, r1
9001264e:	bf51      	iteee	pl
90012650:	f1cc 0520 	rsbpl	r5, ip, #32
90012654:	fb04 f40c 	mulmi.w	r4, r4, ip
90012658:	4249      	negmi	r1, r1
9001265a:	2500      	movmi	r5, #0
9001265c:	bf5d      	ittte	pl
9001265e:	436c      	mulpl	r4, r5
90012660:	2520      	movpl	r5, #32
90012662:	f04f 0901 	movpl.w	r9, #1
90012666:	f04f 39ff 	movmi.w	r9, #4294967295
9001266a:	9501      	str	r5, [sp, #4]
9001266c:	9f01      	ldr	r7, [sp, #4]
9001266e:	444e      	add	r6, r9
90012670:	fb94 f5f1 	sdiv	r5, r4, r1
90012674:	fb01 4415 	mls	r4, r1, r5, r4
90012678:	44bc      	add	ip, r7
9001267a:	2c00      	cmp	r4, #0
9001267c:	bfbc      	itt	lt
9001267e:	f105 35ff 	addlt.w	r5, r5, #4294967295
90012682:	1864      	addlt	r4, r4, r1
90012684:	44a8      	add	r8, r5
90012686:	fb05 ac0c 	mla	ip, r5, ip, sl
9001268a:	f8a2 8004 	strh.w	r8, [r2, #4]
9001268e:	f8a2 c006 	strh.w	ip, [r2, #6]
90012692:	f8d0 c010 	ldr.w	ip, [r0, #16]
90012696:	f8bc 8006 	ldrh.w	r8, [ip, #6]
9001269a:	f8bc 2004 	ldrh.w	r2, [ip, #4]
9001269e:	ea58 0202 	orrs.w	r2, r8, r2
900126a2:	d011      	beq.n	900126c8 <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
900126a4:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
900126a8:	f1b8 0f00 	cmp.w	r8, #0
900126ac:	db0c      	blt.n	900126c8 <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
900126ae:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
900126b0:	4590      	cmp	r8, r2
900126b2:	da09      	bge.n	900126c8 <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
900126b4:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
900126b8:	4590      	cmp	r8, r2
900126ba:	bf3c      	itt	cc
900126bc:	f10c 0208 	addcc.w	r2, ip, #8
900126c0:	6102      	strcc	r2, [r0, #16]
900126c2:	f108 0201 	add.w	r2, r8, #1
900126c6:	6082      	str	r2, [r0, #8]
900126c8:	f8d0 c010 	ldr.w	ip, [r0, #16]
900126cc:	2700      	movs	r7, #0
900126ce:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
900126d2:	45b6      	cmp	lr, r6
900126d4:	f8ac 6000 	strh.w	r6, [ip]
900126d8:	442b      	add	r3, r5
900126da:	f8ac 2002 	strh.w	r2, [ip, #2]
900126de:	f8ac 7004 	strh.w	r7, [ip, #4]
900126e2:	f8ac 7006 	strh.w	r7, [ip, #6]
900126e6:	d04b      	beq.n	90012780 <_ZN8touchgfx7Outline10renderLineEiiii+0x1ec>
900126e8:	9f04      	ldr	r7, [sp, #16]
900126ea:	1a64      	subs	r4, r4, r1
900126ec:	f04f 0a00 	mov.w	sl, #0
900126f0:	1aff      	subs	r7, r7, r3
900126f2:	443d      	add	r5, r7
900126f4:	016d      	lsls	r5, r5, #5
900126f6:	fb95 f8f1 	sdiv	r8, r5, r1
900126fa:	fb01 5518 	mls	r5, r1, r8, r5
900126fe:	2d00      	cmp	r5, #0
90012700:	bfbc      	itt	lt
90012702:	f108 38ff 	addlt.w	r8, r8, #4294967295
90012706:	186d      	addlt	r5, r5, r1
90012708:	f108 0701 	add.w	r7, r8, #1
9001270c:	9703      	str	r7, [sp, #12]
9001270e:	f8d0 c010 	ldr.w	ip, [r0, #16]
90012712:	1964      	adds	r4, r4, r5
90012714:	444e      	add	r6, r9
90012716:	bf54      	ite	pl
90012718:	9f03      	ldrpl	r7, [sp, #12]
9001271a:	4647      	movmi	r7, r8
9001271c:	f8bc b004 	ldrh.w	fp, [ip, #4]
90012720:	bf58      	it	pl
90012722:	1a64      	subpl	r4, r4, r1
90012724:	443b      	add	r3, r7
90012726:	44bb      	add	fp, r7
90012728:	f8ac b004 	strh.w	fp, [ip, #4]
9001272c:	f8bc b006 	ldrh.w	fp, [ip, #6]
90012730:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
90012734:	f8ac b006 	strh.w	fp, [ip, #6]
90012738:	f8d0 c010 	ldr.w	ip, [r0, #16]
9001273c:	f8bc b006 	ldrh.w	fp, [ip, #6]
90012740:	f8bc 7004 	ldrh.w	r7, [ip, #4]
90012744:	ea5b 0707 	orrs.w	r7, fp, r7
90012748:	d011      	beq.n	9001276e <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
9001274a:	f9bc b002 	ldrsh.w	fp, [ip, #2]
9001274e:	f1bb 0f00 	cmp.w	fp, #0
90012752:	db0c      	blt.n	9001276e <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
90012754:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
90012756:	45bb      	cmp	fp, r7
90012758:	da09      	bge.n	9001276e <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
9001275a:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
9001275e:	45bb      	cmp	fp, r7
90012760:	bf3c      	itt	cc
90012762:	f10c 0708 	addcc.w	r7, ip, #8
90012766:	6107      	strcc	r7, [r0, #16]
90012768:	f10b 0701 	add.w	r7, fp, #1
9001276c:	6087      	str	r7, [r0, #8]
9001276e:	6907      	ldr	r7, [r0, #16]
90012770:	45b6      	cmp	lr, r6
90012772:	803e      	strh	r6, [r7, #0]
90012774:	807a      	strh	r2, [r7, #2]
90012776:	f8a7 a004 	strh.w	sl, [r7, #4]
9001277a:	f8a7 a006 	strh.w	sl, [r7, #6]
9001277e:	d1c6      	bne.n	9001270e <_ZN8touchgfx7Outline10renderLineEiiii+0x17a>
90012780:	9a04      	ldr	r2, [sp, #16]
90012782:	1ad3      	subs	r3, r2, r3
90012784:	6902      	ldr	r2, [r0, #16]
90012786:	8891      	ldrh	r1, [r2, #4]
90012788:	88d6      	ldrh	r6, [r2, #6]
9001278a:	4419      	add	r1, r3
9001278c:	8091      	strh	r1, [r2, #4]
9001278e:	9902      	ldr	r1, [sp, #8]
90012790:	f101 0c20 	add.w	ip, r1, #32
90012794:	9901      	ldr	r1, [sp, #4]
90012796:	ebac 0c01 	sub.w	ip, ip, r1
9001279a:	fb03 630c 	mla	r3, r3, ip, r6
9001279e:	80d3      	strh	r3, [r2, #6]
900127a0:	e750      	b.n	90012644 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
900127a2:	9d05      	ldr	r5, [sp, #20]
900127a4:	1aa2      	subs	r2, r4, r2
900127a6:	eba5 0501 	sub.w	r5, r5, r1
900127aa:	9202      	str	r2, [sp, #8]
900127ac:	9508      	str	r5, [sp, #32]
900127ae:	f140 8128 	bpl.w	90012a02 <_ZN8touchgfx7Outline10renderLineEiiii+0x46e>
900127b2:	9a03      	ldr	r2, [sp, #12]
900127b4:	2a00      	cmp	r2, #0
900127b6:	f6ff af45 	blt.w	90012644 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
900127ba:	9a02      	ldr	r2, [sp, #8]
900127bc:	f04f 34ff 	mov.w	r4, #4294967295
900127c0:	4252      	negs	r2, r2
900127c2:	940b      	str	r4, [sp, #44]	; 0x2c
900127c4:	2400      	movs	r4, #0
900127c6:	9202      	str	r2, [sp, #8]
900127c8:	9a06      	ldr	r2, [sp, #24]
900127ca:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
900127ce:	9206      	str	r2, [sp, #24]
900127d0:	462a      	mov	r2, r5
900127d2:	435a      	muls	r2, r3
900127d4:	9401      	str	r4, [sp, #4]
900127d6:	9c02      	ldr	r4, [sp, #8]
900127d8:	9d02      	ldr	r5, [sp, #8]
900127da:	fb92 f4f4 	sdiv	r4, r2, r4
900127de:	fb05 2214 	mls	r2, r5, r4, r2
900127e2:	2a00      	cmp	r2, #0
900127e4:	9207      	str	r2, [sp, #28]
900127e6:	bfbc      	itt	lt
900127e8:	1952      	addlt	r2, r2, r5
900127ea:	f104 34ff 	addlt.w	r4, r4, #4294967295
900127ee:	6905      	ldr	r5, [r0, #16]
900127f0:	bfb8      	it	lt
900127f2:	9207      	strlt	r2, [sp, #28]
900127f4:	eb04 0901 	add.w	r9, r4, r1
900127f8:	9a01      	ldr	r2, [sp, #4]
900127fa:	ea4f 1669 	mov.w	r6, r9, asr #5
900127fe:	429a      	cmp	r2, r3
90012800:	f040 8111 	bne.w	90012a26 <_ZN8touchgfx7Outline10renderLineEiiii+0x492>
90012804:	f9b5 3000 	ldrsh.w	r3, [r5]
90012808:	429e      	cmp	r6, r3
9001280a:	d104      	bne.n	90012816 <_ZN8touchgfx7Outline10renderLineEiiii+0x282>
9001280c:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
90012810:	9a03      	ldr	r2, [sp, #12]
90012812:	429a      	cmp	r2, r3
90012814:	d01b      	beq.n	9001284e <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
90012816:	88ea      	ldrh	r2, [r5, #6]
90012818:	88ab      	ldrh	r3, [r5, #4]
9001281a:	4313      	orrs	r3, r2
9001281c:	d010      	beq.n	90012840 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
9001281e:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
90012822:	2a00      	cmp	r2, #0
90012824:	db0c      	blt.n	90012840 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
90012826:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
90012828:	429a      	cmp	r2, r3
9001282a:	da09      	bge.n	90012840 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
9001282c:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
90012830:	429a      	cmp	r2, r3
90012832:	f102 0201 	add.w	r2, r2, #1
90012836:	bf38      	it	cc
90012838:	3508      	addcc	r5, #8
9001283a:	6082      	str	r2, [r0, #8]
9001283c:	bf38      	it	cc
9001283e:	6105      	strcc	r5, [r0, #16]
90012840:	6903      	ldr	r3, [r0, #16]
90012842:	9a03      	ldr	r2, [sp, #12]
90012844:	801e      	strh	r6, [r3, #0]
90012846:	805a      	strh	r2, [r3, #2]
90012848:	2200      	movs	r2, #0
9001284a:	809a      	strh	r2, [r3, #4]
9001284c:	80da      	strh	r2, [r3, #6]
9001284e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90012850:	9a03      	ldr	r2, [sp, #12]
90012852:	6901      	ldr	r1, [r0, #16]
90012854:	441a      	add	r2, r3
90012856:	f9b1 3000 	ldrsh.w	r3, [r1]
9001285a:	42b3      	cmp	r3, r6
9001285c:	d103      	bne.n	90012866 <_ZN8touchgfx7Outline10renderLineEiiii+0x2d2>
9001285e:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
90012862:	429a      	cmp	r2, r3
90012864:	d01a      	beq.n	9001289c <_ZN8touchgfx7Outline10renderLineEiiii+0x308>
90012866:	88cc      	ldrh	r4, [r1, #6]
90012868:	888b      	ldrh	r3, [r1, #4]
9001286a:	4323      	orrs	r3, r4
9001286c:	d010      	beq.n	90012890 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
9001286e:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
90012872:	2c00      	cmp	r4, #0
90012874:	db0c      	blt.n	90012890 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
90012876:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
90012878:	429c      	cmp	r4, r3
9001287a:	da09      	bge.n	90012890 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
9001287c:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
90012880:	429c      	cmp	r4, r3
90012882:	f104 0401 	add.w	r4, r4, #1
90012886:	bf38      	it	cc
90012888:	3108      	addcc	r1, #8
9001288a:	6084      	str	r4, [r0, #8]
9001288c:	bf38      	it	cc
9001288e:	6101      	strcc	r1, [r0, #16]
90012890:	6903      	ldr	r3, [r0, #16]
90012892:	2100      	movs	r1, #0
90012894:	801e      	strh	r6, [r3, #0]
90012896:	805a      	strh	r2, [r3, #2]
90012898:	8099      	strh	r1, [r3, #4]
9001289a:	80d9      	strh	r1, [r3, #6]
9001289c:	9b06      	ldr	r3, [sp, #24]
9001289e:	4293      	cmp	r3, r2
900128a0:	f000 8082 	beq.w	900129a8 <_ZN8touchgfx7Outline10renderLineEiiii+0x414>
900128a4:	9b08      	ldr	r3, [sp, #32]
900128a6:	9902      	ldr	r1, [sp, #8]
900128a8:	015b      	lsls	r3, r3, #5
900128aa:	9c02      	ldr	r4, [sp, #8]
900128ac:	fb93 f1f1 	sdiv	r1, r3, r1
900128b0:	fb04 3311 	mls	r3, r4, r1, r3
900128b4:	9103      	str	r1, [sp, #12]
900128b6:	2b00      	cmp	r3, #0
900128b8:	9308      	str	r3, [sp, #32]
900128ba:	da04      	bge.n	900128c6 <_ZN8touchgfx7Outline10renderLineEiiii+0x332>
900128bc:	1e4b      	subs	r3, r1, #1
900128be:	9303      	str	r3, [sp, #12]
900128c0:	9b08      	ldr	r3, [sp, #32]
900128c2:	4423      	add	r3, r4
900128c4:	9308      	str	r3, [sp, #32]
900128c6:	9b07      	ldr	r3, [sp, #28]
900128c8:	464f      	mov	r7, r9
900128ca:	9902      	ldr	r1, [sp, #8]
900128cc:	2600      	movs	r6, #0
900128ce:	1a5b      	subs	r3, r3, r1
900128d0:	9307      	str	r3, [sp, #28]
900128d2:	9b01      	ldr	r3, [sp, #4]
900128d4:	f1c3 0320 	rsb	r3, r3, #32
900128d8:	930e      	str	r3, [sp, #56]	; 0x38
900128da:	990e      	ldr	r1, [sp, #56]	; 0x38
900128dc:	9b01      	ldr	r3, [sp, #4]
900128de:	1a5b      	subs	r3, r3, r1
900128e0:	930a      	str	r3, [sp, #40]	; 0x28
900128e2:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
900128e6:	185b      	adds	r3, r3, r1
900128e8:	bf58      	it	pl
900128ea:	9902      	ldrpl	r1, [sp, #8]
900128ec:	9307      	str	r3, [sp, #28]
900128ee:	bf57      	itett	pl
900128f0:	1a5b      	subpl	r3, r3, r1
900128f2:	9903      	ldrmi	r1, [sp, #12]
900128f4:	9307      	strpl	r3, [sp, #28]
900128f6:	9b03      	ldrpl	r3, [sp, #12]
900128f8:	bf58      	it	pl
900128fa:	1c59      	addpl	r1, r3, #1
900128fc:	2a00      	cmp	r2, #0
900128fe:	4489      	add	r9, r1
90012900:	ea4f 1a69 	mov.w	sl, r9, asr #5
90012904:	db2e      	blt.n	90012964 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90012906:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
90012908:	4293      	cmp	r3, r2
9001290a:	dd2b      	ble.n	90012964 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
9001290c:	9c01      	ldr	r4, [sp, #4]
9001290e:	6905      	ldr	r5, [r0, #16]
90012910:	46a0      	mov	r8, r4
90012912:	9c0e      	ldr	r4, [sp, #56]	; 0x38
90012914:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
90012918:	45a0      	cmp	r8, r4
9001291a:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
9001291e:	f040 814c 	bne.w	90012bba <_ZN8touchgfx7Outline10renderLineEiiii+0x626>
90012922:	f9b5 1000 	ldrsh.w	r1, [r5]
90012926:	4551      	cmp	r1, sl
90012928:	d103      	bne.n	90012932 <_ZN8touchgfx7Outline10renderLineEiiii+0x39e>
9001292a:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
9001292e:	4291      	cmp	r1, r2
90012930:	d018      	beq.n	90012964 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90012932:	ea5c 010e 	orrs.w	r1, ip, lr
90012936:	d00f      	beq.n	90012958 <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
90012938:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
9001293c:	2900      	cmp	r1, #0
9001293e:	db0b      	blt.n	90012958 <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
90012940:	428b      	cmp	r3, r1
90012942:	dd09      	ble.n	90012958 <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
90012944:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
90012948:	4299      	cmp	r1, r3
9001294a:	f101 0101 	add.w	r1, r1, #1
9001294e:	bf38      	it	cc
90012950:	3508      	addcc	r5, #8
90012952:	6081      	str	r1, [r0, #8]
90012954:	bf38      	it	cc
90012956:	6105      	strcc	r5, [r0, #16]
90012958:	6903      	ldr	r3, [r0, #16]
9001295a:	f8a3 a000 	strh.w	sl, [r3]
9001295e:	805a      	strh	r2, [r3, #2]
90012960:	809e      	strh	r6, [r3, #4]
90012962:	80de      	strh	r6, [r3, #6]
90012964:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90012966:	6901      	ldr	r1, [r0, #16]
90012968:	441a      	add	r2, r3
9001296a:	88cc      	ldrh	r4, [r1, #6]
9001296c:	888b      	ldrh	r3, [r1, #4]
9001296e:	4323      	orrs	r3, r4
90012970:	d010      	beq.n	90012994 <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
90012972:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
90012976:	2c00      	cmp	r4, #0
90012978:	db0c      	blt.n	90012994 <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
9001297a:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
9001297c:	429c      	cmp	r4, r3
9001297e:	da09      	bge.n	90012994 <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
90012980:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
90012984:	429c      	cmp	r4, r3
90012986:	f104 0401 	add.w	r4, r4, #1
9001298a:	bf38      	it	cc
9001298c:	3108      	addcc	r1, #8
9001298e:	6084      	str	r4, [r0, #8]
90012990:	bf38      	it	cc
90012992:	6101      	strcc	r1, [r0, #16]
90012994:	6903      	ldr	r3, [r0, #16]
90012996:	464f      	mov	r7, r9
90012998:	f8a3 a000 	strh.w	sl, [r3]
9001299c:	805a      	strh	r2, [r3, #2]
9001299e:	809e      	strh	r6, [r3, #4]
900129a0:	80de      	strh	r6, [r3, #6]
900129a2:	9b06      	ldr	r3, [sp, #24]
900129a4:	4293      	cmp	r3, r2
900129a6:	d19c      	bne.n	900128e2 <_ZN8touchgfx7Outline10renderLineEiiii+0x34e>
900129a8:	9b01      	ldr	r3, [sp, #4]
900129aa:	6907      	ldr	r7, [r0, #16]
900129ac:	f1c3 0620 	rsb	r6, r3, #32
900129b0:	9b05      	ldr	r3, [sp, #20]
900129b2:	ea4f 1e63 	mov.w	lr, r3, asr #5
900129b6:	9b04      	ldr	r3, [sp, #16]
900129b8:	429e      	cmp	r6, r3
900129ba:	f040 81c7 	bne.w	90012d4c <_ZN8touchgfx7Outline10renderLineEiiii+0x7b8>
900129be:	f9b7 3000 	ldrsh.w	r3, [r7]
900129c2:	459e      	cmp	lr, r3
900129c4:	d104      	bne.n	900129d0 <_ZN8touchgfx7Outline10renderLineEiiii+0x43c>
900129c6:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
900129ca:	429a      	cmp	r2, r3
900129cc:	f43f ae3a 	beq.w	90012644 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
900129d0:	88f9      	ldrh	r1, [r7, #6]
900129d2:	88bb      	ldrh	r3, [r7, #4]
900129d4:	430b      	orrs	r3, r1
900129d6:	d010      	beq.n	900129fa <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
900129d8:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
900129dc:	2b00      	cmp	r3, #0
900129de:	db0c      	blt.n	900129fa <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
900129e0:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
900129e2:	428b      	cmp	r3, r1
900129e4:	da09      	bge.n	900129fa <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
900129e6:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
900129ea:	428b      	cmp	r3, r1
900129ec:	f103 0301 	add.w	r3, r3, #1
900129f0:	bf38      	it	cc
900129f2:	3708      	addcc	r7, #8
900129f4:	6083      	str	r3, [r0, #8]
900129f6:	bf38      	it	cc
900129f8:	6107      	strcc	r7, [r0, #16]
900129fa:	6903      	ldr	r3, [r0, #16]
900129fc:	f8a3 e000 	strh.w	lr, [r3]
90012a00:	e603      	b.n	9001260a <_ZN8touchgfx7Outline10renderLineEiiii+0x76>
90012a02:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
90012a04:	9c03      	ldr	r4, [sp, #12]
90012a06:	42a2      	cmp	r2, r4
90012a08:	f6ff ae1c 	blt.w	90012644 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90012a0c:	9c06      	ldr	r4, [sp, #24]
90012a0e:	42a2      	cmp	r2, r4
90012a10:	9c08      	ldr	r4, [sp, #32]
90012a12:	bfbc      	itt	lt
90012a14:	3201      	addlt	r2, #1
90012a16:	9206      	strlt	r2, [sp, #24]
90012a18:	f1c3 0220 	rsb	r2, r3, #32
90012a1c:	4362      	muls	r2, r4
90012a1e:	2401      	movs	r4, #1
90012a20:	940b      	str	r4, [sp, #44]	; 0x2c
90012a22:	2420      	movs	r4, #32
90012a24:	e6d6      	b.n	900127d4 <_ZN8touchgfx7Outline10renderLineEiiii+0x240>
90012a26:	ea4f 1861 	mov.w	r8, r1, asr #5
90012a2a:	f009 021f 	and.w	r2, r9, #31
90012a2e:	f001 011f 	and.w	r1, r1, #31
90012a32:	f8b5 e004 	ldrh.w	lr, [r5, #4]
90012a36:	920c      	str	r2, [sp, #48]	; 0x30
90012a38:	45b0      	cmp	r8, r6
90012a3a:	9a01      	ldr	r2, [sp, #4]
90012a3c:	f8b5 a006 	ldrh.w	sl, [r5, #6]
90012a40:	eba2 0203 	sub.w	r2, r2, r3
90012a44:	d108      	bne.n	90012a58 <_ZN8touchgfx7Outline10renderLineEiiii+0x4c4>
90012a46:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90012a48:	4496      	add	lr, r2
90012a4a:	4419      	add	r1, r3
90012a4c:	f8a5 e004 	strh.w	lr, [r5, #4]
90012a50:	fb02 a101 	mla	r1, r2, r1, sl
90012a54:	80e9      	strh	r1, [r5, #6]
90012a56:	e6fa      	b.n	9001284e <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
90012a58:	2c00      	cmp	r4, #0
90012a5a:	f2c0 80a7 	blt.w	90012bac <_ZN8touchgfx7Outline10renderLineEiiii+0x618>
90012a5e:	2701      	movs	r7, #1
90012a60:	f1c1 0c20 	rsb	ip, r1, #32
90012a64:	970a      	str	r7, [sp, #40]	; 0x28
90012a66:	2720      	movs	r7, #32
90012a68:	fb02 f20c 	mul.w	r2, r2, ip
90012a6c:	9709      	str	r7, [sp, #36]	; 0x24
90012a6e:	9f09      	ldr	r7, [sp, #36]	; 0x24
90012a70:	fb92 fcf4 	sdiv	ip, r2, r4
90012a74:	fb04 221c 	mls	r2, r4, ip, r2
90012a78:	4439      	add	r1, r7
90012a7a:	2a00      	cmp	r2, #0
90012a7c:	bfbc      	itt	lt
90012a7e:	f10c 3cff 	addlt.w	ip, ip, #4294967295
90012a82:	1912      	addlt	r2, r2, r4
90012a84:	fb0c a101 	mla	r1, ip, r1, sl
90012a88:	44e6      	add	lr, ip
90012a8a:	80e9      	strh	r1, [r5, #6]
90012a8c:	990a      	ldr	r1, [sp, #40]	; 0x28
90012a8e:	f8a5 e004 	strh.w	lr, [r5, #4]
90012a92:	eb08 0501 	add.w	r5, r8, r1
90012a96:	6901      	ldr	r1, [r0, #16]
90012a98:	f8b1 8006 	ldrh.w	r8, [r1, #6]
90012a9c:	f8b1 e004 	ldrh.w	lr, [r1, #4]
90012aa0:	ea58 070e 	orrs.w	r7, r8, lr
90012aa4:	d010      	beq.n	90012ac8 <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
90012aa6:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
90012aaa:	f1be 0f00 	cmp.w	lr, #0
90012aae:	db0b      	blt.n	90012ac8 <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
90012ab0:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
90012ab2:	45be      	cmp	lr, r7
90012ab4:	da08      	bge.n	90012ac8 <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
90012ab6:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
90012aba:	45be      	cmp	lr, r7
90012abc:	bf3c      	itt	cc
90012abe:	3108      	addcc	r1, #8
90012ac0:	6101      	strcc	r1, [r0, #16]
90012ac2:	f10e 0101 	add.w	r1, lr, #1
90012ac6:	6081      	str	r1, [r0, #8]
90012ac8:	6901      	ldr	r1, [r0, #16]
90012aca:	f04f 0e00 	mov.w	lr, #0
90012ace:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
90012ad2:	42ae      	cmp	r6, r5
90012ad4:	800d      	strh	r5, [r1, #0]
90012ad6:	4463      	add	r3, ip
90012ad8:	f8a1 8002 	strh.w	r8, [r1, #2]
90012adc:	f8a1 e004 	strh.w	lr, [r1, #4]
90012ae0:	f8a1 e006 	strh.w	lr, [r1, #6]
90012ae4:	d053      	beq.n	90012b8e <_ZN8touchgfx7Outline10renderLineEiiii+0x5fa>
90012ae6:	9901      	ldr	r1, [sp, #4]
90012ae8:	1b12      	subs	r2, r2, r4
90012aea:	1ac9      	subs	r1, r1, r3
90012aec:	4461      	add	r1, ip
90012aee:	0149      	lsls	r1, r1, #5
90012af0:	fb91 fef4 	sdiv	lr, r1, r4
90012af4:	fb04 111e 	mls	r1, r4, lr, r1
90012af8:	2900      	cmp	r1, #0
90012afa:	bfbc      	itt	lt
90012afc:	f10e 3eff 	addlt.w	lr, lr, #4294967295
90012b00:	1909      	addlt	r1, r1, r4
90012b02:	f10e 0701 	add.w	r7, lr, #1
90012b06:	970d      	str	r7, [sp, #52]	; 0x34
90012b08:	f8d0 a010 	ldr.w	sl, [r0, #16]
90012b0c:	1852      	adds	r2, r2, r1
90012b0e:	9f0a      	ldr	r7, [sp, #40]	; 0x28
90012b10:	bf54      	ite	pl
90012b12:	f8dd c034 	ldrpl.w	ip, [sp, #52]	; 0x34
90012b16:	46f4      	movmi	ip, lr
90012b18:	f8ba b004 	ldrh.w	fp, [sl, #4]
90012b1c:	bf58      	it	pl
90012b1e:	1b12      	subpl	r2, r2, r4
90012b20:	4463      	add	r3, ip
90012b22:	443d      	add	r5, r7
90012b24:	44e3      	add	fp, ip
90012b26:	f8aa b004 	strh.w	fp, [sl, #4]
90012b2a:	f8ba b006 	ldrh.w	fp, [sl, #6]
90012b2e:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
90012b32:	f8aa b006 	strh.w	fp, [sl, #6]
90012b36:	f8d0 c010 	ldr.w	ip, [r0, #16]
90012b3a:	f8bc b006 	ldrh.w	fp, [ip, #6]
90012b3e:	f8bc a004 	ldrh.w	sl, [ip, #4]
90012b42:	ea5b 070a 	orrs.w	r7, fp, sl
90012b46:	d014      	beq.n	90012b72 <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
90012b48:	f9bc a002 	ldrsh.w	sl, [ip, #2]
90012b4c:	f1ba 0f00 	cmp.w	sl, #0
90012b50:	db0f      	blt.n	90012b72 <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
90012b52:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
90012b54:	45ba      	cmp	sl, r7
90012b56:	da0c      	bge.n	90012b72 <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
90012b58:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
90012b5c:	45ba      	cmp	sl, r7
90012b5e:	f10a 0a01 	add.w	sl, sl, #1
90012b62:	bf38      	it	cc
90012b64:	f10c 0c08 	addcc.w	ip, ip, #8
90012b68:	f8c0 a008 	str.w	sl, [r0, #8]
90012b6c:	bf38      	it	cc
90012b6e:	f8c0 c010 	strcc.w	ip, [r0, #16]
90012b72:	f8d0 c010 	ldr.w	ip, [r0, #16]
90012b76:	f04f 0700 	mov.w	r7, #0
90012b7a:	42ae      	cmp	r6, r5
90012b7c:	f8ac 5000 	strh.w	r5, [ip]
90012b80:	f8ac 8002 	strh.w	r8, [ip, #2]
90012b84:	f8ac 7004 	strh.w	r7, [ip, #4]
90012b88:	f8ac 7006 	strh.w	r7, [ip, #6]
90012b8c:	d1bc      	bne.n	90012b08 <_ZN8touchgfx7Outline10renderLineEiiii+0x574>
90012b8e:	6904      	ldr	r4, [r0, #16]
90012b90:	9a01      	ldr	r2, [sp, #4]
90012b92:	990c      	ldr	r1, [sp, #48]	; 0x30
90012b94:	1ad3      	subs	r3, r2, r3
90012b96:	88a2      	ldrh	r2, [r4, #4]
90012b98:	3120      	adds	r1, #32
90012b9a:	441a      	add	r2, r3
90012b9c:	80a2      	strh	r2, [r4, #4]
90012b9e:	9a09      	ldr	r2, [sp, #36]	; 0x24
90012ba0:	1a89      	subs	r1, r1, r2
90012ba2:	88e2      	ldrh	r2, [r4, #6]
90012ba4:	fb03 2301 	mla	r3, r3, r1, r2
90012ba8:	80e3      	strh	r3, [r4, #6]
90012baa:	e650      	b.n	9001284e <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
90012bac:	f04f 37ff 	mov.w	r7, #4294967295
90012bb0:	434a      	muls	r2, r1
90012bb2:	4264      	negs	r4, r4
90012bb4:	970a      	str	r7, [sp, #40]	; 0x28
90012bb6:	2700      	movs	r7, #0
90012bb8:	e758      	b.n	90012a6c <_ZN8touchgfx7Outline10renderLineEiiii+0x4d8>
90012bba:	ea4f 1867 	mov.w	r8, r7, asr #5
90012bbe:	f009 031f 	and.w	r3, r9, #31
90012bc2:	f007 071f 	and.w	r7, r7, #31
90012bc6:	fa1f fc8c 	uxth.w	ip, ip
90012bca:	45d0      	cmp	r8, sl
90012bcc:	930f      	str	r3, [sp, #60]	; 0x3c
90012bce:	fa1f fe8e 	uxth.w	lr, lr
90012bd2:	d10a      	bne.n	90012bea <_ZN8touchgfx7Outline10renderLineEiiii+0x656>
90012bd4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90012bd6:	449c      	add	ip, r3
90012bd8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90012bda:	441f      	add	r7, r3
90012bdc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90012bde:	f8a5 c004 	strh.w	ip, [r5, #4]
90012be2:	fb03 e707 	mla	r7, r3, r7, lr
90012be6:	80ef      	strh	r7, [r5, #6]
90012be8:	e6bc      	b.n	90012964 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90012bea:	2900      	cmp	r1, #0
90012bec:	f2c0 80a6 	blt.w	90012d3c <_ZN8touchgfx7Outline10renderLineEiiii+0x7a8>
90012bf0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
90012bf2:	f1c7 0320 	rsb	r3, r7, #32
90012bf6:	4363      	muls	r3, r4
90012bf8:	2401      	movs	r4, #1
90012bfa:	940d      	str	r4, [sp, #52]	; 0x34
90012bfc:	2420      	movs	r4, #32
90012bfe:	940c      	str	r4, [sp, #48]	; 0x30
90012c00:	fb93 f4f1 	sdiv	r4, r3, r1
90012c04:	fb01 3b14 	mls	fp, r1, r4, r3
90012c08:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90012c0a:	f1bb 0f00 	cmp.w	fp, #0
90012c0e:	441f      	add	r7, r3
90012c10:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90012c12:	bfbc      	itt	lt
90012c14:	f104 34ff 	addlt.w	r4, r4, #4294967295
90012c18:	448b      	addlt	fp, r1
90012c1a:	fb04 e707 	mla	r7, r4, r7, lr
90012c1e:	44a4      	add	ip, r4
90012c20:	80ef      	strh	r7, [r5, #6]
90012c22:	f8a5 c004 	strh.w	ip, [r5, #4]
90012c26:	eb08 0503 	add.w	r5, r8, r3
90012c2a:	f8d0 c010 	ldr.w	ip, [r0, #16]
90012c2e:	f8bc e006 	ldrh.w	lr, [ip, #6]
90012c32:	f8bc 7004 	ldrh.w	r7, [ip, #4]
90012c36:	ea5e 0307 	orrs.w	r3, lr, r7
90012c3a:	d011      	beq.n	90012c60 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
90012c3c:	f9bc e002 	ldrsh.w	lr, [ip, #2]
90012c40:	f1be 0f00 	cmp.w	lr, #0
90012c44:	db0c      	blt.n	90012c60 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
90012c46:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
90012c48:	45be      	cmp	lr, r7
90012c4a:	da09      	bge.n	90012c60 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
90012c4c:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
90012c50:	45be      	cmp	lr, r7
90012c52:	bf3c      	itt	cc
90012c54:	f10c 0708 	addcc.w	r7, ip, #8
90012c58:	6107      	strcc	r7, [r0, #16]
90012c5a:	f10e 0701 	add.w	r7, lr, #1
90012c5e:	6087      	str	r7, [r0, #8]
90012c60:	6907      	ldr	r7, [r0, #16]
90012c62:	b213      	sxth	r3, r2
90012c64:	4555      	cmp	r5, sl
90012c66:	9310      	str	r3, [sp, #64]	; 0x40
90012c68:	807b      	strh	r3, [r7, #2]
90012c6a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90012c6c:	803d      	strh	r5, [r7, #0]
90012c6e:	80be      	strh	r6, [r7, #4]
90012c70:	eb04 0c03 	add.w	ip, r4, r3
90012c74:	80fe      	strh	r6, [r7, #6]
90012c76:	d050      	beq.n	90012d1a <_ZN8touchgfx7Outline10renderLineEiiii+0x786>
90012c78:	9b01      	ldr	r3, [sp, #4]
90012c7a:	eba3 070c 	sub.w	r7, r3, ip
90012c7e:	ebab 0301 	sub.w	r3, fp, r1
90012c82:	443c      	add	r4, r7
90012c84:	9309      	str	r3, [sp, #36]	; 0x24
90012c86:	0164      	lsls	r4, r4, #5
90012c88:	fb94 f8f1 	sdiv	r8, r4, r1
90012c8c:	fb01 4418 	mls	r4, r1, r8, r4
90012c90:	2c00      	cmp	r4, #0
90012c92:	bfbc      	itt	lt
90012c94:	f108 38ff 	addlt.w	r8, r8, #4294967295
90012c98:	1864      	addlt	r4, r4, r1
90012c9a:	f108 0701 	add.w	r7, r8, #1
90012c9e:	9711      	str	r7, [sp, #68]	; 0x44
90012ca0:	9b09      	ldr	r3, [sp, #36]	; 0x24
90012ca2:	f8d0 e010 	ldr.w	lr, [r0, #16]
90012ca6:	191b      	adds	r3, r3, r4
90012ca8:	f8be b004 	ldrh.w	fp, [lr, #4]
90012cac:	bf54      	ite	pl
90012cae:	9f11      	ldrpl	r7, [sp, #68]	; 0x44
90012cb0:	4647      	movmi	r7, r8
90012cb2:	9309      	str	r3, [sp, #36]	; 0x24
90012cb4:	bf58      	it	pl
90012cb6:	1a5b      	subpl	r3, r3, r1
90012cb8:	44bb      	add	fp, r7
90012cba:	44bc      	add	ip, r7
90012cbc:	bf58      	it	pl
90012cbe:	9309      	strpl	r3, [sp, #36]	; 0x24
90012cc0:	f8ae b004 	strh.w	fp, [lr, #4]
90012cc4:	f8be b006 	ldrh.w	fp, [lr, #6]
90012cc8:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
90012ccc:	9f0d      	ldr	r7, [sp, #52]	; 0x34
90012cce:	f8ae b006 	strh.w	fp, [lr, #6]
90012cd2:	443d      	add	r5, r7
90012cd4:	f8d0 e010 	ldr.w	lr, [r0, #16]
90012cd8:	f8be b006 	ldrh.w	fp, [lr, #6]
90012cdc:	f8be 7004 	ldrh.w	r7, [lr, #4]
90012ce0:	ea5b 0307 	orrs.w	r3, fp, r7
90012ce4:	d011      	beq.n	90012d0a <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
90012ce6:	f9be b002 	ldrsh.w	fp, [lr, #2]
90012cea:	f1bb 0f00 	cmp.w	fp, #0
90012cee:	db0c      	blt.n	90012d0a <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
90012cf0:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
90012cf2:	45bb      	cmp	fp, r7
90012cf4:	da09      	bge.n	90012d0a <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
90012cf6:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
90012cfa:	45bb      	cmp	fp, r7
90012cfc:	bf3c      	itt	cc
90012cfe:	f10e 0708 	addcc.w	r7, lr, #8
90012d02:	6107      	strcc	r7, [r0, #16]
90012d04:	f10b 0701 	add.w	r7, fp, #1
90012d08:	6087      	str	r7, [r0, #8]
90012d0a:	6907      	ldr	r7, [r0, #16]
90012d0c:	4555      	cmp	r5, sl
90012d0e:	9b10      	ldr	r3, [sp, #64]	; 0x40
90012d10:	803d      	strh	r5, [r7, #0]
90012d12:	807b      	strh	r3, [r7, #2]
90012d14:	80be      	strh	r6, [r7, #4]
90012d16:	80fe      	strh	r6, [r7, #6]
90012d18:	d1c2      	bne.n	90012ca0 <_ZN8touchgfx7Outline10renderLineEiiii+0x70c>
90012d1a:	9b01      	ldr	r3, [sp, #4]
90012d1c:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
90012d1e:	eba3 0c0c 	sub.w	ip, r3, ip
90012d22:	6903      	ldr	r3, [r0, #16]
90012d24:	3720      	adds	r7, #32
90012d26:	8899      	ldrh	r1, [r3, #4]
90012d28:	4461      	add	r1, ip
90012d2a:	8099      	strh	r1, [r3, #4]
90012d2c:	990c      	ldr	r1, [sp, #48]	; 0x30
90012d2e:	1a7f      	subs	r7, r7, r1
90012d30:	88d9      	ldrh	r1, [r3, #6]
90012d32:	fb0c 1c07 	mla	ip, ip, r7, r1
90012d36:	f8a3 c006 	strh.w	ip, [r3, #6]
90012d3a:	e613      	b.n	90012964 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90012d3c:	f04f 34ff 	mov.w	r4, #4294967295
90012d40:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90012d42:	4249      	negs	r1, r1
90012d44:	940d      	str	r4, [sp, #52]	; 0x34
90012d46:	2400      	movs	r4, #0
90012d48:	437b      	muls	r3, r7
90012d4a:	e758      	b.n	90012bfe <_ZN8touchgfx7Outline10renderLineEiiii+0x66a>
90012d4c:	9905      	ldr	r1, [sp, #20]
90012d4e:	ea4f 1b69 	mov.w	fp, r9, asr #5
90012d52:	f009 0c1f 	and.w	ip, r9, #31
90012d56:	f8b7 8004 	ldrh.w	r8, [r7, #4]
90012d5a:	f001 011f 	and.w	r1, r1, #31
90012d5e:	45f3      	cmp	fp, lr
90012d60:	f8b7 a006 	ldrh.w	sl, [r7, #6]
90012d64:	9102      	str	r1, [sp, #8]
90012d66:	9904      	ldr	r1, [sp, #16]
90012d68:	eba1 0406 	sub.w	r4, r1, r6
90012d6c:	d108      	bne.n	90012d80 <_ZN8touchgfx7Outline10renderLineEiiii+0x7ec>
90012d6e:	9b02      	ldr	r3, [sp, #8]
90012d70:	44a0      	add	r8, r4
90012d72:	449c      	add	ip, r3
90012d74:	f8a7 8004 	strh.w	r8, [r7, #4]
90012d78:	fb04 a40c 	mla	r4, r4, ip, sl
90012d7c:	80fc      	strh	r4, [r7, #6]
90012d7e:	e461      	b.n	90012644 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90012d80:	9905      	ldr	r1, [sp, #20]
90012d82:	ebb1 0109 	subs.w	r1, r1, r9
90012d86:	bf51      	iteee	pl
90012d88:	f1cc 0520 	rsbpl	r5, ip, #32
90012d8c:	fb04 f40c 	mulmi.w	r4, r4, ip
90012d90:	4249      	negmi	r1, r1
90012d92:	2500      	movmi	r5, #0
90012d94:	bf5d      	ittte	pl
90012d96:	436c      	mulpl	r4, r5
90012d98:	2520      	movpl	r5, #32
90012d9a:	f04f 0901 	movpl.w	r9, #1
90012d9e:	f04f 39ff 	movmi.w	r9, #4294967295
90012da2:	9501      	str	r5, [sp, #4]
90012da4:	9b01      	ldr	r3, [sp, #4]
90012da6:	fb94 f5f1 	sdiv	r5, r4, r1
90012daa:	fb01 4415 	mls	r4, r1, r5, r4
90012dae:	449c      	add	ip, r3
90012db0:	eb0b 0309 	add.w	r3, fp, r9
90012db4:	2c00      	cmp	r4, #0
90012db6:	bfbc      	itt	lt
90012db8:	f105 35ff 	addlt.w	r5, r5, #4294967295
90012dbc:	1864      	addlt	r4, r4, r1
90012dbe:	44a8      	add	r8, r5
90012dc0:	fb05 ac0c 	mla	ip, r5, ip, sl
90012dc4:	f8a7 8004 	strh.w	r8, [r7, #4]
90012dc8:	f8a7 c006 	strh.w	ip, [r7, #6]
90012dcc:	f8d0 c010 	ldr.w	ip, [r0, #16]
90012dd0:	f8bc 8006 	ldrh.w	r8, [ip, #6]
90012dd4:	f8bc 7004 	ldrh.w	r7, [ip, #4]
90012dd8:	ea58 0707 	orrs.w	r7, r8, r7
90012ddc:	d011      	beq.n	90012e02 <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
90012dde:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
90012de2:	f1b8 0f00 	cmp.w	r8, #0
90012de6:	db0c      	blt.n	90012e02 <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
90012de8:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
90012dea:	45b8      	cmp	r8, r7
90012dec:	da09      	bge.n	90012e02 <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
90012dee:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
90012df2:	45b8      	cmp	r8, r7
90012df4:	bf3c      	itt	cc
90012df6:	f10c 0708 	addcc.w	r7, ip, #8
90012dfa:	6107      	strcc	r7, [r0, #16]
90012dfc:	f108 0701 	add.w	r7, r8, #1
90012e00:	6087      	str	r7, [r0, #8]
90012e02:	6907      	ldr	r7, [r0, #16]
90012e04:	f04f 0c00 	mov.w	ip, #0
90012e08:	b212      	sxth	r2, r2
90012e0a:	459e      	cmp	lr, r3
90012e0c:	803b      	strh	r3, [r7, #0]
90012e0e:	442e      	add	r6, r5
90012e10:	807a      	strh	r2, [r7, #2]
90012e12:	f8a7 c004 	strh.w	ip, [r7, #4]
90012e16:	f8a7 c006 	strh.w	ip, [r7, #6]
90012e1a:	d04b      	beq.n	90012eb4 <_ZN8touchgfx7Outline10renderLineEiiii+0x920>
90012e1c:	9f04      	ldr	r7, [sp, #16]
90012e1e:	1a64      	subs	r4, r4, r1
90012e20:	f04f 0a00 	mov.w	sl, #0
90012e24:	1bbf      	subs	r7, r7, r6
90012e26:	443d      	add	r5, r7
90012e28:	016d      	lsls	r5, r5, #5
90012e2a:	fb95 f8f1 	sdiv	r8, r5, r1
90012e2e:	fb01 5518 	mls	r5, r1, r8, r5
90012e32:	4565      	cmp	r5, ip
90012e34:	bfbc      	itt	lt
90012e36:	f108 38ff 	addlt.w	r8, r8, #4294967295
90012e3a:	186d      	addlt	r5, r5, r1
90012e3c:	f108 0701 	add.w	r7, r8, #1
90012e40:	9703      	str	r7, [sp, #12]
90012e42:	f8d0 c010 	ldr.w	ip, [r0, #16]
90012e46:	1964      	adds	r4, r4, r5
90012e48:	444b      	add	r3, r9
90012e4a:	bf54      	ite	pl
90012e4c:	9f03      	ldrpl	r7, [sp, #12]
90012e4e:	4647      	movmi	r7, r8
90012e50:	f8bc b004 	ldrh.w	fp, [ip, #4]
90012e54:	bf58      	it	pl
90012e56:	1a64      	subpl	r4, r4, r1
90012e58:	443e      	add	r6, r7
90012e5a:	44bb      	add	fp, r7
90012e5c:	f8ac b004 	strh.w	fp, [ip, #4]
90012e60:	f8bc b006 	ldrh.w	fp, [ip, #6]
90012e64:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
90012e68:	f8ac b006 	strh.w	fp, [ip, #6]
90012e6c:	f8d0 c010 	ldr.w	ip, [r0, #16]
90012e70:	f8bc b006 	ldrh.w	fp, [ip, #6]
90012e74:	f8bc 7004 	ldrh.w	r7, [ip, #4]
90012e78:	ea5b 0707 	orrs.w	r7, fp, r7
90012e7c:	d011      	beq.n	90012ea2 <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
90012e7e:	f9bc b002 	ldrsh.w	fp, [ip, #2]
90012e82:	f1bb 0f00 	cmp.w	fp, #0
90012e86:	db0c      	blt.n	90012ea2 <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
90012e88:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
90012e8a:	45bb      	cmp	fp, r7
90012e8c:	da09      	bge.n	90012ea2 <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
90012e8e:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
90012e92:	45bb      	cmp	fp, r7
90012e94:	bf3c      	itt	cc
90012e96:	f10c 0708 	addcc.w	r7, ip, #8
90012e9a:	6107      	strcc	r7, [r0, #16]
90012e9c:	f10b 0701 	add.w	r7, fp, #1
90012ea0:	6087      	str	r7, [r0, #8]
90012ea2:	6907      	ldr	r7, [r0, #16]
90012ea4:	459e      	cmp	lr, r3
90012ea6:	803b      	strh	r3, [r7, #0]
90012ea8:	807a      	strh	r2, [r7, #2]
90012eaa:	f8a7 a004 	strh.w	sl, [r7, #4]
90012eae:	f8a7 a006 	strh.w	sl, [r7, #6]
90012eb2:	d1c6      	bne.n	90012e42 <_ZN8touchgfx7Outline10renderLineEiiii+0x8ae>
90012eb4:	9b04      	ldr	r3, [sp, #16]
90012eb6:	1b9e      	subs	r6, r3, r6
90012eb8:	6903      	ldr	r3, [r0, #16]
90012eba:	889a      	ldrh	r2, [r3, #4]
90012ebc:	4432      	add	r2, r6
90012ebe:	809a      	strh	r2, [r3, #4]
90012ec0:	9a02      	ldr	r2, [sp, #8]
90012ec2:	f102 0c20 	add.w	ip, r2, #32
90012ec6:	9a01      	ldr	r2, [sp, #4]
90012ec8:	ebac 0c02 	sub.w	ip, ip, r2
90012ecc:	88da      	ldrh	r2, [r3, #6]
90012ece:	fb06 260c 	mla	r6, r6, ip, r2
90012ed2:	80de      	strh	r6, [r3, #6]
90012ed4:	f7ff bbb6 	b.w	90012644 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>

90012ed8 <_ZN8touchgfx7Outline6lineToEii>:
90012ed8:	6a43      	ldr	r3, [r0, #36]	; 0x24
90012eda:	079b      	lsls	r3, r3, #30
90012edc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
90012ede:	460e      	mov	r6, r1
90012ee0:	4615      	mov	r5, r2
90012ee2:	d511      	bpl.n	90012f08 <_ZN8touchgfx7Outline6lineToEii+0x30>
90012ee4:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
90012ee8:	ea86 0701 	eor.w	r7, r6, r1
90012eec:	ea85 0302 	eor.w	r3, r5, r2
90012ef0:	433b      	orrs	r3, r7
90012ef2:	d009      	beq.n	90012f08 <_ZN8touchgfx7Outline6lineToEii+0x30>
90012ef4:	4633      	mov	r3, r6
90012ef6:	9500      	str	r5, [sp, #0]
90012ef8:	f7ff fb4c 	bl	90012594 <_ZN8touchgfx7Outline10renderLineEiiii>
90012efc:	6a43      	ldr	r3, [r0, #36]	; 0x24
90012efe:	f043 0301 	orr.w	r3, r3, #1
90012f02:	e9c0 6505 	strd	r6, r5, [r0, #20]
90012f06:	6243      	str	r3, [r0, #36]	; 0x24
90012f08:	b003      	add	sp, #12
90012f0a:	bdf0      	pop	{r4, r5, r6, r7, pc}

90012f0c <_ZN8touchgfx7Outline6moveToEii>:
90012f0c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90012f0e:	6a43      	ldr	r3, [r0, #36]	; 0x24
90012f10:	4615      	mov	r5, r2
90012f12:	4604      	mov	r4, r0
90012f14:	460e      	mov	r6, r1
90012f16:	079a      	lsls	r2, r3, #30
90012f18:	d401      	bmi.n	90012f1e <_ZN8touchgfx7Outline6moveToEii+0x12>
90012f1a:	f7ff fb07 	bl	9001252c <_ZN8touchgfx7Outline5resetEv>
90012f1e:	6a63      	ldr	r3, [r4, #36]	; 0x24
90012f20:	07db      	lsls	r3, r3, #31
90012f22:	d504      	bpl.n	90012f2e <_ZN8touchgfx7Outline6moveToEii+0x22>
90012f24:	4620      	mov	r0, r4
90012f26:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
90012f2a:	f7ff ffd5 	bl	90012ed8 <_ZN8touchgfx7Outline6lineToEii>
90012f2e:	6923      	ldr	r3, [r4, #16]
90012f30:	1170      	asrs	r0, r6, #5
90012f32:	1169      	asrs	r1, r5, #5
90012f34:	f9b3 2000 	ldrsh.w	r2, [r3]
90012f38:	4290      	cmp	r0, r2
90012f3a:	d103      	bne.n	90012f44 <_ZN8touchgfx7Outline6moveToEii+0x38>
90012f3c:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
90012f40:	4291      	cmp	r1, r2
90012f42:	d01a      	beq.n	90012f7a <_ZN8touchgfx7Outline6moveToEii+0x6e>
90012f44:	88df      	ldrh	r7, [r3, #6]
90012f46:	889a      	ldrh	r2, [r3, #4]
90012f48:	433a      	orrs	r2, r7
90012f4a:	d010      	beq.n	90012f6e <_ZN8touchgfx7Outline6moveToEii+0x62>
90012f4c:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
90012f50:	2a00      	cmp	r2, #0
90012f52:	db0c      	blt.n	90012f6e <_ZN8touchgfx7Outline6moveToEii+0x62>
90012f54:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
90012f56:	42ba      	cmp	r2, r7
90012f58:	da09      	bge.n	90012f6e <_ZN8touchgfx7Outline6moveToEii+0x62>
90012f5a:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
90012f5e:	42ba      	cmp	r2, r7
90012f60:	f102 0201 	add.w	r2, r2, #1
90012f64:	bf38      	it	cc
90012f66:	3308      	addcc	r3, #8
90012f68:	60a2      	str	r2, [r4, #8]
90012f6a:	bf38      	it	cc
90012f6c:	6123      	strcc	r3, [r4, #16]
90012f6e:	6923      	ldr	r3, [r4, #16]
90012f70:	2200      	movs	r2, #0
90012f72:	8018      	strh	r0, [r3, #0]
90012f74:	8059      	strh	r1, [r3, #2]
90012f76:	809a      	strh	r2, [r3, #4]
90012f78:	80da      	strh	r2, [r3, #6]
90012f7a:	6166      	str	r6, [r4, #20]
90012f7c:	6225      	str	r5, [r4, #32]
90012f7e:	e9c4 5606 	strd	r5, r6, [r4, #24]
90012f82:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

90012f84 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
90012f84:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90012f88:	b0d0      	sub	sp, #320	; 0x140
90012f8a:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
90012f8e:	466c      	mov	r4, sp
90012f90:	4627      	mov	r7, r4
90012f92:	1a0d      	subs	r5, r1, r0
90012f94:	f100 0308 	add.w	r3, r0, #8
90012f98:	2d48      	cmp	r5, #72	; 0x48
90012f9a:	f340 80d5 	ble.w	90013148 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
90012f9e:	112d      	asrs	r5, r5, #4
90012fa0:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
90012fa4:	f9b0 9000 	ldrsh.w	r9, [r0]
90012fa8:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
90012fac:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
90012fb0:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
90012fb4:	6816      	ldr	r6, [r2, #0]
90012fb6:	6006      	str	r6, [r0, #0]
90012fb8:	6856      	ldr	r6, [r2, #4]
90012fba:	6046      	str	r6, [r0, #4]
90012fbc:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
90012fc0:	f8a2 8002 	strh.w	r8, [r2, #2]
90012fc4:	f8a2 e004 	strh.w	lr, [r2, #4]
90012fc8:	f8a2 c006 	strh.w	ip, [r2, #6]
90012fcc:	f1a1 0208 	sub.w	r2, r1, #8
90012fd0:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
90012fd4:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
90012fd8:	4565      	cmp	r5, ip
90012fda:	db06      	blt.n	90012fea <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
90012fdc:	d119      	bne.n	90013012 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
90012fde:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
90012fe2:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
90012fe6:	42ae      	cmp	r6, r5
90012fe8:	dd13      	ble.n	90013012 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
90012fea:	460e      	mov	r6, r1
90012fec:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
90012ff0:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
90012ff4:	f856 5d08 	ldr.w	r5, [r6, #-8]!
90012ff8:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
90012ffc:	601d      	str	r5, [r3, #0]
90012ffe:	6875      	ldr	r5, [r6, #4]
90013000:	605d      	str	r5, [r3, #4]
90013002:	f821 9c08 	strh.w	r9, [r1, #-8]
90013006:	f821 cc06 	strh.w	ip, [r1, #-6]
9001300a:	f821 8c04 	strh.w	r8, [r1, #-4]
9001300e:	f821 ec02 	strh.w	lr, [r1, #-2]
90013012:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
90013016:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
9001301a:	42ae      	cmp	r6, r5
9001301c:	db06      	blt.n	9001302c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
9001301e:	d116      	bne.n	9001304e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
90013020:	f9b0 c000 	ldrsh.w	ip, [r0]
90013024:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
90013028:	45ac      	cmp	ip, r5
9001302a:	da10      	bge.n	9001304e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
9001302c:	681d      	ldr	r5, [r3, #0]
9001302e:	f9b0 8000 	ldrsh.w	r8, [r0]
90013032:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
90013036:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
9001303a:	6005      	str	r5, [r0, #0]
9001303c:	685d      	ldr	r5, [r3, #4]
9001303e:	f8a0 8008 	strh.w	r8, [r0, #8]
90013042:	6045      	str	r5, [r0, #4]
90013044:	8146      	strh	r6, [r0, #10]
90013046:	f8a0 e00c 	strh.w	lr, [r0, #12]
9001304a:	f8a0 c00e 	strh.w	ip, [r0, #14]
9001304e:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
90013052:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
90013056:	4565      	cmp	r5, ip
90013058:	db06      	blt.n	90013068 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
9001305a:	d119      	bne.n	90013090 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
9001305c:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
90013060:	f9b0 5000 	ldrsh.w	r5, [r0]
90013064:	42ae      	cmp	r6, r5
90013066:	da13      	bge.n	90013090 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
90013068:	460e      	mov	r6, r1
9001306a:	f9b0 9000 	ldrsh.w	r9, [r0]
9001306e:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
90013072:	f856 5d08 	ldr.w	r5, [r6, #-8]!
90013076:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
9001307a:	6005      	str	r5, [r0, #0]
9001307c:	6875      	ldr	r5, [r6, #4]
9001307e:	6045      	str	r5, [r0, #4]
90013080:	f821 9c08 	strh.w	r9, [r1, #-8]
90013084:	f821 cc06 	strh.w	ip, [r1, #-6]
90013088:	f821 8c04 	strh.w	r8, [r1, #-4]
9001308c:	f821 ec02 	strh.w	lr, [r1, #-2]
90013090:	3308      	adds	r3, #8
90013092:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
90013096:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
9001309a:	45e6      	cmp	lr, ip
9001309c:	dbf8      	blt.n	90013090 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
9001309e:	d105      	bne.n	900130ac <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
900130a0:	f9b3 6000 	ldrsh.w	r6, [r3]
900130a4:	f9b0 5000 	ldrsh.w	r5, [r0]
900130a8:	42ae      	cmp	r6, r5
900130aa:	dbf1      	blt.n	90013090 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
900130ac:	4615      	mov	r5, r2
900130ae:	3a08      	subs	r2, #8
900130b0:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
900130b4:	45b4      	cmp	ip, r6
900130b6:	dbf9      	blt.n	900130ac <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
900130b8:	d105      	bne.n	900130c6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
900130ba:	f9b0 8000 	ldrsh.w	r8, [r0]
900130be:	f9b2 6000 	ldrsh.w	r6, [r2]
900130c2:	45b0      	cmp	r8, r6
900130c4:	dbf2      	blt.n	900130ac <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
900130c6:	4293      	cmp	r3, r2
900130c8:	f1a5 0608 	sub.w	r6, r5, #8
900130cc:	d816      	bhi.n	900130fc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
900130ce:	f8d6 c000 	ldr.w	ip, [r6]
900130d2:	f9b3 a000 	ldrsh.w	sl, [r3]
900130d6:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
900130da:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
900130de:	f8c3 c000 	str.w	ip, [r3]
900130e2:	f8d6 c004 	ldr.w	ip, [r6, #4]
900130e6:	f8c3 c004 	str.w	ip, [r3, #4]
900130ea:	f825 ac08 	strh.w	sl, [r5, #-8]
900130ee:	f825 ec06 	strh.w	lr, [r5, #-6]
900130f2:	f825 9c04 	strh.w	r9, [r5, #-4]
900130f6:	f825 8c02 	strh.w	r8, [r5, #-2]
900130fa:	e7c9      	b.n	90013090 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
900130fc:	f8d6 e000 	ldr.w	lr, [r6]
90013100:	f9b0 a000 	ldrsh.w	sl, [r0]
90013104:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
90013108:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
9001310c:	f8c0 e000 	str.w	lr, [r0]
90013110:	f8d6 e004 	ldr.w	lr, [r6, #4]
90013114:	1a16      	subs	r6, r2, r0
90013116:	f8c0 e004 	str.w	lr, [r0, #4]
9001311a:	f825 ac08 	strh.w	sl, [r5, #-8]
9001311e:	f825 cc06 	strh.w	ip, [r5, #-6]
90013122:	f825 9c04 	strh.w	r9, [r5, #-4]
90013126:	f825 8c02 	strh.w	r8, [r5, #-2]
9001312a:	1acd      	subs	r5, r1, r3
9001312c:	10ed      	asrs	r5, r5, #3
9001312e:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
90013132:	bfb5      	itete	lt
90013134:	e9c4 0200 	strdlt	r0, r2, [r4]
90013138:	e9c4 3100 	strdge	r3, r1, [r4]
9001313c:	460a      	movlt	r2, r1
9001313e:	4603      	movge	r3, r0
90013140:	3408      	adds	r4, #8
90013142:	4618      	mov	r0, r3
90013144:	4611      	mov	r1, r2
90013146:	e724      	b.n	90012f92 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
90013148:	4299      	cmp	r1, r3
9001314a:	d927      	bls.n	9001319c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x218>
9001314c:	f1a3 0210 	sub.w	r2, r3, #16
90013150:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
90013154:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
90013158:	45ac      	cmp	ip, r5
9001315a:	db06      	blt.n	9001316a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
9001315c:	d11c      	bne.n	90013198 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x214>
9001315e:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
90013162:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
90013166:	42ae      	cmp	r6, r5
90013168:	da16      	bge.n	90013198 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x214>
9001316a:	4615      	mov	r5, r2
9001316c:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
90013170:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
90013174:	3a08      	subs	r2, #8
90013176:	f855 6f08 	ldr.w	r6, [r5, #8]!
9001317a:	f9b2 e01e 	ldrsh.w	lr, [r2, #30]
9001317e:	6196      	str	r6, [r2, #24]
90013180:	42a8      	cmp	r0, r5
90013182:	686e      	ldr	r6, [r5, #4]
90013184:	f8a2 9010 	strh.w	r9, [r2, #16]
90013188:	61d6      	str	r6, [r2, #28]
9001318a:	f8a2 c012 	strh.w	ip, [r2, #18]
9001318e:	f8a2 8014 	strh.w	r8, [r2, #20]
90013192:	f8a2 e016 	strh.w	lr, [r2, #22]
90013196:	d1db      	bne.n	90013150 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
90013198:	3308      	adds	r3, #8
9001319a:	e7d5      	b.n	90013148 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
9001319c:	42bc      	cmp	r4, r7
9001319e:	d903      	bls.n	900131a8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x224>
900131a0:	e954 0102 	ldrd	r0, r1, [r4, #-8]
900131a4:	3c08      	subs	r4, #8
900131a6:	e6f4      	b.n	90012f92 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
900131a8:	b050      	add	sp, #320	; 0x140
900131aa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

900131ae <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
900131ae:	b510      	push	{r4, lr}
900131b0:	6a43      	ldr	r3, [r0, #36]	; 0x24
900131b2:	4604      	mov	r4, r0
900131b4:	07da      	lsls	r2, r3, #31
900131b6:	d507      	bpl.n	900131c8 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
900131b8:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
900131bc:	f7ff fe8c 	bl	90012ed8 <_ZN8touchgfx7Outline6lineToEii>
900131c0:	6a43      	ldr	r3, [r0, #36]	; 0x24
900131c2:	f023 0301 	bic.w	r3, r3, #1
900131c6:	6243      	str	r3, [r0, #36]	; 0x24
900131c8:	6a63      	ldr	r3, [r4, #36]	; 0x24
900131ca:	079b      	lsls	r3, r3, #30
900131cc:	d521      	bpl.n	90013212 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
900131ce:	6923      	ldr	r3, [r4, #16]
900131d0:	88d9      	ldrh	r1, [r3, #6]
900131d2:	889a      	ldrh	r2, [r3, #4]
900131d4:	430a      	orrs	r2, r1
900131d6:	d010      	beq.n	900131fa <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
900131d8:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
900131dc:	2a00      	cmp	r2, #0
900131de:	db0c      	blt.n	900131fa <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
900131e0:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
900131e2:	428a      	cmp	r2, r1
900131e4:	da09      	bge.n	900131fa <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
900131e6:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
900131ea:	4291      	cmp	r1, r2
900131ec:	f102 0201 	add.w	r2, r2, #1
900131f0:	bf88      	it	hi
900131f2:	3308      	addhi	r3, #8
900131f4:	60a2      	str	r2, [r4, #8]
900131f6:	bf88      	it	hi
900131f8:	6123      	strhi	r3, [r4, #16]
900131fa:	68a1      	ldr	r1, [r4, #8]
900131fc:	b129      	cbz	r1, 9001320a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
900131fe:	6863      	ldr	r3, [r4, #4]
90013200:	4299      	cmp	r1, r3
90013202:	d802      	bhi.n	9001320a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
90013204:	68e0      	ldr	r0, [r4, #12]
90013206:	f7ff febd 	bl	90012f84 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
9001320a:	6a63      	ldr	r3, [r4, #36]	; 0x24
9001320c:	f023 0302 	bic.w	r3, r3, #2
90013210:	6263      	str	r3, [r4, #36]	; 0x24
90013212:	68e0      	ldr	r0, [r4, #12]
90013214:	bd10      	pop	{r4, pc}
	...

90013218 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
90013218:	4b02      	ldr	r3, [pc, #8]	; (90013224 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
9001321a:	6018      	str	r0, [r3, #0]
9001321c:	4b02      	ldr	r3, [pc, #8]	; (90013228 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
9001321e:	6019      	str	r1, [r3, #0]
90013220:	4770      	bx	lr
90013222:	bf00      	nop
90013224:	24023584 	.word	0x24023584
90013228:	24023588 	.word	0x24023588

9001322c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>:
9001322c:	2300      	movs	r3, #0
9001322e:	4a02      	ldr	r2, [pc, #8]	; (90013238 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0xc>)
90013230:	6013      	str	r3, [r2, #0]
90013232:	4a02      	ldr	r2, [pc, #8]	; (9001323c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0x10>)
90013234:	6013      	str	r3, [r2, #0]
90013236:	4770      	bx	lr
90013238:	24023584 	.word	0x24023584
9001323c:	24023588 	.word	0x24023588

90013240 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
90013240:	4b01      	ldr	r3, [pc, #4]	; (90013248 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
90013242:	6818      	ldr	r0, [r3, #0]
90013244:	4770      	bx	lr
90013246:	bf00      	nop
90013248:	24023584 	.word	0x24023584

9001324c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
9001324c:	4b01      	ldr	r3, [pc, #4]	; (90013254 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
9001324e:	6818      	ldr	r0, [r3, #0]
90013250:	4770      	bx	lr
90013252:	bf00      	nop
90013254:	24023588 	.word	0x24023588

90013258 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
90013258:	b510      	push	{r4, lr}
9001325a:	6803      	ldr	r3, [r0, #0]
9001325c:	460c      	mov	r4, r1
9001325e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90013260:	4798      	blx	r3
90013262:	1b03      	subs	r3, r0, r4
90013264:	4258      	negs	r0, r3
90013266:	4158      	adcs	r0, r3
90013268:	bd10      	pop	{r4, pc}
	...

9001326c <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
9001326c:	4b01      	ldr	r3, [pc, #4]	; (90013274 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
9001326e:	6019      	str	r1, [r3, #0]
90013270:	4770      	bx	lr
90013272:	bf00      	nop
90013274:	2402358c 	.word	0x2402358c

90013278 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
90013278:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001327c:	4696      	mov	lr, r2
9001327e:	b097      	sub	sp, #92	; 0x5c
90013280:	4605      	mov	r5, r0
90013282:	4614      	mov	r4, r2
90013284:	460e      	mov	r6, r1
90013286:	461f      	mov	r7, r3
90013288:	f10d 0c1c 	add.w	ip, sp, #28
9001328c:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
90013290:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
90013294:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
90013298:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
9001329c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
900132a0:	f8de 3000 	ldr.w	r3, [lr]
900132a4:	f104 0e14 	add.w	lr, r4, #20
900132a8:	f8cc 3000 	str.w	r3, [ip]
900132ac:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
900132b0:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
900132b4:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
900132b8:	f8de 3000 	ldr.w	r3, [lr]
900132bc:	f104 0e28 	add.w	lr, r4, #40	; 0x28
900132c0:	f8cc 3000 	str.w	r3, [ip]
900132c4:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
900132c8:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
900132cc:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
900132d0:	f8de 3000 	ldr.w	r3, [lr]
900132d4:	4631      	mov	r1, r6
900132d6:	9a21      	ldr	r2, [sp, #132]	; 0x84
900132d8:	4628      	mov	r0, r5
900132da:	f8cc 3000 	str.w	r3, [ip]
900132de:	682b      	ldr	r3, [r5, #0]
900132e0:	9201      	str	r2, [sp, #4]
900132e2:	9a20      	ldr	r2, [sp, #128]	; 0x80
900132e4:	f8cd 8008 	str.w	r8, [sp, #8]
900132e8:	9200      	str	r2, [sp, #0]
900132ea:	aa07      	add	r2, sp, #28
900132ec:	e9cd 9a03 	strd	r9, sl, [sp, #12]
900132f0:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
900132f4:	463b      	mov	r3, r7
900132f6:	47d8      	blx	fp
900132f8:	46a6      	mov	lr, r4
900132fa:	f10d 0c1c 	add.w	ip, sp, #28
900132fe:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
90013302:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90013306:	f8de 3000 	ldr.w	r3, [lr]
9001330a:	f104 0e28 	add.w	lr, r4, #40	; 0x28
9001330e:	343c      	adds	r4, #60	; 0x3c
90013310:	f8cc 3000 	str.w	r3, [ip]
90013314:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
90013318:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
9001331c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90013320:	f8de 3000 	ldr.w	r3, [lr]
90013324:	f8cc 3000 	str.w	r3, [ip]
90013328:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
9001332c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
9001332e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90013332:	6823      	ldr	r3, [r4, #0]
90013334:	4631      	mov	r1, r6
90013336:	4628      	mov	r0, r5
90013338:	f8cc 3000 	str.w	r3, [ip]
9001333c:	682b      	ldr	r3, [r5, #0]
9001333e:	e9cd 9a03 	strd	r9, sl, [sp, #12]
90013342:	9a21      	ldr	r2, [sp, #132]	; 0x84
90013344:	f8cd 8008 	str.w	r8, [sp, #8]
90013348:	9201      	str	r2, [sp, #4]
9001334a:	9a20      	ldr	r2, [sp, #128]	; 0x80
9001334c:	9200      	str	r2, [sp, #0]
9001334e:	aa07      	add	r2, sp, #28
90013350:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
90013352:	463b      	mov	r3, r7
90013354:	47a0      	blx	r4
90013356:	b017      	add	sp, #92	; 0x5c
90013358:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001335c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
9001335c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90013360:	b08d      	sub	sp, #52	; 0x34
90013362:	4688      	mov	r8, r1
90013364:	f8d3 c000 	ldr.w	ip, [r3]
90013368:	9916      	ldr	r1, [sp, #88]	; 0x58
9001336a:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
9001336e:	680f      	ldr	r7, [r1, #0]
90013370:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
90013374:	eba7 070c 	sub.w	r7, r7, ip
90013378:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
9001337c:	edd3 6a07 	vldr	s13, [r3, #28]
90013380:	42bc      	cmp	r4, r7
90013382:	9918      	ldr	r1, [sp, #96]	; 0x60
90013384:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
90013388:	bfa8      	it	ge
9001338a:	463c      	movge	r4, r7
9001338c:	f9b1 9000 	ldrsh.w	r9, [r1]
90013390:	f9ba 1000 	ldrsh.w	r1, [sl]
90013394:	ee07 4a90 	vmov	s15, r4
90013398:	eb09 0e0c 	add.w	lr, r9, ip
9001339c:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
900133a0:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
900133a4:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
900133a8:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
900133ac:	4571      	cmp	r1, lr
900133ae:	ee25 4a04 	vmul.f32	s8, s10, s8
900133b2:	ee65 4a24 	vmul.f32	s9, s10, s9
900133b6:	ee25 5a27 	vmul.f32	s10, s10, s15
900133ba:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
900133be:	ee71 0aa4 	vadd.f32	s1, s3, s9
900133c2:	ee32 1a05 	vadd.f32	s2, s4, s10
900133c6:	ee87 7aa6 	vdiv.f32	s14, s15, s13
900133ca:	ee36 0a84 	vadd.f32	s0, s13, s8
900133ce:	ee61 1a87 	vmul.f32	s3, s3, s14
900133d2:	ee22 2a07 	vmul.f32	s4, s4, s14
900133d6:	f340 808c 	ble.w	900134f2 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x196>
900133da:	eba1 060e 	sub.w	r6, r1, lr
900133de:	fb96 f5f4 	sdiv	r5, r6, r4
900133e2:	ee07 5a10 	vmov	s14, r5
900133e6:	2d00      	cmp	r5, #0
900133e8:	fb04 6615 	mls	r6, r4, r5, r6
900133ec:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
900133f0:	eea7 0a04 	vfma.f32	s0, s14, s8
900133f4:	eee7 0a24 	vfma.f32	s1, s14, s9
900133f8:	eea7 1a05 	vfma.f32	s2, s14, s10
900133fc:	dd12      	ble.n	90013424 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xc8>
900133fe:	ee70 6a44 	vsub.f32	s13, s0, s8
90013402:	ee70 1ae4 	vsub.f32	s3, s1, s9
90013406:	ee31 2a45 	vsub.f32	s4, s2, s10
9001340a:	eef5 6a40 	vcmp.f32	s13, #0.0
9001340e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90013412:	bf14      	ite	ne
90013414:	ee87 7aa6 	vdivne.f32	s14, s15, s13
90013418:	eeb0 7a67 	vmoveq.f32	s14, s15
9001341c:	ee61 1a87 	vmul.f32	s3, s3, s14
90013420:	ee22 2a07 	vmul.f32	s4, s4, s14
90013424:	fb05 f204 	mul.w	r2, r5, r4
90013428:	1abf      	subs	r7, r7, r2
9001342a:	4494      	add	ip, r2
9001342c:	f8ba 2004 	ldrh.w	r2, [sl, #4]
90013430:	4411      	add	r1, r2
90013432:	eb09 020c 	add.w	r2, r9, ip
90013436:	b209      	sxth	r1, r1
90013438:	443a      	add	r2, r7
9001343a:	428a      	cmp	r2, r1
9001343c:	bfc4      	itt	gt
9001343e:	eba1 0209 	subgt.w	r2, r1, r9
90013442:	eba2 070c 	subgt.w	r7, r2, ip
90013446:	2f00      	cmp	r7, #0
90013448:	dd50      	ble.n	900134ec <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x190>
9001344a:	fb97 f1f4 	sdiv	r1, r7, r4
9001344e:	fb04 7211 	mls	r2, r4, r1, r7
90013452:	b90a      	cbnz	r2, 90013458 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfc>
90013454:	3901      	subs	r1, #1
90013456:	4622      	mov	r2, r4
90013458:	eec7 3a80 	vdiv.f32	s7, s15, s0
9001345c:	6840      	ldr	r0, [r0, #4]
9001345e:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
90013462:	44b6      	add	lr, r6
90013464:	f8d0 a000 	ldr.w	sl, [r0]
90013468:	2900      	cmp	r1, #0
9001346a:	bfcc      	ite	gt
9001346c:	46a1      	movgt	r9, r4
9001346e:	4691      	movle	r9, r2
90013470:	900b      	str	r0, [sp, #44]	; 0x2c
90013472:	9817      	ldr	r0, [sp, #92]	; 0x5c
90013474:	fb04 e505 	mla	r5, r4, r5, lr
90013478:	eef0 6a42 	vmov.f32	s13, s4
9001347c:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
90013480:	9008      	str	r0, [sp, #32]
90013482:	eeb0 7a61 	vmov.f32	s14, s3
90013486:	9818      	ldr	r0, [sp, #96]	; 0x60
90013488:	695b      	ldr	r3, [r3, #20]
9001348a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001348e:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
90013492:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
90013496:	980b      	ldr	r0, [sp, #44]	; 0x2c
90013498:	445b      	add	r3, fp
9001349a:	9307      	str	r3, [sp, #28]
9001349c:	ee16 3a90 	vmov	r3, s13
900134a0:	e9cd 8505 	strd	r8, r5, [sp, #20]
900134a4:	ee60 2aa3 	vmul.f32	s5, s1, s7
900134a8:	ee21 3a23 	vmul.f32	s6, s2, s7
900134ac:	ee72 7ae1 	vsub.f32	s15, s5, s3
900134b0:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
900134b4:	ee17 7a90 	vmov	r7, s15
900134b8:	ee73 7a42 	vsub.f32	s15, s6, s4
900134bc:	fb97 f7f4 	sdiv	r7, r7, r4
900134c0:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
900134c4:	ee17 ca90 	vmov	ip, s15
900134c8:	fb9c fcf4 	sdiv	ip, ip, r4
900134cc:	fb0c 3306 	mla	r3, ip, r6, r3
900134d0:	9302      	str	r3, [sp, #8]
900134d2:	ee17 3a10 	vmov	r3, s14
900134d6:	e9cd 7c03 	strd	r7, ip, [sp, #12]
900134da:	fb07 3706 	mla	r7, r7, r6, r3
900134de:	eba9 0306 	sub.w	r3, r9, r6
900134e2:	e9cd 4700 	strd	r4, r7, [sp]
900134e6:	f8da 4008 	ldr.w	r4, [sl, #8]
900134ea:	47a0      	blx	r4
900134ec:	b00d      	add	sp, #52	; 0x34
900134ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900134f2:	2500      	movs	r5, #0
900134f4:	462e      	mov	r6, r5
900134f6:	e799      	b.n	9001342c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd0>

900134f8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
900134f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900134fc:	b0db      	sub	sp, #364	; 0x16c
900134fe:	461d      	mov	r5, r3
90013500:	4614      	mov	r4, r2
90013502:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
90013506:	910f      	str	r1, [sp, #60]	; 0x3c
90013508:	4629      	mov	r1, r5
9001350a:	930a      	str	r3, [sp, #40]	; 0x28
9001350c:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
90013510:	9009      	str	r0, [sp, #36]	; 0x24
90013512:	930b      	str	r3, [sp, #44]	; 0x2c
90013514:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
90013518:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
9001351c:	9310      	str	r3, [sp, #64]	; 0x40
9001351e:	6803      	ldr	r3, [r0, #0]
90013520:	6c5f      	ldr	r7, [r3, #68]	; 0x44
90013522:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
90013526:	47b8      	blx	r7
90013528:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001352a:	6058      	str	r0, [r3, #4]
9001352c:	2800      	cmp	r0, #0
9001352e:	f000 83a1 	beq.w	90013c74 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90013532:	682b      	ldr	r3, [r5, #0]
90013534:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
90013538:	ed94 7a02 	vldr	s14, [r4, #8]
9001353c:	9314      	str	r3, [sp, #80]	; 0x50
9001353e:	686b      	ldr	r3, [r5, #4]
90013540:	eeb4 7ae7 	vcmpe.f32	s14, s15
90013544:	9315      	str	r3, [sp, #84]	; 0x54
90013546:	4bc1      	ldr	r3, [pc, #772]	; (9001384c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
90013548:	7819      	ldrb	r1, [r3, #0]
9001354a:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
9001354e:	2900      	cmp	r1, #0
90013550:	bf16      	itet	ne
90013552:	4619      	movne	r1, r3
90013554:	4611      	moveq	r1, r2
90013556:	4613      	movne	r3, r2
90013558:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001355c:	9116      	str	r1, [sp, #88]	; 0x58
9001355e:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
90013562:	f240 8387 	bls.w	90013c74 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90013566:	ed94 7a07 	vldr	s14, [r4, #28]
9001356a:	eeb4 7ae7 	vcmpe.f32	s14, s15
9001356e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90013572:	f240 837f 	bls.w	90013c74 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90013576:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
9001357a:	eeb4 7ae7 	vcmpe.f32	s14, s15
9001357e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90013582:	f240 8377 	bls.w	90013c74 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90013586:	6822      	ldr	r2, [r4, #0]
90013588:	4bb1      	ldr	r3, [pc, #708]	; (90013850 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
9001358a:	429a      	cmp	r2, r3
9001358c:	f2c0 8372 	blt.w	90013c74 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90013590:	49b0      	ldr	r1, [pc, #704]	; (90013854 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
90013592:	6963      	ldr	r3, [r4, #20]
90013594:	428a      	cmp	r2, r1
90013596:	f300 836d 	bgt.w	90013c74 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
9001359a:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
9001359e:	48ae      	ldr	r0, [pc, #696]	; (90013858 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
900135a0:	33ff      	adds	r3, #255	; 0xff
900135a2:	4283      	cmp	r3, r0
900135a4:	f200 8366 	bhi.w	90013c74 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
900135a8:	6aa3      	ldr	r3, [r4, #40]	; 0x28
900135aa:	4dac      	ldr	r5, [pc, #688]	; (9001385c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
900135ac:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
900135b0:	33ff      	adds	r3, #255	; 0xff
900135b2:	42ab      	cmp	r3, r5
900135b4:	f200 835e 	bhi.w	90013c74 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
900135b8:	6862      	ldr	r2, [r4, #4]
900135ba:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
900135be:	33ff      	adds	r3, #255	; 0xff
900135c0:	4283      	cmp	r3, r0
900135c2:	f200 8357 	bhi.w	90013c74 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
900135c6:	69a1      	ldr	r1, [r4, #24]
900135c8:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
900135cc:	33ff      	adds	r3, #255	; 0xff
900135ce:	4283      	cmp	r3, r0
900135d0:	f200 8350 	bhi.w	90013c74 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
900135d4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
900135d6:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
900135da:	30ff      	adds	r0, #255	; 0xff
900135dc:	42a8      	cmp	r0, r5
900135de:	f200 8349 	bhi.w	90013c74 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
900135e2:	428a      	cmp	r2, r1
900135e4:	f280 8110 	bge.w	90013808 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
900135e8:	429a      	cmp	r2, r3
900135ea:	f300 8119 	bgt.w	90013820 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
900135ee:	4299      	cmp	r1, r3
900135f0:	f280 811d 	bge.w	9001382e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
900135f4:	2502      	movs	r5, #2
900135f6:	2701      	movs	r7, #1
900135f8:	46a9      	mov	r9, r5
900135fa:	46b8      	mov	r8, r7
900135fc:	f04f 0a00 	mov.w	sl, #0
90013600:	4621      	mov	r1, r4
90013602:	a849      	add	r0, sp, #292	; 0x124
90013604:	f003 fe26 	bl	90017254 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
90013608:	4622      	mov	r2, r4
9001360a:	4653      	mov	r3, sl
9001360c:	a949      	add	r1, sp, #292	; 0x124
9001360e:	f8cd 9000 	str.w	r9, [sp]
90013612:	a819      	add	r0, sp, #100	; 0x64
90013614:	f003 ff4e 	bl	900174b4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
90013618:	4622      	mov	r2, r4
9001361a:	4653      	mov	r3, sl
9001361c:	a949      	add	r1, sp, #292	; 0x124
9001361e:	f8cd 8000 	str.w	r8, [sp]
90013622:	a829      	add	r0, sp, #164	; 0xa4
90013624:	f003 ff46 	bl	900174b4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
90013628:	4643      	mov	r3, r8
9001362a:	4622      	mov	r2, r4
9001362c:	a949      	add	r1, sp, #292	; 0x124
9001362e:	f8cd 9000 	str.w	r9, [sp]
90013632:	a839      	add	r0, sp, #228	; 0xe4
90013634:	f003 ff3e 	bl	900174b4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
90013638:	42af      	cmp	r7, r5
9001363a:	af12      	add	r7, sp, #72	; 0x48
9001363c:	bfb7      	itett	lt
9001363e:	2300      	movlt	r3, #0
90013640:	2301      	movge	r3, #1
90013642:	ad29      	addlt	r5, sp, #164	; 0xa4
90013644:	ac19      	addlt	r4, sp, #100	; 0x64
90013646:	bfb1      	iteee	lt
90013648:	930e      	strlt	r3, [sp, #56]	; 0x38
9001364a:	ad19      	addge	r5, sp, #100	; 0x64
9001364c:	930e      	strge	r3, [sp, #56]	; 0x38
9001364e:	ac29      	addge	r4, sp, #164	; 0xa4
90013650:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90013652:	e893 0003 	ldmia.w	r3, {r0, r1}
90013656:	e887 0003 	stmia.w	r7, {r0, r1}
9001365a:	b928      	cbnz	r0, 90013668 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
9001365c:	4b80      	ldr	r3, [pc, #512]	; (90013860 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
9001365e:	6818      	ldr	r0, [r3, #0]
90013660:	6803      	ldr	r3, [r0, #0]
90013662:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90013664:	4798      	blx	r3
90013666:	6038      	str	r0, [r7, #0]
90013668:	9b64      	ldr	r3, [sp, #400]	; 0x190
9001366a:	f8bb 0006 	ldrh.w	r0, [fp, #6]
9001366e:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
90013672:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
90013674:	930c      	str	r3, [sp, #48]	; 0x30
90013676:	990c      	ldr	r1, [sp, #48]	; 0x30
90013678:	6963      	ldr	r3, [r4, #20]
9001367a:	440b      	add	r3, r1
9001367c:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
90013680:	4408      	add	r0, r1
90013682:	b200      	sxth	r0, r0
90013684:	4283      	cmp	r3, r0
90013686:	900d      	str	r0, [sp, #52]	; 0x34
90013688:	f280 80dd 	bge.w	90013846 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
9001368c:	428b      	cmp	r3, r1
9001368e:	da08      	bge.n	900136a2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
90013690:	2a00      	cmp	r2, #0
90013692:	dd06      	ble.n	900136a2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
90013694:	1acb      	subs	r3, r1, r3
90013696:	429a      	cmp	r2, r3
90013698:	f2c0 80e4 	blt.w	90013864 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
9001369c:	2b00      	cmp	r3, #0
9001369e:	f300 80e2 	bgt.w	90013866 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
900136a2:	6967      	ldr	r7, [r4, #20]
900136a4:	f10d 0850 	add.w	r8, sp, #80	; 0x50
900136a8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
900136aa:	443b      	add	r3, r7
900136ac:	461f      	mov	r7, r3
900136ae:	9b0d      	ldr	r3, [sp, #52]	; 0x34
900136b0:	1bdf      	subs	r7, r3, r7
900136b2:	4297      	cmp	r7, r2
900136b4:	bfa8      	it	ge
900136b6:	4617      	movge	r7, r2
900136b8:	2f00      	cmp	r7, #0
900136ba:	f340 8166 	ble.w	9001398a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
900136be:	9b64      	ldr	r3, [sp, #400]	; 0x190
900136c0:	6829      	ldr	r1, [r5, #0]
900136c2:	f9b3 2000 	ldrsh.w	r2, [r3]
900136c6:	f9bb 3000 	ldrsh.w	r3, [fp]
900136ca:	4411      	add	r1, r2
900136cc:	6820      	ldr	r0, [r4, #0]
900136ce:	4299      	cmp	r1, r3
900136d0:	dd1a      	ble.n	90013708 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
900136d2:	f8bb 1004 	ldrh.w	r1, [fp, #4]
900136d6:	4402      	add	r2, r0
900136d8:	440b      	add	r3, r1
900136da:	b21b      	sxth	r3, r3
900136dc:	429a      	cmp	r2, r3
900136de:	dc13      	bgt.n	90013708 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
900136e0:	9a10      	ldr	r2, [sp, #64]	; 0x40
900136e2:	a912      	add	r1, sp, #72	; 0x48
900136e4:	9b09      	ldr	r3, [sp, #36]	; 0x24
900136e6:	9809      	ldr	r0, [sp, #36]	; 0x24
900136e8:	681b      	ldr	r3, [r3, #0]
900136ea:	9206      	str	r2, [sp, #24]
900136ec:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
900136ee:	9500      	str	r5, [sp, #0]
900136f0:	9205      	str	r2, [sp, #20]
900136f2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
900136f4:	e9cd b203 	strd	fp, r2, [sp, #12]
900136f8:	9a64      	ldr	r2, [sp, #400]	; 0x190
900136fa:	e9cd 8201 	strd	r8, r2, [sp, #4]
900136fe:	aa49      	add	r2, sp, #292	; 0x124
90013700:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
90013704:	4623      	mov	r3, r4
90013706:	47c8      	blx	r9
90013708:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
9001370c:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
90013710:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
90013714:	ee37 7a27 	vadd.f32	s14, s14, s15
90013718:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
9001371c:	68a1      	ldr	r1, [r4, #8]
9001371e:	ee77 7aa6 	vadd.f32	s15, s15, s13
90013722:	ed94 6a08 	vldr	s12, [r4, #32]
90013726:	edd4 6a07 	vldr	s13, [r4, #28]
9001372a:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
9001372e:	ee76 6a86 	vadd.f32	s13, s13, s12
90013732:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
90013736:	e9d4 2300 	ldrd	r2, r3, [r4]
9001373a:	edc4 6a07 	vstr	s13, [r4, #28]
9001373e:	441a      	add	r2, r3
90013740:	6963      	ldr	r3, [r4, #20]
90013742:	3301      	adds	r3, #1
90013744:	6022      	str	r2, [r4, #0]
90013746:	6163      	str	r3, [r4, #20]
90013748:	69a3      	ldr	r3, [r4, #24]
9001374a:	3b01      	subs	r3, #1
9001374c:	61a3      	str	r3, [r4, #24]
9001374e:	6923      	ldr	r3, [r4, #16]
90013750:	440b      	add	r3, r1
90013752:	68e1      	ldr	r1, [r4, #12]
90013754:	428b      	cmp	r3, r1
90013756:	6123      	str	r3, [r4, #16]
90013758:	db15      	blt.n	90013786 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
9001375a:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
9001375e:	3201      	adds	r2, #1
90013760:	1a5b      	subs	r3, r3, r1
90013762:	ee76 6a26 	vadd.f32	s13, s12, s13
90013766:	6022      	str	r2, [r4, #0]
90013768:	6123      	str	r3, [r4, #16]
9001376a:	edc4 6a07 	vstr	s13, [r4, #28]
9001376e:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
90013772:	ee36 7a87 	vadd.f32	s14, s13, s14
90013776:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
9001377a:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
9001377e:	ee77 7a27 	vadd.f32	s15, s14, s15
90013782:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
90013786:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
9001378a:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
9001378e:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
90013792:	ee37 7a27 	vadd.f32	s14, s14, s15
90013796:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
9001379a:	68a9      	ldr	r1, [r5, #8]
9001379c:	ee77 7aa6 	vadd.f32	s15, s15, s13
900137a0:	ed95 6a08 	vldr	s12, [r5, #32]
900137a4:	edd5 6a07 	vldr	s13, [r5, #28]
900137a8:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
900137ac:	ee76 6a86 	vadd.f32	s13, s13, s12
900137b0:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
900137b4:	e9d5 2300 	ldrd	r2, r3, [r5]
900137b8:	edc5 6a07 	vstr	s13, [r5, #28]
900137bc:	441a      	add	r2, r3
900137be:	696b      	ldr	r3, [r5, #20]
900137c0:	3301      	adds	r3, #1
900137c2:	602a      	str	r2, [r5, #0]
900137c4:	616b      	str	r3, [r5, #20]
900137c6:	69ab      	ldr	r3, [r5, #24]
900137c8:	3b01      	subs	r3, #1
900137ca:	61ab      	str	r3, [r5, #24]
900137cc:	692b      	ldr	r3, [r5, #16]
900137ce:	440b      	add	r3, r1
900137d0:	68e9      	ldr	r1, [r5, #12]
900137d2:	428b      	cmp	r3, r1
900137d4:	612b      	str	r3, [r5, #16]
900137d6:	db15      	blt.n	90013804 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
900137d8:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
900137dc:	3201      	adds	r2, #1
900137de:	1a5b      	subs	r3, r3, r1
900137e0:	ee76 6a26 	vadd.f32	s13, s12, s13
900137e4:	602a      	str	r2, [r5, #0]
900137e6:	612b      	str	r3, [r5, #16]
900137e8:	edc5 6a07 	vstr	s13, [r5, #28]
900137ec:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
900137f0:	ee36 7a87 	vadd.f32	s14, s13, s14
900137f4:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
900137f8:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
900137fc:	ee77 7a27 	vadd.f32	s15, s14, s15
90013800:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
90013804:	3f01      	subs	r7, #1
90013806:	e757      	b.n	900136b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
90013808:	4299      	cmp	r1, r3
9001380a:	dc13      	bgt.n	90013834 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
9001380c:	429a      	cmp	r2, r3
9001380e:	da14      	bge.n	9001383a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
90013810:	2502      	movs	r5, #2
90013812:	2703      	movs	r7, #3
90013814:	f04f 0800 	mov.w	r8, #0
90013818:	46a9      	mov	r9, r5
9001381a:	f04f 0a01 	mov.w	sl, #1
9001381e:	e6ef      	b.n	90013600 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
90013820:	2501      	movs	r5, #1
90013822:	2700      	movs	r7, #0
90013824:	46a9      	mov	r9, r5
90013826:	46b8      	mov	r8, r7
90013828:	f04f 0a02 	mov.w	sl, #2
9001382c:	e6e8      	b.n	90013600 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
9001382e:	2501      	movs	r5, #1
90013830:	2702      	movs	r7, #2
90013832:	e6e1      	b.n	900135f8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
90013834:	2500      	movs	r5, #0
90013836:	2701      	movs	r7, #1
90013838:	e7f4      	b.n	90013824 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
9001383a:	2702      	movs	r7, #2
9001383c:	2503      	movs	r5, #3
9001383e:	f04f 0900 	mov.w	r9, #0
90013842:	46b8      	mov	r8, r7
90013844:	e7e9      	b.n	9001381a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
90013846:	4613      	mov	r3, r2
90013848:	e728      	b.n	9001369c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
9001384a:	bf00      	nop
9001384c:	24023574 	.word	0x24023574
90013850:	fffd8f01 	.word	0xfffd8f01
90013854:	00027100 	.word	0x00027100
90013858:	0004e1ff 	.word	0x0004e1ff
9001385c:	0004e1fe 	.word	0x0004e1fe
90013860:	2402357c 	.word	0x2402357c
90013864:	4613      	mov	r3, r2
90013866:	992b      	ldr	r1, [sp, #172]	; 0xac
90013868:	469e      	mov	lr, r3
9001386a:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
9001386c:	469c      	mov	ip, r3
9001386e:	9111      	str	r1, [sp, #68]	; 0x44
90013870:	f04f 0900 	mov.w	r9, #0
90013874:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
90013878:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
9001387c:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
90013880:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
90013884:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
90013888:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
9001388c:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
90013890:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
90013894:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
90013898:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
9001389c:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
900138a0:	f1bc 0f00 	cmp.w	ip, #0
900138a4:	d147      	bne.n	90013936 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
900138a6:	eb03 0c07 	add.w	ip, r3, r7
900138aa:	1ad7      	subs	r7, r2, r3
900138ac:	f1b9 0f00 	cmp.w	r9, #0
900138b0:	d009      	beq.n	900138c6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
900138b2:	9029      	str	r0, [sp, #164]	; 0xa4
900138b4:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
900138b8:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
900138bc:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
900138c0:	912d      	str	r1, [sp, #180]	; 0xb4
900138c2:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
900138c6:	991b      	ldr	r1, [sp, #108]	; 0x6c
900138c8:	f04f 0800 	mov.w	r8, #0
900138cc:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
900138d0:	9111      	str	r1, [sp, #68]	; 0x44
900138d2:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
900138d6:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
900138da:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
900138de:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
900138e2:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
900138e6:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
900138ea:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
900138ee:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
900138f2:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
900138f6:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
900138fa:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
900138fe:	f1be 0f00 	cmp.w	lr, #0
90013902:	d031      	beq.n	90013968 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
90013904:	9e11      	ldr	r6, [sp, #68]	; 0x44
90013906:	4450      	add	r0, sl
90013908:	ee76 6aa4 	vadd.f32	s13, s13, s9
9001390c:	4431      	add	r1, r6
9001390e:	ee37 7a04 	vadd.f32	s14, s14, s8
90013912:	ee77 7aa3 	vadd.f32	s15, s15, s7
90013916:	4549      	cmp	r1, r9
90013918:	db08      	blt.n	9001392c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
9001391a:	ee77 7a85 	vadd.f32	s15, s15, s10
9001391e:	3001      	adds	r0, #1
90013920:	ee76 6aa5 	vadd.f32	s13, s13, s11
90013924:	eba1 0109 	sub.w	r1, r1, r9
90013928:	ee37 7a06 	vadd.f32	s14, s14, s12
9001392c:	f10e 3eff 	add.w	lr, lr, #4294967295
90013930:	f04f 0801 	mov.w	r8, #1
90013934:	e7e3      	b.n	900138fe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
90013936:	9e11      	ldr	r6, [sp, #68]	; 0x44
90013938:	4450      	add	r0, sl
9001393a:	ee37 7a24 	vadd.f32	s14, s14, s9
9001393e:	4431      	add	r1, r6
90013940:	ee77 7a84 	vadd.f32	s15, s15, s8
90013944:	ee76 6aa3 	vadd.f32	s13, s13, s7
90013948:	4541      	cmp	r1, r8
9001394a:	db08      	blt.n	9001395e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
9001394c:	ee76 6a85 	vadd.f32	s13, s13, s10
90013950:	3001      	adds	r0, #1
90013952:	ee37 7a25 	vadd.f32	s14, s14, s11
90013956:	eba1 0108 	sub.w	r1, r1, r8
9001395a:	ee77 7a86 	vadd.f32	s15, s15, s12
9001395e:	f10c 3cff 	add.w	ip, ip, #4294967295
90013962:	f04f 0901 	mov.w	r9, #1
90013966:	e79b      	b.n	900138a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
90013968:	449c      	add	ip, r3
9001396a:	1aff      	subs	r7, r7, r3
9001396c:	f1b8 0f00 	cmp.w	r8, #0
90013970:	d009      	beq.n	90013986 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
90013972:	9019      	str	r0, [sp, #100]	; 0x64
90013974:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
90013978:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
9001397c:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
90013980:	911d      	str	r1, [sp, #116]	; 0x74
90013982:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
90013986:	1ad2      	subs	r2, r2, r3
90013988:	e68b      	b.n	900136a2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
9001398a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001398c:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
9001398e:	2b00      	cmp	r3, #0
90013990:	f000 80d1 	beq.w	90013b36 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
90013994:	ad19      	add	r5, sp, #100	; 0x64
90013996:	ac39      	add	r4, sp, #228	; 0xe4
90013998:	9b64      	ldr	r3, [sp, #400]	; 0x190
9001399a:	f8bb 0006 	ldrh.w	r0, [fp, #6]
9001399e:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
900139a2:	930c      	str	r3, [sp, #48]	; 0x30
900139a4:	990c      	ldr	r1, [sp, #48]	; 0x30
900139a6:	6963      	ldr	r3, [r4, #20]
900139a8:	440b      	add	r3, r1
900139aa:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
900139ae:	4408      	add	r0, r1
900139b0:	b200      	sxth	r0, r0
900139b2:	4283      	cmp	r3, r0
900139b4:	900d      	str	r0, [sp, #52]	; 0x34
900139b6:	f280 80c1 	bge.w	90013b3c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
900139ba:	428b      	cmp	r3, r1
900139bc:	da08      	bge.n	900139d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
900139be:	2a00      	cmp	r2, #0
900139c0:	dd06      	ble.n	900139d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
900139c2:	1acb      	subs	r3, r1, r3
900139c4:	429a      	cmp	r2, r3
900139c6:	f2c0 80bb 	blt.w	90013b40 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
900139ca:	2b00      	cmp	r3, #0
900139cc:	f300 80b9 	bgt.w	90013b42 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
900139d0:	6967      	ldr	r7, [r4, #20]
900139d2:	f10d 0850 	add.w	r8, sp, #80	; 0x50
900139d6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
900139d8:	443b      	add	r3, r7
900139da:	461f      	mov	r7, r3
900139dc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
900139de:	1bdf      	subs	r7, r3, r7
900139e0:	4297      	cmp	r7, r2
900139e2:	bfa8      	it	ge
900139e4:	4617      	movge	r7, r2
900139e6:	2f00      	cmp	r7, #0
900139e8:	f340 813c 	ble.w	90013c64 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
900139ec:	9b64      	ldr	r3, [sp, #400]	; 0x190
900139ee:	6829      	ldr	r1, [r5, #0]
900139f0:	f9b3 2000 	ldrsh.w	r2, [r3]
900139f4:	f9bb 3000 	ldrsh.w	r3, [fp]
900139f8:	4411      	add	r1, r2
900139fa:	6820      	ldr	r0, [r4, #0]
900139fc:	4299      	cmp	r1, r3
900139fe:	dd1a      	ble.n	90013a36 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
90013a00:	f8bb 1004 	ldrh.w	r1, [fp, #4]
90013a04:	4402      	add	r2, r0
90013a06:	440b      	add	r3, r1
90013a08:	b21b      	sxth	r3, r3
90013a0a:	429a      	cmp	r2, r3
90013a0c:	dc13      	bgt.n	90013a36 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
90013a0e:	9a10      	ldr	r2, [sp, #64]	; 0x40
90013a10:	a912      	add	r1, sp, #72	; 0x48
90013a12:	9b09      	ldr	r3, [sp, #36]	; 0x24
90013a14:	9809      	ldr	r0, [sp, #36]	; 0x24
90013a16:	681b      	ldr	r3, [r3, #0]
90013a18:	9206      	str	r2, [sp, #24]
90013a1a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
90013a1c:	9500      	str	r5, [sp, #0]
90013a1e:	9205      	str	r2, [sp, #20]
90013a20:	9a0a      	ldr	r2, [sp, #40]	; 0x28
90013a22:	e9cd b203 	strd	fp, r2, [sp, #12]
90013a26:	9a64      	ldr	r2, [sp, #400]	; 0x190
90013a28:	e9cd 8201 	strd	r8, r2, [sp, #4]
90013a2c:	aa49      	add	r2, sp, #292	; 0x124
90013a2e:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
90013a32:	4623      	mov	r3, r4
90013a34:	47c8      	blx	r9
90013a36:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
90013a3a:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
90013a3e:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
90013a42:	ee37 7a27 	vadd.f32	s14, s14, s15
90013a46:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
90013a4a:	68a1      	ldr	r1, [r4, #8]
90013a4c:	ee77 7aa6 	vadd.f32	s15, s15, s13
90013a50:	ed94 6a08 	vldr	s12, [r4, #32]
90013a54:	edd4 6a07 	vldr	s13, [r4, #28]
90013a58:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
90013a5c:	ee76 6a86 	vadd.f32	s13, s13, s12
90013a60:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
90013a64:	e9d4 2300 	ldrd	r2, r3, [r4]
90013a68:	edc4 6a07 	vstr	s13, [r4, #28]
90013a6c:	441a      	add	r2, r3
90013a6e:	6963      	ldr	r3, [r4, #20]
90013a70:	3301      	adds	r3, #1
90013a72:	6022      	str	r2, [r4, #0]
90013a74:	6163      	str	r3, [r4, #20]
90013a76:	69a3      	ldr	r3, [r4, #24]
90013a78:	3b01      	subs	r3, #1
90013a7a:	61a3      	str	r3, [r4, #24]
90013a7c:	6923      	ldr	r3, [r4, #16]
90013a7e:	440b      	add	r3, r1
90013a80:	68e1      	ldr	r1, [r4, #12]
90013a82:	428b      	cmp	r3, r1
90013a84:	6123      	str	r3, [r4, #16]
90013a86:	db15      	blt.n	90013ab4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
90013a88:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
90013a8c:	3201      	adds	r2, #1
90013a8e:	1a5b      	subs	r3, r3, r1
90013a90:	ee76 6a26 	vadd.f32	s13, s12, s13
90013a94:	6022      	str	r2, [r4, #0]
90013a96:	6123      	str	r3, [r4, #16]
90013a98:	edc4 6a07 	vstr	s13, [r4, #28]
90013a9c:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
90013aa0:	ee36 7a87 	vadd.f32	s14, s13, s14
90013aa4:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
90013aa8:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
90013aac:	ee77 7a27 	vadd.f32	s15, s14, s15
90013ab0:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
90013ab4:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
90013ab8:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
90013abc:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
90013ac0:	ee37 7a27 	vadd.f32	s14, s14, s15
90013ac4:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
90013ac8:	68a9      	ldr	r1, [r5, #8]
90013aca:	ee77 7aa6 	vadd.f32	s15, s15, s13
90013ace:	ed95 6a08 	vldr	s12, [r5, #32]
90013ad2:	edd5 6a07 	vldr	s13, [r5, #28]
90013ad6:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
90013ada:	ee76 6a86 	vadd.f32	s13, s13, s12
90013ade:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
90013ae2:	e9d5 2300 	ldrd	r2, r3, [r5]
90013ae6:	edc5 6a07 	vstr	s13, [r5, #28]
90013aea:	441a      	add	r2, r3
90013aec:	696b      	ldr	r3, [r5, #20]
90013aee:	3301      	adds	r3, #1
90013af0:	602a      	str	r2, [r5, #0]
90013af2:	616b      	str	r3, [r5, #20]
90013af4:	69ab      	ldr	r3, [r5, #24]
90013af6:	3b01      	subs	r3, #1
90013af8:	61ab      	str	r3, [r5, #24]
90013afa:	692b      	ldr	r3, [r5, #16]
90013afc:	440b      	add	r3, r1
90013afe:	68e9      	ldr	r1, [r5, #12]
90013b00:	428b      	cmp	r3, r1
90013b02:	612b      	str	r3, [r5, #16]
90013b04:	db15      	blt.n	90013b32 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
90013b06:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
90013b0a:	3201      	adds	r2, #1
90013b0c:	1a5b      	subs	r3, r3, r1
90013b0e:	ee76 6a26 	vadd.f32	s13, s12, s13
90013b12:	602a      	str	r2, [r5, #0]
90013b14:	612b      	str	r3, [r5, #16]
90013b16:	edc5 6a07 	vstr	s13, [r5, #28]
90013b1a:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
90013b1e:	ee36 7a87 	vadd.f32	s14, s13, s14
90013b22:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
90013b26:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
90013b2a:	ee77 7a27 	vadd.f32	s15, s14, s15
90013b2e:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
90013b32:	3f01      	subs	r7, #1
90013b34:	e757      	b.n	900139e6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
90013b36:	ad39      	add	r5, sp, #228	; 0xe4
90013b38:	ac19      	add	r4, sp, #100	; 0x64
90013b3a:	e72d      	b.n	90013998 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
90013b3c:	4613      	mov	r3, r2
90013b3e:	e744      	b.n	900139ca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
90013b40:	4613      	mov	r3, r2
90013b42:	9e3b      	ldr	r6, [sp, #236]	; 0xec
90013b44:	469e      	mov	lr, r3
90013b46:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
90013b4a:	461f      	mov	r7, r3
90013b4c:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
90013b50:	f04f 0900 	mov.w	r9, #0
90013b54:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
90013b58:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
90013b5c:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
90013b60:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
90013b64:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
90013b68:	993d      	ldr	r1, [sp, #244]	; 0xf4
90013b6a:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
90013b6e:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
90013b72:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
90013b76:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
90013b7a:	960e      	str	r6, [sp, #56]	; 0x38
90013b7c:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
90013b80:	2f00      	cmp	r7, #0
90013b82:	d146      	bne.n	90013c12 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
90013b84:	449c      	add	ip, r3
90013b86:	1ad7      	subs	r7, r2, r3
90013b88:	f1b9 0f00 	cmp.w	r9, #0
90013b8c:	d009      	beq.n	90013ba2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
90013b8e:	9039      	str	r0, [sp, #228]	; 0xe4
90013b90:	913d      	str	r1, [sp, #244]	; 0xf4
90013b92:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
90013b96:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
90013b9a:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
90013b9e:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
90013ba2:	991b      	ldr	r1, [sp, #108]	; 0x6c
90013ba4:	f04f 0800 	mov.w	r8, #0
90013ba8:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
90013bac:	910e      	str	r1, [sp, #56]	; 0x38
90013bae:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
90013bb2:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
90013bb6:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
90013bba:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
90013bbe:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
90013bc2:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
90013bc6:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
90013bca:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
90013bce:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
90013bd2:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
90013bd6:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
90013bda:	f1be 0f00 	cmp.w	lr, #0
90013bde:	d030      	beq.n	90013c42 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
90013be0:	9e0e      	ldr	r6, [sp, #56]	; 0x38
90013be2:	4450      	add	r0, sl
90013be4:	ee76 6aa4 	vadd.f32	s13, s13, s9
90013be8:	4431      	add	r1, r6
90013bea:	ee37 7a04 	vadd.f32	s14, s14, s8
90013bee:	ee77 7aa3 	vadd.f32	s15, s15, s7
90013bf2:	4549      	cmp	r1, r9
90013bf4:	db08      	blt.n	90013c08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
90013bf6:	ee77 7a85 	vadd.f32	s15, s15, s10
90013bfa:	3001      	adds	r0, #1
90013bfc:	ee76 6aa5 	vadd.f32	s13, s13, s11
90013c00:	eba1 0109 	sub.w	r1, r1, r9
90013c04:	ee37 7a06 	vadd.f32	s14, s14, s12
90013c08:	f10e 3eff 	add.w	lr, lr, #4294967295
90013c0c:	f04f 0801 	mov.w	r8, #1
90013c10:	e7e3      	b.n	90013bda <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
90013c12:	9e0e      	ldr	r6, [sp, #56]	; 0x38
90013c14:	4450      	add	r0, sl
90013c16:	ee37 7a24 	vadd.f32	s14, s14, s9
90013c1a:	4431      	add	r1, r6
90013c1c:	ee77 7a84 	vadd.f32	s15, s15, s8
90013c20:	ee76 6aa3 	vadd.f32	s13, s13, s7
90013c24:	4541      	cmp	r1, r8
90013c26:	db08      	blt.n	90013c3a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
90013c28:	ee76 6a85 	vadd.f32	s13, s13, s10
90013c2c:	3001      	adds	r0, #1
90013c2e:	ee37 7a25 	vadd.f32	s14, s14, s11
90013c32:	eba1 0108 	sub.w	r1, r1, r8
90013c36:	ee77 7a86 	vadd.f32	s15, s15, s12
90013c3a:	3f01      	subs	r7, #1
90013c3c:	f04f 0901 	mov.w	r9, #1
90013c40:	e79e      	b.n	90013b80 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
90013c42:	449c      	add	ip, r3
90013c44:	1aff      	subs	r7, r7, r3
90013c46:	f1b8 0f00 	cmp.w	r8, #0
90013c4a:	d009      	beq.n	90013c60 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
90013c4c:	9019      	str	r0, [sp, #100]	; 0x64
90013c4e:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
90013c52:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
90013c56:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
90013c5a:	911d      	str	r1, [sp, #116]	; 0x74
90013c5c:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
90013c60:	1ad2      	subs	r2, r2, r3
90013c62:	e6b5      	b.n	900139d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
90013c64:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90013c66:	681b      	ldr	r3, [r3, #0]
90013c68:	b923      	cbnz	r3, 90013c74 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90013c6a:	4b04      	ldr	r3, [pc, #16]	; (90013c7c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
90013c6c:	6818      	ldr	r0, [r3, #0]
90013c6e:	6803      	ldr	r3, [r0, #0]
90013c70:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90013c72:	4798      	blx	r3
90013c74:	b05b      	add	sp, #364	; 0x16c
90013c76:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90013c7a:	bf00      	nop
90013c7c:	2402357c 	.word	0x2402357c

90013c80 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
90013c80:	b570      	push	{r4, r5, r6, lr}
90013c82:	4604      	mov	r4, r0
90013c84:	2500      	movs	r5, #0
90013c86:	9805      	ldr	r0, [sp, #20]
90013c88:	f89d 601c 	ldrb.w	r6, [sp, #28]
90013c8c:	6061      	str	r1, [r4, #4]
90013c8e:	8263      	strh	r3, [r4, #18]
90013c90:	f89d 1010 	ldrb.w	r1, [sp, #16]
90013c94:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
90013c98:	8025      	strh	r5, [r4, #0]
90013c9a:	7221      	strb	r1, [r4, #8]
90013c9c:	7266      	strb	r6, [r4, #9]
90013c9e:	60e0      	str	r0, [r4, #12]
90013ca0:	8222      	strh	r2, [r4, #16]
90013ca2:	82a3      	strh	r3, [r4, #20]
90013ca4:	82e5      	strh	r5, [r4, #22]
90013ca6:	8325      	strh	r5, [r4, #24]
90013ca8:	8365      	strh	r5, [r4, #26]
90013caa:	83a5      	strh	r5, [r4, #28]
90013cac:	83e5      	strh	r5, [r4, #30]
90013cae:	8425      	strh	r5, [r4, #32]
90013cb0:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
90013cb4:	b32e      	cbz	r6, 90013d02 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
90013cb6:	6803      	ldr	r3, [r0, #0]
90013cb8:	695b      	ldr	r3, [r3, #20]
90013cba:	4798      	blx	r3
90013cbc:	4606      	mov	r6, r0
90013cbe:	b300      	cbz	r0, 90013d02 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
90013cc0:	68e0      	ldr	r0, [r4, #12]
90013cc2:	4631      	mov	r1, r6
90013cc4:	6803      	ldr	r3, [r0, #0]
90013cc6:	68db      	ldr	r3, [r3, #12]
90013cc8:	4798      	blx	r3
90013cca:	4605      	mov	r5, r0
90013ccc:	b1c8      	cbz	r0, 90013d02 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
90013cce:	7b43      	ldrb	r3, [r0, #13]
90013cd0:	7a82      	ldrb	r2, [r0, #10]
90013cd2:	005b      	lsls	r3, r3, #1
90013cd4:	f403 7380 	and.w	r3, r3, #256	; 0x100
90013cd8:	4313      	orrs	r3, r2
90013cda:	8423      	strh	r3, [r4, #32]
90013cdc:	7a63      	ldrb	r3, [r4, #9]
90013cde:	2b06      	cmp	r3, #6
90013ce0:	d10f      	bne.n	90013d02 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
90013ce2:	68e0      	ldr	r0, [r4, #12]
90013ce4:	462a      	mov	r2, r5
90013ce6:	4631      	mov	r1, r6
90013ce8:	6803      	ldr	r3, [r0, #0]
90013cea:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90013cec:	4798      	blx	r3
90013cee:	7b6b      	ldrb	r3, [r5, #13]
90013cf0:	005b      	lsls	r3, r3, #1
90013cf2:	f403 7280 	and.w	r2, r3, #256	; 0x100
90013cf6:	7aab      	ldrb	r3, [r5, #10]
90013cf8:	4313      	orrs	r3, r2
90013cfa:	4418      	add	r0, r3
90013cfc:	8c23      	ldrh	r3, [r4, #32]
90013cfe:	4418      	add	r0, r3
90013d00:	8420      	strh	r0, [r4, #32]
90013d02:	4620      	mov	r0, r4
90013d04:	bd70      	pop	{r4, r5, r6, pc}

90013d06 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
90013d06:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90013d0a:	2400      	movs	r4, #0
90013d0c:	b085      	sub	sp, #20
90013d0e:	4681      	mov	r9, r0
90013d10:	4688      	mov	r8, r1
90013d12:	4692      	mov	sl, r2
90013d14:	469b      	mov	fp, r3
90013d16:	4627      	mov	r7, r4
90013d18:	4625      	mov	r5, r4
90013d1a:	4626      	mov	r6, r4
90013d1c:	4554      	cmp	r4, sl
90013d1e:	da2a      	bge.n	90013d76 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
90013d20:	2300      	movs	r3, #0
90013d22:	9303      	str	r3, [sp, #12]
90013d24:	f64f 63ff 	movw	r3, #65279	; 0xfeff
90013d28:	429d      	cmp	r5, r3
90013d2a:	d004      	beq.n	90013d36 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
90013d2c:	f242 030b 	movw	r3, #8203	; 0x200b
90013d30:	429d      	cmp	r5, r3
90013d32:	bf18      	it	ne
90013d34:	462f      	movne	r7, r5
90013d36:	ab03      	add	r3, sp, #12
90013d38:	4642      	mov	r2, r8
90013d3a:	4659      	mov	r1, fp
90013d3c:	4648      	mov	r0, r9
90013d3e:	f003 f89f 	bl	90016e80 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
90013d42:	4605      	mov	r5, r0
90013d44:	b1b8      	cbz	r0, 90013d76 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
90013d46:	280a      	cmp	r0, #10
90013d48:	d015      	beq.n	90013d76 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
90013d4a:	9a03      	ldr	r2, [sp, #12]
90013d4c:	b18a      	cbz	r2, 90013d72 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
90013d4e:	7b50      	ldrb	r0, [r2, #13]
90013d50:	4639      	mov	r1, r7
90013d52:	7a93      	ldrb	r3, [r2, #10]
90013d54:	0040      	lsls	r0, r0, #1
90013d56:	8895      	ldrh	r5, [r2, #4]
90013d58:	f400 7080 	and.w	r0, r0, #256	; 0x100
90013d5c:	4303      	orrs	r3, r0
90013d5e:	4640      	mov	r0, r8
90013d60:	9301      	str	r3, [sp, #4]
90013d62:	f8d8 3000 	ldr.w	r3, [r8]
90013d66:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90013d68:	4798      	blx	r3
90013d6a:	9b01      	ldr	r3, [sp, #4]
90013d6c:	4418      	add	r0, r3
90013d6e:	4406      	add	r6, r0
90013d70:	b2b6      	uxth	r6, r6
90013d72:	3401      	adds	r4, #1
90013d74:	e7d2      	b.n	90013d1c <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
90013d76:	4630      	mov	r0, r6
90013d78:	b005      	add	sp, #20
90013d7a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90013d7e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
90013d7e:	2a02      	cmp	r2, #2
90013d80:	b530      	push	{r4, r5, lr}
90013d82:	d011      	beq.n	90013da8 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
90013d84:	2a03      	cmp	r2, #3
90013d86:	d01c      	beq.n	90013dc2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
90013d88:	2a01      	cmp	r2, #1
90013d8a:	d10c      	bne.n	90013da6 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
90013d8c:	888b      	ldrh	r3, [r1, #4]
90013d8e:	8801      	ldrh	r1, [r0, #0]
90013d90:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
90013d94:	1a5b      	subs	r3, r3, r1
90013d96:	8844      	ldrh	r4, [r0, #2]
90013d98:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
90013d9c:	1a9b      	subs	r3, r3, r2
90013d9e:	8004      	strh	r4, [r0, #0]
90013da0:	8081      	strh	r1, [r0, #4]
90013da2:	8043      	strh	r3, [r0, #2]
90013da4:	80c2      	strh	r2, [r0, #6]
90013da6:	bd30      	pop	{r4, r5, pc}
90013da8:	88cb      	ldrh	r3, [r1, #6]
90013daa:	8842      	ldrh	r2, [r0, #2]
90013dac:	1a9b      	subs	r3, r3, r2
90013dae:	88c2      	ldrh	r2, [r0, #6]
90013db0:	1a9b      	subs	r3, r3, r2
90013db2:	888a      	ldrh	r2, [r1, #4]
90013db4:	8801      	ldrh	r1, [r0, #0]
90013db6:	8043      	strh	r3, [r0, #2]
90013db8:	1a52      	subs	r2, r2, r1
90013dba:	8881      	ldrh	r1, [r0, #4]
90013dbc:	1a52      	subs	r2, r2, r1
90013dbe:	8002      	strh	r2, [r0, #0]
90013dc0:	e7f1      	b.n	90013da6 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
90013dc2:	88cb      	ldrh	r3, [r1, #6]
90013dc4:	8841      	ldrh	r1, [r0, #2]
90013dc6:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
90013dca:	1a5b      	subs	r3, r3, r1
90013dcc:	f9b0 5000 	ldrsh.w	r5, [r0]
90013dd0:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
90013dd4:	1a9b      	subs	r3, r3, r2
90013dd6:	8045      	strh	r5, [r0, #2]
90013dd8:	8082      	strh	r2, [r0, #4]
90013dda:	8003      	strh	r3, [r0, #0]
90013ddc:	80c4      	strh	r4, [r0, #6]
90013dde:	e7e2      	b.n	90013da6 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

90013de0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
90013de0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90013de4:	b09f      	sub	sp, #124	; 0x7c
90013de6:	920f      	str	r2, [sp, #60]	; 0x3c
90013de8:	9312      	str	r3, [sp, #72]	; 0x48
90013dea:	9a29      	ldr	r2, [sp, #164]	; 0xa4
90013dec:	9b29      	ldr	r3, [sp, #164]	; 0xa4
90013dee:	8812      	ldrh	r2, [r2, #0]
90013df0:	889b      	ldrh	r3, [r3, #4]
90013df2:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
90013df4:	4413      	add	r3, r2
90013df6:	900e      	str	r0, [sp, #56]	; 0x38
90013df8:	6828      	ldr	r0, [r5, #0]
90013dfa:	b21b      	sxth	r3, r3
90013dfc:	9117      	str	r1, [sp, #92]	; 0x5c
90013dfe:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
90013e02:	9311      	str	r3, [sp, #68]	; 0x44
90013e04:	6803      	ldr	r3, [r0, #0]
90013e06:	f89d 40b8 	ldrb.w	r4, [sp, #184]	; 0xb8
90013e0a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
90013e0c:	4798      	blx	r3
90013e0e:	682b      	ldr	r3, [r5, #0]
90013e10:	9013      	str	r0, [sp, #76]	; 0x4c
90013e12:	7b1a      	ldrb	r2, [r3, #12]
90013e14:	7adb      	ldrb	r3, [r3, #11]
90013e16:	9215      	str	r2, [sp, #84]	; 0x54
90013e18:	9316      	str	r3, [sp, #88]	; 0x58
90013e1a:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	; 0xa0
90013e1e:	2c00      	cmp	r4, #0
90013e20:	d067      	beq.n	90013ef2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
90013e22:	7c2b      	ldrb	r3, [r5, #16]
90013e24:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
90013e26:	2b06      	cmp	r3, #6
90013e28:	bf14      	ite	ne
90013e2a:	2301      	movne	r3, #1
90013e2c:	2302      	moveq	r3, #2
90013e2e:	4413      	add	r3, r2
90013e30:	f04f 0900 	mov.w	r9, #0
90013e34:	9310      	str	r3, [sp, #64]	; 0x40
90013e36:	464c      	mov	r4, r9
90013e38:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
90013e3c:	f8cd 9030 	str.w	r9, [sp, #48]	; 0x30
90013e40:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90013e42:	9a10      	ldr	r2, [sp, #64]	; 0x40
90013e44:	4293      	cmp	r3, r2
90013e46:	f280 808b 	bge.w	90013f60 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
90013e4a:	2300      	movs	r3, #0
90013e4c:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
90013e50:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
90013e54:	f64f 63ff 	movw	r3, #65279	; 0xfeff
90013e58:	429c      	cmp	r4, r3
90013e5a:	d006      	beq.n	90013e6a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x8a>
90013e5c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90013e5e:	f242 020b 	movw	r2, #8203	; 0x200b
90013e62:	4294      	cmp	r4, r2
90013e64:	bf18      	it	ne
90013e66:	4623      	movne	r3, r4
90013e68:	930c      	str	r3, [sp, #48]	; 0x30
90013e6a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90013e6c:	992d      	ldr	r1, [sp, #180]	; 0xb4
90013e6e:	682a      	ldr	r2, [r5, #0]
90013e70:	428b      	cmp	r3, r1
90013e72:	db40      	blt.n	90013ef6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
90013e74:	6813      	ldr	r3, [r2, #0]
90013e76:	4610      	mov	r0, r2
90013e78:	695b      	ldr	r3, [r3, #20]
90013e7a:	4798      	blx	r3
90013e7c:	4604      	mov	r4, r0
90013e7e:	6828      	ldr	r0, [r5, #0]
90013e80:	aa1d      	add	r2, sp, #116	; 0x74
90013e82:	4621      	mov	r1, r4
90013e84:	6803      	ldr	r3, [r0, #0]
90013e86:	689f      	ldr	r7, [r3, #8]
90013e88:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
90013e8c:	47b8      	blx	r7
90013e8e:	901c      	str	r0, [sp, #112]	; 0x70
90013e90:	f64f 63ff 	movw	r3, #65279	; 0xfeff
90013e94:	429c      	cmp	r4, r3
90013e96:	f000 80eb 	beq.w	90014070 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90013e9a:	f242 030b 	movw	r3, #8203	; 0x200b
90013e9e:	429c      	cmp	r4, r3
90013ea0:	f000 80e6 	beq.w	90014070 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90013ea4:	2c00      	cmp	r4, #0
90013ea6:	f000 810d 	beq.w	900140c4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e4>
90013eaa:	2c0a      	cmp	r4, #10
90013eac:	d05e      	beq.n	90013f6c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
90013eae:	9a1c      	ldr	r2, [sp, #112]	; 0x70
90013eb0:	b36a      	cbz	r2, 90013f0e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
90013eb2:	8894      	ldrh	r4, [r2, #4]
90013eb4:	f1bb 0f00 	cmp.w	fp, #0
90013eb8:	d03a      	beq.n	90013f30 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x150>
90013eba:	f892 900d 	ldrb.w	r9, [r2, #13]
90013ebe:	f1bb 0f01 	cmp.w	fp, #1
90013ec2:	ea4f 0949 	mov.w	r9, r9, lsl #1
90013ec6:	f409 7380 	and.w	r3, r9, #256	; 0x100
90013eca:	f892 900a 	ldrb.w	r9, [r2, #10]
90013ece:	ea49 0903 	orr.w	r9, r9, r3
90013ed2:	d133      	bne.n	90013f3c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15c>
90013ed4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90013ed6:	eba6 0609 	sub.w	r6, r6, r9
90013eda:	2b00      	cmp	r3, #0
90013edc:	d14d      	bne.n	90013f7a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
90013ede:	9a15      	ldr	r2, [sp, #84]	; 0x54
90013ee0:	eb09 0306 	add.w	r3, r9, r6
90013ee4:	4413      	add	r3, r2
90013ee6:	9a29      	ldr	r2, [sp, #164]	; 0xa4
90013ee8:	f9b2 2000 	ldrsh.w	r2, [r2]
90013eec:	4293      	cmp	r3, r2
90013eee:	da4e      	bge.n	90013f8e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
90013ef0:	e036      	b.n	90013f60 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
90013ef2:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
90013ef4:	e79c      	b.n	90013e30 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x50>
90013ef6:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
90013efa:	4659      	mov	r1, fp
90013efc:	982c      	ldr	r0, [sp, #176]	; 0xb0
90013efe:	9301      	str	r3, [sp, #4]
90013f00:	ab1d      	add	r3, sp, #116	; 0x74
90013f02:	9300      	str	r3, [sp, #0]
90013f04:	ab1c      	add	r3, sp, #112	; 0x70
90013f06:	f003 f804 	bl	90016f12 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
90013f0a:	4604      	mov	r4, r0
90013f0c:	e7c0      	b.n	90013e90 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
90013f0e:	6828      	ldr	r0, [r5, #0]
90013f10:	6803      	ldr	r3, [r0, #0]
90013f12:	691b      	ldr	r3, [r3, #16]
90013f14:	4798      	blx	r3
90013f16:	f64f 63ff 	movw	r3, #65279	; 0xfeff
90013f1a:	4298      	cmp	r0, r3
90013f1c:	f000 80a8 	beq.w	90014070 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90013f20:	f242 030b 	movw	r3, #8203	; 0x200b
90013f24:	4298      	cmp	r0, r3
90013f26:	f000 80a3 	beq.w	90014070 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90013f2a:	f1bb 0f00 	cmp.w	fp, #0
90013f2e:	d100      	bne.n	90013f32 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
90013f30:	444e      	add	r6, r9
90013f32:	9a1c      	ldr	r2, [sp, #112]	; 0x70
90013f34:	2a00      	cmp	r2, #0
90013f36:	d1c0      	bne.n	90013eba <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
90013f38:	4691      	mov	r9, r2
90013f3a:	e099      	b.n	90014070 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90013f3c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90013f3e:	2b00      	cmp	r3, #0
90013f40:	f000 80c2 	beq.w	900140c8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e8>
90013f44:	f1bb 0f00 	cmp.w	fp, #0
90013f48:	d117      	bne.n	90013f7a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
90013f4a:	6828      	ldr	r0, [r5, #0]
90013f4c:	990c      	ldr	r1, [sp, #48]	; 0x30
90013f4e:	6803      	ldr	r3, [r0, #0]
90013f50:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90013f52:	4798      	blx	r3
90013f54:	4406      	add	r6, r0
90013f56:	9b16      	ldr	r3, [sp, #88]	; 0x58
90013f58:	9a11      	ldr	r2, [sp, #68]	; 0x44
90013f5a:	1af3      	subs	r3, r6, r3
90013f5c:	4293      	cmp	r3, r2
90013f5e:	dd16      	ble.n	90013f8e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
90013f60:	2c00      	cmp	r4, #0
90013f62:	f000 80af 	beq.w	900140c4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e4>
90013f66:	2c0a      	cmp	r4, #10
90013f68:	f040 809d 	bne.w	900140a6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c6>
90013f6c:	240a      	movs	r4, #10
90013f6e:	fab4 f084 	clz	r0, r4
90013f72:	0940      	lsrs	r0, r0, #5
90013f74:	b01f      	add	sp, #124	; 0x7c
90013f76:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90013f7a:	6828      	ldr	r0, [r5, #0]
90013f7c:	990c      	ldr	r1, [sp, #48]	; 0x30
90013f7e:	6803      	ldr	r3, [r0, #0]
90013f80:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90013f82:	4798      	blx	r3
90013f84:	f1bb 0f01 	cmp.w	fp, #1
90013f88:	eba6 0600 	sub.w	r6, r6, r0
90013f8c:	d0a7      	beq.n	90013ede <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
90013f8e:	981c      	ldr	r0, [sp, #112]	; 0x70
90013f90:	9b29      	ldr	r3, [sp, #164]	; 0xa4
90013f92:	f990 1009 	ldrsb.w	r1, [r0, #9]
90013f96:	f9b3 8000 	ldrsh.w	r8, [r3]
90013f9a:	7b43      	ldrb	r3, [r0, #13]
90013f9c:	4431      	add	r1, r6
90013f9e:	015b      	lsls	r3, r3, #5
90013fa0:	f403 7280 	and.w	r2, r3, #256	; 0x100
90013fa4:	7983      	ldrb	r3, [r0, #6]
90013fa6:	4313      	orrs	r3, r2
90013fa8:	440b      	add	r3, r1
90013faa:	4543      	cmp	r3, r8
90013fac:	db60      	blt.n	90014070 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90013fae:	9b11      	ldr	r3, [sp, #68]	; 0x44
90013fb0:	4299      	cmp	r1, r3
90013fb2:	da5d      	bge.n	90014070 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90013fb4:	6828      	ldr	r0, [r5, #0]
90013fb6:	45b0      	cmp	r8, r6
90013fb8:	6803      	ldr	r3, [r0, #0]
90013fba:	bfcc      	ite	gt
90013fbc:	eba8 0806 	subgt.w	r8, r8, r6
90013fc0:	f04f 0800 	movle.w	r8, #0
90013fc4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90013fc6:	bfc8      	it	gt
90013fc8:	fa1f f888 	uxthgt.w	r8, r8
90013fcc:	4798      	blx	r3
90013fce:	9a1c      	ldr	r2, [sp, #112]	; 0x70
90013fd0:	7b53      	ldrb	r3, [r2, #13]
90013fd2:	00d9      	lsls	r1, r3, #3
90013fd4:	f401 7780 	and.w	r7, r1, #256	; 0x100
90013fd8:	7a11      	ldrb	r1, [r2, #8]
90013fda:	4339      	orrs	r1, r7
90013fdc:	065f      	lsls	r7, r3, #25
90013fde:	9f12      	ldr	r7, [sp, #72]	; 0x48
90013fe0:	bf48      	it	mi
90013fe2:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
90013fe6:	4407      	add	r7, r0
90013fe8:	bf48      	it	mi
90013fea:	b209      	sxthmi	r1, r1
90013fec:	1a7f      	subs	r7, r7, r1
90013fee:	9929      	ldr	r1, [sp, #164]	; 0xa4
90013ff0:	b2bf      	uxth	r7, r7
90013ff2:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
90013ff6:	fa0f fa87 	sxth.w	sl, r7
90013ffa:	4551      	cmp	r1, sl
90013ffc:	dd3c      	ble.n	90014078 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
90013ffe:	011b      	lsls	r3, r3, #4
90014000:	79d0      	ldrb	r0, [r2, #7]
90014002:	f403 7380 	and.w	r3, r3, #256	; 0x100
90014006:	4303      	orrs	r3, r0
90014008:	449a      	add	sl, r3
9001400a:	4551      	cmp	r1, sl
9001400c:	dc30      	bgt.n	90014070 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
9001400e:	1bcf      	subs	r7, r1, r7
90014010:	468a      	mov	sl, r1
90014012:	b23f      	sxth	r7, r7
90014014:	9219      	str	r2, [sp, #100]	; 0x64
90014016:	9a13      	ldr	r2, [sp, #76]	; 0x4c
90014018:	9b1d      	ldr	r3, [sp, #116]	; 0x74
9001401a:	6828      	ldr	r0, [r5, #0]
9001401c:	2a00      	cmp	r2, #0
9001401e:	d12d      	bne.n	9001407c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29c>
90014020:	9318      	str	r3, [sp, #96]	; 0x60
90014022:	b2bf      	uxth	r7, r7
90014024:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90014026:	6819      	ldr	r1, [r3, #0]
90014028:	6ccb      	ldr	r3, [r1, #76]	; 0x4c
9001402a:	6801      	ldr	r1, [r0, #0]
9001402c:	9314      	str	r3, [sp, #80]	; 0x50
9001402e:	6c09      	ldr	r1, [r1, #64]	; 0x40
90014030:	4788      	blx	r1
90014032:	79a9      	ldrb	r1, [r5, #6]
90014034:	9b18      	ldr	r3, [sp, #96]	; 0x60
90014036:	910b      	str	r1, [sp, #44]	; 0x2c
90014038:	7ba9      	ldrb	r1, [r5, #14]
9001403a:	9a19      	ldr	r2, [sp, #100]	; 0x64
9001403c:	910a      	str	r1, [sp, #40]	; 0x28
9001403e:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
90014042:	9109      	str	r1, [sp, #36]	; 0x24
90014044:	68a9      	ldr	r1, [r5, #8]
90014046:	9306      	str	r3, [sp, #24]
90014048:	9b29      	ldr	r3, [sp, #164]	; 0xa4
9001404a:	9205      	str	r2, [sp, #20]
9001404c:	9304      	str	r3, [sp, #16]
9001404e:	f8cd a004 	str.w	sl, [sp, #4]
90014052:	e9cd 8702 	strd	r8, r7, [sp, #8]
90014056:	44b0      	add	r8, r6
90014058:	9f14      	ldr	r7, [sp, #80]	; 0x50
9001405a:	fa0f f388 	sxth.w	r3, r8
9001405e:	9300      	str	r3, [sp, #0]
90014060:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90014062:	e9cd 0107 	strd	r0, r1, [sp, #28]
90014066:	9917      	ldr	r1, [sp, #92]	; 0x5c
90014068:	681a      	ldr	r2, [r3, #0]
9001406a:	980e      	ldr	r0, [sp, #56]	; 0x38
9001406c:	685b      	ldr	r3, [r3, #4]
9001406e:	47b8      	blx	r7
90014070:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90014072:	3301      	adds	r3, #1
90014074:	930d      	str	r3, [sp, #52]	; 0x34
90014076:	e6e3      	b.n	90013e40 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x60>
90014078:	2700      	movs	r7, #0
9001407a:	e7cb      	b.n	90014014 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
9001407c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
9001407e:	f8d2 c008 	ldr.w	ip, [r2, #8]
90014082:	9a12      	ldr	r2, [sp, #72]	; 0x48
90014084:	f8dc 1000 	ldr.w	r1, [ip]
90014088:	e9cd 6204 	strd	r6, r2, [sp, #16]
9001408c:	79aa      	ldrb	r2, [r5, #6]
9001408e:	9203      	str	r2, [sp, #12]
90014090:	7baa      	ldrb	r2, [r5, #14]
90014092:	9202      	str	r2, [sp, #8]
90014094:	68aa      	ldr	r2, [r5, #8]
90014096:	e9cd 0200 	strd	r0, r2, [sp]
9001409a:	9a29      	ldr	r2, [sp, #164]	; 0xa4
9001409c:	4660      	mov	r0, ip
9001409e:	688f      	ldr	r7, [r1, #8]
900140a0:	990f      	ldr	r1, [sp, #60]	; 0x3c
900140a2:	47b8      	blx	r7
900140a4:	e7e4      	b.n	90014070 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
900140a6:	9d0d      	ldr	r5, [sp, #52]	; 0x34
900140a8:	3501      	adds	r5, #1
900140aa:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
900140ac:	429d      	cmp	r5, r3
900140ae:	f6bf af5e 	bge.w	90013f6e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
900140b2:	4659      	mov	r1, fp
900140b4:	982c      	ldr	r0, [sp, #176]	; 0xb0
900140b6:	f7f0 fa7b 	bl	900045b0 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
900140ba:	4604      	mov	r4, r0
900140bc:	b110      	cbz	r0, 900140c4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e4>
900140be:	280a      	cmp	r0, #10
900140c0:	d1f2      	bne.n	900140a8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c8>
900140c2:	e753      	b.n	90013f6c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
900140c4:	2400      	movs	r4, #0
900140c6:	e752      	b.n	90013f6e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
900140c8:	f1bb 0f00 	cmp.w	fp, #0
900140cc:	f43f af43 	beq.w	90013f56 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
900140d0:	e75d      	b.n	90013f8e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>

900140d2 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
900140d2:	b530      	push	{r4, r5, lr}
900140d4:	8ac4      	ldrh	r4, [r0, #22]
900140d6:	8b45      	ldrh	r5, [r0, #26]
900140d8:	8343      	strh	r3, [r0, #26]
900140da:	442c      	add	r4, r5
900140dc:	1ae4      	subs	r4, r4, r3
900140de:	8b83      	ldrh	r3, [r0, #28]
900140e0:	82c4      	strh	r4, [r0, #22]
900140e2:	8b04      	ldrh	r4, [r0, #24]
900140e4:	4422      	add	r2, r4
900140e6:	440c      	add	r4, r1
900140e8:	1a59      	subs	r1, r3, r1
900140ea:	83c2      	strh	r2, [r0, #30]
900140ec:	8304      	strh	r4, [r0, #24]
900140ee:	8381      	strh	r1, [r0, #28]
900140f0:	bd30      	pop	{r4, r5, pc}

900140f2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
900140f2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900140f6:	4604      	mov	r4, r0
900140f8:	8a47      	ldrh	r7, [r0, #18]
900140fa:	68c0      	ldr	r0, [r0, #12]
900140fc:	b085      	sub	sp, #20
900140fe:	6803      	ldr	r3, [r0, #0]
90014100:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90014102:	4798      	blx	r3
90014104:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
90014108:	7a63      	ldrb	r3, [r4, #9]
9001410a:	eb06 0640 	add.w	r6, r6, r0, lsl #1
9001410e:	3b01      	subs	r3, #1
90014110:	42b7      	cmp	r7, r6
90014112:	bfac      	ite	ge
90014114:	f04f 0900 	movge.w	r9, #0
90014118:	f04f 0901 	movlt.w	r9, #1
9001411c:	2b05      	cmp	r3, #5
9001411e:	d804      	bhi.n	9001412a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x38>
90014120:	e8df f003 	tbb	[pc, r3]
90014124:	470f0854 	.word	0x470f0854
90014128:	4c4c      	.short	0x4c4c
9001412a:	2500      	movs	r5, #0
9001412c:	46a9      	mov	r9, r5
9001412e:	462e      	mov	r6, r5
90014130:	462f      	mov	r7, r5
90014132:	e00e      	b.n	90014152 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
90014134:	42b7      	cmp	r7, r6
90014136:	f04f 0500 	mov.w	r5, #0
9001413a:	bfb4      	ite	lt
9001413c:	2600      	movlt	r6, #0
9001413e:	2601      	movge	r6, #1
90014140:	e7f6      	b.n	90014130 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
90014142:	42b7      	cmp	r7, r6
90014144:	464d      	mov	r5, r9
90014146:	f04f 0900 	mov.w	r9, #0
9001414a:	bfb4      	ite	lt
9001414c:	2600      	movlt	r6, #0
9001414e:	2601      	movge	r6, #1
90014150:	464f      	mov	r7, r9
90014152:	f04f 0800 	mov.w	r8, #0
90014156:	f8a4 8016 	strh.w	r8, [r4, #22]
9001415a:	f8a4 8018 	strh.w	r8, [r4, #24]
9001415e:	f8cd 8004 	str.w	r8, [sp, #4]
90014162:	2300      	movs	r3, #0
90014164:	9303      	str	r3, [sp, #12]
90014166:	8823      	ldrh	r3, [r4, #0]
90014168:	2b20      	cmp	r3, #32
9001416a:	d033      	beq.n	900141d4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe2>
9001416c:	f242 010b 	movw	r1, #8203	; 0x200b
90014170:	1a5a      	subs	r2, r3, r1
90014172:	f1d2 0a00 	rsbs	sl, r2, #0
90014176:	eb4a 0a02 	adc.w	sl, sl, r2
9001417a:	f64f 62ff 	movw	r2, #65279	; 0xfeff
9001417e:	4293      	cmp	r3, r2
90014180:	d008      	beq.n	90014194 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
90014182:	428b      	cmp	r3, r1
90014184:	9a01      	ldr	r2, [sp, #4]
90014186:	bf0e      	itee	eq
90014188:	f04f 0a01 	moveq.w	sl, #1
9001418c:	461a      	movne	r2, r3
9001418e:	f04f 0a00 	movne.w	sl, #0
90014192:	9201      	str	r2, [sp, #4]
90014194:	ab03      	add	r3, sp, #12
90014196:	68e2      	ldr	r2, [r4, #12]
90014198:	7a21      	ldrb	r1, [r4, #8]
9001419a:	6860      	ldr	r0, [r4, #4]
9001419c:	f002 fe70 	bl	90016e80 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
900141a0:	8020      	strh	r0, [r4, #0]
900141a2:	b9d8      	cbnz	r0, 900141dc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xea>
900141a4:	8ba2      	ldrh	r2, [r4, #28]
900141a6:	2300      	movs	r3, #0
900141a8:	4611      	mov	r1, r2
900141aa:	4620      	mov	r0, r4
900141ac:	f7ff ff91 	bl	900140d2 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
900141b0:	e06e      	b.n	90014290 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
900141b2:	2500      	movs	r5, #0
900141b4:	2701      	movs	r7, #1
900141b6:	46a9      	mov	r9, r5
900141b8:	462e      	mov	r6, r5
900141ba:	e7ca      	b.n	90014152 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
900141bc:	42b7      	cmp	r7, r6
900141be:	f04f 0500 	mov.w	r5, #0
900141c2:	bfb4      	ite	lt
900141c4:	2700      	movlt	r7, #0
900141c6:	2701      	movge	r7, #1
900141c8:	462e      	mov	r6, r5
900141ca:	e7c2      	b.n	90014152 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
900141cc:	2500      	movs	r5, #0
900141ce:	2601      	movs	r6, #1
900141d0:	46a9      	mov	r9, r5
900141d2:	e7ad      	b.n	90014130 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
900141d4:	9301      	str	r3, [sp, #4]
900141d6:	f04f 0a01 	mov.w	sl, #1
900141da:	e7db      	b.n	90014194 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
900141dc:	8b63      	ldrh	r3, [r4, #26]
900141de:	280a      	cmp	r0, #10
900141e0:	f103 0301 	add.w	r3, r3, #1
900141e4:	8363      	strh	r3, [r4, #26]
900141e6:	d0dd      	beq.n	900141a4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb2>
900141e8:	9a03      	ldr	r2, [sp, #12]
900141ea:	bb62      	cbnz	r2, 90014246 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x154>
900141ec:	f64f 63ff 	movw	r3, #65279	; 0xfeff
900141f0:	4298      	cmp	r0, r3
900141f2:	d003      	beq.n	900141fc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
900141f4:	f242 030b 	movw	r3, #8203	; 0x200b
900141f8:	4298      	cmp	r0, r3
900141fa:	d1b2      	bne.n	90014162 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
900141fc:	8823      	ldrh	r3, [r4, #0]
900141fe:	8ba1      	ldrh	r1, [r4, #28]
90014200:	2b20      	cmp	r3, #32
90014202:	d003      	beq.n	9001420c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11a>
90014204:	f242 000b 	movw	r0, #8203	; 0x200b
90014208:	4283      	cmp	r3, r0
9001420a:	d131      	bne.n	90014270 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x17e>
9001420c:	f1ba 0f00 	cmp.w	sl, #0
90014210:	bf0a      	itet	eq
90014212:	4688      	moveq	r8, r1
90014214:	4650      	movne	r0, sl
90014216:	2001      	moveq	r0, #1
90014218:	440a      	add	r2, r1
9001421a:	8b23      	ldrh	r3, [r4, #24]
9001421c:	f8b4 c010 	ldrh.w	ip, [r4, #16]
90014220:	b292      	uxth	r2, r2
90014222:	83a2      	strh	r2, [r4, #28]
90014224:	4413      	add	r3, r2
90014226:	f1b9 0f00 	cmp.w	r9, #0
9001422a:	d102      	bne.n	90014232 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x140>
9001422c:	2d00      	cmp	r5, #0
9001422e:	d042      	beq.n	900142b6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c4>
90014230:	b300      	cbz	r0, 90014274 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x182>
90014232:	8c21      	ldrh	r1, [r4, #32]
90014234:	4419      	add	r1, r3
90014236:	458c      	cmp	ip, r1
90014238:	da37      	bge.n	900142aa <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
9001423a:	8ae1      	ldrh	r1, [r4, #22]
9001423c:	2900      	cmp	r1, #0
9001423e:	d034      	beq.n	900142aa <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
90014240:	4563      	cmp	r3, ip
90014242:	dd8e      	ble.n	90014162 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90014244:	e01d      	b.n	90014282 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x190>
90014246:	8893      	ldrh	r3, [r2, #4]
90014248:	9901      	ldr	r1, [sp, #4]
9001424a:	8023      	strh	r3, [r4, #0]
9001424c:	f892 b00d 	ldrb.w	fp, [r2, #13]
90014250:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
90014254:	f40b 7080 	and.w	r0, fp, #256	; 0x100
90014258:	f892 b00a 	ldrb.w	fp, [r2, #10]
9001425c:	ea4b 0b00 	orr.w	fp, fp, r0
90014260:	68e0      	ldr	r0, [r4, #12]
90014262:	6803      	ldr	r3, [r0, #0]
90014264:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90014266:	4798      	blx	r3
90014268:	eb0b 0200 	add.w	r2, fp, r0
9001426c:	b292      	uxth	r2, r2
9001426e:	e7c5      	b.n	900141fc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
90014270:	2000      	movs	r0, #0
90014272:	e7d1      	b.n	90014218 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x126>
90014274:	4563      	cmp	r3, ip
90014276:	f77f af74 	ble.w	90014162 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
9001427a:	8ae3      	ldrh	r3, [r4, #22]
9001427c:	2b00      	cmp	r3, #0
9001427e:	f43f af70 	beq.w	90014162 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90014282:	2301      	movs	r3, #1
90014284:	8c22      	ldrh	r2, [r4, #32]
90014286:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
9001428a:	8be3      	ldrh	r3, [r4, #30]
9001428c:	4413      	add	r3, r2
9001428e:	83e3      	strh	r3, [r4, #30]
90014290:	68e0      	ldr	r0, [r4, #12]
90014292:	6803      	ldr	r3, [r0, #0]
90014294:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90014296:	4798      	blx	r3
90014298:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
9001429c:	4418      	add	r0, r3
9001429e:	8a63      	ldrh	r3, [r4, #18]
900142a0:	1a18      	subs	r0, r3, r0
900142a2:	8260      	strh	r0, [r4, #18]
900142a4:	b005      	add	sp, #20
900142a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900142aa:	2300      	movs	r3, #0
900142ac:	4611      	mov	r1, r2
900142ae:	4620      	mov	r0, r4
900142b0:	f7ff ff0f 	bl	900140d2 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
900142b4:	e755      	b.n	90014162 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
900142b6:	4563      	cmp	r3, ip
900142b8:	dd14      	ble.n	900142e4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f2>
900142ba:	b117      	cbz	r7, 900142c2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d0>
900142bc:	2301      	movs	r3, #1
900142be:	460a      	mov	r2, r1
900142c0:	e772      	b.n	900141a8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb6>
900142c2:	2e00      	cmp	r6, #0
900142c4:	f43f af4d 	beq.w	90014162 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
900142c8:	2800      	cmp	r0, #0
900142ca:	f47f af4a 	bne.w	90014162 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
900142ce:	f1ba 0f00 	cmp.w	sl, #0
900142d2:	d002      	beq.n	900142da <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1e8>
900142d4:	2301      	movs	r3, #1
900142d6:	4642      	mov	r2, r8
900142d8:	e767      	b.n	900141aa <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
900142da:	8ae3      	ldrh	r3, [r4, #22]
900142dc:	2b00      	cmp	r3, #0
900142de:	f43f af40 	beq.w	90014162 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
900142e2:	e7d5      	b.n	90014290 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
900142e4:	2800      	cmp	r0, #0
900142e6:	f47f af3c 	bne.w	90014162 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
900142ea:	f1ba 0f00 	cmp.w	sl, #0
900142ee:	f43f af38 	beq.w	90014162 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
900142f2:	2301      	movs	r3, #1
900142f4:	4642      	mov	r2, r8
900142f6:	e7da      	b.n	900142ae <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1bc>

900142f8 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
900142f8:	b5f0      	push	{r4, r5, r6, r7, lr}
900142fa:	4605      	mov	r5, r0
900142fc:	b08f      	sub	sp, #60	; 0x3c
900142fe:	4617      	mov	r7, r2
90014300:	461c      	mov	r4, r3
90014302:	460e      	mov	r6, r1
90014304:	b1d1      	cbz	r1, 9001433c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
90014306:	681b      	ldr	r3, [r3, #0]
90014308:	4620      	mov	r0, r4
9001430a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001430c:	4798      	blx	r3
9001430e:	4240      	negs	r0, r0
90014310:	9603      	str	r6, [sp, #12]
90014312:	f64f 73ff 	movw	r3, #65535	; 0xffff
90014316:	b200      	sxth	r0, r0
90014318:	9700      	str	r7, [sp, #0]
9001431a:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
9001431e:	4629      	mov	r1, r5
90014320:	e9cd 4001 	strd	r4, r0, [sp, #4]
90014324:	2401      	movs	r4, #1
90014326:	a805      	add	r0, sp, #20
90014328:	f7ff fcaa 	bl	90013c80 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
9001432c:	a805      	add	r0, sp, #20
9001432e:	f7ff fee0 	bl	900140f2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
90014332:	f8bd 3014 	ldrh.w	r3, [sp, #20]
90014336:	b163      	cbz	r3, 90014352 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
90014338:	3401      	adds	r4, #1
9001433a:	e7f7      	b.n	9001432c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
9001433c:	2401      	movs	r4, #1
9001433e:	f002 fe6b 	bl	90017018 <_ZN8touchgfx12TextProvider11getNextCharEv>
90014342:	280a      	cmp	r0, #10
90014344:	4628      	mov	r0, r5
90014346:	bf08      	it	eq
90014348:	3401      	addeq	r4, #1
9001434a:	f002 fe65 	bl	90017018 <_ZN8touchgfx12TextProvider11getNextCharEv>
9001434e:	2800      	cmp	r0, #0
90014350:	d1f7      	bne.n	90014342 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
90014352:	b2a0      	uxth	r0, r4
90014354:	b00f      	add	sp, #60	; 0x3c
90014356:	bdf0      	pop	{r4, r5, r6, r7, pc}

90014358 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
90014358:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001435c:	b0e3      	sub	sp, #396	; 0x18c
9001435e:	461c      	mov	r4, r3
90014360:	4683      	mov	fp, r0
90014362:	4688      	mov	r8, r1
90014364:	9b6c      	ldr	r3, [sp, #432]	; 0x1b0
90014366:	2b00      	cmp	r3, #0
90014368:	f000 8112 	beq.w	90014590 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
9001436c:	6823      	ldr	r3, [r4, #0]
9001436e:	2b00      	cmp	r3, #0
90014370:	f000 810e 	beq.w	90014590 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90014374:	7ba3      	ldrb	r3, [r4, #14]
90014376:	2b00      	cmp	r3, #0
90014378:	f000 810a 	beq.w	90014590 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
9001437c:	ad0a      	add	r5, sp, #40	; 0x28
9001437e:	6810      	ldr	r0, [r2, #0]
90014380:	6851      	ldr	r1, [r2, #4]
90014382:	462b      	mov	r3, r5
90014384:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
90014388:	c303      	stmia	r3!, {r0, r1}
9001438a:	2100      	movs	r1, #0
9001438c:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
90014390:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
90014394:	4628      	mov	r0, r5
90014396:	910c      	str	r1, [sp, #48]	; 0x30
90014398:	a90c      	add	r1, sp, #48	; 0x30
9001439a:	79a2      	ldrb	r2, [r4, #6]
9001439c:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
900143a0:	f7ff fced 	bl	90013d7e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
900143a4:	a90c      	add	r1, sp, #48	; 0x30
900143a6:	79a2      	ldrb	r2, [r4, #6]
900143a8:	4608      	mov	r0, r1
900143aa:	f7ff fce8 	bl	90013d7e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
900143ae:	a817      	add	r0, sp, #92	; 0x5c
900143b0:	f002 fa05 	bl	900167be <_ZN8touchgfx12TextProviderC1Ev>
900143b4:	6820      	ldr	r0, [r4, #0]
900143b6:	6803      	ldr	r3, [r0, #0]
900143b8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
900143ba:	4798      	blx	r3
900143bc:	4606      	mov	r6, r0
900143be:	6820      	ldr	r0, [r4, #0]
900143c0:	6803      	ldr	r3, [r0, #0]
900143c2:	6d1b      	ldr	r3, [r3, #80]	; 0x50
900143c4:	4798      	blx	r3
900143c6:	4633      	mov	r3, r6
900143c8:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
900143ca:	996c      	ldr	r1, [sp, #432]	; 0x1b0
900143cc:	9000      	str	r0, [sp, #0]
900143ce:	a817      	add	r0, sp, #92	; 0x5c
900143d0:	f002 fa50 	bl	90016874 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
900143d4:	6820      	ldr	r0, [r4, #0]
900143d6:	f894 a004 	ldrb.w	sl, [r4, #4]
900143da:	6803      	ldr	r3, [r0, #0]
900143dc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
900143de:	4798      	blx	r3
900143e0:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
900143e4:	6823      	ldr	r3, [r4, #0]
900143e6:	4607      	mov	r7, r0
900143e8:	4406      	add	r6, r0
900143ea:	a830      	add	r0, sp, #192	; 0xc0
900143ec:	f893 9009 	ldrb.w	r9, [r3, #9]
900143f0:	f002 f9e5 	bl	900167be <_ZN8touchgfx12TextProviderC1Ev>
900143f4:	7c23      	ldrb	r3, [r4, #16]
900143f6:	b17b      	cbz	r3, 90014418 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
900143f8:	6820      	ldr	r0, [r4, #0]
900143fa:	6803      	ldr	r3, [r0, #0]
900143fc:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
900143fe:	4798      	blx	r3
90014400:	9009      	str	r0, [sp, #36]	; 0x24
90014402:	6820      	ldr	r0, [r4, #0]
90014404:	6802      	ldr	r2, [r0, #0]
90014406:	6d12      	ldr	r2, [r2, #80]	; 0x50
90014408:	4790      	blx	r2
9001440a:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001440c:	9000      	str	r0, [sp, #0]
9001440e:	a830      	add	r0, sp, #192	; 0xc0
90014410:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
90014412:	996c      	ldr	r1, [sp, #432]	; 0x1b0
90014414:	f002 fa2e 	bl	90016874 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90014418:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
9001441c:	a80e      	add	r0, sp, #56	; 0x38
9001441e:	7be2      	ldrb	r2, [r4, #15]
90014420:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
90014424:	1a8a      	subs	r2, r1, r2
90014426:	7c21      	ldrb	r1, [r4, #16]
90014428:	9103      	str	r1, [sp, #12]
9001442a:	b292      	uxth	r2, r2
9001442c:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
90014430:	9102      	str	r1, [sp, #8]
90014432:	6821      	ldr	r1, [r4, #0]
90014434:	9101      	str	r1, [sp, #4]
90014436:	7961      	ldrb	r1, [r4, #5]
90014438:	9100      	str	r1, [sp, #0]
9001443a:	a930      	add	r1, sp, #192	; 0xc0
9001443c:	f7ff fc20 	bl	90013c80 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
90014440:	2e00      	cmp	r6, #0
90014442:	dc5b      	bgt.n	900144fc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
90014444:	af17      	add	r7, sp, #92	; 0x5c
90014446:	f04f 0900 	mov.w	r9, #0
9001444a:	7c23      	ldrb	r3, [r4, #16]
9001444c:	2b00      	cmp	r3, #0
9001444e:	f000 80b1 	beq.w	900145b4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
90014452:	a80e      	add	r0, sp, #56	; 0x38
90014454:	f7ff fe4d 	bl	900140f2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
90014458:	f1ba 0f00 	cmp.w	sl, #0
9001445c:	f000 80a5 	beq.w	900145aa <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
90014460:	7c23      	ldrb	r3, [r4, #16]
90014462:	2264      	movs	r2, #100	; 0x64
90014464:	4639      	mov	r1, r7
90014466:	a849      	add	r0, sp, #292	; 0x124
90014468:	9309      	str	r3, [sp, #36]	; 0x24
9001446a:	f012 f92a 	bl	900266c2 <memcpy>
9001446e:	9b09      	ldr	r3, [sp, #36]	; 0x24
90014470:	2b00      	cmp	r3, #0
90014472:	f000 80a7 	beq.w	900145c4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
90014476:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
9001447a:	7922      	ldrb	r2, [r4, #4]
9001447c:	2a01      	cmp	r2, #1
9001447e:	f040 808a 	bne.w	90014596 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
90014482:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	; 0x34
90014486:	1ac0      	subs	r0, r0, r3
90014488:	2302      	movs	r3, #2
9001448a:	fb90 f0f3 	sdiv	r0, r0, r3
9001448e:	b200      	sxth	r0, r0
90014490:	7c23      	ldrb	r3, [r4, #16]
90014492:	2b00      	cmp	r3, #0
90014494:	f000 808b 	beq.w	900145ae <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
90014498:	f8bd 204e 	ldrh.w	r2, [sp, #78]	; 0x4e
9001449c:	f89d 105a 	ldrb.w	r1, [sp, #90]	; 0x5a
900144a0:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
900144a4:	e9cd 2105 	strd	r2, r1, [sp, #20]
900144a8:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
900144ac:	2100      	movs	r1, #0
900144ae:	4410      	add	r0, r2
900144b0:	4642      	mov	r2, r8
900144b2:	b200      	sxth	r0, r0
900144b4:	e9cd 9703 	strd	r9, r7, [sp, #12]
900144b8:	9000      	str	r0, [sp, #0]
900144ba:	4658      	mov	r0, fp
900144bc:	e9cd 5401 	strd	r5, r4, [sp, #4]
900144c0:	f7ff fc8e 	bl	90013de0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
900144c4:	2800      	cmp	r0, #0
900144c6:	d163      	bne.n	90014590 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
900144c8:	b2b2      	uxth	r2, r6
900144ca:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
900144ce:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
900144d2:	4413      	add	r3, r2
900144d4:	1a8a      	subs	r2, r1, r2
900144d6:	b21b      	sxth	r3, r3
900144d8:	f8ad 2036 	strh.w	r2, [sp, #54]	; 0x36
900144dc:	f89d 205a 	ldrb.w	r2, [sp, #90]	; 0x5a
900144e0:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
900144e4:	2a00      	cmp	r2, #0
900144e6:	d153      	bne.n	90014590 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
900144e8:	6822      	ldr	r2, [r4, #0]
900144ea:	8869      	ldrh	r1, [r5, #2]
900144ec:	7a12      	ldrb	r2, [r2, #8]
900144ee:	1a9b      	subs	r3, r3, r2
900144f0:	88ea      	ldrh	r2, [r5, #6]
900144f2:	440a      	add	r2, r1
900144f4:	b212      	sxth	r2, r2
900144f6:	4293      	cmp	r3, r2
900144f8:	dda7      	ble.n	9001444a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
900144fa:	e049      	b.n	90014590 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
900144fc:	7c23      	ldrb	r3, [r4, #16]
900144fe:	444f      	add	r7, r9
90014500:	b1c3      	cbz	r3, 90014534 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
90014502:	f64f 79ff 	movw	r9, #65535	; 0xffff
90014506:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
9001450a:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
9001450e:	443b      	add	r3, r7
90014510:	4293      	cmp	r3, r2
90014512:	da97      	bge.n	90014444 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
90014514:	a80e      	add	r0, sp, #56	; 0x38
90014516:	f7ff fdec 	bl	900140f2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
9001451a:	f8bd 304e 	ldrh.w	r3, [sp, #78]	; 0x4e
9001451e:	3b01      	subs	r3, #1
90014520:	b29b      	uxth	r3, r3
90014522:	454b      	cmp	r3, r9
90014524:	9309      	str	r3, [sp, #36]	; 0x24
90014526:	d021      	beq.n	9001456c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
90014528:	7961      	ldrb	r1, [r4, #5]
9001452a:	a817      	add	r0, sp, #92	; 0x5c
9001452c:	f7f0 f840 	bl	900045b0 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
90014530:	9b09      	ldr	r3, [sp, #36]	; 0x24
90014532:	e7f4      	b.n	9001451e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
90014534:	fa1f f986 	uxth.w	r9, r6
90014538:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
9001453c:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
90014540:	443b      	add	r3, r7
90014542:	4293      	cmp	r3, r2
90014544:	f6bf af7e 	bge.w	90014444 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
90014548:	a817      	add	r0, sp, #92	; 0x5c
9001454a:	f002 fd65 	bl	90017018 <_ZN8touchgfx12TextProvider11getNextCharEv>
9001454e:	b1f8      	cbz	r0, 90014590 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90014550:	280a      	cmp	r0, #10
90014552:	d1f1      	bne.n	90014538 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
90014554:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
90014558:	444b      	add	r3, r9
9001455a:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
9001455e:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
90014562:	eba3 0309 	sub.w	r3, r3, r9
90014566:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
9001456a:	e7e5      	b.n	90014538 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
9001456c:	b2b3      	uxth	r3, r6
9001456e:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
90014572:	441a      	add	r2, r3
90014574:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
90014578:	f8bd 2036 	ldrh.w	r2, [sp, #54]	; 0x36
9001457c:	1ad3      	subs	r3, r2, r3
9001457e:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
90014582:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
90014586:	b11b      	cbz	r3, 90014590 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90014588:	f89d 305a 	ldrb.w	r3, [sp, #90]	; 0x5a
9001458c:	2b00      	cmp	r3, #0
9001458e:	d0ba      	beq.n	90014506 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
90014590:	b063      	add	sp, #396	; 0x18c
90014592:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90014596:	2a02      	cmp	r2, #2
90014598:	d105      	bne.n	900145a6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
9001459a:	7be2      	ldrb	r2, [r4, #15]
9001459c:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
900145a0:	1a80      	subs	r0, r0, r2
900145a2:	1ac0      	subs	r0, r0, r3
900145a4:	e773      	b.n	9001448e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
900145a6:	2000      	movs	r0, #0
900145a8:	e772      	b.n	90014490 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
900145aa:	7be0      	ldrb	r0, [r4, #15]
900145ac:	e770      	b.n	90014490 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
900145ae:	f647 72ff 	movw	r2, #32767	; 0x7fff
900145b2:	e773      	b.n	9001449c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
900145b4:	f1ba 0f00 	cmp.w	sl, #0
900145b8:	d0f7      	beq.n	900145aa <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
900145ba:	2264      	movs	r2, #100	; 0x64
900145bc:	4639      	mov	r1, r7
900145be:	a849      	add	r0, sp, #292	; 0x124
900145c0:	f012 f87f 	bl	900266c2 <memcpy>
900145c4:	2300      	movs	r3, #0
900145c6:	f647 72ff 	movw	r2, #32767	; 0x7fff
900145ca:	6821      	ldr	r1, [r4, #0]
900145cc:	a849      	add	r0, sp, #292	; 0x124
900145ce:	f7ff fb9a 	bl	90013d06 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
900145d2:	b203      	sxth	r3, r0
900145d4:	e751      	b.n	9001447a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

900145d6 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
900145d6:	2b03      	cmp	r3, #3
900145d8:	d818      	bhi.n	9001460c <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
900145da:	e8df f003 	tbb	[pc, r3]
900145de:	0602      	.short	0x0602
900145e0:	130d      	.short	0x130d
900145e2:	f9b0 2000 	ldrsh.w	r2, [r0]
900145e6:	1850      	adds	r0, r2, r1
900145e8:	4770      	bx	lr
900145ea:	8803      	ldrh	r3, [r0, #0]
900145ec:	8880      	ldrh	r0, [r0, #4]
900145ee:	4418      	add	r0, r3
900145f0:	b200      	sxth	r0, r0
900145f2:	1a80      	subs	r0, r0, r2
900145f4:	3801      	subs	r0, #1
900145f6:	4770      	bx	lr
900145f8:	8803      	ldrh	r3, [r0, #0]
900145fa:	8880      	ldrh	r0, [r0, #4]
900145fc:	4418      	add	r0, r3
900145fe:	b200      	sxth	r0, r0
90014600:	1a40      	subs	r0, r0, r1
90014602:	e7f7      	b.n	900145f4 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
90014604:	f9b0 0000 	ldrsh.w	r0, [r0]
90014608:	4410      	add	r0, r2
9001460a:	4770      	bx	lr
9001460c:	2000      	movs	r0, #0
9001460e:	4770      	bx	lr

90014610 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
90014610:	2b03      	cmp	r3, #3
90014612:	d817      	bhi.n	90014644 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
90014614:	e8df f003 	tbb	[pc, r3]
90014618:	10090602 	.word	0x10090602
9001461c:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
90014620:	1850      	adds	r0, r2, r1
90014622:	4770      	bx	lr
90014624:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
90014628:	e7fa      	b.n	90014620 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
9001462a:	8843      	ldrh	r3, [r0, #2]
9001462c:	88c0      	ldrh	r0, [r0, #6]
9001462e:	4418      	add	r0, r3
90014630:	b200      	sxth	r0, r0
90014632:	1a80      	subs	r0, r0, r2
90014634:	3801      	subs	r0, #1
90014636:	4770      	bx	lr
90014638:	8843      	ldrh	r3, [r0, #2]
9001463a:	88c0      	ldrh	r0, [r0, #6]
9001463c:	4418      	add	r0, r3
9001463e:	b200      	sxth	r0, r0
90014640:	1a40      	subs	r0, r0, r1
90014642:	e7f7      	b.n	90014634 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
90014644:	2000      	movs	r0, #0
90014646:	4770      	bx	lr

90014648 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
90014648:	4b01      	ldr	r3, [pc, #4]	; (90014650 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
9001464a:	2200      	movs	r2, #0
9001464c:	601a      	str	r2, [r3, #0]
9001464e:	4770      	bx	lr
90014650:	2402358c 	.word	0x2402358c

90014654 <_ZN8touchgfx16TouchCalibration4clzuEm>:
90014654:	4603      	mov	r3, r0
90014656:	b1c8      	cbz	r0, 9001468c <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
90014658:	0c02      	lsrs	r2, r0, #16
9001465a:	0412      	lsls	r2, r2, #16
9001465c:	b9a2      	cbnz	r2, 90014688 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
9001465e:	0403      	lsls	r3, r0, #16
90014660:	2010      	movs	r0, #16
90014662:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
90014666:	bf04      	itt	eq
90014668:	021b      	lsleq	r3, r3, #8
9001466a:	3008      	addeq	r0, #8
9001466c:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
90014670:	bf04      	itt	eq
90014672:	011b      	lsleq	r3, r3, #4
90014674:	3004      	addeq	r0, #4
90014676:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
9001467a:	bf04      	itt	eq
9001467c:	009b      	lsleq	r3, r3, #2
9001467e:	3002      	addeq	r0, #2
90014680:	2b00      	cmp	r3, #0
90014682:	db04      	blt.n	9001468e <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
90014684:	3001      	adds	r0, #1
90014686:	4770      	bx	lr
90014688:	2000      	movs	r0, #0
9001468a:	e7ea      	b.n	90014662 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
9001468c:	2020      	movs	r0, #32
9001468e:	4770      	bx	lr

90014690 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
90014690:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90014694:	b087      	sub	sp, #28
90014696:	460d      	mov	r5, r1
90014698:	4616      	mov	r6, r2
9001469a:	4698      	mov	r8, r3
9001469c:	4601      	mov	r1, r0
9001469e:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
900146a2:	b120      	cbz	r0, 900146ae <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
900146a4:	b11a      	cbz	r2, 900146ae <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
900146a6:	2d1f      	cmp	r5, #31
900146a8:	d801      	bhi.n	900146ae <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
900146aa:	2b1f      	cmp	r3, #31
900146ac:	d904      	bls.n	900146b8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
900146ae:	2000      	movs	r0, #0
900146b0:	6038      	str	r0, [r7, #0]
900146b2:	b007      	add	sp, #28
900146b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900146b8:	b97d      	cbnz	r5, 900146da <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
900146ba:	b143      	cbz	r3, 900146ce <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
900146bc:	4602      	mov	r2, r0
900146be:	462b      	mov	r3, r5
900146c0:	4641      	mov	r1, r8
900146c2:	4630      	mov	r0, r6
900146c4:	e9cd 4700 	strd	r4, r7, [sp]
900146c8:	f7ff ffe2 	bl	90014690 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
900146cc:	e7f1      	b.n	900146b2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
900146ce:	f04f 33ff 	mov.w	r3, #4294967295
900146d2:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
900146d6:	603b      	str	r3, [r7, #0]
900146d8:	e7eb      	b.n	900146b2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
900146da:	fa32 fa05 	lsrs.w	sl, r2, r5
900146de:	d106      	bne.n	900146ee <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
900146e0:	4346      	muls	r6, r0
900146e2:	fbb6 f0f4 	udiv	r0, r6, r4
900146e6:	fb04 6610 	mls	r6, r4, r0, r6
900146ea:	603e      	str	r6, [r7, #0]
900146ec:	e7e1      	b.n	900146b2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
900146ee:	2201      	movs	r2, #1
900146f0:	fa00 fb05 	lsl.w	fp, r0, r5
900146f4:	40aa      	lsls	r2, r5
900146f6:	fbbb f9f4 	udiv	r9, fp, r4
900146fa:	3a01      	subs	r2, #1
900146fc:	fb0a f309 	mul.w	r3, sl, r9
90014700:	fb04 b919 	mls	r9, r4, r9, fp
90014704:	4016      	ands	r6, r2
90014706:	9303      	str	r3, [sp, #12]
90014708:	4630      	mov	r0, r6
9001470a:	f7ff ffa3 	bl	90014654 <_ZN8touchgfx16TouchCalibration4clzuEm>
9001470e:	462b      	mov	r3, r5
90014710:	460a      	mov	r2, r1
90014712:	4601      	mov	r1, r0
90014714:	4630      	mov	r0, r6
90014716:	e9cd 4700 	strd	r4, r7, [sp]
9001471a:	f7ff ffb9 	bl	90014690 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
9001471e:	4606      	mov	r6, r0
90014720:	4648      	mov	r0, r9
90014722:	eb05 0108 	add.w	r1, r5, r8
90014726:	f7ff ff95 	bl	90014654 <_ZN8touchgfx16TouchCalibration4clzuEm>
9001472a:	ab05      	add	r3, sp, #20
9001472c:	464a      	mov	r2, r9
9001472e:	e9cd 4300 	strd	r4, r3, [sp]
90014732:	4603      	mov	r3, r0
90014734:	4650      	mov	r0, sl
90014736:	f7ff ffab 	bl	90014690 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
9001473a:	6839      	ldr	r1, [r7, #0]
9001473c:	9a05      	ldr	r2, [sp, #20]
9001473e:	9b03      	ldr	r3, [sp, #12]
90014740:	4411      	add	r1, r2
90014742:	fbb1 f2f4 	udiv	r2, r1, r4
90014746:	18d3      	adds	r3, r2, r3
90014748:	fb04 1412 	mls	r4, r4, r2, r1
9001474c:	441e      	add	r6, r3
9001474e:	603c      	str	r4, [r7, #0]
90014750:	4430      	add	r0, r6
90014752:	e7ae      	b.n	900146b2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

90014754 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
90014754:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90014758:	b085      	sub	sp, #20
9001475a:	f1b0 0900 	subs.w	r9, r0, #0
9001475e:	461d      	mov	r5, r3
90014760:	4617      	mov	r7, r2
90014762:	9c0c      	ldr	r4, [sp, #48]	; 0x30
90014764:	bfbb      	ittet	lt
90014766:	f1c9 0900 	rsblt	r9, r9, #0
9001476a:	f04f 36ff 	movlt.w	r6, #4294967295
9001476e:	2601      	movge	r6, #1
90014770:	6823      	ldrlt	r3, [r4, #0]
90014772:	bfbc      	itt	lt
90014774:	425b      	neglt	r3, r3
90014776:	6023      	strlt	r3, [r4, #0]
90014778:	2a00      	cmp	r2, #0
9001477a:	da04      	bge.n	90014786 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
9001477c:	6823      	ldr	r3, [r4, #0]
9001477e:	4257      	negs	r7, r2
90014780:	4276      	negs	r6, r6
90014782:	425b      	negs	r3, r3
90014784:	6023      	str	r3, [r4, #0]
90014786:	2d00      	cmp	r5, #0
90014788:	4638      	mov	r0, r7
9001478a:	bfba      	itte	lt
9001478c:	426d      	neglt	r5, r5
9001478e:	f04f 38ff 	movlt.w	r8, #4294967295
90014792:	f04f 0801 	movge.w	r8, #1
90014796:	f7ff ff5d 	bl	90014654 <_ZN8touchgfx16TouchCalibration4clzuEm>
9001479a:	ab03      	add	r3, sp, #12
9001479c:	463a      	mov	r2, r7
9001479e:	e9cd 5300 	strd	r5, r3, [sp]
900147a2:	4603      	mov	r3, r0
900147a4:	4648      	mov	r0, r9
900147a6:	f7ff ff73 	bl	90014690 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
900147aa:	6823      	ldr	r3, [r4, #0]
900147ac:	9a03      	ldr	r2, [sp, #12]
900147ae:	4546      	cmp	r6, r8
900147b0:	441a      	add	r2, r3
900147b2:	fb92 f3f5 	sdiv	r3, r2, r5
900147b6:	4418      	add	r0, r3
900147b8:	fb05 2313 	mls	r3, r5, r3, r2
900147bc:	bf18      	it	ne
900147be:	4240      	negne	r0, r0
900147c0:	1c72      	adds	r2, r6, #1
900147c2:	6023      	str	r3, [r4, #0]
900147c4:	d105      	bne.n	900147d2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
900147c6:	2b00      	cmp	r3, #0
900147c8:	f1c3 0200 	rsb	r2, r3, #0
900147cc:	db0b      	blt.n	900147e6 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
900147ce:	6022      	str	r2, [r4, #0]
900147d0:	e006      	b.n	900147e0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
900147d2:	2e01      	cmp	r6, #1
900147d4:	d104      	bne.n	900147e0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
900147d6:	2b00      	cmp	r3, #0
900147d8:	da02      	bge.n	900147e0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
900147da:	442b      	add	r3, r5
900147dc:	3801      	subs	r0, #1
900147de:	6023      	str	r3, [r4, #0]
900147e0:	b005      	add	sp, #20
900147e2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
900147e6:	3801      	subs	r0, #1
900147e8:	1b52      	subs	r2, r2, r5
900147ea:	e7f0      	b.n	900147ce <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

900147ec <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
900147ec:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
900147f0:	4c1c      	ldr	r4, [pc, #112]	; (90014864 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
900147f2:	4605      	mov	r5, r0
900147f4:	6807      	ldr	r7, [r0, #0]
900147f6:	69a3      	ldr	r3, [r4, #24]
900147f8:	b92b      	cbnz	r3, 90014806 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
900147fa:	6840      	ldr	r0, [r0, #4]
900147fc:	e9c5 7000 	strd	r7, r0, [r5]
90014800:	b004      	add	sp, #16
90014802:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90014806:	f04f 0802 	mov.w	r8, #2
9001480a:	68a2      	ldr	r2, [r4, #8]
9001480c:	ae04      	add	r6, sp, #16
9001480e:	6820      	ldr	r0, [r4, #0]
90014810:	fb93 f1f8 	sdiv	r1, r3, r8
90014814:	440a      	add	r2, r1
90014816:	69e1      	ldr	r1, [r4, #28]
90014818:	f846 2d04 	str.w	r2, [r6, #-4]!
9001481c:	463a      	mov	r2, r7
9001481e:	9600      	str	r6, [sp, #0]
90014820:	f7ff ff98 	bl	90014754 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
90014824:	69a3      	ldr	r3, [r4, #24]
90014826:	4607      	mov	r7, r0
90014828:	686a      	ldr	r2, [r5, #4]
9001482a:	6a21      	ldr	r1, [r4, #32]
9001482c:	9600      	str	r6, [sp, #0]
9001482e:	6860      	ldr	r0, [r4, #4]
90014830:	f7ff ff90 	bl	90014754 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
90014834:	69a3      	ldr	r3, [r4, #24]
90014836:	6962      	ldr	r2, [r4, #20]
90014838:	4407      	add	r7, r0
9001483a:	6a61      	ldr	r1, [r4, #36]	; 0x24
9001483c:	9600      	str	r6, [sp, #0]
9001483e:	68e0      	ldr	r0, [r4, #12]
90014840:	fb93 f8f8 	sdiv	r8, r3, r8
90014844:	4442      	add	r2, r8
90014846:	9203      	str	r2, [sp, #12]
90014848:	682a      	ldr	r2, [r5, #0]
9001484a:	f7ff ff83 	bl	90014754 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
9001484e:	4680      	mov	r8, r0
90014850:	9600      	str	r6, [sp, #0]
90014852:	69a3      	ldr	r3, [r4, #24]
90014854:	686a      	ldr	r2, [r5, #4]
90014856:	6aa1      	ldr	r1, [r4, #40]	; 0x28
90014858:	6920      	ldr	r0, [r4, #16]
9001485a:	f7ff ff7b 	bl	90014754 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
9001485e:	4440      	add	r0, r8
90014860:	e7cc      	b.n	900147fc <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
90014862:	bf00      	nop
90014864:	24023590 	.word	0x24023590

90014868 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
90014868:	4b07      	ldr	r3, [pc, #28]	; (90014888 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
9001486a:	781b      	ldrb	r3, [r3, #0]
9001486c:	2b01      	cmp	r3, #1
9001486e:	d109      	bne.n	90014884 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
90014870:	f9b1 3000 	ldrsh.w	r3, [r1]
90014874:	f9b0 2000 	ldrsh.w	r2, [r0]
90014878:	8003      	strh	r3, [r0, #0]
9001487a:	4b04      	ldr	r3, [pc, #16]	; (9001488c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
9001487c:	881b      	ldrh	r3, [r3, #0]
9001487e:	3b01      	subs	r3, #1
90014880:	1a9b      	subs	r3, r3, r2
90014882:	800b      	strh	r3, [r1, #0]
90014884:	4770      	bx	lr
90014886:	bf00      	nop
90014888:	24023574 	.word	0x24023574
9001488c:	24023570 	.word	0x24023570

90014890 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
90014890:	4b07      	ldr	r3, [pc, #28]	; (900148b0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
90014892:	b510      	push	{r4, lr}
90014894:	781b      	ldrb	r3, [r3, #0]
90014896:	2b01      	cmp	r3, #1
90014898:	d108      	bne.n	900148ac <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
9001489a:	4b06      	ldr	r3, [pc, #24]	; (900148b4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
9001489c:	880c      	ldrh	r4, [r1, #0]
9001489e:	881b      	ldrh	r3, [r3, #0]
900148a0:	f9b0 2000 	ldrsh.w	r2, [r0]
900148a4:	3b01      	subs	r3, #1
900148a6:	1b1b      	subs	r3, r3, r4
900148a8:	8003      	strh	r3, [r0, #0]
900148aa:	800a      	strh	r2, [r1, #0]
900148ac:	bd10      	pop	{r4, pc}
900148ae:	bf00      	nop
900148b0:	24023574 	.word	0x24023574
900148b4:	24023570 	.word	0x24023570

900148b8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
900148b8:	4b0a      	ldr	r3, [pc, #40]	; (900148e4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
900148ba:	b510      	push	{r4, lr}
900148bc:	781b      	ldrb	r3, [r3, #0]
900148be:	2b01      	cmp	r3, #1
900148c0:	d10e      	bne.n	900148e0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
900148c2:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
900148c6:	8843      	ldrh	r3, [r0, #2]
900148c8:	f9b0 4000 	ldrsh.w	r4, [r0]
900148cc:	18ca      	adds	r2, r1, r3
900148ce:	4b06      	ldr	r3, [pc, #24]	; (900148e8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
900148d0:	8044      	strh	r4, [r0, #2]
900148d2:	881b      	ldrh	r3, [r3, #0]
900148d4:	1a9b      	subs	r3, r3, r2
900148d6:	8003      	strh	r3, [r0, #0]
900148d8:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
900148dc:	8081      	strh	r1, [r0, #4]
900148de:	80c3      	strh	r3, [r0, #6]
900148e0:	bd10      	pop	{r4, pc}
900148e2:	bf00      	nop
900148e4:	24023574 	.word	0x24023574
900148e8:	24023570 	.word	0x24023570

900148ec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
900148ec:	4b08      	ldr	r3, [pc, #32]	; (90014910 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
900148ee:	781b      	ldrb	r3, [r3, #0]
900148f0:	2b01      	cmp	r3, #1
900148f2:	d10c      	bne.n	9001490e <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
900148f4:	8803      	ldrh	r3, [r0, #0]
900148f6:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
900148fa:	8842      	ldrh	r2, [r0, #2]
900148fc:	8002      	strh	r2, [r0, #0]
900148fe:	185a      	adds	r2, r3, r1
90014900:	4b04      	ldr	r3, [pc, #16]	; (90014914 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
90014902:	881b      	ldrh	r3, [r3, #0]
90014904:	1a9b      	subs	r3, r3, r2
90014906:	8043      	strh	r3, [r0, #2]
90014908:	88c3      	ldrh	r3, [r0, #6]
9001490a:	80c1      	strh	r1, [r0, #6]
9001490c:	8083      	strh	r3, [r0, #4]
9001490e:	4770      	bx	lr
90014910:	24023574 	.word	0x24023574
90014914:	24023570 	.word	0x24023570

90014918 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
90014918:	4b07      	ldr	r3, [pc, #28]	; (90014938 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
9001491a:	b510      	push	{r4, lr}
9001491c:	781b      	ldrb	r3, [r3, #0]
9001491e:	2b01      	cmp	r3, #1
90014920:	d108      	bne.n	90014934 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
90014922:	f9b1 3000 	ldrsh.w	r3, [r1]
90014926:	f9b0 4000 	ldrsh.w	r4, [r0]
9001492a:	8003      	strh	r3, [r0, #0]
9001492c:	8893      	ldrh	r3, [r2, #4]
9001492e:	3b01      	subs	r3, #1
90014930:	1b1b      	subs	r3, r3, r4
90014932:	800b      	strh	r3, [r1, #0]
90014934:	bd10      	pop	{r4, pc}
90014936:	bf00      	nop
90014938:	24023574 	.word	0x24023574

9001493c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
9001493c:	4b0b      	ldr	r3, [pc, #44]	; (9001496c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
9001493e:	781b      	ldrb	r3, [r3, #0]
90014940:	2b01      	cmp	r3, #1
90014942:	d111      	bne.n	90014968 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
90014944:	680b      	ldr	r3, [r1, #0]
90014946:	ed90 7a00 	vldr	s14, [r0]
9001494a:	6003      	str	r3, [r0, #0]
9001494c:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
90014950:	eddf 6a07 	vldr	s13, [pc, #28]	; 90014970 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
90014954:	ee07 3a90 	vmov	s15, r3
90014958:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001495c:	ee77 7ae6 	vsub.f32	s15, s15, s13
90014960:	ee77 7ac7 	vsub.f32	s15, s15, s14
90014964:	edc1 7a00 	vstr	s15, [r1]
90014968:	4770      	bx	lr
9001496a:	bf00      	nop
9001496c:	24023574 	.word	0x24023574
90014970:	38d1b717 	.word	0x38d1b717

90014974 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
90014974:	4b0a      	ldr	r3, [pc, #40]	; (900149a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
90014976:	460a      	mov	r2, r1
90014978:	b510      	push	{r4, lr}
9001497a:	781b      	ldrb	r3, [r3, #0]
9001497c:	2b01      	cmp	r3, #1
9001497e:	d10d      	bne.n	9001499c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
90014980:	8881      	ldrh	r1, [r0, #4]
90014982:	8803      	ldrh	r3, [r0, #0]
90014984:	440b      	add	r3, r1
90014986:	4601      	mov	r1, r0
90014988:	3b01      	subs	r3, #1
9001498a:	f821 3b02 	strh.w	r3, [r1], #2
9001498e:	f7ff ffc3 	bl	90014918 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
90014992:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
90014996:	88c2      	ldrh	r2, [r0, #6]
90014998:	80c3      	strh	r3, [r0, #6]
9001499a:	8082      	strh	r2, [r0, #4]
9001499c:	bd10      	pop	{r4, pc}
9001499e:	bf00      	nop
900149a0:	24023574 	.word	0x24023574

900149a4 <_ZN8touchgfx11Application19changeToStartScreenEv>:
900149a4:	4770      	bx	lr
	...

900149a8 <_ZN8touchgfx11Application13requestRedrawEv>:
900149a8:	4b06      	ldr	r3, [pc, #24]	; (900149c4 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
900149aa:	2100      	movs	r1, #0
900149ac:	f9b3 2000 	ldrsh.w	r2, [r3]
900149b0:	4b05      	ldr	r3, [pc, #20]	; (900149c8 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
900149b2:	f8c0 1130 	str.w	r1, [r0, #304]	; 0x130
900149b6:	f9b3 3000 	ldrsh.w	r3, [r3]
900149ba:	f8a0 2134 	strh.w	r2, [r0, #308]	; 0x134
900149be:	f8a0 3136 	strh.w	r3, [r0, #310]	; 0x136
900149c2:	4770      	bx	lr
900149c4:	24023570 	.word	0x24023570
900149c8:	24023572 	.word	0x24023572

900149cc <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
900149cc:	4b03      	ldr	r3, [pc, #12]	; (900149dc <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
900149ce:	6818      	ldr	r0, [r3, #0]
900149d0:	b110      	cbz	r0, 900149d8 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
900149d2:	6803      	ldr	r3, [r0, #0]
900149d4:	699b      	ldr	r3, [r3, #24]
900149d6:	4718      	bx	r3
900149d8:	4770      	bx	lr
900149da:	bf00      	nop
900149dc:	240235c0 	.word	0x240235c0

900149e0 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
900149e0:	4770      	bx	lr
	...

900149e4 <_ZN8touchgfx11Application4drawEv>:
900149e4:	4b09      	ldr	r3, [pc, #36]	; (90014a0c <_ZN8touchgfx11Application4drawEv+0x28>)
900149e6:	b507      	push	{r0, r1, r2, lr}
900149e8:	f9b3 2000 	ldrsh.w	r2, [r3]
900149ec:	2100      	movs	r1, #0
900149ee:	4b08      	ldr	r3, [pc, #32]	; (90014a10 <_ZN8touchgfx11Application4drawEv+0x2c>)
900149f0:	9100      	str	r1, [sp, #0]
900149f2:	4669      	mov	r1, sp
900149f4:	f9b3 3000 	ldrsh.w	r3, [r3]
900149f8:	f8ad 2004 	strh.w	r2, [sp, #4]
900149fc:	f8ad 3006 	strh.w	r3, [sp, #6]
90014a00:	6803      	ldr	r3, [r0, #0]
90014a02:	6c9b      	ldr	r3, [r3, #72]	; 0x48
90014a04:	4798      	blx	r3
90014a06:	b003      	add	sp, #12
90014a08:	f85d fb04 	ldr.w	pc, [sp], #4
90014a0c:	24023570 	.word	0x24023570
90014a10:	24023572 	.word	0x24023572

90014a14 <_ZN8touchgfx11Application10invalidateEv>:
90014a14:	4b09      	ldr	r3, [pc, #36]	; (90014a3c <_ZN8touchgfx11Application10invalidateEv+0x28>)
90014a16:	b082      	sub	sp, #8
90014a18:	2100      	movs	r1, #0
90014a1a:	f9b3 2000 	ldrsh.w	r2, [r3]
90014a1e:	4b08      	ldr	r3, [pc, #32]	; (90014a40 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
90014a20:	f8ad 2004 	strh.w	r2, [sp, #4]
90014a24:	aa02      	add	r2, sp, #8
90014a26:	f9b3 3000 	ldrsh.w	r3, [r3]
90014a2a:	9100      	str	r1, [sp, #0]
90014a2c:	f8ad 3006 	strh.w	r3, [sp, #6]
90014a30:	6803      	ldr	r3, [r0, #0]
90014a32:	e912 0006 	ldmdb	r2, {r1, r2}
90014a36:	6c1b      	ldr	r3, [r3, #64]	; 0x40
90014a38:	b002      	add	sp, #8
90014a3a:	4718      	bx	r3
90014a3c:	24023570 	.word	0x24023570
90014a40:	24023572 	.word	0x24023572

90014a44 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
90014a44:	4b03      	ldr	r3, [pc, #12]	; (90014a54 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
90014a46:	6818      	ldr	r0, [r3, #0]
90014a48:	b110      	cbz	r0, 90014a50 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
90014a4a:	6803      	ldr	r3, [r0, #0]
90014a4c:	69db      	ldr	r3, [r3, #28]
90014a4e:	4718      	bx	r3
90014a50:	4770      	bx	lr
90014a52:	bf00      	nop
90014a54:	240235c0 	.word	0x240235c0

90014a58 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
90014a58:	4b03      	ldr	r3, [pc, #12]	; (90014a68 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
90014a5a:	6818      	ldr	r0, [r3, #0]
90014a5c:	b110      	cbz	r0, 90014a64 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
90014a5e:	6803      	ldr	r3, [r0, #0]
90014a60:	6a1b      	ldr	r3, [r3, #32]
90014a62:	4718      	bx	r3
90014a64:	4770      	bx	lr
90014a66:	bf00      	nop
90014a68:	240235c0 	.word	0x240235c0

90014a6c <_ZN8touchgfx11Application16clearCachedAreasEv>:
90014a6c:	2300      	movs	r3, #0
90014a6e:	f8a0 30ec 	strh.w	r3, [r0, #236]	; 0xec
90014a72:	4770      	bx	lr

90014a74 <_ZN8touchgfx11Application14handleKeyEventEh>:
90014a74:	4b03      	ldr	r3, [pc, #12]	; (90014a84 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
90014a76:	6818      	ldr	r0, [r3, #0]
90014a78:	b110      	cbz	r0, 90014a80 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
90014a7a:	6803      	ldr	r3, [r0, #0]
90014a7c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90014a7e:	4718      	bx	r3
90014a80:	4770      	bx	lr
90014a82:	bf00      	nop
90014a84:	240235c0 	.word	0x240235c0

90014a88 <_ZN8touchgfx11ApplicationD1Ev>:
90014a88:	4770      	bx	lr

90014a8a <_ZN8touchgfx11ApplicationD0Ev>:
90014a8a:	b510      	push	{r4, lr}
90014a8c:	4604      	mov	r4, r0
90014a8e:	f44f 719e 	mov.w	r1, #316	; 0x13c
90014a92:	f011 fa2e 	bl	90025ef2 <_ZdlPvj>
90014a96:	4620      	mov	r0, r4
90014a98:	bd10      	pop	{r4, pc}

90014a9a <_ZNK8touchgfx4Rect9intersectERKS0_>:
90014a9a:	b510      	push	{r4, lr}
90014a9c:	f9b1 4000 	ldrsh.w	r4, [r1]
90014aa0:	888a      	ldrh	r2, [r1, #4]
90014aa2:	f9b0 3000 	ldrsh.w	r3, [r0]
90014aa6:	4422      	add	r2, r4
90014aa8:	b212      	sxth	r2, r2
90014aaa:	4293      	cmp	r3, r2
90014aac:	da15      	bge.n	90014ada <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
90014aae:	8882      	ldrh	r2, [r0, #4]
90014ab0:	4413      	add	r3, r2
90014ab2:	b21b      	sxth	r3, r3
90014ab4:	429c      	cmp	r4, r3
90014ab6:	da10      	bge.n	90014ada <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
90014ab8:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
90014abc:	88c9      	ldrh	r1, [r1, #6]
90014abe:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
90014ac2:	4419      	add	r1, r3
90014ac4:	b209      	sxth	r1, r1
90014ac6:	428a      	cmp	r2, r1
90014ac8:	da07      	bge.n	90014ada <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
90014aca:	88c0      	ldrh	r0, [r0, #6]
90014acc:	4410      	add	r0, r2
90014ace:	b200      	sxth	r0, r0
90014ad0:	4283      	cmp	r3, r0
90014ad2:	bfac      	ite	ge
90014ad4:	2000      	movge	r0, #0
90014ad6:	2001      	movlt	r0, #1
90014ad8:	bd10      	pop	{r4, pc}
90014ada:	2000      	movs	r0, #0
90014adc:	e7fc      	b.n	90014ad8 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

90014ade <_ZN8touchgfx4Rect10restrictToEss>:
90014ade:	f9b0 3000 	ldrsh.w	r3, [r0]
90014ae2:	2b00      	cmp	r3, #0
90014ae4:	b510      	push	{r4, lr}
90014ae6:	da04      	bge.n	90014af2 <_ZN8touchgfx4Rect10restrictToEss+0x14>
90014ae8:	8884      	ldrh	r4, [r0, #4]
90014aea:	4423      	add	r3, r4
90014aec:	8083      	strh	r3, [r0, #4]
90014aee:	2300      	movs	r3, #0
90014af0:	8003      	strh	r3, [r0, #0]
90014af2:	f9b0 4000 	ldrsh.w	r4, [r0]
90014af6:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
90014afa:	1b09      	subs	r1, r1, r4
90014afc:	428b      	cmp	r3, r1
90014afe:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
90014b02:	bfc8      	it	gt
90014b04:	8081      	strhgt	r1, [r0, #4]
90014b06:	2b00      	cmp	r3, #0
90014b08:	da04      	bge.n	90014b14 <_ZN8touchgfx4Rect10restrictToEss+0x36>
90014b0a:	88c1      	ldrh	r1, [r0, #6]
90014b0c:	440b      	add	r3, r1
90014b0e:	80c3      	strh	r3, [r0, #6]
90014b10:	2300      	movs	r3, #0
90014b12:	8043      	strh	r3, [r0, #2]
90014b14:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
90014b18:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
90014b1c:	1a52      	subs	r2, r2, r1
90014b1e:	4293      	cmp	r3, r2
90014b20:	bfc8      	it	gt
90014b22:	80c2      	strhgt	r2, [r0, #6]
90014b24:	bd10      	pop	{r4, pc}
	...

90014b28 <_ZN8touchgfx11Application4drawERNS_4RectE>:
90014b28:	4b10      	ldr	r3, [pc, #64]	; (90014b6c <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
90014b2a:	b510      	push	{r4, lr}
90014b2c:	460c      	mov	r4, r1
90014b2e:	f9b3 2000 	ldrsh.w	r2, [r3]
90014b32:	4b0f      	ldr	r3, [pc, #60]	; (90014b70 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
90014b34:	4620      	mov	r0, r4
90014b36:	f9b3 1000 	ldrsh.w	r1, [r3]
90014b3a:	f7ff ffd0 	bl	90014ade <_ZN8touchgfx4Rect10restrictToEss>
90014b3e:	4b0d      	ldr	r3, [pc, #52]	; (90014b74 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
90014b40:	6818      	ldr	r0, [r3, #0]
90014b42:	b190      	cbz	r0, 90014b6a <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
90014b44:	6803      	ldr	r3, [r0, #0]
90014b46:	4621      	mov	r1, r4
90014b48:	689b      	ldr	r3, [r3, #8]
90014b4a:	4798      	blx	r3
90014b4c:	4b0a      	ldr	r3, [pc, #40]	; (90014b78 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
90014b4e:	6818      	ldr	r0, [r3, #0]
90014b50:	b118      	cbz	r0, 90014b5a <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
90014b52:	6803      	ldr	r3, [r0, #0]
90014b54:	4621      	mov	r1, r4
90014b56:	689b      	ldr	r3, [r3, #8]
90014b58:	4798      	blx	r3
90014b5a:	4b08      	ldr	r3, [pc, #32]	; (90014b7c <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
90014b5c:	4621      	mov	r1, r4
90014b5e:	6818      	ldr	r0, [r3, #0]
90014b60:	6803      	ldr	r3, [r0, #0]
90014b62:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90014b66:	69db      	ldr	r3, [r3, #28]
90014b68:	4718      	bx	r3
90014b6a:	bd10      	pop	{r4, pc}
90014b6c:	24023572 	.word	0x24023572
90014b70:	24023570 	.word	0x24023570
90014b74:	240235c0 	.word	0x240235c0
90014b78:	240235bc 	.word	0x240235bc
90014b7c:	2402357c 	.word	0x2402357c

90014b80 <_ZNK8touchgfx4Rect8includesERKS0_>:
90014b80:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90014b82:	4606      	mov	r6, r0
90014b84:	4608      	mov	r0, r1
90014b86:	460f      	mov	r7, r1
90014b88:	f7fb f989 	bl	9000fe9e <_ZNK8touchgfx4Rect7isEmptyEv>
90014b8c:	b9e8      	cbnz	r0, 90014bca <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
90014b8e:	f9b7 5000 	ldrsh.w	r5, [r7]
90014b92:	f9b6 4000 	ldrsh.w	r4, [r6]
90014b96:	42a5      	cmp	r5, r4
90014b98:	db17      	blt.n	90014bca <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
90014b9a:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
90014b9e:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
90014ba2:	429a      	cmp	r2, r3
90014ba4:	db11      	blt.n	90014bca <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
90014ba6:	88b9      	ldrh	r1, [r7, #4]
90014ba8:	440d      	add	r5, r1
90014baa:	88b1      	ldrh	r1, [r6, #4]
90014bac:	440c      	add	r4, r1
90014bae:	b22d      	sxth	r5, r5
90014bb0:	b224      	sxth	r4, r4
90014bb2:	42a5      	cmp	r5, r4
90014bb4:	dc09      	bgt.n	90014bca <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
90014bb6:	88f8      	ldrh	r0, [r7, #6]
90014bb8:	4410      	add	r0, r2
90014bba:	88f2      	ldrh	r2, [r6, #6]
90014bbc:	4413      	add	r3, r2
90014bbe:	b200      	sxth	r0, r0
90014bc0:	b21b      	sxth	r3, r3
90014bc2:	4298      	cmp	r0, r3
90014bc4:	bfcc      	ite	gt
90014bc6:	2000      	movgt	r0, #0
90014bc8:	2001      	movle	r0, #1
90014bca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

90014bcc <_ZN8touchgfx4Rect11expandToFitERKS0_>:
90014bcc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90014bce:	4604      	mov	r4, r0
90014bd0:	4608      	mov	r0, r1
90014bd2:	460d      	mov	r5, r1
90014bd4:	f7fb f963 	bl	9000fe9e <_ZNK8touchgfx4Rect7isEmptyEv>
90014bd8:	b978      	cbnz	r0, 90014bfa <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
90014bda:	4620      	mov	r0, r4
90014bdc:	f7fb f95f 	bl	9000fe9e <_ZNK8touchgfx4Rect7isEmptyEv>
90014be0:	f9b5 6000 	ldrsh.w	r6, [r5]
90014be4:	b150      	cbz	r0, 90014bfc <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
90014be6:	8026      	strh	r6, [r4, #0]
90014be8:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
90014bec:	8063      	strh	r3, [r4, #2]
90014bee:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
90014bf2:	80a3      	strh	r3, [r4, #4]
90014bf4:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
90014bf8:	80e3      	strh	r3, [r4, #6]
90014bfa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90014bfc:	f9b4 1000 	ldrsh.w	r1, [r4]
90014c00:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
90014c04:	42b1      	cmp	r1, r6
90014c06:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
90014c0a:	f8b5 c004 	ldrh.w	ip, [r5, #4]
90014c0e:	460f      	mov	r7, r1
90014c10:	88ed      	ldrh	r5, [r5, #6]
90014c12:	bfa8      	it	ge
90014c14:	4637      	movge	r7, r6
90014c16:	4293      	cmp	r3, r2
90014c18:	4618      	mov	r0, r3
90014c1a:	4466      	add	r6, ip
90014c1c:	f8b4 c004 	ldrh.w	ip, [r4, #4]
90014c20:	bfa8      	it	ge
90014c22:	4610      	movge	r0, r2
90014c24:	442a      	add	r2, r5
90014c26:	88e5      	ldrh	r5, [r4, #6]
90014c28:	4461      	add	r1, ip
90014c2a:	b236      	sxth	r6, r6
90014c2c:	8027      	strh	r7, [r4, #0]
90014c2e:	442b      	add	r3, r5
90014c30:	b209      	sxth	r1, r1
90014c32:	b212      	sxth	r2, r2
90014c34:	8060      	strh	r0, [r4, #2]
90014c36:	b21b      	sxth	r3, r3
90014c38:	428e      	cmp	r6, r1
90014c3a:	bfac      	ite	ge
90014c3c:	ebc7 0106 	rsbge	r1, r7, r6
90014c40:	ebc7 0101 	rsblt	r1, r7, r1
90014c44:	429a      	cmp	r2, r3
90014c46:	bfac      	ite	ge
90014c48:	ebc0 0202 	rsbge	r2, r0, r2
90014c4c:	ebc0 0203 	rsblt	r2, r0, r3
90014c50:	80a1      	strh	r1, [r4, #4]
90014c52:	80e2      	strh	r2, [r4, #6]
90014c54:	e7d1      	b.n	90014bfa <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

90014c58 <_ZN8touchgfx11Application11getInstanceEv>:
90014c58:	4b01      	ldr	r3, [pc, #4]	; (90014c60 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
90014c5a:	6818      	ldr	r0, [r3, #0]
90014c5c:	4770      	bx	lr
90014c5e:	bf00      	nop
90014c60:	240235d0 	.word	0x240235d0

90014c64 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
90014c64:	2300      	movs	r3, #0
90014c66:	b510      	push	{r4, lr}
90014c68:	f8a0 30a4 	strh.w	r3, [r0, #164]	; 0xa4
90014c6c:	4604      	mov	r4, r0
90014c6e:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
90014c72:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
90014c76:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
90014c7a:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	; 0xa6
90014c7e:	429a      	cmp	r2, r3
90014c80:	d90e      	bls.n	90014ca0 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
90014c82:	18e2      	adds	r2, r4, r3
90014c84:	f892 2084 	ldrb.w	r2, [r2, #132]	; 0x84
90014c88:	b122      	cbz	r2, 90014c94 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
90014c8a:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
90014c8e:	6803      	ldr	r3, [r0, #0]
90014c90:	6d1b      	ldr	r3, [r3, #80]	; 0x50
90014c92:	4798      	blx	r3
90014c94:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
90014c98:	3301      	adds	r3, #1
90014c9a:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
90014c9e:	e7ea      	b.n	90014c76 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
90014ca0:	bd10      	pop	{r4, pc}

90014ca2 <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
90014ca2:	2300      	movs	r3, #0
90014ca4:	f100 0284 	add.w	r2, r0, #132	; 0x84
90014ca8:	30a4      	adds	r0, #164	; 0xa4
90014caa:	f820 3c24 	strh.w	r3, [r0, #-36]
90014cae:	f802 3b01 	strb.w	r3, [r2], #1
90014cb2:	4282      	cmp	r2, r0
90014cb4:	d1fb      	bne.n	90014cae <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
90014cb6:	4770      	bx	lr

90014cb8 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
90014cb8:	b570      	push	{r4, r5, r6, lr}
90014cba:	4c0b      	ldr	r4, [pc, #44]	; (90014ce8 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
90014cbc:	4605      	mov	r5, r0
90014cbe:	460e      	mov	r6, r1
90014cc0:	6820      	ldr	r0, [r4, #0]
90014cc2:	b110      	cbz	r0, 90014cca <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
90014cc4:	6803      	ldr	r3, [r0, #0]
90014cc6:	695b      	ldr	r3, [r3, #20]
90014cc8:	4798      	blx	r3
90014cca:	1d28      	adds	r0, r5, #4
90014ccc:	f7ff ffe9 	bl	90014ca2 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
90014cd0:	6026      	str	r6, [r4, #0]
90014cd2:	6833      	ldr	r3, [r6, #0]
90014cd4:	4630      	mov	r0, r6
90014cd6:	68db      	ldr	r3, [r3, #12]
90014cd8:	4798      	blx	r3
90014cda:	682b      	ldr	r3, [r5, #0]
90014cdc:	4628      	mov	r0, r5
90014cde:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90014ce0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90014ce4:	4718      	bx	r3
90014ce6:	bf00      	nop
90014ce8:	240235c0 	.word	0x240235c0

90014cec <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
90014cec:	2300      	movs	r3, #0
90014cee:	f8b0 c080 	ldrh.w	ip, [r0, #128]	; 0x80
90014cf2:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	; 0xa4
90014cf6:	461a      	mov	r2, r3
90014cf8:	b5f0      	push	{r4, r5, r6, r7, lr}
90014cfa:	461c      	mov	r4, r3
90014cfc:	461d      	mov	r5, r3
90014cfe:	459c      	cmp	ip, r3
90014d00:	dd1a      	ble.n	90014d38 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
90014d02:	18c6      	adds	r6, r0, r3
90014d04:	f896 6084 	ldrb.w	r6, [r6, #132]	; 0x84
90014d08:	b16e      	cbz	r6, 90014d26 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
90014d0a:	429a      	cmp	r2, r3
90014d0c:	d008      	beq.n	90014d20 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
90014d0e:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
90014d12:	fa1f fe82 	uxth.w	lr, r2
90014d16:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
90014d1a:	1887      	adds	r7, r0, r2
90014d1c:	f887 6084 	strb.w	r6, [r7, #132]	; 0x84
90014d20:	3201      	adds	r2, #1
90014d22:	3301      	adds	r3, #1
90014d24:	e7eb      	b.n	90014cfe <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
90014d26:	4299      	cmp	r1, r3
90014d28:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	; 0xa6
90014d2c:	bfa8      	it	ge
90014d2e:	3501      	addge	r5, #1
90014d30:	429e      	cmp	r6, r3
90014d32:	bfc8      	it	gt
90014d34:	3401      	addgt	r4, #1
90014d36:	e7f4      	b.n	90014d22 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
90014d38:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	; 0xa6
90014d3c:	1b49      	subs	r1, r1, r5
90014d3e:	1b1b      	subs	r3, r3, r4
90014d40:	f8a0 10a4 	strh.w	r1, [r0, #164]	; 0xa4
90014d44:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
90014d48:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
90014d4c:	4293      	cmp	r3, r2
90014d4e:	dd03      	ble.n	90014d58 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
90014d50:	3b01      	subs	r3, #1
90014d52:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
90014d56:	e7f7      	b.n	90014d48 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
90014d58:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

90014d5c <_ZN8touchgfx11Application15handleTickEventEv>:
90014d5c:	b570      	push	{r4, r5, r6, lr}
90014d5e:	4d16      	ldr	r5, [pc, #88]	; (90014db8 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
90014d60:	4604      	mov	r4, r0
90014d62:	6828      	ldr	r0, [r5, #0]
90014d64:	b140      	cbz	r0, 90014d78 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
90014d66:	7a03      	ldrb	r3, [r0, #8]
90014d68:	b933      	cbnz	r3, 90014d78 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
90014d6a:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
90014d6e:	6803      	ldr	r3, [r0, #0]
90014d70:	689b      	ldr	r3, [r3, #8]
90014d72:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90014d76:	4718      	bx	r3
90014d78:	f894 3138 	ldrb.w	r3, [r4, #312]	; 0x138
90014d7c:	4e0f      	ldr	r6, [pc, #60]	; (90014dbc <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
90014d7e:	b973      	cbnz	r3, 90014d9e <_ZN8touchgfx11Application15handleTickEventEv+0x42>
90014d80:	b168      	cbz	r0, 90014d9e <_ZN8touchgfx11Application15handleTickEventEv+0x42>
90014d82:	7a03      	ldrb	r3, [r0, #8]
90014d84:	b15b      	cbz	r3, 90014d9e <_ZN8touchgfx11Application15handleTickEventEv+0x42>
90014d86:	6830      	ldr	r0, [r6, #0]
90014d88:	b110      	cbz	r0, 90014d90 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
90014d8a:	6803      	ldr	r3, [r0, #0]
90014d8c:	691b      	ldr	r3, [r3, #16]
90014d8e:	4798      	blx	r3
90014d90:	6828      	ldr	r0, [r5, #0]
90014d92:	6803      	ldr	r3, [r0, #0]
90014d94:	68db      	ldr	r3, [r3, #12]
90014d96:	4798      	blx	r3
90014d98:	2301      	movs	r3, #1
90014d9a:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
90014d9e:	3404      	adds	r4, #4
90014da0:	4620      	mov	r0, r4
90014da2:	f7ff ff5f 	bl	90014c64 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
90014da6:	4620      	mov	r0, r4
90014da8:	f7ff ffa0 	bl	90014cec <_ZN8touchgfx11Application12TimerWidgets7compactEv>
90014dac:	6830      	ldr	r0, [r6, #0]
90014dae:	b110      	cbz	r0, 90014db6 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
90014db0:	6803      	ldr	r3, [r0, #0]
90014db2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90014db4:	e7dd      	b.n	90014d72 <_ZN8touchgfx11Application15handleTickEventEv+0x16>
90014db6:	bd70      	pop	{r4, r5, r6, pc}
90014db8:	240235c4 	.word	0x240235c4
90014dbc:	240235c0 	.word	0x240235c0

90014dc0 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
90014dc0:	4603      	mov	r3, r0
90014dc2:	f100 0140 	add.w	r1, r0, #64	; 0x40
90014dc6:	2200      	movs	r2, #0
90014dc8:	801a      	strh	r2, [r3, #0]
90014dca:	3308      	adds	r3, #8
90014dcc:	f823 2c06 	strh.w	r2, [r3, #-6]
90014dd0:	f823 2c04 	strh.w	r2, [r3, #-4]
90014dd4:	f823 2c02 	strh.w	r2, [r3, #-2]
90014dd8:	428b      	cmp	r3, r1
90014dda:	d1f5      	bne.n	90014dc8 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
90014ddc:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
90014de0:	4770      	bx	lr
	...

90014de4 <_ZN8touchgfx11ApplicationC1Ev>:
90014de4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90014de6:	4b1d      	ldr	r3, [pc, #116]	; (90014e5c <_ZN8touchgfx11ApplicationC1Ev+0x78>)
90014de8:	4606      	mov	r6, r0
90014dea:	4604      	mov	r4, r0
90014dec:	2500      	movs	r5, #0
90014dee:	f846 3b04 	str.w	r3, [r6], #4
90014df2:	22a8      	movs	r2, #168	; 0xa8
90014df4:	2100      	movs	r1, #0
90014df6:	4630      	mov	r0, r6
90014df8:	f011 fb82 	bl	90026500 <memset>
90014dfc:	f8a4 5084 	strh.w	r5, [r4, #132]	; 0x84
90014e00:	f104 00ac 	add.w	r0, r4, #172	; 0xac
90014e04:	4f16      	ldr	r7, [pc, #88]	; (90014e60 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
90014e06:	f7ff ffdb 	bl	90014dc0 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
90014e0a:	f104 00ee 	add.w	r0, r4, #238	; 0xee
90014e0e:	f7ff ffd7 	bl	90014dc0 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
90014e12:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
90014e16:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
90014e1a:	f8a4 5134 	strh.w	r5, [r4, #308]	; 0x134
90014e1e:	f8a4 5136 	strh.w	r5, [r4, #310]	; 0x136
90014e22:	f884 5138 	strb.w	r5, [r4, #312]	; 0x138
90014e26:	490f      	ldr	r1, [pc, #60]	; (90014e64 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
90014e28:	480f      	ldr	r0, [pc, #60]	; (90014e68 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
90014e2a:	f010 fb9b 	bl	90025564 <CRC_Lock>
90014e2e:	4b0f      	ldr	r3, [pc, #60]	; (90014e6c <_ZN8touchgfx11ApplicationC1Ev+0x88>)
90014e30:	b158      	cbz	r0, 90014e4a <_ZN8touchgfx11ApplicationC1Ev+0x66>
90014e32:	801d      	strh	r5, [r3, #0]
90014e34:	2300      	movs	r3, #0
90014e36:	4a0e      	ldr	r2, [pc, #56]	; (90014e70 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
90014e38:	4630      	mov	r0, r6
90014e3a:	6013      	str	r3, [r2, #0]
90014e3c:	4a0d      	ldr	r2, [pc, #52]	; (90014e74 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
90014e3e:	603b      	str	r3, [r7, #0]
90014e40:	6013      	str	r3, [r2, #0]
90014e42:	f7ff ff2e 	bl	90014ca2 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
90014e46:	4620      	mov	r0, r4
90014e48:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90014e4a:	f44f 6280 	mov.w	r2, #1024	; 0x400
90014e4e:	2002      	movs	r0, #2
90014e50:	801a      	strh	r2, [r3, #0]
90014e52:	6038      	str	r0, [r7, #0]
90014e54:	f001 fb06 	bl	90016464 <_ZN8touchgfx6Screen4drawEv>
90014e58:	e7ec      	b.n	90014e34 <_ZN8touchgfx11ApplicationC1Ev+0x50>
90014e5a:	bf00      	nop
90014e5c:	9002a400 	.word	0x9002a400
90014e60:	240235c0 	.word	0x240235c0
90014e64:	b5e8b5cd 	.word	0xb5e8b5cd
90014e68:	f407a5c2 	.word	0xf407a5c2
90014e6c:	24000074 	.word	0x24000074
90014e70:	240235d0 	.word	0x240235d0
90014e74:	240235c4 	.word	0x240235c4

90014e78 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
90014e78:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
90014e7c:	3b01      	subs	r3, #1
90014e7e:	b29b      	uxth	r3, r3
90014e80:	428b      	cmp	r3, r1
90014e82:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
90014e86:	b510      	push	{r4, lr}
90014e88:	d908      	bls.n	90014e9c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
90014e8a:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
90014e8e:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
90014e92:	681a      	ldr	r2, [r3, #0]
90014e94:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
90014e98:	685a      	ldr	r2, [r3, #4]
90014e9a:	6062      	str	r2, [r4, #4]
90014e9c:	bd10      	pop	{r4, pc}
	...

90014ea0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
90014ea0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90014ea4:	b08f      	sub	sp, #60	; 0x3c
90014ea6:	4b8f      	ldr	r3, [pc, #572]	; (900150e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
90014ea8:	4683      	mov	fp, r0
90014eaa:	ac0a      	add	r4, sp, #40	; 0x28
90014eac:	e884 0006 	stmia.w	r4, {r1, r2}
90014eb0:	f9b3 2000 	ldrsh.w	r2, [r3]
90014eb4:	4620      	mov	r0, r4
90014eb6:	4b8c      	ldr	r3, [pc, #560]	; (900150e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
90014eb8:	f9b3 1000 	ldrsh.w	r1, [r3]
90014ebc:	f7ff fe0f 	bl	90014ade <_ZN8touchgfx4Rect10restrictToEss>
90014ec0:	4620      	mov	r0, r4
90014ec2:	f7fa ffec 	bl	9000fe9e <_ZNK8touchgfx4Rect7isEmptyEv>
90014ec6:	2800      	cmp	r0, #0
90014ec8:	d16a      	bne.n	90014fa0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
90014eca:	9403      	str	r4, [sp, #12]
90014ecc:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
90014ed0:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
90014ed4:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
90014ed8:	9301      	str	r3, [sp, #4]
90014eda:	35a4      	adds	r5, #164	; 0xa4
90014edc:	b15c      	cbz	r4, 90014ef6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
90014ede:	4629      	mov	r1, r5
90014ee0:	9803      	ldr	r0, [sp, #12]
90014ee2:	f7ff fe4d 	bl	90014b80 <_ZNK8touchgfx4Rect8includesERKS0_>
90014ee6:	3c01      	subs	r4, #1
90014ee8:	b118      	cbz	r0, 90014ef2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
90014eea:	b2a1      	uxth	r1, r4
90014eec:	9801      	ldr	r0, [sp, #4]
90014eee:	f7ff ffc3 	bl	90014e78 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90014ef2:	3d08      	subs	r5, #8
90014ef4:	e7f2      	b.n	90014edc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
90014ef6:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	; 0xec
90014efa:	f10a 33ff 	add.w	r3, sl, #4294967295
90014efe:	f8cd a010 	str.w	sl, [sp, #16]
90014f02:	9302      	str	r3, [sp, #8]
90014f04:	ea4f 03ca 	mov.w	r3, sl, lsl #3
90014f08:	f103 04a4 	add.w	r4, r3, #164	; 0xa4
90014f0c:	9306      	str	r3, [sp, #24]
90014f0e:	445c      	add	r4, fp
90014f10:	2500      	movs	r5, #0
90014f12:	4626      	mov	r6, r4
90014f14:	f8cd a014 	str.w	sl, [sp, #20]
90014f18:	462f      	mov	r7, r5
90014f1a:	9b05      	ldr	r3, [sp, #20]
90014f1c:	2b00      	cmp	r3, #0
90014f1e:	d073      	beq.n	90015008 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
90014f20:	9903      	ldr	r1, [sp, #12]
90014f22:	4630      	mov	r0, r6
90014f24:	f7ff fdb9 	bl	90014a9a <_ZNK8touchgfx4Rect9intersectERKS0_>
90014f28:	b350      	cbz	r0, 90014f80 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
90014f2a:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
90014f2e:	f9b6 c000 	ldrsh.w	ip, [r6]
90014f32:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	; 0x2a
90014f36:	45e6      	cmp	lr, ip
90014f38:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
90014f3c:	db33      	blt.n	90014fa6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
90014f3e:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
90014f42:	88b3      	ldrh	r3, [r6, #4]
90014f44:	4472      	add	r2, lr
90014f46:	4463      	add	r3, ip
90014f48:	b212      	sxth	r2, r2
90014f4a:	b21b      	sxth	r3, r3
90014f4c:	429a      	cmp	r2, r3
90014f4e:	dc2a      	bgt.n	90014fa6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
90014f50:	fa1f f289 	uxth.w	r2, r9
90014f54:	88f3      	ldrh	r3, [r6, #6]
90014f56:	45c8      	cmp	r8, r9
90014f58:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
90014f5c:	4413      	add	r3, r2
90014f5e:	fa1f fc88 	uxth.w	ip, r8
90014f62:	b29b      	uxth	r3, r3
90014f64:	fa0f fe83 	sxth.w	lr, r3
90014f68:	db0f      	blt.n	90014f8a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
90014f6a:	eba3 030c 	sub.w	r3, r3, ip
90014f6e:	1ac9      	subs	r1, r1, r3
90014f70:	b209      	sxth	r1, r1
90014f72:	2900      	cmp	r1, #0
90014f74:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
90014f78:	dd12      	ble.n	90014fa0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
90014f7a:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
90014f7e:	4605      	mov	r5, r0
90014f80:	9b05      	ldr	r3, [sp, #20]
90014f82:	3e08      	subs	r6, #8
90014f84:	3b01      	subs	r3, #1
90014f86:	9305      	str	r3, [sp, #20]
90014f88:	e7c7      	b.n	90014f1a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
90014f8a:	4461      	add	r1, ip
90014f8c:	b209      	sxth	r1, r1
90014f8e:	4571      	cmp	r1, lr
90014f90:	dc38      	bgt.n	90015004 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
90014f92:	eba2 020c 	sub.w	r2, r2, ip
90014f96:	b212      	sxth	r2, r2
90014f98:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
90014f9c:	2a00      	cmp	r2, #0
90014f9e:	dcee      	bgt.n	90014f7e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
90014fa0:	b00f      	add	sp, #60	; 0x3c
90014fa2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90014fa6:	45c8      	cmp	r8, r9
90014fa8:	db2c      	blt.n	90015004 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
90014faa:	88f3      	ldrh	r3, [r6, #6]
90014fac:	4499      	add	r9, r3
90014fae:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
90014fb2:	4498      	add	r8, r3
90014fb4:	fa0f f989 	sxth.w	r9, r9
90014fb8:	fa0f f888 	sxth.w	r8, r8
90014fbc:	45c1      	cmp	r9, r8
90014fbe:	db21      	blt.n	90015004 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
90014fc0:	fa1f f28c 	uxth.w	r2, ip
90014fc4:	88b3      	ldrh	r3, [r6, #4]
90014fc6:	45e6      	cmp	lr, ip
90014fc8:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
90014fcc:	4413      	add	r3, r2
90014fce:	fa1f f88e 	uxth.w	r8, lr
90014fd2:	b29b      	uxth	r3, r3
90014fd4:	fa0f f983 	sxth.w	r9, r3
90014fd8:	db0a      	blt.n	90014ff0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
90014fda:	eba3 0308 	sub.w	r3, r3, r8
90014fde:	1ac9      	subs	r1, r1, r3
90014fe0:	b209      	sxth	r1, r1
90014fe2:	2900      	cmp	r1, #0
90014fe4:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
90014fe8:	ddda      	ble.n	90014fa0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
90014fea:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
90014fee:	e7c6      	b.n	90014f7e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
90014ff0:	4441      	add	r1, r8
90014ff2:	b209      	sxth	r1, r1
90014ff4:	4549      	cmp	r1, r9
90014ff6:	dc05      	bgt.n	90015004 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
90014ff8:	eba2 0208 	sub.w	r2, r2, r8
90014ffc:	b212      	sxth	r2, r2
90014ffe:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
90015002:	e7cb      	b.n	90014f9c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
90015004:	4607      	mov	r7, r0
90015006:	e7bb      	b.n	90014f80 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
90015008:	2d00      	cmp	r5, #0
9001500a:	d181      	bne.n	90014f10 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
9001500c:	2f00      	cmp	r7, #0
9001500e:	f000 81dd 	beq.w	900153cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
90015012:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
90015016:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
9001501a:	b2b3      	uxth	r3, r6
9001501c:	f8bd a02e 	ldrh.w	sl, [sp, #46]	; 0x2e
90015020:	9305      	str	r3, [sp, #20]
90015022:	9a05      	ldr	r2, [sp, #20]
90015024:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
90015028:	4413      	add	r3, r2
9001502a:	b2ba      	uxth	r2, r7
9001502c:	4492      	add	sl, r2
9001502e:	b29b      	uxth	r3, r3
90015030:	fa1f fa8a 	uxth.w	sl, sl
90015034:	fa0f f883 	sxth.w	r8, r3
90015038:	fa0f f98a 	sxth.w	r9, sl
9001503c:	e9cd 2307 	strd	r2, r3, [sp, #28]
90015040:	9b04      	ldr	r3, [sp, #16]
90015042:	2b00      	cmp	r3, #0
90015044:	d052      	beq.n	900150ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
90015046:	9903      	ldr	r1, [sp, #12]
90015048:	4620      	mov	r0, r4
9001504a:	f7ff fd26 	bl	90014a9a <_ZNK8touchgfx4Rect9intersectERKS0_>
9001504e:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
90015052:	b1c0      	cbz	r0, 90015086 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
90015054:	f9b4 e000 	ldrsh.w	lr, [r4]
90015058:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
9001505c:	4576      	cmp	r6, lr
9001505e:	dc22      	bgt.n	900150a6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
90015060:	f8b4 c004 	ldrh.w	ip, [r4, #4]
90015064:	44f4      	add	ip, lr
90015066:	fa0f fc8c 	sxth.w	ip, ip
9001506a:	45e0      	cmp	r8, ip
9001506c:	db1b      	blt.n	900150a6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
9001506e:	428f      	cmp	r7, r1
90015070:	fa1f fc81 	uxth.w	ip, r1
90015074:	88e1      	ldrh	r1, [r4, #6]
90015076:	dc0d      	bgt.n	90015094 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
90015078:	ebaa 0c0c 	sub.w	ip, sl, ip
9001507c:	f8a4 9002 	strh.w	r9, [r4, #2]
90015080:	eba1 010c 	sub.w	r1, r1, ip
90015084:	80e1      	strh	r1, [r4, #6]
90015086:	4628      	mov	r0, r5
90015088:	9904      	ldr	r1, [sp, #16]
9001508a:	3c08      	subs	r4, #8
9001508c:	4605      	mov	r5, r0
9001508e:	3901      	subs	r1, #1
90015090:	9104      	str	r1, [sp, #16]
90015092:	e7d3      	b.n	9001503c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
90015094:	4461      	add	r1, ip
90015096:	b209      	sxth	r1, r1
90015098:	4549      	cmp	r1, r9
9001509a:	dcf5      	bgt.n	90015088 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
9001509c:	eba2 0c0c 	sub.w	ip, r2, ip
900150a0:	f8a4 c006 	strh.w	ip, [r4, #6]
900150a4:	e7ef      	b.n	90015086 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
900150a6:	428f      	cmp	r7, r1
900150a8:	dcee      	bgt.n	90015088 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
900150aa:	f8b4 c006 	ldrh.w	ip, [r4, #6]
900150ae:	4461      	add	r1, ip
900150b0:	b209      	sxth	r1, r1
900150b2:	4589      	cmp	r9, r1
900150b4:	dbe8      	blt.n	90015088 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
900150b6:	4576      	cmp	r6, lr
900150b8:	fa1f fc8e 	uxth.w	ip, lr
900150bc:	88a1      	ldrh	r1, [r4, #4]
900150be:	dc07      	bgt.n	900150d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
900150c0:	eba3 0c0c 	sub.w	ip, r3, ip
900150c4:	f8a4 8000 	strh.w	r8, [r4]
900150c8:	eba1 010c 	sub.w	r1, r1, ip
900150cc:	80a1      	strh	r1, [r4, #4]
900150ce:	e7da      	b.n	90015086 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
900150d0:	4461      	add	r1, ip
900150d2:	b209      	sxth	r1, r1
900150d4:	4588      	cmp	r8, r1
900150d6:	dbd7      	blt.n	90015088 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
900150d8:	9905      	ldr	r1, [sp, #20]
900150da:	eba1 0c0c 	sub.w	ip, r1, ip
900150de:	f8a4 c004 	strh.w	ip, [r4, #4]
900150e2:	e7d0      	b.n	90015086 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
900150e4:	24023572 	.word	0x24023572
900150e8:	24023570 	.word	0x24023570
900150ec:	2d00      	cmp	r5, #0
900150ee:	f000 816d 	beq.w	900153cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
900150f2:	9b06      	ldr	r3, [sp, #24]
900150f4:	445b      	add	r3, fp
900150f6:	461c      	mov	r4, r3
900150f8:	9b02      	ldr	r3, [sp, #8]
900150fa:	3301      	adds	r3, #1
900150fc:	f000 8166 	beq.w	900153cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
90015100:	f104 05a4 	add.w	r5, r4, #164	; 0xa4
90015104:	9803      	ldr	r0, [sp, #12]
90015106:	4629      	mov	r1, r5
90015108:	f7ff fd3a 	bl	90014b80 <_ZNK8touchgfx4Rect8includesERKS0_>
9001510c:	b120      	cbz	r0, 90015118 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
9001510e:	f8bd 1008 	ldrh.w	r1, [sp, #8]
90015112:	9801      	ldr	r0, [sp, #4]
90015114:	f7ff feb0 	bl	90014e78 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90015118:	9903      	ldr	r1, [sp, #12]
9001511a:	4628      	mov	r0, r5
9001511c:	f7ff fcbd 	bl	90014a9a <_ZNK8touchgfx4Rect9intersectERKS0_>
90015120:	2800      	cmp	r0, #0
90015122:	f000 809c 	beq.w	9001525e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
90015126:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	; 0xa4
9001512a:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
9001512e:	fa1f f189 	uxth.w	r1, r9
90015132:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
90015136:	9309      	str	r3, [sp, #36]	; 0x24
90015138:	eb01 0c03 	add.w	ip, r1, r3
9001513c:	b283      	uxth	r3, r0
9001513e:	4548      	cmp	r0, r9
90015140:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
90015144:	fa1f fa8c 	uxth.w	sl, ip
90015148:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
9001514c:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	; 0xa6
90015150:	eb03 050c 	add.w	r5, r3, ip
90015154:	b2ad      	uxth	r5, r5
90015156:	9505      	str	r5, [sp, #20]
90015158:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
9001515c:	9504      	str	r5, [sp, #16]
9001515e:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	; 0xec
90015162:	f340 8099 	ble.w	90015298 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
90015166:	1a5b      	subs	r3, r3, r1
90015168:	4596      	cmp	lr, r2
9001516a:	fa0f f08a 	sxth.w	r0, sl
9001516e:	b29b      	uxth	r3, r3
90015170:	b21e      	sxth	r6, r3
90015172:	dd2e      	ble.n	900151d2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
90015174:	9f02      	ldr	r7, [sp, #8]
90015176:	fa1f fe8e 	uxth.w	lr, lr
9001517a:	b292      	uxth	r2, r2
9001517c:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
90015180:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
90015184:	9f04      	ldr	r7, [sp, #16]
90015186:	ebae 0102 	sub.w	r1, lr, r2
9001518a:	44a6      	add	lr, r4
9001518c:	1a3f      	subs	r7, r7, r0
9001518e:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	; 0xb2
90015192:	b289      	uxth	r1, r1
90015194:	4402      	add	r2, r0
90015196:	fa0f fe8e 	sxth.w	lr, lr
9001519a:	b20d      	sxth	r5, r1
9001519c:	b212      	sxth	r2, r2
9001519e:	436f      	muls	r7, r5
900151a0:	ebae 0202 	sub.w	r2, lr, r2
900151a4:	4372      	muls	r2, r6
900151a6:	4297      	cmp	r7, r2
900151a8:	db09      	blt.n	900151be <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
900151aa:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	; 0xac
900151ae:	f8a8 50b2 	strh.w	r5, [r8, #178]	; 0xb2
900151b2:	449c      	add	ip, r3
900151b4:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
900151b8:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
900151bc:	e686      	b.n	90014ecc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
900151be:	4421      	add	r1, r4
900151c0:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
900151c4:	f8a8 60b0 	strh.w	r6, [r8, #176]	; 0xb0
900151c8:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
900151cc:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
900151d0:	e67c      	b.n	90014ecc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
900151d2:	9f04      	ldr	r7, [sp, #16]
900151d4:	42b8      	cmp	r0, r7
900151d6:	da27      	bge.n	90015228 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
900151d8:	9902      	ldr	r1, [sp, #8]
900151da:	1a3f      	subs	r7, r7, r0
900151dc:	f8bd 502e 	ldrh.w	r5, [sp, #46]	; 0x2e
900151e0:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
900151e4:	eb05 010e 	add.w	r1, r5, lr
900151e8:	fa1f f881 	uxth.w	r8, r1
900151ec:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	; 0xb2
900151f0:	4411      	add	r1, r2
900151f2:	fa0f f988 	sxth.w	r9, r8
900151f6:	eba2 020e 	sub.w	r2, r2, lr
900151fa:	eba1 0108 	sub.w	r1, r1, r8
900151fe:	4372      	muls	r2, r6
90015200:	b289      	uxth	r1, r1
90015202:	fa0f f881 	sxth.w	r8, r1
90015206:	fb08 f707 	mul.w	r7, r8, r7
9001520a:	42ba      	cmp	r2, r7
9001520c:	dc06      	bgt.n	9001521c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
9001520e:	f8a4 90ae 	strh.w	r9, [r4, #174]	; 0xae
90015212:	f8a4 80b2 	strh.w	r8, [r4, #178]	; 0xb2
90015216:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	; 0xac
9001521a:	e7ca      	b.n	900151b2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
9001521c:	4429      	add	r1, r5
9001521e:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
90015222:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
90015226:	e651      	b.n	90014ecc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
90015228:	9805      	ldr	r0, [sp, #20]
9001522a:	2d06      	cmp	r5, #6
9001522c:	ebaa 0000 	sub.w	r0, sl, r0
90015230:	b280      	uxth	r0, r0
90015232:	fa0f fe80 	sxth.w	lr, r0
90015236:	d817      	bhi.n	90015268 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
90015238:	9b04      	ldr	r3, [sp, #16]
9001523a:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	; 0xaa
9001523e:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
90015242:	1c6b      	adds	r3, r5, #1
90015244:	f8a4 e0a8 	strh.w	lr, [r4, #168]	; 0xa8
90015248:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
9001524c:	9b01      	ldr	r3, [sp, #4]
9001524e:	9801      	ldr	r0, [sp, #4]
90015250:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
90015254:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
90015258:	805a      	strh	r2, [r3, #2]
9001525a:	809e      	strh	r6, [r3, #4]
9001525c:	80d9      	strh	r1, [r3, #6]
9001525e:	9b02      	ldr	r3, [sp, #8]
90015260:	3c08      	subs	r4, #8
90015262:	3b01      	subs	r3, #1
90015264:	9302      	str	r3, [sp, #8]
90015266:	e747      	b.n	900150f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
90015268:	9a02      	ldr	r2, [sp, #8]
9001526a:	45b6      	cmp	lr, r6
9001526c:	ea4f 02c2 	mov.w	r2, r2, lsl #3
90015270:	db0d      	blt.n	9001528e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
90015272:	449c      	add	ip, r3
90015274:	445a      	add	r2, fp
90015276:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
9001527a:	fa1f fc8c 	uxth.w	ip, ip
9001527e:	f8a2 e0b0 	strh.w	lr, [r2, #176]	; 0xb0
90015282:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
90015286:	448c      	add	ip, r1
90015288:	f8a2 c0ac 	strh.w	ip, [r2, #172]	; 0xac
9001528c:	e61e      	b.n	90014ecc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
9001528e:	445a      	add	r2, fp
90015290:	4484      	add	ip, r0
90015292:	f8a2 60b0 	strh.w	r6, [r2, #176]	; 0xb0
90015296:	e78f      	b.n	900151b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
90015298:	fa1f f18e 	uxth.w	r1, lr
9001529c:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
900152a0:	b293      	uxth	r3, r2
900152a2:	4596      	cmp	lr, r2
900152a4:	eb01 0806 	add.w	r8, r1, r6
900152a8:	9306      	str	r3, [sp, #24]
900152aa:	fa1f f888 	uxth.w	r8, r8
900152ae:	9f06      	ldr	r7, [sp, #24]
900152b0:	fa0f f388 	sxth.w	r3, r8
900152b4:	9307      	str	r3, [sp, #28]
900152b6:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
900152ba:	443b      	add	r3, r7
900152bc:	b29b      	uxth	r3, r3
900152be:	9308      	str	r3, [sp, #32]
900152c0:	da24      	bge.n	9001530c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
900152c2:	9905      	ldr	r1, [sp, #20]
900152c4:	eba3 0308 	sub.w	r3, r3, r8
900152c8:	eba2 020e 	sub.w	r2, r2, lr
900152cc:	eba9 0000 	sub.w	r0, r9, r0
900152d0:	ebaa 0401 	sub.w	r4, sl, r1
900152d4:	b29b      	uxth	r3, r3
900152d6:	b2a4      	uxth	r4, r4
900152d8:	b219      	sxth	r1, r3
900152da:	b225      	sxth	r5, r4
900152dc:	4348      	muls	r0, r1
900152de:	436a      	muls	r2, r5
900152e0:	4282      	cmp	r2, r0
900152e2:	9a02      	ldr	r2, [sp, #8]
900152e4:	ea4f 02c2 	mov.w	r2, r2, lsl #3
900152e8:	445a      	add	r2, fp
900152ea:	dc06      	bgt.n	900152fa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
900152ec:	9b07      	ldr	r3, [sp, #28]
900152ee:	44a4      	add	ip, r4
900152f0:	f8a2 10b2 	strh.w	r1, [r2, #178]	; 0xb2
900152f4:	f8a2 30ae 	strh.w	r3, [r2, #174]	; 0xae
900152f8:	e75e      	b.n	900151b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
900152fa:	9904      	ldr	r1, [sp, #16]
900152fc:	f8a2 50b0 	strh.w	r5, [r2, #176]	; 0xb0
90015300:	f8a2 10ac 	strh.w	r1, [r2, #172]	; 0xac
90015304:	4433      	add	r3, r6
90015306:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
9001530a:	e5df      	b.n	90014ecc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
9001530c:	9f06      	ldr	r7, [sp, #24]
9001530e:	9b04      	ldr	r3, [sp, #16]
90015310:	1bc9      	subs	r1, r1, r7
90015312:	fa0f f78a 	sxth.w	r7, sl
90015316:	b289      	uxth	r1, r1
90015318:	429f      	cmp	r7, r3
9001531a:	fa0f fe81 	sxth.w	lr, r1
9001531e:	dd23      	ble.n	90015368 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
90015320:	9a05      	ldr	r2, [sp, #20]
90015322:	eba9 0000 	sub.w	r0, r9, r0
90015326:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
9001532a:	ebaa 0202 	sub.w	r2, sl, r2
9001532e:	9d07      	ldr	r5, [sp, #28]
90015330:	fb0e f000 	mul.w	r0, lr, r0
90015334:	b292      	uxth	r2, r2
90015336:	eba5 0a03 	sub.w	sl, r5, r3
9001533a:	9b02      	ldr	r3, [sp, #8]
9001533c:	b214      	sxth	r4, r2
9001533e:	00db      	lsls	r3, r3, #3
90015340:	fb04 fa0a 	mul.w	sl, r4, sl
90015344:	445b      	add	r3, fp
90015346:	4550      	cmp	r0, sl
90015348:	db03      	blt.n	90015352 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
9001534a:	f8a3 e0b2 	strh.w	lr, [r3, #178]	; 0xb2
9001534e:	4494      	add	ip, r2
90015350:	e732      	b.n	900151b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
90015352:	9a04      	ldr	r2, [sp, #16]
90015354:	4431      	add	r1, r6
90015356:	f8a3 40b0 	strh.w	r4, [r3, #176]	; 0xb0
9001535a:	f8a3 20ac 	strh.w	r2, [r3, #172]	; 0xac
9001535e:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	; 0xae
90015362:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
90015366:	e75c      	b.n	90015222 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
90015368:	9b08      	ldr	r3, [sp, #32]
9001536a:	2d06      	cmp	r5, #6
9001536c:	eba3 0308 	sub.w	r3, r3, r8
90015370:	b29b      	uxth	r3, r3
90015372:	b218      	sxth	r0, r3
90015374:	d813      	bhi.n	9001539e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
90015376:	9b07      	ldr	r3, [sp, #28]
90015378:	f8a4 00aa 	strh.w	r0, [r4, #170]	; 0xaa
9001537c:	f8a4 30a6 	strh.w	r3, [r4, #166]	; 0xa6
90015380:	1c6b      	adds	r3, r5, #1
90015382:	9901      	ldr	r1, [sp, #4]
90015384:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
90015388:	9b01      	ldr	r3, [sp, #4]
9001538a:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
9001538e:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
90015392:	805a      	strh	r2, [r3, #2]
90015394:	9a09      	ldr	r2, [sp, #36]	; 0x24
90015396:	f8a3 e006 	strh.w	lr, [r3, #6]
9001539a:	809a      	strh	r2, [r3, #4]
9001539c:	e75f      	b.n	9001525e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
9001539e:	9c02      	ldr	r4, [sp, #8]
900153a0:	4570      	cmp	r0, lr
900153a2:	ea4f 04c4 	mov.w	r4, r4, lsl #3
900153a6:	db0d      	blt.n	900153c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
900153a8:	4431      	add	r1, r6
900153aa:	9b06      	ldr	r3, [sp, #24]
900153ac:	445c      	add	r4, fp
900153ae:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
900153b2:	b289      	uxth	r1, r1
900153b4:	f8a4 00b2 	strh.w	r0, [r4, #178]	; 0xb2
900153b8:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
900153bc:	4419      	add	r1, r3
900153be:	f8a4 10ae 	strh.w	r1, [r4, #174]	; 0xae
900153c2:	e583      	b.n	90014ecc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
900153c4:	445c      	add	r4, fp
900153c6:	f8a4 e0b2 	strh.w	lr, [r4, #178]	; 0xb2
900153ca:	e79b      	b.n	90015304 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
900153cc:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
900153d0:	f64f 76ff 	movw	r6, #65535	; 0xffff
900153d4:	1e65      	subs	r5, r4, #1
900153d6:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
900153da:	b2ad      	uxth	r5, r5
900153dc:	42b5      	cmp	r5, r6
900153de:	d044      	beq.n	9001546a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
900153e0:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
900153e4:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	; 0xa6
900153e8:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
900153ec:	4282      	cmp	r2, r0
900153ee:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	; 0xa4
900153f2:	d11f      	bne.n	90015434 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
900153f4:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
900153f8:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
900153fc:	459c      	cmp	ip, r3
900153fe:	d119      	bne.n	90015434 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
90015400:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	; 0xa8
90015404:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
90015408:	19d8      	adds	r0, r3, r7
9001540a:	b200      	sxth	r0, r0
9001540c:	4288      	cmp	r0, r1
9001540e:	d109      	bne.n	90015424 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
90015410:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
90015414:	4413      	add	r3, r2
90015416:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
9001541a:	4629      	mov	r1, r5
9001541c:	9801      	ldr	r0, [sp, #4]
9001541e:	f7ff fd2b 	bl	90014e78 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90015422:	e003      	b.n	9001542c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
90015424:	4411      	add	r1, r2
90015426:	b209      	sxth	r1, r1
90015428:	42b9      	cmp	r1, r7
9001542a:	d0f3      	beq.n	90015414 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
9001542c:	3d01      	subs	r5, #1
9001542e:	3c08      	subs	r4, #8
90015430:	b2ad      	uxth	r5, r5
90015432:	e7d3      	b.n	900153dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
90015434:	42b9      	cmp	r1, r7
90015436:	d1f9      	bne.n	9001542c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
90015438:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	; 0x2c
9001543c:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
90015440:	4299      	cmp	r1, r3
90015442:	d1f3      	bne.n	9001542c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
90015444:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
90015448:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
9001544c:	181f      	adds	r7, r3, r0
9001544e:	b23f      	sxth	r7, r7
90015450:	42ba      	cmp	r2, r7
90015452:	d105      	bne.n	90015460 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
90015454:	f8ad 002a 	strh.w	r0, [sp, #42]	; 0x2a
90015458:	440b      	add	r3, r1
9001545a:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
9001545e:	e7dc      	b.n	9001541a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
90015460:	440a      	add	r2, r1
90015462:	b212      	sxth	r2, r2
90015464:	4290      	cmp	r0, r2
90015466:	d1e1      	bne.n	9001542c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
90015468:	e7f6      	b.n	90015458 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
9001546a:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	; 0xec
9001546e:	2e07      	cmp	r6, #7
90015470:	ea4f 04c6 	mov.w	r4, r6, lsl #3
90015474:	d812      	bhi.n	9001549c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
90015476:	1c75      	adds	r5, r6, #1
90015478:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
9001547c:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
90015480:	f8ab 50ec 	strh.w	r5, [fp, #236]	; 0xec
90015484:	9d01      	ldr	r5, [sp, #4]
90015486:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
9001548a:	442c      	add	r4, r5
9001548c:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
90015490:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
90015494:	8061      	strh	r1, [r4, #2]
90015496:	80a2      	strh	r2, [r4, #4]
90015498:	80e3      	strh	r3, [r4, #6]
9001549a:	e581      	b.n	90014fa0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
9001549c:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
900154a0:	3e01      	subs	r6, #1
900154a2:	445c      	add	r4, fp
900154a4:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
900154a8:	f04f 37ff 	mov.w	r7, #4294967295
900154ac:	2500      	movs	r5, #0
900154ae:	9305      	str	r3, [sp, #20]
900154b0:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
900154b4:	1e72      	subs	r2, r6, #1
900154b6:	9302      	str	r3, [sp, #8]
900154b8:	4691      	mov	r9, r2
900154ba:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
900154be:	9304      	str	r3, [sp, #16]
900154c0:	f104 03a4 	add.w	r3, r4, #164	; 0xa4
900154c4:	f1b9 3fff 	cmp.w	r9, #4294967295
900154c8:	6818      	ldr	r0, [r3, #0]
900154ca:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
900154ce:	9207      	str	r2, [sp, #28]
900154d0:	bf16      	itet	ne
900154d2:	9905      	ldrne	r1, [sp, #20]
900154d4:	f8dd e00c 	ldreq.w	lr, [sp, #12]
900154d8:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
900154dc:	9306      	str	r3, [sp, #24]
900154de:	f8be 1006 	ldrh.w	r1, [lr, #6]
900154e2:	f8be 8004 	ldrh.w	r8, [lr, #4]
900154e6:	fb18 f801 	smulbb	r8, r8, r1
900154ea:	6859      	ldr	r1, [r3, #4]
900154ec:	e8ac 0003 	stmia.w	ip!, {r0, r1}
900154f0:	4671      	mov	r1, lr
900154f2:	a80c      	add	r0, sp, #48	; 0x30
900154f4:	f7ff fb6a 	bl	90014bcc <_ZN8touchgfx4Rect11expandToFitERKS0_>
900154f8:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
900154fc:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
90015500:	f04f 0c08 	mov.w	ip, #8
90015504:	9b04      	ldr	r3, [sp, #16]
90015506:	9a02      	ldr	r2, [sp, #8]
90015508:	fb10 f001 	smulbb	r0, r0, r1
9001550c:	fb02 8803 	mla	r8, r2, r3, r8
90015510:	eba0 0108 	sub.w	r1, r0, r8
90015514:	fb90 f0fc 	sdiv	r0, r0, ip
90015518:	4288      	cmp	r0, r1
9001551a:	dc20      	bgt.n	9001555e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6be>
9001551c:	4551      	cmp	r1, sl
9001551e:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
90015522:	da03      	bge.n	9001552c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68c>
90015524:	b1d9      	cbz	r1, 9001555e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6be>
90015526:	468a      	mov	sl, r1
90015528:	464f      	mov	r7, r9
9001552a:	4635      	mov	r5, r6
9001552c:	f109 39ff 	add.w	r9, r9, #4294967295
90015530:	f119 0f02 	cmn.w	r9, #2
90015534:	d1c6      	bne.n	900154c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
90015536:	4616      	mov	r6, r2
90015538:	3201      	adds	r2, #1
9001553a:	f1a4 0408 	sub.w	r4, r4, #8
9001553e:	d1b7      	bne.n	900154b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
90015540:	9b01      	ldr	r3, [sp, #4]
90015542:	b2ac      	uxth	r4, r5
90015544:	00ed      	lsls	r5, r5, #3
90015546:	1958      	adds	r0, r3, r5
90015548:	1c7b      	adds	r3, r7, #1
9001554a:	d10b      	bne.n	90015564 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c4>
9001554c:	4601      	mov	r1, r0
9001554e:	9803      	ldr	r0, [sp, #12]
90015550:	f7ff fb3c 	bl	90014bcc <_ZN8touchgfx4Rect11expandToFitERKS0_>
90015554:	4621      	mov	r1, r4
90015556:	9801      	ldr	r0, [sp, #4]
90015558:	f7ff fc8e 	bl	90014e78 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
9001555c:	e4b6      	b.n	90014ecc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
9001555e:	464f      	mov	r7, r9
90015560:	4635      	mov	r5, r6
90015562:	e7ed      	b.n	90015540 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a0>
90015564:	9b01      	ldr	r3, [sp, #4]
90015566:	00ff      	lsls	r7, r7, #3
90015568:	445d      	add	r5, fp
9001556a:	19d9      	adds	r1, r3, r7
9001556c:	445f      	add	r7, fp
9001556e:	f7ff fb2d 	bl	90014bcc <_ZN8touchgfx4Rect11expandToFitERKS0_>
90015572:	9b03      	ldr	r3, [sp, #12]
90015574:	cb03      	ldmia	r3!, {r0, r1}
90015576:	9b03      	ldr	r3, [sp, #12]
90015578:	f8c7 00ac 	str.w	r0, [r7, #172]	; 0xac
9001557c:	f8c7 10b0 	str.w	r1, [r7, #176]	; 0xb0
90015580:	f855 0fac 	ldr.w	r0, [r5, #172]!
90015584:	6869      	ldr	r1, [r5, #4]
90015586:	c303      	stmia	r3!, {r0, r1}
90015588:	e7e4      	b.n	90015554 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b4>
9001558a:	bf00      	nop

9001558c <_ZN8touchgfx11Application15drawCachedAreasEv>:
9001558c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90015590:	f500 7698 	add.w	r6, r0, #304	; 0x130
90015594:	b09b      	sub	sp, #108	; 0x6c
90015596:	4604      	mov	r4, r0
90015598:	4630      	mov	r0, r6
9001559a:	f7fa fc80 	bl	9000fe9e <_ZNK8touchgfx4Rect7isEmptyEv>
9001559e:	4605      	mov	r5, r0
900155a0:	b948      	cbnz	r0, 900155b6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
900155a2:	6823      	ldr	r3, [r4, #0]
900155a4:	4620      	mov	r0, r4
900155a6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
900155a8:	e896 0006 	ldmia.w	r6, {r1, r2}
900155ac:	4798      	blx	r3
900155ae:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
900155b2:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
900155b6:	4bc5      	ldr	r3, [pc, #788]	; (900158cc <_ZN8touchgfx11Application15drawCachedAreasEv+0x340>)
900155b8:	681b      	ldr	r3, [r3, #0]
900155ba:	2b00      	cmp	r3, #0
900155bc:	d03f      	beq.n	9001563e <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
900155be:	4dc4      	ldr	r5, [pc, #784]	; (900158d0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
900155c0:	4628      	mov	r0, r5
900155c2:	f7fa fc6c 	bl	9000fe9e <_ZNK8touchgfx4Rect7isEmptyEv>
900155c6:	4606      	mov	r6, r0
900155c8:	2800      	cmp	r0, #0
900155ca:	d138      	bne.n	9001563e <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
900155cc:	4628      	mov	r0, r5
900155ce:	f7ff f973 	bl	900148b8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
900155d2:	6823      	ldr	r3, [r4, #0]
900155d4:	6829      	ldr	r1, [r5, #0]
900155d6:	4620      	mov	r0, r4
900155d8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
900155da:	686a      	ldr	r2, [r5, #4]
900155dc:	4798      	blx	r3
900155de:	802e      	strh	r6, [r5, #0]
900155e0:	806e      	strh	r6, [r5, #2]
900155e2:	80ae      	strh	r6, [r5, #4]
900155e4:	80ee      	strh	r6, [r5, #6]
900155e6:	f10d 0824 	add.w	r8, sp, #36	; 0x24
900155ea:	4dba      	ldr	r5, [pc, #744]	; (900158d4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
900155ec:	4640      	mov	r0, r8
900155ee:	f7ff fbe7 	bl	90014dc0 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
900155f2:	882e      	ldrh	r6, [r5, #0]
900155f4:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
900155f8:	f104 00ac 	add.w	r0, r4, #172	; 0xac
900155fc:	4633      	mov	r3, r6
900155fe:	42bb      	cmp	r3, r7
90015600:	d224      	bcs.n	9001564c <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
90015602:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
90015606:	2907      	cmp	r1, #7
90015608:	d816      	bhi.n	90015638 <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
9001560a:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
9001560e:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
90015612:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
90015616:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
9001561a:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
9001561e:	1c4a      	adds	r2, r1, #1
90015620:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
90015624:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
90015628:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
9001562c:	f8a2 a002 	strh.w	sl, [r2, #2]
90015630:	f8a2 e004 	strh.w	lr, [r2, #4]
90015634:	f8a2 c006 	strh.w	ip, [r2, #6]
90015638:	3301      	adds	r3, #1
9001563a:	b29b      	uxth	r3, r3
9001563c:	e7df      	b.n	900155fe <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
9001563e:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
90015642:	2b00      	cmp	r3, #0
90015644:	d1cf      	bne.n	900155e6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
90015646:	b01b      	add	sp, #108	; 0x6c
90015648:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001564c:	f8b4 312e 	ldrh.w	r3, [r4, #302]	; 0x12e
90015650:	42b3      	cmp	r3, r6
90015652:	d90c      	bls.n	9001566e <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
90015654:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
90015658:	6822      	ldr	r2, [r4, #0]
9001565a:	3601      	adds	r6, #1
9001565c:	4620      	mov	r0, r4
9001565e:	6c17      	ldr	r7, [r2, #64]	; 0x40
90015660:	f8d3 10ee 	ldr.w	r1, [r3, #238]	; 0xee
90015664:	b2b6      	uxth	r6, r6
90015666:	f8d3 20f2 	ldr.w	r2, [r3, #242]	; 0xf2
9001566a:	47b8      	blx	r7
9001566c:	e7ee      	b.n	9001564c <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
9001566e:	4a9a      	ldr	r2, [pc, #616]	; (900158d8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
90015670:	6813      	ldr	r3, [r2, #0]
90015672:	4691      	mov	r9, r2
90015674:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
90015678:	2b01      	cmp	r3, #1
9001567a:	f040 80e0 	bne.w	9001583e <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b2>
9001567e:	8829      	ldrh	r1, [r5, #0]
90015680:	2600      	movs	r6, #0
90015682:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
90015686:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
9001568a:	33ae      	adds	r3, #174	; 0xae
9001568c:	428f      	cmp	r7, r1
9001568e:	f103 0308 	add.w	r3, r3, #8
90015692:	dd0a      	ble.n	900156aa <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
90015694:	f833 2c04 	ldrh.w	r2, [r3, #-4]
90015698:	3101      	adds	r1, #1
9001569a:	f833 0c08 	ldrh.w	r0, [r3, #-8]
9001569e:	4402      	add	r2, r0
900156a0:	b212      	sxth	r2, r2
900156a2:	4296      	cmp	r6, r2
900156a4:	bfb8      	it	lt
900156a6:	4616      	movlt	r6, r2
900156a8:	e7f0      	b.n	9001568c <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
900156aa:	4b8c      	ldr	r3, [pc, #560]	; (900158dc <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
900156ac:	f8df 9228 	ldr.w	r9, [pc, #552]	; 900158d8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>
900156b0:	881b      	ldrh	r3, [r3, #0]
900156b2:	2b0f      	cmp	r3, #15
900156b4:	bf8c      	ite	hi
900156b6:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
900156ba:	f04f 0b01 	movls.w	fp, #1
900156be:	2300      	movs	r3, #0
900156c0:	e9cd 3305 	strd	r3, r3, [sp, #20]
900156c4:	f8bd 7016 	ldrh.w	r7, [sp, #22]
900156c8:	f8bd 001a 	ldrh.w	r0, [sp, #26]
900156cc:	4b82      	ldr	r3, [pc, #520]	; (900158d8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
900156ce:	4438      	add	r0, r7
900156d0:	b207      	sxth	r7, r0
900156d2:	6818      	ldr	r0, [r3, #0]
900156d4:	42b7      	cmp	r7, r6
900156d6:	6803      	ldr	r3, [r0, #0]
900156d8:	f280 8083 	bge.w	900157e2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x256>
900156dc:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
900156e0:	4798      	blx	r3
900156e2:	eb07 030b 	add.w	r3, r7, fp
900156e6:	4298      	cmp	r0, r3
900156e8:	da07      	bge.n	900156fa <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
900156ea:	42b0      	cmp	r0, r6
900156ec:	da05      	bge.n	900156fa <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
900156ee:	4287      	cmp	r7, r0
900156f0:	dd6c      	ble.n	900157cc <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
900156f2:	2f00      	cmp	r7, #0
900156f4:	dd6a      	ble.n	900157cc <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
900156f6:	4630      	mov	r0, r6
900156f8:	e004      	b.n	90015704 <_ZN8touchgfx11Application15drawCachedAreasEv+0x178>
900156fa:	4287      	cmp	r7, r0
900156fc:	dcfb      	bgt.n	900156f6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16a>
900156fe:	42b0      	cmp	r0, r6
90015700:	bfa8      	it	ge
90015702:	4630      	movge	r0, r6
90015704:	4b76      	ldr	r3, [pc, #472]	; (900158e0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
90015706:	1bc0      	subs	r0, r0, r7
90015708:	2200      	movs	r2, #0
9001570a:	f8ad 7016 	strh.w	r7, [sp, #22]
9001570e:	f9b3 3000 	ldrsh.w	r3, [r3]
90015712:	882f      	ldrh	r7, [r5, #0]
90015714:	f8ad 2014 	strh.w	r2, [sp, #20]
90015718:	f8ad 3018 	strh.w	r3, [sp, #24]
9001571c:	f8ad 001a 	strh.w	r0, [sp, #26]
90015720:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
90015724:	42bb      	cmp	r3, r7
90015726:	d9cd      	bls.n	900156c4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x138>
90015728:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
9001572c:	ab07      	add	r3, sp, #28
9001572e:	f852 0fac 	ldr.w	r0, [r2, #172]!
90015732:	6851      	ldr	r1, [r2, #4]
90015734:	c303      	stmia	r3!, {r0, r1}
90015736:	a905      	add	r1, sp, #20
90015738:	a807      	add	r0, sp, #28
9001573a:	f7ff f9ae 	bl	90014a9a <_ZNK8touchgfx4Rect9intersectERKS0_>
9001573e:	2800      	cmp	r0, #0
90015740:	d04c      	beq.n	900157dc <_ZN8touchgfx11Application15drawCachedAreasEv+0x250>
90015742:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
90015746:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
9001574a:	f8bd a020 	ldrh.w	sl, [sp, #32]
9001574e:	4686      	mov	lr, r0
90015750:	4290      	cmp	r0, r2
90015752:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
90015756:	4450      	add	r0, sl
90015758:	f8bd a018 	ldrh.w	sl, [sp, #24]
9001575c:	bfb8      	it	lt
9001575e:	4696      	movlt	lr, r2
90015760:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
90015764:	4452      	add	r2, sl
90015766:	b280      	uxth	r0, r0
90015768:	4299      	cmp	r1, r3
9001576a:	468c      	mov	ip, r1
9001576c:	b292      	uxth	r2, r2
9001576e:	9302      	str	r3, [sp, #8]
90015770:	bfb8      	it	lt
90015772:	469c      	movlt	ip, r3
90015774:	b203      	sxth	r3, r0
90015776:	fa0f fa82 	sxth.w	sl, r2
9001577a:	f8ad e01c 	strh.w	lr, [sp, #28]
9001577e:	f8ad c01e 	strh.w	ip, [sp, #30]
90015782:	4553      	cmp	r3, sl
90015784:	bfb8      	it	lt
90015786:	4602      	movlt	r2, r0
90015788:	9b02      	ldr	r3, [sp, #8]
9001578a:	eba2 020e 	sub.w	r2, r2, lr
9001578e:	f8ad 2020 	strh.w	r2, [sp, #32]
90015792:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
90015796:	4411      	add	r1, r2
90015798:	f8bd 201a 	ldrh.w	r2, [sp, #26]
9001579c:	4413      	add	r3, r2
9001579e:	b289      	uxth	r1, r1
900157a0:	b29b      	uxth	r3, r3
900157a2:	b208      	sxth	r0, r1
900157a4:	b21a      	sxth	r2, r3
900157a6:	4290      	cmp	r0, r2
900157a8:	bfb8      	it	lt
900157aa:	460b      	movlt	r3, r1
900157ac:	eba3 030c 	sub.w	r3, r3, ip
900157b0:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
900157b4:	a807      	add	r0, sp, #28
900157b6:	f7fa fb72 	bl	9000fe9e <_ZNK8touchgfx4Rect7isEmptyEv>
900157ba:	b920      	cbnz	r0, 900157c6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x23a>
900157bc:	6823      	ldr	r3, [r4, #0]
900157be:	a907      	add	r1, sp, #28
900157c0:	4620      	mov	r0, r4
900157c2:	6c9b      	ldr	r3, [r3, #72]	; 0x48
900157c4:	4798      	blx	r3
900157c6:	3701      	adds	r7, #1
900157c8:	b2bf      	uxth	r7, r7
900157ca:	e7a9      	b.n	90015720 <_ZN8touchgfx11Application15drawCachedAreasEv+0x194>
900157cc:	f8d9 0000 	ldr.w	r0, [r9]
900157d0:	2101      	movs	r1, #1
900157d2:	6803      	ldr	r3, [r0, #0]
900157d4:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
900157d8:	4798      	blx	r3
900157da:	e773      	b.n	900156c4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x138>
900157dc:	e9cd 0007 	strd	r0, r0, [sp, #28]
900157e0:	e7e8      	b.n	900157b4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x228>
900157e2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
900157e4:	4798      	blx	r3
900157e6:	4b3f      	ldr	r3, [pc, #252]	; (900158e4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
900157e8:	781b      	ldrb	r3, [r3, #0]
900157ea:	2b00      	cmp	r3, #0
900157ec:	f43f af2b 	beq.w	90015646 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
900157f0:	2300      	movs	r3, #0
900157f2:	f104 00ee 	add.w	r0, r4, #238	; 0xee
900157f6:	f8a4 312e 	strh.w	r3, [r4, #302]	; 0x12e
900157fa:	882b      	ldrh	r3, [r5, #0]
900157fc:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
90015800:	42ab      	cmp	r3, r5
90015802:	f4bf af20 	bcs.w	90015646 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
90015806:	f8b4 112e 	ldrh.w	r1, [r4, #302]	; 0x12e
9001580a:	2907      	cmp	r1, #7
9001580c:	d814      	bhi.n	90015838 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ac>
9001580e:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
90015812:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
90015816:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
9001581a:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
9001581e:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
90015822:	1c4a      	adds	r2, r1, #1
90015824:	f8a4 212e 	strh.w	r2, [r4, #302]	; 0x12e
90015828:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
9001582c:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
90015830:	f8a2 c002 	strh.w	ip, [r2, #2]
90015834:	8097      	strh	r7, [r2, #4]
90015836:	80d6      	strh	r6, [r2, #6]
90015838:	3301      	adds	r3, #1
9001583a:	b29b      	uxth	r3, r3
9001583c:	e7e0      	b.n	90015800 <_ZN8touchgfx11Application15drawCachedAreasEv+0x274>
9001583e:	2b02      	cmp	r3, #2
90015840:	f040 8133 	bne.w	90015aaa <_ZN8touchgfx11Application15drawCachedAreasEv+0x51e>
90015844:	4b28      	ldr	r3, [pc, #160]	; (900158e8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
90015846:	f104 0aac 	add.w	sl, r4, #172	; 0xac
9001584a:	781b      	ldrb	r3, [r3, #0]
9001584c:	2b01      	cmp	r3, #1
9001584e:	f000 8098 	beq.w	90015982 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
90015852:	882a      	ldrh	r2, [r5, #0]
90015854:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	; 0xec
90015858:	3201      	adds	r2, #1
9001585a:	b292      	uxth	r2, r2
9001585c:	2900      	cmp	r1, #0
9001585e:	d0c2      	beq.n	900157e6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
90015860:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	; 0xae
90015864:	4694      	mov	ip, r2
90015866:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	; 0xb2
9001586a:	f04f 0900 	mov.w	r9, #0
9001586e:	441e      	add	r6, r3
90015870:	b236      	sxth	r6, r6
90015872:	fa1f f38c 	uxth.w	r3, ip
90015876:	ea4f 07c9 	mov.w	r7, r9, lsl #3
9001587a:	4299      	cmp	r1, r3
9001587c:	f240 80be 	bls.w	900159fc <_ZN8touchgfx11Application15drawCachedAreasEv+0x470>
90015880:	4427      	add	r7, r4
90015882:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
90015886:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	; 0xae
9001588a:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	; 0xae
9001588e:	4283      	cmp	r3, r0
90015890:	f340 80a0 	ble.w	900159d4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x448>
90015894:	f8be 60b2 	ldrh.w	r6, [lr, #178]	; 0xb2
90015898:	46e1      	mov	r9, ip
9001589a:	4406      	add	r6, r0
9001589c:	b236      	sxth	r6, r6
9001589e:	429e      	cmp	r6, r3
900158a0:	bfa8      	it	ge
900158a2:	461e      	movge	r6, r3
900158a4:	f10c 0c01 	add.w	ip, ip, #1
900158a8:	e7e3      	b.n	90015872 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2e6>
900158aa:	d10a      	bne.n	900158c2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x336>
900158ac:	4562      	cmp	r2, ip
900158ae:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	; 0xb2
900158b2:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	; 0xb2
900158b6:	bfb8      	it	lt
900158b8:	4662      	movlt	r2, ip
900158ba:	4288      	cmp	r0, r1
900158bc:	bfb8      	it	lt
900158be:	461f      	movlt	r7, r3
900158c0:	e086      	b.n	900159d0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x444>
900158c2:	428a      	cmp	r2, r1
900158c4:	bfb8      	it	lt
900158c6:	460a      	movlt	r2, r1
900158c8:	e082      	b.n	900159d0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x444>
900158ca:	bf00      	nop
900158cc:	240235bc 	.word	0x240235bc
900158d0:	240235c8 	.word	0x240235c8
900158d4:	24000074 	.word	0x24000074
900158d8:	2402357c 	.word	0x2402357c
900158dc:	24023572 	.word	0x24023572
900158e0:	24023570 	.word	0x24023570
900158e4:	2402357a 	.word	0x2402357a
900158e8:	24023574 	.word	0x24023574
900158ec:	19a1      	adds	r1, r4, r6
900158ee:	ab07      	add	r3, sp, #28
900158f0:	f851 0fac 	ldr.w	r0, [r1, #172]!
900158f4:	6849      	ldr	r1, [r1, #4]
900158f6:	c303      	stmia	r3!, {r0, r1}
900158f8:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
900158fc:	a807      	add	r0, sp, #28
900158fe:	f8bd 101c 	ldrh.w	r1, [sp, #28]
90015902:	2b13      	cmp	r3, #19
90015904:	440b      	add	r3, r1
90015906:	bfd8      	it	le
90015908:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
9001590c:	1a9b      	subs	r3, r3, r2
9001590e:	f8ad 201c 	strh.w	r2, [sp, #28]
90015912:	f8ad 3020 	strh.w	r3, [sp, #32]
90015916:	f7fe ffe9 	bl	900148ec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001591a:	a807      	add	r0, sp, #28
9001591c:	f7fa fabf 	bl	9000fe9e <_ZNK8touchgfx4Rect7isEmptyEv>
90015920:	bb78      	cbnz	r0, 90015982 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
90015922:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
90015926:	4426      	add	r6, r4
90015928:	f8d9 0000 	ldr.w	r0, [r9]
9001592c:	f1bc 0f14 	cmp.w	ip, #20
90015930:	f8bd 3020 	ldrh.w	r3, [sp, #32]
90015934:	f8d0 e000 	ldr.w	lr, [r0]
90015938:	bfa8      	it	ge
9001593a:	f04f 0c14 	movge.w	ip, #20
9001593e:	f8bd 201e 	ldrh.w	r2, [sp, #30]
90015942:	f8bd 101c 	ldrh.w	r1, [sp, #28]
90015946:	fa1f fc8c 	uxth.w	ip, ip
9001594a:	f8cd c000 	str.w	ip, [sp]
9001594e:	f8de b090 	ldr.w	fp, [lr, #144]	; 0x90
90015952:	47d8      	blx	fp
90015954:	4683      	mov	fp, r0
90015956:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
9001595a:	a807      	add	r0, sp, #28
9001595c:	f7fe ffac 	bl	900148b8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
90015960:	6823      	ldr	r3, [r4, #0]
90015962:	4620      	mov	r0, r4
90015964:	a907      	add	r1, sp, #28
90015966:	6c9b      	ldr	r3, [r3, #72]	; 0x48
90015968:	4798      	blx	r3
9001596a:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
9001596e:	eba0 000b 	sub.w	r0, r0, fp
90015972:	b200      	sxth	r0, r0
90015974:	f8a6 00b0 	strh.w	r0, [r6, #176]	; 0xb0
90015978:	b918      	cbnz	r0, 90015982 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
9001597a:	b2b9      	uxth	r1, r7
9001597c:	4650      	mov	r0, sl
9001597e:	f7ff fa7b 	bl	90014e78 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90015982:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	; 0xec
90015986:	f1bb 0f00 	cmp.w	fp, #0
9001598a:	f43f af2c 	beq.w	900157e6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
9001598e:	882b      	ldrh	r3, [r5, #0]
90015990:	2700      	movs	r7, #0
90015992:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	; 0xac
90015996:	3301      	adds	r3, #1
90015998:	b29b      	uxth	r3, r3
9001599a:	b299      	uxth	r1, r3
9001599c:	00fe      	lsls	r6, r7, #3
9001599e:	458b      	cmp	fp, r1
900159a0:	d9a4      	bls.n	900158ec <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>
900159a2:	4426      	add	r6, r4
900159a4:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
900159a8:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	; 0xac
900159ac:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
900159b0:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	; 0xac
900159b4:	4408      	add	r0, r1
900159b6:	f8be 10b0 	ldrh.w	r1, [lr, #176]	; 0xb0
900159ba:	4461      	add	r1, ip
900159bc:	b200      	sxth	r0, r0
900159be:	b209      	sxth	r1, r1
900159c0:	4288      	cmp	r0, r1
900159c2:	f6bf af72 	bge.w	900158aa <_ZN8touchgfx11Application15drawCachedAreasEv+0x31e>
900159c6:	4584      	cmp	ip, r0
900159c8:	4662      	mov	r2, ip
900159ca:	461f      	mov	r7, r3
900159cc:	bfb8      	it	lt
900159ce:	4602      	movlt	r2, r0
900159d0:	3301      	adds	r3, #1
900159d2:	e7e2      	b.n	9001599a <_ZN8touchgfx11Application15drawCachedAreasEv+0x40e>
900159d4:	d10e      	bne.n	900159f4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x468>
900159d6:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	; 0xb0
900159da:	f8be e0b2 	ldrh.w	lr, [lr, #178]	; 0xb2
900159de:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	; 0xb0
900159e2:	4473      	add	r3, lr
900159e4:	b21b      	sxth	r3, r3
900159e6:	429e      	cmp	r6, r3
900159e8:	bfa8      	it	ge
900159ea:	461e      	movge	r6, r3
900159ec:	4287      	cmp	r7, r0
900159ee:	bfb8      	it	lt
900159f0:	46e1      	movlt	r9, ip
900159f2:	e757      	b.n	900158a4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
900159f4:	4286      	cmp	r6, r0
900159f6:	bfa8      	it	ge
900159f8:	4606      	movge	r6, r0
900159fa:	e753      	b.n	900158a4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
900159fc:	eb0a 0007 	add.w	r0, sl, r7
90015a00:	4427      	add	r7, r4
90015a02:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	; 0xb2
90015a06:	f1bb 0f13 	cmp.w	fp, #19
90015a0a:	bfdc      	itt	le
90015a0c:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	; 0xae
90015a10:	445e      	addle	r6, fp
90015a12:	e9cd 2102 	strd	r2, r1, [sp, #8]
90015a16:	bfd8      	it	le
90015a18:	b236      	sxthle	r6, r6
90015a1a:	f7fa fa40 	bl	9000fe9e <_ZNK8touchgfx4Rect7isEmptyEv>
90015a1e:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
90015a22:	2800      	cmp	r0, #0
90015a24:	f47f af1a 	bne.w	9001585c <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d0>
90015a28:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	; 0xae
90015a2c:	fa1f fb8b 	uxth.w	fp, fp
90015a30:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
90015a34:	1ab6      	subs	r6, r6, r2
90015a36:	4829      	ldr	r0, [pc, #164]	; (90015adc <_ZN8touchgfx11Application15drawCachedAreasEv+0x550>)
90015a38:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	; 0xac
90015a3c:	2e14      	cmp	r6, #20
90015a3e:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	; 0xb0
90015a42:	6800      	ldr	r0, [r0, #0]
90015a44:	bfa8      	it	ge
90015a46:	2614      	movge	r6, #20
90015a48:	f8ad 101c 	strh.w	r1, [sp, #28]
90015a4c:	f8ad 201e 	strh.w	r2, [sp, #30]
90015a50:	b289      	uxth	r1, r1
90015a52:	f8ad 3020 	strh.w	r3, [sp, #32]
90015a56:	b2b6      	uxth	r6, r6
90015a58:	f8d0 c000 	ldr.w	ip, [r0]
90015a5c:	b292      	uxth	r2, r2
90015a5e:	455e      	cmp	r6, fp
90015a60:	bf94      	ite	ls
90015a62:	9600      	strls	r6, [sp, #0]
90015a64:	f8cd b000 	strhi.w	fp, [sp]
90015a68:	b29b      	uxth	r3, r3
90015a6a:	f8dc 6090 	ldr.w	r6, [ip, #144]	; 0x90
90015a6e:	47b0      	blx	r6
90015a70:	6823      	ldr	r3, [r4, #0]
90015a72:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
90015a76:	a907      	add	r1, sp, #28
90015a78:	6c9b      	ldr	r3, [r3, #72]	; 0x48
90015a7a:	4620      	mov	r0, r4
90015a7c:	4798      	blx	r3
90015a7e:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
90015a82:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	; 0xb2
90015a86:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	; 0xae
90015a8a:	1a5b      	subs	r3, r3, r1
90015a8c:	440a      	add	r2, r1
90015a8e:	b21b      	sxth	r3, r3
90015a90:	f8a7 20ae 	strh.w	r2, [r7, #174]	; 0xae
90015a94:	f8a7 30b2 	strh.w	r3, [r7, #178]	; 0xb2
90015a98:	2b00      	cmp	r3, #0
90015a9a:	f47f aeda 	bne.w	90015852 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c6>
90015a9e:	fa1f f189 	uxth.w	r1, r9
90015aa2:	4650      	mov	r0, sl
90015aa4:	f7ff f9e8 	bl	90014e78 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90015aa8:	e6d3      	b.n	90015852 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c6>
90015aaa:	882e      	ldrh	r6, [r5, #0]
90015aac:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
90015ab0:	42b3      	cmp	r3, r6
90015ab2:	f67f ae98 	bls.w	900157e6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
90015ab6:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
90015aba:	ab07      	add	r3, sp, #28
90015abc:	f852 0fac 	ldr.w	r0, [r2, #172]!
90015ac0:	6851      	ldr	r1, [r2, #4]
90015ac2:	c303      	stmia	r3!, {r0, r1}
90015ac4:	a807      	add	r0, sp, #28
90015ac6:	f7fa f9ea 	bl	9000fe9e <_ZNK8touchgfx4Rect7isEmptyEv>
90015aca:	b920      	cbnz	r0, 90015ad6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x54a>
90015acc:	6823      	ldr	r3, [r4, #0]
90015ace:	a907      	add	r1, sp, #28
90015ad0:	4620      	mov	r0, r4
90015ad2:	6c9b      	ldr	r3, [r3, #72]	; 0x48
90015ad4:	4798      	blx	r3
90015ad6:	3601      	adds	r6, #1
90015ad8:	b2b6      	uxth	r6, r6
90015ada:	e7e7      	b.n	90015aac <_ZN8touchgfx11Application15drawCachedAreasEv+0x520>
90015adc:	2402357c 	.word	0x2402357c

90015ae0 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
90015ae0:	4b03      	ldr	r3, [pc, #12]	; (90015af0 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
90015ae2:	2200      	movs	r2, #0
90015ae4:	801a      	strh	r2, [r3, #0]
90015ae6:	805a      	strh	r2, [r3, #2]
90015ae8:	809a      	strh	r2, [r3, #4]
90015aea:	80da      	strh	r2, [r3, #6]
90015aec:	4770      	bx	lr
90015aee:	bf00      	nop
90015af0:	240235c8 	.word	0x240235c8

90015af4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
90015af4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90015af8:	b09d      	sub	sp, #116	; 0x74
90015afa:	4606      	mov	r6, r0
90015afc:	4614      	mov	r4, r2
90015afe:	468a      	mov	sl, r1
90015b00:	a803      	add	r0, sp, #12
90015b02:	461d      	mov	r5, r3
90015b04:	f000 fe5b 	bl	900167be <_ZN8touchgfx12TextProviderC1Ev>
90015b08:	6833      	ldr	r3, [r6, #0]
90015b0a:	4630      	mov	r0, r6
90015b0c:	f242 0b0b 	movw	fp, #8203	; 0x200b
90015b10:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
90015b12:	4798      	blx	r3
90015b14:	6833      	ldr	r3, [r6, #0]
90015b16:	4607      	mov	r7, r0
90015b18:	4630      	mov	r0, r6
90015b1a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
90015b1c:	4798      	blx	r3
90015b1e:	462a      	mov	r2, r5
90015b20:	2500      	movs	r5, #0
90015b22:	4621      	mov	r1, r4
90015b24:	9000      	str	r0, [sp, #0]
90015b26:	463b      	mov	r3, r7
90015b28:	462c      	mov	r4, r5
90015b2a:	46a9      	mov	r9, r5
90015b2c:	46a8      	mov	r8, r5
90015b2e:	a803      	add	r0, sp, #12
90015b30:	f000 fea0 	bl	90016874 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90015b34:	2300      	movs	r3, #0
90015b36:	9302      	str	r3, [sp, #8]
90015b38:	f64f 63ff 	movw	r3, #65279	; 0xfeff
90015b3c:	429c      	cmp	r4, r3
90015b3e:	d002      	beq.n	90015b46 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
90015b40:	455c      	cmp	r4, fp
90015b42:	bf18      	it	ne
90015b44:	4625      	movne	r5, r4
90015b46:	ab02      	add	r3, sp, #8
90015b48:	4632      	mov	r2, r6
90015b4a:	4651      	mov	r1, sl
90015b4c:	a803      	add	r0, sp, #12
90015b4e:	f001 f997 	bl	90016e80 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
90015b52:	4604      	mov	r4, r0
90015b54:	b108      	cbz	r0, 90015b5a <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
90015b56:	280a      	cmp	r0, #10
90015b58:	d10a      	bne.n	90015b70 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
90015b5a:	45c1      	cmp	r9, r8
90015b5c:	bf38      	it	cc
90015b5e:	46c1      	movcc	r9, r8
90015b60:	f04f 0800 	mov.w	r8, #0
90015b64:	2c00      	cmp	r4, #0
90015b66:	d1e5      	bne.n	90015b34 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
90015b68:	4648      	mov	r0, r9
90015b6a:	b01d      	add	sp, #116	; 0x74
90015b6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90015b70:	9a02      	ldr	r2, [sp, #8]
90015b72:	2a00      	cmp	r2, #0
90015b74:	d0de      	beq.n	90015b34 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
90015b76:	7b57      	ldrb	r7, [r2, #13]
90015b78:	4629      	mov	r1, r5
90015b7a:	6833      	ldr	r3, [r6, #0]
90015b7c:	007f      	lsls	r7, r7, #1
90015b7e:	8894      	ldrh	r4, [r2, #4]
90015b80:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90015b82:	f407 7080 	and.w	r0, r7, #256	; 0x100
90015b86:	7a97      	ldrb	r7, [r2, #10]
90015b88:	4307      	orrs	r7, r0
90015b8a:	4630      	mov	r0, r6
90015b8c:	4798      	blx	r3
90015b8e:	4438      	add	r0, r7
90015b90:	4480      	add	r8, r0
90015b92:	fa1f f888 	uxth.w	r8, r8
90015b96:	e7e5      	b.n	90015b64 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

90015b98 <_ZNK8touchgfx4Font12getCharWidthEt>:
90015b98:	b508      	push	{r3, lr}
90015b9a:	6803      	ldr	r3, [r0, #0]
90015b9c:	68db      	ldr	r3, [r3, #12]
90015b9e:	4798      	blx	r3
90015ba0:	b128      	cbz	r0, 90015bae <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
90015ba2:	7b43      	ldrb	r3, [r0, #13]
90015ba4:	7a80      	ldrb	r0, [r0, #10]
90015ba6:	005b      	lsls	r3, r3, #1
90015ba8:	f403 7380 	and.w	r3, r3, #256	; 0x100
90015bac:	4318      	orrs	r0, r3
90015bae:	bd08      	pop	{r3, pc}

90015bb0 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
90015bb0:	b40e      	push	{r1, r2, r3}
90015bb2:	b5f0      	push	{r4, r5, r6, r7, lr}
90015bb4:	b09e      	sub	sp, #120	; 0x78
90015bb6:	4605      	mov	r5, r0
90015bb8:	ab23      	add	r3, sp, #140	; 0x8c
90015bba:	a805      	add	r0, sp, #20
90015bbc:	f853 4b04 	ldr.w	r4, [r3], #4
90015bc0:	9303      	str	r3, [sp, #12]
90015bc2:	f000 fdfc 	bl	900167be <_ZN8touchgfx12TextProviderC1Ev>
90015bc6:	682b      	ldr	r3, [r5, #0]
90015bc8:	4628      	mov	r0, r5
90015bca:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
90015bcc:	4798      	blx	r3
90015bce:	682b      	ldr	r3, [r5, #0]
90015bd0:	4606      	mov	r6, r0
90015bd2:	4628      	mov	r0, r5
90015bd4:	6d1b      	ldr	r3, [r3, #80]	; 0x50
90015bd6:	4798      	blx	r3
90015bd8:	4633      	mov	r3, r6
90015bda:	4621      	mov	r1, r4
90015bdc:	ae1e      	add	r6, sp, #120	; 0x78
90015bde:	2400      	movs	r4, #0
90015be0:	9000      	str	r0, [sp, #0]
90015be2:	9a03      	ldr	r2, [sp, #12]
90015be4:	a805      	add	r0, sp, #20
90015be6:	f000 fe45 	bl	90016874 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90015bea:	f846 4d68 	str.w	r4, [r6, #-104]!
90015bee:	462a      	mov	r2, r5
90015bf0:	4633      	mov	r3, r6
90015bf2:	4621      	mov	r1, r4
90015bf4:	a805      	add	r0, sp, #20
90015bf6:	f001 f943 	bl	90016e80 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
90015bfa:	b300      	cbz	r0, 90015c3e <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8e>
90015bfc:	280a      	cmp	r0, #10
90015bfe:	d01a      	beq.n	90015c36 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
90015c00:	9f04      	ldr	r7, [sp, #16]
90015c02:	b1c7      	cbz	r7, 90015c36 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
90015c04:	7b78      	ldrb	r0, [r7, #13]
90015c06:	7a3b      	ldrb	r3, [r7, #8]
90015c08:	00c1      	lsls	r1, r0, #3
90015c0a:	88ea      	ldrh	r2, [r5, #6]
90015c0c:	f401 7180 	and.w	r1, r1, #256	; 0x100
90015c10:	4319      	orrs	r1, r3
90015c12:	0643      	lsls	r3, r0, #25
90015c14:	ea4f 1000 	mov.w	r0, r0, lsl #4
90015c18:	bf48      	it	mi
90015c1a:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
90015c1e:	f400 7080 	and.w	r0, r0, #256	; 0x100
90015c22:	bf48      	it	mi
90015c24:	b219      	sxthmi	r1, r3
90015c26:	79fb      	ldrb	r3, [r7, #7]
90015c28:	4303      	orrs	r3, r0
90015c2a:	4413      	add	r3, r2
90015c2c:	1a5b      	subs	r3, r3, r1
90015c2e:	b21b      	sxth	r3, r3
90015c30:	429c      	cmp	r4, r3
90015c32:	bfb8      	it	lt
90015c34:	461c      	movlt	r4, r3
90015c36:	4633      	mov	r3, r6
90015c38:	462a      	mov	r2, r5
90015c3a:	2100      	movs	r1, #0
90015c3c:	e7da      	b.n	90015bf4 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
90015c3e:	b2a0      	uxth	r0, r4
90015c40:	b01e      	add	sp, #120	; 0x78
90015c42:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
90015c46:	b003      	add	sp, #12
90015c48:	4770      	bx	lr

90015c4a <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
90015c4a:	7a43      	ldrb	r3, [r0, #9]
90015c4c:	8880      	ldrh	r0, [r0, #4]
90015c4e:	4418      	add	r0, r3
90015c50:	b280      	uxth	r0, r0
90015c52:	4770      	bx	lr

90015c54 <_ZNK8touchgfx4Font13getFontHeightEv>:
90015c54:	6803      	ldr	r3, [r0, #0]
90015c56:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90015c58:	4718      	bx	r3

90015c5a <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
90015c5a:	b40e      	push	{r1, r2, r3}
90015c5c:	b570      	push	{r4, r5, r6, lr}
90015c5e:	b09d      	sub	sp, #116	; 0x74
90015c60:	4604      	mov	r4, r0
90015c62:	ab21      	add	r3, sp, #132	; 0x84
90015c64:	a803      	add	r0, sp, #12
90015c66:	f853 5b04 	ldr.w	r5, [r3], #4
90015c6a:	9302      	str	r3, [sp, #8]
90015c6c:	f000 fda7 	bl	900167be <_ZN8touchgfx12TextProviderC1Ev>
90015c70:	6823      	ldr	r3, [r4, #0]
90015c72:	4620      	mov	r0, r4
90015c74:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
90015c76:	4798      	blx	r3
90015c78:	6823      	ldr	r3, [r4, #0]
90015c7a:	4606      	mov	r6, r0
90015c7c:	4620      	mov	r0, r4
90015c7e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
90015c80:	2401      	movs	r4, #1
90015c82:	4798      	blx	r3
90015c84:	4633      	mov	r3, r6
90015c86:	9000      	str	r0, [sp, #0]
90015c88:	4629      	mov	r1, r5
90015c8a:	9a02      	ldr	r2, [sp, #8]
90015c8c:	a803      	add	r0, sp, #12
90015c8e:	f000 fdf1 	bl	90016874 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90015c92:	a803      	add	r0, sp, #12
90015c94:	f001 f9c0 	bl	90017018 <_ZN8touchgfx12TextProvider11getNextCharEv>
90015c98:	b2a3      	uxth	r3, r4
90015c9a:	b138      	cbz	r0, 90015cac <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x52>
90015c9c:	280a      	cmp	r0, #10
90015c9e:	a803      	add	r0, sp, #12
90015ca0:	bf04      	itt	eq
90015ca2:	3301      	addeq	r3, #1
90015ca4:	b21c      	sxtheq	r4, r3
90015ca6:	f001 f9b7 	bl	90017018 <_ZN8touchgfx12TextProvider11getNextCharEv>
90015caa:	e7f5      	b.n	90015c98 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
90015cac:	4618      	mov	r0, r3
90015cae:	b01d      	add	sp, #116	; 0x74
90015cb0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90015cb4:	b003      	add	sp, #12
90015cb6:	4770      	bx	lr

90015cb8 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
90015cb8:	b40e      	push	{r1, r2, r3}
90015cba:	b5f0      	push	{r4, r5, r6, r7, lr}
90015cbc:	b09e      	sub	sp, #120	; 0x78
90015cbe:	4604      	mov	r4, r0
90015cc0:	ab23      	add	r3, sp, #140	; 0x8c
90015cc2:	a805      	add	r0, sp, #20
90015cc4:	f853 5b04 	ldr.w	r5, [r3], #4
90015cc8:	9303      	str	r3, [sp, #12]
90015cca:	f000 fd78 	bl	900167be <_ZN8touchgfx12TextProviderC1Ev>
90015cce:	6823      	ldr	r3, [r4, #0]
90015cd0:	4620      	mov	r0, r4
90015cd2:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
90015cd4:	4798      	blx	r3
90015cd6:	6823      	ldr	r3, [r4, #0]
90015cd8:	4606      	mov	r6, r0
90015cda:	4620      	mov	r0, r4
90015cdc:	6d1b      	ldr	r3, [r3, #80]	; 0x50
90015cde:	4798      	blx	r3
90015ce0:	4633      	mov	r3, r6
90015ce2:	4629      	mov	r1, r5
90015ce4:	9000      	str	r0, [sp, #0]
90015ce6:	9a03      	ldr	r2, [sp, #12]
90015ce8:	a805      	add	r0, sp, #20
90015cea:	f000 fdc3 	bl	90016874 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90015cee:	ad1e      	add	r5, sp, #120	; 0x78
90015cf0:	2100      	movs	r1, #0
90015cf2:	f647 76ff 	movw	r6, #32767	; 0x7fff
90015cf6:	4622      	mov	r2, r4
90015cf8:	a805      	add	r0, sp, #20
90015cfa:	f845 1d68 	str.w	r1, [r5, #-104]!
90015cfe:	462b      	mov	r3, r5
90015d00:	f001 f8be 	bl	90016e80 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
90015d04:	b1d8      	cbz	r0, 90015d3e <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
90015d06:	280a      	cmp	r0, #10
90015d08:	d012      	beq.n	90015d30 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
90015d0a:	9804      	ldr	r0, [sp, #16]
90015d0c:	b180      	cbz	r0, 90015d30 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
90015d0e:	7b47      	ldrb	r7, [r0, #13]
90015d10:	88e2      	ldrh	r2, [r4, #6]
90015d12:	00fb      	lsls	r3, r7, #3
90015d14:	f403 7180 	and.w	r1, r3, #256	; 0x100
90015d18:	7a03      	ldrb	r3, [r0, #8]
90015d1a:	430b      	orrs	r3, r1
90015d1c:	0679      	lsls	r1, r7, #25
90015d1e:	bf44      	itt	mi
90015d20:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
90015d24:	b21b      	sxthmi	r3, r3
90015d26:	1ad3      	subs	r3, r2, r3
90015d28:	b21b      	sxth	r3, r3
90015d2a:	429e      	cmp	r6, r3
90015d2c:	bfa8      	it	ge
90015d2e:	461e      	movge	r6, r3
90015d30:	462b      	mov	r3, r5
90015d32:	4622      	mov	r2, r4
90015d34:	2100      	movs	r1, #0
90015d36:	a805      	add	r0, sp, #20
90015d38:	f001 f8a2 	bl	90016e80 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
90015d3c:	e7e2      	b.n	90015d04 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
90015d3e:	4630      	mov	r0, r6
90015d40:	b01e      	add	sp, #120	; 0x78
90015d42:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
90015d46:	b003      	add	sp, #12
90015d48:	4770      	bx	lr

90015d4a <_ZNK8touchgfx8Drawable10invalidateEv>:
90015d4a:	b513      	push	{r0, r1, r4, lr}
90015d4c:	6803      	ldr	r3, [r0, #0]
90015d4e:	2400      	movs	r4, #0
90015d50:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
90015d54:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
90015d58:	f8ad 1004 	strh.w	r1, [sp, #4]
90015d5c:	4669      	mov	r1, sp
90015d5e:	691b      	ldr	r3, [r3, #16]
90015d60:	9400      	str	r4, [sp, #0]
90015d62:	f8ad 2006 	strh.w	r2, [sp, #6]
90015d66:	4798      	blx	r3
90015d68:	b002      	add	sp, #8
90015d6a:	bd10      	pop	{r4, pc}

90015d6c <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
90015d6c:	b538      	push	{r3, r4, r5, lr}
90015d6e:	680b      	ldr	r3, [r1, #0]
90015d70:	460c      	mov	r4, r1
90015d72:	4605      	mov	r5, r0
90015d74:	68db      	ldr	r3, [r3, #12]
90015d76:	4798      	blx	r3
90015d78:	6823      	ldr	r3, [r4, #0]
90015d7a:	4620      	mov	r0, r4
90015d7c:	4629      	mov	r1, r5
90015d7e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90015d80:	4798      	blx	r3
90015d82:	4628      	mov	r0, r5
90015d84:	bd38      	pop	{r3, r4, r5, pc}

90015d86 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
90015d86:	b410      	push	{r4}
90015d88:	880a      	ldrh	r2, [r1, #0]
90015d8a:	8884      	ldrh	r4, [r0, #4]
90015d8c:	4422      	add	r2, r4
90015d8e:	800a      	strh	r2, [r1, #0]
90015d90:	884a      	ldrh	r2, [r1, #2]
90015d92:	88c4      	ldrh	r4, [r0, #6]
90015d94:	4422      	add	r2, r4
90015d96:	804a      	strh	r2, [r1, #2]
90015d98:	6940      	ldr	r0, [r0, #20]
90015d9a:	b120      	cbz	r0, 90015da6 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
90015d9c:	6803      	ldr	r3, [r0, #0]
90015d9e:	f85d 4b04 	ldr.w	r4, [sp], #4
90015da2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90015da4:	4718      	bx	r3
90015da6:	f85d 4b04 	ldr.w	r4, [sp], #4
90015daa:	4770      	bx	lr

90015dac <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
90015dac:	b570      	push	{r4, r5, r6, lr}
90015dae:	8882      	ldrh	r2, [r0, #4]
90015db0:	460c      	mov	r4, r1
90015db2:	880b      	ldrh	r3, [r1, #0]
90015db4:	4605      	mov	r5, r0
90015db6:	4413      	add	r3, r2
90015db8:	800b      	strh	r3, [r1, #0]
90015dba:	884b      	ldrh	r3, [r1, #2]
90015dbc:	88c2      	ldrh	r2, [r0, #6]
90015dbe:	4413      	add	r3, r2
90015dc0:	804b      	strh	r3, [r1, #2]
90015dc2:	1d01      	adds	r1, r0, #4
90015dc4:	4620      	mov	r0, r4
90015dc6:	f7fa f827 	bl	9000fe18 <_ZN8touchgfx4RectaNERKS0_>
90015dca:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
90015dce:	2b00      	cmp	r3, #0
90015dd0:	dd0b      	ble.n	90015dea <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
90015dd2:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
90015dd6:	2b00      	cmp	r3, #0
90015dd8:	dd07      	ble.n	90015dea <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
90015dda:	6968      	ldr	r0, [r5, #20]
90015ddc:	b128      	cbz	r0, 90015dea <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
90015dde:	6803      	ldr	r3, [r0, #0]
90015de0:	4621      	mov	r1, r4
90015de2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90015de4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90015de8:	4718      	bx	r3
90015dea:	bd70      	pop	{r4, r5, r6, pc}

90015dec <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
90015dec:	b570      	push	{r4, r5, r6, lr}
90015dee:	8882      	ldrh	r2, [r0, #4]
90015df0:	460c      	mov	r4, r1
90015df2:	880b      	ldrh	r3, [r1, #0]
90015df4:	4605      	mov	r5, r0
90015df6:	4413      	add	r3, r2
90015df8:	800b      	strh	r3, [r1, #0]
90015dfa:	884b      	ldrh	r3, [r1, #2]
90015dfc:	88c2      	ldrh	r2, [r0, #6]
90015dfe:	4413      	add	r3, r2
90015e00:	804b      	strh	r3, [r1, #2]
90015e02:	1d01      	adds	r1, r0, #4
90015e04:	4620      	mov	r0, r4
90015e06:	f7fa f807 	bl	9000fe18 <_ZN8touchgfx4RectaNERKS0_>
90015e0a:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
90015e0e:	2b00      	cmp	r3, #0
90015e10:	dd19      	ble.n	90015e46 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
90015e12:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
90015e16:	2b00      	cmp	r3, #0
90015e18:	dd15      	ble.n	90015e46 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
90015e1a:	6968      	ldr	r0, [r5, #20]
90015e1c:	b128      	cbz	r0, 90015e2a <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
90015e1e:	6803      	ldr	r3, [r0, #0]
90015e20:	4621      	mov	r1, r4
90015e22:	691b      	ldr	r3, [r3, #16]
90015e24:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90015e28:	4718      	bx	r3
90015e2a:	4b07      	ldr	r3, [pc, #28]	; (90015e48 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
90015e2c:	681b      	ldr	r3, [r3, #0]
90015e2e:	3304      	adds	r3, #4
90015e30:	429d      	cmp	r5, r3
90015e32:	d108      	bne.n	90015e46 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
90015e34:	f7fe ff10 	bl	90014c58 <_ZN8touchgfx11Application11getInstanceEv>
90015e38:	6803      	ldr	r3, [r0, #0]
90015e3a:	6821      	ldr	r1, [r4, #0]
90015e3c:	6862      	ldr	r2, [r4, #4]
90015e3e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
90015e40:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90015e44:	4718      	bx	r3
90015e46:	bd70      	pop	{r4, r5, r6, pc}
90015e48:	240235c0 	.word	0x240235c0

90015e4c <_ZN8touchgfx8Drawable12moveRelativeEss>:
90015e4c:	b570      	push	{r4, r5, r6, lr}
90015e4e:	4604      	mov	r4, r0
90015e50:	4616      	mov	r6, r2
90015e52:	460d      	mov	r5, r1
90015e54:	b901      	cbnz	r1, 90015e58 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
90015e56:	b192      	cbz	r2, 90015e7e <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
90015e58:	6823      	ldr	r3, [r4, #0]
90015e5a:	4620      	mov	r0, r4
90015e5c:	699b      	ldr	r3, [r3, #24]
90015e5e:	4798      	blx	r3
90015e60:	88e2      	ldrh	r2, [r4, #6]
90015e62:	88a1      	ldrh	r1, [r4, #4]
90015e64:	4620      	mov	r0, r4
90015e66:	4432      	add	r2, r6
90015e68:	4429      	add	r1, r5
90015e6a:	b212      	sxth	r2, r2
90015e6c:	b209      	sxth	r1, r1
90015e6e:	f7fa faa9 	bl	900103c4 <_ZN8touchgfx8Drawable5setXYEss>
90015e72:	6823      	ldr	r3, [r4, #0]
90015e74:	4620      	mov	r0, r4
90015e76:	699b      	ldr	r3, [r3, #24]
90015e78:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90015e7c:	4718      	bx	r3
90015e7e:	bd70      	pop	{r4, r5, r6, pc}

90015e80 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
90015e80:	b510      	push	{r4, lr}
90015e82:	2300      	movs	r3, #0
90015e84:	4604      	mov	r4, r0
90015e86:	4608      	mov	r0, r1
90015e88:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
90015e8c:	8023      	strh	r3, [r4, #0]
90015e8e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
90015e92:	8063      	strh	r3, [r4, #2]
90015e94:	6803      	ldr	r3, [r0, #0]
90015e96:	80a1      	strh	r1, [r4, #4]
90015e98:	4621      	mov	r1, r4
90015e9a:	80e2      	strh	r2, [r4, #6]
90015e9c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90015e9e:	4798      	blx	r3
90015ea0:	4620      	mov	r0, r4
90015ea2:	bd10      	pop	{r4, pc}

90015ea4 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
90015ea4:	b530      	push	{r4, r5, lr}
90015ea6:	8083      	strh	r3, [r0, #4]
90015ea8:	f8bd 300c 	ldrh.w	r3, [sp, #12]
90015eac:	f89d 5018 	ldrb.w	r5, [sp, #24]
90015eb0:	80c3      	strh	r3, [r0, #6]
90015eb2:	f89d 3010 	ldrb.w	r3, [sp, #16]
90015eb6:	6141      	str	r1, [r0, #20]
90015eb8:	7203      	strb	r3, [r0, #8]
90015eba:	f89d 3014 	ldrb.w	r3, [sp, #20]
90015ebe:	8302      	strh	r2, [r0, #24]
90015ec0:	7243      	strb	r3, [r0, #9]
90015ec2:	7a83      	ldrb	r3, [r0, #10]
90015ec4:	f365 0306 	bfi	r3, r5, #0, #7
90015ec8:	f89d 501c 	ldrb.w	r5, [sp, #28]
90015ecc:	f365 13c7 	bfi	r3, r5, #7, #1
90015ed0:	7283      	strb	r3, [r0, #10]
90015ed2:	f89d 3020 	ldrb.w	r3, [sp, #32]
90015ed6:	72c3      	strb	r3, [r0, #11]
90015ed8:	f89d 3024 	ldrb.w	r3, [sp, #36]	; 0x24
90015edc:	7303      	strb	r3, [r0, #12]
90015ede:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
90015ee2:	81c3      	strh	r3, [r0, #14]
90015ee4:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
90015ee8:	8203      	strh	r3, [r0, #16]
90015eea:	4b01      	ldr	r3, [pc, #4]	; (90015ef0 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
90015eec:	6003      	str	r3, [r0, #0]
90015eee:	bd30      	pop	{r4, r5, pc}
90015ef0:	9002a454 	.word	0x9002a454

90015ef4 <_ZNK8touchgfx9ConstFont4findEt>:
90015ef4:	b5f0      	push	{r4, r5, r6, r7, lr}
90015ef6:	6944      	ldr	r4, [r0, #20]
90015ef8:	b3bc      	cbz	r4, 90015f6a <_ZNK8touchgfx9ConstFont4findEt+0x76>
90015efa:	88a3      	ldrh	r3, [r4, #4]
90015efc:	8b02      	ldrh	r2, [r0, #24]
90015efe:	1acb      	subs	r3, r1, r3
90015f00:	f102 32ff 	add.w	r2, r2, #4294967295
90015f04:	d431      	bmi.n	90015f6a <_ZNK8touchgfx9ConstFont4findEt+0x76>
90015f06:	4293      	cmp	r3, r2
90015f08:	dd0c      	ble.n	90015f24 <_ZNK8touchgfx9ConstFont4findEt+0x30>
90015f0a:	230e      	movs	r3, #14
90015f0c:	fb03 4302 	mla	r3, r3, r2, r4
90015f10:	889b      	ldrh	r3, [r3, #4]
90015f12:	1a5b      	subs	r3, r3, r1
90015f14:	1ad3      	subs	r3, r2, r3
90015f16:	429a      	cmp	r2, r3
90015f18:	db27      	blt.n	90015f6a <_ZNK8touchgfx9ConstFont4findEt+0x76>
90015f1a:	2b00      	cmp	r3, #0
90015f1c:	bfbc      	itt	lt
90015f1e:	2302      	movlt	r3, #2
90015f20:	fb92 f3f3 	sdivlt	r3, r2, r3
90015f24:	2500      	movs	r5, #0
90015f26:	260e      	movs	r6, #14
90015f28:	4295      	cmp	r5, r2
90015f2a:	dc1e      	bgt.n	90015f6a <_ZNK8touchgfx9ConstFont4findEt+0x76>
90015f2c:	fb06 4003 	mla	r0, r6, r3, r4
90015f30:	8887      	ldrh	r7, [r0, #4]
90015f32:	42b9      	cmp	r1, r7
90015f34:	d01a      	beq.n	90015f6c <_ZNK8touchgfx9ConstFont4findEt+0x78>
90015f36:	d20d      	bcs.n	90015f54 <_ZNK8touchgfx9ConstFont4findEt+0x60>
90015f38:	1e5a      	subs	r2, r3, #1
90015f3a:	4295      	cmp	r5, r2
90015f3c:	dc15      	bgt.n	90015f6a <_ZNK8touchgfx9ConstFont4findEt+0x76>
90015f3e:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
90015f42:	1a5b      	subs	r3, r3, r1
90015f44:	1ad3      	subs	r3, r2, r3
90015f46:	429a      	cmp	r2, r3
90015f48:	db0f      	blt.n	90015f6a <_ZNK8touchgfx9ConstFont4findEt+0x76>
90015f4a:	429d      	cmp	r5, r3
90015f4c:	ddec      	ble.n	90015f28 <_ZNK8touchgfx9ConstFont4findEt+0x34>
90015f4e:	1953      	adds	r3, r2, r5
90015f50:	105b      	asrs	r3, r3, #1
90015f52:	e7e9      	b.n	90015f28 <_ZNK8touchgfx9ConstFont4findEt+0x34>
90015f54:	1c5d      	adds	r5, r3, #1
90015f56:	42aa      	cmp	r2, r5
90015f58:	db07      	blt.n	90015f6a <_ZNK8touchgfx9ConstFont4findEt+0x76>
90015f5a:	8a43      	ldrh	r3, [r0, #18]
90015f5c:	1acb      	subs	r3, r1, r3
90015f5e:	442b      	add	r3, r5
90015f60:	429d      	cmp	r5, r3
90015f62:	dc02      	bgt.n	90015f6a <_ZNK8touchgfx9ConstFont4findEt+0x76>
90015f64:	429a      	cmp	r2, r3
90015f66:	dadf      	bge.n	90015f28 <_ZNK8touchgfx9ConstFont4findEt+0x34>
90015f68:	e7f1      	b.n	90015f4e <_ZNK8touchgfx9ConstFont4findEt+0x5a>
90015f6a:	2000      	movs	r0, #0
90015f6c:	bdf0      	pop	{r4, r5, r6, r7, pc}

90015f6e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
90015f6e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90015f70:	4604      	mov	r4, r0
90015f72:	4617      	mov	r7, r2
90015f74:	461e      	mov	r6, r3
90015f76:	b911      	cbnz	r1, 90015f7e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
90015f78:	2500      	movs	r5, #0
90015f7a:	4628      	mov	r0, r5
90015f7c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90015f7e:	290a      	cmp	r1, #10
90015f80:	d0fa      	beq.n	90015f78 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
90015f82:	f64f 62ff 	movw	r2, #65279	; 0xfeff
90015f86:	4291      	cmp	r1, r2
90015f88:	d0f6      	beq.n	90015f78 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
90015f8a:	f242 020b 	movw	r2, #8203	; 0x200b
90015f8e:	4291      	cmp	r1, r2
90015f90:	d0f2      	beq.n	90015f78 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
90015f92:	f7ff ffaf 	bl	90015ef4 <_ZNK8touchgfx9ConstFont4findEt>
90015f96:	4605      	mov	r5, r0
90015f98:	b950      	cbnz	r0, 90015fb0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
90015f9a:	6823      	ldr	r3, [r4, #0]
90015f9c:	4620      	mov	r0, r4
90015f9e:	691b      	ldr	r3, [r3, #16]
90015fa0:	4798      	blx	r3
90015fa2:	4601      	mov	r1, r0
90015fa4:	4620      	mov	r0, r4
90015fa6:	f7ff ffa5 	bl	90015ef4 <_ZNK8touchgfx9ConstFont4findEt>
90015faa:	4605      	mov	r5, r0
90015fac:	2800      	cmp	r0, #0
90015fae:	d0e3      	beq.n	90015f78 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
90015fb0:	6823      	ldr	r3, [r4, #0]
90015fb2:	4629      	mov	r1, r5
90015fb4:	4620      	mov	r0, r4
90015fb6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
90015fb8:	4798      	blx	r3
90015fba:	6038      	str	r0, [r7, #0]
90015fbc:	6823      	ldr	r3, [r4, #0]
90015fbe:	4620      	mov	r0, r4
90015fc0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90015fc2:	4798      	blx	r3
90015fc4:	7030      	strb	r0, [r6, #0]
90015fc6:	e7d8      	b.n	90015f7a <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

90015fc8 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
90015fc8:	b538      	push	{r3, r4, r5, lr}
90015fca:	4605      	mov	r5, r0
90015fcc:	f002 f8f4 	bl	900181b8 <_ZNK8touchgfx6Bitmap9getFormatEv>
90015fd0:	4604      	mov	r4, r0
90015fd2:	4628      	mov	r0, r5
90015fd4:	f002 f834 	bl	90018040 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
90015fd8:	2800      	cmp	r0, #0
90015fda:	bf14      	ite	ne
90015fdc:	2002      	movne	r0, #2
90015fde:	2000      	moveq	r0, #0
90015fe0:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
90015fe4:	b280      	uxth	r0, r0
90015fe6:	bd38      	pop	{r3, r4, r5, pc}

90015fe8 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
90015fe8:	b538      	push	{r3, r4, r5, lr}
90015fea:	4605      	mov	r5, r0
90015fec:	f002 f8e4 	bl	900181b8 <_ZNK8touchgfx6Bitmap9getFormatEv>
90015ff0:	4604      	mov	r4, r0
90015ff2:	4628      	mov	r0, r5
90015ff4:	f002 f824 	bl	90018040 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
90015ff8:	2800      	cmp	r0, #0
90015ffa:	bf14      	ite	ne
90015ffc:	2002      	movne	r0, #2
90015ffe:	2000      	moveq	r0, #0
90016000:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
90016004:	f040 0001 	orr.w	r0, r0, #1
90016008:	b280      	uxth	r0, r0
9001600a:	bd38      	pop	{r3, r4, r5, pc}

9001600c <_ZN8touchgfx4clzuEm>:
9001600c:	4603      	mov	r3, r0
9001600e:	b1c8      	cbz	r0, 90016044 <_ZN8touchgfx4clzuEm+0x38>
90016010:	0c02      	lsrs	r2, r0, #16
90016012:	0412      	lsls	r2, r2, #16
90016014:	b9a2      	cbnz	r2, 90016040 <_ZN8touchgfx4clzuEm+0x34>
90016016:	0403      	lsls	r3, r0, #16
90016018:	2010      	movs	r0, #16
9001601a:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
9001601e:	bf04      	itt	eq
90016020:	021b      	lsleq	r3, r3, #8
90016022:	3008      	addeq	r0, #8
90016024:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
90016028:	bf04      	itt	eq
9001602a:	011b      	lsleq	r3, r3, #4
9001602c:	3004      	addeq	r0, #4
9001602e:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
90016032:	bf04      	itt	eq
90016034:	009b      	lsleq	r3, r3, #2
90016036:	3002      	addeq	r0, #2
90016038:	2b00      	cmp	r3, #0
9001603a:	db04      	blt.n	90016046 <_ZN8touchgfx4clzuEm+0x3a>
9001603c:	3001      	adds	r0, #1
9001603e:	4770      	bx	lr
90016040:	2000      	movs	r0, #0
90016042:	e7ea      	b.n	9001601a <_ZN8touchgfx4clzuEm+0xe>
90016044:	2020      	movs	r0, #32
90016046:	4770      	bx	lr

90016048 <_ZN8touchgfx7muldivuEmmmRm>:
90016048:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
9001604c:	460f      	mov	r7, r1
9001604e:	4615      	mov	r5, r2
90016050:	461e      	mov	r6, r3
90016052:	4601      	mov	r1, r0
90016054:	b100      	cbz	r0, 90016058 <_ZN8touchgfx7muldivuEmmmRm+0x10>
90016056:	b927      	cbnz	r7, 90016062 <_ZN8touchgfx7muldivuEmmmRm+0x1a>
90016058:	2000      	movs	r0, #0
9001605a:	6030      	str	r0, [r6, #0]
9001605c:	b002      	add	sp, #8
9001605e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90016062:	f7ff ffd3 	bl	9001600c <_ZN8touchgfx4clzuEm>
90016066:	b980      	cbnz	r0, 9001608a <_ZN8touchgfx7muldivuEmmmRm+0x42>
90016068:	4638      	mov	r0, r7
9001606a:	f7ff ffcf 	bl	9001600c <_ZN8touchgfx4clzuEm>
9001606e:	2800      	cmp	r0, #0
90016070:	dd05      	ble.n	9001607e <_ZN8touchgfx7muldivuEmmmRm+0x36>
90016072:	4633      	mov	r3, r6
90016074:	462a      	mov	r2, r5
90016076:	4638      	mov	r0, r7
90016078:	f7ff ffe6 	bl	90016048 <_ZN8touchgfx7muldivuEmmmRm>
9001607c:	e7ee      	b.n	9001605c <_ZN8touchgfx7muldivuEmmmRm+0x14>
9001607e:	f04f 33ff 	mov.w	r3, #4294967295
90016082:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
90016086:	6033      	str	r3, [r6, #0]
90016088:	e7e8      	b.n	9001605c <_ZN8touchgfx7muldivuEmmmRm+0x14>
9001608a:	fa37 f800 	lsrs.w	r8, r7, r0
9001608e:	fb07 f301 	mul.w	r3, r7, r1
90016092:	d105      	bne.n	900160a0 <_ZN8touchgfx7muldivuEmmmRm+0x58>
90016094:	fbb3 f0f5 	udiv	r0, r3, r5
90016098:	fb05 3510 	mls	r5, r5, r0, r3
9001609c:	6035      	str	r5, [r6, #0]
9001609e:	e7dd      	b.n	9001605c <_ZN8touchgfx7muldivuEmmmRm+0x14>
900160a0:	2301      	movs	r3, #1
900160a2:	fa01 fa00 	lsl.w	sl, r1, r0
900160a6:	462a      	mov	r2, r5
900160a8:	fa03 f000 	lsl.w	r0, r3, r0
900160ac:	4633      	mov	r3, r6
900160ae:	fbba f9f5 	udiv	r9, sl, r5
900160b2:	3801      	subs	r0, #1
900160b4:	fb08 f409 	mul.w	r4, r8, r9
900160b8:	4038      	ands	r0, r7
900160ba:	f7ff ffc5 	bl	90016048 <_ZN8touchgfx7muldivuEmmmRm>
900160be:	462a      	mov	r2, r5
900160c0:	4607      	mov	r7, r0
900160c2:	ab01      	add	r3, sp, #4
900160c4:	fb05 a119 	mls	r1, r5, r9, sl
900160c8:	4640      	mov	r0, r8
900160ca:	f7ff ffbd 	bl	90016048 <_ZN8touchgfx7muldivuEmmmRm>
900160ce:	9b01      	ldr	r3, [sp, #4]
900160d0:	6832      	ldr	r2, [r6, #0]
900160d2:	441a      	add	r2, r3
900160d4:	fbb2 f3f5 	udiv	r3, r2, r5
900160d8:	441c      	add	r4, r3
900160da:	fb05 2513 	mls	r5, r5, r3, r2
900160de:	443c      	add	r4, r7
900160e0:	4420      	add	r0, r4
900160e2:	e7db      	b.n	9001609c <_ZN8touchgfx7muldivuEmmmRm+0x54>

900160e4 <_ZN8touchgfx6muldivElllRl>:
900160e4:	b573      	push	{r0, r1, r4, r5, r6, lr}
900160e6:	2800      	cmp	r0, #0
900160e8:	461e      	mov	r6, r3
900160ea:	bfba      	itte	lt
900160ec:	4240      	neglt	r0, r0
900160ee:	f04f 34ff 	movlt.w	r4, #4294967295
900160f2:	2401      	movge	r4, #1
900160f4:	2900      	cmp	r1, #0
900160f6:	bfbc      	itt	lt
900160f8:	4249      	neglt	r1, r1
900160fa:	4264      	neglt	r4, r4
900160fc:	2a00      	cmp	r2, #0
900160fe:	bfb6      	itet	lt
90016100:	4265      	neglt	r5, r4
90016102:	4625      	movge	r5, r4
90016104:	4252      	neglt	r2, r2
90016106:	4288      	cmp	r0, r1
90016108:	bfc2      	ittt	gt
9001610a:	4603      	movgt	r3, r0
9001610c:	4608      	movgt	r0, r1
9001610e:	4619      	movgt	r1, r3
90016110:	ab01      	add	r3, sp, #4
90016112:	f7ff ff99 	bl	90016048 <_ZN8touchgfx7muldivuEmmmRm>
90016116:	9b01      	ldr	r3, [sp, #4]
90016118:	4368      	muls	r0, r5
9001611a:	435c      	muls	r4, r3
9001611c:	6034      	str	r4, [r6, #0]
9001611e:	b002      	add	sp, #8
90016120:	bd70      	pop	{r4, r5, r6, pc}

90016122 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
90016122:	2000      	movs	r0, #0
90016124:	4770      	bx	lr

90016126 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
90016126:	2001      	movs	r0, #1
90016128:	4770      	bx	lr

9001612a <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
9001612a:	2002      	movs	r0, #2
9001612c:	4770      	bx	lr

9001612e <_ZN8touchgfx6ScreenD1Ev>:
9001612e:	4770      	bx	lr

90016130 <_ZN8touchgfx6Screen11setupScreenEv>:
90016130:	4770      	bx	lr

90016132 <_ZN8touchgfx12GestureEventD1Ev>:
90016132:	4770      	bx	lr

90016134 <_ZN8touchgfx9DragEventD1Ev>:
90016134:	4770      	bx	lr

90016136 <_ZN8touchgfx10ClickEventD1Ev>:
90016136:	4770      	bx	lr

90016138 <_ZN8touchgfx10ClickEventD0Ev>:
90016138:	b510      	push	{r4, lr}
9001613a:	4604      	mov	r4, r0
9001613c:	210c      	movs	r1, #12
9001613e:	f00f fed8 	bl	90025ef2 <_ZdlPvj>
90016142:	4620      	mov	r0, r4
90016144:	bd10      	pop	{r4, pc}

90016146 <_ZN8touchgfx9DragEventD0Ev>:
90016146:	b510      	push	{r4, lr}
90016148:	4604      	mov	r4, r0
9001614a:	2110      	movs	r1, #16
9001614c:	f00f fed1 	bl	90025ef2 <_ZdlPvj>
90016150:	4620      	mov	r0, r4
90016152:	bd10      	pop	{r4, pc}

90016154 <_ZN8touchgfx12GestureEventD0Ev>:
90016154:	b510      	push	{r4, lr}
90016156:	4604      	mov	r4, r0
90016158:	210c      	movs	r1, #12
9001615a:	f00f feca 	bl	90025ef2 <_ZdlPvj>
9001615e:	4620      	mov	r0, r4
90016160:	bd10      	pop	{r4, pc}

90016162 <_ZN8touchgfx6ScreenD0Ev>:
90016162:	b510      	push	{r4, lr}
90016164:	4604      	mov	r4, r0
90016166:	213c      	movs	r1, #60	; 0x3c
90016168:	f00f fec3 	bl	90025ef2 <_ZdlPvj>
9001616c:	4620      	mov	r0, r4
9001616e:	bd10      	pop	{r4, pc}

90016170 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
90016170:	b530      	push	{r4, r5, lr}
90016172:	460d      	mov	r5, r1
90016174:	6b01      	ldr	r1, [r0, #48]	; 0x30
90016176:	b087      	sub	sp, #28
90016178:	4604      	mov	r4, r0
9001617a:	b301      	cbz	r1, 900161be <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
9001617c:	a801      	add	r0, sp, #4
9001617e:	f7ff fe7f 	bl	90015e80 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90016182:	892a      	ldrh	r2, [r5, #8]
90016184:	f8bd 3004 	ldrh.w	r3, [sp, #4]
90016188:	7928      	ldrb	r0, [r5, #4]
9001618a:	1ad2      	subs	r2, r2, r3
9001618c:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
9001618e:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
90016192:	441a      	add	r2, r3
90016194:	896b      	ldrh	r3, [r5, #10]
90016196:	f8bd 5006 	ldrh.w	r5, [sp, #6]
9001619a:	f88d 0010 	strb.w	r0, [sp, #16]
9001619e:	1b5b      	subs	r3, r3, r5
900161a0:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
900161a2:	6b20      	ldr	r0, [r4, #48]	; 0x30
900161a4:	442b      	add	r3, r5
900161a6:	4d07      	ldr	r5, [pc, #28]	; (900161c4 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
900161a8:	f8ad 1012 	strh.w	r1, [sp, #18]
900161ac:	a903      	add	r1, sp, #12
900161ae:	9503      	str	r5, [sp, #12]
900161b0:	f8ad 2014 	strh.w	r2, [sp, #20]
900161b4:	f8ad 3016 	strh.w	r3, [sp, #22]
900161b8:	6803      	ldr	r3, [r0, #0]
900161ba:	6c9b      	ldr	r3, [r3, #72]	; 0x48
900161bc:	4798      	blx	r3
900161be:	b007      	add	sp, #28
900161c0:	bd30      	pop	{r4, r5, pc}
900161c2:	bf00      	nop
900161c4:	9002a4e4 	.word	0x9002a4e4

900161c8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
900161c8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900161cc:	6b03      	ldr	r3, [r0, #48]	; 0x30
900161ce:	b08a      	sub	sp, #40	; 0x28
900161d0:	4604      	mov	r4, r0
900161d2:	460d      	mov	r5, r1
900161d4:	b113      	cbz	r3, 900161dc <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
900161d6:	790b      	ldrb	r3, [r1, #4]
900161d8:	2b00      	cmp	r3, #0
900161da:	d044      	beq.n	90016266 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
900161dc:	f104 0804 	add.w	r8, r4, #4
900161e0:	a803      	add	r0, sp, #12
900161e2:	4641      	mov	r1, r8
900161e4:	f7ff fe4c 	bl	90015e80 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900161e8:	792b      	ldrb	r3, [r5, #4]
900161ea:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
900161ee:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
900161f2:	b983      	cbnz	r3, 90016216 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
900161f4:	f104 0336 	add.w	r3, r4, #54	; 0x36
900161f8:	892a      	ldrh	r2, [r5, #8]
900161fa:	88e9      	ldrh	r1, [r5, #6]
900161fc:	4640      	mov	r0, r8
900161fe:	1b92      	subs	r2, r2, r6
90016200:	9301      	str	r3, [sp, #4]
90016202:	1bc9      	subs	r1, r1, r7
90016204:	f104 0334 	add.w	r3, r4, #52	; 0x34
90016208:	b212      	sxth	r2, r2
9001620a:	9300      	str	r3, [sp, #0]
9001620c:	b209      	sxth	r1, r1
9001620e:	f104 0330 	add.w	r3, r4, #48	; 0x30
90016212:	f7f9 fd1f 	bl	9000fc54 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
90016216:	6b21      	ldr	r1, [r4, #48]	; 0x30
90016218:	b329      	cbz	r1, 90016266 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
9001621a:	a805      	add	r0, sp, #20
9001621c:	f7ff fe30 	bl	90015e80 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90016220:	f8bd 2014 	ldrh.w	r2, [sp, #20]
90016224:	792b      	ldrb	r3, [r5, #4]
90016226:	a907      	add	r1, sp, #28
90016228:	1abf      	subs	r7, r7, r2
9001622a:	88ea      	ldrh	r2, [r5, #6]
9001622c:	6b20      	ldr	r0, [r4, #48]	; 0x30
9001622e:	4417      	add	r7, r2
90016230:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
90016232:	f88d 3020 	strb.w	r3, [sp, #32]
90016236:	4417      	add	r7, r2
90016238:	f8bd 2016 	ldrh.w	r2, [sp, #22]
9001623c:	1ab6      	subs	r6, r6, r2
9001623e:	892a      	ldrh	r2, [r5, #8]
90016240:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
90016244:	4416      	add	r6, r2
90016246:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
90016248:	4416      	add	r6, r2
9001624a:	4a08      	ldr	r2, [pc, #32]	; (9001626c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
9001624c:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
90016250:	2600      	movs	r6, #0
90016252:	9207      	str	r2, [sp, #28]
90016254:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
90016258:	6803      	ldr	r3, [r0, #0]
9001625a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
9001625c:	4798      	blx	r3
9001625e:	792b      	ldrb	r3, [r5, #4]
90016260:	b10b      	cbz	r3, 90016266 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
90016262:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
90016266:	b00a      	add	sp, #40	; 0x28
90016268:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9001626c:	9002a4bc 	.word	0x9002a4bc

90016270 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
90016270:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90016274:	460c      	mov	r4, r1
90016276:	6b01      	ldr	r1, [r0, #48]	; 0x30
90016278:	b088      	sub	sp, #32
9001627a:	4605      	mov	r5, r0
9001627c:	2900      	cmp	r1, #0
9001627e:	d06d      	beq.n	9001635c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
90016280:	4668      	mov	r0, sp
90016282:	f7ff fdfd 	bl	90015e80 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90016286:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
90016288:	88e3      	ldrh	r3, [r4, #6]
9001628a:	f9bd 8000 	ldrsh.w	r8, [sp]
9001628e:	440b      	add	r3, r1
90016290:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
90016294:	b21b      	sxth	r3, r3
90016296:	4543      	cmp	r3, r8
90016298:	db31      	blt.n	900162fe <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
9001629a:	f8bd c004 	ldrh.w	ip, [sp, #4]
9001629e:	44c4      	add	ip, r8
900162a0:	fa0f fc8c 	sxth.w	ip, ip
900162a4:	4563      	cmp	r3, ip
900162a6:	da2a      	bge.n	900162fe <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
900162a8:	8eea      	ldrh	r2, [r5, #54]	; 0x36
900162aa:	8926      	ldrh	r6, [r4, #8]
900162ac:	4416      	add	r6, r2
900162ae:	b236      	sxth	r6, r6
900162b0:	42be      	cmp	r6, r7
900162b2:	db24      	blt.n	900162fe <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
900162b4:	f8bd 0006 	ldrh.w	r0, [sp, #6]
900162b8:	4438      	add	r0, r7
900162ba:	b200      	sxth	r0, r0
900162bc:	4286      	cmp	r6, r0
900162be:	da1e      	bge.n	900162fe <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
900162c0:	8963      	ldrh	r3, [r4, #10]
900162c2:	4419      	add	r1, r3
900162c4:	b209      	sxth	r1, r1
900162c6:	4541      	cmp	r1, r8
900162c8:	db08      	blt.n	900162dc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
900162ca:	4561      	cmp	r1, ip
900162cc:	da06      	bge.n	900162dc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
900162ce:	89a3      	ldrh	r3, [r4, #12]
900162d0:	441a      	add	r2, r3
900162d2:	b212      	sxth	r2, r2
900162d4:	42ba      	cmp	r2, r7
900162d6:	db01      	blt.n	900162dc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
900162d8:	4282      	cmp	r2, r0
900162da:	db10      	blt.n	900162fe <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
900162dc:	4b21      	ldr	r3, [pc, #132]	; (90016364 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
900162de:	a904      	add	r1, sp, #16
900162e0:	6b28      	ldr	r0, [r5, #48]	; 0x30
900162e2:	9304      	str	r3, [sp, #16]
900162e4:	2302      	movs	r3, #2
900162e6:	f88d 3014 	strb.w	r3, [sp, #20]
900162ea:	2300      	movs	r3, #0
900162ec:	f8ad 3016 	strh.w	r3, [sp, #22]
900162f0:	f8ad 3018 	strh.w	r3, [sp, #24]
900162f4:	f8ad 301a 	strh.w	r3, [sp, #26]
900162f8:	6803      	ldr	r3, [r0, #0]
900162fa:	6c5b      	ldr	r3, [r3, #68]	; 0x44
900162fc:	4798      	blx	r3
900162fe:	1d29      	adds	r1, r5, #4
90016300:	a802      	add	r0, sp, #8
90016302:	f7ff fdbd 	bl	90015e80 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90016306:	f8bd 3008 	ldrh.w	r3, [sp, #8]
9001630a:	88e0      	ldrh	r0, [r4, #6]
9001630c:	eba3 0808 	sub.w	r8, r3, r8
90016310:	f8bd 300a 	ldrh.w	r3, [sp, #10]
90016314:	7921      	ldrb	r1, [r4, #4]
90016316:	fa1f f888 	uxth.w	r8, r8
9001631a:	1bdf      	subs	r7, r3, r7
9001631c:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
90016320:	b2bb      	uxth	r3, r7
90016322:	4440      	add	r0, r8
90016324:	8922      	ldrh	r2, [r4, #8]
90016326:	8967      	ldrh	r7, [r4, #10]
90016328:	4460      	add	r0, ip
9001632a:	89a4      	ldrh	r4, [r4, #12]
9001632c:	441a      	add	r2, r3
9001632e:	8eee      	ldrh	r6, [r5, #54]	; 0x36
90016330:	44b8      	add	r8, r7
90016332:	4423      	add	r3, r4
90016334:	f8ad 0016 	strh.w	r0, [sp, #22]
90016338:	4432      	add	r2, r6
9001633a:	44e0      	add	r8, ip
9001633c:	4433      	add	r3, r6
9001633e:	4c0a      	ldr	r4, [pc, #40]	; (90016368 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
90016340:	6b28      	ldr	r0, [r5, #48]	; 0x30
90016342:	f88d 1014 	strb.w	r1, [sp, #20]
90016346:	a904      	add	r1, sp, #16
90016348:	9404      	str	r4, [sp, #16]
9001634a:	f8ad 2018 	strh.w	r2, [sp, #24]
9001634e:	f8ad 801a 	strh.w	r8, [sp, #26]
90016352:	f8ad 301c 	strh.w	r3, [sp, #28]
90016356:	6803      	ldr	r3, [r0, #0]
90016358:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
9001635a:	4798      	blx	r3
9001635c:	b008      	add	sp, #32
9001635e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90016362:	bf00      	nop
90016364:	9002a4bc 	.word	0x9002a4bc
90016368:	9002a4d0 	.word	0x9002a4d0

9001636c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
9001636c:	b537      	push	{r0, r1, r2, r4, r5, lr}
9001636e:	4604      	mov	r4, r0
90016370:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
90016374:	3201      	adds	r2, #1
90016376:	d112      	bne.n	9001639e <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
90016378:	2500      	movs	r5, #0
9001637a:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
9001637e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
90016382:	6803      	ldr	r3, [r0, #0]
90016384:	9500      	str	r5, [sp, #0]
90016386:	466d      	mov	r5, sp
90016388:	f8ad 1004 	strh.w	r1, [sp, #4]
9001638c:	f8ad 2006 	strh.w	r2, [sp, #6]
90016390:	4629      	mov	r1, r5
90016392:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90016394:	4798      	blx	r3
90016396:	e895 0003 	ldmia.w	r5, {r0, r1}
9001639a:	e884 0003 	stmia.w	r4, {r0, r1}
9001639e:	4620      	mov	r0, r4
900163a0:	b003      	add	sp, #12
900163a2:	bd30      	pop	{r4, r5, pc}

900163a4 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
900163a4:	b513      	push	{r0, r1, r4, lr}
900163a6:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
900163aa:	4604      	mov	r4, r0
900163ac:	3301      	adds	r3, #1
900163ae:	d109      	bne.n	900163c4 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
900163b0:	4601      	mov	r1, r0
900163b2:	4668      	mov	r0, sp
900163b4:	f7ff fd64 	bl	90015e80 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900163b8:	f8bd 3000 	ldrh.w	r3, [sp]
900163bc:	8423      	strh	r3, [r4, #32]
900163be:	f8bd 3002 	ldrh.w	r3, [sp, #2]
900163c2:	8463      	strh	r3, [r4, #34]	; 0x22
900163c4:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
900163c8:	b002      	add	sp, #8
900163ca:	bd10      	pop	{r4, pc}

900163cc <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
900163cc:	b513      	push	{r0, r1, r4, lr}
900163ce:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
900163d2:	4604      	mov	r4, r0
900163d4:	3301      	adds	r3, #1
900163d6:	d109      	bne.n	900163ec <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
900163d8:	4601      	mov	r1, r0
900163da:	4668      	mov	r0, sp
900163dc:	f7ff fd50 	bl	90015e80 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900163e0:	f8bd 3000 	ldrh.w	r3, [sp]
900163e4:	8423      	strh	r3, [r4, #32]
900163e6:	f8bd 3002 	ldrh.w	r3, [sp, #2]
900163ea:	8463      	strh	r3, [r4, #34]	; 0x22
900163ec:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
900163f0:	b002      	add	sp, #8
900163f2:	bd10      	pop	{r4, pc}

900163f4 <_ZN8touchgfx6ScreenC1Ev>:
900163f4:	b570      	push	{r4, r5, r6, lr}
900163f6:	4b17      	ldr	r3, [pc, #92]	; (90016454 <_ZN8touchgfx6ScreenC1Ev+0x60>)
900163f8:	4605      	mov	r5, r0
900163fa:	4a17      	ldr	r2, [pc, #92]	; (90016458 <_ZN8touchgfx6ScreenC1Ev+0x64>)
900163fc:	2101      	movs	r1, #1
900163fe:	f845 3b04 	str.w	r3, [r5], #4
90016402:	2300      	movs	r3, #0
90016404:	6042      	str	r2, [r0, #4]
90016406:	4604      	mov	r4, r0
90016408:	8103      	strh	r3, [r0, #8]
9001640a:	8143      	strh	r3, [r0, #10]
9001640c:	8183      	strh	r3, [r0, #12]
9001640e:	81c3      	strh	r3, [r0, #14]
90016410:	8203      	strh	r3, [r0, #16]
90016412:	8243      	strh	r3, [r0, #18]
90016414:	8283      	strh	r3, [r0, #20]
90016416:	82c3      	strh	r3, [r0, #22]
90016418:	6203      	str	r3, [r0, #32]
9001641a:	8483      	strh	r3, [r0, #36]	; 0x24
9001641c:	84c3      	strh	r3, [r0, #38]	; 0x26
9001641e:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
90016422:	6343      	str	r3, [r0, #52]	; 0x34
90016424:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
90016428:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
9001642c:	e9c0 3306 	strd	r3, r3, [r0, #24]
90016430:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
90016434:	4b09      	ldr	r3, [pc, #36]	; (9001645c <_ZN8touchgfx6ScreenC1Ev+0x68>)
90016436:	4628      	mov	r0, r5
90016438:	f9b3 6000 	ldrsh.w	r6, [r3]
9001643c:	6b93      	ldr	r3, [r2, #56]	; 0x38
9001643e:	4a08      	ldr	r2, [pc, #32]	; (90016460 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
90016440:	f9b2 1000 	ldrsh.w	r1, [r2]
90016444:	4798      	blx	r3
90016446:	6863      	ldr	r3, [r4, #4]
90016448:	4628      	mov	r0, r5
9001644a:	4631      	mov	r1, r6
9001644c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
9001644e:	4798      	blx	r3
90016450:	4620      	mov	r0, r4
90016452:	bd70      	pop	{r4, r5, r6, pc}
90016454:	9002a4f8 	.word	0x9002a4f8
90016458:	90029e0c 	.word	0x90029e0c
9001645c:	24023572 	.word	0x24023572
90016460:	24023570 	.word	0x24023570

90016464 <_ZN8touchgfx6Screen4drawEv>:
90016464:	4b09      	ldr	r3, [pc, #36]	; (9001648c <_ZN8touchgfx6Screen4drawEv+0x28>)
90016466:	b507      	push	{r0, r1, r2, lr}
90016468:	f9b3 2000 	ldrsh.w	r2, [r3]
9001646c:	2100      	movs	r1, #0
9001646e:	4b08      	ldr	r3, [pc, #32]	; (90016490 <_ZN8touchgfx6Screen4drawEv+0x2c>)
90016470:	9100      	str	r1, [sp, #0]
90016472:	4669      	mov	r1, sp
90016474:	f9b3 3000 	ldrsh.w	r3, [r3]
90016478:	f8ad 2004 	strh.w	r2, [sp, #4]
9001647c:	f8ad 3006 	strh.w	r3, [sp, #6]
90016480:	6803      	ldr	r3, [r0, #0]
90016482:	689b      	ldr	r3, [r3, #8]
90016484:	4798      	blx	r3
90016486:	b003      	add	sp, #12
90016488:	f85d fb04 	ldr.w	pc, [sp], #4
9001648c:	24023570 	.word	0x24023570
90016490:	24023572 	.word	0x24023572

90016494 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
90016494:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90016498:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
9001649c:	b089      	sub	sp, #36	; 0x24
9001649e:	4680      	mov	r8, r0
900164a0:	460c      	mov	r4, r1
900164a2:	2b00      	cmp	r3, #0
900164a4:	4615      	mov	r5, r2
900164a6:	dd0e      	ble.n	900164c6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
900164a8:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
900164ac:	2b00      	cmp	r3, #0
900164ae:	dd0a      	ble.n	900164c6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
900164b0:	4628      	mov	r0, r5
900164b2:	f7ff ff5b 	bl	9001636c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
900164b6:	4621      	mov	r1, r4
900164b8:	f7fe faef 	bl	90014a9a <_ZNK8touchgfx4Rect9intersectERKS0_>
900164bc:	69eb      	ldr	r3, [r5, #28]
900164be:	b928      	cbnz	r0, 900164cc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
900164c0:	461d      	mov	r5, r3
900164c2:	2b00      	cmp	r3, #0
900164c4:	d1f4      	bne.n	900164b0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
900164c6:	b009      	add	sp, #36	; 0x24
900164c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900164cc:	ae04      	add	r6, sp, #16
900164ce:	2b00      	cmp	r3, #0
900164d0:	f000 80b5 	beq.w	9001663e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
900164d4:	682b      	ldr	r3, [r5, #0]
900164d6:	4629      	mov	r1, r5
900164d8:	a802      	add	r0, sp, #8
900164da:	68db      	ldr	r3, [r3, #12]
900164dc:	4798      	blx	r3
900164de:	4628      	mov	r0, r5
900164e0:	f7ff ff60 	bl	900163a4 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
900164e4:	f8bd 7008 	ldrh.w	r7, [sp, #8]
900164e8:	4407      	add	r7, r0
900164ea:	4628      	mov	r0, r5
900164ec:	f7ff ff6e 	bl	900163cc <_ZN8touchgfx8Drawable13getCachedAbsYEv>
900164f0:	f8bd 300a 	ldrh.w	r3, [sp, #10]
900164f4:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
900164f8:	b23f      	sxth	r7, r7
900164fa:	4418      	add	r0, r3
900164fc:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
90016500:	4621      	mov	r1, r4
90016502:	f8ad 2014 	strh.w	r2, [sp, #20]
90016506:	f8ad 0012 	strh.w	r0, [sp, #18]
9001650a:	4630      	mov	r0, r6
9001650c:	f8ad 3016 	strh.w	r3, [sp, #22]
90016510:	f8ad 7010 	strh.w	r7, [sp, #16]
90016514:	f7f9 fc80 	bl	9000fe18 <_ZN8touchgfx4RectaNERKS0_>
90016518:	4628      	mov	r0, r5
9001651a:	f7ff ff27 	bl	9001636c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
9001651e:	ab06      	add	r3, sp, #24
90016520:	4602      	mov	r2, r0
90016522:	e896 0003 	ldmia.w	r6, {r0, r1}
90016526:	e883 0003 	stmia.w	r3, {r0, r1}
9001652a:	4611      	mov	r1, r2
9001652c:	4618      	mov	r0, r3
9001652e:	f7f9 fc73 	bl	9000fe18 <_ZN8touchgfx4RectaNERKS0_>
90016532:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
90016536:	f9b4 1000 	ldrsh.w	r1, [r4]
9001653a:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
9001653e:	4299      	cmp	r1, r3
90016540:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
90016544:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
90016548:	d10b      	bne.n	90016562 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
9001654a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
9001654e:	4552      	cmp	r2, sl
90016550:	d107      	bne.n	90016562 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
90016552:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
90016556:	455a      	cmp	r2, fp
90016558:	d103      	bne.n	90016562 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
9001655a:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
9001655e:	454a      	cmp	r2, r9
90016560:	d06d      	beq.n	9001663e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
90016562:	f1bb 0f00 	cmp.w	fp, #0
90016566:	dd65      	ble.n	90016634 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
90016568:	f1b9 0f00 	cmp.w	r9, #0
9001656c:	dd62      	ble.n	90016634 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
9001656e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
90016572:	fa1f f08a 	uxth.w	r0, sl
90016576:	4552      	cmp	r2, sl
90016578:	9000      	str	r0, [sp, #0]
9001657a:	da12      	bge.n	900165a2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
9001657c:	9301      	str	r3, [sp, #4]
9001657e:	9b00      	ldr	r3, [sp, #0]
90016580:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
90016584:	f8ad 2012 	strh.w	r2, [sp, #18]
90016588:	1a9a      	subs	r2, r3, r2
9001658a:	f8ad 1010 	strh.w	r1, [sp, #16]
9001658e:	4631      	mov	r1, r6
90016590:	f8ad 0014 	strh.w	r0, [sp, #20]
90016594:	4640      	mov	r0, r8
90016596:	f8ad 2016 	strh.w	r2, [sp, #22]
9001659a:	69ea      	ldr	r2, [r5, #28]
9001659c:	f7ff ff7a 	bl	90016494 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
900165a0:	9b01      	ldr	r3, [sp, #4]
900165a2:	f9b4 2000 	ldrsh.w	r2, [r4]
900165a6:	b29f      	uxth	r7, r3
900165a8:	429a      	cmp	r2, r3
900165aa:	da0d      	bge.n	900165c8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
900165ac:	f8ad 2010 	strh.w	r2, [sp, #16]
900165b0:	1aba      	subs	r2, r7, r2
900165b2:	f8ad a012 	strh.w	sl, [sp, #18]
900165b6:	4631      	mov	r1, r6
900165b8:	f8ad 2014 	strh.w	r2, [sp, #20]
900165bc:	4640      	mov	r0, r8
900165be:	f8ad 9016 	strh.w	r9, [sp, #22]
900165c2:	69ea      	ldr	r2, [r5, #28]
900165c4:	f7ff ff66 	bl	90016494 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
900165c8:	8822      	ldrh	r2, [r4, #0]
900165ca:	445f      	add	r7, fp
900165cc:	88a3      	ldrh	r3, [r4, #4]
900165ce:	b2bf      	uxth	r7, r7
900165d0:	4413      	add	r3, r2
900165d2:	b23a      	sxth	r2, r7
900165d4:	b29b      	uxth	r3, r3
900165d6:	b219      	sxth	r1, r3
900165d8:	4291      	cmp	r1, r2
900165da:	dd0d      	ble.n	900165f8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
900165dc:	1bdb      	subs	r3, r3, r7
900165de:	f8ad 2010 	strh.w	r2, [sp, #16]
900165e2:	f8ad a012 	strh.w	sl, [sp, #18]
900165e6:	4631      	mov	r1, r6
900165e8:	f8ad 3014 	strh.w	r3, [sp, #20]
900165ec:	4640      	mov	r0, r8
900165ee:	f8ad 9016 	strh.w	r9, [sp, #22]
900165f2:	69ea      	ldr	r2, [r5, #28]
900165f4:	f7ff ff4e 	bl	90016494 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
900165f8:	88e2      	ldrh	r2, [r4, #6]
900165fa:	8863      	ldrh	r3, [r4, #2]
900165fc:	4413      	add	r3, r2
900165fe:	9a00      	ldr	r2, [sp, #0]
90016600:	444a      	add	r2, r9
90016602:	b29b      	uxth	r3, r3
90016604:	fa1f f982 	uxth.w	r9, r2
90016608:	b219      	sxth	r1, r3
9001660a:	fa0f f289 	sxth.w	r2, r9
9001660e:	428a      	cmp	r2, r1
90016610:	da15      	bge.n	9001663e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
90016612:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
90016616:	eba3 0309 	sub.w	r3, r3, r9
9001661a:	f9b4 0000 	ldrsh.w	r0, [r4]
9001661e:	f8ad 1014 	strh.w	r1, [sp, #20]
90016622:	4631      	mov	r1, r6
90016624:	f8ad 0010 	strh.w	r0, [sp, #16]
90016628:	f8ad 2012 	strh.w	r2, [sp, #18]
9001662c:	f8ad 3016 	strh.w	r3, [sp, #22]
90016630:	69ea      	ldr	r2, [r5, #28]
90016632:	e001      	b.n	90016638 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
90016634:	69ea      	ldr	r2, [r5, #28]
90016636:	4621      	mov	r1, r4
90016638:	4640      	mov	r0, r8
9001663a:	f7ff ff2b 	bl	90016494 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
9001663e:	4628      	mov	r0, r5
90016640:	f7ff fe94 	bl	9001636c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
90016644:	6861      	ldr	r1, [r4, #4]
90016646:	4602      	mov	r2, r0
90016648:	4633      	mov	r3, r6
9001664a:	6820      	ldr	r0, [r4, #0]
9001664c:	c303      	stmia	r3!, {r0, r1}
9001664e:	4611      	mov	r1, r2
90016650:	4630      	mov	r0, r6
90016652:	f7f9 fbe1 	bl	9000fe18 <_ZN8touchgfx4RectaNERKS0_>
90016656:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
9001665a:	2b00      	cmp	r3, #0
9001665c:	f77f af33 	ble.w	900164c6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
90016660:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
90016664:	2b00      	cmp	r3, #0
90016666:	f77f af2e 	ble.w	900164c6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
9001666a:	4628      	mov	r0, r5
9001666c:	f7ff fe9a 	bl	900163a4 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
90016670:	f8bd 3010 	ldrh.w	r3, [sp, #16]
90016674:	1a18      	subs	r0, r3, r0
90016676:	f8ad 0010 	strh.w	r0, [sp, #16]
9001667a:	4628      	mov	r0, r5
9001667c:	f7ff fea6 	bl	900163cc <_ZN8touchgfx8Drawable13getCachedAbsYEv>
90016680:	f8bd 3012 	ldrh.w	r3, [sp, #18]
90016684:	4631      	mov	r1, r6
90016686:	1a18      	subs	r0, r3, r0
90016688:	f8ad 0012 	strh.w	r0, [sp, #18]
9001668c:	4628      	mov	r0, r5
9001668e:	682b      	ldr	r3, [r5, #0]
90016690:	689b      	ldr	r3, [r3, #8]
90016692:	4798      	blx	r3
90016694:	e717      	b.n	900164c6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

90016696 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
90016696:	b570      	push	{r4, r5, r6, lr}
90016698:	1d06      	adds	r6, r0, #4
9001669a:	b086      	sub	sp, #24
9001669c:	460c      	mov	r4, r1
9001669e:	2300      	movs	r3, #0
900166a0:	4631      	mov	r1, r6
900166a2:	4605      	mov	r5, r0
900166a4:	a802      	add	r0, sp, #8
900166a6:	9301      	str	r3, [sp, #4]
900166a8:	f7ff fbea 	bl	90015e80 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900166ac:	f8bd 3008 	ldrh.w	r3, [sp, #8]
900166b0:	8822      	ldrh	r2, [r4, #0]
900166b2:	f8bd 100a 	ldrh.w	r1, [sp, #10]
900166b6:	1ad2      	subs	r2, r2, r3
900166b8:	8863      	ldrh	r3, [r4, #2]
900166ba:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
900166be:	1a5b      	subs	r3, r3, r1
900166c0:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
900166c4:	f8ad 2010 	strh.w	r2, [sp, #16]
900166c8:	aa01      	add	r2, sp, #4
900166ca:	f8ad 0014 	strh.w	r0, [sp, #20]
900166ce:	4630      	mov	r0, r6
900166d0:	f8ad 1016 	strh.w	r1, [sp, #22]
900166d4:	a904      	add	r1, sp, #16
900166d6:	f8ad 3012 	strh.w	r3, [sp, #18]
900166da:	f7f9 fc75 	bl	9000ffc8 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
900166de:	9a01      	ldr	r2, [sp, #4]
900166e0:	b11a      	cbz	r2, 900166ea <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
900166e2:	4621      	mov	r1, r4
900166e4:	4628      	mov	r0, r5
900166e6:	f7ff fed5 	bl	90016494 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
900166ea:	b006      	add	sp, #24
900166ec:	bd70      	pop	{r4, r5, r6, pc}

900166ee <_ZN8touchgfx6Screen4drawERNS_4RectE>:
900166ee:	4602      	mov	r2, r0
900166f0:	b530      	push	{r4, r5, lr}
900166f2:	4604      	mov	r4, r0
900166f4:	b085      	sub	sp, #20
900166f6:	f852 0f08 	ldr.w	r0, [r2, #8]!
900166fa:	460d      	mov	r5, r1
900166fc:	466b      	mov	r3, sp
900166fe:	6851      	ldr	r1, [r2, #4]
90016700:	c303      	stmia	r3!, {r0, r1}
90016702:	4629      	mov	r1, r5
90016704:	4668      	mov	r0, sp
90016706:	f7f9 fb87 	bl	9000fe18 <_ZN8touchgfx4RectaNERKS0_>
9001670a:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
9001670e:	b12b      	cbz	r3, 9001671c <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
90016710:	4669      	mov	r1, sp
90016712:	4620      	mov	r0, r4
90016714:	f7ff ffbf 	bl	90016696 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
90016718:	b005      	add	sp, #20
9001671a:	bd30      	pop	{r4, r5, pc}
9001671c:	3404      	adds	r4, #4
9001671e:	a802      	add	r0, sp, #8
90016720:	4621      	mov	r1, r4
90016722:	f7ff fbad 	bl	90015e80 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90016726:	f8bd 3000 	ldrh.w	r3, [sp]
9001672a:	f8bd 2008 	ldrh.w	r2, [sp, #8]
9001672e:	4669      	mov	r1, sp
90016730:	4620      	mov	r0, r4
90016732:	1a9b      	subs	r3, r3, r2
90016734:	f8bd 200a 	ldrh.w	r2, [sp, #10]
90016738:	f8ad 3000 	strh.w	r3, [sp]
9001673c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90016740:	1a9b      	subs	r3, r3, r2
90016742:	f8ad 3002 	strh.w	r3, [sp, #2]
90016746:	f7f9 fc06 	bl	9000ff56 <_ZNK8touchgfx9Container4drawERKNS_4RectE>
9001674a:	e7e5      	b.n	90016718 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

9001674c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
9001674c:	460b      	mov	r3, r1
9001674e:	680a      	ldr	r2, [r1, #0]
90016750:	1d01      	adds	r1, r0, #4
90016752:	6992      	ldr	r2, [r2, #24]
90016754:	4618      	mov	r0, r3
90016756:	4710      	bx	r2

90016758 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
90016758:	4298      	cmp	r0, r3
9001675a:	d200      	bcs.n	9001675e <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
9001675c:	b913      	cbnz	r3, 90016764 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
9001675e:	440a      	add	r2, r1
90016760:	b210      	sxth	r0, r2
90016762:	4770      	bx	lr
90016764:	ee07 0a90 	vmov	s15, r0
90016768:	eef8 6a67 	vcvt.f32.u32	s13, s15
9001676c:	ee07 3a90 	vmov	s15, r3
90016770:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90016774:	ee86 7aa7 	vdiv.f32	s14, s13, s15
90016778:	ee07 2a90 	vmov	s15, r2
9001677c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
90016780:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
90016784:	ee07 1a90 	vmov	s15, r1
90016788:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001678c:	ee37 7a66 	vsub.f32	s14, s14, s13
90016790:	ee67 5a07 	vmul.f32	s11, s14, s14
90016794:	eee5 6a87 	vfma.f32	s13, s11, s14
90016798:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
9001679c:	eee6 7a26 	vfma.f32	s15, s12, s13
900167a0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
900167a4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900167a8:	bfcc      	ite	gt
900167aa:	ee77 7a87 	vaddgt.f32	s15, s15, s14
900167ae:	ee77 7ac7 	vsuble.f32	s15, s15, s14
900167b2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
900167b6:	ee17 3a90 	vmov	r3, s15
900167ba:	b218      	sxth	r0, r3
900167bc:	4770      	bx	lr

900167be <_ZN8touchgfx12TextProviderC1Ev>:
900167be:	b538      	push	{r3, r4, r5, lr}
900167c0:	2500      	movs	r5, #0
900167c2:	2302      	movs	r3, #2
900167c4:	4604      	mov	r4, r0
900167c6:	220e      	movs	r2, #14
900167c8:	7403      	strb	r3, [r0, #16]
900167ca:	4629      	mov	r1, r5
900167cc:	6145      	str	r5, [r0, #20]
900167ce:	7605      	strb	r5, [r0, #24]
900167d0:	83c5      	strh	r5, [r0, #30]
900167d2:	8405      	strh	r5, [r0, #32]
900167d4:	86c5      	strh	r5, [r0, #54]	; 0x36
900167d6:	8705      	strh	r5, [r0, #56]	; 0x38
900167d8:	87c5      	strh	r5, [r0, #62]	; 0x3e
900167da:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
900167de:	e9c0 5500 	strd	r5, r5, [r0]
900167e2:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
900167e6:	304c      	adds	r0, #76	; 0x4c
900167e8:	f00f fe8a 	bl	90026500 <memset>
900167ec:	2301      	movs	r3, #1
900167ee:	4620      	mov	r0, r4
900167f0:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
900167f4:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
900167f8:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
900167fc:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
90016800:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
90016804:	f7ed ff24 	bl	90004650 <_ZN8touchgfx12TextProvider18initializeInternalEv>
90016808:	4620      	mov	r0, r4
9001680a:	bd38      	pop	{r3, r4, r5, pc}

9001680c <_ZN8touchgfx12TextProvider11endOfStringEv>:
9001680c:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
9001680e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90016812:	8c40      	ldrh	r0, [r0, #34]	; 0x22
90016814:	fab0 f080 	clz	r0, r0
90016818:	0940      	lsrs	r0, r0, #5
9001681a:	4770      	bx	lr

9001681c <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
9001681c:	b530      	push	{r4, r5, lr}
9001681e:	2500      	movs	r5, #0
90016820:	2401      	movs	r4, #1
90016822:	6843      	ldr	r3, [r0, #4]
90016824:	b913      	cbnz	r3, 9001682c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
90016826:	6803      	ldr	r3, [r0, #0]
90016828:	b313      	cbz	r3, 90016870 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
9001682a:	6043      	str	r3, [r0, #4]
9001682c:	7e03      	ldrb	r3, [r0, #24]
9001682e:	b143      	cbz	r3, 90016842 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
90016830:	6943      	ldr	r3, [r0, #20]
90016832:	b12b      	cbz	r3, 90016840 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
90016834:	881a      	ldrh	r2, [r3, #0]
90016836:	b11a      	cbz	r2, 90016840 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
90016838:	1c9a      	adds	r2, r3, #2
9001683a:	6142      	str	r2, [r0, #20]
9001683c:	8818      	ldrh	r0, [r3, #0]
9001683e:	bd30      	pop	{r4, r5, pc}
90016840:	7605      	strb	r5, [r0, #24]
90016842:	6843      	ldr	r3, [r0, #4]
90016844:	8819      	ldrh	r1, [r3, #0]
90016846:	b199      	cbz	r1, 90016870 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
90016848:	1c9a      	adds	r2, r3, #2
9001684a:	2902      	cmp	r1, #2
9001684c:	6042      	str	r2, [r0, #4]
9001684e:	d1f5      	bne.n	9001683c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
90016850:	7c03      	ldrb	r3, [r0, #16]
90016852:	2b01      	cmp	r3, #1
90016854:	d8e5      	bhi.n	90016822 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
90016856:	1c5a      	adds	r2, r3, #1
90016858:	3302      	adds	r3, #2
9001685a:	7402      	strb	r2, [r0, #16]
9001685c:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
90016860:	6143      	str	r3, [r0, #20]
90016862:	2b00      	cmp	r3, #0
90016864:	d0dd      	beq.n	90016822 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
90016866:	881b      	ldrh	r3, [r3, #0]
90016868:	2b00      	cmp	r3, #0
9001686a:	d0da      	beq.n	90016822 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
9001686c:	7604      	strb	r4, [r0, #24]
9001686e:	e7d8      	b.n	90016822 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
90016870:	2000      	movs	r0, #0
90016872:	e7e4      	b.n	9001683e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

90016874 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
90016874:	6001      	str	r1, [r0, #0]
90016876:	2100      	movs	r1, #0
90016878:	b430      	push	{r4, r5}
9001687a:	6041      	str	r1, [r0, #4]
9001687c:	6815      	ldr	r5, [r2, #0]
9001687e:	6085      	str	r5, [r0, #8]
90016880:	6852      	ldr	r2, [r2, #4]
90016882:	6443      	str	r3, [r0, #68]	; 0x44
90016884:	9b02      	ldr	r3, [sp, #8]
90016886:	60c2      	str	r2, [r0, #12]
90016888:	7401      	strb	r1, [r0, #16]
9001688a:	6141      	str	r1, [r0, #20]
9001688c:	7601      	strb	r1, [r0, #24]
9001688e:	8701      	strh	r1, [r0, #56]	; 0x38
90016890:	8401      	strh	r1, [r0, #32]
90016892:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
90016896:	6483      	str	r3, [r0, #72]	; 0x48
90016898:	bc30      	pop	{r4, r5}
9001689a:	f7ed bed9 	b.w	90004650 <_ZN8touchgfx12TextProvider18initializeInternalEv>

9001689e <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
9001689e:	b408      	push	{r3}
900168a0:	b510      	push	{r4, lr}
900168a2:	b085      	sub	sp, #20
900168a4:	ac07      	add	r4, sp, #28
900168a6:	f854 3b04 	ldr.w	r3, [r4], #4
900168aa:	9300      	str	r3, [sp, #0]
900168ac:	4613      	mov	r3, r2
900168ae:	4622      	mov	r2, r4
900168b0:	9403      	str	r4, [sp, #12]
900168b2:	f7ff ffdf 	bl	90016874 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
900168b6:	b005      	add	sp, #20
900168b8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900168bc:	b001      	add	sp, #4
900168be:	4770      	bx	lr

900168c0 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
900168c0:	b5f0      	push	{r4, r5, r6, r7, lr}
900168c2:	4605      	mov	r5, r0
900168c4:	4608      	mov	r0, r1
900168c6:	b1f1      	cbz	r1, 90016906 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x46>
900168c8:	f105 044c 	add.w	r4, r5, #76	; 0x4c
900168cc:	460b      	mov	r3, r1
900168ce:	f101 0708 	add.w	r7, r1, #8
900168d2:	4622      	mov	r2, r4
900168d4:	6818      	ldr	r0, [r3, #0]
900168d6:	3308      	adds	r3, #8
900168d8:	f853 1c04 	ldr.w	r1, [r3, #-4]
900168dc:	4626      	mov	r6, r4
900168de:	42bb      	cmp	r3, r7
900168e0:	c603      	stmia	r6!, {r0, r1}
900168e2:	4634      	mov	r4, r6
900168e4:	d1f6      	bne.n	900168d4 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
900168e6:	6818      	ldr	r0, [r3, #0]
900168e8:	6030      	str	r0, [r6, #0]
900168ea:	4610      	mov	r0, r2
900168ec:	889b      	ldrh	r3, [r3, #4]
900168ee:	80b3      	strh	r3, [r6, #4]
900168f0:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
900168f4:	015b      	lsls	r3, r3, #5
900168f6:	f403 7180 	and.w	r1, r3, #256	; 0x100
900168fa:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
900168fe:	430b      	orrs	r3, r1
90016900:	425b      	negs	r3, r3
90016902:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
90016906:	bdf0      	pop	{r4, r5, r6, r7, pc}

90016908 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
90016908:	b538      	push	{r3, r4, r5, lr}
9001690a:	460c      	mov	r4, r1
9001690c:	6811      	ldr	r1, [r2, #0]
9001690e:	4610      	mov	r0, r2
90016910:	68cd      	ldr	r5, [r1, #12]
90016912:	4619      	mov	r1, r3
90016914:	47a8      	blx	r5
90016916:	2800      	cmp	r0, #0
90016918:	bf08      	it	eq
9001691a:	4620      	moveq	r0, r4
9001691c:	bd38      	pop	{r3, r4, r5, pc}
	...

90016920 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
90016920:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90016922:	4604      	mov	r4, r0
90016924:	4615      	mov	r5, r2
90016926:	4608      	mov	r0, r1
90016928:	b93a      	cbnz	r2, 9001693a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
9001692a:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
9001692e:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
90016932:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
90016936:	4628      	mov	r0, r5
90016938:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9001693a:	f892 c00d 	ldrb.w	ip, [r2, #13]
9001693e:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
90016942:	8893      	ldrh	r3, [r2, #4]
90016944:	ea4f 160c 	mov.w	r6, ip, lsl #4
90016948:	f406 7280 	and.w	r2, r6, #256	; 0x100
9001694c:	79ee      	ldrb	r6, [r5, #7]
9001694e:	4316      	orrs	r6, r2
90016950:	19da      	adds	r2, r3, r7
90016952:	b291      	uxth	r1, r2
90016954:	b2b7      	uxth	r7, r6
90016956:	291d      	cmp	r1, #29
90016958:	d87b      	bhi.n	90016a52 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x132>
9001695a:	2201      	movs	r2, #1
9001695c:	10f6      	asrs	r6, r6, #3
9001695e:	408a      	lsls	r2, r1
90016960:	4974      	ldr	r1, [pc, #464]	; (90016b34 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
90016962:	420a      	tst	r2, r1
90016964:	d12e      	bne.n	900169c4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
90016966:	f412 7f60 	tst.w	r2, #896	; 0x380
9001696a:	d072      	beq.n	90016a52 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x132>
9001696c:	f104 024c 	add.w	r2, r4, #76	; 0x4c
90016970:	462b      	mov	r3, r5
90016972:	f105 0e08 	add.w	lr, r5, #8
90016976:	4615      	mov	r5, r2
90016978:	6818      	ldr	r0, [r3, #0]
9001697a:	3308      	adds	r3, #8
9001697c:	f853 1c04 	ldr.w	r1, [r3, #-4]
90016980:	4694      	mov	ip, r2
90016982:	4573      	cmp	r3, lr
90016984:	e8ac 0003 	stmia.w	ip!, {r0, r1}
90016988:	4662      	mov	r2, ip
9001698a:	d1f5      	bne.n	90016978 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x58>
9001698c:	6818      	ldr	r0, [r3, #0]
9001698e:	f8cc 0000 	str.w	r0, [ip]
90016992:	889b      	ldrh	r3, [r3, #4]
90016994:	f8ac 3004 	strh.w	r3, [ip, #4]
90016998:	b2b3      	uxth	r3, r6
9001699a:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
9001699e:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
900169a2:	1aca      	subs	r2, r1, r3
900169a4:	1bcf      	subs	r7, r1, r7
900169a6:	f020 0060 	bic.w	r0, r0, #96	; 0x60
900169aa:	b292      	uxth	r2, r2
900169ac:	1afb      	subs	r3, r7, r3
900169ae:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
900169b2:	10d2      	asrs	r2, r2, #3
900169b4:	f002 0260 	and.w	r2, r2, #96	; 0x60
900169b8:	4302      	orrs	r2, r0
900169ba:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
900169be:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
900169c2:	e7b8      	b.n	90016936 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
900169c4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
900169c6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
900169ca:	8c59      	ldrh	r1, [r3, #34]	; 0x22
900169cc:	f640 6333 	movw	r3, #3635	; 0xe33
900169d0:	4299      	cmp	r1, r3
900169d2:	d110      	bne.n	900169f6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
900169d4:	6803      	ldr	r3, [r0, #0]
900169d6:	68db      	ldr	r3, [r3, #12]
900169d8:	4798      	blx	r3
900169da:	7b41      	ldrb	r1, [r0, #13]
900169dc:	00cb      	lsls	r3, r1, #3
900169de:	f403 7280 	and.w	r2, r3, #256	; 0x100
900169e2:	7a03      	ldrb	r3, [r0, #8]
900169e4:	0648      	lsls	r0, r1, #25
900169e6:	ea43 0302 	orr.w	r3, r3, r2
900169ea:	bf44      	itt	mi
900169ec:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
900169f0:	b21b      	sxthmi	r3, r3
900169f2:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
900169f6:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
900169fa:	462a      	mov	r2, r5
900169fc:	f105 0c08 	add.w	ip, r5, #8
90016a00:	443b      	add	r3, r7
90016a02:	4433      	add	r3, r6
90016a04:	f104 064c 	add.w	r6, r4, #76	; 0x4c
90016a08:	b29b      	uxth	r3, r3
90016a0a:	4635      	mov	r5, r6
90016a0c:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
90016a10:	6810      	ldr	r0, [r2, #0]
90016a12:	3208      	adds	r2, #8
90016a14:	f852 1c04 	ldr.w	r1, [r2, #-4]
90016a18:	4637      	mov	r7, r6
90016a1a:	4562      	cmp	r2, ip
90016a1c:	c703      	stmia	r7!, {r0, r1}
90016a1e:	463e      	mov	r6, r7
90016a20:	d1f6      	bne.n	90016a10 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
90016a22:	6810      	ldr	r0, [r2, #0]
90016a24:	6038      	str	r0, [r7, #0]
90016a26:	8892      	ldrh	r2, [r2, #4]
90016a28:	80ba      	strh	r2, [r7, #4]
90016a2a:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
90016a2e:	10db      	asrs	r3, r3, #3
90016a30:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
90016a34:	f003 0360 	and.w	r3, r3, #96	; 0x60
90016a38:	f022 0260 	bic.w	r2, r2, #96	; 0x60
90016a3c:	4313      	orrs	r3, r2
90016a3e:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
90016a42:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
90016a46:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
90016a4a:	1a9b      	subs	r3, r3, r2
90016a4c:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
90016a50:	e771      	b.n	90016936 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
90016a52:	f023 0204 	bic.w	r2, r3, #4
90016a56:	f640 611b 	movw	r1, #3611	; 0xe1b
90016a5a:	428a      	cmp	r2, r1
90016a5c:	d003      	beq.n	90016a66 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x146>
90016a5e:	f640 621d 	movw	r2, #3613	; 0xe1d
90016a62:	4293      	cmp	r3, r2
90016a64:	d120      	bne.n	90016aa8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x188>
90016a66:	3b01      	subs	r3, #1
90016a68:	4602      	mov	r2, r0
90016a6a:	4629      	mov	r1, r5
90016a6c:	4620      	mov	r0, r4
90016a6e:	b29b      	uxth	r3, r3
90016a70:	f7ff ff4a 	bl	90016908 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
90016a74:	7b41      	ldrb	r1, [r0, #13]
90016a76:	00cb      	lsls	r3, r1, #3
90016a78:	0649      	lsls	r1, r1, #25
90016a7a:	f403 7280 	and.w	r2, r3, #256	; 0x100
90016a7e:	7a03      	ldrb	r3, [r0, #8]
90016a80:	ea43 0302 	orr.w	r3, r3, r2
90016a84:	bf44      	itt	mi
90016a86:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
90016a8a:	b21b      	sxthmi	r3, r3
90016a8c:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
90016a90:	7b6b      	ldrb	r3, [r5, #13]
90016a92:	7aaa      	ldrb	r2, [r5, #10]
90016a94:	005b      	lsls	r3, r3, #1
90016a96:	f403 7380 	and.w	r3, r3, #256	; 0x100
90016a9a:	4313      	orrs	r3, r2
90016a9c:	115a      	asrs	r2, r3, #5
90016a9e:	eb02 0393 	add.w	r3, r2, r3, lsr #2
90016aa2:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
90016aa6:	e035      	b.n	90016b14 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
90016aa8:	ea4f 02cc 	mov.w	r2, ip, lsl #3
90016aac:	f01c 0f40 	tst.w	ip, #64	; 0x40
90016ab0:	f402 7180 	and.w	r1, r2, #256	; 0x100
90016ab4:	7a2a      	ldrb	r2, [r5, #8]
90016ab6:	ea42 0201 	orr.w	r2, r2, r1
90016aba:	f640 6109 	movw	r1, #3593	; 0xe09
90016abe:	bf1c      	itt	ne
90016ac0:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
90016ac4:	b212      	sxthne	r2, r2
90016ac6:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
90016aca:	f023 0210 	bic.w	r2, r3, #16
90016ace:	428a      	cmp	r2, r1
90016ad0:	d003      	beq.n	90016ada <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ba>
90016ad2:	f640 6213 	movw	r2, #3603	; 0xe13
90016ad6:	4293      	cmp	r3, r2
90016ad8:	d129      	bne.n	90016b2e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
90016ada:	7b6e      	ldrb	r6, [r5, #13]
90016adc:	4629      	mov	r1, r5
90016ade:	0076      	lsls	r6, r6, #1
90016ae0:	f406 7280 	and.w	r2, r6, #256	; 0x100
90016ae4:	7aae      	ldrb	r6, [r5, #10]
90016ae6:	4316      	orrs	r6, r2
90016ae8:	f640 6213 	movw	r2, #3603	; 0xe13
90016aec:	4293      	cmp	r3, r2
90016aee:	4602      	mov	r2, r0
90016af0:	4620      	mov	r0, r4
90016af2:	bf16      	itet	ne
90016af4:	f103 33ff 	addne.w	r3, r3, #4294967295
90016af8:	f640 630c 	movweq	r3, #3596	; 0xe0c
90016afc:	b29b      	uxthne	r3, r3
90016afe:	f7ff ff03 	bl	90016908 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
90016b02:	7b43      	ldrb	r3, [r0, #13]
90016b04:	7a82      	ldrb	r2, [r0, #10]
90016b06:	005b      	lsls	r3, r3, #1
90016b08:	f403 7380 	and.w	r3, r3, #256	; 0x100
90016b0c:	4313      	orrs	r3, r2
90016b0e:	1af6      	subs	r6, r6, r3
90016b10:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
90016b14:	7b69      	ldrb	r1, [r5, #13]
90016b16:	00cb      	lsls	r3, r1, #3
90016b18:	f403 7280 	and.w	r2, r3, #256	; 0x100
90016b1c:	7a2b      	ldrb	r3, [r5, #8]
90016b1e:	4313      	orrs	r3, r2
90016b20:	064a      	lsls	r2, r1, #25
90016b22:	bf44      	itt	mi
90016b24:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
90016b28:	b21b      	sxthmi	r3, r3
90016b2a:	1bdb      	subs	r3, r3, r7
90016b2c:	e747      	b.n	900169be <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
90016b2e:	2300      	movs	r3, #0
90016b30:	e7b7      	b.n	90016aa2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x182>
90016b32:	bf00      	nop
90016b34:	3fc00079 	.word	0x3fc00079

90016b38 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
90016b38:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90016b3c:	4604      	mov	r4, r0
90016b3e:	b942      	cbnz	r2, 90016b52 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
90016b40:	f44f 4300 	mov.w	r3, #32768	; 0x8000
90016b44:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
90016b48:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
90016b4c:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
90016b50:	e047      	b.n	90016be2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
90016b52:	7b51      	ldrb	r1, [r2, #13]
90016b54:	8893      	ldrh	r3, [r2, #4]
90016b56:	010d      	lsls	r5, r1, #4
90016b58:	f405 7080 	and.w	r0, r5, #256	; 0x100
90016b5c:	79d5      	ldrb	r5, [r2, #7]
90016b5e:	4305      	orrs	r5, r0
90016b60:	2d04      	cmp	r5, #4
90016b62:	bfcc      	ite	gt
90016b64:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
90016b68:	f04f 0e01 	movle.w	lr, #1
90016b6c:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
90016b70:	f200 80ab 	bhi.w	90016cca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
90016b74:	f240 60e7 	movw	r0, #1767	; 0x6e7
90016b78:	4283      	cmp	r3, r0
90016b7a:	d216      	bcs.n	90016baa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90016b7c:	f240 605b 	movw	r0, #1627	; 0x65b
90016b80:	4283      	cmp	r3, r0
90016b82:	d859      	bhi.n	90016c38 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
90016b84:	f240 6057 	movw	r0, #1623	; 0x657
90016b88:	4283      	cmp	r3, r0
90016b8a:	d20e      	bcs.n	90016baa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90016b8c:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
90016b90:	d24a      	bcs.n	90016c28 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
90016b92:	f240 604e 	movw	r0, #1614	; 0x64e
90016b96:	4283      	cmp	r3, r0
90016b98:	d207      	bcs.n	90016baa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90016b9a:	f240 601a 	movw	r0, #1562	; 0x61a
90016b9e:	4283      	cmp	r3, r0
90016ba0:	d02a      	beq.n	90016bf8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90016ba2:	d821      	bhi.n	90016be8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
90016ba4:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
90016ba8:	d35b      	bcc.n	90016c62 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
90016baa:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
90016bae:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
90016bb2:	f040 80d0 	bne.w	90016d56 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
90016bb6:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
90016bba:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
90016bbe:	f040 80ca 	bne.w	90016d56 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
90016bc2:	00cb      	lsls	r3, r1, #3
90016bc4:	0649      	lsls	r1, r1, #25
90016bc6:	f403 7080 	and.w	r0, r3, #256	; 0x100
90016bca:	7a13      	ldrb	r3, [r2, #8]
90016bcc:	ea43 0300 	orr.w	r3, r3, r0
90016bd0:	bf44      	itt	mi
90016bd2:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
90016bd6:	b21b      	sxthmi	r3, r3
90016bd8:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
90016bdc:	1b5d      	subs	r5, r3, r5
90016bde:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
90016be2:	4610      	mov	r0, r2
90016be4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90016be8:	f240 604b 	movw	r0, #1611	; 0x64b
90016bec:	4283      	cmp	r3, r0
90016bee:	d338      	bcc.n	90016c62 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
90016bf0:	f240 604c 	movw	r0, #1612	; 0x64c
90016bf4:	4283      	cmp	r3, r0
90016bf6:	d9d8      	bls.n	90016baa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90016bf8:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
90016bfc:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
90016c00:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
90016c04:	f040 80f3 	bne.w	90016dee <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
90016c08:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
90016c0c:	f040 80ef 	bne.w	90016dee <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
90016c10:	00cb      	lsls	r3, r1, #3
90016c12:	064e      	lsls	r6, r1, #25
90016c14:	f403 7080 	and.w	r0, r3, #256	; 0x100
90016c18:	7a13      	ldrb	r3, [r2, #8]
90016c1a:	ea43 0300 	orr.w	r3, r3, r0
90016c1e:	bf44      	itt	mi
90016c20:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
90016c24:	b21b      	sxthmi	r3, r3
90016c26:	e7d9      	b.n	90016bdc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
90016c28:	f240 6054 	movw	r0, #1620	; 0x654
90016c2c:	4283      	cmp	r3, r0
90016c2e:	d8e3      	bhi.n	90016bf8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90016c30:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
90016c34:	d9e0      	bls.n	90016bf8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90016c36:	e7b8      	b.n	90016baa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90016c38:	f240 6074 	movw	r0, #1652	; 0x674
90016c3c:	4283      	cmp	r3, r0
90016c3e:	d0b4      	beq.n	90016baa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90016c40:	d82d      	bhi.n	90016c9e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
90016c42:	f240 605e 	movw	r0, #1630	; 0x65e
90016c46:	4283      	cmp	r3, r0
90016c48:	d804      	bhi.n	90016c54 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
90016c4a:	f240 605d 	movw	r0, #1629	; 0x65d
90016c4e:	4283      	cmp	r3, r0
90016c50:	d3d2      	bcc.n	90016bf8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90016c52:	e7aa      	b.n	90016baa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90016c54:	f240 605f 	movw	r0, #1631	; 0x65f
90016c58:	4283      	cmp	r3, r0
90016c5a:	d0cd      	beq.n	90016bf8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90016c5c:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
90016c60:	d0a3      	beq.n	90016baa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90016c62:	00cb      	lsls	r3, r1, #3
90016c64:	0649      	lsls	r1, r1, #25
90016c66:	f403 7080 	and.w	r0, r3, #256	; 0x100
90016c6a:	7a13      	ldrb	r3, [r2, #8]
90016c6c:	ea43 0300 	orr.w	r3, r3, r0
90016c70:	bf44      	itt	mi
90016c72:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
90016c76:	b21b      	sxthmi	r3, r3
90016c78:	1b5d      	subs	r5, r3, r5
90016c7a:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
90016c7e:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
90016c82:	7b53      	ldrb	r3, [r2, #13]
90016c84:	015b      	lsls	r3, r3, #5
90016c86:	f403 7180 	and.w	r1, r3, #256	; 0x100
90016c8a:	7993      	ldrb	r3, [r2, #6]
90016c8c:	430b      	orrs	r3, r1
90016c8e:	2105      	movs	r1, #5
90016c90:	005b      	lsls	r3, r3, #1
90016c92:	fb93 f3f1 	sdiv	r3, r3, r1
90016c96:	f992 1009 	ldrsb.w	r1, [r2, #9]
90016c9a:	440b      	add	r3, r1
90016c9c:	e756      	b.n	90016b4c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
90016c9e:	f240 60e2 	movw	r0, #1762	; 0x6e2
90016ca2:	4283      	cmp	r3, r0
90016ca4:	d809      	bhi.n	90016cba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
90016ca6:	f240 60df 	movw	r0, #1759	; 0x6df
90016caa:	4283      	cmp	r3, r0
90016cac:	f4bf af7d 	bcs.w	90016baa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90016cb0:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
90016cb4:	2b05      	cmp	r3, #5
90016cb6:	d8d4      	bhi.n	90016c62 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
90016cb8:	e777      	b.n	90016baa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90016cba:	f240 60e3 	movw	r0, #1763	; 0x6e3
90016cbe:	4283      	cmp	r3, r0
90016cc0:	d09a      	beq.n	90016bf8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90016cc2:	f240 60e4 	movw	r0, #1764	; 0x6e4
90016cc6:	4283      	cmp	r3, r0
90016cc8:	e7ca      	b.n	90016c60 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
90016cca:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
90016cce:	d22b      	bcs.n	90016d28 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
90016cd0:	f640 00ed 	movw	r0, #2285	; 0x8ed
90016cd4:	4283      	cmp	r3, r0
90016cd6:	d28f      	bcs.n	90016bf8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90016cd8:	f640 00e5 	movw	r0, #2277	; 0x8e5
90016cdc:	4283      	cmp	r3, r0
90016cde:	d816      	bhi.n	90016d0e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
90016ce0:	f640 00e4 	movw	r0, #2276	; 0x8e4
90016ce4:	4283      	cmp	r3, r0
90016ce6:	f4bf af60 	bcs.w	90016baa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90016cea:	f240 60ec 	movw	r0, #1772	; 0x6ec
90016cee:	4283      	cmp	r3, r0
90016cf0:	d80a      	bhi.n	90016d08 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
90016cf2:	f240 60eb 	movw	r0, #1771	; 0x6eb
90016cf6:	4283      	cmp	r3, r0
90016cf8:	f4bf af57 	bcs.w	90016baa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90016cfc:	f240 60ea 	movw	r0, #1770	; 0x6ea
90016d00:	4283      	cmp	r3, r0
90016d02:	f43f af79 	beq.w	90016bf8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90016d06:	e7ac      	b.n	90016c62 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
90016d08:	f240 60ed 	movw	r0, #1773	; 0x6ed
90016d0c:	e7f8      	b.n	90016d00 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
90016d0e:	f640 00e8 	movw	r0, #2280	; 0x8e8
90016d12:	4283      	cmp	r3, r0
90016d14:	d802      	bhi.n	90016d1c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
90016d16:	f640 00e7 	movw	r0, #2279	; 0x8e7
90016d1a:	e798      	b.n	90016c4e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
90016d1c:	f640 00e9 	movw	r0, #2281	; 0x8e9
90016d20:	4283      	cmp	r3, r0
90016d22:	f47f af42 	bne.w	90016baa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90016d26:	e767      	b.n	90016bf8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90016d28:	f640 00f6 	movw	r0, #2294	; 0x8f6
90016d2c:	4283      	cmp	r3, r0
90016d2e:	f43f af63 	beq.w	90016bf8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90016d32:	d802      	bhi.n	90016d3a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
90016d34:	f640 00f2 	movw	r0, #2290	; 0x8f2
90016d38:	e7f2      	b.n	90016d20 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
90016d3a:	f640 00fa 	movw	r0, #2298	; 0x8fa
90016d3e:	4283      	cmp	r3, r0
90016d40:	d805      	bhi.n	90016d4e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
90016d42:	f640 00f9 	movw	r0, #2297	; 0x8f9
90016d46:	4283      	cmp	r3, r0
90016d48:	f4ff af2f 	bcc.w	90016baa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90016d4c:	e754      	b.n	90016bf8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90016d4e:	f640 00fe 	movw	r0, #2302	; 0x8fe
90016d52:	4283      	cmp	r3, r0
90016d54:	e7af      	b.n	90016cb6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
90016d56:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
90016d5a:	4617      	mov	r7, r2
90016d5c:	f102 0808 	add.w	r8, r2, #8
90016d60:	4666      	mov	r6, ip
90016d62:	6838      	ldr	r0, [r7, #0]
90016d64:	3708      	adds	r7, #8
90016d66:	f857 1c04 	ldr.w	r1, [r7, #-4]
90016d6a:	46e6      	mov	lr, ip
90016d6c:	4547      	cmp	r7, r8
90016d6e:	e8ae 0003 	stmia.w	lr!, {r0, r1}
90016d72:	46f4      	mov	ip, lr
90016d74:	d1f5      	bne.n	90016d62 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
90016d76:	6838      	ldr	r0, [r7, #0]
90016d78:	f8ce 0000 	str.w	r0, [lr]
90016d7c:	88b9      	ldrh	r1, [r7, #4]
90016d7e:	f8ae 1004 	strh.w	r1, [lr, #4]
90016d82:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
90016d86:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
90016d8a:	d009      	beq.n	90016da0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x268>
90016d8c:	7b51      	ldrb	r1, [r2, #13]
90016d8e:	7992      	ldrb	r2, [r2, #6]
90016d90:	0149      	lsls	r1, r1, #5
90016d92:	f401 7180 	and.w	r1, r1, #256	; 0x100
90016d96:	4311      	orrs	r1, r2
90016d98:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
90016d9c:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
90016da0:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
90016da4:	b2ad      	uxth	r5, r5
90016da6:	d00d      	beq.n	90016dc4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28c>
90016da8:	442b      	add	r3, r5
90016daa:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
90016dae:	b29b      	uxth	r3, r3
90016db0:	f022 0260 	bic.w	r2, r2, #96	; 0x60
90016db4:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
90016db8:	10db      	asrs	r3, r3, #3
90016dba:	f003 0360 	and.w	r3, r3, #96	; 0x60
90016dbe:	4313      	orrs	r3, r2
90016dc0:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
90016dc4:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
90016dc8:	00cb      	lsls	r3, r1, #3
90016dca:	064f      	lsls	r7, r1, #25
90016dcc:	f403 7280 	and.w	r2, r3, #256	; 0x100
90016dd0:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
90016dd4:	ea43 0302 	orr.w	r3, r3, r2
90016dd8:	bf44      	itt	mi
90016dda:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
90016dde:	b21b      	sxthmi	r3, r3
90016de0:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
90016de4:	1b5b      	subs	r3, r3, r5
90016de6:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
90016dea:	4632      	mov	r2, r6
90016dec:	e6f9      	b.n	90016be2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
90016dee:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
90016df2:	4617      	mov	r7, r2
90016df4:	f102 0908 	add.w	r9, r2, #8
90016df8:	4666      	mov	r6, ip
90016dfa:	6838      	ldr	r0, [r7, #0]
90016dfc:	3708      	adds	r7, #8
90016dfe:	f857 1c04 	ldr.w	r1, [r7, #-4]
90016e02:	46e0      	mov	r8, ip
90016e04:	454f      	cmp	r7, r9
90016e06:	e8a8 0003 	stmia.w	r8!, {r0, r1}
90016e0a:	46c4      	mov	ip, r8
90016e0c:	d1f5      	bne.n	90016dfa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c2>
90016e0e:	6838      	ldr	r0, [r7, #0]
90016e10:	f8c8 0000 	str.w	r0, [r8]
90016e14:	88b9      	ldrh	r1, [r7, #4]
90016e16:	f8a8 1004 	strh.w	r1, [r8, #4]
90016e1a:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
90016e1e:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
90016e22:	d009      	beq.n	90016e38 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x300>
90016e24:	7b51      	ldrb	r1, [r2, #13]
90016e26:	7992      	ldrb	r2, [r2, #6]
90016e28:	0149      	lsls	r1, r1, #5
90016e2a:	f401 7180 	and.w	r1, r1, #256	; 0x100
90016e2e:	4311      	orrs	r1, r2
90016e30:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
90016e34:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
90016e38:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
90016e3c:	d00e      	beq.n	90016e5c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x324>
90016e3e:	eba3 030e 	sub.w	r3, r3, lr
90016e42:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
90016e46:	b29b      	uxth	r3, r3
90016e48:	f022 0260 	bic.w	r2, r2, #96	; 0x60
90016e4c:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
90016e50:	10db      	asrs	r3, r3, #3
90016e52:	f003 0360 	and.w	r3, r3, #96	; 0x60
90016e56:	4313      	orrs	r3, r2
90016e58:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
90016e5c:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
90016e60:	00cb      	lsls	r3, r1, #3
90016e62:	0648      	lsls	r0, r1, #25
90016e64:	f403 7280 	and.w	r2, r3, #256	; 0x100
90016e68:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
90016e6c:	ea43 0302 	orr.w	r3, r3, r2
90016e70:	bf44      	itt	mi
90016e72:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
90016e76:	b21b      	sxthmi	r3, r3
90016e78:	1b5d      	subs	r5, r3, r5
90016e7a:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
90016e7e:	e7b4      	b.n	90016dea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b2>

90016e80 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
90016e80:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90016e84:	461e      	mov	r6, r3
90016e86:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
90016e88:	4604      	mov	r4, r0
90016e8a:	4617      	mov	r7, r2
90016e8c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
90016e90:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
90016e94:	f7ed fb8c 	bl	900045b0 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
90016e98:	4605      	mov	r5, r0
90016e9a:	b918      	cbnz	r0, 90016ea4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
90016e9c:	6030      	str	r0, [r6, #0]
90016e9e:	4628      	mov	r0, r5
90016ea0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90016ea4:	683b      	ldr	r3, [r7, #0]
90016ea6:	4601      	mov	r1, r0
90016ea8:	4638      	mov	r0, r7
90016eaa:	68db      	ldr	r3, [r3, #12]
90016eac:	4798      	blx	r3
90016eae:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
90016eb2:	4602      	mov	r2, r0
90016eb4:	6030      	str	r0, [r6, #0]
90016eb6:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
90016eba:	d213      	bcs.n	90016ee4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
90016ebc:	4643      	mov	r3, r8
90016ebe:	4639      	mov	r1, r7
90016ec0:	4620      	mov	r0, r4
90016ec2:	f7ff fe39 	bl	90016b38 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
90016ec6:	6030      	str	r0, [r6, #0]
90016ec8:	6833      	ldr	r3, [r6, #0]
90016eca:	b143      	cbz	r3, 90016ede <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
90016ecc:	7b5a      	ldrb	r2, [r3, #13]
90016ece:	7a9b      	ldrb	r3, [r3, #10]
90016ed0:	0052      	lsls	r2, r2, #1
90016ed2:	f402 7280 	and.w	r2, r2, #256	; 0x100
90016ed6:	4313      	orrs	r3, r2
90016ed8:	bf0c      	ite	eq
90016eda:	2301      	moveq	r3, #1
90016edc:	2300      	movne	r3, #0
90016ede:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
90016ee2:	e7dc      	b.n	90016e9e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
90016ee4:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
90016ee8:	b29b      	uxth	r3, r3
90016eea:	2b7f      	cmp	r3, #127	; 0x7f
90016eec:	d804      	bhi.n	90016ef8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
90016eee:	4639      	mov	r1, r7
90016ef0:	4620      	mov	r0, r4
90016ef2:	f7ff fd15 	bl	90016920 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
90016ef6:	e7e6      	b.n	90016ec6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
90016ef8:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
90016efc:	2b00      	cmp	r3, #0
90016efe:	d0e3      	beq.n	90016ec8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
90016f00:	f640 1302 	movw	r3, #2306	; 0x902
90016f04:	429d      	cmp	r5, r3
90016f06:	d1df      	bne.n	90016ec8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
90016f08:	4601      	mov	r1, r0
90016f0a:	4620      	mov	r0, r4
90016f0c:	f7ff fcd8 	bl	900168c0 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
90016f10:	e7d9      	b.n	90016ec6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

90016f12 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
90016f12:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
90016f16:	461e      	mov	r6, r3
90016f18:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
90016f1a:	4604      	mov	r4, r0
90016f1c:	4617      	mov	r7, r2
90016f1e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
90016f22:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
90016f26:	f7ed fb43 	bl	900045b0 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
90016f2a:	4605      	mov	r5, r0
90016f2c:	b918      	cbnz	r0, 90016f36 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
90016f2e:	6030      	str	r0, [r6, #0]
90016f30:	4628      	mov	r0, r5
90016f32:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
90016f36:	683b      	ldr	r3, [r7, #0]
90016f38:	4601      	mov	r1, r0
90016f3a:	4638      	mov	r0, r7
90016f3c:	f8d3 9008 	ldr.w	r9, [r3, #8]
90016f40:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
90016f44:	47c8      	blx	r9
90016f46:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
90016f4a:	4602      	mov	r2, r0
90016f4c:	6030      	str	r0, [r6, #0]
90016f4e:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
90016f52:	d213      	bcs.n	90016f7c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
90016f54:	4643      	mov	r3, r8
90016f56:	4639      	mov	r1, r7
90016f58:	4620      	mov	r0, r4
90016f5a:	f7ff fded 	bl	90016b38 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
90016f5e:	6030      	str	r0, [r6, #0]
90016f60:	6833      	ldr	r3, [r6, #0]
90016f62:	b143      	cbz	r3, 90016f76 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
90016f64:	7b5a      	ldrb	r2, [r3, #13]
90016f66:	7a9b      	ldrb	r3, [r3, #10]
90016f68:	0052      	lsls	r2, r2, #1
90016f6a:	f402 7280 	and.w	r2, r2, #256	; 0x100
90016f6e:	4313      	orrs	r3, r2
90016f70:	bf0c      	ite	eq
90016f72:	2301      	moveq	r3, #1
90016f74:	2300      	movne	r3, #0
90016f76:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
90016f7a:	e7d9      	b.n	90016f30 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
90016f7c:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
90016f80:	b29b      	uxth	r3, r3
90016f82:	2b7f      	cmp	r3, #127	; 0x7f
90016f84:	d804      	bhi.n	90016f90 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
90016f86:	4639      	mov	r1, r7
90016f88:	4620      	mov	r0, r4
90016f8a:	f7ff fcc9 	bl	90016920 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
90016f8e:	e7e6      	b.n	90016f5e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
90016f90:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
90016f94:	2b00      	cmp	r3, #0
90016f96:	d0e3      	beq.n	90016f60 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
90016f98:	f640 1302 	movw	r3, #2306	; 0x902
90016f9c:	429d      	cmp	r5, r3
90016f9e:	d1df      	bne.n	90016f60 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
90016fa0:	4601      	mov	r1, r0
90016fa2:	4620      	mov	r0, r4
90016fa4:	f7ff fc8c 	bl	900168c0 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
90016fa8:	e7d9      	b.n	90016f5e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

90016faa <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
90016faa:	b510      	push	{r4, lr}
90016fac:	4604      	mov	r4, r0
90016fae:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
90016fb2:	8f23      	ldrh	r3, [r4, #56]	; 0x38
90016fb4:	b1e1      	cbz	r1, 90016ff0 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
90016fb6:	2b0a      	cmp	r3, #10
90016fb8:	d02d      	beq.n	90017016 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
90016fba:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
90016fbc:	3901      	subs	r1, #1
90016fbe:	eb04 0042 	add.w	r0, r4, r2, lsl #1
90016fc2:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
90016fc4:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
90016fc8:	1c51      	adds	r1, r2, #1
90016fca:	b289      	uxth	r1, r1
90016fcc:	2901      	cmp	r1, #1
90016fce:	bf8a      	itet	hi
90016fd0:	f102 32ff 	addhi.w	r2, r2, #4294967295
90016fd4:	87e1      	strhls	r1, [r4, #62]	; 0x3e
90016fd6:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
90016fd8:	1c5a      	adds	r2, r3, #1
90016fda:	8722      	strh	r2, [r4, #56]	; 0x38
90016fdc:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
90016fde:	4413      	add	r3, r2
90016fe0:	b29b      	uxth	r3, r3
90016fe2:	2b09      	cmp	r3, #9
90016fe4:	bf88      	it	hi
90016fe6:	3b0a      	subhi	r3, #10
90016fe8:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90016fec:	8458      	strh	r0, [r3, #34]	; 0x22
90016fee:	e7de      	b.n	90016fae <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
90016ff0:	8f23      	ldrh	r3, [r4, #56]	; 0x38
90016ff2:	2b0a      	cmp	r3, #10
90016ff4:	d00f      	beq.n	90017016 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
90016ff6:	4620      	mov	r0, r4
90016ff8:	f7ff fc10 	bl	9001681c <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
90016ffc:	8f23      	ldrh	r3, [r4, #56]	; 0x38
90016ffe:	1c5a      	adds	r2, r3, #1
90017000:	8722      	strh	r2, [r4, #56]	; 0x38
90017002:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
90017004:	4413      	add	r3, r2
90017006:	b29b      	uxth	r3, r3
90017008:	2b09      	cmp	r3, #9
9001700a:	bf88      	it	hi
9001700c:	3b0a      	subhi	r3, #10
9001700e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90017012:	8458      	strh	r0, [r3, #34]	; 0x22
90017014:	e7ec      	b.n	90016ff0 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
90017016:	bd10      	pop	{r4, pc}

90017018 <_ZN8touchgfx12TextProvider11getNextCharEv>:
90017018:	b538      	push	{r3, r4, r5, lr}
9001701a:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
9001701c:	4604      	mov	r4, r0
9001701e:	eb00 0243 	add.w	r2, r0, r3, lsl #1
90017022:	8c55      	ldrh	r5, [r2, #34]	; 0x22
90017024:	8f02      	ldrh	r2, [r0, #56]	; 0x38
90017026:	3a01      	subs	r2, #1
90017028:	8702      	strh	r2, [r0, #56]	; 0x38
9001702a:	1c5a      	adds	r2, r3, #1
9001702c:	b292      	uxth	r2, r2
9001702e:	2a09      	cmp	r2, #9
90017030:	bf8a      	itet	hi
90017032:	3b09      	subhi	r3, #9
90017034:	86c2      	strhls	r2, [r0, #54]	; 0x36
90017036:	86c3      	strhhi	r3, [r0, #54]	; 0x36
90017038:	f7ff ffb7 	bl	90016faa <_ZN8touchgfx12TextProvider15fillInputBufferEv>
9001703c:	8c23      	ldrh	r3, [r4, #32]
9001703e:	2b01      	cmp	r3, #1
90017040:	bf9c      	itt	ls
90017042:	3301      	addls	r3, #1
90017044:	8423      	strhls	r3, [r4, #32]
90017046:	8be3      	ldrh	r3, [r4, #30]
90017048:	b90b      	cbnz	r3, 9001704e <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
9001704a:	2302      	movs	r3, #2
9001704c:	83e3      	strh	r3, [r4, #30]
9001704e:	8be3      	ldrh	r3, [r4, #30]
90017050:	4628      	mov	r0, r5
90017052:	3b01      	subs	r3, #1
90017054:	b29b      	uxth	r3, r3
90017056:	83e3      	strh	r3, [r4, #30]
90017058:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001705c:	8365      	strh	r5, [r4, #26]
9001705e:	bd38      	pop	{r3, r4, r5, pc}

90017060 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
90017060:	428a      	cmp	r2, r1
90017062:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90017066:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
90017068:	d932      	bls.n	900170d0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x70>
9001706a:	8f05      	ldrh	r5, [r0, #56]	; 0x38
9001706c:	1a54      	subs	r4, r2, r1
9001706e:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
90017072:	19ee      	adds	r6, r5, r7
90017074:	fa1f fe84 	uxth.w	lr, r4
90017078:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
9001707c:	3e01      	subs	r6, #1
9001707e:	b2b4      	uxth	r4, r6
90017080:	eba4 090e 	sub.w	r9, r4, lr
90017084:	fa1f f989 	uxth.w	r9, r9
90017088:	2c09      	cmp	r4, #9
9001708a:	4626      	mov	r6, r4
9001708c:	bf88      	it	hi
9001708e:	f1a4 060a 	subhi.w	r6, r4, #10
90017092:	f1bc 0f00 	cmp.w	ip, #0
90017096:	f104 34ff 	add.w	r4, r4, #4294967295
9001709a:	bf08      	it	eq
9001709c:	f04f 0c02 	moveq.w	ip, #2
900170a0:	eb00 0646 	add.w	r6, r0, r6, lsl #1
900170a4:	b2a4      	uxth	r4, r4
900170a6:	f10c 3cff 	add.w	ip, ip, #4294967295
900170aa:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
900170ae:	454c      	cmp	r4, r9
900170b0:	fa1f fc8c 	uxth.w	ip, ip
900170b4:	eb00 064c 	add.w	r6, r0, ip, lsl #1
900170b8:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
900170bc:	d1e4      	bne.n	90017088 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
900170be:	eba5 050e 	sub.w	r5, r5, lr
900170c2:	eb0e 0408 	add.w	r4, lr, r8
900170c6:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
900170ca:	8705      	strh	r5, [r0, #56]	; 0x38
900170cc:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
900170d0:	8f04      	ldrh	r4, [r0, #56]	; 0x38
900170d2:	250a      	movs	r5, #10
900170d4:	1a64      	subs	r4, r4, r1
900170d6:	4439      	add	r1, r7
900170d8:	b289      	uxth	r1, r1
900170da:	8704      	strh	r4, [r0, #56]	; 0x38
900170dc:	2909      	cmp	r1, #9
900170de:	bf88      	it	hi
900170e0:	390a      	subhi	r1, #10
900170e2:	86c1      	strh	r1, [r0, #54]	; 0x36
900170e4:	b18a      	cbz	r2, 9001710a <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xaa>
900170e6:	8f01      	ldrh	r1, [r0, #56]	; 0x38
900170e8:	3a01      	subs	r2, #1
900170ea:	3101      	adds	r1, #1
900170ec:	b292      	uxth	r2, r2
900170ee:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
900170f2:	8701      	strh	r1, [r0, #56]	; 0x38
900170f4:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
900170f6:	b901      	cbnz	r1, 900170fa <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9a>
900170f8:	86c5      	strh	r5, [r0, #54]	; 0x36
900170fa:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
900170fc:	3901      	subs	r1, #1
900170fe:	b289      	uxth	r1, r1
90017100:	86c1      	strh	r1, [r0, #54]	; 0x36
90017102:	eb00 0141 	add.w	r1, r0, r1, lsl #1
90017106:	844c      	strh	r4, [r1, #34]	; 0x22
90017108:	e7ec      	b.n	900170e4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>
9001710a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001710e:	f7ff bf4c 	b.w	90016faa <_ZN8touchgfx12TextProvider15fillInputBufferEv>

90017112 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
90017112:	b570      	push	{r4, r5, r6, lr}
90017114:	2500      	movs	r5, #0
90017116:	4295      	cmp	r5, r2
90017118:	d011      	beq.n	9001713e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
9001711a:	8bc4      	ldrh	r4, [r0, #30]
9001711c:	f831 6b02 	ldrh.w	r6, [r1], #2
90017120:	4414      	add	r4, r2
90017122:	3c01      	subs	r4, #1
90017124:	1b64      	subs	r4, r4, r5
90017126:	b2a4      	uxth	r4, r4
90017128:	2c01      	cmp	r4, #1
9001712a:	bf88      	it	hi
9001712c:	3c02      	subhi	r4, #2
9001712e:	eb00 0444 	add.w	r4, r0, r4, lsl #1
90017132:	8b64      	ldrh	r4, [r4, #26]
90017134:	42b4      	cmp	r4, r6
90017136:	d117      	bne.n	90017168 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
90017138:	3501      	adds	r5, #1
9001713a:	b2ad      	uxth	r5, r5
9001713c:	e7eb      	b.n	90017116 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
9001713e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
90017142:	2400      	movs	r4, #0
90017144:	4413      	add	r3, r2
90017146:	b2a2      	uxth	r2, r4
90017148:	429a      	cmp	r2, r3
9001714a:	da0f      	bge.n	9001716c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
9001714c:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
9001714e:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
90017152:	3401      	adds	r4, #1
90017154:	4432      	add	r2, r6
90017156:	b292      	uxth	r2, r2
90017158:	2a09      	cmp	r2, #9
9001715a:	bf88      	it	hi
9001715c:	3a0a      	subhi	r2, #10
9001715e:	eb00 0242 	add.w	r2, r0, r2, lsl #1
90017162:	8c52      	ldrh	r2, [r2, #34]	; 0x22
90017164:	42aa      	cmp	r2, r5
90017166:	d0ee      	beq.n	90017146 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
90017168:	2000      	movs	r0, #0
9001716a:	bd70      	pop	{r4, r5, r6, pc}
9001716c:	2001      	movs	r0, #1
9001716e:	e7fc      	b.n	9001716a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

90017170 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
90017170:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
90017174:	4605      	mov	r5, r0
90017176:	4616      	mov	r6, r2
90017178:	1c8c      	adds	r4, r1, #2
9001717a:	8809      	ldrh	r1, [r1, #0]
9001717c:	ea4f 3a11 	mov.w	sl, r1, lsr #12
90017180:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
90017184:	42b3      	cmp	r3, r6
90017186:	d124      	bne.n	900171d2 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
90017188:	f3c1 2903 	ubfx	r9, r1, #8, #4
9001718c:	f3c1 1803 	ubfx	r8, r1, #4, #4
90017190:	f001 070f 	and.w	r7, r1, #15
90017194:	4652      	mov	r2, sl
90017196:	f8cd 8000 	str.w	r8, [sp]
9001719a:	464b      	mov	r3, r9
9001719c:	4621      	mov	r1, r4
9001719e:	4628      	mov	r0, r5
900171a0:	f7ff ffb7 	bl	90017112 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
900171a4:	4683      	mov	fp, r0
900171a6:	b168      	cbz	r0, 900171c4 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
900171a8:	eb0a 0109 	add.w	r1, sl, r9
900171ac:	463a      	mov	r2, r7
900171ae:	4628      	mov	r0, r5
900171b0:	4441      	add	r1, r8
900171b2:	eb04 0341 	add.w	r3, r4, r1, lsl #1
900171b6:	4649      	mov	r1, r9
900171b8:	f7ff ff52 	bl	90017060 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
900171bc:	4658      	mov	r0, fp
900171be:	b003      	add	sp, #12
900171c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900171c4:	eb07 010a 	add.w	r1, r7, sl
900171c8:	4449      	add	r1, r9
900171ca:	4441      	add	r1, r8
900171cc:	eb04 0141 	add.w	r1, r4, r1, lsl #1
900171d0:	e7d2      	b.n	90017178 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
900171d2:	f04f 0b00 	mov.w	fp, #0
900171d6:	e7f1      	b.n	900171bc <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

900171d8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
900171d8:	b570      	push	{r4, r5, r6, lr}
900171da:	8810      	ldrh	r0, [r2, #0]
900171dc:	4298      	cmp	r0, r3
900171de:	d817      	bhi.n	90017210 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
900171e0:	1e48      	subs	r0, r1, #1
900171e2:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
900171e6:	4298      	cmp	r0, r3
900171e8:	d312      	bcc.n	90017210 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
900171ea:	2400      	movs	r4, #0
900171ec:	428c      	cmp	r4, r1
900171ee:	d20f      	bcs.n	90017210 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
900171f0:	1860      	adds	r0, r4, r1
900171f2:	1040      	asrs	r0, r0, #1
900171f4:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
900171f8:	0085      	lsls	r5, r0, #2
900171fa:	42b3      	cmp	r3, r6
900171fc:	d902      	bls.n	90017204 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
900171fe:	3001      	adds	r0, #1
90017200:	b284      	uxth	r4, r0
90017202:	e7f3      	b.n	900171ec <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
90017204:	d201      	bcs.n	9001720a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
90017206:	b281      	uxth	r1, r0
90017208:	e7f0      	b.n	900171ec <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
9001720a:	442a      	add	r2, r5
9001720c:	8850      	ldrh	r0, [r2, #2]
9001720e:	bd70      	pop	{r4, r5, r6, pc}
90017210:	2000      	movs	r0, #0
90017212:	e7fc      	b.n	9001720e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

90017214 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
90017214:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90017218:	6c45      	ldr	r5, [r0, #68]	; 0x44
9001721a:	4604      	mov	r4, r0
9001721c:	260b      	movs	r6, #11
9001721e:	886f      	ldrh	r7, [r5, #2]
90017220:	087f      	lsrs	r7, r7, #1
90017222:	3e01      	subs	r6, #1
90017224:	d013      	beq.n	9001724e <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
90017226:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
90017228:	462a      	mov	r2, r5
9001722a:	4639      	mov	r1, r7
9001722c:	4620      	mov	r0, r4
9001722e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90017232:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
90017236:	4643      	mov	r3, r8
90017238:	f7ff ffce 	bl	900171d8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
9001723c:	b138      	cbz	r0, 9001724e <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
9001723e:	eb05 0140 	add.w	r1, r5, r0, lsl #1
90017242:	4642      	mov	r2, r8
90017244:	4620      	mov	r0, r4
90017246:	f7ff ff93 	bl	90017170 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
9001724a:	2800      	cmp	r0, #0
9001724c:	d1e9      	bne.n	90017222 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
9001724e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

90017254 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
90017254:	b570      	push	{r4, r5, r6, lr}
90017256:	694a      	ldr	r2, [r1, #20]
90017258:	6a8d      	ldr	r5, [r1, #40]	; 0x28
9001725a:	684b      	ldr	r3, [r1, #4]
9001725c:	1b54      	subs	r4, r2, r5
9001725e:	6ace      	ldr	r6, [r1, #44]	; 0x2c
90017260:	f000 8106 	beq.w	90017470 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
90017264:	1b9b      	subs	r3, r3, r6
90017266:	d003      	beq.n	90017270 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
90017268:	4363      	muls	r3, r4
9001726a:	2210      	movs	r2, #16
9001726c:	fb93 f3f2 	sdiv	r3, r3, r2
90017270:	680c      	ldr	r4, [r1, #0]
90017272:	698a      	ldr	r2, [r1, #24]
90017274:	1b65      	subs	r5, r4, r5
90017276:	f000 80fd 	beq.w	90017474 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
9001727a:	1b92      	subs	r2, r2, r6
9001727c:	d003      	beq.n	90017286 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
9001727e:	436a      	muls	r2, r5
90017280:	2410      	movs	r4, #16
90017282:	fb92 f2f4 	sdiv	r2, r2, r4
90017286:	1a9b      	subs	r3, r3, r2
90017288:	ed9f 4a89 	vldr	s8, [pc, #548]	; 900174b0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
9001728c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90017290:	460a      	mov	r2, r1
90017292:	ee07 3a90 	vmov	s15, r3
90017296:	f100 040c 	add.w	r4, r0, #12
9001729a:	4603      	mov	r3, r0
9001729c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
900172a0:	ee67 7a84 	vmul.f32	s15, s15, s8
900172a4:	ee87 3a27 	vdiv.f32	s6, s14, s15
900172a8:	eeb1 6a43 	vneg.f32	s12, s6
900172ac:	edd2 7a02 	vldr	s15, [r2, #8]
900172b0:	3214      	adds	r2, #20
900172b2:	eec7 6a27 	vdiv.f32	s13, s14, s15
900172b6:	ece3 6a01 	vstmia	r3!, {s13}
900172ba:	429c      	cmp	r4, r3
900172bc:	ed52 7a02 	vldr	s15, [r2, #-8]
900172c0:	ee67 7aa6 	vmul.f32	s15, s15, s13
900172c4:	edc3 7a02 	vstr	s15, [r3, #8]
900172c8:	ed52 7a01 	vldr	s15, [r2, #-4]
900172cc:	ee67 7aa6 	vmul.f32	s15, s15, s13
900172d0:	edc3 7a05 	vstr	s15, [r3, #20]
900172d4:	d1ea      	bne.n	900172ac <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
900172d6:	6aca      	ldr	r2, [r1, #44]	; 0x2c
900172d8:	698b      	ldr	r3, [r1, #24]
900172da:	edd0 4a02 	vldr	s9, [r0, #8]
900172de:	1a9b      	subs	r3, r3, r2
900172e0:	edd0 3a00 	vldr	s7, [r0]
900172e4:	edd0 6a01 	vldr	s13, [r0, #4]
900172e8:	ee07 3a90 	vmov	s15, r3
900172ec:	684b      	ldr	r3, [r1, #4]
900172ee:	ee76 6ae4 	vsub.f32	s13, s13, s9
900172f2:	ed90 5a05 	vldr	s10, [r0, #20]
900172f6:	1a9b      	subs	r3, r3, r2
900172f8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
900172fc:	ee73 4ae4 	vsub.f32	s9, s7, s9
90017300:	ed90 2a03 	vldr	s4, [r0, #12]
90017304:	ee07 3a10 	vmov	s14, r3
90017308:	edd0 5a04 	vldr	s11, [r0, #16]
9001730c:	ee67 7a84 	vmul.f32	s15, s15, s8
90017310:	ed90 1a07 	vldr	s2, [r0, #28]
90017314:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90017318:	edd0 2a06 	vldr	s5, [r0, #24]
9001731c:	ee75 5ac5 	vsub.f32	s11, s11, s10
90017320:	ee64 7ae7 	vnmul.f32	s15, s9, s15
90017324:	ee27 7a04 	vmul.f32	s14, s14, s8
90017328:	ee32 5a45 	vsub.f32	s10, s4, s10
9001732c:	eee6 7a87 	vfma.f32	s15, s13, s14
90017330:	ee67 7a83 	vmul.f32	s15, s15, s6
90017334:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
90017338:	6a8c      	ldr	r4, [r1, #40]	; 0x28
9001733a:	694a      	ldr	r2, [r1, #20]
9001733c:	1b13      	subs	r3, r2, r4
9001733e:	ee07 3a10 	vmov	s14, r3
90017342:	680b      	ldr	r3, [r1, #0]
90017344:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90017348:	1b1b      	subs	r3, r3, r4
9001734a:	ee27 7a04 	vmul.f32	s14, s14, s8
9001734e:	ee64 4ac7 	vnmul.f32	s9, s9, s14
90017352:	ee07 3a10 	vmov	s14, r3
90017356:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001735a:	ee27 7a04 	vmul.f32	s14, s14, s8
9001735e:	eee6 4a87 	vfma.f32	s9, s13, s14
90017362:	ee64 4a86 	vmul.f32	s9, s9, s12
90017366:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
9001736a:	6aca      	ldr	r2, [r1, #44]	; 0x2c
9001736c:	698b      	ldr	r3, [r1, #24]
9001736e:	1a9b      	subs	r3, r3, r2
90017370:	ee06 3a90 	vmov	s13, r3
90017374:	684b      	ldr	r3, [r1, #4]
90017376:	1a9b      	subs	r3, r3, r2
90017378:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9001737c:	ee07 3a10 	vmov	s14, r3
90017380:	ee66 6a84 	vmul.f32	s13, s13, s8
90017384:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90017388:	ee65 6a66 	vnmul.f32	s13, s10, s13
9001738c:	ee27 7a04 	vmul.f32	s14, s14, s8
90017390:	eee5 6a87 	vfma.f32	s13, s11, s14
90017394:	ee66 6a83 	vmul.f32	s13, s13, s6
90017398:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
9001739c:	6a8c      	ldr	r4, [r1, #40]	; 0x28
9001739e:	694a      	ldr	r2, [r1, #20]
900173a0:	1b13      	subs	r3, r2, r4
900173a2:	ee07 3a10 	vmov	s14, r3
900173a6:	680b      	ldr	r3, [r1, #0]
900173a8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
900173ac:	1b1b      	subs	r3, r3, r4
900173ae:	ee27 7a04 	vmul.f32	s14, s14, s8
900173b2:	ee25 5a47 	vnmul.f32	s10, s10, s14
900173b6:	ee07 3a10 	vmov	s14, r3
900173ba:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
900173be:	ee27 7a04 	vmul.f32	s14, s14, s8
900173c2:	eea5 5a87 	vfma.f32	s10, s11, s14
900173c6:	edd0 5a08 	vldr	s11, [r0, #32]
900173ca:	ee31 1a65 	vsub.f32	s2, s2, s11
900173ce:	ee72 5ae5 	vsub.f32	s11, s5, s11
900173d2:	ee25 5a06 	vmul.f32	s10, s10, s12
900173d6:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
900173da:	6aca      	ldr	r2, [r1, #44]	; 0x2c
900173dc:	698b      	ldr	r3, [r1, #24]
900173de:	1a9b      	subs	r3, r3, r2
900173e0:	ee07 3a10 	vmov	s14, r3
900173e4:	684b      	ldr	r3, [r1, #4]
900173e6:	1a9b      	subs	r3, r3, r2
900173e8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
900173ec:	ee01 3a90 	vmov	s3, r3
900173f0:	ee27 7a04 	vmul.f32	s14, s14, s8
900173f4:	eef8 1ae1 	vcvt.f32.s32	s3, s3
900173f8:	ee25 7ac7 	vnmul.f32	s14, s11, s14
900173fc:	ee61 1a84 	vmul.f32	s3, s3, s8
90017400:	eea1 7a21 	vfma.f32	s14, s2, s3
90017404:	ee27 7a03 	vmul.f32	s14, s14, s6
90017408:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
9001740c:	6a8c      	ldr	r4, [r1, #40]	; 0x28
9001740e:	694a      	ldr	r2, [r1, #20]
90017410:	1b13      	subs	r3, r2, r4
90017412:	ee03 3a10 	vmov	s6, r3
90017416:	680b      	ldr	r3, [r1, #0]
90017418:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
9001741c:	1b1b      	subs	r3, r3, r4
9001741e:	ee23 3a04 	vmul.f32	s6, s6, s8
90017422:	ee65 5ac3 	vnmul.f32	s11, s11, s6
90017426:	ee03 3a10 	vmov	s6, r3
9001742a:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
9001742e:	ee23 4a04 	vmul.f32	s8, s6, s8
90017432:	eee1 5a04 	vfma.f32	s11, s2, s8
90017436:	ee25 6a86 	vmul.f32	s12, s11, s12
9001743a:	ee62 5a67 	vnmul.f32	s11, s4, s15
9001743e:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
90017442:	eee3 5aa6 	vfma.f32	s11, s7, s13
90017446:	eef5 5ac0 	vcmpe.f32	s11, #0.0
9001744a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001744e:	dd13      	ble.n	90017478 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
90017450:	f44f 4300 	mov.w	r3, #32768	; 0x8000
90017454:	ee62 7ae7 	vnmul.f32	s15, s5, s15
90017458:	63c3      	str	r3, [r0, #60]	; 0x3c
9001745a:	eee3 7a87 	vfma.f32	s15, s7, s14
9001745e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
90017462:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90017466:	dd15      	ble.n	90017494 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
90017468:	f44f 4300 	mov.w	r3, #32768	; 0x8000
9001746c:	6403      	str	r3, [r0, #64]	; 0x40
9001746e:	bd70      	pop	{r4, r5, r6, pc}
90017470:	4623      	mov	r3, r4
90017472:	e6fd      	b.n	90017270 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
90017474:	462a      	mov	r2, r5
90017476:	e706      	b.n	90017286 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
90017478:	d502      	bpl.n	90017480 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
9001747a:	f647 73ff 	movw	r3, #32767	; 0x7fff
9001747e:	e7e9      	b.n	90017454 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
90017480:	ee22 2a64 	vnmul.f32	s4, s4, s9
90017484:	eea3 2a85 	vfma.f32	s4, s7, s10
90017488:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
9001748c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90017490:	dade      	bge.n	90017450 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
90017492:	e7f2      	b.n	9001747a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
90017494:	d502      	bpl.n	9001749c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
90017496:	f647 73ff 	movw	r3, #32767	; 0x7fff
9001749a:	e7e7      	b.n	9001746c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
9001749c:	ee62 4ae4 	vnmul.f32	s9, s5, s9
900174a0:	eee3 4a86 	vfma.f32	s9, s7, s12
900174a4:	eef5 4ac0 	vcmpe.f32	s9, #0.0
900174a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900174ac:	dadc      	bge.n	90017468 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
900174ae:	e7f2      	b.n	90017496 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
900174b0:	3d800000 	.word	0x3d800000

900174b4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
900174b4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900174b8:	2714      	movs	r7, #20
900174ba:	435f      	muls	r7, r3
900174bc:	eb02 0c07 	add.w	ip, r2, r7
900174c0:	f8dc 5004 	ldr.w	r5, [ip, #4]
900174c4:	f115 0e0f 	adds.w	lr, r5, #15
900174c8:	f100 80a2 	bmi.w	90017610 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
900174cc:	ea4f 1e2e 	mov.w	lr, lr, asr #4
900174d0:	9c08      	ldr	r4, [sp, #32]
900174d2:	2614      	movs	r6, #20
900174d4:	f8c0 e014 	str.w	lr, [r0, #20]
900174d8:	4366      	muls	r6, r4
900174da:	eb02 0806 	add.w	r8, r2, r6
900174de:	f8d8 5004 	ldr.w	r5, [r8, #4]
900174e2:	f115 040f 	adds.w	r4, r5, #15
900174e6:	f100 809f 	bmi.w	90017628 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
900174ea:	1124      	asrs	r4, r4, #4
900174ec:	eba4 040e 	sub.w	r4, r4, lr
900174f0:	6184      	str	r4, [r0, #24]
900174f2:	2c00      	cmp	r4, #0
900174f4:	f000 808a 	beq.w	9001760c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
900174f8:	f8dc 9004 	ldr.w	r9, [ip, #4]
900174fc:	f8d8 4004 	ldr.w	r4, [r8, #4]
90017500:	5995      	ldr	r5, [r2, r6]
90017502:	eba4 0809 	sub.w	r8, r4, r9
90017506:	59d4      	ldr	r4, [r2, r7]
90017508:	eba5 0a04 	sub.w	sl, r5, r4
9001750c:	ea4f 1608 	mov.w	r6, r8, lsl #4
90017510:	ea4f 150a 	mov.w	r5, sl, lsl #4
90017514:	fb0e fe05 	mul.w	lr, lr, r5
90017518:	fb0a ee19 	mls	lr, sl, r9, lr
9001751c:	fb08 e404 	mla	r4, r8, r4, lr
90017520:	3c01      	subs	r4, #1
90017522:	19a4      	adds	r4, r4, r6
90017524:	f100 808c 	bmi.w	90017640 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
90017528:	fb94 fef6 	sdiv	lr, r4, r6
9001752c:	fb06 441e 	mls	r4, r6, lr, r4
90017530:	f8c0 e000 	str.w	lr, [r0]
90017534:	6104      	str	r4, [r0, #16]
90017536:	2d00      	cmp	r5, #0
90017538:	f2c0 8095 	blt.w	90017666 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
9001753c:	fb95 f4f6 	sdiv	r4, r5, r6
90017540:	fb06 5514 	mls	r5, r6, r4, r5
90017544:	6044      	str	r4, [r0, #4]
90017546:	6085      	str	r5, [r0, #8]
90017548:	60c6      	str	r6, [r0, #12]
9001754a:	eb01 0383 	add.w	r3, r1, r3, lsl #2
9001754e:	f8dc 4004 	ldr.w	r4, [ip, #4]
90017552:	6945      	ldr	r5, [r0, #20]
90017554:	59d2      	ldr	r2, [r2, r7]
90017556:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
9001755a:	eddf 6a4b 	vldr	s13, [pc, #300]	; 90017688 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
9001755e:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
90017562:	ee07 4a10 	vmov	s14, r4
90017566:	6804      	ldr	r4, [r0, #0]
90017568:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
9001756c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90017570:	ee07 2a90 	vmov	s15, r2
90017574:	ee27 7a26 	vmul.f32	s14, s14, s13
90017578:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001757c:	ee67 7aa6 	vmul.f32	s15, s15, s13
90017580:	edd3 6a00 	vldr	s13, [r3]
90017584:	eee6 6a07 	vfma.f32	s13, s12, s14
90017588:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
9001758c:	eee6 6a27 	vfma.f32	s13, s12, s15
90017590:	edc0 6a07 	vstr	s13, [r0, #28]
90017594:	edd0 6a01 	vldr	s13, [r0, #4]
90017598:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
9001759c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
900175a0:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
900175a4:	eea6 6aa5 	vfma.f32	s12, s13, s11
900175a8:	ed80 6a08 	vstr	s12, [r0, #32]
900175ac:	6a4a      	ldr	r2, [r1, #36]	; 0x24
900175ae:	6242      	str	r2, [r0, #36]	; 0x24
900175b0:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
900175b4:	ed93 6a03 	vldr	s12, [r3, #12]
900175b8:	eea5 6a87 	vfma.f32	s12, s11, s14
900175bc:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
900175c0:	eea5 6aa7 	vfma.f32	s12, s11, s15
900175c4:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
900175c8:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
900175cc:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
900175d0:	eea6 6aa5 	vfma.f32	s12, s13, s11
900175d4:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
900175d8:	6aca      	ldr	r2, [r1, #44]	; 0x2c
900175da:	6302      	str	r2, [r0, #48]	; 0x30
900175dc:	ed93 6a06 	vldr	s12, [r3, #24]
900175e0:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
900175e4:	eea5 6a87 	vfma.f32	s12, s11, s14
900175e8:	eeb0 7a46 	vmov.f32	s14, s12
900175ec:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
900175f0:	eea6 7a27 	vfma.f32	s14, s12, s15
900175f4:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
900175f8:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
900175fc:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
90017600:	eee6 7a87 	vfma.f32	s15, s13, s14
90017604:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
90017608:	6b4b      	ldr	r3, [r1, #52]	; 0x34
9001760a:	63c3      	str	r3, [r0, #60]	; 0x3c
9001760c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90017610:	2410      	movs	r4, #16
90017612:	f1c5 0501 	rsb	r5, r5, #1
90017616:	fb9e fef4 	sdiv	lr, lr, r4
9001761a:	f015 050f 	ands.w	r5, r5, #15
9001761e:	bf18      	it	ne
90017620:	2501      	movne	r5, #1
90017622:	ebae 0e05 	sub.w	lr, lr, r5
90017626:	e753      	b.n	900174d0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
90017628:	f04f 0910 	mov.w	r9, #16
9001762c:	f1c5 0501 	rsb	r5, r5, #1
90017630:	fb94 f4f9 	sdiv	r4, r4, r9
90017634:	f015 050f 	ands.w	r5, r5, #15
90017638:	bf18      	it	ne
9001763a:	2501      	movne	r5, #1
9001763c:	1b64      	subs	r4, r4, r5
9001763e:	e755      	b.n	900174ec <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
90017640:	4264      	negs	r4, r4
90017642:	fb94 fef6 	sdiv	lr, r4, r6
90017646:	f1ce 0800 	rsb	r8, lr, #0
9001764a:	fb06 441e 	mls	r4, r6, lr, r4
9001764e:	f8c0 8000 	str.w	r8, [r0]
90017652:	6104      	str	r4, [r0, #16]
90017654:	2c00      	cmp	r4, #0
90017656:	f43f af6e 	beq.w	90017536 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
9001765a:	ea6f 0e0e 	mvn.w	lr, lr
9001765e:	1b34      	subs	r4, r6, r4
90017660:	f8c0 e000 	str.w	lr, [r0]
90017664:	e766      	b.n	90017534 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
90017666:	426d      	negs	r5, r5
90017668:	fb95 f4f6 	sdiv	r4, r5, r6
9001766c:	f1c4 0e00 	rsb	lr, r4, #0
90017670:	fb06 5514 	mls	r5, r6, r4, r5
90017674:	f8c0 e004 	str.w	lr, [r0, #4]
90017678:	6085      	str	r5, [r0, #8]
9001767a:	2d00      	cmp	r5, #0
9001767c:	f43f af64 	beq.w	90017548 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
90017680:	43e4      	mvns	r4, r4
90017682:	1b75      	subs	r5, r6, r5
90017684:	6044      	str	r4, [r0, #4]
90017686:	e75e      	b.n	90017546 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
90017688:	3d800000 	.word	0x3d800000

9001768c <_ZN8touchgfx7Unicode6strlenEPKt>:
9001768c:	4602      	mov	r2, r0
9001768e:	b148      	cbz	r0, 900176a4 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
90017690:	2300      	movs	r3, #0
90017692:	b298      	uxth	r0, r3
90017694:	3301      	adds	r3, #1
90017696:	eb02 0143 	add.w	r1, r2, r3, lsl #1
9001769a:	f831 1c02 	ldrh.w	r1, [r1, #-2]
9001769e:	2900      	cmp	r1, #0
900176a0:	d1f7      	bne.n	90017692 <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
900176a2:	4770      	bx	lr
900176a4:	4770      	bx	lr

900176a6 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
900176a6:	b530      	push	{r4, r5, lr}
900176a8:	4604      	mov	r4, r0
900176aa:	b159      	cbz	r1, 900176c4 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
900176ac:	b148      	cbz	r0, 900176c2 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
900176ae:	2300      	movs	r3, #0
900176b0:	b298      	uxth	r0, r3
900176b2:	4282      	cmp	r2, r0
900176b4:	d905      	bls.n	900176c2 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
900176b6:	5ccd      	ldrb	r5, [r1, r3]
900176b8:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
900176bc:	3301      	adds	r3, #1
900176be:	2d00      	cmp	r5, #0
900176c0:	d1f6      	bne.n	900176b0 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
900176c2:	bd30      	pop	{r4, r5, pc}
900176c4:	4608      	mov	r0, r1
900176c6:	e7fc      	b.n	900176c2 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

900176c8 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
900176c8:	b5f0      	push	{r4, r5, r6, r7, lr}
900176ca:	b08b      	sub	sp, #44	; 0x2c
900176cc:	468c      	mov	ip, r1
900176ce:	4604      	mov	r4, r0
900176d0:	2100      	movs	r1, #0
900176d2:	261f      	movs	r6, #31
900176d4:	af01      	add	r7, sp, #4
900176d6:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
900176da:	1e71      	subs	r1, r6, #1
900176dc:	fb94 fef3 	sdiv	lr, r4, r3
900176e0:	fb03 441e 	mls	r4, r3, lr, r4
900176e4:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
900176e8:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
900176ec:	b2ec      	uxtb	r4, r5
900176ee:	2d09      	cmp	r5, #9
900176f0:	bfd4      	ite	le
900176f2:	3430      	addle	r4, #48	; 0x30
900176f4:	3457      	addgt	r4, #87	; 0x57
900176f6:	b2e4      	uxtb	r4, r4
900176f8:	55bc      	strb	r4, [r7, r6]
900176fa:	4674      	mov	r4, lr
900176fc:	b974      	cbnz	r4, 9001771c <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
900176fe:	2800      	cmp	r0, #0
90017700:	da05      	bge.n	9001770e <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
90017702:	ab0a      	add	r3, sp, #40	; 0x28
90017704:	4419      	add	r1, r3
90017706:	232d      	movs	r3, #45	; 0x2d
90017708:	f801 3c24 	strb.w	r3, [r1, #-36]
9001770c:	1eb1      	subs	r1, r6, #2
9001770e:	3101      	adds	r1, #1
90017710:	4660      	mov	r0, ip
90017712:	4439      	add	r1, r7
90017714:	f7ff ffc7 	bl	900176a6 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
90017718:	b00b      	add	sp, #44	; 0x2c
9001771a:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001771c:	460e      	mov	r6, r1
9001771e:	e7dc      	b.n	900176da <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

90017720 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
90017720:	b5f0      	push	{r4, r5, r6, r7, lr}
90017722:	468c      	mov	ip, r1
90017724:	b08b      	sub	sp, #44	; 0x2c
90017726:	2100      	movs	r1, #0
90017728:	ae01      	add	r6, sp, #4
9001772a:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
9001772e:	211f      	movs	r1, #31
90017730:	fbb0 f7f3 	udiv	r7, r0, r3
90017734:	fb03 0517 	mls	r5, r3, r7, r0
90017738:	4638      	mov	r0, r7
9001773a:	b2ec      	uxtb	r4, r5
9001773c:	2d09      	cmp	r5, #9
9001773e:	bfd4      	ite	le
90017740:	3430      	addle	r4, #48	; 0x30
90017742:	3457      	addgt	r4, #87	; 0x57
90017744:	b2e4      	uxtb	r4, r4
90017746:	558c      	strb	r4, [r1, r6]
90017748:	1e4c      	subs	r4, r1, #1
9001774a:	b92f      	cbnz	r7, 90017758 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
9001774c:	4431      	add	r1, r6
9001774e:	4660      	mov	r0, ip
90017750:	f7ff ffa9 	bl	900176a6 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
90017754:	b00b      	add	sp, #44	; 0x2c
90017756:	bdf0      	pop	{r4, r5, r6, r7, pc}
90017758:	4621      	mov	r1, r4
9001775a:	e7e9      	b.n	90017730 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

9001775c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
9001775c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90017760:	b085      	sub	sp, #20
90017762:	4691      	mov	r9, r2
90017764:	6802      	ldr	r2, [r0, #0]
90017766:	4688      	mov	r8, r1
90017768:	461c      	mov	r4, r3
9001776a:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
9001776e:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
90017772:	4683      	mov	fp, r0
90017774:	4610      	mov	r0, r2
90017776:	9103      	str	r1, [sp, #12]
90017778:	9302      	str	r3, [sp, #8]
9001777a:	9201      	str	r2, [sp, #4]
9001777c:	f7ff ff86 	bl	9001768c <_ZN8touchgfx7Unicode6strlenEPKt>
90017780:	f1b8 0f00 	cmp.w	r8, #0
90017784:	bf0c      	ite	eq
90017786:	4684      	moveq	ip, r0
90017788:	f100 0c01 	addne.w	ip, r0, #1
9001778c:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
90017790:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
90017794:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
90017796:	fa1f fc8c 	uxth.w	ip, ip
9001779a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
9001779c:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
900177a0:	9903      	ldr	r1, [sp, #12]
900177a2:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
900177a6:	d041      	beq.n	9001782c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
900177a8:	d834      	bhi.n	90017814 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
900177aa:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
900177ae:	d059      	beq.n	90017864 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
900177b0:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
900177b4:	d03a      	beq.n	9001782c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
900177b6:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
900177ba:	d034      	beq.n	90017826 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
900177bc:	2400      	movs	r4, #0
900177be:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
900177c2:	3a01      	subs	r2, #1
900177c4:	b169      	cbz	r1, 900177e2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
900177c6:	9911      	ldr	r1, [sp, #68]	; 0x44
900177c8:	458c      	cmp	ip, r1
900177ca:	da09      	bge.n	900177e0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
900177cc:	eba1 010c 	sub.w	r1, r1, ip
900177d0:	b289      	uxth	r1, r1
900177d2:	b933      	cbnz	r3, 900177e2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
900177d4:	2e00      	cmp	r6, #0
900177d6:	d051      	beq.n	9001787c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
900177d8:	2800      	cmp	r0, #0
900177da:	d04f      	beq.n	9001787c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
900177dc:	440c      	add	r4, r1
900177de:	b2a4      	uxth	r4, r4
900177e0:	2100      	movs	r1, #0
900177e2:	682b      	ldr	r3, [r5, #0]
900177e4:	4293      	cmp	r3, r2
900177e6:	da07      	bge.n	900177f8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
900177e8:	f1b8 0f00 	cmp.w	r8, #0
900177ec:	d004      	beq.n	900177f8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
900177ee:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
900177f2:	682b      	ldr	r3, [r5, #0]
900177f4:	3301      	adds	r3, #1
900177f6:	602b      	str	r3, [r5, #0]
900177f8:	2730      	movs	r7, #48	; 0x30
900177fa:	2c00      	cmp	r4, #0
900177fc:	d04e      	beq.n	9001789c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
900177fe:	682e      	ldr	r6, [r5, #0]
90017800:	3c01      	subs	r4, #1
90017802:	42b2      	cmp	r2, r6
90017804:	b2a4      	uxth	r4, r4
90017806:	dd49      	ble.n	9001789c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
90017808:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
9001780c:	682b      	ldr	r3, [r5, #0]
9001780e:	3301      	adds	r3, #1
90017810:	602b      	str	r3, [r5, #0]
90017812:	e7f2      	b.n	900177fa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
90017814:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
90017818:	d01d      	beq.n	90017856 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
9001781a:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
9001781e:	d002      	beq.n	90017826 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
90017820:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
90017824:	e7c9      	b.n	900177ba <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
90017826:	4684      	mov	ip, r0
90017828:	f04f 0800 	mov.w	r8, #0
9001782c:	2c00      	cmp	r4, #0
9001782e:	d0c6      	beq.n	900177be <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
90017830:	b947      	cbnz	r7, 90017844 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
90017832:	2801      	cmp	r0, #1
90017834:	d106      	bne.n	90017844 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
90017836:	8814      	ldrh	r4, [r2, #0]
90017838:	2c30      	cmp	r4, #48	; 0x30
9001783a:	bf02      	ittt	eq
9001783c:	3202      	addeq	r2, #2
9001783e:	4638      	moveq	r0, r7
90017840:	f8cb 2000 	streq.w	r2, [fp]
90017844:	45bc      	cmp	ip, r7
90017846:	da14      	bge.n	90017872 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
90017848:	b2bf      	uxth	r7, r7
9001784a:	eba7 040c 	sub.w	r4, r7, ip
9001784e:	46bc      	mov	ip, r7
90017850:	b2a4      	uxth	r4, r4
90017852:	2600      	movs	r6, #0
90017854:	e7b3      	b.n	900177be <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
90017856:	4684      	mov	ip, r0
90017858:	b16c      	cbz	r4, 90017876 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
9001785a:	42b8      	cmp	r0, r7
9001785c:	dd00      	ble.n	90017860 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
9001785e:	b2b8      	uxth	r0, r7
90017860:	2400      	movs	r4, #0
90017862:	e003      	b.n	9001786c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
90017864:	f04f 0c01 	mov.w	ip, #1
90017868:	2400      	movs	r4, #0
9001786a:	4660      	mov	r0, ip
9001786c:	4626      	mov	r6, r4
9001786e:	46a0      	mov	r8, r4
90017870:	e7a5      	b.n	900177be <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
90017872:	2400      	movs	r4, #0
90017874:	e7ed      	b.n	90017852 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
90017876:	4626      	mov	r6, r4
90017878:	46a0      	mov	r8, r4
9001787a:	e7a0      	b.n	900177be <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
9001787c:	2900      	cmp	r1, #0
9001787e:	d0b0      	beq.n	900177e2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
90017880:	2720      	movs	r7, #32
90017882:	682e      	ldr	r6, [r5, #0]
90017884:	2900      	cmp	r1, #0
90017886:	d0ac      	beq.n	900177e2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
90017888:	3901      	subs	r1, #1
9001788a:	4296      	cmp	r6, r2
9001788c:	b289      	uxth	r1, r1
9001788e:	daa7      	bge.n	900177e0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
90017890:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
90017894:	682b      	ldr	r3, [r5, #0]
90017896:	3301      	adds	r3, #1
90017898:	602b      	str	r3, [r5, #0]
9001789a:	e7f2      	b.n	90017882 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
9001789c:	b188      	cbz	r0, 900178c2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
9001789e:	682b      	ldr	r3, [r5, #0]
900178a0:	3801      	subs	r0, #1
900178a2:	429a      	cmp	r2, r3
900178a4:	b280      	uxth	r0, r0
900178a6:	dd0c      	ble.n	900178c2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
900178a8:	f8db 3000 	ldr.w	r3, [fp]
900178ac:	1c9c      	adds	r4, r3, #2
900178ae:	f8cb 4000 	str.w	r4, [fp]
900178b2:	881c      	ldrh	r4, [r3, #0]
900178b4:	682b      	ldr	r3, [r5, #0]
900178b6:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
900178ba:	682b      	ldr	r3, [r5, #0]
900178bc:	3301      	adds	r3, #1
900178be:	602b      	str	r3, [r5, #0]
900178c0:	e7ec      	b.n	9001789c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
900178c2:	2620      	movs	r6, #32
900178c4:	b151      	cbz	r1, 900178dc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
900178c6:	6828      	ldr	r0, [r5, #0]
900178c8:	3901      	subs	r1, #1
900178ca:	4282      	cmp	r2, r0
900178cc:	b289      	uxth	r1, r1
900178ce:	dd05      	ble.n	900178dc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
900178d0:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
900178d4:	682b      	ldr	r3, [r5, #0]
900178d6:	3301      	adds	r3, #1
900178d8:	602b      	str	r3, [r5, #0]
900178da:	e7f3      	b.n	900178c4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
900178dc:	b005      	add	sp, #20
900178de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900178e2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
900178e2:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900178e6:	2400      	movs	r4, #0
900178e8:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
900178ec:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
900178f0:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
900178f4:	8014      	strh	r4, [r2, #0]
900178f6:	701c      	strb	r4, [r3, #0]
900178f8:	f888 4000 	strb.w	r4, [r8]
900178fc:	f88c 4000 	strb.w	r4, [ip]
90017900:	f88e 4000 	strb.w	r4, [lr]
90017904:	703c      	strb	r4, [r7, #0]
90017906:	6804      	ldr	r4, [r0, #0]
90017908:	b1a4      	cbz	r4, 90017934 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
9001790a:	8824      	ldrh	r4, [r4, #0]
9001790c:	f04f 0901 	mov.w	r9, #1
90017910:	b314      	cbz	r4, 90017958 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
90017912:	2c2b      	cmp	r4, #43	; 0x2b
90017914:	d001      	beq.n	9001791a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
90017916:	2c20      	cmp	r4, #32
90017918:	d110      	bne.n	9001793c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
9001791a:	8014      	strh	r4, [r2, #0]
9001791c:	6804      	ldr	r4, [r0, #0]
9001791e:	b10c      	cbz	r4, 90017924 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
90017920:	3402      	adds	r4, #2
90017922:	6004      	str	r4, [r0, #0]
90017924:	680c      	ldr	r4, [r1, #0]
90017926:	b10c      	cbz	r4, 9001792c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
90017928:	3401      	adds	r4, #1
9001792a:	600c      	str	r4, [r1, #0]
9001792c:	6804      	ldr	r4, [r0, #0]
9001792e:	b17c      	cbz	r4, 90017950 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
90017930:	8824      	ldrh	r4, [r4, #0]
90017932:	e7ed      	b.n	90017910 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
90017934:	680c      	ldr	r4, [r1, #0]
90017936:	b17c      	cbz	r4, 90017958 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
90017938:	7824      	ldrb	r4, [r4, #0]
9001793a:	e7e7      	b.n	9001790c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
9001793c:	2c2d      	cmp	r4, #45	; 0x2d
9001793e:	d102      	bne.n	90017946 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
90017940:	f883 9000 	strb.w	r9, [r3]
90017944:	e7ea      	b.n	9001791c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
90017946:	2c23      	cmp	r4, #35	; 0x23
90017948:	d107      	bne.n	9001795a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
9001794a:	f888 9000 	strb.w	r9, [r8]
9001794e:	e7e5      	b.n	9001791c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
90017950:	680c      	ldr	r4, [r1, #0]
90017952:	b10c      	cbz	r4, 90017958 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
90017954:	7824      	ldrb	r4, [r4, #0]
90017956:	e7db      	b.n	90017910 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
90017958:	2400      	movs	r4, #0
9001795a:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
9001795e:	2b09      	cmp	r3, #9
90017960:	d901      	bls.n	90017966 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
90017962:	2c2a      	cmp	r4, #42	; 0x2a
90017964:	d122      	bne.n	900179ac <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
90017966:	2301      	movs	r3, #1
90017968:	2c30      	cmp	r4, #48	; 0x30
9001796a:	f88e 3000 	strb.w	r3, [lr]
9001796e:	d10d      	bne.n	9001798c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
90017970:	f88c 3000 	strb.w	r3, [ip]
90017974:	6803      	ldr	r3, [r0, #0]
90017976:	b10b      	cbz	r3, 9001797c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
90017978:	3302      	adds	r3, #2
9001797a:	6003      	str	r3, [r0, #0]
9001797c:	680b      	ldr	r3, [r1, #0]
9001797e:	b10b      	cbz	r3, 90017984 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
90017980:	3301      	adds	r3, #1
90017982:	600b      	str	r3, [r1, #0]
90017984:	6803      	ldr	r3, [r0, #0]
90017986:	2b00      	cmp	r3, #0
90017988:	d02f      	beq.n	900179ea <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
9001798a:	881c      	ldrh	r4, [r3, #0]
9001798c:	2c2a      	cmp	r4, #42	; 0x2a
9001798e:	d135      	bne.n	900179fc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
90017990:	f04f 33ff 	mov.w	r3, #4294967295
90017994:	6033      	str	r3, [r6, #0]
90017996:	6803      	ldr	r3, [r0, #0]
90017998:	b10b      	cbz	r3, 9001799e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
9001799a:	3302      	adds	r3, #2
9001799c:	6003      	str	r3, [r0, #0]
9001799e:	680b      	ldr	r3, [r1, #0]
900179a0:	b10b      	cbz	r3, 900179a6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
900179a2:	3301      	adds	r3, #1
900179a4:	600b      	str	r3, [r1, #0]
900179a6:	6803      	ldr	r3, [r0, #0]
900179a8:	b31b      	cbz	r3, 900179f2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
900179aa:	881c      	ldrh	r4, [r3, #0]
900179ac:	2c2e      	cmp	r4, #46	; 0x2e
900179ae:	d11a      	bne.n	900179e6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
900179b0:	2301      	movs	r3, #1
900179b2:	703b      	strb	r3, [r7, #0]
900179b4:	6803      	ldr	r3, [r0, #0]
900179b6:	b10b      	cbz	r3, 900179bc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
900179b8:	3302      	adds	r3, #2
900179ba:	6003      	str	r3, [r0, #0]
900179bc:	680b      	ldr	r3, [r1, #0]
900179be:	b10b      	cbz	r3, 900179c4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
900179c0:	3301      	adds	r3, #1
900179c2:	600b      	str	r3, [r1, #0]
900179c4:	6803      	ldr	r3, [r0, #0]
900179c6:	2b00      	cmp	r3, #0
900179c8:	d036      	beq.n	90017a38 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
900179ca:	881b      	ldrh	r3, [r3, #0]
900179cc:	2b2a      	cmp	r3, #42	; 0x2a
900179ce:	d137      	bne.n	90017a40 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
900179d0:	f04f 33ff 	mov.w	r3, #4294967295
900179d4:	602b      	str	r3, [r5, #0]
900179d6:	6803      	ldr	r3, [r0, #0]
900179d8:	b10b      	cbz	r3, 900179de <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
900179da:	3302      	adds	r3, #2
900179dc:	6003      	str	r3, [r0, #0]
900179de:	680b      	ldr	r3, [r1, #0]
900179e0:	b10b      	cbz	r3, 900179e6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
900179e2:	3301      	adds	r3, #1
900179e4:	600b      	str	r3, [r1, #0]
900179e6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
900179ea:	680c      	ldr	r4, [r1, #0]
900179ec:	b134      	cbz	r4, 900179fc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
900179ee:	7824      	ldrb	r4, [r4, #0]
900179f0:	e7cc      	b.n	9001798c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
900179f2:	680b      	ldr	r3, [r1, #0]
900179f4:	2b00      	cmp	r3, #0
900179f6:	d0f6      	beq.n	900179e6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
900179f8:	781c      	ldrb	r4, [r3, #0]
900179fa:	e7d7      	b.n	900179ac <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
900179fc:	2300      	movs	r3, #0
900179fe:	220a      	movs	r2, #10
90017a00:	6033      	str	r3, [r6, #0]
90017a02:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
90017a06:	fa1f f38c 	uxth.w	r3, ip
90017a0a:	2b09      	cmp	r3, #9
90017a0c:	d8ce      	bhi.n	900179ac <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
90017a0e:	6833      	ldr	r3, [r6, #0]
90017a10:	fb02 c303 	mla	r3, r2, r3, ip
90017a14:	6033      	str	r3, [r6, #0]
90017a16:	6803      	ldr	r3, [r0, #0]
90017a18:	b10b      	cbz	r3, 90017a1e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
90017a1a:	3302      	adds	r3, #2
90017a1c:	6003      	str	r3, [r0, #0]
90017a1e:	680b      	ldr	r3, [r1, #0]
90017a20:	b10b      	cbz	r3, 90017a26 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
90017a22:	3301      	adds	r3, #1
90017a24:	600b      	str	r3, [r1, #0]
90017a26:	6803      	ldr	r3, [r0, #0]
90017a28:	b10b      	cbz	r3, 90017a2e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
90017a2a:	881c      	ldrh	r4, [r3, #0]
90017a2c:	e7e9      	b.n	90017a02 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
90017a2e:	680c      	ldr	r4, [r1, #0]
90017a30:	2c00      	cmp	r4, #0
90017a32:	d0e6      	beq.n	90017a02 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
90017a34:	7824      	ldrb	r4, [r4, #0]
90017a36:	e7e4      	b.n	90017a02 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
90017a38:	680b      	ldr	r3, [r1, #0]
90017a3a:	b10b      	cbz	r3, 90017a40 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
90017a3c:	781b      	ldrb	r3, [r3, #0]
90017a3e:	e7c5      	b.n	900179cc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
90017a40:	2200      	movs	r2, #0
90017a42:	240a      	movs	r4, #10
90017a44:	602a      	str	r2, [r5, #0]
90017a46:	3b30      	subs	r3, #48	; 0x30
90017a48:	682a      	ldr	r2, [r5, #0]
90017a4a:	b29e      	uxth	r6, r3
90017a4c:	2e09      	cmp	r6, #9
90017a4e:	d813      	bhi.n	90017a78 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
90017a50:	fb04 3302 	mla	r3, r4, r2, r3
90017a54:	602b      	str	r3, [r5, #0]
90017a56:	6803      	ldr	r3, [r0, #0]
90017a58:	b10b      	cbz	r3, 90017a5e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
90017a5a:	3302      	adds	r3, #2
90017a5c:	6003      	str	r3, [r0, #0]
90017a5e:	680b      	ldr	r3, [r1, #0]
90017a60:	b10b      	cbz	r3, 90017a66 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
90017a62:	3301      	adds	r3, #1
90017a64:	600b      	str	r3, [r1, #0]
90017a66:	6803      	ldr	r3, [r0, #0]
90017a68:	b10b      	cbz	r3, 90017a6e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
90017a6a:	881b      	ldrh	r3, [r3, #0]
90017a6c:	e7eb      	b.n	90017a46 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
90017a6e:	680b      	ldr	r3, [r1, #0]
90017a70:	2b00      	cmp	r3, #0
90017a72:	d0e8      	beq.n	90017a46 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
90017a74:	781b      	ldrb	r3, [r3, #0]
90017a76:	e7e6      	b.n	90017a46 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
90017a78:	2a06      	cmp	r2, #6
90017a7a:	bfa8      	it	ge
90017a7c:	2206      	movge	r2, #6
90017a7e:	602a      	str	r2, [r5, #0]
90017a80:	e7b1      	b.n	900179e6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

90017a82 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
90017a82:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90017a86:	b0a3      	sub	sp, #140	; 0x8c
90017a88:	2600      	movs	r6, #0
90017a8a:	4607      	mov	r7, r0
90017a8c:	4688      	mov	r8, r1
90017a8e:	f10d 0944 	add.w	r9, sp, #68	; 0x44
90017a92:	4631      	mov	r1, r6
90017a94:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
90017a96:	4648      	mov	r0, r9
90017a98:	960d      	str	r6, [sp, #52]	; 0x34
90017a9a:	e9cd 3208 	strd	r3, r2, [sp, #32]
90017a9e:	2242      	movs	r2, #66	; 0x42
90017aa0:	f00e fd2e 	bl	90026500 <memset>
90017aa4:	b15f      	cbz	r7, 90017abe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
90017aa6:	f108 3aff 	add.w	sl, r8, #4294967295
90017aaa:	9a09      	ldr	r2, [sp, #36]	; 0x24
90017aac:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90017aae:	b152      	cbz	r2, 90017ac6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
90017ab0:	8812      	ldrh	r2, [r2, #0]
90017ab2:	b10a      	cbz	r2, 90017ab8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
90017ab4:	459a      	cmp	sl, r3
90017ab6:	dc2e      	bgt.n	90017b16 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
90017ab8:	2200      	movs	r2, #0
90017aba:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
90017abe:	4638      	mov	r0, r7
90017ac0:	b023      	add	sp, #140	; 0x8c
90017ac2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90017ac6:	9a08      	ldr	r2, [sp, #32]
90017ac8:	2a00      	cmp	r2, #0
90017aca:	d0f5      	beq.n	90017ab8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
90017acc:	7812      	ldrb	r2, [r2, #0]
90017ace:	e7f0      	b.n	90017ab2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
90017ad0:	2d00      	cmp	r5, #0
90017ad2:	d0ea      	beq.n	90017aaa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
90017ad4:	782a      	ldrb	r2, [r5, #0]
90017ad6:	b142      	cbz	r2, 90017aea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
90017ad8:	2a25      	cmp	r2, #37	; 0x25
90017ada:	d001      	beq.n	90017ae0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
90017adc:	459a      	cmp	sl, r3
90017ade:	dc08      	bgt.n	90017af2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
90017ae0:	f1bb 0f00 	cmp.w	fp, #0
90017ae4:	d121      	bne.n	90017b2a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
90017ae6:	2d00      	cmp	r5, #0
90017ae8:	d0df      	beq.n	90017aaa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
90017aea:	782a      	ldrb	r2, [r5, #0]
90017aec:	f04f 0b00 	mov.w	fp, #0
90017af0:	e01d      	b.n	90017b2e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
90017af2:	f1bb 0f00 	cmp.w	fp, #0
90017af6:	d077      	beq.n	90017be8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x166>
90017af8:	f8bb 2000 	ldrh.w	r2, [fp]
90017afc:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
90017b00:	f1bb 0f00 	cmp.w	fp, #0
90017b04:	d002      	beq.n	90017b0c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
90017b06:	f10b 0202 	add.w	r2, fp, #2
90017b0a:	9209      	str	r2, [sp, #36]	; 0x24
90017b0c:	b10d      	cbz	r5, 90017b12 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
90017b0e:	3501      	adds	r5, #1
90017b10:	9508      	str	r5, [sp, #32]
90017b12:	3301      	adds	r3, #1
90017b14:	930d      	str	r3, [sp, #52]	; 0x34
90017b16:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90017b18:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
90017b1c:	f1bb 0f00 	cmp.w	fp, #0
90017b20:	d0d6      	beq.n	90017ad0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
90017b22:	f8bb 2000 	ldrh.w	r2, [fp]
90017b26:	2a00      	cmp	r2, #0
90017b28:	d1d6      	bne.n	90017ad8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
90017b2a:	f8bb 2000 	ldrh.w	r2, [fp]
90017b2e:	2a00      	cmp	r2, #0
90017b30:	d0bb      	beq.n	90017aaa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
90017b32:	459a      	cmp	sl, r3
90017b34:	ddb9      	ble.n	90017aaa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
90017b36:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
90017b3a:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
90017b3e:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
90017b42:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
90017b46:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
90017b4a:	960e      	str	r6, [sp, #56]	; 0x38
90017b4c:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
90017b50:	960f      	str	r6, [sp, #60]	; 0x3c
90017b52:	f1bb 0f00 	cmp.w	fp, #0
90017b56:	d002      	beq.n	90017b5e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
90017b58:	f10b 0302 	add.w	r3, fp, #2
90017b5c:	9309      	str	r3, [sp, #36]	; 0x24
90017b5e:	b10d      	cbz	r5, 90017b64 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
90017b60:	1c6b      	adds	r3, r5, #1
90017b62:	9308      	str	r3, [sp, #32]
90017b64:	ab0f      	add	r3, sp, #60	; 0x3c
90017b66:	f10d 0232 	add.w	r2, sp, #50	; 0x32
90017b6a:	a908      	add	r1, sp, #32
90017b6c:	a809      	add	r0, sp, #36	; 0x24
90017b6e:	9305      	str	r3, [sp, #20]
90017b70:	f10d 0331 	add.w	r3, sp, #49	; 0x31
90017b74:	9304      	str	r3, [sp, #16]
90017b76:	ab0e      	add	r3, sp, #56	; 0x38
90017b78:	9303      	str	r3, [sp, #12]
90017b7a:	ab0c      	add	r3, sp, #48	; 0x30
90017b7c:	9302      	str	r3, [sp, #8]
90017b7e:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
90017b82:	9301      	str	r3, [sp, #4]
90017b84:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
90017b88:	9300      	str	r3, [sp, #0]
90017b8a:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
90017b8e:	f7ff fea8 	bl	900178e2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
90017b92:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90017b94:	2b00      	cmp	r3, #0
90017b96:	bfbf      	itttt	lt
90017b98:	6823      	ldrlt	r3, [r4, #0]
90017b9a:	3404      	addlt	r4, #4
90017b9c:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
90017ba0:	930e      	strlt	r3, [sp, #56]	; 0x38
90017ba2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90017ba4:	2b00      	cmp	r3, #0
90017ba6:	bfbe      	ittt	lt
90017ba8:	6823      	ldrlt	r3, [r4, #0]
90017baa:	3404      	addlt	r4, #4
90017bac:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
90017bb0:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
90017bb4:	bfb8      	it	lt
90017bb6:	930f      	strlt	r3, [sp, #60]	; 0x3c
90017bb8:	b1d9      	cbz	r1, 90017bf2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x170>
90017bba:	880b      	ldrh	r3, [r1, #0]
90017bbc:	2b69      	cmp	r3, #105	; 0x69
90017bbe:	d01f      	beq.n	90017c00 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
90017bc0:	d82f      	bhi.n	90017c22 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a0>
90017bc2:	2b58      	cmp	r3, #88	; 0x58
90017bc4:	d01c      	beq.n	90017c00 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
90017bc6:	d818      	bhi.n	90017bfa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x178>
90017bc8:	2b25      	cmp	r3, #37	; 0x25
90017bca:	d034      	beq.n	90017c36 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b4>
90017bcc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90017bce:	e9cd 5b08 	strd	r5, fp, [sp, #32]
90017bd2:	f1bb 0f00 	cmp.w	fp, #0
90017bd6:	f000 80b7 	beq.w	90017d48 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c6>
90017bda:	f8bb 5000 	ldrh.w	r5, [fp]
90017bde:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
90017be2:	3301      	adds	r3, #1
90017be4:	930d      	str	r3, [sp, #52]	; 0x34
90017be6:	e029      	b.n	90017c3c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ba>
90017be8:	b10d      	cbz	r5, 90017bee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16c>
90017bea:	782a      	ldrb	r2, [r5, #0]
90017bec:	e786      	b.n	90017afc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
90017bee:	462a      	mov	r2, r5
90017bf0:	e784      	b.n	90017afc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
90017bf2:	2a00      	cmp	r2, #0
90017bf4:	d0ea      	beq.n	90017bcc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
90017bf6:	7813      	ldrb	r3, [r2, #0]
90017bf8:	e7e0      	b.n	90017bbc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13a>
90017bfa:	3b63      	subs	r3, #99	; 0x63
90017bfc:	2b01      	cmp	r3, #1
90017bfe:	d8e5      	bhi.n	90017bcc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
90017c00:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
90017c04:	b329      	cbz	r1, 90017c52 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d0>
90017c06:	880b      	ldrh	r3, [r1, #0]
90017c08:	2b69      	cmp	r3, #105	; 0x69
90017c0a:	d063      	beq.n	90017cd4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x252>
90017c0c:	d825      	bhi.n	90017c5a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d8>
90017c0e:	2b63      	cmp	r3, #99	; 0x63
90017c10:	d038      	beq.n	90017c84 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x202>
90017c12:	2b64      	cmp	r3, #100	; 0x64
90017c14:	d05e      	beq.n	90017cd4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x252>
90017c16:	2b58      	cmp	r3, #88	; 0x58
90017c18:	d07a      	beq.n	90017d10 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28e>
90017c1a:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
90017c1e:	4625      	mov	r5, r4
90017c20:	e036      	b.n	90017c90 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
90017c22:	2b73      	cmp	r3, #115	; 0x73
90017c24:	d0ec      	beq.n	90017c00 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
90017c26:	d802      	bhi.n	90017c2e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ac>
90017c28:	2b6f      	cmp	r3, #111	; 0x6f
90017c2a:	d1cf      	bne.n	90017bcc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
90017c2c:	e7e8      	b.n	90017c00 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
90017c2e:	2b75      	cmp	r3, #117	; 0x75
90017c30:	d0e6      	beq.n	90017c00 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
90017c32:	2b78      	cmp	r3, #120	; 0x78
90017c34:	e7f9      	b.n	90017c2a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a8>
90017c36:	9a0d      	ldr	r2, [sp, #52]	; 0x34
90017c38:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
90017c3c:	9b09      	ldr	r3, [sp, #36]	; 0x24
90017c3e:	b10b      	cbz	r3, 90017c44 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c2>
90017c40:	3302      	adds	r3, #2
90017c42:	9309      	str	r3, [sp, #36]	; 0x24
90017c44:	9b08      	ldr	r3, [sp, #32]
90017c46:	2b00      	cmp	r3, #0
90017c48:	f43f af2f 	beq.w	90017aaa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
90017c4c:	3301      	adds	r3, #1
90017c4e:	9308      	str	r3, [sp, #32]
90017c50:	e72b      	b.n	90017aaa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
90017c52:	2a00      	cmp	r2, #0
90017c54:	d0e1      	beq.n	90017c1a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
90017c56:	7813      	ldrb	r3, [r2, #0]
90017c58:	e7d6      	b.n	90017c08 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x186>
90017c5a:	2b73      	cmp	r3, #115	; 0x73
90017c5c:	d036      	beq.n	90017ccc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24a>
90017c5e:	d807      	bhi.n	90017c70 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ee>
90017c60:	2b6f      	cmp	r3, #111	; 0x6f
90017c62:	d1da      	bne.n	90017c1a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
90017c64:	9a0d      	ldr	r2, [sp, #52]	; 0x34
90017c66:	1d25      	adds	r5, r4, #4
90017c68:	2308      	movs	r3, #8
90017c6a:	eba8 0202 	sub.w	r2, r8, r2
90017c6e:	e049      	b.n	90017d04 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x282>
90017c70:	2b75      	cmp	r3, #117	; 0x75
90017c72:	d042      	beq.n	90017cfa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x278>
90017c74:	2b78      	cmp	r3, #120	; 0x78
90017c76:	d1d0      	bne.n	90017c1a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
90017c78:	9a0d      	ldr	r2, [sp, #52]	; 0x34
90017c7a:	1d25      	adds	r5, r4, #4
90017c7c:	2310      	movs	r3, #16
90017c7e:	eba8 0202 	sub.w	r2, r8, r2
90017c82:	e03f      	b.n	90017d04 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x282>
90017c84:	6823      	ldr	r3, [r4, #0]
90017c86:	1d25      	adds	r5, r4, #4
90017c88:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
90017c8c:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
90017c90:	9b09      	ldr	r3, [sp, #36]	; 0x24
90017c92:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
90017c96:	2b00      	cmp	r3, #0
90017c98:	d051      	beq.n	90017d3e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2bc>
90017c9a:	881a      	ldrh	r2, [r3, #0]
90017c9c:	a80d      	add	r0, sp, #52	; 0x34
90017c9e:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
90017ca2:	462c      	mov	r4, r5
90017ca4:	9005      	str	r0, [sp, #20]
90017ca6:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
90017caa:	9004      	str	r0, [sp, #16]
90017cac:	980e      	ldr	r0, [sp, #56]	; 0x38
90017cae:	9003      	str	r0, [sp, #12]
90017cb0:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
90017cb4:	9002      	str	r0, [sp, #8]
90017cb6:	980f      	ldr	r0, [sp, #60]	; 0x3c
90017cb8:	9001      	str	r0, [sp, #4]
90017cba:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
90017cbe:	e9cd 8706 	strd	r8, r7, [sp, #24]
90017cc2:	9000      	str	r0, [sp, #0]
90017cc4:	a810      	add	r0, sp, #64	; 0x40
90017cc6:	f7ff fd49 	bl	9001775c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
90017cca:	e7b7      	b.n	90017c3c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ba>
90017ccc:	1d25      	adds	r5, r4, #4
90017cce:	6823      	ldr	r3, [r4, #0]
90017cd0:	9310      	str	r3, [sp, #64]	; 0x40
90017cd2:	e7dd      	b.n	90017c90 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
90017cd4:	9a0d      	ldr	r2, [sp, #52]	; 0x34
90017cd6:	230a      	movs	r3, #10
90017cd8:	4649      	mov	r1, r9
90017cda:	6820      	ldr	r0, [r4, #0]
90017cdc:	eba8 0202 	sub.w	r2, r8, r2
90017ce0:	1d25      	adds	r5, r4, #4
90017ce2:	b292      	uxth	r2, r2
90017ce4:	f7ff fcf0 	bl	900176c8 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
90017ce8:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
90017cec:	2b2d      	cmp	r3, #45	; 0x2d
90017cee:	d1cf      	bne.n	90017c90 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
90017cf0:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
90017cf4:	9b10      	ldr	r3, [sp, #64]	; 0x40
90017cf6:	3302      	adds	r3, #2
90017cf8:	e7ea      	b.n	90017cd0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24e>
90017cfa:	9a0d      	ldr	r2, [sp, #52]	; 0x34
90017cfc:	1d25      	adds	r5, r4, #4
90017cfe:	230a      	movs	r3, #10
90017d00:	eba8 0202 	sub.w	r2, r8, r2
90017d04:	b292      	uxth	r2, r2
90017d06:	4649      	mov	r1, r9
90017d08:	6820      	ldr	r0, [r4, #0]
90017d0a:	f7ff fd09 	bl	90017720 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
90017d0e:	e7bf      	b.n	90017c90 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
90017d10:	9a0d      	ldr	r2, [sp, #52]	; 0x34
90017d12:	2310      	movs	r3, #16
90017d14:	4649      	mov	r1, r9
90017d16:	6820      	ldr	r0, [r4, #0]
90017d18:	eba8 0202 	sub.w	r2, r8, r2
90017d1c:	1d25      	adds	r5, r4, #4
90017d1e:	b292      	uxth	r2, r2
90017d20:	f7ff fcfe 	bl	90017720 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
90017d24:	f10d 0242 	add.w	r2, sp, #66	; 0x42
90017d28:	f832 3f02 	ldrh.w	r3, [r2, #2]!
90017d2c:	2b00      	cmp	r3, #0
90017d2e:	d0af      	beq.n	90017c90 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
90017d30:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
90017d34:	2919      	cmp	r1, #25
90017d36:	d8f7      	bhi.n	90017d28 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2a6>
90017d38:	3b20      	subs	r3, #32
90017d3a:	8013      	strh	r3, [r2, #0]
90017d3c:	e7f4      	b.n	90017d28 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2a6>
90017d3e:	9a08      	ldr	r2, [sp, #32]
90017d40:	2a00      	cmp	r2, #0
90017d42:	d0ab      	beq.n	90017c9c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21a>
90017d44:	7812      	ldrb	r2, [r2, #0]
90017d46:	e7a9      	b.n	90017c9c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21a>
90017d48:	2d00      	cmp	r5, #0
90017d4a:	f43f af48 	beq.w	90017bde <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15c>
90017d4e:	782d      	ldrb	r5, [r5, #0]
90017d50:	e745      	b.n	90017bde <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15c>

90017d52 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
90017d52:	b507      	push	{r0, r1, r2, lr}
90017d54:	9300      	str	r3, [sp, #0]
90017d56:	4613      	mov	r3, r2
90017d58:	2200      	movs	r2, #0
90017d5a:	f7ff fe92 	bl	90017a82 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
90017d5e:	b003      	add	sp, #12
90017d60:	f85d fb04 	ldr.w	pc, [sp], #4

90017d64 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
90017d64:	b40c      	push	{r2, r3}
90017d66:	b507      	push	{r0, r1, r2, lr}
90017d68:	ab04      	add	r3, sp, #16
90017d6a:	f853 2b04 	ldr.w	r2, [r3], #4
90017d6e:	9301      	str	r3, [sp, #4]
90017d70:	f7ff ffef 	bl	90017d52 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
90017d74:	b003      	add	sp, #12
90017d76:	f85d eb04 	ldr.w	lr, [sp], #4
90017d7a:	b002      	add	sp, #8
90017d7c:	4770      	bx	lr
	...

90017d80 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
90017d80:	4b01      	ldr	r3, [pc, #4]	; (90017d88 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
90017d82:	6018      	str	r0, [r3, #0]
90017d84:	4770      	bx	lr
90017d86:	bf00      	nop
90017d88:	240235e4 	.word	0x240235e4

90017d8c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
90017d8c:	4b06      	ldr	r3, [pc, #24]	; (90017da8 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
90017d8e:	881a      	ldrh	r2, [r3, #0]
90017d90:	4282      	cmp	r2, r0
90017d92:	d807      	bhi.n	90017da4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
90017d94:	4b05      	ldr	r3, [pc, #20]	; (90017dac <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
90017d96:	881b      	ldrh	r3, [r3, #0]
90017d98:	4413      	add	r3, r2
90017d9a:	4298      	cmp	r0, r3
90017d9c:	bfac      	ite	ge
90017d9e:	2000      	movge	r0, #0
90017da0:	2001      	movlt	r0, #1
90017da2:	4770      	bx	lr
90017da4:	2000      	movs	r0, #0
90017da6:	4770      	bx	lr
90017da8:	24023604 	.word	0x24023604
90017dac:	24023608 	.word	0x24023608

90017db0 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
90017db0:	b508      	push	{r3, lr}
90017db2:	4601      	mov	r1, r0
90017db4:	f7ff ffea 	bl	90017d8c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
90017db8:	b118      	cbz	r0, 90017dc2 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
90017dba:	4b02      	ldr	r3, [pc, #8]	; (90017dc4 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
90017dbc:	681b      	ldr	r3, [r3, #0]
90017dbe:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
90017dc2:	bd08      	pop	{r3, pc}
90017dc4:	240235e8 	.word	0x240235e8

90017dc8 <_ZN8touchgfx6Bitmap10clearCacheEv>:
90017dc8:	b5f0      	push	{r4, r5, r6, r7, lr}
90017dca:	4c24      	ldr	r4, [pc, #144]	; (90017e5c <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
90017dcc:	6823      	ldr	r3, [r4, #0]
90017dce:	2b00      	cmp	r3, #0
90017dd0:	d042      	beq.n	90017e58 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
90017dd2:	4a23      	ldr	r2, [pc, #140]	; (90017e60 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
90017dd4:	4d23      	ldr	r5, [pc, #140]	; (90017e64 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
90017dd6:	8811      	ldrh	r1, [r2, #0]
90017dd8:	f8b5 c000 	ldrh.w	ip, [r5]
90017ddc:	4822      	ldr	r0, [pc, #136]	; (90017e68 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
90017dde:	4461      	add	r1, ip
90017de0:	1c4a      	adds	r2, r1, #1
90017de2:	008f      	lsls	r7, r1, #2
90017de4:	f022 0201 	bic.w	r2, r2, #1
90017de8:	19de      	adds	r6, r3, r7
90017dea:	0412      	lsls	r2, r2, #16
90017dec:	6006      	str	r6, [r0, #0]
90017dee:	4e1f      	ldr	r6, [pc, #124]	; (90017e6c <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
90017df0:	0c12      	lsrs	r2, r2, #16
90017df2:	eb07 0742 	add.w	r7, r7, r2, lsl #1
90017df6:	19da      	adds	r2, r3, r7
90017df8:	6032      	str	r2, [r6, #0]
90017dfa:	220e      	movs	r2, #14
90017dfc:	fb02 f20c 	mul.w	r2, r2, ip
90017e00:	3203      	adds	r2, #3
90017e02:	f022 0203 	bic.w	r2, r2, #3
90017e06:	443a      	add	r2, r7
90017e08:	4f19      	ldr	r7, [pc, #100]	; (90017e70 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
90017e0a:	4413      	add	r3, r2
90017e0c:	603b      	str	r3, [r7, #0]
90017e0e:	2300      	movs	r3, #0
90017e10:	4f18      	ldr	r7, [pc, #96]	; (90017e74 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
90017e12:	469c      	mov	ip, r3
90017e14:	803b      	strh	r3, [r7, #0]
90017e16:	4f18      	ldr	r7, [pc, #96]	; (90017e78 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
90017e18:	683f      	ldr	r7, [r7, #0]
90017e1a:	1aba      	subs	r2, r7, r2
90017e1c:	4f17      	ldr	r7, [pc, #92]	; (90017e7c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
90017e1e:	603a      	str	r2, [r7, #0]
90017e20:	f64f 77ff 	movw	r7, #65535	; 0xffff
90017e24:	4a16      	ldr	r2, [pc, #88]	; (90017e80 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
90017e26:	8013      	strh	r3, [r2, #0]
90017e28:	428b      	cmp	r3, r1
90017e2a:	d10d      	bne.n	90017e48 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
90017e2c:	882d      	ldrh	r5, [r5, #0]
90017e2e:	2300      	movs	r3, #0
90017e30:	6830      	ldr	r0, [r6, #0]
90017e32:	240e      	movs	r4, #14
90017e34:	429d      	cmp	r5, r3
90017e36:	d90f      	bls.n	90017e58 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
90017e38:	fb04 0203 	mla	r2, r4, r3, r0
90017e3c:	3301      	adds	r3, #1
90017e3e:	7b11      	ldrb	r1, [r2, #12]
90017e40:	f36f 1145 	bfc	r1, #5, #1
90017e44:	7311      	strb	r1, [r2, #12]
90017e46:	e7f5      	b.n	90017e34 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
90017e48:	6822      	ldr	r2, [r4, #0]
90017e4a:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
90017e4e:	6802      	ldr	r2, [r0, #0]
90017e50:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
90017e54:	3301      	adds	r3, #1
90017e56:	e7e7      	b.n	90017e28 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
90017e58:	bdf0      	pop	{r4, r5, r6, r7, pc}
90017e5a:	bf00      	nop
90017e5c:	240235e8 	.word	0x240235e8
90017e60:	24023604 	.word	0x24023604
90017e64:	24023608 	.word	0x24023608
90017e68:	240235fc 	.word	0x240235fc
90017e6c:	240235ec 	.word	0x240235ec
90017e70:	240235f4 	.word	0x240235f4
90017e74:	24023606 	.word	0x24023606
90017e78:	240235f0 	.word	0x240235f0
90017e7c:	24023600 	.word	0x24023600
90017e80:	240235f8 	.word	0x240235f8

90017e84 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
90017e84:	4b06      	ldr	r3, [pc, #24]	; (90017ea0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
90017e86:	681b      	ldr	r3, [r3, #0]
90017e88:	b943      	cbnz	r3, 90017e9c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
90017e8a:	b139      	cbz	r1, 90017e9c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
90017e8c:	4b05      	ldr	r3, [pc, #20]	; (90017ea4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
90017e8e:	801a      	strh	r2, [r3, #0]
90017e90:	4b05      	ldr	r3, [pc, #20]	; (90017ea8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
90017e92:	6019      	str	r1, [r3, #0]
90017e94:	4b05      	ldr	r3, [pc, #20]	; (90017eac <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
90017e96:	6018      	str	r0, [r3, #0]
90017e98:	f7ff bf96 	b.w	90017dc8 <_ZN8touchgfx6Bitmap10clearCacheEv>
90017e9c:	4770      	bx	lr
90017e9e:	bf00      	nop
90017ea0:	240235f4 	.word	0x240235f4
90017ea4:	24023608 	.word	0x24023608
90017ea8:	240235f0 	.word	0x240235f0
90017eac:	240235e8 	.word	0x240235e8

90017eb0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
90017eb0:	b470      	push	{r4, r5, r6}
90017eb2:	4c07      	ldr	r4, [pc, #28]	; (90017ed0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
90017eb4:	4605      	mov	r5, r0
90017eb6:	4610      	mov	r0, r2
90017eb8:	9a03      	ldr	r2, [sp, #12]
90017eba:	6826      	ldr	r6, [r4, #0]
90017ebc:	b936      	cbnz	r6, 90017ecc <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
90017ebe:	6025      	str	r5, [r4, #0]
90017ec0:	4c04      	ldr	r4, [pc, #16]	; (90017ed4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
90017ec2:	8021      	strh	r1, [r4, #0]
90017ec4:	4619      	mov	r1, r3
90017ec6:	bc70      	pop	{r4, r5, r6}
90017ec8:	f7ff bfdc 	b.w	90017e84 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
90017ecc:	bc70      	pop	{r4, r5, r6}
90017ece:	4770      	bx	lr
90017ed0:	2402360c 	.word	0x2402360c
90017ed4:	24023604 	.word	0x24023604

90017ed8 <_ZNK8touchgfx6Bitmap8getWidthEv>:
90017ed8:	4a12      	ldr	r2, [pc, #72]	; (90017f24 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
90017eda:	8803      	ldrh	r3, [r0, #0]
90017edc:	8812      	ldrh	r2, [r2, #0]
90017ede:	4293      	cmp	r3, r2
90017ee0:	d207      	bcs.n	90017ef2 <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
90017ee2:	4a11      	ldr	r2, [pc, #68]	; (90017f28 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
90017ee4:	2114      	movs	r1, #20
90017ee6:	6812      	ldr	r2, [r2, #0]
90017ee8:	fb01 2303 	mla	r3, r1, r3, r2
90017eec:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
90017ef0:	4770      	bx	lr
90017ef2:	490e      	ldr	r1, [pc, #56]	; (90017f2c <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
90017ef4:	8809      	ldrh	r1, [r1, #0]
90017ef6:	4411      	add	r1, r2
90017ef8:	428b      	cmp	r3, r1
90017efa:	da04      	bge.n	90017f06 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
90017efc:	1a9b      	subs	r3, r3, r2
90017efe:	4a0c      	ldr	r2, [pc, #48]	; (90017f30 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
90017f00:	210e      	movs	r1, #14
90017f02:	6812      	ldr	r2, [r2, #0]
90017f04:	e7f0      	b.n	90017ee8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
90017f06:	f64f 72fe 	movw	r2, #65534	; 0xfffe
90017f0a:	4293      	cmp	r3, r2
90017f0c:	d108      	bne.n	90017f20 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
90017f0e:	4b09      	ldr	r3, [pc, #36]	; (90017f34 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
90017f10:	781b      	ldrb	r3, [r3, #0]
90017f12:	b91b      	cbnz	r3, 90017f1c <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
90017f14:	4b08      	ldr	r3, [pc, #32]	; (90017f38 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
90017f16:	f9b3 0000 	ldrsh.w	r0, [r3]
90017f1a:	4770      	bx	lr
90017f1c:	4b07      	ldr	r3, [pc, #28]	; (90017f3c <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
90017f1e:	e7fa      	b.n	90017f16 <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
90017f20:	2000      	movs	r0, #0
90017f22:	4770      	bx	lr
90017f24:	24023604 	.word	0x24023604
90017f28:	2402360c 	.word	0x2402360c
90017f2c:	24023608 	.word	0x24023608
90017f30:	240235ec 	.word	0x240235ec
90017f34:	24023574 	.word	0x24023574
90017f38:	24023576 	.word	0x24023576
90017f3c:	24023578 	.word	0x24023578

90017f40 <_ZNK8touchgfx6Bitmap9getHeightEv>:
90017f40:	4a12      	ldr	r2, [pc, #72]	; (90017f8c <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
90017f42:	8803      	ldrh	r3, [r0, #0]
90017f44:	8812      	ldrh	r2, [r2, #0]
90017f46:	4293      	cmp	r3, r2
90017f48:	d207      	bcs.n	90017f5a <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
90017f4a:	4a11      	ldr	r2, [pc, #68]	; (90017f90 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
90017f4c:	2114      	movs	r1, #20
90017f4e:	6812      	ldr	r2, [r2, #0]
90017f50:	fb01 2303 	mla	r3, r1, r3, r2
90017f54:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
90017f58:	4770      	bx	lr
90017f5a:	490e      	ldr	r1, [pc, #56]	; (90017f94 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
90017f5c:	8809      	ldrh	r1, [r1, #0]
90017f5e:	4411      	add	r1, r2
90017f60:	428b      	cmp	r3, r1
90017f62:	da04      	bge.n	90017f6e <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
90017f64:	1a9b      	subs	r3, r3, r2
90017f66:	4a0c      	ldr	r2, [pc, #48]	; (90017f98 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
90017f68:	210e      	movs	r1, #14
90017f6a:	6812      	ldr	r2, [r2, #0]
90017f6c:	e7f0      	b.n	90017f50 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
90017f6e:	f64f 72fe 	movw	r2, #65534	; 0xfffe
90017f72:	4293      	cmp	r3, r2
90017f74:	d108      	bne.n	90017f88 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
90017f76:	4b09      	ldr	r3, [pc, #36]	; (90017f9c <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
90017f78:	781b      	ldrb	r3, [r3, #0]
90017f7a:	b91b      	cbnz	r3, 90017f84 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
90017f7c:	4b08      	ldr	r3, [pc, #32]	; (90017fa0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
90017f7e:	f9b3 0000 	ldrsh.w	r0, [r3]
90017f82:	4770      	bx	lr
90017f84:	4b07      	ldr	r3, [pc, #28]	; (90017fa4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
90017f86:	e7fa      	b.n	90017f7e <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
90017f88:	2000      	movs	r0, #0
90017f8a:	4770      	bx	lr
90017f8c:	24023604 	.word	0x24023604
90017f90:	2402360c 	.word	0x2402360c
90017f94:	24023608 	.word	0x24023608
90017f98:	240235ec 	.word	0x240235ec
90017f9c:	24023574 	.word	0x24023574
90017fa0:	24023578 	.word	0x24023578
90017fa4:	24023576 	.word	0x24023576

90017fa8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
90017fa8:	4a1f      	ldr	r2, [pc, #124]	; (90018028 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
90017faa:	b510      	push	{r4, lr}
90017fac:	880b      	ldrh	r3, [r1, #0]
90017fae:	8812      	ldrh	r2, [r2, #0]
90017fb0:	4293      	cmp	r3, r2
90017fb2:	d213      	bcs.n	90017fdc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
90017fb4:	4a1d      	ldr	r2, [pc, #116]	; (9001802c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
90017fb6:	2114      	movs	r1, #20
90017fb8:	6812      	ldr	r2, [r2, #0]
90017fba:	fb01 2303 	mla	r3, r1, r3, r2
90017fbe:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
90017fc2:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
90017fc6:	8a1a      	ldrh	r2, [r3, #16]
90017fc8:	8a5b      	ldrh	r3, [r3, #18]
90017fca:	f3c2 020c 	ubfx	r2, r2, #0, #13
90017fce:	8004      	strh	r4, [r0, #0]
90017fd0:	f3c3 030c 	ubfx	r3, r3, #0, #13
90017fd4:	8041      	strh	r1, [r0, #2]
90017fd6:	8082      	strh	r2, [r0, #4]
90017fd8:	80c3      	strh	r3, [r0, #6]
90017fda:	e00e      	b.n	90017ffa <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
90017fdc:	4914      	ldr	r1, [pc, #80]	; (90018030 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
90017fde:	8809      	ldrh	r1, [r1, #0]
90017fe0:	4411      	add	r1, r2
90017fe2:	428b      	cmp	r3, r1
90017fe4:	da0a      	bge.n	90017ffc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
90017fe6:	1a9b      	subs	r3, r3, r2
90017fe8:	4a12      	ldr	r2, [pc, #72]	; (90018034 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
90017fea:	210e      	movs	r1, #14
90017fec:	6812      	ldr	r2, [r2, #0]
90017fee:	fb01 2303 	mla	r3, r1, r3, r2
90017ff2:	681a      	ldr	r2, [r3, #0]
90017ff4:	6002      	str	r2, [r0, #0]
90017ff6:	685a      	ldr	r2, [r3, #4]
90017ff8:	6042      	str	r2, [r0, #4]
90017ffa:	bd10      	pop	{r4, pc}
90017ffc:	f64f 72fe 	movw	r2, #65534	; 0xfffe
90018000:	4293      	cmp	r3, r2
90018002:	d10b      	bne.n	9001801c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
90018004:	4b0c      	ldr	r3, [pc, #48]	; (90018038 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
90018006:	f9b3 1000 	ldrsh.w	r1, [r3]
9001800a:	4b0c      	ldr	r3, [pc, #48]	; (9001803c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
9001800c:	8081      	strh	r1, [r0, #4]
9001800e:	f9b3 2000 	ldrsh.w	r2, [r3]
90018012:	2300      	movs	r3, #0
90018014:	80c2      	strh	r2, [r0, #6]
90018016:	8003      	strh	r3, [r0, #0]
90018018:	8043      	strh	r3, [r0, #2]
9001801a:	e7ee      	b.n	90017ffa <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
9001801c:	2300      	movs	r3, #0
9001801e:	8003      	strh	r3, [r0, #0]
90018020:	8043      	strh	r3, [r0, #2]
90018022:	8083      	strh	r3, [r0, #4]
90018024:	e7d8      	b.n	90017fd8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
90018026:	bf00      	nop
90018028:	24023604 	.word	0x24023604
9001802c:	2402360c 	.word	0x2402360c
90018030:	24023608 	.word	0x24023608
90018034:	240235ec 	.word	0x240235ec
90018038:	24023570 	.word	0x24023570
9001803c:	24023572 	.word	0x24023572

90018040 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
90018040:	4a17      	ldr	r2, [pc, #92]	; (900180a0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
90018042:	8803      	ldrh	r3, [r0, #0]
90018044:	8812      	ldrh	r2, [r2, #0]
90018046:	4293      	cmp	r3, r2
90018048:	d213      	bcs.n	90018072 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
9001804a:	4a16      	ldr	r2, [pc, #88]	; (900180a4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
9001804c:	2114      	movs	r1, #20
9001804e:	6812      	ldr	r2, [r2, #0]
90018050:	fb01 2303 	mla	r3, r1, r3, r2
90018054:	8a1a      	ldrh	r2, [r3, #16]
90018056:	8919      	ldrh	r1, [r3, #8]
90018058:	f3c2 020c 	ubfx	r2, r2, #0, #13
9001805c:	428a      	cmp	r2, r1
9001805e:	db1d      	blt.n	9001809c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
90018060:	8a58      	ldrh	r0, [r3, #18]
90018062:	f3c0 000c 	ubfx	r0, r0, #0, #13
90018066:	895b      	ldrh	r3, [r3, #10]
90018068:	4298      	cmp	r0, r3
9001806a:	bfac      	ite	ge
9001806c:	2000      	movge	r0, #0
9001806e:	2001      	movlt	r0, #1
90018070:	4770      	bx	lr
90018072:	490d      	ldr	r1, [pc, #52]	; (900180a8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
90018074:	8809      	ldrh	r1, [r1, #0]
90018076:	4411      	add	r1, r2
90018078:	428b      	cmp	r3, r1
9001807a:	da0d      	bge.n	90018098 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
9001807c:	1a9b      	subs	r3, r3, r2
9001807e:	4a0b      	ldr	r2, [pc, #44]	; (900180ac <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
90018080:	210e      	movs	r1, #14
90018082:	6812      	ldr	r2, [r2, #0]
90018084:	fb01 2303 	mla	r3, r1, r3, r2
90018088:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
9001808c:	891a      	ldrh	r2, [r3, #8]
9001808e:	4291      	cmp	r1, r2
90018090:	db04      	blt.n	9001809c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
90018092:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
90018096:	e7e6      	b.n	90018066 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
90018098:	2000      	movs	r0, #0
9001809a:	4770      	bx	lr
9001809c:	2001      	movs	r0, #1
9001809e:	4770      	bx	lr
900180a0:	24023604 	.word	0x24023604
900180a4:	2402360c 	.word	0x2402360c
900180a8:	24023608 	.word	0x24023608
900180ac:	240235ec 	.word	0x240235ec

900180b0 <_ZNK8touchgfx6Bitmap7getDataEv>:
900180b0:	4a12      	ldr	r2, [pc, #72]	; (900180fc <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
900180b2:	8803      	ldrh	r3, [r0, #0]
900180b4:	8811      	ldrh	r1, [r2, #0]
900180b6:	428b      	cmp	r3, r1
900180b8:	d20b      	bcs.n	900180d2 <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
900180ba:	4a11      	ldr	r2, [pc, #68]	; (90018100 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
900180bc:	6812      	ldr	r2, [r2, #0]
900180be:	b112      	cbz	r2, 900180c6 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
900180c0:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
900180c4:	b9c0      	cbnz	r0, 900180f8 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
900180c6:	4a0f      	ldr	r2, [pc, #60]	; (90018104 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
900180c8:	6811      	ldr	r1, [r2, #0]
900180ca:	2214      	movs	r2, #20
900180cc:	4353      	muls	r3, r2
900180ce:	58c8      	ldr	r0, [r1, r3]
900180d0:	4770      	bx	lr
900180d2:	4a0d      	ldr	r2, [pc, #52]	; (90018108 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
900180d4:	8812      	ldrh	r2, [r2, #0]
900180d6:	440a      	add	r2, r1
900180d8:	4293      	cmp	r3, r2
900180da:	da04      	bge.n	900180e6 <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
900180dc:	4a08      	ldr	r2, [pc, #32]	; (90018100 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
900180de:	6812      	ldr	r2, [r2, #0]
900180e0:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
900180e4:	4770      	bx	lr
900180e6:	f64f 72fe 	movw	r2, #65534	; 0xfffe
900180ea:	4293      	cmp	r3, r2
900180ec:	d103      	bne.n	900180f6 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
900180ee:	4b07      	ldr	r3, [pc, #28]	; (9001810c <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
900180f0:	681b      	ldr	r3, [r3, #0]
900180f2:	6c58      	ldr	r0, [r3, #68]	; 0x44
900180f4:	4770      	bx	lr
900180f6:	2000      	movs	r0, #0
900180f8:	4770      	bx	lr
900180fa:	bf00      	nop
900180fc:	24023604 	.word	0x24023604
90018100:	240235e8 	.word	0x240235e8
90018104:	2402360c 	.word	0x2402360c
90018108:	24023608 	.word	0x24023608
9001810c:	2402357c 	.word	0x2402357c

90018110 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
90018110:	4b24      	ldr	r3, [pc, #144]	; (900181a4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
90018112:	8802      	ldrh	r2, [r0, #0]
90018114:	8818      	ldrh	r0, [r3, #0]
90018116:	4282      	cmp	r2, r0
90018118:	d221      	bcs.n	9001815e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
9001811a:	4b23      	ldr	r3, [pc, #140]	; (900181a8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
9001811c:	6819      	ldr	r1, [r3, #0]
9001811e:	2314      	movs	r3, #20
90018120:	fb03 1302 	mla	r3, r3, r2, r1
90018124:	6858      	ldr	r0, [r3, #4]
90018126:	2800      	cmp	r0, #0
90018128:	d03a      	beq.n	900181a0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
9001812a:	4920      	ldr	r1, [pc, #128]	; (900181ac <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
9001812c:	6809      	ldr	r1, [r1, #0]
9001812e:	2900      	cmp	r1, #0
90018130:	d036      	beq.n	900181a0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
90018132:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
90018136:	2900      	cmp	r1, #0
90018138:	d032      	beq.n	900181a0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
9001813a:	891a      	ldrh	r2, [r3, #8]
9001813c:	8958      	ldrh	r0, [r3, #10]
9001813e:	4350      	muls	r0, r2
90018140:	7c5a      	ldrb	r2, [r3, #17]
90018142:	7cdb      	ldrb	r3, [r3, #19]
90018144:	0952      	lsrs	r2, r2, #5
90018146:	f3c3 1342 	ubfx	r3, r3, #5, #3
9001814a:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
9001814e:	2b0b      	cmp	r3, #11
90018150:	bf18      	it	ne
90018152:	0040      	lslne	r0, r0, #1
90018154:	3003      	adds	r0, #3
90018156:	f020 0003 	bic.w	r0, r0, #3
9001815a:	4408      	add	r0, r1
9001815c:	4770      	bx	lr
9001815e:	4b14      	ldr	r3, [pc, #80]	; (900181b0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
90018160:	881b      	ldrh	r3, [r3, #0]
90018162:	4403      	add	r3, r0
90018164:	429a      	cmp	r2, r3
90018166:	da1a      	bge.n	9001819e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
90018168:	4b12      	ldr	r3, [pc, #72]	; (900181b4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
9001816a:	1a10      	subs	r0, r2, r0
9001816c:	210e      	movs	r1, #14
9001816e:	681b      	ldr	r3, [r3, #0]
90018170:	fb01 3000 	mla	r0, r1, r0, r3
90018174:	7b03      	ldrb	r3, [r0, #12]
90018176:	f003 031f 	and.w	r3, r3, #31
9001817a:	2b0b      	cmp	r3, #11
9001817c:	d10b      	bne.n	90018196 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
9001817e:	8903      	ldrh	r3, [r0, #8]
90018180:	8940      	ldrh	r0, [r0, #10]
90018182:	4358      	muls	r0, r3
90018184:	4b09      	ldr	r3, [pc, #36]	; (900181ac <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
90018186:	3003      	adds	r0, #3
90018188:	6819      	ldr	r1, [r3, #0]
9001818a:	f020 0303 	bic.w	r3, r0, #3
9001818e:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
90018192:	4418      	add	r0, r3
90018194:	4770      	bx	lr
90018196:	2b0d      	cmp	r3, #13
90018198:	d101      	bne.n	9001819e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
9001819a:	300d      	adds	r0, #13
9001819c:	4770      	bx	lr
9001819e:	2000      	movs	r0, #0
900181a0:	4770      	bx	lr
900181a2:	bf00      	nop
900181a4:	24023604 	.word	0x24023604
900181a8:	2402360c 	.word	0x2402360c
900181ac:	240235e8 	.word	0x240235e8
900181b0:	24023608 	.word	0x24023608
900181b4:	240235ec 	.word	0x240235ec

900181b8 <_ZNK8touchgfx6Bitmap9getFormatEv>:
900181b8:	4a17      	ldr	r2, [pc, #92]	; (90018218 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
900181ba:	b510      	push	{r4, lr}
900181bc:	8803      	ldrh	r3, [r0, #0]
900181be:	8812      	ldrh	r2, [r2, #0]
900181c0:	4293      	cmp	r3, r2
900181c2:	d20c      	bcs.n	900181de <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
900181c4:	4a15      	ldr	r2, [pc, #84]	; (9001821c <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
900181c6:	2114      	movs	r1, #20
900181c8:	6812      	ldr	r2, [r2, #0]
900181ca:	fb01 2303 	mla	r3, r1, r3, r2
900181ce:	7c58      	ldrb	r0, [r3, #17]
900181d0:	0942      	lsrs	r2, r0, #5
900181d2:	7cd8      	ldrb	r0, [r3, #19]
900181d4:	f3c0 1042 	ubfx	r0, r0, #5, #3
900181d8:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
900181dc:	bd10      	pop	{r4, pc}
900181de:	4910      	ldr	r1, [pc, #64]	; (90018220 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
900181e0:	8809      	ldrh	r1, [r1, #0]
900181e2:	4411      	add	r1, r2
900181e4:	428b      	cmp	r3, r1
900181e6:	da09      	bge.n	900181fc <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
900181e8:	1a9b      	subs	r3, r3, r2
900181ea:	4a0e      	ldr	r2, [pc, #56]	; (90018224 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
900181ec:	210e      	movs	r1, #14
900181ee:	6812      	ldr	r2, [r2, #0]
900181f0:	fb01 2303 	mla	r3, r1, r3, r2
900181f4:	7b18      	ldrb	r0, [r3, #12]
900181f6:	f000 001f 	and.w	r0, r0, #31
900181fa:	e7ef      	b.n	900181dc <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
900181fc:	f64f 72fe 	movw	r2, #65534	; 0xfffe
90018200:	4293      	cmp	r3, r2
90018202:	d106      	bne.n	90018212 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
90018204:	f7f8 f8ec 	bl	900103e0 <_ZN8touchgfx3HAL3lcdEv>
90018208:	6803      	ldr	r3, [r0, #0]
9001820a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001820e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90018210:	4718      	bx	r3
90018212:	2000      	movs	r0, #0
90018214:	e7e2      	b.n	900181dc <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
90018216:	bf00      	nop
90018218:	24023604 	.word	0x24023604
9001821c:	2402360c 	.word	0x2402360c
90018220:	24023608 	.word	0x24023608
90018224:	240235ec 	.word	0x240235ec

90018228 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
90018228:	2010      	movs	r0, #16
9001822a:	4770      	bx	lr

9001822c <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
9001822c:	4b02      	ldr	r3, [pc, #8]	; (90018238 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
9001822e:	8818      	ldrh	r0, [r3, #0]
90018230:	0040      	lsls	r0, r0, #1
90018232:	b280      	uxth	r0, r0
90018234:	4770      	bx	lr
90018236:	bf00      	nop
90018238:	24023576 	.word	0x24023576

9001823c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
9001823c:	2bff      	cmp	r3, #255	; 0xff
9001823e:	d050      	beq.n	900182e2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
90018240:	2a0b      	cmp	r2, #11
90018242:	d04a      	beq.n	900182da <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
90018244:	d80e      	bhi.n	90018264 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
90018246:	2a03      	cmp	r2, #3
90018248:	d03f      	beq.n	900182ca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
9001824a:	d804      	bhi.n	90018256 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
9001824c:	2a01      	cmp	r2, #1
9001824e:	d03e      	beq.n	900182ce <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
90018250:	d93f      	bls.n	900182d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
90018252:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
90018254:	4770      	bx	lr
90018256:	2a09      	cmp	r2, #9
90018258:	d03f      	beq.n	900182da <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
9001825a:	d83c      	bhi.n	900182d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
9001825c:	2a08      	cmp	r2, #8
9001825e:	d03a      	beq.n	900182d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
90018260:	2000      	movs	r0, #0
90018262:	4770      	bx	lr
90018264:	2a2f      	cmp	r2, #47	; 0x2f
90018266:	d024      	beq.n	900182b2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
90018268:	d80d      	bhi.n	90018286 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
9001826a:	2a2d      	cmp	r2, #45	; 0x2d
9001826c:	d014      	beq.n	90018298 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
9001826e:	d826      	bhi.n	900182be <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
90018270:	2a2c      	cmp	r2, #44	; 0x2c
90018272:	d1f5      	bne.n	90018260 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90018274:	684b      	ldr	r3, [r1, #4]
90018276:	781b      	ldrb	r3, [r3, #0]
90018278:	2b01      	cmp	r3, #1
9001827a:	d018      	beq.n	900182ae <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
9001827c:	d323      	bcc.n	900182c6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
9001827e:	2b02      	cmp	r3, #2
90018280:	d1ee      	bne.n	90018260 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90018282:	68c0      	ldr	r0, [r0, #12]
90018284:	4770      	bx	lr
90018286:	2a31      	cmp	r2, #49	; 0x31
90018288:	d004      	beq.n	90018294 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
9001828a:	d328      	bcc.n	900182de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
9001828c:	2a32      	cmp	r2, #50	; 0x32
9001828e:	d026      	beq.n	900182de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
90018290:	2a33      	cmp	r2, #51	; 0x33
90018292:	d1e5      	bne.n	90018260 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90018294:	6f40      	ldr	r0, [r0, #116]	; 0x74
90018296:	4770      	bx	lr
90018298:	684b      	ldr	r3, [r1, #4]
9001829a:	781b      	ldrb	r3, [r3, #0]
9001829c:	2b01      	cmp	r3, #1
9001829e:	d004      	beq.n	900182aa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
900182a0:	d30b      	bcc.n	900182ba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
900182a2:	2b02      	cmp	r3, #2
900182a4:	d1dc      	bne.n	90018260 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
900182a6:	6940      	ldr	r0, [r0, #20]
900182a8:	4770      	bx	lr
900182aa:	6a40      	ldr	r0, [r0, #36]	; 0x24
900182ac:	4770      	bx	lr
900182ae:	69c0      	ldr	r0, [r0, #28]
900182b0:	4770      	bx	lr
900182b2:	684b      	ldr	r3, [r1, #4]
900182b4:	781b      	ldrb	r3, [r3, #0]
900182b6:	2b00      	cmp	r3, #0
900182b8:	d1d2      	bne.n	90018260 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
900182ba:	6b40      	ldr	r0, [r0, #52]	; 0x34
900182bc:	4770      	bx	lr
900182be:	684b      	ldr	r3, [r1, #4]
900182c0:	781b      	ldrb	r3, [r3, #0]
900182c2:	2b00      	cmp	r3, #0
900182c4:	d1cc      	bne.n	90018260 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
900182c6:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
900182c8:	4770      	bx	lr
900182ca:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
900182cc:	4770      	bx	lr
900182ce:	6d40      	ldr	r0, [r0, #84]	; 0x54
900182d0:	4770      	bx	lr
900182d2:	6c40      	ldr	r0, [r0, #68]	; 0x44
900182d4:	4770      	bx	lr
900182d6:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
900182d8:	4770      	bx	lr
900182da:	6e40      	ldr	r0, [r0, #100]	; 0x64
900182dc:	4770      	bx	lr
900182de:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
900182e0:	4770      	bx	lr
900182e2:	2a0b      	cmp	r2, #11
900182e4:	d049      	beq.n	9001837a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
900182e6:	d80e      	bhi.n	90018306 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
900182e8:	2a03      	cmp	r2, #3
900182ea:	d040      	beq.n	9001836e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
900182ec:	d804      	bhi.n	900182f8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
900182ee:	2a01      	cmp	r2, #1
900182f0:	d03f      	beq.n	90018372 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
900182f2:	d940      	bls.n	90018376 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
900182f4:	6c00      	ldr	r0, [r0, #64]	; 0x40
900182f6:	4770      	bx	lr
900182f8:	2a09      	cmp	r2, #9
900182fa:	d03e      	beq.n	9001837a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
900182fc:	d801      	bhi.n	90018302 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
900182fe:	2a08      	cmp	r2, #8
90018300:	d1ae      	bne.n	90018260 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90018302:	6e00      	ldr	r0, [r0, #96]	; 0x60
90018304:	4770      	bx	lr
90018306:	2a2f      	cmp	r2, #47	; 0x2f
90018308:	d024      	beq.n	90018354 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
9001830a:	d80d      	bhi.n	90018328 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
9001830c:	2a2d      	cmp	r2, #45	; 0x2d
9001830e:	d014      	beq.n	9001833a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
90018310:	d826      	bhi.n	90018360 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
90018312:	2a2c      	cmp	r2, #44	; 0x2c
90018314:	d1a4      	bne.n	90018260 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90018316:	684b      	ldr	r3, [r1, #4]
90018318:	781b      	ldrb	r3, [r3, #0]
9001831a:	2b01      	cmp	r3, #1
9001831c:	d018      	beq.n	90018350 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
9001831e:	d324      	bcc.n	9001836a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
90018320:	2b02      	cmp	r3, #2
90018322:	d19d      	bne.n	90018260 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90018324:	6900      	ldr	r0, [r0, #16]
90018326:	4770      	bx	lr
90018328:	2a31      	cmp	r2, #49	; 0x31
9001832a:	d004      	beq.n	90018336 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
9001832c:	d327      	bcc.n	9001837e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
9001832e:	2a32      	cmp	r2, #50	; 0x32
90018330:	d025      	beq.n	9001837e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
90018332:	2a33      	cmp	r2, #51	; 0x33
90018334:	d194      	bne.n	90018260 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90018336:	6f80      	ldr	r0, [r0, #120]	; 0x78
90018338:	4770      	bx	lr
9001833a:	684b      	ldr	r3, [r1, #4]
9001833c:	781b      	ldrb	r3, [r3, #0]
9001833e:	2b01      	cmp	r3, #1
90018340:	d004      	beq.n	9001834c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
90018342:	d30b      	bcc.n	9001835c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
90018344:	2b02      	cmp	r3, #2
90018346:	d18b      	bne.n	90018260 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90018348:	6980      	ldr	r0, [r0, #24]
9001834a:	4770      	bx	lr
9001834c:	6a80      	ldr	r0, [r0, #40]	; 0x28
9001834e:	4770      	bx	lr
90018350:	6a00      	ldr	r0, [r0, #32]
90018352:	4770      	bx	lr
90018354:	684b      	ldr	r3, [r1, #4]
90018356:	781b      	ldrb	r3, [r3, #0]
90018358:	2b00      	cmp	r3, #0
9001835a:	d181      	bne.n	90018260 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001835c:	6b80      	ldr	r0, [r0, #56]	; 0x38
9001835e:	4770      	bx	lr
90018360:	684b      	ldr	r3, [r1, #4]
90018362:	781b      	ldrb	r3, [r3, #0]
90018364:	2b00      	cmp	r3, #0
90018366:	f47f af7b 	bne.w	90018260 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001836a:	6b00      	ldr	r0, [r0, #48]	; 0x30
9001836c:	4770      	bx	lr
9001836e:	6d00      	ldr	r0, [r0, #80]	; 0x50
90018370:	4770      	bx	lr
90018372:	6d80      	ldr	r0, [r0, #88]	; 0x58
90018374:	4770      	bx	lr
90018376:	6c80      	ldr	r0, [r0, #72]	; 0x48
90018378:	4770      	bx	lr
9001837a:	6e80      	ldr	r0, [r0, #104]	; 0x68
9001837c:	4770      	bx	lr
9001837e:	6f00      	ldr	r0, [r0, #112]	; 0x70
90018380:	4770      	bx	lr

90018382 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90018382:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90018386:	b087      	sub	sp, #28
90018388:	9815      	ldr	r0, [sp, #84]	; 0x54
9001838a:	9205      	str	r2, [sp, #20]
9001838c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
90018390:	9101      	str	r1, [sp, #4]
90018392:	9202      	str	r2, [sp, #8]
90018394:	6841      	ldr	r1, [r0, #4]
90018396:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
9001839a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
9001839e:	fb01 2404 	mla	r4, r1, r4, r2
900183a2:	6802      	ldr	r2, [r0, #0]
900183a4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
900183a8:	f8de 2000 	ldr.w	r2, [lr]
900183ac:	9203      	str	r2, [sp, #12]
900183ae:	f8de 2004 	ldr.w	r2, [lr, #4]
900183b2:	3204      	adds	r2, #4
900183b4:	9204      	str	r2, [sp, #16]
900183b6:	9a02      	ldr	r2, [sp, #8]
900183b8:	43d6      	mvns	r6, r2
900183ba:	b2f6      	uxtb	r6, r6
900183bc:	9a01      	ldr	r2, [sp, #4]
900183be:	2a00      	cmp	r2, #0
900183c0:	dc03      	bgt.n	900183ca <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
900183c2:	9a05      	ldr	r2, [sp, #20]
900183c4:	2a00      	cmp	r2, #0
900183c6:	f340 8129 	ble.w	9001861c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
900183ca:	9a11      	ldr	r2, [sp, #68]	; 0x44
900183cc:	f9be c008 	ldrsh.w	ip, [lr, #8]
900183d0:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
900183d4:	9a12      	ldr	r2, [sp, #72]	; 0x48
900183d6:	f9be 700c 	ldrsh.w	r7, [lr, #12]
900183da:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
900183de:	2b00      	cmp	r3, #0
900183e0:	dd0e      	ble.n	90018400 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
900183e2:	1408      	asrs	r0, r1, #16
900183e4:	d405      	bmi.n	900183f2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
900183e6:	4560      	cmp	r0, ip
900183e8:	da03      	bge.n	900183f2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
900183ea:	1410      	asrs	r0, r2, #16
900183ec:	d401      	bmi.n	900183f2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
900183ee:	42b8      	cmp	r0, r7
900183f0:	db07      	blt.n	90018402 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
900183f2:	9813      	ldr	r0, [sp, #76]	; 0x4c
900183f4:	3b01      	subs	r3, #1
900183f6:	3402      	adds	r4, #2
900183f8:	4401      	add	r1, r0
900183fa:	9814      	ldr	r0, [sp, #80]	; 0x50
900183fc:	4402      	add	r2, r0
900183fe:	e7ee      	b.n	900183de <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
90018400:	d071      	beq.n	900184e6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90018402:	1e58      	subs	r0, r3, #1
90018404:	9d13      	ldr	r5, [sp, #76]	; 0x4c
90018406:	fb05 1500 	mla	r5, r5, r0, r1
9001840a:	142d      	asrs	r5, r5, #16
9001840c:	d45f      	bmi.n	900184ce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
9001840e:	4565      	cmp	r5, ip
90018410:	da5d      	bge.n	900184ce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
90018412:	9d14      	ldr	r5, [sp, #80]	; 0x50
90018414:	fb05 2000 	mla	r0, r5, r0, r2
90018418:	1400      	asrs	r0, r0, #16
9001841a:	d458      	bmi.n	900184ce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
9001841c:	42b8      	cmp	r0, r7
9001841e:	da56      	bge.n	900184ce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
90018420:	4699      	mov	r9, r3
90018422:	46a2      	mov	sl, r4
90018424:	f8bd b008 	ldrh.w	fp, [sp, #8]
90018428:	f1b9 0f00 	cmp.w	r9, #0
9001842c:	dd57      	ble.n	900184de <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
9001842e:	ea4f 4c22 	mov.w	ip, r2, asr #16
90018432:	f9be 7008 	ldrsh.w	r7, [lr, #8]
90018436:	9803      	ldr	r0, [sp, #12]
90018438:	140d      	asrs	r5, r1, #16
9001843a:	f109 39ff 	add.w	r9, r9, #4294967295
9001843e:	fb07 000c 	mla	r0, r7, ip, r0
90018442:	5d40      	ldrb	r0, [r0, r5]
90018444:	9d04      	ldr	r5, [sp, #16]
90018446:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
9001844a:	f8ba 5000 	ldrh.w	r5, [sl]
9001844e:	ea4f 2c20 	mov.w	ip, r0, asr #8
90018452:	122f      	asrs	r7, r5, #8
90018454:	ea4f 08e5 	mov.w	r8, r5, asr #3
90018458:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001845c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
90018460:	00ed      	lsls	r5, r5, #3
90018462:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
90018466:	fb17 f706 	smulbb	r7, r7, r6
9001846a:	b2ed      	uxtb	r5, r5
9001846c:	fb18 f806 	smulbb	r8, r8, r6
90018470:	fb0c 7c0b 	mla	ip, ip, fp, r7
90018474:	10c7      	asrs	r7, r0, #3
90018476:	fb15 f506 	smulbb	r5, r5, r6
9001847a:	00c0      	lsls	r0, r0, #3
9001847c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
90018480:	fa1f fc8c 	uxth.w	ip, ip
90018484:	b2c0      	uxtb	r0, r0
90018486:	fb07 870b 	mla	r7, r7, fp, r8
9001848a:	fb00 500b 	mla	r0, r0, fp, r5
9001848e:	f10c 0501 	add.w	r5, ip, #1
90018492:	b2bf      	uxth	r7, r7
90018494:	b280      	uxth	r0, r0
90018496:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001849a:	f107 0801 	add.w	r8, r7, #1
9001849e:	1c45      	adds	r5, r0, #1
900184a0:	eb08 2817 	add.w	r8, r8, r7, lsr #8
900184a4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
900184a8:	eb05 2510 	add.w	r5, r5, r0, lsr #8
900184ac:	9813      	ldr	r0, [sp, #76]	; 0x4c
900184ae:	ea4f 1858 	mov.w	r8, r8, lsr #5
900184b2:	f3c5 25c4 	ubfx	r5, r5, #11, #5
900184b6:	4401      	add	r1, r0
900184b8:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
900184bc:	9814      	ldr	r0, [sp, #80]	; 0x50
900184be:	ea45 0c0c 	orr.w	ip, r5, ip
900184c2:	4402      	add	r2, r0
900184c4:	ea4c 0c08 	orr.w	ip, ip, r8
900184c8:	f82a cb02 	strh.w	ip, [sl], #2
900184cc:	e7ac      	b.n	90018428 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
900184ce:	f04f 0800 	mov.w	r8, #0
900184d2:	f8bd a008 	ldrh.w	sl, [sp, #8]
900184d6:	eb03 0008 	add.w	r0, r3, r8
900184da:	2800      	cmp	r0, #0
900184dc:	dc41      	bgt.n	90018562 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
900184de:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
900184e2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
900184e6:	9b01      	ldr	r3, [sp, #4]
900184e8:	2b00      	cmp	r3, #0
900184ea:	f340 8097 	ble.w	9001861c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
900184ee:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
900184f2:	9b10      	ldr	r3, [sp, #64]	; 0x40
900184f4:	ee30 0a04 	vadd.f32	s0, s0, s8
900184f8:	ee70 0aa4 	vadd.f32	s1, s1, s9
900184fc:	eef0 6a62 	vmov.f32	s13, s5
90018500:	eec7 7a00 	vdiv.f32	s15, s14, s0
90018504:	ee31 1a05 	vadd.f32	s2, s2, s10
90018508:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001850c:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
90018510:	eef0 6a43 	vmov.f32	s13, s6
90018514:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90018518:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
9001851c:	ee20 7aa7 	vmul.f32	s14, s1, s15
90018520:	ee61 7a27 	vmul.f32	s15, s2, s15
90018524:	ee77 2a62 	vsub.f32	s5, s14, s5
90018528:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001852c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90018530:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90018534:	ee12 2a90 	vmov	r2, s5
90018538:	eef0 2a47 	vmov.f32	s5, s14
9001853c:	fb92 f3f3 	sdiv	r3, r2, r3
90018540:	ee13 2a10 	vmov	r2, s6
90018544:	9313      	str	r3, [sp, #76]	; 0x4c
90018546:	9b10      	ldr	r3, [sp, #64]	; 0x40
90018548:	eeb0 3a67 	vmov.f32	s6, s15
9001854c:	fb92 f3f3 	sdiv	r3, r2, r3
90018550:	9314      	str	r3, [sp, #80]	; 0x50
90018552:	9b01      	ldr	r3, [sp, #4]
90018554:	9a05      	ldr	r2, [sp, #20]
90018556:	3b01      	subs	r3, #1
90018558:	9301      	str	r3, [sp, #4]
9001855a:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001855c:	bf08      	it	eq
9001855e:	4613      	moveq	r3, r2
90018560:	e72c      	b.n	900183bc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
90018562:	140f      	asrs	r7, r1, #16
90018564:	d453      	bmi.n	9001860e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
90018566:	f8de 5008 	ldr.w	r5, [lr, #8]
9001856a:	42bd      	cmp	r5, r7
9001856c:	dd4f      	ble.n	9001860e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
9001856e:	ea5f 4c22 	movs.w	ip, r2, asr #16
90018572:	d44c      	bmi.n	9001860e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
90018574:	f8de 000c 	ldr.w	r0, [lr, #12]
90018578:	4560      	cmp	r0, ip
9001857a:	dd48      	ble.n	9001860e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
9001857c:	9803      	ldr	r0, [sp, #12]
9001857e:	b22d      	sxth	r5, r5
90018580:	fb0c 0505 	mla	r5, ip, r5, r0
90018584:	5de8      	ldrb	r0, [r5, r7]
90018586:	9d04      	ldr	r5, [sp, #16]
90018588:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
9001858c:	f06f 0501 	mvn.w	r5, #1
90018590:	fb05 fb08 	mul.w	fp, r5, r8
90018594:	ea4f 2c20 	mov.w	ip, r0, asr #8
90018598:	f834 500b 	ldrh.w	r5, [r4, fp]
9001859c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
900185a0:	122f      	asrs	r7, r5, #8
900185a2:	ea4f 09e5 	mov.w	r9, r5, asr #3
900185a6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
900185aa:	00ed      	lsls	r5, r5, #3
900185ac:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
900185b0:	fb17 f706 	smulbb	r7, r7, r6
900185b4:	b2ed      	uxtb	r5, r5
900185b6:	fb19 f906 	smulbb	r9, r9, r6
900185ba:	fb0c 7c0a 	mla	ip, ip, sl, r7
900185be:	10c7      	asrs	r7, r0, #3
900185c0:	fb15 f506 	smulbb	r5, r5, r6
900185c4:	00c0      	lsls	r0, r0, #3
900185c6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
900185ca:	fa1f fc8c 	uxth.w	ip, ip
900185ce:	b2c0      	uxtb	r0, r0
900185d0:	fb07 970a 	mla	r7, r7, sl, r9
900185d4:	fb00 500a 	mla	r0, r0, sl, r5
900185d8:	f10c 0501 	add.w	r5, ip, #1
900185dc:	b2bf      	uxth	r7, r7
900185de:	b280      	uxth	r0, r0
900185e0:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
900185e4:	f107 0901 	add.w	r9, r7, #1
900185e8:	1c45      	adds	r5, r0, #1
900185ea:	eb09 2917 	add.w	r9, r9, r7, lsr #8
900185ee:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
900185f2:	eb05 2510 	add.w	r5, r5, r0, lsr #8
900185f6:	ea4f 1959 	mov.w	r9, r9, lsr #5
900185fa:	f3c5 25c4 	ubfx	r5, r5, #11, #5
900185fe:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
90018602:	ea45 0c0c 	orr.w	ip, r5, ip
90018606:	ea4c 0c09 	orr.w	ip, ip, r9
9001860a:	f824 c00b 	strh.w	ip, [r4, fp]
9001860e:	9813      	ldr	r0, [sp, #76]	; 0x4c
90018610:	f108 38ff 	add.w	r8, r8, #4294967295
90018614:	4401      	add	r1, r0
90018616:	9814      	ldr	r0, [sp, #80]	; 0x50
90018618:	4402      	add	r2, r0
9001861a:	e75c      	b.n	900184d6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
9001861c:	b007      	add	sp, #28
9001861e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90018622 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90018622:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90018626:	b085      	sub	sp, #20
90018628:	4693      	mov	fp, r2
9001862a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001862e:	9e13      	ldr	r6, [sp, #76]	; 0x4c
90018630:	9d16      	ldr	r5, [sp, #88]	; 0x58
90018632:	6870      	ldr	r0, [r6, #4]
90018634:	9100      	str	r1, [sp, #0]
90018636:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
9001863a:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
9001863e:	fb00 2404 	mla	r4, r0, r4, r2
90018642:	6832      	ldr	r2, [r6, #0]
90018644:	eb02 0444 	add.w	r4, r2, r4, lsl #1
90018648:	682a      	ldr	r2, [r5, #0]
9001864a:	9201      	str	r2, [sp, #4]
9001864c:	686a      	ldr	r2, [r5, #4]
9001864e:	3204      	adds	r2, #4
90018650:	9202      	str	r2, [sp, #8]
90018652:	9a00      	ldr	r2, [sp, #0]
90018654:	2a00      	cmp	r2, #0
90018656:	dc03      	bgt.n	90018660 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
90018658:	f1bb 0f00 	cmp.w	fp, #0
9001865c:	f340 80a0 	ble.w	900187a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
90018660:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
90018662:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
90018666:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
9001866a:	9a10      	ldr	r2, [sp, #64]	; 0x40
9001866c:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
90018670:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
90018674:	2b00      	cmp	r3, #0
90018676:	dd0c      	ble.n	90018692 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
90018678:	1406      	asrs	r6, r0, #16
9001867a:	d405      	bmi.n	90018688 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001867c:	454e      	cmp	r6, r9
9001867e:	da03      	bge.n	90018688 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90018680:	1416      	asrs	r6, r2, #16
90018682:	d401      	bmi.n	90018688 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90018684:	4546      	cmp	r6, r8
90018686:	db05      	blt.n	90018694 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
90018688:	4470      	add	r0, lr
9001868a:	4462      	add	r2, ip
9001868c:	3b01      	subs	r3, #1
9001868e:	3402      	adds	r4, #2
90018690:	e7f0      	b.n	90018674 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
90018692:	d00f      	beq.n	900186b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90018694:	1e5e      	subs	r6, r3, #1
90018696:	fb0e 0706 	mla	r7, lr, r6, r0
9001869a:	143f      	asrs	r7, r7, #16
9001869c:	d541      	bpl.n	90018722 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
9001869e:	eb04 0643 	add.w	r6, r4, r3, lsl #1
900186a2:	4698      	mov	r8, r3
900186a4:	9603      	str	r6, [sp, #12]
900186a6:	f1b8 0f00 	cmp.w	r8, #0
900186aa:	dc59      	bgt.n	90018760 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
900186ac:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
900186b0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
900186b4:	9b00      	ldr	r3, [sp, #0]
900186b6:	2b00      	cmp	r3, #0
900186b8:	dd72      	ble.n	900187a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
900186ba:	ee30 0a04 	vadd.f32	s0, s0, s8
900186be:	9b0e      	ldr	r3, [sp, #56]	; 0x38
900186c0:	ee70 0aa4 	vadd.f32	s1, s1, s9
900186c4:	eeb0 6a62 	vmov.f32	s12, s5
900186c8:	eec6 7a80 	vdiv.f32	s15, s13, s0
900186cc:	ee31 1a05 	vadd.f32	s2, s2, s10
900186d0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
900186d4:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
900186d8:	eeb0 6a43 	vmov.f32	s12, s6
900186dc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
900186e0:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
900186e4:	ee20 7aa7 	vmul.f32	s14, s1, s15
900186e8:	ee61 7a27 	vmul.f32	s15, s2, s15
900186ec:	ee77 2a62 	vsub.f32	s5, s14, s5
900186f0:	ee37 3ac3 	vsub.f32	s6, s15, s6
900186f4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900186f8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900186fc:	ee12 2a90 	vmov	r2, s5
90018700:	eef0 2a47 	vmov.f32	s5, s14
90018704:	fb92 fef3 	sdiv	lr, r2, r3
90018708:	ee13 2a10 	vmov	r2, s6
9001870c:	eeb0 3a67 	vmov.f32	s6, s15
90018710:	fb92 fcf3 	sdiv	ip, r2, r3
90018714:	9b00      	ldr	r3, [sp, #0]
90018716:	3b01      	subs	r3, #1
90018718:	9300      	str	r3, [sp, #0]
9001871a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001871c:	bf08      	it	eq
9001871e:	465b      	moveq	r3, fp
90018720:	e797      	b.n	90018652 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
90018722:	454f      	cmp	r7, r9
90018724:	dabb      	bge.n	9001869e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90018726:	fb0c 2606 	mla	r6, ip, r6, r2
9001872a:	1436      	asrs	r6, r6, #16
9001872c:	d4b7      	bmi.n	9001869e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001872e:	4546      	cmp	r6, r8
90018730:	dab5      	bge.n	9001869e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90018732:	461e      	mov	r6, r3
90018734:	46a0      	mov	r8, r4
90018736:	2e00      	cmp	r6, #0
90018738:	ddb8      	ble.n	900186ac <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
9001873a:	1417      	asrs	r7, r2, #16
9001873c:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
90018740:	9901      	ldr	r1, [sp, #4]
90018742:	ea4f 4920 	mov.w	r9, r0, asr #16
90018746:	4462      	add	r2, ip
90018748:	4470      	add	r0, lr
9001874a:	fb0a 1707 	mla	r7, sl, r7, r1
9001874e:	9902      	ldr	r1, [sp, #8]
90018750:	3e01      	subs	r6, #1
90018752:	f817 7009 	ldrb.w	r7, [r7, r9]
90018756:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
9001875a:	f828 7b02 	strh.w	r7, [r8], #2
9001875e:	e7ea      	b.n	90018736 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
90018760:	ea5f 4920 	movs.w	r9, r0, asr #16
90018764:	d417      	bmi.n	90018796 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
90018766:	68ae      	ldr	r6, [r5, #8]
90018768:	454e      	cmp	r6, r9
9001876a:	dd14      	ble.n	90018796 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
9001876c:	ea5f 4a22 	movs.w	sl, r2, asr #16
90018770:	d411      	bmi.n	90018796 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
90018772:	68ef      	ldr	r7, [r5, #12]
90018774:	4557      	cmp	r7, sl
90018776:	dd0e      	ble.n	90018796 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
90018778:	9f01      	ldr	r7, [sp, #4]
9001877a:	b236      	sxth	r6, r6
9001877c:	f06f 0101 	mvn.w	r1, #1
90018780:	fb0a 7606 	mla	r6, sl, r6, r7
90018784:	9f02      	ldr	r7, [sp, #8]
90018786:	f816 6009 	ldrb.w	r6, [r6, r9]
9001878a:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
9001878e:	fb01 f608 	mul.w	r6, r1, r8
90018792:	9903      	ldr	r1, [sp, #12]
90018794:	538f      	strh	r7, [r1, r6]
90018796:	4470      	add	r0, lr
90018798:	4462      	add	r2, ip
9001879a:	f108 38ff 	add.w	r8, r8, #4294967295
9001879e:	e782      	b.n	900186a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
900187a0:	b005      	add	sp, #20
900187a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900187a6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900187a6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900187aa:	b087      	sub	sp, #28
900187ac:	9c15      	ldr	r4, [sp, #84]	; 0x54
900187ae:	9205      	str	r2, [sp, #20]
900187b0:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
900187b4:	9102      	str	r1, [sp, #8]
900187b6:	9203      	str	r2, [sp, #12]
900187b8:	6861      	ldr	r1, [r4, #4]
900187ba:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
900187be:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
900187c2:	fb01 2000 	mla	r0, r1, r0, r2
900187c6:	6822      	ldr	r2, [r4, #0]
900187c8:	eb02 0240 	add.w	r2, r2, r0, lsl #1
900187cc:	9200      	str	r2, [sp, #0]
900187ce:	f8dc 2000 	ldr.w	r2, [ip]
900187d2:	9204      	str	r2, [sp, #16]
900187d4:	f8dc 2004 	ldr.w	r2, [ip, #4]
900187d8:	3204      	adds	r2, #4
900187da:	9201      	str	r2, [sp, #4]
900187dc:	9a03      	ldr	r2, [sp, #12]
900187de:	43d5      	mvns	r5, r2
900187e0:	b2ed      	uxtb	r5, r5
900187e2:	9a02      	ldr	r2, [sp, #8]
900187e4:	2a00      	cmp	r2, #0
900187e6:	dc03      	bgt.n	900187f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
900187e8:	9a05      	ldr	r2, [sp, #20]
900187ea:	2a00      	cmp	r2, #0
900187ec:	f340 812c 	ble.w	90018a48 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
900187f0:	9a11      	ldr	r2, [sp, #68]	; 0x44
900187f2:	f9bc e008 	ldrsh.w	lr, [ip, #8]
900187f6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
900187fa:	9a12      	ldr	r2, [sp, #72]	; 0x48
900187fc:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
90018800:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
90018804:	2b00      	cmp	r3, #0
90018806:	dd10      	ble.n	9001882a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90018808:	140c      	asrs	r4, r1, #16
9001880a:	d405      	bmi.n	90018818 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001880c:	4574      	cmp	r4, lr
9001880e:	da03      	bge.n	90018818 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
90018810:	1414      	asrs	r4, r2, #16
90018812:	d401      	bmi.n	90018818 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
90018814:	42bc      	cmp	r4, r7
90018816:	db09      	blt.n	9001882c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90018818:	9c13      	ldr	r4, [sp, #76]	; 0x4c
9001881a:	3b01      	subs	r3, #1
9001881c:	9800      	ldr	r0, [sp, #0]
9001881e:	4421      	add	r1, r4
90018820:	9c14      	ldr	r4, [sp, #80]	; 0x50
90018822:	3002      	adds	r0, #2
90018824:	4422      	add	r2, r4
90018826:	9000      	str	r0, [sp, #0]
90018828:	e7ec      	b.n	90018804 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
9001882a:	d071      	beq.n	90018910 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
9001882c:	1e5c      	subs	r4, r3, #1
9001882e:	9e13      	ldr	r6, [sp, #76]	; 0x4c
90018830:	fb06 1604 	mla	r6, r6, r4, r1
90018834:	1436      	asrs	r6, r6, #16
90018836:	d45d      	bmi.n	900188f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
90018838:	4576      	cmp	r6, lr
9001883a:	da5b      	bge.n	900188f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001883c:	9e14      	ldr	r6, [sp, #80]	; 0x50
9001883e:	fb06 2404 	mla	r4, r6, r4, r2
90018842:	1424      	asrs	r4, r4, #16
90018844:	d456      	bmi.n	900188f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
90018846:	42bc      	cmp	r4, r7
90018848:	da54      	bge.n	900188f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001884a:	4698      	mov	r8, r3
9001884c:	f8dd 9000 	ldr.w	r9, [sp]
90018850:	f8bd a00c 	ldrh.w	sl, [sp, #12]
90018854:	f1b8 0f00 	cmp.w	r8, #0
90018858:	dd54      	ble.n	90018904 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
9001885a:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
9001885e:	1414      	asrs	r4, r2, #16
90018860:	9804      	ldr	r0, [sp, #16]
90018862:	140e      	asrs	r6, r1, #16
90018864:	f108 38ff 	add.w	r8, r8, #4294967295
90018868:	fb07 0404 	mla	r4, r7, r4, r0
9001886c:	9801      	ldr	r0, [sp, #4]
9001886e:	f814 e006 	ldrb.w	lr, [r4, r6]
90018872:	f8b9 4000 	ldrh.w	r4, [r9]
90018876:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001887a:	1227      	asrs	r7, r4, #8
9001887c:	eb00 0b0e 	add.w	fp, r0, lr
90018880:	f810 e00e 	ldrb.w	lr, [r0, lr]
90018884:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
90018888:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001888a:	f89b 6002 	ldrb.w	r6, [fp, #2]
9001888e:	f89b b001 	ldrb.w	fp, [fp, #1]
90018892:	4401      	add	r1, r0
90018894:	fb16 f60a 	smulbb	r6, r6, sl
90018898:	9814      	ldr	r0, [sp, #80]	; 0x50
9001889a:	fb1b fb0a 	smulbb	fp, fp, sl
9001889e:	fb07 6705 	mla	r7, r7, r5, r6
900188a2:	10e6      	asrs	r6, r4, #3
900188a4:	00e4      	lsls	r4, r4, #3
900188a6:	4402      	add	r2, r0
900188a8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
900188ac:	b2bf      	uxth	r7, r7
900188ae:	b2e4      	uxtb	r4, r4
900188b0:	fb06 b605 	mla	r6, r6, r5, fp
900188b4:	fb14 f405 	smulbb	r4, r4, r5
900188b8:	b2b6      	uxth	r6, r6
900188ba:	fb0e 4e0a 	mla	lr, lr, sl, r4
900188be:	1c7c      	adds	r4, r7, #1
900188c0:	f106 0b01 	add.w	fp, r6, #1
900188c4:	fa1f fe8e 	uxth.w	lr, lr
900188c8:	eb04 2717 	add.w	r7, r4, r7, lsr #8
900188cc:	f10e 0401 	add.w	r4, lr, #1
900188d0:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
900188d4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
900188d8:	eb04 241e 	add.w	r4, r4, lr, lsr #8
900188dc:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
900188e0:	f3c4 24c4 	ubfx	r4, r4, #11, #5
900188e4:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
900188e8:	4327      	orrs	r7, r4
900188ea:	ea47 070b 	orr.w	r7, r7, fp
900188ee:	f829 7b02 	strh.w	r7, [r9], #2
900188f2:	e7af      	b.n	90018854 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
900188f4:	f04f 0e00 	mov.w	lr, #0
900188f8:	f8bd 900c 	ldrh.w	r9, [sp, #12]
900188fc:	eb03 040e 	add.w	r4, r3, lr
90018900:	2c00      	cmp	r4, #0
90018902:	dc43      	bgt.n	9001898c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
90018904:	9a00      	ldr	r2, [sp, #0]
90018906:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001890a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9001890e:	9300      	str	r3, [sp, #0]
90018910:	9b02      	ldr	r3, [sp, #8]
90018912:	2b00      	cmp	r3, #0
90018914:	f340 8098 	ble.w	90018a48 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
90018918:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
9001891c:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001891e:	ee30 0a04 	vadd.f32	s0, s0, s8
90018922:	ee70 0aa4 	vadd.f32	s1, s1, s9
90018926:	eef0 6a62 	vmov.f32	s13, s5
9001892a:	eec7 7a00 	vdiv.f32	s15, s14, s0
9001892e:	ee31 1a05 	vadd.f32	s2, s2, s10
90018932:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90018936:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
9001893a:	eef0 6a43 	vmov.f32	s13, s6
9001893e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90018942:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
90018946:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001894a:	ee61 7a27 	vmul.f32	s15, s2, s15
9001894e:	ee77 2a62 	vsub.f32	s5, s14, s5
90018952:	ee37 3ac3 	vsub.f32	s6, s15, s6
90018956:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001895a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001895e:	ee12 2a90 	vmov	r2, s5
90018962:	eef0 2a47 	vmov.f32	s5, s14
90018966:	fb92 f3f3 	sdiv	r3, r2, r3
9001896a:	ee13 2a10 	vmov	r2, s6
9001896e:	9313      	str	r3, [sp, #76]	; 0x4c
90018970:	9b10      	ldr	r3, [sp, #64]	; 0x40
90018972:	eeb0 3a67 	vmov.f32	s6, s15
90018976:	fb92 f3f3 	sdiv	r3, r2, r3
9001897a:	9314      	str	r3, [sp, #80]	; 0x50
9001897c:	9b02      	ldr	r3, [sp, #8]
9001897e:	9a05      	ldr	r2, [sp, #20]
90018980:	3b01      	subs	r3, #1
90018982:	9302      	str	r3, [sp, #8]
90018984:	9b10      	ldr	r3, [sp, #64]	; 0x40
90018986:	bf08      	it	eq
90018988:	4613      	moveq	r3, r2
9001898a:	e72a      	b.n	900187e2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9001898c:	140f      	asrs	r7, r1, #16
9001898e:	d454      	bmi.n	90018a3a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
90018990:	f8dc 6008 	ldr.w	r6, [ip, #8]
90018994:	42be      	cmp	r6, r7
90018996:	dd50      	ble.n	90018a3a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
90018998:	ea5f 4822 	movs.w	r8, r2, asr #16
9001899c:	d44d      	bmi.n	90018a3a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001899e:	f8dc 400c 	ldr.w	r4, [ip, #12]
900189a2:	4544      	cmp	r4, r8
900189a4:	dd49      	ble.n	90018a3a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
900189a6:	9c04      	ldr	r4, [sp, #16]
900189a8:	b236      	sxth	r6, r6
900189aa:	f06f 0001 	mvn.w	r0, #1
900189ae:	fb08 4606 	mla	r6, r8, r6, r4
900189b2:	9c01      	ldr	r4, [sp, #4]
900189b4:	fb00 fa0e 	mul.w	sl, r0, lr
900189b8:	9800      	ldr	r0, [sp, #0]
900189ba:	f816 8007 	ldrb.w	r8, [r6, r7]
900189be:	eb08 0848 	add.w	r8, r8, r8, lsl #1
900189c2:	eb04 0b08 	add.w	fp, r4, r8
900189c6:	f830 400a 	ldrh.w	r4, [r0, sl]
900189ca:	9801      	ldr	r0, [sp, #4]
900189cc:	f89b 6002 	ldrb.w	r6, [fp, #2]
900189d0:	1227      	asrs	r7, r4, #8
900189d2:	f89b b001 	ldrb.w	fp, [fp, #1]
900189d6:	fb16 f609 	smulbb	r6, r6, r9
900189da:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
900189de:	f810 8008 	ldrb.w	r8, [r0, r8]
900189e2:	fb1b fb09 	smulbb	fp, fp, r9
900189e6:	fb07 6705 	mla	r7, r7, r5, r6
900189ea:	10e6      	asrs	r6, r4, #3
900189ec:	00e4      	lsls	r4, r4, #3
900189ee:	9800      	ldr	r0, [sp, #0]
900189f0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
900189f4:	b2bf      	uxth	r7, r7
900189f6:	b2e4      	uxtb	r4, r4
900189f8:	fb06 b605 	mla	r6, r6, r5, fp
900189fc:	fb14 f405 	smulbb	r4, r4, r5
90018a00:	b2b6      	uxth	r6, r6
90018a02:	fb08 4809 	mla	r8, r8, r9, r4
90018a06:	1c7c      	adds	r4, r7, #1
90018a08:	f106 0b01 	add.w	fp, r6, #1
90018a0c:	fa1f f888 	uxth.w	r8, r8
90018a10:	eb04 2717 	add.w	r7, r4, r7, lsr #8
90018a14:	f108 0401 	add.w	r4, r8, #1
90018a18:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
90018a1c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
90018a20:	eb04 2418 	add.w	r4, r4, r8, lsr #8
90018a24:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
90018a28:	f3c4 24c4 	ubfx	r4, r4, #11, #5
90018a2c:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
90018a30:	4327      	orrs	r7, r4
90018a32:	ea47 070b 	orr.w	r7, r7, fp
90018a36:	f820 700a 	strh.w	r7, [r0, sl]
90018a3a:	9813      	ldr	r0, [sp, #76]	; 0x4c
90018a3c:	f10e 3eff 	add.w	lr, lr, #4294967295
90018a40:	4401      	add	r1, r0
90018a42:	9814      	ldr	r0, [sp, #80]	; 0x50
90018a44:	4402      	add	r2, r0
90018a46:	e759      	b.n	900188fc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
90018a48:	b007      	add	sp, #28
90018a4a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

90018a50 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90018a50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90018a54:	b085      	sub	sp, #20
90018a56:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
90018a5a:	9e13      	ldr	r6, [sp, #76]	; 0x4c
90018a5c:	9d16      	ldr	r5, [sp, #88]	; 0x58
90018a5e:	9203      	str	r2, [sp, #12]
90018a60:	6870      	ldr	r0, [r6, #4]
90018a62:	686f      	ldr	r7, [r5, #4]
90018a64:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
90018a68:	3704      	adds	r7, #4
90018a6a:	9101      	str	r1, [sp, #4]
90018a6c:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
90018a70:	fb00 2404 	mla	r4, r0, r4, r2
90018a74:	6832      	ldr	r2, [r6, #0]
90018a76:	eb02 0444 	add.w	r4, r2, r4, lsl #1
90018a7a:	682a      	ldr	r2, [r5, #0]
90018a7c:	9202      	str	r2, [sp, #8]
90018a7e:	9a01      	ldr	r2, [sp, #4]
90018a80:	2a00      	cmp	r2, #0
90018a82:	dc03      	bgt.n	90018a8c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
90018a84:	9a03      	ldr	r2, [sp, #12]
90018a86:	2a00      	cmp	r2, #0
90018a88:	f340 80cc 	ble.w	90018c24 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
90018a8c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
90018a8e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
90018a92:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
90018a96:	9a10      	ldr	r2, [sp, #64]	; 0x40
90018a98:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
90018a9c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
90018aa0:	2b00      	cmp	r3, #0
90018aa2:	dd0d      	ble.n	90018ac0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
90018aa4:	1406      	asrs	r6, r0, #16
90018aa6:	d405      	bmi.n	90018ab4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
90018aa8:	454e      	cmp	r6, r9
90018aaa:	da03      	bge.n	90018ab4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
90018aac:	1416      	asrs	r6, r2, #16
90018aae:	d401      	bmi.n	90018ab4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
90018ab0:	4546      	cmp	r6, r8
90018ab2:	db06      	blt.n	90018ac2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
90018ab4:	9e12      	ldr	r6, [sp, #72]	; 0x48
90018ab6:	4460      	add	r0, ip
90018ab8:	3b01      	subs	r3, #1
90018aba:	3402      	adds	r4, #2
90018abc:	4432      	add	r2, r6
90018abe:	e7ef      	b.n	90018aa0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
90018ac0:	d00f      	beq.n	90018ae2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90018ac2:	1e5e      	subs	r6, r3, #1
90018ac4:	fb0c 0e06 	mla	lr, ip, r6, r0
90018ac8:	ea5f 4e2e 	movs.w	lr, lr, asr #16
90018acc:	d543      	bpl.n	90018b56 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
90018ace:	4698      	mov	r8, r3
90018ad0:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
90018ad4:	f1b8 0f00 	cmp.w	r8, #0
90018ad8:	dc71      	bgt.n	90018bbe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
90018ada:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90018ade:	eb04 0443 	add.w	r4, r4, r3, lsl #1
90018ae2:	9b01      	ldr	r3, [sp, #4]
90018ae4:	2b00      	cmp	r3, #0
90018ae6:	f340 809d 	ble.w	90018c24 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
90018aea:	ee30 0a04 	vadd.f32	s0, s0, s8
90018aee:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90018af0:	ee70 0aa4 	vadd.f32	s1, s1, s9
90018af4:	eeb0 6a62 	vmov.f32	s12, s5
90018af8:	eec6 7a80 	vdiv.f32	s15, s13, s0
90018afc:	ee31 1a05 	vadd.f32	s2, s2, s10
90018b00:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90018b04:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
90018b08:	eeb0 6a43 	vmov.f32	s12, s6
90018b0c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90018b10:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
90018b14:	ee20 7aa7 	vmul.f32	s14, s1, s15
90018b18:	ee61 7a27 	vmul.f32	s15, s2, s15
90018b1c:	ee77 2a62 	vsub.f32	s5, s14, s5
90018b20:	ee37 3ac3 	vsub.f32	s6, s15, s6
90018b24:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90018b28:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90018b2c:	ee12 2a90 	vmov	r2, s5
90018b30:	eef0 2a47 	vmov.f32	s5, s14
90018b34:	fb92 fcf3 	sdiv	ip, r2, r3
90018b38:	ee13 2a10 	vmov	r2, s6
90018b3c:	eeb0 3a67 	vmov.f32	s6, s15
90018b40:	fb92 f3f3 	sdiv	r3, r2, r3
90018b44:	9312      	str	r3, [sp, #72]	; 0x48
90018b46:	9b01      	ldr	r3, [sp, #4]
90018b48:	9a03      	ldr	r2, [sp, #12]
90018b4a:	3b01      	subs	r3, #1
90018b4c:	9301      	str	r3, [sp, #4]
90018b4e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90018b50:	bf08      	it	eq
90018b52:	4613      	moveq	r3, r2
90018b54:	e793      	b.n	90018a7e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
90018b56:	45ce      	cmp	lr, r9
90018b58:	dab9      	bge.n	90018ace <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
90018b5a:	9912      	ldr	r1, [sp, #72]	; 0x48
90018b5c:	fb01 2606 	mla	r6, r1, r6, r2
90018b60:	1436      	asrs	r6, r6, #16
90018b62:	d4b4      	bmi.n	90018ace <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
90018b64:	4546      	cmp	r6, r8
90018b66:	dab2      	bge.n	90018ace <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
90018b68:	4698      	mov	r8, r3
90018b6a:	46a2      	mov	sl, r4
90018b6c:	f1b8 0f00 	cmp.w	r8, #0
90018b70:	ddb3      	ble.n	90018ada <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
90018b72:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
90018b76:	1416      	asrs	r6, r2, #16
90018b78:	9902      	ldr	r1, [sp, #8]
90018b7a:	ea4f 4e20 	mov.w	lr, r0, asr #16
90018b7e:	f108 38ff 	add.w	r8, r8, #4294967295
90018b82:	4460      	add	r0, ip
90018b84:	fb09 1606 	mla	r6, r9, r6, r1
90018b88:	4928      	ldr	r1, [pc, #160]	; (90018c2c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
90018b8a:	f816 e00e 	ldrb.w	lr, [r6, lr]
90018b8e:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
90018b92:	eb07 0b0e 	add.w	fp, r7, lr
90018b96:	f89b 6001 	ldrb.w	r6, [fp, #1]
90018b9a:	f89b 9002 	ldrb.w	r9, [fp, #2]
90018b9e:	00f6      	lsls	r6, r6, #3
90018ba0:	ea01 2909 	and.w	r9, r1, r9, lsl #8
90018ba4:	9912      	ldr	r1, [sp, #72]	; 0x48
90018ba6:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
90018baa:	440a      	add	r2, r1
90018bac:	ea49 0606 	orr.w	r6, r9, r6
90018bb0:	f817 900e 	ldrb.w	r9, [r7, lr]
90018bb4:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
90018bb8:	f82a 6b02 	strh.w	r6, [sl], #2
90018bbc:	e7d6      	b.n	90018b6c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
90018bbe:	ea5f 4920 	movs.w	r9, r0, asr #16
90018bc2:	d429      	bmi.n	90018c18 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
90018bc4:	68ae      	ldr	r6, [r5, #8]
90018bc6:	454e      	cmp	r6, r9
90018bc8:	dd26      	ble.n	90018c18 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
90018bca:	ea5f 4b22 	movs.w	fp, r2, asr #16
90018bce:	d423      	bmi.n	90018c18 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
90018bd0:	68e9      	ldr	r1, [r5, #12]
90018bd2:	4559      	cmp	r1, fp
90018bd4:	dd20      	ble.n	90018c18 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
90018bd6:	fa0f fe86 	sxth.w	lr, r6
90018bda:	9902      	ldr	r1, [sp, #8]
90018bdc:	fb0b 1e0e 	mla	lr, fp, lr, r1
90018be0:	f06f 0101 	mvn.w	r1, #1
90018be4:	f81e e009 	ldrb.w	lr, [lr, r9]
90018be8:	fb01 f908 	mul.w	r9, r1, r8
90018bec:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
90018bf0:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
90018bf4:	eb07 060e 	add.w	r6, r7, lr
90018bf8:	f896 b002 	ldrb.w	fp, [r6, #2]
90018bfc:	7876      	ldrb	r6, [r6, #1]
90018bfe:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
90018c02:	00f6      	lsls	r6, r6, #3
90018c04:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
90018c08:	ea4b 0606 	orr.w	r6, fp, r6
90018c0c:	f817 b00e 	ldrb.w	fp, [r7, lr]
90018c10:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
90018c14:	f82a 6009 	strh.w	r6, [sl, r9]
90018c18:	9912      	ldr	r1, [sp, #72]	; 0x48
90018c1a:	4460      	add	r0, ip
90018c1c:	f108 38ff 	add.w	r8, r8, #4294967295
90018c20:	440a      	add	r2, r1
90018c22:	e757      	b.n	90018ad4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90018c24:	b005      	add	sp, #20
90018c26:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90018c2a:	bf00      	nop
90018c2c:	fffff800 	.word	0xfffff800

90018c30 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90018c30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90018c34:	b087      	sub	sp, #28
90018c36:	468b      	mov	fp, r1
90018c38:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
90018c3c:	9815      	ldr	r0, [sp, #84]	; 0x54
90018c3e:	9204      	str	r2, [sp, #16]
90018c40:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
90018c44:	6841      	ldr	r1, [r0, #4]
90018c46:	9205      	str	r2, [sp, #20]
90018c48:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
90018c4c:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
90018c50:	fb01 2404 	mla	r4, r1, r4, r2
90018c54:	6802      	ldr	r2, [r0, #0]
90018c56:	eb02 0444 	add.w	r4, r2, r4, lsl #1
90018c5a:	f8dc 2000 	ldr.w	r2, [ip]
90018c5e:	9201      	str	r2, [sp, #4]
90018c60:	f8dc 2004 	ldr.w	r2, [ip, #4]
90018c64:	3204      	adds	r2, #4
90018c66:	9202      	str	r2, [sp, #8]
90018c68:	f1bb 0f00 	cmp.w	fp, #0
90018c6c:	dc03      	bgt.n	90018c76 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
90018c6e:	9a04      	ldr	r2, [sp, #16]
90018c70:	2a00      	cmp	r2, #0
90018c72:	f340 8138 	ble.w	90018ee6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
90018c76:	9a11      	ldr	r2, [sp, #68]	; 0x44
90018c78:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
90018c7c:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
90018c80:	9a12      	ldr	r2, [sp, #72]	; 0x48
90018c82:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
90018c86:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
90018c8a:	2b00      	cmp	r3, #0
90018c8c:	dd0e      	ble.n	90018cac <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90018c8e:	1402      	asrs	r2, r0, #16
90018c90:	d405      	bmi.n	90018c9e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
90018c92:	42ba      	cmp	r2, r7
90018c94:	da03      	bge.n	90018c9e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
90018c96:	140a      	asrs	r2, r1, #16
90018c98:	d401      	bmi.n	90018c9e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
90018c9a:	42b2      	cmp	r2, r6
90018c9c:	db07      	blt.n	90018cae <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
90018c9e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
90018ca0:	3b01      	subs	r3, #1
90018ca2:	3402      	adds	r4, #2
90018ca4:	4410      	add	r0, r2
90018ca6:	9a14      	ldr	r2, [sp, #80]	; 0x50
90018ca8:	4411      	add	r1, r2
90018caa:	e7ee      	b.n	90018c8a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
90018cac:	d019      	beq.n	90018ce2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
90018cae:	1e5a      	subs	r2, r3, #1
90018cb0:	9d13      	ldr	r5, [sp, #76]	; 0x4c
90018cb2:	fb05 0502 	mla	r5, r5, r2, r0
90018cb6:	142d      	asrs	r5, r5, #16
90018cb8:	d409      	bmi.n	90018cce <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
90018cba:	42bd      	cmp	r5, r7
90018cbc:	da07      	bge.n	90018cce <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
90018cbe:	9d14      	ldr	r5, [sp, #80]	; 0x50
90018cc0:	fb05 1202 	mla	r2, r5, r2, r1
90018cc4:	1412      	asrs	r2, r2, #16
90018cc6:	d402      	bmi.n	90018cce <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
90018cc8:	42b2      	cmp	r2, r6
90018cca:	f2c0 80ac 	blt.w	90018e26 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
90018cce:	f04f 0e00 	mov.w	lr, #0
90018cd2:	eb03 020e 	add.w	r2, r3, lr
90018cd6:	2a00      	cmp	r2, #0
90018cd8:	dc3e      	bgt.n	90018d58 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
90018cda:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90018cde:	eb04 0443 	add.w	r4, r4, r3, lsl #1
90018ce2:	f1bb 0f00 	cmp.w	fp, #0
90018ce6:	f340 80fe 	ble.w	90018ee6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
90018cea:	ee30 0a04 	vadd.f32	s0, s0, s8
90018cee:	9b10      	ldr	r3, [sp, #64]	; 0x40
90018cf0:	ee70 0aa4 	vadd.f32	s1, s1, s9
90018cf4:	f1bb 0b01 	subs.w	fp, fp, #1
90018cf8:	eeb0 6a62 	vmov.f32	s12, s5
90018cfc:	eec6 7a80 	vdiv.f32	s15, s13, s0
90018d00:	ee31 1a05 	vadd.f32	s2, s2, s10
90018d04:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90018d08:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
90018d0c:	eeb0 6a43 	vmov.f32	s12, s6
90018d10:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90018d14:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
90018d18:	ee20 7aa7 	vmul.f32	s14, s1, s15
90018d1c:	ee61 7a27 	vmul.f32	s15, s2, s15
90018d20:	ee77 2a62 	vsub.f32	s5, s14, s5
90018d24:	ee37 3ac3 	vsub.f32	s6, s15, s6
90018d28:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90018d2c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90018d30:	ee12 2a90 	vmov	r2, s5
90018d34:	eef0 2a47 	vmov.f32	s5, s14
90018d38:	fb92 f3f3 	sdiv	r3, r2, r3
90018d3c:	ee13 2a10 	vmov	r2, s6
90018d40:	9313      	str	r3, [sp, #76]	; 0x4c
90018d42:	9b10      	ldr	r3, [sp, #64]	; 0x40
90018d44:	eeb0 3a67 	vmov.f32	s6, s15
90018d48:	fb92 f3f3 	sdiv	r3, r2, r3
90018d4c:	9a04      	ldr	r2, [sp, #16]
90018d4e:	9314      	str	r3, [sp, #80]	; 0x50
90018d50:	9b10      	ldr	r3, [sp, #64]	; 0x40
90018d52:	bf08      	it	eq
90018d54:	4613      	moveq	r3, r2
90018d56:	e787      	b.n	90018c68 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
90018d58:	1406      	asrs	r6, r0, #16
90018d5a:	d45d      	bmi.n	90018e18 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
90018d5c:	f8dc 5008 	ldr.w	r5, [ip, #8]
90018d60:	42b5      	cmp	r5, r6
90018d62:	dd59      	ble.n	90018e18 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
90018d64:	140f      	asrs	r7, r1, #16
90018d66:	d457      	bmi.n	90018e18 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
90018d68:	f8dc 200c 	ldr.w	r2, [ip, #12]
90018d6c:	42ba      	cmp	r2, r7
90018d6e:	dd53      	ble.n	90018e18 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
90018d70:	9a01      	ldr	r2, [sp, #4]
90018d72:	b22d      	sxth	r5, r5
90018d74:	fb07 2505 	mla	r5, r7, r5, r2
90018d78:	5daa      	ldrb	r2, [r5, r6]
90018d7a:	9d02      	ldr	r5, [sp, #8]
90018d7c:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
90018d80:	0e2e      	lsrs	r6, r5, #24
90018d82:	d049      	beq.n	90018e18 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
90018d84:	f06f 0201 	mvn.w	r2, #1
90018d88:	f3c5 2a07 	ubfx	sl, r5, #8, #8
90018d8c:	fb02 f20e 	mul.w	r2, r2, lr
90018d90:	f834 8002 	ldrh.w	r8, [r4, r2]
90018d94:	9203      	str	r2, [sp, #12]
90018d96:	9a05      	ldr	r2, [sp, #20]
90018d98:	ea4f 2728 	mov.w	r7, r8, asr #8
90018d9c:	4356      	muls	r6, r2
90018d9e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
90018da2:	1c72      	adds	r2, r6, #1
90018da4:	eb02 2226 	add.w	r2, r2, r6, asr #8
90018da8:	f3c5 4607 	ubfx	r6, r5, #16, #8
90018dac:	b2ed      	uxtb	r5, r5
90018dae:	1212      	asrs	r2, r2, #8
90018db0:	fa1f f982 	uxth.w	r9, r2
90018db4:	43d2      	mvns	r2, r2
90018db6:	fb16 f609 	smulbb	r6, r6, r9
90018dba:	b2d2      	uxtb	r2, r2
90018dbc:	fb15 f509 	smulbb	r5, r5, r9
90018dc0:	fb07 6702 	mla	r7, r7, r2, r6
90018dc4:	ea4f 06e8 	mov.w	r6, r8, asr #3
90018dc8:	fb1a fa09 	smulbb	sl, sl, r9
90018dcc:	ea4f 08c8 	mov.w	r8, r8, lsl #3
90018dd0:	b2bf      	uxth	r7, r7
90018dd2:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
90018dd6:	fa5f f888 	uxtb.w	r8, r8
90018dda:	fb06 a602 	mla	r6, r6, r2, sl
90018dde:	fb08 5502 	mla	r5, r8, r2, r5
90018de2:	1c7a      	adds	r2, r7, #1
90018de4:	b2b6      	uxth	r6, r6
90018de6:	b2ad      	uxth	r5, r5
90018de8:	eb02 2717 	add.w	r7, r2, r7, lsr #8
90018dec:	9a03      	ldr	r2, [sp, #12]
90018dee:	f105 0a01 	add.w	sl, r5, #1
90018df2:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
90018df6:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
90018dfa:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
90018dfe:	ea4a 0707 	orr.w	r7, sl, r7
90018e02:	f106 0a01 	add.w	sl, r6, #1
90018e06:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
90018e0a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
90018e0e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
90018e12:	ea47 070a 	orr.w	r7, r7, sl
90018e16:	52a7      	strh	r7, [r4, r2]
90018e18:	9a13      	ldr	r2, [sp, #76]	; 0x4c
90018e1a:	f10e 3eff 	add.w	lr, lr, #4294967295
90018e1e:	4410      	add	r0, r2
90018e20:	9a14      	ldr	r2, [sp, #80]	; 0x50
90018e22:	4411      	add	r1, r2
90018e24:	e755      	b.n	90018cd2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
90018e26:	f04f 0800 	mov.w	r8, #0
90018e2a:	eba3 0208 	sub.w	r2, r3, r8
90018e2e:	2a00      	cmp	r2, #0
90018e30:	f77f af53 	ble.w	90018cda <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
90018e34:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
90018e38:	140a      	asrs	r2, r1, #16
90018e3a:	9f01      	ldr	r7, [sp, #4]
90018e3c:	1405      	asrs	r5, r0, #16
90018e3e:	fb06 7202 	mla	r2, r6, r2, r7
90018e42:	5d52      	ldrb	r2, [r2, r5]
90018e44:	9d02      	ldr	r5, [sp, #8]
90018e46:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
90018e4a:	0e2e      	lsrs	r6, r5, #24
90018e4c:	d044      	beq.n	90018ed8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
90018e4e:	9a05      	ldr	r2, [sp, #20]
90018e50:	f3c5 2a07 	ubfx	sl, r5, #8, #8
90018e54:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
90018e58:	4356      	muls	r6, r2
90018e5a:	ea4f 272e 	mov.w	r7, lr, asr #8
90018e5e:	1c72      	adds	r2, r6, #1
90018e60:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
90018e64:	eb02 2226 	add.w	r2, r2, r6, asr #8
90018e68:	f3c5 4607 	ubfx	r6, r5, #16, #8
90018e6c:	b2ed      	uxtb	r5, r5
90018e6e:	1212      	asrs	r2, r2, #8
90018e70:	fa1f f982 	uxth.w	r9, r2
90018e74:	43d2      	mvns	r2, r2
90018e76:	fb16 f609 	smulbb	r6, r6, r9
90018e7a:	b2d2      	uxtb	r2, r2
90018e7c:	fb15 f509 	smulbb	r5, r5, r9
90018e80:	fb07 6702 	mla	r7, r7, r2, r6
90018e84:	ea4f 06ee 	mov.w	r6, lr, asr #3
90018e88:	fb1a fa09 	smulbb	sl, sl, r9
90018e8c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90018e90:	b2bf      	uxth	r7, r7
90018e92:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
90018e96:	fa5f fe8e 	uxtb.w	lr, lr
90018e9a:	fb06 a602 	mla	r6, r6, r2, sl
90018e9e:	fb0e 5502 	mla	r5, lr, r2, r5
90018ea2:	1c7a      	adds	r2, r7, #1
90018ea4:	b2b6      	uxth	r6, r6
90018ea6:	b2ad      	uxth	r5, r5
90018ea8:	eb02 2717 	add.w	r7, r2, r7, lsr #8
90018eac:	f105 0a01 	add.w	sl, r5, #1
90018eb0:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
90018eb4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
90018eb8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
90018ebc:	ea4a 0707 	orr.w	r7, sl, r7
90018ec0:	f106 0a01 	add.w	sl, r6, #1
90018ec4:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
90018ec8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
90018ecc:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
90018ed0:	ea47 070a 	orr.w	r7, r7, sl
90018ed4:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
90018ed8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
90018eda:	f108 0801 	add.w	r8, r8, #1
90018ede:	4410      	add	r0, r2
90018ee0:	9a14      	ldr	r2, [sp, #80]	; 0x50
90018ee2:	4411      	add	r1, r2
90018ee4:	e7a1      	b.n	90018e2a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
90018ee6:	b007      	add	sp, #28
90018ee8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90018eec <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90018eec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90018ef0:	b085      	sub	sp, #20
90018ef2:	468b      	mov	fp, r1
90018ef4:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
90018ef8:	9813      	ldr	r0, [sp, #76]	; 0x4c
90018efa:	9203      	str	r2, [sp, #12]
90018efc:	6841      	ldr	r1, [r0, #4]
90018efe:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
90018f02:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
90018f06:	fb01 2404 	mla	r4, r1, r4, r2
90018f0a:	6802      	ldr	r2, [r0, #0]
90018f0c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
90018f10:	f8de 2000 	ldr.w	r2, [lr]
90018f14:	9200      	str	r2, [sp, #0]
90018f16:	f8de 2004 	ldr.w	r2, [lr, #4]
90018f1a:	3204      	adds	r2, #4
90018f1c:	9201      	str	r2, [sp, #4]
90018f1e:	f1bb 0f00 	cmp.w	fp, #0
90018f22:	dc03      	bgt.n	90018f2c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
90018f24:	9a03      	ldr	r2, [sp, #12]
90018f26:	2a00      	cmp	r2, #0
90018f28:	f340 8153 	ble.w	900191d2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
90018f2c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
90018f2e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
90018f32:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
90018f36:	9a10      	ldr	r2, [sp, #64]	; 0x40
90018f38:	f9be 600c 	ldrsh.w	r6, [lr, #12]
90018f3c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
90018f40:	2b00      	cmp	r3, #0
90018f42:	dd0e      	ble.n	90018f62 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
90018f44:	1408      	asrs	r0, r1, #16
90018f46:	d405      	bmi.n	90018f54 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
90018f48:	42b8      	cmp	r0, r7
90018f4a:	da03      	bge.n	90018f54 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
90018f4c:	1410      	asrs	r0, r2, #16
90018f4e:	d401      	bmi.n	90018f54 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
90018f50:	42b0      	cmp	r0, r6
90018f52:	db07      	blt.n	90018f64 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90018f54:	9811      	ldr	r0, [sp, #68]	; 0x44
90018f56:	3b01      	subs	r3, #1
90018f58:	3402      	adds	r4, #2
90018f5a:	4401      	add	r1, r0
90018f5c:	9812      	ldr	r0, [sp, #72]	; 0x48
90018f5e:	4402      	add	r2, r0
90018f60:	e7ee      	b.n	90018f40 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
90018f62:	d017      	beq.n	90018f94 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
90018f64:	1e58      	subs	r0, r3, #1
90018f66:	9d11      	ldr	r5, [sp, #68]	; 0x44
90018f68:	fb05 1500 	mla	r5, r5, r0, r1
90018f6c:	142d      	asrs	r5, r5, #16
90018f6e:	d409      	bmi.n	90018f84 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
90018f70:	42bd      	cmp	r5, r7
90018f72:	da07      	bge.n	90018f84 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
90018f74:	9d12      	ldr	r5, [sp, #72]	; 0x48
90018f76:	fb05 2000 	mla	r0, r5, r0, r2
90018f7a:	1400      	asrs	r0, r0, #16
90018f7c:	d402      	bmi.n	90018f84 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
90018f7e:	42b0      	cmp	r0, r6
90018f80:	f2c0 80bc 	blt.w	900190fc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
90018f84:	2600      	movs	r6, #0
90018f86:	1998      	adds	r0, r3, r6
90018f88:	2800      	cmp	r0, #0
90018f8a:	dc3e      	bgt.n	9001900a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
90018f8c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90018f90:	eb04 0443 	add.w	r4, r4, r3, lsl #1
90018f94:	f1bb 0f00 	cmp.w	fp, #0
90018f98:	f340 811b 	ble.w	900191d2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
90018f9c:	ee30 0a04 	vadd.f32	s0, s0, s8
90018fa0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90018fa2:	ee70 0aa4 	vadd.f32	s1, s1, s9
90018fa6:	f1bb 0b01 	subs.w	fp, fp, #1
90018faa:	eeb0 6a62 	vmov.f32	s12, s5
90018fae:	eec6 7a80 	vdiv.f32	s15, s13, s0
90018fb2:	ee31 1a05 	vadd.f32	s2, s2, s10
90018fb6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90018fba:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
90018fbe:	eeb0 6a43 	vmov.f32	s12, s6
90018fc2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90018fc6:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
90018fca:	ee20 7aa7 	vmul.f32	s14, s1, s15
90018fce:	ee61 7a27 	vmul.f32	s15, s2, s15
90018fd2:	ee77 2a62 	vsub.f32	s5, s14, s5
90018fd6:	ee37 3ac3 	vsub.f32	s6, s15, s6
90018fda:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90018fde:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90018fe2:	ee12 2a90 	vmov	r2, s5
90018fe6:	eef0 2a47 	vmov.f32	s5, s14
90018fea:	fb92 f3f3 	sdiv	r3, r2, r3
90018fee:	ee13 2a10 	vmov	r2, s6
90018ff2:	9311      	str	r3, [sp, #68]	; 0x44
90018ff4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90018ff6:	eeb0 3a67 	vmov.f32	s6, s15
90018ffa:	fb92 f3f3 	sdiv	r3, r2, r3
90018ffe:	9a03      	ldr	r2, [sp, #12]
90019000:	9312      	str	r3, [sp, #72]	; 0x48
90019002:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90019004:	bf08      	it	eq
90019006:	4613      	moveq	r3, r2
90019008:	e789      	b.n	90018f1e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
9001900a:	140f      	asrs	r7, r1, #16
9001900c:	d426      	bmi.n	9001905c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001900e:	f8de 5008 	ldr.w	r5, [lr, #8]
90019012:	42bd      	cmp	r5, r7
90019014:	dd22      	ble.n	9001905c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
90019016:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001901a:	d41f      	bmi.n	9001905c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001901c:	f8de 000c 	ldr.w	r0, [lr, #12]
90019020:	4560      	cmp	r0, ip
90019022:	dd1b      	ble.n	9001905c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
90019024:	9800      	ldr	r0, [sp, #0]
90019026:	b22d      	sxth	r5, r5
90019028:	fb0c 0505 	mla	r5, ip, r5, r0
9001902c:	5de8      	ldrb	r0, [r5, r7]
9001902e:	9d01      	ldr	r5, [sp, #4]
90019030:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
90019034:	0e07      	lsrs	r7, r0, #24
90019036:	2fff      	cmp	r7, #255	; 0xff
90019038:	d116      	bne.n	90019068 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001903a:	f06f 0501 	mvn.w	r5, #1
9001903e:	fb05 f706 	mul.w	r7, r5, r6
90019042:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
90019046:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
9001904a:	0945      	lsrs	r5, r0, #5
9001904c:	f3c0 00c4 	ubfx	r0, r0, #3, #5
90019050:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90019054:	ea4c 0505 	orr.w	r5, ip, r5
90019058:	4305      	orrs	r5, r0
9001905a:	53e5      	strh	r5, [r4, r7]
9001905c:	9811      	ldr	r0, [sp, #68]	; 0x44
9001905e:	3e01      	subs	r6, #1
90019060:	4401      	add	r1, r0
90019062:	9812      	ldr	r0, [sp, #72]	; 0x48
90019064:	4402      	add	r2, r0
90019066:	e78e      	b.n	90018f86 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
90019068:	b2fd      	uxtb	r5, r7
9001906a:	2f00      	cmp	r7, #0
9001906c:	d0f6      	beq.n	9001905c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001906e:	f06f 0701 	mvn.w	r7, #1
90019072:	fa1f f985 	uxth.w	r9, r5
90019076:	43ed      	mvns	r5, r5
90019078:	f3c0 2a07 	ubfx	sl, r0, #8, #8
9001907c:	4377      	muls	r7, r6
9001907e:	fb1a fa09 	smulbb	sl, sl, r9
90019082:	b2ed      	uxtb	r5, r5
90019084:	f834 8007 	ldrh.w	r8, [r4, r7]
90019088:	9702      	str	r7, [sp, #8]
9001908a:	f3c0 4707 	ubfx	r7, r0, #16, #8
9001908e:	ea4f 2c28 	mov.w	ip, r8, asr #8
90019092:	fb17 f709 	smulbb	r7, r7, r9
90019096:	b2c0      	uxtb	r0, r0
90019098:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001909c:	fb10 f009 	smulbb	r0, r0, r9
900190a0:	fb0c 7c05 	mla	ip, ip, r5, r7
900190a4:	ea4f 07e8 	mov.w	r7, r8, asr #3
900190a8:	ea4f 08c8 	mov.w	r8, r8, lsl #3
900190ac:	fa1f fc8c 	uxth.w	ip, ip
900190b0:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
900190b4:	fa5f f888 	uxtb.w	r8, r8
900190b8:	fb07 a705 	mla	r7, r7, r5, sl
900190bc:	fb08 0005 	mla	r0, r8, r5, r0
900190c0:	f10c 0501 	add.w	r5, ip, #1
900190c4:	b2bf      	uxth	r7, r7
900190c6:	b280      	uxth	r0, r0
900190c8:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
900190cc:	f100 0a01 	add.w	sl, r0, #1
900190d0:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
900190d4:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
900190d8:	9802      	ldr	r0, [sp, #8]
900190da:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
900190de:	ea4a 0c0c 	orr.w	ip, sl, ip
900190e2:	f107 0a01 	add.w	sl, r7, #1
900190e6:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
900190ea:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
900190ee:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
900190f2:	ea4c 0c0a 	orr.w	ip, ip, sl
900190f6:	f824 c000 	strh.w	ip, [r4, r0]
900190fa:	e7af      	b.n	9001905c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
900190fc:	f04f 0800 	mov.w	r8, #0
90019100:	eba3 0008 	sub.w	r0, r3, r8
90019104:	2800      	cmp	r0, #0
90019106:	f77f af41 	ble.w	90018f8c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001910a:	f9be 6008 	ldrsh.w	r6, [lr, #8]
9001910e:	1410      	asrs	r0, r2, #16
90019110:	9f00      	ldr	r7, [sp, #0]
90019112:	140d      	asrs	r5, r1, #16
90019114:	fb06 7000 	mla	r0, r6, r0, r7
90019118:	5d40      	ldrb	r0, [r0, r5]
9001911a:	9d01      	ldr	r5, [sp, #4]
9001911c:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
90019120:	0e2e      	lsrs	r6, r5, #24
90019122:	2eff      	cmp	r6, #255	; 0xff
90019124:	d112      	bne.n	9001914c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
90019126:	482c      	ldr	r0, [pc, #176]	; (900191d8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
90019128:	ea00 2615 	and.w	r6, r0, r5, lsr #8
9001912c:	0968      	lsrs	r0, r5, #5
9001912e:	f3c5 05c4 	ubfx	r5, r5, #3, #5
90019132:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90019136:	4330      	orrs	r0, r6
90019138:	4328      	orrs	r0, r5
9001913a:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
9001913e:	9811      	ldr	r0, [sp, #68]	; 0x44
90019140:	f108 0801 	add.w	r8, r8, #1
90019144:	4401      	add	r1, r0
90019146:	9812      	ldr	r0, [sp, #72]	; 0x48
90019148:	4402      	add	r2, r0
9001914a:	e7d9      	b.n	90019100 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9001914c:	b2f0      	uxtb	r0, r6
9001914e:	2e00      	cmp	r6, #0
90019150:	d0f5      	beq.n	9001913e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
90019152:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
90019156:	fa1f f980 	uxth.w	r9, r0
9001915a:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001915e:	43c0      	mvns	r0, r0
90019160:	ea4f 272c 	mov.w	r7, ip, asr #8
90019164:	f3c5 2a07 	ubfx	sl, r5, #8, #8
90019168:	fb16 f609 	smulbb	r6, r6, r9
9001916c:	b2c0      	uxtb	r0, r0
9001916e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
90019172:	b2ed      	uxtb	r5, r5
90019174:	fb1a fa09 	smulbb	sl, sl, r9
90019178:	fb07 6700 	mla	r7, r7, r0, r6
9001917c:	ea4f 06ec 	mov.w	r6, ip, asr #3
90019180:	fb15 f509 	smulbb	r5, r5, r9
90019184:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
90019188:	b2bf      	uxth	r7, r7
9001918a:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001918e:	fa5f fc8c 	uxtb.w	ip, ip
90019192:	fb06 a600 	mla	r6, r6, r0, sl
90019196:	fb0c 5500 	mla	r5, ip, r0, r5
9001919a:	1c78      	adds	r0, r7, #1
9001919c:	b2b6      	uxth	r6, r6
9001919e:	b2ad      	uxth	r5, r5
900191a0:	eb00 2717 	add.w	r7, r0, r7, lsr #8
900191a4:	f105 0a01 	add.w	sl, r5, #1
900191a8:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
900191ac:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
900191b0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
900191b4:	ea4a 0707 	orr.w	r7, sl, r7
900191b8:	f106 0a01 	add.w	sl, r6, #1
900191bc:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
900191c0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
900191c4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
900191c8:	ea47 070a 	orr.w	r7, r7, sl
900191cc:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
900191d0:	e7b5      	b.n	9001913e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
900191d2:	b005      	add	sp, #20
900191d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900191d8:	fffff800 	.word	0xfffff800

900191dc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900191dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900191e0:	b087      	sub	sp, #28
900191e2:	468b      	mov	fp, r1
900191e4:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
900191e8:	9c15      	ldr	r4, [sp, #84]	; 0x54
900191ea:	9204      	str	r2, [sp, #16]
900191ec:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
900191f0:	6861      	ldr	r1, [r4, #4]
900191f2:	9205      	str	r2, [sp, #20]
900191f4:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
900191f8:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
900191fc:	fb01 2000 	mla	r0, r1, r0, r2
90019200:	6822      	ldr	r2, [r4, #0]
90019202:	eb02 0040 	add.w	r0, r2, r0, lsl #1
90019206:	f8de 2000 	ldr.w	r2, [lr]
9001920a:	9201      	str	r2, [sp, #4]
9001920c:	f8de 2004 	ldr.w	r2, [lr, #4]
90019210:	9202      	str	r2, [sp, #8]
90019212:	f1bb 0f00 	cmp.w	fp, #0
90019216:	dc03      	bgt.n	90019220 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
90019218:	9a04      	ldr	r2, [sp, #16]
9001921a:	2a00      	cmp	r2, #0
9001921c:	f340 8142 	ble.w	900194a4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
90019220:	9a11      	ldr	r2, [sp, #68]	; 0x44
90019222:	f9be 7008 	ldrsh.w	r7, [lr, #8]
90019226:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001922a:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001922c:	f9be 600c 	ldrsh.w	r6, [lr, #12]
90019230:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
90019234:	2b00      	cmp	r3, #0
90019236:	dd0e      	ble.n	90019256 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
90019238:	140c      	asrs	r4, r1, #16
9001923a:	d405      	bmi.n	90019248 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001923c:	42bc      	cmp	r4, r7
9001923e:	da03      	bge.n	90019248 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90019240:	1414      	asrs	r4, r2, #16
90019242:	d401      	bmi.n	90019248 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90019244:	42b4      	cmp	r4, r6
90019246:	db07      	blt.n	90019258 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90019248:	9c13      	ldr	r4, [sp, #76]	; 0x4c
9001924a:	3b01      	subs	r3, #1
9001924c:	3002      	adds	r0, #2
9001924e:	4421      	add	r1, r4
90019250:	9c14      	ldr	r4, [sp, #80]	; 0x50
90019252:	4422      	add	r2, r4
90019254:	e7ee      	b.n	90019234 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
90019256:	d019      	beq.n	9001928c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
90019258:	1e5c      	subs	r4, r3, #1
9001925a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
9001925c:	fb05 1504 	mla	r5, r5, r4, r1
90019260:	142d      	asrs	r5, r5, #16
90019262:	d409      	bmi.n	90019278 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
90019264:	42bd      	cmp	r5, r7
90019266:	da07      	bge.n	90019278 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
90019268:	9d14      	ldr	r5, [sp, #80]	; 0x50
9001926a:	fb05 2404 	mla	r4, r5, r4, r2
9001926e:	1424      	asrs	r4, r4, #16
90019270:	d402      	bmi.n	90019278 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
90019272:	42b4      	cmp	r4, r6
90019274:	f2c0 80b1 	blt.w	900193da <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
90019278:	f04f 0800 	mov.w	r8, #0
9001927c:	eb03 0408 	add.w	r4, r3, r8
90019280:	2c00      	cmp	r4, #0
90019282:	dc3e      	bgt.n	90019302 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
90019284:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90019288:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001928c:	f1bb 0f00 	cmp.w	fp, #0
90019290:	f340 8108 	ble.w	900194a4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
90019294:	ee30 0a04 	vadd.f32	s0, s0, s8
90019298:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001929a:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001929e:	f1bb 0b01 	subs.w	fp, fp, #1
900192a2:	eeb0 6a62 	vmov.f32	s12, s5
900192a6:	eec6 7a80 	vdiv.f32	s15, s13, s0
900192aa:	ee31 1a05 	vadd.f32	s2, s2, s10
900192ae:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
900192b2:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
900192b6:	eeb0 6a43 	vmov.f32	s12, s6
900192ba:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
900192be:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
900192c2:	ee20 7aa7 	vmul.f32	s14, s1, s15
900192c6:	ee61 7a27 	vmul.f32	s15, s2, s15
900192ca:	ee77 2a62 	vsub.f32	s5, s14, s5
900192ce:	ee37 3ac3 	vsub.f32	s6, s15, s6
900192d2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900192d6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900192da:	ee12 2a90 	vmov	r2, s5
900192de:	eef0 2a47 	vmov.f32	s5, s14
900192e2:	fb92 f3f3 	sdiv	r3, r2, r3
900192e6:	ee13 2a10 	vmov	r2, s6
900192ea:	9313      	str	r3, [sp, #76]	; 0x4c
900192ec:	9b10      	ldr	r3, [sp, #64]	; 0x40
900192ee:	eeb0 3a67 	vmov.f32	s6, s15
900192f2:	fb92 f3f3 	sdiv	r3, r2, r3
900192f6:	9a04      	ldr	r2, [sp, #16]
900192f8:	9314      	str	r3, [sp, #80]	; 0x50
900192fa:	9b10      	ldr	r3, [sp, #64]	; 0x40
900192fc:	bf08      	it	eq
900192fe:	4613      	moveq	r3, r2
90019300:	e787      	b.n	90019212 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
90019302:	140e      	asrs	r6, r1, #16
90019304:	d462      	bmi.n	900193cc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
90019306:	f8de 5008 	ldr.w	r5, [lr, #8]
9001930a:	42b5      	cmp	r5, r6
9001930c:	dd5e      	ble.n	900193cc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001930e:	1417      	asrs	r7, r2, #16
90019310:	d45c      	bmi.n	900193cc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
90019312:	f8de 400c 	ldr.w	r4, [lr, #12]
90019316:	42bc      	cmp	r4, r7
90019318:	dd58      	ble.n	900193cc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001931a:	b22d      	sxth	r5, r5
9001931c:	9c02      	ldr	r4, [sp, #8]
9001931e:	fb07 6505 	mla	r5, r7, r5, r6
90019322:	5d66      	ldrb	r6, [r4, r5]
90019324:	2e00      	cmp	r6, #0
90019326:	d051      	beq.n	900193cc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
90019328:	9c01      	ldr	r4, [sp, #4]
9001932a:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
9001932e:	f06f 0401 	mvn.w	r4, #1
90019332:	fb04 f408 	mul.w	r4, r4, r8
90019336:	ea4f 2c29 	mov.w	ip, r9, asr #8
9001933a:	5b05      	ldrh	r5, [r0, r4]
9001933c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
90019340:	9403      	str	r4, [sp, #12]
90019342:	9c05      	ldr	r4, [sp, #20]
90019344:	ea4f 0ae5 	mov.w	sl, r5, asr #3
90019348:	4366      	muls	r6, r4
9001934a:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
9001934e:	1c74      	adds	r4, r6, #1
90019350:	eb04 2416 	add.w	r4, r4, r6, lsr #8
90019354:	122e      	asrs	r6, r5, #8
90019356:	1224      	asrs	r4, r4, #8
90019358:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001935c:	00ed      	lsls	r5, r5, #3
9001935e:	b2a7      	uxth	r7, r4
90019360:	43e4      	mvns	r4, r4
90019362:	b2ed      	uxtb	r5, r5
90019364:	b2e4      	uxtb	r4, r4
90019366:	fb16 f604 	smulbb	r6, r6, r4
9001936a:	fb15 f504 	smulbb	r5, r5, r4
9001936e:	fb0c 6c07 	mla	ip, ip, r7, r6
90019372:	ea4f 06e9 	mov.w	r6, r9, asr #3
90019376:	fb1a fa04 	smulbb	sl, sl, r4
9001937a:	ea4f 09c9 	mov.w	r9, r9, lsl #3
9001937e:	fa1f fc8c 	uxth.w	ip, ip
90019382:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
90019386:	fa5f f989 	uxtb.w	r9, r9
9001938a:	fb06 a607 	mla	r6, r6, r7, sl
9001938e:	f10c 0401 	add.w	r4, ip, #1
90019392:	fb09 5507 	mla	r5, r9, r7, r5
90019396:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
9001939a:	9c03      	ldr	r4, [sp, #12]
9001939c:	b2ad      	uxth	r5, r5
9001939e:	b2b6      	uxth	r6, r6
900193a0:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
900193a4:	f105 0a01 	add.w	sl, r5, #1
900193a8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
900193ac:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
900193b0:	ea4a 0c0c 	orr.w	ip, sl, ip
900193b4:	f106 0a01 	add.w	sl, r6, #1
900193b8:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
900193bc:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
900193c0:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
900193c4:	ea4c 0c0a 	orr.w	ip, ip, sl
900193c8:	f820 c004 	strh.w	ip, [r0, r4]
900193cc:	9c13      	ldr	r4, [sp, #76]	; 0x4c
900193ce:	f108 38ff 	add.w	r8, r8, #4294967295
900193d2:	4421      	add	r1, r4
900193d4:	9c14      	ldr	r4, [sp, #80]	; 0x50
900193d6:	4422      	add	r2, r4
900193d8:	e750      	b.n	9001927c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
900193da:	f04f 0900 	mov.w	r9, #0
900193de:	eba3 0409 	sub.w	r4, r3, r9
900193e2:	2c00      	cmp	r4, #0
900193e4:	f77f af4e 	ble.w	90019284 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
900193e8:	f9be 6008 	ldrsh.w	r6, [lr, #8]
900193ec:	140d      	asrs	r5, r1, #16
900193ee:	1414      	asrs	r4, r2, #16
900193f0:	fb06 5404 	mla	r4, r6, r4, r5
900193f4:	9d02      	ldr	r5, [sp, #8]
900193f6:	5d2e      	ldrb	r6, [r5, r4]
900193f8:	2e00      	cmp	r6, #0
900193fa:	d04c      	beq.n	90019496 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
900193fc:	9d01      	ldr	r5, [sp, #4]
900193fe:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
90019402:	9c05      	ldr	r4, [sp, #20]
90019404:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
90019408:	ea4f 2c28 	mov.w	ip, r8, asr #8
9001940c:	4366      	muls	r6, r4
9001940e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
90019412:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
90019416:	1c74      	adds	r4, r6, #1
90019418:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
9001941c:	eb04 2416 	add.w	r4, r4, r6, lsr #8
90019420:	122e      	asrs	r6, r5, #8
90019422:	1224      	asrs	r4, r4, #8
90019424:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
90019428:	00ed      	lsls	r5, r5, #3
9001942a:	b2a7      	uxth	r7, r4
9001942c:	43e4      	mvns	r4, r4
9001942e:	b2ed      	uxtb	r5, r5
90019430:	b2e4      	uxtb	r4, r4
90019432:	fb16 f604 	smulbb	r6, r6, r4
90019436:	fb15 f504 	smulbb	r5, r5, r4
9001943a:	fb0c 6c07 	mla	ip, ip, r7, r6
9001943e:	ea4f 06e8 	mov.w	r6, r8, asr #3
90019442:	fb1a fa04 	smulbb	sl, sl, r4
90019446:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001944a:	fa1f fc8c 	uxth.w	ip, ip
9001944e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
90019452:	fa5f f888 	uxtb.w	r8, r8
90019456:	fb06 a607 	mla	r6, r6, r7, sl
9001945a:	f10c 0401 	add.w	r4, ip, #1
9001945e:	fb08 5507 	mla	r5, r8, r7, r5
90019462:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
90019466:	b2ad      	uxth	r5, r5
90019468:	b2b6      	uxth	r6, r6
9001946a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001946e:	f105 0a01 	add.w	sl, r5, #1
90019472:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
90019476:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001947a:	ea4a 0c0c 	orr.w	ip, sl, ip
9001947e:	f106 0a01 	add.w	sl, r6, #1
90019482:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
90019486:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001948a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001948e:	ea4c 0c0a 	orr.w	ip, ip, sl
90019492:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
90019496:	9c13      	ldr	r4, [sp, #76]	; 0x4c
90019498:	f109 0901 	add.w	r9, r9, #1
9001949c:	4421      	add	r1, r4
9001949e:	9c14      	ldr	r4, [sp, #80]	; 0x50
900194a0:	4422      	add	r2, r4
900194a2:	e79c      	b.n	900193de <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
900194a4:	b007      	add	sp, #28
900194a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900194aa <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900194aa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900194ae:	b085      	sub	sp, #20
900194b0:	468b      	mov	fp, r1
900194b2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
900194b6:	9c13      	ldr	r4, [sp, #76]	; 0x4c
900194b8:	9203      	str	r2, [sp, #12]
900194ba:	6861      	ldr	r1, [r4, #4]
900194bc:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
900194c0:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
900194c4:	fb01 2000 	mla	r0, r1, r0, r2
900194c8:	6822      	ldr	r2, [r4, #0]
900194ca:	eb02 0040 	add.w	r0, r2, r0, lsl #1
900194ce:	f8d8 2000 	ldr.w	r2, [r8]
900194d2:	9200      	str	r2, [sp, #0]
900194d4:	f8d8 2004 	ldr.w	r2, [r8, #4]
900194d8:	9201      	str	r2, [sp, #4]
900194da:	f1bb 0f00 	cmp.w	fp, #0
900194de:	dc03      	bgt.n	900194e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
900194e0:	9a03      	ldr	r2, [sp, #12]
900194e2:	2a00      	cmp	r2, #0
900194e4:	f340 8146 	ble.w	90019774 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
900194e8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
900194ea:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
900194ee:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
900194f2:	9a10      	ldr	r2, [sp, #64]	; 0x40
900194f4:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
900194f8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
900194fc:	2b00      	cmp	r3, #0
900194fe:	dd0e      	ble.n	9001951e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
90019500:	140c      	asrs	r4, r1, #16
90019502:	d405      	bmi.n	90019510 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90019504:	42bc      	cmp	r4, r7
90019506:	da03      	bge.n	90019510 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90019508:	1414      	asrs	r4, r2, #16
9001950a:	d401      	bmi.n	90019510 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001950c:	42b4      	cmp	r4, r6
9001950e:	db07      	blt.n	90019520 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
90019510:	9c11      	ldr	r4, [sp, #68]	; 0x44
90019512:	3b01      	subs	r3, #1
90019514:	3002      	adds	r0, #2
90019516:	4421      	add	r1, r4
90019518:	9c12      	ldr	r4, [sp, #72]	; 0x48
9001951a:	4422      	add	r2, r4
9001951c:	e7ee      	b.n	900194fc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9001951e:	d017      	beq.n	90019550 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
90019520:	1e5c      	subs	r4, r3, #1
90019522:	9d11      	ldr	r5, [sp, #68]	; 0x44
90019524:	fb05 1504 	mla	r5, r5, r4, r1
90019528:	142d      	asrs	r5, r5, #16
9001952a:	d409      	bmi.n	90019540 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001952c:	42bd      	cmp	r5, r7
9001952e:	da07      	bge.n	90019540 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
90019530:	9d12      	ldr	r5, [sp, #72]	; 0x48
90019532:	fb05 2404 	mla	r4, r5, r4, r2
90019536:	1424      	asrs	r4, r4, #16
90019538:	d402      	bmi.n	90019540 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001953a:	42b4      	cmp	r4, r6
9001953c:	f2c0 80b3 	blt.w	900196a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
90019540:	2600      	movs	r6, #0
90019542:	199c      	adds	r4, r3, r6
90019544:	2c00      	cmp	r4, #0
90019546:	dc3e      	bgt.n	900195c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
90019548:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001954c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90019550:	f1bb 0f00 	cmp.w	fp, #0
90019554:	f340 810e 	ble.w	90019774 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
90019558:	ee30 0a04 	vadd.f32	s0, s0, s8
9001955c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001955e:	ee70 0aa4 	vadd.f32	s1, s1, s9
90019562:	f1bb 0b01 	subs.w	fp, fp, #1
90019566:	eeb0 6a62 	vmov.f32	s12, s5
9001956a:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001956e:	ee31 1a05 	vadd.f32	s2, s2, s10
90019572:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90019576:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
9001957a:	eeb0 6a43 	vmov.f32	s12, s6
9001957e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90019582:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
90019586:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001958a:	ee61 7a27 	vmul.f32	s15, s2, s15
9001958e:	ee77 2a62 	vsub.f32	s5, s14, s5
90019592:	ee37 3ac3 	vsub.f32	s6, s15, s6
90019596:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001959a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001959e:	ee12 2a90 	vmov	r2, s5
900195a2:	eef0 2a47 	vmov.f32	s5, s14
900195a6:	fb92 f3f3 	sdiv	r3, r2, r3
900195aa:	ee13 2a10 	vmov	r2, s6
900195ae:	9311      	str	r3, [sp, #68]	; 0x44
900195b0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
900195b2:	eeb0 3a67 	vmov.f32	s6, s15
900195b6:	fb92 f3f3 	sdiv	r3, r2, r3
900195ba:	9a03      	ldr	r2, [sp, #12]
900195bc:	9312      	str	r3, [sp, #72]	; 0x48
900195be:	9b0e      	ldr	r3, [sp, #56]	; 0x38
900195c0:	bf08      	it	eq
900195c2:	4613      	moveq	r3, r2
900195c4:	e789      	b.n	900194da <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
900195c6:	140f      	asrs	r7, r1, #16
900195c8:	d418      	bmi.n	900195fc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
900195ca:	f8d8 5008 	ldr.w	r5, [r8, #8]
900195ce:	42bd      	cmp	r5, r7
900195d0:	dd14      	ble.n	900195fc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
900195d2:	ea5f 4c22 	movs.w	ip, r2, asr #16
900195d6:	d411      	bmi.n	900195fc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
900195d8:	f8d8 400c 	ldr.w	r4, [r8, #12]
900195dc:	4564      	cmp	r4, ip
900195de:	dd0d      	ble.n	900195fc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
900195e0:	b22d      	sxth	r5, r5
900195e2:	9c01      	ldr	r4, [sp, #4]
900195e4:	fb0c 7505 	mla	r5, ip, r5, r7
900195e8:	5d64      	ldrb	r4, [r4, r5]
900195ea:	2cff      	cmp	r4, #255	; 0xff
900195ec:	d10c      	bne.n	90019608 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
900195ee:	9c00      	ldr	r4, [sp, #0]
900195f0:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
900195f4:	f06f 0401 	mvn.w	r4, #1
900195f8:	4374      	muls	r4, r6
900195fa:	5305      	strh	r5, [r0, r4]
900195fc:	9c11      	ldr	r4, [sp, #68]	; 0x44
900195fe:	3e01      	subs	r6, #1
90019600:	4421      	add	r1, r4
90019602:	9c12      	ldr	r4, [sp, #72]	; 0x48
90019604:	4422      	add	r2, r4
90019606:	e79c      	b.n	90019542 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
90019608:	2c00      	cmp	r4, #0
9001960a:	d0f7      	beq.n	900195fc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001960c:	9f00      	ldr	r7, [sp, #0]
9001960e:	fa1f fc84 	uxth.w	ip, r4
90019612:	43e4      	mvns	r4, r4
90019614:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
90019618:	f06f 0501 	mvn.w	r5, #1
9001961c:	b2e4      	uxtb	r4, r4
9001961e:	4375      	muls	r5, r6
90019620:	ea4f 2e29 	mov.w	lr, r9, asr #8
90019624:	9502      	str	r5, [sp, #8]
90019626:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
9001962a:	5b45      	ldrh	r5, [r0, r5]
9001962c:	122f      	asrs	r7, r5, #8
9001962e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
90019632:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
90019636:	00ed      	lsls	r5, r5, #3
90019638:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
9001963c:	fb17 f704 	smulbb	r7, r7, r4
90019640:	b2ed      	uxtb	r5, r5
90019642:	fb1a fa04 	smulbb	sl, sl, r4
90019646:	fb0e 7e0c 	mla	lr, lr, ip, r7
9001964a:	ea4f 07e9 	mov.w	r7, r9, asr #3
9001964e:	fb15 f504 	smulbb	r5, r5, r4
90019652:	ea4f 09c9 	mov.w	r9, r9, lsl #3
90019656:	fa1f fe8e 	uxth.w	lr, lr
9001965a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001965e:	fa5f f989 	uxtb.w	r9, r9
90019662:	fb07 a70c 	mla	r7, r7, ip, sl
90019666:	f10e 0401 	add.w	r4, lr, #1
9001966a:	fb09 550c 	mla	r5, r9, ip, r5
9001966e:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
90019672:	9c02      	ldr	r4, [sp, #8]
90019674:	b2ad      	uxth	r5, r5
90019676:	b2bf      	uxth	r7, r7
90019678:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
9001967c:	f105 0a01 	add.w	sl, r5, #1
90019680:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
90019684:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
90019688:	ea4a 0e0e 	orr.w	lr, sl, lr
9001968c:	f107 0a01 	add.w	sl, r7, #1
90019690:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
90019694:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
90019698:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001969c:	ea4e 0e0a 	orr.w	lr, lr, sl
900196a0:	f820 e004 	strh.w	lr, [r0, r4]
900196a4:	e7aa      	b.n	900195fc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
900196a6:	f04f 0900 	mov.w	r9, #0
900196aa:	eba3 0409 	sub.w	r4, r3, r9
900196ae:	2c00      	cmp	r4, #0
900196b0:	f77f af4a 	ble.w	90019548 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
900196b4:	1414      	asrs	r4, r2, #16
900196b6:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
900196ba:	140d      	asrs	r5, r1, #16
900196bc:	fb06 5504 	mla	r5, r6, r4, r5
900196c0:	9c01      	ldr	r4, [sp, #4]
900196c2:	5d64      	ldrb	r4, [r4, r5]
900196c4:	2cff      	cmp	r4, #255	; 0xff
900196c6:	d10b      	bne.n	900196e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
900196c8:	9c00      	ldr	r4, [sp, #0]
900196ca:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
900196ce:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
900196d2:	9c11      	ldr	r4, [sp, #68]	; 0x44
900196d4:	f109 0901 	add.w	r9, r9, #1
900196d8:	4421      	add	r1, r4
900196da:	9c12      	ldr	r4, [sp, #72]	; 0x48
900196dc:	4422      	add	r2, r4
900196de:	e7e4      	b.n	900196aa <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
900196e0:	2c00      	cmp	r4, #0
900196e2:	d0f6      	beq.n	900196d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
900196e4:	9e00      	ldr	r6, [sp, #0]
900196e6:	b2a7      	uxth	r7, r4
900196e8:	43e4      	mvns	r4, r4
900196ea:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
900196ee:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
900196f2:	b2e4      	uxtb	r4, r4
900196f4:	ea4f 2c2e 	mov.w	ip, lr, asr #8
900196f8:	122e      	asrs	r6, r5, #8
900196fa:	ea4f 0ae5 	mov.w	sl, r5, asr #3
900196fe:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
90019702:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
90019706:	00ed      	lsls	r5, r5, #3
90019708:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
9001970c:	fb16 f604 	smulbb	r6, r6, r4
90019710:	b2ed      	uxtb	r5, r5
90019712:	fb1a fa04 	smulbb	sl, sl, r4
90019716:	fb0c 6c07 	mla	ip, ip, r7, r6
9001971a:	ea4f 06ee 	mov.w	r6, lr, asr #3
9001971e:	fb15 f504 	smulbb	r5, r5, r4
90019722:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90019726:	fa1f fc8c 	uxth.w	ip, ip
9001972a:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001972e:	fa5f fe8e 	uxtb.w	lr, lr
90019732:	fb06 a607 	mla	r6, r6, r7, sl
90019736:	f10c 0401 	add.w	r4, ip, #1
9001973a:	fb0e 5507 	mla	r5, lr, r7, r5
9001973e:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
90019742:	b2ad      	uxth	r5, r5
90019744:	b2b6      	uxth	r6, r6
90019746:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001974a:	f105 0a01 	add.w	sl, r5, #1
9001974e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
90019752:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
90019756:	ea4a 0c0c 	orr.w	ip, sl, ip
9001975a:	f106 0a01 	add.w	sl, r6, #1
9001975e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
90019762:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
90019766:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001976a:	ea4c 0c0a 	orr.w	ip, ip, sl
9001976e:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
90019772:	e7ae      	b.n	900196d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
90019774:	b005      	add	sp, #20
90019776:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001977a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001977a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001977e:	b085      	sub	sp, #20
90019780:	9813      	ldr	r0, [sp, #76]	; 0x4c
90019782:	9203      	str	r2, [sp, #12]
90019784:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
90019788:	9100      	str	r1, [sp, #0]
9001978a:	9201      	str	r2, [sp, #4]
9001978c:	6841      	ldr	r1, [r0, #4]
9001978e:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
90019792:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
90019796:	fb01 2404 	mla	r4, r1, r4, r2
9001979a:	6802      	ldr	r2, [r0, #0]
9001979c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
900197a0:	f8de 2000 	ldr.w	r2, [lr]
900197a4:	9202      	str	r2, [sp, #8]
900197a6:	9a01      	ldr	r2, [sp, #4]
900197a8:	43d6      	mvns	r6, r2
900197aa:	b2f6      	uxtb	r6, r6
900197ac:	9a00      	ldr	r2, [sp, #0]
900197ae:	2a00      	cmp	r2, #0
900197b0:	dc03      	bgt.n	900197ba <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
900197b2:	9a03      	ldr	r2, [sp, #12]
900197b4:	2a00      	cmp	r2, #0
900197b6:	f340 8124 	ble.w	90019a02 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
900197ba:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
900197bc:	f9be c008 	ldrsh.w	ip, [lr, #8]
900197c0:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
900197c4:	9a10      	ldr	r2, [sp, #64]	; 0x40
900197c6:	f9be 700c 	ldrsh.w	r7, [lr, #12]
900197ca:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
900197ce:	2b00      	cmp	r3, #0
900197d0:	dd0e      	ble.n	900197f0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
900197d2:	1408      	asrs	r0, r1, #16
900197d4:	d405      	bmi.n	900197e2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
900197d6:	4560      	cmp	r0, ip
900197d8:	da03      	bge.n	900197e2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
900197da:	1410      	asrs	r0, r2, #16
900197dc:	d401      	bmi.n	900197e2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
900197de:	42b8      	cmp	r0, r7
900197e0:	db07      	blt.n	900197f2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
900197e2:	9811      	ldr	r0, [sp, #68]	; 0x44
900197e4:	3b01      	subs	r3, #1
900197e6:	3402      	adds	r4, #2
900197e8:	4401      	add	r1, r0
900197ea:	9812      	ldr	r0, [sp, #72]	; 0x48
900197ec:	4402      	add	r2, r0
900197ee:	e7ee      	b.n	900197ce <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
900197f0:	d06e      	beq.n	900198d0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
900197f2:	1e58      	subs	r0, r3, #1
900197f4:	9d11      	ldr	r5, [sp, #68]	; 0x44
900197f6:	fb05 1500 	mla	r5, r5, r0, r1
900197fa:	142d      	asrs	r5, r5, #16
900197fc:	d45c      	bmi.n	900198b8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
900197fe:	4565      	cmp	r5, ip
90019800:	da5a      	bge.n	900198b8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
90019802:	9d12      	ldr	r5, [sp, #72]	; 0x48
90019804:	fb05 2000 	mla	r0, r5, r0, r2
90019808:	1400      	asrs	r0, r0, #16
9001980a:	d455      	bmi.n	900198b8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001980c:	42b8      	cmp	r0, r7
9001980e:	da53      	bge.n	900198b8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
90019810:	4699      	mov	r9, r3
90019812:	46a2      	mov	sl, r4
90019814:	f8bd b004 	ldrh.w	fp, [sp, #4]
90019818:	f1b9 0f00 	cmp.w	r9, #0
9001981c:	dd54      	ble.n	900198c8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001981e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
90019822:	140d      	asrs	r5, r1, #16
90019824:	1410      	asrs	r0, r2, #16
90019826:	f109 39ff 	add.w	r9, r9, #4294967295
9001982a:	fb07 5000 	mla	r0, r7, r0, r5
9001982e:	9d02      	ldr	r5, [sp, #8]
90019830:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
90019834:	f8ba 5000 	ldrh.w	r5, [sl]
90019838:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001983c:	122f      	asrs	r7, r5, #8
9001983e:	ea4f 08e5 	mov.w	r8, r5, asr #3
90019842:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
90019846:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001984a:	00ed      	lsls	r5, r5, #3
9001984c:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
90019850:	fb17 f706 	smulbb	r7, r7, r6
90019854:	b2ed      	uxtb	r5, r5
90019856:	fb18 f806 	smulbb	r8, r8, r6
9001985a:	fb0c 7c0b 	mla	ip, ip, fp, r7
9001985e:	10c7      	asrs	r7, r0, #3
90019860:	fb15 f506 	smulbb	r5, r5, r6
90019864:	00c0      	lsls	r0, r0, #3
90019866:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001986a:	fa1f fc8c 	uxth.w	ip, ip
9001986e:	b2c0      	uxtb	r0, r0
90019870:	fb07 870b 	mla	r7, r7, fp, r8
90019874:	fb00 500b 	mla	r0, r0, fp, r5
90019878:	f10c 0501 	add.w	r5, ip, #1
9001987c:	b2bf      	uxth	r7, r7
9001987e:	b280      	uxth	r0, r0
90019880:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
90019884:	f107 0801 	add.w	r8, r7, #1
90019888:	1c45      	adds	r5, r0, #1
9001988a:	eb08 2817 	add.w	r8, r8, r7, lsr #8
9001988e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
90019892:	eb05 2510 	add.w	r5, r5, r0, lsr #8
90019896:	9811      	ldr	r0, [sp, #68]	; 0x44
90019898:	ea4f 1858 	mov.w	r8, r8, lsr #5
9001989c:	f3c5 25c4 	ubfx	r5, r5, #11, #5
900198a0:	4401      	add	r1, r0
900198a2:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
900198a6:	9812      	ldr	r0, [sp, #72]	; 0x48
900198a8:	ea45 0c0c 	orr.w	ip, r5, ip
900198ac:	4402      	add	r2, r0
900198ae:	ea4c 0c08 	orr.w	ip, ip, r8
900198b2:	f82a cb02 	strh.w	ip, [sl], #2
900198b6:	e7af      	b.n	90019818 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
900198b8:	f04f 0800 	mov.w	r8, #0
900198bc:	f8bd a004 	ldrh.w	sl, [sp, #4]
900198c0:	eb03 0008 	add.w	r0, r3, r8
900198c4:	2800      	cmp	r0, #0
900198c6:	dc41      	bgt.n	9001994c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
900198c8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
900198cc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
900198d0:	9b00      	ldr	r3, [sp, #0]
900198d2:	2b00      	cmp	r3, #0
900198d4:	f340 8095 	ble.w	90019a02 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
900198d8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
900198dc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
900198de:	ee30 0a04 	vadd.f32	s0, s0, s8
900198e2:	ee70 0aa4 	vadd.f32	s1, s1, s9
900198e6:	eef0 6a62 	vmov.f32	s13, s5
900198ea:	eec7 7a00 	vdiv.f32	s15, s14, s0
900198ee:	ee31 1a05 	vadd.f32	s2, s2, s10
900198f2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900198f6:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
900198fa:	eef0 6a43 	vmov.f32	s13, s6
900198fe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90019902:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
90019906:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001990a:	ee61 7a27 	vmul.f32	s15, s2, s15
9001990e:	ee77 2a62 	vsub.f32	s5, s14, s5
90019912:	ee37 3ac3 	vsub.f32	s6, s15, s6
90019916:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001991a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001991e:	ee12 2a90 	vmov	r2, s5
90019922:	eef0 2a47 	vmov.f32	s5, s14
90019926:	fb92 f3f3 	sdiv	r3, r2, r3
9001992a:	ee13 2a10 	vmov	r2, s6
9001992e:	9311      	str	r3, [sp, #68]	; 0x44
90019930:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90019932:	eeb0 3a67 	vmov.f32	s6, s15
90019936:	fb92 f3f3 	sdiv	r3, r2, r3
9001993a:	9312      	str	r3, [sp, #72]	; 0x48
9001993c:	9b00      	ldr	r3, [sp, #0]
9001993e:	9a03      	ldr	r2, [sp, #12]
90019940:	3b01      	subs	r3, #1
90019942:	9300      	str	r3, [sp, #0]
90019944:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90019946:	bf08      	it	eq
90019948:	4613      	moveq	r3, r2
9001994a:	e72f      	b.n	900197ac <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
9001994c:	140f      	asrs	r7, r1, #16
9001994e:	d451      	bmi.n	900199f4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
90019950:	f8de 5008 	ldr.w	r5, [lr, #8]
90019954:	42bd      	cmp	r5, r7
90019956:	dd4d      	ble.n	900199f4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
90019958:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001995c:	d44a      	bmi.n	900199f4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001995e:	f8de 000c 	ldr.w	r0, [lr, #12]
90019962:	4560      	cmp	r0, ip
90019964:	dd46      	ble.n	900199f4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
90019966:	b22d      	sxth	r5, r5
90019968:	9802      	ldr	r0, [sp, #8]
9001996a:	fb0c 7505 	mla	r5, ip, r5, r7
9001996e:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
90019972:	f06f 0501 	mvn.w	r5, #1
90019976:	fb05 fb08 	mul.w	fp, r5, r8
9001997a:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001997e:	f834 500b 	ldrh.w	r5, [r4, fp]
90019982:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
90019986:	122f      	asrs	r7, r5, #8
90019988:	ea4f 09e5 	mov.w	r9, r5, asr #3
9001998c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
90019990:	00ed      	lsls	r5, r5, #3
90019992:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
90019996:	fb17 f706 	smulbb	r7, r7, r6
9001999a:	b2ed      	uxtb	r5, r5
9001999c:	fb19 f906 	smulbb	r9, r9, r6
900199a0:	fb0c 7c0a 	mla	ip, ip, sl, r7
900199a4:	10c7      	asrs	r7, r0, #3
900199a6:	fb15 f506 	smulbb	r5, r5, r6
900199aa:	00c0      	lsls	r0, r0, #3
900199ac:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
900199b0:	fa1f fc8c 	uxth.w	ip, ip
900199b4:	b2c0      	uxtb	r0, r0
900199b6:	fb07 970a 	mla	r7, r7, sl, r9
900199ba:	fb00 500a 	mla	r0, r0, sl, r5
900199be:	f10c 0501 	add.w	r5, ip, #1
900199c2:	b2bf      	uxth	r7, r7
900199c4:	b280      	uxth	r0, r0
900199c6:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
900199ca:	f107 0901 	add.w	r9, r7, #1
900199ce:	1c45      	adds	r5, r0, #1
900199d0:	eb09 2917 	add.w	r9, r9, r7, lsr #8
900199d4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
900199d8:	eb05 2510 	add.w	r5, r5, r0, lsr #8
900199dc:	ea4f 1959 	mov.w	r9, r9, lsr #5
900199e0:	f3c5 25c4 	ubfx	r5, r5, #11, #5
900199e4:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
900199e8:	ea45 0c0c 	orr.w	ip, r5, ip
900199ec:	ea4c 0c09 	orr.w	ip, ip, r9
900199f0:	f824 c00b 	strh.w	ip, [r4, fp]
900199f4:	9811      	ldr	r0, [sp, #68]	; 0x44
900199f6:	f108 38ff 	add.w	r8, r8, #4294967295
900199fa:	4401      	add	r1, r0
900199fc:	9812      	ldr	r0, [sp, #72]	; 0x48
900199fe:	4402      	add	r2, r0
90019a00:	e75e      	b.n	900198c0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
90019a02:	b005      	add	sp, #20
90019a04:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90019a08 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90019a08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90019a0c:	b085      	sub	sp, #20
90019a0e:	4693      	mov	fp, r2
90019a10:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
90019a14:	9e13      	ldr	r6, [sp, #76]	; 0x4c
90019a16:	9d16      	ldr	r5, [sp, #88]	; 0x58
90019a18:	6870      	ldr	r0, [r6, #4]
90019a1a:	9101      	str	r1, [sp, #4]
90019a1c:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
90019a20:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
90019a24:	fb00 2404 	mla	r4, r0, r4, r2
90019a28:	6832      	ldr	r2, [r6, #0]
90019a2a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
90019a2e:	682a      	ldr	r2, [r5, #0]
90019a30:	9202      	str	r2, [sp, #8]
90019a32:	9a01      	ldr	r2, [sp, #4]
90019a34:	2a00      	cmp	r2, #0
90019a36:	dc03      	bgt.n	90019a40 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
90019a38:	f1bb 0f00 	cmp.w	fp, #0
90019a3c:	f340 809a 	ble.w	90019b74 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
90019a40:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
90019a42:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
90019a46:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
90019a4a:	9a10      	ldr	r2, [sp, #64]	; 0x40
90019a4c:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
90019a50:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
90019a54:	2b00      	cmp	r3, #0
90019a56:	dd0c      	ble.n	90019a72 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
90019a58:	1406      	asrs	r6, r0, #16
90019a5a:	d405      	bmi.n	90019a68 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
90019a5c:	454e      	cmp	r6, r9
90019a5e:	da03      	bge.n	90019a68 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
90019a60:	1416      	asrs	r6, r2, #16
90019a62:	d401      	bmi.n	90019a68 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
90019a64:	4546      	cmp	r6, r8
90019a66:	db05      	blt.n	90019a74 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90019a68:	4470      	add	r0, lr
90019a6a:	4462      	add	r2, ip
90019a6c:	3b01      	subs	r3, #1
90019a6e:	3402      	adds	r4, #2
90019a70:	e7f0      	b.n	90019a54 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
90019a72:	d00f      	beq.n	90019a94 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
90019a74:	1e5e      	subs	r6, r3, #1
90019a76:	fb0e 0706 	mla	r7, lr, r6, r0
90019a7a:	143f      	asrs	r7, r7, #16
90019a7c:	d541      	bpl.n	90019b02 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
90019a7e:	eb04 0643 	add.w	r6, r4, r3, lsl #1
90019a82:	4698      	mov	r8, r3
90019a84:	9603      	str	r6, [sp, #12]
90019a86:	f1b8 0f00 	cmp.w	r8, #0
90019a8a:	dc56      	bgt.n	90019b3a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
90019a8c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90019a90:	eb04 0443 	add.w	r4, r4, r3, lsl #1
90019a94:	9b01      	ldr	r3, [sp, #4]
90019a96:	2b00      	cmp	r3, #0
90019a98:	dd6c      	ble.n	90019b74 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
90019a9a:	ee30 0a04 	vadd.f32	s0, s0, s8
90019a9e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90019aa0:	ee70 0aa4 	vadd.f32	s1, s1, s9
90019aa4:	eeb0 6a62 	vmov.f32	s12, s5
90019aa8:	eec6 7a80 	vdiv.f32	s15, s13, s0
90019aac:	ee31 1a05 	vadd.f32	s2, s2, s10
90019ab0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90019ab4:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
90019ab8:	eeb0 6a43 	vmov.f32	s12, s6
90019abc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90019ac0:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
90019ac4:	ee20 7aa7 	vmul.f32	s14, s1, s15
90019ac8:	ee61 7a27 	vmul.f32	s15, s2, s15
90019acc:	ee77 2a62 	vsub.f32	s5, s14, s5
90019ad0:	ee37 3ac3 	vsub.f32	s6, s15, s6
90019ad4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90019ad8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90019adc:	ee12 2a90 	vmov	r2, s5
90019ae0:	eef0 2a47 	vmov.f32	s5, s14
90019ae4:	fb92 fef3 	sdiv	lr, r2, r3
90019ae8:	ee13 2a10 	vmov	r2, s6
90019aec:	eeb0 3a67 	vmov.f32	s6, s15
90019af0:	fb92 fcf3 	sdiv	ip, r2, r3
90019af4:	9b01      	ldr	r3, [sp, #4]
90019af6:	3b01      	subs	r3, #1
90019af8:	9301      	str	r3, [sp, #4]
90019afa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90019afc:	bf08      	it	eq
90019afe:	465b      	moveq	r3, fp
90019b00:	e797      	b.n	90019a32 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
90019b02:	454f      	cmp	r7, r9
90019b04:	dabb      	bge.n	90019a7e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
90019b06:	fb0c 2606 	mla	r6, ip, r6, r2
90019b0a:	1436      	asrs	r6, r6, #16
90019b0c:	d4b7      	bmi.n	90019a7e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
90019b0e:	4546      	cmp	r6, r8
90019b10:	dab5      	bge.n	90019a7e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
90019b12:	461e      	mov	r6, r3
90019b14:	46a0      	mov	r8, r4
90019b16:	2e00      	cmp	r6, #0
90019b18:	ddb8      	ble.n	90019a8c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90019b1a:	1417      	asrs	r7, r2, #16
90019b1c:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
90019b20:	ea4f 4920 	mov.w	r9, r0, asr #16
90019b24:	9902      	ldr	r1, [sp, #8]
90019b26:	4470      	add	r0, lr
90019b28:	4462      	add	r2, ip
90019b2a:	fb0a 9707 	mla	r7, sl, r7, r9
90019b2e:	3e01      	subs	r6, #1
90019b30:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
90019b34:	f828 7b02 	strh.w	r7, [r8], #2
90019b38:	e7ed      	b.n	90019b16 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
90019b3a:	ea5f 4920 	movs.w	r9, r0, asr #16
90019b3e:	d414      	bmi.n	90019b6a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
90019b40:	68ae      	ldr	r6, [r5, #8]
90019b42:	454e      	cmp	r6, r9
90019b44:	dd11      	ble.n	90019b6a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
90019b46:	ea5f 4a22 	movs.w	sl, r2, asr #16
90019b4a:	d40e      	bmi.n	90019b6a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
90019b4c:	68ef      	ldr	r7, [r5, #12]
90019b4e:	4557      	cmp	r7, sl
90019b50:	dd0b      	ble.n	90019b6a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
90019b52:	b236      	sxth	r6, r6
90019b54:	f06f 0101 	mvn.w	r1, #1
90019b58:	9f02      	ldr	r7, [sp, #8]
90019b5a:	fb0a 9606 	mla	r6, sl, r6, r9
90019b5e:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
90019b62:	fb01 f608 	mul.w	r6, r1, r8
90019b66:	9903      	ldr	r1, [sp, #12]
90019b68:	538f      	strh	r7, [r1, r6]
90019b6a:	4470      	add	r0, lr
90019b6c:	4462      	add	r2, ip
90019b6e:	f108 38ff 	add.w	r8, r8, #4294967295
90019b72:	e788      	b.n	90019a86 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
90019b74:	b005      	add	sp, #20
90019b76:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90019b7a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90019b7a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90019b7e:	b087      	sub	sp, #28
90019b80:	468b      	mov	fp, r1
90019b82:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
90019b86:	9815      	ldr	r0, [sp, #84]	; 0x54
90019b88:	9203      	str	r2, [sp, #12]
90019b8a:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
90019b8e:	6841      	ldr	r1, [r0, #4]
90019b90:	9204      	str	r2, [sp, #16]
90019b92:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
90019b96:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
90019b9a:	fb01 2505 	mla	r5, r1, r5, r2
90019b9e:	6802      	ldr	r2, [r0, #0]
90019ba0:	eb02 0545 	add.w	r5, r2, r5, lsl #1
90019ba4:	f8d9 2000 	ldr.w	r2, [r9]
90019ba8:	9201      	str	r2, [sp, #4]
90019baa:	f1bb 0f00 	cmp.w	fp, #0
90019bae:	dc03      	bgt.n	90019bb8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
90019bb0:	9a03      	ldr	r2, [sp, #12]
90019bb2:	2a00      	cmp	r2, #0
90019bb4:	f340 8158 	ble.w	90019e68 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
90019bb8:	9a11      	ldr	r2, [sp, #68]	; 0x44
90019bba:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
90019bbe:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
90019bc2:	9a12      	ldr	r2, [sp, #72]	; 0x48
90019bc4:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
90019bc8:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
90019bcc:	2b00      	cmp	r3, #0
90019bce:	dd0e      	ble.n	90019bee <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
90019bd0:	1402      	asrs	r2, r0, #16
90019bd2:	d405      	bmi.n	90019be0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90019bd4:	42ba      	cmp	r2, r7
90019bd6:	da03      	bge.n	90019be0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90019bd8:	140a      	asrs	r2, r1, #16
90019bda:	d401      	bmi.n	90019be0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90019bdc:	42b2      	cmp	r2, r6
90019bde:	db07      	blt.n	90019bf0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
90019be0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
90019be2:	3b01      	subs	r3, #1
90019be4:	3502      	adds	r5, #2
90019be6:	4410      	add	r0, r2
90019be8:	9a14      	ldr	r2, [sp, #80]	; 0x50
90019bea:	4411      	add	r1, r2
90019bec:	e7ee      	b.n	90019bcc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
90019bee:	d017      	beq.n	90019c20 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
90019bf0:	1e5a      	subs	r2, r3, #1
90019bf2:	9c13      	ldr	r4, [sp, #76]	; 0x4c
90019bf4:	fb04 0402 	mla	r4, r4, r2, r0
90019bf8:	1424      	asrs	r4, r4, #16
90019bfa:	d409      	bmi.n	90019c10 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
90019bfc:	42bc      	cmp	r4, r7
90019bfe:	da07      	bge.n	90019c10 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
90019c00:	9c14      	ldr	r4, [sp, #80]	; 0x50
90019c02:	fb04 1202 	mla	r2, r4, r2, r1
90019c06:	1412      	asrs	r2, r2, #16
90019c08:	d402      	bmi.n	90019c10 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
90019c0a:	42b2      	cmp	r2, r6
90019c0c:	f2c0 80bf 	blt.w	90019d8e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
90019c10:	2700      	movs	r7, #0
90019c12:	19da      	adds	r2, r3, r7
90019c14:	2a00      	cmp	r2, #0
90019c16:	dc3e      	bgt.n	90019c96 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
90019c18:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90019c1c:	eb05 0543 	add.w	r5, r5, r3, lsl #1
90019c20:	f1bb 0f00 	cmp.w	fp, #0
90019c24:	f340 8120 	ble.w	90019e68 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
90019c28:	ee30 0a04 	vadd.f32	s0, s0, s8
90019c2c:	9b10      	ldr	r3, [sp, #64]	; 0x40
90019c2e:	ee70 0aa4 	vadd.f32	s1, s1, s9
90019c32:	f1bb 0b01 	subs.w	fp, fp, #1
90019c36:	eeb0 6a62 	vmov.f32	s12, s5
90019c3a:	eec6 7a80 	vdiv.f32	s15, s13, s0
90019c3e:	ee31 1a05 	vadd.f32	s2, s2, s10
90019c42:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90019c46:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
90019c4a:	eeb0 6a43 	vmov.f32	s12, s6
90019c4e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90019c52:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
90019c56:	ee20 7aa7 	vmul.f32	s14, s1, s15
90019c5a:	ee61 7a27 	vmul.f32	s15, s2, s15
90019c5e:	ee77 2a62 	vsub.f32	s5, s14, s5
90019c62:	ee37 3ac3 	vsub.f32	s6, s15, s6
90019c66:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90019c6a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90019c6e:	ee12 2a90 	vmov	r2, s5
90019c72:	eef0 2a47 	vmov.f32	s5, s14
90019c76:	fb92 f3f3 	sdiv	r3, r2, r3
90019c7a:	ee13 2a10 	vmov	r2, s6
90019c7e:	9313      	str	r3, [sp, #76]	; 0x4c
90019c80:	9b10      	ldr	r3, [sp, #64]	; 0x40
90019c82:	eeb0 3a67 	vmov.f32	s6, s15
90019c86:	fb92 f3f3 	sdiv	r3, r2, r3
90019c8a:	9a03      	ldr	r2, [sp, #12]
90019c8c:	9314      	str	r3, [sp, #80]	; 0x50
90019c8e:	9b10      	ldr	r3, [sp, #64]	; 0x40
90019c90:	bf08      	it	eq
90019c92:	4613      	moveq	r3, r2
90019c94:	e789      	b.n	90019baa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
90019c96:	1406      	asrs	r6, r0, #16
90019c98:	d42d      	bmi.n	90019cf6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
90019c9a:	f8d9 4008 	ldr.w	r4, [r9, #8]
90019c9e:	42b4      	cmp	r4, r6
90019ca0:	dd29      	ble.n	90019cf6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
90019ca2:	ea5f 4c21 	movs.w	ip, r1, asr #16
90019ca6:	d426      	bmi.n	90019cf6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
90019ca8:	f8d9 200c 	ldr.w	r2, [r9, #12]
90019cac:	4562      	cmp	r2, ip
90019cae:	dd22      	ble.n	90019cf6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
90019cb0:	b224      	sxth	r4, r4
90019cb2:	9a01      	ldr	r2, [sp, #4]
90019cb4:	fb0c 6404 	mla	r4, ip, r4, r6
90019cb8:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
90019cbc:	0e22      	lsrs	r2, r4, #24
90019cbe:	d01a      	beq.n	90019cf6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
90019cc0:	9e04      	ldr	r6, [sp, #16]
90019cc2:	4372      	muls	r2, r6
90019cc4:	1c56      	adds	r6, r2, #1
90019cc6:	eb06 2222 	add.w	r2, r6, r2, asr #8
90019cca:	0a26      	lsrs	r6, r4, #8
90019ccc:	1212      	asrs	r2, r2, #8
90019cce:	9605      	str	r6, [sp, #20]
90019cd0:	2aff      	cmp	r2, #255	; 0xff
90019cd2:	d116      	bne.n	90019d02 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
90019cd4:	f06f 0201 	mvn.w	r2, #1
90019cd8:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
90019cdc:	fb02 fc07 	mul.w	ip, r2, r7
90019ce0:	0962      	lsrs	r2, r4, #5
90019ce2:	f026 0607 	bic.w	r6, r6, #7
90019ce6:	f3c4 04c4 	ubfx	r4, r4, #3, #5
90019cea:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90019cee:	4316      	orrs	r6, r2
90019cf0:	4326      	orrs	r6, r4
90019cf2:	f825 600c 	strh.w	r6, [r5, ip]
90019cf6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
90019cf8:	3f01      	subs	r7, #1
90019cfa:	4410      	add	r0, r2
90019cfc:	9a14      	ldr	r2, [sp, #80]	; 0x50
90019cfe:	4411      	add	r1, r2
90019d00:	e787      	b.n	90019c12 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
90019d02:	f06f 0601 	mvn.w	r6, #1
90019d06:	fa1f fa82 	uxth.w	sl, r2
90019d0a:	f3c4 4c07 	ubfx	ip, r4, #16, #8
90019d0e:	43d2      	mvns	r2, r2
90019d10:	437e      	muls	r6, r7
90019d12:	b2e4      	uxtb	r4, r4
90019d14:	fb1c fc0a 	smulbb	ip, ip, sl
90019d18:	b2d2      	uxtb	r2, r2
90019d1a:	f835 8006 	ldrh.w	r8, [r5, r6]
90019d1e:	fb14 f40a 	smulbb	r4, r4, sl
90019d22:	9602      	str	r6, [sp, #8]
90019d24:	ea4f 2e28 	mov.w	lr, r8, asr #8
90019d28:	f89d 6014 	ldrb.w	r6, [sp, #20]
90019d2c:	fb16 f60a 	smulbb	r6, r6, sl
90019d30:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
90019d34:	fb0e ce02 	mla	lr, lr, r2, ip
90019d38:	ea4f 0ce8 	mov.w	ip, r8, asr #3
90019d3c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
90019d40:	fa1f fe8e 	uxth.w	lr, lr
90019d44:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
90019d48:	fa5f f888 	uxtb.w	r8, r8
90019d4c:	fb0c 6c02 	mla	ip, ip, r2, r6
90019d50:	fb08 4402 	mla	r4, r8, r2, r4
90019d54:	f10e 0201 	add.w	r2, lr, #1
90019d58:	fa1f fc8c 	uxth.w	ip, ip
90019d5c:	b2a4      	uxth	r4, r4
90019d5e:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
90019d62:	9a02      	ldr	r2, [sp, #8]
90019d64:	1c66      	adds	r6, r4, #1
90019d66:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
90019d6a:	eb06 2614 	add.w	r6, r6, r4, lsr #8
90019d6e:	f3c6 26c4 	ubfx	r6, r6, #11, #5
90019d72:	ea46 0e0e 	orr.w	lr, r6, lr
90019d76:	f10c 0601 	add.w	r6, ip, #1
90019d7a:	eb06 261c 	add.w	r6, r6, ip, lsr #8
90019d7e:	0976      	lsrs	r6, r6, #5
90019d80:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
90019d84:	ea4e 0e06 	orr.w	lr, lr, r6
90019d88:	f825 e002 	strh.w	lr, [r5, r2]
90019d8c:	e7b3      	b.n	90019cf6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
90019d8e:	f04f 0800 	mov.w	r8, #0
90019d92:	eba3 0208 	sub.w	r2, r3, r8
90019d96:	2a00      	cmp	r2, #0
90019d98:	f77f af3e 	ble.w	90019c18 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
90019d9c:	1404      	asrs	r4, r0, #16
90019d9e:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
90019da2:	140a      	asrs	r2, r1, #16
90019da4:	fb06 4202 	mla	r2, r6, r2, r4
90019da8:	9c01      	ldr	r4, [sp, #4]
90019daa:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
90019dae:	0e22      	lsrs	r2, r4, #24
90019db0:	d015      	beq.n	90019dde <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
90019db2:	9e04      	ldr	r6, [sp, #16]
90019db4:	4372      	muls	r2, r6
90019db6:	1c56      	adds	r6, r2, #1
90019db8:	eb06 2222 	add.w	r2, r6, r2, asr #8
90019dbc:	0a26      	lsrs	r6, r4, #8
90019dbe:	1212      	asrs	r2, r2, #8
90019dc0:	2aff      	cmp	r2, #255	; 0xff
90019dc2:	d113      	bne.n	90019dec <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
90019dc4:	0962      	lsrs	r2, r4, #5
90019dc6:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
90019dca:	f3c4 04c4 	ubfx	r4, r4, #3, #5
90019dce:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90019dd2:	f026 0607 	bic.w	r6, r6, #7
90019dd6:	4316      	orrs	r6, r2
90019dd8:	4326      	orrs	r6, r4
90019dda:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
90019dde:	9a13      	ldr	r2, [sp, #76]	; 0x4c
90019de0:	f108 0801 	add.w	r8, r8, #1
90019de4:	4410      	add	r0, r2
90019de6:	9a14      	ldr	r2, [sp, #80]	; 0x50
90019de8:	4411      	add	r1, r2
90019dea:	e7d2      	b.n	90019d92 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
90019dec:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
90019df0:	fa1f fa82 	uxth.w	sl, r2
90019df4:	f3c4 4707 	ubfx	r7, r4, #16, #8
90019df8:	43d2      	mvns	r2, r2
90019dfa:	ea4f 2c2e 	mov.w	ip, lr, asr #8
90019dfe:	fb17 f70a 	smulbb	r7, r7, sl
90019e02:	b2d2      	uxtb	r2, r2
90019e04:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
90019e08:	b2e4      	uxtb	r4, r4
90019e0a:	b2f6      	uxtb	r6, r6
90019e0c:	fb0c 7c02 	mla	ip, ip, r2, r7
90019e10:	ea4f 07ee 	mov.w	r7, lr, asr #3
90019e14:	fb14 f40a 	smulbb	r4, r4, sl
90019e18:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90019e1c:	fa1f fc8c 	uxth.w	ip, ip
90019e20:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
90019e24:	fb16 f60a 	smulbb	r6, r6, sl
90019e28:	fa5f fe8e 	uxtb.w	lr, lr
90019e2c:	fb0e 4402 	mla	r4, lr, r2, r4
90019e30:	fb07 6702 	mla	r7, r7, r2, r6
90019e34:	f10c 0201 	add.w	r2, ip, #1
90019e38:	b2a4      	uxth	r4, r4
90019e3a:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
90019e3e:	1c66      	adds	r6, r4, #1
90019e40:	b2bf      	uxth	r7, r7
90019e42:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
90019e46:	eb06 2614 	add.w	r6, r6, r4, lsr #8
90019e4a:	f3c6 26c4 	ubfx	r6, r6, #11, #5
90019e4e:	ea46 0c0c 	orr.w	ip, r6, ip
90019e52:	1c7e      	adds	r6, r7, #1
90019e54:	eb06 2617 	add.w	r6, r6, r7, lsr #8
90019e58:	0976      	lsrs	r6, r6, #5
90019e5a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
90019e5e:	ea4c 0c06 	orr.w	ip, ip, r6
90019e62:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
90019e66:	e7ba      	b.n	90019dde <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
90019e68:	b007      	add	sp, #28
90019e6a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

90019e70 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90019e70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90019e74:	b085      	sub	sp, #20
90019e76:	468b      	mov	fp, r1
90019e78:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
90019e7c:	9813      	ldr	r0, [sp, #76]	; 0x4c
90019e7e:	9203      	str	r2, [sp, #12]
90019e80:	6841      	ldr	r1, [r0, #4]
90019e82:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
90019e86:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
90019e8a:	fb01 2404 	mla	r4, r1, r4, r2
90019e8e:	6802      	ldr	r2, [r0, #0]
90019e90:	eb02 0444 	add.w	r4, r2, r4, lsl #1
90019e94:	f8d8 2000 	ldr.w	r2, [r8]
90019e98:	9201      	str	r2, [sp, #4]
90019e9a:	f1bb 0f00 	cmp.w	fp, #0
90019e9e:	dc03      	bgt.n	90019ea8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
90019ea0:	9a03      	ldr	r2, [sp, #12]
90019ea2:	2a00      	cmp	r2, #0
90019ea4:	f340 814f 	ble.w	9001a146 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
90019ea8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
90019eaa:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
90019eae:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
90019eb2:	9a10      	ldr	r2, [sp, #64]	; 0x40
90019eb4:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
90019eb8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
90019ebc:	2b00      	cmp	r3, #0
90019ebe:	dd0e      	ble.n	90019ede <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
90019ec0:	1408      	asrs	r0, r1, #16
90019ec2:	d405      	bmi.n	90019ed0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
90019ec4:	42b8      	cmp	r0, r7
90019ec6:	da03      	bge.n	90019ed0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
90019ec8:	1410      	asrs	r0, r2, #16
90019eca:	d401      	bmi.n	90019ed0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
90019ecc:	42b0      	cmp	r0, r6
90019ece:	db07      	blt.n	90019ee0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
90019ed0:	9811      	ldr	r0, [sp, #68]	; 0x44
90019ed2:	3b01      	subs	r3, #1
90019ed4:	3402      	adds	r4, #2
90019ed6:	4401      	add	r1, r0
90019ed8:	9812      	ldr	r0, [sp, #72]	; 0x48
90019eda:	4402      	add	r2, r0
90019edc:	e7ee      	b.n	90019ebc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
90019ede:	d017      	beq.n	90019f10 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
90019ee0:	1e58      	subs	r0, r3, #1
90019ee2:	9d11      	ldr	r5, [sp, #68]	; 0x44
90019ee4:	fb05 1500 	mla	r5, r5, r0, r1
90019ee8:	142d      	asrs	r5, r5, #16
90019eea:	d409      	bmi.n	90019f00 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90019eec:	42bd      	cmp	r5, r7
90019eee:	da07      	bge.n	90019f00 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90019ef0:	9d12      	ldr	r5, [sp, #72]	; 0x48
90019ef2:	fb05 2000 	mla	r0, r5, r0, r2
90019ef6:	1400      	asrs	r0, r0, #16
90019ef8:	d402      	bmi.n	90019f00 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90019efa:	42b0      	cmp	r0, r6
90019efc:	f2c0 80ba 	blt.w	9001a074 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
90019f00:	2600      	movs	r6, #0
90019f02:	1998      	adds	r0, r3, r6
90019f04:	2800      	cmp	r0, #0
90019f06:	dc3e      	bgt.n	90019f86 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
90019f08:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90019f0c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
90019f10:	f1bb 0f00 	cmp.w	fp, #0
90019f14:	f340 8117 	ble.w	9001a146 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
90019f18:	ee30 0a04 	vadd.f32	s0, s0, s8
90019f1c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90019f1e:	ee70 0aa4 	vadd.f32	s1, s1, s9
90019f22:	f1bb 0b01 	subs.w	fp, fp, #1
90019f26:	eeb0 6a62 	vmov.f32	s12, s5
90019f2a:	eec6 7a80 	vdiv.f32	s15, s13, s0
90019f2e:	ee31 1a05 	vadd.f32	s2, s2, s10
90019f32:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90019f36:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
90019f3a:	eeb0 6a43 	vmov.f32	s12, s6
90019f3e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90019f42:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
90019f46:	ee20 7aa7 	vmul.f32	s14, s1, s15
90019f4a:	ee61 7a27 	vmul.f32	s15, s2, s15
90019f4e:	ee77 2a62 	vsub.f32	s5, s14, s5
90019f52:	ee37 3ac3 	vsub.f32	s6, s15, s6
90019f56:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90019f5a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90019f5e:	ee12 2a90 	vmov	r2, s5
90019f62:	eef0 2a47 	vmov.f32	s5, s14
90019f66:	fb92 f3f3 	sdiv	r3, r2, r3
90019f6a:	ee13 2a10 	vmov	r2, s6
90019f6e:	9311      	str	r3, [sp, #68]	; 0x44
90019f70:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90019f72:	eeb0 3a67 	vmov.f32	s6, s15
90019f76:	fb92 f3f3 	sdiv	r3, r2, r3
90019f7a:	9a03      	ldr	r2, [sp, #12]
90019f7c:	9312      	str	r3, [sp, #72]	; 0x48
90019f7e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90019f80:	bf08      	it	eq
90019f82:	4613      	moveq	r3, r2
90019f84:	e789      	b.n	90019e9a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
90019f86:	140f      	asrs	r7, r1, #16
90019f88:	d424      	bmi.n	90019fd4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90019f8a:	f8d8 5008 	ldr.w	r5, [r8, #8]
90019f8e:	42bd      	cmp	r5, r7
90019f90:	dd20      	ble.n	90019fd4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90019f92:	ea5f 4c22 	movs.w	ip, r2, asr #16
90019f96:	d41d      	bmi.n	90019fd4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90019f98:	f8d8 000c 	ldr.w	r0, [r8, #12]
90019f9c:	4560      	cmp	r0, ip
90019f9e:	dd19      	ble.n	90019fd4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90019fa0:	b22d      	sxth	r5, r5
90019fa2:	9801      	ldr	r0, [sp, #4]
90019fa4:	fb0c 7505 	mla	r5, ip, r5, r7
90019fa8:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
90019fac:	0e07      	lsrs	r7, r0, #24
90019fae:	2fff      	cmp	r7, #255	; 0xff
90019fb0:	d116      	bne.n	90019fe0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
90019fb2:	f06f 0501 	mvn.w	r5, #1
90019fb6:	fb05 f706 	mul.w	r7, r5, r6
90019fba:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
90019fbe:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
90019fc2:	0945      	lsrs	r5, r0, #5
90019fc4:	f3c0 00c4 	ubfx	r0, r0, #3, #5
90019fc8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90019fcc:	ea4c 0505 	orr.w	r5, ip, r5
90019fd0:	4305      	orrs	r5, r0
90019fd2:	53e5      	strh	r5, [r4, r7]
90019fd4:	9811      	ldr	r0, [sp, #68]	; 0x44
90019fd6:	3e01      	subs	r6, #1
90019fd8:	4401      	add	r1, r0
90019fda:	9812      	ldr	r0, [sp, #72]	; 0x48
90019fdc:	4402      	add	r2, r0
90019fde:	e790      	b.n	90019f02 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90019fe0:	b2fd      	uxtb	r5, r7
90019fe2:	2f00      	cmp	r7, #0
90019fe4:	d0f6      	beq.n	90019fd4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90019fe6:	f06f 0701 	mvn.w	r7, #1
90019fea:	fa1f f985 	uxth.w	r9, r5
90019fee:	43ed      	mvns	r5, r5
90019ff0:	f3c0 2a07 	ubfx	sl, r0, #8, #8
90019ff4:	4377      	muls	r7, r6
90019ff6:	fb1a fa09 	smulbb	sl, sl, r9
90019ffa:	b2ed      	uxtb	r5, r5
90019ffc:	f834 e007 	ldrh.w	lr, [r4, r7]
9001a000:	9702      	str	r7, [sp, #8]
9001a002:	f3c0 4707 	ubfx	r7, r0, #16, #8
9001a006:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001a00a:	fb17 f709 	smulbb	r7, r7, r9
9001a00e:	b2c0      	uxtb	r0, r0
9001a010:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001a014:	fb10 f009 	smulbb	r0, r0, r9
9001a018:	fb0c 7c05 	mla	ip, ip, r5, r7
9001a01c:	ea4f 07ee 	mov.w	r7, lr, asr #3
9001a020:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001a024:	fa1f fc8c 	uxth.w	ip, ip
9001a028:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001a02c:	fa5f fe8e 	uxtb.w	lr, lr
9001a030:	fb07 a705 	mla	r7, r7, r5, sl
9001a034:	fb0e 0005 	mla	r0, lr, r5, r0
9001a038:	f10c 0501 	add.w	r5, ip, #1
9001a03c:	b2bf      	uxth	r7, r7
9001a03e:	b280      	uxth	r0, r0
9001a040:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001a044:	f100 0a01 	add.w	sl, r0, #1
9001a048:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001a04c:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
9001a050:	9802      	ldr	r0, [sp, #8]
9001a052:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001a056:	ea4a 0c0c 	orr.w	ip, sl, ip
9001a05a:	f107 0a01 	add.w	sl, r7, #1
9001a05e:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001a062:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001a066:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001a06a:	ea4c 0c0a 	orr.w	ip, ip, sl
9001a06e:	f824 c000 	strh.w	ip, [r4, r0]
9001a072:	e7af      	b.n	90019fd4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001a074:	f04f 0e00 	mov.w	lr, #0
9001a078:	eba3 000e 	sub.w	r0, r3, lr
9001a07c:	2800      	cmp	r0, #0
9001a07e:	f77f af43 	ble.w	90019f08 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001a082:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
9001a086:	140d      	asrs	r5, r1, #16
9001a088:	1410      	asrs	r0, r2, #16
9001a08a:	fb06 5000 	mla	r0, r6, r0, r5
9001a08e:	9d01      	ldr	r5, [sp, #4]
9001a090:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
9001a094:	0e2e      	lsrs	r6, r5, #24
9001a096:	2eff      	cmp	r6, #255	; 0xff
9001a098:	d112      	bne.n	9001a0c0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
9001a09a:	482c      	ldr	r0, [pc, #176]	; (9001a14c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
9001a09c:	ea00 2615 	and.w	r6, r0, r5, lsr #8
9001a0a0:	0968      	lsrs	r0, r5, #5
9001a0a2:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001a0a6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9001a0aa:	4330      	orrs	r0, r6
9001a0ac:	4328      	orrs	r0, r5
9001a0ae:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
9001a0b2:	9811      	ldr	r0, [sp, #68]	; 0x44
9001a0b4:	f10e 0e01 	add.w	lr, lr, #1
9001a0b8:	4401      	add	r1, r0
9001a0ba:	9812      	ldr	r0, [sp, #72]	; 0x48
9001a0bc:	4402      	add	r2, r0
9001a0be:	e7db      	b.n	9001a078 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
9001a0c0:	b2f0      	uxtb	r0, r6
9001a0c2:	2e00      	cmp	r6, #0
9001a0c4:	d0f5      	beq.n	9001a0b2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
9001a0c6:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
9001a0ca:	fa1f f980 	uxth.w	r9, r0
9001a0ce:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001a0d2:	43c0      	mvns	r0, r0
9001a0d4:	ea4f 272c 	mov.w	r7, ip, asr #8
9001a0d8:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001a0dc:	fb16 f609 	smulbb	r6, r6, r9
9001a0e0:	b2c0      	uxtb	r0, r0
9001a0e2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001a0e6:	b2ed      	uxtb	r5, r5
9001a0e8:	fb1a fa09 	smulbb	sl, sl, r9
9001a0ec:	fb07 6700 	mla	r7, r7, r0, r6
9001a0f0:	ea4f 06ec 	mov.w	r6, ip, asr #3
9001a0f4:	fb15 f509 	smulbb	r5, r5, r9
9001a0f8:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001a0fc:	b2bf      	uxth	r7, r7
9001a0fe:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001a102:	fa5f fc8c 	uxtb.w	ip, ip
9001a106:	fb06 a600 	mla	r6, r6, r0, sl
9001a10a:	fb0c 5500 	mla	r5, ip, r0, r5
9001a10e:	1c78      	adds	r0, r7, #1
9001a110:	b2b6      	uxth	r6, r6
9001a112:	b2ad      	uxth	r5, r5
9001a114:	eb00 2717 	add.w	r7, r0, r7, lsr #8
9001a118:	f105 0a01 	add.w	sl, r5, #1
9001a11c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
9001a120:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001a124:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001a128:	ea4a 0707 	orr.w	r7, sl, r7
9001a12c:	f106 0a01 	add.w	sl, r6, #1
9001a130:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001a134:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001a138:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001a13c:	ea47 070a 	orr.w	r7, r7, sl
9001a140:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
9001a144:	e7b5      	b.n	9001a0b2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
9001a146:	b005      	add	sp, #20
9001a148:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001a14c:	fffff800 	.word	0xfffff800

9001a150 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001a150:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001a154:	b087      	sub	sp, #28
9001a156:	468b      	mov	fp, r1
9001a158:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001a15c:	9815      	ldr	r0, [sp, #84]	; 0x54
9001a15e:	9203      	str	r2, [sp, #12]
9001a160:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
9001a164:	6841      	ldr	r1, [r0, #4]
9001a166:	9204      	str	r2, [sp, #16]
9001a168:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
9001a16c:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
9001a170:	fb01 2404 	mla	r4, r1, r4, r2
9001a174:	6802      	ldr	r2, [r0, #0]
9001a176:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001a17a:	f8d9 2008 	ldr.w	r2, [r9, #8]
9001a17e:	3201      	adds	r2, #1
9001a180:	f022 0201 	bic.w	r2, r2, #1
9001a184:	9200      	str	r2, [sp, #0]
9001a186:	f8d9 2000 	ldr.w	r2, [r9]
9001a18a:	9201      	str	r2, [sp, #4]
9001a18c:	f1bb 0f00 	cmp.w	fp, #0
9001a190:	dc03      	bgt.n	9001a19a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
9001a192:	9a03      	ldr	r2, [sp, #12]
9001a194:	2a00      	cmp	r2, #0
9001a196:	f340 816a 	ble.w	9001a46e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
9001a19a:	9a11      	ldr	r2, [sp, #68]	; 0x44
9001a19c:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
9001a1a0:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
9001a1a4:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001a1a6:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
9001a1aa:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001a1ae:	2b00      	cmp	r3, #0
9001a1b0:	dd0e      	ble.n	9001a1d0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
9001a1b2:	1402      	asrs	r2, r0, #16
9001a1b4:	d405      	bmi.n	9001a1c2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001a1b6:	42ba      	cmp	r2, r7
9001a1b8:	da03      	bge.n	9001a1c2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001a1ba:	140a      	asrs	r2, r1, #16
9001a1bc:	d401      	bmi.n	9001a1c2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001a1be:	42b2      	cmp	r2, r6
9001a1c0:	db07      	blt.n	9001a1d2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
9001a1c2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001a1c4:	3b01      	subs	r3, #1
9001a1c6:	3402      	adds	r4, #2
9001a1c8:	4410      	add	r0, r2
9001a1ca:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001a1cc:	4411      	add	r1, r2
9001a1ce:	e7ee      	b.n	9001a1ae <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
9001a1d0:	d017      	beq.n	9001a202 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
9001a1d2:	1e5a      	subs	r2, r3, #1
9001a1d4:	9d13      	ldr	r5, [sp, #76]	; 0x4c
9001a1d6:	fb05 0502 	mla	r5, r5, r2, r0
9001a1da:	142d      	asrs	r5, r5, #16
9001a1dc:	d409      	bmi.n	9001a1f2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001a1de:	42bd      	cmp	r5, r7
9001a1e0:	da07      	bge.n	9001a1f2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001a1e2:	9d14      	ldr	r5, [sp, #80]	; 0x50
9001a1e4:	fb05 1202 	mla	r2, r5, r2, r1
9001a1e8:	1412      	asrs	r2, r2, #16
9001a1ea:	d402      	bmi.n	9001a1f2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001a1ec:	42b2      	cmp	r2, r6
9001a1ee:	f2c0 80c8 	blt.w	9001a382 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
9001a1f2:	2700      	movs	r7, #0
9001a1f4:	19da      	adds	r2, r3, r7
9001a1f6:	2a00      	cmp	r2, #0
9001a1f8:	dc3e      	bgt.n	9001a278 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
9001a1fa:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001a1fe:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001a202:	f1bb 0f00 	cmp.w	fp, #0
9001a206:	f340 8132 	ble.w	9001a46e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
9001a20a:	ee30 0a04 	vadd.f32	s0, s0, s8
9001a20e:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001a210:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001a214:	f1bb 0b01 	subs.w	fp, fp, #1
9001a218:	eeb0 6a62 	vmov.f32	s12, s5
9001a21c:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001a220:	ee31 1a05 	vadd.f32	s2, s2, s10
9001a224:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001a228:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
9001a22c:	eeb0 6a43 	vmov.f32	s12, s6
9001a230:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001a234:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
9001a238:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001a23c:	ee61 7a27 	vmul.f32	s15, s2, s15
9001a240:	ee77 2a62 	vsub.f32	s5, s14, s5
9001a244:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001a248:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001a24c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001a250:	ee12 2a90 	vmov	r2, s5
9001a254:	eef0 2a47 	vmov.f32	s5, s14
9001a258:	fb92 f3f3 	sdiv	r3, r2, r3
9001a25c:	ee13 2a10 	vmov	r2, s6
9001a260:	9313      	str	r3, [sp, #76]	; 0x4c
9001a262:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001a264:	eeb0 3a67 	vmov.f32	s6, s15
9001a268:	fb92 f3f3 	sdiv	r3, r2, r3
9001a26c:	9a03      	ldr	r2, [sp, #12]
9001a26e:	9314      	str	r3, [sp, #80]	; 0x50
9001a270:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001a272:	bf08      	it	eq
9001a274:	4613      	moveq	r3, r2
9001a276:	e789      	b.n	9001a18c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9001a278:	1405      	asrs	r5, r0, #16
9001a27a:	d436      	bmi.n	9001a2ea <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001a27c:	f8d9 2008 	ldr.w	r2, [r9, #8]
9001a280:	42aa      	cmp	r2, r5
9001a282:	dd32      	ble.n	9001a2ea <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001a284:	140e      	asrs	r6, r1, #16
9001a286:	d430      	bmi.n	9001a2ea <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001a288:	f8d9 200c 	ldr.w	r2, [r9, #12]
9001a28c:	42b2      	cmp	r2, r6
9001a28e:	dd2c      	ble.n	9001a2ea <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001a290:	9a00      	ldr	r2, [sp, #0]
9001a292:	fb06 5502 	mla	r5, r6, r2, r5
9001a296:	9e01      	ldr	r6, [sp, #4]
9001a298:	086a      	lsrs	r2, r5, #1
9001a29a:	5cb2      	ldrb	r2, [r6, r2]
9001a29c:	07ee      	lsls	r6, r5, #31
9001a29e:	bf54      	ite	pl
9001a2a0:	f002 020f 	andpl.w	r2, r2, #15
9001a2a4:	1112      	asrmi	r2, r2, #4
9001a2a6:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001a2aa:	b2d2      	uxtb	r2, r2
9001a2ac:	b1ea      	cbz	r2, 9001a2ea <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001a2ae:	9d04      	ldr	r5, [sp, #16]
9001a2b0:	436a      	muls	r2, r5
9001a2b2:	1c55      	adds	r5, r2, #1
9001a2b4:	eb05 2222 	add.w	r2, r5, r2, asr #8
9001a2b8:	4d6e      	ldr	r5, [pc, #440]	; (9001a474 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
9001a2ba:	1212      	asrs	r2, r2, #8
9001a2bc:	682d      	ldr	r5, [r5, #0]
9001a2be:	2aff      	cmp	r2, #255	; 0xff
9001a2c0:	ea4f 2615 	mov.w	r6, r5, lsr #8
9001a2c4:	9605      	str	r6, [sp, #20]
9001a2c6:	d116      	bne.n	9001a2f6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
9001a2c8:	f06f 0201 	mvn.w	r2, #1
9001a2cc:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
9001a2d0:	fb02 fc07 	mul.w	ip, r2, r7
9001a2d4:	096a      	lsrs	r2, r5, #5
9001a2d6:	f026 0607 	bic.w	r6, r6, #7
9001a2da:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001a2de:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001a2e2:	4316      	orrs	r6, r2
9001a2e4:	432e      	orrs	r6, r5
9001a2e6:	f824 600c 	strh.w	r6, [r4, ip]
9001a2ea:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001a2ec:	3f01      	subs	r7, #1
9001a2ee:	4410      	add	r0, r2
9001a2f0:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001a2f2:	4411      	add	r1, r2
9001a2f4:	e77e      	b.n	9001a1f4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
9001a2f6:	f06f 0601 	mvn.w	r6, #1
9001a2fa:	fa1f fa82 	uxth.w	sl, r2
9001a2fe:	f3c5 4c07 	ubfx	ip, r5, #16, #8
9001a302:	43d2      	mvns	r2, r2
9001a304:	437e      	muls	r6, r7
9001a306:	b2ed      	uxtb	r5, r5
9001a308:	fb1c fc0a 	smulbb	ip, ip, sl
9001a30c:	b2d2      	uxtb	r2, r2
9001a30e:	f834 8006 	ldrh.w	r8, [r4, r6]
9001a312:	fb15 f50a 	smulbb	r5, r5, sl
9001a316:	9602      	str	r6, [sp, #8]
9001a318:	ea4f 2e28 	mov.w	lr, r8, asr #8
9001a31c:	f89d 6014 	ldrb.w	r6, [sp, #20]
9001a320:	fb16 f60a 	smulbb	r6, r6, sl
9001a324:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
9001a328:	fb0e ce02 	mla	lr, lr, r2, ip
9001a32c:	ea4f 0ce8 	mov.w	ip, r8, asr #3
9001a330:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001a334:	fa1f fe8e 	uxth.w	lr, lr
9001a338:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
9001a33c:	fa5f f888 	uxtb.w	r8, r8
9001a340:	fb0c 6c02 	mla	ip, ip, r2, r6
9001a344:	fb08 5502 	mla	r5, r8, r2, r5
9001a348:	f10e 0201 	add.w	r2, lr, #1
9001a34c:	fa1f fc8c 	uxth.w	ip, ip
9001a350:	b2ad      	uxth	r5, r5
9001a352:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
9001a356:	9a02      	ldr	r2, [sp, #8]
9001a358:	1c6e      	adds	r6, r5, #1
9001a35a:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
9001a35e:	eb06 2615 	add.w	r6, r6, r5, lsr #8
9001a362:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001a366:	ea46 0e0e 	orr.w	lr, r6, lr
9001a36a:	f10c 0601 	add.w	r6, ip, #1
9001a36e:	eb06 261c 	add.w	r6, r6, ip, lsr #8
9001a372:	0976      	lsrs	r6, r6, #5
9001a374:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
9001a378:	ea4e 0e06 	orr.w	lr, lr, r6
9001a37c:	f824 e002 	strh.w	lr, [r4, r2]
9001a380:	e7b3      	b.n	9001a2ea <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001a382:	f04f 0800 	mov.w	r8, #0
9001a386:	eba3 0208 	sub.w	r2, r3, r8
9001a38a:	2a00      	cmp	r2, #0
9001a38c:	f77f af35 	ble.w	9001a1fa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
9001a390:	1402      	asrs	r2, r0, #16
9001a392:	9e00      	ldr	r6, [sp, #0]
9001a394:	140d      	asrs	r5, r1, #16
9001a396:	fb06 2505 	mla	r5, r6, r5, r2
9001a39a:	9e01      	ldr	r6, [sp, #4]
9001a39c:	086a      	lsrs	r2, r5, #1
9001a39e:	07ed      	lsls	r5, r5, #31
9001a3a0:	5cb2      	ldrb	r2, [r6, r2]
9001a3a2:	bf54      	ite	pl
9001a3a4:	f002 020f 	andpl.w	r2, r2, #15
9001a3a8:	1112      	asrmi	r2, r2, #4
9001a3aa:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001a3ae:	b2d2      	uxtb	r2, r2
9001a3b0:	b1c2      	cbz	r2, 9001a3e4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001a3b2:	9d04      	ldr	r5, [sp, #16]
9001a3b4:	436a      	muls	r2, r5
9001a3b6:	1c55      	adds	r5, r2, #1
9001a3b8:	eb05 2222 	add.w	r2, r5, r2, asr #8
9001a3bc:	4d2d      	ldr	r5, [pc, #180]	; (9001a474 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
9001a3be:	1212      	asrs	r2, r2, #8
9001a3c0:	682e      	ldr	r6, [r5, #0]
9001a3c2:	2aff      	cmp	r2, #255	; 0xff
9001a3c4:	ea4f 2516 	mov.w	r5, r6, lsr #8
9001a3c8:	d113      	bne.n	9001a3f2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
9001a3ca:	0972      	lsrs	r2, r6, #5
9001a3cc:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
9001a3d0:	f3c6 06c4 	ubfx	r6, r6, #3, #5
9001a3d4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001a3d8:	f025 0507 	bic.w	r5, r5, #7
9001a3dc:	4315      	orrs	r5, r2
9001a3de:	4335      	orrs	r5, r6
9001a3e0:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
9001a3e4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001a3e6:	f108 0801 	add.w	r8, r8, #1
9001a3ea:	4410      	add	r0, r2
9001a3ec:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001a3ee:	4411      	add	r1, r2
9001a3f0:	e7c9      	b.n	9001a386 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
9001a3f2:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
9001a3f6:	fa1f fa82 	uxth.w	sl, r2
9001a3fa:	f3c6 4707 	ubfx	r7, r6, #16, #8
9001a3fe:	43d2      	mvns	r2, r2
9001a400:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001a404:	fb17 f70a 	smulbb	r7, r7, sl
9001a408:	b2d2      	uxtb	r2, r2
9001a40a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001a40e:	b2f6      	uxtb	r6, r6
9001a410:	b2ed      	uxtb	r5, r5
9001a412:	fb0c 7c02 	mla	ip, ip, r2, r7
9001a416:	ea4f 07ee 	mov.w	r7, lr, asr #3
9001a41a:	fb16 f60a 	smulbb	r6, r6, sl
9001a41e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001a422:	fa1f fc8c 	uxth.w	ip, ip
9001a426:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001a42a:	fb15 f50a 	smulbb	r5, r5, sl
9001a42e:	fa5f fe8e 	uxtb.w	lr, lr
9001a432:	fb0e 6602 	mla	r6, lr, r2, r6
9001a436:	fb07 5702 	mla	r7, r7, r2, r5
9001a43a:	f10c 0201 	add.w	r2, ip, #1
9001a43e:	b2b6      	uxth	r6, r6
9001a440:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
9001a444:	1c75      	adds	r5, r6, #1
9001a446:	b2bf      	uxth	r7, r7
9001a448:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001a44c:	eb05 2516 	add.w	r5, r5, r6, lsr #8
9001a450:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001a454:	ea45 0c0c 	orr.w	ip, r5, ip
9001a458:	1c7d      	adds	r5, r7, #1
9001a45a:	eb05 2517 	add.w	r5, r5, r7, lsr #8
9001a45e:	096d      	lsrs	r5, r5, #5
9001a460:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001a464:	ea4c 0c05 	orr.w	ip, ip, r5
9001a468:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
9001a46c:	e7ba      	b.n	9001a3e4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001a46e:	b007      	add	sp, #28
9001a470:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001a474:	2402358c 	.word	0x2402358c

9001a478 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001a478:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001a47c:	b087      	sub	sp, #28
9001a47e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001a482:	f8df 8308 	ldr.w	r8, [pc, #776]	; 9001a78c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
9001a486:	9815      	ldr	r0, [sp, #84]	; 0x54
9001a488:	9101      	str	r1, [sp, #4]
9001a48a:	9205      	str	r2, [sp, #20]
9001a48c:	6841      	ldr	r1, [r0, #4]
9001a48e:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
9001a492:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
9001a496:	fb01 2404 	mla	r4, r1, r4, r2
9001a49a:	6802      	ldr	r2, [r0, #0]
9001a49c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001a4a0:	f8db 2008 	ldr.w	r2, [fp, #8]
9001a4a4:	3201      	adds	r2, #1
9001a4a6:	f022 0201 	bic.w	r2, r2, #1
9001a4aa:	9202      	str	r2, [sp, #8]
9001a4ac:	f8db 2000 	ldr.w	r2, [fp]
9001a4b0:	9203      	str	r2, [sp, #12]
9001a4b2:	9a01      	ldr	r2, [sp, #4]
9001a4b4:	2a00      	cmp	r2, #0
9001a4b6:	dc03      	bgt.n	9001a4c0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
9001a4b8:	9a05      	ldr	r2, [sp, #20]
9001a4ba:	2a00      	cmp	r2, #0
9001a4bc:	f340 8162 	ble.w	9001a784 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
9001a4c0:	9a11      	ldr	r2, [sp, #68]	; 0x44
9001a4c2:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
9001a4c6:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
9001a4ca:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001a4cc:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
9001a4d0:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001a4d4:	2b00      	cmp	r3, #0
9001a4d6:	dd0e      	ble.n	9001a4f6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001a4d8:	1402      	asrs	r2, r0, #16
9001a4da:	d405      	bmi.n	9001a4e8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001a4dc:	42ba      	cmp	r2, r7
9001a4de:	da03      	bge.n	9001a4e8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001a4e0:	140a      	asrs	r2, r1, #16
9001a4e2:	d401      	bmi.n	9001a4e8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001a4e4:	42b2      	cmp	r2, r6
9001a4e6:	db07      	blt.n	9001a4f8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
9001a4e8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001a4ea:	3b01      	subs	r3, #1
9001a4ec:	3402      	adds	r4, #2
9001a4ee:	4410      	add	r0, r2
9001a4f0:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001a4f2:	4411      	add	r1, r2
9001a4f4:	e7ee      	b.n	9001a4d4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
9001a4f6:	d017      	beq.n	9001a528 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
9001a4f8:	1e5a      	subs	r2, r3, #1
9001a4fa:	9d13      	ldr	r5, [sp, #76]	; 0x4c
9001a4fc:	fb05 0502 	mla	r5, r5, r2, r0
9001a500:	142d      	asrs	r5, r5, #16
9001a502:	d409      	bmi.n	9001a518 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001a504:	42bd      	cmp	r5, r7
9001a506:	da07      	bge.n	9001a518 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001a508:	9d14      	ldr	r5, [sp, #80]	; 0x50
9001a50a:	fb05 1202 	mla	r2, r5, r2, r1
9001a50e:	1412      	asrs	r2, r2, #16
9001a510:	d402      	bmi.n	9001a518 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001a512:	42b2      	cmp	r2, r6
9001a514:	f2c0 80c3 	blt.w	9001a69e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
9001a518:	2500      	movs	r5, #0
9001a51a:	195a      	adds	r2, r3, r5
9001a51c:	2a00      	cmp	r2, #0
9001a51e:	dc3f      	bgt.n	9001a5a0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
9001a520:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001a524:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001a528:	9b01      	ldr	r3, [sp, #4]
9001a52a:	2b00      	cmp	r3, #0
9001a52c:	f340 812a 	ble.w	9001a784 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
9001a530:	ee30 0a04 	vadd.f32	s0, s0, s8
9001a534:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001a536:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001a53a:	eeb0 6a62 	vmov.f32	s12, s5
9001a53e:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001a542:	ee31 1a05 	vadd.f32	s2, s2, s10
9001a546:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001a54a:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
9001a54e:	eeb0 6a43 	vmov.f32	s12, s6
9001a552:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001a556:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
9001a55a:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001a55e:	ee61 7a27 	vmul.f32	s15, s2, s15
9001a562:	ee77 2a62 	vsub.f32	s5, s14, s5
9001a566:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001a56a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001a56e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001a572:	ee12 2a90 	vmov	r2, s5
9001a576:	eef0 2a47 	vmov.f32	s5, s14
9001a57a:	fb92 f3f3 	sdiv	r3, r2, r3
9001a57e:	ee13 2a10 	vmov	r2, s6
9001a582:	9313      	str	r3, [sp, #76]	; 0x4c
9001a584:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001a586:	eeb0 3a67 	vmov.f32	s6, s15
9001a58a:	fb92 f3f3 	sdiv	r3, r2, r3
9001a58e:	9314      	str	r3, [sp, #80]	; 0x50
9001a590:	9b01      	ldr	r3, [sp, #4]
9001a592:	9a05      	ldr	r2, [sp, #20]
9001a594:	3b01      	subs	r3, #1
9001a596:	9301      	str	r3, [sp, #4]
9001a598:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001a59a:	bf08      	it	eq
9001a59c:	4613      	moveq	r3, r2
9001a59e:	e788      	b.n	9001a4b2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
9001a5a0:	1406      	asrs	r6, r0, #16
9001a5a2:	d42c      	bmi.n	9001a5fe <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001a5a4:	f8db 2008 	ldr.w	r2, [fp, #8]
9001a5a8:	42b2      	cmp	r2, r6
9001a5aa:	dd28      	ble.n	9001a5fe <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001a5ac:	140f      	asrs	r7, r1, #16
9001a5ae:	d426      	bmi.n	9001a5fe <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001a5b0:	f8db 200c 	ldr.w	r2, [fp, #12]
9001a5b4:	42ba      	cmp	r2, r7
9001a5b6:	dd22      	ble.n	9001a5fe <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001a5b8:	9a02      	ldr	r2, [sp, #8]
9001a5ba:	fb07 6602 	mla	r6, r7, r2, r6
9001a5be:	9f03      	ldr	r7, [sp, #12]
9001a5c0:	0872      	lsrs	r2, r6, #1
9001a5c2:	07f6      	lsls	r6, r6, #31
9001a5c4:	5cba      	ldrb	r2, [r7, r2]
9001a5c6:	bf54      	ite	pl
9001a5c8:	f002 020f 	andpl.w	r2, r2, #15
9001a5cc:	1112      	asrmi	r2, r2, #4
9001a5ce:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001a5d2:	b2d2      	uxtb	r2, r2
9001a5d4:	2aff      	cmp	r2, #255	; 0xff
9001a5d6:	d118      	bne.n	9001a60a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
9001a5d8:	f06f 0601 	mvn.w	r6, #1
9001a5dc:	f8d8 2000 	ldr.w	r2, [r8]
9001a5e0:	fb06 f705 	mul.w	r7, r6, r5
9001a5e4:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
9001a5e8:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
9001a5ec:	0956      	lsrs	r6, r2, #5
9001a5ee:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9001a5f2:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
9001a5f6:	ea4c 0606 	orr.w	r6, ip, r6
9001a5fa:	4316      	orrs	r6, r2
9001a5fc:	53e6      	strh	r6, [r4, r7]
9001a5fe:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001a600:	3d01      	subs	r5, #1
9001a602:	4410      	add	r0, r2
9001a604:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001a606:	4411      	add	r1, r2
9001a608:	e787      	b.n	9001a51a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001a60a:	2a00      	cmp	r2, #0
9001a60c:	d0f7      	beq.n	9001a5fe <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001a60e:	f06f 0601 	mvn.w	r6, #1
9001a612:	f8d8 c000 	ldr.w	ip, [r8]
9001a616:	fa1f f982 	uxth.w	r9, r2
9001a61a:	43d2      	mvns	r2, r2
9001a61c:	436e      	muls	r6, r5
9001a61e:	f3cc 2a07 	ubfx	sl, ip, #8, #8
9001a622:	b2d2      	uxtb	r2, r2
9001a624:	f834 e006 	ldrh.w	lr, [r4, r6]
9001a628:	fb1a fa09 	smulbb	sl, sl, r9
9001a62c:	9604      	str	r6, [sp, #16]
9001a62e:	f3cc 4607 	ubfx	r6, ip, #16, #8
9001a632:	ea4f 272e 	mov.w	r7, lr, asr #8
9001a636:	fb16 f609 	smulbb	r6, r6, r9
9001a63a:	fa5f fc8c 	uxtb.w	ip, ip
9001a63e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001a642:	fb1c fc09 	smulbb	ip, ip, r9
9001a646:	fb07 6702 	mla	r7, r7, r2, r6
9001a64a:	ea4f 06ee 	mov.w	r6, lr, asr #3
9001a64e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001a652:	b2bf      	uxth	r7, r7
9001a654:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001a658:	fa5f fe8e 	uxtb.w	lr, lr
9001a65c:	fb06 a602 	mla	r6, r6, r2, sl
9001a660:	fb0e cc02 	mla	ip, lr, r2, ip
9001a664:	1c7a      	adds	r2, r7, #1
9001a666:	b2b6      	uxth	r6, r6
9001a668:	fa1f fc8c 	uxth.w	ip, ip
9001a66c:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001a670:	9a04      	ldr	r2, [sp, #16]
9001a672:	f10c 0a01 	add.w	sl, ip, #1
9001a676:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
9001a67a:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
9001a67e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001a682:	ea4a 0707 	orr.w	r7, sl, r7
9001a686:	f106 0a01 	add.w	sl, r6, #1
9001a68a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001a68e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001a692:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001a696:	ea47 070a 	orr.w	r7, r7, sl
9001a69a:	52a7      	strh	r7, [r4, r2]
9001a69c:	e7af      	b.n	9001a5fe <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001a69e:	f04f 0e00 	mov.w	lr, #0
9001a6a2:	eba3 020e 	sub.w	r2, r3, lr
9001a6a6:	2a00      	cmp	r2, #0
9001a6a8:	f77f af3a 	ble.w	9001a520 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
9001a6ac:	1402      	asrs	r2, r0, #16
9001a6ae:	9e02      	ldr	r6, [sp, #8]
9001a6b0:	140d      	asrs	r5, r1, #16
9001a6b2:	fb06 2505 	mla	r5, r6, r5, r2
9001a6b6:	9e03      	ldr	r6, [sp, #12]
9001a6b8:	086a      	lsrs	r2, r5, #1
9001a6ba:	07ed      	lsls	r5, r5, #31
9001a6bc:	5cb2      	ldrb	r2, [r6, r2]
9001a6be:	bf54      	ite	pl
9001a6c0:	f002 020f 	andpl.w	r2, r2, #15
9001a6c4:	1112      	asrmi	r2, r2, #4
9001a6c6:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001a6ca:	b2d2      	uxtb	r2, r2
9001a6cc:	2aff      	cmp	r2, #255	; 0xff
9001a6ce:	d115      	bne.n	9001a6fc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
9001a6d0:	f8d8 5000 	ldr.w	r5, [r8]
9001a6d4:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
9001a6d8:	ea02 2615 	and.w	r6, r2, r5, lsr #8
9001a6dc:	096a      	lsrs	r2, r5, #5
9001a6de:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001a6e2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001a6e6:	4332      	orrs	r2, r6
9001a6e8:	432a      	orrs	r2, r5
9001a6ea:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
9001a6ee:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001a6f0:	f10e 0e01 	add.w	lr, lr, #1
9001a6f4:	4410      	add	r0, r2
9001a6f6:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001a6f8:	4411      	add	r1, r2
9001a6fa:	e7d2      	b.n	9001a6a2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
9001a6fc:	2a00      	cmp	r2, #0
9001a6fe:	d0f6      	beq.n	9001a6ee <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
9001a700:	f8d8 7000 	ldr.w	r7, [r8]
9001a704:	fa1f f982 	uxth.w	r9, r2
9001a708:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
9001a70c:	43d2      	mvns	r2, r2
9001a70e:	f3c7 4507 	ubfx	r5, r7, #16, #8
9001a712:	f3c7 2a07 	ubfx	sl, r7, #8, #8
9001a716:	ea4f 262c 	mov.w	r6, ip, asr #8
9001a71a:	fb15 f509 	smulbb	r5, r5, r9
9001a71e:	b2d2      	uxtb	r2, r2
9001a720:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001a724:	b2ff      	uxtb	r7, r7
9001a726:	fb1a fa09 	smulbb	sl, sl, r9
9001a72a:	fb06 5602 	mla	r6, r6, r2, r5
9001a72e:	ea4f 05ec 	mov.w	r5, ip, asr #3
9001a732:	fb17 f709 	smulbb	r7, r7, r9
9001a736:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001a73a:	b2b6      	uxth	r6, r6
9001a73c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
9001a740:	fa5f fc8c 	uxtb.w	ip, ip
9001a744:	fb05 a502 	mla	r5, r5, r2, sl
9001a748:	fb0c 7702 	mla	r7, ip, r2, r7
9001a74c:	1c72      	adds	r2, r6, #1
9001a74e:	b2ad      	uxth	r5, r5
9001a750:	b2bf      	uxth	r7, r7
9001a752:	eb02 2616 	add.w	r6, r2, r6, lsr #8
9001a756:	f107 0a01 	add.w	sl, r7, #1
9001a75a:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
9001a75e:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001a762:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001a766:	ea4a 0606 	orr.w	r6, sl, r6
9001a76a:	f105 0a01 	add.w	sl, r5, #1
9001a76e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001a772:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001a776:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001a77a:	ea46 060a 	orr.w	r6, r6, sl
9001a77e:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
9001a782:	e7b4      	b.n	9001a6ee <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
9001a784:	b007      	add	sp, #28
9001a786:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001a78a:	bf00      	nop
9001a78c:	2402358c 	.word	0x2402358c

9001a790 <_ZN8touchgfx8LCD16bppD1Ev>:
9001a790:	4770      	bx	lr

9001a792 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
9001a792:	4770      	bx	lr

9001a794 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
9001a794:	4770      	bx	lr

9001a796 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
9001a796:	4770      	bx	lr

9001a798 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
9001a798:	4770      	bx	lr

9001a79a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
9001a79a:	4770      	bx	lr

9001a79c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
9001a79c:	4770      	bx	lr

9001a79e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
9001a79e:	4770      	bx	lr

9001a7a0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
9001a7a0:	4770      	bx	lr

9001a7a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
9001a7a2:	4770      	bx	lr

9001a7a4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
9001a7a4:	4770      	bx	lr

9001a7a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
9001a7a6:	4770      	bx	lr

9001a7a8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
9001a7a8:	4770      	bx	lr

9001a7aa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
9001a7aa:	4770      	bx	lr

9001a7ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
9001a7ac:	4770      	bx	lr

9001a7ae <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
9001a7ae:	4770      	bx	lr

9001a7b0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
9001a7b0:	4770      	bx	lr

9001a7b2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
9001a7b2:	4770      	bx	lr

9001a7b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
9001a7b4:	4770      	bx	lr

9001a7b6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
9001a7b6:	4770      	bx	lr

9001a7b8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
9001a7b8:	4770      	bx	lr

9001a7ba <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
9001a7ba:	4770      	bx	lr

9001a7bc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
9001a7bc:	4770      	bx	lr

9001a7be <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
9001a7be:	4770      	bx	lr

9001a7c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
9001a7c0:	4770      	bx	lr

9001a7c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
9001a7c2:	4770      	bx	lr

9001a7c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
9001a7c4:	4770      	bx	lr

9001a7c6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
9001a7c6:	4770      	bx	lr

9001a7c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
9001a7c8:	4770      	bx	lr

9001a7ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
9001a7ca:	4770      	bx	lr

9001a7cc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
9001a7cc:	4770      	bx	lr

9001a7ce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
9001a7ce:	4770      	bx	lr

9001a7d0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
9001a7d0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001a7d4:	b088      	sub	sp, #32
9001a7d6:	4606      	mov	r6, r0
9001a7d8:	4688      	mov	r8, r1
9001a7da:	4691      	mov	r9, r2
9001a7dc:	ac08      	add	r4, sp, #32
9001a7de:	f824 3d0c 	strh.w	r3, [r4, #-12]!
9001a7e2:	4620      	mov	r0, r4
9001a7e4:	f7fd fc64 	bl	900180b0 <_ZNK8touchgfx6Bitmap7getDataEv>
9001a7e8:	6833      	ldr	r3, [r6, #0]
9001a7ea:	4605      	mov	r5, r0
9001a7ec:	4620      	mov	r0, r4
9001a7ee:	699f      	ldr	r7, [r3, #24]
9001a7f0:	f7fd fb72 	bl	90017ed8 <_ZNK8touchgfx6Bitmap8getWidthEv>
9001a7f4:	4682      	mov	sl, r0
9001a7f6:	4620      	mov	r0, r4
9001a7f8:	f7fd fba2 	bl	90017f40 <_ZNK8touchgfx6Bitmap9getHeightEv>
9001a7fc:	9500      	str	r5, [sp, #0]
9001a7fe:	464b      	mov	r3, r9
9001a800:	4642      	mov	r2, r8
9001a802:	4631      	mov	r1, r6
9001a804:	e9cd a001 	strd	sl, r0, [sp, #4]
9001a808:	a806      	add	r0, sp, #24
9001a80a:	47b8      	blx	r7
9001a80c:	4628      	mov	r0, r5
9001a80e:	b008      	add	sp, #32
9001a810:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

9001a814 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
9001a814:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
9001a818:	2300      	movs	r3, #0
9001a81a:	9300      	str	r3, [sp, #0]
9001a81c:	4b3d      	ldr	r3, [pc, #244]	; (9001a914 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
9001a81e:	781b      	ldrb	r3, [r3, #0]
9001a820:	2b00      	cmp	r3, #0
9001a822:	d137      	bne.n	9001a894 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
9001a824:	4a3c      	ldr	r2, [pc, #240]	; (9001a918 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
9001a826:	f9b2 2000 	ldrsh.w	r2, [r2]
9001a82a:	f8ad 2004 	strh.w	r2, [sp, #4]
9001a82e:	2b00      	cmp	r3, #0
9001a830:	d132      	bne.n	9001a898 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
9001a832:	4b3a      	ldr	r3, [pc, #232]	; (9001a91c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
9001a834:	f9b3 3000 	ldrsh.w	r3, [r3]
9001a838:	ac02      	add	r4, sp, #8
9001a83a:	6808      	ldr	r0, [r1, #0]
9001a83c:	f8ad 3006 	strh.w	r3, [sp, #6]
9001a840:	ab02      	add	r3, sp, #8
9001a842:	6849      	ldr	r1, [r1, #4]
9001a844:	4d36      	ldr	r5, [pc, #216]	; (9001a920 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
9001a846:	c303      	stmia	r3!, {r0, r1}
9001a848:	4669      	mov	r1, sp
9001a84a:	4620      	mov	r0, r4
9001a84c:	f7fa f892 	bl	90014974 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001a850:	4668      	mov	r0, sp
9001a852:	f7fa f84b 	bl	900148ec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001a856:	f8bd 3008 	ldrh.w	r3, [sp, #8]
9001a85a:	f8bd 2000 	ldrh.w	r2, [sp]
9001a85e:	462f      	mov	r7, r5
9001a860:	6828      	ldr	r0, [r5, #0]
9001a862:	4413      	add	r3, r2
9001a864:	f8bd 2002 	ldrh.w	r2, [sp, #2]
9001a868:	f8ad 3008 	strh.w	r3, [sp, #8]
9001a86c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
9001a870:	4413      	add	r3, r2
9001a872:	f8ad 300a 	strh.w	r3, [sp, #10]
9001a876:	6803      	ldr	r3, [r0, #0]
9001a878:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001a87a:	4798      	blx	r3
9001a87c:	f010 0f01 	tst.w	r0, #1
9001a880:	d00c      	beq.n	9001a89c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
9001a882:	6828      	ldr	r0, [r5, #0]
9001a884:	6803      	ldr	r3, [r0, #0]
9001a886:	e894 0006 	ldmia.w	r4, {r1, r2}
9001a88a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
9001a88c:	4798      	blx	r3
9001a88e:	b004      	add	sp, #16
9001a890:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001a894:	4a21      	ldr	r2, [pc, #132]	; (9001a91c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
9001a896:	e7c6      	b.n	9001a826 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
9001a898:	4b1f      	ldr	r3, [pc, #124]	; (9001a918 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
9001a89a:	e7cb      	b.n	9001a834 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
9001a89c:	6838      	ldr	r0, [r7, #0]
9001a89e:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
9001a8a2:	6803      	ldr	r3, [r0, #0]
9001a8a4:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
9001a8a8:	ea4f 0848 	mov.w	r8, r8, lsl #1
9001a8ac:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9001a8ae:	4798      	blx	r3
9001a8b0:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
9001a8b4:	f8bd 200a 	ldrh.w	r2, [sp, #10]
9001a8b8:	f8bd 6004 	ldrh.w	r6, [sp, #4]
9001a8bc:	fb16 3602 	smlabb	r6, r6, r2, r3
9001a8c0:	eb00 0646 	add.w	r6, r0, r6, lsl #1
9001a8c4:	6838      	ldr	r0, [r7, #0]
9001a8c6:	6803      	ldr	r3, [r0, #0]
9001a8c8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001a8ca:	4798      	blx	r3
9001a8cc:	4a12      	ldr	r2, [pc, #72]	; (9001a918 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
9001a8ce:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
9001a8d2:	8813      	ldrh	r3, [r2, #0]
9001a8d4:	4691      	mov	r9, r2
9001a8d6:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
9001a8da:	435d      	muls	r5, r3
9001a8dc:	fb03 1404 	mla	r4, r3, r4, r1
9001a8e0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9001a8e4:	eb04 0545 	add.w	r5, r4, r5, lsl #1
9001a8e8:	6838      	ldr	r0, [r7, #0]
9001a8ea:	42ac      	cmp	r4, r5
9001a8ec:	6803      	ldr	r3, [r0, #0]
9001a8ee:	d20e      	bcs.n	9001a90e <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
9001a8f0:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
9001a8f4:	4632      	mov	r2, r6
9001a8f6:	4643      	mov	r3, r8
9001a8f8:	4621      	mov	r1, r4
9001a8fa:	47d0      	blx	sl
9001a8fc:	f8b9 3000 	ldrh.w	r3, [r9]
9001a900:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001a904:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
9001a908:	eb06 0643 	add.w	r6, r6, r3, lsl #1
9001a90c:	e7ec      	b.n	9001a8e8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
9001a90e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001a910:	4798      	blx	r3
9001a912:	e7bc      	b.n	9001a88e <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
9001a914:	24023574 	.word	0x24023574
9001a918:	24023576 	.word	0x24023576
9001a91c:	24023578 	.word	0x24023578
9001a920:	2402357c 	.word	0x2402357c

9001a924 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
9001a924:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001a928:	b08b      	sub	sp, #44	; 0x2c
9001a92a:	460f      	mov	r7, r1
9001a92c:	4616      	mov	r6, r2
9001a92e:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
9001a932:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
9001a936:	f1bb 0f00 	cmp.w	fp, #0
9001a93a:	d04a      	beq.n	9001a9d2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
9001a93c:	6810      	ldr	r0, [r2, #0]
9001a93e:	ad06      	add	r5, sp, #24
9001a940:	6851      	ldr	r1, [r2, #4]
9001a942:	c503      	stmia	r5!, {r0, r1}
9001a944:	6818      	ldr	r0, [r3, #0]
9001a946:	ad08      	add	r5, sp, #32
9001a948:	6859      	ldr	r1, [r3, #4]
9001a94a:	c503      	stmia	r5!, {r0, r1}
9001a94c:	a806      	add	r0, sp, #24
9001a94e:	f7f9 ffcd 	bl	900148ec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001a952:	4631      	mov	r1, r6
9001a954:	a808      	add	r0, sp, #32
9001a956:	f7fa f80d 	bl	90014974 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001a95a:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
9001a95e:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
9001a962:	f8bd 601c 	ldrh.w	r6, [sp, #28]
9001a966:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
9001a96a:	fb16 2103 	smlabb	r1, r6, r3, r2
9001a96e:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
9001a972:	eb07 0641 	add.w	r6, r7, r1, lsl #1
9001a976:	f8bd 1018 	ldrh.w	r1, [sp, #24]
9001a97a:	4f5f      	ldr	r7, [pc, #380]	; (9001aaf8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
9001a97c:	440a      	add	r2, r1
9001a97e:	6838      	ldr	r0, [r7, #0]
9001a980:	46b9      	mov	r9, r7
9001a982:	f8ad 2020 	strh.w	r2, [sp, #32]
9001a986:	f8bd 201a 	ldrh.w	r2, [sp, #26]
9001a98a:	4413      	add	r3, r2
9001a98c:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
9001a990:	6803      	ldr	r3, [r0, #0]
9001a992:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001a994:	4798      	blx	r3
9001a996:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
9001a99a:	d11d      	bne.n	9001a9d8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
9001a99c:	b9fc      	cbnz	r4, 9001a9de <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
9001a99e:	f010 0f01 	tst.w	r0, #1
9001a9a2:	d01c      	beq.n	9001a9de <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
9001a9a4:	f8d9 0000 	ldr.w	r0, [r9]
9001a9a8:	2700      	movs	r7, #0
9001a9aa:	b2ad      	uxth	r5, r5
9001a9ac:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
9001a9b0:	6801      	ldr	r1, [r0, #0]
9001a9b2:	f8bd 2020 	ldrh.w	r2, [sp, #32]
9001a9b6:	f8cd b00c 	str.w	fp, [sp, #12]
9001a9ba:	9501      	str	r5, [sp, #4]
9001a9bc:	e9cd 4704 	strd	r4, r7, [sp, #16]
9001a9c0:	f8bd 401c 	ldrh.w	r4, [sp, #28]
9001a9c4:	9402      	str	r4, [sp, #8]
9001a9c6:	fa1f f488 	uxth.w	r4, r8
9001a9ca:	9400      	str	r4, [sp, #0]
9001a9cc:	6c4c      	ldr	r4, [r1, #68]	; 0x44
9001a9ce:	4631      	mov	r1, r6
9001a9d0:	47a0      	blx	r4
9001a9d2:	b00b      	add	sp, #44	; 0x2c
9001a9d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001a9d8:	f010 0f04 	tst.w	r0, #4
9001a9dc:	e7e1      	b.n	9001a9a2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
9001a9de:	f8d9 0000 	ldr.w	r0, [r9]
9001a9e2:	ea4f 0748 	mov.w	r7, r8, lsl #1
9001a9e6:	6803      	ldr	r3, [r0, #0]
9001a9e8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001a9ea:	4798      	blx	r3
9001a9ec:	4b43      	ldr	r3, [pc, #268]	; (9001aafc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
9001a9ee:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
9001a9f2:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
9001a9f6:	881a      	ldrh	r2, [r3, #0]
9001a9f8:	469a      	mov	sl, r3
9001a9fa:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
9001a9fe:	fb05 f502 	mul.w	r5, r5, r2
9001aa02:	fb02 1404 	mla	r4, r2, r4, r1
9001aa06:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9001aa0a:	d059      	beq.n	9001aac0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
9001aa0c:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
9001aa10:	eb04 0545 	add.w	r5, r4, r5, lsl #1
9001aa14:	fa1f f28b 	uxth.w	r2, fp
9001aa18:	469e      	mov	lr, r3
9001aa1a:	fa1f f989 	uxth.w	r9, r9
9001aa1e:	42ac      	cmp	r4, r5
9001aa20:	d264      	bcs.n	9001aaec <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
9001aa22:	eb04 0a07 	add.w	sl, r4, r7
9001aa26:	4554      	cmp	r4, sl
9001aa28:	d23d      	bcs.n	9001aaa6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
9001aa2a:	8821      	ldrh	r1, [r4, #0]
9001aa2c:	f836 3b02 	ldrh.w	r3, [r6], #2
9001aa30:	1208      	asrs	r0, r1, #8
9001aa32:	ea4f 2c23 	mov.w	ip, r3, asr #8
9001aa36:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
9001aa3a:	ea4f 0be1 	mov.w	fp, r1, asr #3
9001aa3e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001aa42:	00c9      	lsls	r1, r1, #3
9001aa44:	fb10 f009 	smulbb	r0, r0, r9
9001aa48:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
9001aa4c:	b2c9      	uxtb	r1, r1
9001aa4e:	fb0c 0c02 	mla	ip, ip, r2, r0
9001aa52:	10d8      	asrs	r0, r3, #3
9001aa54:	fb1b fb09 	smulbb	fp, fp, r9
9001aa58:	00db      	lsls	r3, r3, #3
9001aa5a:	fa1f fc8c 	uxth.w	ip, ip
9001aa5e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
9001aa62:	fb11 f109 	smulbb	r1, r1, r9
9001aa66:	b2db      	uxtb	r3, r3
9001aa68:	fb00 b002 	mla	r0, r0, r2, fp
9001aa6c:	f10c 0b01 	add.w	fp, ip, #1
9001aa70:	fb03 1302 	mla	r3, r3, r2, r1
9001aa74:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
9001aa78:	b29b      	uxth	r3, r3
9001aa7a:	b280      	uxth	r0, r0
9001aa7c:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
9001aa80:	f103 0c01 	add.w	ip, r3, #1
9001aa84:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
9001aa88:	1c43      	adds	r3, r0, #1
9001aa8a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
9001aa8e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9001aa92:	0940      	lsrs	r0, r0, #5
9001aa94:	ea4c 0c0b 	orr.w	ip, ip, fp
9001aa98:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9001aa9c:	ea4c 0c00 	orr.w	ip, ip, r0
9001aaa0:	f824 cb02 	strh.w	ip, [r4], #2
9001aaa4:	e7bf      	b.n	9001aa26 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
9001aaa6:	f8be 3000 	ldrh.w	r3, [lr]
9001aaaa:	eba3 0308 	sub.w	r3, r3, r8
9001aaae:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001aab2:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
9001aab6:	eba3 0308 	sub.w	r3, r3, r8
9001aaba:	eb06 0643 	add.w	r6, r6, r3, lsl #1
9001aabe:	e7ae      	b.n	9001aa1e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
9001aac0:	eb04 0545 	add.w	r5, r4, r5, lsl #1
9001aac4:	f8d9 0000 	ldr.w	r0, [r9]
9001aac8:	42ac      	cmp	r4, r5
9001aaca:	6803      	ldr	r3, [r0, #0]
9001aacc:	d20e      	bcs.n	9001aaec <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
9001aace:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
9001aad2:	4632      	mov	r2, r6
9001aad4:	463b      	mov	r3, r7
9001aad6:	4621      	mov	r1, r4
9001aad8:	47c0      	blx	r8
9001aada:	f8ba 3000 	ldrh.w	r3, [sl]
9001aade:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001aae2:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
9001aae6:	eb06 0643 	add.w	r6, r6, r3, lsl #1
9001aaea:	e7eb      	b.n	9001aac4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
9001aaec:	4b02      	ldr	r3, [pc, #8]	; (9001aaf8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
9001aaee:	6818      	ldr	r0, [r3, #0]
9001aaf0:	6803      	ldr	r3, [r0, #0]
9001aaf2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001aaf4:	4798      	blx	r3
9001aaf6:	e76c      	b.n	9001a9d2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
9001aaf8:	2402357c 	.word	0x2402357c
9001aafc:	24023576 	.word	0x24023576

9001ab00 <_ZN8touchgfx8LCD16bppD0Ev>:
9001ab00:	b510      	push	{r4, lr}
9001ab02:	4604      	mov	r4, r0
9001ab04:	2188      	movs	r1, #136	; 0x88
9001ab06:	f00b f9f4 	bl	90025ef2 <_ZdlPvj>
9001ab0a:	4620      	mov	r0, r4
9001ab0c:	bd10      	pop	{r4, pc}

9001ab0e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
9001ab0e:	b510      	push	{r4, lr}
9001ab10:	4604      	mov	r4, r0
9001ab12:	2104      	movs	r1, #4
9001ab14:	f00b f9ed 	bl	90025ef2 <_ZdlPvj>
9001ab18:	4620      	mov	r0, r4
9001ab1a:	bd10      	pop	{r4, pc}

9001ab1c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
9001ab1c:	b510      	push	{r4, lr}
9001ab1e:	4604      	mov	r4, r0
9001ab20:	2104      	movs	r1, #4
9001ab22:	f00b f9e6 	bl	90025ef2 <_ZdlPvj>
9001ab26:	4620      	mov	r0, r4
9001ab28:	bd10      	pop	{r4, pc}

9001ab2a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
9001ab2a:	b510      	push	{r4, lr}
9001ab2c:	4604      	mov	r4, r0
9001ab2e:	f640 0144 	movw	r1, #2116	; 0x844
9001ab32:	f00b f9de 	bl	90025ef2 <_ZdlPvj>
9001ab36:	4620      	mov	r0, r4
9001ab38:	bd10      	pop	{r4, pc}

9001ab3a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
9001ab3a:	b510      	push	{r4, lr}
9001ab3c:	4604      	mov	r4, r0
9001ab3e:	2104      	movs	r1, #4
9001ab40:	f00b f9d7 	bl	90025ef2 <_ZdlPvj>
9001ab44:	4620      	mov	r0, r4
9001ab46:	bd10      	pop	{r4, pc}

9001ab48 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
9001ab48:	b510      	push	{r4, lr}
9001ab4a:	4604      	mov	r4, r0
9001ab4c:	2104      	movs	r1, #4
9001ab4e:	f00b f9d0 	bl	90025ef2 <_ZdlPvj>
9001ab52:	4620      	mov	r0, r4
9001ab54:	bd10      	pop	{r4, pc}

9001ab56 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
9001ab56:	b510      	push	{r4, lr}
9001ab58:	4604      	mov	r4, r0
9001ab5a:	2104      	movs	r1, #4
9001ab5c:	f00b f9c9 	bl	90025ef2 <_ZdlPvj>
9001ab60:	4620      	mov	r0, r4
9001ab62:	bd10      	pop	{r4, pc}

9001ab64 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
9001ab64:	b510      	push	{r4, lr}
9001ab66:	4604      	mov	r4, r0
9001ab68:	2104      	movs	r1, #4
9001ab6a:	f00b f9c2 	bl	90025ef2 <_ZdlPvj>
9001ab6e:	4620      	mov	r0, r4
9001ab70:	bd10      	pop	{r4, pc}

9001ab72 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
9001ab72:	b510      	push	{r4, lr}
9001ab74:	4604      	mov	r4, r0
9001ab76:	2104      	movs	r1, #4
9001ab78:	f00b f9bb 	bl	90025ef2 <_ZdlPvj>
9001ab7c:	4620      	mov	r0, r4
9001ab7e:	bd10      	pop	{r4, pc}

9001ab80 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
9001ab80:	b510      	push	{r4, lr}
9001ab82:	4604      	mov	r4, r0
9001ab84:	2104      	movs	r1, #4
9001ab86:	f00b f9b4 	bl	90025ef2 <_ZdlPvj>
9001ab8a:	4620      	mov	r0, r4
9001ab8c:	bd10      	pop	{r4, pc}

9001ab8e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
9001ab8e:	b510      	push	{r4, lr}
9001ab90:	4604      	mov	r4, r0
9001ab92:	2104      	movs	r1, #4
9001ab94:	f00b f9ad 	bl	90025ef2 <_ZdlPvj>
9001ab98:	4620      	mov	r0, r4
9001ab9a:	bd10      	pop	{r4, pc}

9001ab9c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
9001ab9c:	b510      	push	{r4, lr}
9001ab9e:	4604      	mov	r4, r0
9001aba0:	2104      	movs	r1, #4
9001aba2:	f00b f9a6 	bl	90025ef2 <_ZdlPvj>
9001aba6:	4620      	mov	r0, r4
9001aba8:	bd10      	pop	{r4, pc}

9001abaa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
9001abaa:	b510      	push	{r4, lr}
9001abac:	4604      	mov	r4, r0
9001abae:	2104      	movs	r1, #4
9001abb0:	f00b f99f 	bl	90025ef2 <_ZdlPvj>
9001abb4:	4620      	mov	r0, r4
9001abb6:	bd10      	pop	{r4, pc}

9001abb8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
9001abb8:	b510      	push	{r4, lr}
9001abba:	4604      	mov	r4, r0
9001abbc:	2104      	movs	r1, #4
9001abbe:	f00b f998 	bl	90025ef2 <_ZdlPvj>
9001abc2:	4620      	mov	r0, r4
9001abc4:	bd10      	pop	{r4, pc}

9001abc6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
9001abc6:	b510      	push	{r4, lr}
9001abc8:	4604      	mov	r4, r0
9001abca:	2104      	movs	r1, #4
9001abcc:	f00b f991 	bl	90025ef2 <_ZdlPvj>
9001abd0:	4620      	mov	r0, r4
9001abd2:	bd10      	pop	{r4, pc}

9001abd4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
9001abd4:	b510      	push	{r4, lr}
9001abd6:	4604      	mov	r4, r0
9001abd8:	2104      	movs	r1, #4
9001abda:	f00b f98a 	bl	90025ef2 <_ZdlPvj>
9001abde:	4620      	mov	r0, r4
9001abe0:	bd10      	pop	{r4, pc}

9001abe2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
9001abe2:	b510      	push	{r4, lr}
9001abe4:	4604      	mov	r4, r0
9001abe6:	2104      	movs	r1, #4
9001abe8:	f00b f983 	bl	90025ef2 <_ZdlPvj>
9001abec:	4620      	mov	r0, r4
9001abee:	bd10      	pop	{r4, pc}

9001abf0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
9001abf0:	b510      	push	{r4, lr}
9001abf2:	4604      	mov	r4, r0
9001abf4:	2104      	movs	r1, #4
9001abf6:	f00b f97c 	bl	90025ef2 <_ZdlPvj>
9001abfa:	4620      	mov	r0, r4
9001abfc:	bd10      	pop	{r4, pc}

9001abfe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
9001abfe:	b510      	push	{r4, lr}
9001ac00:	4604      	mov	r4, r0
9001ac02:	2104      	movs	r1, #4
9001ac04:	f00b f975 	bl	90025ef2 <_ZdlPvj>
9001ac08:	4620      	mov	r0, r4
9001ac0a:	bd10      	pop	{r4, pc}

9001ac0c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
9001ac0c:	b510      	push	{r4, lr}
9001ac0e:	4604      	mov	r4, r0
9001ac10:	2104      	movs	r1, #4
9001ac12:	f00b f96e 	bl	90025ef2 <_ZdlPvj>
9001ac16:	4620      	mov	r0, r4
9001ac18:	bd10      	pop	{r4, pc}

9001ac1a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
9001ac1a:	b510      	push	{r4, lr}
9001ac1c:	4604      	mov	r4, r0
9001ac1e:	2104      	movs	r1, #4
9001ac20:	f00b f967 	bl	90025ef2 <_ZdlPvj>
9001ac24:	4620      	mov	r0, r4
9001ac26:	bd10      	pop	{r4, pc}

9001ac28 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
9001ac28:	b510      	push	{r4, lr}
9001ac2a:	4604      	mov	r4, r0
9001ac2c:	2104      	movs	r1, #4
9001ac2e:	f00b f960 	bl	90025ef2 <_ZdlPvj>
9001ac32:	4620      	mov	r0, r4
9001ac34:	bd10      	pop	{r4, pc}

9001ac36 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
9001ac36:	b510      	push	{r4, lr}
9001ac38:	4604      	mov	r4, r0
9001ac3a:	2104      	movs	r1, #4
9001ac3c:	f00b f959 	bl	90025ef2 <_ZdlPvj>
9001ac40:	4620      	mov	r0, r4
9001ac42:	bd10      	pop	{r4, pc}

9001ac44 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
9001ac44:	b510      	push	{r4, lr}
9001ac46:	4604      	mov	r4, r0
9001ac48:	2104      	movs	r1, #4
9001ac4a:	f00b f952 	bl	90025ef2 <_ZdlPvj>
9001ac4e:	4620      	mov	r0, r4
9001ac50:	bd10      	pop	{r4, pc}

9001ac52 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
9001ac52:	b510      	push	{r4, lr}
9001ac54:	4604      	mov	r4, r0
9001ac56:	2104      	movs	r1, #4
9001ac58:	f00b f94b 	bl	90025ef2 <_ZdlPvj>
9001ac5c:	4620      	mov	r0, r4
9001ac5e:	bd10      	pop	{r4, pc}

9001ac60 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
9001ac60:	b510      	push	{r4, lr}
9001ac62:	4604      	mov	r4, r0
9001ac64:	2104      	movs	r1, #4
9001ac66:	f00b f944 	bl	90025ef2 <_ZdlPvj>
9001ac6a:	4620      	mov	r0, r4
9001ac6c:	bd10      	pop	{r4, pc}

9001ac6e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
9001ac6e:	b510      	push	{r4, lr}
9001ac70:	4604      	mov	r4, r0
9001ac72:	2104      	movs	r1, #4
9001ac74:	f00b f93d 	bl	90025ef2 <_ZdlPvj>
9001ac78:	4620      	mov	r0, r4
9001ac7a:	bd10      	pop	{r4, pc}

9001ac7c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
9001ac7c:	b510      	push	{r4, lr}
9001ac7e:	4604      	mov	r4, r0
9001ac80:	2104      	movs	r1, #4
9001ac82:	f00b f936 	bl	90025ef2 <_ZdlPvj>
9001ac86:	4620      	mov	r0, r4
9001ac88:	bd10      	pop	{r4, pc}

9001ac8a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
9001ac8a:	b510      	push	{r4, lr}
9001ac8c:	4604      	mov	r4, r0
9001ac8e:	2104      	movs	r1, #4
9001ac90:	f00b f92f 	bl	90025ef2 <_ZdlPvj>
9001ac94:	4620      	mov	r0, r4
9001ac96:	bd10      	pop	{r4, pc}

9001ac98 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
9001ac98:	b510      	push	{r4, lr}
9001ac9a:	4604      	mov	r4, r0
9001ac9c:	2104      	movs	r1, #4
9001ac9e:	f00b f928 	bl	90025ef2 <_ZdlPvj>
9001aca2:	4620      	mov	r0, r4
9001aca4:	bd10      	pop	{r4, pc}

9001aca6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
9001aca6:	b510      	push	{r4, lr}
9001aca8:	4604      	mov	r4, r0
9001acaa:	2104      	movs	r1, #4
9001acac:	f00b f921 	bl	90025ef2 <_ZdlPvj>
9001acb0:	4620      	mov	r0, r4
9001acb2:	bd10      	pop	{r4, pc}

9001acb4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
9001acb4:	b510      	push	{r4, lr}
9001acb6:	4604      	mov	r4, r0
9001acb8:	2104      	movs	r1, #4
9001acba:	f00b f91a 	bl	90025ef2 <_ZdlPvj>
9001acbe:	4620      	mov	r0, r4
9001acc0:	bd10      	pop	{r4, pc}
	...

9001acc4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
9001acc4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001acc8:	b08f      	sub	sp, #60	; 0x3c
9001acca:	461c      	mov	r4, r3
9001accc:	9205      	str	r2, [sp, #20]
9001acce:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
9001acd2:	9100      	str	r1, [sp, #0]
9001acd4:	9b18      	ldr	r3, [sp, #96]	; 0x60
9001acd6:	9201      	str	r2, [sp, #4]
9001acd8:	2a00      	cmp	r2, #0
9001acda:	f000 8116 	beq.w	9001af0a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x246>
9001acde:	6820      	ldr	r0, [r4, #0]
9001ace0:	aa0a      	add	r2, sp, #40	; 0x28
9001ace2:	6861      	ldr	r1, [r4, #4]
9001ace4:	c203      	stmia	r2!, {r0, r1}
9001ace6:	6818      	ldr	r0, [r3, #0]
9001ace8:	aa0c      	add	r2, sp, #48	; 0x30
9001acea:	6859      	ldr	r1, [r3, #4]
9001acec:	c203      	stmia	r2!, {r0, r1}
9001acee:	a80a      	add	r0, sp, #40	; 0x28
9001acf0:	f7f9 fdfc 	bl	900148ec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001acf4:	4621      	mov	r1, r4
9001acf6:	a80c      	add	r0, sp, #48	; 0x30
9001acf8:	f7f9 fe3c 	bl	90014974 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001acfc:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
9001ad00:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
9001ad04:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
9001ad08:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
9001ad0c:	bfdb      	ittet	le
9001ad0e:	b2b3      	uxthle	r3, r6
9001ad10:	f44f 6280 	movle.w	r2, #1024	; 0x400
9001ad14:	2301      	movgt	r3, #1
9001ad16:	fb92 f3f3 	sdivle	r3, r2, r3
9001ad1a:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
9001ad1e:	441d      	add	r5, r3
9001ad20:	fb92 f1f3 	sdiv	r1, r2, r3
9001ad24:	fa1f fc81 	uxth.w	ip, r1
9001ad28:	3d01      	subs	r5, #1
9001ad2a:	fb0c 2413 	mls	r4, ip, r3, r2
9001ad2e:	4661      	mov	r1, ip
9001ad30:	fb14 f406 	smulbb	r4, r4, r6
9001ad34:	4404      	add	r4, r0
9001ad36:	fb95 f5f3 	sdiv	r5, r5, r3
9001ad3a:	b2a4      	uxth	r4, r4
9001ad3c:	b131      	cbz	r1, 9001ad4c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x88>
9001ad3e:	9b05      	ldr	r3, [sp, #20]
9001ad40:	9900      	ldr	r1, [sp, #0]
9001ad42:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
9001ad46:	ba1b      	rev	r3, r3
9001ad48:	4419      	add	r1, r3
9001ad4a:	9100      	str	r1, [sp, #0]
9001ad4c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
9001ad50:	b2ad      	uxth	r5, r5
9001ad52:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
9001ad56:	4418      	add	r0, r3
9001ad58:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
9001ad5c:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
9001ad60:	00ad      	lsls	r5, r5, #2
9001ad62:	441a      	add	r2, r3
9001ad64:	4b6a      	ldr	r3, [pc, #424]	; (9001af10 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
9001ad66:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
9001ad6a:	6818      	ldr	r0, [r3, #0]
9001ad6c:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
9001ad70:	6803      	ldr	r3, [r0, #0]
9001ad72:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001ad74:	4798      	blx	r3
9001ad76:	4967      	ldr	r1, [pc, #412]	; (9001af14 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
9001ad78:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
9001ad7c:	2c00      	cmp	r4, #0
9001ad7e:	880b      	ldrh	r3, [r1, #0]
9001ad80:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
9001ad84:	bf0c      	ite	eq
9001ad86:	46c6      	moveq	lr, r8
9001ad88:	f04f 0e00 	movne.w	lr, #0
9001ad8c:	9109      	str	r1, [sp, #36]	; 0x24
9001ad8e:	fb03 c202 	mla	r2, r3, r2, ip
9001ad92:	f8bd 1004 	ldrh.w	r1, [sp, #4]
9001ad96:	4373      	muls	r3, r6
9001ad98:	fa1f fe8e 	uxth.w	lr, lr
9001ad9c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001ada0:	9103      	str	r1, [sp, #12]
9001ada2:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001ada6:	9306      	str	r3, [sp, #24]
9001ada8:	1d2b      	adds	r3, r5, #4
9001adaa:	9307      	str	r3, [sp, #28]
9001adac:	9b01      	ldr	r3, [sp, #4]
9001adae:	f1c3 02ff 	rsb	r2, r3, #255	; 0xff
9001adb2:	2300      	movs	r3, #0
9001adb4:	b292      	uxth	r2, r2
9001adb6:	9302      	str	r3, [sp, #8]
9001adb8:	9204      	str	r2, [sp, #16]
9001adba:	9a06      	ldr	r2, [sp, #24]
9001adbc:	4282      	cmp	r2, r0
9001adbe:	f240 809f 	bls.w	9001af00 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23c>
9001adc2:	b963      	cbnz	r3, 9001adde <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
9001adc4:	9b00      	ldr	r3, [sp, #0]
9001adc6:	781a      	ldrb	r2, [r3, #0]
9001adc8:	0993      	lsrs	r3, r2, #6
9001adca:	f002 023f 	and.w	r2, r2, #63	; 0x3f
9001adce:	9202      	str	r2, [sp, #8]
9001add0:	1e5a      	subs	r2, r3, #1
9001add2:	2a02      	cmp	r2, #2
9001add4:	d815      	bhi.n	9001ae02 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
9001add6:	9a00      	ldr	r2, [sp, #0]
9001add8:	b29b      	uxth	r3, r3
9001adda:	3201      	adds	r2, #1
9001addc:	9200      	str	r2, [sp, #0]
9001adde:	b1b4      	cbz	r4, 9001ae0e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14a>
9001ade0:	429c      	cmp	r4, r3
9001ade2:	bf91      	iteee	ls
9001ade4:	1b1c      	subls	r4, r3, r4
9001ade6:	1ae4      	subhi	r4, r4, r3
9001ade8:	4671      	movhi	r1, lr
9001adea:	f04f 0a00 	movhi.w	sl, #0
9001adee:	bf9b      	ittet	ls
9001adf0:	fa1f fa84 	uxthls.w	sl, r4
9001adf4:	2400      	movls	r4, #0
9001adf6:	b2a4      	uxthhi	r4, r4
9001adf8:	fa1f f188 	uxthls.w	r1, r8
9001adfc:	4653      	mov	r3, sl
9001adfe:	468e      	mov	lr, r1
9001ae00:	e7db      	b.n	9001adba <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf6>
9001ae02:	9a00      	ldr	r2, [sp, #0]
9001ae04:	9b00      	ldr	r3, [sp, #0]
9001ae06:	3202      	adds	r2, #2
9001ae08:	785b      	ldrb	r3, [r3, #1]
9001ae0a:	9200      	str	r2, [sp, #0]
9001ae0c:	e7e7      	b.n	9001adde <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
9001ae0e:	2202      	movs	r2, #2
9001ae10:	9907      	ldr	r1, [sp, #28]
9001ae12:	4573      	cmp	r3, lr
9001ae14:	4615      	mov	r5, r2
9001ae16:	9a02      	ldr	r2, [sp, #8]
9001ae18:	bf24      	itt	cs
9001ae1a:	eba3 0a0e 	subcs.w	sl, r3, lr
9001ae1e:	46f1      	movcs	r9, lr
9001ae20:	fb15 1202 	smlabb	r2, r5, r2, r1
9001ae24:	9905      	ldr	r1, [sp, #20]
9001ae26:	bf34      	ite	cc
9001ae28:	4699      	movcc	r9, r3
9001ae2a:	fa1f fa8a 	uxthcs.w	sl, sl
9001ae2e:	f831 c002 	ldrh.w	ip, [r1, r2]
9001ae32:	bf38      	it	cc
9001ae34:	ebae 0103 	subcc.w	r1, lr, r3
9001ae38:	9a01      	ldr	r2, [sp, #4]
9001ae3a:	bf2e      	itee	cs
9001ae3c:	4621      	movcs	r1, r4
9001ae3e:	b289      	uxthcc	r1, r1
9001ae40:	46a2      	movcc	sl, r4
9001ae42:	2aff      	cmp	r2, #255	; 0xff
9001ae44:	ea4f 0949 	mov.w	r9, r9, lsl #1
9001ae48:	d105      	bne.n	9001ae56 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x192>
9001ae4a:	4481      	add	r9, r0
9001ae4c:	4581      	cmp	r9, r0
9001ae4e:	d045      	beq.n	9001aedc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
9001ae50:	f820 cb02 	strh.w	ip, [r0], #2
9001ae54:	e7fa      	b.n	9001ae4c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x188>
9001ae56:	ea4f 222c 	mov.w	r2, ip, asr #8
9001ae5a:	9d03      	ldr	r5, [sp, #12]
9001ae5c:	ea4f 0bec 	mov.w	fp, ip, asr #3
9001ae60:	4481      	add	r9, r0
9001ae62:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001ae66:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
9001ae6a:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
9001ae6e:	fa5f fc8c 	uxtb.w	ip, ip
9001ae72:	436a      	muls	r2, r5
9001ae74:	fb0b fb05 	mul.w	fp, fp, r5
9001ae78:	fb0c fc05 	mul.w	ip, ip, r5
9001ae7c:	9208      	str	r2, [sp, #32]
9001ae7e:	4581      	cmp	r9, r0
9001ae80:	d02c      	beq.n	9001aedc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
9001ae82:	8802      	ldrh	r2, [r0, #0]
9001ae84:	9d04      	ldr	r5, [sp, #16]
9001ae86:	1216      	asrs	r6, r2, #8
9001ae88:	9f04      	ldr	r7, [sp, #16]
9001ae8a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001ae8e:	fb16 f605 	smulbb	r6, r6, r5
9001ae92:	9d08      	ldr	r5, [sp, #32]
9001ae94:	442e      	add	r6, r5
9001ae96:	10d5      	asrs	r5, r2, #3
9001ae98:	00d2      	lsls	r2, r2, #3
9001ae9a:	b2b6      	uxth	r6, r6
9001ae9c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
9001aea0:	b2d2      	uxtb	r2, r2
9001aea2:	fb15 f507 	smulbb	r5, r5, r7
9001aea6:	fb12 f207 	smulbb	r2, r2, r7
9001aeaa:	1c77      	adds	r7, r6, #1
9001aeac:	445d      	add	r5, fp
9001aeae:	4462      	add	r2, ip
9001aeb0:	eb07 2616 	add.w	r6, r7, r6, lsr #8
9001aeb4:	b2ad      	uxth	r5, r5
9001aeb6:	b292      	uxth	r2, r2
9001aeb8:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
9001aebc:	1c57      	adds	r7, r2, #1
9001aebe:	eb07 2212 	add.w	r2, r7, r2, lsr #8
9001aec2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001aec6:	4316      	orrs	r6, r2
9001aec8:	1c6a      	adds	r2, r5, #1
9001aeca:	eb02 2515 	add.w	r5, r2, r5, lsr #8
9001aece:	096d      	lsrs	r5, r5, #5
9001aed0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001aed4:	432e      	orrs	r6, r5
9001aed6:	f820 6b02 	strh.w	r6, [r0], #2
9001aeda:	e7d0      	b.n	9001ae7e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ba>
9001aedc:	4573      	cmp	r3, lr
9001aede:	d38d      	bcc.n	9001adfc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
9001aee0:	fa1f f188 	uxth.w	r1, r8
9001aee4:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
9001aee8:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001aeea:	1a64      	subs	r4, r4, r1
9001aeec:	881b      	ldrh	r3, [r3, #0]
9001aeee:	b2a4      	uxth	r4, r4
9001aef0:	eba3 0308 	sub.w	r3, r3, r8
9001aef4:	2c00      	cmp	r4, #0
9001aef6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001aefa:	bf18      	it	ne
9001aefc:	2100      	movne	r1, #0
9001aefe:	e77d      	b.n	9001adfc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
9001af00:	4b03      	ldr	r3, [pc, #12]	; (9001af10 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
9001af02:	6818      	ldr	r0, [r3, #0]
9001af04:	6803      	ldr	r3, [r0, #0]
9001af06:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001af08:	4798      	blx	r3
9001af0a:	b00f      	add	sp, #60	; 0x3c
9001af0c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001af10:	2402357c 	.word	0x2402357c
9001af14:	24023576 	.word	0x24023576

9001af18 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
9001af18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001af1c:	b09f      	sub	sp, #124	; 0x7c
9001af1e:	461d      	mov	r5, r3
9001af20:	4604      	mov	r4, r0
9001af22:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9001af24:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
9001af28:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
9001af2c:	9209      	str	r2, [sp, #36]	; 0x24
9001af2e:	2a00      	cmp	r2, #0
9001af30:	f000 81ed 	beq.w	9001b30e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f6>
9001af34:	6828      	ldr	r0, [r5, #0]
9001af36:	aa1a      	add	r2, sp, #104	; 0x68
9001af38:	6869      	ldr	r1, [r5, #4]
9001af3a:	c203      	stmia	r2!, {r0, r1}
9001af3c:	6818      	ldr	r0, [r3, #0]
9001af3e:	aa1c      	add	r2, sp, #112	; 0x70
9001af40:	6859      	ldr	r1, [r3, #4]
9001af42:	c203      	stmia	r2!, {r0, r1}
9001af44:	a81a      	add	r0, sp, #104	; 0x68
9001af46:	f7f9 fcd1 	bl	900148ec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001af4a:	4629      	mov	r1, r5
9001af4c:	a81c      	add	r0, sp, #112	; 0x70
9001af4e:	f7f9 fd11 	bl	90014974 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001af52:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
9001af56:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	; 0x6e
9001af5a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
9001af5e:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	; 0x76
9001af62:	bfdb      	ittet	le
9001af64:	b29a      	uxthle	r2, r3
9001af66:	f44f 6180 	movle.w	r1, #1024	; 0x400
9001af6a:	2201      	movgt	r2, #1
9001af6c:	fb91 f2f2 	sdivle	r2, r1, r2
9001af70:	9202      	str	r2, [sp, #8]
9001af72:	9802      	ldr	r0, [sp, #8]
9001af74:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
9001af78:	9902      	ldr	r1, [sp, #8]
9001af7a:	fb92 f0f0 	sdiv	r0, r2, r0
9001af7e:	b280      	uxth	r0, r0
9001af80:	4488      	add	r8, r1
9001af82:	9010      	str	r0, [sp, #64]	; 0x40
9001af84:	f108 38ff 	add.w	r8, r8, #4294967295
9001af88:	9802      	ldr	r0, [sp, #8]
9001af8a:	9d10      	ldr	r5, [sp, #64]	; 0x40
9001af8c:	fb05 2510 	mls	r5, r5, r0, r2
9001af90:	fb98 f8f1 	sdiv	r8, r8, r1
9001af94:	fb15 f503 	smulbb	r5, r5, r3
9001af98:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
9001af9c:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
9001afa0:	f108 0801 	add.w	r8, r8, #1
9001afa4:	440d      	add	r5, r1
9001afa6:	4419      	add	r1, r3
9001afa8:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
9001afac:	fa1f f888 	uxth.w	r8, r8
9001afb0:	441a      	add	r2, r3
9001afb2:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
9001afb6:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
9001afba:	b2ad      	uxth	r5, r5
9001afbc:	9304      	str	r3, [sp, #16]
9001afbe:	4b94      	ldr	r3, [pc, #592]	; (9001b210 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
9001afc0:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
9001afc4:	6818      	ldr	r0, [r3, #0]
9001afc6:	6803      	ldr	r3, [r0, #0]
9001afc8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001afca:	4798      	blx	r3
9001afcc:	4b91      	ldr	r3, [pc, #580]	; (9001b214 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
9001afce:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
9001afd2:	2d00      	cmp	r5, #0
9001afd4:	881a      	ldrh	r2, [r3, #0]
9001afd6:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
9001afda:	fb02 f606 	mul.w	r6, r2, r6
9001afde:	fb02 7101 	mla	r1, r2, r1, r7
9001afe2:	9318      	str	r3, [sp, #96]	; 0x60
9001afe4:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001afe8:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
9001afec:	f04f 0100 	mov.w	r1, #0
9001aff0:	eb00 0246 	add.w	r2, r0, r6, lsl #1
9001aff4:	930f      	str	r3, [sp, #60]	; 0x3c
9001aff6:	4b88      	ldr	r3, [pc, #544]	; (9001b218 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>)
9001aff8:	920a      	str	r2, [sp, #40]	; 0x28
9001affa:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001affc:	eba3 0304 	sub.w	r3, r3, r4
9001b000:	910d      	str	r1, [sp, #52]	; 0x34
9001b002:	eb02 0888 	add.w	r8, r2, r8, lsl #2
9001b006:	9319      	str	r3, [sp, #100]	; 0x64
9001b008:	f108 0204 	add.w	r2, r8, #4
9001b00c:	9211      	str	r2, [sp, #68]	; 0x44
9001b00e:	9a09      	ldr	r2, [sp, #36]	; 0x24
9001b010:	f1c2 02ff 	rsb	r2, r2, #255	; 0xff
9001b014:	9215      	str	r2, [sp, #84]	; 0x54
9001b016:	9a04      	ldr	r2, [sp, #16]
9001b018:	bf18      	it	ne
9001b01a:	2200      	movne	r2, #0
9001b01c:	b292      	uxth	r2, r2
9001b01e:	9910      	ldr	r1, [sp, #64]	; 0x40
9001b020:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001b022:	fa11 f383 	uxtah	r3, r1, r3
9001b026:	9914      	ldr	r1, [sp, #80]	; 0x50
9001b028:	eb01 0383 	add.w	r3, r1, r3, lsl #2
9001b02c:	3304      	adds	r3, #4
9001b02e:	9306      	str	r3, [sp, #24]
9001b030:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001b032:	4283      	cmp	r3, r0
9001b034:	f240 8166 	bls.w	9001b304 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3ec>
9001b038:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
9001b03c:	f04f 0a01 	mov.w	sl, #1
9001b040:	9902      	ldr	r1, [sp, #8]
9001b042:	9e06      	ldr	r6, [sp, #24]
9001b044:	46d3      	mov	fp, sl
9001b046:	4657      	mov	r7, sl
9001b048:	7836      	ldrb	r6, [r6, #0]
9001b04a:	fbb5 f3f3 	udiv	r3, r5, r3
9001b04e:	1acb      	subs	r3, r1, r3
9001b050:	9612      	str	r6, [sp, #72]	; 0x48
9001b052:	3601      	adds	r6, #1
9001b054:	b29b      	uxth	r3, r3
9001b056:	9605      	str	r6, [sp, #20]
9001b058:	9316      	str	r3, [sp, #88]	; 0x58
9001b05a:	9b06      	ldr	r3, [sp, #24]
9001b05c:	7859      	ldrb	r1, [r3, #1]
9001b05e:	789b      	ldrb	r3, [r3, #2]
9001b060:	021b      	lsls	r3, r3, #8
9001b062:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
9001b066:	9906      	ldr	r1, [sp, #24]
9001b068:	78c9      	ldrb	r1, [r1, #3]
9001b06a:	430b      	orrs	r3, r1
9001b06c:	9913      	ldr	r1, [sp, #76]	; 0x4c
9001b06e:	4419      	add	r1, r3
9001b070:	1c4e      	adds	r6, r1, #1
9001b072:	7849      	ldrb	r1, [r1, #1]
9001b074:	9603      	str	r6, [sp, #12]
9001b076:	0209      	lsls	r1, r1, #8
9001b078:	9e13      	ldr	r6, [sp, #76]	; 0x4c
9001b07a:	f401 71ff 	and.w	r1, r1, #510	; 0x1fe
9001b07e:	5cf3      	ldrb	r3, [r6, r3]
9001b080:	4319      	orrs	r1, r3
9001b082:	b28b      	uxth	r3, r1
9001b084:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
9001b088:	930c      	str	r3, [sp, #48]	; 0x30
9001b08a:	2300      	movs	r3, #0
9001b08c:	9307      	str	r3, [sp, #28]
9001b08e:	469c      	mov	ip, r3
9001b090:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
9001b094:	930e      	str	r3, [sp, #56]	; 0x38
9001b096:	2d00      	cmp	r5, #0
9001b098:	d07e      	beq.n	9001b198 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x280>
9001b09a:	42af      	cmp	r7, r5
9001b09c:	d26e      	bcs.n	9001b17c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x264>
9001b09e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001b0a0:	1bed      	subs	r5, r5, r7
9001b0a2:	9201      	str	r2, [sp, #4]
9001b0a4:	4283      	cmp	r3, r0
9001b0a6:	b2ad      	uxth	r5, r5
9001b0a8:	d802      	bhi.n	9001b0b0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x198>
9001b0aa:	e073      	b.n	9001b194 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
9001b0ac:	2b00      	cmp	r3, #0
9001b0ae:	d15f      	bne.n	9001b170 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x258>
9001b0b0:	9b03      	ldr	r3, [sp, #12]
9001b0b2:	f1cb 0207 	rsb	r2, fp, #7
9001b0b6:	785b      	ldrb	r3, [r3, #1]
9001b0b8:	4093      	lsls	r3, r2
9001b0ba:	005b      	lsls	r3, r3, #1
9001b0bc:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
9001b0c0:	9b03      	ldr	r3, [sp, #12]
9001b0c2:	781b      	ldrb	r3, [r3, #0]
9001b0c4:	fa43 f30b 	asr.w	r3, r3, fp
9001b0c8:	b2db      	uxtb	r3, r3
9001b0ca:	4313      	orrs	r3, r2
9001b0cc:	f10b 0201 	add.w	r2, fp, #1
9001b0d0:	fa5f fb82 	uxtb.w	fp, r2
9001b0d4:	9a03      	ldr	r2, [sp, #12]
9001b0d6:	b29f      	uxth	r7, r3
9001b0d8:	f1bb 0f08 	cmp.w	fp, #8
9001b0dc:	bf13      	iteet	ne
9001b0de:	3201      	addne	r2, #1
9001b0e0:	3202      	addeq	r2, #2
9001b0e2:	f04f 0b00 	moveq.w	fp, #0
9001b0e6:	9203      	strne	r2, [sp, #12]
9001b0e8:	bf08      	it	eq
9001b0ea:	9203      	streq	r2, [sp, #12]
9001b0ec:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001b0ee:	42ba      	cmp	r2, r7
9001b0f0:	d309      	bcc.n	9001b106 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ee>
9001b0f2:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
9001b0f6:	2301      	movs	r3, #1
9001b0f8:	9a05      	ldr	r2, [sp, #20]
9001b0fa:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
9001b0fe:	d30e      	bcc.n	9001b11e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
9001b100:	469a      	mov	sl, r3
9001b102:	2600      	movs	r6, #0
9001b104:	e035      	b.n	9001b172 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x25a>
9001b106:	9b05      	ldr	r3, [sp, #20]
9001b108:	429f      	cmp	r7, r3
9001b10a:	d318      	bcc.n	9001b13e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x226>
9001b10c:	eb04 030a 	add.w	r3, r4, sl
9001b110:	f894 2804 	ldrb.w	r2, [r4, #2052]	; 0x804
9001b114:	f883 2804 	strb.w	r2, [r3, #2052]	; 0x804
9001b118:	f10a 0301 	add.w	r3, sl, #1
9001b11c:	b29b      	uxth	r3, r3
9001b11e:	9a05      	ldr	r2, [sp, #20]
9001b120:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
9001b124:	eb04 0282 	add.w	r2, r4, r2, lsl #2
9001b128:	990c      	ldr	r1, [sp, #48]	; 0x30
9001b12a:	7116      	strb	r6, [r2, #4]
9001b12c:	f10a 0601 	add.w	r6, sl, #1
9001b130:	80d1      	strh	r1, [r2, #6]
9001b132:	7156      	strb	r6, [r2, #5]
9001b134:	9a05      	ldr	r2, [sp, #20]
9001b136:	3201      	adds	r2, #1
9001b138:	b292      	uxth	r2, r2
9001b13a:	9205      	str	r2, [sp, #20]
9001b13c:	e7e0      	b.n	9001b100 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e8>
9001b13e:	eb04 0387 	add.w	r3, r4, r7, lsl #2
9001b142:	463a      	mov	r2, r7
9001b144:	795b      	ldrb	r3, [r3, #5]
9001b146:	f603 0604 	addw	r6, r3, #2052	; 0x804
9001b14a:	4426      	add	r6, r4
9001b14c:	9919      	ldr	r1, [sp, #100]	; 0x64
9001b14e:	eb01 0c06 	add.w	ip, r1, r6
9001b152:	f1bc 0f00 	cmp.w	ip, #0
9001b156:	dd07      	ble.n	9001b168 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>
9001b158:	eb04 0282 	add.w	r2, r4, r2, lsl #2
9001b15c:	f892 c004 	ldrb.w	ip, [r2, #4]
9001b160:	f806 cd01 	strb.w	ip, [r6, #-1]!
9001b164:	88d2      	ldrh	r2, [r2, #6]
9001b166:	e7f1      	b.n	9001b14c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x234>
9001b168:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
9001b16c:	b29b      	uxth	r3, r3
9001b16e:	e7c3      	b.n	9001b0f8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e0>
9001b170:	9f0c      	ldr	r7, [sp, #48]	; 0x30
9001b172:	970c      	str	r7, [sp, #48]	; 0x30
9001b174:	46b4      	mov	ip, r6
9001b176:	9a01      	ldr	r2, [sp, #4]
9001b178:	461f      	mov	r7, r3
9001b17a:	e78c      	b.n	9001b096 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17e>
9001b17c:	1b7b      	subs	r3, r7, r5
9001b17e:	eb0c 0605 	add.w	r6, ip, r5
9001b182:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001b186:	b29b      	uxth	r3, r3
9001b188:	b2b6      	uxth	r6, r6
9001b18a:	9201      	str	r2, [sp, #4]
9001b18c:	2500      	movs	r5, #0
9001b18e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
9001b190:	4282      	cmp	r2, r0
9001b192:	d88b      	bhi.n	9001b0ac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
9001b194:	9a01      	ldr	r2, [sp, #4]
9001b196:	e74b      	b.n	9001b030 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x118>
9001b198:	4297      	cmp	r7, r2
9001b19a:	d332      	bcc.n	9001b202 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2ea>
9001b19c:	1abb      	subs	r3, r7, r2
9001b19e:	9208      	str	r2, [sp, #32]
9001b1a0:	9501      	str	r5, [sp, #4]
9001b1a2:	b29b      	uxth	r3, r3
9001b1a4:	9909      	ldr	r1, [sp, #36]	; 0x24
9001b1a6:	29ff      	cmp	r1, #255	; 0xff
9001b1a8:	9908      	ldr	r1, [sp, #32]
9001b1aa:	eb0c 0601 	add.w	r6, ip, r1
9001b1ae:	d135      	bne.n	9001b21c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
9001b1b0:	f1a0 0e02 	sub.w	lr, r0, #2
9001b1b4:	b2b6      	uxth	r6, r6
9001b1b6:	45b4      	cmp	ip, r6
9001b1b8:	f040 808c 	bne.w	9001b2d4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3bc>
9001b1bc:	9908      	ldr	r1, [sp, #32]
9001b1be:	4297      	cmp	r7, r2
9001b1c0:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001b1c4:	d3e2      	bcc.n	9001b18c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x274>
9001b1c6:	9a18      	ldr	r2, [sp, #96]	; 0x60
9001b1c8:	9904      	ldr	r1, [sp, #16]
9001b1ca:	8812      	ldrh	r2, [r2, #0]
9001b1cc:	1a52      	subs	r2, r2, r1
9001b1ce:	9916      	ldr	r1, [sp, #88]	; 0x58
9001b1d0:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001b1d4:	9a07      	ldr	r2, [sp, #28]
9001b1d6:	3201      	adds	r2, #1
9001b1d8:	428a      	cmp	r2, r1
9001b1da:	9207      	str	r2, [sp, #28]
9001b1dc:	f040 8087 	bne.w	9001b2ee <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d6>
9001b1e0:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
9001b1e4:	f8bd 7068 	ldrh.w	r7, [sp, #104]	; 0x68
9001b1e8:	9b04      	ldr	r3, [sp, #16]
9001b1ea:	1bed      	subs	r5, r5, r7
9001b1ec:	b2ad      	uxth	r5, r5
9001b1ee:	2d00      	cmp	r5, #0
9001b1f0:	bf08      	it	eq
9001b1f2:	461a      	moveq	r2, r3
9001b1f4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001b1f6:	bf18      	it	ne
9001b1f8:	2200      	movne	r2, #0
9001b1fa:	3301      	adds	r3, #1
9001b1fc:	b292      	uxth	r2, r2
9001b1fe:	930d      	str	r3, [sp, #52]	; 0x34
9001b200:	e70d      	b.n	9001b01e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x106>
9001b202:	1bd1      	subs	r1, r2, r7
9001b204:	9708      	str	r7, [sp, #32]
9001b206:	b28b      	uxth	r3, r1
9001b208:	9301      	str	r3, [sp, #4]
9001b20a:	462b      	mov	r3, r5
9001b20c:	e7ca      	b.n	9001b1a4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x28c>
9001b20e:	bf00      	nop
9001b210:	2402357c 	.word	0x2402357c
9001b214:	24023576 	.word	0x24023576
9001b218:	fffff7fb 	.word	0xfffff7fb
9001b21c:	b2b6      	uxth	r6, r6
9001b21e:	900b      	str	r0, [sp, #44]	; 0x2c
9001b220:	45b4      	cmp	ip, r6
9001b222:	d0cb      	beq.n	9001b1bc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a4>
9001b224:	f10c 0101 	add.w	r1, ip, #1
9001b228:	44a4      	add	ip, r4
9001b22a:	9117      	str	r1, [sp, #92]	; 0x5c
9001b22c:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
9001b230:	9911      	ldr	r1, [sp, #68]	; 0x44
9001b232:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
9001b236:	990b      	ldr	r1, [sp, #44]	; 0x2c
9001b238:	ea4f 2825 	mov.w	r8, r5, asr #8
9001b23c:	f8b1 c000 	ldrh.w	ip, [r1]
9001b240:	990e      	ldr	r1, [sp, #56]	; 0x38
9001b242:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
9001b246:	ea4f 2e2c 	mov.w	lr, ip, asr #8
9001b24a:	ea4f 09ec 	mov.w	r9, ip, asr #3
9001b24e:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
9001b252:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001b256:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
9001b25a:	fb1e fe01 	smulbb	lr, lr, r1
9001b25e:	990f      	ldr	r1, [sp, #60]	; 0x3c
9001b260:	fa5f fc8c 	uxtb.w	ip, ip
9001b264:	fb08 e801 	mla	r8, r8, r1, lr
9001b268:	ea4f 0ee5 	mov.w	lr, r5, asr #3
9001b26c:	990e      	ldr	r1, [sp, #56]	; 0x38
9001b26e:	00ed      	lsls	r5, r5, #3
9001b270:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
9001b274:	fa1f f888 	uxth.w	r8, r8
9001b278:	fb19 f901 	smulbb	r9, r9, r1
9001b27c:	990f      	ldr	r1, [sp, #60]	; 0x3c
9001b27e:	b2ed      	uxtb	r5, r5
9001b280:	fb0e 9e01 	mla	lr, lr, r1, r9
9001b284:	990e      	ldr	r1, [sp, #56]	; 0x38
9001b286:	fb1c fc01 	smulbb	ip, ip, r1
9001b28a:	990f      	ldr	r1, [sp, #60]	; 0x3c
9001b28c:	fa1f fe8e 	uxth.w	lr, lr
9001b290:	fb05 c501 	mla	r5, r5, r1, ip
9001b294:	f108 0c01 	add.w	ip, r8, #1
9001b298:	f10e 0901 	add.w	r9, lr, #1
9001b29c:	990b      	ldr	r1, [sp, #44]	; 0x2c
9001b29e:	b2ad      	uxth	r5, r5
9001b2a0:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
9001b2a4:	f105 0c01 	add.w	ip, r5, #1
9001b2a8:	eb09 291e 	add.w	r9, r9, lr, lsr #8
9001b2ac:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
9001b2b0:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
9001b2b4:	ea4f 1959 	mov.w	r9, r9, lsr #5
9001b2b8:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9001b2bc:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
9001b2c0:	ea4c 0808 	orr.w	r8, ip, r8
9001b2c4:	f8bd c05c 	ldrh.w	ip, [sp, #92]	; 0x5c
9001b2c8:	ea48 0809 	orr.w	r8, r8, r9
9001b2cc:	f821 8b02 	strh.w	r8, [r1], #2
9001b2d0:	910b      	str	r1, [sp, #44]	; 0x2c
9001b2d2:	e7a5      	b.n	9001b220 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x308>
9001b2d4:	f10c 0801 	add.w	r8, ip, #1
9001b2d8:	44a4      	add	ip, r4
9001b2da:	9911      	ldr	r1, [sp, #68]	; 0x44
9001b2dc:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
9001b2e0:	fa1f fc88 	uxth.w	ip, r8
9001b2e4:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
9001b2e8:	f82e 5f02 	strh.w	r5, [lr, #2]!
9001b2ec:	e763      	b.n	9001b1b6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29e>
9001b2ee:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001b2f2:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
9001b2f6:	1aad      	subs	r5, r5, r2
9001b2f8:	b2ad      	uxth	r5, r5
9001b2fa:	2d00      	cmp	r5, #0
9001b2fc:	bf18      	it	ne
9001b2fe:	2200      	movne	r2, #0
9001b300:	9201      	str	r2, [sp, #4]
9001b302:	e744      	b.n	9001b18e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x276>
9001b304:	4b03      	ldr	r3, [pc, #12]	; (9001b314 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3fc>)
9001b306:	6818      	ldr	r0, [r3, #0]
9001b308:	6803      	ldr	r3, [r0, #0]
9001b30a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001b30c:	4798      	blx	r3
9001b30e:	b01f      	add	sp, #124	; 0x7c
9001b310:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001b314:	2402357c 	.word	0x2402357c

9001b318 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
9001b318:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001b31c:	b08f      	sub	sp, #60	; 0x3c
9001b31e:	461c      	mov	r4, r3
9001b320:	460f      	mov	r7, r1
9001b322:	9203      	str	r2, [sp, #12]
9001b324:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
9001b328:	9b18      	ldr	r3, [sp, #96]	; 0x60
9001b32a:	9202      	str	r2, [sp, #8]
9001b32c:	2a00      	cmp	r2, #0
9001b32e:	f000 8128 	beq.w	9001b582 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
9001b332:	6820      	ldr	r0, [r4, #0]
9001b334:	aa0a      	add	r2, sp, #40	; 0x28
9001b336:	6861      	ldr	r1, [r4, #4]
9001b338:	c203      	stmia	r2!, {r0, r1}
9001b33a:	6818      	ldr	r0, [r3, #0]
9001b33c:	aa0c      	add	r2, sp, #48	; 0x30
9001b33e:	6859      	ldr	r1, [r3, #4]
9001b340:	c203      	stmia	r2!, {r0, r1}
9001b342:	a80a      	add	r0, sp, #40	; 0x28
9001b344:	f7f9 fad2 	bl	900148ec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001b348:	4621      	mov	r1, r4
9001b34a:	a80c      	add	r0, sp, #48	; 0x30
9001b34c:	f7f9 fb12 	bl	90014974 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001b350:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
9001b354:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
9001b358:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
9001b35c:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
9001b360:	bfdb      	ittet	le
9001b362:	b2b3      	uxthle	r3, r6
9001b364:	f44f 6280 	movle.w	r2, #1024	; 0x400
9001b368:	2301      	movgt	r3, #1
9001b36a:	fb92 f3f3 	sdivle	r3, r2, r3
9001b36e:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
9001b372:	441d      	add	r5, r3
9001b374:	fb92 f1f3 	sdiv	r1, r2, r3
9001b378:	fa1f fc81 	uxth.w	ip, r1
9001b37c:	3d01      	subs	r5, #1
9001b37e:	fb0c 2413 	mls	r4, ip, r3, r2
9001b382:	4661      	mov	r1, ip
9001b384:	fb14 f406 	smulbb	r4, r4, r6
9001b388:	4404      	add	r4, r0
9001b38a:	fb95 f5f3 	sdiv	r5, r5, r3
9001b38e:	b2a4      	uxth	r4, r4
9001b390:	b121      	cbz	r1, 9001b39c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x84>
9001b392:	9b03      	ldr	r3, [sp, #12]
9001b394:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
9001b398:	ba1b      	rev	r3, r3
9001b39a:	441f      	add	r7, r3
9001b39c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
9001b3a0:	b2ad      	uxth	r5, r5
9001b3a2:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
9001b3a6:	4418      	add	r0, r3
9001b3a8:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
9001b3ac:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
9001b3b0:	00ad      	lsls	r5, r5, #2
9001b3b2:	441a      	add	r2, r3
9001b3b4:	4b74      	ldr	r3, [pc, #464]	; (9001b588 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
9001b3b6:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
9001b3ba:	6818      	ldr	r0, [r3, #0]
9001b3bc:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
9001b3c0:	6803      	ldr	r3, [r0, #0]
9001b3c2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001b3c4:	4798      	blx	r3
9001b3c6:	4a71      	ldr	r2, [pc, #452]	; (9001b58c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
9001b3c8:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
9001b3cc:	2c00      	cmp	r4, #0
9001b3ce:	8813      	ldrh	r3, [r2, #0]
9001b3d0:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
9001b3d4:	bf0c      	ite	eq
9001b3d6:	46c8      	moveq	r8, r9
9001b3d8:	f04f 0800 	movne.w	r8, #0
9001b3dc:	9209      	str	r2, [sp, #36]	; 0x24
9001b3de:	fb03 c101 	mla	r1, r3, r1, ip
9001b3e2:	4373      	muls	r3, r6
9001b3e4:	fa1f f888 	uxth.w	r8, r8
9001b3e8:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001b3ec:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001b3f0:	9304      	str	r3, [sp, #16]
9001b3f2:	1d2b      	adds	r3, r5, #4
9001b3f4:	9305      	str	r3, [sp, #20]
9001b3f6:	2300      	movs	r3, #0
9001b3f8:	9301      	str	r3, [sp, #4]
9001b3fa:	9a04      	ldr	r2, [sp, #16]
9001b3fc:	4282      	cmp	r2, r0
9001b3fe:	f240 80bb 	bls.w	9001b578 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
9001b402:	b95b      	cbnz	r3, 9001b41c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x104>
9001b404:	783a      	ldrb	r2, [r7, #0]
9001b406:	0993      	lsrs	r3, r2, #6
9001b408:	f002 023f 	and.w	r2, r2, #63	; 0x3f
9001b40c:	9201      	str	r2, [sp, #4]
9001b40e:	1e5a      	subs	r2, r3, #1
9001b410:	2a02      	cmp	r2, #2
9001b412:	bf8d      	iteet	hi
9001b414:	787b      	ldrbhi	r3, [r7, #1]
9001b416:	3701      	addls	r7, #1
9001b418:	b29b      	uxthls	r3, r3
9001b41a:	3702      	addhi	r7, #2
9001b41c:	b184      	cbz	r4, 9001b440 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x128>
9001b41e:	429c      	cmp	r4, r3
9001b420:	bf91      	iteee	ls
9001b422:	1b1c      	subls	r4, r3, r4
9001b424:	1ae4      	subhi	r4, r4, r3
9001b426:	46c4      	movhi	ip, r8
9001b428:	f04f 0a00 	movhi.w	sl, #0
9001b42c:	bf9b      	ittet	ls
9001b42e:	fa1f fa84 	uxthls.w	sl, r4
9001b432:	2400      	movls	r4, #0
9001b434:	b2a4      	uxthhi	r4, r4
9001b436:	fa1f fc89 	uxthls.w	ip, r9
9001b43a:	4653      	mov	r3, sl
9001b43c:	46e0      	mov	r8, ip
9001b43e:	e7dc      	b.n	9001b3fa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe2>
9001b440:	2204      	movs	r2, #4
9001b442:	9905      	ldr	r1, [sp, #20]
9001b444:	4543      	cmp	r3, r8
9001b446:	4615      	mov	r5, r2
9001b448:	9a01      	ldr	r2, [sp, #4]
9001b44a:	bf24      	itt	cs
9001b44c:	eba3 0a08 	subcs.w	sl, r3, r8
9001b450:	46c6      	movcs	lr, r8
9001b452:	fb15 1202 	smlabb	r2, r5, r2, r1
9001b456:	9903      	ldr	r1, [sp, #12]
9001b458:	bf3c      	itt	cc
9001b45a:	eba8 0c03 	subcc.w	ip, r8, r3
9001b45e:	469e      	movcc	lr, r3
9001b460:	588a      	ldr	r2, [r1, r2]
9001b462:	bf26      	itte	cs
9001b464:	fa1f fa8a 	uxthcs.w	sl, sl
9001b468:	46a4      	movcs	ip, r4
9001b46a:	fa1f fc8c 	uxthcc.w	ip, ip
9001b46e:	ea4f 6112 	mov.w	r1, r2, lsr #24
9001b472:	bf38      	it	cc
9001b474:	46a2      	movcc	sl, r4
9001b476:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
9001b47a:	2900      	cmp	r1, #0
9001b47c:	d066      	beq.n	9001b54c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
9001b47e:	29ff      	cmp	r1, #255	; 0xff
9001b480:	ea4f 2612 	mov.w	r6, r2, lsr #8
9001b484:	d114      	bne.n	9001b4b0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
9001b486:	9d02      	ldr	r5, [sp, #8]
9001b488:	2dff      	cmp	r5, #255	; 0xff
9001b48a:	d111      	bne.n	9001b4b0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
9001b48c:	0951      	lsrs	r1, r2, #5
9001b48e:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
9001b492:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9001b496:	4486      	add	lr, r0
9001b498:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
9001b49c:	f026 0607 	bic.w	r6, r6, #7
9001b4a0:	430e      	orrs	r6, r1
9001b4a2:	4316      	orrs	r6, r2
9001b4a4:	b2b6      	uxth	r6, r6
9001b4a6:	4586      	cmp	lr, r0
9001b4a8:	d051      	beq.n	9001b54e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
9001b4aa:	f820 6b02 	strh.w	r6, [r0], #2
9001b4ae:	e7fa      	b.n	9001b4a6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
9001b4b0:	9d02      	ldr	r5, [sp, #8]
9001b4b2:	b2f6      	uxtb	r6, r6
9001b4b4:	4486      	add	lr, r0
9001b4b6:	4369      	muls	r1, r5
9001b4b8:	1c4d      	adds	r5, r1, #1
9001b4ba:	eb05 2521 	add.w	r5, r5, r1, asr #8
9001b4be:	f3c2 4107 	ubfx	r1, r2, #16, #8
9001b4c2:	b2d2      	uxtb	r2, r2
9001b4c4:	122d      	asrs	r5, r5, #8
9001b4c6:	ea6f 0b05 	mvn.w	fp, r5
9001b4ca:	b2ad      	uxth	r5, r5
9001b4cc:	fb11 f105 	smulbb	r1, r1, r5
9001b4d0:	fa5f fb8b 	uxtb.w	fp, fp
9001b4d4:	fb16 f605 	smulbb	r6, r6, r5
9001b4d8:	fb12 f205 	smulbb	r2, r2, r5
9001b4dc:	b289      	uxth	r1, r1
9001b4de:	b2b6      	uxth	r6, r6
9001b4e0:	b292      	uxth	r2, r2
9001b4e2:	9106      	str	r1, [sp, #24]
9001b4e4:	9607      	str	r6, [sp, #28]
9001b4e6:	9208      	str	r2, [sp, #32]
9001b4e8:	4586      	cmp	lr, r0
9001b4ea:	d030      	beq.n	9001b54e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
9001b4ec:	8802      	ldrh	r2, [r0, #0]
9001b4ee:	9906      	ldr	r1, [sp, #24]
9001b4f0:	1216      	asrs	r6, r2, #8
9001b4f2:	10d5      	asrs	r5, r2, #3
9001b4f4:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001b4f8:	00d2      	lsls	r2, r2, #3
9001b4fa:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
9001b4fe:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9001b502:	b2d2      	uxtb	r2, r2
9001b504:	fb06 160b 	mla	r6, r6, fp, r1
9001b508:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9001b50c:	9907      	ldr	r1, [sp, #28]
9001b50e:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001b512:	b2b6      	uxth	r6, r6
9001b514:	fb05 150b 	mla	r5, r5, fp, r1
9001b518:	9908      	ldr	r1, [sp, #32]
9001b51a:	fb02 120b 	mla	r2, r2, fp, r1
9001b51e:	1c71      	adds	r1, r6, #1
9001b520:	b2ad      	uxth	r5, r5
9001b522:	b292      	uxth	r2, r2
9001b524:	eb01 2616 	add.w	r6, r1, r6, lsr #8
9001b528:	1c51      	adds	r1, r2, #1
9001b52a:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
9001b52e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
9001b532:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001b536:	4316      	orrs	r6, r2
9001b538:	1c6a      	adds	r2, r5, #1
9001b53a:	eb02 2515 	add.w	r5, r2, r5, lsr #8
9001b53e:	096d      	lsrs	r5, r5, #5
9001b540:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001b544:	432e      	orrs	r6, r5
9001b546:	f820 6b02 	strh.w	r6, [r0], #2
9001b54a:	e7cd      	b.n	9001b4e8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
9001b54c:	4470      	add	r0, lr
9001b54e:	4543      	cmp	r3, r8
9001b550:	f4ff af73 	bcc.w	9001b43a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
9001b554:	fa1f fc89 	uxth.w	ip, r9
9001b558:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
9001b55c:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001b55e:	eba4 040c 	sub.w	r4, r4, ip
9001b562:	881b      	ldrh	r3, [r3, #0]
9001b564:	b2a4      	uxth	r4, r4
9001b566:	eba3 0309 	sub.w	r3, r3, r9
9001b56a:	2c00      	cmp	r4, #0
9001b56c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001b570:	bf18      	it	ne
9001b572:	f04f 0c00 	movne.w	ip, #0
9001b576:	e760      	b.n	9001b43a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
9001b578:	4b03      	ldr	r3, [pc, #12]	; (9001b588 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
9001b57a:	6818      	ldr	r0, [r3, #0]
9001b57c:	6803      	ldr	r3, [r0, #0]
9001b57e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001b580:	4798      	blx	r3
9001b582:	b00f      	add	sp, #60	; 0x3c
9001b584:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001b588:	2402357c 	.word	0x2402357c
9001b58c:	24023576 	.word	0x24023576

9001b590 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
9001b590:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001b594:	b093      	sub	sp, #76	; 0x4c
9001b596:	461c      	mov	r4, r3
9001b598:	9205      	str	r2, [sp, #20]
9001b59a:	f89d 2074 	ldrb.w	r2, [sp, #116]	; 0x74
9001b59e:	9101      	str	r1, [sp, #4]
9001b5a0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
9001b5a2:	9202      	str	r2, [sp, #8]
9001b5a4:	2a00      	cmp	r2, #0
9001b5a6:	f000 812e 	beq.w	9001b806 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
9001b5aa:	6820      	ldr	r0, [r4, #0]
9001b5ac:	aa0e      	add	r2, sp, #56	; 0x38
9001b5ae:	6861      	ldr	r1, [r4, #4]
9001b5b0:	c203      	stmia	r2!, {r0, r1}
9001b5b2:	6818      	ldr	r0, [r3, #0]
9001b5b4:	aa10      	add	r2, sp, #64	; 0x40
9001b5b6:	6859      	ldr	r1, [r3, #4]
9001b5b8:	c203      	stmia	r2!, {r0, r1}
9001b5ba:	a80e      	add	r0, sp, #56	; 0x38
9001b5bc:	f7f9 f996 	bl	900148ec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001b5c0:	4621      	mov	r1, r4
9001b5c2:	a810      	add	r0, sp, #64	; 0x40
9001b5c4:	f7f9 f9d6 	bl	90014974 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001b5c8:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
9001b5cc:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	; 0x3e
9001b5d0:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
9001b5d4:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
9001b5d8:	bfdb      	ittet	le
9001b5da:	b2b3      	uxthle	r3, r6
9001b5dc:	f44f 6280 	movle.w	r2, #1024	; 0x400
9001b5e0:	2301      	movgt	r3, #1
9001b5e2:	fb92 f3f3 	sdivle	r3, r2, r3
9001b5e6:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
9001b5ea:	441d      	add	r5, r3
9001b5ec:	fb92 f1f3 	sdiv	r1, r2, r3
9001b5f0:	fa1f fc81 	uxth.w	ip, r1
9001b5f4:	3d01      	subs	r5, #1
9001b5f6:	fb0c 2413 	mls	r4, ip, r3, r2
9001b5fa:	4661      	mov	r1, ip
9001b5fc:	fb14 f406 	smulbb	r4, r4, r6
9001b600:	4404      	add	r4, r0
9001b602:	fb95 f5f3 	sdiv	r5, r5, r3
9001b606:	b2a4      	uxth	r4, r4
9001b608:	b131      	cbz	r1, 9001b618 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x88>
9001b60a:	9b05      	ldr	r3, [sp, #20]
9001b60c:	9901      	ldr	r1, [sp, #4]
9001b60e:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
9001b612:	ba1b      	rev	r3, r3
9001b614:	4419      	add	r1, r3
9001b616:	9101      	str	r1, [sp, #4]
9001b618:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
9001b61c:	b2ad      	uxth	r5, r5
9001b61e:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
9001b622:	4418      	add	r0, r3
9001b624:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
9001b628:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	; 0x46
9001b62c:	00ad      	lsls	r5, r5, #2
9001b62e:	441a      	add	r2, r3
9001b630:	4b76      	ldr	r3, [pc, #472]	; (9001b80c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
9001b632:	f8ad 0040 	strh.w	r0, [sp, #64]	; 0x40
9001b636:	6818      	ldr	r0, [r3, #0]
9001b638:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
9001b63c:	6803      	ldr	r3, [r0, #0]
9001b63e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001b640:	4798      	blx	r3
9001b642:	4973      	ldr	r1, [pc, #460]	; (9001b810 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
9001b644:	f9bd c040 	ldrsh.w	ip, [sp, #64]	; 0x40
9001b648:	2c00      	cmp	r4, #0
9001b64a:	880b      	ldrh	r3, [r1, #0]
9001b64c:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
9001b650:	910d      	str	r1, [sp, #52]	; 0x34
9001b652:	fb03 c202 	mla	r2, r3, r2, ip
9001b656:	bf08      	it	eq
9001b658:	46dc      	moveq	ip, fp
9001b65a:	fb03 f306 	mul.w	r3, r3, r6
9001b65e:	bf18      	it	ne
9001b660:	f04f 0c00 	movne.w	ip, #0
9001b664:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001b668:	f8bd 1008 	ldrh.w	r1, [sp, #8]
9001b66c:	fa1f fc8c 	uxth.w	ip, ip
9001b670:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001b674:	9106      	str	r1, [sp, #24]
9001b676:	9308      	str	r3, [sp, #32]
9001b678:	1d2b      	adds	r3, r5, #4
9001b67a:	9309      	str	r3, [sp, #36]	; 0x24
9001b67c:	9b02      	ldr	r3, [sp, #8]
9001b67e:	43da      	mvns	r2, r3
9001b680:	2300      	movs	r3, #0
9001b682:	b2d2      	uxtb	r2, r2
9001b684:	9303      	str	r3, [sp, #12]
9001b686:	9207      	str	r2, [sp, #28]
9001b688:	9a08      	ldr	r2, [sp, #32]
9001b68a:	4282      	cmp	r2, r0
9001b68c:	f240 80b6 	bls.w	9001b7fc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26c>
9001b690:	b963      	cbnz	r3, 9001b6ac <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
9001b692:	9b01      	ldr	r3, [sp, #4]
9001b694:	781a      	ldrb	r2, [r3, #0]
9001b696:	0993      	lsrs	r3, r2, #6
9001b698:	f002 023f 	and.w	r2, r2, #63	; 0x3f
9001b69c:	9203      	str	r2, [sp, #12]
9001b69e:	1e5a      	subs	r2, r3, #1
9001b6a0:	2a02      	cmp	r2, #2
9001b6a2:	d815      	bhi.n	9001b6d0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x140>
9001b6a4:	9a01      	ldr	r2, [sp, #4]
9001b6a6:	b29b      	uxth	r3, r3
9001b6a8:	3201      	adds	r2, #1
9001b6aa:	9201      	str	r2, [sp, #4]
9001b6ac:	b1b4      	cbz	r4, 9001b6dc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14c>
9001b6ae:	429c      	cmp	r4, r3
9001b6b0:	bf91      	iteee	ls
9001b6b2:	1b1c      	subls	r4, r3, r4
9001b6b4:	1ae4      	subhi	r4, r4, r3
9001b6b6:	4666      	movhi	r6, ip
9001b6b8:	f04f 0800 	movhi.w	r8, #0
9001b6bc:	bf9b      	ittet	ls
9001b6be:	fa1f f884 	uxthls.w	r8, r4
9001b6c2:	2400      	movls	r4, #0
9001b6c4:	b2a4      	uxthhi	r4, r4
9001b6c6:	fa1f f68b 	uxthls.w	r6, fp
9001b6ca:	4643      	mov	r3, r8
9001b6cc:	46b4      	mov	ip, r6
9001b6ce:	e7db      	b.n	9001b688 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf8>
9001b6d0:	9a01      	ldr	r2, [sp, #4]
9001b6d2:	9b01      	ldr	r3, [sp, #4]
9001b6d4:	3202      	adds	r2, #2
9001b6d6:	785b      	ldrb	r3, [r3, #1]
9001b6d8:	9201      	str	r2, [sp, #4]
9001b6da:	e7e7      	b.n	9001b6ac <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
9001b6dc:	2203      	movs	r2, #3
9001b6de:	9909      	ldr	r1, [sp, #36]	; 0x24
9001b6e0:	4563      	cmp	r3, ip
9001b6e2:	4615      	mov	r5, r2
9001b6e4:	9a03      	ldr	r2, [sp, #12]
9001b6e6:	bf2c      	ite	cs
9001b6e8:	eba3 080c 	subcs.w	r8, r3, ip
9001b6ec:	ebac 0603 	subcc.w	r6, ip, r3
9001b6f0:	fb15 1202 	smlabb	r2, r5, r2, r1
9001b6f4:	9905      	ldr	r1, [sp, #20]
9001b6f6:	bf24      	itt	cs
9001b6f8:	fa1f f888 	uxthcs.w	r8, r8
9001b6fc:	46e1      	movcs	r9, ip
9001b6fe:	eb01 0502 	add.w	r5, r1, r2
9001b702:	9902      	ldr	r1, [sp, #8]
9001b704:	bf2f      	iteee	cs
9001b706:	4626      	movcs	r6, r4
9001b708:	b2b6      	uxthcc	r6, r6
9001b70a:	4699      	movcc	r9, r3
9001b70c:	46a0      	movcc	r8, r4
9001b70e:	29ff      	cmp	r1, #255	; 0xff
9001b710:	d04a      	beq.n	9001b7a8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
9001b712:	9f06      	ldr	r7, [sp, #24]
9001b714:	46ca      	mov	sl, r9
9001b716:	78a9      	ldrb	r1, [r5, #2]
9001b718:	9004      	str	r0, [sp, #16]
9001b71a:	4379      	muls	r1, r7
9001b71c:	910a      	str	r1, [sp, #40]	; 0x28
9001b71e:	7869      	ldrb	r1, [r5, #1]
9001b720:	4379      	muls	r1, r7
9001b722:	910b      	str	r1, [sp, #44]	; 0x2c
9001b724:	9905      	ldr	r1, [sp, #20]
9001b726:	5c8a      	ldrb	r2, [r1, r2]
9001b728:	437a      	muls	r2, r7
9001b72a:	920c      	str	r2, [sp, #48]	; 0x30
9001b72c:	f1ba 0f00 	cmp.w	sl, #0
9001b730:	d03d      	beq.n	9001b7ae <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
9001b732:	9a04      	ldr	r2, [sp, #16]
9001b734:	f10a 3aff 	add.w	sl, sl, #4294967295
9001b738:	9f07      	ldr	r7, [sp, #28]
9001b73a:	8812      	ldrh	r2, [r2, #0]
9001b73c:	fa1f fa8a 	uxth.w	sl, sl
9001b740:	46be      	mov	lr, r7
9001b742:	9f0a      	ldr	r7, [sp, #40]	; 0x28
9001b744:	1215      	asrs	r5, r2, #8
9001b746:	10d1      	asrs	r1, r2, #3
9001b748:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
9001b74c:	00d2      	lsls	r2, r2, #3
9001b74e:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
9001b752:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
9001b756:	b2d2      	uxtb	r2, r2
9001b758:	fb05 750e 	mla	r5, r5, lr, r7
9001b75c:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
9001b760:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
9001b762:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001b766:	b2ad      	uxth	r5, r5
9001b768:	fb01 710e 	mla	r1, r1, lr, r7
9001b76c:	9f0c      	ldr	r7, [sp, #48]	; 0x30
9001b76e:	fb02 720e 	mla	r2, r2, lr, r7
9001b772:	f105 0e01 	add.w	lr, r5, #1
9001b776:	b289      	uxth	r1, r1
9001b778:	b292      	uxth	r2, r2
9001b77a:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
9001b77e:	f102 0e01 	add.w	lr, r2, #1
9001b782:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
9001b786:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
9001b78a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001b78e:	4315      	orrs	r5, r2
9001b790:	1c4a      	adds	r2, r1, #1
9001b792:	eb02 2111 	add.w	r1, r2, r1, lsr #8
9001b796:	9a04      	ldr	r2, [sp, #16]
9001b798:	0949      	lsrs	r1, r1, #5
9001b79a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
9001b79e:	430d      	orrs	r5, r1
9001b7a0:	f822 5b02 	strh.w	r5, [r2], #2
9001b7a4:	9204      	str	r2, [sp, #16]
9001b7a6:	e7c1      	b.n	9001b72c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19c>
9001b7a8:	4649      	mov	r1, r9
9001b7aa:	4686      	mov	lr, r0
9001b7ac:	b999      	cbnz	r1, 9001b7d6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x246>
9001b7ae:	4563      	cmp	r3, ip
9001b7b0:	eb00 0049 	add.w	r0, r0, r9, lsl #1
9001b7b4:	d389      	bcc.n	9001b6ca <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
9001b7b6:	fa1f f68b 	uxth.w	r6, fp
9001b7ba:	f8bd 403c 	ldrh.w	r4, [sp, #60]	; 0x3c
9001b7be:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001b7c0:	1ba4      	subs	r4, r4, r6
9001b7c2:	881b      	ldrh	r3, [r3, #0]
9001b7c4:	b2a4      	uxth	r4, r4
9001b7c6:	eba3 030b 	sub.w	r3, r3, fp
9001b7ca:	2c00      	cmp	r4, #0
9001b7cc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001b7d0:	bf18      	it	ne
9001b7d2:	2600      	movne	r6, #0
9001b7d4:	e779      	b.n	9001b6ca <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
9001b7d6:	78aa      	ldrb	r2, [r5, #2]
9001b7d8:	3901      	subs	r1, #1
9001b7da:	4f0e      	ldr	r7, [pc, #56]	; (9001b814 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x284>)
9001b7dc:	b289      	uxth	r1, r1
9001b7de:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
9001b7e2:	786a      	ldrb	r2, [r5, #1]
9001b7e4:	00d2      	lsls	r2, r2, #3
9001b7e6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001b7ea:	ea4a 0202 	orr.w	r2, sl, r2
9001b7ee:	f895 a000 	ldrb.w	sl, [r5]
9001b7f2:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
9001b7f6:	f82e 2b02 	strh.w	r2, [lr], #2
9001b7fa:	e7d7      	b.n	9001b7ac <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21c>
9001b7fc:	4b03      	ldr	r3, [pc, #12]	; (9001b80c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
9001b7fe:	6818      	ldr	r0, [r3, #0]
9001b800:	6803      	ldr	r3, [r0, #0]
9001b802:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001b804:	4798      	blx	r3
9001b806:	b013      	add	sp, #76	; 0x4c
9001b808:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001b80c:	2402357c 	.word	0x2402357c
9001b810:	24023576 	.word	0x24023576
9001b814:	fffff800 	.word	0xfffff800

9001b818 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
9001b818:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001b81c:	b09d      	sub	sp, #116	; 0x74
9001b81e:	461c      	mov	r4, r3
9001b820:	4683      	mov	fp, r0
9001b822:	9b26      	ldr	r3, [sp, #152]	; 0x98
9001b824:	e9cd 1211 	strd	r1, r2, [sp, #68]	; 0x44
9001b828:	f89d 209c 	ldrb.w	r2, [sp, #156]	; 0x9c
9001b82c:	920e      	str	r2, [sp, #56]	; 0x38
9001b82e:	2a00      	cmp	r2, #0
9001b830:	f000 81e4 	beq.w	9001bbfc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>
9001b834:	6820      	ldr	r0, [r4, #0]
9001b836:	aa18      	add	r2, sp, #96	; 0x60
9001b838:	6861      	ldr	r1, [r4, #4]
9001b83a:	c203      	stmia	r2!, {r0, r1}
9001b83c:	6818      	ldr	r0, [r3, #0]
9001b83e:	aa1a      	add	r2, sp, #104	; 0x68
9001b840:	6859      	ldr	r1, [r3, #4]
9001b842:	c203      	stmia	r2!, {r0, r1}
9001b844:	a818      	add	r0, sp, #96	; 0x60
9001b846:	f7f9 f851 	bl	900148ec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001b84a:	4621      	mov	r1, r4
9001b84c:	a81a      	add	r0, sp, #104	; 0x68
9001b84e:	f7f9 f891 	bl	90014974 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001b852:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	; 0x64
9001b856:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	; 0x66
9001b85a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
9001b85e:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
9001b862:	bfdb      	ittet	le
9001b864:	b29a      	uxthle	r2, r3
9001b866:	f44f 6180 	movle.w	r1, #1024	; 0x400
9001b86a:	2201      	movgt	r2, #1
9001b86c:	fb91 f2f2 	sdivle	r2, r1, r2
9001b870:	9202      	str	r2, [sp, #8]
9001b872:	9802      	ldr	r0, [sp, #8]
9001b874:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	; 0x6a
9001b878:	9902      	ldr	r1, [sp, #8]
9001b87a:	fb92 f0f0 	sdiv	r0, r2, r0
9001b87e:	b280      	uxth	r0, r0
9001b880:	440c      	add	r4, r1
9001b882:	900f      	str	r0, [sp, #60]	; 0x3c
9001b884:	3c01      	subs	r4, #1
9001b886:	9802      	ldr	r0, [sp, #8]
9001b888:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
9001b88a:	fb05 2510 	mls	r5, r5, r0, r2
9001b88e:	fb94 f4f1 	sdiv	r4, r4, r1
9001b892:	fb15 f503 	smulbb	r5, r5, r3
9001b896:	f8bd 1068 	ldrh.w	r1, [sp, #104]	; 0x68
9001b89a:	f8bd 3060 	ldrh.w	r3, [sp, #96]	; 0x60
9001b89e:	3401      	adds	r4, #1
9001b8a0:	440d      	add	r5, r1
9001b8a2:	4419      	add	r1, r3
9001b8a4:	f8bd 3062 	ldrh.w	r3, [sp, #98]	; 0x62
9001b8a8:	b2a4      	uxth	r4, r4
9001b8aa:	441a      	add	r2, r3
9001b8ac:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
9001b8b0:	f8ad 1068 	strh.w	r1, [sp, #104]	; 0x68
9001b8b4:	00a4      	lsls	r4, r4, #2
9001b8b6:	9306      	str	r3, [sp, #24]
9001b8b8:	b2ad      	uxth	r5, r5
9001b8ba:	4bb3      	ldr	r3, [pc, #716]	; (9001bb88 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
9001b8bc:	f8ad 206a 	strh.w	r2, [sp, #106]	; 0x6a
9001b8c0:	6818      	ldr	r0, [r3, #0]
9001b8c2:	6803      	ldr	r3, [r0, #0]
9001b8c4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001b8c6:	4798      	blx	r3
9001b8c8:	4bb0      	ldr	r3, [pc, #704]	; (9001bb8c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>)
9001b8ca:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	; 0x6a
9001b8ce:	2d00      	cmp	r5, #0
9001b8d0:	881a      	ldrh	r2, [r3, #0]
9001b8d2:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	; 0x68
9001b8d6:	fb02 f606 	mul.w	r6, r2, r6
9001b8da:	fb02 7101 	mla	r1, r2, r1, r7
9001b8de:	9316      	str	r3, [sp, #88]	; 0x58
9001b8e0:	eb00 0841 	add.w	r8, r0, r1, lsl #1
9001b8e4:	4baa      	ldr	r3, [pc, #680]	; (9001bb90 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x378>)
9001b8e6:	bf18      	it	ne
9001b8e8:	2100      	movne	r1, #0
9001b8ea:	eb08 0246 	add.w	r2, r8, r6, lsl #1
9001b8ee:	eba3 030b 	sub.w	r3, r3, fp
9001b8f2:	920a      	str	r2, [sp, #40]	; 0x28
9001b8f4:	f104 0204 	add.w	r2, r4, #4
9001b8f8:	9317      	str	r3, [sp, #92]	; 0x5c
9001b8fa:	9213      	str	r2, [sp, #76]	; 0x4c
9001b8fc:	9a06      	ldr	r2, [sp, #24]
9001b8fe:	bf08      	it	eq
9001b900:	4611      	moveq	r1, r2
9001b902:	2200      	movs	r2, #0
9001b904:	b289      	uxth	r1, r1
9001b906:	920d      	str	r2, [sp, #52]	; 0x34
9001b908:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001b90a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001b90c:	fa12 f383 	uxtah	r3, r2, r3
9001b910:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001b912:	eb02 0383 	add.w	r3, r2, r3, lsl #2
9001b916:	3304      	adds	r3, #4
9001b918:	9308      	str	r3, [sp, #32]
9001b91a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001b91c:	4543      	cmp	r3, r8
9001b91e:	f240 8168 	bls.w	9001bbf2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3da>
9001b922:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
9001b926:	f04f 0e01 	mov.w	lr, #1
9001b92a:	9a02      	ldr	r2, [sp, #8]
9001b92c:	9808      	ldr	r0, [sp, #32]
9001b92e:	fbb5 f3f3 	udiv	r3, r5, r3
9001b932:	1ad3      	subs	r3, r2, r3
9001b934:	7800      	ldrb	r0, [r0, #0]
9001b936:	b29b      	uxth	r3, r3
9001b938:	9010      	str	r0, [sp, #64]	; 0x40
9001b93a:	3001      	adds	r0, #1
9001b93c:	9314      	str	r3, [sp, #80]	; 0x50
9001b93e:	9b08      	ldr	r3, [sp, #32]
9001b940:	9007      	str	r0, [sp, #28]
9001b942:	785a      	ldrb	r2, [r3, #1]
9001b944:	789b      	ldrb	r3, [r3, #2]
9001b946:	021b      	lsls	r3, r3, #8
9001b948:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9001b94c:	9a08      	ldr	r2, [sp, #32]
9001b94e:	78d2      	ldrb	r2, [r2, #3]
9001b950:	4313      	orrs	r3, r2
9001b952:	9a11      	ldr	r2, [sp, #68]	; 0x44
9001b954:	441a      	add	r2, r3
9001b956:	1c50      	adds	r0, r2, #1
9001b958:	7852      	ldrb	r2, [r2, #1]
9001b95a:	9005      	str	r0, [sp, #20]
9001b95c:	0212      	lsls	r2, r2, #8
9001b95e:	9811      	ldr	r0, [sp, #68]	; 0x44
9001b960:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
9001b964:	5cc3      	ldrb	r3, [r0, r3]
9001b966:	431a      	orrs	r2, r3
9001b968:	b293      	uxth	r3, r2
9001b96a:	f88b 2804 	strb.w	r2, [fp, #2052]	; 0x804
9001b96e:	930b      	str	r3, [sp, #44]	; 0x2c
9001b970:	2300      	movs	r3, #0
9001b972:	9309      	str	r3, [sp, #36]	; 0x24
9001b974:	2301      	movs	r3, #1
9001b976:	9301      	str	r3, [sp, #4]
9001b978:	9304      	str	r3, [sp, #16]
9001b97a:	2300      	movs	r3, #0
9001b97c:	9303      	str	r3, [sp, #12]
9001b97e:	2d00      	cmp	r5, #0
9001b980:	d07d      	beq.n	9001ba7e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x266>
9001b982:	45ae      	cmp	lr, r5
9001b984:	d26c      	bcs.n	9001ba60 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x248>
9001b986:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001b988:	eba5 050e 	sub.w	r5, r5, lr
9001b98c:	460c      	mov	r4, r1
9001b98e:	4543      	cmp	r3, r8
9001b990:	b2ad      	uxth	r5, r5
9001b992:	d802      	bhi.n	9001b99a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x182>
9001b994:	e071      	b.n	9001ba7a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x262>
9001b996:	2b00      	cmp	r3, #0
9001b998:	d15d      	bne.n	9001ba56 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x23e>
9001b99a:	9b05      	ldr	r3, [sp, #20]
9001b99c:	9a04      	ldr	r2, [sp, #16]
9001b99e:	785b      	ldrb	r3, [r3, #1]
9001b9a0:	f1c2 0207 	rsb	r2, r2, #7
9001b9a4:	9904      	ldr	r1, [sp, #16]
9001b9a6:	4093      	lsls	r3, r2
9001b9a8:	005b      	lsls	r3, r3, #1
9001b9aa:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
9001b9ae:	9b05      	ldr	r3, [sp, #20]
9001b9b0:	781b      	ldrb	r3, [r3, #0]
9001b9b2:	410b      	asrs	r3, r1
9001b9b4:	3101      	adds	r1, #1
9001b9b6:	b2c9      	uxtb	r1, r1
9001b9b8:	b2db      	uxtb	r3, r3
9001b9ba:	2908      	cmp	r1, #8
9001b9bc:	9104      	str	r1, [sp, #16]
9001b9be:	9905      	ldr	r1, [sp, #20]
9001b9c0:	ea43 0302 	orr.w	r3, r3, r2
9001b9c4:	bf0c      	ite	eq
9001b9c6:	3102      	addeq	r1, #2
9001b9c8:	3101      	addne	r1, #1
9001b9ca:	b29a      	uxth	r2, r3
9001b9cc:	bf05      	ittet	eq
9001b9ce:	9105      	streq	r1, [sp, #20]
9001b9d0:	2100      	moveq	r1, #0
9001b9d2:	9105      	strne	r1, [sp, #20]
9001b9d4:	9104      	streq	r1, [sp, #16]
9001b9d6:	9910      	ldr	r1, [sp, #64]	; 0x40
9001b9d8:	4291      	cmp	r1, r2
9001b9da:	d30a      	bcc.n	9001b9f2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1da>
9001b9dc:	f88b 3804 	strb.w	r3, [fp, #2052]	; 0x804
9001b9e0:	2301      	movs	r3, #1
9001b9e2:	9907      	ldr	r1, [sp, #28]
9001b9e4:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
9001b9e8:	d30f      	bcc.n	9001ba0a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1f2>
9001b9ea:	2100      	movs	r1, #0
9001b9ec:	9301      	str	r3, [sp, #4]
9001b9ee:	9103      	str	r1, [sp, #12]
9001b9f0:	e032      	b.n	9001ba58 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
9001b9f2:	9b07      	ldr	r3, [sp, #28]
9001b9f4:	429a      	cmp	r2, r3
9001b9f6:	d318      	bcc.n	9001ba2a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x212>
9001b9f8:	9b01      	ldr	r3, [sp, #4]
9001b9fa:	f89b 1804 	ldrb.w	r1, [fp, #2052]	; 0x804
9001b9fe:	445b      	add	r3, fp
9001ba00:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
9001ba04:	9b01      	ldr	r3, [sp, #4]
9001ba06:	3301      	adds	r3, #1
9001ba08:	b29b      	uxth	r3, r3
9001ba0a:	9907      	ldr	r1, [sp, #28]
9001ba0c:	f89b 0804 	ldrb.w	r0, [fp, #2052]	; 0x804
9001ba10:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
9001ba14:	7108      	strb	r0, [r1, #4]
9001ba16:	980b      	ldr	r0, [sp, #44]	; 0x2c
9001ba18:	80c8      	strh	r0, [r1, #6]
9001ba1a:	9801      	ldr	r0, [sp, #4]
9001ba1c:	3001      	adds	r0, #1
9001ba1e:	7148      	strb	r0, [r1, #5]
9001ba20:	9907      	ldr	r1, [sp, #28]
9001ba22:	3101      	adds	r1, #1
9001ba24:	b289      	uxth	r1, r1
9001ba26:	9107      	str	r1, [sp, #28]
9001ba28:	e7df      	b.n	9001b9ea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
9001ba2a:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
9001ba2e:	4611      	mov	r1, r2
9001ba30:	795b      	ldrb	r3, [r3, #5]
9001ba32:	f603 0004 	addw	r0, r3, #2052	; 0x804
9001ba36:	4458      	add	r0, fp
9001ba38:	9e17      	ldr	r6, [sp, #92]	; 0x5c
9001ba3a:	4406      	add	r6, r0
9001ba3c:	2e00      	cmp	r6, #0
9001ba3e:	dd06      	ble.n	9001ba4e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
9001ba40:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
9001ba44:	790e      	ldrb	r6, [r1, #4]
9001ba46:	f800 6d01 	strb.w	r6, [r0, #-1]!
9001ba4a:	88c9      	ldrh	r1, [r1, #6]
9001ba4c:	e7f4      	b.n	9001ba38 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x220>
9001ba4e:	f88b 1804 	strb.w	r1, [fp, #2052]	; 0x804
9001ba52:	b29b      	uxth	r3, r3
9001ba54:	e7c5      	b.n	9001b9e2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
9001ba56:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
9001ba58:	4621      	mov	r1, r4
9001ba5a:	920b      	str	r2, [sp, #44]	; 0x2c
9001ba5c:	469e      	mov	lr, r3
9001ba5e:	e78e      	b.n	9001b97e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x166>
9001ba60:	9a03      	ldr	r2, [sp, #12]
9001ba62:	ebae 0305 	sub.w	r3, lr, r5
9001ba66:	f8bd 4018 	ldrh.w	r4, [sp, #24]
9001ba6a:	442a      	add	r2, r5
9001ba6c:	b29b      	uxth	r3, r3
9001ba6e:	b292      	uxth	r2, r2
9001ba70:	9203      	str	r2, [sp, #12]
9001ba72:	2500      	movs	r5, #0
9001ba74:	9a0a      	ldr	r2, [sp, #40]	; 0x28
9001ba76:	4542      	cmp	r2, r8
9001ba78:	d88d      	bhi.n	9001b996 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17e>
9001ba7a:	4621      	mov	r1, r4
9001ba7c:	e74d      	b.n	9001b91a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x102>
9001ba7e:	458e      	cmp	lr, r1
9001ba80:	f04f 0900 	mov.w	r9, #0
9001ba84:	bf2b      	itete	cs
9001ba86:	ebae 0301 	subcs.w	r3, lr, r1
9001ba8a:	eba1 040e 	subcc.w	r4, r1, lr
9001ba8e:	462c      	movcs	r4, r5
9001ba90:	462b      	movcc	r3, r5
9001ba92:	bf27      	ittee	cs
9001ba94:	b29b      	uxthcs	r3, r3
9001ba96:	910c      	strcs	r1, [sp, #48]	; 0x30
9001ba98:	b2a4      	uxthcc	r4, r4
9001ba9a:	f8cd e030 	strcc.w	lr, [sp, #48]	; 0x30
9001ba9e:	9a03      	ldr	r2, [sp, #12]
9001baa0:	980c      	ldr	r0, [sp, #48]	; 0x30
9001baa2:	444a      	add	r2, r9
9001baa4:	4548      	cmp	r0, r9
9001baa6:	b292      	uxth	r2, r2
9001baa8:	d074      	beq.n	9001bb94 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x37c>
9001baaa:	2004      	movs	r0, #4
9001baac:	445a      	add	r2, fp
9001baae:	4605      	mov	r5, r0
9001bab0:	f892 2804 	ldrb.w	r2, [r2, #2052]	; 0x804
9001bab4:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001bab6:	fb15 0202 	smlabb	r2, r5, r2, r0
9001baba:	9812      	ldr	r0, [sp, #72]	; 0x48
9001babc:	5880      	ldr	r0, [r0, r2]
9001babe:	ea5f 6a10 	movs.w	sl, r0, lsr #24
9001bac2:	d014      	beq.n	9001baee <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
9001bac4:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
9001bac8:	ea4f 2510 	mov.w	r5, r0, lsr #8
9001bacc:	d112      	bne.n	9001baf4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
9001bace:	9a0e      	ldr	r2, [sp, #56]	; 0x38
9001bad0:	2aff      	cmp	r2, #255	; 0xff
9001bad2:	d10f      	bne.n	9001baf4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
9001bad4:	0942      	lsrs	r2, r0, #5
9001bad6:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
9001bada:	f3c0 00c4 	ubfx	r0, r0, #3, #5
9001bade:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001bae2:	f025 0507 	bic.w	r5, r5, #7
9001bae6:	4315      	orrs	r5, r2
9001bae8:	4305      	orrs	r5, r0
9001baea:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
9001baee:	f109 0901 	add.w	r9, r9, #1
9001baf2:	e7d4      	b.n	9001ba9e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x286>
9001baf4:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
9001baf8:	b2ed      	uxtb	r5, r5
9001bafa:	ea4f 06ec 	mov.w	r6, ip, asr #3
9001bafe:	ea4f 272c 	mov.w	r7, ip, asr #8
9001bb02:	f006 02fc 	and.w	r2, r6, #252	; 0xfc
9001bb06:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001bb0a:	f3c0 4607 	ubfx	r6, r0, #16, #8
9001bb0e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001bb12:	9215      	str	r2, [sp, #84]	; 0x54
9001bb14:	fa5f fc8c 	uxtb.w	ip, ip
9001bb18:	9a0e      	ldr	r2, [sp, #56]	; 0x38
9001bb1a:	b2c0      	uxtb	r0, r0
9001bb1c:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
9001bb20:	fb02 fa0a 	mul.w	sl, r2, sl
9001bb24:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
9001bb28:	f10a 0201 	add.w	r2, sl, #1
9001bb2c:	eb02 222a 	add.w	r2, r2, sl, asr #8
9001bb30:	1212      	asrs	r2, r2, #8
9001bb32:	fa1f fa82 	uxth.w	sl, r2
9001bb36:	43d2      	mvns	r2, r2
9001bb38:	fb16 f60a 	smulbb	r6, r6, sl
9001bb3c:	b2d2      	uxtb	r2, r2
9001bb3e:	fb10 f00a 	smulbb	r0, r0, sl
9001bb42:	fb07 6702 	mla	r7, r7, r2, r6
9001bb46:	9e15      	ldr	r6, [sp, #84]	; 0x54
9001bb48:	fb0c 0002 	mla	r0, ip, r2, r0
9001bb4c:	fb15 f50a 	smulbb	r5, r5, sl
9001bb50:	b2bf      	uxth	r7, r7
9001bb52:	b280      	uxth	r0, r0
9001bb54:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
9001bb58:	fb06 5602 	mla	r6, r6, r2, r5
9001bb5c:	1c7a      	adds	r2, r7, #1
9001bb5e:	1c45      	adds	r5, r0, #1
9001bb60:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001bb64:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001bb68:	b2b6      	uxth	r6, r6
9001bb6a:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
9001bb6e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001bb72:	432f      	orrs	r7, r5
9001bb74:	1c75      	adds	r5, r6, #1
9001bb76:	eb05 2516 	add.w	r5, r5, r6, lsr #8
9001bb7a:	096d      	lsrs	r5, r5, #5
9001bb7c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001bb80:	432f      	orrs	r7, r5
9001bb82:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
9001bb86:	e7b2      	b.n	9001baee <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
9001bb88:	2402357c 	.word	0x2402357c
9001bb8c:	24023576 	.word	0x24023576
9001bb90:	fffff7fb 	.word	0xfffff7fb
9001bb94:	9203      	str	r2, [sp, #12]
9001bb96:	458e      	cmp	lr, r1
9001bb98:	9a0c      	ldr	r2, [sp, #48]	; 0x30
9001bb9a:	eb08 0842 	add.w	r8, r8, r2, lsl #1
9001bb9e:	f4ff af68 	bcc.w	9001ba72 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
9001bba2:	9a16      	ldr	r2, [sp, #88]	; 0x58
9001bba4:	9906      	ldr	r1, [sp, #24]
9001bba6:	8812      	ldrh	r2, [r2, #0]
9001bba8:	1a52      	subs	r2, r2, r1
9001bbaa:	9914      	ldr	r1, [sp, #80]	; 0x50
9001bbac:	eb08 0842 	add.w	r8, r8, r2, lsl #1
9001bbb0:	9a09      	ldr	r2, [sp, #36]	; 0x24
9001bbb2:	3201      	adds	r2, #1
9001bbb4:	428a      	cmp	r2, r1
9001bbb6:	9209      	str	r2, [sp, #36]	; 0x24
9001bbb8:	d111      	bne.n	9001bbde <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3c6>
9001bbba:	f8bd 5068 	ldrh.w	r5, [sp, #104]	; 0x68
9001bbbe:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
9001bbc2:	9b06      	ldr	r3, [sp, #24]
9001bbc4:	eba5 0509 	sub.w	r5, r5, r9
9001bbc8:	b2ad      	uxth	r5, r5
9001bbca:	2d00      	cmp	r5, #0
9001bbcc:	bf08      	it	eq
9001bbce:	4619      	moveq	r1, r3
9001bbd0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001bbd2:	bf18      	it	ne
9001bbd4:	2100      	movne	r1, #0
9001bbd6:	3301      	adds	r3, #1
9001bbd8:	b289      	uxth	r1, r1
9001bbda:	930d      	str	r3, [sp, #52]	; 0x34
9001bbdc:	e694      	b.n	9001b908 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf0>
9001bbde:	f8bd 4018 	ldrh.w	r4, [sp, #24]
9001bbe2:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
9001bbe6:	1b2d      	subs	r5, r5, r4
9001bbe8:	b2ad      	uxth	r5, r5
9001bbea:	2d00      	cmp	r5, #0
9001bbec:	bf18      	it	ne
9001bbee:	2400      	movne	r4, #0
9001bbf0:	e740      	b.n	9001ba74 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25c>
9001bbf2:	4b04      	ldr	r3, [pc, #16]	; (9001bc04 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3ec>)
9001bbf4:	6818      	ldr	r0, [r3, #0]
9001bbf6:	6803      	ldr	r3, [r0, #0]
9001bbf8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001bbfa:	4798      	blx	r3
9001bbfc:	b01d      	add	sp, #116	; 0x74
9001bbfe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001bc02:	bf00      	nop
9001bc04:	2402357c 	.word	0x2402357c

9001bc08 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
9001bc08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001bc0c:	b09f      	sub	sp, #124	; 0x7c
9001bc0e:	461d      	mov	r5, r3
9001bc10:	4604      	mov	r4, r0
9001bc12:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9001bc14:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
9001bc18:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
9001bc1c:	920a      	str	r2, [sp, #40]	; 0x28
9001bc1e:	2a00      	cmp	r2, #0
9001bc20:	f000 81fe 	beq.w	9001c020 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>
9001bc24:	6828      	ldr	r0, [r5, #0]
9001bc26:	aa1a      	add	r2, sp, #104	; 0x68
9001bc28:	6869      	ldr	r1, [r5, #4]
9001bc2a:	c203      	stmia	r2!, {r0, r1}
9001bc2c:	6818      	ldr	r0, [r3, #0]
9001bc2e:	aa1c      	add	r2, sp, #112	; 0x70
9001bc30:	6859      	ldr	r1, [r3, #4]
9001bc32:	c203      	stmia	r2!, {r0, r1}
9001bc34:	a81a      	add	r0, sp, #104	; 0x68
9001bc36:	f7f8 fe59 	bl	900148ec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001bc3a:	4629      	mov	r1, r5
9001bc3c:	a81c      	add	r0, sp, #112	; 0x70
9001bc3e:	f7f8 fe99 	bl	90014974 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001bc42:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
9001bc46:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
9001bc4a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
9001bc4e:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	; 0x76
9001bc52:	bfdb      	ittet	le
9001bc54:	b29a      	uxthle	r2, r3
9001bc56:	f44f 6180 	movle.w	r1, #1024	; 0x400
9001bc5a:	2201      	movgt	r2, #1
9001bc5c:	fb91 f2f2 	sdivle	r2, r1, r2
9001bc60:	9201      	str	r2, [sp, #4]
9001bc62:	9801      	ldr	r0, [sp, #4]
9001bc64:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
9001bc68:	9901      	ldr	r1, [sp, #4]
9001bc6a:	fb92 f0f0 	sdiv	r0, r2, r0
9001bc6e:	b280      	uxth	r0, r0
9001bc70:	440e      	add	r6, r1
9001bc72:	9010      	str	r0, [sp, #64]	; 0x40
9001bc74:	3e01      	subs	r6, #1
9001bc76:	9801      	ldr	r0, [sp, #4]
9001bc78:	9d10      	ldr	r5, [sp, #64]	; 0x40
9001bc7a:	fb05 2510 	mls	r5, r5, r0, r2
9001bc7e:	fb96 f6f1 	sdiv	r6, r6, r1
9001bc82:	fb15 f503 	smulbb	r5, r5, r3
9001bc86:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
9001bc8a:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
9001bc8e:	3601      	adds	r6, #1
9001bc90:	440d      	add	r5, r1
9001bc92:	4419      	add	r1, r3
9001bc94:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
9001bc98:	b2b6      	uxth	r6, r6
9001bc9a:	441a      	add	r2, r3
9001bc9c:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
9001bca0:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
9001bca4:	b2ad      	uxth	r5, r5
9001bca6:	9304      	str	r3, [sp, #16]
9001bca8:	4b96      	ldr	r3, [pc, #600]	; (9001bf04 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
9001bcaa:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
9001bcae:	6818      	ldr	r0, [r3, #0]
9001bcb0:	6803      	ldr	r3, [r0, #0]
9001bcb2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001bcb4:	4798      	blx	r3
9001bcb6:	4b94      	ldr	r3, [pc, #592]	; (9001bf08 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>)
9001bcb8:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
9001bcbc:	2d00      	cmp	r5, #0
9001bcbe:	881a      	ldrh	r2, [r3, #0]
9001bcc0:	f9bd c070 	ldrsh.w	ip, [sp, #112]	; 0x70
9001bcc4:	fb02 f707 	mul.w	r7, r2, r7
9001bcc8:	fb02 c101 	mla	r1, r2, r1, ip
9001bccc:	9318      	str	r3, [sp, #96]	; 0x60
9001bcce:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
9001bcd2:	4b8e      	ldr	r3, [pc, #568]	; (9001bf0c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x304>)
9001bcd4:	bf18      	it	ne
9001bcd6:	2100      	movne	r1, #0
9001bcd8:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
9001bcdc:	eba3 0304 	sub.w	r3, r3, r4
9001bce0:	920b      	str	r2, [sp, #44]	; 0x2c
9001bce2:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001bce4:	9319      	str	r3, [sp, #100]	; 0x64
9001bce6:	eb02 0686 	add.w	r6, r2, r6, lsl #2
9001bcea:	f106 0204 	add.w	r2, r6, #4
9001bcee:	9206      	str	r2, [sp, #24]
9001bcf0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
9001bcf2:	ea6f 0202 	mvn.w	r2, r2
9001bcf6:	b2d2      	uxtb	r2, r2
9001bcf8:	9215      	str	r2, [sp, #84]	; 0x54
9001bcfa:	9a04      	ldr	r2, [sp, #16]
9001bcfc:	bf08      	it	eq
9001bcfe:	4611      	moveq	r1, r2
9001bd00:	2200      	movs	r2, #0
9001bd02:	b289      	uxth	r1, r1
9001bd04:	920d      	str	r2, [sp, #52]	; 0x34
9001bd06:	9a10      	ldr	r2, [sp, #64]	; 0x40
9001bd08:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001bd0a:	fa12 f383 	uxtah	r3, r2, r3
9001bd0e:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001bd10:	eb02 0383 	add.w	r3, r2, r3, lsl #2
9001bd14:	3304      	adds	r3, #4
9001bd16:	9307      	str	r3, [sp, #28]
9001bd18:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001bd1a:	455b      	cmp	r3, fp
9001bd1c:	f240 817b 	bls.w	9001c016 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x40e>
9001bd20:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
9001bd24:	f04f 0801 	mov.w	r8, #1
9001bd28:	9a01      	ldr	r2, [sp, #4]
9001bd2a:	9807      	ldr	r0, [sp, #28]
9001bd2c:	46c4      	mov	ip, r8
9001bd2e:	f8cd 8008 	str.w	r8, [sp, #8]
9001bd32:	7800      	ldrb	r0, [r0, #0]
9001bd34:	fbb5 f3f3 	udiv	r3, r5, r3
9001bd38:	1ad3      	subs	r3, r2, r3
9001bd3a:	9011      	str	r0, [sp, #68]	; 0x44
9001bd3c:	3001      	adds	r0, #1
9001bd3e:	b29b      	uxth	r3, r3
9001bd40:	9005      	str	r0, [sp, #20]
9001bd42:	9316      	str	r3, [sp, #88]	; 0x58
9001bd44:	9b07      	ldr	r3, [sp, #28]
9001bd46:	785a      	ldrb	r2, [r3, #1]
9001bd48:	789b      	ldrb	r3, [r3, #2]
9001bd4a:	021b      	lsls	r3, r3, #8
9001bd4c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9001bd50:	9a07      	ldr	r2, [sp, #28]
9001bd52:	78d2      	ldrb	r2, [r2, #3]
9001bd54:	4313      	orrs	r3, r2
9001bd56:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001bd58:	441a      	add	r2, r3
9001bd5a:	1c50      	adds	r0, r2, #1
9001bd5c:	7852      	ldrb	r2, [r2, #1]
9001bd5e:	9003      	str	r0, [sp, #12]
9001bd60:	0212      	lsls	r2, r2, #8
9001bd62:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001bd64:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
9001bd68:	5cc3      	ldrb	r3, [r0, r3]
9001bd6a:	431a      	orrs	r2, r3
9001bd6c:	b293      	uxth	r3, r2
9001bd6e:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
9001bd72:	930c      	str	r3, [sp, #48]	; 0x30
9001bd74:	2300      	movs	r3, #0
9001bd76:	9308      	str	r3, [sp, #32]
9001bd78:	461a      	mov	r2, r3
9001bd7a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
9001bd7e:	930e      	str	r3, [sp, #56]	; 0x38
9001bd80:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
9001bd84:	930f      	str	r3, [sp, #60]	; 0x3c
9001bd86:	2d00      	cmp	r5, #0
9001bd88:	d07d      	beq.n	9001be86 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27e>
9001bd8a:	45ac      	cmp	ip, r5
9001bd8c:	d26d      	bcs.n	9001be6a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x262>
9001bd8e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001bd90:	eba5 050c 	sub.w	r5, r5, ip
9001bd94:	4608      	mov	r0, r1
9001bd96:	455b      	cmp	r3, fp
9001bd98:	b2ad      	uxth	r5, r5
9001bd9a:	d802      	bhi.n	9001bda2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19a>
9001bd9c:	e071      	b.n	9001be82 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27a>
9001bd9e:	2b00      	cmp	r3, #0
9001bda0:	d15d      	bne.n	9001be5e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
9001bda2:	9b03      	ldr	r3, [sp, #12]
9001bda4:	9a02      	ldr	r2, [sp, #8]
9001bda6:	785b      	ldrb	r3, [r3, #1]
9001bda8:	f1c2 0207 	rsb	r2, r2, #7
9001bdac:	9902      	ldr	r1, [sp, #8]
9001bdae:	4093      	lsls	r3, r2
9001bdb0:	005b      	lsls	r3, r3, #1
9001bdb2:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
9001bdb6:	9b03      	ldr	r3, [sp, #12]
9001bdb8:	781b      	ldrb	r3, [r3, #0]
9001bdba:	410b      	asrs	r3, r1
9001bdbc:	3101      	adds	r1, #1
9001bdbe:	b2c9      	uxtb	r1, r1
9001bdc0:	b2db      	uxtb	r3, r3
9001bdc2:	2908      	cmp	r1, #8
9001bdc4:	9102      	str	r1, [sp, #8]
9001bdc6:	9903      	ldr	r1, [sp, #12]
9001bdc8:	ea43 0302 	orr.w	r3, r3, r2
9001bdcc:	bf0c      	ite	eq
9001bdce:	3102      	addeq	r1, #2
9001bdd0:	3101      	addne	r1, #1
9001bdd2:	b29a      	uxth	r2, r3
9001bdd4:	bf05      	ittet	eq
9001bdd6:	9103      	streq	r1, [sp, #12]
9001bdd8:	2100      	moveq	r1, #0
9001bdda:	9103      	strne	r1, [sp, #12]
9001bddc:	9102      	streq	r1, [sp, #8]
9001bdde:	9911      	ldr	r1, [sp, #68]	; 0x44
9001bde0:	4291      	cmp	r1, r2
9001bde2:	d30a      	bcc.n	9001bdfa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1f2>
9001bde4:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
9001bde8:	2301      	movs	r3, #1
9001bdea:	9905      	ldr	r1, [sp, #20]
9001bdec:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
9001bdf0:	d30f      	bcc.n	9001be12 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x20a>
9001bdf2:	2100      	movs	r1, #0
9001bdf4:	4698      	mov	r8, r3
9001bdf6:	9100      	str	r1, [sp, #0]
9001bdf8:	e032      	b.n	9001be60 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x258>
9001bdfa:	9b05      	ldr	r3, [sp, #20]
9001bdfc:	429a      	cmp	r2, r3
9001bdfe:	d318      	bcc.n	9001be32 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22a>
9001be00:	eb04 0308 	add.w	r3, r4, r8
9001be04:	f894 1804 	ldrb.w	r1, [r4, #2052]	; 0x804
9001be08:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
9001be0c:	f108 0301 	add.w	r3, r8, #1
9001be10:	b29b      	uxth	r3, r3
9001be12:	9905      	ldr	r1, [sp, #20]
9001be14:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
9001be18:	eb04 0181 	add.w	r1, r4, r1, lsl #2
9001be1c:	710e      	strb	r6, [r1, #4]
9001be1e:	9e0c      	ldr	r6, [sp, #48]	; 0x30
9001be20:	80ce      	strh	r6, [r1, #6]
9001be22:	f108 0601 	add.w	r6, r8, #1
9001be26:	714e      	strb	r6, [r1, #5]
9001be28:	9905      	ldr	r1, [sp, #20]
9001be2a:	3101      	adds	r1, #1
9001be2c:	b289      	uxth	r1, r1
9001be2e:	9105      	str	r1, [sp, #20]
9001be30:	e7df      	b.n	9001bdf2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1ea>
9001be32:	eb04 0382 	add.w	r3, r4, r2, lsl #2
9001be36:	4611      	mov	r1, r2
9001be38:	795b      	ldrb	r3, [r3, #5]
9001be3a:	f603 0604 	addw	r6, r3, #2052	; 0x804
9001be3e:	4426      	add	r6, r4
9001be40:	9f19      	ldr	r7, [sp, #100]	; 0x64
9001be42:	4437      	add	r7, r6
9001be44:	2f00      	cmp	r7, #0
9001be46:	dd06      	ble.n	9001be56 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24e>
9001be48:	eb04 0181 	add.w	r1, r4, r1, lsl #2
9001be4c:	790f      	ldrb	r7, [r1, #4]
9001be4e:	f806 7d01 	strb.w	r7, [r6, #-1]!
9001be52:	88c9      	ldrh	r1, [r1, #6]
9001be54:	e7f4      	b.n	9001be40 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x238>
9001be56:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
9001be5a:	b29b      	uxth	r3, r3
9001be5c:	e7c5      	b.n	9001bdea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e2>
9001be5e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
9001be60:	920c      	str	r2, [sp, #48]	; 0x30
9001be62:	4601      	mov	r1, r0
9001be64:	9a00      	ldr	r2, [sp, #0]
9001be66:	469c      	mov	ip, r3
9001be68:	e78d      	b.n	9001bd86 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x17e>
9001be6a:	ebac 0305 	sub.w	r3, ip, r5
9001be6e:	1957      	adds	r7, r2, r5
9001be70:	f8bd 0010 	ldrh.w	r0, [sp, #16]
9001be74:	b2ba      	uxth	r2, r7
9001be76:	b29b      	uxth	r3, r3
9001be78:	9200      	str	r2, [sp, #0]
9001be7a:	2500      	movs	r5, #0
9001be7c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
9001be7e:	455a      	cmp	r2, fp
9001be80:	d88d      	bhi.n	9001bd9e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
9001be82:	4601      	mov	r1, r0
9001be84:	e748      	b.n	9001bd18 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x110>
9001be86:	458c      	cmp	ip, r1
9001be88:	bf27      	ittee	cs
9001be8a:	ebac 0301 	subcs.w	r3, ip, r1
9001be8e:	4628      	movcs	r0, r5
9001be90:	eba1 000c 	subcc.w	r0, r1, ip
9001be94:	462b      	movcc	r3, r5
9001be96:	9d0a      	ldr	r5, [sp, #40]	; 0x28
9001be98:	bf27      	ittee	cs
9001be9a:	b29b      	uxthcs	r3, r3
9001be9c:	9109      	strcs	r1, [sp, #36]	; 0x24
9001be9e:	b280      	uxthcc	r0, r0
9001bea0:	f8cd c024 	strcc.w	ip, [sp, #36]	; 0x24
9001bea4:	2dff      	cmp	r5, #255	; 0xff
9001bea6:	9d09      	ldr	r5, [sp, #36]	; 0x24
9001bea8:	eb02 0705 	add.w	r7, r2, r5
9001beac:	b2bd      	uxth	r5, r7
9001beae:	9500      	str	r5, [sp, #0]
9001beb0:	d12e      	bne.n	9001bf10 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x308>
9001beb2:	465e      	mov	r6, fp
9001beb4:	9d00      	ldr	r5, [sp, #0]
9001beb6:	42aa      	cmp	r2, r5
9001beb8:	f040 8083 	bne.w	9001bfc2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3ba>
9001bebc:	9a09      	ldr	r2, [sp, #36]	; 0x24
9001bebe:	458c      	cmp	ip, r1
9001bec0:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
9001bec4:	d3d9      	bcc.n	9001be7a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
9001bec6:	9a18      	ldr	r2, [sp, #96]	; 0x60
9001bec8:	9904      	ldr	r1, [sp, #16]
9001beca:	8812      	ldrh	r2, [r2, #0]
9001becc:	1a52      	subs	r2, r2, r1
9001bece:	9916      	ldr	r1, [sp, #88]	; 0x58
9001bed0:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
9001bed4:	9a08      	ldr	r2, [sp, #32]
9001bed6:	3201      	adds	r2, #1
9001bed8:	428a      	cmp	r2, r1
9001beda:	9208      	str	r2, [sp, #32]
9001bedc:	f040 8091 	bne.w	9001c002 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3fa>
9001bee0:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
9001bee4:	f8bd c068 	ldrh.w	ip, [sp, #104]	; 0x68
9001bee8:	9b04      	ldr	r3, [sp, #16]
9001beea:	eba5 050c 	sub.w	r5, r5, ip
9001beee:	b2ad      	uxth	r5, r5
9001bef0:	2d00      	cmp	r5, #0
9001bef2:	bf08      	it	eq
9001bef4:	4619      	moveq	r1, r3
9001bef6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001bef8:	bf18      	it	ne
9001befa:	2100      	movne	r1, #0
9001befc:	3301      	adds	r3, #1
9001befe:	b289      	uxth	r1, r1
9001bf00:	930d      	str	r3, [sp, #52]	; 0x34
9001bf02:	e700      	b.n	9001bd06 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xfe>
9001bf04:	2402357c 	.word	0x2402357c
9001bf08:	24023576 	.word	0x24023576
9001bf0c:	fffff7fb 	.word	0xfffff7fb
9001bf10:	46d9      	mov	r9, fp
9001bf12:	9d00      	ldr	r5, [sp, #0]
9001bf14:	42aa      	cmp	r2, r5
9001bf16:	d0d1      	beq.n	9001bebc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2b4>
9001bf18:	1c55      	adds	r5, r2, #1
9001bf1a:	4422      	add	r2, r4
9001bf1c:	f892 e804 	ldrb.w	lr, [r2, #2052]	; 0x804
9001bf20:	9a06      	ldr	r2, [sp, #24]
9001bf22:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001bf26:	9517      	str	r5, [sp, #92]	; 0x5c
9001bf28:	4472      	add	r2, lr
9001bf2a:	9212      	str	r2, [sp, #72]	; 0x48
9001bf2c:	f8b9 2000 	ldrh.w	r2, [r9]
9001bf30:	9f12      	ldr	r7, [sp, #72]	; 0x48
9001bf32:	1216      	asrs	r6, r2, #8
9001bf34:	f897 a002 	ldrb.w	sl, [r7, #2]
9001bf38:	10d5      	asrs	r5, r2, #3
9001bf3a:	9f0e      	ldr	r7, [sp, #56]	; 0x38
9001bf3c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001bf40:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
9001bf44:	00d2      	lsls	r2, r2, #3
9001bf46:	fb1a fa07 	smulbb	sl, sl, r7
9001bf4a:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9001bf4e:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
9001bf50:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9001bf54:	b2d2      	uxtb	r2, r2
9001bf56:	fb06 a607 	mla	r6, r6, r7, sl
9001bf5a:	9f12      	ldr	r7, [sp, #72]	; 0x48
9001bf5c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001bf60:	f897 a001 	ldrb.w	sl, [r7, #1]
9001bf64:	b2b6      	uxth	r6, r6
9001bf66:	9f0e      	ldr	r7, [sp, #56]	; 0x38
9001bf68:	fb1a fa07 	smulbb	sl, sl, r7
9001bf6c:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
9001bf6e:	fb05 a507 	mla	r5, r5, r7, sl
9001bf72:	9f06      	ldr	r7, [sp, #24]
9001bf74:	f106 0a01 	add.w	sl, r6, #1
9001bf78:	f817 e00e 	ldrb.w	lr, [r7, lr]
9001bf7c:	b2ad      	uxth	r5, r5
9001bf7e:	9f0e      	ldr	r7, [sp, #56]	; 0x38
9001bf80:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
9001bf84:	f105 0a01 	add.w	sl, r5, #1
9001bf88:	fb1e fe07 	smulbb	lr, lr, r7
9001bf8c:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
9001bf8e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001bf92:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
9001bf96:	fb02 e207 	mla	r2, r2, r7, lr
9001bf9a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001bf9e:	b292      	uxth	r2, r2
9001bfa0:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001bfa4:	f102 0e01 	add.w	lr, r2, #1
9001bfa8:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
9001bfac:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
9001bfb0:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
9001bfb4:	ea4e 0606 	orr.w	r6, lr, r6
9001bfb8:	ea46 060a 	orr.w	r6, r6, sl
9001bfbc:	f829 6b02 	strh.w	r6, [r9], #2
9001bfc0:	e7a7      	b.n	9001bf12 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x30a>
9001bfc2:	f102 0e01 	add.w	lr, r2, #1
9001bfc6:	4422      	add	r2, r4
9001bfc8:	9f06      	ldr	r7, [sp, #24]
9001bfca:	f892 5804 	ldrb.w	r5, [r2, #2052]	; 0x804
9001bfce:	9a06      	ldr	r2, [sp, #24]
9001bfd0:	eb05 0545 	add.w	r5, r5, r5, lsl #1
9001bfd4:	eb02 0a05 	add.w	sl, r2, r5
9001bfd8:	4a13      	ldr	r2, [pc, #76]	; (9001c028 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x420>)
9001bfda:	f89a 9002 	ldrb.w	r9, [sl, #2]
9001bfde:	ea02 2909 	and.w	r9, r2, r9, lsl #8
9001bfe2:	f89a 2001 	ldrb.w	r2, [sl, #1]
9001bfe6:	00d2      	lsls	r2, r2, #3
9001bfe8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001bfec:	ea49 0202 	orr.w	r2, r9, r2
9001bff0:	f817 9005 	ldrb.w	r9, [r7, r5]
9001bff4:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
9001bff8:	f826 2b02 	strh.w	r2, [r6], #2
9001bffc:	fa1f f28e 	uxth.w	r2, lr
9001c000:	e758      	b.n	9001beb4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>
9001c002:	f8bd 0010 	ldrh.w	r0, [sp, #16]
9001c006:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
9001c00a:	1a2d      	subs	r5, r5, r0
9001c00c:	b2ad      	uxth	r5, r5
9001c00e:	2d00      	cmp	r5, #0
9001c010:	bf18      	it	ne
9001c012:	2000      	movne	r0, #0
9001c014:	e732      	b.n	9001be7c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x274>
9001c016:	4b05      	ldr	r3, [pc, #20]	; (9001c02c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x424>)
9001c018:	6818      	ldr	r0, [r3, #0]
9001c01a:	6803      	ldr	r3, [r0, #0]
9001c01c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001c01e:	4798      	blx	r3
9001c020:	b01f      	add	sp, #124	; 0x7c
9001c022:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001c026:	bf00      	nop
9001c028:	fffff800 	.word	0xfffff800
9001c02c:	2402357c 	.word	0x2402357c

9001c030 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
9001c030:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c034:	b091      	sub	sp, #68	; 0x44
9001c036:	469b      	mov	fp, r3
9001c038:	4616      	mov	r6, r2
9001c03a:	f9b3 2000 	ldrsh.w	r2, [r3]
9001c03e:	f10d 0828 	add.w	r8, sp, #40	; 0x28
9001c042:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
9001c046:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
9001c04a:	4604      	mov	r4, r0
9001c04c:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
9001c050:	4640      	mov	r0, r8
9001c052:	460d      	mov	r5, r1
9001c054:	4659      	mov	r1, fp
9001c056:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
9001c05a:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
9001c05e:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
9001c062:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
9001c066:	f7f3 fed7 	bl	9000fe18 <_ZN8touchgfx4RectaNERKS0_>
9001c06a:	4631      	mov	r1, r6
9001c06c:	4640      	mov	r0, r8
9001c06e:	f7f3 fed3 	bl	9000fe18 <_ZN8touchgfx4RectaNERKS0_>
9001c072:	4b74      	ldr	r3, [pc, #464]	; (9001c244 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
9001c074:	8818      	ldrh	r0, [r3, #0]
9001c076:	4b74      	ldr	r3, [pc, #464]	; (9001c248 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
9001c078:	b202      	sxth	r2, r0
9001c07a:	8819      	ldrh	r1, [r3, #0]
9001c07c:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
9001c080:	b20e      	sxth	r6, r1
9001c082:	2b00      	cmp	r3, #0
9001c084:	da07      	bge.n	9001c096 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
9001c086:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
9001c08a:	4463      	add	r3, ip
9001c08c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
9001c090:	2300      	movs	r3, #0
9001c092:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
9001c096:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
9001c09a:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
9001c09e:	1ad2      	subs	r2, r2, r3
9001c0a0:	4594      	cmp	ip, r2
9001c0a2:	bfc4      	itt	gt
9001c0a4:	1ac2      	subgt	r2, r0, r3
9001c0a6:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
9001c0aa:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
9001c0ae:	2a00      	cmp	r2, #0
9001c0b0:	da07      	bge.n	9001c0c2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
9001c0b2:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
9001c0b6:	4462      	add	r2, ip
9001c0b8:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
9001c0bc:	2200      	movs	r2, #0
9001c0be:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
9001c0c2:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
9001c0c6:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
9001c0ca:	eba6 060a 	sub.w	r6, r6, sl
9001c0ce:	42b2      	cmp	r2, r6
9001c0d0:	bfc4      	itt	gt
9001c0d2:	eba1 020a 	subgt.w	r2, r1, sl
9001c0d6:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
9001c0da:	4a5c      	ldr	r2, [pc, #368]	; (9001c24c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
9001c0dc:	7812      	ldrb	r2, [r2, #0]
9001c0de:	b9a2      	cbnz	r2, 9001c10a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
9001c0e0:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
9001c0e4:	4286      	cmp	r6, r0
9001c0e6:	4640      	mov	r0, r8
9001c0e8:	9303      	str	r3, [sp, #12]
9001c0ea:	bf14      	ite	ne
9001c0ec:	2600      	movne	r6, #0
9001c0ee:	2601      	moveq	r6, #1
9001c0f0:	f7f3 fed5 	bl	9000fe9e <_ZNK8touchgfx4Rect7isEmptyEv>
9001c0f4:	9b03      	ldr	r3, [sp, #12]
9001c0f6:	b160      	cbz	r0, 9001c112 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
9001c0f8:	2300      	movs	r3, #0
9001c0fa:	8023      	strh	r3, [r4, #0]
9001c0fc:	8063      	strh	r3, [r4, #2]
9001c0fe:	80a3      	strh	r3, [r4, #4]
9001c100:	4620      	mov	r0, r4
9001c102:	80e3      	strh	r3, [r4, #6]
9001c104:	b011      	add	sp, #68	; 0x44
9001c106:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001c10a:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
9001c10e:	428e      	cmp	r6, r1
9001c110:	e7e9      	b.n	9001c0e6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
9001c112:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
9001c116:	a90e      	add	r1, sp, #56	; 0x38
9001c118:	900e      	str	r0, [sp, #56]	; 0x38
9001c11a:	a80c      	add	r0, sp, #48	; 0x30
9001c11c:	9205      	str	r2, [sp, #20]
9001c11e:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
9001c122:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
9001c126:	9206      	str	r2, [sp, #24]
9001c128:	f8bb 2000 	ldrh.w	r2, [fp]
9001c12c:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
9001c130:	1a9b      	subs	r3, r3, r2
9001c132:	b21b      	sxth	r3, r3
9001c134:	9303      	str	r3, [sp, #12]
9001c136:	f8bb 3002 	ldrh.w	r3, [fp, #2]
9001c13a:	f8df b118 	ldr.w	fp, [pc, #280]	; 9001c254 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
9001c13e:	ebaa 0a03 	sub.w	sl, sl, r3
9001c142:	fa0f f38a 	sxth.w	r3, sl
9001c146:	9304      	str	r3, [sp, #16]
9001c148:	9b03      	ldr	r3, [sp, #12]
9001c14a:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
9001c14e:	9b04      	ldr	r3, [sp, #16]
9001c150:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
9001c154:	9b05      	ldr	r3, [sp, #20]
9001c156:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
9001c15a:	9b06      	ldr	r3, [sp, #24]
9001c15c:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
9001c160:	f7f8 fc08 	bl	90014974 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001c164:	4640      	mov	r0, r8
9001c166:	f7f8 fbc1 	bl	900148ec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001c16a:	a80e      	add	r0, sp, #56	; 0x38
9001c16c:	f7f8 fbbe 	bl	900148ec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001c170:	4b37      	ldr	r3, [pc, #220]	; (9001c250 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
9001c172:	4628      	mov	r0, r5
9001c174:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
9001c178:	881b      	ldrh	r3, [r3, #0]
9001c17a:	9307      	str	r3, [sp, #28]
9001c17c:	682b      	ldr	r3, [r5, #0]
9001c17e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9001c180:	4798      	blx	r3
9001c182:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
9001c186:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
9001c18a:	4681      	mov	r9, r0
9001c18c:	f8db 0000 	ldr.w	r0, [fp]
9001c190:	fb1a 3305 	smlabb	r3, sl, r5, r3
9001c194:	9d1a      	ldr	r5, [sp, #104]	; 0x68
9001c196:	eb05 0543 	add.w	r5, r5, r3, lsl #1
9001c19a:	6803      	ldr	r3, [r0, #0]
9001c19c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9001c19e:	4798      	blx	r3
9001c1a0:	4607      	mov	r7, r0
9001c1a2:	f8db 0000 	ldr.w	r0, [fp]
9001c1a6:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
9001c1aa:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
9001c1ae:	6803      	ldr	r3, [r0, #0]
9001c1b0:	9109      	str	r1, [sp, #36]	; 0x24
9001c1b2:	9208      	str	r2, [sp, #32]
9001c1b4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001c1b6:	4798      	blx	r3
9001c1b8:	f010 0f01 	tst.w	r0, #1
9001c1bc:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
9001c1c0:	d012      	beq.n	9001c1e8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
9001c1c2:	f8db 0000 	ldr.w	r0, [fp]
9001c1c6:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
9001c1ca:	6803      	ldr	r3, [r0, #0]
9001c1cc:	9200      	str	r2, [sp, #0]
9001c1ce:	6ede      	ldr	r6, [r3, #108]	; 0x6c
9001c1d0:	462b      	mov	r3, r5
9001c1d2:	e898 0006 	ldmia.w	r8, {r1, r2}
9001c1d6:	47b0      	blx	r6
9001c1d8:	9b03      	ldr	r3, [sp, #12]
9001c1da:	8023      	strh	r3, [r4, #0]
9001c1dc:	9b04      	ldr	r3, [sp, #16]
9001c1de:	8063      	strh	r3, [r4, #2]
9001c1e0:	9b05      	ldr	r3, [sp, #20]
9001c1e2:	80a3      	strh	r3, [r4, #4]
9001c1e4:	9b06      	ldr	r3, [sp, #24]
9001c1e6:	e78b      	b.n	9001c100 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
9001c1e8:	fb09 f202 	mul.w	r2, r9, r2
9001c1ec:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
9001c1f0:	eb02 0141 	add.w	r1, r2, r1, lsl #1
9001c1f4:	440f      	add	r7, r1
9001c1f6:	b166      	cbz	r6, 9001c212 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
9001c1f8:	9a07      	ldr	r2, [sp, #28]
9001c1fa:	4592      	cmp	sl, r2
9001c1fc:	d109      	bne.n	9001c212 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
9001c1fe:	f8db 0000 	ldr.w	r0, [fp]
9001c202:	fb09 f303 	mul.w	r3, r9, r3
9001c206:	4629      	mov	r1, r5
9001c208:	6802      	ldr	r2, [r0, #0]
9001c20a:	6b56      	ldr	r6, [r2, #52]	; 0x34
9001c20c:	463a      	mov	r2, r7
9001c20e:	47b0      	blx	r6
9001c210:	e7e2      	b.n	9001c1d8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
9001c212:	fb0a f303 	mul.w	r3, sl, r3
9001c216:	ea4f 064a 	mov.w	r6, sl, lsl #1
9001c21a:	f8df b038 	ldr.w	fp, [pc, #56]	; 9001c254 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
9001c21e:	eb05 0843 	add.w	r8, r5, r3, lsl #1
9001c222:	4545      	cmp	r5, r8
9001c224:	d2d8      	bcs.n	9001c1d8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
9001c226:	f8db 0000 	ldr.w	r0, [fp]
9001c22a:	4629      	mov	r1, r5
9001c22c:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
9001c230:	4435      	add	r5, r6
9001c232:	6802      	ldr	r2, [r0, #0]
9001c234:	005b      	lsls	r3, r3, #1
9001c236:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
9001c23a:	463a      	mov	r2, r7
9001c23c:	47d0      	blx	sl
9001c23e:	444f      	add	r7, r9
9001c240:	e7ef      	b.n	9001c222 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
9001c242:	bf00      	nop
9001c244:	24023570 	.word	0x24023570
9001c248:	24023572 	.word	0x24023572
9001c24c:	24023574 	.word	0x24023574
9001c250:	24023576 	.word	0x24023576
9001c254:	2402357c 	.word	0x2402357c

9001c258 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
9001c258:	b5f0      	push	{r4, r5, r6, r7, lr}
9001c25a:	4606      	mov	r6, r0
9001c25c:	b087      	sub	sp, #28
9001c25e:	460c      	mov	r4, r1
9001c260:	4617      	mov	r7, r2
9001c262:	461d      	mov	r5, r3
9001c264:	b333      	cbz	r3, 9001c2b4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
9001c266:	4608      	mov	r0, r1
9001c268:	f7f3 fe19 	bl	9000fe9e <_ZNK8touchgfx4Rect7isEmptyEv>
9001c26c:	bb10      	cbnz	r0, 9001c2b4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
9001c26e:	6820      	ldr	r0, [r4, #0]
9001c270:	ab04      	add	r3, sp, #16
9001c272:	6861      	ldr	r1, [r4, #4]
9001c274:	4c1b      	ldr	r4, [pc, #108]	; (9001c2e4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
9001c276:	c303      	stmia	r3!, {r0, r1}
9001c278:	a804      	add	r0, sp, #16
9001c27a:	f7f8 fb37 	bl	900148ec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001c27e:	6820      	ldr	r0, [r4, #0]
9001c280:	6803      	ldr	r3, [r0, #0]
9001c282:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001c284:	4798      	blx	r3
9001c286:	2dff      	cmp	r5, #255	; 0xff
9001c288:	d016      	beq.n	9001c2b8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
9001c28a:	f010 0f08 	tst.w	r0, #8
9001c28e:	6820      	ldr	r0, [r4, #0]
9001c290:	d015      	beq.n	9001c2be <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
9001c292:	2400      	movs	r4, #0
9001c294:	6801      	ldr	r1, [r0, #0]
9001c296:	f8bd 3012 	ldrh.w	r3, [sp, #18]
9001c29a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001c29e:	e9cd 5402 	strd	r5, r4, [sp, #8]
9001c2a2:	f8bd 4016 	ldrh.w	r4, [sp, #22]
9001c2a6:	9401      	str	r4, [sp, #4]
9001c2a8:	f8bd 4014 	ldrh.w	r4, [sp, #20]
9001c2ac:	9400      	str	r4, [sp, #0]
9001c2ae:	6e0c      	ldr	r4, [r1, #96]	; 0x60
9001c2b0:	4639      	mov	r1, r7
9001c2b2:	47a0      	blx	r4
9001c2b4:	b007      	add	sp, #28
9001c2b6:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001c2b8:	f010 0f02 	tst.w	r0, #2
9001c2bc:	e7e7      	b.n	9001c28e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
9001c2be:	6803      	ldr	r3, [r0, #0]
9001c2c0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001c2c2:	4798      	blx	r3
9001c2c4:	4b08      	ldr	r3, [pc, #32]	; (9001c2e8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
9001c2c6:	4601      	mov	r1, r0
9001c2c8:	4630      	mov	r0, r6
9001c2ca:	881a      	ldrh	r2, [r3, #0]
9001c2cc:	6833      	ldr	r3, [r6, #0]
9001c2ce:	e9cd 7500 	strd	r7, r5, [sp]
9001c2d2:	6a5d      	ldr	r5, [r3, #36]	; 0x24
9001c2d4:	ab04      	add	r3, sp, #16
9001c2d6:	47a8      	blx	r5
9001c2d8:	6820      	ldr	r0, [r4, #0]
9001c2da:	6803      	ldr	r3, [r0, #0]
9001c2dc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001c2de:	4798      	blx	r3
9001c2e0:	e7e8      	b.n	9001c2b4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
9001c2e2:	bf00      	nop
9001c2e4:	2402357c 	.word	0x2402357c
9001c2e8:	24023576 	.word	0x24023576

9001c2ec <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
9001c2ec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001c2f0:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
9001c2f4:	4688      	mov	r8, r1
9001c2f6:	4614      	mov	r4, r2
9001c2f8:	461d      	mov	r5, r3
9001c2fa:	9e08      	ldr	r6, [sp, #32]
9001c2fc:	2f00      	cmp	r7, #0
9001c2fe:	f000 80ab 	beq.w	9001c458 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001c302:	4618      	mov	r0, r3
9001c304:	f7f3 fdcb 	bl	9000fe9e <_ZNK8touchgfx4Rect7isEmptyEv>
9001c308:	2800      	cmp	r0, #0
9001c30a:	f040 80a5 	bne.w	9001c458 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001c30e:	f9b5 1000 	ldrsh.w	r1, [r5]
9001c312:	2fff      	cmp	r7, #255	; 0xff
9001c314:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
9001c318:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
9001c31c:	fb04 1303 	mla	r3, r4, r3, r1
9001c320:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
9001c324:	eba4 0200 	sub.w	r2, r4, r0
9001c328:	eb08 0143 	add.w	r1, r8, r3, lsl #1
9001c32c:	fb04 f505 	mul.w	r5, r4, r5
9001c330:	ea4f 2816 	mov.w	r8, r6, lsr #8
9001c334:	eb01 0545 	add.w	r5, r1, r5, lsl #1
9001c338:	d04a      	beq.n	9001c3d0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe4>
9001c33a:	b2bc      	uxth	r4, r7
9001c33c:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
9001c340:	f3c6 4e07 	ubfx	lr, r6, #16, #8
9001c344:	fa5f f788 	uxtb.w	r7, r8
9001c348:	b2f3      	uxtb	r3, r6
9001c34a:	0040      	lsls	r0, r0, #1
9001c34c:	fb0e fe04 	mul.w	lr, lr, r4
9001c350:	4367      	muls	r7, r4
9001c352:	ea4f 0842 	mov.w	r8, r2, lsl #1
9001c356:	4363      	muls	r3, r4
9001c358:	fa1f fc8c 	uxth.w	ip, ip
9001c35c:	42a9      	cmp	r1, r5
9001c35e:	d27b      	bcs.n	9001c458 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001c360:	eb01 0900 	add.w	r9, r1, r0
9001c364:	4549      	cmp	r1, r9
9001c366:	d231      	bcs.n	9001c3cc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe0>
9001c368:	880a      	ldrh	r2, [r1, #0]
9001c36a:	1214      	asrs	r4, r2, #8
9001c36c:	10d6      	asrs	r6, r2, #3
9001c36e:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
9001c372:	00d2      	lsls	r2, r2, #3
9001c374:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001c378:	b2d2      	uxtb	r2, r2
9001c37a:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
9001c37e:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001c382:	fb14 f40c 	smulbb	r4, r4, ip
9001c386:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
9001c38a:	fb12 f20c 	smulbb	r2, r2, ip
9001c38e:	fb16 f60c 	smulbb	r6, r6, ip
9001c392:	4474      	add	r4, lr
9001c394:	441a      	add	r2, r3
9001c396:	b2a4      	uxth	r4, r4
9001c398:	443e      	add	r6, r7
9001c39a:	b292      	uxth	r2, r2
9001c39c:	f104 0a01 	add.w	sl, r4, #1
9001c3a0:	b2b6      	uxth	r6, r6
9001c3a2:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
9001c3a6:	f102 0a01 	add.w	sl, r2, #1
9001c3aa:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
9001c3ae:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
9001c3b2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001c3b6:	4322      	orrs	r2, r4
9001c3b8:	1c74      	adds	r4, r6, #1
9001c3ba:	eb04 2616 	add.w	r6, r4, r6, lsr #8
9001c3be:	0976      	lsrs	r6, r6, #5
9001c3c0:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
9001c3c4:	4332      	orrs	r2, r6
9001c3c6:	f821 2b02 	strh.w	r2, [r1], #2
9001c3ca:	e7cb      	b.n	9001c364 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x78>
9001c3cc:	4441      	add	r1, r8
9001c3ce:	e7c5      	b.n	9001c35c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x70>
9001c3d0:	0973      	lsrs	r3, r6, #5
9001c3d2:	4f22      	ldr	r7, [pc, #136]	; (9001c45c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x170>)
9001c3d4:	f3c6 06c4 	ubfx	r6, r6, #3, #5
9001c3d8:	ea08 0707 	and.w	r7, r8, r7
9001c3dc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9001c3e0:	433b      	orrs	r3, r7
9001c3e2:	07e7      	lsls	r7, r4, #31
9001c3e4:	ea43 0306 	orr.w	r3, r3, r6
9001c3e8:	b29b      	uxth	r3, r3
9001c3ea:	d50b      	bpl.n	9001c404 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x118>
9001c3ec:	0040      	lsls	r0, r0, #1
9001c3ee:	0052      	lsls	r2, r2, #1
9001c3f0:	42a9      	cmp	r1, r5
9001c3f2:	d231      	bcs.n	9001c458 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001c3f4:	180c      	adds	r4, r1, r0
9001c3f6:	42a1      	cmp	r1, r4
9001c3f8:	d202      	bcs.n	9001c400 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
9001c3fa:	f821 3b02 	strh.w	r3, [r1], #2
9001c3fe:	e7fa      	b.n	9001c3f6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x10a>
9001c400:	4411      	add	r1, r2
9001c402:	e7f5      	b.n	9001c3f0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x104>
9001c404:	078e      	lsls	r6, r1, #30
9001c406:	d008      	beq.n	9001c41a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12e>
9001c408:	0066      	lsls	r6, r4, #1
9001c40a:	460a      	mov	r2, r1
9001c40c:	42aa      	cmp	r2, r5
9001c40e:	d202      	bcs.n	9001c416 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
9001c410:	8013      	strh	r3, [r2, #0]
9001c412:	4432      	add	r2, r6
9001c414:	e7fa      	b.n	9001c40c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x120>
9001c416:	3102      	adds	r1, #2
9001c418:	3801      	subs	r0, #1
9001c41a:	07c2      	lsls	r2, r0, #31
9001c41c:	d50b      	bpl.n	9001c436 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x14a>
9001c41e:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
9001c422:	0066      	lsls	r6, r4, #1
9001c424:	3a01      	subs	r2, #1
9001c426:	eb01 0242 	add.w	r2, r1, r2, lsl #1
9001c42a:	42aa      	cmp	r2, r5
9001c42c:	d202      	bcs.n	9001c434 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x148>
9001c42e:	8013      	strh	r3, [r2, #0]
9001c430:	4432      	add	r2, r6
9001c432:	e7fa      	b.n	9001c42a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13e>
9001c434:	3801      	subs	r0, #1
9001c436:	b178      	cbz	r0, 9001c458 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001c438:	1040      	asrs	r0, r0, #1
9001c43a:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
9001c43e:	0080      	lsls	r0, r0, #2
9001c440:	0064      	lsls	r4, r4, #1
9001c442:	42a9      	cmp	r1, r5
9001c444:	d208      	bcs.n	9001c458 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001c446:	180e      	adds	r6, r1, r0
9001c448:	460a      	mov	r2, r1
9001c44a:	42b2      	cmp	r2, r6
9001c44c:	d202      	bcs.n	9001c454 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
9001c44e:	f842 3b04 	str.w	r3, [r2], #4
9001c452:	e7fa      	b.n	9001c44a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15e>
9001c454:	4421      	add	r1, r4
9001c456:	e7f4      	b.n	9001c442 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x156>
9001c458:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001c45c:	00fff800 	.word	0x00fff800

9001c460 <_ZN8touchgfx8LCD16bppC1Ev>:
9001c460:	2200      	movs	r2, #0
9001c462:	4912      	ldr	r1, [pc, #72]	; (9001c4ac <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
9001c464:	e9c0 2201 	strd	r2, r2, [r0, #4]
9001c468:	6001      	str	r1, [r0, #0]
9001c46a:	e9c0 2203 	strd	r2, r2, [r0, #12]
9001c46e:	e9c0 2205 	strd	r2, r2, [r0, #20]
9001c472:	e9c0 2207 	strd	r2, r2, [r0, #28]
9001c476:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
9001c47a:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
9001c47e:	e9c0 220d 	strd	r2, r2, [r0, #52]	; 0x34
9001c482:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
9001c486:	e9c0 2211 	strd	r2, r2, [r0, #68]	; 0x44
9001c48a:	e9c0 2213 	strd	r2, r2, [r0, #76]	; 0x4c
9001c48e:	e9c0 2215 	strd	r2, r2, [r0, #84]	; 0x54
9001c492:	e9c0 2217 	strd	r2, r2, [r0, #92]	; 0x5c
9001c496:	e9c0 2219 	strd	r2, r2, [r0, #100]	; 0x64
9001c49a:	e9c0 221b 	strd	r2, r2, [r0, #108]	; 0x6c
9001c49e:	e9c0 221d 	strd	r2, r2, [r0, #116]	; 0x74
9001c4a2:	e9c0 221f 	strd	r2, r2, [r0, #124]	; 0x7c
9001c4a6:	f8c0 2084 	str.w	r2, [r0, #132]	; 0x84
9001c4aa:	4770      	bx	lr
9001c4ac:	9002a7b0 	.word	0x9002a7b0

9001c4b0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
9001c4b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c4b4:	b08d      	sub	sp, #52	; 0x34
9001c4b6:	460d      	mov	r5, r1
9001c4b8:	4604      	mov	r4, r0
9001c4ba:	4699      	mov	r9, r3
9001c4bc:	6808      	ldr	r0, [r1, #0]
9001c4be:	ab08      	add	r3, sp, #32
9001c4c0:	6849      	ldr	r1, [r1, #4]
9001c4c2:	c303      	stmia	r3!, {r0, r1}
9001c4c4:	6810      	ldr	r0, [r2, #0]
9001c4c6:	ab0a      	add	r3, sp, #40	; 0x28
9001c4c8:	6851      	ldr	r1, [r2, #4]
9001c4ca:	c303      	stmia	r3!, {r0, r1}
9001c4cc:	a808      	add	r0, sp, #32
9001c4ce:	f7f8 fa0d 	bl	900148ec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001c4d2:	4629      	mov	r1, r5
9001c4d4:	a80a      	add	r0, sp, #40	; 0x28
9001c4d6:	4d67      	ldr	r5, [pc, #412]	; (9001c674 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
9001c4d8:	f7f8 fa4c 	bl	90014974 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001c4dc:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
9001c4e0:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
9001c4e4:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
9001c4e8:	6828      	ldr	r0, [r5, #0]
9001c4ea:	fb11 2103 	smlabb	r1, r1, r3, r2
9001c4ee:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
9001c4f2:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
9001c4f6:	eb04 0481 	add.w	r4, r4, r1, lsl #2
9001c4fa:	f8bd 1020 	ldrh.w	r1, [sp, #32]
9001c4fe:	440a      	add	r2, r1
9001c500:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
9001c504:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
9001c508:	4413      	add	r3, r2
9001c50a:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
9001c50e:	6803      	ldr	r3, [r0, #0]
9001c510:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001c512:	4798      	blx	r3
9001c514:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
9001c518:	d119      	bne.n	9001c54e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
9001c51a:	f010 0f20 	tst.w	r0, #32
9001c51e:	6828      	ldr	r0, [r5, #0]
9001c520:	d018      	beq.n	9001c554 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
9001c522:	2500      	movs	r5, #0
9001c524:	6801      	ldr	r1, [r0, #0]
9001c526:	b2b6      	uxth	r6, r6
9001c528:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
9001c52c:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
9001c530:	9601      	str	r6, [sp, #4]
9001c532:	e9cd 9503 	strd	r9, r5, [sp, #12]
9001c536:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
9001c53a:	9502      	str	r5, [sp, #8]
9001c53c:	fa1f f588 	uxth.w	r5, r8
9001c540:	9500      	str	r5, [sp, #0]
9001c542:	6d0d      	ldr	r5, [r1, #80]	; 0x50
9001c544:	4621      	mov	r1, r4
9001c546:	47a8      	blx	r5
9001c548:	b00d      	add	sp, #52	; 0x34
9001c54a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001c54e:	f010 0f40 	tst.w	r0, #64	; 0x40
9001c552:	e7e4      	b.n	9001c51e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
9001c554:	6803      	ldr	r3, [r0, #0]
9001c556:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001c558:	4798      	blx	r3
9001c55a:	4947      	ldr	r1, [pc, #284]	; (9001c678 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
9001c55c:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
9001c560:	880b      	ldrh	r3, [r1, #0]
9001c562:	468a      	mov	sl, r1
9001c564:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
9001c568:	fb03 5202 	mla	r2, r3, r2, r5
9001c56c:	4373      	muls	r3, r6
9001c56e:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001c572:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001c576:	9307      	str	r3, [sp, #28]
9001c578:	ea4f 0348 	mov.w	r3, r8, lsl #1
9001c57c:	9306      	str	r3, [sp, #24]
9001c57e:	9b07      	ldr	r3, [sp, #28]
9001c580:	4298      	cmp	r0, r3
9001c582:	d270      	bcs.n	9001c666 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
9001c584:	9b06      	ldr	r3, [sp, #24]
9001c586:	4621      	mov	r1, r4
9001c588:	eb00 0b03 	add.w	fp, r0, r3
9001c58c:	4558      	cmp	r0, fp
9001c58e:	d25d      	bcs.n	9001c64c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
9001c590:	f851 4b04 	ldr.w	r4, [r1], #4
9001c594:	0e23      	lsrs	r3, r4, #24
9001c596:	d014      	beq.n	9001c5c2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
9001c598:	2bff      	cmp	r3, #255	; 0xff
9001c59a:	ea4f 2c14 	mov.w	ip, r4, lsr #8
9001c59e:	d112      	bne.n	9001c5c6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
9001c5a0:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
9001c5a4:	d10f      	bne.n	9001c5c6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
9001c5a6:	0963      	lsrs	r3, r4, #5
9001c5a8:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
9001c5ac:	f3c4 04c4 	ubfx	r4, r4, #3, #5
9001c5b0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9001c5b4:	f02c 0c07 	bic.w	ip, ip, #7
9001c5b8:	ea43 0c0c 	orr.w	ip, r3, ip
9001c5bc:	ea4c 0404 	orr.w	r4, ip, r4
9001c5c0:	8004      	strh	r4, [r0, #0]
9001c5c2:	3002      	adds	r0, #2
9001c5c4:	e7e2      	b.n	9001c58c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
9001c5c6:	fb09 f303 	mul.w	r3, r9, r3
9001c5ca:	8807      	ldrh	r7, [r0, #0]
9001c5cc:	f3c4 4e07 	ubfx	lr, r4, #16, #8
9001c5d0:	fa5f fc8c 	uxtb.w	ip, ip
9001c5d4:	1c5a      	adds	r2, r3, #1
9001c5d6:	123e      	asrs	r6, r7, #8
9001c5d8:	10fd      	asrs	r5, r7, #3
9001c5da:	eb02 2223 	add.w	r2, r2, r3, asr #8
9001c5de:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001c5e2:	00ff      	lsls	r7, r7, #3
9001c5e4:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
9001c5e8:	1212      	asrs	r2, r2, #8
9001c5ea:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9001c5ee:	b293      	uxth	r3, r2
9001c5f0:	43d2      	mvns	r2, r2
9001c5f2:	b2ff      	uxtb	r7, r7
9001c5f4:	fb1e fe03 	smulbb	lr, lr, r3
9001c5f8:	b2d2      	uxtb	r2, r2
9001c5fa:	fb1c fc03 	smulbb	ip, ip, r3
9001c5fe:	b2e4      	uxtb	r4, r4
9001c600:	fb06 e602 	mla	r6, r6, r2, lr
9001c604:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9001c608:	fb14 f403 	smulbb	r4, r4, r3
9001c60c:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
9001c610:	b2b6      	uxth	r6, r6
9001c612:	fb05 c502 	mla	r5, r5, r2, ip
9001c616:	fb07 4702 	mla	r7, r7, r2, r4
9001c61a:	f106 0e01 	add.w	lr, r6, #1
9001c61e:	b2ad      	uxth	r5, r5
9001c620:	b2bf      	uxth	r7, r7
9001c622:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
9001c626:	f105 0c01 	add.w	ip, r5, #1
9001c62a:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
9001c62e:	1c7e      	adds	r6, r7, #1
9001c630:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
9001c634:	eb06 2617 	add.w	r6, r6, r7, lsr #8
9001c638:	096d      	lsrs	r5, r5, #5
9001c63a:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001c63e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001c642:	ea46 060e 	orr.w	r6, r6, lr
9001c646:	432e      	orrs	r6, r5
9001c648:	8006      	strh	r6, [r0, #0]
9001c64a:	e7ba      	b.n	9001c5c2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
9001c64c:	f8ba 3000 	ldrh.w	r3, [sl]
9001c650:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
9001c654:	eba3 0308 	sub.w	r3, r3, r8
9001c658:	eba4 0408 	sub.w	r4, r4, r8
9001c65c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001c660:	eb01 0484 	add.w	r4, r1, r4, lsl #2
9001c664:	e78b      	b.n	9001c57e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
9001c666:	4b03      	ldr	r3, [pc, #12]	; (9001c674 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
9001c668:	6818      	ldr	r0, [r3, #0]
9001c66a:	6803      	ldr	r3, [r0, #0]
9001c66c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001c66e:	4798      	blx	r3
9001c670:	e76a      	b.n	9001c548 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
9001c672:	bf00      	nop
9001c674:	2402357c 	.word	0x2402357c
9001c678:	24023576 	.word	0x24023576

9001c67c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
9001c67c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9001c680:	b085      	sub	sp, #20
9001c682:	6810      	ldr	r0, [r2, #0]
9001c684:	460c      	mov	r4, r1
9001c686:	6851      	ldr	r1, [r2, #4]
9001c688:	466d      	mov	r5, sp
9001c68a:	4616      	mov	r6, r2
9001c68c:	c503      	stmia	r5!, {r0, r1}
9001c68e:	6818      	ldr	r0, [r3, #0]
9001c690:	6859      	ldr	r1, [r3, #4]
9001c692:	c503      	stmia	r5!, {r0, r1}
9001c694:	4668      	mov	r0, sp
9001c696:	4d2e      	ldr	r5, [pc, #184]	; (9001c750 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
9001c698:	f7f8 f928 	bl	900148ec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001c69c:	4631      	mov	r1, r6
9001c69e:	a802      	add	r0, sp, #8
9001c6a0:	4e2c      	ldr	r6, [pc, #176]	; (9001c754 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
9001c6a2:	f7f8 f967 	bl	90014974 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001c6a6:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
9001c6aa:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
9001c6ae:	f8bd 1004 	ldrh.w	r1, [sp, #4]
9001c6b2:	6828      	ldr	r0, [r5, #0]
9001c6b4:	fb11 2103 	smlabb	r1, r1, r3, r2
9001c6b8:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
9001c6bc:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
9001c6c0:	eb04 0481 	add.w	r4, r4, r1, lsl #2
9001c6c4:	f8bd 1000 	ldrh.w	r1, [sp]
9001c6c8:	440a      	add	r2, r1
9001c6ca:	f8ad 2008 	strh.w	r2, [sp, #8]
9001c6ce:	f8bd 2002 	ldrh.w	r2, [sp, #2]
9001c6d2:	4413      	add	r3, r2
9001c6d4:	f8ad 300a 	strh.w	r3, [sp, #10]
9001c6d8:	6803      	ldr	r3, [r0, #0]
9001c6da:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001c6dc:	4798      	blx	r3
9001c6de:	8833      	ldrh	r3, [r6, #0]
9001c6e0:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
9001c6e4:	ea4f 0c47 	mov.w	ip, r7, lsl #1
9001c6e8:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
9001c6ec:	f8df e068 	ldr.w	lr, [pc, #104]	; 9001c758 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
9001c6f0:	fb03 1202 	mla	r2, r3, r2, r1
9001c6f4:	fb08 f303 	mul.w	r3, r8, r3
9001c6f8:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001c6fc:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001c700:	4298      	cmp	r0, r3
9001c702:	d21d      	bcs.n	9001c740 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
9001c704:	eb00 080c 	add.w	r8, r0, ip
9001c708:	4540      	cmp	r0, r8
9001c70a:	d20f      	bcs.n	9001c72c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
9001c70c:	f854 1b04 	ldr.w	r1, [r4], #4
9001c710:	ea4f 1951 	mov.w	r9, r1, lsr #5
9001c714:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
9001c718:	f3c1 01c4 	ubfx	r1, r1, #3, #5
9001c71c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
9001c720:	ea42 0209 	orr.w	r2, r2, r9
9001c724:	430a      	orrs	r2, r1
9001c726:	f820 2b02 	strh.w	r2, [r0], #2
9001c72a:	e7ed      	b.n	9001c708 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
9001c72c:	8832      	ldrh	r2, [r6, #0]
9001c72e:	1bd2      	subs	r2, r2, r7
9001c730:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001c734:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
9001c738:	1bd2      	subs	r2, r2, r7
9001c73a:	eb04 0482 	add.w	r4, r4, r2, lsl #2
9001c73e:	e7df      	b.n	9001c700 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
9001c740:	6828      	ldr	r0, [r5, #0]
9001c742:	6803      	ldr	r3, [r0, #0]
9001c744:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001c746:	4798      	blx	r3
9001c748:	b005      	add	sp, #20
9001c74a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9001c74e:	bf00      	nop
9001c750:	2402357c 	.word	0x2402357c
9001c754:	24023576 	.word	0x24023576
9001c758:	fffff800 	.word	0xfffff800

9001c75c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
9001c75c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001c760:	b08e      	sub	sp, #56	; 0x38
9001c762:	460e      	mov	r6, r1
9001c764:	4604      	mov	r4, r0
9001c766:	461d      	mov	r5, r3
9001c768:	6808      	ldr	r0, [r1, #0]
9001c76a:	ab0a      	add	r3, sp, #40	; 0x28
9001c76c:	6849      	ldr	r1, [r1, #4]
9001c76e:	f8df 81d4 	ldr.w	r8, [pc, #468]	; 9001c944 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
9001c772:	f8df 91d4 	ldr.w	r9, [pc, #468]	; 9001c948 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
9001c776:	c303      	stmia	r3!, {r0, r1}
9001c778:	6810      	ldr	r0, [r2, #0]
9001c77a:	ab0c      	add	r3, sp, #48	; 0x30
9001c77c:	6851      	ldr	r1, [r2, #4]
9001c77e:	c303      	stmia	r3!, {r0, r1}
9001c780:	a80a      	add	r0, sp, #40	; 0x28
9001c782:	f7f8 f8b3 	bl	900148ec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001c786:	4631      	mov	r1, r6
9001c788:	a80c      	add	r0, sp, #48	; 0x30
9001c78a:	f7f8 f8f3 	bl	90014974 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001c78e:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
9001c792:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
9001c796:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
9001c79a:	f8d8 0000 	ldr.w	r0, [r8]
9001c79e:	fb11 2103 	smlabb	r1, r1, r3, r2
9001c7a2:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
9001c7a6:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
9001c7aa:	eb01 0141 	add.w	r1, r1, r1, lsl #1
9001c7ae:	440c      	add	r4, r1
9001c7b0:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
9001c7b4:	440a      	add	r2, r1
9001c7b6:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
9001c7ba:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
9001c7be:	4413      	add	r3, r2
9001c7c0:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
9001c7c4:	6803      	ldr	r3, [r0, #0]
9001c7c6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001c7c8:	4798      	blx	r3
9001c7ca:	2dff      	cmp	r5, #255	; 0xff
9001c7cc:	d124      	bne.n	9001c818 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
9001c7ce:	f010 0f01 	tst.w	r0, #1
9001c7d2:	f8d8 0000 	ldr.w	r0, [r8]
9001c7d6:	d022      	beq.n	9001c81e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
9001c7d8:	2100      	movs	r1, #0
9001c7da:	f04f 0e01 	mov.w	lr, #1
9001c7de:	f8d0 c000 	ldr.w	ip, [r0]
9001c7e2:	b2b6      	uxth	r6, r6
9001c7e4:	f8cd e018 	str.w	lr, [sp, #24]
9001c7e8:	b2bf      	uxth	r7, r7
9001c7ea:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
9001c7ee:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
9001c7f2:	e9cd 1107 	strd	r1, r1, [sp, #28]
9001c7f6:	f8b9 e000 	ldrh.w	lr, [r9]
9001c7fa:	9503      	str	r5, [sp, #12]
9001c7fc:	9601      	str	r6, [sp, #4]
9001c7fe:	9700      	str	r7, [sp, #0]
9001c800:	e9cd 1e04 	strd	r1, lr, [sp, #16]
9001c804:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
9001c808:	9102      	str	r1, [sp, #8]
9001c80a:	4621      	mov	r1, r4
9001c80c:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
9001c810:	47a8      	blx	r5
9001c812:	b00e      	add	sp, #56	; 0x38
9001c814:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001c818:	f010 0f04 	tst.w	r0, #4
9001c81c:	e7d9      	b.n	9001c7d2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
9001c81e:	6803      	ldr	r3, [r0, #0]
9001c820:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001c822:	4798      	blx	r3
9001c824:	f8b9 3000 	ldrh.w	r3, [r9]
9001c828:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
9001c82c:	ea4f 0e47 	mov.w	lr, r7, lsl #1
9001c830:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
9001c834:	435e      	muls	r6, r3
9001c836:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
9001c83a:	2dff      	cmp	r5, #255	; 0xff
9001c83c:	fb03 1202 	mla	r2, r3, r2, r1
9001c840:	ebac 0c07 	sub.w	ip, ip, r7
9001c844:	eba3 0707 	sub.w	r7, r3, r7
9001c848:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001c84c:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
9001c850:	eb00 0646 	add.w	r6, r0, r6, lsl #1
9001c854:	ea4f 0747 	mov.w	r7, r7, lsl #1
9001c858:	d049      	beq.n	9001c8ee <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
9001c85a:	43eb      	mvns	r3, r5
9001c85c:	fa1f f985 	uxth.w	r9, r5
9001c860:	b2db      	uxtb	r3, r3
9001c862:	42b0      	cmp	r0, r6
9001c864:	d266      	bcs.n	9001c934 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
9001c866:	eb00 0a0e 	add.w	sl, r0, lr
9001c86a:	4550      	cmp	r0, sl
9001c86c:	4621      	mov	r1, r4
9001c86e:	f104 0403 	add.w	r4, r4, #3
9001c872:	d25b      	bcs.n	9001c92c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
9001c874:	8802      	ldrh	r2, [r0, #0]
9001c876:	f814 1c01 	ldrb.w	r1, [r4, #-1]
9001c87a:	ea4f 2822 	mov.w	r8, r2, asr #8
9001c87e:	fb11 f109 	smulbb	r1, r1, r9
9001c882:	10d5      	asrs	r5, r2, #3
9001c884:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
9001c888:	00d2      	lsls	r2, r2, #3
9001c88a:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
9001c88e:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
9001c892:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9001c896:	fb08 1803 	mla	r8, r8, r3, r1
9001c89a:	f814 1c02 	ldrb.w	r1, [r4, #-2]
9001c89e:	b2d2      	uxtb	r2, r2
9001c8a0:	fb11 f109 	smulbb	r1, r1, r9
9001c8a4:	fa1f f888 	uxth.w	r8, r8
9001c8a8:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001c8ac:	fb05 1503 	mla	r5, r5, r3, r1
9001c8b0:	f814 1c03 	ldrb.w	r1, [r4, #-3]
9001c8b4:	fb11 f109 	smulbb	r1, r1, r9
9001c8b8:	b2ad      	uxth	r5, r5
9001c8ba:	fb02 1203 	mla	r2, r2, r3, r1
9001c8be:	f108 0101 	add.w	r1, r8, #1
9001c8c2:	b292      	uxth	r2, r2
9001c8c4:	eb01 2818 	add.w	r8, r1, r8, lsr #8
9001c8c8:	1c51      	adds	r1, r2, #1
9001c8ca:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
9001c8ce:	eb01 2212 	add.w	r2, r1, r2, lsr #8
9001c8d2:	1c69      	adds	r1, r5, #1
9001c8d4:	eb01 2515 	add.w	r5, r1, r5, lsr #8
9001c8d8:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001c8dc:	096d      	lsrs	r5, r5, #5
9001c8de:	ea42 0208 	orr.w	r2, r2, r8
9001c8e2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001c8e6:	432a      	orrs	r2, r5
9001c8e8:	f820 2b02 	strh.w	r2, [r0], #2
9001c8ec:	e7bd      	b.n	9001c86a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
9001c8ee:	4a14      	ldr	r2, [pc, #80]	; (9001c940 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
9001c8f0:	42b0      	cmp	r0, r6
9001c8f2:	d21f      	bcs.n	9001c934 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
9001c8f4:	eb00 050e 	add.w	r5, r0, lr
9001c8f8:	42a8      	cmp	r0, r5
9001c8fa:	4621      	mov	r1, r4
9001c8fc:	f104 0403 	add.w	r4, r4, #3
9001c900:	d210      	bcs.n	9001c924 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
9001c902:	f814 3c02 	ldrb.w	r3, [r4, #-2]
9001c906:	f814 1c01 	ldrb.w	r1, [r4, #-1]
9001c90a:	00db      	lsls	r3, r3, #3
9001c90c:	ea02 2101 	and.w	r1, r2, r1, lsl #8
9001c910:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9001c914:	430b      	orrs	r3, r1
9001c916:	f814 1c03 	ldrb.w	r1, [r4, #-3]
9001c91a:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
9001c91e:	f820 3b02 	strh.w	r3, [r0], #2
9001c922:	e7e9      	b.n	9001c8f8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
9001c924:	4438      	add	r0, r7
9001c926:	eb01 040c 	add.w	r4, r1, ip
9001c92a:	e7e1      	b.n	9001c8f0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
9001c92c:	4438      	add	r0, r7
9001c92e:	eb01 040c 	add.w	r4, r1, ip
9001c932:	e796      	b.n	9001c862 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
9001c934:	4b03      	ldr	r3, [pc, #12]	; (9001c944 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
9001c936:	6818      	ldr	r0, [r3, #0]
9001c938:	6803      	ldr	r3, [r0, #0]
9001c93a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001c93c:	4798      	blx	r3
9001c93e:	e768      	b.n	9001c812 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
9001c940:	fffff800 	.word	0xfffff800
9001c944:	2402357c 	.word	0x2402357c
9001c948:	24023576 	.word	0x24023576

9001c94c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
9001c94c:	b4f0      	push	{r4, r5, r6, r7}
9001c94e:	4616      	mov	r6, r2
9001c950:	461c      	mov	r4, r3
9001c952:	460d      	mov	r5, r1
9001c954:	9a04      	ldr	r2, [sp, #16]
9001c956:	2e01      	cmp	r6, #1
9001c958:	f89d 3014 	ldrb.w	r3, [sp, #20]
9001c95c:	f89d 7018 	ldrb.w	r7, [sp, #24]
9001c960:	d012      	beq.n	9001c988 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
9001c962:	d303      	bcc.n	9001c96c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
9001c964:	2e02      	cmp	r6, #2
9001c966:	d00a      	beq.n	9001c97e <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
9001c968:	bcf0      	pop	{r4, r5, r6, r7}
9001c96a:	4770      	bx	lr
9001c96c:	6805      	ldr	r5, [r0, #0]
9001c96e:	e9cd 3704 	strd	r3, r7, [sp, #16]
9001c972:	68ed      	ldr	r5, [r5, #12]
9001c974:	4613      	mov	r3, r2
9001c976:	4622      	mov	r2, r4
9001c978:	46ac      	mov	ip, r5
9001c97a:	bcf0      	pop	{r4, r5, r6, r7}
9001c97c:	4760      	bx	ip
9001c97e:	4621      	mov	r1, r4
9001c980:	4628      	mov	r0, r5
9001c982:	bcf0      	pop	{r4, r5, r6, r7}
9001c984:	f7ff bd94 	b.w	9001c4b0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
9001c988:	4621      	mov	r1, r4
9001c98a:	4628      	mov	r0, r5
9001c98c:	bcf0      	pop	{r4, r5, r6, r7}
9001c98e:	f7ff bee5 	b.w	9001c75c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

9001c994 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
9001c994:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c998:	b093      	sub	sp, #76	; 0x4c
9001c99a:	4681      	mov	r9, r0
9001c99c:	4688      	mov	r8, r1
9001c99e:	6810      	ldr	r0, [r2, #0]
9001c9a0:	6851      	ldr	r1, [r2, #4]
9001c9a2:	ac0e      	add	r4, sp, #56	; 0x38
9001c9a4:	4616      	mov	r6, r2
9001c9a6:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
9001c9aa:	4f6b      	ldr	r7, [pc, #428]	; (9001cb58 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
9001c9ac:	c403      	stmia	r4!, {r0, r1}
9001c9ae:	6818      	ldr	r0, [r3, #0]
9001c9b0:	ac10      	add	r4, sp, #64	; 0x40
9001c9b2:	6859      	ldr	r1, [r3, #4]
9001c9b4:	c403      	stmia	r4!, {r0, r1}
9001c9b6:	a80e      	add	r0, sp, #56	; 0x38
9001c9b8:	f7f7 ff98 	bl	900148ec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001c9bc:	4631      	mov	r1, r6
9001c9be:	a810      	add	r0, sp, #64	; 0x40
9001c9c0:	4e66      	ldr	r6, [pc, #408]	; (9001cb5c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
9001c9c2:	f7f7 ffd7 	bl	90014974 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001c9c6:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
9001c9ca:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
9001c9ce:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
9001c9d2:	6830      	ldr	r0, [r6, #0]
9001c9d4:	fb11 2103 	smlabb	r1, r1, r3, r2
9001c9d8:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
9001c9dc:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
9001c9e0:	4489      	add	r9, r1
9001c9e2:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
9001c9e6:	440a      	add	r2, r1
9001c9e8:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
9001c9ec:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
9001c9f0:	4413      	add	r3, r2
9001c9f2:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
9001c9f6:	6803      	ldr	r3, [r0, #0]
9001c9f8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001c9fa:	4798      	blx	r3
9001c9fc:	f010 0f80 	tst.w	r0, #128	; 0x80
9001ca00:	6830      	ldr	r0, [r6, #0]
9001ca02:	d01d      	beq.n	9001ca40 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
9001ca04:	2200      	movs	r2, #0
9001ca06:	6801      	ldr	r1, [r0, #0]
9001ca08:	b2a4      	uxth	r4, r4
9001ca0a:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
9001ca0e:	b2ad      	uxth	r5, r5
9001ca10:	e9cd 2208 	strd	r2, r2, [sp, #32]
9001ca14:	220b      	movs	r2, #11
9001ca16:	9207      	str	r2, [sp, #28]
9001ca18:	883a      	ldrh	r2, [r7, #0]
9001ca1a:	9502      	str	r5, [sp, #8]
9001ca1c:	9206      	str	r2, [sp, #24]
9001ca1e:	2201      	movs	r2, #1
9001ca20:	9401      	str	r4, [sp, #4]
9001ca22:	e9cd a204 	strd	sl, r2, [sp, #16]
9001ca26:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
9001ca2a:	9203      	str	r2, [sp, #12]
9001ca2c:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
9001ca30:	9200      	str	r2, [sp, #0]
9001ca32:	4642      	mov	r2, r8
9001ca34:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
9001ca36:	4649      	mov	r1, r9
9001ca38:	47a0      	blx	r4
9001ca3a:	b013      	add	sp, #76	; 0x4c
9001ca3c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001ca40:	6803      	ldr	r3, [r0, #0]
9001ca42:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001ca44:	4798      	blx	r3
9001ca46:	883b      	ldrh	r3, [r7, #0]
9001ca48:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
9001ca4c:	f04f 0e04 	mov.w	lr, #4
9001ca50:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
9001ca54:	435d      	muls	r5, r3
9001ca56:	fb03 1202 	mla	r2, r3, r2, r1
9001ca5a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001ca5e:	eb00 0245 	add.w	r2, r0, r5, lsl #1
9001ca62:	920c      	str	r2, [sp, #48]	; 0x30
9001ca64:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
9001ca68:	1b12      	subs	r2, r2, r4
9001ca6a:	920d      	str	r2, [sp, #52]	; 0x34
9001ca6c:	0062      	lsls	r2, r4, #1
9001ca6e:	1b1c      	subs	r4, r3, r4
9001ca70:	920a      	str	r2, [sp, #40]	; 0x28
9001ca72:	0063      	lsls	r3, r4, #1
9001ca74:	930b      	str	r3, [sp, #44]	; 0x2c
9001ca76:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9001ca78:	4298      	cmp	r0, r3
9001ca7a:	d266      	bcs.n	9001cb4a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
9001ca7c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001ca7e:	eb00 0b03 	add.w	fp, r0, r3
9001ca82:	4558      	cmp	r0, fp
9001ca84:	d25c      	bcs.n	9001cb40 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
9001ca86:	f819 3b01 	ldrb.w	r3, [r9], #1
9001ca8a:	fb1e e303 	smlabb	r3, lr, r3, lr
9001ca8e:	f858 2003 	ldr.w	r2, [r8, r3]
9001ca92:	0e11      	lsrs	r1, r2, #24
9001ca94:	d012      	beq.n	9001cabc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
9001ca96:	29ff      	cmp	r1, #255	; 0xff
9001ca98:	ea4f 2712 	mov.w	r7, r2, lsr #8
9001ca9c:	d110      	bne.n	9001cac0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
9001ca9e:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
9001caa2:	d10d      	bne.n	9001cac0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
9001caa4:	0953      	lsrs	r3, r2, #5
9001caa6:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
9001caaa:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9001caae:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9001cab2:	f027 0707 	bic.w	r7, r7, #7
9001cab6:	431f      	orrs	r7, r3
9001cab8:	433a      	orrs	r2, r7
9001caba:	8002      	strh	r2, [r0, #0]
9001cabc:	3002      	adds	r0, #2
9001cabe:	e7e0      	b.n	9001ca82 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
9001cac0:	fb0a f101 	mul.w	r1, sl, r1
9001cac4:	8806      	ldrh	r6, [r0, #0]
9001cac6:	f3c2 4c07 	ubfx	ip, r2, #16, #8
9001caca:	b2d2      	uxtb	r2, r2
9001cacc:	1c4b      	adds	r3, r1, #1
9001cace:	1235      	asrs	r5, r6, #8
9001cad0:	10f4      	asrs	r4, r6, #3
9001cad2:	eb03 2321 	add.w	r3, r3, r1, asr #8
9001cad6:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
9001cada:	00f6      	lsls	r6, r6, #3
9001cadc:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
9001cae0:	121b      	asrs	r3, r3, #8
9001cae2:	b2f6      	uxtb	r6, r6
9001cae4:	b299      	uxth	r1, r3
9001cae6:	43db      	mvns	r3, r3
9001cae8:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
9001caec:	fb1c fc01 	smulbb	ip, ip, r1
9001caf0:	b2db      	uxtb	r3, r3
9001caf2:	fb12 f201 	smulbb	r2, r2, r1
9001caf6:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9001cafa:	fb05 c503 	mla	r5, r5, r3, ip
9001cafe:	b2ff      	uxtb	r7, r7
9001cb00:	fb06 2203 	mla	r2, r6, r3, r2
9001cb04:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
9001cb08:	fb17 f701 	smulbb	r7, r7, r1
9001cb0c:	b2ad      	uxth	r5, r5
9001cb0e:	b292      	uxth	r2, r2
9001cb10:	fb04 7403 	mla	r4, r4, r3, r7
9001cb14:	f105 0c01 	add.w	ip, r5, #1
9001cb18:	1c57      	adds	r7, r2, #1
9001cb1a:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
9001cb1e:	eb07 2712 	add.w	r7, r7, r2, lsr #8
9001cb22:	b2a4      	uxth	r4, r4
9001cb24:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
9001cb28:	f3c7 27c4 	ubfx	r7, r7, #11, #5
9001cb2c:	433d      	orrs	r5, r7
9001cb2e:	1c67      	adds	r7, r4, #1
9001cb30:	eb07 2414 	add.w	r4, r7, r4, lsr #8
9001cb34:	0964      	lsrs	r4, r4, #5
9001cb36:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
9001cb3a:	4325      	orrs	r5, r4
9001cb3c:	8005      	strh	r5, [r0, #0]
9001cb3e:	e7bd      	b.n	9001cabc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
9001cb40:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001cb42:	4418      	add	r0, r3
9001cb44:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001cb46:	4499      	add	r9, r3
9001cb48:	e795      	b.n	9001ca76 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
9001cb4a:	4b04      	ldr	r3, [pc, #16]	; (9001cb5c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
9001cb4c:	6818      	ldr	r0, [r3, #0]
9001cb4e:	6803      	ldr	r3, [r0, #0]
9001cb50:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001cb52:	4798      	blx	r3
9001cb54:	e771      	b.n	9001ca3a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
9001cb56:	bf00      	nop
9001cb58:	24023576 	.word	0x24023576
9001cb5c:	2402357c 	.word	0x2402357c

9001cb60 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
9001cb60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001cb64:	b087      	sub	sp, #28
9001cb66:	4680      	mov	r8, r0
9001cb68:	460d      	mov	r5, r1
9001cb6a:	4614      	mov	r4, r2
9001cb6c:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
9001cb70:	2e00      	cmp	r6, #0
9001cb72:	f000 80b9 	beq.w	9001cce8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
9001cb76:	6810      	ldr	r0, [r2, #0]
9001cb78:	af02      	add	r7, sp, #8
9001cb7a:	6851      	ldr	r1, [r2, #4]
9001cb7c:	c703      	stmia	r7!, {r0, r1}
9001cb7e:	6818      	ldr	r0, [r3, #0]
9001cb80:	af04      	add	r7, sp, #16
9001cb82:	6859      	ldr	r1, [r3, #4]
9001cb84:	c703      	stmia	r7!, {r0, r1}
9001cb86:	a802      	add	r0, sp, #8
9001cb88:	f7f7 feb0 	bl	900148ec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001cb8c:	4621      	mov	r1, r4
9001cb8e:	a804      	add	r0, sp, #16
9001cb90:	f7f7 fef0 	bl	90014974 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001cb94:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
9001cb98:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9001cb9c:	f8bd 400c 	ldrh.w	r4, [sp, #12]
9001cba0:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
9001cba4:	fb14 2103 	smlabb	r1, r4, r3, r2
9001cba8:	eb08 0401 	add.w	r4, r8, r1
9001cbac:	f8bd 1008 	ldrh.w	r1, [sp, #8]
9001cbb0:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
9001cbb4:	440a      	add	r2, r1
9001cbb6:	ea4f 0a48 	mov.w	sl, r8, lsl #1
9001cbba:	f8ad 2010 	strh.w	r2, [sp, #16]
9001cbbe:	f8bd 200a 	ldrh.w	r2, [sp, #10]
9001cbc2:	4413      	add	r3, r2
9001cbc4:	f8ad 3012 	strh.w	r3, [sp, #18]
9001cbc8:	4b49      	ldr	r3, [pc, #292]	; (9001ccf0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
9001cbca:	6818      	ldr	r0, [r3, #0]
9001cbcc:	6803      	ldr	r3, [r0, #0]
9001cbce:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001cbd0:	4798      	blx	r3
9001cbd2:	4b48      	ldr	r3, [pc, #288]	; (9001ccf4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
9001cbd4:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
9001cbd8:	2eff      	cmp	r6, #255	; 0xff
9001cbda:	881a      	ldrh	r2, [r3, #0]
9001cbdc:	f9bd c010 	ldrsh.w	ip, [sp, #16]
9001cbe0:	fb02 c101 	mla	r1, r2, r1, ip
9001cbe4:	fb02 f207 	mul.w	r2, r2, r7
9001cbe8:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001cbec:	f105 0104 	add.w	r1, r5, #4
9001cbf0:	461d      	mov	r5, r3
9001cbf2:	d05a      	beq.n	9001ccaa <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
9001cbf4:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
9001cbf8:	eb00 0242 	add.w	r2, r0, r2, lsl #1
9001cbfc:	b2b6      	uxth	r6, r6
9001cbfe:	9301      	str	r3, [sp, #4]
9001cc00:	fa1f fe8e 	uxth.w	lr, lr
9001cc04:	4282      	cmp	r2, r0
9001cc06:	d96a      	bls.n	9001ccde <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
9001cc08:	eb00 0b0a 	add.w	fp, r0, sl
9001cc0c:	4583      	cmp	fp, r0
9001cc0e:	d940      	bls.n	9001cc92 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
9001cc10:	8805      	ldrh	r5, [r0, #0]
9001cc12:	f814 3b01 	ldrb.w	r3, [r4], #1
9001cc16:	122f      	asrs	r7, r5, #8
9001cc18:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
9001cc1c:	ea4f 09e5 	mov.w	r9, r5, asr #3
9001cc20:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001cc24:	00ed      	lsls	r5, r5, #3
9001cc26:	ea4f 2c23 	mov.w	ip, r3, asr #8
9001cc2a:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
9001cc2e:	fb17 f70e 	smulbb	r7, r7, lr
9001cc32:	b2ed      	uxtb	r5, r5
9001cc34:	fb19 f90e 	smulbb	r9, r9, lr
9001cc38:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001cc3c:	fb15 f50e 	smulbb	r5, r5, lr
9001cc40:	fb0c 7c06 	mla	ip, ip, r6, r7
9001cc44:	10df      	asrs	r7, r3, #3
9001cc46:	00db      	lsls	r3, r3, #3
9001cc48:	fa1f fc8c 	uxth.w	ip, ip
9001cc4c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001cc50:	b2db      	uxtb	r3, r3
9001cc52:	fb07 9706 	mla	r7, r7, r6, r9
9001cc56:	f10c 0901 	add.w	r9, ip, #1
9001cc5a:	fb03 5306 	mla	r3, r3, r6, r5
9001cc5e:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
9001cc62:	b29b      	uxth	r3, r3
9001cc64:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
9001cc68:	b2bf      	uxth	r7, r7
9001cc6a:	f103 0c01 	add.w	ip, r3, #1
9001cc6e:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
9001cc72:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9001cc76:	ea4c 0c09 	orr.w	ip, ip, r9
9001cc7a:	f107 0901 	add.w	r9, r7, #1
9001cc7e:	eb09 2717 	add.w	r7, r9, r7, lsr #8
9001cc82:	097f      	lsrs	r7, r7, #5
9001cc84:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
9001cc88:	ea4c 0c07 	orr.w	ip, ip, r7
9001cc8c:	f820 cb02 	strh.w	ip, [r0], #2
9001cc90:	e7bc      	b.n	9001cc0c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
9001cc92:	9b01      	ldr	r3, [sp, #4]
9001cc94:	881b      	ldrh	r3, [r3, #0]
9001cc96:	eba3 0308 	sub.w	r3, r3, r8
9001cc9a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001cc9e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
9001cca2:	eba3 0308 	sub.w	r3, r3, r8
9001cca6:	441c      	add	r4, r3
9001cca8:	e7ac      	b.n	9001cc04 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
9001ccaa:	eb00 0242 	add.w	r2, r0, r2, lsl #1
9001ccae:	4282      	cmp	r2, r0
9001ccb0:	d915      	bls.n	9001ccde <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
9001ccb2:	eb00 060a 	add.w	r6, r0, sl
9001ccb6:	4286      	cmp	r6, r0
9001ccb8:	d906      	bls.n	9001ccc8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
9001ccba:	f814 3b01 	ldrb.w	r3, [r4], #1
9001ccbe:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
9001ccc2:	f820 3b02 	strh.w	r3, [r0], #2
9001ccc6:	e7f6      	b.n	9001ccb6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
9001ccc8:	882b      	ldrh	r3, [r5, #0]
9001ccca:	eba3 0308 	sub.w	r3, r3, r8
9001ccce:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001ccd2:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
9001ccd6:	eba3 0308 	sub.w	r3, r3, r8
9001ccda:	441c      	add	r4, r3
9001ccdc:	e7e7      	b.n	9001ccae <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
9001ccde:	4b04      	ldr	r3, [pc, #16]	; (9001ccf0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
9001cce0:	6818      	ldr	r0, [r3, #0]
9001cce2:	6803      	ldr	r3, [r0, #0]
9001cce4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001cce6:	4798      	blx	r3
9001cce8:	b007      	add	sp, #28
9001ccea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001ccee:	bf00      	nop
9001ccf0:	2402357c 	.word	0x2402357c
9001ccf4:	24023576 	.word	0x24023576

9001ccf8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
9001ccf8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001ccfc:	b091      	sub	sp, #68	; 0x44
9001ccfe:	4680      	mov	r8, r0
9001cd00:	460f      	mov	r7, r1
9001cd02:	4614      	mov	r4, r2
9001cd04:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
9001cd08:	2d00      	cmp	r5, #0
9001cd0a:	d051      	beq.n	9001cdb0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
9001cd0c:	6810      	ldr	r0, [r2, #0]
9001cd0e:	ae0c      	add	r6, sp, #48	; 0x30
9001cd10:	6851      	ldr	r1, [r2, #4]
9001cd12:	f8df 9200 	ldr.w	r9, [pc, #512]	; 9001cf14 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
9001cd16:	c603      	stmia	r6!, {r0, r1}
9001cd18:	6818      	ldr	r0, [r3, #0]
9001cd1a:	ae0e      	add	r6, sp, #56	; 0x38
9001cd1c:	6859      	ldr	r1, [r3, #4]
9001cd1e:	c603      	stmia	r6!, {r0, r1}
9001cd20:	a80c      	add	r0, sp, #48	; 0x30
9001cd22:	f7f7 fde3 	bl	900148ec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001cd26:	4621      	mov	r1, r4
9001cd28:	a80e      	add	r0, sp, #56	; 0x38
9001cd2a:	f7f7 fe23 	bl	90014974 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001cd2e:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
9001cd32:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
9001cd36:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
9001cd3a:	f8d9 0000 	ldr.w	r0, [r9]
9001cd3e:	fb11 2103 	smlabb	r1, r1, r3, r2
9001cd42:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
9001cd46:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
9001cd4a:	eb08 0401 	add.w	r4, r8, r1
9001cd4e:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
9001cd52:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 9001cf18 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
9001cd56:	440a      	add	r2, r1
9001cd58:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
9001cd5c:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
9001cd60:	4413      	add	r3, r2
9001cd62:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
9001cd66:	6803      	ldr	r3, [r0, #0]
9001cd68:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001cd6a:	4798      	blx	r3
9001cd6c:	f010 0f80 	tst.w	r0, #128	; 0x80
9001cd70:	f8d9 0000 	ldr.w	r0, [r9]
9001cd74:	d01f      	beq.n	9001cdb6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
9001cd76:	2200      	movs	r2, #0
9001cd78:	6801      	ldr	r1, [r0, #0]
9001cd7a:	b2b6      	uxth	r6, r6
9001cd7c:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
9001cd80:	e9cd 2208 	strd	r2, r2, [sp, #32]
9001cd84:	220b      	movs	r2, #11
9001cd86:	9207      	str	r2, [sp, #28]
9001cd88:	f8b8 2000 	ldrh.w	r2, [r8]
9001cd8c:	9601      	str	r6, [sp, #4]
9001cd8e:	9206      	str	r2, [sp, #24]
9001cd90:	2201      	movs	r2, #1
9001cd92:	e9cd 5204 	strd	r5, r2, [sp, #16]
9001cd96:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
9001cd9a:	9203      	str	r2, [sp, #12]
9001cd9c:	fa1f f28a 	uxth.w	r2, sl
9001cda0:	9202      	str	r2, [sp, #8]
9001cda2:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
9001cda6:	9200      	str	r2, [sp, #0]
9001cda8:	463a      	mov	r2, r7
9001cdaa:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
9001cdac:	4621      	mov	r1, r4
9001cdae:	47a8      	blx	r5
9001cdb0:	b011      	add	sp, #68	; 0x44
9001cdb2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001cdb6:	6803      	ldr	r3, [r0, #0]
9001cdb8:	ea4f 0946 	mov.w	r9, r6, lsl #1
9001cdbc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001cdbe:	4798      	blx	r3
9001cdc0:	f8b8 2000 	ldrh.w	r2, [r8]
9001cdc4:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
9001cdc8:	2dff      	cmp	r5, #255	; 0xff
9001cdca:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
9001cdce:	fb0a fa02 	mul.w	sl, sl, r2
9001cdd2:	fb02 1303 	mla	r3, r2, r3, r1
9001cdd6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001cdda:	d062      	beq.n	9001cea2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
9001cddc:	ea6f 0c05 	mvn.w	ip, r5
9001cde0:	eb00 034a 	add.w	r3, r0, sl, lsl #1
9001cde4:	b2ad      	uxth	r5, r5
9001cde6:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
9001cdea:	fa5f fc8c 	uxtb.w	ip, ip
9001cdee:	930a      	str	r3, [sp, #40]	; 0x28
9001cdf0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001cdf2:	4298      	cmp	r0, r3
9001cdf4:	f080 8085 	bcs.w	9001cf02 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
9001cdf8:	eb00 0b09 	add.w	fp, r0, r9
9001cdfc:	4558      	cmp	r0, fp
9001cdfe:	d246      	bcs.n	9001ce8e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
9001ce00:	f814 eb01 	ldrb.w	lr, [r4], #1
9001ce04:	2303      	movs	r3, #3
9001ce06:	2204      	movs	r2, #4
9001ce08:	fb13 2e0e 	smlabb	lr, r3, lr, r2
9001ce0c:	8803      	ldrh	r3, [r0, #0]
9001ce0e:	eb07 0a0e 	add.w	sl, r7, lr
9001ce12:	1219      	asrs	r1, r3, #8
9001ce14:	10da      	asrs	r2, r3, #3
9001ce16:	f817 e00e 	ldrb.w	lr, [r7, lr]
9001ce1a:	f89a 8002 	ldrb.w	r8, [sl, #2]
9001ce1e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
9001ce22:	00db      	lsls	r3, r3, #3
9001ce24:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
9001ce28:	fb18 f805 	smulbb	r8, r8, r5
9001ce2c:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
9001ce30:	fb1e fe05 	smulbb	lr, lr, r5
9001ce34:	b2db      	uxtb	r3, r3
9001ce36:	fb01 810c 	mla	r1, r1, ip, r8
9001ce3a:	f89a 8001 	ldrb.w	r8, [sl, #1]
9001ce3e:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
9001ce42:	fb18 f805 	smulbb	r8, r8, r5
9001ce46:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
9001ce4a:	b289      	uxth	r1, r1
9001ce4c:	fb02 820c 	mla	r2, r2, ip, r8
9001ce50:	fb03 e30c 	mla	r3, r3, ip, lr
9001ce54:	f101 0801 	add.w	r8, r1, #1
9001ce58:	b292      	uxth	r2, r2
9001ce5a:	b29b      	uxth	r3, r3
9001ce5c:	eb08 2111 	add.w	r1, r8, r1, lsr #8
9001ce60:	f102 0801 	add.w	r8, r2, #1
9001ce64:	f103 0e01 	add.w	lr, r3, #1
9001ce68:	eb08 2812 	add.w	r8, r8, r2, lsr #8
9001ce6c:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
9001ce70:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
9001ce74:	ea4f 1858 	mov.w	r8, r8, lsr #5
9001ce78:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
9001ce7c:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
9001ce80:	ea4e 0101 	orr.w	r1, lr, r1
9001ce84:	ea41 0108 	orr.w	r1, r1, r8
9001ce88:	f820 1b02 	strh.w	r1, [r0], #2
9001ce8c:	e7b6      	b.n	9001cdfc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
9001ce8e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001ce90:	881b      	ldrh	r3, [r3, #0]
9001ce92:	1b9b      	subs	r3, r3, r6
9001ce94:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001ce98:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
9001ce9c:	1b9b      	subs	r3, r3, r6
9001ce9e:	441c      	add	r4, r3
9001cea0:	e7a6      	b.n	9001cdf0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
9001cea2:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
9001cea6:	2203      	movs	r2, #3
9001cea8:	2504      	movs	r5, #4
9001ceaa:	4919      	ldr	r1, [pc, #100]	; (9001cf10 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
9001ceac:	4550      	cmp	r0, sl
9001ceae:	d228      	bcs.n	9001cf02 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
9001ceb0:	eb00 0c09 	add.w	ip, r0, r9
9001ceb4:	4560      	cmp	r0, ip
9001ceb6:	4623      	mov	r3, r4
9001ceb8:	d219      	bcs.n	9001ceee <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
9001ceba:	f893 e000 	ldrb.w	lr, [r3]
9001cebe:	3401      	adds	r4, #1
9001cec0:	fb12 5e0e 	smlabb	lr, r2, lr, r5
9001cec4:	eb07 0b0e 	add.w	fp, r7, lr
9001cec8:	f817 e00e 	ldrb.w	lr, [r7, lr]
9001cecc:	f89b 3002 	ldrb.w	r3, [fp, #2]
9001ced0:	f89b b001 	ldrb.w	fp, [fp, #1]
9001ced4:	ea01 2303 	and.w	r3, r1, r3, lsl #8
9001ced8:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
9001cedc:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
9001cee0:	ea43 030b 	orr.w	r3, r3, fp
9001cee4:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
9001cee8:	f820 3b02 	strh.w	r3, [r0], #2
9001ceec:	e7e2      	b.n	9001ceb4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
9001ceee:	f8b8 3000 	ldrh.w	r3, [r8]
9001cef2:	1b9b      	subs	r3, r3, r6
9001cef4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001cef8:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
9001cefc:	1b9b      	subs	r3, r3, r6
9001cefe:	441c      	add	r4, r3
9001cf00:	e7d4      	b.n	9001ceac <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
9001cf02:	4b04      	ldr	r3, [pc, #16]	; (9001cf14 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
9001cf04:	6818      	ldr	r0, [r3, #0]
9001cf06:	6803      	ldr	r3, [r0, #0]
9001cf08:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001cf0a:	4798      	blx	r3
9001cf0c:	e750      	b.n	9001cdb0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
9001cf0e:	bf00      	nop
9001cf10:	fffff800 	.word	0xfffff800
9001cf14:	2402357c 	.word	0x2402357c
9001cf18:	24023576 	.word	0x24023576

9001cf1c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
9001cf1c:	b4f0      	push	{r4, r5, r6, r7}
9001cf1e:	460c      	mov	r4, r1
9001cf20:	4611      	mov	r1, r2
9001cf22:	f89d 5014 	ldrb.w	r5, [sp, #20]
9001cf26:	461a      	mov	r2, r3
9001cf28:	780f      	ldrb	r7, [r1, #0]
9001cf2a:	9b04      	ldr	r3, [sp, #16]
9001cf2c:	2f01      	cmp	r7, #1
9001cf2e:	784e      	ldrb	r6, [r1, #1]
9001cf30:	d038      	beq.n	9001cfa4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x88>
9001cf32:	d31f      	bcc.n	9001cf74 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x58>
9001cf34:	2f02      	cmp	r7, #2
9001cf36:	d14d      	bne.n	9001cfd4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
9001cf38:	2e03      	cmp	r6, #3
9001cf3a:	d84b      	bhi.n	9001cfd4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
9001cf3c:	e8df f006 	tbb	[pc, r6]
9001cf40:	17140702 	.word	0x17140702
9001cf44:	9504      	str	r5, [sp, #16]
9001cf46:	4620      	mov	r0, r4
9001cf48:	bcf0      	pop	{r4, r5, r6, r7}
9001cf4a:	f7ff be09 	b.w	9001cb60 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
9001cf4e:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
9001cf50:	2800      	cmp	r0, #0
9001cf52:	d03f      	beq.n	9001cfd4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
9001cf54:	6806      	ldr	r6, [r0, #0]
9001cf56:	e9cd 3504 	strd	r3, r5, [sp, #16]
9001cf5a:	68b5      	ldr	r5, [r6, #8]
9001cf5c:	4613      	mov	r3, r2
9001cf5e:	46ac      	mov	ip, r5
9001cf60:	460a      	mov	r2, r1
9001cf62:	4621      	mov	r1, r4
9001cf64:	bcf0      	pop	{r4, r5, r6, r7}
9001cf66:	4760      	bx	ip
9001cf68:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
9001cf6c:	e7f0      	b.n	9001cf50 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
9001cf6e:	f8d0 0084 	ldr.w	r0, [r0, #132]	; 0x84
9001cf72:	e7ed      	b.n	9001cf50 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
9001cf74:	2e03      	cmp	r6, #3
9001cf76:	d82d      	bhi.n	9001cfd4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
9001cf78:	e8df f006 	tbb	[pc, r6]
9001cf7c:	110e0702 	.word	0x110e0702
9001cf80:	9504      	str	r5, [sp, #16]
9001cf82:	4620      	mov	r0, r4
9001cf84:	bcf0      	pop	{r4, r5, r6, r7}
9001cf86:	f7ff bd05 	b.w	9001c994 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
9001cf8a:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
9001cf8c:	b310      	cbz	r0, 9001cfd4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
9001cf8e:	6806      	ldr	r6, [r0, #0]
9001cf90:	e9cd 3504 	strd	r3, r5, [sp, #16]
9001cf94:	68f5      	ldr	r5, [r6, #12]
9001cf96:	e7e1      	b.n	9001cf5c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
9001cf98:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
9001cf9c:	e7f6      	b.n	9001cf8c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
9001cf9e:	f8d0 0084 	ldr.w	r0, [r0, #132]	; 0x84
9001cfa2:	e7f3      	b.n	9001cf8c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
9001cfa4:	2e03      	cmp	r6, #3
9001cfa6:	d815      	bhi.n	9001cfd4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
9001cfa8:	e8df f006 	tbb	[pc, r6]
9001cfac:	110e0702 	.word	0x110e0702
9001cfb0:	9504      	str	r5, [sp, #16]
9001cfb2:	4620      	mov	r0, r4
9001cfb4:	bcf0      	pop	{r4, r5, r6, r7}
9001cfb6:	f7ff be9f 	b.w	9001ccf8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
9001cfba:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
9001cfbc:	b150      	cbz	r0, 9001cfd4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
9001cfbe:	6806      	ldr	r6, [r0, #0]
9001cfc0:	e9cd 3504 	strd	r3, r5, [sp, #16]
9001cfc4:	6935      	ldr	r5, [r6, #16]
9001cfc6:	e7c9      	b.n	9001cf5c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
9001cfc8:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
9001cfcc:	e7f6      	b.n	9001cfbc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
9001cfce:	f8d0 0084 	ldr.w	r0, [r0, #132]	; 0x84
9001cfd2:	e7f3      	b.n	9001cfbc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
9001cfd4:	bcf0      	pop	{r4, r5, r6, r7}
9001cfd6:	4770      	bx	lr

9001cfd8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
9001cfd8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001cfdc:	b087      	sub	sp, #28
9001cfde:	4604      	mov	r4, r0
9001cfe0:	460e      	mov	r6, r1
9001cfe2:	6810      	ldr	r0, [r2, #0]
9001cfe4:	6851      	ldr	r1, [r2, #4]
9001cfe6:	ad02      	add	r5, sp, #8
9001cfe8:	4617      	mov	r7, r2
9001cfea:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
9001cfee:	f8df 9230 	ldr.w	r9, [pc, #560]	; 9001d220 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
9001cff2:	c503      	stmia	r5!, {r0, r1}
9001cff4:	6818      	ldr	r0, [r3, #0]
9001cff6:	ad04      	add	r5, sp, #16
9001cff8:	6859      	ldr	r1, [r3, #4]
9001cffa:	c503      	stmia	r5!, {r0, r1}
9001cffc:	a802      	add	r0, sp, #8
9001cffe:	f7f7 fc75 	bl	900148ec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001d002:	4639      	mov	r1, r7
9001d004:	a804      	add	r0, sp, #16
9001d006:	f7f7 fcb5 	bl	90014974 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001d00a:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
9001d00e:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9001d012:	f8bd 100c 	ldrh.w	r1, [sp, #12]
9001d016:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
9001d01a:	fb11 2103 	smlabb	r1, r1, r3, r2
9001d01e:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
9001d022:	eb04 0441 	add.w	r4, r4, r1, lsl #1
9001d026:	440e      	add	r6, r1
9001d028:	f8bd 1008 	ldrh.w	r1, [sp, #8]
9001d02c:	440a      	add	r2, r1
9001d02e:	f8ad 2010 	strh.w	r2, [sp, #16]
9001d032:	f8bd 200a 	ldrh.w	r2, [sp, #10]
9001d036:	4413      	add	r3, r2
9001d038:	f8ad 3012 	strh.w	r3, [sp, #18]
9001d03c:	4b77      	ldr	r3, [pc, #476]	; (9001d21c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
9001d03e:	6818      	ldr	r0, [r3, #0]
9001d040:	6803      	ldr	r3, [r0, #0]
9001d042:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001d044:	4798      	blx	r3
9001d046:	f8b9 b000 	ldrh.w	fp, [r9]
9001d04a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9001d04e:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
9001d052:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
9001d056:	fb05 f50b 	mul.w	r5, r5, fp
9001d05a:	fb0b 2303 	mla	r3, fp, r3, r2
9001d05e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001d062:	ea4f 0348 	mov.w	r3, r8, lsl #1
9001d066:	9300      	str	r3, [sp, #0]
9001d068:	d069      	beq.n	9001d13e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
9001d06a:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
9001d06e:	4558      	cmp	r0, fp
9001d070:	f080 80cc 	bcs.w	9001d20c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
9001d074:	9b00      	ldr	r3, [sp, #0]
9001d076:	4631      	mov	r1, r6
9001d078:	18c3      	adds	r3, r0, r3
9001d07a:	9301      	str	r3, [sp, #4]
9001d07c:	9b01      	ldr	r3, [sp, #4]
9001d07e:	4298      	cmp	r0, r3
9001d080:	d24f      	bcs.n	9001d122 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
9001d082:	f811 2b01 	ldrb.w	r2, [r1], #1
9001d086:	2a00      	cmp	r2, #0
9001d088:	d048      	beq.n	9001d11c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
9001d08a:	fb0a f202 	mul.w	r2, sl, r2
9001d08e:	1c53      	adds	r3, r2, #1
9001d090:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9001d094:	121b      	asrs	r3, r3, #8
9001d096:	d041      	beq.n	9001d11c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
9001d098:	8802      	ldrh	r2, [r0, #0]
9001d09a:	b29e      	uxth	r6, r3
9001d09c:	f8b4 c000 	ldrh.w	ip, [r4]
9001d0a0:	43db      	mvns	r3, r3
9001d0a2:	1215      	asrs	r5, r2, #8
9001d0a4:	b2db      	uxtb	r3, r3
9001d0a6:	ea4f 272c 	mov.w	r7, ip, asr #8
9001d0aa:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
9001d0ae:	ea4f 0ee2 	mov.w	lr, r2, asr #3
9001d0b2:	fb15 f503 	smulbb	r5, r5, r3
9001d0b6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001d0ba:	00d2      	lsls	r2, r2, #3
9001d0bc:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
9001d0c0:	fb07 5706 	mla	r7, r7, r6, r5
9001d0c4:	ea4f 05ec 	mov.w	r5, ip, asr #3
9001d0c8:	b2d2      	uxtb	r2, r2
9001d0ca:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001d0ce:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
9001d0d2:	fb1e fe03 	smulbb	lr, lr, r3
9001d0d6:	b2bf      	uxth	r7, r7
9001d0d8:	fb12 f203 	smulbb	r2, r2, r3
9001d0dc:	fa5f fc8c 	uxtb.w	ip, ip
9001d0e0:	fb05 e506 	mla	r5, r5, r6, lr
9001d0e4:	f107 0e01 	add.w	lr, r7, #1
9001d0e8:	fb0c 2c06 	mla	ip, ip, r6, r2
9001d0ec:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
9001d0f0:	fa1f fc8c 	uxth.w	ip, ip
9001d0f4:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
9001d0f8:	b2ad      	uxth	r5, r5
9001d0fa:	f10c 0701 	add.w	r7, ip, #1
9001d0fe:	eb07 271c 	add.w	r7, r7, ip, lsr #8
9001d102:	f3c7 27c4 	ubfx	r7, r7, #11, #5
9001d106:	ea47 070e 	orr.w	r7, r7, lr
9001d10a:	f105 0e01 	add.w	lr, r5, #1
9001d10e:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
9001d112:	096d      	lsrs	r5, r5, #5
9001d114:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001d118:	432f      	orrs	r7, r5
9001d11a:	8007      	strh	r7, [r0, #0]
9001d11c:	3002      	adds	r0, #2
9001d11e:	3402      	adds	r4, #2
9001d120:	e7ac      	b.n	9001d07c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
9001d122:	f8b9 3000 	ldrh.w	r3, [r9]
9001d126:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
9001d12a:	eba3 0308 	sub.w	r3, r3, r8
9001d12e:	eba6 0608 	sub.w	r6, r6, r8
9001d132:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001d136:	eb04 0446 	add.w	r4, r4, r6, lsl #1
9001d13a:	440e      	add	r6, r1
9001d13c:	e797      	b.n	9001d06e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
9001d13e:	eb00 0545 	add.w	r5, r0, r5, lsl #1
9001d142:	42a8      	cmp	r0, r5
9001d144:	d262      	bcs.n	9001d20c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
9001d146:	9b00      	ldr	r3, [sp, #0]
9001d148:	4631      	mov	r1, r6
9001d14a:	eb00 0b03 	add.w	fp, r0, r3
9001d14e:	4558      	cmp	r0, fp
9001d150:	d24e      	bcs.n	9001d1f0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
9001d152:	f811 3b01 	ldrb.w	r3, [r1], #1
9001d156:	b12b      	cbz	r3, 9001d164 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
9001d158:	2bff      	cmp	r3, #255	; 0xff
9001d15a:	f8b4 e000 	ldrh.w	lr, [r4]
9001d15e:	d104      	bne.n	9001d16a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
9001d160:	f8a0 e000 	strh.w	lr, [r0]
9001d164:	3002      	adds	r0, #2
9001d166:	3402      	adds	r4, #2
9001d168:	e7f1      	b.n	9001d14e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
9001d16a:	8802      	ldrh	r2, [r0, #0]
9001d16c:	b29f      	uxth	r7, r3
9001d16e:	43db      	mvns	r3, r3
9001d170:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001d174:	1216      	asrs	r6, r2, #8
9001d176:	b2db      	uxtb	r3, r3
9001d178:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001d17c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001d180:	ea4f 0ae2 	mov.w	sl, r2, asr #3
9001d184:	00d2      	lsls	r2, r2, #3
9001d186:	fb16 f603 	smulbb	r6, r6, r3
9001d18a:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
9001d18e:	b2d2      	uxtb	r2, r2
9001d190:	fb0c 6c07 	mla	ip, ip, r7, r6
9001d194:	ea4f 06ee 	mov.w	r6, lr, asr #3
9001d198:	fb1a fa03 	smulbb	sl, sl, r3
9001d19c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001d1a0:	fa1f fc8c 	uxth.w	ip, ip
9001d1a4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001d1a8:	fb12 f303 	smulbb	r3, r2, r3
9001d1ac:	fa5f fe8e 	uxtb.w	lr, lr
9001d1b0:	fb06 a607 	mla	r6, r6, r7, sl
9001d1b4:	f10c 0201 	add.w	r2, ip, #1
9001d1b8:	fb0e 3307 	mla	r3, lr, r7, r3
9001d1bc:	b2b6      	uxth	r6, r6
9001d1be:	b29b      	uxth	r3, r3
9001d1c0:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
9001d1c4:	f106 0a01 	add.w	sl, r6, #1
9001d1c8:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
9001d1cc:	f103 0c01 	add.w	ip, r3, #1
9001d1d0:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
9001d1d4:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
9001d1d8:	0976      	lsrs	r6, r6, #5
9001d1da:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9001d1de:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
9001d1e2:	ea4c 0c02 	orr.w	ip, ip, r2
9001d1e6:	ea4c 0c06 	orr.w	ip, ip, r6
9001d1ea:	f8a0 c000 	strh.w	ip, [r0]
9001d1ee:	e7b9      	b.n	9001d164 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
9001d1f0:	f8b9 3000 	ldrh.w	r3, [r9]
9001d1f4:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
9001d1f8:	eba3 0308 	sub.w	r3, r3, r8
9001d1fc:	eba6 0608 	sub.w	r6, r6, r8
9001d200:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001d204:	eb04 0446 	add.w	r4, r4, r6, lsl #1
9001d208:	440e      	add	r6, r1
9001d20a:	e79a      	b.n	9001d142 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
9001d20c:	4b03      	ldr	r3, [pc, #12]	; (9001d21c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
9001d20e:	6818      	ldr	r0, [r3, #0]
9001d210:	6803      	ldr	r3, [r0, #0]
9001d212:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001d214:	4798      	blx	r3
9001d216:	b007      	add	sp, #28
9001d218:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001d21c:	2402357c 	.word	0x2402357c
9001d220:	24023576 	.word	0x24023576

9001d224 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
9001d224:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d228:	b089      	sub	sp, #36	; 0x24
9001d22a:	4682      	mov	sl, r0
9001d22c:	460f      	mov	r7, r1
9001d22e:	4691      	mov	r9, r2
9001d230:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
9001d234:	4698      	mov	r8, r3
9001d236:	9c12      	ldr	r4, [sp, #72]	; 0x48
9001d238:	2e00      	cmp	r6, #0
9001d23a:	d03d      	beq.n	9001d2b8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
9001d23c:	4608      	mov	r0, r1
9001d23e:	f7fa fe4b 	bl	90017ed8 <_ZNK8touchgfx6Bitmap8getWidthEv>
9001d242:	4605      	mov	r5, r0
9001d244:	4638      	mov	r0, r7
9001d246:	f7fa fe7b 	bl	90017f40 <_ZNK8touchgfx6Bitmap9getHeightEv>
9001d24a:	f8ad 000e 	strh.w	r0, [sp, #14]
9001d24e:	4638      	mov	r0, r7
9001d250:	f8ad 9008 	strh.w	r9, [sp, #8]
9001d254:	f8ad 500c 	strh.w	r5, [sp, #12]
9001d258:	f8ad 800a 	strh.w	r8, [sp, #10]
9001d25c:	f7fa ff28 	bl	900180b0 <_ZNK8touchgfx6Bitmap7getDataEv>
9001d260:	4605      	mov	r5, r0
9001d262:	4638      	mov	r0, r7
9001d264:	f7fa ff54 	bl	90018110 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
9001d268:	4681      	mov	r9, r0
9001d26a:	4638      	mov	r0, r7
9001d26c:	f7fa ffa4 	bl	900181b8 <_ZNK8touchgfx6Bitmap9getFormatEv>
9001d270:	280b      	cmp	r0, #11
9001d272:	d821      	bhi.n	9001d2b8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
9001d274:	e8df f000 	tbb	[pc, r0]
9001d278:	2006aebe 	.word	0x2006aebe
9001d27c:	20202020 	.word	0x20202020
9001d280:	b5202020 	.word	0xb5202020
9001d284:	4bb0      	ldr	r3, [pc, #704]	; (9001d548 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
9001d286:	6818      	ldr	r0, [r3, #0]
9001d288:	6803      	ldr	r3, [r0, #0]
9001d28a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001d28c:	4798      	blx	r3
9001d28e:	2eff      	cmp	r6, #255	; 0xff
9001d290:	d101      	bne.n	9001d296 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
9001d292:	0683      	lsls	r3, r0, #26
9001d294:	d506      	bpl.n	9001d2a4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x80>
9001d296:	4633      	mov	r3, r6
9001d298:	4622      	mov	r2, r4
9001d29a:	a902      	add	r1, sp, #8
9001d29c:	4628      	mov	r0, r5
9001d29e:	f7ff f907 	bl	9001c4b0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
9001d2a2:	e009      	b.n	9001d2b8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
9001d2a4:	4638      	mov	r0, r7
9001d2a6:	f7fa fecb 	bl	90018040 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
9001d2aa:	b940      	cbnz	r0, 9001d2be <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
9001d2ac:	4623      	mov	r3, r4
9001d2ae:	aa02      	add	r2, sp, #8
9001d2b0:	4629      	mov	r1, r5
9001d2b2:	4650      	mov	r0, sl
9001d2b4:	f7ff f9e2 	bl	9001c67c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
9001d2b8:	b009      	add	sp, #36	; 0x24
9001d2ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001d2be:	f10d 0818 	add.w	r8, sp, #24
9001d2c2:	4639      	mov	r1, r7
9001d2c4:	af04      	add	r7, sp, #16
9001d2c6:	4640      	mov	r0, r8
9001d2c8:	f7fa fe6e 	bl	90017fa8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
9001d2cc:	e898 0003 	ldmia.w	r8, {r0, r1}
9001d2d0:	e887 0003 	stmia.w	r7, {r0, r1}
9001d2d4:	4638      	mov	r0, r7
9001d2d6:	4621      	mov	r1, r4
9001d2d8:	f7f2 fd9e 	bl	9000fe18 <_ZN8touchgfx4RectaNERKS0_>
9001d2dc:	4638      	mov	r0, r7
9001d2de:	f7f2 fdde 	bl	9000fe9e <_ZNK8touchgfx4Rect7isEmptyEv>
9001d2e2:	2800      	cmp	r0, #0
9001d2e4:	d1d7      	bne.n	9001d296 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
9001d2e6:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9001d2ea:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
9001d2ee:	4293      	cmp	r3, r2
9001d2f0:	dd12      	ble.n	9001d318 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf4>
9001d2f2:	1a9b      	subs	r3, r3, r2
9001d2f4:	f9b4 0000 	ldrsh.w	r0, [r4]
9001d2f8:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
9001d2fc:	f8ad 0018 	strh.w	r0, [sp, #24]
9001d300:	4628      	mov	r0, r5
9001d302:	f8ad 201a 	strh.w	r2, [sp, #26]
9001d306:	4642      	mov	r2, r8
9001d308:	f8ad 101c 	strh.w	r1, [sp, #28]
9001d30c:	a902      	add	r1, sp, #8
9001d30e:	f8ad 301e 	strh.w	r3, [sp, #30]
9001d312:	4633      	mov	r3, r6
9001d314:	f7ff f8cc 	bl	9001c4b0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
9001d318:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
9001d31c:	f9b4 2000 	ldrsh.w	r2, [r4]
9001d320:	4293      	cmp	r3, r2
9001d322:	dd12      	ble.n	9001d34a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x126>
9001d324:	1a9b      	subs	r3, r3, r2
9001d326:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
9001d32a:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
9001d32e:	f8ad 2018 	strh.w	r2, [sp, #24]
9001d332:	4642      	mov	r2, r8
9001d334:	f8ad 001a 	strh.w	r0, [sp, #26]
9001d338:	4628      	mov	r0, r5
9001d33a:	f8ad 301c 	strh.w	r3, [sp, #28]
9001d33e:	23ff      	movs	r3, #255	; 0xff
9001d340:	f8ad 101e 	strh.w	r1, [sp, #30]
9001d344:	a902      	add	r1, sp, #8
9001d346:	f7ff f8b3 	bl	9001c4b0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
9001d34a:	463b      	mov	r3, r7
9001d34c:	aa02      	add	r2, sp, #8
9001d34e:	4629      	mov	r1, r5
9001d350:	4650      	mov	r0, sl
9001d352:	f7ff f993 	bl	9001c67c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
9001d356:	88a2      	ldrh	r2, [r4, #4]
9001d358:	8823      	ldrh	r3, [r4, #0]
9001d35a:	f8bd 1014 	ldrh.w	r1, [sp, #20]
9001d35e:	4413      	add	r3, r2
9001d360:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001d364:	440a      	add	r2, r1
9001d366:	b29b      	uxth	r3, r3
9001d368:	b292      	uxth	r2, r2
9001d36a:	b218      	sxth	r0, r3
9001d36c:	b211      	sxth	r1, r2
9001d36e:	4288      	cmp	r0, r1
9001d370:	dd12      	ble.n	9001d398 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
9001d372:	1a9b      	subs	r3, r3, r2
9001d374:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
9001d378:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
9001d37c:	4642      	mov	r2, r8
9001d37e:	f8ad 1018 	strh.w	r1, [sp, #24]
9001d382:	a902      	add	r1, sp, #8
9001d384:	f8ad 301c 	strh.w	r3, [sp, #28]
9001d388:	23ff      	movs	r3, #255	; 0xff
9001d38a:	f8ad 001e 	strh.w	r0, [sp, #30]
9001d38e:	4628      	mov	r0, r5
9001d390:	f8ad 601a 	strh.w	r6, [sp, #26]
9001d394:	f7ff f88c 	bl	9001c4b0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
9001d398:	88e2      	ldrh	r2, [r4, #6]
9001d39a:	8863      	ldrh	r3, [r4, #2]
9001d39c:	f8bd 1016 	ldrh.w	r1, [sp, #22]
9001d3a0:	4413      	add	r3, r2
9001d3a2:	f8bd 2012 	ldrh.w	r2, [sp, #18]
9001d3a6:	440a      	add	r2, r1
9001d3a8:	b29b      	uxth	r3, r3
9001d3aa:	b292      	uxth	r2, r2
9001d3ac:	b218      	sxth	r0, r3
9001d3ae:	b211      	sxth	r1, r2
9001d3b0:	4288      	cmp	r0, r1
9001d3b2:	dd81      	ble.n	9001d2b8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
9001d3b4:	1a9b      	subs	r3, r3, r2
9001d3b6:	f9b4 6000 	ldrsh.w	r6, [r4]
9001d3ba:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
9001d3be:	4642      	mov	r2, r8
9001d3c0:	f8ad 301e 	strh.w	r3, [sp, #30]
9001d3c4:	23ff      	movs	r3, #255	; 0xff
9001d3c6:	f8ad 6018 	strh.w	r6, [sp, #24]
9001d3ca:	f8ad 101a 	strh.w	r1, [sp, #26]
9001d3ce:	f8ad 001c 	strh.w	r0, [sp, #28]
9001d3d2:	e762      	b.n	9001d29a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x76>
9001d3d4:	4633      	mov	r3, r6
9001d3d6:	4622      	mov	r2, r4
9001d3d8:	a902      	add	r1, sp, #8
9001d3da:	4628      	mov	r0, r5
9001d3dc:	f7ff f9be 	bl	9001c75c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
9001d3e0:	e76a      	b.n	9001d2b8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
9001d3e2:	e9cd 4600 	strd	r4, r6, [sp]
9001d3e6:	ab02      	add	r3, sp, #8
9001d3e8:	464a      	mov	r2, r9
9001d3ea:	4629      	mov	r1, r5
9001d3ec:	4650      	mov	r0, sl
9001d3ee:	f7ff fd95 	bl	9001cf1c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
9001d3f2:	e761      	b.n	9001d2b8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
9001d3f4:	4638      	mov	r0, r7
9001d3f6:	f7fa fe23 	bl	90018040 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
9001d3fa:	b950      	cbnz	r0, 9001d412 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ee>
9001d3fc:	f8da 3000 	ldr.w	r3, [sl]
9001d400:	aa02      	add	r2, sp, #8
9001d402:	4629      	mov	r1, r5
9001d404:	e9cd 6000 	strd	r6, r0, [sp]
9001d408:	4650      	mov	r0, sl
9001d40a:	68de      	ldr	r6, [r3, #12]
9001d40c:	4623      	mov	r3, r4
9001d40e:	47b0      	blx	r6
9001d410:	e752      	b.n	9001d2b8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
9001d412:	f10d 0818 	add.w	r8, sp, #24
9001d416:	4639      	mov	r1, r7
9001d418:	af04      	add	r7, sp, #16
9001d41a:	4640      	mov	r0, r8
9001d41c:	f7fa fdc4 	bl	90017fa8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
9001d420:	e898 0003 	ldmia.w	r8, {r0, r1}
9001d424:	e887 0003 	stmia.w	r7, {r0, r1}
9001d428:	4638      	mov	r0, r7
9001d42a:	4621      	mov	r1, r4
9001d42c:	f7f2 fcf4 	bl	9000fe18 <_ZN8touchgfx4RectaNERKS0_>
9001d430:	4638      	mov	r0, r7
9001d432:	f7f2 fd34 	bl	9000fe9e <_ZNK8touchgfx4Rect7isEmptyEv>
9001d436:	b138      	cbz	r0, 9001d448 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
9001d438:	4623      	mov	r3, r4
9001d43a:	9600      	str	r6, [sp, #0]
9001d43c:	aa02      	add	r2, sp, #8
9001d43e:	4649      	mov	r1, r9
9001d440:	4628      	mov	r0, r5
9001d442:	f7ff fdc9 	bl	9001cfd8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
9001d446:	e737      	b.n	9001d2b8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
9001d448:	f8da 3000 	ldr.w	r3, [sl]
9001d44c:	aa02      	add	r2, sp, #8
9001d44e:	4629      	mov	r1, r5
9001d450:	e9cd 6000 	strd	r6, r0, [sp]
9001d454:	4650      	mov	r0, sl
9001d456:	f8d3 b00c 	ldr.w	fp, [r3, #12]
9001d45a:	463b      	mov	r3, r7
9001d45c:	47d8      	blx	fp
9001d45e:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9001d462:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
9001d466:	4293      	cmp	r3, r2
9001d468:	dd13      	ble.n	9001d492 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26e>
9001d46a:	f9b4 0000 	ldrsh.w	r0, [r4]
9001d46e:	1a9b      	subs	r3, r3, r2
9001d470:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
9001d474:	f8ad 0018 	strh.w	r0, [sp, #24]
9001d478:	4628      	mov	r0, r5
9001d47a:	f8ad 201a 	strh.w	r2, [sp, #26]
9001d47e:	aa02      	add	r2, sp, #8
9001d480:	f8ad 101c 	strh.w	r1, [sp, #28]
9001d484:	4649      	mov	r1, r9
9001d486:	f8ad 301e 	strh.w	r3, [sp, #30]
9001d48a:	4643      	mov	r3, r8
9001d48c:	9600      	str	r6, [sp, #0]
9001d48e:	f7ff fda3 	bl	9001cfd8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
9001d492:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
9001d496:	f9b4 2000 	ldrsh.w	r2, [r4]
9001d49a:	4293      	cmp	r3, r2
9001d49c:	dd13      	ble.n	9001d4c6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a2>
9001d49e:	1a9b      	subs	r3, r3, r2
9001d4a0:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
9001d4a4:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
9001d4a8:	f8ad 2018 	strh.w	r2, [sp, #24]
9001d4ac:	aa02      	add	r2, sp, #8
9001d4ae:	f8ad 001a 	strh.w	r0, [sp, #26]
9001d4b2:	4628      	mov	r0, r5
9001d4b4:	f8ad 301c 	strh.w	r3, [sp, #28]
9001d4b8:	4643      	mov	r3, r8
9001d4ba:	f8ad 101e 	strh.w	r1, [sp, #30]
9001d4be:	4649      	mov	r1, r9
9001d4c0:	9600      	str	r6, [sp, #0]
9001d4c2:	f7ff fd89 	bl	9001cfd8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
9001d4c6:	88a2      	ldrh	r2, [r4, #4]
9001d4c8:	8823      	ldrh	r3, [r4, #0]
9001d4ca:	f8bd 1014 	ldrh.w	r1, [sp, #20]
9001d4ce:	4413      	add	r3, r2
9001d4d0:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001d4d4:	440a      	add	r2, r1
9001d4d6:	b29b      	uxth	r3, r3
9001d4d8:	b292      	uxth	r2, r2
9001d4da:	b218      	sxth	r0, r3
9001d4dc:	b211      	sxth	r1, r2
9001d4de:	4288      	cmp	r0, r1
9001d4e0:	dd13      	ble.n	9001d50a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e6>
9001d4e2:	1a9b      	subs	r3, r3, r2
9001d4e4:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
9001d4e8:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
9001d4ec:	aa02      	add	r2, sp, #8
9001d4ee:	f8ad 1018 	strh.w	r1, [sp, #24]
9001d4f2:	4649      	mov	r1, r9
9001d4f4:	f8ad 301c 	strh.w	r3, [sp, #28]
9001d4f8:	4643      	mov	r3, r8
9001d4fa:	f8ad 001e 	strh.w	r0, [sp, #30]
9001d4fe:	4628      	mov	r0, r5
9001d500:	9600      	str	r6, [sp, #0]
9001d502:	f8ad 701a 	strh.w	r7, [sp, #26]
9001d506:	f7ff fd67 	bl	9001cfd8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
9001d50a:	88e2      	ldrh	r2, [r4, #6]
9001d50c:	8863      	ldrh	r3, [r4, #2]
9001d50e:	f8bd 1016 	ldrh.w	r1, [sp, #22]
9001d512:	4413      	add	r3, r2
9001d514:	f8bd 2012 	ldrh.w	r2, [sp, #18]
9001d518:	440a      	add	r2, r1
9001d51a:	b29b      	uxth	r3, r3
9001d51c:	b292      	uxth	r2, r2
9001d51e:	b218      	sxth	r0, r3
9001d520:	b211      	sxth	r1, r2
9001d522:	4288      	cmp	r0, r1
9001d524:	f77f aec8 	ble.w	9001d2b8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
9001d528:	f9b4 7000 	ldrsh.w	r7, [r4]
9001d52c:	1a9b      	subs	r3, r3, r2
9001d52e:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
9001d532:	f8ad 301e 	strh.w	r3, [sp, #30]
9001d536:	4643      	mov	r3, r8
9001d538:	f8ad 7018 	strh.w	r7, [sp, #24]
9001d53c:	f8ad 101a 	strh.w	r1, [sp, #26]
9001d540:	f8ad 001c 	strh.w	r0, [sp, #28]
9001d544:	9600      	str	r6, [sp, #0]
9001d546:	e779      	b.n	9001d43c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x218>
9001d548:	2402357c 	.word	0x2402357c

9001d54c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
9001d54c:	b180      	cbz	r0, 9001d570 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
9001d54e:	2903      	cmp	r1, #3
9001d550:	d81c      	bhi.n	9001d58c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
9001d552:	e8df f001 	tbb	[pc, r1]
9001d556:	1d02      	.short	0x1d02
9001d558:	1f08      	.short	0x1f08
9001d55a:	4b10      	ldr	r3, [pc, #64]	; (9001d59c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
9001d55c:	8818      	ldrh	r0, [r3, #0]
9001d55e:	f3c0 000e 	ubfx	r0, r0, #0, #15
9001d562:	4240      	negs	r0, r0
9001d564:	4770      	bx	lr
9001d566:	4b0d      	ldr	r3, [pc, #52]	; (9001d59c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
9001d568:	8818      	ldrh	r0, [r3, #0]
9001d56a:	f3c0 000e 	ubfx	r0, r0, #0, #15
9001d56e:	4770      	bx	lr
9001d570:	2903      	cmp	r1, #3
9001d572:	d80b      	bhi.n	9001d58c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
9001d574:	a301      	add	r3, pc, #4	; (adr r3, 9001d57c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
9001d576:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
9001d57a:	bf00      	nop
9001d57c:	9001d591 	.word	0x9001d591
9001d580:	9001d567 	.word	0x9001d567
9001d584:	9001d595 	.word	0x9001d595
9001d588:	9001d55b 	.word	0x9001d55b
9001d58c:	2000      	movs	r0, #0
9001d58e:	4770      	bx	lr
9001d590:	2001      	movs	r0, #1
9001d592:	4770      	bx	lr
9001d594:	f04f 30ff 	mov.w	r0, #4294967295
9001d598:	4770      	bx	lr
9001d59a:	bf00      	nop
9001d59c:	24023576 	.word	0x24023576

9001d5a0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
9001d5a0:	b180      	cbz	r0, 9001d5c4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
9001d5a2:	2903      	cmp	r1, #3
9001d5a4:	d81c      	bhi.n	9001d5e0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
9001d5a6:	e8df f001 	tbb	[pc, r1]
9001d5aa:	021d      	.short	0x021d
9001d5ac:	071f      	.short	0x071f
9001d5ae:	4b10      	ldr	r3, [pc, #64]	; (9001d5f0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
9001d5b0:	8818      	ldrh	r0, [r3, #0]
9001d5b2:	f3c0 000e 	ubfx	r0, r0, #0, #15
9001d5b6:	4770      	bx	lr
9001d5b8:	4b0d      	ldr	r3, [pc, #52]	; (9001d5f0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
9001d5ba:	8818      	ldrh	r0, [r3, #0]
9001d5bc:	f3c0 000e 	ubfx	r0, r0, #0, #15
9001d5c0:	4240      	negs	r0, r0
9001d5c2:	4770      	bx	lr
9001d5c4:	2903      	cmp	r1, #3
9001d5c6:	d80b      	bhi.n	9001d5e0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
9001d5c8:	a301      	add	r3, pc, #4	; (adr r3, 9001d5d0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
9001d5ca:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
9001d5ce:	bf00      	nop
9001d5d0:	9001d5af 	.word	0x9001d5af
9001d5d4:	9001d5e9 	.word	0x9001d5e9
9001d5d8:	9001d5b9 	.word	0x9001d5b9
9001d5dc:	9001d5e5 	.word	0x9001d5e5
9001d5e0:	2000      	movs	r0, #0
9001d5e2:	4770      	bx	lr
9001d5e4:	2001      	movs	r0, #1
9001d5e6:	4770      	bx	lr
9001d5e8:	f04f 30ff 	mov.w	r0, #4294967295
9001d5ec:	4770      	bx	lr
9001d5ee:	bf00      	nop
9001d5f0:	24023576 	.word	0x24023576

9001d5f4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
9001d5f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d5f8:	b099      	sub	sp, #100	; 0x64
9001d5fa:	910b      	str	r1, [sp, #44]	; 0x2c
9001d5fc:	a914      	add	r1, sp, #80	; 0x50
9001d5fe:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
9001d602:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
9001d606:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
9001d60a:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
9001d60e:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
9001d612:	e881 000c 	stmia.w	r1, {r2, r3}
9001d616:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
9001d61a:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
9001d61e:	9309      	str	r3, [sp, #36]	; 0x24
9001d620:	f891 900d 	ldrb.w	r9, [r1, #13]
9001d624:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
9001d628:	ea4f 1749 	mov.w	r7, r9, lsl #5
9001d62c:	9310      	str	r3, [sp, #64]	; 0x40
9001d62e:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
9001d632:	930c      	str	r3, [sp, #48]	; 0x30
9001d634:	f407 7380 	and.w	r3, r7, #256	; 0x100
9001d638:	798f      	ldrb	r7, [r1, #6]
9001d63a:	431f      	orrs	r7, r3
9001d63c:	f000 8195 	beq.w	9001d96a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
9001d640:	ea4f 1909 	mov.w	r9, r9, lsl #4
9001d644:	f409 7380 	and.w	r3, r9, #256	; 0x100
9001d648:	f891 9007 	ldrb.w	r9, [r1, #7]
9001d64c:	ea59 0903 	orrs.w	r9, r9, r3
9001d650:	f000 818b 	beq.w	9001d96a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
9001d654:	f991 3009 	ldrsb.w	r3, [r1, #9]
9001d658:	b29b      	uxth	r3, r3
9001d65a:	2d00      	cmp	r5, #0
9001d65c:	f000 812e 	beq.w	9001d8bc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
9001d660:	1aed      	subs	r5, r5, r3
9001d662:	b2ad      	uxth	r5, r5
9001d664:	042b      	lsls	r3, r5, #16
9001d666:	d502      	bpl.n	9001d66e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
9001d668:	1b64      	subs	r4, r4, r5
9001d66a:	2500      	movs	r5, #0
9001d66c:	b224      	sxth	r4, r4
9001d66e:	f9b2 1000 	ldrsh.w	r1, [r2]
9001d672:	a814      	add	r0, sp, #80	; 0x50
9001d674:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
9001d678:	428c      	cmp	r4, r1
9001d67a:	b28b      	uxth	r3, r1
9001d67c:	bfbf      	itttt	lt
9001d67e:	18ed      	addlt	r5, r5, r3
9001d680:	1b2c      	sublt	r4, r5, r4
9001d682:	b2a5      	uxthlt	r5, r4
9001d684:	460c      	movlt	r4, r1
9001d686:	8891      	ldrh	r1, [r2, #4]
9001d688:	440b      	add	r3, r1
9001d68a:	4621      	mov	r1, r4
9001d68c:	b21b      	sxth	r3, r3
9001d68e:	930f      	str	r3, [sp, #60]	; 0x3c
9001d690:	88d3      	ldrh	r3, [r2, #6]
9001d692:	8852      	ldrh	r2, [r2, #2]
9001d694:	4413      	add	r3, r2
9001d696:	9a09      	ldr	r2, [sp, #36]	; 0x24
9001d698:	b21b      	sxth	r3, r3
9001d69a:	930d      	str	r3, [sp, #52]	; 0x34
9001d69c:	4bbd      	ldr	r3, [pc, #756]	; (9001d994 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
9001d69e:	f893 b000 	ldrb.w	fp, [r3]
9001d6a2:	f10b 3cff 	add.w	ip, fp, #4294967295
9001d6a6:	f1dc 0300 	rsbs	r3, ip, #0
9001d6aa:	eb43 030c 	adc.w	r3, r3, ip
9001d6ae:	930e      	str	r3, [sp, #56]	; 0x38
9001d6b0:	4653      	mov	r3, sl
9001d6b2:	f7f6 ff90 	bl	900145d6 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
9001d6b6:	4621      	mov	r1, r4
9001d6b8:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
9001d6bc:	4653      	mov	r3, sl
9001d6be:	9a09      	ldr	r2, [sp, #36]	; 0x24
9001d6c0:	a814      	add	r0, sp, #80	; 0x50
9001d6c2:	f7f6 ffa5 	bl	90014610 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
9001d6c6:	a918      	add	r1, sp, #96	; 0x60
9001d6c8:	f821 0d02 	strh.w	r0, [r1, #-2]!
9001d6cc:	a817      	add	r0, sp, #92	; 0x5c
9001d6ce:	f7f7 f8cb 	bl	90014868 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
9001d6d2:	f1ba 0f00 	cmp.w	sl, #0
9001d6d6:	f040 80f4 	bne.w	9001d8c2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
9001d6da:	f1bb 0f01 	cmp.w	fp, #1
9001d6de:	f040 80f8 	bne.w	9001d8d2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
9001d6e2:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001d6e4:	2b00      	cmp	r3, #0
9001d6e6:	f040 8145 	bne.w	9001d974 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
9001d6ea:	b2ba      	uxth	r2, r7
9001d6ec:	b905      	cbnz	r5, 9001d6f0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
9001d6ee:	b16e      	cbz	r6, 9001d70c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
9001d6f0:	fb06 5302 	mla	r3, r6, r2, r5
9001d6f4:	9828      	ldr	r0, [sp, #160]	; 0xa0
9001d6f6:	4631      	mov	r1, r6
9001d6f8:	fb08 f303 	mul.w	r3, r8, r3
9001d6fc:	f003 0607 	and.w	r6, r3, #7
9001d700:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
9001d704:	9328      	str	r3, [sp, #160]	; 0xa0
9001d706:	eba9 0301 	sub.w	r3, r9, r1
9001d70a:	930a      	str	r3, [sp, #40]	; 0x28
9001d70c:	4651      	mov	r1, sl
9001d70e:	980e      	ldr	r0, [sp, #56]	; 0x38
9001d710:	f7ff ff1c 	bl	9001d54c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
9001d714:	4681      	mov	r9, r0
9001d716:	980e      	ldr	r0, [sp, #56]	; 0x38
9001d718:	f7ff ff42 	bl	9001d5a0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
9001d71c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001d71e:	9909      	ldr	r1, [sp, #36]	; 0x24
9001d720:	4683      	mov	fp, r0
9001d722:	eba3 0a01 	sub.w	sl, r3, r1
9001d726:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001d728:	459a      	cmp	sl, r3
9001d72a:	bfa8      	it	ge
9001d72c:	469a      	movge	sl, r3
9001d72e:	f1ba 0f00 	cmp.w	sl, #0
9001d732:	f340 811a 	ble.w	9001d96a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
9001d736:	1b64      	subs	r4, r4, r5
9001d738:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
9001d73a:	1b1c      	subs	r4, r3, r4
9001d73c:	42bc      	cmp	r4, r7
9001d73e:	bfd4      	ite	le
9001d740:	ebc5 0504 	rsble	r5, r5, r4
9001d744:	ebc5 0507 	rsbgt	r5, r5, r7
9001d748:	2d00      	cmp	r5, #0
9001d74a:	f340 810e 	ble.w	9001d96a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
9001d74e:	1b52      	subs	r2, r2, r5
9001d750:	fb08 f302 	mul.w	r3, r8, r2
9001d754:	930f      	str	r3, [sp, #60]	; 0x3c
9001d756:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001d758:	2b00      	cmp	r3, #0
9001d75a:	f040 8116 	bne.w	9001d98a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
9001d75e:	4b8e      	ldr	r3, [pc, #568]	; (9001d998 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
9001d760:	6818      	ldr	r0, [r3, #0]
9001d762:	6803      	ldr	r3, [r0, #0]
9001d764:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001d766:	4798      	blx	r3
9001d768:	2301      	movs	r3, #1
9001d76a:	4a8c      	ldr	r2, [pc, #560]	; (9001d99c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
9001d76c:	fa03 f308 	lsl.w	r3, r3, r8
9001d770:	8811      	ldrh	r1, [r2, #0]
9001d772:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
9001d776:	3b01      	subs	r3, #1
9001d778:	b2db      	uxtb	r3, r3
9001d77a:	930e      	str	r3, [sp, #56]	; 0x38
9001d77c:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
9001d780:	fb01 2303 	mla	r3, r1, r3, r2
9001d784:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001d788:	930a      	str	r3, [sp, #40]	; 0x28
9001d78a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
9001d78c:	f3c3 4307 	ubfx	r3, r3, #16, #8
9001d790:	9313      	str	r3, [sp, #76]	; 0x4c
9001d792:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
9001d794:	0a19      	lsrs	r1, r3, #8
9001d796:	b2cb      	uxtb	r3, r1
9001d798:	9312      	str	r3, [sp, #72]	; 0x48
9001d79a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
9001d79c:	b2db      	uxtb	r3, r3
9001d79e:	9311      	str	r3, [sp, #68]	; 0x44
9001d7a0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
9001d7a2:	095a      	lsrs	r2, r3, #5
9001d7a4:	4b7e      	ldr	r3, [pc, #504]	; (9001d9a0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>)
9001d7a6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001d7aa:	400b      	ands	r3, r1
9001d7ac:	4313      	orrs	r3, r2
9001d7ae:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
9001d7b0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9001d7b4:	4313      	orrs	r3, r2
9001d7b6:	b29b      	uxth	r3, r3
9001d7b8:	9310      	str	r3, [sp, #64]	; 0x40
9001d7ba:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9001d7bc:	781a      	ldrb	r2, [r3, #0]
9001d7be:	ea4f 0349 	mov.w	r3, r9, lsl #1
9001d7c2:	fb05 b919 	mls	r9, r5, r9, fp
9001d7c6:	4132      	asrs	r2, r6
9001d7c8:	fb03 fb05 	mul.w	fp, r3, r5
9001d7cc:	930d      	str	r3, [sp, #52]	; 0x34
9001d7ce:	b2d2      	uxtb	r2, r2
9001d7d0:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
9001d7d4:	f11a 3aff 	adds.w	sl, sl, #4294967295
9001d7d8:	f0c0 80f5 	bcc.w	9001d9c6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
9001d7dc:	46ae      	mov	lr, r5
9001d7de:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
9001d7e2:	f11e 3eff 	adds.w	lr, lr, #4294967295
9001d7e6:	f0c0 80dd 	bcc.w	9001d9a4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
9001d7ea:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001d7ec:	4013      	ands	r3, r2
9001d7ee:	d055      	beq.n	9001d89c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
9001d7f0:	20ff      	movs	r0, #255	; 0xff
9001d7f2:	990e      	ldr	r1, [sp, #56]	; 0x38
9001d7f4:	fb90 f1f1 	sdiv	r1, r0, r1
9001d7f8:	434b      	muls	r3, r1
9001d7fa:	2bfe      	cmp	r3, #254	; 0xfe
9001d7fc:	dd03      	ble.n	9001d806 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
9001d7fe:	990c      	ldr	r1, [sp, #48]	; 0x30
9001d800:	4281      	cmp	r1, r0
9001d802:	f000 80c4 	beq.w	9001d98e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39a>
9001d806:	990c      	ldr	r1, [sp, #48]	; 0x30
9001d808:	f8bc 4000 	ldrh.w	r4, [ip]
9001d80c:	fb11 f303 	smulbb	r3, r1, r3
9001d810:	1220      	asrs	r0, r4, #8
9001d812:	b29b      	uxth	r3, r3
9001d814:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
9001d818:	1c59      	adds	r1, r3, #1
9001d81a:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
9001d81e:	eb01 2313 	add.w	r3, r1, r3, lsr #8
9001d822:	10e1      	asrs	r1, r4, #3
9001d824:	f3c3 2307 	ubfx	r3, r3, #8, #8
9001d828:	00e4      	lsls	r4, r4, #3
9001d82a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
9001d82e:	b29f      	uxth	r7, r3
9001d830:	43db      	mvns	r3, r3
9001d832:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
9001d836:	b2db      	uxtb	r3, r3
9001d838:	b2e4      	uxtb	r4, r4
9001d83a:	9309      	str	r3, [sp, #36]	; 0x24
9001d83c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
9001d83e:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
9001d842:	fb13 f907 	smulbb	r9, r3, r7
9001d846:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001d848:	fb00 9003 	mla	r0, r0, r3, r9
9001d84c:	9b12      	ldr	r3, [sp, #72]	; 0x48
9001d84e:	fb13 f907 	smulbb	r9, r3, r7
9001d852:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001d854:	b280      	uxth	r0, r0
9001d856:	fb01 9103 	mla	r1, r1, r3, r9
9001d85a:	9b11      	ldr	r3, [sp, #68]	; 0x44
9001d85c:	fb13 f707 	smulbb	r7, r3, r7
9001d860:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001d862:	b289      	uxth	r1, r1
9001d864:	fb04 7403 	mla	r4, r4, r3, r7
9001d868:	1c43      	adds	r3, r0, #1
9001d86a:	b2a4      	uxth	r4, r4
9001d86c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
9001d870:	f104 0901 	add.w	r9, r4, #1
9001d874:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
9001d878:	eb09 2914 	add.w	r9, r9, r4, lsr #8
9001d87c:	f3c9 29c4 	ubfx	r9, r9, #11, #5
9001d880:	ea49 0000 	orr.w	r0, r9, r0
9001d884:	f101 0901 	add.w	r9, r1, #1
9001d888:	eb09 2911 	add.w	r9, r9, r1, lsr #8
9001d88c:	ea4f 1959 	mov.w	r9, r9, lsr #5
9001d890:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
9001d894:	ea40 0009 	orr.w	r0, r0, r9
9001d898:	f8ac 0000 	strh.w	r0, [ip]
9001d89c:	4446      	add	r6, r8
9001d89e:	b2b6      	uxth	r6, r6
9001d8a0:	2e07      	cmp	r6, #7
9001d8a2:	bf89      	itett	hi
9001d8a4:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
9001d8a6:	fa42 f208 	asrls.w	r2, r2, r8
9001d8aa:	2600      	movhi	r6, #0
9001d8ac:	785a      	ldrbhi	r2, [r3, #1]
9001d8ae:	bf8a      	itet	hi
9001d8b0:	3301      	addhi	r3, #1
9001d8b2:	b2d2      	uxtbls	r2, r2
9001d8b4:	9328      	strhi	r3, [sp, #160]	; 0xa0
9001d8b6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001d8b8:	449c      	add	ip, r3
9001d8ba:	e792      	b.n	9001d7e2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
9001d8bc:	441c      	add	r4, r3
9001d8be:	b224      	sxth	r4, r4
9001d8c0:	e6d5      	b.n	9001d66e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
9001d8c2:	f1ba 0f01 	cmp.w	sl, #1
9001d8c6:	f47f af0c 	bne.w	9001d6e2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
9001d8ca:	f1bb 0f01 	cmp.w	fp, #1
9001d8ce:	f47f af08 	bne.w	9001d6e2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
9001d8d2:	f8df b0c4 	ldr.w	fp, [pc, #196]	; 9001d998 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>
9001d8d6:	f8db 0000 	ldr.w	r0, [fp]
9001d8da:	6803      	ldr	r3, [r0, #0]
9001d8dc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001d8de:	4798      	blx	r3
9001d8e0:	f410 7380 	ands.w	r3, r0, #256	; 0x100
9001d8e4:	465a      	mov	r2, fp
9001d8e6:	d006      	beq.n	9001d8f6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
9001d8e8:	f1b8 0f04 	cmp.w	r8, #4
9001d8ec:	d140      	bne.n	9001d970 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
9001d8ee:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001d8f0:	3300      	adds	r3, #0
9001d8f2:	bf18      	it	ne
9001d8f4:	2301      	movne	r3, #1
9001d8f6:	0580      	lsls	r0, r0, #22
9001d8f8:	d56e      	bpl.n	9001d9d8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
9001d8fa:	f1b8 0f08 	cmp.w	r8, #8
9001d8fe:	d16b      	bne.n	9001d9d8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
9001d900:	2b00      	cmp	r3, #0
9001d902:	bf0c      	ite	eq
9001d904:	f44f 7100 	moveq.w	r1, #512	; 0x200
9001d908:	f44f 7180 	movne.w	r1, #256	; 0x100
9001d90c:	2d00      	cmp	r5, #0
9001d90e:	f47f aee8 	bne.w	9001d6e2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
9001d912:	2e00      	cmp	r6, #0
9001d914:	f47f aee5 	bne.w	9001d6e2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
9001d918:	19e3      	adds	r3, r4, r7
9001d91a:	980f      	ldr	r0, [sp, #60]	; 0x3c
9001d91c:	4283      	cmp	r3, r0
9001d91e:	f73f aee0 	bgt.w	9001d6e2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
9001d922:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001d924:	980d      	ldr	r0, [sp, #52]	; 0x34
9001d926:	444b      	add	r3, r9
9001d928:	4283      	cmp	r3, r0
9001d92a:	f73f aeda 	bgt.w	9001d6e2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
9001d92e:	b2bf      	uxth	r7, r7
9001d930:	f1b8 0f08 	cmp.w	r8, #8
9001d934:	6810      	ldr	r0, [r2, #0]
9001d936:	f04f 0500 	mov.w	r5, #0
9001d93a:	bf18      	it	ne
9001d93c:	3701      	addne	r7, #1
9001d93e:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
9001d942:	6804      	ldr	r4, [r0, #0]
9001d944:	bf18      	it	ne
9001d946:	f027 0701 	bicne.w	r7, r7, #1
9001d94a:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
9001d94e:	e9cd 1505 	strd	r1, r5, [sp, #20]
9001d952:	990c      	ldr	r1, [sp, #48]	; 0x30
9001d954:	bf18      	it	ne
9001d956:	b2bf      	uxthne	r7, r7
9001d958:	9104      	str	r1, [sp, #16]
9001d95a:	992a      	ldr	r1, [sp, #168]	; 0xa8
9001d95c:	e9cd 7900 	strd	r7, r9, [sp]
9001d960:	e9cd 7102 	strd	r7, r1, [sp, #8]
9001d964:	9928      	ldr	r1, [sp, #160]	; 0xa0
9001d966:	6d64      	ldr	r4, [r4, #84]	; 0x54
9001d968:	47a0      	blx	r4
9001d96a:	b019      	add	sp, #100	; 0x64
9001d96c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001d970:	2300      	movs	r3, #0
9001d972:	e7c0      	b.n	9001d8f6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
9001d974:	2208      	movs	r2, #8
9001d976:	fb92 f3f8 	sdiv	r3, r2, r8
9001d97a:	1e5a      	subs	r2, r3, #1
9001d97c:	443a      	add	r2, r7
9001d97e:	fb92 f2f3 	sdiv	r2, r2, r3
9001d982:	fb12 f203 	smulbb	r2, r2, r3
9001d986:	b292      	uxth	r2, r2
9001d988:	e6b0      	b.n	9001d6ec <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
9001d98a:	980b      	ldr	r0, [sp, #44]	; 0x2c
9001d98c:	e6ec      	b.n	9001d768 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
9001d98e:	9810      	ldr	r0, [sp, #64]	; 0x40
9001d990:	e782      	b.n	9001d898 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
9001d992:	bf00      	nop
9001d994:	24023574 	.word	0x24023574
9001d998:	2402357c 	.word	0x2402357c
9001d99c:	24023576 	.word	0x24023576
9001d9a0:	00fff800 	.word	0x00fff800
9001d9a4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
9001d9a6:	b153      	cbz	r3, 9001d9be <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
9001d9a8:	441e      	add	r6, r3
9001d9aa:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9001d9ac:	b2b6      	uxth	r6, r6
9001d9ae:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
9001d9b2:	f006 0607 	and.w	r6, r6, #7
9001d9b6:	781a      	ldrb	r2, [r3, #0]
9001d9b8:	9328      	str	r3, [sp, #160]	; 0xa0
9001d9ba:	4132      	asrs	r2, r6
9001d9bc:	b2d2      	uxtb	r2, r2
9001d9be:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001d9c0:	445b      	add	r3, fp
9001d9c2:	930a      	str	r3, [sp, #40]	; 0x28
9001d9c4:	e706      	b.n	9001d7d4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
9001d9c6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001d9c8:	2b00      	cmp	r3, #0
9001d9ca:	d1ce      	bne.n	9001d96a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
9001d9cc:	4b05      	ldr	r3, [pc, #20]	; (9001d9e4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
9001d9ce:	6818      	ldr	r0, [r3, #0]
9001d9d0:	6803      	ldr	r3, [r0, #0]
9001d9d2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001d9d4:	4798      	blx	r3
9001d9d6:	e7c8      	b.n	9001d96a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
9001d9d8:	2b00      	cmp	r3, #0
9001d9da:	f43f ae82 	beq.w	9001d6e2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
9001d9de:	f44f 7180 	mov.w	r1, #256	; 0x100
9001d9e2:	e793      	b.n	9001d90c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
9001d9e4:	2402357c 	.word	0x2402357c

9001d9e8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
9001d9e8:	b538      	push	{r3, r4, r5, lr}
9001d9ea:	4c15      	ldr	r4, [pc, #84]	; (9001da40 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
9001d9ec:	4605      	mov	r5, r0
9001d9ee:	7823      	ldrb	r3, [r4, #0]
9001d9f0:	f3bf 8f5b 	dmb	ish
9001d9f4:	07da      	lsls	r2, r3, #31
9001d9f6:	d40b      	bmi.n	9001da10 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
9001d9f8:	4620      	mov	r0, r4
9001d9fa:	f008 fa7c 	bl	90025ef6 <__cxa_guard_acquire>
9001d9fe:	b138      	cbz	r0, 9001da10 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
9001da00:	4620      	mov	r0, r4
9001da02:	f008 fa84 	bl	90025f0e <__cxa_guard_release>
9001da06:	4a0f      	ldr	r2, [pc, #60]	; (9001da44 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
9001da08:	490f      	ldr	r1, [pc, #60]	; (9001da48 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
9001da0a:	4810      	ldr	r0, [pc, #64]	; (9001da4c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
9001da0c:	f008 fa6c 	bl	90025ee8 <__aeabi_atexit>
9001da10:	4c0f      	ldr	r4, [pc, #60]	; (9001da50 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
9001da12:	7823      	ldrb	r3, [r4, #0]
9001da14:	f3bf 8f5b 	dmb	ish
9001da18:	07db      	lsls	r3, r3, #31
9001da1a:	d40b      	bmi.n	9001da34 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
9001da1c:	4620      	mov	r0, r4
9001da1e:	f008 fa6a 	bl	90025ef6 <__cxa_guard_acquire>
9001da22:	b138      	cbz	r0, 9001da34 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
9001da24:	4620      	mov	r0, r4
9001da26:	f008 fa72 	bl	90025f0e <__cxa_guard_release>
9001da2a:	4a06      	ldr	r2, [pc, #24]	; (9001da44 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
9001da2c:	4909      	ldr	r1, [pc, #36]	; (9001da54 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
9001da2e:	480a      	ldr	r0, [pc, #40]	; (9001da58 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
9001da30:	f008 fa5a 	bl	90025ee8 <__aeabi_atexit>
9001da34:	4b05      	ldr	r3, [pc, #20]	; (9001da4c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
9001da36:	616b      	str	r3, [r5, #20]
9001da38:	4b07      	ldr	r3, [pc, #28]	; (9001da58 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
9001da3a:	61ab      	str	r3, [r5, #24]
9001da3c:	bd38      	pop	{r3, r4, r5, pc}
9001da3e:	bf00      	nop
9001da40:	2402365c 	.word	0x2402365c
9001da44:	24000000 	.word	0x24000000
9001da48:	9001a7cb 	.word	0x9001a7cb
9001da4c:	240000c0 	.word	0x240000c0
9001da50:	24023660 	.word	0x24023660
9001da54:	9001a7c9 	.word	0x9001a7c9
9001da58:	240000c4 	.word	0x240000c4

9001da5c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
9001da5c:	b538      	push	{r3, r4, r5, lr}
9001da5e:	4c15      	ldr	r4, [pc, #84]	; (9001dab4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
9001da60:	4605      	mov	r5, r0
9001da62:	7823      	ldrb	r3, [r4, #0]
9001da64:	f3bf 8f5b 	dmb	ish
9001da68:	07da      	lsls	r2, r3, #31
9001da6a:	d40b      	bmi.n	9001da84 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
9001da6c:	4620      	mov	r0, r4
9001da6e:	f008 fa42 	bl	90025ef6 <__cxa_guard_acquire>
9001da72:	b138      	cbz	r0, 9001da84 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
9001da74:	4620      	mov	r0, r4
9001da76:	f008 fa4a 	bl	90025f0e <__cxa_guard_release>
9001da7a:	4a0f      	ldr	r2, [pc, #60]	; (9001dab8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
9001da7c:	490f      	ldr	r1, [pc, #60]	; (9001dabc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
9001da7e:	4810      	ldr	r0, [pc, #64]	; (9001dac0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
9001da80:	f008 fa32 	bl	90025ee8 <__aeabi_atexit>
9001da84:	4c0f      	ldr	r4, [pc, #60]	; (9001dac4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
9001da86:	7823      	ldrb	r3, [r4, #0]
9001da88:	f3bf 8f5b 	dmb	ish
9001da8c:	07db      	lsls	r3, r3, #31
9001da8e:	d40b      	bmi.n	9001daa8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
9001da90:	4620      	mov	r0, r4
9001da92:	f008 fa30 	bl	90025ef6 <__cxa_guard_acquire>
9001da96:	b138      	cbz	r0, 9001daa8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
9001da98:	4620      	mov	r0, r4
9001da9a:	f008 fa38 	bl	90025f0e <__cxa_guard_release>
9001da9e:	4a06      	ldr	r2, [pc, #24]	; (9001dab8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
9001daa0:	4909      	ldr	r1, [pc, #36]	; (9001dac8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
9001daa2:	480a      	ldr	r0, [pc, #40]	; (9001dacc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
9001daa4:	f008 fa20 	bl	90025ee8 <__aeabi_atexit>
9001daa8:	4b05      	ldr	r3, [pc, #20]	; (9001dac0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
9001daaa:	60eb      	str	r3, [r5, #12]
9001daac:	4b07      	ldr	r3, [pc, #28]	; (9001dacc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
9001daae:	612b      	str	r3, [r5, #16]
9001dab0:	bd38      	pop	{r3, r4, r5, pc}
9001dab2:	bf00      	nop
9001dab4:	24023634 	.word	0x24023634
9001dab8:	24000000 	.word	0x24000000
9001dabc:	9001a7cf 	.word	0x9001a7cf
9001dac0:	24000098 	.word	0x24000098
9001dac4:	24023638 	.word	0x24023638
9001dac8:	9001a7cd 	.word	0x9001a7cd
9001dacc:	2400009c 	.word	0x2400009c

9001dad0 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
9001dad0:	b510      	push	{r4, lr}
9001dad2:	4604      	mov	r4, r0
9001dad4:	f7ff ff88 	bl	9001d9e8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
9001dad8:	4620      	mov	r0, r4
9001dada:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001dade:	f7ff bfbd 	b.w	9001da5c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

9001dae4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
9001dae4:	b538      	push	{r3, r4, r5, lr}
9001dae6:	4c15      	ldr	r4, [pc, #84]	; (9001db3c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
9001dae8:	4605      	mov	r5, r0
9001daea:	7823      	ldrb	r3, [r4, #0]
9001daec:	f3bf 8f5b 	dmb	ish
9001daf0:	07da      	lsls	r2, r3, #31
9001daf2:	d40b      	bmi.n	9001db0c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
9001daf4:	4620      	mov	r0, r4
9001daf6:	f008 f9fe 	bl	90025ef6 <__cxa_guard_acquire>
9001dafa:	b138      	cbz	r0, 9001db0c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
9001dafc:	4620      	mov	r0, r4
9001dafe:	f008 fa06 	bl	90025f0e <__cxa_guard_release>
9001db02:	4a0f      	ldr	r2, [pc, #60]	; (9001db40 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
9001db04:	490f      	ldr	r1, [pc, #60]	; (9001db44 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
9001db06:	4810      	ldr	r0, [pc, #64]	; (9001db48 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
9001db08:	f008 f9ee 	bl	90025ee8 <__aeabi_atexit>
9001db0c:	4c0f      	ldr	r4, [pc, #60]	; (9001db4c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
9001db0e:	7823      	ldrb	r3, [r4, #0]
9001db10:	f3bf 8f5b 	dmb	ish
9001db14:	07db      	lsls	r3, r3, #31
9001db16:	d40b      	bmi.n	9001db30 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
9001db18:	4620      	mov	r0, r4
9001db1a:	f008 f9ec 	bl	90025ef6 <__cxa_guard_acquire>
9001db1e:	b138      	cbz	r0, 9001db30 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
9001db20:	4620      	mov	r0, r4
9001db22:	f008 f9f4 	bl	90025f0e <__cxa_guard_release>
9001db26:	4a06      	ldr	r2, [pc, #24]	; (9001db40 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
9001db28:	4909      	ldr	r1, [pc, #36]	; (9001db50 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
9001db2a:	480a      	ldr	r0, [pc, #40]	; (9001db54 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
9001db2c:	f008 f9dc 	bl	90025ee8 <__aeabi_atexit>
9001db30:	4b05      	ldr	r3, [pc, #20]	; (9001db48 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
9001db32:	626b      	str	r3, [r5, #36]	; 0x24
9001db34:	4b07      	ldr	r3, [pc, #28]	; (9001db54 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
9001db36:	62ab      	str	r3, [r5, #40]	; 0x28
9001db38:	bd38      	pop	{r3, r4, r5, pc}
9001db3a:	bf00      	nop
9001db3c:	24023664 	.word	0x24023664
9001db40:	24000000 	.word	0x24000000
9001db44:	9001a7c3 	.word	0x9001a7c3
9001db48:	240000c8 	.word	0x240000c8
9001db4c:	24023668 	.word	0x24023668
9001db50:	9001a7c1 	.word	0x9001a7c1
9001db54:	240000cc 	.word	0x240000cc

9001db58 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
9001db58:	b538      	push	{r3, r4, r5, lr}
9001db5a:	4c15      	ldr	r4, [pc, #84]	; (9001dbb0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
9001db5c:	4605      	mov	r5, r0
9001db5e:	7823      	ldrb	r3, [r4, #0]
9001db60:	f3bf 8f5b 	dmb	ish
9001db64:	07da      	lsls	r2, r3, #31
9001db66:	d40b      	bmi.n	9001db80 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
9001db68:	4620      	mov	r0, r4
9001db6a:	f008 f9c4 	bl	90025ef6 <__cxa_guard_acquire>
9001db6e:	b138      	cbz	r0, 9001db80 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
9001db70:	4620      	mov	r0, r4
9001db72:	f008 f9cc 	bl	90025f0e <__cxa_guard_release>
9001db76:	4a0f      	ldr	r2, [pc, #60]	; (9001dbb4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
9001db78:	490f      	ldr	r1, [pc, #60]	; (9001dbb8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
9001db7a:	4810      	ldr	r0, [pc, #64]	; (9001dbbc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
9001db7c:	f008 f9b4 	bl	90025ee8 <__aeabi_atexit>
9001db80:	4c0f      	ldr	r4, [pc, #60]	; (9001dbc0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
9001db82:	7823      	ldrb	r3, [r4, #0]
9001db84:	f3bf 8f5b 	dmb	ish
9001db88:	07db      	lsls	r3, r3, #31
9001db8a:	d40b      	bmi.n	9001dba4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
9001db8c:	4620      	mov	r0, r4
9001db8e:	f008 f9b2 	bl	90025ef6 <__cxa_guard_acquire>
9001db92:	b138      	cbz	r0, 9001dba4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
9001db94:	4620      	mov	r0, r4
9001db96:	f008 f9ba 	bl	90025f0e <__cxa_guard_release>
9001db9a:	4a06      	ldr	r2, [pc, #24]	; (9001dbb4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
9001db9c:	4909      	ldr	r1, [pc, #36]	; (9001dbc4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
9001db9e:	480a      	ldr	r0, [pc, #40]	; (9001dbc8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
9001dba0:	f008 f9a2 	bl	90025ee8 <__aeabi_atexit>
9001dba4:	4b05      	ldr	r3, [pc, #20]	; (9001dbbc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
9001dba6:	61eb      	str	r3, [r5, #28]
9001dba8:	4b07      	ldr	r3, [pc, #28]	; (9001dbc8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
9001dbaa:	622b      	str	r3, [r5, #32]
9001dbac:	bd38      	pop	{r3, r4, r5, pc}
9001dbae:	bf00      	nop
9001dbb0:	2402363c 	.word	0x2402363c
9001dbb4:	24000000 	.word	0x24000000
9001dbb8:	9001a7c7 	.word	0x9001a7c7
9001dbbc:	240000a0 	.word	0x240000a0
9001dbc0:	24023640 	.word	0x24023640
9001dbc4:	9001a7c5 	.word	0x9001a7c5
9001dbc8:	240000a4 	.word	0x240000a4

9001dbcc <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
9001dbcc:	b510      	push	{r4, lr}
9001dbce:	4604      	mov	r4, r0
9001dbd0:	f7ff ff88 	bl	9001dae4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
9001dbd4:	4620      	mov	r0, r4
9001dbd6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001dbda:	f7ff bfbd 	b.w	9001db58 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

9001dbe0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
9001dbe0:	b538      	push	{r3, r4, r5, lr}
9001dbe2:	4c15      	ldr	r4, [pc, #84]	; (9001dc38 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
9001dbe4:	4605      	mov	r5, r0
9001dbe6:	7823      	ldrb	r3, [r4, #0]
9001dbe8:	f3bf 8f5b 	dmb	ish
9001dbec:	07da      	lsls	r2, r3, #31
9001dbee:	d40b      	bmi.n	9001dc08 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
9001dbf0:	4620      	mov	r0, r4
9001dbf2:	f008 f980 	bl	90025ef6 <__cxa_guard_acquire>
9001dbf6:	b138      	cbz	r0, 9001dc08 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
9001dbf8:	4620      	mov	r0, r4
9001dbfa:	f008 f988 	bl	90025f0e <__cxa_guard_release>
9001dbfe:	4a0f      	ldr	r2, [pc, #60]	; (9001dc3c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
9001dc00:	490f      	ldr	r1, [pc, #60]	; (9001dc40 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
9001dc02:	4810      	ldr	r0, [pc, #64]	; (9001dc44 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
9001dc04:	f008 f970 	bl	90025ee8 <__aeabi_atexit>
9001dc08:	4c0f      	ldr	r4, [pc, #60]	; (9001dc48 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
9001dc0a:	7823      	ldrb	r3, [r4, #0]
9001dc0c:	f3bf 8f5b 	dmb	ish
9001dc10:	07db      	lsls	r3, r3, #31
9001dc12:	d40b      	bmi.n	9001dc2c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
9001dc14:	4620      	mov	r0, r4
9001dc16:	f008 f96e 	bl	90025ef6 <__cxa_guard_acquire>
9001dc1a:	b138      	cbz	r0, 9001dc2c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
9001dc1c:	4620      	mov	r0, r4
9001dc1e:	f008 f976 	bl	90025f0e <__cxa_guard_release>
9001dc22:	4a06      	ldr	r2, [pc, #24]	; (9001dc3c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
9001dc24:	4909      	ldr	r1, [pc, #36]	; (9001dc4c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
9001dc26:	480a      	ldr	r0, [pc, #40]	; (9001dc50 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
9001dc28:	f008 f95e 	bl	90025ee8 <__aeabi_atexit>
9001dc2c:	4b05      	ldr	r3, [pc, #20]	; (9001dc44 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
9001dc2e:	636b      	str	r3, [r5, #52]	; 0x34
9001dc30:	4b07      	ldr	r3, [pc, #28]	; (9001dc50 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
9001dc32:	63ab      	str	r3, [r5, #56]	; 0x38
9001dc34:	bd38      	pop	{r3, r4, r5, pc}
9001dc36:	bf00      	nop
9001dc38:	24023674 	.word	0x24023674
9001dc3c:	24000000 	.word	0x24000000
9001dc40:	9001a7bb 	.word	0x9001a7bb
9001dc44:	240000d8 	.word	0x240000d8
9001dc48:	24023678 	.word	0x24023678
9001dc4c:	9001a7b9 	.word	0x9001a7b9
9001dc50:	240000dc 	.word	0x240000dc

9001dc54 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
9001dc54:	b538      	push	{r3, r4, r5, lr}
9001dc56:	4c15      	ldr	r4, [pc, #84]	; (9001dcac <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
9001dc58:	4605      	mov	r5, r0
9001dc5a:	7823      	ldrb	r3, [r4, #0]
9001dc5c:	f3bf 8f5b 	dmb	ish
9001dc60:	07da      	lsls	r2, r3, #31
9001dc62:	d40b      	bmi.n	9001dc7c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
9001dc64:	4620      	mov	r0, r4
9001dc66:	f008 f946 	bl	90025ef6 <__cxa_guard_acquire>
9001dc6a:	b138      	cbz	r0, 9001dc7c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
9001dc6c:	4620      	mov	r0, r4
9001dc6e:	f008 f94e 	bl	90025f0e <__cxa_guard_release>
9001dc72:	4a0f      	ldr	r2, [pc, #60]	; (9001dcb0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
9001dc74:	490f      	ldr	r1, [pc, #60]	; (9001dcb4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
9001dc76:	4810      	ldr	r0, [pc, #64]	; (9001dcb8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
9001dc78:	f008 f936 	bl	90025ee8 <__aeabi_atexit>
9001dc7c:	4c0f      	ldr	r4, [pc, #60]	; (9001dcbc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
9001dc7e:	7823      	ldrb	r3, [r4, #0]
9001dc80:	f3bf 8f5b 	dmb	ish
9001dc84:	07db      	lsls	r3, r3, #31
9001dc86:	d40b      	bmi.n	9001dca0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
9001dc88:	4620      	mov	r0, r4
9001dc8a:	f008 f934 	bl	90025ef6 <__cxa_guard_acquire>
9001dc8e:	b138      	cbz	r0, 9001dca0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
9001dc90:	4620      	mov	r0, r4
9001dc92:	f008 f93c 	bl	90025f0e <__cxa_guard_release>
9001dc96:	4a06      	ldr	r2, [pc, #24]	; (9001dcb0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
9001dc98:	4909      	ldr	r1, [pc, #36]	; (9001dcc0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
9001dc9a:	480a      	ldr	r0, [pc, #40]	; (9001dcc4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
9001dc9c:	f008 f924 	bl	90025ee8 <__aeabi_atexit>
9001dca0:	4b05      	ldr	r3, [pc, #20]	; (9001dcb8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
9001dca2:	62eb      	str	r3, [r5, #44]	; 0x2c
9001dca4:	4b07      	ldr	r3, [pc, #28]	; (9001dcc4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
9001dca6:	632b      	str	r3, [r5, #48]	; 0x30
9001dca8:	bd38      	pop	{r3, r4, r5, pc}
9001dcaa:	bf00      	nop
9001dcac:	24023644 	.word	0x24023644
9001dcb0:	24000000 	.word	0x24000000
9001dcb4:	9001a7bf 	.word	0x9001a7bf
9001dcb8:	240000a8 	.word	0x240000a8
9001dcbc:	24023648 	.word	0x24023648
9001dcc0:	9001a7bd 	.word	0x9001a7bd
9001dcc4:	240000ac 	.word	0x240000ac

9001dcc8 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
9001dcc8:	b510      	push	{r4, lr}
9001dcca:	4604      	mov	r4, r0
9001dccc:	f7ff ff88 	bl	9001dbe0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
9001dcd0:	4620      	mov	r0, r4
9001dcd2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001dcd6:	f7ff bfbd 	b.w	9001dc54 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

9001dcdc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
9001dcdc:	b538      	push	{r3, r4, r5, lr}
9001dcde:	4c15      	ldr	r4, [pc, #84]	; (9001dd34 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
9001dce0:	4605      	mov	r5, r0
9001dce2:	7823      	ldrb	r3, [r4, #0]
9001dce4:	f3bf 8f5b 	dmb	ish
9001dce8:	07da      	lsls	r2, r3, #31
9001dcea:	d40b      	bmi.n	9001dd04 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
9001dcec:	4620      	mov	r0, r4
9001dcee:	f008 f902 	bl	90025ef6 <__cxa_guard_acquire>
9001dcf2:	b138      	cbz	r0, 9001dd04 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
9001dcf4:	4620      	mov	r0, r4
9001dcf6:	f008 f90a 	bl	90025f0e <__cxa_guard_release>
9001dcfa:	4a0f      	ldr	r2, [pc, #60]	; (9001dd38 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
9001dcfc:	490f      	ldr	r1, [pc, #60]	; (9001dd3c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
9001dcfe:	4810      	ldr	r0, [pc, #64]	; (9001dd40 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
9001dd00:	f008 f8f2 	bl	90025ee8 <__aeabi_atexit>
9001dd04:	4c0f      	ldr	r4, [pc, #60]	; (9001dd44 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
9001dd06:	7823      	ldrb	r3, [r4, #0]
9001dd08:	f3bf 8f5b 	dmb	ish
9001dd0c:	07db      	lsls	r3, r3, #31
9001dd0e:	d40b      	bmi.n	9001dd28 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
9001dd10:	4620      	mov	r0, r4
9001dd12:	f008 f8f0 	bl	90025ef6 <__cxa_guard_acquire>
9001dd16:	b138      	cbz	r0, 9001dd28 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
9001dd18:	4620      	mov	r0, r4
9001dd1a:	f008 f8f8 	bl	90025f0e <__cxa_guard_release>
9001dd1e:	4a06      	ldr	r2, [pc, #24]	; (9001dd38 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
9001dd20:	4909      	ldr	r1, [pc, #36]	; (9001dd48 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
9001dd22:	480a      	ldr	r0, [pc, #40]	; (9001dd4c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
9001dd24:	f008 f8e0 	bl	90025ee8 <__aeabi_atexit>
9001dd28:	4b05      	ldr	r3, [pc, #20]	; (9001dd40 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
9001dd2a:	656b      	str	r3, [r5, #84]	; 0x54
9001dd2c:	4b07      	ldr	r3, [pc, #28]	; (9001dd4c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
9001dd2e:	65ab      	str	r3, [r5, #88]	; 0x58
9001dd30:	bd38      	pop	{r3, r4, r5, pc}
9001dd32:	bf00      	nop
9001dd34:	2402367c 	.word	0x2402367c
9001dd38:	24000000 	.word	0x24000000
9001dd3c:	9001a7ab 	.word	0x9001a7ab
9001dd40:	240000e0 	.word	0x240000e0
9001dd44:	24023680 	.word	0x24023680
9001dd48:	9001a7a9 	.word	0x9001a7a9
9001dd4c:	240000e4 	.word	0x240000e4

9001dd50 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
9001dd50:	b538      	push	{r3, r4, r5, lr}
9001dd52:	4c15      	ldr	r4, [pc, #84]	; (9001dda8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
9001dd54:	4605      	mov	r5, r0
9001dd56:	7823      	ldrb	r3, [r4, #0]
9001dd58:	f3bf 8f5b 	dmb	ish
9001dd5c:	07da      	lsls	r2, r3, #31
9001dd5e:	d40b      	bmi.n	9001dd78 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
9001dd60:	4620      	mov	r0, r4
9001dd62:	f008 f8c8 	bl	90025ef6 <__cxa_guard_acquire>
9001dd66:	b138      	cbz	r0, 9001dd78 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
9001dd68:	4620      	mov	r0, r4
9001dd6a:	f008 f8d0 	bl	90025f0e <__cxa_guard_release>
9001dd6e:	4a0f      	ldr	r2, [pc, #60]	; (9001ddac <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
9001dd70:	490f      	ldr	r1, [pc, #60]	; (9001ddb0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
9001dd72:	4810      	ldr	r0, [pc, #64]	; (9001ddb4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
9001dd74:	f008 f8b8 	bl	90025ee8 <__aeabi_atexit>
9001dd78:	4c0f      	ldr	r4, [pc, #60]	; (9001ddb8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
9001dd7a:	7823      	ldrb	r3, [r4, #0]
9001dd7c:	f3bf 8f5b 	dmb	ish
9001dd80:	07db      	lsls	r3, r3, #31
9001dd82:	d40b      	bmi.n	9001dd9c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
9001dd84:	4620      	mov	r0, r4
9001dd86:	f008 f8b6 	bl	90025ef6 <__cxa_guard_acquire>
9001dd8a:	b138      	cbz	r0, 9001dd9c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
9001dd8c:	4620      	mov	r0, r4
9001dd8e:	f008 f8be 	bl	90025f0e <__cxa_guard_release>
9001dd92:	4a06      	ldr	r2, [pc, #24]	; (9001ddac <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
9001dd94:	4909      	ldr	r1, [pc, #36]	; (9001ddbc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
9001dd96:	480a      	ldr	r0, [pc, #40]	; (9001ddc0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
9001dd98:	f008 f8a6 	bl	90025ee8 <__aeabi_atexit>
9001dd9c:	4b05      	ldr	r3, [pc, #20]	; (9001ddb4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
9001dd9e:	64eb      	str	r3, [r5, #76]	; 0x4c
9001dda0:	4b07      	ldr	r3, [pc, #28]	; (9001ddc0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
9001dda2:	652b      	str	r3, [r5, #80]	; 0x50
9001dda4:	bd38      	pop	{r3, r4, r5, pc}
9001dda6:	bf00      	nop
9001dda8:	24023684 	.word	0x24023684
9001ddac:	24000000 	.word	0x24000000
9001ddb0:	9001a7af 	.word	0x9001a7af
9001ddb4:	240000e8 	.word	0x240000e8
9001ddb8:	24023688 	.word	0x24023688
9001ddbc:	9001a7ad 	.word	0x9001a7ad
9001ddc0:	240000ec 	.word	0x240000ec

9001ddc4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
9001ddc4:	b538      	push	{r3, r4, r5, lr}
9001ddc6:	4c15      	ldr	r4, [pc, #84]	; (9001de1c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
9001ddc8:	4605      	mov	r5, r0
9001ddca:	7823      	ldrb	r3, [r4, #0]
9001ddcc:	f3bf 8f5b 	dmb	ish
9001ddd0:	07da      	lsls	r2, r3, #31
9001ddd2:	d40b      	bmi.n	9001ddec <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
9001ddd4:	4620      	mov	r0, r4
9001ddd6:	f008 f88e 	bl	90025ef6 <__cxa_guard_acquire>
9001ddda:	b138      	cbz	r0, 9001ddec <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
9001dddc:	4620      	mov	r0, r4
9001ddde:	f008 f896 	bl	90025f0e <__cxa_guard_release>
9001dde2:	4a0f      	ldr	r2, [pc, #60]	; (9001de20 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
9001dde4:	490f      	ldr	r1, [pc, #60]	; (9001de24 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
9001dde6:	4810      	ldr	r0, [pc, #64]	; (9001de28 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
9001dde8:	f008 f87e 	bl	90025ee8 <__aeabi_atexit>
9001ddec:	4c0f      	ldr	r4, [pc, #60]	; (9001de2c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
9001ddee:	7823      	ldrb	r3, [r4, #0]
9001ddf0:	f3bf 8f5b 	dmb	ish
9001ddf4:	07db      	lsls	r3, r3, #31
9001ddf6:	d40b      	bmi.n	9001de10 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
9001ddf8:	4620      	mov	r0, r4
9001ddfa:	f008 f87c 	bl	90025ef6 <__cxa_guard_acquire>
9001ddfe:	b138      	cbz	r0, 9001de10 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
9001de00:	4620      	mov	r0, r4
9001de02:	f008 f884 	bl	90025f0e <__cxa_guard_release>
9001de06:	4a06      	ldr	r2, [pc, #24]	; (9001de20 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
9001de08:	4909      	ldr	r1, [pc, #36]	; (9001de30 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
9001de0a:	480a      	ldr	r0, [pc, #40]	; (9001de34 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
9001de0c:	f008 f86c 	bl	90025ee8 <__aeabi_atexit>
9001de10:	4b05      	ldr	r3, [pc, #20]	; (9001de28 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
9001de12:	646b      	str	r3, [r5, #68]	; 0x44
9001de14:	4b07      	ldr	r3, [pc, #28]	; (9001de34 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
9001de16:	64ab      	str	r3, [r5, #72]	; 0x48
9001de18:	bd38      	pop	{r3, r4, r5, pc}
9001de1a:	bf00      	nop
9001de1c:	2402364c 	.word	0x2402364c
9001de20:	24000000 	.word	0x24000000
9001de24:	9001a7b3 	.word	0x9001a7b3
9001de28:	240000b0 	.word	0x240000b0
9001de2c:	24023650 	.word	0x24023650
9001de30:	9001a7b1 	.word	0x9001a7b1
9001de34:	240000b4 	.word	0x240000b4

9001de38 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
9001de38:	b538      	push	{r3, r4, r5, lr}
9001de3a:	4c15      	ldr	r4, [pc, #84]	; (9001de90 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
9001de3c:	4605      	mov	r5, r0
9001de3e:	7823      	ldrb	r3, [r4, #0]
9001de40:	f3bf 8f5b 	dmb	ish
9001de44:	07da      	lsls	r2, r3, #31
9001de46:	d40b      	bmi.n	9001de60 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
9001de48:	4620      	mov	r0, r4
9001de4a:	f008 f854 	bl	90025ef6 <__cxa_guard_acquire>
9001de4e:	b138      	cbz	r0, 9001de60 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
9001de50:	4620      	mov	r0, r4
9001de52:	f008 f85c 	bl	90025f0e <__cxa_guard_release>
9001de56:	4a0f      	ldr	r2, [pc, #60]	; (9001de94 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
9001de58:	490f      	ldr	r1, [pc, #60]	; (9001de98 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
9001de5a:	4810      	ldr	r0, [pc, #64]	; (9001de9c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
9001de5c:	f008 f844 	bl	90025ee8 <__aeabi_atexit>
9001de60:	4c0f      	ldr	r4, [pc, #60]	; (9001dea0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
9001de62:	7823      	ldrb	r3, [r4, #0]
9001de64:	f3bf 8f5b 	dmb	ish
9001de68:	07db      	lsls	r3, r3, #31
9001de6a:	d40b      	bmi.n	9001de84 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
9001de6c:	4620      	mov	r0, r4
9001de6e:	f008 f842 	bl	90025ef6 <__cxa_guard_acquire>
9001de72:	b138      	cbz	r0, 9001de84 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
9001de74:	4620      	mov	r0, r4
9001de76:	f008 f84a 	bl	90025f0e <__cxa_guard_release>
9001de7a:	4a06      	ldr	r2, [pc, #24]	; (9001de94 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
9001de7c:	4909      	ldr	r1, [pc, #36]	; (9001dea4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
9001de7e:	480a      	ldr	r0, [pc, #40]	; (9001dea8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
9001de80:	f008 f832 	bl	90025ee8 <__aeabi_atexit>
9001de84:	4b05      	ldr	r3, [pc, #20]	; (9001de9c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
9001de86:	63eb      	str	r3, [r5, #60]	; 0x3c
9001de88:	4b07      	ldr	r3, [pc, #28]	; (9001dea8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
9001de8a:	642b      	str	r3, [r5, #64]	; 0x40
9001de8c:	bd38      	pop	{r3, r4, r5, pc}
9001de8e:	bf00      	nop
9001de90:	2402366c 	.word	0x2402366c
9001de94:	24000000 	.word	0x24000000
9001de98:	9001a7b7 	.word	0x9001a7b7
9001de9c:	240000d0 	.word	0x240000d0
9001dea0:	24023670 	.word	0x24023670
9001dea4:	9001a7b5 	.word	0x9001a7b5
9001dea8:	240000d4 	.word	0x240000d4

9001deac <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
9001deac:	b510      	push	{r4, lr}
9001deae:	4604      	mov	r4, r0
9001deb0:	f7ff ff14 	bl	9001dcdc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
9001deb4:	4620      	mov	r0, r4
9001deb6:	f7ff ff85 	bl	9001ddc4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
9001deba:	4620      	mov	r0, r4
9001debc:	f7ff ff48 	bl	9001dd50 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
9001dec0:	4620      	mov	r0, r4
9001dec2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001dec6:	f7ff bfb7 	b.w	9001de38 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

9001decc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
9001decc:	b538      	push	{r3, r4, r5, lr}
9001dece:	4c15      	ldr	r4, [pc, #84]	; (9001df24 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
9001ded0:	4605      	mov	r5, r0
9001ded2:	7823      	ldrb	r3, [r4, #0]
9001ded4:	f3bf 8f5b 	dmb	ish
9001ded8:	07da      	lsls	r2, r3, #31
9001deda:	d40b      	bmi.n	9001def4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
9001dedc:	4620      	mov	r0, r4
9001dede:	f008 f80a 	bl	90025ef6 <__cxa_guard_acquire>
9001dee2:	b138      	cbz	r0, 9001def4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
9001dee4:	4620      	mov	r0, r4
9001dee6:	f008 f812 	bl	90025f0e <__cxa_guard_release>
9001deea:	4a0f      	ldr	r2, [pc, #60]	; (9001df28 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
9001deec:	490f      	ldr	r1, [pc, #60]	; (9001df2c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
9001deee:	4810      	ldr	r0, [pc, #64]	; (9001df30 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
9001def0:	f007 fffa 	bl	90025ee8 <__aeabi_atexit>
9001def4:	4c0f      	ldr	r4, [pc, #60]	; (9001df34 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
9001def6:	7823      	ldrb	r3, [r4, #0]
9001def8:	f3bf 8f5b 	dmb	ish
9001defc:	07db      	lsls	r3, r3, #31
9001defe:	d40b      	bmi.n	9001df18 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
9001df00:	4620      	mov	r0, r4
9001df02:	f007 fff8 	bl	90025ef6 <__cxa_guard_acquire>
9001df06:	b138      	cbz	r0, 9001df18 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
9001df08:	4620      	mov	r0, r4
9001df0a:	f008 f800 	bl	90025f0e <__cxa_guard_release>
9001df0e:	4a06      	ldr	r2, [pc, #24]	; (9001df28 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
9001df10:	4909      	ldr	r1, [pc, #36]	; (9001df38 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
9001df12:	480a      	ldr	r0, [pc, #40]	; (9001df3c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
9001df14:	f007 ffe8 	bl	90025ee8 <__aeabi_atexit>
9001df18:	4b05      	ldr	r3, [pc, #20]	; (9001df30 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
9001df1a:	666b      	str	r3, [r5, #100]	; 0x64
9001df1c:	4b07      	ldr	r3, [pc, #28]	; (9001df3c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
9001df1e:	66ab      	str	r3, [r5, #104]	; 0x68
9001df20:	bd38      	pop	{r3, r4, r5, pc}
9001df22:	bf00      	nop
9001df24:	24023654 	.word	0x24023654
9001df28:	24000000 	.word	0x24000000
9001df2c:	9001a7a3 	.word	0x9001a7a3
9001df30:	240000b8 	.word	0x240000b8
9001df34:	24023658 	.word	0x24023658
9001df38:	9001a7a1 	.word	0x9001a7a1
9001df3c:	240000bc 	.word	0x240000bc

9001df40 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
9001df40:	b538      	push	{r3, r4, r5, lr}
9001df42:	4c15      	ldr	r4, [pc, #84]	; (9001df98 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
9001df44:	4605      	mov	r5, r0
9001df46:	7823      	ldrb	r3, [r4, #0]
9001df48:	f3bf 8f5b 	dmb	ish
9001df4c:	07da      	lsls	r2, r3, #31
9001df4e:	d40b      	bmi.n	9001df68 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
9001df50:	4620      	mov	r0, r4
9001df52:	f007 ffd0 	bl	90025ef6 <__cxa_guard_acquire>
9001df56:	b138      	cbz	r0, 9001df68 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
9001df58:	4620      	mov	r0, r4
9001df5a:	f007 ffd8 	bl	90025f0e <__cxa_guard_release>
9001df5e:	4a0f      	ldr	r2, [pc, #60]	; (9001df9c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
9001df60:	490f      	ldr	r1, [pc, #60]	; (9001dfa0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
9001df62:	4810      	ldr	r0, [pc, #64]	; (9001dfa4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
9001df64:	f007 ffc0 	bl	90025ee8 <__aeabi_atexit>
9001df68:	4c0f      	ldr	r4, [pc, #60]	; (9001dfa8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
9001df6a:	7823      	ldrb	r3, [r4, #0]
9001df6c:	f3bf 8f5b 	dmb	ish
9001df70:	07db      	lsls	r3, r3, #31
9001df72:	d40b      	bmi.n	9001df8c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
9001df74:	4620      	mov	r0, r4
9001df76:	f007 ffbe 	bl	90025ef6 <__cxa_guard_acquire>
9001df7a:	b138      	cbz	r0, 9001df8c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
9001df7c:	4620      	mov	r0, r4
9001df7e:	f007 ffc6 	bl	90025f0e <__cxa_guard_release>
9001df82:	4a06      	ldr	r2, [pc, #24]	; (9001df9c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
9001df84:	4909      	ldr	r1, [pc, #36]	; (9001dfac <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
9001df86:	480a      	ldr	r0, [pc, #40]	; (9001dfb0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
9001df88:	f007 ffae 	bl	90025ee8 <__aeabi_atexit>
9001df8c:	4b05      	ldr	r3, [pc, #20]	; (9001dfa4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
9001df8e:	65eb      	str	r3, [r5, #92]	; 0x5c
9001df90:	4b07      	ldr	r3, [pc, #28]	; (9001dfb0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
9001df92:	662b      	str	r3, [r5, #96]	; 0x60
9001df94:	bd38      	pop	{r3, r4, r5, pc}
9001df96:	bf00      	nop
9001df98:	2402362c 	.word	0x2402362c
9001df9c:	24000000 	.word	0x24000000
9001dfa0:	9001a7a7 	.word	0x9001a7a7
9001dfa4:	24000090 	.word	0x24000090
9001dfa8:	24023630 	.word	0x24023630
9001dfac:	9001a7a5 	.word	0x9001a7a5
9001dfb0:	24000094 	.word	0x24000094

9001dfb4 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
9001dfb4:	b510      	push	{r4, lr}
9001dfb6:	4604      	mov	r4, r0
9001dfb8:	f7ff ff88 	bl	9001decc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
9001dfbc:	4620      	mov	r0, r4
9001dfbe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001dfc2:	f7ff bfbd 	b.w	9001df40 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

9001dfc8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
9001dfc8:	b538      	push	{r3, r4, r5, lr}
9001dfca:	4c15      	ldr	r4, [pc, #84]	; (9001e020 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
9001dfcc:	4605      	mov	r5, r0
9001dfce:	7823      	ldrb	r3, [r4, #0]
9001dfd0:	f3bf 8f5b 	dmb	ish
9001dfd4:	07da      	lsls	r2, r3, #31
9001dfd6:	d40b      	bmi.n	9001dff0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
9001dfd8:	4620      	mov	r0, r4
9001dfda:	f007 ff8c 	bl	90025ef6 <__cxa_guard_acquire>
9001dfde:	b138      	cbz	r0, 9001dff0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
9001dfe0:	4620      	mov	r0, r4
9001dfe2:	f007 ff94 	bl	90025f0e <__cxa_guard_release>
9001dfe6:	4a0f      	ldr	r2, [pc, #60]	; (9001e024 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
9001dfe8:	490f      	ldr	r1, [pc, #60]	; (9001e028 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
9001dfea:	4810      	ldr	r0, [pc, #64]	; (9001e02c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
9001dfec:	f007 ff7c 	bl	90025ee8 <__aeabi_atexit>
9001dff0:	4c0f      	ldr	r4, [pc, #60]	; (9001e030 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
9001dff2:	7823      	ldrb	r3, [r4, #0]
9001dff4:	f3bf 8f5b 	dmb	ish
9001dff8:	07db      	lsls	r3, r3, #31
9001dffa:	d40b      	bmi.n	9001e014 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
9001dffc:	4620      	mov	r0, r4
9001dffe:	f007 ff7a 	bl	90025ef6 <__cxa_guard_acquire>
9001e002:	b138      	cbz	r0, 9001e014 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
9001e004:	4620      	mov	r0, r4
9001e006:	f007 ff82 	bl	90025f0e <__cxa_guard_release>
9001e00a:	4a06      	ldr	r2, [pc, #24]	; (9001e024 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
9001e00c:	4909      	ldr	r1, [pc, #36]	; (9001e034 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
9001e00e:	480a      	ldr	r0, [pc, #40]	; (9001e038 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
9001e010:	f007 ff6a 	bl	90025ee8 <__aeabi_atexit>
9001e014:	4b05      	ldr	r3, [pc, #20]	; (9001e02c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
9001e016:	676b      	str	r3, [r5, #116]	; 0x74
9001e018:	4b07      	ldr	r3, [pc, #28]	; (9001e038 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
9001e01a:	67ab      	str	r3, [r5, #120]	; 0x78
9001e01c:	bd38      	pop	{r3, r4, r5, pc}
9001e01e:	bf00      	nop
9001e020:	24023624 	.word	0x24023624
9001e024:	24000000 	.word	0x24000000
9001e028:	9001a79b 	.word	0x9001a79b
9001e02c:	24000088 	.word	0x24000088
9001e030:	24023628 	.word	0x24023628
9001e034:	9001a799 	.word	0x9001a799
9001e038:	2400008c 	.word	0x2400008c

9001e03c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
9001e03c:	b538      	push	{r3, r4, r5, lr}
9001e03e:	4c15      	ldr	r4, [pc, #84]	; (9001e094 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
9001e040:	4605      	mov	r5, r0
9001e042:	7823      	ldrb	r3, [r4, #0]
9001e044:	f3bf 8f5b 	dmb	ish
9001e048:	07da      	lsls	r2, r3, #31
9001e04a:	d40b      	bmi.n	9001e064 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
9001e04c:	4620      	mov	r0, r4
9001e04e:	f007 ff52 	bl	90025ef6 <__cxa_guard_acquire>
9001e052:	b138      	cbz	r0, 9001e064 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
9001e054:	4620      	mov	r0, r4
9001e056:	f007 ff5a 	bl	90025f0e <__cxa_guard_release>
9001e05a:	4a0f      	ldr	r2, [pc, #60]	; (9001e098 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
9001e05c:	490f      	ldr	r1, [pc, #60]	; (9001e09c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
9001e05e:	4810      	ldr	r0, [pc, #64]	; (9001e0a0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
9001e060:	f007 ff42 	bl	90025ee8 <__aeabi_atexit>
9001e064:	4c0f      	ldr	r4, [pc, #60]	; (9001e0a4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
9001e066:	7823      	ldrb	r3, [r4, #0]
9001e068:	f3bf 8f5b 	dmb	ish
9001e06c:	07db      	lsls	r3, r3, #31
9001e06e:	d40b      	bmi.n	9001e088 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
9001e070:	4620      	mov	r0, r4
9001e072:	f007 ff40 	bl	90025ef6 <__cxa_guard_acquire>
9001e076:	b138      	cbz	r0, 9001e088 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
9001e078:	4620      	mov	r0, r4
9001e07a:	f007 ff48 	bl	90025f0e <__cxa_guard_release>
9001e07e:	4a06      	ldr	r2, [pc, #24]	; (9001e098 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
9001e080:	4909      	ldr	r1, [pc, #36]	; (9001e0a8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
9001e082:	480a      	ldr	r0, [pc, #40]	; (9001e0ac <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
9001e084:	f007 ff30 	bl	90025ee8 <__aeabi_atexit>
9001e088:	4b05      	ldr	r3, [pc, #20]	; (9001e0a0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
9001e08a:	66eb      	str	r3, [r5, #108]	; 0x6c
9001e08c:	4b07      	ldr	r3, [pc, #28]	; (9001e0ac <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
9001e08e:	672b      	str	r3, [r5, #112]	; 0x70
9001e090:	bd38      	pop	{r3, r4, r5, pc}
9001e092:	bf00      	nop
9001e094:	2402361c 	.word	0x2402361c
9001e098:	24000000 	.word	0x24000000
9001e09c:	9001a79f 	.word	0x9001a79f
9001e0a0:	24000080 	.word	0x24000080
9001e0a4:	24023620 	.word	0x24023620
9001e0a8:	9001a79d 	.word	0x9001a79d
9001e0ac:	24000084 	.word	0x24000084

9001e0b0 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
9001e0b0:	b510      	push	{r4, lr}
9001e0b2:	4604      	mov	r4, r0
9001e0b4:	f7ff ff88 	bl	9001dfc8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
9001e0b8:	4620      	mov	r0, r4
9001e0ba:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001e0be:	f7ff bfbd 	b.w	9001e03c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

9001e0c2 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
9001e0c2:	b510      	push	{r4, lr}
9001e0c4:	4604      	mov	r4, r0
9001e0c6:	f7ff fff3 	bl	9001e0b0 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
9001e0ca:	4620      	mov	r0, r4
9001e0cc:	f7ff ff72 	bl	9001dfb4 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
9001e0d0:	4620      	mov	r0, r4
9001e0d2:	f7ff fdf9 	bl	9001dcc8 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
9001e0d6:	4620      	mov	r0, r4
9001e0d8:	f7ff fcfa 	bl	9001dad0 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
9001e0dc:	4620      	mov	r0, r4
9001e0de:	f7ff fd75 	bl	9001dbcc <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
9001e0e2:	4620      	mov	r0, r4
9001e0e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001e0e8:	f7ff bee0 	b.w	9001deac <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

9001e0ec <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
9001e0ec:	b538      	push	{r3, r4, r5, lr}
9001e0ee:	4c0b      	ldr	r4, [pc, #44]	; (9001e11c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
9001e0f0:	4605      	mov	r5, r0
9001e0f2:	7823      	ldrb	r3, [r4, #0]
9001e0f4:	f3bf 8f5b 	dmb	ish
9001e0f8:	07db      	lsls	r3, r3, #31
9001e0fa:	d40b      	bmi.n	9001e114 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
9001e0fc:	4620      	mov	r0, r4
9001e0fe:	f007 fefa 	bl	90025ef6 <__cxa_guard_acquire>
9001e102:	b138      	cbz	r0, 9001e114 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
9001e104:	4620      	mov	r0, r4
9001e106:	f007 ff02 	bl	90025f0e <__cxa_guard_release>
9001e10a:	4a05      	ldr	r2, [pc, #20]	; (9001e120 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
9001e10c:	4905      	ldr	r1, [pc, #20]	; (9001e124 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
9001e10e:	4806      	ldr	r0, [pc, #24]	; (9001e128 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
9001e110:	f007 feea 	bl	90025ee8 <__aeabi_atexit>
9001e114:	4b04      	ldr	r3, [pc, #16]	; (9001e128 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
9001e116:	67eb      	str	r3, [r5, #124]	; 0x7c
9001e118:	bd38      	pop	{r3, r4, r5, pc}
9001e11a:	bf00      	nop
9001e11c:	24023610 	.word	0x24023610
9001e120:	24000000 	.word	0x24000000
9001e124:	9001a797 	.word	0x9001a797
9001e128:	24000078 	.word	0x24000078

9001e12c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
9001e12c:	b538      	push	{r3, r4, r5, lr}
9001e12e:	4c0b      	ldr	r4, [pc, #44]	; (9001e15c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
9001e130:	4605      	mov	r5, r0
9001e132:	7823      	ldrb	r3, [r4, #0]
9001e134:	f3bf 8f5b 	dmb	ish
9001e138:	07db      	lsls	r3, r3, #31
9001e13a:	d40b      	bmi.n	9001e154 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
9001e13c:	4620      	mov	r0, r4
9001e13e:	f007 feda 	bl	90025ef6 <__cxa_guard_acquire>
9001e142:	b138      	cbz	r0, 9001e154 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
9001e144:	4620      	mov	r0, r4
9001e146:	f007 fee2 	bl	90025f0e <__cxa_guard_release>
9001e14a:	4a05      	ldr	r2, [pc, #20]	; (9001e160 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
9001e14c:	4905      	ldr	r1, [pc, #20]	; (9001e164 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
9001e14e:	4806      	ldr	r0, [pc, #24]	; (9001e168 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
9001e150:	f007 feca 	bl	90025ee8 <__aeabi_atexit>
9001e154:	4b04      	ldr	r3, [pc, #16]	; (9001e168 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
9001e156:	f8c5 3080 	str.w	r3, [r5, #128]	; 0x80
9001e15a:	bd38      	pop	{r3, r4, r5, pc}
9001e15c:	24023614 	.word	0x24023614
9001e160:	24000000 	.word	0x24000000
9001e164:	9001a795 	.word	0x9001a795
9001e168:	2400007c 	.word	0x2400007c

9001e16c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
9001e16c:	b570      	push	{r4, r5, r6, lr}
9001e16e:	4d0d      	ldr	r5, [pc, #52]	; (9001e1a4 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
9001e170:	4606      	mov	r6, r0
9001e172:	4c0d      	ldr	r4, [pc, #52]	; (9001e1a8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
9001e174:	782b      	ldrb	r3, [r5, #0]
9001e176:	f3bf 8f5b 	dmb	ish
9001e17a:	f013 0f01 	tst.w	r3, #1
9001e17e:	d10d      	bne.n	9001e19c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
9001e180:	4628      	mov	r0, r5
9001e182:	f007 feb8 	bl	90025ef6 <__cxa_guard_acquire>
9001e186:	b148      	cbz	r0, 9001e19c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
9001e188:	4b08      	ldr	r3, [pc, #32]	; (9001e1ac <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
9001e18a:	4628      	mov	r0, r5
9001e18c:	6023      	str	r3, [r4, #0]
9001e18e:	f007 febe 	bl	90025f0e <__cxa_guard_release>
9001e192:	4a07      	ldr	r2, [pc, #28]	; (9001e1b0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
9001e194:	4620      	mov	r0, r4
9001e196:	4907      	ldr	r1, [pc, #28]	; (9001e1b4 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
9001e198:	f007 fea6 	bl	90025ee8 <__aeabi_atexit>
9001e19c:	f8c6 4084 	str.w	r4, [r6, #132]	; 0x84
9001e1a0:	bd70      	pop	{r4, r5, r6, pc}
9001e1a2:	bf00      	nop
9001e1a4:	24023618 	.word	0x24023618
9001e1a8:	2402368c 	.word	0x2402368c
9001e1ac:	9002a564 	.word	0x9002a564
9001e1b0:	24000000 	.word	0x24000000
9001e1b4:	9001a793 	.word	0x9001a793

9001e1b8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
9001e1b8:	b510      	push	{r4, lr}
9001e1ba:	4604      	mov	r4, r0
9001e1bc:	f7ff ff96 	bl	9001e0ec <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
9001e1c0:	4620      	mov	r0, r4
9001e1c2:	f7ff ffb3 	bl	9001e12c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
9001e1c6:	4620      	mov	r0, r4
9001e1c8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001e1cc:	f7ff bfce 	b.w	9001e16c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

9001e1d0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
9001e1d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001e1d4:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
9001e1d8:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
9001e1dc:	2d00      	cmp	r5, #0
9001e1de:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
9001e1e2:	fb05 4c0e 	mla	ip, r5, lr, r4
9001e1e6:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
9001e1ea:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
9001e1ee:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
9001e1f2:	eb02 0a0c 	add.w	sl, r2, ip
9001e1f6:	8808      	ldrh	r0, [r1, #0]
9001e1f8:	f2c0 80b0 	blt.w	9001e35c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
9001e1fc:	45ab      	cmp	fp, r5
9001e1fe:	f340 80ad 	ble.w	9001e35c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
9001e202:	2c00      	cmp	r4, #0
9001e204:	f2c0 80a8 	blt.w	9001e358 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
9001e208:	45a6      	cmp	lr, r4
9001e20a:	f340 80a5 	ble.w	9001e358 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
9001e20e:	f812 200c 	ldrb.w	r2, [r2, ip]
9001e212:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
9001e216:	1c62      	adds	r2, r4, #1
9001e218:	f100 80a3 	bmi.w	9001e362 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
9001e21c:	4596      	cmp	lr, r2
9001e21e:	f340 80a0 	ble.w	9001e362 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
9001e222:	f1b9 0f00 	cmp.w	r9, #0
9001e226:	f000 809c 	beq.w	9001e362 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
9001e22a:	f89a 2001 	ldrb.w	r2, [sl, #1]
9001e22e:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
9001e232:	3501      	adds	r5, #1
9001e234:	f100 8099 	bmi.w	9001e36a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
9001e238:	45ab      	cmp	fp, r5
9001e23a:	f340 8096 	ble.w	9001e36a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
9001e23e:	2f00      	cmp	r7, #0
9001e240:	f000 8093 	beq.w	9001e36a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
9001e244:	2c00      	cmp	r4, #0
9001e246:	f2c0 808e 	blt.w	9001e366 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
9001e24a:	45a6      	cmp	lr, r4
9001e24c:	f340 808b 	ble.w	9001e366 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
9001e250:	f81a 200e 	ldrb.w	r2, [sl, lr]
9001e254:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
9001e258:	3401      	adds	r4, #1
9001e25a:	f100 8089 	bmi.w	9001e370 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
9001e25e:	45a6      	cmp	lr, r4
9001e260:	f340 8086 	ble.w	9001e370 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
9001e264:	f1b9 0f00 	cmp.w	r9, #0
9001e268:	f000 8082 	beq.w	9001e370 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
9001e26c:	44d6      	add	lr, sl
9001e26e:	f89e 2001 	ldrb.w	r2, [lr, #1]
9001e272:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
9001e276:	ea4f 4408 	mov.w	r4, r8, lsl #16
9001e27a:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
9001e27e:	fb19 fe07 	smulbb	lr, r9, r7
9001e282:	f1c7 0210 	rsb	r2, r7, #16
9001e286:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
9001e28a:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
9001e28e:	eba2 0209 	sub.w	r2, r2, r9
9001e292:	ea44 0808 	orr.w	r8, r4, r8
9001e296:	ea4f 440c 	mov.w	r4, ip, lsl #16
9001e29a:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
9001e29e:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
9001e2a2:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
9001e2a6:	ebce 0747 	rsb	r7, lr, r7, lsl #1
9001e2aa:	ea44 0c0c 	orr.w	ip, r4, ip
9001e2ae:	ebce 0449 	rsb	r4, lr, r9, lsl #1
9001e2b2:	fb04 f40c 	mul.w	r4, r4, ip
9001e2b6:	fb02 4808 	mla	r8, r2, r8, r4
9001e2ba:	041a      	lsls	r2, r3, #16
9001e2bc:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
9001e2c0:	b2b4      	uxth	r4, r6
9001e2c2:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
9001e2c6:	43f6      	mvns	r6, r6
9001e2c8:	4313      	orrs	r3, r2
9001e2ca:	042a      	lsls	r2, r5, #16
9001e2cc:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
9001e2d0:	b2f6      	uxtb	r6, r6
9001e2d2:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
9001e2d6:	fb0e 8303 	mla	r3, lr, r3, r8
9001e2da:	432a      	orrs	r2, r5
9001e2dc:	fb07 3202 	mla	r2, r7, r2, r3
9001e2e0:	10c7      	asrs	r7, r0, #3
9001e2e2:	0d53      	lsrs	r3, r2, #21
9001e2e4:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001e2e8:	0952      	lsrs	r2, r2, #5
9001e2ea:	fb17 f706 	smulbb	r7, r7, r6
9001e2ee:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9001e2f2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
9001e2f6:	431a      	orrs	r2, r3
9001e2f8:	b293      	uxth	r3, r2
9001e2fa:	1202      	asrs	r2, r0, #8
9001e2fc:	121d      	asrs	r5, r3, #8
9001e2fe:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
9001e302:	00c0      	lsls	r0, r0, #3
9001e304:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
9001e308:	fb12 f206 	smulbb	r2, r2, r6
9001e30c:	b2c0      	uxtb	r0, r0
9001e30e:	fb05 2504 	mla	r5, r5, r4, r2
9001e312:	10da      	asrs	r2, r3, #3
9001e314:	fb10 f006 	smulbb	r0, r0, r6
9001e318:	00db      	lsls	r3, r3, #3
9001e31a:	b2ad      	uxth	r5, r5
9001e31c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
9001e320:	b2db      	uxtb	r3, r3
9001e322:	fb02 7204 	mla	r2, r2, r4, r7
9001e326:	fb03 0004 	mla	r0, r3, r4, r0
9001e32a:	1c6b      	adds	r3, r5, #1
9001e32c:	b292      	uxth	r2, r2
9001e32e:	b280      	uxth	r0, r0
9001e330:	eb03 2515 	add.w	r5, r3, r5, lsr #8
9001e334:	1c43      	adds	r3, r0, #1
9001e336:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
9001e33a:	eb03 2310 	add.w	r3, r3, r0, lsr #8
9001e33e:	1c50      	adds	r0, r2, #1
9001e340:	eb00 2212 	add.w	r2, r0, r2, lsr #8
9001e344:	f3c3 23c4 	ubfx	r3, r3, #11, #5
9001e348:	0952      	lsrs	r2, r2, #5
9001e34a:	432b      	orrs	r3, r5
9001e34c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001e350:	4313      	orrs	r3, r2
9001e352:	800b      	strh	r3, [r1, #0]
9001e354:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001e358:	4680      	mov	r8, r0
9001e35a:	e75c      	b.n	9001e216 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
9001e35c:	4684      	mov	ip, r0
9001e35e:	4680      	mov	r8, r0
9001e360:	e767      	b.n	9001e232 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
9001e362:	4684      	mov	ip, r0
9001e364:	e765      	b.n	9001e232 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
9001e366:	4605      	mov	r5, r0
9001e368:	e776      	b.n	9001e258 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
9001e36a:	4603      	mov	r3, r0
9001e36c:	4605      	mov	r5, r0
9001e36e:	e782      	b.n	9001e276 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
9001e370:	4603      	mov	r3, r0
9001e372:	e780      	b.n	9001e276 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

9001e374 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001e374:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001e378:	b099      	sub	sp, #100	; 0x64
9001e37a:	9215      	str	r2, [sp, #84]	; 0x54
9001e37c:	9309      	str	r3, [sp, #36]	; 0x24
9001e37e:	9a27      	ldr	r2, [sp, #156]	; 0x9c
9001e380:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
9001e384:	9016      	str	r0, [sp, #88]	; 0x58
9001e386:	930d      	str	r3, [sp, #52]	; 0x34
9001e388:	6850      	ldr	r0, [r2, #4]
9001e38a:	910c      	str	r1, [sp, #48]	; 0x30
9001e38c:	6812      	ldr	r2, [r2, #0]
9001e38e:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
9001e392:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
9001e396:	fb00 1303 	mla	r3, r0, r3, r1
9001e39a:	eb02 0843 	add.w	r8, r2, r3, lsl #1
9001e39e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
9001e3a0:	681b      	ldr	r3, [r3, #0]
9001e3a2:	930b      	str	r3, [sp, #44]	; 0x2c
9001e3a4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
9001e3a6:	685e      	ldr	r6, [r3, #4]
9001e3a8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001e3aa:	3604      	adds	r6, #4
9001e3ac:	43db      	mvns	r3, r3
9001e3ae:	b2db      	uxtb	r3, r3
9001e3b0:	930a      	str	r3, [sp, #40]	; 0x28
9001e3b2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9001e3b4:	2b00      	cmp	r3, #0
9001e3b6:	dc03      	bgt.n	9001e3c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
9001e3b8:	9b15      	ldr	r3, [sp, #84]	; 0x54
9001e3ba:	2b00      	cmp	r3, #0
9001e3bc:	f340 8225 	ble.w	9001e80a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
9001e3c0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
9001e3c2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9001e3c6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9001e3ca:	1e48      	subs	r0, r1, #1
9001e3cc:	1e57      	subs	r7, r2, #1
9001e3ce:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001e3d0:	2b00      	cmp	r3, #0
9001e3d2:	f340 80e3 	ble.w	9001e59c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
9001e3d6:	ea5f 4c2a 	movs.w	ip, sl, asr #16
9001e3da:	ea4f 4325 	mov.w	r3, r5, asr #16
9001e3de:	d406      	bmi.n	9001e3ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
9001e3e0:	4584      	cmp	ip, r0
9001e3e2:	da04      	bge.n	9001e3ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
9001e3e4:	2b00      	cmp	r3, #0
9001e3e6:	db02      	blt.n	9001e3ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
9001e3e8:	42bb      	cmp	r3, r7
9001e3ea:	f2c0 80d8 	blt.w	9001e59e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
9001e3ee:	f11c 0c01 	adds.w	ip, ip, #1
9001e3f2:	f100 80c9 	bmi.w	9001e588 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9001e3f6:	4561      	cmp	r1, ip
9001e3f8:	f2c0 80c6 	blt.w	9001e588 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9001e3fc:	3301      	adds	r3, #1
9001e3fe:	f100 80c3 	bmi.w	9001e588 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9001e402:	429a      	cmp	r2, r3
9001e404:	f2c0 80c0 	blt.w	9001e588 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9001e408:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
9001e40c:	4647      	mov	r7, r8
9001e40e:	f1bb 0f00 	cmp.w	fp, #0
9001e412:	f340 80e3 	ble.w	9001e5dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
9001e416:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
9001e418:	ea4f 4c25 	mov.w	ip, r5, asr #16
9001e41c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
9001e41e:	f3ca 3003 	ubfx	r0, sl, #12, #4
9001e422:	f8d2 e00c 	ldr.w	lr, [r2, #12]
9001e426:	ea5f 422a 	movs.w	r2, sl, asr #16
9001e42a:	f3c5 3103 	ubfx	r1, r5, #12, #4
9001e42e:	689b      	ldr	r3, [r3, #8]
9001e430:	f100 8121 	bmi.w	9001e676 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
9001e434:	f103 39ff 	add.w	r9, r3, #4294967295
9001e438:	454a      	cmp	r2, r9
9001e43a:	f280 811c 	bge.w	9001e676 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
9001e43e:	f1bc 0f00 	cmp.w	ip, #0
9001e442:	f2c0 8118 	blt.w	9001e676 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
9001e446:	f10e 39ff 	add.w	r9, lr, #4294967295
9001e44a:	45cc      	cmp	ip, r9
9001e44c:	f280 8113 	bge.w	9001e676 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
9001e450:	b21b      	sxth	r3, r3
9001e452:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
9001e454:	fb0c 2203 	mla	r2, ip, r3, r2
9001e458:	eb04 0902 	add.w	r9, r4, r2
9001e45c:	5ca2      	ldrb	r2, [r4, r2]
9001e45e:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
9001e462:	2800      	cmp	r0, #0
9001e464:	f000 80fe 	beq.w	9001e664 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
9001e468:	f899 2001 	ldrb.w	r2, [r9, #1]
9001e46c:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
9001e470:	9211      	str	r2, [sp, #68]	; 0x44
9001e472:	b151      	cbz	r1, 9001e48a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
9001e474:	eb09 0203 	add.w	r2, r9, r3
9001e478:	f819 3003 	ldrb.w	r3, [r9, r3]
9001e47c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
9001e480:	930f      	str	r3, [sp, #60]	; 0x3c
9001e482:	7853      	ldrb	r3, [r2, #1]
9001e484:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
9001e488:	9312      	str	r3, [sp, #72]	; 0x48
9001e48a:	9b11      	ldr	r3, [sp, #68]	; 0x44
9001e48c:	fb10 f201 	smulbb	r2, r0, r1
9001e490:	9c12      	ldr	r4, [sp, #72]	; 0x48
9001e492:	ea4f 4c03 	mov.w	ip, r3, lsl #16
9001e496:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
9001e49a:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
9001e49e:	10d2      	asrs	r2, r2, #3
9001e4a0:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
9001e4a4:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
9001e4a8:	ea4c 0c03 	orr.w	ip, ip, r3
9001e4ac:	9b12      	ldr	r3, [sp, #72]	; 0x48
9001e4ae:	041b      	lsls	r3, r3, #16
9001e4b0:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
9001e4b4:	4323      	orrs	r3, r4
9001e4b6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
9001e4b8:	4353      	muls	r3, r2
9001e4ba:	fb09 330c 	mla	r3, r9, ip, r3
9001e4be:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
9001e4c2:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
9001e4c6:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
9001e4ca:	ea4c 0e0e 	orr.w	lr, ip, lr
9001e4ce:	f1c1 0c10 	rsb	ip, r1, #16
9001e4d2:	ebac 0c00 	sub.w	ip, ip, r0
9001e4d6:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
9001e4da:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
9001e4de:	fb0c 3c0e 	mla	ip, ip, lr, r3
9001e4e2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
9001e4e4:	0418      	lsls	r0, r3, #16
9001e4e6:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
9001e4ea:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
9001e4ee:	4318      	orrs	r0, r3
9001e4f0:	fb02 c200 	mla	r2, r2, r0, ip
9001e4f4:	8838      	ldrh	r0, [r7, #0]
9001e4f6:	0d53      	lsrs	r3, r2, #21
9001e4f8:	0952      	lsrs	r2, r2, #5
9001e4fa:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9001e4fe:	1201      	asrs	r1, r0, #8
9001e500:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
9001e504:	ea4f 0ee0 	mov.w	lr, r0, asr #3
9001e508:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
9001e50c:	00c0      	lsls	r0, r0, #3
9001e50e:	431a      	orrs	r2, r3
9001e510:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
9001e514:	fb11 f104 	smulbb	r1, r1, r4
9001e518:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
9001e51c:	b292      	uxth	r2, r2
9001e51e:	fb1e fe04 	smulbb	lr, lr, r4
9001e522:	b2c0      	uxtb	r0, r0
9001e524:	ea4f 2c22 	mov.w	ip, r2, asr #8
9001e528:	fb10 f004 	smulbb	r0, r0, r4
9001e52c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001e530:	fb0c 1c03 	mla	ip, ip, r3, r1
9001e534:	10d1      	asrs	r1, r2, #3
9001e536:	00d2      	lsls	r2, r2, #3
9001e538:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
9001e53c:	fa1f fc8c 	uxth.w	ip, ip
9001e540:	b2d2      	uxtb	r2, r2
9001e542:	fb01 e103 	mla	r1, r1, r3, lr
9001e546:	fb02 0303 	mla	r3, r2, r3, r0
9001e54a:	b289      	uxth	r1, r1
9001e54c:	b29a      	uxth	r2, r3
9001e54e:	f10c 0301 	add.w	r3, ip, #1
9001e552:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
9001e556:	1c53      	adds	r3, r2, #1
9001e558:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9001e55c:	1c4a      	adds	r2, r1, #1
9001e55e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001e562:	eb02 2111 	add.w	r1, r2, r1, lsr #8
9001e566:	f3c3 23c4 	ubfx	r3, r3, #11, #5
9001e56a:	0949      	lsrs	r1, r1, #5
9001e56c:	ea43 030c 	orr.w	r3, r3, ip
9001e570:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
9001e574:	430b      	orrs	r3, r1
9001e576:	803b      	strh	r3, [r7, #0]
9001e578:	9b25      	ldr	r3, [sp, #148]	; 0x94
9001e57a:	3702      	adds	r7, #2
9001e57c:	f10b 3bff 	add.w	fp, fp, #4294967295
9001e580:	449a      	add	sl, r3
9001e582:	9b26      	ldr	r3, [sp, #152]	; 0x98
9001e584:	441d      	add	r5, r3
9001e586:	e742      	b.n	9001e40e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
9001e588:	9b25      	ldr	r3, [sp, #148]	; 0x94
9001e58a:	f108 0802 	add.w	r8, r8, #2
9001e58e:	449a      	add	sl, r3
9001e590:	9b26      	ldr	r3, [sp, #152]	; 0x98
9001e592:	441d      	add	r5, r3
9001e594:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001e596:	3b01      	subs	r3, #1
9001e598:	9309      	str	r3, [sp, #36]	; 0x24
9001e59a:	e718      	b.n	9001e3ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
9001e59c:	d023      	beq.n	9001e5e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
9001e59e:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001e5a0:	9825      	ldr	r0, [sp, #148]	; 0x94
9001e5a2:	3b01      	subs	r3, #1
9001e5a4:	fb00 a003 	mla	r0, r0, r3, sl
9001e5a8:	1400      	asrs	r0, r0, #16
9001e5aa:	f53f af2d 	bmi.w	9001e408 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
9001e5ae:	3901      	subs	r1, #1
9001e5b0:	4288      	cmp	r0, r1
9001e5b2:	f6bf af29 	bge.w	9001e408 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
9001e5b6:	9926      	ldr	r1, [sp, #152]	; 0x98
9001e5b8:	fb01 5303 	mla	r3, r1, r3, r5
9001e5bc:	141b      	asrs	r3, r3, #16
9001e5be:	f53f af23 	bmi.w	9001e408 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
9001e5c2:	3a01      	subs	r2, #1
9001e5c4:	4293      	cmp	r3, r2
9001e5c6:	f6bf af1f 	bge.w	9001e408 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
9001e5ca:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
9001e5ce:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
9001e5d2:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
9001e5d6:	f1be 0f00 	cmp.w	lr, #0
9001e5da:	dc6c      	bgt.n	9001e6b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
9001e5dc:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001e5de:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
9001e5e2:	eb08 0844 	add.w	r8, r8, r4, lsl #1
9001e5e6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9001e5e8:	2b00      	cmp	r3, #0
9001e5ea:	f340 810e 	ble.w	9001e80a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
9001e5ee:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
9001e5f2:	9b22      	ldr	r3, [sp, #136]	; 0x88
9001e5f4:	ee30 0a04 	vadd.f32	s0, s0, s8
9001e5f8:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001e5fc:	eef0 6a62 	vmov.f32	s13, s5
9001e600:	eec7 7a00 	vdiv.f32	s15, s14, s0
9001e604:	ee31 1a05 	vadd.f32	s2, s2, s10
9001e608:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001e60c:	ee16 aa90 	vmov	sl, s13
9001e610:	eef0 6a43 	vmov.f32	s13, s6
9001e614:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001e618:	ee16 5a90 	vmov	r5, s13
9001e61c:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001e620:	ee61 7a27 	vmul.f32	s15, s2, s15
9001e624:	ee77 2a62 	vsub.f32	s5, s14, s5
9001e628:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001e62c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001e630:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001e634:	ee12 2a90 	vmov	r2, s5
9001e638:	eef0 2a47 	vmov.f32	s5, s14
9001e63c:	fb92 f3f3 	sdiv	r3, r2, r3
9001e640:	ee13 2a10 	vmov	r2, s6
9001e644:	9325      	str	r3, [sp, #148]	; 0x94
9001e646:	9b22      	ldr	r3, [sp, #136]	; 0x88
9001e648:	eeb0 3a67 	vmov.f32	s6, s15
9001e64c:	fb92 f3f3 	sdiv	r3, r2, r3
9001e650:	9326      	str	r3, [sp, #152]	; 0x98
9001e652:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9001e654:	9a15      	ldr	r2, [sp, #84]	; 0x54
9001e656:	3b01      	subs	r3, #1
9001e658:	930c      	str	r3, [sp, #48]	; 0x30
9001e65a:	9b22      	ldr	r3, [sp, #136]	; 0x88
9001e65c:	bf08      	it	eq
9001e65e:	4613      	moveq	r3, r2
9001e660:	9309      	str	r3, [sp, #36]	; 0x24
9001e662:	e6a6      	b.n	9001e3b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
9001e664:	2900      	cmp	r1, #0
9001e666:	f43f af10 	beq.w	9001e48a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
9001e66a:	f819 3003 	ldrb.w	r3, [r9, r3]
9001e66e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
9001e672:	930f      	str	r3, [sp, #60]	; 0x3c
9001e674:	e709      	b.n	9001e48a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
9001e676:	f112 0901 	adds.w	r9, r2, #1
9001e67a:	f53f af7d 	bmi.w	9001e578 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9001e67e:	454b      	cmp	r3, r9
9001e680:	f6ff af7a 	blt.w	9001e578 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9001e684:	f11c 0901 	adds.w	r9, ip, #1
9001e688:	f53f af76 	bmi.w	9001e578 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9001e68c:	45ce      	cmp	lr, r9
9001e68e:	f6ff af73 	blt.w	9001e578 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9001e692:	9c0d      	ldr	r4, [sp, #52]	; 0x34
9001e694:	b21b      	sxth	r3, r3
9001e696:	9202      	str	r2, [sp, #8]
9001e698:	fa0f f28e 	sxth.w	r2, lr
9001e69c:	9300      	str	r3, [sp, #0]
9001e69e:	4633      	mov	r3, r6
9001e6a0:	9201      	str	r2, [sp, #4]
9001e6a2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
9001e6a4:	e9cd 1405 	strd	r1, r4, [sp, #20]
9001e6a8:	e9cd c003 	strd	ip, r0, [sp, #12]
9001e6ac:	4639      	mov	r1, r7
9001e6ae:	9816      	ldr	r0, [sp, #88]	; 0x58
9001e6b0:	f7ff fd8e 	bl	9001e1d0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
9001e6b4:	e760      	b.n	9001e578 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9001e6b6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
9001e6b8:	ea4f 422a 	mov.w	r2, sl, asr #16
9001e6bc:	1429      	asrs	r1, r5, #16
9001e6be:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
9001e6c0:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
9001e6c4:	f3ca 3c03 	ubfx	ip, sl, #12, #4
9001e6c8:	f3c5 3003 	ubfx	r0, r5, #12, #4
9001e6cc:	fb03 2101 	mla	r1, r3, r1, r2
9001e6d0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
9001e6d2:	440a      	add	r2, r1
9001e6d4:	5c61      	ldrb	r1, [r4, r1]
9001e6d6:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
9001e6da:	f1bc 0f00 	cmp.w	ip, #0
9001e6de:	f000 808c 	beq.w	9001e7fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
9001e6e2:	7857      	ldrb	r7, [r2, #1]
9001e6e4:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
9001e6e8:	9413      	str	r4, [sp, #76]	; 0x4c
9001e6ea:	b140      	cbz	r0, 9001e6fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
9001e6ec:	18d7      	adds	r7, r2, r3
9001e6ee:	5cd3      	ldrb	r3, [r2, r3]
9001e6f0:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
9001e6f4:	9310      	str	r3, [sp, #64]	; 0x40
9001e6f6:	787b      	ldrb	r3, [r7, #1]
9001e6f8:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
9001e6fc:	9314      	str	r3, [sp, #80]	; 0x50
9001e6fe:	9b13      	ldr	r3, [sp, #76]	; 0x4c
9001e700:	fb1c f200 	smulbb	r2, ip, r0
9001e704:	9c14      	ldr	r4, [sp, #80]	; 0x50
9001e706:	f10e 3eff 	add.w	lr, lr, #4294967295
9001e70a:	041f      	lsls	r7, r3, #16
9001e70c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
9001e710:	10d2      	asrs	r2, r2, #3
9001e712:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
9001e716:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
9001e71a:	431f      	orrs	r7, r3
9001e71c:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
9001e720:	9317      	str	r3, [sp, #92]	; 0x5c
9001e722:	9b14      	ldr	r3, [sp, #80]	; 0x50
9001e724:	9c17      	ldr	r4, [sp, #92]	; 0x5c
9001e726:	041b      	lsls	r3, r3, #16
9001e728:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
9001e72c:	ea43 030b 	orr.w	r3, r3, fp
9001e730:	ea4f 4b01 	mov.w	fp, r1, lsl #16
9001e734:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
9001e738:	4353      	muls	r3, r2
9001e73a:	fb04 3707 	mla	r7, r4, r7, r3
9001e73e:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
9001e742:	9c0a      	ldr	r4, [sp, #40]	; 0x28
9001e744:	ea43 0b01 	orr.w	fp, r3, r1
9001e748:	f1c0 0110 	rsb	r1, r0, #16
9001e74c:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001e74e:	eba1 0c0c 	sub.w	ip, r1, ip
9001e752:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
9001e756:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
9001e75a:	fb0c 770b 	mla	r7, ip, fp, r7
9001e75e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
9001e762:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
9001e766:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
9001e76a:	ea4c 0c0b 	orr.w	ip, ip, fp
9001e76e:	fb02 770c 	mla	r7, r2, ip, r7
9001e772:	9a0e      	ldr	r2, [sp, #56]	; 0x38
9001e774:	0d79      	lsrs	r1, r7, #21
9001e776:	8812      	ldrh	r2, [r2, #0]
9001e778:	097f      	lsrs	r7, r7, #5
9001e77a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
9001e77e:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
9001e782:	430f      	orrs	r7, r1
9001e784:	1211      	asrs	r1, r2, #8
9001e786:	b2bb      	uxth	r3, r7
9001e788:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
9001e78c:	10d7      	asrs	r7, r2, #3
9001e78e:	fb11 f104 	smulbb	r1, r1, r4
9001e792:	1218      	asrs	r0, r3, #8
9001e794:	00d2      	lsls	r2, r2, #3
9001e796:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001e79a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
9001e79e:	fb17 f704 	smulbb	r7, r7, r4
9001e7a2:	b2d2      	uxtb	r2, r2
9001e7a4:	fb00 1009 	mla	r0, r0, r9, r1
9001e7a8:	10d9      	asrs	r1, r3, #3
9001e7aa:	fb12 f204 	smulbb	r2, r2, r4
9001e7ae:	00db      	lsls	r3, r3, #3
9001e7b0:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
9001e7b4:	b280      	uxth	r0, r0
9001e7b6:	b2db      	uxtb	r3, r3
9001e7b8:	fb01 7109 	mla	r1, r1, r9, r7
9001e7bc:	fb03 2309 	mla	r3, r3, r9, r2
9001e7c0:	1c42      	adds	r2, r0, #1
9001e7c2:	b289      	uxth	r1, r1
9001e7c4:	b29b      	uxth	r3, r3
9001e7c6:	eb02 2010 	add.w	r0, r2, r0, lsr #8
9001e7ca:	1c4f      	adds	r7, r1, #1
9001e7cc:	1c5a      	adds	r2, r3, #1
9001e7ce:	eb07 2111 	add.w	r1, r7, r1, lsr #8
9001e7d2:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
9001e7d6:	eb02 2213 	add.w	r2, r2, r3, lsr #8
9001e7da:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001e7dc:	0949      	lsrs	r1, r1, #5
9001e7de:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001e7e2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
9001e7e6:	4310      	orrs	r0, r2
9001e7e8:	4308      	orrs	r0, r1
9001e7ea:	f823 0b02 	strh.w	r0, [r3], #2
9001e7ee:	930e      	str	r3, [sp, #56]	; 0x38
9001e7f0:	9b25      	ldr	r3, [sp, #148]	; 0x94
9001e7f2:	449a      	add	sl, r3
9001e7f4:	9b26      	ldr	r3, [sp, #152]	; 0x98
9001e7f6:	441d      	add	r5, r3
9001e7f8:	e6ed      	b.n	9001e5d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
9001e7fa:	2800      	cmp	r0, #0
9001e7fc:	f43f af7f 	beq.w	9001e6fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
9001e800:	5cd3      	ldrb	r3, [r2, r3]
9001e802:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
9001e806:	9310      	str	r3, [sp, #64]	; 0x40
9001e808:	e779      	b.n	9001e6fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
9001e80a:	b019      	add	sp, #100	; 0x64
9001e80c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001e810 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
9001e810:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001e814:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
9001e818:	f9bd e020 	ldrsh.w	lr, [sp, #32]
9001e81c:	f1b8 0f00 	cmp.w	r8, #0
9001e820:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
9001e824:	fb08 470e 	mla	r7, r8, lr, r4
9001e828:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
9001e82c:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
9001e830:	eb02 0907 	add.w	r9, r2, r7
9001e834:	8808      	ldrh	r0, [r1, #0]
9001e836:	db67      	blt.n	9001e908 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
9001e838:	45c2      	cmp	sl, r8
9001e83a:	dd65      	ble.n	9001e908 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
9001e83c:	2c00      	cmp	r4, #0
9001e83e:	db61      	blt.n	9001e904 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
9001e840:	45a6      	cmp	lr, r4
9001e842:	dd5f      	ble.n	9001e904 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
9001e844:	5dd2      	ldrb	r2, [r2, r7]
9001e846:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
9001e84a:	1c62      	adds	r2, r4, #1
9001e84c:	d45f      	bmi.n	9001e90e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
9001e84e:	4596      	cmp	lr, r2
9001e850:	dd5d      	ble.n	9001e90e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
9001e852:	2d00      	cmp	r5, #0
9001e854:	d05b      	beq.n	9001e90e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
9001e856:	f899 2001 	ldrb.w	r2, [r9, #1]
9001e85a:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
9001e85e:	f118 0801 	adds.w	r8, r8, #1
9001e862:	d458      	bmi.n	9001e916 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
9001e864:	45c2      	cmp	sl, r8
9001e866:	dd56      	ble.n	9001e916 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
9001e868:	2e00      	cmp	r6, #0
9001e86a:	d054      	beq.n	9001e916 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
9001e86c:	2c00      	cmp	r4, #0
9001e86e:	db50      	blt.n	9001e912 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
9001e870:	45a6      	cmp	lr, r4
9001e872:	dd4e      	ble.n	9001e912 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
9001e874:	f819 200e 	ldrb.w	r2, [r9, lr]
9001e878:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
9001e87c:	3401      	adds	r4, #1
9001e87e:	d407      	bmi.n	9001e890 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
9001e880:	45a6      	cmp	lr, r4
9001e882:	dd05      	ble.n	9001e890 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
9001e884:	b125      	cbz	r5, 9001e890 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
9001e886:	44ce      	add	lr, r9
9001e888:	f89e 0001 	ldrb.w	r0, [lr, #1]
9001e88c:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
9001e890:	fb15 f406 	smulbb	r4, r5, r6
9001e894:	ea4f 430c 	mov.w	r3, ip, lsl #16
9001e898:	ea4f 4e07 	mov.w	lr, r7, lsl #16
9001e89c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
9001e8a0:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
9001e8a4:	f3c4 04c7 	ubfx	r4, r4, #3, #8
9001e8a8:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
9001e8ac:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
9001e8b0:	ea43 0c0c 	orr.w	ip, r3, ip
9001e8b4:	f1c6 0310 	rsb	r3, r6, #16
9001e8b8:	ea4e 0707 	orr.w	r7, lr, r7
9001e8bc:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
9001e8c0:	1b5b      	subs	r3, r3, r5
9001e8c2:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
9001e8c6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001e8ca:	437d      	muls	r5, r7
9001e8cc:	fb03 5c0c 	mla	ip, r3, ip, r5
9001e8d0:	0403      	lsls	r3, r0, #16
9001e8d2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
9001e8d6:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
9001e8da:	4318      	orrs	r0, r3
9001e8dc:	0413      	lsls	r3, r2, #16
9001e8de:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
9001e8e2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
9001e8e6:	fb04 c000 	mla	r0, r4, r0, ip
9001e8ea:	4313      	orrs	r3, r2
9001e8ec:	fb06 0003 	mla	r0, r6, r3, r0
9001e8f0:	0d43      	lsrs	r3, r0, #21
9001e8f2:	0940      	lsrs	r0, r0, #5
9001e8f4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9001e8f8:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
9001e8fc:	4318      	orrs	r0, r3
9001e8fe:	8008      	strh	r0, [r1, #0]
9001e900:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001e904:	4684      	mov	ip, r0
9001e906:	e7a0      	b.n	9001e84a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
9001e908:	4607      	mov	r7, r0
9001e90a:	4684      	mov	ip, r0
9001e90c:	e7a7      	b.n	9001e85e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
9001e90e:	4607      	mov	r7, r0
9001e910:	e7a5      	b.n	9001e85e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
9001e912:	4602      	mov	r2, r0
9001e914:	e7b2      	b.n	9001e87c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
9001e916:	4602      	mov	r2, r0
9001e918:	e7ba      	b.n	9001e890 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

9001e91a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001e91a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001e91e:	b093      	sub	sp, #76	; 0x4c
9001e920:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001e924:	920f      	str	r2, [sp, #60]	; 0x3c
9001e926:	9a21      	ldr	r2, [sp, #132]	; 0x84
9001e928:	9010      	str	r0, [sp, #64]	; 0x40
9001e92a:	9108      	str	r1, [sp, #32]
9001e92c:	6850      	ldr	r0, [r2, #4]
9001e92e:	9306      	str	r3, [sp, #24]
9001e930:	6812      	ldr	r2, [r2, #0]
9001e932:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
9001e936:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
9001e93a:	fb00 1303 	mla	r3, r0, r3, r1
9001e93e:	eb02 0943 	add.w	r9, r2, r3, lsl #1
9001e942:	9b24      	ldr	r3, [sp, #144]	; 0x90
9001e944:	681b      	ldr	r3, [r3, #0]
9001e946:	9307      	str	r3, [sp, #28]
9001e948:	9b24      	ldr	r3, [sp, #144]	; 0x90
9001e94a:	685f      	ldr	r7, [r3, #4]
9001e94c:	3704      	adds	r7, #4
9001e94e:	9b08      	ldr	r3, [sp, #32]
9001e950:	2b00      	cmp	r3, #0
9001e952:	dc03      	bgt.n	9001e95c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
9001e954:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
9001e956:	2b00      	cmp	r3, #0
9001e958:	f340 81b2 	ble.w	9001ecc0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
9001e95c:	9b24      	ldr	r3, [sp, #144]	; 0x90
9001e95e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9001e962:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9001e966:	1e48      	subs	r0, r1, #1
9001e968:	f102 3cff 	add.w	ip, r2, #4294967295
9001e96c:	9b06      	ldr	r3, [sp, #24]
9001e96e:	2b00      	cmp	r3, #0
9001e970:	f340 80a9 	ble.w	9001eac6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
9001e974:	ea5f 4e24 	movs.w	lr, r4, asr #16
9001e978:	ea4f 4326 	mov.w	r3, r6, asr #16
9001e97c:	d406      	bmi.n	9001e98c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001e97e:	4586      	cmp	lr, r0
9001e980:	da04      	bge.n	9001e98c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001e982:	2b00      	cmp	r3, #0
9001e984:	db02      	blt.n	9001e98c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001e986:	4563      	cmp	r3, ip
9001e988:	f2c0 809e 	blt.w	9001eac8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
9001e98c:	f11e 0e01 	adds.w	lr, lr, #1
9001e990:	f100 808f 	bmi.w	9001eab2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
9001e994:	4571      	cmp	r1, lr
9001e996:	f2c0 808c 	blt.w	9001eab2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
9001e99a:	3301      	adds	r3, #1
9001e99c:	f100 8089 	bmi.w	9001eab2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
9001e9a0:	429a      	cmp	r2, r3
9001e9a2:	f2c0 8086 	blt.w	9001eab2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
9001e9a6:	f8dd b018 	ldr.w	fp, [sp, #24]
9001e9aa:	46c8      	mov	r8, r9
9001e9ac:	f1bb 0f00 	cmp.w	fp, #0
9001e9b0:	f340 80a6 	ble.w	9001eb00 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
9001e9b4:	9a24      	ldr	r2, [sp, #144]	; 0x90
9001e9b6:	ea4f 4c26 	mov.w	ip, r6, asr #16
9001e9ba:	9b24      	ldr	r3, [sp, #144]	; 0x90
9001e9bc:	f3c4 3003 	ubfx	r0, r4, #12, #4
9001e9c0:	f8d2 e00c 	ldr.w	lr, [r2, #12]
9001e9c4:	1422      	asrs	r2, r4, #16
9001e9c6:	f3c6 3103 	ubfx	r1, r6, #12, #4
9001e9ca:	689b      	ldr	r3, [r3, #8]
9001e9cc:	f100 80e3 	bmi.w	9001eb96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
9001e9d0:	f103 3aff 	add.w	sl, r3, #4294967295
9001e9d4:	4552      	cmp	r2, sl
9001e9d6:	f280 80de 	bge.w	9001eb96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
9001e9da:	f1bc 0f00 	cmp.w	ip, #0
9001e9de:	f2c0 80da 	blt.w	9001eb96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
9001e9e2:	f10e 3aff 	add.w	sl, lr, #4294967295
9001e9e6:	45d4      	cmp	ip, sl
9001e9e8:	f280 80d5 	bge.w	9001eb96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
9001e9ec:	b21b      	sxth	r3, r3
9001e9ee:	9d07      	ldr	r5, [sp, #28]
9001e9f0:	fb0c 2203 	mla	r2, ip, r3, r2
9001e9f4:	eb05 0a02 	add.w	sl, r5, r2
9001e9f8:	5caa      	ldrb	r2, [r5, r2]
9001e9fa:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
9001e9fe:	2800      	cmp	r0, #0
9001ea00:	f000 80c0 	beq.w	9001eb84 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
9001ea04:	f89a 2001 	ldrb.w	r2, [sl, #1]
9001ea08:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
9001ea0c:	920b      	str	r2, [sp, #44]	; 0x2c
9001ea0e:	b151      	cbz	r1, 9001ea26 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
9001ea10:	eb0a 0203 	add.w	r2, sl, r3
9001ea14:	f81a 3003 	ldrb.w	r3, [sl, r3]
9001ea18:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
9001ea1c:	9309      	str	r3, [sp, #36]	; 0x24
9001ea1e:	7853      	ldrb	r3, [r2, #1]
9001ea20:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
9001ea24:	930c      	str	r3, [sp, #48]	; 0x30
9001ea26:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001ea28:	fb10 f201 	smulbb	r2, r0, r1
9001ea2c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
9001ea2e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
9001ea32:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
9001ea36:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
9001ea3a:	10d2      	asrs	r2, r2, #3
9001ea3c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
9001ea40:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
9001ea44:	ea4c 0c03 	orr.w	ip, ip, r3
9001ea48:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9001ea4a:	041b      	lsls	r3, r3, #16
9001ea4c:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
9001ea50:	432b      	orrs	r3, r5
9001ea52:	4353      	muls	r3, r2
9001ea54:	fb0a 330c 	mla	r3, sl, ip, r3
9001ea58:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
9001ea5c:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
9001ea60:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
9001ea64:	ea4c 0e0e 	orr.w	lr, ip, lr
9001ea68:	f1c1 0c10 	rsb	ip, r1, #16
9001ea6c:	ebac 0c00 	sub.w	ip, ip, r0
9001ea70:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
9001ea74:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
9001ea78:	fb0c 3c0e 	mla	ip, ip, lr, r3
9001ea7c:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001ea7e:	0418      	lsls	r0, r3, #16
9001ea80:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
9001ea84:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
9001ea88:	4318      	orrs	r0, r3
9001ea8a:	fb02 c200 	mla	r2, r2, r0, ip
9001ea8e:	0d53      	lsrs	r3, r2, #21
9001ea90:	0952      	lsrs	r2, r2, #5
9001ea92:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9001ea96:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
9001ea9a:	431a      	orrs	r2, r3
9001ea9c:	f8a8 2000 	strh.w	r2, [r8]
9001eaa0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
9001eaa2:	f108 0802 	add.w	r8, r8, #2
9001eaa6:	f10b 3bff 	add.w	fp, fp, #4294967295
9001eaaa:	441c      	add	r4, r3
9001eaac:	9b20      	ldr	r3, [sp, #128]	; 0x80
9001eaae:	441e      	add	r6, r3
9001eab0:	e77c      	b.n	9001e9ac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001eab2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
9001eab4:	f109 0902 	add.w	r9, r9, #2
9001eab8:	441c      	add	r4, r3
9001eaba:	9b20      	ldr	r3, [sp, #128]	; 0x80
9001eabc:	441e      	add	r6, r3
9001eabe:	9b06      	ldr	r3, [sp, #24]
9001eac0:	3b01      	subs	r3, #1
9001eac2:	9306      	str	r3, [sp, #24]
9001eac4:	e752      	b.n	9001e96c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9001eac6:	d020      	beq.n	9001eb0a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001eac8:	9b06      	ldr	r3, [sp, #24]
9001eaca:	981f      	ldr	r0, [sp, #124]	; 0x7c
9001eacc:	3b01      	subs	r3, #1
9001eace:	fb00 4003 	mla	r0, r0, r3, r4
9001ead2:	1400      	asrs	r0, r0, #16
9001ead4:	f53f af67 	bmi.w	9001e9a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
9001ead8:	3901      	subs	r1, #1
9001eada:	4288      	cmp	r0, r1
9001eadc:	f6bf af63 	bge.w	9001e9a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
9001eae0:	9920      	ldr	r1, [sp, #128]	; 0x80
9001eae2:	fb01 6303 	mla	r3, r1, r3, r6
9001eae6:	141b      	asrs	r3, r3, #16
9001eae8:	f53f af5d 	bmi.w	9001e9a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
9001eaec:	3a01      	subs	r2, #1
9001eaee:	4293      	cmp	r3, r2
9001eaf0:	f6bf af59 	bge.w	9001e9a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
9001eaf4:	f8dd 8018 	ldr.w	r8, [sp, #24]
9001eaf8:	46ca      	mov	sl, r9
9001eafa:	f1b8 0f00 	cmp.w	r8, #0
9001eafe:	dc67      	bgt.n	9001ebd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
9001eb00:	9b06      	ldr	r3, [sp, #24]
9001eb02:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
9001eb06:	eb09 0945 	add.w	r9, r9, r5, lsl #1
9001eb0a:	9b08      	ldr	r3, [sp, #32]
9001eb0c:	2b00      	cmp	r3, #0
9001eb0e:	f340 80d7 	ble.w	9001ecc0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
9001eb12:	ee30 0a04 	vadd.f32	s0, s0, s8
9001eb16:	9b1c      	ldr	r3, [sp, #112]	; 0x70
9001eb18:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001eb1c:	eeb0 6a62 	vmov.f32	s12, s5
9001eb20:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001eb24:	ee31 1a05 	vadd.f32	s2, s2, s10
9001eb28:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001eb2c:	ee16 4a10 	vmov	r4, s12
9001eb30:	eeb0 6a43 	vmov.f32	s12, s6
9001eb34:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001eb38:	ee16 6a10 	vmov	r6, s12
9001eb3c:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001eb40:	ee61 7a27 	vmul.f32	s15, s2, s15
9001eb44:	ee77 2a62 	vsub.f32	s5, s14, s5
9001eb48:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001eb4c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001eb50:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001eb54:	ee12 2a90 	vmov	r2, s5
9001eb58:	eef0 2a47 	vmov.f32	s5, s14
9001eb5c:	fb92 f3f3 	sdiv	r3, r2, r3
9001eb60:	ee13 2a10 	vmov	r2, s6
9001eb64:	931f      	str	r3, [sp, #124]	; 0x7c
9001eb66:	9b1c      	ldr	r3, [sp, #112]	; 0x70
9001eb68:	eeb0 3a67 	vmov.f32	s6, s15
9001eb6c:	fb92 f3f3 	sdiv	r3, r2, r3
9001eb70:	9320      	str	r3, [sp, #128]	; 0x80
9001eb72:	9b08      	ldr	r3, [sp, #32]
9001eb74:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001eb76:	3b01      	subs	r3, #1
9001eb78:	9308      	str	r3, [sp, #32]
9001eb7a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
9001eb7c:	bf08      	it	eq
9001eb7e:	4613      	moveq	r3, r2
9001eb80:	9306      	str	r3, [sp, #24]
9001eb82:	e6e4      	b.n	9001e94e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
9001eb84:	2900      	cmp	r1, #0
9001eb86:	f43f af4e 	beq.w	9001ea26 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
9001eb8a:	f81a 3003 	ldrb.w	r3, [sl, r3]
9001eb8e:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
9001eb92:	9309      	str	r3, [sp, #36]	; 0x24
9001eb94:	e747      	b.n	9001ea26 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
9001eb96:	f112 0a01 	adds.w	sl, r2, #1
9001eb9a:	d481      	bmi.n	9001eaa0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001eb9c:	4553      	cmp	r3, sl
9001eb9e:	f6ff af7f 	blt.w	9001eaa0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001eba2:	f11c 0a01 	adds.w	sl, ip, #1
9001eba6:	f53f af7b 	bmi.w	9001eaa0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001ebaa:	45d6      	cmp	lr, sl
9001ebac:	f6ff af78 	blt.w	9001eaa0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001ebb0:	b21b      	sxth	r3, r3
9001ebb2:	e9cd 2c02 	strd	r2, ip, [sp, #8]
9001ebb6:	fa0f f28e 	sxth.w	r2, lr
9001ebba:	9300      	str	r3, [sp, #0]
9001ebbc:	463b      	mov	r3, r7
9001ebbe:	9201      	str	r2, [sp, #4]
9001ebc0:	9a07      	ldr	r2, [sp, #28]
9001ebc2:	e9cd 0104 	strd	r0, r1, [sp, #16]
9001ebc6:	4641      	mov	r1, r8
9001ebc8:	9810      	ldr	r0, [sp, #64]	; 0x40
9001ebca:	f7ff fe21 	bl	9001e810 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
9001ebce:	e767      	b.n	9001eaa0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001ebd0:	9b24      	ldr	r3, [sp, #144]	; 0x90
9001ebd2:	1422      	asrs	r2, r4, #16
9001ebd4:	1431      	asrs	r1, r6, #16
9001ebd6:	9d07      	ldr	r5, [sp, #28]
9001ebd8:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
9001ebdc:	f3c4 3e03 	ubfx	lr, r4, #12, #4
9001ebe0:	f3c6 3003 	ubfx	r0, r6, #12, #4
9001ebe4:	fb03 2101 	mla	r1, r3, r1, r2
9001ebe8:	9a07      	ldr	r2, [sp, #28]
9001ebea:	440a      	add	r2, r1
9001ebec:	5c69      	ldrb	r1, [r5, r1]
9001ebee:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
9001ebf2:	f1be 0f00 	cmp.w	lr, #0
9001ebf6:	d05c      	beq.n	9001ecb2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
9001ebf8:	f892 c001 	ldrb.w	ip, [r2, #1]
9001ebfc:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
9001ec00:	950d      	str	r5, [sp, #52]	; 0x34
9001ec02:	b150      	cbz	r0, 9001ec1a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
9001ec04:	eb02 0c03 	add.w	ip, r2, r3
9001ec08:	5cd3      	ldrb	r3, [r2, r3]
9001ec0a:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
9001ec0e:	930a      	str	r3, [sp, #40]	; 0x28
9001ec10:	f89c 3001 	ldrb.w	r3, [ip, #1]
9001ec14:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
9001ec18:	930e      	str	r3, [sp, #56]	; 0x38
9001ec1a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001ec1c:	fb1e f200 	smulbb	r2, lr, r0
9001ec20:	9d0e      	ldr	r5, [sp, #56]	; 0x38
9001ec22:	f108 38ff 	add.w	r8, r8, #4294967295
9001ec26:	ea4f 4c03 	mov.w	ip, r3, lsl #16
9001ec2a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
9001ec2e:	10d2      	asrs	r2, r2, #3
9001ec30:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
9001ec34:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
9001ec38:	ea4c 0c03 	orr.w	ip, ip, r3
9001ec3c:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
9001ec40:	9311      	str	r3, [sp, #68]	; 0x44
9001ec42:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001ec44:	9d11      	ldr	r5, [sp, #68]	; 0x44
9001ec46:	041b      	lsls	r3, r3, #16
9001ec48:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
9001ec4c:	ea43 030b 	orr.w	r3, r3, fp
9001ec50:	ea4f 4b01 	mov.w	fp, r1, lsl #16
9001ec54:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
9001ec58:	4353      	muls	r3, r2
9001ec5a:	fb05 3c0c 	mla	ip, r5, ip, r3
9001ec5e:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
9001ec62:	ea43 0b01 	orr.w	fp, r3, r1
9001ec66:	f1c0 0110 	rsb	r1, r0, #16
9001ec6a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001ec6c:	eba1 0e0e 	sub.w	lr, r1, lr
9001ec70:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
9001ec74:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
9001ec78:	fb0e cc0b 	mla	ip, lr, fp, ip
9001ec7c:	ea4f 4b03 	mov.w	fp, r3, lsl #16
9001ec80:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
9001ec84:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
9001ec88:	ea4b 0e0e 	orr.w	lr, fp, lr
9001ec8c:	fb02 cc0e 	mla	ip, r2, lr, ip
9001ec90:	ea4f 535c 	mov.w	r3, ip, lsr #21
9001ec94:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
9001ec98:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9001ec9c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
9001eca0:	ea43 0c0c 	orr.w	ip, r3, ip
9001eca4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
9001eca6:	441c      	add	r4, r3
9001eca8:	9b20      	ldr	r3, [sp, #128]	; 0x80
9001ecaa:	f82a cb02 	strh.w	ip, [sl], #2
9001ecae:	441e      	add	r6, r3
9001ecb0:	e723      	b.n	9001eafa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
9001ecb2:	2800      	cmp	r0, #0
9001ecb4:	d0b1      	beq.n	9001ec1a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
9001ecb6:	5cd3      	ldrb	r3, [r2, r3]
9001ecb8:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
9001ecbc:	930a      	str	r3, [sp, #40]	; 0x28
9001ecbe:	e7ac      	b.n	9001ec1a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
9001ecc0:	b013      	add	sp, #76	; 0x4c
9001ecc2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001ecc6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
9001ecc6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001ecca:	880d      	ldrh	r5, [r1, #0]
9001eccc:	b087      	sub	sp, #28
9001ecce:	10ef      	asrs	r7, r5, #3
9001ecd0:	9103      	str	r1, [sp, #12]
9001ecd2:	ea4f 2a25 	mov.w	sl, r5, asr #8
9001ecd6:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
9001ecda:	00ed      	lsls	r5, r5, #3
9001ecdc:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001ece0:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
9001ece4:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
9001ece8:	b2ed      	uxtb	r5, r5
9001ecea:	9701      	str	r7, [sp, #4]
9001ecec:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
9001ecf0:	9502      	str	r5, [sp, #8]
9001ecf2:	9d01      	ldr	r5, [sp, #4]
9001ecf4:	9902      	ldr	r1, [sp, #8]
9001ecf6:	022d      	lsls	r5, r5, #8
9001ecf8:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
9001ecfc:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
9001ed00:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
9001ed04:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
9001ed08:	430d      	orrs	r5, r1
9001ed0a:	fb06 0709 	mla	r7, r6, r9, r0
9001ed0e:	2e00      	cmp	r6, #0
9001ed10:	9505      	str	r5, [sp, #20]
9001ed12:	eb02 0c07 	add.w	ip, r2, r7
9001ed16:	f2c0 80b6 	blt.w	9001ee86 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
9001ed1a:	45b3      	cmp	fp, r6
9001ed1c:	f340 80b3 	ble.w	9001ee86 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
9001ed20:	2800      	cmp	r0, #0
9001ed22:	f2c0 80ae 	blt.w	9001ee82 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
9001ed26:	4581      	cmp	r9, r0
9001ed28:	f340 80ab 	ble.w	9001ee82 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
9001ed2c:	5dd7      	ldrb	r7, [r2, r7]
9001ed2e:	eb07 0747 	add.w	r7, r7, r7, lsl #1
9001ed32:	441f      	add	r7, r3
9001ed34:	1c42      	adds	r2, r0, #1
9001ed36:	f100 80a9 	bmi.w	9001ee8c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
9001ed3a:	4591      	cmp	r9, r2
9001ed3c:	f340 80a6 	ble.w	9001ee8c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
9001ed40:	2c00      	cmp	r4, #0
9001ed42:	f000 80a3 	beq.w	9001ee8c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
9001ed46:	f89c 5001 	ldrb.w	r5, [ip, #1]
9001ed4a:	eb05 0545 	add.w	r5, r5, r5, lsl #1
9001ed4e:	441d      	add	r5, r3
9001ed50:	3601      	adds	r6, #1
9001ed52:	f100 809f 	bmi.w	9001ee94 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
9001ed56:	45b3      	cmp	fp, r6
9001ed58:	f340 809c 	ble.w	9001ee94 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
9001ed5c:	f1be 0f00 	cmp.w	lr, #0
9001ed60:	f000 8098 	beq.w	9001ee94 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
9001ed64:	2800      	cmp	r0, #0
9001ed66:	f2c0 8093 	blt.w	9001ee90 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
9001ed6a:	4581      	cmp	r9, r0
9001ed6c:	f340 8090 	ble.w	9001ee90 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
9001ed70:	f81c 6009 	ldrb.w	r6, [ip, r9]
9001ed74:	eb06 0646 	add.w	r6, r6, r6, lsl #1
9001ed78:	441e      	add	r6, r3
9001ed7a:	3001      	adds	r0, #1
9001ed7c:	f100 808d 	bmi.w	9001ee9a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
9001ed80:	4581      	cmp	r9, r0
9001ed82:	f340 808a 	ble.w	9001ee9a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
9001ed86:	2c00      	cmp	r4, #0
9001ed88:	f000 8087 	beq.w	9001ee9a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
9001ed8c:	44e1      	add	r9, ip
9001ed8e:	f899 2001 	ldrb.w	r2, [r9, #1]
9001ed92:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9001ed96:	4413      	add	r3, r2
9001ed98:	b2a4      	uxth	r4, r4
9001ed9a:	f897 c002 	ldrb.w	ip, [r7, #2]
9001ed9e:	fa1f fe8e 	uxth.w	lr, lr
9001eda2:	9901      	ldr	r1, [sp, #4]
9001eda4:	fb04 fb0e 	mul.w	fp, r4, lr
9001eda8:	0124      	lsls	r4, r4, #4
9001edaa:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
9001edae:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
9001edb2:	eba4 040b 	sub.w	r4, r4, fp
9001edb6:	fa1f f08e 	uxth.w	r0, lr
9001edba:	b2a2      	uxth	r2, r4
9001edbc:	78ac      	ldrb	r4, [r5, #2]
9001edbe:	eba9 0900 	sub.w	r9, r9, r0
9001edc2:	fa1f fe88 	uxth.w	lr, r8
9001edc6:	4354      	muls	r4, r2
9001edc8:	ea6f 0808 	mvn.w	r8, r8
9001edcc:	fa1f f989 	uxth.w	r9, r9
9001edd0:	fa5f f888 	uxtb.w	r8, r8
9001edd4:	fb09 440c 	mla	r4, r9, ip, r4
9001edd8:	f896 c002 	ldrb.w	ip, [r6, #2]
9001eddc:	fb1a fa08 	smulbb	sl, sl, r8
9001ede0:	fb00 440c 	mla	r4, r0, ip, r4
9001ede4:	f893 c002 	ldrb.w	ip, [r3, #2]
9001ede8:	fb0b 4c0c 	mla	ip, fp, ip, r4
9001edec:	787c      	ldrb	r4, [r7, #1]
9001edee:	783f      	ldrb	r7, [r7, #0]
9001edf0:	f3cc 2c07 	ubfx	ip, ip, #8, #8
9001edf4:	fb0c ac0e 	mla	ip, ip, lr, sl
9001edf8:	f895 a001 	ldrb.w	sl, [r5, #1]
9001edfc:	782d      	ldrb	r5, [r5, #0]
9001edfe:	fb02 fa0a 	mul.w	sl, r2, sl
9001ee02:	fa1f fc8c 	uxth.w	ip, ip
9001ee06:	436a      	muls	r2, r5
9001ee08:	7835      	ldrb	r5, [r6, #0]
9001ee0a:	fb09 aa04 	mla	sl, r9, r4, sl
9001ee0e:	7874      	ldrb	r4, [r6, #1]
9001ee10:	fb09 2207 	mla	r2, r9, r7, r2
9001ee14:	fb00 aa04 	mla	sl, r0, r4, sl
9001ee18:	785c      	ldrb	r4, [r3, #1]
9001ee1a:	fb00 2005 	mla	r0, r0, r5, r2
9001ee1e:	781b      	ldrb	r3, [r3, #0]
9001ee20:	fb0b a404 	mla	r4, fp, r4, sl
9001ee24:	fb11 fa08 	smulbb	sl, r1, r8
9001ee28:	fb0b 0b03 	mla	fp, fp, r3, r0
9001ee2c:	9b02      	ldr	r3, [sp, #8]
9001ee2e:	f3c4 2407 	ubfx	r4, r4, #8, #8
9001ee32:	fb13 f808 	smulbb	r8, r3, r8
9001ee36:	f3cb 2b07 	ubfx	fp, fp, #8, #8
9001ee3a:	fb04 a40e 	mla	r4, r4, lr, sl
9001ee3e:	f10c 0301 	add.w	r3, ip, #1
9001ee42:	fb0b 8e0e 	mla	lr, fp, lr, r8
9001ee46:	b2a4      	uxth	r4, r4
9001ee48:	fa1f fe8e 	uxth.w	lr, lr
9001ee4c:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
9001ee50:	f104 0a01 	add.w	sl, r4, #1
9001ee54:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
9001ee58:	f10e 0c01 	add.w	ip, lr, #1
9001ee5c:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
9001ee60:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
9001ee64:	0964      	lsrs	r4, r4, #5
9001ee66:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9001ee6a:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
9001ee6e:	ea4c 0c03 	orr.w	ip, ip, r3
9001ee72:	9b03      	ldr	r3, [sp, #12]
9001ee74:	ea4c 0c04 	orr.w	ip, ip, r4
9001ee78:	f8a3 c000 	strh.w	ip, [r3]
9001ee7c:	b007      	add	sp, #28
9001ee7e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001ee82:	af05      	add	r7, sp, #20
9001ee84:	e756      	b.n	9001ed34 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
9001ee86:	ad05      	add	r5, sp, #20
9001ee88:	462f      	mov	r7, r5
9001ee8a:	e761      	b.n	9001ed50 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
9001ee8c:	ad05      	add	r5, sp, #20
9001ee8e:	e75f      	b.n	9001ed50 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
9001ee90:	ae05      	add	r6, sp, #20
9001ee92:	e772      	b.n	9001ed7a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
9001ee94:	ab05      	add	r3, sp, #20
9001ee96:	461e      	mov	r6, r3
9001ee98:	e77e      	b.n	9001ed98 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
9001ee9a:	ab05      	add	r3, sp, #20
9001ee9c:	e77c      	b.n	9001ed98 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

9001ee9e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001ee9e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001eea2:	b095      	sub	sp, #84	; 0x54
9001eea4:	9212      	str	r2, [sp, #72]	; 0x48
9001eea6:	9309      	str	r3, [sp, #36]	; 0x24
9001eea8:	9a23      	ldr	r2, [sp, #140]	; 0x8c
9001eeaa:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
9001eeae:	9013      	str	r0, [sp, #76]	; 0x4c
9001eeb0:	930f      	str	r3, [sp, #60]	; 0x3c
9001eeb2:	6850      	ldr	r0, [r2, #4]
9001eeb4:	910e      	str	r1, [sp, #56]	; 0x38
9001eeb6:	6812      	ldr	r2, [r2, #0]
9001eeb8:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
9001eebc:	fb00 1303 	mla	r3, r0, r3, r1
9001eec0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9001eec4:	930a      	str	r3, [sp, #40]	; 0x28
9001eec6:	9b26      	ldr	r3, [sp, #152]	; 0x98
9001eec8:	681b      	ldr	r3, [r3, #0]
9001eeca:	930d      	str	r3, [sp, #52]	; 0x34
9001eecc:	9b26      	ldr	r3, [sp, #152]	; 0x98
9001eece:	685c      	ldr	r4, [r3, #4]
9001eed0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
9001eed2:	3404      	adds	r4, #4
9001eed4:	43db      	mvns	r3, r3
9001eed6:	b2db      	uxtb	r3, r3
9001eed8:	930b      	str	r3, [sp, #44]	; 0x2c
9001eeda:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001eedc:	2b00      	cmp	r3, #0
9001eede:	dc03      	bgt.n	9001eee8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
9001eee0:	9b12      	ldr	r3, [sp, #72]	; 0x48
9001eee2:	2b00      	cmp	r3, #0
9001eee4:	f340 8255 	ble.w	9001f392 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
9001eee8:	9b26      	ldr	r3, [sp, #152]	; 0x98
9001eeea:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9001eeee:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9001eef2:	1e48      	subs	r0, r1, #1
9001eef4:	1e55      	subs	r5, r2, #1
9001eef6:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001eef8:	2b00      	cmp	r3, #0
9001eefa:	f340 80f9 	ble.w	9001f0f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
9001eefe:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
9001ef00:	9b20      	ldr	r3, [sp, #128]	; 0x80
9001ef02:	1436      	asrs	r6, r6, #16
9001ef04:	ea4f 4323 	mov.w	r3, r3, asr #16
9001ef08:	d406      	bmi.n	9001ef18 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
9001ef0a:	4286      	cmp	r6, r0
9001ef0c:	da04      	bge.n	9001ef18 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
9001ef0e:	2b00      	cmp	r3, #0
9001ef10:	db02      	blt.n	9001ef18 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
9001ef12:	42ab      	cmp	r3, r5
9001ef14:	f2c0 80ed 	blt.w	9001f0f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
9001ef18:	3601      	adds	r6, #1
9001ef1a:	f100 80da 	bmi.w	9001f0d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
9001ef1e:	42b1      	cmp	r1, r6
9001ef20:	f2c0 80d7 	blt.w	9001f0d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
9001ef24:	3301      	adds	r3, #1
9001ef26:	f100 80d4 	bmi.w	9001f0d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
9001ef2a:	429a      	cmp	r2, r3
9001ef2c:	f2c0 80d1 	blt.w	9001f0d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
9001ef30:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001ef32:	9311      	str	r3, [sp, #68]	; 0x44
9001ef34:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001ef36:	930c      	str	r3, [sp, #48]	; 0x30
9001ef38:	9b11      	ldr	r3, [sp, #68]	; 0x44
9001ef3a:	2b00      	cmp	r3, #0
9001ef3c:	f340 80fa 	ble.w	9001f134 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
9001ef40:	9826      	ldr	r0, [sp, #152]	; 0x98
9001ef42:	9b20      	ldr	r3, [sp, #128]	; 0x80
9001ef44:	9a20      	ldr	r2, [sp, #128]	; 0x80
9001ef46:	68c6      	ldr	r6, [r0, #12]
9001ef48:	141d      	asrs	r5, r3, #16
9001ef4a:	981f      	ldr	r0, [sp, #124]	; 0x7c
9001ef4c:	f3c2 3103 	ubfx	r1, r2, #12, #4
9001ef50:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
9001ef52:	9a26      	ldr	r2, [sp, #152]	; 0x98
9001ef54:	1400      	asrs	r0, r0, #16
9001ef56:	f3c3 3303 	ubfx	r3, r3, #12, #4
9001ef5a:	6892      	ldr	r2, [r2, #8]
9001ef5c:	f100 813e 	bmi.w	9001f1dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
9001ef60:	1e57      	subs	r7, r2, #1
9001ef62:	42b8      	cmp	r0, r7
9001ef64:	f280 813a 	bge.w	9001f1dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
9001ef68:	2d00      	cmp	r5, #0
9001ef6a:	f2c0 8137 	blt.w	9001f1dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
9001ef6e:	1e77      	subs	r7, r6, #1
9001ef70:	42bd      	cmp	r5, r7
9001ef72:	f280 8133 	bge.w	9001f1dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
9001ef76:	b212      	sxth	r2, r2
9001ef78:	fb05 0002 	mla	r0, r5, r2, r0
9001ef7c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
9001ef7e:	f815 a000 	ldrb.w	sl, [r5, r0]
9001ef82:	182e      	adds	r6, r5, r0
9001ef84:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
9001ef88:	eb04 050a 	add.w	r5, r4, sl
9001ef8c:	2b00      	cmp	r3, #0
9001ef8e:	f000 8117 	beq.w	9001f1c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
9001ef92:	f896 c001 	ldrb.w	ip, [r6, #1]
9001ef96:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
9001ef9a:	44a4      	add	ip, r4
9001ef9c:	2900      	cmp	r1, #0
9001ef9e:	f000 8117 	beq.w	9001f1d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
9001efa2:	18b0      	adds	r0, r6, r2
9001efa4:	5cb2      	ldrb	r2, [r6, r2]
9001efa6:	7840      	ldrb	r0, [r0, #1]
9001efa8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9001efac:	eb00 0040 	add.w	r0, r0, r0, lsl #1
9001efb0:	4422      	add	r2, r4
9001efb2:	4420      	add	r0, r4
9001efb4:	b29b      	uxth	r3, r3
9001efb6:	f89c 7002 	ldrb.w	r7, [ip, #2]
9001efba:	b289      	uxth	r1, r1
9001efbc:	f895 b002 	ldrb.w	fp, [r5, #2]
9001efc0:	9e0c      	ldr	r6, [sp, #48]	; 0x30
9001efc2:	fb03 f901 	mul.w	r9, r3, r1
9001efc6:	011b      	lsls	r3, r3, #4
9001efc8:	f8b6 e000 	ldrh.w	lr, [r6]
9001efcc:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
9001efd0:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
9001efd4:	eba3 0309 	sub.w	r3, r3, r9
9001efd8:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
9001efdc:	b289      	uxth	r1, r1
9001efde:	f814 a00a 	ldrb.w	sl, [r4, sl]
9001efe2:	b29b      	uxth	r3, r3
9001efe4:	eba8 0801 	sub.w	r8, r8, r1
9001efe8:	435f      	muls	r7, r3
9001efea:	fa1f f888 	uxth.w	r8, r8
9001efee:	9310      	str	r3, [sp, #64]	; 0x40
9001eff0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001eff2:	fb08 770b 	mla	r7, r8, fp, r7
9001eff6:	f892 b002 	ldrb.w	fp, [r2, #2]
9001effa:	fb01 770b 	mla	r7, r1, fp, r7
9001effe:	f890 b002 	ldrb.w	fp, [r0, #2]
9001f002:	fb09 770b 	mla	r7, r9, fp, r7
9001f006:	ea4f 2b2e 	mov.w	fp, lr, asr #8
9001f00a:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
9001f00e:	f3c7 2707 	ubfx	r7, r7, #8, #8
9001f012:	fb1b fb03 	smulbb	fp, fp, r3
9001f016:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001f018:	fb07 b706 	mla	r7, r7, r6, fp
9001f01c:	f895 b001 	ldrb.w	fp, [r5, #1]
9001f020:	f89c 5001 	ldrb.w	r5, [ip, #1]
9001f024:	f89c c000 	ldrb.w	ip, [ip]
9001f028:	b2bf      	uxth	r7, r7
9001f02a:	435d      	muls	r5, r3
9001f02c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001f02e:	fb08 550b 	mla	r5, r8, fp, r5
9001f032:	f892 b001 	ldrb.w	fp, [r2, #1]
9001f036:	fb01 550b 	mla	r5, r1, fp, r5
9001f03a:	f890 b001 	ldrb.w	fp, [r0, #1]
9001f03e:	fb09 550b 	mla	r5, r9, fp, r5
9001f042:	ea4f 0bee 	mov.w	fp, lr, asr #3
9001f046:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001f04a:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
9001f04e:	f3c5 2507 	ubfx	r5, r5, #8, #8
9001f052:	fa5f fe8e 	uxtb.w	lr, lr
9001f056:	fb1b fb03 	smulbb	fp, fp, r3
9001f05a:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001f05c:	fb03 f30c 	mul.w	r3, r3, ip
9001f060:	f892 c000 	ldrb.w	ip, [r2]
9001f064:	fb05 b506 	mla	r5, r5, r6, fp
9001f068:	fb08 330a 	mla	r3, r8, sl, r3
9001f06c:	b2ad      	uxth	r5, r5
9001f06e:	fb01 330c 	mla	r3, r1, ip, r3
9001f072:	f890 c000 	ldrb.w	ip, [r0]
9001f076:	f105 0b01 	add.w	fp, r5, #1
9001f07a:	fb09 3c0c 	mla	ip, r9, ip, r3
9001f07e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001f080:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
9001f084:	fb1e fe03 	smulbb	lr, lr, r3
9001f088:	f3cc 2c07 	ubfx	ip, ip, #8, #8
9001f08c:	1c7b      	adds	r3, r7, #1
9001f08e:	096d      	lsrs	r5, r5, #5
9001f090:	fb0c e606 	mla	r6, ip, r6, lr
9001f094:	eb03 2717 	add.w	r7, r3, r7, lsr #8
9001f098:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001f09c:	b2b6      	uxth	r6, r6
9001f09e:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
9001f0a2:	1c77      	adds	r7, r6, #1
9001f0a4:	eb07 2716 	add.w	r7, r7, r6, lsr #8
9001f0a8:	f3c7 27c4 	ubfx	r7, r7, #11, #5
9001f0ac:	431f      	orrs	r7, r3
9001f0ae:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9001f0b0:	433d      	orrs	r5, r7
9001f0b2:	801d      	strh	r5, [r3, #0]
9001f0b4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9001f0b6:	9a21      	ldr	r2, [sp, #132]	; 0x84
9001f0b8:	3302      	adds	r3, #2
9001f0ba:	930c      	str	r3, [sp, #48]	; 0x30
9001f0bc:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
9001f0be:	4413      	add	r3, r2
9001f0c0:	9a22      	ldr	r2, [sp, #136]	; 0x88
9001f0c2:	931f      	str	r3, [sp, #124]	; 0x7c
9001f0c4:	9b20      	ldr	r3, [sp, #128]	; 0x80
9001f0c6:	4413      	add	r3, r2
9001f0c8:	9320      	str	r3, [sp, #128]	; 0x80
9001f0ca:	9b11      	ldr	r3, [sp, #68]	; 0x44
9001f0cc:	3b01      	subs	r3, #1
9001f0ce:	9311      	str	r3, [sp, #68]	; 0x44
9001f0d0:	e732      	b.n	9001ef38 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
9001f0d2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
9001f0d4:	9e21      	ldr	r6, [sp, #132]	; 0x84
9001f0d6:	4433      	add	r3, r6
9001f0d8:	9e22      	ldr	r6, [sp, #136]	; 0x88
9001f0da:	931f      	str	r3, [sp, #124]	; 0x7c
9001f0dc:	9b20      	ldr	r3, [sp, #128]	; 0x80
9001f0de:	4433      	add	r3, r6
9001f0e0:	9320      	str	r3, [sp, #128]	; 0x80
9001f0e2:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001f0e4:	3b01      	subs	r3, #1
9001f0e6:	9309      	str	r3, [sp, #36]	; 0x24
9001f0e8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001f0ea:	3302      	adds	r3, #2
9001f0ec:	930a      	str	r3, [sp, #40]	; 0x28
9001f0ee:	e702      	b.n	9001eef6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
9001f0f0:	d027      	beq.n	9001f142 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
9001f0f2:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001f0f4:	9821      	ldr	r0, [sp, #132]	; 0x84
9001f0f6:	3b01      	subs	r3, #1
9001f0f8:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
9001f0fa:	fb00 5003 	mla	r0, r0, r3, r5
9001f0fe:	1400      	asrs	r0, r0, #16
9001f100:	f53f af16 	bmi.w	9001ef30 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001f104:	3901      	subs	r1, #1
9001f106:	4288      	cmp	r0, r1
9001f108:	f6bf af12 	bge.w	9001ef30 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001f10c:	9922      	ldr	r1, [sp, #136]	; 0x88
9001f10e:	9820      	ldr	r0, [sp, #128]	; 0x80
9001f110:	fb01 0303 	mla	r3, r1, r3, r0
9001f114:	141b      	asrs	r3, r3, #16
9001f116:	f53f af0b 	bmi.w	9001ef30 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001f11a:	3a01      	subs	r2, #1
9001f11c:	4293      	cmp	r3, r2
9001f11e:	f6bf af07 	bge.w	9001ef30 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001f122:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001f124:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
9001f128:	9311      	str	r3, [sp, #68]	; 0x44
9001f12a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001f12c:	930c      	str	r3, [sp, #48]	; 0x30
9001f12e:	9b11      	ldr	r3, [sp, #68]	; 0x44
9001f130:	2b00      	cmp	r3, #0
9001f132:	dc70      	bgt.n	9001f216 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
9001f134:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001f136:	9a0a      	ldr	r2, [sp, #40]	; 0x28
9001f138:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001f13c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9001f140:	930a      	str	r3, [sp, #40]	; 0x28
9001f142:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001f144:	2b00      	cmp	r3, #0
9001f146:	f340 8124 	ble.w	9001f392 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
9001f14a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
9001f14e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
9001f150:	ee30 0a04 	vadd.f32	s0, s0, s8
9001f154:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001f158:	eef0 6a62 	vmov.f32	s13, s5
9001f15c:	eec7 7a00 	vdiv.f32	s15, s14, s0
9001f160:	ee31 1a05 	vadd.f32	s2, s2, s10
9001f164:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001f168:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
9001f16c:	eef0 6a43 	vmov.f32	s13, s6
9001f170:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001f174:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
9001f178:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001f17c:	ee61 7a27 	vmul.f32	s15, s2, s15
9001f180:	ee77 2a62 	vsub.f32	s5, s14, s5
9001f184:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001f188:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001f18c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001f190:	ee12 2a90 	vmov	r2, s5
9001f194:	eef0 2a47 	vmov.f32	s5, s14
9001f198:	fb92 f3f3 	sdiv	r3, r2, r3
9001f19c:	ee13 2a10 	vmov	r2, s6
9001f1a0:	9321      	str	r3, [sp, #132]	; 0x84
9001f1a2:	9b1e      	ldr	r3, [sp, #120]	; 0x78
9001f1a4:	eeb0 3a67 	vmov.f32	s6, s15
9001f1a8:	fb92 f3f3 	sdiv	r3, r2, r3
9001f1ac:	9322      	str	r3, [sp, #136]	; 0x88
9001f1ae:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001f1b0:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001f1b2:	3b01      	subs	r3, #1
9001f1b4:	930e      	str	r3, [sp, #56]	; 0x38
9001f1b6:	9b1e      	ldr	r3, [sp, #120]	; 0x78
9001f1b8:	bf08      	it	eq
9001f1ba:	4613      	moveq	r3, r2
9001f1bc:	9309      	str	r3, [sp, #36]	; 0x24
9001f1be:	e68c      	b.n	9001eeda <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9001f1c0:	b149      	cbz	r1, 9001f1d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
9001f1c2:	5cb2      	ldrb	r2, [r6, r2]
9001f1c4:	4628      	mov	r0, r5
9001f1c6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9001f1ca:	4422      	add	r2, r4
9001f1cc:	46ac      	mov	ip, r5
9001f1ce:	e6f1      	b.n	9001efb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
9001f1d0:	4628      	mov	r0, r5
9001f1d2:	462a      	mov	r2, r5
9001f1d4:	e6ee      	b.n	9001efb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
9001f1d6:	4628      	mov	r0, r5
9001f1d8:	462a      	mov	r2, r5
9001f1da:	e7f7      	b.n	9001f1cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
9001f1dc:	1c47      	adds	r7, r0, #1
9001f1de:	f53f af69 	bmi.w	9001f0b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
9001f1e2:	42ba      	cmp	r2, r7
9001f1e4:	f6ff af66 	blt.w	9001f0b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
9001f1e8:	1c6f      	adds	r7, r5, #1
9001f1ea:	f53f af63 	bmi.w	9001f0b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
9001f1ee:	42be      	cmp	r6, r7
9001f1f0:	f6ff af60 	blt.w	9001f0b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
9001f1f4:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
9001f1f6:	b236      	sxth	r6, r6
9001f1f8:	b212      	sxth	r2, r2
9001f1fa:	9002      	str	r0, [sp, #8]
9001f1fc:	9601      	str	r6, [sp, #4]
9001f1fe:	9200      	str	r2, [sp, #0]
9001f200:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001f202:	e9cd 1705 	strd	r1, r7, [sp, #20]
9001f206:	e9cd 5303 	strd	r5, r3, [sp, #12]
9001f20a:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
9001f20e:	4623      	mov	r3, r4
9001f210:	f7ff fd59 	bl	9001ecc6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
9001f214:	e74e      	b.n	9001f0b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
9001f216:	9a20      	ldr	r2, [sp, #128]	; 0x80
9001f218:	9820      	ldr	r0, [sp, #128]	; 0x80
9001f21a:	f3c2 3103 	ubfx	r1, r2, #12, #4
9001f21e:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
9001f220:	9a26      	ldr	r2, [sp, #152]	; 0x98
9001f222:	1400      	asrs	r0, r0, #16
9001f224:	142d      	asrs	r5, r5, #16
9001f226:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
9001f228:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
9001f22c:	f3c3 3303 	ubfx	r3, r3, #12, #4
9001f230:	fb02 5000 	mla	r0, r2, r0, r5
9001f234:	9d0d      	ldr	r5, [sp, #52]	; 0x34
9001f236:	f815 9000 	ldrb.w	r9, [r5, r0]
9001f23a:	182e      	adds	r6, r5, r0
9001f23c:	eb09 0949 	add.w	r9, r9, r9, lsl #1
9001f240:	eb04 0509 	add.w	r5, r4, r9
9001f244:	2b00      	cmp	r3, #0
9001f246:	f000 8096 	beq.w	9001f376 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
9001f24a:	7877      	ldrb	r7, [r6, #1]
9001f24c:	eb07 0747 	add.w	r7, r7, r7, lsl #1
9001f250:	4427      	add	r7, r4
9001f252:	2900      	cmp	r1, #0
9001f254:	f000 8097 	beq.w	9001f386 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
9001f258:	18b0      	adds	r0, r6, r2
9001f25a:	5cb2      	ldrb	r2, [r6, r2]
9001f25c:	7840      	ldrb	r0, [r0, #1]
9001f25e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9001f262:	eb00 0040 	add.w	r0, r0, r0, lsl #1
9001f266:	4422      	add	r2, r4
9001f268:	4420      	add	r0, r4
9001f26a:	b29b      	uxth	r3, r3
9001f26c:	9e0c      	ldr	r6, [sp, #48]	; 0x30
9001f26e:	b289      	uxth	r1, r1
9001f270:	f895 b002 	ldrb.w	fp, [r5, #2]
9001f274:	f8b6 c000 	ldrh.w	ip, [r6]
9001f278:	fb03 f801 	mul.w	r8, r3, r1
9001f27c:	011b      	lsls	r3, r3, #4
9001f27e:	78be      	ldrb	r6, [r7, #2]
9001f280:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
9001f284:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
9001f288:	eba3 0308 	sub.w	r3, r3, r8
9001f28c:	f814 9009 	ldrb.w	r9, [r4, r9]
9001f290:	b289      	uxth	r1, r1
9001f292:	b29b      	uxth	r3, r3
9001f294:	ebae 0e01 	sub.w	lr, lr, r1
9001f298:	435e      	muls	r6, r3
9001f29a:	fa1f fe8e 	uxth.w	lr, lr
9001f29e:	9310      	str	r3, [sp, #64]	; 0x40
9001f2a0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001f2a2:	fb0e 660b 	mla	r6, lr, fp, r6
9001f2a6:	f892 b002 	ldrb.w	fp, [r2, #2]
9001f2aa:	fb01 660b 	mla	r6, r1, fp, r6
9001f2ae:	f890 b002 	ldrb.w	fp, [r0, #2]
9001f2b2:	fb08 660b 	mla	r6, r8, fp, r6
9001f2b6:	ea4f 2b2c 	mov.w	fp, ip, asr #8
9001f2ba:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
9001f2be:	f3c6 2607 	ubfx	r6, r6, #8, #8
9001f2c2:	fb1b fb03 	smulbb	fp, fp, r3
9001f2c6:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001f2c8:	fb06 b60a 	mla	r6, r6, sl, fp
9001f2cc:	f895 b001 	ldrb.w	fp, [r5, #1]
9001f2d0:	787d      	ldrb	r5, [r7, #1]
9001f2d2:	783f      	ldrb	r7, [r7, #0]
9001f2d4:	b2b6      	uxth	r6, r6
9001f2d6:	435d      	muls	r5, r3
9001f2d8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001f2da:	fb0e 550b 	mla	r5, lr, fp, r5
9001f2de:	f892 b001 	ldrb.w	fp, [r2, #1]
9001f2e2:	fb01 550b 	mla	r5, r1, fp, r5
9001f2e6:	f890 b001 	ldrb.w	fp, [r0, #1]
9001f2ea:	fb08 550b 	mla	r5, r8, fp, r5
9001f2ee:	ea4f 0bec 	mov.w	fp, ip, asr #3
9001f2f2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001f2f6:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
9001f2fa:	f3c5 2507 	ubfx	r5, r5, #8, #8
9001f2fe:	fa5f fc8c 	uxtb.w	ip, ip
9001f302:	fb1b fb03 	smulbb	fp, fp, r3
9001f306:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001f308:	437b      	muls	r3, r7
9001f30a:	7817      	ldrb	r7, [r2, #0]
9001f30c:	fb05 b50a 	mla	r5, r5, sl, fp
9001f310:	fb0e 3309 	mla	r3, lr, r9, r3
9001f314:	b2ad      	uxth	r5, r5
9001f316:	fb01 3307 	mla	r3, r1, r7, r3
9001f31a:	7807      	ldrb	r7, [r0, #0]
9001f31c:	f105 0b01 	add.w	fp, r5, #1
9001f320:	fb08 3707 	mla	r7, r8, r7, r3
9001f324:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001f326:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
9001f32a:	fb1c fc03 	smulbb	ip, ip, r3
9001f32e:	f3c7 2707 	ubfx	r7, r7, #8, #8
9001f332:	1c73      	adds	r3, r6, #1
9001f334:	096d      	lsrs	r5, r5, #5
9001f336:	fb07 c70a 	mla	r7, r7, sl, ip
9001f33a:	eb03 2616 	add.w	r6, r3, r6, lsr #8
9001f33e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001f342:	b2bf      	uxth	r7, r7
9001f344:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9001f346:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
9001f34a:	1c7a      	adds	r2, r7, #1
9001f34c:	eb02 2217 	add.w	r2, r2, r7, lsr #8
9001f350:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001f354:	4316      	orrs	r6, r2
9001f356:	9a21      	ldr	r2, [sp, #132]	; 0x84
9001f358:	432e      	orrs	r6, r5
9001f35a:	f823 6b02 	strh.w	r6, [r3], #2
9001f35e:	930c      	str	r3, [sp, #48]	; 0x30
9001f360:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
9001f362:	4413      	add	r3, r2
9001f364:	9a22      	ldr	r2, [sp, #136]	; 0x88
9001f366:	931f      	str	r3, [sp, #124]	; 0x7c
9001f368:	9b20      	ldr	r3, [sp, #128]	; 0x80
9001f36a:	4413      	add	r3, r2
9001f36c:	9320      	str	r3, [sp, #128]	; 0x80
9001f36e:	9b11      	ldr	r3, [sp, #68]	; 0x44
9001f370:	3b01      	subs	r3, #1
9001f372:	9311      	str	r3, [sp, #68]	; 0x44
9001f374:	e6db      	b.n	9001f12e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
9001f376:	b149      	cbz	r1, 9001f38c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
9001f378:	5cb2      	ldrb	r2, [r6, r2]
9001f37a:	4628      	mov	r0, r5
9001f37c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9001f380:	4422      	add	r2, r4
9001f382:	462f      	mov	r7, r5
9001f384:	e771      	b.n	9001f26a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
9001f386:	4628      	mov	r0, r5
9001f388:	462a      	mov	r2, r5
9001f38a:	e76e      	b.n	9001f26a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
9001f38c:	4628      	mov	r0, r5
9001f38e:	462a      	mov	r2, r5
9001f390:	e7f7      	b.n	9001f382 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
9001f392:	b015      	add	sp, #84	; 0x54
9001f394:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001f398 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
9001f398:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001f39c:	880f      	ldrh	r7, [r1, #0]
9001f39e:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
9001f3a2:	023c      	lsls	r4, r7, #8
9001f3a4:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
9001f3a8:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
9001f3ac:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
9001f3b0:	017c      	lsls	r4, r7, #5
9001f3b2:	00ff      	lsls	r7, r7, #3
9001f3b4:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
9001f3b8:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
9001f3bc:	b2ff      	uxtb	r7, r7
9001f3be:	ea4b 0404 	orr.w	r4, fp, r4
9001f3c2:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
9001f3c6:	4327      	orrs	r7, r4
9001f3c8:	fb05 ca0e 	mla	sl, r5, lr, ip
9001f3cc:	2d00      	cmp	r5, #0
9001f3ce:	9701      	str	r7, [sp, #4]
9001f3d0:	eb02 080a 	add.w	r8, r2, sl
9001f3d4:	db7e      	blt.n	9001f4d4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
9001f3d6:	45a9      	cmp	r9, r5
9001f3d8:	dd7c      	ble.n	9001f4d4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
9001f3da:	f1bc 0f00 	cmp.w	ip, #0
9001f3de:	db77      	blt.n	9001f4d0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
9001f3e0:	45e6      	cmp	lr, ip
9001f3e2:	dd75      	ble.n	9001f4d0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
9001f3e4:	f812 700a 	ldrb.w	r7, [r2, sl]
9001f3e8:	eb07 0747 	add.w	r7, r7, r7, lsl #1
9001f3ec:	441f      	add	r7, r3
9001f3ee:	f11c 0201 	adds.w	r2, ip, #1
9001f3f2:	d472      	bmi.n	9001f4da <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
9001f3f4:	4596      	cmp	lr, r2
9001f3f6:	dd70      	ble.n	9001f4da <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
9001f3f8:	2800      	cmp	r0, #0
9001f3fa:	d06e      	beq.n	9001f4da <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
9001f3fc:	f898 4001 	ldrb.w	r4, [r8, #1]
9001f400:	eb04 0444 	add.w	r4, r4, r4, lsl #1
9001f404:	441c      	add	r4, r3
9001f406:	3501      	adds	r5, #1
9001f408:	d46b      	bmi.n	9001f4e2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
9001f40a:	45a9      	cmp	r9, r5
9001f40c:	dd69      	ble.n	9001f4e2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
9001f40e:	2e00      	cmp	r6, #0
9001f410:	d067      	beq.n	9001f4e2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
9001f412:	f1bc 0f00 	cmp.w	ip, #0
9001f416:	db62      	blt.n	9001f4de <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
9001f418:	45e6      	cmp	lr, ip
9001f41a:	dd60      	ble.n	9001f4de <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
9001f41c:	f818 500e 	ldrb.w	r5, [r8, lr]
9001f420:	eb05 0545 	add.w	r5, r5, r5, lsl #1
9001f424:	441d      	add	r5, r3
9001f426:	f11c 0201 	adds.w	r2, ip, #1
9001f42a:	d45d      	bmi.n	9001f4e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
9001f42c:	4596      	cmp	lr, r2
9001f42e:	dd5b      	ble.n	9001f4e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
9001f430:	2800      	cmp	r0, #0
9001f432:	d059      	beq.n	9001f4e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
9001f434:	44c6      	add	lr, r8
9001f436:	f89e 2001 	ldrb.w	r2, [lr, #1]
9001f43a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9001f43e:	4413      	add	r3, r2
9001f440:	b280      	uxth	r0, r0
9001f442:	f897 e002 	ldrb.w	lr, [r7, #2]
9001f446:	b2b2      	uxth	r2, r6
9001f448:	f897 9000 	ldrb.w	r9, [r7]
9001f44c:	787f      	ldrb	r7, [r7, #1]
9001f44e:	fb00 f602 	mul.w	r6, r0, r2
9001f452:	0100      	lsls	r0, r0, #4
9001f454:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
9001f458:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
9001f45c:	1b80      	subs	r0, r0, r6
9001f45e:	fa1f fc82 	uxth.w	ip, r2
9001f462:	b282      	uxth	r2, r0
9001f464:	78a0      	ldrb	r0, [r4, #2]
9001f466:	eba8 080c 	sub.w	r8, r8, ip
9001f46a:	4350      	muls	r0, r2
9001f46c:	fa1f f888 	uxth.w	r8, r8
9001f470:	fb08 0e0e 	mla	lr, r8, lr, r0
9001f474:	78a8      	ldrb	r0, [r5, #2]
9001f476:	fb0c e000 	mla	r0, ip, r0, lr
9001f47a:	f893 e002 	ldrb.w	lr, [r3, #2]
9001f47e:	fb06 0e0e 	mla	lr, r6, lr, r0
9001f482:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
9001f486:	f894 e000 	ldrb.w	lr, [r4]
9001f48a:	fb02 fe0e 	mul.w	lr, r2, lr
9001f48e:	fb08 e909 	mla	r9, r8, r9, lr
9001f492:	f895 e000 	ldrb.w	lr, [r5]
9001f496:	fb0c 990e 	mla	r9, ip, lr, r9
9001f49a:	f893 e000 	ldrb.w	lr, [r3]
9001f49e:	785b      	ldrb	r3, [r3, #1]
9001f4a0:	fb06 9e0e 	mla	lr, r6, lr, r9
9001f4a4:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
9001f4a8:	ea4e 0e00 	orr.w	lr, lr, r0
9001f4ac:	7860      	ldrb	r0, [r4, #1]
9001f4ae:	4350      	muls	r0, r2
9001f4b0:	786a      	ldrb	r2, [r5, #1]
9001f4b2:	fb08 0007 	mla	r0, r8, r7, r0
9001f4b6:	fb0c 0202 	mla	r2, ip, r2, r0
9001f4ba:	fb06 2303 	mla	r3, r6, r3, r2
9001f4be:	095b      	lsrs	r3, r3, #5
9001f4c0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9001f4c4:	ea4e 0303 	orr.w	r3, lr, r3
9001f4c8:	800b      	strh	r3, [r1, #0]
9001f4ca:	b003      	add	sp, #12
9001f4cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001f4d0:	af01      	add	r7, sp, #4
9001f4d2:	e78c      	b.n	9001f3ee <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
9001f4d4:	ac01      	add	r4, sp, #4
9001f4d6:	4627      	mov	r7, r4
9001f4d8:	e795      	b.n	9001f406 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
9001f4da:	ac01      	add	r4, sp, #4
9001f4dc:	e793      	b.n	9001f406 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
9001f4de:	ad01      	add	r5, sp, #4
9001f4e0:	e7a1      	b.n	9001f426 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
9001f4e2:	ab01      	add	r3, sp, #4
9001f4e4:	461d      	mov	r5, r3
9001f4e6:	e7ab      	b.n	9001f440 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
9001f4e8:	ab01      	add	r3, sp, #4
9001f4ea:	e7a9      	b.n	9001f440 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

9001f4ec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001f4ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001f4f0:	b08f      	sub	sp, #60	; 0x3c
9001f4f2:	920c      	str	r2, [sp, #48]	; 0x30
9001f4f4:	9a1d      	ldr	r2, [sp, #116]	; 0x74
9001f4f6:	900d      	str	r0, [sp, #52]	; 0x34
9001f4f8:	910a      	str	r1, [sp, #40]	; 0x28
9001f4fa:	6850      	ldr	r0, [r2, #4]
9001f4fc:	9306      	str	r3, [sp, #24]
9001f4fe:	6812      	ldr	r2, [r2, #0]
9001f500:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
9001f504:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
9001f508:	fb00 1303 	mla	r3, r0, r3, r1
9001f50c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9001f510:	9307      	str	r3, [sp, #28]
9001f512:	9b20      	ldr	r3, [sp, #128]	; 0x80
9001f514:	681b      	ldr	r3, [r3, #0]
9001f516:	9308      	str	r3, [sp, #32]
9001f518:	9b20      	ldr	r3, [sp, #128]	; 0x80
9001f51a:	685c      	ldr	r4, [r3, #4]
9001f51c:	3404      	adds	r4, #4
9001f51e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001f520:	2b00      	cmp	r3, #0
9001f522:	dc03      	bgt.n	9001f52c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
9001f524:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9001f526:	2b00      	cmp	r3, #0
9001f528:	f340 81d5 	ble.w	9001f8d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
9001f52c:	9b20      	ldr	r3, [sp, #128]	; 0x80
9001f52e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9001f532:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9001f536:	1e48      	subs	r0, r1, #1
9001f538:	1e56      	subs	r6, r2, #1
9001f53a:	9b06      	ldr	r3, [sp, #24]
9001f53c:	2b00      	cmp	r3, #0
9001f53e:	f340 80b6 	ble.w	9001f6ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
9001f542:	ea5f 472b 	movs.w	r7, fp, asr #16
9001f546:	ea4f 4325 	mov.w	r3, r5, asr #16
9001f54a:	d406      	bmi.n	9001f55a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001f54c:	4287      	cmp	r7, r0
9001f54e:	da04      	bge.n	9001f55a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001f550:	2b00      	cmp	r3, #0
9001f552:	db02      	blt.n	9001f55a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001f554:	42b3      	cmp	r3, r6
9001f556:	f2c0 80ab 	blt.w	9001f6b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
9001f55a:	3701      	adds	r7, #1
9001f55c:	f100 809c 	bmi.w	9001f698 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
9001f560:	42b9      	cmp	r1, r7
9001f562:	f2c0 8099 	blt.w	9001f698 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
9001f566:	3301      	adds	r3, #1
9001f568:	f100 8096 	bmi.w	9001f698 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
9001f56c:	429a      	cmp	r2, r3
9001f56e:	f2c0 8093 	blt.w	9001f698 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
9001f572:	9b06      	ldr	r3, [sp, #24]
9001f574:	930b      	str	r3, [sp, #44]	; 0x2c
9001f576:	9b07      	ldr	r3, [sp, #28]
9001f578:	9309      	str	r3, [sp, #36]	; 0x24
9001f57a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001f57c:	2b00      	cmp	r3, #0
9001f57e:	f340 80b4 	ble.w	9001f6ea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
9001f582:	9820      	ldr	r0, [sp, #128]	; 0x80
9001f584:	142e      	asrs	r6, r5, #16
9001f586:	9a20      	ldr	r2, [sp, #128]	; 0x80
9001f588:	f3cb 3303 	ubfx	r3, fp, #12, #4
9001f58c:	68c7      	ldr	r7, [r0, #12]
9001f58e:	ea5f 402b 	movs.w	r0, fp, asr #16
9001f592:	f3c5 3103 	ubfx	r1, r5, #12, #4
9001f596:	6892      	ldr	r2, [r2, #8]
9001f598:	f100 80fb 	bmi.w	9001f792 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
9001f59c:	f102 3cff 	add.w	ip, r2, #4294967295
9001f5a0:	4560      	cmp	r0, ip
9001f5a2:	f280 80f6 	bge.w	9001f792 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
9001f5a6:	2e00      	cmp	r6, #0
9001f5a8:	f2c0 80f3 	blt.w	9001f792 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
9001f5ac:	f107 3cff 	add.w	ip, r7, #4294967295
9001f5b0:	4566      	cmp	r6, ip
9001f5b2:	f280 80ee 	bge.w	9001f792 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
9001f5b6:	b212      	sxth	r2, r2
9001f5b8:	fb06 0002 	mla	r0, r6, r2, r0
9001f5bc:	9e08      	ldr	r6, [sp, #32]
9001f5be:	1837      	adds	r7, r6, r0
9001f5c0:	5c30      	ldrb	r0, [r6, r0]
9001f5c2:	eb00 0840 	add.w	r8, r0, r0, lsl #1
9001f5c6:	eb04 0c08 	add.w	ip, r4, r8
9001f5ca:	2b00      	cmp	r3, #0
9001f5cc:	f000 80d3 	beq.w	9001f776 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
9001f5d0:	787e      	ldrb	r6, [r7, #1]
9001f5d2:	eb06 0646 	add.w	r6, r6, r6, lsl #1
9001f5d6:	4426      	add	r6, r4
9001f5d8:	2900      	cmp	r1, #0
9001f5da:	f000 80d4 	beq.w	9001f786 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
9001f5de:	18b8      	adds	r0, r7, r2
9001f5e0:	5cba      	ldrb	r2, [r7, r2]
9001f5e2:	7840      	ldrb	r0, [r0, #1]
9001f5e4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9001f5e8:	eb00 0040 	add.w	r0, r0, r0, lsl #1
9001f5ec:	4422      	add	r2, r4
9001f5ee:	4420      	add	r0, r4
9001f5f0:	b29b      	uxth	r3, r3
9001f5f2:	78b7      	ldrb	r7, [r6, #2]
9001f5f4:	b289      	uxth	r1, r1
9001f5f6:	f89c a002 	ldrb.w	sl, [ip, #2]
9001f5fa:	f89c c001 	ldrb.w	ip, [ip, #1]
9001f5fe:	fb03 f901 	mul.w	r9, r3, r1
9001f602:	011b      	lsls	r3, r3, #4
9001f604:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
9001f608:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
9001f60c:	eba3 0309 	sub.w	r3, r3, r9
9001f610:	b289      	uxth	r1, r1
9001f612:	b29b      	uxth	r3, r3
9001f614:	ebae 0e01 	sub.w	lr, lr, r1
9001f618:	435f      	muls	r7, r3
9001f61a:	fa1f fe8e 	uxth.w	lr, lr
9001f61e:	fb0e 770a 	mla	r7, lr, sl, r7
9001f622:	f892 a002 	ldrb.w	sl, [r2, #2]
9001f626:	fb01 770a 	mla	r7, r1, sl, r7
9001f62a:	f890 a002 	ldrb.w	sl, [r0, #2]
9001f62e:	fb09 7a0a 	mla	sl, r9, sl, r7
9001f632:	f814 7008 	ldrb.w	r7, [r4, r8]
9001f636:	f896 8000 	ldrb.w	r8, [r6]
9001f63a:	7876      	ldrb	r6, [r6, #1]
9001f63c:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
9001f640:	fb03 f808 	mul.w	r8, r3, r8
9001f644:	4373      	muls	r3, r6
9001f646:	fb0e 8807 	mla	r8, lr, r7, r8
9001f64a:	7817      	ldrb	r7, [r2, #0]
9001f64c:	fb0e 330c 	mla	r3, lr, ip, r3
9001f650:	fb01 8807 	mla	r8, r1, r7, r8
9001f654:	7807      	ldrb	r7, [r0, #0]
9001f656:	fb09 8707 	mla	r7, r9, r7, r8
9001f65a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
9001f65e:	ea47 070a 	orr.w	r7, r7, sl
9001f662:	f892 a001 	ldrb.w	sl, [r2, #1]
9001f666:	fb01 310a 	mla	r1, r1, sl, r3
9001f66a:	f890 a001 	ldrb.w	sl, [r0, #1]
9001f66e:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001f670:	fb09 1a0a 	mla	sl, r9, sl, r1
9001f674:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001f678:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001f67c:	ea47 070a 	orr.w	r7, r7, sl
9001f680:	801f      	strh	r7, [r3, #0]
9001f682:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001f684:	3302      	adds	r3, #2
9001f686:	9309      	str	r3, [sp, #36]	; 0x24
9001f688:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
9001f68a:	449b      	add	fp, r3
9001f68c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
9001f68e:	441d      	add	r5, r3
9001f690:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001f692:	3b01      	subs	r3, #1
9001f694:	930b      	str	r3, [sp, #44]	; 0x2c
9001f696:	e770      	b.n	9001f57a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
9001f698:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
9001f69a:	449b      	add	fp, r3
9001f69c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
9001f69e:	441d      	add	r5, r3
9001f6a0:	9b06      	ldr	r3, [sp, #24]
9001f6a2:	3b01      	subs	r3, #1
9001f6a4:	9306      	str	r3, [sp, #24]
9001f6a6:	9b07      	ldr	r3, [sp, #28]
9001f6a8:	3302      	adds	r3, #2
9001f6aa:	9307      	str	r3, [sp, #28]
9001f6ac:	e745      	b.n	9001f53a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
9001f6ae:	d023      	beq.n	9001f6f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
9001f6b0:	9b06      	ldr	r3, [sp, #24]
9001f6b2:	981b      	ldr	r0, [sp, #108]	; 0x6c
9001f6b4:	3b01      	subs	r3, #1
9001f6b6:	fb00 b003 	mla	r0, r0, r3, fp
9001f6ba:	1400      	asrs	r0, r0, #16
9001f6bc:	f53f af59 	bmi.w	9001f572 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
9001f6c0:	3901      	subs	r1, #1
9001f6c2:	4288      	cmp	r0, r1
9001f6c4:	f6bf af55 	bge.w	9001f572 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
9001f6c8:	991c      	ldr	r1, [sp, #112]	; 0x70
9001f6ca:	fb01 5303 	mla	r3, r1, r3, r5
9001f6ce:	141b      	asrs	r3, r3, #16
9001f6d0:	f53f af4f 	bmi.w	9001f572 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
9001f6d4:	3a01      	subs	r2, #1
9001f6d6:	4293      	cmp	r3, r2
9001f6d8:	f6bf af4b 	bge.w	9001f572 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
9001f6dc:	9b06      	ldr	r3, [sp, #24]
9001f6de:	9309      	str	r3, [sp, #36]	; 0x24
9001f6e0:	9b07      	ldr	r3, [sp, #28]
9001f6e2:	930b      	str	r3, [sp, #44]	; 0x2c
9001f6e4:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001f6e6:	2b00      	cmp	r3, #0
9001f6e8:	dc70      	bgt.n	9001f7cc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
9001f6ea:	9b06      	ldr	r3, [sp, #24]
9001f6ec:	9a07      	ldr	r2, [sp, #28]
9001f6ee:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001f6f2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9001f6f6:	9307      	str	r3, [sp, #28]
9001f6f8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001f6fa:	2b00      	cmp	r3, #0
9001f6fc:	f340 80eb 	ble.w	9001f8d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
9001f700:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
9001f704:	9b18      	ldr	r3, [sp, #96]	; 0x60
9001f706:	ee30 0a04 	vadd.f32	s0, s0, s8
9001f70a:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001f70e:	eef0 6a62 	vmov.f32	s13, s5
9001f712:	eec7 7a00 	vdiv.f32	s15, s14, s0
9001f716:	ee31 1a05 	vadd.f32	s2, s2, s10
9001f71a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001f71e:	ee16 ba90 	vmov	fp, s13
9001f722:	eef0 6a43 	vmov.f32	s13, s6
9001f726:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001f72a:	ee16 5a90 	vmov	r5, s13
9001f72e:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001f732:	ee61 7a27 	vmul.f32	s15, s2, s15
9001f736:	ee77 2a62 	vsub.f32	s5, s14, s5
9001f73a:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001f73e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001f742:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001f746:	ee12 2a90 	vmov	r2, s5
9001f74a:	eef0 2a47 	vmov.f32	s5, s14
9001f74e:	fb92 f3f3 	sdiv	r3, r2, r3
9001f752:	ee13 2a10 	vmov	r2, s6
9001f756:	931b      	str	r3, [sp, #108]	; 0x6c
9001f758:	9b18      	ldr	r3, [sp, #96]	; 0x60
9001f75a:	eeb0 3a67 	vmov.f32	s6, s15
9001f75e:	fb92 f3f3 	sdiv	r3, r2, r3
9001f762:	931c      	str	r3, [sp, #112]	; 0x70
9001f764:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001f766:	9a0c      	ldr	r2, [sp, #48]	; 0x30
9001f768:	3b01      	subs	r3, #1
9001f76a:	930a      	str	r3, [sp, #40]	; 0x28
9001f76c:	9b18      	ldr	r3, [sp, #96]	; 0x60
9001f76e:	bf08      	it	eq
9001f770:	4613      	moveq	r3, r2
9001f772:	9306      	str	r3, [sp, #24]
9001f774:	e6d3      	b.n	9001f51e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
9001f776:	b149      	cbz	r1, 9001f78c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
9001f778:	5cba      	ldrb	r2, [r7, r2]
9001f77a:	4660      	mov	r0, ip
9001f77c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9001f780:	4422      	add	r2, r4
9001f782:	4666      	mov	r6, ip
9001f784:	e734      	b.n	9001f5f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
9001f786:	4660      	mov	r0, ip
9001f788:	4662      	mov	r2, ip
9001f78a:	e731      	b.n	9001f5f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
9001f78c:	4660      	mov	r0, ip
9001f78e:	4662      	mov	r2, ip
9001f790:	e7f7      	b.n	9001f782 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
9001f792:	f110 0c01 	adds.w	ip, r0, #1
9001f796:	f53f af74 	bmi.w	9001f682 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
9001f79a:	4562      	cmp	r2, ip
9001f79c:	f6ff af71 	blt.w	9001f682 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
9001f7a0:	f116 0c01 	adds.w	ip, r6, #1
9001f7a4:	f53f af6d 	bmi.w	9001f682 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
9001f7a8:	4567      	cmp	r7, ip
9001f7aa:	f6ff af6a 	blt.w	9001f682 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
9001f7ae:	b23f      	sxth	r7, r7
9001f7b0:	b212      	sxth	r2, r2
9001f7b2:	9701      	str	r7, [sp, #4]
9001f7b4:	9200      	str	r2, [sp, #0]
9001f7b6:	e9cd 3104 	strd	r3, r1, [sp, #16]
9001f7ba:	e9cd 0602 	strd	r0, r6, [sp, #8]
9001f7be:	4623      	mov	r3, r4
9001f7c0:	980d      	ldr	r0, [sp, #52]	; 0x34
9001f7c2:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
9001f7c6:	f7ff fde7 	bl	9001f398 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
9001f7ca:	e75a      	b.n	9001f682 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
9001f7cc:	9a20      	ldr	r2, [sp, #128]	; 0x80
9001f7ce:	ea4f 462b 	mov.w	r6, fp, asr #16
9001f7d2:	1428      	asrs	r0, r5, #16
9001f7d4:	f3cb 3303 	ubfx	r3, fp, #12, #4
9001f7d8:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
9001f7dc:	f3c5 3103 	ubfx	r1, r5, #12, #4
9001f7e0:	fb02 6000 	mla	r0, r2, r0, r6
9001f7e4:	9e08      	ldr	r6, [sp, #32]
9001f7e6:	f816 8000 	ldrb.w	r8, [r6, r0]
9001f7ea:	1837      	adds	r7, r6, r0
9001f7ec:	eb08 0848 	add.w	r8, r8, r8, lsl #1
9001f7f0:	eb04 0c08 	add.w	ip, r4, r8
9001f7f4:	2b00      	cmp	r3, #0
9001f7f6:	d060      	beq.n	9001f8ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ce>
9001f7f8:	787e      	ldrb	r6, [r7, #1]
9001f7fa:	eb06 0646 	add.w	r6, r6, r6, lsl #1
9001f7fe:	4426      	add	r6, r4
9001f800:	2900      	cmp	r1, #0
9001f802:	d062      	beq.n	9001f8ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3de>
9001f804:	18b8      	adds	r0, r7, r2
9001f806:	5cba      	ldrb	r2, [r7, r2]
9001f808:	7840      	ldrb	r0, [r0, #1]
9001f80a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9001f80e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
9001f812:	4422      	add	r2, r4
9001f814:	4420      	add	r0, r4
9001f816:	b29b      	uxth	r3, r3
9001f818:	78b7      	ldrb	r7, [r6, #2]
9001f81a:	b289      	uxth	r1, r1
9001f81c:	f89c a002 	ldrb.w	sl, [ip, #2]
9001f820:	f89c c001 	ldrb.w	ip, [ip, #1]
9001f824:	fb03 f901 	mul.w	r9, r3, r1
9001f828:	011b      	lsls	r3, r3, #4
9001f82a:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
9001f82e:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
9001f832:	eba3 0309 	sub.w	r3, r3, r9
9001f836:	b289      	uxth	r1, r1
9001f838:	b29b      	uxth	r3, r3
9001f83a:	ebae 0e01 	sub.w	lr, lr, r1
9001f83e:	435f      	muls	r7, r3
9001f840:	fa1f fe8e 	uxth.w	lr, lr
9001f844:	fb0e 770a 	mla	r7, lr, sl, r7
9001f848:	f892 a002 	ldrb.w	sl, [r2, #2]
9001f84c:	fb01 770a 	mla	r7, r1, sl, r7
9001f850:	f890 a002 	ldrb.w	sl, [r0, #2]
9001f854:	fb09 7a0a 	mla	sl, r9, sl, r7
9001f858:	f814 7008 	ldrb.w	r7, [r4, r8]
9001f85c:	f896 8000 	ldrb.w	r8, [r6]
9001f860:	7876      	ldrb	r6, [r6, #1]
9001f862:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
9001f866:	fb03 f808 	mul.w	r8, r3, r8
9001f86a:	4373      	muls	r3, r6
9001f86c:	7856      	ldrb	r6, [r2, #1]
9001f86e:	fb0e 8807 	mla	r8, lr, r7, r8
9001f872:	7817      	ldrb	r7, [r2, #0]
9001f874:	fb0e 330c 	mla	r3, lr, ip, r3
9001f878:	fb01 8807 	mla	r8, r1, r7, r8
9001f87c:	7807      	ldrb	r7, [r0, #0]
9001f87e:	fb01 3306 	mla	r3, r1, r6, r3
9001f882:	fb09 8707 	mla	r7, r9, r7, r8
9001f886:	f3c7 27c4 	ubfx	r7, r7, #11, #5
9001f88a:	ea47 070a 	orr.w	r7, r7, sl
9001f88e:	f890 a001 	ldrb.w	sl, [r0, #1]
9001f892:	fb09 3a0a 	mla	sl, r9, sl, r3
9001f896:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001f898:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001f89c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001f8a0:	ea47 070a 	orr.w	r7, r7, sl
9001f8a4:	f823 7b02 	strh.w	r7, [r3], #2
9001f8a8:	930b      	str	r3, [sp, #44]	; 0x2c
9001f8aa:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
9001f8ac:	449b      	add	fp, r3
9001f8ae:	9b1c      	ldr	r3, [sp, #112]	; 0x70
9001f8b0:	441d      	add	r5, r3
9001f8b2:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001f8b4:	3b01      	subs	r3, #1
9001f8b6:	9309      	str	r3, [sp, #36]	; 0x24
9001f8b8:	e714      	b.n	9001f6e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
9001f8ba:	b149      	cbz	r1, 9001f8d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e4>
9001f8bc:	5cba      	ldrb	r2, [r7, r2]
9001f8be:	4660      	mov	r0, ip
9001f8c0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9001f8c4:	4422      	add	r2, r4
9001f8c6:	4666      	mov	r6, ip
9001f8c8:	e7a5      	b.n	9001f816 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
9001f8ca:	4660      	mov	r0, ip
9001f8cc:	4662      	mov	r2, ip
9001f8ce:	e7a2      	b.n	9001f816 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
9001f8d0:	4660      	mov	r0, ip
9001f8d2:	4662      	mov	r2, ip
9001f8d4:	e7f7      	b.n	9001f8c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3da>
9001f8d6:	b00f      	add	sp, #60	; 0x3c
9001f8d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001f8dc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
9001f8dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001f8e0:	b085      	sub	sp, #20
9001f8e2:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
9001f8e6:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
9001f8ea:	9102      	str	r1, [sp, #8]
9001f8ec:	2c00      	cmp	r4, #0
9001f8ee:	fb04 710c 	mla	r1, r4, ip, r7
9001f8f2:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
9001f8f6:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
9001f8fa:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
9001f8fe:	eb02 0e01 	add.w	lr, r2, r1
9001f902:	f2c0 8122 	blt.w	9001fb4a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
9001f906:	45a0      	cmp	r8, r4
9001f908:	f340 811f 	ble.w	9001fb4a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
9001f90c:	2f00      	cmp	r7, #0
9001f90e:	f2c0 811a 	blt.w	9001fb46 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
9001f912:	45bc      	cmp	ip, r7
9001f914:	f340 8117 	ble.w	9001fb46 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
9001f918:	5c52      	ldrb	r2, [r2, r1]
9001f91a:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
9001f91e:	1c7a      	adds	r2, r7, #1
9001f920:	f100 8116 	bmi.w	9001fb50 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
9001f924:	4594      	cmp	ip, r2
9001f926:	f340 8113 	ble.w	9001fb50 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
9001f92a:	2e00      	cmp	r6, #0
9001f92c:	f000 8112 	beq.w	9001fb54 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
9001f930:	f89e 2001 	ldrb.w	r2, [lr, #1]
9001f934:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
9001f938:	3401      	adds	r4, #1
9001f93a:	f100 810f 	bmi.w	9001fb5c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
9001f93e:	45a0      	cmp	r8, r4
9001f940:	f340 810c 	ble.w	9001fb5c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
9001f944:	2800      	cmp	r0, #0
9001f946:	f000 810c 	beq.w	9001fb62 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
9001f94a:	2f00      	cmp	r7, #0
9001f94c:	f2c0 8104 	blt.w	9001fb58 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
9001f950:	45bc      	cmp	ip, r7
9001f952:	f340 8101 	ble.w	9001fb58 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
9001f956:	f81e 200c 	ldrb.w	r2, [lr, ip]
9001f95a:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
9001f95e:	3701      	adds	r7, #1
9001f960:	f100 8102 	bmi.w	9001fb68 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
9001f964:	45bc      	cmp	ip, r7
9001f966:	f340 80ff 	ble.w	9001fb68 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
9001f96a:	2e00      	cmp	r6, #0
9001f96c:	f000 80fe 	beq.w	9001fb6c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
9001f970:	44f4      	add	ip, lr
9001f972:	f89c 2001 	ldrb.w	r2, [ip, #1]
9001f976:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
9001f97a:	b2b6      	uxth	r6, r6
9001f97c:	b280      	uxth	r0, r0
9001f97e:	ea4f 6a11 	mov.w	sl, r1, lsr #24
9001f982:	fb00 fe06 	mul.w	lr, r0, r6
9001f986:	0136      	lsls	r6, r6, #4
9001f988:	ea4f 6b15 	mov.w	fp, r5, lsr #24
9001f98c:	ebce 1000 	rsb	r0, lr, r0, lsl #4
9001f990:	eba6 070e 	sub.w	r7, r6, lr
9001f994:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
9001f998:	ea4f 6914 	mov.w	r9, r4, lsr #24
9001f99c:	b280      	uxth	r0, r0
9001f99e:	b2bf      	uxth	r7, r7
9001f9a0:	1a1b      	subs	r3, r3, r0
9001f9a2:	ea4f 6812 	mov.w	r8, r2, lsr #24
9001f9a6:	fb0a f607 	mul.w	r6, sl, r7
9001f9aa:	b29b      	uxth	r3, r3
9001f9ac:	fb0b 6603 	mla	r6, fp, r3, r6
9001f9b0:	fb00 6609 	mla	r6, r0, r9, r6
9001f9b4:	fb0e 6608 	mla	r6, lr, r8, r6
9001f9b8:	f3c6 2607 	ubfx	r6, r6, #8, #8
9001f9bc:	9600      	str	r6, [sp, #0]
9001f9be:	2e00      	cmp	r6, #0
9001f9c0:	f000 80be 	beq.w	9001fb40 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
9001f9c4:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
9001f9c8:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
9001f9cc:	9e02      	ldr	r6, [sp, #8]
9001f9ce:	fb0b fc0c 	mul.w	ip, fp, ip
9001f9d2:	fb0b f505 	mul.w	r5, fp, r5
9001f9d6:	8836      	ldrh	r6, [r6, #0]
9001f9d8:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
9001f9dc:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
9001f9e0:	9501      	str	r5, [sp, #4]
9001f9e2:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
9001f9e6:	44dc      	add	ip, fp
9001f9e8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9001f9ec:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
9001f9f0:	9503      	str	r5, [sp, #12]
9001f9f2:	9d01      	ldr	r5, [sp, #4]
9001f9f4:	f505 7c80 	add.w	ip, r5, #256	; 0x100
9001f9f8:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
9001f9fc:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
9001fa00:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
9001fa04:	fb0a fc0c 	mul.w	ip, sl, ip
9001fa08:	ea4f 2b15 	mov.w	fp, r5, lsr #8
9001fa0c:	fb0a fa01 	mul.w	sl, sl, r1
9001fa10:	ea4f 251c 	mov.w	r5, ip, lsr #8
9001fa14:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
9001fa18:	f50a 7180 	add.w	r1, sl, #256	; 0x100
9001fa1c:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
9001fa20:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
9001fa24:	4465      	add	r5, ip
9001fa26:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
9001fa2a:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
9001fa2e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9001fa32:	fb09 fc0c 	mul.w	ip, r9, ip
9001fa36:	0a2d      	lsrs	r5, r5, #8
9001fa38:	fb09 f904 	mul.w	r9, r9, r4
9001fa3c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
9001fa40:	ea4f 211c 	mov.w	r1, ip, lsr #8
9001fa44:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
9001fa48:	f509 7480 	add.w	r4, r9, #256	; 0x100
9001fa4c:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
9001fa50:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
9001fa54:	437d      	muls	r5, r7
9001fa56:	eb04 2919 	add.w	r9, r4, r9, lsr #8
9001fa5a:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
9001fa5e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
9001fa62:	4461      	add	r1, ip
9001fa64:	fb08 f404 	mul.w	r4, r8, r4
9001fa68:	ea4f 2919 	mov.w	r9, r9, lsr #8
9001fa6c:	fb08 f802 	mul.w	r8, r8, r2
9001fa70:	0a09      	lsrs	r1, r1, #8
9001fa72:	0a22      	lsrs	r2, r4, #8
9001fa74:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
9001fa78:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
9001fa7c:	fb07 f70a 	mul.w	r7, r7, sl
9001fa80:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
9001fa84:	4414      	add	r4, r2
9001fa86:	f508 7280 	add.w	r2, r8, #256	; 0x100
9001fa8a:	0a24      	lsrs	r4, r4, #8
9001fa8c:	eb02 2818 	add.w	r8, r2, r8, lsr #8
9001fa90:	9a03      	ldr	r2, [sp, #12]
9001fa92:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
9001fa96:	fb02 5503 	mla	r5, r2, r3, r5
9001fa9a:	ea4f 2818 	mov.w	r8, r8, lsr #8
9001fa9e:	9a00      	ldr	r2, [sp, #0]
9001faa0:	fb04 540e 	mla	r4, r4, lr, r5
9001faa4:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
9001faa8:	1235      	asrs	r5, r6, #8
9001faaa:	fb01 4100 	mla	r1, r1, r0, r4
9001faae:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
9001fab2:	0a09      	lsrs	r1, r1, #8
9001fab4:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
9001fab8:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
9001fabc:	fb03 7101 	mla	r1, r3, r1, r7
9001fac0:	fb0e 1e08 	mla	lr, lr, r8, r1
9001fac4:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
9001fac8:	fb00 e101 	mla	r1, r0, r1, lr
9001facc:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
9001fad0:	b287      	uxth	r7, r0
9001fad2:	0a09      	lsrs	r1, r1, #8
9001fad4:	437a      	muls	r2, r7
9001fad6:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
9001fada:	1c53      	adds	r3, r2, #1
9001fadc:	4321      	orrs	r1, r4
9001fade:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9001fae2:	0c0a      	lsrs	r2, r1, #16
9001fae4:	f3c1 2407 	ubfx	r4, r1, #8, #8
9001fae8:	ea6f 2313 	mvn.w	r3, r3, lsr #8
9001faec:	b2c8      	uxtb	r0, r1
9001faee:	fb12 f207 	smulbb	r2, r2, r7
9001faf2:	fb14 f407 	smulbb	r4, r4, r7
9001faf6:	b2db      	uxtb	r3, r3
9001faf8:	fb10 f007 	smulbb	r0, r0, r7
9001fafc:	fb05 2503 	mla	r5, r5, r3, r2
9001fb00:	10f2      	asrs	r2, r6, #3
9001fb02:	00f6      	lsls	r6, r6, #3
9001fb04:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
9001fb08:	b2ad      	uxth	r5, r5
9001fb0a:	b2f6      	uxtb	r6, r6
9001fb0c:	fb02 4203 	mla	r2, r2, r3, r4
9001fb10:	fb06 0303 	mla	r3, r6, r3, r0
9001fb14:	b294      	uxth	r4, r2
9001fb16:	b299      	uxth	r1, r3
9001fb18:	1c6b      	adds	r3, r5, #1
9001fb1a:	1c62      	adds	r2, r4, #1
9001fb1c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
9001fb20:	1c4b      	adds	r3, r1, #1
9001fb22:	eb02 2214 	add.w	r2, r2, r4, lsr #8
9001fb26:	eb03 2311 	add.w	r3, r3, r1, lsr #8
9001fb2a:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
9001fb2e:	0952      	lsrs	r2, r2, #5
9001fb30:	f3c3 23c4 	ubfx	r3, r3, #11, #5
9001fb34:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001fb38:	432b      	orrs	r3, r5
9001fb3a:	4313      	orrs	r3, r2
9001fb3c:	9a02      	ldr	r2, [sp, #8]
9001fb3e:	8013      	strh	r3, [r2, #0]
9001fb40:	b005      	add	sp, #20
9001fb42:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001fb46:	2500      	movs	r5, #0
9001fb48:	e6e9      	b.n	9001f91e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
9001fb4a:	2100      	movs	r1, #0
9001fb4c:	460d      	mov	r5, r1
9001fb4e:	e6f3      	b.n	9001f938 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
9001fb50:	2100      	movs	r1, #0
9001fb52:	e6f1      	b.n	9001f938 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
9001fb54:	4631      	mov	r1, r6
9001fb56:	e6ef      	b.n	9001f938 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
9001fb58:	2400      	movs	r4, #0
9001fb5a:	e700      	b.n	9001f95e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
9001fb5c:	2200      	movs	r2, #0
9001fb5e:	4614      	mov	r4, r2
9001fb60:	e70b      	b.n	9001f97a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
9001fb62:	4602      	mov	r2, r0
9001fb64:	4604      	mov	r4, r0
9001fb66:	e708      	b.n	9001f97a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
9001fb68:	2200      	movs	r2, #0
9001fb6a:	e706      	b.n	9001f97a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
9001fb6c:	4632      	mov	r2, r6
9001fb6e:	e704      	b.n	9001f97a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

9001fb70 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001fb70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001fb74:	b09f      	sub	sp, #124	; 0x7c
9001fb76:	921b      	str	r2, [sp, #108]	; 0x6c
9001fb78:	9309      	str	r3, [sp, #36]	; 0x24
9001fb7a:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
9001fb7c:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
9001fb80:	901d      	str	r0, [sp, #116]	; 0x74
9001fb82:	931c      	str	r3, [sp, #112]	; 0x70
9001fb84:	6850      	ldr	r0, [r2, #4]
9001fb86:	9119      	str	r1, [sp, #100]	; 0x64
9001fb88:	6812      	ldr	r2, [r2, #0]
9001fb8a:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
9001fb8c:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
9001fb90:	fb00 1303 	mla	r3, r0, r3, r1
9001fb94:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9001fb98:	930c      	str	r3, [sp, #48]	; 0x30
9001fb9a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
9001fb9c:	681b      	ldr	r3, [r3, #0]
9001fb9e:	9312      	str	r3, [sp, #72]	; 0x48
9001fba0:	9b30      	ldr	r3, [sp, #192]	; 0xc0
9001fba2:	685e      	ldr	r6, [r3, #4]
9001fba4:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
9001fba8:	3604      	adds	r6, #4
9001fbaa:	930d      	str	r3, [sp, #52]	; 0x34
9001fbac:	9b19      	ldr	r3, [sp, #100]	; 0x64
9001fbae:	2b00      	cmp	r3, #0
9001fbb0:	dc03      	bgt.n	9001fbba <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
9001fbb2:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
9001fbb4:	2b00      	cmp	r3, #0
9001fbb6:	f340 8387 	ble.w	900202c8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
9001fbba:	9b30      	ldr	r3, [sp, #192]	; 0xc0
9001fbbc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9001fbc0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9001fbc4:	1e48      	subs	r0, r1, #1
9001fbc6:	1e57      	subs	r7, r2, #1
9001fbc8:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001fbca:	2b00      	cmp	r3, #0
9001fbcc:	f340 8194 	ble.w	9001fef8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x388>
9001fbd0:	9c29      	ldr	r4, [sp, #164]	; 0xa4
9001fbd2:	142b      	asrs	r3, r5, #16
9001fbd4:	ea5f 4c24 	movs.w	ip, r4, asr #16
9001fbd8:	d406      	bmi.n	9001fbe8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9001fbda:	4584      	cmp	ip, r0
9001fbdc:	da04      	bge.n	9001fbe8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9001fbde:	2b00      	cmp	r3, #0
9001fbe0:	db02      	blt.n	9001fbe8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9001fbe2:	42bb      	cmp	r3, r7
9001fbe4:	f2c0 8189 	blt.w	9001fefa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
9001fbe8:	f11c 0c01 	adds.w	ip, ip, #1
9001fbec:	f100 8177 	bmi.w	9001fede <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
9001fbf0:	4561      	cmp	r1, ip
9001fbf2:	f2c0 8174 	blt.w	9001fede <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
9001fbf6:	3301      	adds	r3, #1
9001fbf8:	f100 8171 	bmi.w	9001fede <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
9001fbfc:	429a      	cmp	r2, r3
9001fbfe:	f2c0 816e 	blt.w	9001fede <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
9001fc02:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001fc04:	9f0c      	ldr	r7, [sp, #48]	; 0x30
9001fc06:	931a      	str	r3, [sp, #104]	; 0x68
9001fc08:	9b1a      	ldr	r3, [sp, #104]	; 0x68
9001fc0a:	2b00      	cmp	r3, #0
9001fc0c:	f340 8193 	ble.w	9001ff36 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c6>
9001fc10:	9b29      	ldr	r3, [sp, #164]	; 0xa4
9001fc12:	ea4f 4c25 	mov.w	ip, r5, asr #16
9001fc16:	f3c5 3103 	ubfx	r1, r5, #12, #4
9001fc1a:	f3c3 3203 	ubfx	r2, r3, #12, #4
9001fc1e:	9b30      	ldr	r3, [sp, #192]	; 0xc0
9001fc20:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
9001fc24:	9b29      	ldr	r3, [sp, #164]	; 0xa4
9001fc26:	141b      	asrs	r3, r3, #16
9001fc28:	f100 81d6 	bmi.w	9001ffd8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
9001fc2c:	f100 38ff 	add.w	r8, r0, #4294967295
9001fc30:	4543      	cmp	r3, r8
9001fc32:	f280 81d1 	bge.w	9001ffd8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
9001fc36:	f1bc 0f00 	cmp.w	ip, #0
9001fc3a:	f2c0 81cd 	blt.w	9001ffd8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
9001fc3e:	f10e 38ff 	add.w	r8, lr, #4294967295
9001fc42:	45c4      	cmp	ip, r8
9001fc44:	f280 81c8 	bge.w	9001ffd8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
9001fc48:	b200      	sxth	r0, r0
9001fc4a:	9c12      	ldr	r4, [sp, #72]	; 0x48
9001fc4c:	fb0c 3300 	mla	r3, ip, r0, r3
9001fc50:	eb04 0803 	add.w	r8, r4, r3
9001fc54:	5ce3      	ldrb	r3, [r4, r3]
9001fc56:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
9001fc5a:	ea4f 6e13 	mov.w	lr, r3, lsr #24
9001fc5e:	2a00      	cmp	r2, #0
9001fc60:	f000 81af 	beq.w	9001ffc2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
9001fc64:	f898 c001 	ldrb.w	ip, [r8, #1]
9001fc68:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
9001fc6c:	940e      	str	r4, [sp, #56]	; 0x38
9001fc6e:	0e24      	lsrs	r4, r4, #24
9001fc70:	9415      	str	r4, [sp, #84]	; 0x54
9001fc72:	b179      	cbz	r1, 9001fc94 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
9001fc74:	eb08 0c00 	add.w	ip, r8, r0
9001fc78:	f818 0000 	ldrb.w	r0, [r8, r0]
9001fc7c:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
9001fc80:	900a      	str	r0, [sp, #40]	; 0x28
9001fc82:	0e00      	lsrs	r0, r0, #24
9001fc84:	9013      	str	r0, [sp, #76]	; 0x4c
9001fc86:	f89c 0001 	ldrb.w	r0, [ip, #1]
9001fc8a:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
9001fc8e:	900f      	str	r0, [sp, #60]	; 0x3c
9001fc90:	0e00      	lsrs	r0, r0, #24
9001fc92:	9016      	str	r0, [sp, #88]	; 0x58
9001fc94:	b292      	uxth	r2, r2
9001fc96:	9815      	ldr	r0, [sp, #84]	; 0x54
9001fc98:	b289      	uxth	r1, r1
9001fc9a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
9001fc9c:	fb02 f901 	mul.w	r9, r2, r1
9001fca0:	0112      	lsls	r2, r2, #4
9001fca2:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
9001fca6:	eba2 0809 	sub.w	r8, r2, r9
9001fcaa:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
9001fcae:	b289      	uxth	r1, r1
9001fcb0:	fa1f f888 	uxth.w	r8, r8
9001fcb4:	1a52      	subs	r2, r2, r1
9001fcb6:	fb08 f000 	mul.w	r0, r8, r0
9001fcba:	b292      	uxth	r2, r2
9001fcbc:	fb02 000e 	mla	r0, r2, lr, r0
9001fcc0:	fb01 0004 	mla	r0, r1, r4, r0
9001fcc4:	9c16      	ldr	r4, [sp, #88]	; 0x58
9001fcc6:	fb09 0004 	mla	r0, r9, r4, r0
9001fcca:	f3c0 2007 	ubfx	r0, r0, #8, #8
9001fcce:	2800      	cmp	r0, #0
9001fcd0:	f000 80fa 	beq.w	9001fec8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
9001fcd4:	f1be 0fff 	cmp.w	lr, #255	; 0xff
9001fcd8:	d01b      	beq.n	9001fd12 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
9001fcda:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
9001fcde:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
9001fce2:	fb0e fa0a 	mul.w	sl, lr, sl
9001fce6:	fb0e fe03 	mul.w	lr, lr, r3
9001fcea:	ea4f 231a 	mov.w	r3, sl, lsr #8
9001fcee:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
9001fcf2:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
9001fcf6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
9001fcfa:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
9001fcfe:	4453      	add	r3, sl
9001fd00:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9001fd04:	0a1b      	lsrs	r3, r3, #8
9001fd06:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
9001fd0a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
9001fd0e:	ea43 030c 	orr.w	r3, r3, ip
9001fd12:	9c15      	ldr	r4, [sp, #84]	; 0x54
9001fd14:	2cff      	cmp	r4, #255	; 0xff
9001fd16:	d021      	beq.n	9001fd5c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
9001fd18:	9c0e      	ldr	r4, [sp, #56]	; 0x38
9001fd1a:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
9001fd1e:	9c15      	ldr	r4, [sp, #84]	; 0x54
9001fd20:	fb04 fb0b 	mul.w	fp, r4, fp
9001fd24:	9c0e      	ldr	r4, [sp, #56]	; 0x38
9001fd26:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
9001fd2a:	9c15      	ldr	r4, [sp, #84]	; 0x54
9001fd2c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
9001fd30:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
9001fd34:	fb04 fa0a 	mul.w	sl, r4, sl
9001fd38:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
9001fd3c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
9001fd40:	44de      	add	lr, fp
9001fd42:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
9001fd46:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
9001fd4a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9001fd4e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
9001fd52:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
9001fd56:	ea4e 040a 	orr.w	r4, lr, sl
9001fd5a:	940e      	str	r4, [sp, #56]	; 0x38
9001fd5c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
9001fd5e:	2cff      	cmp	r4, #255	; 0xff
9001fd60:	d021      	beq.n	9001fda6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
9001fd62:	9c0a      	ldr	r4, [sp, #40]	; 0x28
9001fd64:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
9001fd68:	9c13      	ldr	r4, [sp, #76]	; 0x4c
9001fd6a:	fb04 fb0b 	mul.w	fp, r4, fp
9001fd6e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
9001fd70:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
9001fd74:	9c13      	ldr	r4, [sp, #76]	; 0x4c
9001fd76:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
9001fd7a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
9001fd7e:	fb04 fa0a 	mul.w	sl, r4, sl
9001fd82:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
9001fd86:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
9001fd8a:	44de      	add	lr, fp
9001fd8c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
9001fd90:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
9001fd94:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9001fd98:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
9001fd9c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
9001fda0:	ea4e 040a 	orr.w	r4, lr, sl
9001fda4:	940a      	str	r4, [sp, #40]	; 0x28
9001fda6:	9c16      	ldr	r4, [sp, #88]	; 0x58
9001fda8:	2cff      	cmp	r4, #255	; 0xff
9001fdaa:	d021      	beq.n	9001fdf0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x280>
9001fdac:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
9001fdae:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
9001fdb2:	9c16      	ldr	r4, [sp, #88]	; 0x58
9001fdb4:	fb04 fb0b 	mul.w	fp, r4, fp
9001fdb8:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
9001fdba:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
9001fdbe:	9c16      	ldr	r4, [sp, #88]	; 0x58
9001fdc0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
9001fdc4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
9001fdc8:	fb04 fa0a 	mul.w	sl, r4, sl
9001fdcc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
9001fdd0:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
9001fdd4:	44de      	add	lr, fp
9001fdd6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
9001fdda:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
9001fdde:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9001fde2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
9001fde6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
9001fdea:	ea4e 040a 	orr.w	r4, lr, sl
9001fdee:	940f      	str	r4, [sp, #60]	; 0x3c
9001fdf0:	9c0e      	ldr	r4, [sp, #56]	; 0x38
9001fdf2:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
9001fdf6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
9001fdfa:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
9001fdfe:	9c0a      	ldr	r4, [sp, #40]	; 0x28
9001fe00:	fb08 fc0c 	mul.w	ip, r8, ip
9001fe04:	fb02 cc0e 	mla	ip, r2, lr, ip
9001fe08:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
9001fe0c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
9001fe0e:	fb01 cc0e 	mla	ip, r1, lr, ip
9001fe12:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
9001fe16:	9c0e      	ldr	r4, [sp, #56]	; 0x38
9001fe18:	fb09 cc0e 	mla	ip, r9, lr, ip
9001fe1c:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
9001fe20:	9c0d      	ldr	r4, [sp, #52]	; 0x34
9001fe22:	fb08 f80e 	mul.w	r8, r8, lr
9001fe26:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9001fe2a:	fb02 8303 	mla	r3, r2, r3, r8
9001fe2e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
9001fe30:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
9001fe34:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
9001fe38:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001fe3a:	fb01 330a 	mla	r3, r1, sl, r3
9001fe3e:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
9001fe42:	9a0d      	ldr	r2, [sp, #52]	; 0x34
9001fe44:	fb09 3901 	mla	r9, r9, r1, r3
9001fe48:	883b      	ldrh	r3, [r7, #0]
9001fe4a:	4342      	muls	r2, r0
9001fe4c:	ea4f 2919 	mov.w	r9, r9, lsr #8
9001fe50:	1c50      	adds	r0, r2, #1
9001fe52:	1219      	asrs	r1, r3, #8
9001fe54:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
9001fe58:	eb00 2012 	add.w	r0, r0, r2, lsr #8
9001fe5c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
9001fe60:	ea4c 0c09 	orr.w	ip, ip, r9
9001fe64:	ea6f 2010 	mvn.w	r0, r0, lsr #8
9001fe68:	ea4f 421c 	mov.w	r2, ip, lsr #16
9001fe6c:	f3cc 2e07 	ubfx	lr, ip, #8, #8
9001fe70:	b2c0      	uxtb	r0, r0
9001fe72:	fb12 f204 	smulbb	r2, r2, r4
9001fe76:	fa5f fc8c 	uxtb.w	ip, ip
9001fe7a:	fb1e fe04 	smulbb	lr, lr, r4
9001fe7e:	fb01 2100 	mla	r1, r1, r0, r2
9001fe82:	10da      	asrs	r2, r3, #3
9001fe84:	fb1c fc04 	smulbb	ip, ip, r4
9001fe88:	00db      	lsls	r3, r3, #3
9001fe8a:	b289      	uxth	r1, r1
9001fe8c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
9001fe90:	b2db      	uxtb	r3, r3
9001fe92:	fb02 e200 	mla	r2, r2, r0, lr
9001fe96:	fb03 c300 	mla	r3, r3, r0, ip
9001fe9a:	b292      	uxth	r2, r2
9001fe9c:	fa1f fc83 	uxth.w	ip, r3
9001fea0:	1c4b      	adds	r3, r1, #1
9001fea2:	eb03 2111 	add.w	r1, r3, r1, lsr #8
9001fea6:	f10c 0301 	add.w	r3, ip, #1
9001feaa:	eb03 231c 	add.w	r3, r3, ip, lsr #8
9001feae:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
9001feb2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
9001feb6:	430b      	orrs	r3, r1
9001feb8:	1c51      	adds	r1, r2, #1
9001feba:	eb01 2212 	add.w	r2, r1, r2, lsr #8
9001febe:	0952      	lsrs	r2, r2, #5
9001fec0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001fec4:	4313      	orrs	r3, r2
9001fec6:	803b      	strh	r3, [r7, #0]
9001fec8:	9b2b      	ldr	r3, [sp, #172]	; 0xac
9001feca:	3702      	adds	r7, #2
9001fecc:	9a29      	ldr	r2, [sp, #164]	; 0xa4
9001fece:	441a      	add	r2, r3
9001fed0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
9001fed2:	441d      	add	r5, r3
9001fed4:	9b1a      	ldr	r3, [sp, #104]	; 0x68
9001fed6:	9229      	str	r2, [sp, #164]	; 0xa4
9001fed8:	3b01      	subs	r3, #1
9001feda:	931a      	str	r3, [sp, #104]	; 0x68
9001fedc:	e694      	b.n	9001fc08 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001fede:	9b2b      	ldr	r3, [sp, #172]	; 0xac
9001fee0:	9c29      	ldr	r4, [sp, #164]	; 0xa4
9001fee2:	441c      	add	r4, r3
9001fee4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
9001fee6:	441d      	add	r5, r3
9001fee8:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001feea:	9429      	str	r4, [sp, #164]	; 0xa4
9001feec:	3b01      	subs	r3, #1
9001feee:	9309      	str	r3, [sp, #36]	; 0x24
9001fef0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9001fef2:	3302      	adds	r3, #2
9001fef4:	930c      	str	r3, [sp, #48]	; 0x30
9001fef6:	e667      	b.n	9001fbc8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
9001fef8:	d024      	beq.n	9001ff44 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d4>
9001fefa:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001fefc:	982b      	ldr	r0, [sp, #172]	; 0xac
9001fefe:	3b01      	subs	r3, #1
9001ff00:	9c29      	ldr	r4, [sp, #164]	; 0xa4
9001ff02:	fb00 4003 	mla	r0, r0, r3, r4
9001ff06:	1400      	asrs	r0, r0, #16
9001ff08:	f53f ae7b 	bmi.w	9001fc02 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001ff0c:	3901      	subs	r1, #1
9001ff0e:	4288      	cmp	r0, r1
9001ff10:	f6bf ae77 	bge.w	9001fc02 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001ff14:	992c      	ldr	r1, [sp, #176]	; 0xb0
9001ff16:	fb01 5303 	mla	r3, r1, r3, r5
9001ff1a:	141b      	asrs	r3, r3, #16
9001ff1c:	f53f ae71 	bmi.w	9001fc02 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001ff20:	3a01      	subs	r2, #1
9001ff22:	4293      	cmp	r3, r2
9001ff24:	f6bf ae6d 	bge.w	9001fc02 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001ff28:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
9001ff2c:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
9001ff30:	f1bb 0f00 	cmp.w	fp, #0
9001ff34:	dc70      	bgt.n	90020018 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>
9001ff36:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001ff38:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
9001ff3c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9001ff3e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
9001ff42:	930c      	str	r3, [sp, #48]	; 0x30
9001ff44:	9b19      	ldr	r3, [sp, #100]	; 0x64
9001ff46:	2b00      	cmp	r3, #0
9001ff48:	f340 81be 	ble.w	900202c8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
9001ff4c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
9001ff50:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9001ff52:	ee30 0a04 	vadd.f32	s0, s0, s8
9001ff56:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001ff5a:	eef0 6a62 	vmov.f32	s13, s5
9001ff5e:	eec7 7a00 	vdiv.f32	s15, s14, s0
9001ff62:	ee31 1a05 	vadd.f32	s2, s2, s10
9001ff66:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001ff6a:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
9001ff6e:	eef0 6a43 	vmov.f32	s13, s6
9001ff72:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001ff76:	ee16 5a90 	vmov	r5, s13
9001ff7a:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001ff7e:	ee61 7a27 	vmul.f32	s15, s2, s15
9001ff82:	ee77 2a62 	vsub.f32	s5, s14, s5
9001ff86:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001ff8a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001ff8e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001ff92:	ee12 2a90 	vmov	r2, s5
9001ff96:	eef0 2a47 	vmov.f32	s5, s14
9001ff9a:	fb92 f3f3 	sdiv	r3, r2, r3
9001ff9e:	ee13 2a10 	vmov	r2, s6
9001ffa2:	932b      	str	r3, [sp, #172]	; 0xac
9001ffa4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9001ffa6:	eeb0 3a67 	vmov.f32	s6, s15
9001ffaa:	fb92 f3f3 	sdiv	r3, r2, r3
9001ffae:	932c      	str	r3, [sp, #176]	; 0xb0
9001ffb0:	9b19      	ldr	r3, [sp, #100]	; 0x64
9001ffb2:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
9001ffb4:	3b01      	subs	r3, #1
9001ffb6:	9319      	str	r3, [sp, #100]	; 0x64
9001ffb8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9001ffba:	bf08      	it	eq
9001ffbc:	4613      	moveq	r3, r2
9001ffbe:	9309      	str	r3, [sp, #36]	; 0x24
9001ffc0:	e5f4      	b.n	9001fbac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9001ffc2:	2900      	cmp	r1, #0
9001ffc4:	f43f ae66 	beq.w	9001fc94 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
9001ffc8:	f818 0000 	ldrb.w	r0, [r8, r0]
9001ffcc:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
9001ffd0:	900a      	str	r0, [sp, #40]	; 0x28
9001ffd2:	0e00      	lsrs	r0, r0, #24
9001ffd4:	9013      	str	r0, [sp, #76]	; 0x4c
9001ffd6:	e65d      	b.n	9001fc94 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
9001ffd8:	f113 0801 	adds.w	r8, r3, #1
9001ffdc:	f53f af74 	bmi.w	9001fec8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
9001ffe0:	4540      	cmp	r0, r8
9001ffe2:	f6ff af71 	blt.w	9001fec8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
9001ffe6:	f11c 0801 	adds.w	r8, ip, #1
9001ffea:	f53f af6d 	bmi.w	9001fec8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
9001ffee:	45c6      	cmp	lr, r8
9001fff0:	f6ff af6a 	blt.w	9001fec8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
9001fff4:	9c1c      	ldr	r4, [sp, #112]	; 0x70
9001fff6:	b200      	sxth	r0, r0
9001fff8:	9302      	str	r3, [sp, #8]
9001fffa:	fa0f f38e 	sxth.w	r3, lr
9001fffe:	9000      	str	r0, [sp, #0]
90020000:	9301      	str	r3, [sp, #4]
90020002:	4633      	mov	r3, r6
90020004:	981d      	ldr	r0, [sp, #116]	; 0x74
90020006:	e9cd 1405 	strd	r1, r4, [sp, #20]
9002000a:	e9cd c203 	strd	ip, r2, [sp, #12]
9002000e:	4639      	mov	r1, r7
90020010:	9a12      	ldr	r2, [sp, #72]	; 0x48
90020012:	f7ff fc63 	bl	9001f8dc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
90020016:	e757      	b.n	9001fec8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90020018:	9b29      	ldr	r3, [sp, #164]	; 0xa4
9002001a:	f3c5 3003 	ubfx	r0, r5, #12, #4
9002001e:	9c29      	ldr	r4, [sp, #164]	; 0xa4
90020020:	f3c3 3203 	ubfx	r2, r3, #12, #4
90020024:	9b30      	ldr	r3, [sp, #192]	; 0xc0
90020026:	1427      	asrs	r7, r4, #16
90020028:	9c12      	ldr	r4, [sp, #72]	; 0x48
9002002a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002002e:	142b      	asrs	r3, r5, #16
90020030:	fb01 7303 	mla	r3, r1, r3, r7
90020034:	18e7      	adds	r7, r4, r3
90020036:	5ce3      	ldrb	r3, [r4, r3]
90020038:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
9002003c:	ea4f 6c13 	mov.w	ip, r3, lsr #24
90020040:	2a00      	cmp	r2, #0
90020042:	f000 8137 	beq.w	900202b4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x744>
90020046:	f897 e001 	ldrb.w	lr, [r7, #1]
9002004a:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
9002004e:	9410      	str	r4, [sp, #64]	; 0x40
90020050:	0e24      	lsrs	r4, r4, #24
90020052:	9417      	str	r4, [sp, #92]	; 0x5c
90020054:	b170      	cbz	r0, 90020074 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
90020056:	eb07 0e01 	add.w	lr, r7, r1
9002005a:	5c79      	ldrb	r1, [r7, r1]
9002005c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90020060:	910b      	str	r1, [sp, #44]	; 0x2c
90020062:	0e09      	lsrs	r1, r1, #24
90020064:	9114      	str	r1, [sp, #80]	; 0x50
90020066:	f89e 1001 	ldrb.w	r1, [lr, #1]
9002006a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
9002006e:	9111      	str	r1, [sp, #68]	; 0x44
90020070:	0e09      	lsrs	r1, r1, #24
90020072:	9118      	str	r1, [sp, #96]	; 0x60
90020074:	b292      	uxth	r2, r2
90020076:	9917      	ldr	r1, [sp, #92]	; 0x5c
90020078:	b280      	uxth	r0, r0
9002007a:	9c14      	ldr	r4, [sp, #80]	; 0x50
9002007c:	fb02 f800 	mul.w	r8, r2, r0
90020080:	0112      	lsls	r2, r2, #4
90020082:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
90020086:	eba2 0e08 	sub.w	lr, r2, r8
9002008a:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
9002008e:	b280      	uxth	r0, r0
90020090:	fa1f fe8e 	uxth.w	lr, lr
90020094:	1a12      	subs	r2, r2, r0
90020096:	fb0e f101 	mul.w	r1, lr, r1
9002009a:	b292      	uxth	r2, r2
9002009c:	fb02 110c 	mla	r1, r2, ip, r1
900200a0:	fb00 1104 	mla	r1, r0, r4, r1
900200a4:	9c18      	ldr	r4, [sp, #96]	; 0x60
900200a6:	fb08 1104 	mla	r1, r8, r4, r1
900200aa:	f3c1 2107 	ubfx	r1, r1, #8, #8
900200ae:	2900      	cmp	r1, #0
900200b0:	f000 80f5 	beq.w	9002029e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72e>
900200b4:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
900200b8:	d019      	beq.n	900200ee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x57e>
900200ba:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
900200be:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
900200c2:	fb0c fa0a 	mul.w	sl, ip, sl
900200c6:	fb0c fc03 	mul.w	ip, ip, r3
900200ca:	ea4f 231a 	mov.w	r3, sl, lsr #8
900200ce:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
900200d2:	f50c 7780 	add.w	r7, ip, #256	; 0x100
900200d6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
900200da:	eb07 271c 	add.w	r7, r7, ip, lsr #8
900200de:	4453      	add	r3, sl
900200e0:	0a3f      	lsrs	r7, r7, #8
900200e2:	0a1b      	lsrs	r3, r3, #8
900200e4:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
900200e8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
900200ec:	433b      	orrs	r3, r7
900200ee:	9c17      	ldr	r4, [sp, #92]	; 0x5c
900200f0:	2cff      	cmp	r4, #255	; 0xff
900200f2:	d020      	beq.n	90020136 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c6>
900200f4:	9c10      	ldr	r4, [sp, #64]	; 0x40
900200f6:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
900200fa:	9c17      	ldr	r4, [sp, #92]	; 0x5c
900200fc:	4367      	muls	r7, r4
900200fe:	9c10      	ldr	r4, [sp, #64]	; 0x40
90020100:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90020104:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90020108:	9c17      	ldr	r4, [sp, #92]	; 0x5c
9002010a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
9002010e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90020112:	fb04 fa0a 	mul.w	sl, r4, sl
90020116:	44bc      	add	ip, r7
90020118:	f50a 7780 	add.w	r7, sl, #256	; 0x100
9002011c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90020120:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90020124:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90020128:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002012c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90020130:	ea4c 040a 	orr.w	r4, ip, sl
90020134:	9410      	str	r4, [sp, #64]	; 0x40
90020136:	9c14      	ldr	r4, [sp, #80]	; 0x50
90020138:	2cff      	cmp	r4, #255	; 0xff
9002013a:	d020      	beq.n	9002017e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60e>
9002013c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
9002013e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
90020142:	9c14      	ldr	r4, [sp, #80]	; 0x50
90020144:	4367      	muls	r7, r4
90020146:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90020148:	ea4f 2c17 	mov.w	ip, r7, lsr #8
9002014c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90020150:	9c14      	ldr	r4, [sp, #80]	; 0x50
90020152:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
90020156:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
9002015a:	fb04 fa0a 	mul.w	sl, r4, sl
9002015e:	44bc      	add	ip, r7
90020160:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90020164:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90020168:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
9002016c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90020170:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90020174:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90020178:	ea4c 040a 	orr.w	r4, ip, sl
9002017c:	940b      	str	r4, [sp, #44]	; 0x2c
9002017e:	9c18      	ldr	r4, [sp, #96]	; 0x60
90020180:	2cff      	cmp	r4, #255	; 0xff
90020182:	d020      	beq.n	900201c6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x656>
90020184:	9c11      	ldr	r4, [sp, #68]	; 0x44
90020186:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
9002018a:	9c18      	ldr	r4, [sp, #96]	; 0x60
9002018c:	4367      	muls	r7, r4
9002018e:	9c11      	ldr	r4, [sp, #68]	; 0x44
90020190:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90020194:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90020198:	9c18      	ldr	r4, [sp, #96]	; 0x60
9002019a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
9002019e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900201a2:	fb04 fa0a 	mul.w	sl, r4, sl
900201a6:	44bc      	add	ip, r7
900201a8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
900201ac:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900201b0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
900201b4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900201b8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900201bc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
900201c0:	ea4c 040a 	orr.w	r4, ip, sl
900201c4:	9411      	str	r4, [sp, #68]	; 0x44
900201c6:	9c10      	ldr	r4, [sp, #64]	; 0x40
900201c8:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
900201cc:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
900201d0:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
900201d4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
900201d6:	fb0e f707 	mul.w	r7, lr, r7
900201da:	fb02 770c 	mla	r7, r2, ip, r7
900201de:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
900201e2:	9c11      	ldr	r4, [sp, #68]	; 0x44
900201e4:	fb00 770c 	mla	r7, r0, ip, r7
900201e8:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
900201ec:	9c10      	ldr	r4, [sp, #64]	; 0x40
900201ee:	fb08 770c 	mla	r7, r8, ip, r7
900201f2:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
900201f6:	9c0d      	ldr	r4, [sp, #52]	; 0x34
900201f8:	fb0e fe0c 	mul.w	lr, lr, ip
900201fc:	0a3f      	lsrs	r7, r7, #8
900201fe:	fb02 e303 	mla	r3, r2, r3, lr
90020202:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
90020204:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
90020208:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
9002020c:	9a11      	ldr	r2, [sp, #68]	; 0x44
9002020e:	fb00 330a 	mla	r3, r0, sl, r3
90020212:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
90020216:	f8b9 0000 	ldrh.w	r0, [r9]
9002021a:	fb08 3c0c 	mla	ip, r8, ip, r3
9002021e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90020220:	1202      	asrs	r2, r0, #8
90020222:	434b      	muls	r3, r1
90020224:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90020228:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
9002022c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
90020230:	1c59      	adds	r1, r3, #1
90020232:	ea47 070c 	orr.w	r7, r7, ip
90020236:	eb01 2113 	add.w	r1, r1, r3, lsr #8
9002023a:	0c3b      	lsrs	r3, r7, #16
9002023c:	ea6f 2111 	mvn.w	r1, r1, lsr #8
90020240:	f3c7 2c07 	ubfx	ip, r7, #8, #8
90020244:	b2ff      	uxtb	r7, r7
90020246:	fb13 f304 	smulbb	r3, r3, r4
9002024a:	b2c9      	uxtb	r1, r1
9002024c:	fb1c fc04 	smulbb	ip, ip, r4
90020250:	fb02 3201 	mla	r2, r2, r1, r3
90020254:	10c3      	asrs	r3, r0, #3
90020256:	fb17 f704 	smulbb	r7, r7, r4
9002025a:	00c0      	lsls	r0, r0, #3
9002025c:	b292      	uxth	r2, r2
9002025e:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
90020262:	b2c0      	uxtb	r0, r0
90020264:	fb03 c301 	mla	r3, r3, r1, ip
90020268:	f102 0c01 	add.w	ip, r2, #1
9002026c:	fb00 7001 	mla	r0, r0, r1, r7
90020270:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
90020274:	b280      	uxth	r0, r0
90020276:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
9002027a:	b29b      	uxth	r3, r3
9002027c:	1c42      	adds	r2, r0, #1
9002027e:	eb02 2210 	add.w	r2, r2, r0, lsr #8
90020282:	f3c2 22c4 	ubfx	r2, r2, #11, #5
90020286:	ea42 020c 	orr.w	r2, r2, ip
9002028a:	f103 0c01 	add.w	ip, r3, #1
9002028e:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
90020292:	095b      	lsrs	r3, r3, #5
90020294:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90020298:	431a      	orrs	r2, r3
9002029a:	f8a9 2000 	strh.w	r2, [r9]
9002029e:	9b2b      	ldr	r3, [sp, #172]	; 0xac
900202a0:	f109 0902 	add.w	r9, r9, #2
900202a4:	9a29      	ldr	r2, [sp, #164]	; 0xa4
900202a6:	f10b 3bff 	add.w	fp, fp, #4294967295
900202aa:	441a      	add	r2, r3
900202ac:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
900202ae:	9229      	str	r2, [sp, #164]	; 0xa4
900202b0:	441d      	add	r5, r3
900202b2:	e63d      	b.n	9001ff30 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
900202b4:	2800      	cmp	r0, #0
900202b6:	f43f aedd 	beq.w	90020074 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
900202ba:	5c79      	ldrb	r1, [r7, r1]
900202bc:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
900202c0:	910b      	str	r1, [sp, #44]	; 0x2c
900202c2:	0e09      	lsrs	r1, r1, #24
900202c4:	9114      	str	r1, [sp, #80]	; 0x50
900202c6:	e6d5      	b.n	90020074 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
900202c8:	b01f      	add	sp, #124	; 0x7c
900202ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900202ce <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
900202ce:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900202d2:	b089      	sub	sp, #36	; 0x24
900202d4:	9101      	str	r1, [sp, #4]
900202d6:	9801      	ldr	r0, [sp, #4]
900202d8:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
900202dc:	8800      	ldrh	r0, [r0, #0]
900202de:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
900202e2:	1206      	asrs	r6, r0, #8
900202e4:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
900202e8:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
900202ec:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
900202f0:	9602      	str	r6, [sp, #8]
900202f2:	10c6      	asrs	r6, r0, #3
900202f4:	00c0      	lsls	r0, r0, #3
900202f6:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
900202fa:	b2c0      	uxtb	r0, r0
900202fc:	9603      	str	r6, [sp, #12]
900202fe:	9004      	str	r0, [sp, #16]
90020300:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
90020304:	fb07 100c 	mla	r0, r7, ip, r1
90020308:	2f00      	cmp	r7, #0
9002030a:	eb02 0e00 	add.w	lr, r2, r0
9002030e:	f2c0 810a 	blt.w	90020526 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
90020312:	45b8      	cmp	r8, r7
90020314:	f340 8107 	ble.w	90020526 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
90020318:	2900      	cmp	r1, #0
9002031a:	f2c0 8102 	blt.w	90020522 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
9002031e:	458c      	cmp	ip, r1
90020320:	f340 80ff 	ble.w	90020522 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
90020324:	5c12      	ldrb	r2, [r2, r0]
90020326:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
9002032a:	1c4a      	adds	r2, r1, #1
9002032c:	f100 80fe 	bmi.w	9002052c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
90020330:	4594      	cmp	ip, r2
90020332:	f340 80fb 	ble.w	9002052c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
90020336:	2d00      	cmp	r5, #0
90020338:	f000 80fa 	beq.w	90020530 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
9002033c:	f89e 2001 	ldrb.w	r2, [lr, #1]
90020340:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
90020344:	3701      	adds	r7, #1
90020346:	f100 80f7 	bmi.w	90020538 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
9002034a:	45b8      	cmp	r8, r7
9002034c:	f340 80f4 	ble.w	90020538 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
90020350:	2c00      	cmp	r4, #0
90020352:	f000 80f4 	beq.w	9002053e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
90020356:	2900      	cmp	r1, #0
90020358:	eb0e 020c 	add.w	r2, lr, ip
9002035c:	f2c0 80ea 	blt.w	90020534 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
90020360:	458c      	cmp	ip, r1
90020362:	f340 80e7 	ble.w	90020534 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
90020366:	f81e 700c 	ldrb.w	r7, [lr, ip]
9002036a:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
9002036e:	3101      	adds	r1, #1
90020370:	f100 80e8 	bmi.w	90020544 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
90020374:	458c      	cmp	ip, r1
90020376:	f340 80e5 	ble.w	90020544 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
9002037a:	2d00      	cmp	r5, #0
9002037c:	f000 80e4 	beq.w	90020548 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
90020380:	7852      	ldrb	r2, [r2, #1]
90020382:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
90020386:	0e0b      	lsrs	r3, r1, #24
90020388:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
9002038c:	ea4f 6a10 	mov.w	sl, r0, lsr #24
90020390:	9300      	str	r3, [sp, #0]
90020392:	b2a4      	uxth	r4, r4
90020394:	b2ab      	uxth	r3, r5
90020396:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
9002039a:	ea4f 6b16 	mov.w	fp, r6, lsr #24
9002039e:	fb03 f904 	mul.w	r9, r3, r4
900203a2:	011b      	lsls	r3, r3, #4
900203a4:	fb0a f505 	mul.w	r5, sl, r5
900203a8:	ea4f 6817 	mov.w	r8, r7, lsr #24
900203ac:	eba3 0e09 	sub.w	lr, r3, r9
900203b0:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
900203b4:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
900203b8:	0a28      	lsrs	r0, r5, #8
900203ba:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
900203be:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
900203c2:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
900203c6:	fb0a f303 	mul.w	r3, sl, r3
900203ca:	fb08 f707 	mul.w	r7, r8, r7
900203ce:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
900203d2:	4405      	add	r5, r0
900203d4:	fb08 fc0c 	mul.w	ip, r8, ip
900203d8:	b2a4      	uxth	r4, r4
900203da:	0a2d      	lsrs	r5, r5, #8
900203dc:	fa1f fe8e 	uxth.w	lr, lr
900203e0:	1b12      	subs	r2, r2, r4
900203e2:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
900203e6:	b292      	uxth	r2, r2
900203e8:	9005      	str	r0, [sp, #20]
900203ea:	f503 7080 	add.w	r0, r3, #256	; 0x100
900203ee:	eb00 2313 	add.w	r3, r0, r3, lsr #8
900203f2:	ea4f 201c 	mov.w	r0, ip, lsr #8
900203f6:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
900203fa:	0a1b      	lsrs	r3, r3, #8
900203fc:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
90020400:	9306      	str	r3, [sp, #24]
90020402:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
90020406:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
9002040a:	4460      	add	r0, ip
9002040c:	fb0b f303 	mul.w	r3, fp, r3
90020410:	fb0b f606 	mul.w	r6, fp, r6
90020414:	0a00      	lsrs	r0, r0, #8
90020416:	0a1d      	lsrs	r5, r3, #8
90020418:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
9002041c:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
90020420:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
90020424:	441d      	add	r5, r3
90020426:	f506 7380 	add.w	r3, r6, #256	; 0x100
9002042a:	eb03 2616 	add.w	r6, r3, r6, lsr #8
9002042e:	f507 7380 	add.w	r3, r7, #256	; 0x100
90020432:	0a2d      	lsrs	r5, r5, #8
90020434:	eb03 2317 	add.w	r3, r3, r7, lsr #8
90020438:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
9002043c:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
90020440:	0a36      	lsrs	r6, r6, #8
90020442:	0a1b      	lsrs	r3, r3, #8
90020444:	fb05 f50e 	mul.w	r5, r5, lr
90020448:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
9002044c:	9307      	str	r3, [sp, #28]
9002044e:	0e0b      	lsrs	r3, r1, #24
90020450:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
90020454:	fb0e f606 	mul.w	r6, lr, r6
90020458:	435f      	muls	r7, r3
9002045a:	4359      	muls	r1, r3
9002045c:	9b05      	ldr	r3, [sp, #20]
9002045e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90020462:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
90020466:	fb03 5502 	mla	r5, r3, r2, r5
9002046a:	9b06      	ldr	r3, [sp, #24]
9002046c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90020470:	fb0e fe0b 	mul.w	lr, lr, fp
90020474:	44bc      	add	ip, r7
90020476:	f501 7780 	add.w	r7, r1, #256	; 0x100
9002047a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002047e:	eb07 2111 	add.w	r1, r7, r1, lsr #8
90020482:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90020486:	0a09      	lsrs	r1, r1, #8
90020488:	fb0c 5509 	mla	r5, ip, r9, r5
9002048c:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
90020490:	fb00 5504 	mla	r5, r0, r4, r5
90020494:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
90020498:	9b07      	ldr	r3, [sp, #28]
9002049a:	fb02 6000 	mla	r0, r2, r0, r6
9002049e:	0a2d      	lsrs	r5, r5, #8
900204a0:	fb02 e20a 	mla	r2, r2, sl, lr
900204a4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
900204a8:	fb09 0001 	mla	r0, r9, r1, r0
900204ac:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
900204b0:	fb04 0003 	mla	r0, r4, r3, r0
900204b4:	9b00      	ldr	r3, [sp, #0]
900204b6:	fb04 2408 	mla	r4, r4, r8, r2
900204ba:	9a04      	ldr	r2, [sp, #16]
900204bc:	0a00      	lsrs	r0, r0, #8
900204be:	fb09 4903 	mla	r9, r9, r3, r4
900204c2:	9b02      	ldr	r3, [sp, #8]
900204c4:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
900204c8:	ea6f 2929 	mvn.w	r9, r9, asr #8
900204cc:	4305      	orrs	r5, r0
900204ce:	fa5f f989 	uxtb.w	r9, r9
900204d2:	fb03 f109 	mul.w	r1, r3, r9
900204d6:	9b03      	ldr	r3, [sp, #12]
900204d8:	fb03 f309 	mul.w	r3, r3, r9
900204dc:	fb02 f909 	mul.w	r9, r2, r9
900204e0:	1c4a      	adds	r2, r1, #1
900204e2:	1c58      	adds	r0, r3, #1
900204e4:	eb02 2111 	add.w	r1, r2, r1, lsr #8
900204e8:	eb00 2013 	add.w	r0, r0, r3, lsr #8
900204ec:	0c2a      	lsrs	r2, r5, #16
900204ee:	0a2b      	lsrs	r3, r5, #8
900204f0:	eb02 2211 	add.w	r2, r2, r1, lsr #8
900204f4:	eb03 2310 	add.w	r3, r3, r0, lsr #8
900204f8:	0212      	lsls	r2, r2, #8
900204fa:	00db      	lsls	r3, r3, #3
900204fc:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
90020500:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90020504:	4313      	orrs	r3, r2
90020506:	f109 0201 	add.w	r2, r9, #1
9002050a:	eb02 2919 	add.w	r9, r2, r9, lsr #8
9002050e:	eb05 2519 	add.w	r5, r5, r9, lsr #8
90020512:	f3c5 05c4 	ubfx	r5, r5, #3, #5
90020516:	431d      	orrs	r5, r3
90020518:	9b01      	ldr	r3, [sp, #4]
9002051a:	801d      	strh	r5, [r3, #0]
9002051c:	b009      	add	sp, #36	; 0x24
9002051e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90020522:	2000      	movs	r0, #0
90020524:	e701      	b.n	9002032a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
90020526:	2600      	movs	r6, #0
90020528:	4630      	mov	r0, r6
9002052a:	e70b      	b.n	90020344 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
9002052c:	2600      	movs	r6, #0
9002052e:	e709      	b.n	90020344 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
90020530:	462e      	mov	r6, r5
90020532:	e707      	b.n	90020344 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
90020534:	2700      	movs	r7, #0
90020536:	e71a      	b.n	9002036e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
90020538:	2100      	movs	r1, #0
9002053a:	460f      	mov	r7, r1
9002053c:	e723      	b.n	90020386 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
9002053e:	4621      	mov	r1, r4
90020540:	4627      	mov	r7, r4
90020542:	e720      	b.n	90020386 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
90020544:	2100      	movs	r1, #0
90020546:	e71e      	b.n	90020386 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
90020548:	4629      	mov	r1, r5
9002054a:	e71c      	b.n	90020386 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

9002054c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9002054c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020550:	b09b      	sub	sp, #108	; 0x6c
90020552:	9218      	str	r2, [sp, #96]	; 0x60
90020554:	9a29      	ldr	r2, [sp, #164]	; 0xa4
90020556:	9019      	str	r0, [sp, #100]	; 0x64
90020558:	9116      	str	r1, [sp, #88]	; 0x58
9002055a:	6850      	ldr	r0, [r2, #4]
9002055c:	9307      	str	r3, [sp, #28]
9002055e:	6812      	ldr	r2, [r2, #0]
90020560:	9d26      	ldr	r5, [sp, #152]	; 0x98
90020562:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
90020566:	fb00 1303 	mla	r3, r0, r3, r1
9002056a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9002056e:	930a      	str	r3, [sp, #40]	; 0x28
90020570:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90020572:	681b      	ldr	r3, [r3, #0]
90020574:	930f      	str	r3, [sp, #60]	; 0x3c
90020576:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90020578:	685e      	ldr	r6, [r3, #4]
9002057a:	3604      	adds	r6, #4
9002057c:	9b16      	ldr	r3, [sp, #88]	; 0x58
9002057e:	2b00      	cmp	r3, #0
90020580:	dc03      	bgt.n	9002058a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
90020582:	9b18      	ldr	r3, [sp, #96]	; 0x60
90020584:	2b00      	cmp	r3, #0
90020586:	f340 8373 	ble.w	90020c70 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
9002058a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
9002058c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90020590:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90020594:	1e48      	subs	r0, r1, #1
90020596:	1e57      	subs	r7, r2, #1
90020598:	9b07      	ldr	r3, [sp, #28]
9002059a:	2b00      	cmp	r3, #0
9002059c:	f340 818f 	ble.w	900208be <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
900205a0:	9c25      	ldr	r4, [sp, #148]	; 0x94
900205a2:	142b      	asrs	r3, r5, #16
900205a4:	ea5f 4c24 	movs.w	ip, r4, asr #16
900205a8:	d406      	bmi.n	900205b8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
900205aa:	4584      	cmp	ip, r0
900205ac:	da04      	bge.n	900205b8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
900205ae:	2b00      	cmp	r3, #0
900205b0:	db02      	blt.n	900205b8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
900205b2:	42bb      	cmp	r3, r7
900205b4:	f2c0 8184 	blt.w	900208c0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
900205b8:	f11c 0c01 	adds.w	ip, ip, #1
900205bc:	f100 8172 	bmi.w	900208a4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900205c0:	4561      	cmp	r1, ip
900205c2:	f2c0 816f 	blt.w	900208a4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900205c6:	3301      	adds	r3, #1
900205c8:	f100 816c 	bmi.w	900208a4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900205cc:	429a      	cmp	r2, r3
900205ce:	f2c0 8169 	blt.w	900208a4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900205d2:	9b07      	ldr	r3, [sp, #28]
900205d4:	9f0a      	ldr	r7, [sp, #40]	; 0x28
900205d6:	9317      	str	r3, [sp, #92]	; 0x5c
900205d8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
900205da:	2b00      	cmp	r3, #0
900205dc:	f340 818e 	ble.w	900208fc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
900205e0:	9b25      	ldr	r3, [sp, #148]	; 0x94
900205e2:	ea4f 4c25 	mov.w	ip, r5, asr #16
900205e6:	f3c5 3003 	ubfx	r0, r5, #12, #4
900205ea:	f3c3 3203 	ubfx	r2, r3, #12, #4
900205ee:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
900205f0:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
900205f4:	9b25      	ldr	r3, [sp, #148]	; 0x94
900205f6:	141b      	asrs	r3, r3, #16
900205f8:	f100 81d1 	bmi.w	9002099e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
900205fc:	f101 38ff 	add.w	r8, r1, #4294967295
90020600:	4543      	cmp	r3, r8
90020602:	f280 81cc 	bge.w	9002099e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90020606:	f1bc 0f00 	cmp.w	ip, #0
9002060a:	f2c0 81c8 	blt.w	9002099e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
9002060e:	f10e 38ff 	add.w	r8, lr, #4294967295
90020612:	45c4      	cmp	ip, r8
90020614:	f280 81c3 	bge.w	9002099e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90020618:	b209      	sxth	r1, r1
9002061a:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
9002061c:	fb0c 3301 	mla	r3, ip, r1, r3
90020620:	eb04 0803 	add.w	r8, r4, r3
90020624:	5ce3      	ldrb	r3, [r4, r3]
90020626:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
9002062a:	ea4f 6e13 	mov.w	lr, r3, lsr #24
9002062e:	2a00      	cmp	r2, #0
90020630:	f000 81aa 	beq.w	90020988 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43c>
90020634:	f898 c001 	ldrb.w	ip, [r8, #1]
90020638:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
9002063c:	940b      	str	r4, [sp, #44]	; 0x2c
9002063e:	0e24      	lsrs	r4, r4, #24
90020640:	9412      	str	r4, [sp, #72]	; 0x48
90020642:	b178      	cbz	r0, 90020664 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
90020644:	eb08 0c01 	add.w	ip, r8, r1
90020648:	f818 1001 	ldrb.w	r1, [r8, r1]
9002064c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90020650:	9108      	str	r1, [sp, #32]
90020652:	0e09      	lsrs	r1, r1, #24
90020654:	9110      	str	r1, [sp, #64]	; 0x40
90020656:	f89c 1001 	ldrb.w	r1, [ip, #1]
9002065a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
9002065e:	910c      	str	r1, [sp, #48]	; 0x30
90020660:	0e09      	lsrs	r1, r1, #24
90020662:	9113      	str	r1, [sp, #76]	; 0x4c
90020664:	b292      	uxth	r2, r2
90020666:	9912      	ldr	r1, [sp, #72]	; 0x48
90020668:	b280      	uxth	r0, r0
9002066a:	9c10      	ldr	r4, [sp, #64]	; 0x40
9002066c:	fb02 f900 	mul.w	r9, r2, r0
90020670:	0112      	lsls	r2, r2, #4
90020672:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
90020676:	eba2 0809 	sub.w	r8, r2, r9
9002067a:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
9002067e:	b280      	uxth	r0, r0
90020680:	fa1f f888 	uxth.w	r8, r8
90020684:	1a12      	subs	r2, r2, r0
90020686:	fb08 f101 	mul.w	r1, r8, r1
9002068a:	b292      	uxth	r2, r2
9002068c:	fb02 110e 	mla	r1, r2, lr, r1
90020690:	fb00 1104 	mla	r1, r0, r4, r1
90020694:	9c13      	ldr	r4, [sp, #76]	; 0x4c
90020696:	fb09 1104 	mla	r1, r9, r4, r1
9002069a:	f3c1 2107 	ubfx	r1, r1, #8, #8
9002069e:	2900      	cmp	r1, #0
900206a0:	f000 80f5 	beq.w	9002088e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
900206a4:	f1be 0fff 	cmp.w	lr, #255	; 0xff
900206a8:	d01b      	beq.n	900206e2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
900206aa:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
900206ae:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
900206b2:	fb0e fa0a 	mul.w	sl, lr, sl
900206b6:	fb0e fe03 	mul.w	lr, lr, r3
900206ba:	ea4f 231a 	mov.w	r3, sl, lsr #8
900206be:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
900206c2:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
900206c6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
900206ca:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
900206ce:	4453      	add	r3, sl
900206d0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900206d4:	0a1b      	lsrs	r3, r3, #8
900206d6:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
900206da:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
900206de:	ea43 030c 	orr.w	r3, r3, ip
900206e2:	9c12      	ldr	r4, [sp, #72]	; 0x48
900206e4:	2cff      	cmp	r4, #255	; 0xff
900206e6:	d021      	beq.n	9002072c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
900206e8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
900206ea:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
900206ee:	9c12      	ldr	r4, [sp, #72]	; 0x48
900206f0:	fb04 fb0b 	mul.w	fp, r4, fp
900206f4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
900206f6:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
900206fa:	9c12      	ldr	r4, [sp, #72]	; 0x48
900206fc:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90020700:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90020704:	fb04 fa0a 	mul.w	sl, r4, sl
90020708:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
9002070c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90020710:	44de      	add	lr, fp
90020712:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90020716:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
9002071a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002071e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90020722:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90020726:	ea4e 040a 	orr.w	r4, lr, sl
9002072a:	940b      	str	r4, [sp, #44]	; 0x2c
9002072c:	9c10      	ldr	r4, [sp, #64]	; 0x40
9002072e:	2cff      	cmp	r4, #255	; 0xff
90020730:	d021      	beq.n	90020776 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
90020732:	9c08      	ldr	r4, [sp, #32]
90020734:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
90020738:	9c10      	ldr	r4, [sp, #64]	; 0x40
9002073a:	fb04 fb0b 	mul.w	fp, r4, fp
9002073e:	9c08      	ldr	r4, [sp, #32]
90020740:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90020744:	9c10      	ldr	r4, [sp, #64]	; 0x40
90020746:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
9002074a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
9002074e:	fb04 fa0a 	mul.w	sl, r4, sl
90020752:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90020756:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
9002075a:	44de      	add	lr, fp
9002075c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90020760:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90020764:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90020768:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
9002076c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90020770:	ea4e 040a 	orr.w	r4, lr, sl
90020774:	9408      	str	r4, [sp, #32]
90020776:	9c13      	ldr	r4, [sp, #76]	; 0x4c
90020778:	2cff      	cmp	r4, #255	; 0xff
9002077a:	d021      	beq.n	900207c0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
9002077c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
9002077e:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
90020782:	9c13      	ldr	r4, [sp, #76]	; 0x4c
90020784:	fb04 fb0b 	mul.w	fp, r4, fp
90020788:	9c0c      	ldr	r4, [sp, #48]	; 0x30
9002078a:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
9002078e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
90020790:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90020794:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90020798:	fb04 fa0a 	mul.w	sl, r4, sl
9002079c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
900207a0:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
900207a4:	44de      	add	lr, fp
900207a6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
900207aa:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900207ae:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900207b2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
900207b6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
900207ba:	ea4e 040a 	orr.w	r4, lr, sl
900207be:	940c      	str	r4, [sp, #48]	; 0x30
900207c0:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
900207c2:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
900207c6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
900207ca:	43c9      	mvns	r1, r1
900207cc:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
900207d0:	9c08      	ldr	r4, [sp, #32]
900207d2:	fb08 fc0c 	mul.w	ip, r8, ip
900207d6:	fb02 cc0e 	mla	ip, r2, lr, ip
900207da:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
900207de:	9c0c      	ldr	r4, [sp, #48]	; 0x30
900207e0:	fb00 cc0e 	mla	ip, r0, lr, ip
900207e4:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
900207e8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
900207ea:	fb09 cc0e 	mla	ip, r9, lr, ip
900207ee:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
900207f2:	fb08 f80e 	mul.w	r8, r8, lr
900207f6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900207fa:	fa5f fe81 	uxtb.w	lr, r1
900207fe:	fb02 8303 	mla	r3, r2, r3, r8
90020802:	9a08      	ldr	r2, [sp, #32]
90020804:	f8b7 8000 	ldrh.w	r8, [r7]
90020808:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
9002080c:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
90020810:	9a0c      	ldr	r2, [sp, #48]	; 0x30
90020812:	ea4f 01c8 	mov.w	r1, r8, lsl #3
90020816:	fb00 330a 	mla	r3, r0, sl, r3
9002081a:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
9002081e:	ea4f 2228 	mov.w	r2, r8, asr #8
90020822:	fb09 3900 	mla	r9, r9, r0, r3
90020826:	ea4f 00e8 	mov.w	r0, r8, asr #3
9002082a:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
9002082e:	b2c9      	uxtb	r1, r1
90020830:	ea4f 2919 	mov.w	r9, r9, lsr #8
90020834:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
90020838:	fb02 f20e 	mul.w	r2, r2, lr
9002083c:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
90020840:	fb00 f00e 	mul.w	r0, r0, lr
90020844:	1c53      	adds	r3, r2, #1
90020846:	fb01 f10e 	mul.w	r1, r1, lr
9002084a:	ea4c 0c09 	orr.w	ip, ip, r9
9002084e:	eb03 2212 	add.w	r2, r3, r2, lsr #8
90020852:	ea4f 431c 	mov.w	r3, ip, lsr #16
90020856:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9002085a:	4a60      	ldr	r2, [pc, #384]	; (900209dc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
9002085c:	b2db      	uxtb	r3, r3
9002085e:	ea02 2203 	and.w	r2, r2, r3, lsl #8
90020862:	1c43      	adds	r3, r0, #1
90020864:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90020868:	ea4f 231c 	mov.w	r3, ip, lsr #8
9002086c:	eb03 2310 	add.w	r3, r3, r0, lsr #8
90020870:	00db      	lsls	r3, r3, #3
90020872:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90020876:	4313      	orrs	r3, r2
90020878:	1c4a      	adds	r2, r1, #1
9002087a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
9002087e:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
90020882:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
90020886:	ea4c 0c03 	orr.w	ip, ip, r3
9002088a:	f8a7 c000 	strh.w	ip, [r7]
9002088e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
90020890:	3702      	adds	r7, #2
90020892:	9a25      	ldr	r2, [sp, #148]	; 0x94
90020894:	441a      	add	r2, r3
90020896:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90020898:	441d      	add	r5, r3
9002089a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
9002089c:	9225      	str	r2, [sp, #148]	; 0x94
9002089e:	3b01      	subs	r3, #1
900208a0:	9317      	str	r3, [sp, #92]	; 0x5c
900208a2:	e699      	b.n	900205d8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
900208a4:	9b27      	ldr	r3, [sp, #156]	; 0x9c
900208a6:	9c25      	ldr	r4, [sp, #148]	; 0x94
900208a8:	441c      	add	r4, r3
900208aa:	9b28      	ldr	r3, [sp, #160]	; 0xa0
900208ac:	441d      	add	r5, r3
900208ae:	9b07      	ldr	r3, [sp, #28]
900208b0:	9425      	str	r4, [sp, #148]	; 0x94
900208b2:	3b01      	subs	r3, #1
900208b4:	9307      	str	r3, [sp, #28]
900208b6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
900208b8:	3302      	adds	r3, #2
900208ba:	930a      	str	r3, [sp, #40]	; 0x28
900208bc:	e66c      	b.n	90020598 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
900208be:	d024      	beq.n	9002090a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3be>
900208c0:	9b07      	ldr	r3, [sp, #28]
900208c2:	9827      	ldr	r0, [sp, #156]	; 0x9c
900208c4:	3b01      	subs	r3, #1
900208c6:	9c25      	ldr	r4, [sp, #148]	; 0x94
900208c8:	fb00 4003 	mla	r0, r0, r3, r4
900208cc:	1400      	asrs	r0, r0, #16
900208ce:	f53f ae80 	bmi.w	900205d2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
900208d2:	3901      	subs	r1, #1
900208d4:	4288      	cmp	r0, r1
900208d6:	f6bf ae7c 	bge.w	900205d2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
900208da:	9928      	ldr	r1, [sp, #160]	; 0xa0
900208dc:	fb01 5303 	mla	r3, r1, r3, r5
900208e0:	141b      	asrs	r3, r3, #16
900208e2:	f53f ae76 	bmi.w	900205d2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
900208e6:	3a01      	subs	r2, #1
900208e8:	4293      	cmp	r3, r2
900208ea:	f6bf ae72 	bge.w	900205d2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
900208ee:	f8dd b01c 	ldr.w	fp, [sp, #28]
900208f2:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
900208f6:	f1bb 0f00 	cmp.w	fp, #0
900208fa:	dc71      	bgt.n	900209e0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
900208fc:	9b07      	ldr	r3, [sp, #28]
900208fe:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
90020902:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90020904:	eb03 0344 	add.w	r3, r3, r4, lsl #1
90020908:	930a      	str	r3, [sp, #40]	; 0x28
9002090a:	9b16      	ldr	r3, [sp, #88]	; 0x58
9002090c:	2b00      	cmp	r3, #0
9002090e:	f340 81af 	ble.w	90020c70 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
90020912:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90020916:	9b24      	ldr	r3, [sp, #144]	; 0x90
90020918:	ee30 0a04 	vadd.f32	s0, s0, s8
9002091c:	ee70 0aa4 	vadd.f32	s1, s1, s9
90020920:	eef0 6a62 	vmov.f32	s13, s5
90020924:	eec7 7a00 	vdiv.f32	s15, s14, s0
90020928:	ee31 1a05 	vadd.f32	s2, s2, s10
9002092c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90020930:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
90020934:	eef0 6a43 	vmov.f32	s13, s6
90020938:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002093c:	ee16 5a90 	vmov	r5, s13
90020940:	ee20 7aa7 	vmul.f32	s14, s1, s15
90020944:	ee61 7a27 	vmul.f32	s15, s2, s15
90020948:	ee77 2a62 	vsub.f32	s5, s14, s5
9002094c:	ee37 3ac3 	vsub.f32	s6, s15, s6
90020950:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90020954:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90020958:	ee12 2a90 	vmov	r2, s5
9002095c:	eef0 2a47 	vmov.f32	s5, s14
90020960:	fb92 f3f3 	sdiv	r3, r2, r3
90020964:	ee13 2a10 	vmov	r2, s6
90020968:	9327      	str	r3, [sp, #156]	; 0x9c
9002096a:	9b24      	ldr	r3, [sp, #144]	; 0x90
9002096c:	eeb0 3a67 	vmov.f32	s6, s15
90020970:	fb92 f3f3 	sdiv	r3, r2, r3
90020974:	9328      	str	r3, [sp, #160]	; 0xa0
90020976:	9b16      	ldr	r3, [sp, #88]	; 0x58
90020978:	9a18      	ldr	r2, [sp, #96]	; 0x60
9002097a:	3b01      	subs	r3, #1
9002097c:	9316      	str	r3, [sp, #88]	; 0x58
9002097e:	9b24      	ldr	r3, [sp, #144]	; 0x90
90020980:	bf08      	it	eq
90020982:	4613      	moveq	r3, r2
90020984:	9307      	str	r3, [sp, #28]
90020986:	e5f9      	b.n	9002057c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
90020988:	2800      	cmp	r0, #0
9002098a:	f43f ae6b 	beq.w	90020664 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
9002098e:	f818 1001 	ldrb.w	r1, [r8, r1]
90020992:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90020996:	9108      	str	r1, [sp, #32]
90020998:	0e09      	lsrs	r1, r1, #24
9002099a:	9110      	str	r1, [sp, #64]	; 0x40
9002099c:	e662      	b.n	90020664 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
9002099e:	f113 0801 	adds.w	r8, r3, #1
900209a2:	f53f af74 	bmi.w	9002088e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
900209a6:	4541      	cmp	r1, r8
900209a8:	f6ff af71 	blt.w	9002088e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
900209ac:	f11c 0801 	adds.w	r8, ip, #1
900209b0:	f53f af6d 	bmi.w	9002088e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
900209b4:	45c6      	cmp	lr, r8
900209b6:	f6ff af6a 	blt.w	9002088e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
900209ba:	b209      	sxth	r1, r1
900209bc:	e9cd 3c02 	strd	r3, ip, [sp, #8]
900209c0:	fa0f f38e 	sxth.w	r3, lr
900209c4:	9100      	str	r1, [sp, #0]
900209c6:	4639      	mov	r1, r7
900209c8:	9301      	str	r3, [sp, #4]
900209ca:	4633      	mov	r3, r6
900209cc:	e9cd 2004 	strd	r2, r0, [sp, #16]
900209d0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
900209d2:	9819      	ldr	r0, [sp, #100]	; 0x64
900209d4:	f7ff fc7b 	bl	900202ce <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
900209d8:	e759      	b.n	9002088e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
900209da:	bf00      	nop
900209dc:	fffff800 	.word	0xfffff800
900209e0:	9b25      	ldr	r3, [sp, #148]	; 0x94
900209e2:	f3c5 3003 	ubfx	r0, r5, #12, #4
900209e6:	9c25      	ldr	r4, [sp, #148]	; 0x94
900209e8:	f3c3 3203 	ubfx	r2, r3, #12, #4
900209ec:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
900209ee:	1427      	asrs	r7, r4, #16
900209f0:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
900209f2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900209f6:	142b      	asrs	r3, r5, #16
900209f8:	fb01 7303 	mla	r3, r1, r3, r7
900209fc:	18e7      	adds	r7, r4, r3
900209fe:	5ce3      	ldrb	r3, [r4, r3]
90020a00:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
90020a04:	ea4f 6c13 	mov.w	ip, r3, lsr #24
90020a08:	2a00      	cmp	r2, #0
90020a0a:	f000 8127 	beq.w	90020c5c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
90020a0e:	f897 e001 	ldrb.w	lr, [r7, #1]
90020a12:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
90020a16:	940d      	str	r4, [sp, #52]	; 0x34
90020a18:	0e24      	lsrs	r4, r4, #24
90020a1a:	9414      	str	r4, [sp, #80]	; 0x50
90020a1c:	b170      	cbz	r0, 90020a3c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
90020a1e:	eb07 0e01 	add.w	lr, r7, r1
90020a22:	5c79      	ldrb	r1, [r7, r1]
90020a24:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90020a28:	9109      	str	r1, [sp, #36]	; 0x24
90020a2a:	0e09      	lsrs	r1, r1, #24
90020a2c:	9111      	str	r1, [sp, #68]	; 0x44
90020a2e:	f89e 1001 	ldrb.w	r1, [lr, #1]
90020a32:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90020a36:	910e      	str	r1, [sp, #56]	; 0x38
90020a38:	0e09      	lsrs	r1, r1, #24
90020a3a:	9115      	str	r1, [sp, #84]	; 0x54
90020a3c:	b292      	uxth	r2, r2
90020a3e:	9c11      	ldr	r4, [sp, #68]	; 0x44
90020a40:	b280      	uxth	r0, r0
90020a42:	fb02 f800 	mul.w	r8, r2, r0
90020a46:	0112      	lsls	r2, r2, #4
90020a48:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
90020a4c:	eba2 0e08 	sub.w	lr, r2, r8
90020a50:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
90020a54:	9a14      	ldr	r2, [sp, #80]	; 0x50
90020a56:	b280      	uxth	r0, r0
90020a58:	fa1f fe8e 	uxth.w	lr, lr
90020a5c:	1a09      	subs	r1, r1, r0
90020a5e:	fb0e f202 	mul.w	r2, lr, r2
90020a62:	b289      	uxth	r1, r1
90020a64:	fb01 220c 	mla	r2, r1, ip, r2
90020a68:	fb00 2204 	mla	r2, r0, r4, r2
90020a6c:	9c15      	ldr	r4, [sp, #84]	; 0x54
90020a6e:	fb08 2204 	mla	r2, r8, r4, r2
90020a72:	f3c2 2207 	ubfx	r2, r2, #8, #8
90020a76:	2a00      	cmp	r2, #0
90020a78:	f000 80e5 	beq.w	90020c46 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
90020a7c:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
90020a80:	d019      	beq.n	90020ab6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
90020a82:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
90020a86:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90020a8a:	fb0c fa0a 	mul.w	sl, ip, sl
90020a8e:	fb0c fc03 	mul.w	ip, ip, r3
90020a92:	ea4f 231a 	mov.w	r3, sl, lsr #8
90020a96:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
90020a9a:	f50c 7780 	add.w	r7, ip, #256	; 0x100
90020a9e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90020aa2:	eb07 271c 	add.w	r7, r7, ip, lsr #8
90020aa6:	4453      	add	r3, sl
90020aa8:	0a3f      	lsrs	r7, r7, #8
90020aaa:	0a1b      	lsrs	r3, r3, #8
90020aac:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
90020ab0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90020ab4:	433b      	orrs	r3, r7
90020ab6:	9c14      	ldr	r4, [sp, #80]	; 0x50
90020ab8:	2cff      	cmp	r4, #255	; 0xff
90020aba:	d020      	beq.n	90020afe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
90020abc:	9c0d      	ldr	r4, [sp, #52]	; 0x34
90020abe:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
90020ac2:	9c14      	ldr	r4, [sp, #80]	; 0x50
90020ac4:	4367      	muls	r7, r4
90020ac6:	9c0d      	ldr	r4, [sp, #52]	; 0x34
90020ac8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90020acc:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90020ad0:	9c14      	ldr	r4, [sp, #80]	; 0x50
90020ad2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
90020ad6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90020ada:	fb04 fa0a 	mul.w	sl, r4, sl
90020ade:	44bc      	add	ip, r7
90020ae0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90020ae4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90020ae8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90020aec:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90020af0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90020af4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90020af8:	ea4c 040a 	orr.w	r4, ip, sl
90020afc:	940d      	str	r4, [sp, #52]	; 0x34
90020afe:	9c11      	ldr	r4, [sp, #68]	; 0x44
90020b00:	2cff      	cmp	r4, #255	; 0xff
90020b02:	d020      	beq.n	90020b46 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
90020b04:	9c09      	ldr	r4, [sp, #36]	; 0x24
90020b06:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
90020b0a:	9c11      	ldr	r4, [sp, #68]	; 0x44
90020b0c:	4367      	muls	r7, r4
90020b0e:	9c09      	ldr	r4, [sp, #36]	; 0x24
90020b10:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90020b14:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90020b18:	9c11      	ldr	r4, [sp, #68]	; 0x44
90020b1a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
90020b1e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90020b22:	fb04 fa0a 	mul.w	sl, r4, sl
90020b26:	44bc      	add	ip, r7
90020b28:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90020b2c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90020b30:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90020b34:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90020b38:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90020b3c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90020b40:	ea4c 040a 	orr.w	r4, ip, sl
90020b44:	9409      	str	r4, [sp, #36]	; 0x24
90020b46:	9c15      	ldr	r4, [sp, #84]	; 0x54
90020b48:	2cff      	cmp	r4, #255	; 0xff
90020b4a:	d020      	beq.n	90020b8e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
90020b4c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
90020b4e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
90020b52:	9c15      	ldr	r4, [sp, #84]	; 0x54
90020b54:	4367      	muls	r7, r4
90020b56:	9c0e      	ldr	r4, [sp, #56]	; 0x38
90020b58:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90020b5c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90020b60:	9c15      	ldr	r4, [sp, #84]	; 0x54
90020b62:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
90020b66:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90020b6a:	fb04 fa0a 	mul.w	sl, r4, sl
90020b6e:	44bc      	add	ip, r7
90020b70:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90020b74:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90020b78:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90020b7c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90020b80:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90020b84:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90020b88:	ea4c 040a 	orr.w	r4, ip, sl
90020b8c:	940e      	str	r4, [sp, #56]	; 0x38
90020b8e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
90020b90:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
90020b94:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90020b98:	43d2      	mvns	r2, r2
90020b9a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
90020b9e:	9c09      	ldr	r4, [sp, #36]	; 0x24
90020ba0:	b2d2      	uxtb	r2, r2
90020ba2:	fb0e f707 	mul.w	r7, lr, r7
90020ba6:	fb01 770c 	mla	r7, r1, ip, r7
90020baa:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
90020bae:	9c0e      	ldr	r4, [sp, #56]	; 0x38
90020bb0:	fb00 770c 	mla	r7, r0, ip, r7
90020bb4:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
90020bb8:	9c0d      	ldr	r4, [sp, #52]	; 0x34
90020bba:	fb08 770c 	mla	r7, r8, ip, r7
90020bbe:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
90020bc2:	fb0e fe0c 	mul.w	lr, lr, ip
90020bc6:	0a3f      	lsrs	r7, r7, #8
90020bc8:	fb01 e303 	mla	r3, r1, r3, lr
90020bcc:	9909      	ldr	r1, [sp, #36]	; 0x24
90020bce:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
90020bd2:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
90020bd6:	990e      	ldr	r1, [sp, #56]	; 0x38
90020bd8:	fb00 330a 	mla	r3, r0, sl, r3
90020bdc:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
90020be0:	fb08 3c0c 	mla	ip, r8, ip, r3
90020be4:	f8b9 3000 	ldrh.w	r3, [r9]
90020be8:	1218      	asrs	r0, r3, #8
90020bea:	10d9      	asrs	r1, r3, #3
90020bec:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90020bf0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
90020bf4:	00db      	lsls	r3, r3, #3
90020bf6:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
90020bfa:	4350      	muls	r0, r2
90020bfc:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
90020c00:	b2db      	uxtb	r3, r3
90020c02:	4351      	muls	r1, r2
90020c04:	ea47 070c 	orr.w	r7, r7, ip
90020c08:	4353      	muls	r3, r2
90020c0a:	1c42      	adds	r2, r0, #1
90020c0c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90020c10:	0c3a      	lsrs	r2, r7, #16
90020c12:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90020c16:	4a18      	ldr	r2, [pc, #96]	; (90020c78 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
90020c18:	b2c0      	uxtb	r0, r0
90020c1a:	ea02 2000 	and.w	r0, r2, r0, lsl #8
90020c1e:	1c4a      	adds	r2, r1, #1
90020c20:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90020c24:	0a3a      	lsrs	r2, r7, #8
90020c26:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90020c2a:	00c9      	lsls	r1, r1, #3
90020c2c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90020c30:	4301      	orrs	r1, r0
90020c32:	1c58      	adds	r0, r3, #1
90020c34:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90020c38:	eb07 2710 	add.w	r7, r7, r0, lsr #8
90020c3c:	f3c7 00c4 	ubfx	r0, r7, #3, #5
90020c40:	4308      	orrs	r0, r1
90020c42:	f8a9 0000 	strh.w	r0, [r9]
90020c46:	9b27      	ldr	r3, [sp, #156]	; 0x9c
90020c48:	f109 0902 	add.w	r9, r9, #2
90020c4c:	9a25      	ldr	r2, [sp, #148]	; 0x94
90020c4e:	f10b 3bff 	add.w	fp, fp, #4294967295
90020c52:	441a      	add	r2, r3
90020c54:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90020c56:	9225      	str	r2, [sp, #148]	; 0x94
90020c58:	441d      	add	r5, r3
90020c5a:	e64c      	b.n	900208f6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
90020c5c:	2800      	cmp	r0, #0
90020c5e:	f43f aeed 	beq.w	90020a3c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
90020c62:	5c79      	ldrb	r1, [r7, r1]
90020c64:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90020c68:	9109      	str	r1, [sp, #36]	; 0x24
90020c6a:	0e09      	lsrs	r1, r1, #24
90020c6c:	9111      	str	r1, [sp, #68]	; 0x44
90020c6e:	e6e5      	b.n	90020a3c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
90020c70:	b01b      	add	sp, #108	; 0x6c
90020c72:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90020c76:	bf00      	nop
90020c78:	fffff800 	.word	0xfffff800

90020c7c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
90020c7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020c80:	b085      	sub	sp, #20
90020c82:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
90020c86:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
90020c8a:	2800      	cmp	r0, #0
90020c8c:	9103      	str	r1, [sp, #12]
90020c8e:	fb00 7406 	mla	r4, r0, r6, r7
90020c92:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
90020c96:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
90020c9a:	eb02 0544 	add.w	r5, r2, r4, lsl #1
90020c9e:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
90020ca2:	eb03 0904 	add.w	r9, r3, r4
90020ca6:	9501      	str	r5, [sp, #4]
90020ca8:	f2c0 8150 	blt.w	90020f4c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
90020cac:	4583      	cmp	fp, r0
90020cae:	f340 814d 	ble.w	90020f4c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
90020cb2:	2f00      	cmp	r7, #0
90020cb4:	f2c0 8146 	blt.w	90020f44 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
90020cb8:	42be      	cmp	r6, r7
90020cba:	f340 8143 	ble.w	90020f44 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
90020cbe:	f813 c004 	ldrb.w	ip, [r3, r4]
90020cc2:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
90020cc6:	f64f 041f 	movw	r4, #63519	; 0xf81f
90020cca:	ea4f 02ec 	mov.w	r2, ip, asr #3
90020cce:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
90020cd2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90020cd6:	4355      	muls	r5, r2
90020cd8:	fb0c f203 	mul.w	r2, ip, r3
90020cdc:	ea04 1355 	and.w	r3, r4, r5, lsr #5
90020ce0:	f605 0501 	addw	r5, r5, #2049	; 0x801
90020ce4:	441d      	add	r5, r3
90020ce6:	f102 0320 	add.w	r3, r2, #32
90020cea:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90020cee:	ea04 1455 	and.w	r4, r4, r5, lsr #5
90020cf2:	0a1b      	lsrs	r3, r3, #8
90020cf4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90020cf8:	431c      	orrs	r4, r3
90020cfa:	1c7b      	adds	r3, r7, #1
90020cfc:	f100 812b 	bmi.w	90020f56 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
90020d00:	429e      	cmp	r6, r3
90020d02:	f340 8128 	ble.w	90020f56 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
90020d06:	2900      	cmp	r1, #0
90020d08:	f000 8128 	beq.w	90020f5c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
90020d0c:	9a01      	ldr	r2, [sp, #4]
90020d0e:	f899 3001 	ldrb.w	r3, [r9, #1]
90020d12:	8855      	ldrh	r5, [r2, #2]
90020d14:	ea4f 08e3 	mov.w	r8, r3, asr #3
90020d18:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
90020d1c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90020d20:	fb08 f802 	mul.w	r8, r8, r2
90020d24:	f64f 021f 	movw	r2, #63519	; 0xf81f
90020d28:	435d      	muls	r5, r3
90020d2a:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
90020d2e:	f608 0801 	addw	r8, r8, #2049	; 0x801
90020d32:	44d0      	add	r8, sl
90020d34:	f105 0a20 	add.w	sl, r5, #32
90020d38:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
90020d3c:	ea02 1258 	and.w	r2, r2, r8, lsr #5
90020d40:	0a2d      	lsrs	r5, r5, #8
90020d42:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90020d46:	432a      	orrs	r2, r5
90020d48:	3001      	adds	r0, #1
90020d4a:	f100 810d 	bmi.w	90020f68 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
90020d4e:	4583      	cmp	fp, r0
90020d50:	f340 810a 	ble.w	90020f68 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
90020d54:	f1be 0f00 	cmp.w	lr, #0
90020d58:	f000 810b 	beq.w	90020f72 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
90020d5c:	2f00      	cmp	r7, #0
90020d5e:	f2c0 8100 	blt.w	90020f62 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
90020d62:	42be      	cmp	r6, r7
90020d64:	f340 80fd 	ble.w	90020f62 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
90020d68:	9801      	ldr	r0, [sp, #4]
90020d6a:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
90020d6e:	f819 5006 	ldrb.w	r5, [r9, r6]
90020d72:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
90020d76:	ea4f 0ae5 	mov.w	sl, r5, asr #3
90020d7a:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
90020d7e:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
90020d82:	fb0a fa00 	mul.w	sl, sl, r0
90020d86:	fb05 f808 	mul.w	r8, r5, r8
90020d8a:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
90020d8e:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
90020d92:	4482      	add	sl, r0
90020d94:	f108 0020 	add.w	r0, r8, #32
90020d98:	eb00 2018 	add.w	r0, r0, r8, lsr #8
90020d9c:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
90020da0:	0a00      	lsrs	r0, r0, #8
90020da2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90020da6:	ea4b 0b00 	orr.w	fp, fp, r0
90020daa:	3701      	adds	r7, #1
90020dac:	f100 80e6 	bmi.w	90020f7c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
90020db0:	42be      	cmp	r6, r7
90020db2:	f340 80e3 	ble.w	90020f7c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
90020db6:	2900      	cmp	r1, #0
90020db8:	f000 80e3 	beq.w	90020f82 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
90020dbc:	3601      	adds	r6, #1
90020dbe:	9801      	ldr	r0, [sp, #4]
90020dc0:	f819 7006 	ldrb.w	r7, [r9, r6]
90020dc4:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
90020dc8:	ea4f 09e7 	mov.w	r9, r7, asr #3
90020dcc:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
90020dd0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90020dd4:	fb09 f906 	mul.w	r9, r9, r6
90020dd8:	fb07 f800 	mul.w	r8, r7, r0
90020ddc:	f64f 001f 	movw	r0, #63519	; 0xf81f
90020de0:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
90020de4:	f609 0901 	addw	r9, r9, #2049	; 0x801
90020de8:	44d1      	add	r9, sl
90020dea:	ea00 1659 	and.w	r6, r0, r9, lsr #5
90020dee:	f108 0020 	add.w	r0, r8, #32
90020df2:	eb00 2018 	add.w	r0, r0, r8, lsr #8
90020df6:	0a00      	lsrs	r0, r0, #8
90020df8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90020dfc:	4330      	orrs	r0, r6
90020dfe:	b28e      	uxth	r6, r1
90020e00:	fa1f f98e 	uxth.w	r9, lr
90020e04:	ea4f 4a04 	mov.w	sl, r4, lsl #16
90020e08:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
90020e0c:	fb06 f809 	mul.w	r8, r6, r9
90020e10:	0136      	lsls	r6, r6, #4
90020e12:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90020e16:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
90020e1a:	9601      	str	r6, [sp, #4]
90020e1c:	ea4a 0404 	orr.w	r4, sl, r4
90020e20:	ea4f 4a02 	mov.w	sl, r2, lsl #16
90020e24:	fa1f f689 	uxth.w	r6, r9
90020e28:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90020e2c:	fb11 f90e 	smulbb	r9, r1, lr
90020e30:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90020e34:	9602      	str	r6, [sp, #8]
90020e36:	4626      	mov	r6, r4
90020e38:	f3c9 09c7 	ubfx	r9, r9, #3, #8
90020e3c:	f1ce 0410 	rsb	r4, lr, #16
90020e40:	ea4a 0202 	orr.w	r2, sl, r2
90020e44:	ea4f 4a00 	mov.w	sl, r0, lsl #16
90020e48:	1a64      	subs	r4, r4, r1
90020e4a:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
90020e4e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90020e52:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90020e56:	434a      	muls	r2, r1
90020e58:	eb09 0444 	add.w	r4, r9, r4, lsl #1
90020e5c:	ea4a 0000 	orr.w	r0, sl, r0
90020e60:	9903      	ldr	r1, [sp, #12]
90020e62:	fb04 2406 	mla	r4, r4, r6, r2
90020e66:	9e02      	ldr	r6, [sp, #8]
90020e68:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
90020e6c:	fb09 4200 	mla	r2, r9, r0, r4
90020e70:	ea4f 440b 	mov.w	r4, fp, lsl #16
90020e74:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
90020e78:	8808      	ldrh	r0, [r1, #0]
90020e7a:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
90020e7e:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
90020e82:	ea44 0b0b 	orr.w	fp, r4, fp
90020e86:	9c01      	ldr	r4, [sp, #4]
90020e88:	b289      	uxth	r1, r1
90020e8a:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
90020e8e:	fb0e 2e0b 	mla	lr, lr, fp, r2
90020e92:	1ba4      	subs	r4, r4, r6
90020e94:	9e01      	ldr	r6, [sp, #4]
90020e96:	ea4f 525e 	mov.w	r2, lr, lsr #21
90020e9a:	eba6 0608 	sub.w	r6, r6, r8
90020e9e:	b2a4      	uxth	r4, r4
90020ea0:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
90020ea4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90020ea8:	b2b6      	uxth	r6, r6
90020eaa:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
90020eae:	4373      	muls	r3, r6
90020eb0:	ea42 0e0e 	orr.w	lr, r2, lr
90020eb4:	fb0c 3304 	mla	r3, ip, r4, r3
90020eb8:	9c02      	ldr	r4, [sp, #8]
90020eba:	fa1f f28e 	uxth.w	r2, lr
90020ebe:	fb04 3505 	mla	r5, r4, r5, r3
90020ec2:	10d4      	asrs	r4, r2, #3
90020ec4:	fb08 5707 	mla	r7, r8, r7, r5
90020ec8:	1215      	asrs	r5, r2, #8
90020eca:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
90020ece:	00d2      	lsls	r2, r2, #3
90020ed0:	f3c7 2707 	ubfx	r7, r7, #8, #8
90020ed4:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
90020ed8:	b2d2      	uxtb	r2, r2
90020eda:	434f      	muls	r7, r1
90020edc:	1c7b      	adds	r3, r7, #1
90020ede:	eb03 2717 	add.w	r7, r3, r7, lsr #8
90020ee2:	1203      	asrs	r3, r0, #8
90020ee4:	ea6f 2717 	mvn.w	r7, r7, lsr #8
90020ee8:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
90020eec:	b2ff      	uxtb	r7, r7
90020eee:	fb13 f307 	smulbb	r3, r3, r7
90020ef2:	fb05 3501 	mla	r5, r5, r1, r3
90020ef6:	10c3      	asrs	r3, r0, #3
90020ef8:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
90020efc:	b2ad      	uxth	r5, r5
90020efe:	fb13 f307 	smulbb	r3, r3, r7
90020f02:	fb04 3401 	mla	r4, r4, r1, r3
90020f06:	00c3      	lsls	r3, r0, #3
90020f08:	b2db      	uxtb	r3, r3
90020f0a:	b2a4      	uxth	r4, r4
90020f0c:	fb13 f307 	smulbb	r3, r3, r7
90020f10:	fb02 3101 	mla	r1, r2, r1, r3
90020f14:	1c6b      	adds	r3, r5, #1
90020f16:	1c62      	adds	r2, r4, #1
90020f18:	b289      	uxth	r1, r1
90020f1a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90020f1e:	1c4b      	adds	r3, r1, #1
90020f20:	eb02 2414 	add.w	r4, r2, r4, lsr #8
90020f24:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
90020f28:	9a03      	ldr	r2, [sp, #12]
90020f2a:	eb03 2311 	add.w	r3, r3, r1, lsr #8
90020f2e:	0964      	lsrs	r4, r4, #5
90020f30:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90020f34:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
90020f38:	432b      	orrs	r3, r5
90020f3a:	4323      	orrs	r3, r4
90020f3c:	8013      	strh	r3, [r2, #0]
90020f3e:	b005      	add	sp, #20
90020f40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90020f44:	f04f 0c00 	mov.w	ip, #0
90020f48:	4664      	mov	r4, ip
90020f4a:	e6d6      	b.n	90020cfa <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
90020f4c:	2300      	movs	r3, #0
90020f4e:	469c      	mov	ip, r3
90020f50:	461a      	mov	r2, r3
90020f52:	461c      	mov	r4, r3
90020f54:	e6f8      	b.n	90020d48 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
90020f56:	2300      	movs	r3, #0
90020f58:	461a      	mov	r2, r3
90020f5a:	e6f5      	b.n	90020d48 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
90020f5c:	460b      	mov	r3, r1
90020f5e:	460a      	mov	r2, r1
90020f60:	e6f2      	b.n	90020d48 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
90020f62:	2500      	movs	r5, #0
90020f64:	46ab      	mov	fp, r5
90020f66:	e720      	b.n	90020daa <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
90020f68:	2700      	movs	r7, #0
90020f6a:	463d      	mov	r5, r7
90020f6c:	4638      	mov	r0, r7
90020f6e:	46bb      	mov	fp, r7
90020f70:	e745      	b.n	90020dfe <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
90020f72:	4677      	mov	r7, lr
90020f74:	4675      	mov	r5, lr
90020f76:	4670      	mov	r0, lr
90020f78:	46f3      	mov	fp, lr
90020f7a:	e740      	b.n	90020dfe <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
90020f7c:	2700      	movs	r7, #0
90020f7e:	4638      	mov	r0, r7
90020f80:	e73d      	b.n	90020dfe <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
90020f82:	460f      	mov	r7, r1
90020f84:	4608      	mov	r0, r1
90020f86:	e73a      	b.n	90020dfe <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

90020f88 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90020f88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020f8c:	b097      	sub	sp, #92	; 0x5c
90020f8e:	9214      	str	r2, [sp, #80]	; 0x50
90020f90:	9308      	str	r3, [sp, #32]
90020f92:	9a25      	ldr	r2, [sp, #148]	; 0x94
90020f94:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
90020f98:	9015      	str	r0, [sp, #84]	; 0x54
90020f9a:	9312      	str	r3, [sp, #72]	; 0x48
90020f9c:	6850      	ldr	r0, [r2, #4]
90020f9e:	9111      	str	r1, [sp, #68]	; 0x44
90020fa0:	6812      	ldr	r2, [r2, #0]
90020fa2:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
90020fa6:	fb00 1303 	mla	r3, r0, r3, r1
90020faa:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90020fae:	9309      	str	r3, [sp, #36]	; 0x24
90020fb0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90020fb2:	681b      	ldr	r3, [r3, #0]
90020fb4:	930b      	str	r3, [sp, #44]	; 0x2c
90020fb6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90020fb8:	685b      	ldr	r3, [r3, #4]
90020fba:	930c      	str	r3, [sp, #48]	; 0x30
90020fbc:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
90020fc0:	930a      	str	r3, [sp, #40]	; 0x28
90020fc2:	9b11      	ldr	r3, [sp, #68]	; 0x44
90020fc4:	2b00      	cmp	r3, #0
90020fc6:	dc03      	bgt.n	90020fd0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90020fc8:	9b14      	ldr	r3, [sp, #80]	; 0x50
90020fca:	2b00      	cmp	r3, #0
90020fcc:	f340 83cd 	ble.w	9002176a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
90020fd0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90020fd2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90020fd6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90020fda:	1e48      	subs	r0, r1, #1
90020fdc:	1e55      	subs	r5, r2, #1
90020fde:	9b08      	ldr	r3, [sp, #32]
90020fe0:	2b00      	cmp	r3, #0
90020fe2:	f340 81a5 	ble.w	90021330 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a8>
90020fe6:	9e21      	ldr	r6, [sp, #132]	; 0x84
90020fe8:	9b22      	ldr	r3, [sp, #136]	; 0x88
90020fea:	1436      	asrs	r6, r6, #16
90020fec:	ea4f 4323 	mov.w	r3, r3, asr #16
90020ff0:	d406      	bmi.n	90021000 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90020ff2:	4286      	cmp	r6, r0
90020ff4:	da04      	bge.n	90021000 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90020ff6:	2b00      	cmp	r3, #0
90020ff8:	db02      	blt.n	90021000 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90020ffa:	42ab      	cmp	r3, r5
90020ffc:	f2c0 8199 	blt.w	90021332 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
90021000:	3601      	adds	r6, #1
90021002:	f100 8186 	bmi.w	90021312 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90021006:	42b1      	cmp	r1, r6
90021008:	f2c0 8183 	blt.w	90021312 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
9002100c:	3301      	adds	r3, #1
9002100e:	f100 8180 	bmi.w	90021312 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90021012:	429a      	cmp	r2, r3
90021014:	f2c0 817d 	blt.w	90021312 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90021018:	9b08      	ldr	r3, [sp, #32]
9002101a:	f64f 061f 	movw	r6, #63519	; 0xf81f
9002101e:	9f09      	ldr	r7, [sp, #36]	; 0x24
90021020:	9313      	str	r3, [sp, #76]	; 0x4c
90021022:	9b13      	ldr	r3, [sp, #76]	; 0x4c
90021024:	2b00      	cmp	r3, #0
90021026:	f340 81a6 	ble.w	90021376 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
9002102a:	9b22      	ldr	r3, [sp, #136]	; 0x88
9002102c:	9d21      	ldr	r5, [sp, #132]	; 0x84
9002102e:	1418      	asrs	r0, r3, #16
90021030:	9b21      	ldr	r3, [sp, #132]	; 0x84
90021032:	142d      	asrs	r5, r5, #16
90021034:	f3c3 3103 	ubfx	r1, r3, #12, #4
90021038:	9b22      	ldr	r3, [sp, #136]	; 0x88
9002103a:	f3c3 3c03 	ubfx	ip, r3, #12, #4
9002103e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90021040:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
90021044:	f100 81fa 	bmi.w	9002143c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90021048:	f102 3eff 	add.w	lr, r2, #4294967295
9002104c:	4575      	cmp	r5, lr
9002104e:	f280 81f5 	bge.w	9002143c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90021052:	2800      	cmp	r0, #0
90021054:	f2c0 81f2 	blt.w	9002143c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90021058:	f103 3eff 	add.w	lr, r3, #4294967295
9002105c:	4570      	cmp	r0, lr
9002105e:	f280 81ed 	bge.w	9002143c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90021062:	b212      	sxth	r2, r2
90021064:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90021066:	fa1f fe81 	uxth.w	lr, r1
9002106a:	fb00 5002 	mla	r0, r0, r2, r5
9002106e:	ea4f 150e 	mov.w	r5, lr, lsl #4
90021072:	eb03 0a00 	add.w	sl, r3, r0
90021076:	f813 9000 	ldrb.w	r9, [r3, r0]
9002107a:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
9002107e:	f89a 8001 	ldrb.w	r8, [sl, #1]
90021082:	b29b      	uxth	r3, r3
90021084:	f1bc 0f00 	cmp.w	ip, #0
90021088:	f000 81bb 	beq.w	90021402 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
9002108c:	f81a 4002 	ldrb.w	r4, [sl, r2]
90021090:	eb0a 0b02 	add.w	fp, sl, r2
90021094:	fa1f fa8c 	uxth.w	sl, ip
90021098:	940d      	str	r4, [sp, #52]	; 0x34
9002109a:	fb0a fe0e 	mul.w	lr, sl, lr
9002109e:	f89b 4001 	ldrb.w	r4, [fp, #1]
900210a2:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
900210a6:	eba5 050e 	sub.w	r5, r5, lr
900210aa:	940e      	str	r4, [sp, #56]	; 0x38
900210ac:	fa1f fa8a 	uxth.w	sl, sl
900210b0:	9c0d      	ldr	r4, [sp, #52]	; 0x34
900210b2:	b2ad      	uxth	r5, r5
900210b4:	eba3 030a 	sub.w	r3, r3, sl
900210b8:	fb08 f505 	mul.w	r5, r8, r5
900210bc:	b29b      	uxth	r3, r3
900210be:	fb09 5303 	mla	r3, r9, r3, r5
900210c2:	fb0a 3304 	mla	r3, sl, r4, r3
900210c6:	9c0e      	ldr	r4, [sp, #56]	; 0x38
900210c8:	fb0e 3304 	mla	r3, lr, r4, r3
900210cc:	f3c3 2307 	ubfx	r3, r3, #8, #8
900210d0:	2b00      	cmp	r3, #0
900210d2:	f000 8111 	beq.w	900212f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
900210d6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
900210d8:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
900210dc:	eb04 0540 	add.w	r5, r4, r0, lsl #1
900210e0:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
900210e4:	f000 8192 	beq.w	9002140c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
900210e8:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
900210ec:	ea4f 0ae9 	mov.w	sl, r9, asr #3
900210f0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
900210f4:	fb0a fe0e 	mul.w	lr, sl, lr
900210f8:	fb09 f000 	mul.w	r0, r9, r0
900210fc:	ea06 195e 	and.w	r9, r6, lr, lsr #5
90021100:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
90021104:	f100 0b20 	add.w	fp, r0, #32
90021108:	44ce      	add	lr, r9
9002110a:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
9002110e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
90021112:	ea4f 2919 	mov.w	r9, r9, lsr #8
90021116:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
9002111a:	ea4e 0909 	orr.w	r9, lr, r9
9002111e:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
90021122:	8868      	ldrh	r0, [r5, #2]
90021124:	d019      	beq.n	9002115a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
90021126:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
9002112a:	ea4f 0ae8 	mov.w	sl, r8, asr #3
9002112e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90021132:	fb0a fe0e 	mul.w	lr, sl, lr
90021136:	fb08 f800 	mul.w	r8, r8, r0
9002113a:	ea06 105e 	and.w	r0, r6, lr, lsr #5
9002113e:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
90021142:	f108 0b20 	add.w	fp, r8, #32
90021146:	4486      	add	lr, r0
90021148:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
9002114c:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
90021150:	0a00      	lsrs	r0, r0, #8
90021152:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90021156:	ea4e 0000 	orr.w	r0, lr, r0
9002115a:	ea4f 4e09 	mov.w	lr, r9, lsl #16
9002115e:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
90021162:	ea4f 4a00 	mov.w	sl, r0, lsl #16
90021166:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
9002116a:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
9002116e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90021172:	ea4e 0909 	orr.w	r9, lr, r9
90021176:	ea4a 0000 	orr.w	r0, sl, r0
9002117a:	f1bc 0f00 	cmp.w	ip, #0
9002117e:	f000 8147 	beq.w	90021410 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>
90021182:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
90021186:	9c0d      	ldr	r4, [sp, #52]	; 0x34
90021188:	3a01      	subs	r2, #1
9002118a:	2cff      	cmp	r4, #255	; 0xff
9002118c:	ea4f 0242 	mov.w	r2, r2, lsl #1
90021190:	f102 0202 	add.w	r2, r2, #2
90021194:	eb05 0e02 	add.w	lr, r5, r2
90021198:	5aaa      	ldrh	r2, [r5, r2]
9002119a:	d018      	beq.n	900211ce <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
9002119c:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
900211a0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
900211a4:	ea4f 08e4 	mov.w	r8, r4, asr #3
900211a8:	fb04 fa02 	mul.w	sl, r4, r2
900211ac:	fb08 f805 	mul.w	r8, r8, r5
900211b0:	f10a 0520 	add.w	r5, sl, #32
900211b4:	ea06 1258 	and.w	r2, r6, r8, lsr #5
900211b8:	f608 0801 	addw	r8, r8, #2049	; 0x801
900211bc:	eb05 251a 	add.w	r5, r5, sl, lsr #8
900211c0:	4442      	add	r2, r8
900211c2:	0a2d      	lsrs	r5, r5, #8
900211c4:	ea06 1252 	and.w	r2, r6, r2, lsr #5
900211c8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
900211cc:	432a      	orrs	r2, r5
900211ce:	9c0e      	ldr	r4, [sp, #56]	; 0x38
900211d0:	f8be 5002 	ldrh.w	r5, [lr, #2]
900211d4:	2cff      	cmp	r4, #255	; 0xff
900211d6:	d01a      	beq.n	9002120e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x286>
900211d8:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
900211dc:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
900211e0:	ea4f 08e4 	mov.w	r8, r4, asr #3
900211e4:	fb04 fa05 	mul.w	sl, r4, r5
900211e8:	fb08 f80e 	mul.w	r8, r8, lr
900211ec:	f10a 0e20 	add.w	lr, sl, #32
900211f0:	ea06 1558 	and.w	r5, r6, r8, lsr #5
900211f4:	f608 0801 	addw	r8, r8, #2049	; 0x801
900211f8:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
900211fc:	4445      	add	r5, r8
900211fe:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90021202:	ea06 1555 	and.w	r5, r6, r5, lsr #5
90021206:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
9002120a:	ea45 050e 	orr.w	r5, r5, lr
9002120e:	fb1c fe01 	smulbb	lr, ip, r1
90021212:	f1cc 0810 	rsb	r8, ip, #16
90021216:	ea4f 4a02 	mov.w	sl, r2, lsl #16
9002121a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
9002121e:	ea4f 0eee 	mov.w	lr, lr, asr #3
90021222:	eba8 0801 	sub.w	r8, r8, r1
90021226:	ea4f 4b05 	mov.w	fp, r5, lsl #16
9002122a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
9002122e:	ebce 0141 	rsb	r1, lr, r1, lsl #1
90021232:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
90021236:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
9002123a:	ea4a 0202 	orr.w	r2, sl, r2
9002123e:	4341      	muls	r1, r0
90021240:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
90021244:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
90021248:	fb09 1108 	mla	r1, r9, r8, r1
9002124c:	ea4b 0505 	orr.w	r5, fp, r5
90021250:	fb0c 1102 	mla	r1, ip, r2, r1
90021254:	fb0e 1e05 	mla	lr, lr, r5, r1
90021258:	ea4f 525e 	mov.w	r2, lr, lsr #21
9002125c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
90021260:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90021264:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
90021268:	ea42 0e0e 	orr.w	lr, r2, lr
9002126c:	fa1f f28e 	uxth.w	r2, lr
90021270:	2bff      	cmp	r3, #255	; 0xff
90021272:	d103      	bne.n	9002127c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90021274:	9912      	ldr	r1, [sp, #72]	; 0x48
90021276:	29ff      	cmp	r1, #255	; 0xff
90021278:	f000 80de 	beq.w	90021438 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
9002127c:	990a      	ldr	r1, [sp, #40]	; 0x28
9002127e:	1215      	asrs	r5, r2, #8
90021280:	8838      	ldrh	r0, [r7, #0]
90021282:	434b      	muls	r3, r1
90021284:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
90021288:	9c0a      	ldr	r4, [sp, #40]	; 0x28
9002128a:	f103 0c01 	add.w	ip, r3, #1
9002128e:	eb0c 2323 	add.w	r3, ip, r3, asr #8
90021292:	ea6f 2323 	mvn.w	r3, r3, asr #8
90021296:	fa5f fc83 	uxtb.w	ip, r3
9002129a:	1203      	asrs	r3, r0, #8
9002129c:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
900212a0:	fb13 f30c 	smulbb	r3, r3, ip
900212a4:	fb05 3501 	mla	r5, r5, r1, r3
900212a8:	10c3      	asrs	r3, r0, #3
900212aa:	10d1      	asrs	r1, r2, #3
900212ac:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
900212b0:	00d2      	lsls	r2, r2, #3
900212b2:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
900212b6:	b2ad      	uxth	r5, r5
900212b8:	fb13 f30c 	smulbb	r3, r3, ip
900212bc:	b2d2      	uxtb	r2, r2
900212be:	fb01 3104 	mla	r1, r1, r4, r3
900212c2:	00c3      	lsls	r3, r0, #3
900212c4:	b2db      	uxtb	r3, r3
900212c6:	b289      	uxth	r1, r1
900212c8:	fb13 f30c 	smulbb	r3, r3, ip
900212cc:	fb02 3304 	mla	r3, r2, r4, r3
900212d0:	b29a      	uxth	r2, r3
900212d2:	1c6b      	adds	r3, r5, #1
900212d4:	eb03 2515 	add.w	r5, r3, r5, lsr #8
900212d8:	1c53      	adds	r3, r2, #1
900212da:	eb03 2312 	add.w	r3, r3, r2, lsr #8
900212de:	1c4a      	adds	r2, r1, #1
900212e0:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
900212e4:	eb02 2111 	add.w	r1, r2, r1, lsr #8
900212e8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
900212ec:	0949      	lsrs	r1, r1, #5
900212ee:	432b      	orrs	r3, r5
900212f0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
900212f4:	430b      	orrs	r3, r1
900212f6:	803b      	strh	r3, [r7, #0]
900212f8:	9b21      	ldr	r3, [sp, #132]	; 0x84
900212fa:	3702      	adds	r7, #2
900212fc:	9a23      	ldr	r2, [sp, #140]	; 0x8c
900212fe:	4413      	add	r3, r2
90021300:	9a22      	ldr	r2, [sp, #136]	; 0x88
90021302:	9321      	str	r3, [sp, #132]	; 0x84
90021304:	9b24      	ldr	r3, [sp, #144]	; 0x90
90021306:	441a      	add	r2, r3
90021308:	9b13      	ldr	r3, [sp, #76]	; 0x4c
9002130a:	3b01      	subs	r3, #1
9002130c:	9222      	str	r2, [sp, #136]	; 0x88
9002130e:	9313      	str	r3, [sp, #76]	; 0x4c
90021310:	e687      	b.n	90021022 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
90021312:	9b21      	ldr	r3, [sp, #132]	; 0x84
90021314:	9e23      	ldr	r6, [sp, #140]	; 0x8c
90021316:	9c22      	ldr	r4, [sp, #136]	; 0x88
90021318:	4433      	add	r3, r6
9002131a:	9321      	str	r3, [sp, #132]	; 0x84
9002131c:	9b24      	ldr	r3, [sp, #144]	; 0x90
9002131e:	441c      	add	r4, r3
90021320:	9b08      	ldr	r3, [sp, #32]
90021322:	3b01      	subs	r3, #1
90021324:	9422      	str	r4, [sp, #136]	; 0x88
90021326:	9308      	str	r3, [sp, #32]
90021328:	9b09      	ldr	r3, [sp, #36]	; 0x24
9002132a:	3302      	adds	r3, #2
9002132c:	9309      	str	r3, [sp, #36]	; 0x24
9002132e:	e656      	b.n	90020fde <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
90021330:	d028      	beq.n	90021384 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
90021332:	9b08      	ldr	r3, [sp, #32]
90021334:	9823      	ldr	r0, [sp, #140]	; 0x8c
90021336:	3b01      	subs	r3, #1
90021338:	9d21      	ldr	r5, [sp, #132]	; 0x84
9002133a:	fb00 5003 	mla	r0, r0, r3, r5
9002133e:	1400      	asrs	r0, r0, #16
90021340:	f53f ae6a 	bmi.w	90021018 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90021344:	3901      	subs	r1, #1
90021346:	4288      	cmp	r0, r1
90021348:	f6bf ae66 	bge.w	90021018 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9002134c:	9924      	ldr	r1, [sp, #144]	; 0x90
9002134e:	9822      	ldr	r0, [sp, #136]	; 0x88
90021350:	fb01 0303 	mla	r3, r1, r3, r0
90021354:	141b      	asrs	r3, r3, #16
90021356:	f53f ae5f 	bmi.w	90021018 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9002135a:	3a01      	subs	r2, #1
9002135c:	4293      	cmp	r3, r2
9002135e:	f6bf ae5b 	bge.w	90021018 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90021362:	9b08      	ldr	r3, [sp, #32]
90021364:	f64f 061f 	movw	r6, #63519	; 0xf81f
90021368:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
9002136c:	9313      	str	r3, [sp, #76]	; 0x4c
9002136e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
90021370:	2b00      	cmp	r3, #0
90021372:	f300 8082 	bgt.w	9002147a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f2>
90021376:	9b08      	ldr	r3, [sp, #32]
90021378:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
9002137c:	9b09      	ldr	r3, [sp, #36]	; 0x24
9002137e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
90021382:	9309      	str	r3, [sp, #36]	; 0x24
90021384:	9b11      	ldr	r3, [sp, #68]	; 0x44
90021386:	2b00      	cmp	r3, #0
90021388:	f340 81ef 	ble.w	9002176a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
9002138c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90021390:	9b20      	ldr	r3, [sp, #128]	; 0x80
90021392:	ee30 0a04 	vadd.f32	s0, s0, s8
90021396:	ee70 0aa4 	vadd.f32	s1, s1, s9
9002139a:	eef0 6a62 	vmov.f32	s13, s5
9002139e:	eec7 7a00 	vdiv.f32	s15, s14, s0
900213a2:	ee31 1a05 	vadd.f32	s2, s2, s10
900213a6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900213aa:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
900213ae:	eef0 6a43 	vmov.f32	s13, s6
900213b2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900213b6:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
900213ba:	ee20 7aa7 	vmul.f32	s14, s1, s15
900213be:	ee61 7a27 	vmul.f32	s15, s2, s15
900213c2:	ee77 2a62 	vsub.f32	s5, s14, s5
900213c6:	ee37 3ac3 	vsub.f32	s6, s15, s6
900213ca:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900213ce:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900213d2:	ee12 2a90 	vmov	r2, s5
900213d6:	eef0 2a47 	vmov.f32	s5, s14
900213da:	fb92 f3f3 	sdiv	r3, r2, r3
900213de:	ee13 2a10 	vmov	r2, s6
900213e2:	9323      	str	r3, [sp, #140]	; 0x8c
900213e4:	9b20      	ldr	r3, [sp, #128]	; 0x80
900213e6:	eeb0 3a67 	vmov.f32	s6, s15
900213ea:	fb92 f3f3 	sdiv	r3, r2, r3
900213ee:	9324      	str	r3, [sp, #144]	; 0x90
900213f0:	9b11      	ldr	r3, [sp, #68]	; 0x44
900213f2:	9a14      	ldr	r2, [sp, #80]	; 0x50
900213f4:	3b01      	subs	r3, #1
900213f6:	9311      	str	r3, [sp, #68]	; 0x44
900213f8:	9b20      	ldr	r3, [sp, #128]	; 0x80
900213fa:	bf08      	it	eq
900213fc:	4613      	moveq	r3, r2
900213fe:	9308      	str	r3, [sp, #32]
90021400:	e5df      	b.n	90020fc2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
90021402:	fb08 f505 	mul.w	r5, r8, r5
90021406:	fb09 5303 	mla	r3, r9, r3, r5
9002140a:	e65f      	b.n	900210cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
9002140c:	4681      	mov	r9, r0
9002140e:	e686      	b.n	9002111e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90021410:	f1c1 0210 	rsb	r2, r1, #16
90021414:	4341      	muls	r1, r0
90021416:	fb09 1902 	mla	r9, r9, r2, r1
9002141a:	ea4f 0949 	mov.w	r9, r9, lsl #1
9002141e:	ea4f 5259 	mov.w	r2, r9, lsr #21
90021422:	ea4f 1959 	mov.w	r9, r9, lsr #5
90021426:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9002142a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
9002142e:	ea42 0909 	orr.w	r9, r2, r9
90021432:	fa1f f289 	uxth.w	r2, r9
90021436:	e71b      	b.n	90021270 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
90021438:	803a      	strh	r2, [r7, #0]
9002143a:	e75d      	b.n	900212f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
9002143c:	f115 0e01 	adds.w	lr, r5, #1
90021440:	f53f af5a 	bmi.w	900212f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90021444:	4572      	cmp	r2, lr
90021446:	f6ff af57 	blt.w	900212f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
9002144a:	f110 0e01 	adds.w	lr, r0, #1
9002144e:	f53f af53 	bmi.w	900212f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90021452:	4573      	cmp	r3, lr
90021454:	f6ff af50 	blt.w	900212f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90021458:	9c12      	ldr	r4, [sp, #72]	; 0x48
9002145a:	b21b      	sxth	r3, r3
9002145c:	b212      	sxth	r2, r2
9002145e:	9502      	str	r5, [sp, #8]
90021460:	9301      	str	r3, [sp, #4]
90021462:	9200      	str	r2, [sp, #0]
90021464:	e9cd 0103 	strd	r0, r1, [sp, #12]
90021468:	e9cd c405 	strd	ip, r4, [sp, #20]
9002146c:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
90021470:	4639      	mov	r1, r7
90021472:	9815      	ldr	r0, [sp, #84]	; 0x54
90021474:	f7ff fc02 	bl	90020c7c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
90021478:	e73e      	b.n	900212f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
9002147a:	9b21      	ldr	r3, [sp, #132]	; 0x84
9002147c:	f3c3 3203 	ubfx	r2, r3, #12, #4
90021480:	9b22      	ldr	r3, [sp, #136]	; 0x88
90021482:	f3c3 3503 	ubfx	r5, r3, #12, #4
90021486:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90021488:	fa1f fc82 	uxth.w	ip, r2
9002148c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90021490:	9b22      	ldr	r3, [sp, #136]	; 0x88
90021492:	ea4f 100c 	mov.w	r0, ip, lsl #4
90021496:	141f      	asrs	r7, r3, #16
90021498:	9b21      	ldr	r3, [sp, #132]	; 0x84
9002149a:	141b      	asrs	r3, r3, #16
9002149c:	fb01 3707 	mla	r7, r1, r7, r3
900214a0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
900214a2:	eb03 0a07 	add.w	sl, r3, r7
900214a6:	f813 9007 	ldrb.w	r9, [r3, r7]
900214aa:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
900214ae:	f89a 8001 	ldrb.w	r8, [sl, #1]
900214b2:	b29b      	uxth	r3, r3
900214b4:	2d00      	cmp	r5, #0
900214b6:	f000 813d 	beq.w	90021734 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>
900214ba:	f81a 4001 	ldrb.w	r4, [sl, r1]
900214be:	eb0a 0b01 	add.w	fp, sl, r1
900214c2:	fa1f fa85 	uxth.w	sl, r5
900214c6:	940f      	str	r4, [sp, #60]	; 0x3c
900214c8:	fb0a fc0c 	mul.w	ip, sl, ip
900214cc:	f89b 4001 	ldrb.w	r4, [fp, #1]
900214d0:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
900214d4:	eba0 000c 	sub.w	r0, r0, ip
900214d8:	9410      	str	r4, [sp, #64]	; 0x40
900214da:	fa1f fa8a 	uxth.w	sl, sl
900214de:	b280      	uxth	r0, r0
900214e0:	eba3 030a 	sub.w	r3, r3, sl
900214e4:	fb08 f000 	mul.w	r0, r8, r0
900214e8:	b29b      	uxth	r3, r3
900214ea:	fb09 0303 	mla	r3, r9, r3, r0
900214ee:	980f      	ldr	r0, [sp, #60]	; 0x3c
900214f0:	fb0a 3300 	mla	r3, sl, r0, r3
900214f4:	fb0c 3304 	mla	r3, ip, r4, r3
900214f8:	f3c3 2307 	ubfx	r3, r3, #8, #8
900214fc:	2b00      	cmp	r3, #0
900214fe:	f000 810b 	beq.w	90021718 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
90021502:	980b      	ldr	r0, [sp, #44]	; 0x2c
90021504:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
90021508:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
9002150a:	eb00 0047 	add.w	r0, r0, r7, lsl #1
9002150e:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
90021512:	f000 8114 	beq.w	9002173e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
90021516:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
9002151a:	ea4f 0ae9 	mov.w	sl, r9, asr #3
9002151e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
90021522:	fb0a fc0c 	mul.w	ip, sl, ip
90021526:	fb09 f707 	mul.w	r7, r9, r7
9002152a:	ea06 195c 	and.w	r9, r6, ip, lsr #5
9002152e:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
90021532:	f107 0b20 	add.w	fp, r7, #32
90021536:	44cc      	add	ip, r9
90021538:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
9002153c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
90021540:	ea4f 2919 	mov.w	r9, r9, lsr #8
90021544:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
90021548:	ea4c 0909 	orr.w	r9, ip, r9
9002154c:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
90021550:	8847      	ldrh	r7, [r0, #2]
90021552:	d019      	beq.n	90021588 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x600>
90021554:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
90021558:	ea4f 0ae8 	mov.w	sl, r8, asr #3
9002155c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
90021560:	fb0a fc0c 	mul.w	ip, sl, ip
90021564:	fb08 f807 	mul.w	r8, r8, r7
90021568:	ea06 175c 	and.w	r7, r6, ip, lsr #5
9002156c:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
90021570:	f108 0b20 	add.w	fp, r8, #32
90021574:	44bc      	add	ip, r7
90021576:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
9002157a:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
9002157e:	0a3f      	lsrs	r7, r7, #8
90021580:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
90021584:	ea4c 0707 	orr.w	r7, ip, r7
90021588:	ea4f 4c09 	mov.w	ip, r9, lsl #16
9002158c:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
90021590:	ea4f 4a07 	mov.w	sl, r7, lsl #16
90021594:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
90021598:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
9002159c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
900215a0:	ea4c 0909 	orr.w	r9, ip, r9
900215a4:	ea4a 0707 	orr.w	r7, sl, r7
900215a8:	2d00      	cmp	r5, #0
900215aa:	f000 80ca 	beq.w	90021742 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ba>
900215ae:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
900215b2:	3901      	subs	r1, #1
900215b4:	0049      	lsls	r1, r1, #1
900215b6:	3102      	adds	r1, #2
900215b8:	eb00 0c01 	add.w	ip, r0, r1
900215bc:	5a41      	ldrh	r1, [r0, r1]
900215be:	980f      	ldr	r0, [sp, #60]	; 0x3c
900215c0:	28ff      	cmp	r0, #255	; 0xff
900215c2:	d019      	beq.n	900215f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x670>
900215c4:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
900215c8:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
900215ca:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
900215ce:	ea4f 08e4 	mov.w	r8, r4, asr #3
900215d2:	fb04 fa01 	mul.w	sl, r4, r1
900215d6:	fb08 f800 	mul.w	r8, r8, r0
900215da:	f10a 0020 	add.w	r0, sl, #32
900215de:	ea06 1158 	and.w	r1, r6, r8, lsr #5
900215e2:	f608 0801 	addw	r8, r8, #2049	; 0x801
900215e6:	eb00 201a 	add.w	r0, r0, sl, lsr #8
900215ea:	4441      	add	r1, r8
900215ec:	0a00      	lsrs	r0, r0, #8
900215ee:	ea06 1151 	and.w	r1, r6, r1, lsr #5
900215f2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
900215f6:	4301      	orrs	r1, r0
900215f8:	9c10      	ldr	r4, [sp, #64]	; 0x40
900215fa:	f8bc 0002 	ldrh.w	r0, [ip, #2]
900215fe:	2cff      	cmp	r4, #255	; 0xff
90021600:	d01a      	beq.n	90021638 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b0>
90021602:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
90021606:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9002160a:	ea4f 08e4 	mov.w	r8, r4, asr #3
9002160e:	fb04 fa00 	mul.w	sl, r4, r0
90021612:	fb08 f80c 	mul.w	r8, r8, ip
90021616:	f10a 0c20 	add.w	ip, sl, #32
9002161a:	ea06 1058 	and.w	r0, r6, r8, lsr #5
9002161e:	f608 0801 	addw	r8, r8, #2049	; 0x801
90021622:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
90021626:	4440      	add	r0, r8
90021628:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002162c:	ea06 1050 	and.w	r0, r6, r0, lsr #5
90021630:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
90021634:	ea40 000c 	orr.w	r0, r0, ip
90021638:	fb15 fc02 	smulbb	ip, r5, r2
9002163c:	f1c5 0810 	rsb	r8, r5, #16
90021640:	ea4f 4a01 	mov.w	sl, r1, lsl #16
90021644:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
90021648:	ea4f 0cec 	mov.w	ip, ip, asr #3
9002164c:	eba8 0802 	sub.w	r8, r8, r2
90021650:	ea4f 4b00 	mov.w	fp, r0, lsl #16
90021654:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90021658:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
9002165c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90021660:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
90021664:	ea4a 0101 	orr.w	r1, sl, r1
90021668:	437a      	muls	r2, r7
9002166a:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
9002166e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
90021672:	fb09 2208 	mla	r2, r9, r8, r2
90021676:	ea4b 0000 	orr.w	r0, fp, r0
9002167a:	fb05 2201 	mla	r2, r5, r1, r2
9002167e:	fb0c 2200 	mla	r2, ip, r0, r2
90021682:	0d57      	lsrs	r7, r2, #21
90021684:	0952      	lsrs	r2, r2, #5
90021686:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
9002168a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
9002168e:	433a      	orrs	r2, r7
90021690:	2bff      	cmp	r3, #255	; 0xff
90021692:	b292      	uxth	r2, r2
90021694:	d102      	bne.n	9002169c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
90021696:	9912      	ldr	r1, [sp, #72]	; 0x48
90021698:	29ff      	cmp	r1, #255	; 0xff
9002169a:	d063      	beq.n	90021764 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7dc>
9002169c:	980a      	ldr	r0, [sp, #40]	; 0x28
9002169e:	1215      	asrs	r5, r2, #8
900216a0:	f8be 1000 	ldrh.w	r1, [lr]
900216a4:	4343      	muls	r3, r0
900216a6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
900216a8:	10cf      	asrs	r7, r1, #3
900216aa:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
900216ae:	1c58      	adds	r0, r3, #1
900216b0:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
900216b4:	eb00 2323 	add.w	r3, r0, r3, asr #8
900216b8:	1208      	asrs	r0, r1, #8
900216ba:	ea6f 2323 	mvn.w	r3, r3, asr #8
900216be:	00c9      	lsls	r1, r1, #3
900216c0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
900216c4:	b2db      	uxtb	r3, r3
900216c6:	b2c9      	uxtb	r1, r1
900216c8:	fb10 f003 	smulbb	r0, r0, r3
900216cc:	fb11 f103 	smulbb	r1, r1, r3
900216d0:	fb05 0504 	mla	r5, r5, r4, r0
900216d4:	10d0      	asrs	r0, r2, #3
900216d6:	fb17 f703 	smulbb	r7, r7, r3
900216da:	00d2      	lsls	r2, r2, #3
900216dc:	b2ad      	uxth	r5, r5
900216de:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
900216e2:	b2d2      	uxtb	r2, r2
900216e4:	fb00 7004 	mla	r0, r0, r4, r7
900216e8:	1c6b      	adds	r3, r5, #1
900216ea:	fb02 1204 	mla	r2, r2, r4, r1
900216ee:	eb03 2515 	add.w	r5, r3, r5, lsr #8
900216f2:	b292      	uxth	r2, r2
900216f4:	b280      	uxth	r0, r0
900216f6:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
900216fa:	1c57      	adds	r7, r2, #1
900216fc:	eb07 2712 	add.w	r7, r7, r2, lsr #8
90021700:	f3c7 27c4 	ubfx	r7, r7, #11, #5
90021704:	433d      	orrs	r5, r7
90021706:	1c47      	adds	r7, r0, #1
90021708:	eb07 2710 	add.w	r7, r7, r0, lsr #8
9002170c:	097f      	lsrs	r7, r7, #5
9002170e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
90021712:	433d      	orrs	r5, r7
90021714:	f8ae 5000 	strh.w	r5, [lr]
90021718:	9b21      	ldr	r3, [sp, #132]	; 0x84
9002171a:	f10e 0e02 	add.w	lr, lr, #2
9002171e:	9a23      	ldr	r2, [sp, #140]	; 0x8c
90021720:	4413      	add	r3, r2
90021722:	9a22      	ldr	r2, [sp, #136]	; 0x88
90021724:	9321      	str	r3, [sp, #132]	; 0x84
90021726:	9b24      	ldr	r3, [sp, #144]	; 0x90
90021728:	441a      	add	r2, r3
9002172a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
9002172c:	3b01      	subs	r3, #1
9002172e:	9222      	str	r2, [sp, #136]	; 0x88
90021730:	9313      	str	r3, [sp, #76]	; 0x4c
90021732:	e61c      	b.n	9002136e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
90021734:	fb08 f000 	mul.w	r0, r8, r0
90021738:	fb09 0303 	mla	r3, r9, r3, r0
9002173c:	e6dc      	b.n	900214f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x570>
9002173e:	46b9      	mov	r9, r7
90021740:	e704      	b.n	9002154c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c4>
90021742:	f1c2 0110 	rsb	r1, r2, #16
90021746:	437a      	muls	r2, r7
90021748:	fb09 2901 	mla	r9, r9, r1, r2
9002174c:	ea4f 0949 	mov.w	r9, r9, lsl #1
90021750:	ea4f 5059 	mov.w	r0, r9, lsr #21
90021754:	ea4f 1259 	mov.w	r2, r9, lsr #5
90021758:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9002175c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90021760:	4302      	orrs	r2, r0
90021762:	e795      	b.n	90021690 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x708>
90021764:	f8ae 2000 	strh.w	r2, [lr]
90021768:	e7d6      	b.n	90021718 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
9002176a:	b017      	add	sp, #92	; 0x5c
9002176c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90021770 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
90021770:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90021774:	b085      	sub	sp, #20
90021776:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
9002177a:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
9002177e:	2800      	cmp	r0, #0
90021780:	9103      	str	r1, [sp, #12]
90021782:	fb00 7406 	mla	r4, r0, r6, r7
90021786:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
9002178a:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
9002178e:	eb03 0544 	add.w	r5, r3, r4, lsl #1
90021792:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
90021796:	eb02 0904 	add.w	r9, r2, r4
9002179a:	9501      	str	r5, [sp, #4]
9002179c:	f2c0 8141 	blt.w	90021a22 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
900217a0:	4583      	cmp	fp, r0
900217a2:	f340 813e 	ble.w	90021a22 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
900217a6:	2f00      	cmp	r7, #0
900217a8:	f2c0 8137 	blt.w	90021a1a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
900217ac:	42be      	cmp	r6, r7
900217ae:	f340 8134 	ble.w	90021a1a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
900217b2:	f812 c004 	ldrb.w	ip, [r2, r4]
900217b6:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
900217ba:	f64f 041f 	movw	r4, #63519	; 0xf81f
900217be:	ea4f 02ec 	mov.w	r2, ip, asr #3
900217c2:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
900217c6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
900217ca:	4355      	muls	r5, r2
900217cc:	fb0c f203 	mul.w	r2, ip, r3
900217d0:	ea04 1355 	and.w	r3, r4, r5, lsr #5
900217d4:	f605 0501 	addw	r5, r5, #2049	; 0x801
900217d8:	441d      	add	r5, r3
900217da:	f102 0320 	add.w	r3, r2, #32
900217de:	eb03 2312 	add.w	r3, r3, r2, lsr #8
900217e2:	ea04 1455 	and.w	r4, r4, r5, lsr #5
900217e6:	0a1b      	lsrs	r3, r3, #8
900217e8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
900217ec:	431c      	orrs	r4, r3
900217ee:	1c7b      	adds	r3, r7, #1
900217f0:	f100 811c 	bmi.w	90021a2c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
900217f4:	429e      	cmp	r6, r3
900217f6:	f340 8119 	ble.w	90021a2c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
900217fa:	2900      	cmp	r1, #0
900217fc:	f000 8119 	beq.w	90021a32 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
90021800:	9a01      	ldr	r2, [sp, #4]
90021802:	f899 3001 	ldrb.w	r3, [r9, #1]
90021806:	8855      	ldrh	r5, [r2, #2]
90021808:	ea4f 08e3 	mov.w	r8, r3, asr #3
9002180c:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
90021810:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90021814:	fb08 f802 	mul.w	r8, r8, r2
90021818:	f64f 021f 	movw	r2, #63519	; 0xf81f
9002181c:	435d      	muls	r5, r3
9002181e:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
90021822:	f608 0801 	addw	r8, r8, #2049	; 0x801
90021826:	44d0      	add	r8, sl
90021828:	f105 0a20 	add.w	sl, r5, #32
9002182c:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
90021830:	ea02 1258 	and.w	r2, r2, r8, lsr #5
90021834:	0a2d      	lsrs	r5, r5, #8
90021836:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9002183a:	432a      	orrs	r2, r5
9002183c:	3001      	adds	r0, #1
9002183e:	f100 80fe 	bmi.w	90021a3e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
90021842:	4583      	cmp	fp, r0
90021844:	f340 80fb 	ble.w	90021a3e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
90021848:	f1be 0f00 	cmp.w	lr, #0
9002184c:	f000 80fc 	beq.w	90021a48 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
90021850:	2f00      	cmp	r7, #0
90021852:	f2c0 80f1 	blt.w	90021a38 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
90021856:	42be      	cmp	r6, r7
90021858:	f340 80ee 	ble.w	90021a38 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
9002185c:	9801      	ldr	r0, [sp, #4]
9002185e:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
90021862:	f819 5006 	ldrb.w	r5, [r9, r6]
90021866:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
9002186a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9002186e:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
90021872:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
90021876:	fb0a fa00 	mul.w	sl, sl, r0
9002187a:	fb05 f808 	mul.w	r8, r5, r8
9002187e:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
90021882:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
90021886:	4482      	add	sl, r0
90021888:	f108 0020 	add.w	r0, r8, #32
9002188c:	eb00 2018 	add.w	r0, r0, r8, lsr #8
90021890:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
90021894:	0a00      	lsrs	r0, r0, #8
90021896:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9002189a:	ea4b 0b00 	orr.w	fp, fp, r0
9002189e:	3701      	adds	r7, #1
900218a0:	f100 80d7 	bmi.w	90021a52 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
900218a4:	42be      	cmp	r6, r7
900218a6:	f340 80d4 	ble.w	90021a52 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
900218aa:	2900      	cmp	r1, #0
900218ac:	f000 80d4 	beq.w	90021a58 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
900218b0:	3601      	adds	r6, #1
900218b2:	9801      	ldr	r0, [sp, #4]
900218b4:	f819 7006 	ldrb.w	r7, [r9, r6]
900218b8:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
900218bc:	ea4f 09e7 	mov.w	r9, r7, asr #3
900218c0:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
900218c4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
900218c8:	fb09 f906 	mul.w	r9, r9, r6
900218cc:	fb07 f800 	mul.w	r8, r7, r0
900218d0:	f64f 001f 	movw	r0, #63519	; 0xf81f
900218d4:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
900218d8:	f609 0901 	addw	r9, r9, #2049	; 0x801
900218dc:	44d1      	add	r9, sl
900218de:	ea00 1659 	and.w	r6, r0, r9, lsr #5
900218e2:	f108 0020 	add.w	r0, r8, #32
900218e6:	eb00 2018 	add.w	r0, r0, r8, lsr #8
900218ea:	0a00      	lsrs	r0, r0, #8
900218ec:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
900218f0:	4330      	orrs	r0, r6
900218f2:	b28e      	uxth	r6, r1
900218f4:	fa1f f98e 	uxth.w	r9, lr
900218f8:	ea4f 4a04 	mov.w	sl, r4, lsl #16
900218fc:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
90021900:	fb06 f809 	mul.w	r8, r6, r9
90021904:	0136      	lsls	r6, r6, #4
90021906:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
9002190a:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
9002190e:	9601      	str	r6, [sp, #4]
90021910:	ea4a 0404 	orr.w	r4, sl, r4
90021914:	ea4f 4a02 	mov.w	sl, r2, lsl #16
90021918:	fa1f f689 	uxth.w	r6, r9
9002191c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90021920:	fb11 f90e 	smulbb	r9, r1, lr
90021924:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90021928:	9602      	str	r6, [sp, #8]
9002192a:	4626      	mov	r6, r4
9002192c:	f3c9 09c7 	ubfx	r9, r9, #3, #8
90021930:	f1ce 0410 	rsb	r4, lr, #16
90021934:	ea4a 0202 	orr.w	r2, sl, r2
90021938:	ea4f 4a00 	mov.w	sl, r0, lsl #16
9002193c:	1a64      	subs	r4, r4, r1
9002193e:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
90021942:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90021946:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
9002194a:	434a      	muls	r2, r1
9002194c:	eb09 0444 	add.w	r4, r9, r4, lsl #1
90021950:	ea4a 0000 	orr.w	r0, sl, r0
90021954:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
90021958:	fb04 2406 	mla	r4, r4, r6, r2
9002195c:	9903      	ldr	r1, [sp, #12]
9002195e:	fb09 4200 	mla	r2, r9, r0, r4
90021962:	ea4f 440b 	mov.w	r4, fp, lsl #16
90021966:	9801      	ldr	r0, [sp, #4]
90021968:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
9002196c:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
90021970:	8809      	ldrh	r1, [r1, #0]
90021972:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
90021976:	ea44 0b0b 	orr.w	fp, r4, fp
9002197a:	9c02      	ldr	r4, [sp, #8]
9002197c:	1b00      	subs	r0, r0, r4
9002197e:	9c01      	ldr	r4, [sp, #4]
90021980:	fb0e 2e0b 	mla	lr, lr, fp, r2
90021984:	eba4 0608 	sub.w	r6, r4, r8
90021988:	b280      	uxth	r0, r0
9002198a:	ea4f 525e 	mov.w	r2, lr, lsr #21
9002198e:	b2b6      	uxth	r6, r6
90021990:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
90021994:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90021998:	4373      	muls	r3, r6
9002199a:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
9002199e:	fb0c 3300 	mla	r3, ip, r0, r3
900219a2:	9802      	ldr	r0, [sp, #8]
900219a4:	ea42 0e0e 	orr.w	lr, r2, lr
900219a8:	fb00 3505 	mla	r5, r0, r5, r3
900219ac:	120b      	asrs	r3, r1, #8
900219ae:	10c8      	asrs	r0, r1, #3
900219b0:	fb08 5707 	mla	r7, r8, r7, r5
900219b4:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
900219b8:	00c9      	lsls	r1, r1, #3
900219ba:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
900219be:	ea6f 2727 	mvn.w	r7, r7, asr #8
900219c2:	fa1f f28e 	uxth.w	r2, lr
900219c6:	b2c9      	uxtb	r1, r1
900219c8:	b2ff      	uxtb	r7, r7
900219ca:	437b      	muls	r3, r7
900219cc:	4378      	muls	r0, r7
900219ce:	434f      	muls	r7, r1
900219d0:	1c59      	adds	r1, r3, #1
900219d2:	eb01 2113 	add.w	r1, r1, r3, lsr #8
900219d6:	1213      	asrs	r3, r2, #8
900219d8:	f023 0307 	bic.w	r3, r3, #7
900219dc:	eb03 2311 	add.w	r3, r3, r1, lsr #8
900219e0:	1c41      	adds	r1, r0, #1
900219e2:	eb01 2010 	add.w	r0, r1, r0, lsr #8
900219e6:	10d1      	asrs	r1, r2, #3
900219e8:	021b      	lsls	r3, r3, #8
900219ea:	f021 0103 	bic.w	r1, r1, #3
900219ee:	00d2      	lsls	r2, r2, #3
900219f0:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
900219f4:	eb01 2110 	add.w	r1, r1, r0, lsr #8
900219f8:	00c9      	lsls	r1, r1, #3
900219fa:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
900219fe:	430b      	orrs	r3, r1
90021a00:	1c79      	adds	r1, r7, #1
90021a02:	eb01 2717 	add.w	r7, r1, r7, lsr #8
90021a06:	eb02 2217 	add.w	r2, r2, r7, lsr #8
90021a0a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90021a0e:	431a      	orrs	r2, r3
90021a10:	9b03      	ldr	r3, [sp, #12]
90021a12:	801a      	strh	r2, [r3, #0]
90021a14:	b005      	add	sp, #20
90021a16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90021a1a:	f04f 0c00 	mov.w	ip, #0
90021a1e:	4664      	mov	r4, ip
90021a20:	e6e5      	b.n	900217ee <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
90021a22:	2300      	movs	r3, #0
90021a24:	469c      	mov	ip, r3
90021a26:	461a      	mov	r2, r3
90021a28:	461c      	mov	r4, r3
90021a2a:	e707      	b.n	9002183c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
90021a2c:	2300      	movs	r3, #0
90021a2e:	461a      	mov	r2, r3
90021a30:	e704      	b.n	9002183c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
90021a32:	460b      	mov	r3, r1
90021a34:	460a      	mov	r2, r1
90021a36:	e701      	b.n	9002183c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
90021a38:	2500      	movs	r5, #0
90021a3a:	46ab      	mov	fp, r5
90021a3c:	e72f      	b.n	9002189e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
90021a3e:	2700      	movs	r7, #0
90021a40:	463d      	mov	r5, r7
90021a42:	4638      	mov	r0, r7
90021a44:	46bb      	mov	fp, r7
90021a46:	e754      	b.n	900218f2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
90021a48:	4677      	mov	r7, lr
90021a4a:	4675      	mov	r5, lr
90021a4c:	4670      	mov	r0, lr
90021a4e:	46f3      	mov	fp, lr
90021a50:	e74f      	b.n	900218f2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
90021a52:	2700      	movs	r7, #0
90021a54:	4638      	mov	r0, r7
90021a56:	e74c      	b.n	900218f2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
90021a58:	460f      	mov	r7, r1
90021a5a:	4608      	mov	r0, r1
90021a5c:	e749      	b.n	900218f2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

90021a60 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90021a60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90021a64:	b093      	sub	sp, #76	; 0x4c
90021a66:	9210      	str	r2, [sp, #64]	; 0x40
90021a68:	9a21      	ldr	r2, [sp, #132]	; 0x84
90021a6a:	9011      	str	r0, [sp, #68]	; 0x44
90021a6c:	910e      	str	r1, [sp, #56]	; 0x38
90021a6e:	6850      	ldr	r0, [r2, #4]
90021a70:	9306      	str	r3, [sp, #24]
90021a72:	6812      	ldr	r2, [r2, #0]
90021a74:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
90021a78:	fb00 1303 	mla	r3, r0, r3, r1
90021a7c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90021a80:	9307      	str	r3, [sp, #28]
90021a82:	9b24      	ldr	r3, [sp, #144]	; 0x90
90021a84:	681b      	ldr	r3, [r3, #0]
90021a86:	9308      	str	r3, [sp, #32]
90021a88:	9b24      	ldr	r3, [sp, #144]	; 0x90
90021a8a:	685b      	ldr	r3, [r3, #4]
90021a8c:	9309      	str	r3, [sp, #36]	; 0x24
90021a8e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90021a90:	2b00      	cmp	r3, #0
90021a92:	dc03      	bgt.n	90021a9c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
90021a94:	9b10      	ldr	r3, [sp, #64]	; 0x40
90021a96:	2b00      	cmp	r3, #0
90021a98:	f340 83b6 	ble.w	90022208 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
90021a9c:	9b24      	ldr	r3, [sp, #144]	; 0x90
90021a9e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90021aa2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90021aa6:	1e48      	subs	r0, r1, #1
90021aa8:	1e55      	subs	r5, r2, #1
90021aaa:	9b06      	ldr	r3, [sp, #24]
90021aac:	2b00      	cmp	r3, #0
90021aae:	f340 8165 	ble.w	90021d7c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
90021ab2:	9e1d      	ldr	r6, [sp, #116]	; 0x74
90021ab4:	9b1e      	ldr	r3, [sp, #120]	; 0x78
90021ab6:	1436      	asrs	r6, r6, #16
90021ab8:	ea4f 4323 	mov.w	r3, r3, asr #16
90021abc:	d406      	bmi.n	90021acc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90021abe:	4286      	cmp	r6, r0
90021ac0:	da04      	bge.n	90021acc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90021ac2:	2b00      	cmp	r3, #0
90021ac4:	db02      	blt.n	90021acc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90021ac6:	42ab      	cmp	r3, r5
90021ac8:	f2c0 8159 	blt.w	90021d7e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
90021acc:	3601      	adds	r6, #1
90021ace:	f100 8146 	bmi.w	90021d5e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
90021ad2:	42b1      	cmp	r1, r6
90021ad4:	f2c0 8143 	blt.w	90021d5e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
90021ad8:	3301      	adds	r3, #1
90021ada:	f100 8140 	bmi.w	90021d5e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
90021ade:	429a      	cmp	r2, r3
90021ae0:	f2c0 813d 	blt.w	90021d5e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
90021ae4:	9b06      	ldr	r3, [sp, #24]
90021ae6:	f64f 061f 	movw	r6, #63519	; 0xf81f
90021aea:	9f07      	ldr	r7, [sp, #28]
90021aec:	930f      	str	r3, [sp, #60]	; 0x3c
90021aee:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90021af0:	2b00      	cmp	r3, #0
90021af2:	f340 8166 	ble.w	90021dc2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90021af6:	9b1e      	ldr	r3, [sp, #120]	; 0x78
90021af8:	9d1d      	ldr	r5, [sp, #116]	; 0x74
90021afa:	1418      	asrs	r0, r3, #16
90021afc:	9b1d      	ldr	r3, [sp, #116]	; 0x74
90021afe:	142d      	asrs	r5, r5, #16
90021b00:	f3c3 3103 	ubfx	r1, r3, #12, #4
90021b04:	9b1e      	ldr	r3, [sp, #120]	; 0x78
90021b06:	f3c3 3c03 	ubfx	ip, r3, #12, #4
90021b0a:	9b24      	ldr	r3, [sp, #144]	; 0x90
90021b0c:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
90021b10:	f100 81f0 	bmi.w	90021ef4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
90021b14:	f102 3eff 	add.w	lr, r2, #4294967295
90021b18:	4575      	cmp	r5, lr
90021b1a:	f280 81eb 	bge.w	90021ef4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
90021b1e:	2800      	cmp	r0, #0
90021b20:	f2c0 81e8 	blt.w	90021ef4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
90021b24:	f103 3eff 	add.w	lr, r3, #4294967295
90021b28:	4570      	cmp	r0, lr
90021b2a:	f280 81e3 	bge.w	90021ef4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
90021b2e:	b212      	sxth	r2, r2
90021b30:	9b09      	ldr	r3, [sp, #36]	; 0x24
90021b32:	fa1f fe81 	uxth.w	lr, r1
90021b36:	fb00 5002 	mla	r0, r0, r2, r5
90021b3a:	ea4f 150e 	mov.w	r5, lr, lsl #4
90021b3e:	eb03 0a00 	add.w	sl, r3, r0
90021b42:	f813 9000 	ldrb.w	r9, [r3, r0]
90021b46:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
90021b4a:	f89a 8001 	ldrb.w	r8, [sl, #1]
90021b4e:	b29b      	uxth	r3, r3
90021b50:	f1bc 0f00 	cmp.w	ip, #0
90021b54:	f000 817b 	beq.w	90021e4e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
90021b58:	f81a 4002 	ldrb.w	r4, [sl, r2]
90021b5c:	eb0a 0b02 	add.w	fp, sl, r2
90021b60:	fa1f fa8c 	uxth.w	sl, ip
90021b64:	940a      	str	r4, [sp, #40]	; 0x28
90021b66:	fb0a fe0e 	mul.w	lr, sl, lr
90021b6a:	f89b 4001 	ldrb.w	r4, [fp, #1]
90021b6e:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
90021b72:	eba5 050e 	sub.w	r5, r5, lr
90021b76:	940b      	str	r4, [sp, #44]	; 0x2c
90021b78:	fa1f fa8a 	uxth.w	sl, sl
90021b7c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
90021b7e:	b2ad      	uxth	r5, r5
90021b80:	eba3 030a 	sub.w	r3, r3, sl
90021b84:	fb08 f505 	mul.w	r5, r8, r5
90021b88:	b29b      	uxth	r3, r3
90021b8a:	fb09 5303 	mla	r3, r9, r3, r5
90021b8e:	fb0a 3304 	mla	r3, sl, r4, r3
90021b92:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90021b94:	fb0e 3304 	mla	r3, lr, r4, r3
90021b98:	f3c3 2307 	ubfx	r3, r3, #8, #8
90021b9c:	2b00      	cmp	r3, #0
90021b9e:	f000 80d1 	beq.w	90021d44 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90021ba2:	9c08      	ldr	r4, [sp, #32]
90021ba4:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
90021ba8:	eb04 0540 	add.w	r5, r4, r0, lsl #1
90021bac:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
90021bb0:	f000 8152 	beq.w	90021e58 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
90021bb4:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
90021bb8:	ea4f 0ae9 	mov.w	sl, r9, asr #3
90021bbc:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90021bc0:	fb0a fe0e 	mul.w	lr, sl, lr
90021bc4:	fb09 f000 	mul.w	r0, r9, r0
90021bc8:	ea06 195e 	and.w	r9, r6, lr, lsr #5
90021bcc:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
90021bd0:	f100 0b20 	add.w	fp, r0, #32
90021bd4:	44ce      	add	lr, r9
90021bd6:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
90021bda:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
90021bde:	ea4f 2919 	mov.w	r9, r9, lsr #8
90021be2:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
90021be6:	ea4e 0909 	orr.w	r9, lr, r9
90021bea:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
90021bee:	8868      	ldrh	r0, [r5, #2]
90021bf0:	d019      	beq.n	90021c26 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
90021bf2:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
90021bf6:	ea4f 0ae8 	mov.w	sl, r8, asr #3
90021bfa:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90021bfe:	fb0a fe0e 	mul.w	lr, sl, lr
90021c02:	fb08 f800 	mul.w	r8, r8, r0
90021c06:	ea06 105e 	and.w	r0, r6, lr, lsr #5
90021c0a:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
90021c0e:	f108 0b20 	add.w	fp, r8, #32
90021c12:	4486      	add	lr, r0
90021c14:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
90021c18:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
90021c1c:	0a00      	lsrs	r0, r0, #8
90021c1e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90021c22:	ea4e 0000 	orr.w	r0, lr, r0
90021c26:	ea4f 4e09 	mov.w	lr, r9, lsl #16
90021c2a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
90021c2e:	ea4f 4a00 	mov.w	sl, r0, lsl #16
90021c32:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90021c36:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
90021c3a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90021c3e:	ea4e 0909 	orr.w	r9, lr, r9
90021c42:	ea4a 0000 	orr.w	r0, sl, r0
90021c46:	f1bc 0f00 	cmp.w	ip, #0
90021c4a:	f000 8107 	beq.w	90021e5c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
90021c4e:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
90021c52:	9c0a      	ldr	r4, [sp, #40]	; 0x28
90021c54:	3a01      	subs	r2, #1
90021c56:	2cff      	cmp	r4, #255	; 0xff
90021c58:	ea4f 0242 	mov.w	r2, r2, lsl #1
90021c5c:	f102 0202 	add.w	r2, r2, #2
90021c60:	eb05 0e02 	add.w	lr, r5, r2
90021c64:	5aaa      	ldrh	r2, [r5, r2]
90021c66:	d018      	beq.n	90021c9a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
90021c68:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
90021c6c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90021c70:	ea4f 08e4 	mov.w	r8, r4, asr #3
90021c74:	fb04 fa02 	mul.w	sl, r4, r2
90021c78:	fb08 f805 	mul.w	r8, r8, r5
90021c7c:	f10a 0520 	add.w	r5, sl, #32
90021c80:	ea06 1258 	and.w	r2, r6, r8, lsr #5
90021c84:	f608 0801 	addw	r8, r8, #2049	; 0x801
90021c88:	eb05 251a 	add.w	r5, r5, sl, lsr #8
90021c8c:	4442      	add	r2, r8
90021c8e:	0a2d      	lsrs	r5, r5, #8
90021c90:	ea06 1252 	and.w	r2, r6, r2, lsr #5
90021c94:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90021c98:	432a      	orrs	r2, r5
90021c9a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90021c9c:	f8be 5002 	ldrh.w	r5, [lr, #2]
90021ca0:	2cff      	cmp	r4, #255	; 0xff
90021ca2:	d01a      	beq.n	90021cda <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
90021ca4:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
90021ca8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90021cac:	ea4f 08e4 	mov.w	r8, r4, asr #3
90021cb0:	fb04 fa05 	mul.w	sl, r4, r5
90021cb4:	fb08 f80e 	mul.w	r8, r8, lr
90021cb8:	f10a 0e20 	add.w	lr, sl, #32
90021cbc:	ea06 1558 	and.w	r5, r6, r8, lsr #5
90021cc0:	f608 0801 	addw	r8, r8, #2049	; 0x801
90021cc4:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
90021cc8:	4445      	add	r5, r8
90021cca:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90021cce:	ea06 1555 	and.w	r5, r6, r5, lsr #5
90021cd2:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
90021cd6:	ea45 050e 	orr.w	r5, r5, lr
90021cda:	fb1c fe01 	smulbb	lr, ip, r1
90021cde:	f1cc 0810 	rsb	r8, ip, #16
90021ce2:	ea4f 4a02 	mov.w	sl, r2, lsl #16
90021ce6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90021cea:	ea4f 0eee 	mov.w	lr, lr, asr #3
90021cee:	eba8 0801 	sub.w	r8, r8, r1
90021cf2:	ea4f 4b05 	mov.w	fp, r5, lsl #16
90021cf6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90021cfa:	ebce 0141 	rsb	r1, lr, r1, lsl #1
90021cfe:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
90021d02:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
90021d06:	ea4a 0202 	orr.w	r2, sl, r2
90021d0a:	4341      	muls	r1, r0
90021d0c:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
90021d10:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
90021d14:	fb09 1108 	mla	r1, r9, r8, r1
90021d18:	ea4b 0505 	orr.w	r5, fp, r5
90021d1c:	fb0c 1102 	mla	r1, ip, r2, r1
90021d20:	fb0e 1e05 	mla	lr, lr, r5, r1
90021d24:	ea4f 525e 	mov.w	r2, lr, lsr #21
90021d28:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
90021d2c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90021d30:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
90021d34:	ea42 0e0e 	orr.w	lr, r2, lr
90021d38:	fa1f f28e 	uxth.w	r2, lr
90021d3c:	2bff      	cmp	r3, #255	; 0xff
90021d3e:	f040 80a1 	bne.w	90021e84 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x424>
90021d42:	803a      	strh	r2, [r7, #0]
90021d44:	9b1d      	ldr	r3, [sp, #116]	; 0x74
90021d46:	3702      	adds	r7, #2
90021d48:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
90021d4a:	4413      	add	r3, r2
90021d4c:	9a1e      	ldr	r2, [sp, #120]	; 0x78
90021d4e:	931d      	str	r3, [sp, #116]	; 0x74
90021d50:	9b20      	ldr	r3, [sp, #128]	; 0x80
90021d52:	441a      	add	r2, r3
90021d54:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90021d56:	3b01      	subs	r3, #1
90021d58:	921e      	str	r2, [sp, #120]	; 0x78
90021d5a:	930f      	str	r3, [sp, #60]	; 0x3c
90021d5c:	e6c7      	b.n	90021aee <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90021d5e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
90021d60:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
90021d62:	9c1e      	ldr	r4, [sp, #120]	; 0x78
90021d64:	4433      	add	r3, r6
90021d66:	931d      	str	r3, [sp, #116]	; 0x74
90021d68:	9b20      	ldr	r3, [sp, #128]	; 0x80
90021d6a:	441c      	add	r4, r3
90021d6c:	9b06      	ldr	r3, [sp, #24]
90021d6e:	3b01      	subs	r3, #1
90021d70:	941e      	str	r4, [sp, #120]	; 0x78
90021d72:	9306      	str	r3, [sp, #24]
90021d74:	9b07      	ldr	r3, [sp, #28]
90021d76:	3302      	adds	r3, #2
90021d78:	9307      	str	r3, [sp, #28]
90021d7a:	e696      	b.n	90021aaa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
90021d7c:	d028      	beq.n	90021dd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90021d7e:	9b06      	ldr	r3, [sp, #24]
90021d80:	981f      	ldr	r0, [sp, #124]	; 0x7c
90021d82:	3b01      	subs	r3, #1
90021d84:	9d1d      	ldr	r5, [sp, #116]	; 0x74
90021d86:	fb00 5003 	mla	r0, r0, r3, r5
90021d8a:	1400      	asrs	r0, r0, #16
90021d8c:	f53f aeaa 	bmi.w	90021ae4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90021d90:	3901      	subs	r1, #1
90021d92:	4288      	cmp	r0, r1
90021d94:	f6bf aea6 	bge.w	90021ae4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90021d98:	9920      	ldr	r1, [sp, #128]	; 0x80
90021d9a:	981e      	ldr	r0, [sp, #120]	; 0x78
90021d9c:	fb01 0303 	mla	r3, r1, r3, r0
90021da0:	141b      	asrs	r3, r3, #16
90021da2:	f53f ae9f 	bmi.w	90021ae4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90021da6:	3a01      	subs	r2, #1
90021da8:	4293      	cmp	r3, r2
90021daa:	f6bf ae9b 	bge.w	90021ae4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90021dae:	9b06      	ldr	r3, [sp, #24]
90021db0:	f64f 061f 	movw	r6, #63519	; 0xf81f
90021db4:	f8dd e01c 	ldr.w	lr, [sp, #28]
90021db8:	930f      	str	r3, [sp, #60]	; 0x3c
90021dba:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90021dbc:	2b00      	cmp	r3, #0
90021dbe:	f300 80b6 	bgt.w	90021f2e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ce>
90021dc2:	9b06      	ldr	r3, [sp, #24]
90021dc4:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
90021dc8:	9b07      	ldr	r3, [sp, #28]
90021dca:	eb03 0344 	add.w	r3, r3, r4, lsl #1
90021dce:	9307      	str	r3, [sp, #28]
90021dd0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90021dd2:	2b00      	cmp	r3, #0
90021dd4:	f340 8218 	ble.w	90022208 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
90021dd8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90021ddc:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90021dde:	ee30 0a04 	vadd.f32	s0, s0, s8
90021de2:	ee70 0aa4 	vadd.f32	s1, s1, s9
90021de6:	eef0 6a62 	vmov.f32	s13, s5
90021dea:	eec7 7a00 	vdiv.f32	s15, s14, s0
90021dee:	ee31 1a05 	vadd.f32	s2, s2, s10
90021df2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90021df6:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
90021dfa:	eef0 6a43 	vmov.f32	s13, s6
90021dfe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90021e02:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
90021e06:	ee20 7aa7 	vmul.f32	s14, s1, s15
90021e0a:	ee61 7a27 	vmul.f32	s15, s2, s15
90021e0e:	ee77 2a62 	vsub.f32	s5, s14, s5
90021e12:	ee37 3ac3 	vsub.f32	s6, s15, s6
90021e16:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90021e1a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90021e1e:	ee12 2a90 	vmov	r2, s5
90021e22:	eef0 2a47 	vmov.f32	s5, s14
90021e26:	fb92 f3f3 	sdiv	r3, r2, r3
90021e2a:	ee13 2a10 	vmov	r2, s6
90021e2e:	931f      	str	r3, [sp, #124]	; 0x7c
90021e30:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90021e32:	eeb0 3a67 	vmov.f32	s6, s15
90021e36:	fb92 f3f3 	sdiv	r3, r2, r3
90021e3a:	9320      	str	r3, [sp, #128]	; 0x80
90021e3c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90021e3e:	9a10      	ldr	r2, [sp, #64]	; 0x40
90021e40:	3b01      	subs	r3, #1
90021e42:	930e      	str	r3, [sp, #56]	; 0x38
90021e44:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90021e46:	bf08      	it	eq
90021e48:	4613      	moveq	r3, r2
90021e4a:	9306      	str	r3, [sp, #24]
90021e4c:	e61f      	b.n	90021a8e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
90021e4e:	fb08 f505 	mul.w	r5, r8, r5
90021e52:	fb09 5303 	mla	r3, r9, r3, r5
90021e56:	e69f      	b.n	90021b98 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
90021e58:	4681      	mov	r9, r0
90021e5a:	e6c6      	b.n	90021bea <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
90021e5c:	f1c1 0210 	rsb	r2, r1, #16
90021e60:	4341      	muls	r1, r0
90021e62:	fb09 1902 	mla	r9, r9, r2, r1
90021e66:	ea4f 0949 	mov.w	r9, r9, lsl #1
90021e6a:	ea4f 5259 	mov.w	r2, r9, lsr #21
90021e6e:	ea4f 1959 	mov.w	r9, r9, lsr #5
90021e72:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90021e76:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
90021e7a:	ea42 0909 	orr.w	r9, r2, r9
90021e7e:	fa1f f289 	uxth.w	r2, r9
90021e82:	e75b      	b.n	90021d3c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>
90021e84:	f8b7 c000 	ldrh.w	ip, [r7]
90021e88:	43db      	mvns	r3, r3
90021e8a:	ea4f 202c 	mov.w	r0, ip, asr #8
90021e8e:	fa5f fe83 	uxtb.w	lr, r3
90021e92:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
90021e96:	ea4f 05ec 	mov.w	r5, ip, asr #3
90021e9a:	ea4f 03cc 	mov.w	r3, ip, lsl #3
90021e9e:	fb00 f00e 	mul.w	r0, r0, lr
90021ea2:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
90021ea6:	b2db      	uxtb	r3, r3
90021ea8:	1c41      	adds	r1, r0, #1
90021eaa:	fb05 f50e 	mul.w	r5, r5, lr
90021eae:	fb03 f30e 	mul.w	r3, r3, lr
90021eb2:	eb01 2010 	add.w	r0, r1, r0, lsr #8
90021eb6:	1211      	asrs	r1, r2, #8
90021eb8:	f021 0107 	bic.w	r1, r1, #7
90021ebc:	eb01 2110 	add.w	r1, r1, r0, lsr #8
90021ec0:	48d3      	ldr	r0, [pc, #844]	; (90022210 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
90021ec2:	b2c9      	uxtb	r1, r1
90021ec4:	ea00 2001 	and.w	r0, r0, r1, lsl #8
90021ec8:	1c69      	adds	r1, r5, #1
90021eca:	eb01 2515 	add.w	r5, r1, r5, lsr #8
90021ece:	10d1      	asrs	r1, r2, #3
90021ed0:	00d2      	lsls	r2, r2, #3
90021ed2:	f021 0103 	bic.w	r1, r1, #3
90021ed6:	eb01 2115 	add.w	r1, r1, r5, lsr #8
90021eda:	00c9      	lsls	r1, r1, #3
90021edc:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90021ee0:	4301      	orrs	r1, r0
90021ee2:	1c58      	adds	r0, r3, #1
90021ee4:	eb00 2313 	add.w	r3, r0, r3, lsr #8
90021ee8:	eb02 2213 	add.w	r2, r2, r3, lsr #8
90021eec:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90021ef0:	430a      	orrs	r2, r1
90021ef2:	e726      	b.n	90021d42 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
90021ef4:	f115 0e01 	adds.w	lr, r5, #1
90021ef8:	f53f af24 	bmi.w	90021d44 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90021efc:	4572      	cmp	r2, lr
90021efe:	f6ff af21 	blt.w	90021d44 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90021f02:	f110 0e01 	adds.w	lr, r0, #1
90021f06:	f53f af1d 	bmi.w	90021d44 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90021f0a:	4573      	cmp	r3, lr
90021f0c:	f6ff af1a 	blt.w	90021d44 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90021f10:	b21b      	sxth	r3, r3
90021f12:	b212      	sxth	r2, r2
90021f14:	9301      	str	r3, [sp, #4]
90021f16:	9200      	str	r2, [sp, #0]
90021f18:	e9cd 1c04 	strd	r1, ip, [sp, #16]
90021f1c:	e9cd 5002 	strd	r5, r0, [sp, #8]
90021f20:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
90021f24:	4639      	mov	r1, r7
90021f26:	9811      	ldr	r0, [sp, #68]	; 0x44
90021f28:	f7ff fc22 	bl	90021770 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
90021f2c:	e70a      	b.n	90021d44 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90021f2e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
90021f30:	f3c3 3203 	ubfx	r2, r3, #12, #4
90021f34:	9b1e      	ldr	r3, [sp, #120]	; 0x78
90021f36:	f3c3 3503 	ubfx	r5, r3, #12, #4
90021f3a:	9b24      	ldr	r3, [sp, #144]	; 0x90
90021f3c:	fa1f fc82 	uxth.w	ip, r2
90021f40:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90021f44:	9b1e      	ldr	r3, [sp, #120]	; 0x78
90021f46:	ea4f 100c 	mov.w	r0, ip, lsl #4
90021f4a:	141f      	asrs	r7, r3, #16
90021f4c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
90021f4e:	141b      	asrs	r3, r3, #16
90021f50:	fb01 3707 	mla	r7, r1, r7, r3
90021f54:	9b09      	ldr	r3, [sp, #36]	; 0x24
90021f56:	eb03 0a07 	add.w	sl, r3, r7
90021f5a:	f813 9007 	ldrb.w	r9, [r3, r7]
90021f5e:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
90021f62:	f89a 8001 	ldrb.w	r8, [sl, #1]
90021f66:	b29b      	uxth	r3, r3
90021f68:	2d00      	cmp	r5, #0
90021f6a:	f000 80fe 	beq.w	9002216a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70a>
90021f6e:	f81a 4001 	ldrb.w	r4, [sl, r1]
90021f72:	eb0a 0b01 	add.w	fp, sl, r1
90021f76:	fa1f fa85 	uxth.w	sl, r5
90021f7a:	940c      	str	r4, [sp, #48]	; 0x30
90021f7c:	fb0a fc0c 	mul.w	ip, sl, ip
90021f80:	f89b 4001 	ldrb.w	r4, [fp, #1]
90021f84:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
90021f88:	eba0 000c 	sub.w	r0, r0, ip
90021f8c:	940d      	str	r4, [sp, #52]	; 0x34
90021f8e:	fa1f fa8a 	uxth.w	sl, sl
90021f92:	b280      	uxth	r0, r0
90021f94:	eba3 030a 	sub.w	r3, r3, sl
90021f98:	fb08 f000 	mul.w	r0, r8, r0
90021f9c:	b29b      	uxth	r3, r3
90021f9e:	fb09 0303 	mla	r3, r9, r3, r0
90021fa2:	980c      	ldr	r0, [sp, #48]	; 0x30
90021fa4:	fb0a 3300 	mla	r3, sl, r0, r3
90021fa8:	fb0c 3304 	mla	r3, ip, r4, r3
90021fac:	f3c3 2307 	ubfx	r3, r3, #8, #8
90021fb0:	2b00      	cmp	r3, #0
90021fb2:	f000 80cc 	beq.w	9002214e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
90021fb6:	9808      	ldr	r0, [sp, #32]
90021fb8:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
90021fbc:	9c08      	ldr	r4, [sp, #32]
90021fbe:	eb00 0047 	add.w	r0, r0, r7, lsl #1
90021fc2:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
90021fc6:	f000 80d5 	beq.w	90022174 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
90021fca:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
90021fce:	ea4f 0ae9 	mov.w	sl, r9, asr #3
90021fd2:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
90021fd6:	fb0a fc0c 	mul.w	ip, sl, ip
90021fda:	fb09 f707 	mul.w	r7, r9, r7
90021fde:	ea06 195c 	and.w	r9, r6, ip, lsr #5
90021fe2:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
90021fe6:	f107 0b20 	add.w	fp, r7, #32
90021fea:	44cc      	add	ip, r9
90021fec:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
90021ff0:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
90021ff4:	ea4f 2919 	mov.w	r9, r9, lsr #8
90021ff8:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
90021ffc:	ea4c 0909 	orr.w	r9, ip, r9
90022000:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
90022004:	8847      	ldrh	r7, [r0, #2]
90022006:	d019      	beq.n	9002203c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5dc>
90022008:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
9002200c:	ea4f 0ae8 	mov.w	sl, r8, asr #3
90022010:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
90022014:	fb0a fc0c 	mul.w	ip, sl, ip
90022018:	fb08 f807 	mul.w	r8, r8, r7
9002201c:	ea06 175c 	and.w	r7, r6, ip, lsr #5
90022020:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
90022024:	f108 0b20 	add.w	fp, r8, #32
90022028:	44bc      	add	ip, r7
9002202a:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
9002202e:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
90022032:	0a3f      	lsrs	r7, r7, #8
90022034:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
90022038:	ea4c 0707 	orr.w	r7, ip, r7
9002203c:	ea4f 4c09 	mov.w	ip, r9, lsl #16
90022040:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
90022044:	ea4f 4a07 	mov.w	sl, r7, lsl #16
90022048:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
9002204c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
90022050:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90022054:	ea4c 0909 	orr.w	r9, ip, r9
90022058:	ea4a 0707 	orr.w	r7, sl, r7
9002205c:	2d00      	cmp	r5, #0
9002205e:	f000 808b 	beq.w	90022178 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x718>
90022062:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
90022066:	3901      	subs	r1, #1
90022068:	0049      	lsls	r1, r1, #1
9002206a:	3102      	adds	r1, #2
9002206c:	eb00 0c01 	add.w	ip, r0, r1
90022070:	5a41      	ldrh	r1, [r0, r1]
90022072:	980c      	ldr	r0, [sp, #48]	; 0x30
90022074:	28ff      	cmp	r0, #255	; 0xff
90022076:	d019      	beq.n	900220ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64c>
90022078:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
9002207c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
9002207e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90022082:	ea4f 08e4 	mov.w	r8, r4, asr #3
90022086:	fb04 fa01 	mul.w	sl, r4, r1
9002208a:	fb08 f800 	mul.w	r8, r8, r0
9002208e:	f10a 0020 	add.w	r0, sl, #32
90022092:	ea06 1158 	and.w	r1, r6, r8, lsr #5
90022096:	f608 0801 	addw	r8, r8, #2049	; 0x801
9002209a:	eb00 201a 	add.w	r0, r0, sl, lsr #8
9002209e:	4441      	add	r1, r8
900220a0:	0a00      	lsrs	r0, r0, #8
900220a2:	ea06 1151 	and.w	r1, r6, r1, lsr #5
900220a6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
900220aa:	4301      	orrs	r1, r0
900220ac:	9c0d      	ldr	r4, [sp, #52]	; 0x34
900220ae:	f8bc 0002 	ldrh.w	r0, [ip, #2]
900220b2:	2cff      	cmp	r4, #255	; 0xff
900220b4:	d01a      	beq.n	900220ec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68c>
900220b6:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
900220ba:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
900220be:	ea4f 08e4 	mov.w	r8, r4, asr #3
900220c2:	fb04 fa00 	mul.w	sl, r4, r0
900220c6:	fb08 f80c 	mul.w	r8, r8, ip
900220ca:	f10a 0c20 	add.w	ip, sl, #32
900220ce:	ea06 1058 	and.w	r0, r6, r8, lsr #5
900220d2:	f608 0801 	addw	r8, r8, #2049	; 0x801
900220d6:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
900220da:	4440      	add	r0, r8
900220dc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900220e0:	ea06 1050 	and.w	r0, r6, r0, lsr #5
900220e4:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
900220e8:	ea40 000c 	orr.w	r0, r0, ip
900220ec:	fb15 fc02 	smulbb	ip, r5, r2
900220f0:	f1c5 0810 	rsb	r8, r5, #16
900220f4:	ea4f 4a01 	mov.w	sl, r1, lsl #16
900220f8:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
900220fc:	ea4f 0cec 	mov.w	ip, ip, asr #3
90022100:	eba8 0802 	sub.w	r8, r8, r2
90022104:	ea4f 4b00 	mov.w	fp, r0, lsl #16
90022108:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
9002210c:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
90022110:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90022114:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
90022118:	ea4a 0101 	orr.w	r1, sl, r1
9002211c:	437a      	muls	r2, r7
9002211e:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
90022122:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
90022126:	fb09 2208 	mla	r2, r9, r8, r2
9002212a:	ea4b 0000 	orr.w	r0, fp, r0
9002212e:	fb05 2201 	mla	r2, r5, r1, r2
90022132:	fb0c 2200 	mla	r2, ip, r0, r2
90022136:	0d57      	lsrs	r7, r2, #21
90022138:	0952      	lsrs	r2, r2, #5
9002213a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
9002213e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90022142:	433a      	orrs	r2, r7
90022144:	2bff      	cmp	r3, #255	; 0xff
90022146:	b292      	uxth	r2, r2
90022148:	d127      	bne.n	9002219a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x73a>
9002214a:	f8ae 2000 	strh.w	r2, [lr]
9002214e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
90022150:	f10e 0e02 	add.w	lr, lr, #2
90022154:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
90022156:	4413      	add	r3, r2
90022158:	9a1e      	ldr	r2, [sp, #120]	; 0x78
9002215a:	931d      	str	r3, [sp, #116]	; 0x74
9002215c:	9b20      	ldr	r3, [sp, #128]	; 0x80
9002215e:	441a      	add	r2, r3
90022160:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90022162:	3b01      	subs	r3, #1
90022164:	921e      	str	r2, [sp, #120]	; 0x78
90022166:	930f      	str	r3, [sp, #60]	; 0x3c
90022168:	e627      	b.n	90021dba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
9002216a:	fb08 f000 	mul.w	r0, r8, r0
9002216e:	fb09 0303 	mla	r3, r9, r3, r0
90022172:	e71b      	b.n	90021fac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54c>
90022174:	46b9      	mov	r9, r7
90022176:	e743      	b.n	90022000 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a0>
90022178:	f1c2 0110 	rsb	r1, r2, #16
9002217c:	437a      	muls	r2, r7
9002217e:	fb09 2901 	mla	r9, r9, r1, r2
90022182:	ea4f 0949 	mov.w	r9, r9, lsl #1
90022186:	ea4f 5059 	mov.w	r0, r9, lsr #21
9002218a:	ea4f 1259 	mov.w	r2, r9, lsr #5
9002218e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90022192:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90022196:	4302      	orrs	r2, r0
90022198:	e7d4      	b.n	90022144 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e4>
9002219a:	f8be 7000 	ldrh.w	r7, [lr]
9002219e:	43db      	mvns	r3, r3
900221a0:	4c1b      	ldr	r4, [pc, #108]	; (90022210 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
900221a2:	1238      	asrs	r0, r7, #8
900221a4:	fa5f fc83 	uxtb.w	ip, r3
900221a8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
900221ac:	10fd      	asrs	r5, r7, #3
900221ae:	00fb      	lsls	r3, r7, #3
900221b0:	fb00 f00c 	mul.w	r0, r0, ip
900221b4:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
900221b8:	b2db      	uxtb	r3, r3
900221ba:	fb05 f10c 	mul.w	r1, r5, ip
900221be:	1c45      	adds	r5, r0, #1
900221c0:	fb03 f30c 	mul.w	r3, r3, ip
900221c4:	eb05 2010 	add.w	r0, r5, r0, lsr #8
900221c8:	1215      	asrs	r5, r2, #8
900221ca:	f025 0507 	bic.w	r5, r5, #7
900221ce:	eb05 2010 	add.w	r0, r5, r0, lsr #8
900221d2:	1c4d      	adds	r5, r1, #1
900221d4:	eb05 2511 	add.w	r5, r5, r1, lsr #8
900221d8:	10d1      	asrs	r1, r2, #3
900221da:	b2c0      	uxtb	r0, r0
900221dc:	f021 0103 	bic.w	r1, r1, #3
900221e0:	00d2      	lsls	r2, r2, #3
900221e2:	ea04 2000 	and.w	r0, r4, r0, lsl #8
900221e6:	eb01 2115 	add.w	r1, r1, r5, lsr #8
900221ea:	00c9      	lsls	r1, r1, #3
900221ec:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
900221f0:	4308      	orrs	r0, r1
900221f2:	1c59      	adds	r1, r3, #1
900221f4:	eb01 2313 	add.w	r3, r1, r3, lsr #8
900221f8:	eb02 2313 	add.w	r3, r2, r3, lsr #8
900221fc:	f3c3 03c4 	ubfx	r3, r3, #3, #5
90022200:	4318      	orrs	r0, r3
90022202:	f8ae 0000 	strh.w	r0, [lr]
90022206:	e7a2      	b.n	9002214e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
90022208:	b013      	add	sp, #76	; 0x4c
9002220a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002220e:	bf00      	nop
90022210:	fffff800 	.word	0xfffff800

90022214 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
90022214:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90022218:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
9002221c:	f9bd a020 	ldrsh.w	sl, [sp, #32]
90022220:	fb05 4c03 	mla	ip, r5, r3, r4
90022224:	2d00      	cmp	r5, #0
90022226:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
9002222a:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
9002222e:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
90022232:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
90022236:	8808      	ldrh	r0, [r1, #0]
90022238:	f2c0 80a7 	blt.w	9002238a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
9002223c:	45aa      	cmp	sl, r5
9002223e:	f340 80a4 	ble.w	9002238a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
90022242:	2c00      	cmp	r4, #0
90022244:	f2c0 809f 	blt.w	90022386 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
90022248:	42a3      	cmp	r3, r4
9002224a:	f340 809c 	ble.w	90022386 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
9002224e:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
90022252:	1c62      	adds	r2, r4, #1
90022254:	f100 809c 	bmi.w	90022390 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
90022258:	4293      	cmp	r3, r2
9002225a:	f340 8099 	ble.w	90022390 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
9002225e:	f1b9 0f00 	cmp.w	r9, #0
90022262:	f000 8095 	beq.w	90022390 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
90022266:	f8be c002 	ldrh.w	ip, [lr, #2]
9002226a:	3501      	adds	r5, #1
9002226c:	f100 8094 	bmi.w	90022398 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
90022270:	45aa      	cmp	sl, r5
90022272:	f340 8091 	ble.w	90022398 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
90022276:	2f00      	cmp	r7, #0
90022278:	f000 808e 	beq.w	90022398 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
9002227c:	2c00      	cmp	r4, #0
9002227e:	f2c0 8089 	blt.w	90022394 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
90022282:	42a3      	cmp	r3, r4
90022284:	f340 8086 	ble.w	90022394 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
90022288:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
9002228c:	3401      	adds	r4, #1
9002228e:	f100 8086 	bmi.w	9002239e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
90022292:	42a3      	cmp	r3, r4
90022294:	f340 8083 	ble.w	9002239e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
90022298:	f1b9 0f00 	cmp.w	r9, #0
9002229c:	d07f      	beq.n	9002239e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
9002229e:	3301      	adds	r3, #1
900222a0:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
900222a4:	ea4f 4408 	mov.w	r4, r8, lsl #16
900222a8:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
900222ac:	fb19 fe07 	smulbb	lr, r9, r7
900222b0:	f1c7 0210 	rsb	r2, r7, #16
900222b4:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
900222b8:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
900222bc:	eba2 0209 	sub.w	r2, r2, r9
900222c0:	ea44 0808 	orr.w	r8, r4, r8
900222c4:	ea4f 440c 	mov.w	r4, ip, lsl #16
900222c8:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
900222cc:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
900222d0:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
900222d4:	ebce 0747 	rsb	r7, lr, r7, lsl #1
900222d8:	ea44 0c0c 	orr.w	ip, r4, ip
900222dc:	ebce 0449 	rsb	r4, lr, r9, lsl #1
900222e0:	fb04 f40c 	mul.w	r4, r4, ip
900222e4:	fb02 4808 	mla	r8, r2, r8, r4
900222e8:	041a      	lsls	r2, r3, #16
900222ea:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
900222ee:	b2b4      	uxth	r4, r6
900222f0:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
900222f4:	43f6      	mvns	r6, r6
900222f6:	4313      	orrs	r3, r2
900222f8:	042a      	lsls	r2, r5, #16
900222fa:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
900222fe:	b2f6      	uxtb	r6, r6
90022300:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
90022304:	fb0e 8303 	mla	r3, lr, r3, r8
90022308:	432a      	orrs	r2, r5
9002230a:	fb07 3202 	mla	r2, r7, r2, r3
9002230e:	10c7      	asrs	r7, r0, #3
90022310:	0d53      	lsrs	r3, r2, #21
90022312:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
90022316:	0952      	lsrs	r2, r2, #5
90022318:	fb17 f706 	smulbb	r7, r7, r6
9002231c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90022320:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90022324:	431a      	orrs	r2, r3
90022326:	b293      	uxth	r3, r2
90022328:	1202      	asrs	r2, r0, #8
9002232a:	121d      	asrs	r5, r3, #8
9002232c:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
90022330:	00c0      	lsls	r0, r0, #3
90022332:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
90022336:	fb12 f206 	smulbb	r2, r2, r6
9002233a:	b2c0      	uxtb	r0, r0
9002233c:	fb05 2504 	mla	r5, r5, r4, r2
90022340:	10da      	asrs	r2, r3, #3
90022342:	fb10 f006 	smulbb	r0, r0, r6
90022346:	00db      	lsls	r3, r3, #3
90022348:	b2ad      	uxth	r5, r5
9002234a:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
9002234e:	b2db      	uxtb	r3, r3
90022350:	fb02 7204 	mla	r2, r2, r4, r7
90022354:	fb03 0004 	mla	r0, r3, r4, r0
90022358:	1c6b      	adds	r3, r5, #1
9002235a:	b292      	uxth	r2, r2
9002235c:	b280      	uxth	r0, r0
9002235e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90022362:	1c43      	adds	r3, r0, #1
90022364:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
90022368:	eb03 2310 	add.w	r3, r3, r0, lsr #8
9002236c:	1c50      	adds	r0, r2, #1
9002236e:	eb00 2212 	add.w	r2, r0, r2, lsr #8
90022372:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90022376:	0952      	lsrs	r2, r2, #5
90022378:	432b      	orrs	r3, r5
9002237a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9002237e:	4313      	orrs	r3, r2
90022380:	800b      	strh	r3, [r1, #0]
90022382:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90022386:	4680      	mov	r8, r0
90022388:	e763      	b.n	90022252 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
9002238a:	4684      	mov	ip, r0
9002238c:	4680      	mov	r8, r0
9002238e:	e76c      	b.n	9002226a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
90022390:	4684      	mov	ip, r0
90022392:	e76a      	b.n	9002226a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
90022394:	4605      	mov	r5, r0
90022396:	e779      	b.n	9002228c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
90022398:	4603      	mov	r3, r0
9002239a:	4605      	mov	r5, r0
9002239c:	e782      	b.n	900222a4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
9002239e:	4603      	mov	r3, r0
900223a0:	e780      	b.n	900222a4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

900223a2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900223a2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900223a6:	b093      	sub	sp, #76	; 0x4c
900223a8:	461d      	mov	r5, r3
900223aa:	9210      	str	r2, [sp, #64]	; 0x40
900223ac:	9b21      	ldr	r3, [sp, #132]	; 0x84
900223ae:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
900223b2:	910a      	str	r1, [sp, #40]	; 0x28
900223b4:	920b      	str	r2, [sp, #44]	; 0x2c
900223b6:	6859      	ldr	r1, [r3, #4]
900223b8:	681b      	ldr	r3, [r3, #0]
900223ba:	9011      	str	r0, [sp, #68]	; 0x44
900223bc:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
900223c0:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
900223c4:	fb01 2707 	mla	r7, r1, r7, r2
900223c8:	eb03 0347 	add.w	r3, r3, r7, lsl #1
900223cc:	9307      	str	r3, [sp, #28]
900223ce:	9b24      	ldr	r3, [sp, #144]	; 0x90
900223d0:	681b      	ldr	r3, [r3, #0]
900223d2:	9309      	str	r3, [sp, #36]	; 0x24
900223d4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
900223d6:	43db      	mvns	r3, r3
900223d8:	b2db      	uxtb	r3, r3
900223da:	9308      	str	r3, [sp, #32]
900223dc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
900223de:	2b00      	cmp	r3, #0
900223e0:	dc03      	bgt.n	900223ea <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
900223e2:	9b10      	ldr	r3, [sp, #64]	; 0x40
900223e4:	2b00      	cmp	r3, #0
900223e6:	f340 8205 	ble.w	900227f4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
900223ea:	9b24      	ldr	r3, [sp, #144]	; 0x90
900223ec:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900223f0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900223f4:	1e48      	subs	r0, r1, #1
900223f6:	f102 3cff 	add.w	ip, r2, #4294967295
900223fa:	2d00      	cmp	r5, #0
900223fc:	f340 80da 	ble.w	900225b4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
90022400:	ea5f 4e24 	movs.w	lr, r4, asr #16
90022404:	ea4f 4326 	mov.w	r3, r6, asr #16
90022408:	d406      	bmi.n	90022418 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9002240a:	4586      	cmp	lr, r0
9002240c:	da04      	bge.n	90022418 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9002240e:	2b00      	cmp	r3, #0
90022410:	db02      	blt.n	90022418 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
90022412:	4563      	cmp	r3, ip
90022414:	f2c0 80cf 	blt.w	900225b6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
90022418:	f11e 0e01 	adds.w	lr, lr, #1
9002241c:	f100 80c1 	bmi.w	900225a2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
90022420:	4571      	cmp	r1, lr
90022422:	f2c0 80be 	blt.w	900225a2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
90022426:	3301      	adds	r3, #1
90022428:	f100 80bb 	bmi.w	900225a2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
9002242c:	429a      	cmp	r2, r3
9002242e:	f2c0 80b8 	blt.w	900225a2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
90022432:	46a9      	mov	r9, r5
90022434:	f8dd 801c 	ldr.w	r8, [sp, #28]
90022438:	f1b9 0f00 	cmp.w	r9, #0
9002243c:	f340 80d8 	ble.w	900225f0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
90022440:	9b24      	ldr	r3, [sp, #144]	; 0x90
90022442:	1421      	asrs	r1, r4, #16
90022444:	ea4f 4026 	mov.w	r0, r6, asr #16
90022448:	f3c4 3203 	ubfx	r2, r4, #12, #4
9002244c:	f3c6 3c03 	ubfx	ip, r6, #12, #4
90022450:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
90022454:	f100 8112 	bmi.w	9002267c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
90022458:	f10e 3aff 	add.w	sl, lr, #4294967295
9002245c:	4551      	cmp	r1, sl
9002245e:	f280 810d 	bge.w	9002267c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
90022462:	2800      	cmp	r0, #0
90022464:	f2c0 810a 	blt.w	9002267c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
90022468:	f103 3aff 	add.w	sl, r3, #4294967295
9002246c:	4550      	cmp	r0, sl
9002246e:	f280 8105 	bge.w	9002267c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
90022472:	fa0f f38e 	sxth.w	r3, lr
90022476:	fb00 1103 	mla	r1, r0, r3, r1
9002247a:	9809      	ldr	r0, [sp, #36]	; 0x24
9002247c:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
90022480:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
90022484:	f8ba 1002 	ldrh.w	r1, [sl, #2]
90022488:	f1bc 0f00 	cmp.w	ip, #0
9002248c:	d007      	beq.n	9002249e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
9002248e:	005b      	lsls	r3, r3, #1
90022490:	eb0a 0003 	add.w	r0, sl, r3
90022494:	f83a 3003 	ldrh.w	r3, [sl, r3]
90022498:	930c      	str	r3, [sp, #48]	; 0x30
9002249a:	8843      	ldrh	r3, [r0, #2]
9002249c:	930d      	str	r3, [sp, #52]	; 0x34
9002249e:	ea4f 400e 	mov.w	r0, lr, lsl #16
900224a2:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
900224a6:	fb12 f30c 	smulbb	r3, r2, ip
900224aa:	ea4f 4a01 	mov.w	sl, r1, lsl #16
900224ae:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
900224b2:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
900224b6:	10db      	asrs	r3, r3, #3
900224b8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
900224bc:	ea40 000e 	orr.w	r0, r0, lr
900224c0:	f1cc 0e10 	rsb	lr, ip, #16
900224c4:	ea4a 0101 	orr.w	r1, sl, r1
900224c8:	9f08      	ldr	r7, [sp, #32]
900224ca:	ebae 0e02 	sub.w	lr, lr, r2
900224ce:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
900224d2:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
900224d6:	4351      	muls	r1, r2
900224d8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
900224da:	fb0e 1e00 	mla	lr, lr, r0, r1
900224de:	990c      	ldr	r1, [sp, #48]	; 0x30
900224e0:	0410      	lsls	r0, r2, #16
900224e2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
900224e6:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
900224ea:	4310      	orrs	r0, r2
900224ec:	9a0c      	ldr	r2, [sp, #48]	; 0x30
900224ee:	0412      	lsls	r2, r2, #16
900224f0:	fb03 e000 	mla	r0, r3, r0, lr
900224f4:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
900224f8:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
900224fc:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
90022500:	ea42 020e 	orr.w	r2, r2, lr
90022504:	fb03 0302 	mla	r3, r3, r2, r0
90022508:	f8b8 0000 	ldrh.w	r0, [r8]
9002250c:	0d5a      	lsrs	r2, r3, #21
9002250e:	095b      	lsrs	r3, r3, #5
90022510:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90022514:	1201      	asrs	r1, r0, #8
90022516:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
9002251a:	ea4f 0ee0 	mov.w	lr, r0, asr #3
9002251e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
90022522:	00c0      	lsls	r0, r0, #3
90022524:	4313      	orrs	r3, r2
90022526:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
9002252a:	fb11 f107 	smulbb	r1, r1, r7
9002252e:	b2c0      	uxtb	r0, r0
90022530:	b29b      	uxth	r3, r3
90022532:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
90022536:	fb10 f007 	smulbb	r0, r0, r7
9002253a:	fb1e fe07 	smulbb	lr, lr, r7
9002253e:	ea4f 2c23 	mov.w	ip, r3, asr #8
90022542:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
90022546:	fb0c 1c02 	mla	ip, ip, r2, r1
9002254a:	10d9      	asrs	r1, r3, #3
9002254c:	00db      	lsls	r3, r3, #3
9002254e:	fa1f fc8c 	uxth.w	ip, ip
90022552:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
90022556:	b2db      	uxtb	r3, r3
90022558:	fb01 e102 	mla	r1, r1, r2, lr
9002255c:	fb03 0302 	mla	r3, r3, r2, r0
90022560:	b289      	uxth	r1, r1
90022562:	b29a      	uxth	r2, r3
90022564:	f10c 0301 	add.w	r3, ip, #1
90022568:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
9002256c:	1c53      	adds	r3, r2, #1
9002256e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90022572:	1c4a      	adds	r2, r1, #1
90022574:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
90022578:	eb02 2111 	add.w	r1, r2, r1, lsr #8
9002257c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90022580:	0949      	lsrs	r1, r1, #5
90022582:	ea43 030c 	orr.w	r3, r3, ip
90022586:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
9002258a:	430b      	orrs	r3, r1
9002258c:	f8a8 3000 	strh.w	r3, [r8]
90022590:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90022592:	f108 0802 	add.w	r8, r8, #2
90022596:	f109 39ff 	add.w	r9, r9, #4294967295
9002259a:	441c      	add	r4, r3
9002259c:	9b20      	ldr	r3, [sp, #128]	; 0x80
9002259e:	441e      	add	r6, r3
900225a0:	e74a      	b.n	90022438 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
900225a2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
900225a4:	3d01      	subs	r5, #1
900225a6:	441c      	add	r4, r3
900225a8:	9b20      	ldr	r3, [sp, #128]	; 0x80
900225aa:	441e      	add	r6, r3
900225ac:	9b07      	ldr	r3, [sp, #28]
900225ae:	3302      	adds	r3, #2
900225b0:	9307      	str	r3, [sp, #28]
900225b2:	e722      	b.n	900223fa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
900225b4:	d022      	beq.n	900225fc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
900225b6:	1e6b      	subs	r3, r5, #1
900225b8:	981f      	ldr	r0, [sp, #124]	; 0x7c
900225ba:	fb00 4003 	mla	r0, r0, r3, r4
900225be:	1400      	asrs	r0, r0, #16
900225c0:	f53f af37 	bmi.w	90022432 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
900225c4:	3901      	subs	r1, #1
900225c6:	4288      	cmp	r0, r1
900225c8:	f6bf af33 	bge.w	90022432 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
900225cc:	9920      	ldr	r1, [sp, #128]	; 0x80
900225ce:	fb01 6303 	mla	r3, r1, r3, r6
900225d2:	141b      	asrs	r3, r3, #16
900225d4:	f53f af2d 	bmi.w	90022432 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
900225d8:	3a01      	subs	r2, #1
900225da:	4293      	cmp	r3, r2
900225dc:	f6bf af29 	bge.w	90022432 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
900225e0:	46a8      	mov	r8, r5
900225e2:	f8dd 901c 	ldr.w	r9, [sp, #28]
900225e6:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
900225ea:	f1b8 0f00 	cmp.w	r8, #0
900225ee:	dc60      	bgt.n	900226b2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x310>
900225f0:	9b07      	ldr	r3, [sp, #28]
900225f2:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
900225f6:	eb03 0345 	add.w	r3, r3, r5, lsl #1
900225fa:	9307      	str	r3, [sp, #28]
900225fc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
900225fe:	2b00      	cmp	r3, #0
90022600:	f340 80f8 	ble.w	900227f4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90022604:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90022608:	9b1c      	ldr	r3, [sp, #112]	; 0x70
9002260a:	ee30 0a04 	vadd.f32	s0, s0, s8
9002260e:	ee70 0aa4 	vadd.f32	s1, s1, s9
90022612:	eef0 6a62 	vmov.f32	s13, s5
90022616:	eec7 7a00 	vdiv.f32	s15, s14, s0
9002261a:	ee31 1a05 	vadd.f32	s2, s2, s10
9002261e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90022622:	ee16 4a90 	vmov	r4, s13
90022626:	eef0 6a43 	vmov.f32	s13, s6
9002262a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002262e:	ee16 6a90 	vmov	r6, s13
90022632:	ee20 7aa7 	vmul.f32	s14, s1, s15
90022636:	ee61 7a27 	vmul.f32	s15, s2, s15
9002263a:	ee77 2a62 	vsub.f32	s5, s14, s5
9002263e:	ee37 3ac3 	vsub.f32	s6, s15, s6
90022642:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90022646:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9002264a:	ee12 2a90 	vmov	r2, s5
9002264e:	eef0 2a47 	vmov.f32	s5, s14
90022652:	fb92 f3f3 	sdiv	r3, r2, r3
90022656:	ee13 2a10 	vmov	r2, s6
9002265a:	931f      	str	r3, [sp, #124]	; 0x7c
9002265c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
9002265e:	eeb0 3a67 	vmov.f32	s6, s15
90022662:	fb92 f3f3 	sdiv	r3, r2, r3
90022666:	9320      	str	r3, [sp, #128]	; 0x80
90022668:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9002266a:	9a10      	ldr	r2, [sp, #64]	; 0x40
9002266c:	3b01      	subs	r3, #1
9002266e:	930a      	str	r3, [sp, #40]	; 0x28
90022670:	bf08      	it	eq
90022672:	4615      	moveq	r5, r2
90022674:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90022676:	bf18      	it	ne
90022678:	461d      	movne	r5, r3
9002267a:	e6af      	b.n	900223dc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
9002267c:	f111 0a01 	adds.w	sl, r1, #1
90022680:	d486      	bmi.n	90022590 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
90022682:	45d6      	cmp	lr, sl
90022684:	db84      	blt.n	90022590 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
90022686:	f110 0a01 	adds.w	sl, r0, #1
9002268a:	d481      	bmi.n	90022590 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
9002268c:	4553      	cmp	r3, sl
9002268e:	f6ff af7f 	blt.w	90022590 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
90022692:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
90022694:	b21b      	sxth	r3, r3
90022696:	9101      	str	r1, [sp, #4]
90022698:	4641      	mov	r1, r8
9002269a:	9300      	str	r3, [sp, #0]
9002269c:	fa0f f38e 	sxth.w	r3, lr
900226a0:	e9cd 0202 	strd	r0, r2, [sp, #8]
900226a4:	e9cd c704 	strd	ip, r7, [sp, #16]
900226a8:	9a09      	ldr	r2, [sp, #36]	; 0x24
900226aa:	9811      	ldr	r0, [sp, #68]	; 0x44
900226ac:	f7ff fdb2 	bl	90022214 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
900226b0:	e76e      	b.n	90022590 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
900226b2:	9b24      	ldr	r3, [sp, #144]	; 0x90
900226b4:	1430      	asrs	r0, r6, #16
900226b6:	9f09      	ldr	r7, [sp, #36]	; 0x24
900226b8:	f3c6 3e03 	ubfx	lr, r6, #12, #4
900226bc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900226c0:	1423      	asrs	r3, r4, #16
900226c2:	f3c4 3203 	ubfx	r2, r4, #12, #4
900226c6:	fb01 3000 	mla	r0, r1, r0, r3
900226ca:	9b09      	ldr	r3, [sp, #36]	; 0x24
900226cc:	eb03 0340 	add.w	r3, r3, r0, lsl #1
900226d0:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
900226d4:	8858      	ldrh	r0, [r3, #2]
900226d6:	f1be 0f00 	cmp.w	lr, #0
900226da:	d00b      	beq.n	900226f4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
900226dc:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
900226e0:	3901      	subs	r1, #1
900226e2:	0049      	lsls	r1, r1, #1
900226e4:	3102      	adds	r1, #2
900226e6:	eb03 0b01 	add.w	fp, r3, r1
900226ea:	5a5b      	ldrh	r3, [r3, r1]
900226ec:	930e      	str	r3, [sp, #56]	; 0x38
900226ee:	f8bb 3002 	ldrh.w	r3, [fp, #2]
900226f2:	930f      	str	r3, [sp, #60]	; 0x3c
900226f4:	ea4f 410c 	mov.w	r1, ip, lsl #16
900226f8:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
900226fc:	fb12 f30e 	smulbb	r3, r2, lr
90022700:	ea4f 4b00 	mov.w	fp, r0, lsl #16
90022704:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
90022708:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
9002270c:	10db      	asrs	r3, r3, #3
9002270e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
90022712:	ea41 010c 	orr.w	r1, r1, ip
90022716:	f1ce 0c10 	rsb	ip, lr, #16
9002271a:	ea4b 0000 	orr.w	r0, fp, r0
9002271e:	9f08      	ldr	r7, [sp, #32]
90022720:	ebac 0c02 	sub.w	ip, ip, r2
90022724:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
90022728:	f108 38ff 	add.w	r8, r8, #4294967295
9002272c:	4350      	muls	r0, r2
9002272e:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
90022732:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
90022734:	fb0c 0c01 	mla	ip, ip, r1, r0
90022738:	980e      	ldr	r0, [sp, #56]	; 0x38
9002273a:	ea4f 4b02 	mov.w	fp, r2, lsl #16
9002273e:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
90022742:	9a0e      	ldr	r2, [sp, #56]	; 0x38
90022744:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90022748:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
9002274c:	0412      	lsls	r2, r2, #16
9002274e:	ea4b 0101 	orr.w	r1, fp, r1
90022752:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
90022756:	fb03 c101 	mla	r1, r3, r1, ip
9002275a:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
9002275e:	4302      	orrs	r2, r0
90022760:	fb03 1202 	mla	r2, r3, r2, r1
90022764:	ea4f 5b52 	mov.w	fp, r2, lsr #21
90022768:	0952      	lsrs	r2, r2, #5
9002276a:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
9002276e:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
90022772:	f8b9 2000 	ldrh.w	r2, [r9]
90022776:	ea4b 0303 	orr.w	r3, fp, r3
9002277a:	1211      	asrs	r1, r2, #8
9002277c:	ea4f 0ce2 	mov.w	ip, r2, asr #3
90022780:	b29b      	uxth	r3, r3
90022782:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
90022786:	00d2      	lsls	r2, r2, #3
90022788:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
9002278c:	fb11 f107 	smulbb	r1, r1, r7
90022790:	1218      	asrs	r0, r3, #8
90022792:	fb1c fc07 	smulbb	ip, ip, r7
90022796:	b2d2      	uxtb	r2, r2
90022798:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
9002279c:	fb12 f207 	smulbb	r2, r2, r7
900227a0:	fb00 100a 	mla	r0, r0, sl, r1
900227a4:	10d9      	asrs	r1, r3, #3
900227a6:	00db      	lsls	r3, r3, #3
900227a8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
900227ac:	b280      	uxth	r0, r0
900227ae:	b2db      	uxtb	r3, r3
900227b0:	fb01 c10a 	mla	r1, r1, sl, ip
900227b4:	fb03 230a 	mla	r3, r3, sl, r2
900227b8:	1c42      	adds	r2, r0, #1
900227ba:	b289      	uxth	r1, r1
900227bc:	b29b      	uxth	r3, r3
900227be:	eb02 2010 	add.w	r0, r2, r0, lsr #8
900227c2:	f101 0c01 	add.w	ip, r1, #1
900227c6:	1c5a      	adds	r2, r3, #1
900227c8:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
900227cc:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
900227d0:	eb02 2213 	add.w	r2, r2, r3, lsr #8
900227d4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
900227d6:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
900227da:	f3c2 22c4 	ubfx	r2, r2, #11, #5
900227de:	441c      	add	r4, r3
900227e0:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
900227e4:	9b20      	ldr	r3, [sp, #128]	; 0x80
900227e6:	4310      	orrs	r0, r2
900227e8:	441e      	add	r6, r3
900227ea:	ea40 000c 	orr.w	r0, r0, ip
900227ee:	f829 0b02 	strh.w	r0, [r9], #2
900227f2:	e6fa      	b.n	900225ea <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
900227f4:	b013      	add	sp, #76	; 0x4c
900227f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900227fa <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
900227fa:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900227fe:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
90022802:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
90022806:	fb0e 4703 	mla	r7, lr, r3, r4
9002280a:	f1be 0f00 	cmp.w	lr, #0
9002280e:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
90022812:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
90022816:	eb02 0847 	add.w	r8, r2, r7, lsl #1
9002281a:	8808      	ldrh	r0, [r1, #0]
9002281c:	db60      	blt.n	900228e0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
9002281e:	45f1      	cmp	r9, lr
90022820:	dd5e      	ble.n	900228e0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
90022822:	2c00      	cmp	r4, #0
90022824:	db5a      	blt.n	900228dc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
90022826:	42a3      	cmp	r3, r4
90022828:	dd58      	ble.n	900228dc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
9002282a:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
9002282e:	1c62      	adds	r2, r4, #1
90022830:	d459      	bmi.n	900228e6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
90022832:	4293      	cmp	r3, r2
90022834:	dd57      	ble.n	900228e6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
90022836:	2d00      	cmp	r5, #0
90022838:	d055      	beq.n	900228e6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
9002283a:	f8b8 7002 	ldrh.w	r7, [r8, #2]
9002283e:	f11e 0e01 	adds.w	lr, lr, #1
90022842:	d454      	bmi.n	900228ee <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
90022844:	45f1      	cmp	r9, lr
90022846:	dd52      	ble.n	900228ee <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
90022848:	2e00      	cmp	r6, #0
9002284a:	d050      	beq.n	900228ee <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
9002284c:	2c00      	cmp	r4, #0
9002284e:	db4c      	blt.n	900228ea <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
90022850:	42a3      	cmp	r3, r4
90022852:	dd4a      	ble.n	900228ea <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
90022854:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
90022858:	3401      	adds	r4, #1
9002285a:	d405      	bmi.n	90022868 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
9002285c:	42a3      	cmp	r3, r4
9002285e:	dd03      	ble.n	90022868 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
90022860:	b115      	cbz	r5, 90022868 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
90022862:	3301      	adds	r3, #1
90022864:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
90022868:	fb15 f406 	smulbb	r4, r5, r6
9002286c:	ea4f 430c 	mov.w	r3, ip, lsl #16
90022870:	ea4f 4e07 	mov.w	lr, r7, lsl #16
90022874:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
90022878:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
9002287c:	f3c4 04c7 	ubfx	r4, r4, #3, #8
90022880:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
90022884:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
90022888:	ea43 0c0c 	orr.w	ip, r3, ip
9002288c:	f1c6 0310 	rsb	r3, r6, #16
90022890:	ea4e 0707 	orr.w	r7, lr, r7
90022894:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
90022898:	1b5b      	subs	r3, r3, r5
9002289a:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
9002289e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
900228a2:	437d      	muls	r5, r7
900228a4:	fb03 5c0c 	mla	ip, r3, ip, r5
900228a8:	0403      	lsls	r3, r0, #16
900228aa:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
900228ae:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
900228b2:	4318      	orrs	r0, r3
900228b4:	0413      	lsls	r3, r2, #16
900228b6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
900228ba:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
900228be:	fb04 c000 	mla	r0, r4, r0, ip
900228c2:	4313      	orrs	r3, r2
900228c4:	fb06 0003 	mla	r0, r6, r3, r0
900228c8:	0d43      	lsrs	r3, r0, #21
900228ca:	0940      	lsrs	r0, r0, #5
900228cc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
900228d0:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
900228d4:	4318      	orrs	r0, r3
900228d6:	8008      	strh	r0, [r1, #0]
900228d8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
900228dc:	4684      	mov	ip, r0
900228de:	e7a6      	b.n	9002282e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
900228e0:	4607      	mov	r7, r0
900228e2:	4684      	mov	ip, r0
900228e4:	e7ab      	b.n	9002283e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
900228e6:	4607      	mov	r7, r0
900228e8:	e7a9      	b.n	9002283e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
900228ea:	4602      	mov	r2, r0
900228ec:	e7b4      	b.n	90022858 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
900228ee:	4602      	mov	r2, r0
900228f0:	e7ba      	b.n	90022868 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

900228f2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900228f2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900228f6:	b08f      	sub	sp, #60	; 0x3c
900228f8:	461d      	mov	r5, r3
900228fa:	9b1d      	ldr	r3, [sp, #116]	; 0x74
900228fc:	9107      	str	r1, [sp, #28]
900228fe:	920c      	str	r2, [sp, #48]	; 0x30
90022900:	6859      	ldr	r1, [r3, #4]
90022902:	681b      	ldr	r3, [r3, #0]
90022904:	900d      	str	r0, [sp, #52]	; 0x34
90022906:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
9002290a:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
9002290e:	fb01 2707 	mla	r7, r1, r7, r2
90022912:	eb03 0747 	add.w	r7, r3, r7, lsl #1
90022916:	9b20      	ldr	r3, [sp, #128]	; 0x80
90022918:	f8d3 8000 	ldr.w	r8, [r3]
9002291c:	9b07      	ldr	r3, [sp, #28]
9002291e:	2b00      	cmp	r3, #0
90022920:	dc03      	bgt.n	9002292a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
90022922:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90022924:	2b00      	cmp	r3, #0
90022926:	f340 8182 	ble.w	90022c2e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
9002292a:	9b20      	ldr	r3, [sp, #128]	; 0x80
9002292c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90022930:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90022934:	1e48      	subs	r0, r1, #1
90022936:	f102 3cff 	add.w	ip, r2, #4294967295
9002293a:	2d00      	cmp	r5, #0
9002293c:	f340 809b 	ble.w	90022a76 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
90022940:	ea5f 4e24 	movs.w	lr, r4, asr #16
90022944:	ea4f 4326 	mov.w	r3, r6, asr #16
90022948:	d406      	bmi.n	90022958 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9002294a:	4586      	cmp	lr, r0
9002294c:	da04      	bge.n	90022958 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9002294e:	2b00      	cmp	r3, #0
90022950:	db02      	blt.n	90022958 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90022952:	4563      	cmp	r3, ip
90022954:	f2c0 8090 	blt.w	90022a78 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
90022958:	f11e 0e01 	adds.w	lr, lr, #1
9002295c:	f100 8084 	bmi.w	90022a68 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
90022960:	4571      	cmp	r1, lr
90022962:	f2c0 8081 	blt.w	90022a68 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
90022966:	3301      	adds	r3, #1
90022968:	d47e      	bmi.n	90022a68 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
9002296a:	429a      	cmp	r2, r3
9002296c:	db7c      	blt.n	90022a68 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
9002296e:	46aa      	mov	sl, r5
90022970:	46b9      	mov	r9, r7
90022972:	f1ba 0f00 	cmp.w	sl, #0
90022976:	f340 8099 	ble.w	90022aac <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
9002297a:	9b20      	ldr	r3, [sp, #128]	; 0x80
9002297c:	1421      	asrs	r1, r4, #16
9002297e:	ea4f 4026 	mov.w	r0, r6, asr #16
90022982:	f3c4 3203 	ubfx	r2, r4, #12, #4
90022986:	f3c6 3c03 	ubfx	ip, r6, #12, #4
9002298a:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
9002298e:	f100 80d1 	bmi.w	90022b34 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
90022992:	f10e 3bff 	add.w	fp, lr, #4294967295
90022996:	4559      	cmp	r1, fp
90022998:	f280 80cc 	bge.w	90022b34 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
9002299c:	2800      	cmp	r0, #0
9002299e:	f2c0 80c9 	blt.w	90022b34 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
900229a2:	f103 3bff 	add.w	fp, r3, #4294967295
900229a6:	4558      	cmp	r0, fp
900229a8:	f280 80c4 	bge.w	90022b34 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
900229ac:	fa0f fe8e 	sxth.w	lr, lr
900229b0:	fb00 110e 	mla	r1, r0, lr, r1
900229b4:	eb08 0041 	add.w	r0, r8, r1, lsl #1
900229b8:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
900229bc:	8841      	ldrh	r1, [r0, #2]
900229be:	f1bc 0f00 	cmp.w	ip, #0
900229c2:	d00b      	beq.n	900229dc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
900229c4:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
900229c8:	3b01      	subs	r3, #1
900229ca:	005b      	lsls	r3, r3, #1
900229cc:	3302      	adds	r3, #2
900229ce:	eb00 0e03 	add.w	lr, r0, r3
900229d2:	5ac3      	ldrh	r3, [r0, r3]
900229d4:	9308      	str	r3, [sp, #32]
900229d6:	f8be 3002 	ldrh.w	r3, [lr, #2]
900229da:	9309      	str	r3, [sp, #36]	; 0x24
900229dc:	ea4f 400b 	mov.w	r0, fp, lsl #16
900229e0:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
900229e4:	fb12 f30c 	smulbb	r3, r2, ip
900229e8:	f1cc 0e10 	rsb	lr, ip, #16
900229ec:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
900229f0:	10db      	asrs	r3, r3, #3
900229f2:	ebae 0e02 	sub.w	lr, lr, r2
900229f6:	ea40 000b 	orr.w	r0, r0, fp
900229fa:	ea4f 4b01 	mov.w	fp, r1, lsl #16
900229fe:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
90022a02:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
90022a06:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
90022a0a:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
90022a0e:	ea4b 0101 	orr.w	r1, fp, r1
90022a12:	4351      	muls	r1, r2
90022a14:	9a09      	ldr	r2, [sp, #36]	; 0x24
90022a16:	fb0e 1e00 	mla	lr, lr, r0, r1
90022a1a:	0410      	lsls	r0, r2, #16
90022a1c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90022a20:	9908      	ldr	r1, [sp, #32]
90022a22:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
90022a26:	4310      	orrs	r0, r2
90022a28:	9a08      	ldr	r2, [sp, #32]
90022a2a:	0412      	lsls	r2, r2, #16
90022a2c:	fb03 e000 	mla	r0, r3, r0, lr
90022a30:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
90022a34:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
90022a38:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
90022a3c:	ea42 020e 	orr.w	r2, r2, lr
90022a40:	fb03 0302 	mla	r3, r3, r2, r0
90022a44:	0d5a      	lsrs	r2, r3, #21
90022a46:	095b      	lsrs	r3, r3, #5
90022a48:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90022a4c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
90022a50:	4313      	orrs	r3, r2
90022a52:	f8a9 3000 	strh.w	r3, [r9]
90022a56:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
90022a58:	f109 0902 	add.w	r9, r9, #2
90022a5c:	f10a 3aff 	add.w	sl, sl, #4294967295
90022a60:	441c      	add	r4, r3
90022a62:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90022a64:	441e      	add	r6, r3
90022a66:	e784      	b.n	90022972 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
90022a68:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
90022a6a:	3d01      	subs	r5, #1
90022a6c:	3702      	adds	r7, #2
90022a6e:	441c      	add	r4, r3
90022a70:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90022a72:	441e      	add	r6, r3
90022a74:	e761      	b.n	9002293a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90022a76:	d01d      	beq.n	90022ab4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90022a78:	1e6b      	subs	r3, r5, #1
90022a7a:	981b      	ldr	r0, [sp, #108]	; 0x6c
90022a7c:	fb00 4003 	mla	r0, r0, r3, r4
90022a80:	1400      	asrs	r0, r0, #16
90022a82:	f53f af74 	bmi.w	9002296e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90022a86:	3901      	subs	r1, #1
90022a88:	4288      	cmp	r0, r1
90022a8a:	f6bf af70 	bge.w	9002296e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90022a8e:	991c      	ldr	r1, [sp, #112]	; 0x70
90022a90:	fb01 6303 	mla	r3, r1, r3, r6
90022a94:	141b      	asrs	r3, r3, #16
90022a96:	f53f af6a 	bmi.w	9002296e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90022a9a:	3a01      	subs	r2, #1
90022a9c:	4293      	cmp	r3, r2
90022a9e:	f6bf af66 	bge.w	9002296e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90022aa2:	46a9      	mov	r9, r5
90022aa4:	46ba      	mov	sl, r7
90022aa6:	f1b9 0f00 	cmp.w	r9, #0
90022aaa:	dc5b      	bgt.n	90022b64 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
90022aac:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
90022ab0:	eb07 0745 	add.w	r7, r7, r5, lsl #1
90022ab4:	9b07      	ldr	r3, [sp, #28]
90022ab6:	2b00      	cmp	r3, #0
90022ab8:	f340 80b9 	ble.w	90022c2e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
90022abc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90022ac0:	9b18      	ldr	r3, [sp, #96]	; 0x60
90022ac2:	ee30 0a04 	vadd.f32	s0, s0, s8
90022ac6:	ee70 0aa4 	vadd.f32	s1, s1, s9
90022aca:	eef0 6a62 	vmov.f32	s13, s5
90022ace:	eec7 7a00 	vdiv.f32	s15, s14, s0
90022ad2:	ee31 1a05 	vadd.f32	s2, s2, s10
90022ad6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90022ada:	ee16 4a90 	vmov	r4, s13
90022ade:	eef0 6a43 	vmov.f32	s13, s6
90022ae2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90022ae6:	ee16 6a90 	vmov	r6, s13
90022aea:	ee20 7aa7 	vmul.f32	s14, s1, s15
90022aee:	ee61 7a27 	vmul.f32	s15, s2, s15
90022af2:	ee77 2a62 	vsub.f32	s5, s14, s5
90022af6:	ee37 3ac3 	vsub.f32	s6, s15, s6
90022afa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90022afe:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90022b02:	ee12 2a90 	vmov	r2, s5
90022b06:	eef0 2a47 	vmov.f32	s5, s14
90022b0a:	fb92 f3f3 	sdiv	r3, r2, r3
90022b0e:	ee13 2a10 	vmov	r2, s6
90022b12:	931b      	str	r3, [sp, #108]	; 0x6c
90022b14:	9b18      	ldr	r3, [sp, #96]	; 0x60
90022b16:	eeb0 3a67 	vmov.f32	s6, s15
90022b1a:	fb92 f3f3 	sdiv	r3, r2, r3
90022b1e:	931c      	str	r3, [sp, #112]	; 0x70
90022b20:	9b07      	ldr	r3, [sp, #28]
90022b22:	9a0c      	ldr	r2, [sp, #48]	; 0x30
90022b24:	3b01      	subs	r3, #1
90022b26:	9307      	str	r3, [sp, #28]
90022b28:	bf08      	it	eq
90022b2a:	4615      	moveq	r5, r2
90022b2c:	9b18      	ldr	r3, [sp, #96]	; 0x60
90022b2e:	bf18      	it	ne
90022b30:	461d      	movne	r5, r3
90022b32:	e6f3      	b.n	9002291c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
90022b34:	f111 0b01 	adds.w	fp, r1, #1
90022b38:	d48d      	bmi.n	90022a56 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90022b3a:	45de      	cmp	lr, fp
90022b3c:	db8b      	blt.n	90022a56 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90022b3e:	f110 0b01 	adds.w	fp, r0, #1
90022b42:	d488      	bmi.n	90022a56 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90022b44:	455b      	cmp	r3, fp
90022b46:	db86      	blt.n	90022a56 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90022b48:	b21b      	sxth	r3, r3
90022b4a:	e9cd 1001 	strd	r1, r0, [sp, #4]
90022b4e:	e9cd 2c03 	strd	r2, ip, [sp, #12]
90022b52:	9300      	str	r3, [sp, #0]
90022b54:	4642      	mov	r2, r8
90022b56:	fa0f f38e 	sxth.w	r3, lr
90022b5a:	4649      	mov	r1, r9
90022b5c:	980d      	ldr	r0, [sp, #52]	; 0x34
90022b5e:	f7ff fe4c 	bl	900227fa <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
90022b62:	e778      	b.n	90022a56 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90022b64:	9b20      	ldr	r3, [sp, #128]	; 0x80
90022b66:	1420      	asrs	r0, r4, #16
90022b68:	1431      	asrs	r1, r6, #16
90022b6a:	f3c6 3e03 	ubfx	lr, r6, #12, #4
90022b6e:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
90022b72:	f3c4 3203 	ubfx	r2, r4, #12, #4
90022b76:	fb03 0101 	mla	r1, r3, r1, r0
90022b7a:	eb08 0041 	add.w	r0, r8, r1, lsl #1
90022b7e:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
90022b82:	8841      	ldrh	r1, [r0, #2]
90022b84:	f1be 0f00 	cmp.w	lr, #0
90022b88:	d00b      	beq.n	90022ba2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
90022b8a:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
90022b8e:	3b01      	subs	r3, #1
90022b90:	005b      	lsls	r3, r3, #1
90022b92:	3302      	adds	r3, #2
90022b94:	eb00 0b03 	add.w	fp, r0, r3
90022b98:	5ac3      	ldrh	r3, [r0, r3]
90022b9a:	930a      	str	r3, [sp, #40]	; 0x28
90022b9c:	f8bb 3002 	ldrh.w	r3, [fp, #2]
90022ba0:	930b      	str	r3, [sp, #44]	; 0x2c
90022ba2:	ea4f 400c 	mov.w	r0, ip, lsl #16
90022ba6:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
90022baa:	fb12 f30e 	smulbb	r3, r2, lr
90022bae:	ea4f 4b01 	mov.w	fp, r1, lsl #16
90022bb2:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
90022bb6:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
90022bba:	10db      	asrs	r3, r3, #3
90022bbc:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
90022bc0:	ea40 000c 	orr.w	r0, r0, ip
90022bc4:	f1ce 0c10 	rsb	ip, lr, #16
90022bc8:	ea4b 0101 	orr.w	r1, fp, r1
90022bcc:	f109 39ff 	add.w	r9, r9, #4294967295
90022bd0:	ebac 0c02 	sub.w	ip, ip, r2
90022bd4:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
90022bd8:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
90022bdc:	4351      	muls	r1, r2
90022bde:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
90022be0:	fb0c 1c00 	mla	ip, ip, r0, r1
90022be4:	990a      	ldr	r1, [sp, #40]	; 0x28
90022be6:	ea4f 4b02 	mov.w	fp, r2, lsl #16
90022bea:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
90022bee:	9a0a      	ldr	r2, [sp, #40]	; 0x28
90022bf0:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
90022bf4:	0412      	lsls	r2, r2, #16
90022bf6:	ea4b 0000 	orr.w	r0, fp, r0
90022bfa:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
90022bfe:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
90022c02:	fb03 c000 	mla	r0, r3, r0, ip
90022c06:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
90022c0a:	ea42 0b0b 	orr.w	fp, r2, fp
90022c0e:	fb03 000b 	mla	r0, r3, fp, r0
90022c12:	0d43      	lsrs	r3, r0, #21
90022c14:	0940      	lsrs	r0, r0, #5
90022c16:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90022c1a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90022c1e:	4318      	orrs	r0, r3
90022c20:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
90022c22:	441c      	add	r4, r3
90022c24:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90022c26:	f82a 0b02 	strh.w	r0, [sl], #2
90022c2a:	441e      	add	r6, r3
90022c2c:	e73b      	b.n	90022aa6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
90022c2e:	b00f      	add	sp, #60	; 0x3c
90022c30:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90022c34 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
90022c34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90022c38:	b085      	sub	sp, #20
90022c3a:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
90022c3e:	9102      	str	r1, [sp, #8]
90022c40:	2c00      	cmp	r4, #0
90022c42:	fb04 7103 	mla	r1, r4, r3, r7
90022c46:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
90022c4a:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
90022c4e:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
90022c52:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
90022c56:	f2c0 811b 	blt.w	90022e90 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
90022c5a:	45a6      	cmp	lr, r4
90022c5c:	f340 8118 	ble.w	90022e90 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
90022c60:	2f00      	cmp	r7, #0
90022c62:	f2c0 8113 	blt.w	90022e8c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
90022c66:	42bb      	cmp	r3, r7
90022c68:	f340 8110 	ble.w	90022e8c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
90022c6c:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
90022c70:	1c7a      	adds	r2, r7, #1
90022c72:	f100 8110 	bmi.w	90022e96 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
90022c76:	4293      	cmp	r3, r2
90022c78:	f340 810d 	ble.w	90022e96 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
90022c7c:	2e00      	cmp	r6, #0
90022c7e:	f000 810c 	beq.w	90022e9a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
90022c82:	f8dc 1004 	ldr.w	r1, [ip, #4]
90022c86:	3401      	adds	r4, #1
90022c88:	f100 810b 	bmi.w	90022ea2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
90022c8c:	45a6      	cmp	lr, r4
90022c8e:	f340 8108 	ble.w	90022ea2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
90022c92:	2800      	cmp	r0, #0
90022c94:	f000 8108 	beq.w	90022ea8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
90022c98:	2f00      	cmp	r7, #0
90022c9a:	f2c0 8100 	blt.w	90022e9e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
90022c9e:	42bb      	cmp	r3, r7
90022ca0:	f340 80fd 	ble.w	90022e9e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
90022ca4:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
90022ca8:	3701      	adds	r7, #1
90022caa:	f100 8100 	bmi.w	90022eae <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
90022cae:	42bb      	cmp	r3, r7
90022cb0:	f340 80fd 	ble.w	90022eae <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
90022cb4:	2e00      	cmp	r6, #0
90022cb6:	f000 80fc 	beq.w	90022eb2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
90022cba:	3301      	adds	r3, #1
90022cbc:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
90022cc0:	b2b6      	uxth	r6, r6
90022cc2:	b280      	uxth	r0, r0
90022cc4:	ea4f 6a11 	mov.w	sl, r1, lsr #24
90022cc8:	fb00 fe06 	mul.w	lr, r0, r6
90022ccc:	0136      	lsls	r6, r6, #4
90022cce:	ea4f 6b15 	mov.w	fp, r5, lsr #24
90022cd2:	ebce 1000 	rsb	r0, lr, r0, lsl #4
90022cd6:	eba6 070e 	sub.w	r7, r6, lr
90022cda:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
90022cde:	ea4f 6914 	mov.w	r9, r4, lsr #24
90022ce2:	b280      	uxth	r0, r0
90022ce4:	b2bf      	uxth	r7, r7
90022ce6:	1a1b      	subs	r3, r3, r0
90022ce8:	ea4f 6812 	mov.w	r8, r2, lsr #24
90022cec:	fb0a f607 	mul.w	r6, sl, r7
90022cf0:	b29b      	uxth	r3, r3
90022cf2:	fb0b 6603 	mla	r6, fp, r3, r6
90022cf6:	fb00 6609 	mla	r6, r0, r9, r6
90022cfa:	fb0e 6608 	mla	r6, lr, r8, r6
90022cfe:	f3c6 2607 	ubfx	r6, r6, #8, #8
90022d02:	9600      	str	r6, [sp, #0]
90022d04:	2e00      	cmp	r6, #0
90022d06:	f000 80be 	beq.w	90022e86 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
90022d0a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
90022d0e:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
90022d12:	9e02      	ldr	r6, [sp, #8]
90022d14:	fb0b fc0c 	mul.w	ip, fp, ip
90022d18:	fb0b f505 	mul.w	r5, fp, r5
90022d1c:	8836      	ldrh	r6, [r6, #0]
90022d1e:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
90022d22:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
90022d26:	9501      	str	r5, [sp, #4]
90022d28:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
90022d2c:	44dc      	add	ip, fp
90022d2e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90022d32:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
90022d36:	9503      	str	r5, [sp, #12]
90022d38:	9d01      	ldr	r5, [sp, #4]
90022d3a:	f505 7c80 	add.w	ip, r5, #256	; 0x100
90022d3e:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
90022d42:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
90022d46:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
90022d4a:	fb0a fc0c 	mul.w	ip, sl, ip
90022d4e:	ea4f 2b15 	mov.w	fp, r5, lsr #8
90022d52:	fb0a fa01 	mul.w	sl, sl, r1
90022d56:	ea4f 251c 	mov.w	r5, ip, lsr #8
90022d5a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
90022d5e:	f50a 7180 	add.w	r1, sl, #256	; 0x100
90022d62:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
90022d66:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
90022d6a:	4465      	add	r5, ip
90022d6c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
90022d70:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
90022d74:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90022d78:	fb09 fc0c 	mul.w	ip, r9, ip
90022d7c:	0a2d      	lsrs	r5, r5, #8
90022d7e:	fb09 f904 	mul.w	r9, r9, r4
90022d82:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90022d86:	ea4f 211c 	mov.w	r1, ip, lsr #8
90022d8a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
90022d8e:	f509 7480 	add.w	r4, r9, #256	; 0x100
90022d92:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
90022d96:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
90022d9a:	437d      	muls	r5, r7
90022d9c:	eb04 2919 	add.w	r9, r4, r9, lsr #8
90022da0:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
90022da4:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
90022da8:	4461      	add	r1, ip
90022daa:	fb08 f404 	mul.w	r4, r8, r4
90022dae:	ea4f 2919 	mov.w	r9, r9, lsr #8
90022db2:	fb08 f802 	mul.w	r8, r8, r2
90022db6:	0a09      	lsrs	r1, r1, #8
90022db8:	0a22      	lsrs	r2, r4, #8
90022dba:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
90022dbe:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
90022dc2:	fb07 f70a 	mul.w	r7, r7, sl
90022dc6:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
90022dca:	4414      	add	r4, r2
90022dcc:	f508 7280 	add.w	r2, r8, #256	; 0x100
90022dd0:	0a24      	lsrs	r4, r4, #8
90022dd2:	eb02 2818 	add.w	r8, r2, r8, lsr #8
90022dd6:	9a03      	ldr	r2, [sp, #12]
90022dd8:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
90022ddc:	fb02 5503 	mla	r5, r2, r3, r5
90022de0:	ea4f 2818 	mov.w	r8, r8, lsr #8
90022de4:	9a00      	ldr	r2, [sp, #0]
90022de6:	fb04 540e 	mla	r4, r4, lr, r5
90022dea:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
90022dee:	1235      	asrs	r5, r6, #8
90022df0:	fb01 4100 	mla	r1, r1, r0, r4
90022df4:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
90022df8:	0a09      	lsrs	r1, r1, #8
90022dfa:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
90022dfe:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
90022e02:	fb03 7101 	mla	r1, r3, r1, r7
90022e06:	fb0e 1e08 	mla	lr, lr, r8, r1
90022e0a:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
90022e0e:	fb00 e101 	mla	r1, r0, r1, lr
90022e12:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
90022e16:	b287      	uxth	r7, r0
90022e18:	0a09      	lsrs	r1, r1, #8
90022e1a:	437a      	muls	r2, r7
90022e1c:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
90022e20:	1c53      	adds	r3, r2, #1
90022e22:	4321      	orrs	r1, r4
90022e24:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90022e28:	0c0a      	lsrs	r2, r1, #16
90022e2a:	f3c1 2407 	ubfx	r4, r1, #8, #8
90022e2e:	ea6f 2313 	mvn.w	r3, r3, lsr #8
90022e32:	b2c8      	uxtb	r0, r1
90022e34:	fb12 f207 	smulbb	r2, r2, r7
90022e38:	fb14 f407 	smulbb	r4, r4, r7
90022e3c:	b2db      	uxtb	r3, r3
90022e3e:	fb10 f007 	smulbb	r0, r0, r7
90022e42:	fb05 2503 	mla	r5, r5, r3, r2
90022e46:	10f2      	asrs	r2, r6, #3
90022e48:	00f6      	lsls	r6, r6, #3
90022e4a:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
90022e4e:	b2ad      	uxth	r5, r5
90022e50:	b2f6      	uxtb	r6, r6
90022e52:	fb02 4203 	mla	r2, r2, r3, r4
90022e56:	fb06 0303 	mla	r3, r6, r3, r0
90022e5a:	b294      	uxth	r4, r2
90022e5c:	b299      	uxth	r1, r3
90022e5e:	1c6b      	adds	r3, r5, #1
90022e60:	1c62      	adds	r2, r4, #1
90022e62:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90022e66:	1c4b      	adds	r3, r1, #1
90022e68:	eb02 2214 	add.w	r2, r2, r4, lsr #8
90022e6c:	eb03 2311 	add.w	r3, r3, r1, lsr #8
90022e70:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
90022e74:	0952      	lsrs	r2, r2, #5
90022e76:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90022e7a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90022e7e:	432b      	orrs	r3, r5
90022e80:	4313      	orrs	r3, r2
90022e82:	9a02      	ldr	r2, [sp, #8]
90022e84:	8013      	strh	r3, [r2, #0]
90022e86:	b005      	add	sp, #20
90022e88:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90022e8c:	2500      	movs	r5, #0
90022e8e:	e6ef      	b.n	90022c70 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
90022e90:	2100      	movs	r1, #0
90022e92:	460d      	mov	r5, r1
90022e94:	e6f7      	b.n	90022c86 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
90022e96:	2100      	movs	r1, #0
90022e98:	e6f5      	b.n	90022c86 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
90022e9a:	4631      	mov	r1, r6
90022e9c:	e6f3      	b.n	90022c86 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
90022e9e:	2400      	movs	r4, #0
90022ea0:	e702      	b.n	90022ca8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
90022ea2:	2200      	movs	r2, #0
90022ea4:	4614      	mov	r4, r2
90022ea6:	e70b      	b.n	90022cc0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
90022ea8:	4602      	mov	r2, r0
90022eaa:	4604      	mov	r4, r0
90022eac:	e708      	b.n	90022cc0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
90022eae:	2200      	movs	r2, #0
90022eb0:	e706      	b.n	90022cc0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
90022eb2:	4632      	mov	r2, r6
90022eb4:	e704      	b.n	90022cc0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

90022eb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90022eb6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90022eba:	b09d      	sub	sp, #116	; 0x74
90022ebc:	9219      	str	r2, [sp, #100]	; 0x64
90022ebe:	9307      	str	r3, [sp, #28]
90022ec0:	9a2b      	ldr	r2, [sp, #172]	; 0xac
90022ec2:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
90022ec6:	901b      	str	r0, [sp, #108]	; 0x6c
90022ec8:	931a      	str	r3, [sp, #104]	; 0x68
90022eca:	6850      	ldr	r0, [r2, #4]
90022ecc:	9117      	str	r1, [sp, #92]	; 0x5c
90022ece:	6812      	ldr	r2, [r2, #0]
90022ed0:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
90022ed4:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
90022ed8:	fb00 1303 	mla	r3, r0, r3, r1
90022edc:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90022ee0:	930a      	str	r3, [sp, #40]	; 0x28
90022ee2:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
90022ee4:	681b      	ldr	r3, [r3, #0]
90022ee6:	9310      	str	r3, [sp, #64]	; 0x40
90022ee8:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
90022eec:	930b      	str	r3, [sp, #44]	; 0x2c
90022eee:	9b17      	ldr	r3, [sp, #92]	; 0x5c
90022ef0:	2b00      	cmp	r3, #0
90022ef2:	dc03      	bgt.n	90022efc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
90022ef4:	9b19      	ldr	r3, [sp, #100]	; 0x64
90022ef6:	2b00      	cmp	r3, #0
90022ef8:	f340 8375 	ble.w	900235e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
90022efc:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
90022efe:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90022f02:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90022f06:	1e48      	subs	r0, r1, #1
90022f08:	1e57      	subs	r7, r2, #1
90022f0a:	9b07      	ldr	r3, [sp, #28]
90022f0c:	2b00      	cmp	r3, #0
90022f0e:	f340 818e 	ble.w	9002322e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
90022f12:	ea5f 4c24 	movs.w	ip, r4, asr #16
90022f16:	ea4f 4326 	mov.w	r3, r6, asr #16
90022f1a:	d406      	bmi.n	90022f2a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
90022f1c:	4584      	cmp	ip, r0
90022f1e:	da04      	bge.n	90022f2a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
90022f20:	2b00      	cmp	r3, #0
90022f22:	db02      	blt.n	90022f2a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
90022f24:	42bb      	cmp	r3, r7
90022f26:	f2c0 8183 	blt.w	90023230 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
90022f2a:	f11c 0c01 	adds.w	ip, ip, #1
90022f2e:	f100 8173 	bmi.w	90023218 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90022f32:	4561      	cmp	r1, ip
90022f34:	f2c0 8170 	blt.w	90023218 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90022f38:	3301      	adds	r3, #1
90022f3a:	f100 816d 	bmi.w	90023218 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90022f3e:	429a      	cmp	r2, r3
90022f40:	f2c0 816a 	blt.w	90023218 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90022f44:	9b07      	ldr	r3, [sp, #28]
90022f46:	9f0a      	ldr	r7, [sp, #40]	; 0x28
90022f48:	9318      	str	r3, [sp, #96]	; 0x60
90022f4a:	9b18      	ldr	r3, [sp, #96]	; 0x60
90022f4c:	2b00      	cmp	r3, #0
90022f4e:	f340 818c 	ble.w	9002326a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
90022f52:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
90022f54:	ea4f 4c26 	mov.w	ip, r6, asr #16
90022f58:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
90022f5a:	f3c4 3003 	ubfx	r0, r4, #12, #4
90022f5e:	f8d2 e00c 	ldr.w	lr, [r2, #12]
90022f62:	1422      	asrs	r2, r4, #16
90022f64:	f3c6 3103 	ubfx	r1, r6, #12, #4
90022f68:	689b      	ldr	r3, [r3, #8]
90022f6a:	f100 81cd 	bmi.w	90023308 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90022f6e:	f103 38ff 	add.w	r8, r3, #4294967295
90022f72:	4542      	cmp	r2, r8
90022f74:	f280 81c8 	bge.w	90023308 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90022f78:	f1bc 0f00 	cmp.w	ip, #0
90022f7c:	f2c0 81c4 	blt.w	90023308 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90022f80:	f10e 38ff 	add.w	r8, lr, #4294967295
90022f84:	45c4      	cmp	ip, r8
90022f86:	f280 81bf 	bge.w	90023308 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90022f8a:	b21b      	sxth	r3, r3
90022f8c:	9d10      	ldr	r5, [sp, #64]	; 0x40
90022f8e:	fb0c 2203 	mla	r2, ip, r3, r2
90022f92:	eb05 0882 	add.w	r8, r5, r2, lsl #2
90022f96:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
90022f9a:	ea4f 6e12 	mov.w	lr, r2, lsr #24
90022f9e:	2800      	cmp	r0, #0
90022fa0:	f000 81a9 	beq.w	900232f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
90022fa4:	f8d8 5004 	ldr.w	r5, [r8, #4]
90022fa8:	950c      	str	r5, [sp, #48]	; 0x30
90022faa:	0e2d      	lsrs	r5, r5, #24
90022fac:	9513      	str	r5, [sp, #76]	; 0x4c
90022fae:	b181      	cbz	r1, 90022fd2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
90022fb0:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
90022fb4:	3b01      	subs	r3, #1
90022fb6:	009b      	lsls	r3, r3, #2
90022fb8:	3304      	adds	r3, #4
90022fba:	eb08 0c03 	add.w	ip, r8, r3
90022fbe:	f858 3003 	ldr.w	r3, [r8, r3]
90022fc2:	9308      	str	r3, [sp, #32]
90022fc4:	0e1b      	lsrs	r3, r3, #24
90022fc6:	9311      	str	r3, [sp, #68]	; 0x44
90022fc8:	f8dc 3004 	ldr.w	r3, [ip, #4]
90022fcc:	930d      	str	r3, [sp, #52]	; 0x34
90022fce:	0e1b      	lsrs	r3, r3, #24
90022fd0:	9314      	str	r3, [sp, #80]	; 0x50
90022fd2:	b280      	uxth	r0, r0
90022fd4:	9d11      	ldr	r5, [sp, #68]	; 0x44
90022fd6:	b289      	uxth	r1, r1
90022fd8:	fb00 f901 	mul.w	r9, r0, r1
90022fdc:	0100      	lsls	r0, r0, #4
90022fde:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
90022fe2:	eba0 0809 	sub.w	r8, r0, r9
90022fe6:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
90022fea:	9813      	ldr	r0, [sp, #76]	; 0x4c
90022fec:	b289      	uxth	r1, r1
90022fee:	fa1f f888 	uxth.w	r8, r8
90022ff2:	1a5b      	subs	r3, r3, r1
90022ff4:	fb08 f000 	mul.w	r0, r8, r0
90022ff8:	b29b      	uxth	r3, r3
90022ffa:	fb03 000e 	mla	r0, r3, lr, r0
90022ffe:	fb01 0005 	mla	r0, r1, r5, r0
90023002:	9d14      	ldr	r5, [sp, #80]	; 0x50
90023004:	fb09 0005 	mla	r0, r9, r5, r0
90023008:	f3c0 2007 	ubfx	r0, r0, #8, #8
9002300c:	2800      	cmp	r0, #0
9002300e:	f000 80fa 	beq.w	90023206 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90023012:	f1be 0fff 	cmp.w	lr, #255	; 0xff
90023016:	d01b      	beq.n	90023050 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
90023018:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
9002301c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
90023020:	fb0e fa0a 	mul.w	sl, lr, sl
90023024:	fb0e fe02 	mul.w	lr, lr, r2
90023028:	ea4f 221a 	mov.w	r2, sl, lsr #8
9002302c:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
90023030:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
90023034:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
90023038:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
9002303c:	4452      	add	r2, sl
9002303e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023042:	0a12      	lsrs	r2, r2, #8
90023044:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
90023048:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
9002304c:	ea42 020c 	orr.w	r2, r2, ip
90023050:	9d13      	ldr	r5, [sp, #76]	; 0x4c
90023052:	2dff      	cmp	r5, #255	; 0xff
90023054:	d021      	beq.n	9002309a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
90023056:	9d0c      	ldr	r5, [sp, #48]	; 0x30
90023058:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
9002305c:	9d13      	ldr	r5, [sp, #76]	; 0x4c
9002305e:	fb05 fb0b 	mul.w	fp, r5, fp
90023062:	9d0c      	ldr	r5, [sp, #48]	; 0x30
90023064:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
90023068:	9d13      	ldr	r5, [sp, #76]	; 0x4c
9002306a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
9002306e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90023072:	fb05 fa0a 	mul.w	sl, r5, sl
90023076:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
9002307a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
9002307e:	44de      	add	lr, fp
90023080:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90023084:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90023088:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002308c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90023090:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90023094:	ea4e 050a 	orr.w	r5, lr, sl
90023098:	950c      	str	r5, [sp, #48]	; 0x30
9002309a:	9d11      	ldr	r5, [sp, #68]	; 0x44
9002309c:	2dff      	cmp	r5, #255	; 0xff
9002309e:	d021      	beq.n	900230e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
900230a0:	9d08      	ldr	r5, [sp, #32]
900230a2:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
900230a6:	9d11      	ldr	r5, [sp, #68]	; 0x44
900230a8:	fb05 fb0b 	mul.w	fp, r5, fp
900230ac:	9d08      	ldr	r5, [sp, #32]
900230ae:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
900230b2:	9d11      	ldr	r5, [sp, #68]	; 0x44
900230b4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
900230b8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
900230bc:	fb05 fa0a 	mul.w	sl, r5, sl
900230c0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
900230c4:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
900230c8:	44de      	add	lr, fp
900230ca:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
900230ce:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900230d2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900230d6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
900230da:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
900230de:	ea4e 050a 	orr.w	r5, lr, sl
900230e2:	9508      	str	r5, [sp, #32]
900230e4:	9d14      	ldr	r5, [sp, #80]	; 0x50
900230e6:	2dff      	cmp	r5, #255	; 0xff
900230e8:	d021      	beq.n	9002312e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
900230ea:	9d0d      	ldr	r5, [sp, #52]	; 0x34
900230ec:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
900230f0:	9d14      	ldr	r5, [sp, #80]	; 0x50
900230f2:	fb05 fb0b 	mul.w	fp, r5, fp
900230f6:	9d0d      	ldr	r5, [sp, #52]	; 0x34
900230f8:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
900230fc:	9d14      	ldr	r5, [sp, #80]	; 0x50
900230fe:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90023102:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90023106:	fb05 fa0a 	mul.w	sl, r5, sl
9002310a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
9002310e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90023112:	44de      	add	lr, fp
90023114:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90023118:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
9002311c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023120:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90023124:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90023128:	ea4e 050a 	orr.w	r5, lr, sl
9002312c:	950d      	str	r5, [sp, #52]	; 0x34
9002312e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
90023130:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
90023134:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
90023138:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
9002313c:	9d08      	ldr	r5, [sp, #32]
9002313e:	fb08 fc0c 	mul.w	ip, r8, ip
90023142:	fb03 cc0e 	mla	ip, r3, lr, ip
90023146:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
9002314a:	9d0d      	ldr	r5, [sp, #52]	; 0x34
9002314c:	fb01 cc0e 	mla	ip, r1, lr, ip
90023150:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
90023154:	9d0c      	ldr	r5, [sp, #48]	; 0x30
90023156:	fb09 cc0e 	mla	ip, r9, lr, ip
9002315a:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
9002315e:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
90023160:	fb08 f80e 	mul.w	r8, r8, lr
90023164:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023168:	fb03 8202 	mla	r2, r3, r2, r8
9002316c:	9b08      	ldr	r3, [sp, #32]
9002316e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90023172:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
90023176:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90023178:	fb01 220a 	mla	r2, r1, sl, r2
9002317c:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
90023180:	883b      	ldrh	r3, [r7, #0]
90023182:	fb09 2901 	mla	r9, r9, r1, r2
90023186:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
90023188:	1219      	asrs	r1, r3, #8
9002318a:	4342      	muls	r2, r0
9002318c:	ea4f 2919 	mov.w	r9, r9, lsr #8
90023190:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
90023194:	1c50      	adds	r0, r2, #1
90023196:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
9002319a:	eb00 2012 	add.w	r0, r0, r2, lsr #8
9002319e:	ea4c 0c09 	orr.w	ip, ip, r9
900231a2:	ea6f 2010 	mvn.w	r0, r0, lsr #8
900231a6:	ea4f 421c 	mov.w	r2, ip, lsr #16
900231aa:	f3cc 2e07 	ubfx	lr, ip, #8, #8
900231ae:	fa5f fc8c 	uxtb.w	ip, ip
900231b2:	fb12 f205 	smulbb	r2, r2, r5
900231b6:	b2c0      	uxtb	r0, r0
900231b8:	fb1c fc05 	smulbb	ip, ip, r5
900231bc:	fb01 2100 	mla	r1, r1, r0, r2
900231c0:	10da      	asrs	r2, r3, #3
900231c2:	fb1e fe05 	smulbb	lr, lr, r5
900231c6:	00db      	lsls	r3, r3, #3
900231c8:	b289      	uxth	r1, r1
900231ca:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
900231ce:	b2db      	uxtb	r3, r3
900231d0:	fb02 e200 	mla	r2, r2, r0, lr
900231d4:	fb03 c300 	mla	r3, r3, r0, ip
900231d8:	b292      	uxth	r2, r2
900231da:	fa1f fc83 	uxth.w	ip, r3
900231de:	1c4b      	adds	r3, r1, #1
900231e0:	eb03 2111 	add.w	r1, r3, r1, lsr #8
900231e4:	f10c 0301 	add.w	r3, ip, #1
900231e8:	eb03 231c 	add.w	r3, r3, ip, lsr #8
900231ec:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
900231f0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
900231f4:	430b      	orrs	r3, r1
900231f6:	1c51      	adds	r1, r2, #1
900231f8:	eb01 2212 	add.w	r2, r1, r2, lsr #8
900231fc:	0952      	lsrs	r2, r2, #5
900231fe:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90023202:	4313      	orrs	r3, r2
90023204:	803b      	strh	r3, [r7, #0]
90023206:	9b29      	ldr	r3, [sp, #164]	; 0xa4
90023208:	3702      	adds	r7, #2
9002320a:	441c      	add	r4, r3
9002320c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
9002320e:	441e      	add	r6, r3
90023210:	9b18      	ldr	r3, [sp, #96]	; 0x60
90023212:	3b01      	subs	r3, #1
90023214:	9318      	str	r3, [sp, #96]	; 0x60
90023216:	e698      	b.n	90022f4a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
90023218:	9b29      	ldr	r3, [sp, #164]	; 0xa4
9002321a:	441c      	add	r4, r3
9002321c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
9002321e:	441e      	add	r6, r3
90023220:	9b07      	ldr	r3, [sp, #28]
90023222:	3b01      	subs	r3, #1
90023224:	9307      	str	r3, [sp, #28]
90023226:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90023228:	3302      	adds	r3, #2
9002322a:	930a      	str	r3, [sp, #40]	; 0x28
9002322c:	e66d      	b.n	90022f0a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
9002322e:	d023      	beq.n	90023278 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
90023230:	9b07      	ldr	r3, [sp, #28]
90023232:	9829      	ldr	r0, [sp, #164]	; 0xa4
90023234:	3b01      	subs	r3, #1
90023236:	fb00 4003 	mla	r0, r0, r3, r4
9002323a:	1400      	asrs	r0, r0, #16
9002323c:	f53f ae82 	bmi.w	90022f44 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90023240:	3901      	subs	r1, #1
90023242:	4288      	cmp	r0, r1
90023244:	f6bf ae7e 	bge.w	90022f44 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90023248:	992a      	ldr	r1, [sp, #168]	; 0xa8
9002324a:	fb01 6303 	mla	r3, r1, r3, r6
9002324e:	141b      	asrs	r3, r3, #16
90023250:	f53f ae78 	bmi.w	90022f44 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90023254:	3a01      	subs	r2, #1
90023256:	4293      	cmp	r3, r2
90023258:	f6bf ae74 	bge.w	90022f44 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
9002325c:	f8dd b01c 	ldr.w	fp, [sp, #28]
90023260:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
90023264:	f1bb 0f00 	cmp.w	fp, #0
90023268:	dc6c      	bgt.n	90023344 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
9002326a:	9b07      	ldr	r3, [sp, #28]
9002326c:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
90023270:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90023272:	eb03 0345 	add.w	r3, r3, r5, lsl #1
90023276:	930a      	str	r3, [sp, #40]	; 0x28
90023278:	9b17      	ldr	r3, [sp, #92]	; 0x5c
9002327a:	2b00      	cmp	r3, #0
9002327c:	f340 81b3 	ble.w	900235e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
90023280:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90023284:	9b26      	ldr	r3, [sp, #152]	; 0x98
90023286:	ee30 0a04 	vadd.f32	s0, s0, s8
9002328a:	ee70 0aa4 	vadd.f32	s1, s1, s9
9002328e:	eef0 6a62 	vmov.f32	s13, s5
90023292:	eec7 7a00 	vdiv.f32	s15, s14, s0
90023296:	ee31 1a05 	vadd.f32	s2, s2, s10
9002329a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002329e:	ee16 4a90 	vmov	r4, s13
900232a2:	eef0 6a43 	vmov.f32	s13, s6
900232a6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900232aa:	ee16 6a90 	vmov	r6, s13
900232ae:	ee20 7aa7 	vmul.f32	s14, s1, s15
900232b2:	ee61 7a27 	vmul.f32	s15, s2, s15
900232b6:	ee77 2a62 	vsub.f32	s5, s14, s5
900232ba:	ee37 3ac3 	vsub.f32	s6, s15, s6
900232be:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900232c2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900232c6:	ee12 2a90 	vmov	r2, s5
900232ca:	eef0 2a47 	vmov.f32	s5, s14
900232ce:	fb92 f3f3 	sdiv	r3, r2, r3
900232d2:	ee13 2a10 	vmov	r2, s6
900232d6:	9329      	str	r3, [sp, #164]	; 0xa4
900232d8:	9b26      	ldr	r3, [sp, #152]	; 0x98
900232da:	eeb0 3a67 	vmov.f32	s6, s15
900232de:	fb92 f3f3 	sdiv	r3, r2, r3
900232e2:	932a      	str	r3, [sp, #168]	; 0xa8
900232e4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
900232e6:	9a19      	ldr	r2, [sp, #100]	; 0x64
900232e8:	3b01      	subs	r3, #1
900232ea:	9317      	str	r3, [sp, #92]	; 0x5c
900232ec:	9b26      	ldr	r3, [sp, #152]	; 0x98
900232ee:	bf08      	it	eq
900232f0:	4613      	moveq	r3, r2
900232f2:	9307      	str	r3, [sp, #28]
900232f4:	e5fb      	b.n	90022eee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
900232f6:	2900      	cmp	r1, #0
900232f8:	f43f ae6b 	beq.w	90022fd2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
900232fc:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
90023300:	9308      	str	r3, [sp, #32]
90023302:	0e1b      	lsrs	r3, r3, #24
90023304:	9311      	str	r3, [sp, #68]	; 0x44
90023306:	e664      	b.n	90022fd2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
90023308:	f112 0801 	adds.w	r8, r2, #1
9002330c:	f53f af7b 	bmi.w	90023206 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90023310:	4543      	cmp	r3, r8
90023312:	f6ff af78 	blt.w	90023206 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90023316:	f11c 0801 	adds.w	r8, ip, #1
9002331a:	f53f af74 	bmi.w	90023206 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
9002331e:	45c6      	cmp	lr, r8
90023320:	f6ff af71 	blt.w	90023206 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90023324:	9d1a      	ldr	r5, [sp, #104]	; 0x68
90023326:	b21b      	sxth	r3, r3
90023328:	9201      	str	r2, [sp, #4]
9002332a:	fa0f f28e 	sxth.w	r2, lr
9002332e:	e9cd 1504 	strd	r1, r5, [sp, #16]
90023332:	e9cd c002 	strd	ip, r0, [sp, #8]
90023336:	9200      	str	r2, [sp, #0]
90023338:	4639      	mov	r1, r7
9002333a:	9a10      	ldr	r2, [sp, #64]	; 0x40
9002333c:	981b      	ldr	r0, [sp, #108]	; 0x6c
9002333e:	f7ff fc79 	bl	90022c34 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
90023342:	e760      	b.n	90023206 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90023344:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
90023346:	1427      	asrs	r7, r4, #16
90023348:	9d10      	ldr	r5, [sp, #64]	; 0x40
9002334a:	f3c4 3203 	ubfx	r2, r4, #12, #4
9002334e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90023352:	1433      	asrs	r3, r6, #16
90023354:	f3c6 3003 	ubfx	r0, r6, #12, #4
90023358:	fb01 7303 	mla	r3, r1, r3, r7
9002335c:	eb05 0783 	add.w	r7, r5, r3, lsl #2
90023360:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
90023364:	ea4f 6c13 	mov.w	ip, r3, lsr #24
90023368:	2a00      	cmp	r2, #0
9002336a:	f000 8133 	beq.w	900235d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
9002336e:	687d      	ldr	r5, [r7, #4]
90023370:	950e      	str	r5, [sp, #56]	; 0x38
90023372:	0e2d      	lsrs	r5, r5, #24
90023374:	9515      	str	r5, [sp, #84]	; 0x54
90023376:	b178      	cbz	r0, 90023398 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
90023378:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
9002337c:	3901      	subs	r1, #1
9002337e:	0089      	lsls	r1, r1, #2
90023380:	3104      	adds	r1, #4
90023382:	eb07 0e01 	add.w	lr, r7, r1
90023386:	5879      	ldr	r1, [r7, r1]
90023388:	9109      	str	r1, [sp, #36]	; 0x24
9002338a:	0e09      	lsrs	r1, r1, #24
9002338c:	9112      	str	r1, [sp, #72]	; 0x48
9002338e:	f8de 1004 	ldr.w	r1, [lr, #4]
90023392:	910f      	str	r1, [sp, #60]	; 0x3c
90023394:	0e09      	lsrs	r1, r1, #24
90023396:	9116      	str	r1, [sp, #88]	; 0x58
90023398:	b292      	uxth	r2, r2
9002339a:	9915      	ldr	r1, [sp, #84]	; 0x54
9002339c:	b280      	uxth	r0, r0
9002339e:	9d12      	ldr	r5, [sp, #72]	; 0x48
900233a0:	fb02 f800 	mul.w	r8, r2, r0
900233a4:	0112      	lsls	r2, r2, #4
900233a6:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
900233aa:	eba2 0e08 	sub.w	lr, r2, r8
900233ae:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
900233b2:	b280      	uxth	r0, r0
900233b4:	fa1f fe8e 	uxth.w	lr, lr
900233b8:	1a12      	subs	r2, r2, r0
900233ba:	fb0e f101 	mul.w	r1, lr, r1
900233be:	b292      	uxth	r2, r2
900233c0:	fb02 110c 	mla	r1, r2, ip, r1
900233c4:	fb00 1105 	mla	r1, r0, r5, r1
900233c8:	9d16      	ldr	r5, [sp, #88]	; 0x58
900233ca:	fb08 1105 	mla	r1, r8, r5, r1
900233ce:	f3c1 2107 	ubfx	r1, r1, #8, #8
900233d2:	2900      	cmp	r1, #0
900233d4:	f000 80f5 	beq.w	900235c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
900233d8:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
900233dc:	d019      	beq.n	90023412 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
900233de:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
900233e2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
900233e6:	fb0c fa0a 	mul.w	sl, ip, sl
900233ea:	fb0c fc03 	mul.w	ip, ip, r3
900233ee:	ea4f 231a 	mov.w	r3, sl, lsr #8
900233f2:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
900233f6:	f50c 7780 	add.w	r7, ip, #256	; 0x100
900233fa:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
900233fe:	eb07 271c 	add.w	r7, r7, ip, lsr #8
90023402:	4453      	add	r3, sl
90023404:	0a3f      	lsrs	r7, r7, #8
90023406:	0a1b      	lsrs	r3, r3, #8
90023408:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
9002340c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90023410:	433b      	orrs	r3, r7
90023412:	9d15      	ldr	r5, [sp, #84]	; 0x54
90023414:	2dff      	cmp	r5, #255	; 0xff
90023416:	d020      	beq.n	9002345a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
90023418:	9d0e      	ldr	r5, [sp, #56]	; 0x38
9002341a:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
9002341e:	9d15      	ldr	r5, [sp, #84]	; 0x54
90023420:	436f      	muls	r7, r5
90023422:	9d0e      	ldr	r5, [sp, #56]	; 0x38
90023424:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90023428:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
9002342c:	9d15      	ldr	r5, [sp, #84]	; 0x54
9002342e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
90023432:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90023436:	fb05 fa0a 	mul.w	sl, r5, sl
9002343a:	44bc      	add	ip, r7
9002343c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90023440:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023444:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90023448:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
9002344c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023450:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90023454:	ea4c 050a 	orr.w	r5, ip, sl
90023458:	950e      	str	r5, [sp, #56]	; 0x38
9002345a:	9d12      	ldr	r5, [sp, #72]	; 0x48
9002345c:	2dff      	cmp	r5, #255	; 0xff
9002345e:	d020      	beq.n	900234a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
90023460:	9d09      	ldr	r5, [sp, #36]	; 0x24
90023462:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
90023466:	9d12      	ldr	r5, [sp, #72]	; 0x48
90023468:	436f      	muls	r7, r5
9002346a:	9d09      	ldr	r5, [sp, #36]	; 0x24
9002346c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90023470:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
90023474:	9d12      	ldr	r5, [sp, #72]	; 0x48
90023476:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
9002347a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
9002347e:	fb05 fa0a 	mul.w	sl, r5, sl
90023482:	44bc      	add	ip, r7
90023484:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90023488:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002348c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90023490:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90023494:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023498:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
9002349c:	ea4c 050a 	orr.w	r5, ip, sl
900234a0:	9509      	str	r5, [sp, #36]	; 0x24
900234a2:	9d16      	ldr	r5, [sp, #88]	; 0x58
900234a4:	2dff      	cmp	r5, #255	; 0xff
900234a6:	d020      	beq.n	900234ea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
900234a8:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
900234aa:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
900234ae:	9d16      	ldr	r5, [sp, #88]	; 0x58
900234b0:	436f      	muls	r7, r5
900234b2:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
900234b4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
900234b8:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
900234bc:	9d16      	ldr	r5, [sp, #88]	; 0x58
900234be:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
900234c2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900234c6:	fb05 fa0a 	mul.w	sl, r5, sl
900234ca:	44bc      	add	ip, r7
900234cc:	f50a 7780 	add.w	r7, sl, #256	; 0x100
900234d0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900234d4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
900234d8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900234dc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900234e0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
900234e4:	ea4c 050a 	orr.w	r5, ip, sl
900234e8:	950f      	str	r5, [sp, #60]	; 0x3c
900234ea:	9d0e      	ldr	r5, [sp, #56]	; 0x38
900234ec:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
900234f0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
900234f4:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
900234f8:	9d09      	ldr	r5, [sp, #36]	; 0x24
900234fa:	fb0e f707 	mul.w	r7, lr, r7
900234fe:	fb02 770c 	mla	r7, r2, ip, r7
90023502:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
90023506:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
90023508:	fb00 770c 	mla	r7, r0, ip, r7
9002350c:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
90023510:	9d0e      	ldr	r5, [sp, #56]	; 0x38
90023512:	fb08 770c 	mla	r7, r8, ip, r7
90023516:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
9002351a:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
9002351c:	fb0e fe0c 	mul.w	lr, lr, ip
90023520:	0a3f      	lsrs	r7, r7, #8
90023522:	fb02 e303 	mla	r3, r2, r3, lr
90023526:	9a09      	ldr	r2, [sp, #36]	; 0x24
90023528:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
9002352c:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
90023530:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
90023532:	fb00 330a 	mla	r3, r0, sl, r3
90023536:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
9002353a:	f8b9 0000 	ldrh.w	r0, [r9]
9002353e:	fb08 3c0c 	mla	ip, r8, ip, r3
90023542:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90023544:	1202      	asrs	r2, r0, #8
90023546:	4359      	muls	r1, r3
90023548:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002354c:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
90023550:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
90023554:	1c4b      	adds	r3, r1, #1
90023556:	ea47 070c 	orr.w	r7, r7, ip
9002355a:	eb03 2111 	add.w	r1, r3, r1, lsr #8
9002355e:	0c3b      	lsrs	r3, r7, #16
90023560:	ea6f 2111 	mvn.w	r1, r1, lsr #8
90023564:	f3c7 2c07 	ubfx	ip, r7, #8, #8
90023568:	b2ff      	uxtb	r7, r7
9002356a:	fb13 f305 	smulbb	r3, r3, r5
9002356e:	b2c9      	uxtb	r1, r1
90023570:	fb17 f705 	smulbb	r7, r7, r5
90023574:	fb02 3201 	mla	r2, r2, r1, r3
90023578:	10c3      	asrs	r3, r0, #3
9002357a:	fb1c fc05 	smulbb	ip, ip, r5
9002357e:	00c0      	lsls	r0, r0, #3
90023580:	b292      	uxth	r2, r2
90023582:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
90023586:	b2c0      	uxtb	r0, r0
90023588:	fb03 c301 	mla	r3, r3, r1, ip
9002358c:	fb00 7001 	mla	r0, r0, r1, r7
90023590:	1c51      	adds	r1, r2, #1
90023592:	b29b      	uxth	r3, r3
90023594:	b280      	uxth	r0, r0
90023596:	eb01 2212 	add.w	r2, r1, r2, lsr #8
9002359a:	f100 0c01 	add.w	ip, r0, #1
9002359e:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
900235a2:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
900235a6:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
900235aa:	ea4c 0202 	orr.w	r2, ip, r2
900235ae:	f103 0c01 	add.w	ip, r3, #1
900235b2:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
900235b6:	095b      	lsrs	r3, r3, #5
900235b8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
900235bc:	431a      	orrs	r2, r3
900235be:	f8a9 2000 	strh.w	r2, [r9]
900235c2:	9b29      	ldr	r3, [sp, #164]	; 0xa4
900235c4:	f109 0902 	add.w	r9, r9, #2
900235c8:	f10b 3bff 	add.w	fp, fp, #4294967295
900235cc:	441c      	add	r4, r3
900235ce:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
900235d0:	441e      	add	r6, r3
900235d2:	e647      	b.n	90023264 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
900235d4:	2800      	cmp	r0, #0
900235d6:	f43f aedf 	beq.w	90023398 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
900235da:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
900235de:	9109      	str	r1, [sp, #36]	; 0x24
900235e0:	0e09      	lsrs	r1, r1, #24
900235e2:	9112      	str	r1, [sp, #72]	; 0x48
900235e4:	e6d8      	b.n	90023398 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
900235e6:	b01d      	add	sp, #116	; 0x74
900235e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900235ec <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
900235ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900235f0:	b085      	sub	sp, #20
900235f2:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
900235f6:	9102      	str	r1, [sp, #8]
900235f8:	2c00      	cmp	r4, #0
900235fa:	fb04 7103 	mla	r1, r4, r3, r7
900235fe:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
90023602:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
90023606:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
9002360a:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
9002360e:	f2c0 810c 	blt.w	9002382a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
90023612:	45a6      	cmp	lr, r4
90023614:	f340 8109 	ble.w	9002382a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
90023618:	2f00      	cmp	r7, #0
9002361a:	f2c0 8104 	blt.w	90023826 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
9002361e:	42bb      	cmp	r3, r7
90023620:	f340 8101 	ble.w	90023826 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
90023624:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
90023628:	1c7a      	adds	r2, r7, #1
9002362a:	f100 8101 	bmi.w	90023830 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
9002362e:	4293      	cmp	r3, r2
90023630:	f340 80fe 	ble.w	90023830 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
90023634:	2e00      	cmp	r6, #0
90023636:	f000 80fd 	beq.w	90023834 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
9002363a:	f8dc 1004 	ldr.w	r1, [ip, #4]
9002363e:	3401      	adds	r4, #1
90023640:	f100 80fc 	bmi.w	9002383c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
90023644:	45a6      	cmp	lr, r4
90023646:	f340 80f9 	ble.w	9002383c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
9002364a:	2800      	cmp	r0, #0
9002364c:	f000 80f9 	beq.w	90023842 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
90023650:	2f00      	cmp	r7, #0
90023652:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
90023656:	f2c0 80ef 	blt.w	90023838 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
9002365a:	42bb      	cmp	r3, r7
9002365c:	f340 80ec 	ble.w	90023838 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
90023660:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
90023664:	3701      	adds	r7, #1
90023666:	f100 80ef 	bmi.w	90023848 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
9002366a:	42bb      	cmp	r3, r7
9002366c:	f340 80ec 	ble.w	90023848 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
90023670:	2e00      	cmp	r6, #0
90023672:	f000 80eb 	beq.w	9002384c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
90023676:	6852      	ldr	r2, [r2, #4]
90023678:	b2b6      	uxth	r6, r6
9002367a:	b280      	uxth	r0, r0
9002367c:	ea4f 6a11 	mov.w	sl, r1, lsr #24
90023680:	fb00 fe06 	mul.w	lr, r0, r6
90023684:	0136      	lsls	r6, r6, #4
90023686:	ea4f 6b15 	mov.w	fp, r5, lsr #24
9002368a:	ebce 1000 	rsb	r0, lr, r0, lsl #4
9002368e:	eba6 070e 	sub.w	r7, r6, lr
90023692:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
90023696:	ea4f 6914 	mov.w	r9, r4, lsr #24
9002369a:	b280      	uxth	r0, r0
9002369c:	b2bf      	uxth	r7, r7
9002369e:	1a1b      	subs	r3, r3, r0
900236a0:	ea4f 6812 	mov.w	r8, r2, lsr #24
900236a4:	fb07 f60a 	mul.w	r6, r7, sl
900236a8:	b29b      	uxth	r3, r3
900236aa:	fb0b 6603 	mla	r6, fp, r3, r6
900236ae:	fb00 6609 	mla	r6, r0, r9, r6
900236b2:	fb0e 6608 	mla	r6, lr, r8, r6
900236b6:	f3c6 2607 	ubfx	r6, r6, #8, #8
900236ba:	9600      	str	r6, [sp, #0]
900236bc:	2e00      	cmp	r6, #0
900236be:	f000 80af 	beq.w	90023820 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
900236c2:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
900236c6:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
900236ca:	9e02      	ldr	r6, [sp, #8]
900236cc:	fb0b fc0c 	mul.w	ip, fp, ip
900236d0:	fb0b f505 	mul.w	r5, fp, r5
900236d4:	8836      	ldrh	r6, [r6, #0]
900236d6:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
900236da:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
900236de:	9501      	str	r5, [sp, #4]
900236e0:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
900236e4:	44dc      	add	ip, fp
900236e6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900236ea:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
900236ee:	9503      	str	r5, [sp, #12]
900236f0:	9d01      	ldr	r5, [sp, #4]
900236f2:	f505 7c80 	add.w	ip, r5, #256	; 0x100
900236f6:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
900236fa:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
900236fe:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
90023702:	fb0a fc0c 	mul.w	ip, sl, ip
90023706:	ea4f 2b15 	mov.w	fp, r5, lsr #8
9002370a:	fb0a fa01 	mul.w	sl, sl, r1
9002370e:	ea4f 251c 	mov.w	r5, ip, lsr #8
90023712:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
90023716:	f50a 7180 	add.w	r1, sl, #256	; 0x100
9002371a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
9002371e:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
90023722:	4465      	add	r5, ip
90023724:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
90023728:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
9002372c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023730:	fb09 fc0c 	mul.w	ip, r9, ip
90023734:	0a2d      	lsrs	r5, r5, #8
90023736:	fb09 f904 	mul.w	r9, r9, r4
9002373a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
9002373e:	ea4f 211c 	mov.w	r1, ip, lsr #8
90023742:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
90023746:	f509 7480 	add.w	r4, r9, #256	; 0x100
9002374a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
9002374e:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
90023752:	437d      	muls	r5, r7
90023754:	eb04 2919 	add.w	r9, r4, r9, lsr #8
90023758:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
9002375c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
90023760:	4461      	add	r1, ip
90023762:	fb08 f404 	mul.w	r4, r8, r4
90023766:	ea4f 2919 	mov.w	r9, r9, lsr #8
9002376a:	fb08 f802 	mul.w	r8, r8, r2
9002376e:	0a09      	lsrs	r1, r1, #8
90023770:	0a22      	lsrs	r2, r4, #8
90023772:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
90023776:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
9002377a:	fb07 f70a 	mul.w	r7, r7, sl
9002377e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
90023782:	4414      	add	r4, r2
90023784:	f508 7280 	add.w	r2, r8, #256	; 0x100
90023788:	0a24      	lsrs	r4, r4, #8
9002378a:	eb02 2818 	add.w	r8, r2, r8, lsr #8
9002378e:	9a03      	ldr	r2, [sp, #12]
90023790:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
90023794:	fb02 5503 	mla	r5, r2, r3, r5
90023798:	ea4f 2818 	mov.w	r8, r8, lsr #8
9002379c:	fb04 540e 	mla	r4, r4, lr, r5
900237a0:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
900237a4:	fb01 4100 	mla	r1, r1, r0, r4
900237a8:	0a09      	lsrs	r1, r1, #8
900237aa:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
900237ae:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
900237b2:	fb03 7101 	mla	r1, r3, r1, r7
900237b6:	9b00      	ldr	r3, [sp, #0]
900237b8:	fb0e 1e08 	mla	lr, lr, r8, r1
900237bc:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
900237c0:	43da      	mvns	r2, r3
900237c2:	1233      	asrs	r3, r6, #8
900237c4:	fb00 e101 	mla	r1, r0, r1, lr
900237c8:	10f0      	asrs	r0, r6, #3
900237ca:	b2d2      	uxtb	r2, r2
900237cc:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
900237d0:	0a09      	lsrs	r1, r1, #8
900237d2:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
900237d6:	00f6      	lsls	r6, r6, #3
900237d8:	4353      	muls	r3, r2
900237da:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
900237de:	4350      	muls	r0, r2
900237e0:	b2f6      	uxtb	r6, r6
900237e2:	4321      	orrs	r1, r4
900237e4:	4356      	muls	r6, r2
900237e6:	1c5a      	adds	r2, r3, #1
900237e8:	eb02 2213 	add.w	r2, r2, r3, lsr #8
900237ec:	0c0b      	lsrs	r3, r1, #16
900237ee:	eb03 2312 	add.w	r3, r3, r2, lsr #8
900237f2:	1c42      	adds	r2, r0, #1
900237f4:	eb02 2010 	add.w	r0, r2, r0, lsr #8
900237f8:	0a0a      	lsrs	r2, r1, #8
900237fa:	021b      	lsls	r3, r3, #8
900237fc:	eb02 2210 	add.w	r2, r2, r0, lsr #8
90023800:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
90023804:	00d2      	lsls	r2, r2, #3
90023806:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9002380a:	4313      	orrs	r3, r2
9002380c:	1c72      	adds	r2, r6, #1
9002380e:	eb02 2616 	add.w	r6, r2, r6, lsr #8
90023812:	eb01 2116 	add.w	r1, r1, r6, lsr #8
90023816:	f3c1 01c4 	ubfx	r1, r1, #3, #5
9002381a:	4319      	orrs	r1, r3
9002381c:	9b02      	ldr	r3, [sp, #8]
9002381e:	8019      	strh	r1, [r3, #0]
90023820:	b005      	add	sp, #20
90023822:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90023826:	2500      	movs	r5, #0
90023828:	e6fe      	b.n	90023628 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
9002382a:	2100      	movs	r1, #0
9002382c:	460d      	mov	r5, r1
9002382e:	e706      	b.n	9002363e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
90023830:	2100      	movs	r1, #0
90023832:	e704      	b.n	9002363e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
90023834:	4631      	mov	r1, r6
90023836:	e702      	b.n	9002363e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
90023838:	2400      	movs	r4, #0
9002383a:	e713      	b.n	90023664 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
9002383c:	2200      	movs	r2, #0
9002383e:	4614      	mov	r4, r2
90023840:	e71a      	b.n	90023678 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
90023842:	4602      	mov	r2, r0
90023844:	4604      	mov	r4, r0
90023846:	e717      	b.n	90023678 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
90023848:	2200      	movs	r2, #0
9002384a:	e715      	b.n	90023678 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
9002384c:	4632      	mov	r2, r6
9002384e:	e713      	b.n	90023678 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>

90023850 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90023850:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90023854:	b09b      	sub	sp, #108	; 0x6c
90023856:	9218      	str	r2, [sp, #96]	; 0x60
90023858:	9a29      	ldr	r2, [sp, #164]	; 0xa4
9002385a:	9019      	str	r0, [sp, #100]	; 0x64
9002385c:	9116      	str	r1, [sp, #88]	; 0x58
9002385e:	6850      	ldr	r0, [r2, #4]
90023860:	9307      	str	r3, [sp, #28]
90023862:	6812      	ldr	r2, [r2, #0]
90023864:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
90023868:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
9002386c:	fb00 1303 	mla	r3, r0, r3, r1
90023870:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90023874:	930a      	str	r3, [sp, #40]	; 0x28
90023876:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90023878:	681b      	ldr	r3, [r3, #0]
9002387a:	930f      	str	r3, [sp, #60]	; 0x3c
9002387c:	9b16      	ldr	r3, [sp, #88]	; 0x58
9002387e:	2b00      	cmp	r3, #0
90023880:	dc03      	bgt.n	9002388a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
90023882:	9b18      	ldr	r3, [sp, #96]	; 0x60
90023884:	2b00      	cmp	r3, #0
90023886:	f340 8387 	ble.w	90023f98 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
9002388a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
9002388c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90023890:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90023894:	1e48      	subs	r0, r1, #1
90023896:	1e57      	subs	r7, r2, #1
90023898:	9b07      	ldr	r3, [sp, #28]
9002389a:	2b00      	cmp	r3, #0
9002389c:	f340 8166 	ble.w	90023b6c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
900238a0:	ea5f 4c24 	movs.w	ip, r4, asr #16
900238a4:	ea4f 4326 	mov.w	r3, r6, asr #16
900238a8:	d406      	bmi.n	900238b8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
900238aa:	4584      	cmp	ip, r0
900238ac:	da04      	bge.n	900238b8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
900238ae:	2b00      	cmp	r3, #0
900238b0:	db02      	blt.n	900238b8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
900238b2:	42bb      	cmp	r3, r7
900238b4:	f2c0 815b 	blt.w	90023b6e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
900238b8:	f11c 0c01 	adds.w	ip, ip, #1
900238bc:	f100 814b 	bmi.w	90023b56 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
900238c0:	4561      	cmp	r1, ip
900238c2:	f2c0 8148 	blt.w	90023b56 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
900238c6:	3301      	adds	r3, #1
900238c8:	f100 8145 	bmi.w	90023b56 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
900238cc:	429a      	cmp	r2, r3
900238ce:	f2c0 8142 	blt.w	90023b56 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
900238d2:	9b07      	ldr	r3, [sp, #28]
900238d4:	9f0a      	ldr	r7, [sp, #40]	; 0x28
900238d6:	9317      	str	r3, [sp, #92]	; 0x5c
900238d8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
900238da:	2b00      	cmp	r3, #0
900238dc:	f340 8165 	ble.w	90023baa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
900238e0:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
900238e2:	ea4f 4c26 	mov.w	ip, r6, asr #16
900238e6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
900238e8:	f3c4 3103 	ubfx	r1, r4, #12, #4
900238ec:	f8d2 e00c 	ldr.w	lr, [r2, #12]
900238f0:	1422      	asrs	r2, r4, #16
900238f2:	f3c6 3003 	ubfx	r0, r6, #12, #4
900238f6:	689b      	ldr	r3, [r3, #8]
900238f8:	f100 81d5 	bmi.w	90023ca6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
900238fc:	f103 38ff 	add.w	r8, r3, #4294967295
90023900:	4542      	cmp	r2, r8
90023902:	f280 81d0 	bge.w	90023ca6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
90023906:	f1bc 0f00 	cmp.w	ip, #0
9002390a:	f2c0 81cc 	blt.w	90023ca6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
9002390e:	f10e 38ff 	add.w	r8, lr, #4294967295
90023912:	45c4      	cmp	ip, r8
90023914:	f280 81c7 	bge.w	90023ca6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
90023918:	b21b      	sxth	r3, r3
9002391a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
9002391c:	fb0c 2203 	mla	r2, ip, r3, r2
90023920:	eb05 0882 	add.w	r8, r5, r2, lsl #2
90023924:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
90023928:	ea4f 6e12 	mov.w	lr, r2, lsr #24
9002392c:	2900      	cmp	r1, #0
9002392e:	f000 8182 	beq.w	90023c36 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
90023932:	f8d8 5004 	ldr.w	r5, [r8, #4]
90023936:	950b      	str	r5, [sp, #44]	; 0x2c
90023938:	0e2d      	lsrs	r5, r5, #24
9002393a:	9512      	str	r5, [sp, #72]	; 0x48
9002393c:	b180      	cbz	r0, 90023960 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
9002393e:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
90023942:	3b01      	subs	r3, #1
90023944:	009b      	lsls	r3, r3, #2
90023946:	3304      	adds	r3, #4
90023948:	eb08 0c03 	add.w	ip, r8, r3
9002394c:	f858 3003 	ldr.w	r3, [r8, r3]
90023950:	9308      	str	r3, [sp, #32]
90023952:	0e1b      	lsrs	r3, r3, #24
90023954:	9310      	str	r3, [sp, #64]	; 0x40
90023956:	f8dc 3004 	ldr.w	r3, [ip, #4]
9002395a:	930c      	str	r3, [sp, #48]	; 0x30
9002395c:	0e1b      	lsrs	r3, r3, #24
9002395e:	9313      	str	r3, [sp, #76]	; 0x4c
90023960:	b289      	uxth	r1, r1
90023962:	9b12      	ldr	r3, [sp, #72]	; 0x48
90023964:	b280      	uxth	r0, r0
90023966:	9d10      	ldr	r5, [sp, #64]	; 0x40
90023968:	fb01 f900 	mul.w	r9, r1, r0
9002396c:	0109      	lsls	r1, r1, #4
9002396e:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
90023972:	eba1 0809 	sub.w	r8, r1, r9
90023976:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
9002397a:	b280      	uxth	r0, r0
9002397c:	fa1f f888 	uxth.w	r8, r8
90023980:	1a09      	subs	r1, r1, r0
90023982:	fb08 f303 	mul.w	r3, r8, r3
90023986:	b289      	uxth	r1, r1
90023988:	fb01 330e 	mla	r3, r1, lr, r3
9002398c:	fb00 3305 	mla	r3, r0, r5, r3
90023990:	9d13      	ldr	r5, [sp, #76]	; 0x4c
90023992:	fb09 3305 	mla	r3, r9, r5, r3
90023996:	f3c3 2307 	ubfx	r3, r3, #8, #8
9002399a:	2b00      	cmp	r3, #0
9002399c:	f000 80d2 	beq.w	90023b44 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
900239a0:	f1be 0fff 	cmp.w	lr, #255	; 0xff
900239a4:	d01b      	beq.n	900239de <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
900239a6:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
900239aa:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
900239ae:	fb0e fa0a 	mul.w	sl, lr, sl
900239b2:	fb0e fe02 	mul.w	lr, lr, r2
900239b6:	ea4f 221a 	mov.w	r2, sl, lsr #8
900239ba:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
900239be:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
900239c2:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
900239c6:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
900239ca:	4452      	add	r2, sl
900239cc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900239d0:	0a12      	lsrs	r2, r2, #8
900239d2:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
900239d6:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
900239da:	ea42 020c 	orr.w	r2, r2, ip
900239de:	9d12      	ldr	r5, [sp, #72]	; 0x48
900239e0:	2dff      	cmp	r5, #255	; 0xff
900239e2:	d021      	beq.n	90023a28 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
900239e4:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
900239e6:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
900239ea:	9d12      	ldr	r5, [sp, #72]	; 0x48
900239ec:	fb05 fb0b 	mul.w	fp, r5, fp
900239f0:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
900239f2:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
900239f6:	9d12      	ldr	r5, [sp, #72]	; 0x48
900239f8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
900239fc:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90023a00:	fb05 fa0a 	mul.w	sl, r5, sl
90023a04:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90023a08:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90023a0c:	44de      	add	lr, fp
90023a0e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90023a12:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90023a16:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023a1a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90023a1e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90023a22:	ea4e 050a 	orr.w	r5, lr, sl
90023a26:	950b      	str	r5, [sp, #44]	; 0x2c
90023a28:	9d10      	ldr	r5, [sp, #64]	; 0x40
90023a2a:	2dff      	cmp	r5, #255	; 0xff
90023a2c:	d021      	beq.n	90023a72 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
90023a2e:	9d08      	ldr	r5, [sp, #32]
90023a30:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
90023a34:	9d10      	ldr	r5, [sp, #64]	; 0x40
90023a36:	fb05 fb0b 	mul.w	fp, r5, fp
90023a3a:	9d08      	ldr	r5, [sp, #32]
90023a3c:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
90023a40:	9d10      	ldr	r5, [sp, #64]	; 0x40
90023a42:	fb05 fa0e 	mul.w	sl, r5, lr
90023a46:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90023a4a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90023a4e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90023a52:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90023a56:	44de      	add	lr, fp
90023a58:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90023a5c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90023a60:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023a64:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90023a68:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90023a6c:	ea4e 050a 	orr.w	r5, lr, sl
90023a70:	9508      	str	r5, [sp, #32]
90023a72:	9d13      	ldr	r5, [sp, #76]	; 0x4c
90023a74:	2dff      	cmp	r5, #255	; 0xff
90023a76:	d021      	beq.n	90023abc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
90023a78:	9d0c      	ldr	r5, [sp, #48]	; 0x30
90023a7a:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
90023a7e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
90023a80:	fb05 fb0b 	mul.w	fp, r5, fp
90023a84:	9d0c      	ldr	r5, [sp, #48]	; 0x30
90023a86:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
90023a8a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
90023a8c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90023a90:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90023a94:	fb05 fa0a 	mul.w	sl, r5, sl
90023a98:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90023a9c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90023aa0:	44de      	add	lr, fp
90023aa2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90023aa6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90023aaa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023aae:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90023ab2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90023ab6:	ea4e 050a 	orr.w	r5, lr, sl
90023aba:	950c      	str	r5, [sp, #48]	; 0x30
90023abc:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
90023abe:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
90023ac2:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
90023ac6:	2bff      	cmp	r3, #255	; 0xff
90023ac8:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
90023acc:	9d08      	ldr	r5, [sp, #32]
90023ace:	fb08 fc0c 	mul.w	ip, r8, ip
90023ad2:	fb01 cc0e 	mla	ip, r1, lr, ip
90023ad6:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
90023ada:	9d0c      	ldr	r5, [sp, #48]	; 0x30
90023adc:	fb00 cc0e 	mla	ip, r0, lr, ip
90023ae0:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
90023ae4:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
90023ae6:	fb09 cc0e 	mla	ip, r9, lr, ip
90023aea:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
90023aee:	fb08 f80e 	mul.w	r8, r8, lr
90023af2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023af6:	fb01 8202 	mla	r2, r1, r2, r8
90023afa:	9908      	ldr	r1, [sp, #32]
90023afc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90023b00:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
90023b04:	990c      	ldr	r1, [sp, #48]	; 0x30
90023b06:	fb00 220a 	mla	r2, r0, sl, r2
90023b0a:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
90023b0e:	fb09 2900 	mla	r9, r9, r0, r2
90023b12:	ea4f 2919 	mov.w	r9, r9, lsr #8
90023b16:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
90023b1a:	ea4c 0c09 	orr.w	ip, ip, r9
90023b1e:	ea4f 221c 	mov.w	r2, ip, lsr #8
90023b22:	f040 8091 	bne.w	90023c48 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
90023b26:	ea4f 135c 	mov.w	r3, ip, lsr #5
90023b2a:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
90023b2e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90023b32:	f022 0207 	bic.w	r2, r2, #7
90023b36:	431a      	orrs	r2, r3
90023b38:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
90023b3c:	ea4c 0c02 	orr.w	ip, ip, r2
90023b40:	f8a7 c000 	strh.w	ip, [r7]
90023b44:	9b27      	ldr	r3, [sp, #156]	; 0x9c
90023b46:	3702      	adds	r7, #2
90023b48:	441c      	add	r4, r3
90023b4a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90023b4c:	441e      	add	r6, r3
90023b4e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
90023b50:	3b01      	subs	r3, #1
90023b52:	9317      	str	r3, [sp, #92]	; 0x5c
90023b54:	e6c0      	b.n	900238d8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
90023b56:	9b27      	ldr	r3, [sp, #156]	; 0x9c
90023b58:	441c      	add	r4, r3
90023b5a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90023b5c:	441e      	add	r6, r3
90023b5e:	9b07      	ldr	r3, [sp, #28]
90023b60:	3b01      	subs	r3, #1
90023b62:	9307      	str	r3, [sp, #28]
90023b64:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90023b66:	3302      	adds	r3, #2
90023b68:	930a      	str	r3, [sp, #40]	; 0x28
90023b6a:	e695      	b.n	90023898 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90023b6c:	d024      	beq.n	90023bb8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
90023b6e:	9b07      	ldr	r3, [sp, #28]
90023b70:	9827      	ldr	r0, [sp, #156]	; 0x9c
90023b72:	3b01      	subs	r3, #1
90023b74:	fb00 4003 	mla	r0, r0, r3, r4
90023b78:	1400      	asrs	r0, r0, #16
90023b7a:	f53f aeaa 	bmi.w	900238d2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
90023b7e:	3901      	subs	r1, #1
90023b80:	4288      	cmp	r0, r1
90023b82:	f6bf aea6 	bge.w	900238d2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
90023b86:	9928      	ldr	r1, [sp, #160]	; 0xa0
90023b88:	fb01 6303 	mla	r3, r1, r3, r6
90023b8c:	141b      	asrs	r3, r3, #16
90023b8e:	f53f aea0 	bmi.w	900238d2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
90023b92:	3a01      	subs	r2, #1
90023b94:	4293      	cmp	r3, r2
90023b96:	f6bf ae9c 	bge.w	900238d2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
90023b9a:	f8dd b01c 	ldr.w	fp, [sp, #28]
90023b9e:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
90023ba2:	f1bb 0f00 	cmp.w	fp, #0
90023ba6:	f300 809a 	bgt.w	90023cde <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
90023baa:	9b07      	ldr	r3, [sp, #28]
90023bac:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
90023bb0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90023bb2:	eb03 0345 	add.w	r3, r3, r5, lsl #1
90023bb6:	930a      	str	r3, [sp, #40]	; 0x28
90023bb8:	9b16      	ldr	r3, [sp, #88]	; 0x58
90023bba:	2b00      	cmp	r3, #0
90023bbc:	f340 81ec 	ble.w	90023f98 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
90023bc0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90023bc4:	9b24      	ldr	r3, [sp, #144]	; 0x90
90023bc6:	ee30 0a04 	vadd.f32	s0, s0, s8
90023bca:	ee70 0aa4 	vadd.f32	s1, s1, s9
90023bce:	eef0 6a62 	vmov.f32	s13, s5
90023bd2:	eec7 7a00 	vdiv.f32	s15, s14, s0
90023bd6:	ee31 1a05 	vadd.f32	s2, s2, s10
90023bda:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90023bde:	ee16 4a90 	vmov	r4, s13
90023be2:	eef0 6a43 	vmov.f32	s13, s6
90023be6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90023bea:	ee16 6a90 	vmov	r6, s13
90023bee:	ee20 7aa7 	vmul.f32	s14, s1, s15
90023bf2:	ee61 7a27 	vmul.f32	s15, s2, s15
90023bf6:	ee77 2a62 	vsub.f32	s5, s14, s5
90023bfa:	ee37 3ac3 	vsub.f32	s6, s15, s6
90023bfe:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90023c02:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90023c06:	ee12 2a90 	vmov	r2, s5
90023c0a:	eef0 2a47 	vmov.f32	s5, s14
90023c0e:	fb92 f3f3 	sdiv	r3, r2, r3
90023c12:	ee13 2a10 	vmov	r2, s6
90023c16:	9327      	str	r3, [sp, #156]	; 0x9c
90023c18:	9b24      	ldr	r3, [sp, #144]	; 0x90
90023c1a:	eeb0 3a67 	vmov.f32	s6, s15
90023c1e:	fb92 f3f3 	sdiv	r3, r2, r3
90023c22:	9328      	str	r3, [sp, #160]	; 0xa0
90023c24:	9b16      	ldr	r3, [sp, #88]	; 0x58
90023c26:	9a18      	ldr	r2, [sp, #96]	; 0x60
90023c28:	3b01      	subs	r3, #1
90023c2a:	9316      	str	r3, [sp, #88]	; 0x58
90023c2c:	9b24      	ldr	r3, [sp, #144]	; 0x90
90023c2e:	bf08      	it	eq
90023c30:	4613      	moveq	r3, r2
90023c32:	9307      	str	r3, [sp, #28]
90023c34:	e622      	b.n	9002387c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
90023c36:	2800      	cmp	r0, #0
90023c38:	f43f ae92 	beq.w	90023960 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
90023c3c:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
90023c40:	9308      	str	r3, [sp, #32]
90023c42:	0e1b      	lsrs	r3, r3, #24
90023c44:	9310      	str	r3, [sp, #64]	; 0x40
90023c46:	e68b      	b.n	90023960 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
90023c48:	8839      	ldrh	r1, [r7, #0]
90023c4a:	43db      	mvns	r3, r3
90023c4c:	4dd4      	ldr	r5, [pc, #848]	; (90023fa0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
90023c4e:	ea4f 2e21 	mov.w	lr, r1, asr #8
90023c52:	fa5f f883 	uxtb.w	r8, r3
90023c56:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
90023c5a:	10c8      	asrs	r0, r1, #3
90023c5c:	00cb      	lsls	r3, r1, #3
90023c5e:	fb0e fe08 	mul.w	lr, lr, r8
90023c62:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
90023c66:	b2db      	uxtb	r3, r3
90023c68:	f10e 0101 	add.w	r1, lr, #1
90023c6c:	fb00 f008 	mul.w	r0, r0, r8
90023c70:	fb03 f308 	mul.w	r3, r3, r8
90023c74:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
90023c78:	ea4f 411c 	mov.w	r1, ip, lsr #16
90023c7c:	eb01 211e 	add.w	r1, r1, lr, lsr #8
90023c80:	f100 0e01 	add.w	lr, r0, #1
90023c84:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
90023c88:	b2c9      	uxtb	r1, r1
90023c8a:	eb02 2210 	add.w	r2, r2, r0, lsr #8
90023c8e:	ea05 2101 	and.w	r1, r5, r1, lsl #8
90023c92:	00d2      	lsls	r2, r2, #3
90023c94:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90023c98:	430a      	orrs	r2, r1
90023c9a:	1c59      	adds	r1, r3, #1
90023c9c:	eb01 2313 	add.w	r3, r1, r3, lsr #8
90023ca0:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
90023ca4:	e748      	b.n	90023b38 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
90023ca6:	f112 0801 	adds.w	r8, r2, #1
90023caa:	f53f af4b 	bmi.w	90023b44 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90023cae:	4543      	cmp	r3, r8
90023cb0:	f6ff af48 	blt.w	90023b44 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90023cb4:	f11c 0801 	adds.w	r8, ip, #1
90023cb8:	f53f af44 	bmi.w	90023b44 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90023cbc:	45c6      	cmp	lr, r8
90023cbe:	f6ff af41 	blt.w	90023b44 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90023cc2:	b21b      	sxth	r3, r3
90023cc4:	e9cd 2c01 	strd	r2, ip, [sp, #4]
90023cc8:	fa0f f28e 	sxth.w	r2, lr
90023ccc:	e9cd 1003 	strd	r1, r0, [sp, #12]
90023cd0:	9200      	str	r2, [sp, #0]
90023cd2:	4639      	mov	r1, r7
90023cd4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
90023cd6:	9819      	ldr	r0, [sp, #100]	; 0x64
90023cd8:	f7ff fc88 	bl	900235ec <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
90023cdc:	e732      	b.n	90023b44 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90023cde:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90023ce0:	1421      	asrs	r1, r4, #16
90023ce2:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
90023ce4:	f3c4 3203 	ubfx	r2, r4, #12, #4
90023ce8:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
90023cec:	1433      	asrs	r3, r6, #16
90023cee:	f3c6 3003 	ubfx	r0, r6, #12, #4
90023cf2:	fb07 1303 	mla	r3, r7, r3, r1
90023cf6:	990f      	ldr	r1, [sp, #60]	; 0x3c
90023cf8:	eb01 0183 	add.w	r1, r1, r3, lsl #2
90023cfc:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
90023d00:	ea4f 6c13 	mov.w	ip, r3, lsr #24
90023d04:	2a00      	cmp	r2, #0
90023d06:	f000 8108 	beq.w	90023f1a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ca>
90023d0a:	684d      	ldr	r5, [r1, #4]
90023d0c:	950d      	str	r5, [sp, #52]	; 0x34
90023d0e:	0e2d      	lsrs	r5, r5, #24
90023d10:	9514      	str	r5, [sp, #80]	; 0x50
90023d12:	b178      	cbz	r0, 90023d34 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
90023d14:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
90023d18:	3f01      	subs	r7, #1
90023d1a:	00bf      	lsls	r7, r7, #2
90023d1c:	3704      	adds	r7, #4
90023d1e:	eb01 0e07 	add.w	lr, r1, r7
90023d22:	59c9      	ldr	r1, [r1, r7]
90023d24:	9109      	str	r1, [sp, #36]	; 0x24
90023d26:	0e09      	lsrs	r1, r1, #24
90023d28:	9111      	str	r1, [sp, #68]	; 0x44
90023d2a:	f8de 1004 	ldr.w	r1, [lr, #4]
90023d2e:	910e      	str	r1, [sp, #56]	; 0x38
90023d30:	0e09      	lsrs	r1, r1, #24
90023d32:	9115      	str	r1, [sp, #84]	; 0x54
90023d34:	b292      	uxth	r2, r2
90023d36:	9d11      	ldr	r5, [sp, #68]	; 0x44
90023d38:	b280      	uxth	r0, r0
90023d3a:	fb02 f900 	mul.w	r9, r2, r0
90023d3e:	0112      	lsls	r2, r2, #4
90023d40:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
90023d44:	eba2 0e09 	sub.w	lr, r2, r9
90023d48:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
90023d4c:	9a14      	ldr	r2, [sp, #80]	; 0x50
90023d4e:	b280      	uxth	r0, r0
90023d50:	fa1f fe8e 	uxth.w	lr, lr
90023d54:	1a09      	subs	r1, r1, r0
90023d56:	fb0e f202 	mul.w	r2, lr, r2
90023d5a:	b289      	uxth	r1, r1
90023d5c:	fb01 220c 	mla	r2, r1, ip, r2
90023d60:	fb00 2205 	mla	r2, r0, r5, r2
90023d64:	9d15      	ldr	r5, [sp, #84]	; 0x54
90023d66:	fb09 2205 	mla	r2, r9, r5, r2
90023d6a:	f3c2 2207 	ubfx	r2, r2, #8, #8
90023d6e:	2a00      	cmp	r2, #0
90023d70:	f000 80ca 	beq.w	90023f08 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
90023d74:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
90023d78:	d019      	beq.n	90023dae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
90023d7a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
90023d7e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90023d82:	fb0c fa0a 	mul.w	sl, ip, sl
90023d86:	fb0c fc03 	mul.w	ip, ip, r3
90023d8a:	ea4f 231a 	mov.w	r3, sl, lsr #8
90023d8e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
90023d92:	f50c 7780 	add.w	r7, ip, #256	; 0x100
90023d96:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90023d9a:	eb07 271c 	add.w	r7, r7, ip, lsr #8
90023d9e:	4453      	add	r3, sl
90023da0:	0a3f      	lsrs	r7, r7, #8
90023da2:	0a1b      	lsrs	r3, r3, #8
90023da4:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
90023da8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90023dac:	433b      	orrs	r3, r7
90023dae:	9d14      	ldr	r5, [sp, #80]	; 0x50
90023db0:	2dff      	cmp	r5, #255	; 0xff
90023db2:	d020      	beq.n	90023df6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
90023db4:	9d0d      	ldr	r5, [sp, #52]	; 0x34
90023db6:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
90023dba:	9d14      	ldr	r5, [sp, #80]	; 0x50
90023dbc:	436f      	muls	r7, r5
90023dbe:	9d0d      	ldr	r5, [sp, #52]	; 0x34
90023dc0:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90023dc4:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
90023dc8:	9d14      	ldr	r5, [sp, #80]	; 0x50
90023dca:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
90023dce:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90023dd2:	fb05 fa0a 	mul.w	sl, r5, sl
90023dd6:	44bc      	add	ip, r7
90023dd8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90023ddc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023de0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90023de4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90023de8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023dec:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90023df0:	ea4c 050a 	orr.w	r5, ip, sl
90023df4:	950d      	str	r5, [sp, #52]	; 0x34
90023df6:	9d11      	ldr	r5, [sp, #68]	; 0x44
90023df8:	2dff      	cmp	r5, #255	; 0xff
90023dfa:	d020      	beq.n	90023e3e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
90023dfc:	9d09      	ldr	r5, [sp, #36]	; 0x24
90023dfe:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
90023e02:	9d11      	ldr	r5, [sp, #68]	; 0x44
90023e04:	436f      	muls	r7, r5
90023e06:	9d09      	ldr	r5, [sp, #36]	; 0x24
90023e08:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
90023e0c:	9d11      	ldr	r5, [sp, #68]	; 0x44
90023e0e:	fb05 fa0c 	mul.w	sl, r5, ip
90023e12:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90023e16:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
90023e1a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90023e1e:	44bc      	add	ip, r7
90023e20:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90023e24:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90023e28:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023e2c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023e30:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90023e34:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90023e38:	ea4c 050a 	orr.w	r5, ip, sl
90023e3c:	9509      	str	r5, [sp, #36]	; 0x24
90023e3e:	9d15      	ldr	r5, [sp, #84]	; 0x54
90023e40:	2dff      	cmp	r5, #255	; 0xff
90023e42:	d020      	beq.n	90023e86 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
90023e44:	9d0e      	ldr	r5, [sp, #56]	; 0x38
90023e46:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
90023e4a:	9d15      	ldr	r5, [sp, #84]	; 0x54
90023e4c:	436f      	muls	r7, r5
90023e4e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
90023e50:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90023e54:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
90023e58:	9d15      	ldr	r5, [sp, #84]	; 0x54
90023e5a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
90023e5e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90023e62:	fb05 fa0a 	mul.w	sl, r5, sl
90023e66:	44bc      	add	ip, r7
90023e68:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90023e6c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023e70:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90023e74:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90023e78:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023e7c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90023e80:	ea4c 050a 	orr.w	r5, ip, sl
90023e84:	950e      	str	r5, [sp, #56]	; 0x38
90023e86:	9d0d      	ldr	r5, [sp, #52]	; 0x34
90023e88:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
90023e8c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90023e90:	2aff      	cmp	r2, #255	; 0xff
90023e92:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
90023e96:	9d09      	ldr	r5, [sp, #36]	; 0x24
90023e98:	fb0e f707 	mul.w	r7, lr, r7
90023e9c:	fb01 770c 	mla	r7, r1, ip, r7
90023ea0:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
90023ea4:	9d0e      	ldr	r5, [sp, #56]	; 0x38
90023ea6:	fb00 770c 	mla	r7, r0, ip, r7
90023eaa:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
90023eae:	9d0d      	ldr	r5, [sp, #52]	; 0x34
90023eb0:	fb09 770c 	mla	r7, r9, ip, r7
90023eb4:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
90023eb8:	fb0e fe0c 	mul.w	lr, lr, ip
90023ebc:	ea4f 2717 	mov.w	r7, r7, lsr #8
90023ec0:	fb01 e303 	mla	r3, r1, r3, lr
90023ec4:	9909      	ldr	r1, [sp, #36]	; 0x24
90023ec6:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
90023eca:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
90023ece:	990e      	ldr	r1, [sp, #56]	; 0x38
90023ed0:	fb00 330a 	mla	r3, r0, sl, r3
90023ed4:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
90023ed8:	fb09 3c0c 	mla	ip, r9, ip, r3
90023edc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023ee0:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
90023ee4:	ea47 070c 	orr.w	r7, r7, ip
90023ee8:	ea4f 2317 	mov.w	r3, r7, lsr #8
90023eec:	d11e      	bne.n	90023f2c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6dc>
90023eee:	097a      	lsrs	r2, r7, #5
90023ef0:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
90023ef4:	f3c7 07c4 	ubfx	r7, r7, #3, #5
90023ef8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90023efc:	f023 0307 	bic.w	r3, r3, #7
90023f00:	4313      	orrs	r3, r2
90023f02:	431f      	orrs	r7, r3
90023f04:	f8a8 7000 	strh.w	r7, [r8]
90023f08:	9b27      	ldr	r3, [sp, #156]	; 0x9c
90023f0a:	f108 0802 	add.w	r8, r8, #2
90023f0e:	f10b 3bff 	add.w	fp, fp, #4294967295
90023f12:	441c      	add	r4, r3
90023f14:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90023f16:	441e      	add	r6, r3
90023f18:	e643      	b.n	90023ba2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
90023f1a:	2800      	cmp	r0, #0
90023f1c:	f43f af0a 	beq.w	90023d34 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
90023f20:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
90023f24:	9109      	str	r1, [sp, #36]	; 0x24
90023f26:	0e09      	lsrs	r1, r1, #24
90023f28:	9111      	str	r1, [sp, #68]	; 0x44
90023f2a:	e703      	b.n	90023d34 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
90023f2c:	f8b8 1000 	ldrh.w	r1, [r8]
90023f30:	43d2      	mvns	r2, r2
90023f32:	ea4f 2c21 	mov.w	ip, r1, asr #8
90023f36:	fa5f fe82 	uxtb.w	lr, r2
90023f3a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
90023f3e:	10c8      	asrs	r0, r1, #3
90023f40:	00ca      	lsls	r2, r1, #3
90023f42:	fb0c fc0e 	mul.w	ip, ip, lr
90023f46:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
90023f4a:	b2d2      	uxtb	r2, r2
90023f4c:	f10c 0101 	add.w	r1, ip, #1
90023f50:	fb00 f00e 	mul.w	r0, r0, lr
90023f54:	fb02 f20e 	mul.w	r2, r2, lr
90023f58:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
90023f5c:	0c39      	lsrs	r1, r7, #16
90023f5e:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
90023f62:	490f      	ldr	r1, [pc, #60]	; (90023fa0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
90023f64:	fa5f fc8c 	uxtb.w	ip, ip
90023f68:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
90023f6c:	1c41      	adds	r1, r0, #1
90023f6e:	eb01 2010 	add.w	r0, r1, r0, lsr #8
90023f72:	1c51      	adds	r1, r2, #1
90023f74:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90023f78:	eb01 2212 	add.w	r2, r1, r2, lsr #8
90023f7c:	00c0      	lsls	r0, r0, #3
90023f7e:	eb07 2712 	add.w	r7, r7, r2, lsr #8
90023f82:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90023f86:	f3c7 07c4 	ubfx	r7, r7, #3, #5
90023f8a:	ea4c 0c00 	orr.w	ip, ip, r0
90023f8e:	ea47 0c0c 	orr.w	ip, r7, ip
90023f92:	f8a8 c000 	strh.w	ip, [r8]
90023f96:	e7b7      	b.n	90023f08 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
90023f98:	b01b      	add	sp, #108	; 0x6c
90023f9a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90023f9e:	bf00      	nop
90023fa0:	fffff800 	.word	0xfffff800

90023fa4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
90023fa4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90023fa8:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
90023fac:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
90023fb0:	2d00      	cmp	r5, #0
90023fb2:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
90023fb6:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
90023fba:	fb05 0e03 	mla	lr, r5, r3, r0
90023fbe:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
90023fc2:	f2c0 808c 	blt.w	900240de <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
90023fc6:	45a9      	cmp	r9, r5
90023fc8:	f340 8089 	ble.w	900240de <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
90023fcc:	2800      	cmp	r0, #0
90023fce:	f2c0 8084 	blt.w	900240da <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
90023fd2:	4580      	cmp	r8, r0
90023fd4:	f340 8081 	ble.w	900240da <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
90023fd8:	ea4f 045e 	mov.w	r4, lr, lsr #1
90023fdc:	f01e 0f01 	tst.w	lr, #1
90023fe0:	5d16      	ldrb	r6, [r2, r4]
90023fe2:	bf0c      	ite	eq
90023fe4:	f006 060f 	andeq.w	r6, r6, #15
90023fe8:	1136      	asrne	r6, r6, #4
90023fea:	eb06 1606 	add.w	r6, r6, r6, lsl #4
90023fee:	b2f6      	uxtb	r6, r6
90023ff0:	1c44      	adds	r4, r0, #1
90023ff2:	d477      	bmi.n	900240e4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
90023ff4:	45a0      	cmp	r8, r4
90023ff6:	dd75      	ble.n	900240e4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
90023ff8:	2f00      	cmp	r7, #0
90023ffa:	d075      	beq.n	900240e8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
90023ffc:	f10e 0a01 	add.w	sl, lr, #1
90024000:	ea4f 045a 	mov.w	r4, sl, lsr #1
90024004:	f01a 0f01 	tst.w	sl, #1
90024008:	5d14      	ldrb	r4, [r2, r4]
9002400a:	bf0c      	ite	eq
9002400c:	f004 040f 	andeq.w	r4, r4, #15
90024010:	1124      	asrne	r4, r4, #4
90024012:	eb04 1404 	add.w	r4, r4, r4, lsl #4
90024016:	b2e4      	uxtb	r4, r4
90024018:	3501      	adds	r5, #1
9002401a:	d469      	bmi.n	900240f0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
9002401c:	45a9      	cmp	r9, r5
9002401e:	dd67      	ble.n	900240f0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
90024020:	f1bc 0f00 	cmp.w	ip, #0
90024024:	d067      	beq.n	900240f6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
90024026:	2800      	cmp	r0, #0
90024028:	db60      	blt.n	900240ec <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
9002402a:	4580      	cmp	r8, r0
9002402c:	dd5e      	ble.n	900240ec <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
9002402e:	eb03 090e 	add.w	r9, r3, lr
90024032:	ea4f 0559 	mov.w	r5, r9, lsr #1
90024036:	f019 0f01 	tst.w	r9, #1
9002403a:	5d55      	ldrb	r5, [r2, r5]
9002403c:	bf0c      	ite	eq
9002403e:	f005 050f 	andeq.w	r5, r5, #15
90024042:	112d      	asrne	r5, r5, #4
90024044:	eb05 1505 	add.w	r5, r5, r5, lsl #4
90024048:	b2ed      	uxtb	r5, r5
9002404a:	3001      	adds	r0, #1
9002404c:	d456      	bmi.n	900240fc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
9002404e:	4580      	cmp	r8, r0
90024050:	dd54      	ble.n	900240fc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
90024052:	2f00      	cmp	r7, #0
90024054:	d054      	beq.n	90024100 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
90024056:	3301      	adds	r3, #1
90024058:	449e      	add	lr, r3
9002405a:	ea4f 035e 	mov.w	r3, lr, lsr #1
9002405e:	f01e 0f01 	tst.w	lr, #1
90024062:	5cd0      	ldrb	r0, [r2, r3]
90024064:	bf0c      	ite	eq
90024066:	f000 000f 	andeq.w	r0, r0, #15
9002406a:	1100      	asrne	r0, r0, #4
9002406c:	eb00 1000 	add.w	r0, r0, r0, lsl #4
90024070:	b2c3      	uxtb	r3, r0
90024072:	b2ba      	uxth	r2, r7
90024074:	fa1f fc8c 	uxth.w	ip, ip
90024078:	fb02 f00c 	mul.w	r0, r2, ip
9002407c:	0112      	lsls	r2, r2, #4
9002407e:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
90024082:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
90024086:	1a12      	subs	r2, r2, r0
90024088:	fa1f fc8c 	uxth.w	ip, ip
9002408c:	b292      	uxth	r2, r2
9002408e:	eba7 070c 	sub.w	r7, r7, ip
90024092:	4362      	muls	r2, r4
90024094:	b2bf      	uxth	r7, r7
90024096:	fb06 2207 	mla	r2, r6, r7, r2
9002409a:	fb0c 2505 	mla	r5, ip, r5, r2
9002409e:	fb00 5303 	mla	r3, r0, r3, r5
900240a2:	f3c3 2307 	ubfx	r3, r3, #8, #8
900240a6:	b1b3      	cbz	r3, 900240d6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
900240a8:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
900240ac:	435a      	muls	r2, r3
900240ae:	1c53      	adds	r3, r2, #1
900240b0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
900240b4:	4a2d      	ldr	r2, [pc, #180]	; (9002416c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
900240b6:	121b      	asrs	r3, r3, #8
900240b8:	6812      	ldr	r2, [r2, #0]
900240ba:	2bff      	cmp	r3, #255	; 0xff
900240bc:	ea4f 2612 	mov.w	r6, r2, lsr #8
900240c0:	d120      	bne.n	90024104 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
900240c2:	0950      	lsrs	r0, r2, #5
900240c4:	4b2a      	ldr	r3, [pc, #168]	; (90024170 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
900240c6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
900240ca:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
900240ce:	4033      	ands	r3, r6
900240d0:	4318      	orrs	r0, r3
900240d2:	4302      	orrs	r2, r0
900240d4:	800a      	strh	r2, [r1, #0]
900240d6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
900240da:	2600      	movs	r6, #0
900240dc:	e788      	b.n	90023ff0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
900240de:	2400      	movs	r4, #0
900240e0:	4626      	mov	r6, r4
900240e2:	e799      	b.n	90024018 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
900240e4:	2400      	movs	r4, #0
900240e6:	e797      	b.n	90024018 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
900240e8:	463c      	mov	r4, r7
900240ea:	e795      	b.n	90024018 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
900240ec:	2500      	movs	r5, #0
900240ee:	e7ac      	b.n	9002404a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
900240f0:	2300      	movs	r3, #0
900240f2:	461d      	mov	r5, r3
900240f4:	e7bd      	b.n	90024072 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
900240f6:	4663      	mov	r3, ip
900240f8:	4665      	mov	r5, ip
900240fa:	e7ba      	b.n	90024072 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
900240fc:	2300      	movs	r3, #0
900240fe:	e7b8      	b.n	90024072 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
90024100:	463b      	mov	r3, r7
90024102:	e7b6      	b.n	90024072 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
90024104:	880d      	ldrh	r5, [r1, #0]
90024106:	b29f      	uxth	r7, r3
90024108:	f3c2 4007 	ubfx	r0, r2, #16, #8
9002410c:	43db      	mvns	r3, r3
9002410e:	122c      	asrs	r4, r5, #8
90024110:	fb10 f007 	smulbb	r0, r0, r7
90024114:	b2db      	uxtb	r3, r3
90024116:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
9002411a:	b2f6      	uxtb	r6, r6
9002411c:	b2d2      	uxtb	r2, r2
9002411e:	fb04 0403 	mla	r4, r4, r3, r0
90024122:	10e8      	asrs	r0, r5, #3
90024124:	fb12 f207 	smulbb	r2, r2, r7
90024128:	00ed      	lsls	r5, r5, #3
9002412a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
9002412e:	b2a4      	uxth	r4, r4
90024130:	fb16 f607 	smulbb	r6, r6, r7
90024134:	b2ed      	uxtb	r5, r5
90024136:	fb00 6603 	mla	r6, r0, r3, r6
9002413a:	fb05 2303 	mla	r3, r5, r3, r2
9002413e:	b2b0      	uxth	r0, r6
90024140:	b29a      	uxth	r2, r3
90024142:	1c63      	adds	r3, r4, #1
90024144:	eb03 2414 	add.w	r4, r3, r4, lsr #8
90024148:	1c53      	adds	r3, r2, #1
9002414a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9002414e:	1c42      	adds	r2, r0, #1
90024150:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
90024154:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90024158:	f3c3 23c4 	ubfx	r3, r3, #11, #5
9002415c:	0940      	lsrs	r0, r0, #5
9002415e:	4323      	orrs	r3, r4
90024160:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90024164:	4303      	orrs	r3, r0
90024166:	800b      	strh	r3, [r1, #0]
90024168:	e7b5      	b.n	900240d6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
9002416a:	bf00      	nop
9002416c:	2402358c 	.word	0x2402358c
90024170:	00fff800 	.word	0x00fff800

90024174 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90024174:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90024178:	b097      	sub	sp, #92	; 0x5c
9002417a:	9214      	str	r2, [sp, #80]	; 0x50
9002417c:	9309      	str	r3, [sp, #36]	; 0x24
9002417e:	9a25      	ldr	r2, [sp, #148]	; 0x94
90024180:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
90024184:	9015      	str	r0, [sp, #84]	; 0x54
90024186:	910d      	str	r1, [sp, #52]	; 0x34
90024188:	6850      	ldr	r0, [r2, #4]
9002418a:	930f      	str	r3, [sp, #60]	; 0x3c
9002418c:	6812      	ldr	r2, [r2, #0]
9002418e:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
90024192:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
90024196:	fb00 1303 	mla	r3, r0, r3, r1
9002419a:	eb02 0943 	add.w	r9, r2, r3, lsl #1
9002419e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
900241a0:	689b      	ldr	r3, [r3, #8]
900241a2:	3301      	adds	r3, #1
900241a4:	f023 0301 	bic.w	r3, r3, #1
900241a8:	930a      	str	r3, [sp, #40]	; 0x28
900241aa:	9b28      	ldr	r3, [sp, #160]	; 0xa0
900241ac:	681f      	ldr	r7, [r3, #0]
900241ae:	9b0d      	ldr	r3, [sp, #52]	; 0x34
900241b0:	2b00      	cmp	r3, #0
900241b2:	dc03      	bgt.n	900241bc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
900241b4:	9b14      	ldr	r3, [sp, #80]	; 0x50
900241b6:	2b00      	cmp	r3, #0
900241b8:	f340 8289 	ble.w	900246ce <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
900241bc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
900241be:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900241c2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900241c6:	1e48      	subs	r0, r1, #1
900241c8:	f102 3cff 	add.w	ip, r2, #4294967295
900241cc:	9b09      	ldr	r3, [sp, #36]	; 0x24
900241ce:	2b00      	cmp	r3, #0
900241d0:	f340 80c5 	ble.w	9002435e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
900241d4:	ea5f 4e24 	movs.w	lr, r4, asr #16
900241d8:	ea4f 4326 	mov.w	r3, r6, asr #16
900241dc:	d406      	bmi.n	900241ec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
900241de:	4586      	cmp	lr, r0
900241e0:	da04      	bge.n	900241ec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
900241e2:	2b00      	cmp	r3, #0
900241e4:	db02      	blt.n	900241ec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
900241e6:	4563      	cmp	r3, ip
900241e8:	f2c0 80ba 	blt.w	90024360 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
900241ec:	f11e 0e01 	adds.w	lr, lr, #1
900241f0:	f100 80ab 	bmi.w	9002434a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
900241f4:	4571      	cmp	r1, lr
900241f6:	f2c0 80a8 	blt.w	9002434a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
900241fa:	3301      	adds	r3, #1
900241fc:	f100 80a5 	bmi.w	9002434a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
90024200:	429a      	cmp	r2, r3
90024202:	f2c0 80a2 	blt.w	9002434a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
90024206:	9b09      	ldr	r3, [sp, #36]	; 0x24
90024208:	46c8      	mov	r8, r9
9002420a:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
9002420e:	930e      	str	r3, [sp, #56]	; 0x38
90024210:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90024212:	2b00      	cmp	r3, #0
90024214:	f340 80c4 	ble.w	900243a0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
90024218:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9002421a:	1430      	asrs	r0, r6, #16
9002421c:	f3c4 3203 	ubfx	r2, r4, #12, #4
90024220:	f3c6 3103 	ubfx	r1, r6, #12, #4
90024224:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
90024228:	1423      	asrs	r3, r4, #16
9002422a:	f100 814f 	bmi.w	900244cc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
9002422e:	f10c 3bff 	add.w	fp, ip, #4294967295
90024232:	455b      	cmp	r3, fp
90024234:	f280 814a 	bge.w	900244cc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90024238:	2800      	cmp	r0, #0
9002423a:	f2c0 8147 	blt.w	900244cc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
9002423e:	f10e 3bff 	add.w	fp, lr, #4294967295
90024242:	4558      	cmp	r0, fp
90024244:	f280 8142 	bge.w	900244cc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90024248:	9d0a      	ldr	r5, [sp, #40]	; 0x28
9002424a:	fb00 3305 	mla	r3, r0, r5, r3
9002424e:	0858      	lsrs	r0, r3, #1
90024250:	07dd      	lsls	r5, r3, #31
90024252:	f817 c000 	ldrb.w	ip, [r7, r0]
90024256:	bf54      	ite	pl
90024258:	f00c 0c0f 	andpl.w	ip, ip, #15
9002425c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90024260:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90024264:	fa5f fc8c 	uxtb.w	ip, ip
90024268:	2a00      	cmp	r2, #0
9002426a:	f000 80dd 	beq.w	90024428 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b4>
9002426e:	1c58      	adds	r0, r3, #1
90024270:	ea4f 0e50 	mov.w	lr, r0, lsr #1
90024274:	07c0      	lsls	r0, r0, #31
90024276:	f817 e00e 	ldrb.w	lr, [r7, lr]
9002427a:	bf54      	ite	pl
9002427c:	f00e 0e0f 	andpl.w	lr, lr, #15
90024280:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
90024284:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
90024288:	fa5f f08e 	uxtb.w	r0, lr
9002428c:	9010      	str	r0, [sp, #64]	; 0x40
9002428e:	b1d9      	cbz	r1, 900242c8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
90024290:	4453      	add	r3, sl
90024292:	0858      	lsrs	r0, r3, #1
90024294:	07dd      	lsls	r5, r3, #31
90024296:	f103 0301 	add.w	r3, r3, #1
9002429a:	5c38      	ldrb	r0, [r7, r0]
9002429c:	bf54      	ite	pl
9002429e:	f000 000f 	andpl.w	r0, r0, #15
900242a2:	1100      	asrmi	r0, r0, #4
900242a4:	07dd      	lsls	r5, r3, #31
900242a6:	eb00 1000 	add.w	r0, r0, r0, lsl #4
900242aa:	b2c0      	uxtb	r0, r0
900242ac:	900b      	str	r0, [sp, #44]	; 0x2c
900242ae:	ea4f 0053 	mov.w	r0, r3, lsr #1
900242b2:	f817 e000 	ldrb.w	lr, [r7, r0]
900242b6:	bf54      	ite	pl
900242b8:	f00e 030f 	andpl.w	r3, lr, #15
900242bc:	ea4f 132e 	movmi.w	r3, lr, asr #4
900242c0:	eb03 1303 	add.w	r3, r3, r3, lsl #4
900242c4:	b2db      	uxtb	r3, r3
900242c6:	9311      	str	r3, [sp, #68]	; 0x44
900242c8:	b292      	uxth	r2, r2
900242ca:	9d10      	ldr	r5, [sp, #64]	; 0x40
900242cc:	b289      	uxth	r1, r1
900242ce:	fb02 f301 	mul.w	r3, r2, r1
900242d2:	0112      	lsls	r2, r2, #4
900242d4:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
900242d8:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
900242dc:	1ad2      	subs	r2, r2, r3
900242de:	b289      	uxth	r1, r1
900242e0:	b292      	uxth	r2, r2
900242e2:	1a40      	subs	r0, r0, r1
900242e4:	436a      	muls	r2, r5
900242e6:	b280      	uxth	r0, r0
900242e8:	fb0c 2c00 	mla	ip, ip, r0, r2
900242ec:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
900242ee:	fb01 c102 	mla	r1, r1, r2, ip
900242f2:	9a11      	ldr	r2, [sp, #68]	; 0x44
900242f4:	fb03 1302 	mla	r3, r3, r2, r1
900242f8:	f3c3 2307 	ubfx	r3, r3, #8, #8
900242fc:	b1db      	cbz	r3, 90024336 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
900242fe:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
90024300:	4353      	muls	r3, r2
90024302:	1c5a      	adds	r2, r3, #1
90024304:	eb02 2313 	add.w	r3, r2, r3, lsr #8
90024308:	4ac6      	ldr	r2, [pc, #792]	; (90024624 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
9002430a:	121b      	asrs	r3, r3, #8
9002430c:	6812      	ldr	r2, [r2, #0]
9002430e:	2bff      	cmp	r3, #255	; 0xff
90024310:	ea4f 2c12 	mov.w	ip, r2, lsr #8
90024314:	f040 8099 	bne.w	9002444a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
90024318:	0953      	lsrs	r3, r2, #5
9002431a:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
9002431e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90024322:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90024326:	f02c 0c07 	bic.w	ip, ip, #7
9002432a:	ea43 0c0c 	orr.w	ip, r3, ip
9002432e:	ea4c 0202 	orr.w	r2, ip, r2
90024332:	f8a8 2000 	strh.w	r2, [r8]
90024336:	9b23      	ldr	r3, [sp, #140]	; 0x8c
90024338:	f108 0802 	add.w	r8, r8, #2
9002433c:	441c      	add	r4, r3
9002433e:	9b24      	ldr	r3, [sp, #144]	; 0x90
90024340:	441e      	add	r6, r3
90024342:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90024344:	3b01      	subs	r3, #1
90024346:	930e      	str	r3, [sp, #56]	; 0x38
90024348:	e762      	b.n	90024210 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
9002434a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
9002434c:	f109 0902 	add.w	r9, r9, #2
90024350:	441c      	add	r4, r3
90024352:	9b24      	ldr	r3, [sp, #144]	; 0x90
90024354:	441e      	add	r6, r3
90024356:	9b09      	ldr	r3, [sp, #36]	; 0x24
90024358:	3b01      	subs	r3, #1
9002435a:	9309      	str	r3, [sp, #36]	; 0x24
9002435c:	e736      	b.n	900241cc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
9002435e:	d024      	beq.n	900243aa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
90024360:	9b09      	ldr	r3, [sp, #36]	; 0x24
90024362:	9823      	ldr	r0, [sp, #140]	; 0x8c
90024364:	3b01      	subs	r3, #1
90024366:	fb00 4003 	mla	r0, r0, r3, r4
9002436a:	1400      	asrs	r0, r0, #16
9002436c:	f53f af4b 	bmi.w	90024206 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90024370:	3901      	subs	r1, #1
90024372:	4288      	cmp	r0, r1
90024374:	f6bf af47 	bge.w	90024206 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90024378:	9924      	ldr	r1, [sp, #144]	; 0x90
9002437a:	fb01 6303 	mla	r3, r1, r3, r6
9002437e:	141b      	asrs	r3, r3, #16
90024380:	f53f af41 	bmi.w	90024206 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90024384:	3a01      	subs	r2, #1
90024386:	4293      	cmp	r3, r2
90024388:	f6bf af3d 	bge.w	90024206 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9002438c:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
90024390:	46c8      	mov	r8, r9
90024392:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
90024396:	930e      	str	r3, [sp, #56]	; 0x38
90024398:	f1bb 0f00 	cmp.w	fp, #0
9002439c:	f300 80b7 	bgt.w	9002450e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39a>
900243a0:	9b09      	ldr	r3, [sp, #36]	; 0x24
900243a2:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
900243a6:	eb09 0945 	add.w	r9, r9, r5, lsl #1
900243aa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
900243ac:	2b00      	cmp	r3, #0
900243ae:	f340 818e 	ble.w	900246ce <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
900243b2:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
900243b6:	9b20      	ldr	r3, [sp, #128]	; 0x80
900243b8:	ee30 0a04 	vadd.f32	s0, s0, s8
900243bc:	ee70 0aa4 	vadd.f32	s1, s1, s9
900243c0:	eef0 6a62 	vmov.f32	s13, s5
900243c4:	eec7 7a00 	vdiv.f32	s15, s14, s0
900243c8:	ee31 1a05 	vadd.f32	s2, s2, s10
900243cc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900243d0:	ee16 4a90 	vmov	r4, s13
900243d4:	eef0 6a43 	vmov.f32	s13, s6
900243d8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900243dc:	ee16 6a90 	vmov	r6, s13
900243e0:	ee20 7aa7 	vmul.f32	s14, s1, s15
900243e4:	ee61 7a27 	vmul.f32	s15, s2, s15
900243e8:	ee77 2a62 	vsub.f32	s5, s14, s5
900243ec:	ee37 3ac3 	vsub.f32	s6, s15, s6
900243f0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900243f4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900243f8:	ee12 2a90 	vmov	r2, s5
900243fc:	eef0 2a47 	vmov.f32	s5, s14
90024400:	fb92 f3f3 	sdiv	r3, r2, r3
90024404:	ee13 2a10 	vmov	r2, s6
90024408:	9323      	str	r3, [sp, #140]	; 0x8c
9002440a:	9b20      	ldr	r3, [sp, #128]	; 0x80
9002440c:	eeb0 3a67 	vmov.f32	s6, s15
90024410:	fb92 f3f3 	sdiv	r3, r2, r3
90024414:	9324      	str	r3, [sp, #144]	; 0x90
90024416:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90024418:	9a14      	ldr	r2, [sp, #80]	; 0x50
9002441a:	3b01      	subs	r3, #1
9002441c:	930d      	str	r3, [sp, #52]	; 0x34
9002441e:	9b20      	ldr	r3, [sp, #128]	; 0x80
90024420:	bf08      	it	eq
90024422:	4613      	moveq	r3, r2
90024424:	9309      	str	r3, [sp, #36]	; 0x24
90024426:	e6c2      	b.n	900241ae <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
90024428:	2900      	cmp	r1, #0
9002442a:	f43f af4d 	beq.w	900242c8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
9002442e:	eb0a 0003 	add.w	r0, sl, r3
90024432:	0843      	lsrs	r3, r0, #1
90024434:	07c0      	lsls	r0, r0, #31
90024436:	5cfb      	ldrb	r3, [r7, r3]
90024438:	bf54      	ite	pl
9002443a:	f003 030f 	andpl.w	r3, r3, #15
9002443e:	111b      	asrmi	r3, r3, #4
90024440:	eb03 1303 	add.w	r3, r3, r3, lsl #4
90024444:	b2db      	uxtb	r3, r3
90024446:	930b      	str	r3, [sp, #44]	; 0x2c
90024448:	e73e      	b.n	900242c8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
9002444a:	f8b8 e000 	ldrh.w	lr, [r8]
9002444e:	fa1f fb83 	uxth.w	fp, r3
90024452:	f3c2 4107 	ubfx	r1, r2, #16, #8
90024456:	43db      	mvns	r3, r3
90024458:	ea4f 202e 	mov.w	r0, lr, asr #8
9002445c:	fb11 f10b 	smulbb	r1, r1, fp
90024460:	b2db      	uxtb	r3, r3
90024462:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
90024466:	fa5f fc8c 	uxtb.w	ip, ip
9002446a:	b2d2      	uxtb	r2, r2
9002446c:	fb00 1003 	mla	r0, r0, r3, r1
90024470:	ea4f 01ee 	mov.w	r1, lr, asr #3
90024474:	fb1c fc0b 	smulbb	ip, ip, fp
90024478:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9002447c:	b280      	uxth	r0, r0
9002447e:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
90024482:	fb12 fb0b 	smulbb	fp, r2, fp
90024486:	fa5f fe8e 	uxtb.w	lr, lr
9002448a:	fb01 cc03 	mla	ip, r1, r3, ip
9002448e:	fb0e bb03 	mla	fp, lr, r3, fp
90024492:	1c43      	adds	r3, r0, #1
90024494:	fa1f fc8c 	uxth.w	ip, ip
90024498:	fa1f fb8b 	uxth.w	fp, fp
9002449c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
900244a0:	f10c 0101 	add.w	r1, ip, #1
900244a4:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
900244a8:	f10b 0001 	add.w	r0, fp, #1
900244ac:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
900244b0:	eb00 201b 	add.w	r0, r0, fp, lsr #8
900244b4:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
900244b8:	f3c0 20c4 	ubfx	r0, r0, #11, #5
900244bc:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
900244c0:	4318      	orrs	r0, r3
900244c2:	ea40 000c 	orr.w	r0, r0, ip
900244c6:	f8a8 0000 	strh.w	r0, [r8]
900244ca:	e734      	b.n	90024336 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
900244cc:	f113 0b01 	adds.w	fp, r3, #1
900244d0:	f53f af31 	bmi.w	90024336 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
900244d4:	45dc      	cmp	ip, fp
900244d6:	f6ff af2e 	blt.w	90024336 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
900244da:	f110 0b01 	adds.w	fp, r0, #1
900244de:	f53f af2a 	bmi.w	90024336 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
900244e2:	45de      	cmp	lr, fp
900244e4:	f6ff af27 	blt.w	90024336 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
900244e8:	9302      	str	r3, [sp, #8]
900244ea:	fa0f f38e 	sxth.w	r3, lr
900244ee:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
900244f0:	9301      	str	r3, [sp, #4]
900244f2:	fa0f f38c 	sxth.w	r3, ip
900244f6:	e9cd 0203 	strd	r0, r2, [sp, #12]
900244fa:	e9cd 1505 	strd	r1, r5, [sp, #20]
900244fe:	9300      	str	r3, [sp, #0]
90024500:	463a      	mov	r2, r7
90024502:	4653      	mov	r3, sl
90024504:	4641      	mov	r1, r8
90024506:	9815      	ldr	r0, [sp, #84]	; 0x54
90024508:	f7ff fd4c 	bl	90023fa4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
9002450c:	e713      	b.n	90024336 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
9002450e:	1422      	asrs	r2, r4, #16
90024510:	9d0a      	ldr	r5, [sp, #40]	; 0x28
90024512:	1433      	asrs	r3, r6, #16
90024514:	f3c4 3103 	ubfx	r1, r4, #12, #4
90024518:	f3c6 3003 	ubfx	r0, r6, #12, #4
9002451c:	fb05 2303 	mla	r3, r5, r3, r2
90024520:	085a      	lsrs	r2, r3, #1
90024522:	07dd      	lsls	r5, r3, #31
90024524:	5cba      	ldrb	r2, [r7, r2]
90024526:	bf54      	ite	pl
90024528:	f002 020f 	andpl.w	r2, r2, #15
9002452c:	1112      	asrmi	r2, r2, #4
9002452e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
90024532:	b2d2      	uxtb	r2, r2
90024534:	2900      	cmp	r1, #0
90024536:	d077      	beq.n	90024628 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90024538:	f103 0e01 	add.w	lr, r3, #1
9002453c:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
90024540:	f01e 0f01 	tst.w	lr, #1
90024544:	f817 c00c 	ldrb.w	ip, [r7, ip]
90024548:	bf0c      	ite	eq
9002454a:	f00c 0c0f 	andeq.w	ip, ip, #15
9002454e:	ea4f 1c2c 	movne.w	ip, ip, asr #4
90024552:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90024556:	fa5f f58c 	uxtb.w	r5, ip
9002455a:	9512      	str	r5, [sp, #72]	; 0x48
9002455c:	b308      	cbz	r0, 900245a2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
9002455e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
90024560:	442b      	add	r3, r5
90024562:	ea4f 0c53 	mov.w	ip, r3, lsr #1
90024566:	07dd      	lsls	r5, r3, #31
90024568:	f103 0301 	add.w	r3, r3, #1
9002456c:	f817 c00c 	ldrb.w	ip, [r7, ip]
90024570:	bf54      	ite	pl
90024572:	f00c 0c0f 	andpl.w	ip, ip, #15
90024576:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
9002457a:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
9002457e:	fa5f f58c 	uxtb.w	r5, ip
90024582:	ea4f 0c53 	mov.w	ip, r3, lsr #1
90024586:	950c      	str	r5, [sp, #48]	; 0x30
90024588:	07dd      	lsls	r5, r3, #31
9002458a:	f817 c00c 	ldrb.w	ip, [r7, ip]
9002458e:	bf54      	ite	pl
90024590:	f00c 0c0f 	andpl.w	ip, ip, #15
90024594:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90024598:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
9002459c:	fa5f f38c 	uxtb.w	r3, ip
900245a0:	9313      	str	r3, [sp, #76]	; 0x4c
900245a2:	b289      	uxth	r1, r1
900245a4:	9d12      	ldr	r5, [sp, #72]	; 0x48
900245a6:	b280      	uxth	r0, r0
900245a8:	fb01 f300 	mul.w	r3, r1, r0
900245ac:	0109      	lsls	r1, r1, #4
900245ae:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
900245b2:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
900245b6:	1ac9      	subs	r1, r1, r3
900245b8:	b280      	uxth	r0, r0
900245ba:	b289      	uxth	r1, r1
900245bc:	ebac 0c00 	sub.w	ip, ip, r0
900245c0:	4369      	muls	r1, r5
900245c2:	fa1f fc8c 	uxth.w	ip, ip
900245c6:	fb02 120c 	mla	r2, r2, ip, r1
900245ca:	990c      	ldr	r1, [sp, #48]	; 0x30
900245cc:	fb00 2001 	mla	r0, r0, r1, r2
900245d0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
900245d2:	fb03 0302 	mla	r3, r3, r2, r0
900245d6:	f3c3 2307 	ubfx	r3, r3, #8, #8
900245da:	b1d3      	cbz	r3, 90024612 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
900245dc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
900245de:	4353      	muls	r3, r2
900245e0:	1c5a      	adds	r2, r3, #1
900245e2:	eb02 2313 	add.w	r3, r2, r3, lsr #8
900245e6:	4a0f      	ldr	r2, [pc, #60]	; (90024624 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
900245e8:	121b      	asrs	r3, r3, #8
900245ea:	6812      	ldr	r2, [r2, #0]
900245ec:	2bff      	cmp	r3, #255	; 0xff
900245ee:	ea4f 2c12 	mov.w	ip, r2, lsr #8
900245f2:	d12d      	bne.n	90024650 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4dc>
900245f4:	0953      	lsrs	r3, r2, #5
900245f6:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
900245fa:	f3c2 02c4 	ubfx	r2, r2, #3, #5
900245fe:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90024602:	f02c 0c07 	bic.w	ip, ip, #7
90024606:	ea43 0c0c 	orr.w	ip, r3, ip
9002460a:	ea4c 0202 	orr.w	r2, ip, r2
9002460e:	f8a8 2000 	strh.w	r2, [r8]
90024612:	9b23      	ldr	r3, [sp, #140]	; 0x8c
90024614:	f108 0802 	add.w	r8, r8, #2
90024618:	f10b 3bff 	add.w	fp, fp, #4294967295
9002461c:	441c      	add	r4, r3
9002461e:	9b24      	ldr	r3, [sp, #144]	; 0x90
90024620:	441e      	add	r6, r3
90024622:	e6b9      	b.n	90024398 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
90024624:	2402358c 	.word	0x2402358c
90024628:	2800      	cmp	r0, #0
9002462a:	d0ba      	beq.n	900245a2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
9002462c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
9002462e:	442b      	add	r3, r5
90024630:	ea4f 0c53 	mov.w	ip, r3, lsr #1
90024634:	07db      	lsls	r3, r3, #31
90024636:	f817 c00c 	ldrb.w	ip, [r7, ip]
9002463a:	bf54      	ite	pl
9002463c:	f00c 0c0f 	andpl.w	ip, ip, #15
90024640:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90024644:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90024648:	fa5f f38c 	uxtb.w	r3, ip
9002464c:	930c      	str	r3, [sp, #48]	; 0x30
9002464e:	e7a8      	b.n	900245a2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
90024650:	f8b8 e000 	ldrh.w	lr, [r8]
90024654:	fa1f fa83 	uxth.w	sl, r3
90024658:	f3c2 4107 	ubfx	r1, r2, #16, #8
9002465c:	43db      	mvns	r3, r3
9002465e:	ea4f 202e 	mov.w	r0, lr, asr #8
90024662:	fb11 f10a 	smulbb	r1, r1, sl
90024666:	b2db      	uxtb	r3, r3
90024668:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
9002466c:	b2d2      	uxtb	r2, r2
9002466e:	fa5f fc8c 	uxtb.w	ip, ip
90024672:	fb00 1003 	mla	r0, r0, r3, r1
90024676:	ea4f 01ee 	mov.w	r1, lr, asr #3
9002467a:	fb12 f20a 	smulbb	r2, r2, sl
9002467e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90024682:	b280      	uxth	r0, r0
90024684:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
90024688:	fb1c fc0a 	smulbb	ip, ip, sl
9002468c:	fa5f fe8e 	uxtb.w	lr, lr
90024690:	fb0e 2203 	mla	r2, lr, r3, r2
90024694:	fb01 cc03 	mla	ip, r1, r3, ip
90024698:	1c43      	adds	r3, r0, #1
9002469a:	b292      	uxth	r2, r2
9002469c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
900246a0:	1c51      	adds	r1, r2, #1
900246a2:	fa1f fc8c 	uxth.w	ip, ip
900246a6:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
900246aa:	eb01 2112 	add.w	r1, r1, r2, lsr #8
900246ae:	f3c1 21c4 	ubfx	r1, r1, #11, #5
900246b2:	4308      	orrs	r0, r1
900246b4:	f10c 0101 	add.w	r1, ip, #1
900246b8:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
900246bc:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
900246c0:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
900246c4:	ea40 000c 	orr.w	r0, r0, ip
900246c8:	f8a8 0000 	strh.w	r0, [r8]
900246cc:	e7a1      	b.n	90024612 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
900246ce:	b017      	add	sp, #92	; 0x5c
900246d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900246d4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
900246d4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900246d8:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
900246dc:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
900246e0:	2d00      	cmp	r5, #0
900246e2:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
900246e6:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
900246ea:	fb05 0e03 	mla	lr, r5, r3, r0
900246ee:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
900246f2:	f2c0 80b0 	blt.w	90024856 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
900246f6:	45a9      	cmp	r9, r5
900246f8:	f340 80ad 	ble.w	90024856 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
900246fc:	2800      	cmp	r0, #0
900246fe:	f2c0 80a8 	blt.w	90024852 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
90024702:	4580      	cmp	r8, r0
90024704:	f340 80a5 	ble.w	90024852 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
90024708:	ea4f 045e 	mov.w	r4, lr, lsr #1
9002470c:	f01e 0f01 	tst.w	lr, #1
90024710:	5d16      	ldrb	r6, [r2, r4]
90024712:	bf0c      	ite	eq
90024714:	f006 060f 	andeq.w	r6, r6, #15
90024718:	1136      	asrne	r6, r6, #4
9002471a:	eb06 1606 	add.w	r6, r6, r6, lsl #4
9002471e:	b2f6      	uxtb	r6, r6
90024720:	1c44      	adds	r4, r0, #1
90024722:	f100 809b 	bmi.w	9002485c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
90024726:	45a0      	cmp	r8, r4
90024728:	f340 8098 	ble.w	9002485c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
9002472c:	2f00      	cmp	r7, #0
9002472e:	f000 8097 	beq.w	90024860 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
90024732:	f10e 0a01 	add.w	sl, lr, #1
90024736:	ea4f 045a 	mov.w	r4, sl, lsr #1
9002473a:	f01a 0f01 	tst.w	sl, #1
9002473e:	5d14      	ldrb	r4, [r2, r4]
90024740:	bf0c      	ite	eq
90024742:	f004 040f 	andeq.w	r4, r4, #15
90024746:	1124      	asrne	r4, r4, #4
90024748:	eb04 1404 	add.w	r4, r4, r4, lsl #4
9002474c:	b2e4      	uxtb	r4, r4
9002474e:	3501      	adds	r5, #1
90024750:	f100 808a 	bmi.w	90024868 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
90024754:	45a9      	cmp	r9, r5
90024756:	f340 8087 	ble.w	90024868 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
9002475a:	f1bc 0f00 	cmp.w	ip, #0
9002475e:	f000 8086 	beq.w	9002486e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
90024762:	2800      	cmp	r0, #0
90024764:	db7e      	blt.n	90024864 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
90024766:	4580      	cmp	r8, r0
90024768:	dd7c      	ble.n	90024864 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
9002476a:	eb03 090e 	add.w	r9, r3, lr
9002476e:	ea4f 0559 	mov.w	r5, r9, lsr #1
90024772:	f019 0f01 	tst.w	r9, #1
90024776:	5d55      	ldrb	r5, [r2, r5]
90024778:	bf0c      	ite	eq
9002477a:	f005 050f 	andeq.w	r5, r5, #15
9002477e:	112d      	asrne	r5, r5, #4
90024780:	eb05 1505 	add.w	r5, r5, r5, lsl #4
90024784:	b2ed      	uxtb	r5, r5
90024786:	3001      	adds	r0, #1
90024788:	d474      	bmi.n	90024874 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
9002478a:	4580      	cmp	r8, r0
9002478c:	dd72      	ble.n	90024874 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
9002478e:	2f00      	cmp	r7, #0
90024790:	d072      	beq.n	90024878 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
90024792:	3301      	adds	r3, #1
90024794:	449e      	add	lr, r3
90024796:	ea4f 035e 	mov.w	r3, lr, lsr #1
9002479a:	f01e 0f01 	tst.w	lr, #1
9002479e:	5cd0      	ldrb	r0, [r2, r3]
900247a0:	bf0c      	ite	eq
900247a2:	f000 000f 	andeq.w	r0, r0, #15
900247a6:	1100      	asrne	r0, r0, #4
900247a8:	eb00 1000 	add.w	r0, r0, r0, lsl #4
900247ac:	b2c3      	uxtb	r3, r0
900247ae:	b2ba      	uxth	r2, r7
900247b0:	fa1f fc8c 	uxth.w	ip, ip
900247b4:	fb02 f00c 	mul.w	r0, r2, ip
900247b8:	0112      	lsls	r2, r2, #4
900247ba:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
900247be:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
900247c2:	1a12      	subs	r2, r2, r0
900247c4:	fa1f fc8c 	uxth.w	ip, ip
900247c8:	b292      	uxth	r2, r2
900247ca:	eba7 070c 	sub.w	r7, r7, ip
900247ce:	4362      	muls	r2, r4
900247d0:	b2bf      	uxth	r7, r7
900247d2:	fb06 2207 	mla	r2, r6, r7, r2
900247d6:	fb0c 2505 	mla	r5, ip, r5, r2
900247da:	fb00 5303 	mla	r3, r0, r3, r5
900247de:	f3c3 2307 	ubfx	r3, r3, #8, #8
900247e2:	b3a3      	cbz	r3, 9002484e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
900247e4:	4a25      	ldr	r2, [pc, #148]	; (9002487c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
900247e6:	880e      	ldrh	r6, [r1, #0]
900247e8:	6815      	ldr	r5, [r2, #0]
900247ea:	b29a      	uxth	r2, r3
900247ec:	1234      	asrs	r4, r6, #8
900247ee:	43db      	mvns	r3, r3
900247f0:	f3c5 4007 	ubfx	r0, r5, #16, #8
900247f4:	f3c5 2707 	ubfx	r7, r5, #8, #8
900247f8:	b2db      	uxtb	r3, r3
900247fa:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
900247fe:	fb10 f002 	smulbb	r0, r0, r2
90024802:	b2ed      	uxtb	r5, r5
90024804:	fb17 f702 	smulbb	r7, r7, r2
90024808:	fb04 0403 	mla	r4, r4, r3, r0
9002480c:	10f0      	asrs	r0, r6, #3
9002480e:	fb15 f202 	smulbb	r2, r5, r2
90024812:	00f6      	lsls	r6, r6, #3
90024814:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
90024818:	b2a4      	uxth	r4, r4
9002481a:	b2f6      	uxtb	r6, r6
9002481c:	fb00 7003 	mla	r0, r0, r3, r7
90024820:	fb06 2303 	mla	r3, r6, r3, r2
90024824:	b280      	uxth	r0, r0
90024826:	b29a      	uxth	r2, r3
90024828:	1c63      	adds	r3, r4, #1
9002482a:	eb03 2414 	add.w	r4, r3, r4, lsr #8
9002482e:	1c53      	adds	r3, r2, #1
90024830:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90024834:	1c42      	adds	r2, r0, #1
90024836:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
9002483a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
9002483e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90024842:	0940      	lsrs	r0, r0, #5
90024844:	4323      	orrs	r3, r4
90024846:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9002484a:	4303      	orrs	r3, r0
9002484c:	800b      	strh	r3, [r1, #0]
9002484e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90024852:	2600      	movs	r6, #0
90024854:	e764      	b.n	90024720 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
90024856:	2400      	movs	r4, #0
90024858:	4626      	mov	r6, r4
9002485a:	e778      	b.n	9002474e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
9002485c:	2400      	movs	r4, #0
9002485e:	e776      	b.n	9002474e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
90024860:	463c      	mov	r4, r7
90024862:	e774      	b.n	9002474e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
90024864:	2500      	movs	r5, #0
90024866:	e78e      	b.n	90024786 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
90024868:	2300      	movs	r3, #0
9002486a:	461d      	mov	r5, r3
9002486c:	e79f      	b.n	900247ae <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
9002486e:	4663      	mov	r3, ip
90024870:	4665      	mov	r5, ip
90024872:	e79c      	b.n	900247ae <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
90024874:	2300      	movs	r3, #0
90024876:	e79a      	b.n	900247ae <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
90024878:	463b      	mov	r3, r7
9002487a:	e798      	b.n	900247ae <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
9002487c:	2402358c 	.word	0x2402358c

90024880 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90024880:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90024884:	b093      	sub	sp, #76	; 0x4c
90024886:	461d      	mov	r5, r3
90024888:	920c      	str	r2, [sp, #48]	; 0x30
9002488a:	9a21      	ldr	r2, [sp, #132]	; 0x84
9002488c:	9011      	str	r0, [sp, #68]	; 0x44
9002488e:	9107      	str	r1, [sp, #28]
90024890:	6850      	ldr	r0, [r2, #4]
90024892:	6812      	ldr	r2, [r2, #0]
90024894:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
90024898:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
9002489c:	fb00 1303 	mla	r3, r0, r3, r1
900248a0:	eb02 0943 	add.w	r9, r2, r3, lsl #1
900248a4:	9b24      	ldr	r3, [sp, #144]	; 0x90
900248a6:	689b      	ldr	r3, [r3, #8]
900248a8:	3301      	adds	r3, #1
900248aa:	f023 0301 	bic.w	r3, r3, #1
900248ae:	9306      	str	r3, [sp, #24]
900248b0:	9b24      	ldr	r3, [sp, #144]	; 0x90
900248b2:	681f      	ldr	r7, [r3, #0]
900248b4:	9b07      	ldr	r3, [sp, #28]
900248b6:	2b00      	cmp	r3, #0
900248b8:	dc03      	bgt.n	900248c2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
900248ba:	9b0c      	ldr	r3, [sp, #48]	; 0x30
900248bc:	2b00      	cmp	r3, #0
900248be:	f340 8267 	ble.w	90024d90 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
900248c2:	9b24      	ldr	r3, [sp, #144]	; 0x90
900248c4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900248c8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900248cc:	1e48      	subs	r0, r1, #1
900248ce:	f102 3cff 	add.w	ip, r2, #4294967295
900248d2:	2d00      	cmp	r5, #0
900248d4:	f340 80b7 	ble.w	90024a46 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
900248d8:	ea5f 4e24 	movs.w	lr, r4, asr #16
900248dc:	ea4f 4326 	mov.w	r3, r6, asr #16
900248e0:	d406      	bmi.n	900248f0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
900248e2:	4586      	cmp	lr, r0
900248e4:	da04      	bge.n	900248f0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
900248e6:	2b00      	cmp	r3, #0
900248e8:	db02      	blt.n	900248f0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
900248ea:	4563      	cmp	r3, ip
900248ec:	f2c0 80ac 	blt.w	90024a48 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
900248f0:	f11e 0e01 	adds.w	lr, lr, #1
900248f4:	f100 809f 	bmi.w	90024a36 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
900248f8:	4571      	cmp	r1, lr
900248fa:	f2c0 809c 	blt.w	90024a36 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
900248fe:	3301      	adds	r3, #1
90024900:	f100 8099 	bmi.w	90024a36 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
90024904:	429a      	cmp	r2, r3
90024906:	f2c0 8096 	blt.w	90024a36 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
9002490a:	46c8      	mov	r8, r9
9002490c:	f9bd a018 	ldrsh.w	sl, [sp, #24]
90024910:	9509      	str	r5, [sp, #36]	; 0x24
90024912:	9b09      	ldr	r3, [sp, #36]	; 0x24
90024914:	2b00      	cmp	r3, #0
90024916:	f340 80b5 	ble.w	90024a84 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9002491a:	f3c4 3303 	ubfx	r3, r4, #12, #4
9002491e:	1430      	asrs	r0, r6, #16
90024920:	f3c6 3103 	ubfx	r1, r6, #12, #4
90024924:	9308      	str	r3, [sp, #32]
90024926:	9b24      	ldr	r3, [sp, #144]	; 0x90
90024928:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
9002492c:	1423      	asrs	r3, r4, #16
9002492e:	f100 813f 	bmi.w	90024bb0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
90024932:	f10c 3bff 	add.w	fp, ip, #4294967295
90024936:	455b      	cmp	r3, fp
90024938:	f280 813a 	bge.w	90024bb0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
9002493c:	2800      	cmp	r0, #0
9002493e:	f2c0 8137 	blt.w	90024bb0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
90024942:	f10e 3bff 	add.w	fp, lr, #4294967295
90024946:	4558      	cmp	r0, fp
90024948:	f280 8132 	bge.w	90024bb0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
9002494c:	9a06      	ldr	r2, [sp, #24]
9002494e:	fb00 3302 	mla	r3, r0, r2, r3
90024952:	0858      	lsrs	r0, r3, #1
90024954:	07da      	lsls	r2, r3, #31
90024956:	9a08      	ldr	r2, [sp, #32]
90024958:	f817 c000 	ldrb.w	ip, [r7, r0]
9002495c:	bf54      	ite	pl
9002495e:	f00c 0c0f 	andpl.w	ip, ip, #15
90024962:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90024966:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
9002496a:	fa5f fc8c 	uxtb.w	ip, ip
9002496e:	2a00      	cmp	r2, #0
90024970:	f000 80cc 	beq.w	90024b0c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
90024974:	1c58      	adds	r0, r3, #1
90024976:	ea4f 0e50 	mov.w	lr, r0, lsr #1
9002497a:	07c0      	lsls	r0, r0, #31
9002497c:	f817 e00e 	ldrb.w	lr, [r7, lr]
90024980:	bf54      	ite	pl
90024982:	f00e 0e0f 	andpl.w	lr, lr, #15
90024986:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
9002498a:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
9002498e:	fa5f fe8e 	uxtb.w	lr, lr
90024992:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
90024996:	b1b9      	cbz	r1, 900249c8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
90024998:	4453      	add	r3, sl
9002499a:	0858      	lsrs	r0, r3, #1
9002499c:	07da      	lsls	r2, r3, #31
9002499e:	5c38      	ldrb	r0, [r7, r0]
900249a0:	bf54      	ite	pl
900249a2:	f000 000f 	andpl.w	r0, r0, #15
900249a6:	1100      	asrmi	r0, r0, #4
900249a8:	eb00 1000 	add.w	r0, r0, r0, lsl #4
900249ac:	b2c0      	uxtb	r0, r0
900249ae:	900a      	str	r0, [sp, #40]	; 0x28
900249b0:	1c58      	adds	r0, r3, #1
900249b2:	0843      	lsrs	r3, r0, #1
900249b4:	07c2      	lsls	r2, r0, #31
900249b6:	5cfb      	ldrb	r3, [r7, r3]
900249b8:	bf54      	ite	pl
900249ba:	f003 030f 	andpl.w	r3, r3, #15
900249be:	111b      	asrmi	r3, r3, #4
900249c0:	eb03 1303 	add.w	r3, r3, r3, lsl #4
900249c4:	b2db      	uxtb	r3, r3
900249c6:	930e      	str	r3, [sp, #56]	; 0x38
900249c8:	f8bd 2020 	ldrh.w	r2, [sp, #32]
900249cc:	b289      	uxth	r1, r1
900249ce:	fb02 f301 	mul.w	r3, r2, r1
900249d2:	0112      	lsls	r2, r2, #4
900249d4:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
900249d8:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
900249dc:	1ad2      	subs	r2, r2, r3
900249de:	b289      	uxth	r1, r1
900249e0:	b292      	uxth	r2, r2
900249e2:	1a40      	subs	r0, r0, r1
900249e4:	fa1f fe80 	uxth.w	lr, r0
900249e8:	980d      	ldr	r0, [sp, #52]	; 0x34
900249ea:	4342      	muls	r2, r0
900249ec:	fb0c 2c0e 	mla	ip, ip, lr, r2
900249f0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
900249f2:	fb01 c102 	mla	r1, r1, r2, ip
900249f6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
900249f8:	fb03 1302 	mla	r3, r3, r2, r1
900249fc:	f3c3 2307 	ubfx	r3, r3, #8, #8
90024a00:	2bff      	cmp	r3, #255	; 0xff
90024a02:	f040 8094 	bne.w	90024b2e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
90024a06:	4bbf      	ldr	r3, [pc, #764]	; (90024d04 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
90024a08:	681a      	ldr	r2, [r3, #0]
90024a0a:	4bbf      	ldr	r3, [pc, #764]	; (90024d08 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
90024a0c:	0951      	lsrs	r1, r2, #5
90024a0e:	ea03 2312 	and.w	r3, r3, r2, lsr #8
90024a12:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90024a16:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90024a1a:	430b      	orrs	r3, r1
90024a1c:	4313      	orrs	r3, r2
90024a1e:	f8a8 3000 	strh.w	r3, [r8]
90024a22:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90024a24:	f108 0802 	add.w	r8, r8, #2
90024a28:	441c      	add	r4, r3
90024a2a:	9b20      	ldr	r3, [sp, #128]	; 0x80
90024a2c:	441e      	add	r6, r3
90024a2e:	9b09      	ldr	r3, [sp, #36]	; 0x24
90024a30:	3b01      	subs	r3, #1
90024a32:	9309      	str	r3, [sp, #36]	; 0x24
90024a34:	e76d      	b.n	90024912 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90024a36:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90024a38:	3d01      	subs	r5, #1
90024a3a:	f109 0902 	add.w	r9, r9, #2
90024a3e:	441c      	add	r4, r3
90024a40:	9b20      	ldr	r3, [sp, #128]	; 0x80
90024a42:	441e      	add	r6, r3
90024a44:	e745      	b.n	900248d2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
90024a46:	d021      	beq.n	90024a8c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
90024a48:	1e6b      	subs	r3, r5, #1
90024a4a:	981f      	ldr	r0, [sp, #124]	; 0x7c
90024a4c:	fb00 4003 	mla	r0, r0, r3, r4
90024a50:	1400      	asrs	r0, r0, #16
90024a52:	f53f af5a 	bmi.w	9002490a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
90024a56:	3901      	subs	r1, #1
90024a58:	4288      	cmp	r0, r1
90024a5a:	f6bf af56 	bge.w	9002490a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
90024a5e:	9920      	ldr	r1, [sp, #128]	; 0x80
90024a60:	fb01 6303 	mla	r3, r1, r3, r6
90024a64:	141b      	asrs	r3, r3, #16
90024a66:	f53f af50 	bmi.w	9002490a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
90024a6a:	3a01      	subs	r2, #1
90024a6c:	4293      	cmp	r3, r2
90024a6e:	f6bf af4c 	bge.w	9002490a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
90024a72:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
90024a76:	46a8      	mov	r8, r5
90024a78:	46ce      	mov	lr, r9
90024a7a:	9308      	str	r3, [sp, #32]
90024a7c:	f1b8 0f00 	cmp.w	r8, #0
90024a80:	f300 80b6 	bgt.w	90024bf0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90024a84:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
90024a88:	eb09 0945 	add.w	r9, r9, r5, lsl #1
90024a8c:	9b07      	ldr	r3, [sp, #28]
90024a8e:	2b00      	cmp	r3, #0
90024a90:	f340 817e 	ble.w	90024d90 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
90024a94:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90024a98:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90024a9a:	ee30 0a04 	vadd.f32	s0, s0, s8
90024a9e:	ee70 0aa4 	vadd.f32	s1, s1, s9
90024aa2:	eef0 6a62 	vmov.f32	s13, s5
90024aa6:	eec7 7a00 	vdiv.f32	s15, s14, s0
90024aaa:	ee31 1a05 	vadd.f32	s2, s2, s10
90024aae:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90024ab2:	ee16 4a90 	vmov	r4, s13
90024ab6:	eef0 6a43 	vmov.f32	s13, s6
90024aba:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90024abe:	ee16 6a90 	vmov	r6, s13
90024ac2:	ee20 7aa7 	vmul.f32	s14, s1, s15
90024ac6:	ee61 7a27 	vmul.f32	s15, s2, s15
90024aca:	ee77 2a62 	vsub.f32	s5, s14, s5
90024ace:	ee37 3ac3 	vsub.f32	s6, s15, s6
90024ad2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90024ad6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90024ada:	ee12 2a90 	vmov	r2, s5
90024ade:	eef0 2a47 	vmov.f32	s5, s14
90024ae2:	fb92 f3f3 	sdiv	r3, r2, r3
90024ae6:	ee13 2a10 	vmov	r2, s6
90024aea:	931f      	str	r3, [sp, #124]	; 0x7c
90024aec:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90024aee:	eeb0 3a67 	vmov.f32	s6, s15
90024af2:	fb92 f3f3 	sdiv	r3, r2, r3
90024af6:	9320      	str	r3, [sp, #128]	; 0x80
90024af8:	9b07      	ldr	r3, [sp, #28]
90024afa:	9a0c      	ldr	r2, [sp, #48]	; 0x30
90024afc:	3b01      	subs	r3, #1
90024afe:	9307      	str	r3, [sp, #28]
90024b00:	bf08      	it	eq
90024b02:	4615      	moveq	r5, r2
90024b04:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90024b06:	bf18      	it	ne
90024b08:	461d      	movne	r5, r3
90024b0a:	e6d3      	b.n	900248b4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
90024b0c:	2900      	cmp	r1, #0
90024b0e:	f43f af5b 	beq.w	900249c8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
90024b12:	eb0a 0003 	add.w	r0, sl, r3
90024b16:	0843      	lsrs	r3, r0, #1
90024b18:	07c0      	lsls	r0, r0, #31
90024b1a:	5cfb      	ldrb	r3, [r7, r3]
90024b1c:	bf54      	ite	pl
90024b1e:	f003 030f 	andpl.w	r3, r3, #15
90024b22:	111b      	asrmi	r3, r3, #4
90024b24:	eb03 1303 	add.w	r3, r3, r3, lsl #4
90024b28:	b2db      	uxtb	r3, r3
90024b2a:	930a      	str	r3, [sp, #40]	; 0x28
90024b2c:	e74c      	b.n	900249c8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
90024b2e:	2b00      	cmp	r3, #0
90024b30:	f43f af77 	beq.w	90024a22 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90024b34:	4a73      	ldr	r2, [pc, #460]	; (90024d04 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
90024b36:	fa1f fe83 	uxth.w	lr, r3
90024b3a:	f8b8 c000 	ldrh.w	ip, [r8]
90024b3e:	43db      	mvns	r3, r3
90024b40:	6810      	ldr	r0, [r2, #0]
90024b42:	ea4f 212c 	mov.w	r1, ip, asr #8
90024b46:	f3c0 4207 	ubfx	r2, r0, #16, #8
90024b4a:	b2db      	uxtb	r3, r3
90024b4c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
90024b50:	f3c0 2b07 	ubfx	fp, r0, #8, #8
90024b54:	fb12 f20e 	smulbb	r2, r2, lr
90024b58:	b2c0      	uxtb	r0, r0
90024b5a:	fb1b fb0e 	smulbb	fp, fp, lr
90024b5e:	fb01 2103 	mla	r1, r1, r3, r2
90024b62:	ea4f 02ec 	mov.w	r2, ip, asr #3
90024b66:	fb10 fe0e 	smulbb	lr, r0, lr
90024b6a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
90024b6e:	b289      	uxth	r1, r1
90024b70:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
90024b74:	fa5f fc8c 	uxtb.w	ip, ip
90024b78:	fb02 b203 	mla	r2, r2, r3, fp
90024b7c:	1c48      	adds	r0, r1, #1
90024b7e:	fb0c e303 	mla	r3, ip, r3, lr
90024b82:	b292      	uxth	r2, r2
90024b84:	b29b      	uxth	r3, r3
90024b86:	eb00 2111 	add.w	r1, r0, r1, lsr #8
90024b8a:	f102 0b01 	add.w	fp, r2, #1
90024b8e:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
90024b92:	1c59      	adds	r1, r3, #1
90024b94:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
90024b98:	eb01 2113 	add.w	r1, r1, r3, lsr #8
90024b9c:	0952      	lsrs	r2, r2, #5
90024b9e:	f3c1 21c4 	ubfx	r1, r1, #11, #5
90024ba2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90024ba6:	4301      	orrs	r1, r0
90024ba8:	4311      	orrs	r1, r2
90024baa:	f8a8 1000 	strh.w	r1, [r8]
90024bae:	e738      	b.n	90024a22 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90024bb0:	f113 0b01 	adds.w	fp, r3, #1
90024bb4:	f53f af35 	bmi.w	90024a22 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90024bb8:	45dc      	cmp	ip, fp
90024bba:	f6ff af32 	blt.w	90024a22 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90024bbe:	f110 0b01 	adds.w	fp, r0, #1
90024bc2:	f53f af2e 	bmi.w	90024a22 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90024bc6:	45de      	cmp	lr, fp
90024bc8:	f6ff af2b 	blt.w	90024a22 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90024bcc:	9302      	str	r3, [sp, #8]
90024bce:	fa0f f38e 	sxth.w	r3, lr
90024bd2:	9a08      	ldr	r2, [sp, #32]
90024bd4:	9301      	str	r3, [sp, #4]
90024bd6:	fa0f f38c 	sxth.w	r3, ip
90024bda:	9105      	str	r1, [sp, #20]
90024bdc:	4641      	mov	r1, r8
90024bde:	9300      	str	r3, [sp, #0]
90024be0:	4653      	mov	r3, sl
90024be2:	e9cd 0203 	strd	r0, r2, [sp, #12]
90024be6:	463a      	mov	r2, r7
90024be8:	9811      	ldr	r0, [sp, #68]	; 0x44
90024bea:	f7ff fd73 	bl	900246d4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
90024bee:	e718      	b.n	90024a22 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90024bf0:	1422      	asrs	r2, r4, #16
90024bf2:	9906      	ldr	r1, [sp, #24]
90024bf4:	1433      	asrs	r3, r6, #16
90024bf6:	f3c4 3003 	ubfx	r0, r4, #12, #4
90024bfa:	f3c6 3c03 	ubfx	ip, r6, #12, #4
90024bfe:	fb01 2303 	mla	r3, r1, r3, r2
90024c02:	085a      	lsrs	r2, r3, #1
90024c04:	07d9      	lsls	r1, r3, #31
90024c06:	5cba      	ldrb	r2, [r7, r2]
90024c08:	bf54      	ite	pl
90024c0a:	f002 020f 	andpl.w	r2, r2, #15
90024c0e:	1112      	asrmi	r2, r2, #4
90024c10:	eb02 1202 	add.w	r2, r2, r2, lsl #4
90024c14:	b2d2      	uxtb	r2, r2
90024c16:	2800      	cmp	r0, #0
90024c18:	d063      	beq.n	90024ce2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x462>
90024c1a:	f103 0a01 	add.w	sl, r3, #1
90024c1e:	ea4f 015a 	mov.w	r1, sl, lsr #1
90024c22:	f01a 0f01 	tst.w	sl, #1
90024c26:	5c79      	ldrb	r1, [r7, r1]
90024c28:	bf0c      	ite	eq
90024c2a:	f001 010f 	andeq.w	r1, r1, #15
90024c2e:	1109      	asrne	r1, r1, #4
90024c30:	eb01 1101 	add.w	r1, r1, r1, lsl #4
90024c34:	b2c9      	uxtb	r1, r1
90024c36:	910f      	str	r1, [sp, #60]	; 0x3c
90024c38:	f1bc 0f00 	cmp.w	ip, #0
90024c3c:	d01a      	beq.n	90024c74 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
90024c3e:	9908      	ldr	r1, [sp, #32]
90024c40:	440b      	add	r3, r1
90024c42:	0859      	lsrs	r1, r3, #1
90024c44:	f013 0f01 	tst.w	r3, #1
90024c48:	f103 0301 	add.w	r3, r3, #1
90024c4c:	5c79      	ldrb	r1, [r7, r1]
90024c4e:	bf0c      	ite	eq
90024c50:	f001 010f 	andeq.w	r1, r1, #15
90024c54:	1109      	asrne	r1, r1, #4
90024c56:	eb01 1101 	add.w	r1, r1, r1, lsl #4
90024c5a:	b2c9      	uxtb	r1, r1
90024c5c:	910b      	str	r1, [sp, #44]	; 0x2c
90024c5e:	0859      	lsrs	r1, r3, #1
90024c60:	07db      	lsls	r3, r3, #31
90024c62:	5c79      	ldrb	r1, [r7, r1]
90024c64:	bf54      	ite	pl
90024c66:	f001 010f 	andpl.w	r1, r1, #15
90024c6a:	1109      	asrmi	r1, r1, #4
90024c6c:	eb01 1101 	add.w	r1, r1, r1, lsl #4
90024c70:	b2c9      	uxtb	r1, r1
90024c72:	9110      	str	r1, [sp, #64]	; 0x40
90024c74:	b280      	uxth	r0, r0
90024c76:	fa1f fc8c 	uxth.w	ip, ip
90024c7a:	fb00 f30c 	mul.w	r3, r0, ip
90024c7e:	0100      	lsls	r0, r0, #4
90024c80:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
90024c84:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
90024c88:	1ac0      	subs	r0, r0, r3
90024c8a:	fa1f fc8c 	uxth.w	ip, ip
90024c8e:	b280      	uxth	r0, r0
90024c90:	eba1 010c 	sub.w	r1, r1, ip
90024c94:	fa1f fa81 	uxth.w	sl, r1
90024c98:	990f      	ldr	r1, [sp, #60]	; 0x3c
90024c9a:	4348      	muls	r0, r1
90024c9c:	990b      	ldr	r1, [sp, #44]	; 0x2c
90024c9e:	fb02 020a 	mla	r2, r2, sl, r0
90024ca2:	fb0c 2c01 	mla	ip, ip, r1, r2
90024ca6:	9a10      	ldr	r2, [sp, #64]	; 0x40
90024ca8:	fb03 c302 	mla	r3, r3, r2, ip
90024cac:	f3c3 2307 	ubfx	r3, r3, #8, #8
90024cb0:	2bff      	cmp	r3, #255	; 0xff
90024cb2:	d12b      	bne.n	90024d0c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
90024cb4:	4b13      	ldr	r3, [pc, #76]	; (90024d04 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
90024cb6:	681a      	ldr	r2, [r3, #0]
90024cb8:	4b13      	ldr	r3, [pc, #76]	; (90024d08 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
90024cba:	0951      	lsrs	r1, r2, #5
90024cbc:	ea03 2312 	and.w	r3, r3, r2, lsr #8
90024cc0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90024cc4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90024cc8:	430b      	orrs	r3, r1
90024cca:	4313      	orrs	r3, r2
90024ccc:	f8ae 3000 	strh.w	r3, [lr]
90024cd0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90024cd2:	f10e 0e02 	add.w	lr, lr, #2
90024cd6:	f108 38ff 	add.w	r8, r8, #4294967295
90024cda:	441c      	add	r4, r3
90024cdc:	9b20      	ldr	r3, [sp, #128]	; 0x80
90024cde:	441e      	add	r6, r3
90024ce0:	e6cc      	b.n	90024a7c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
90024ce2:	f1bc 0f00 	cmp.w	ip, #0
90024ce6:	d0c5      	beq.n	90024c74 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
90024ce8:	9908      	ldr	r1, [sp, #32]
90024cea:	440b      	add	r3, r1
90024cec:	0859      	lsrs	r1, r3, #1
90024cee:	07db      	lsls	r3, r3, #31
90024cf0:	5c79      	ldrb	r1, [r7, r1]
90024cf2:	bf54      	ite	pl
90024cf4:	f001 010f 	andpl.w	r1, r1, #15
90024cf8:	1109      	asrmi	r1, r1, #4
90024cfa:	eb01 1101 	add.w	r1, r1, r1, lsl #4
90024cfe:	b2c9      	uxtb	r1, r1
90024d00:	910b      	str	r1, [sp, #44]	; 0x2c
90024d02:	e7b7      	b.n	90024c74 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
90024d04:	2402358c 	.word	0x2402358c
90024d08:	fffff800 	.word	0xfffff800
90024d0c:	2b00      	cmp	r3, #0
90024d0e:	d0df      	beq.n	90024cd0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
90024d10:	4a21      	ldr	r2, [pc, #132]	; (90024d98 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
90024d12:	fa1f fa83 	uxth.w	sl, r3
90024d16:	f8be c000 	ldrh.w	ip, [lr]
90024d1a:	43db      	mvns	r3, r3
90024d1c:	6810      	ldr	r0, [r2, #0]
90024d1e:	ea4f 212c 	mov.w	r1, ip, asr #8
90024d22:	f3c0 4207 	ubfx	r2, r0, #16, #8
90024d26:	b2db      	uxtb	r3, r3
90024d28:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
90024d2c:	f3c0 2b07 	ubfx	fp, r0, #8, #8
90024d30:	fb12 f20a 	smulbb	r2, r2, sl
90024d34:	b2c0      	uxtb	r0, r0
90024d36:	fb1b fb0a 	smulbb	fp, fp, sl
90024d3a:	fb01 2103 	mla	r1, r1, r3, r2
90024d3e:	ea4f 02ec 	mov.w	r2, ip, asr #3
90024d42:	fb10 f00a 	smulbb	r0, r0, sl
90024d46:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
90024d4a:	b289      	uxth	r1, r1
90024d4c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
90024d50:	fa5f fc8c 	uxtb.w	ip, ip
90024d54:	fb02 b203 	mla	r2, r2, r3, fp
90024d58:	fb0c 0003 	mla	r0, ip, r3, r0
90024d5c:	1c4b      	adds	r3, r1, #1
90024d5e:	b292      	uxth	r2, r2
90024d60:	b280      	uxth	r0, r0
90024d62:	eb03 2111 	add.w	r1, r3, r1, lsr #8
90024d66:	f100 0b01 	add.w	fp, r0, #1
90024d6a:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
90024d6e:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
90024d72:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
90024d76:	ea4b 0101 	orr.w	r1, fp, r1
90024d7a:	f102 0b01 	add.w	fp, r2, #1
90024d7e:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
90024d82:	0952      	lsrs	r2, r2, #5
90024d84:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90024d88:	4311      	orrs	r1, r2
90024d8a:	f8ae 1000 	strh.w	r1, [lr]
90024d8e:	e79f      	b.n	90024cd0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
90024d90:	b013      	add	sp, #76	; 0x4c
90024d92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90024d96:	bf00      	nop
90024d98:	2402358c 	.word	0x2402358c

90024d9c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
90024d9c:	b570      	push	{r4, r5, r6, lr}
90024d9e:	1208      	asrs	r0, r1, #8
90024da0:	f8bd 5010 	ldrh.w	r5, [sp, #16]
90024da4:	b29e      	uxth	r6, r3
90024da6:	1213      	asrs	r3, r2, #8
90024da8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
90024dac:	10cc      	asrs	r4, r1, #3
90024dae:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
90024db2:	00c9      	lsls	r1, r1, #3
90024db4:	fb10 f006 	smulbb	r0, r0, r6
90024db8:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
90024dbc:	fb13 f305 	smulbb	r3, r3, r5
90024dc0:	fb14 f406 	smulbb	r4, r4, r6
90024dc4:	4418      	add	r0, r3
90024dc6:	10d3      	asrs	r3, r2, #3
90024dc8:	00d2      	lsls	r2, r2, #3
90024dca:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
90024dce:	b280      	uxth	r0, r0
90024dd0:	b2d2      	uxtb	r2, r2
90024dd2:	fb13 f305 	smulbb	r3, r3, r5
90024dd6:	fb12 f205 	smulbb	r2, r2, r5
90024dda:	441c      	add	r4, r3
90024ddc:	b2cb      	uxtb	r3, r1
90024dde:	fb13 f306 	smulbb	r3, r3, r6
90024de2:	b2a4      	uxth	r4, r4
90024de4:	4413      	add	r3, r2
90024de6:	1c42      	adds	r2, r0, #1
90024de8:	b29b      	uxth	r3, r3
90024dea:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90024dee:	f400 4278 	and.w	r2, r0, #63488	; 0xf800
90024df2:	1c58      	adds	r0, r3, #1
90024df4:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90024df8:	f3c0 20c4 	ubfx	r0, r0, #11, #5
90024dfc:	4310      	orrs	r0, r2
90024dfe:	1c62      	adds	r2, r4, #1
90024e00:	eb02 2414 	add.w	r4, r2, r4, lsr #8
90024e04:	0964      	lsrs	r4, r4, #5
90024e06:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
90024e0a:	4320      	orrs	r0, r4
90024e0c:	bd70      	pop	{r4, r5, r6, pc}
	...

90024e10 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
90024e10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90024e14:	b08f      	sub	sp, #60	; 0x3c
90024e16:	461c      	mov	r4, r3
90024e18:	460d      	mov	r5, r1
90024e1a:	4616      	mov	r6, r2
90024e1c:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
90024e20:	9004      	str	r0, [sp, #16]
90024e22:	9b18      	ldr	r3, [sp, #96]	; 0x60
90024e24:	2f00      	cmp	r7, #0
90024e26:	f000 80f6 	beq.w	90025016 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
90024e2a:	6820      	ldr	r0, [r4, #0]
90024e2c:	aa0a      	add	r2, sp, #40	; 0x28
90024e2e:	6861      	ldr	r1, [r4, #4]
90024e30:	f04f 0802 	mov.w	r8, #2
90024e34:	3604      	adds	r6, #4
90024e36:	c203      	stmia	r2!, {r0, r1}
90024e38:	6818      	ldr	r0, [r3, #0]
90024e3a:	aa0c      	add	r2, sp, #48	; 0x30
90024e3c:	6859      	ldr	r1, [r3, #4]
90024e3e:	c203      	stmia	r2!, {r0, r1}
90024e40:	a80a      	add	r0, sp, #40	; 0x28
90024e42:	f7ef fd53 	bl	900148ec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90024e46:	4621      	mov	r1, r4
90024e48:	a80c      	add	r0, sp, #48	; 0x30
90024e4a:	f7ef fd93 	bl	90014974 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90024e4e:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
90024e52:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
90024e56:	f002 0301 	and.w	r3, r2, #1
90024e5a:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
90024e5e:	9306      	str	r3, [sp, #24]
90024e60:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
90024e64:	f003 0101 	and.w	r1, r3, #1
90024e68:	9105      	str	r1, [sp, #20]
90024e6a:	9805      	ldr	r0, [sp, #20]
90024e6c:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
90024e70:	4403      	add	r3, r0
90024e72:	fb01 2303 	mla	r3, r1, r3, r2
90024e76:	fb93 f3f8 	sdiv	r3, r3, r8
90024e7a:	441d      	add	r5, r3
90024e7c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
90024e80:	441a      	add	r2, r3
90024e82:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
90024e86:	4419      	add	r1, r3
90024e88:	4b64      	ldr	r3, [pc, #400]	; (9002501c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
90024e8a:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
90024e8e:	6818      	ldr	r0, [r3, #0]
90024e90:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
90024e94:	6803      	ldr	r3, [r0, #0]
90024e96:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90024e98:	4798      	blx	r3
90024e9a:	4a61      	ldr	r2, [pc, #388]	; (90025020 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
90024e9c:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
90024ea0:	2fff      	cmp	r7, #255	; 0xff
90024ea2:	8813      	ldrh	r3, [r2, #0]
90024ea4:	4611      	mov	r1, r2
90024ea6:	f9bd a030 	ldrsh.w	sl, [sp, #48]	; 0x30
90024eaa:	fb03 fb0b 	mul.w	fp, r3, fp
90024eae:	fb03 a404 	mla	r4, r3, r4, sl
90024eb2:	eb00 0444 	add.w	r4, r0, r4, lsl #1
90024eb6:	d06b      	beq.n	90024f90 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x180>
90024eb8:	f1c7 03ff 	rsb	r3, r7, #255	; 0xff
90024ebc:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
90024ec0:	9303      	str	r3, [sp, #12]
90024ec2:	eb04 034b 	add.w	r3, r4, fp, lsl #1
90024ec6:	e9cd 3207 	strd	r3, r2, [sp, #28]
90024eca:	9b07      	ldr	r3, [sp, #28]
90024ecc:	42a3      	cmp	r3, r4
90024ece:	f240 809d 	bls.w	9002500c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
90024ed2:	9b06      	ldr	r3, [sp, #24]
90024ed4:	2b00      	cmp	r3, #0
90024ed6:	d039      	beq.n	90024f4c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13c>
90024ed8:	782b      	ldrb	r3, [r5, #0]
90024eda:	f105 0801 	add.w	r8, r5, #1
90024ede:	f109 3bff 	add.w	fp, r9, #4294967295
90024ee2:	8822      	ldrh	r2, [r4, #0]
90024ee4:	f003 030f 	and.w	r3, r3, #15
90024ee8:	9804      	ldr	r0, [sp, #16]
90024eea:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
90024eee:	9b03      	ldr	r3, [sp, #12]
90024ef0:	9300      	str	r3, [sp, #0]
90024ef2:	463b      	mov	r3, r7
90024ef4:	f7ff ff52 	bl	90024d9c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
90024ef8:	f824 0b02 	strh.w	r0, [r4], #2
90024efc:	f1bb 0f01 	cmp.w	fp, #1
90024f00:	46a2      	mov	sl, r4
90024f02:	f104 0404 	add.w	r4, r4, #4
90024f06:	dd24      	ble.n	90024f52 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x142>
90024f08:	f898 3000 	ldrb.w	r3, [r8]
90024f0c:	f1ab 0b02 	sub.w	fp, fp, #2
90024f10:	f834 2c04 	ldrh.w	r2, [r4, #-4]
90024f14:	091b      	lsrs	r3, r3, #4
90024f16:	9804      	ldr	r0, [sp, #16]
90024f18:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
90024f1c:	9b03      	ldr	r3, [sp, #12]
90024f1e:	9300      	str	r3, [sp, #0]
90024f20:	463b      	mov	r3, r7
90024f22:	f7ff ff3b 	bl	90024d9c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
90024f26:	f824 0c04 	strh.w	r0, [r4, #-4]
90024f2a:	f818 3b01 	ldrb.w	r3, [r8], #1
90024f2e:	f834 2c02 	ldrh.w	r2, [r4, #-2]
90024f32:	f003 030f 	and.w	r3, r3, #15
90024f36:	9804      	ldr	r0, [sp, #16]
90024f38:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
90024f3c:	9b03      	ldr	r3, [sp, #12]
90024f3e:	9300      	str	r3, [sp, #0]
90024f40:	463b      	mov	r3, r7
90024f42:	f7ff ff2b 	bl	90024d9c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
90024f46:	f824 0c02 	strh.w	r0, [r4, #-2]
90024f4a:	e7d7      	b.n	90024efc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
90024f4c:	46a8      	mov	r8, r5
90024f4e:	46cb      	mov	fp, r9
90024f50:	e7d4      	b.n	90024efc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
90024f52:	d10e      	bne.n	90024f72 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x162>
90024f54:	f898 3000 	ldrb.w	r3, [r8]
90024f58:	f8ba 2000 	ldrh.w	r2, [sl]
90024f5c:	091b      	lsrs	r3, r3, #4
90024f5e:	9804      	ldr	r0, [sp, #16]
90024f60:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
90024f64:	9b03      	ldr	r3, [sp, #12]
90024f66:	9300      	str	r3, [sp, #0]
90024f68:	463b      	mov	r3, r7
90024f6a:	f7ff ff17 	bl	90024d9c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
90024f6e:	f82a 0b02 	strh.w	r0, [sl], #2
90024f72:	9b08      	ldr	r3, [sp, #32]
90024f74:	9a05      	ldr	r2, [sp, #20]
90024f76:	881c      	ldrh	r4, [r3, #0]
90024f78:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
90024f7c:	eba4 0409 	sub.w	r4, r4, r9
90024f80:	4413      	add	r3, r2
90024f82:	9a09      	ldr	r2, [sp, #36]	; 0x24
90024f84:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
90024f88:	fb93 f3f2 	sdiv	r3, r3, r2
90024f8c:	441d      	add	r5, r3
90024f8e:	e79c      	b.n	90024eca <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xba>
90024f90:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
90024f94:	45a3      	cmp	fp, r4
90024f96:	d939      	bls.n	9002500c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
90024f98:	9b06      	ldr	r3, [sp, #24]
90024f9a:	b1fb      	cbz	r3, 90024fdc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
90024f9c:	782b      	ldrb	r3, [r5, #0]
90024f9e:	1c6a      	adds	r2, r5, #1
90024fa0:	f109 30ff 	add.w	r0, r9, #4294967295
90024fa4:	3402      	adds	r4, #2
90024fa6:	f003 030f 	and.w	r3, r3, #15
90024faa:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90024fae:	f824 3c02 	strh.w	r3, [r4, #-2]
90024fb2:	2801      	cmp	r0, #1
90024fb4:	4623      	mov	r3, r4
90024fb6:	f104 0404 	add.w	r4, r4, #4
90024fba:	dd12      	ble.n	90024fe2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
90024fbc:	7813      	ldrb	r3, [r2, #0]
90024fbe:	3802      	subs	r0, #2
90024fc0:	091b      	lsrs	r3, r3, #4
90024fc2:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90024fc6:	f824 3c04 	strh.w	r3, [r4, #-4]
90024fca:	f812 3b01 	ldrb.w	r3, [r2], #1
90024fce:	f003 030f 	and.w	r3, r3, #15
90024fd2:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90024fd6:	f824 3c02 	strh.w	r3, [r4, #-2]
90024fda:	e7ea      	b.n	90024fb2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
90024fdc:	462a      	mov	r2, r5
90024fde:	4648      	mov	r0, r9
90024fe0:	e7e7      	b.n	90024fb2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
90024fe2:	d106      	bne.n	90024ff2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
90024fe4:	7812      	ldrb	r2, [r2, #0]
90024fe6:	3302      	adds	r3, #2
90024fe8:	0912      	lsrs	r2, r2, #4
90024fea:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
90024fee:	f823 2c02 	strh.w	r2, [r3, #-2]
90024ff2:	880c      	ldrh	r4, [r1, #0]
90024ff4:	9a05      	ldr	r2, [sp, #20]
90024ff6:	eba4 0409 	sub.w	r4, r4, r9
90024ffa:	eb03 0444 	add.w	r4, r3, r4, lsl #1
90024ffe:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
90025002:	4413      	add	r3, r2
90025004:	fb93 f3f8 	sdiv	r3, r3, r8
90025008:	441d      	add	r5, r3
9002500a:	e7c3      	b.n	90024f94 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x184>
9002500c:	4b03      	ldr	r3, [pc, #12]	; (9002501c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
9002500e:	6818      	ldr	r0, [r3, #0]
90025010:	6803      	ldr	r3, [r0, #0]
90025012:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90025014:	4798      	blx	r3
90025016:	b00f      	add	sp, #60	; 0x3c
90025018:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002501c:	2402357c 	.word	0x2402357c
90025020:	24023576 	.word	0x24023576

90025024 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
90025024:	b5f0      	push	{r4, r5, r6, r7, lr}
90025026:	f89d 5014 	ldrb.w	r5, [sp, #20]
9002502a:	0a0f      	lsrs	r7, r1, #8
9002502c:	2dff      	cmp	r5, #255	; 0xff
9002502e:	d10c      	bne.n	9002504a <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
90025030:	2bff      	cmp	r3, #255	; 0xff
90025032:	d10a      	bne.n	9002504a <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
90025034:	0948      	lsrs	r0, r1, #5
90025036:	4b25      	ldr	r3, [pc, #148]	; (900250cc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
90025038:	f3c1 01c4 	ubfx	r1, r1, #3, #5
9002503c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90025040:	403b      	ands	r3, r7
90025042:	4318      	orrs	r0, r3
90025044:	4308      	orrs	r0, r1
90025046:	b280      	uxth	r0, r0
90025048:	bdf0      	pop	{r4, r5, r6, r7, pc}
9002504a:	fb15 f503 	smulbb	r5, r5, r3
9002504e:	1214      	asrs	r4, r2, #8
90025050:	10d6      	asrs	r6, r2, #3
90025052:	b2ab      	uxth	r3, r5
90025054:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
90025058:	00d0      	lsls	r0, r2, #3
9002505a:	f3c1 4207 	ubfx	r2, r1, #16, #8
9002505e:	1c5d      	adds	r5, r3, #1
90025060:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
90025064:	b2c0      	uxtb	r0, r0
90025066:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9002506a:	eb05 2513 	add.w	r5, r5, r3, lsr #8
9002506e:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
90025072:	f3c5 2507 	ubfx	r5, r5, #8, #8
90025076:	fa1f fc85 	uxth.w	ip, r5
9002507a:	43ed      	mvns	r5, r5
9002507c:	fb12 f20c 	smulbb	r2, r2, ip
90025080:	b2eb      	uxtb	r3, r5
90025082:	b2fd      	uxtb	r5, r7
90025084:	fb04 2403 	mla	r4, r4, r3, r2
90025088:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
9002508c:	fb15 f50c 	smulbb	r5, r5, ip
90025090:	b2c8      	uxtb	r0, r1
90025092:	b2a4      	uxth	r4, r4
90025094:	fb10 f00c 	smulbb	r0, r0, ip
90025098:	fb06 5503 	mla	r5, r6, r3, r5
9002509c:	fb02 0003 	mla	r0, r2, r3, r0
900250a0:	b2ad      	uxth	r5, r5
900250a2:	b283      	uxth	r3, r0
900250a4:	1c60      	adds	r0, r4, #1
900250a6:	eb00 2414 	add.w	r4, r0, r4, lsr #8
900250aa:	1c58      	adds	r0, r3, #1
900250ac:	eb00 2013 	add.w	r0, r0, r3, lsr #8
900250b0:	1c6b      	adds	r3, r5, #1
900250b2:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
900250b6:	eb03 2515 	add.w	r5, r3, r5, lsr #8
900250ba:	f3c0 20c4 	ubfx	r0, r0, #11, #5
900250be:	096d      	lsrs	r5, r5, #5
900250c0:	4320      	orrs	r0, r4
900250c2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
900250c6:	4328      	orrs	r0, r5
900250c8:	e7be      	b.n	90025048 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x24>
900250ca:	bf00      	nop
900250cc:	00fff800 	.word	0x00fff800

900250d0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
900250d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900250d4:	461c      	mov	r4, r3
900250d6:	b08d      	sub	sp, #52	; 0x34
900250d8:	460d      	mov	r5, r1
900250da:	4616      	mov	r6, r2
900250dc:	9b16      	ldr	r3, [sp, #88]	; 0x58
900250de:	4680      	mov	r8, r0
900250e0:	6861      	ldr	r1, [r4, #4]
900250e2:	aa08      	add	r2, sp, #32
900250e4:	6820      	ldr	r0, [r4, #0]
900250e6:	f04f 0a02 	mov.w	sl, #2
900250ea:	f89d 905c 	ldrb.w	r9, [sp, #92]	; 0x5c
900250ee:	3604      	adds	r6, #4
900250f0:	c203      	stmia	r2!, {r0, r1}
900250f2:	6818      	ldr	r0, [r3, #0]
900250f4:	aa0a      	add	r2, sp, #40	; 0x28
900250f6:	6859      	ldr	r1, [r3, #4]
900250f8:	c203      	stmia	r2!, {r0, r1}
900250fa:	a808      	add	r0, sp, #32
900250fc:	f7ef fbf6 	bl	900148ec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90025100:	4621      	mov	r1, r4
90025102:	a80a      	add	r0, sp, #40	; 0x28
90025104:	f7ef fc36 	bl	90014974 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90025108:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
9002510c:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	; 0x2e
90025110:	f002 0301 	and.w	r3, r2, #1
90025114:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
90025118:	9303      	str	r3, [sp, #12]
9002511a:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
9002511e:	f003 0101 	and.w	r1, r3, #1
90025122:	9102      	str	r1, [sp, #8]
90025124:	9802      	ldr	r0, [sp, #8]
90025126:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
9002512a:	4403      	add	r3, r0
9002512c:	fb01 2303 	mla	r3, r1, r3, r2
90025130:	fb93 f3fa 	sdiv	r3, r3, sl
90025134:	441d      	add	r5, r3
90025136:	f8bd 3020 	ldrh.w	r3, [sp, #32]
9002513a:	441a      	add	r2, r3
9002513c:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
90025140:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
90025144:	4419      	add	r1, r3
90025146:	4a3e      	ldr	r2, [pc, #248]	; (90025240 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
90025148:	f8ad 102a 	strh.w	r1, [sp, #42]	; 0x2a
9002514c:	6810      	ldr	r0, [r2, #0]
9002514e:	9205      	str	r2, [sp, #20]
90025150:	6803      	ldr	r3, [r0, #0]
90025152:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90025154:	4798      	blx	r3
90025156:	4b3b      	ldr	r3, [pc, #236]	; (90025244 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
90025158:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	; 0x2a
9002515c:	8819      	ldrh	r1, [r3, #0]
9002515e:	f9bd c028 	ldrsh.w	ip, [sp, #40]	; 0x28
90025162:	434f      	muls	r7, r1
90025164:	fb01 c404 	mla	r4, r1, r4, ip
90025168:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9002516c:	eb04 0247 	add.w	r2, r4, r7, lsl #1
90025170:	e9cd 3a06 	strd	r3, sl, [sp, #24]
90025174:	9204      	str	r2, [sp, #16]
90025176:	9b04      	ldr	r3, [sp, #16]
90025178:	429c      	cmp	r4, r3
9002517a:	d258      	bcs.n	9002522e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
9002517c:	9b03      	ldr	r3, [sp, #12]
9002517e:	2b00      	cmp	r3, #0
90025180:	d034      	beq.n	900251ec <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
90025182:	782b      	ldrb	r3, [r5, #0]
90025184:	1c6f      	adds	r7, r5, #1
90025186:	f003 030f 	and.w	r3, r3, #15
9002518a:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
9002518e:	0e0b      	lsrs	r3, r1, #24
90025190:	d006      	beq.n	900251a0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
90025192:	8822      	ldrh	r2, [r4, #0]
90025194:	4640      	mov	r0, r8
90025196:	9300      	str	r3, [sp, #0]
90025198:	464b      	mov	r3, r9
9002519a:	f7ff ff43 	bl	90025024 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
9002519e:	8020      	strh	r0, [r4, #0]
900251a0:	3402      	adds	r4, #2
900251a2:	f10b 3aff 	add.w	sl, fp, #4294967295
900251a6:	f1ba 0f01 	cmp.w	sl, #1
900251aa:	dd22      	ble.n	900251f2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
900251ac:	783b      	ldrb	r3, [r7, #0]
900251ae:	091b      	lsrs	r3, r3, #4
900251b0:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
900251b4:	0e0b      	lsrs	r3, r1, #24
900251b6:	d006      	beq.n	900251c6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
900251b8:	8822      	ldrh	r2, [r4, #0]
900251ba:	4640      	mov	r0, r8
900251bc:	9300      	str	r3, [sp, #0]
900251be:	464b      	mov	r3, r9
900251c0:	f7ff ff30 	bl	90025024 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
900251c4:	8020      	strh	r0, [r4, #0]
900251c6:	f817 3b01 	ldrb.w	r3, [r7], #1
900251ca:	f003 030f 	and.w	r3, r3, #15
900251ce:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
900251d2:	0e0b      	lsrs	r3, r1, #24
900251d4:	d006      	beq.n	900251e4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
900251d6:	8862      	ldrh	r2, [r4, #2]
900251d8:	4640      	mov	r0, r8
900251da:	9300      	str	r3, [sp, #0]
900251dc:	464b      	mov	r3, r9
900251de:	f7ff ff21 	bl	90025024 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
900251e2:	8060      	strh	r0, [r4, #2]
900251e4:	3404      	adds	r4, #4
900251e6:	f1aa 0a02 	sub.w	sl, sl, #2
900251ea:	e7dc      	b.n	900251a6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
900251ec:	462f      	mov	r7, r5
900251ee:	46da      	mov	sl, fp
900251f0:	e7d9      	b.n	900251a6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
900251f2:	d10d      	bne.n	90025210 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
900251f4:	783b      	ldrb	r3, [r7, #0]
900251f6:	091b      	lsrs	r3, r3, #4
900251f8:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
900251fc:	0e0b      	lsrs	r3, r1, #24
900251fe:	d006      	beq.n	9002520e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
90025200:	8822      	ldrh	r2, [r4, #0]
90025202:	4640      	mov	r0, r8
90025204:	9300      	str	r3, [sp, #0]
90025206:	464b      	mov	r3, r9
90025208:	f7ff ff0c 	bl	90025024 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
9002520c:	8020      	strh	r0, [r4, #0]
9002520e:	3402      	adds	r4, #2
90025210:	9b06      	ldr	r3, [sp, #24]
90025212:	9a02      	ldr	r2, [sp, #8]
90025214:	881b      	ldrh	r3, [r3, #0]
90025216:	eba3 030b 	sub.w	r3, r3, fp
9002521a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9002521e:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
90025222:	4413      	add	r3, r2
90025224:	9a07      	ldr	r2, [sp, #28]
90025226:	fb93 f3f2 	sdiv	r3, r3, r2
9002522a:	441d      	add	r5, r3
9002522c:	e7a3      	b.n	90025176 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
9002522e:	9b05      	ldr	r3, [sp, #20]
90025230:	6818      	ldr	r0, [r3, #0]
90025232:	6803      	ldr	r3, [r0, #0]
90025234:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90025236:	4798      	blx	r3
90025238:	b00d      	add	sp, #52	; 0x34
9002523a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002523e:	bf00      	nop
90025240:	2402357c 	.word	0x2402357c
90025244:	24023576 	.word	0x24023576

90025248 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
90025248:	b570      	push	{r4, r5, r6, lr}
9002524a:	1214      	asrs	r4, r2, #8
9002524c:	788d      	ldrb	r5, [r1, #2]
9002524e:	f89d 6010 	ldrb.w	r6, [sp, #16]
90025252:	10d0      	asrs	r0, r2, #3
90025254:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
90025258:	00d2      	lsls	r2, r2, #3
9002525a:	fb15 f503 	smulbb	r5, r5, r3
9002525e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
90025262:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
90025266:	b2d2      	uxtb	r2, r2
90025268:	fb04 5506 	mla	r5, r4, r6, r5
9002526c:	784c      	ldrb	r4, [r1, #1]
9002526e:	7809      	ldrb	r1, [r1, #0]
90025270:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
90025274:	fb14 f403 	smulbb	r4, r4, r3
90025278:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9002527c:	fb11 f303 	smulbb	r3, r1, r3
90025280:	b2ad      	uxth	r5, r5
90025282:	fb00 4406 	mla	r4, r0, r6, r4
90025286:	fb02 3306 	mla	r3, r2, r6, r3
9002528a:	1c68      	adds	r0, r5, #1
9002528c:	b2a4      	uxth	r4, r4
9002528e:	b29b      	uxth	r3, r3
90025290:	eb00 2515 	add.w	r5, r0, r5, lsr #8
90025294:	1c62      	adds	r2, r4, #1
90025296:	1c58      	adds	r0, r3, #1
90025298:	eb02 2414 	add.w	r4, r2, r4, lsr #8
9002529c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
900252a0:	eb00 2013 	add.w	r0, r0, r3, lsr #8
900252a4:	0964      	lsrs	r4, r4, #5
900252a6:	f3c0 20c4 	ubfx	r0, r0, #11, #5
900252aa:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
900252ae:	4328      	orrs	r0, r5
900252b0:	4320      	orrs	r0, r4
900252b2:	bd70      	pop	{r4, r5, r6, pc}

900252b4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
900252b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900252b8:	b08f      	sub	sp, #60	; 0x3c
900252ba:	461c      	mov	r4, r3
900252bc:	4682      	mov	sl, r0
900252be:	460e      	mov	r6, r1
900252c0:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
900252c4:	4615      	mov	r5, r2
900252c6:	9b18      	ldr	r3, [sp, #96]	; 0x60
900252c8:	2f00      	cmp	r7, #0
900252ca:	f000 8141 	beq.w	90025550 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29c>
900252ce:	6820      	ldr	r0, [r4, #0]
900252d0:	aa0a      	add	r2, sp, #40	; 0x28
900252d2:	6861      	ldr	r1, [r4, #4]
900252d4:	f04f 0802 	mov.w	r8, #2
900252d8:	3504      	adds	r5, #4
900252da:	c203      	stmia	r2!, {r0, r1}
900252dc:	6818      	ldr	r0, [r3, #0]
900252de:	aa0c      	add	r2, sp, #48	; 0x30
900252e0:	6859      	ldr	r1, [r3, #4]
900252e2:	c203      	stmia	r2!, {r0, r1}
900252e4:	a80a      	add	r0, sp, #40	; 0x28
900252e6:	f7ef fb01 	bl	900148ec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
900252ea:	4621      	mov	r1, r4
900252ec:	a80c      	add	r0, sp, #48	; 0x30
900252ee:	f7ef fb41 	bl	90014974 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
900252f2:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
900252f6:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
900252fa:	f002 0301 	and.w	r3, r2, #1
900252fe:	9306      	str	r3, [sp, #24]
90025300:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
90025304:	f003 0101 	and.w	r1, r3, #1
90025308:	9105      	str	r1, [sp, #20]
9002530a:	9805      	ldr	r0, [sp, #20]
9002530c:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
90025310:	4403      	add	r3, r0
90025312:	fb01 2303 	mla	r3, r1, r3, r2
90025316:	fb93 f3f8 	sdiv	r3, r3, r8
9002531a:	441e      	add	r6, r3
9002531c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
90025320:	441a      	add	r2, r3
90025322:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
90025326:	4419      	add	r1, r3
90025328:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
9002532c:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
90025330:	9303      	str	r3, [sp, #12]
90025332:	4b89      	ldr	r3, [pc, #548]	; (90025558 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
90025334:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
90025338:	6818      	ldr	r0, [r3, #0]
9002533a:	6803      	ldr	r3, [r0, #0]
9002533c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9002533e:	4798      	blx	r3
90025340:	4a86      	ldr	r2, [pc, #536]	; (9002555c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
90025342:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
90025346:	2fff      	cmp	r7, #255	; 0xff
90025348:	8813      	ldrh	r3, [r2, #0]
9002534a:	4694      	mov	ip, r2
9002534c:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	; 0x30
90025350:	fb03 9404 	mla	r4, r3, r4, r9
90025354:	fb03 f30b 	mul.w	r3, r3, fp
90025358:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9002535c:	d071      	beq.n	90025442 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18e>
9002535e:	43f9      	mvns	r1, r7
90025360:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90025364:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
90025368:	b2c9      	uxtb	r1, r1
9002536a:	e9cd 3207 	strd	r3, r2, [sp, #28]
9002536e:	9104      	str	r1, [sp, #16]
90025370:	9b07      	ldr	r3, [sp, #28]
90025372:	42a3      	cmp	r3, r4
90025374:	f240 80e7 	bls.w	90025546 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
90025378:	9b06      	ldr	r3, [sp, #24]
9002537a:	2b00      	cmp	r3, #0
9002537c:	d03d      	beq.n	900253fa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x146>
9002537e:	7831      	ldrb	r1, [r6, #0]
90025380:	4650      	mov	r0, sl
90025382:	9b04      	ldr	r3, [sp, #16]
90025384:	f106 0801 	add.w	r8, r6, #1
90025388:	f001 010f 	and.w	r1, r1, #15
9002538c:	8822      	ldrh	r2, [r4, #0]
9002538e:	9300      	str	r3, [sp, #0]
90025390:	463b      	mov	r3, r7
90025392:	eb01 0141 	add.w	r1, r1, r1, lsl #1
90025396:	4429      	add	r1, r5
90025398:	f7ff ff56 	bl	90025248 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
9002539c:	9b03      	ldr	r3, [sp, #12]
9002539e:	f824 0b02 	strh.w	r0, [r4], #2
900253a2:	f103 3bff 	add.w	fp, r3, #4294967295
900253a6:	f1bb 0f01 	cmp.w	fp, #1
900253aa:	46a1      	mov	r9, r4
900253ac:	f104 0404 	add.w	r4, r4, #4
900253b0:	dd27      	ble.n	90025402 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14e>
900253b2:	f898 1000 	ldrb.w	r1, [r8]
900253b6:	4650      	mov	r0, sl
900253b8:	9b04      	ldr	r3, [sp, #16]
900253ba:	f1ab 0b02 	sub.w	fp, fp, #2
900253be:	0909      	lsrs	r1, r1, #4
900253c0:	f834 2c04 	ldrh.w	r2, [r4, #-4]
900253c4:	9300      	str	r3, [sp, #0]
900253c6:	463b      	mov	r3, r7
900253c8:	eb01 0141 	add.w	r1, r1, r1, lsl #1
900253cc:	4429      	add	r1, r5
900253ce:	f7ff ff3b 	bl	90025248 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
900253d2:	f824 0c04 	strh.w	r0, [r4, #-4]
900253d6:	f818 1b01 	ldrb.w	r1, [r8], #1
900253da:	4650      	mov	r0, sl
900253dc:	9b04      	ldr	r3, [sp, #16]
900253de:	f001 010f 	and.w	r1, r1, #15
900253e2:	f834 2c02 	ldrh.w	r2, [r4, #-2]
900253e6:	9300      	str	r3, [sp, #0]
900253e8:	463b      	mov	r3, r7
900253ea:	eb01 0141 	add.w	r1, r1, r1, lsl #1
900253ee:	4429      	add	r1, r5
900253f0:	f7ff ff2a 	bl	90025248 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
900253f4:	f824 0c02 	strh.w	r0, [r4, #-2]
900253f8:	e7d5      	b.n	900253a6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
900253fa:	46b0      	mov	r8, r6
900253fc:	f8dd b00c 	ldr.w	fp, [sp, #12]
90025400:	e7d1      	b.n	900253a6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
90025402:	d10f      	bne.n	90025424 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x170>
90025404:	f898 1000 	ldrb.w	r1, [r8]
90025408:	4650      	mov	r0, sl
9002540a:	9b04      	ldr	r3, [sp, #16]
9002540c:	0909      	lsrs	r1, r1, #4
9002540e:	f8b9 2000 	ldrh.w	r2, [r9]
90025412:	9300      	str	r3, [sp, #0]
90025414:	463b      	mov	r3, r7
90025416:	eb01 0141 	add.w	r1, r1, r1, lsl #1
9002541a:	4429      	add	r1, r5
9002541c:	f7ff ff14 	bl	90025248 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
90025420:	f829 0b02 	strh.w	r0, [r9], #2
90025424:	9b08      	ldr	r3, [sp, #32]
90025426:	9a05      	ldr	r2, [sp, #20]
90025428:	881c      	ldrh	r4, [r3, #0]
9002542a:	9b03      	ldr	r3, [sp, #12]
9002542c:	1ae4      	subs	r4, r4, r3
9002542e:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
90025432:	4413      	add	r3, r2
90025434:	9a09      	ldr	r2, [sp, #36]	; 0x24
90025436:	eb09 0444 	add.w	r4, r9, r4, lsl #1
9002543a:	fb93 f3f2 	sdiv	r3, r3, r2
9002543e:	441e      	add	r6, r3
90025440:	e796      	b.n	90025370 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbc>
90025442:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90025446:	4f46      	ldr	r7, [pc, #280]	; (90025560 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
90025448:	42a3      	cmp	r3, r4
9002544a:	d97c      	bls.n	90025546 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
9002544c:	9a06      	ldr	r2, [sp, #24]
9002544e:	2a00      	cmp	r2, #0
90025450:	d054      	beq.n	900254fc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x248>
90025452:	7830      	ldrb	r0, [r6, #0]
90025454:	1c71      	adds	r1, r6, #1
90025456:	f000 000f 	and.w	r0, r0, #15
9002545a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
9002545e:	eb05 0e00 	add.w	lr, r5, r0
90025462:	5c28      	ldrb	r0, [r5, r0]
90025464:	f89e 2002 	ldrb.w	r2, [lr, #2]
90025468:	f89e e001 	ldrb.w	lr, [lr, #1]
9002546c:	ea07 2202 	and.w	r2, r7, r2, lsl #8
90025470:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90025474:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
90025478:	ea42 020e 	orr.w	r2, r2, lr
9002547c:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
90025480:	f824 2b02 	strh.w	r2, [r4], #2
90025484:	9a03      	ldr	r2, [sp, #12]
90025486:	f102 3eff 	add.w	lr, r2, #4294967295
9002548a:	f1be 0f01 	cmp.w	lr, #1
9002548e:	4620      	mov	r0, r4
90025490:	f104 0404 	add.w	r4, r4, #4
90025494:	dd36      	ble.n	90025504 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x250>
90025496:	7808      	ldrb	r0, [r1, #0]
90025498:	f1ae 0e02 	sub.w	lr, lr, #2
9002549c:	0900      	lsrs	r0, r0, #4
9002549e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
900254a2:	eb05 0a00 	add.w	sl, r5, r0
900254a6:	f89a 2001 	ldrb.w	r2, [sl, #1]
900254aa:	f89a 9002 	ldrb.w	r9, [sl, #2]
900254ae:	00d2      	lsls	r2, r2, #3
900254b0:	ea07 2909 	and.w	r9, r7, r9, lsl #8
900254b4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
900254b8:	ea49 0202 	orr.w	r2, r9, r2
900254bc:	f815 9000 	ldrb.w	r9, [r5, r0]
900254c0:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
900254c4:	f824 2c04 	strh.w	r2, [r4, #-4]
900254c8:	f811 0b01 	ldrb.w	r0, [r1], #1
900254cc:	f000 000f 	and.w	r0, r0, #15
900254d0:	eb00 0040 	add.w	r0, r0, r0, lsl #1
900254d4:	eb05 0a00 	add.w	sl, r5, r0
900254d8:	f89a 2001 	ldrb.w	r2, [sl, #1]
900254dc:	f89a 9002 	ldrb.w	r9, [sl, #2]
900254e0:	00d2      	lsls	r2, r2, #3
900254e2:	ea07 2909 	and.w	r9, r7, r9, lsl #8
900254e6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
900254ea:	ea49 0202 	orr.w	r2, r9, r2
900254ee:	f815 9000 	ldrb.w	r9, [r5, r0]
900254f2:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
900254f6:	f824 2c02 	strh.w	r2, [r4, #-2]
900254fa:	e7c6      	b.n	9002548a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
900254fc:	4631      	mov	r1, r6
900254fe:	f8dd e00c 	ldr.w	lr, [sp, #12]
90025502:	e7c2      	b.n	9002548a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
90025504:	d111      	bne.n	9002552a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
90025506:	7809      	ldrb	r1, [r1, #0]
90025508:	0909      	lsrs	r1, r1, #4
9002550a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
9002550e:	186c      	adds	r4, r5, r1
90025510:	5c69      	ldrb	r1, [r5, r1]
90025512:	78a2      	ldrb	r2, [r4, #2]
90025514:	7864      	ldrb	r4, [r4, #1]
90025516:	ea07 2202 	and.w	r2, r7, r2, lsl #8
9002551a:	00e4      	lsls	r4, r4, #3
9002551c:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
90025520:	4322      	orrs	r2, r4
90025522:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
90025526:	f820 2b02 	strh.w	r2, [r0], #2
9002552a:	9a03      	ldr	r2, [sp, #12]
9002552c:	f8bc 4000 	ldrh.w	r4, [ip]
90025530:	9905      	ldr	r1, [sp, #20]
90025532:	1aa4      	subs	r4, r4, r2
90025534:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
90025538:	440a      	add	r2, r1
9002553a:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9002553e:	fb92 f2f8 	sdiv	r2, r2, r8
90025542:	4416      	add	r6, r2
90025544:	e780      	b.n	90025448 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x194>
90025546:	4b04      	ldr	r3, [pc, #16]	; (90025558 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
90025548:	6818      	ldr	r0, [r3, #0]
9002554a:	6803      	ldr	r3, [r0, #0]
9002554c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9002554e:	4798      	blx	r3
90025550:	b00f      	add	sp, #60	; 0x3c
90025552:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90025556:	bf00      	nop
90025558:	2402357c 	.word	0x2402357c
9002555c:	24023576 	.word	0x24023576
90025560:	fffff800 	.word	0xfffff800

90025564 <CRC_Lock>:
90025564:	4a20      	ldr	r2, [pc, #128]	; (900255e8 <CRC_Lock+0x84>)
90025566:	b530      	push	{r4, r5, lr}
90025568:	6813      	ldr	r3, [r2, #0]
9002556a:	f64f 74f0 	movw	r4, #65520	; 0xfff0
9002556e:	f24c 2540 	movw	r5, #49728	; 0xc240
90025572:	f023 0301 	bic.w	r3, r3, #1
90025576:	6013      	str	r3, [r2, #0]
90025578:	4b1c      	ldr	r3, [pc, #112]	; (900255ec <CRC_Lock+0x88>)
9002557a:	681a      	ldr	r2, [r3, #0]
9002557c:	4022      	ands	r2, r4
9002557e:	42aa      	cmp	r2, r5
90025580:	d005      	beq.n	9002558e <CRC_Lock+0x2a>
90025582:	681b      	ldr	r3, [r3, #0]
90025584:	f24c 2270 	movw	r2, #49776	; 0xc270
90025588:	4023      	ands	r3, r4
9002558a:	4293      	cmp	r3, r2
9002558c:	d124      	bne.n	900255d8 <CRC_Lock+0x74>
9002558e:	4b18      	ldr	r3, [pc, #96]	; (900255f0 <CRC_Lock+0x8c>)
90025590:	681b      	ldr	r3, [r3, #0]
90025592:	bb0b      	cbnz	r3, 900255d8 <CRC_Lock+0x74>
90025594:	4b17      	ldr	r3, [pc, #92]	; (900255f4 <CRC_Lock+0x90>)
90025596:	681a      	ldr	r2, [r3, #0]
90025598:	f3c2 020b 	ubfx	r2, r2, #0, #12
9002559c:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
900255a0:	d00d      	beq.n	900255be <CRC_Lock+0x5a>
900255a2:	681a      	ldr	r2, [r3, #0]
900255a4:	f240 4483 	movw	r4, #1155	; 0x483
900255a8:	f3c2 020b 	ubfx	r2, r2, #0, #12
900255ac:	42a2      	cmp	r2, r4
900255ae:	d006      	beq.n	900255be <CRC_Lock+0x5a>
900255b0:	681b      	ldr	r3, [r3, #0]
900255b2:	f240 4285 	movw	r2, #1157	; 0x485
900255b6:	f3c3 030b 	ubfx	r3, r3, #0, #12
900255ba:	4293      	cmp	r3, r2
900255bc:	d10c      	bne.n	900255d8 <CRC_Lock+0x74>
900255be:	4b0e      	ldr	r3, [pc, #56]	; (900255f8 <CRC_Lock+0x94>)
900255c0:	2201      	movs	r2, #1
900255c2:	601a      	str	r2, [r3, #0]
900255c4:	681a      	ldr	r2, [r3, #0]
900255c6:	2a00      	cmp	r2, #0
900255c8:	d1fc      	bne.n	900255c4 <CRC_Lock+0x60>
900255ca:	4b0c      	ldr	r3, [pc, #48]	; (900255fc <CRC_Lock+0x98>)
900255cc:	6018      	str	r0, [r3, #0]
900255ce:	6818      	ldr	r0, [r3, #0]
900255d0:	1a43      	subs	r3, r0, r1
900255d2:	4258      	negs	r0, r3
900255d4:	4158      	adcs	r0, r3
900255d6:	bd30      	pop	{r4, r5, pc}
900255d8:	4b09      	ldr	r3, [pc, #36]	; (90025600 <CRC_Lock+0x9c>)
900255da:	2201      	movs	r2, #1
900255dc:	601a      	str	r2, [r3, #0]
900255de:	681a      	ldr	r2, [r3, #0]
900255e0:	2a00      	cmp	r2, #0
900255e2:	d1fc      	bne.n	900255de <CRC_Lock+0x7a>
900255e4:	4b07      	ldr	r3, [pc, #28]	; (90025604 <CRC_Lock+0xa0>)
900255e6:	e7f1      	b.n	900255cc <CRC_Lock+0x68>
900255e8:	e0002000 	.word	0xe0002000
900255ec:	e000ed00 	.word	0xe000ed00
900255f0:	e0042000 	.word	0xe0042000
900255f4:	5c001000 	.word	0x5c001000
900255f8:	58024c08 	.word	0x58024c08
900255fc:	58024c00 	.word	0x58024c00
90025600:	40023008 	.word	0x40023008
90025604:	40023000 	.word	0x40023000

90025608 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
90025608:	6101      	str	r1, [r0, #16]
9002560a:	4770      	bx	lr

9002560c <_ZN8touchgfx8Gestures4tickEv>:
9002560c:	7b83      	ldrb	r3, [r0, #14]
9002560e:	b14b      	cbz	r3, 90025624 <_ZN8touchgfx8Gestures4tickEv+0x18>
90025610:	8903      	ldrh	r3, [r0, #8]
90025612:	3301      	adds	r3, #1
90025614:	b29b      	uxth	r3, r3
90025616:	2b07      	cmp	r3, #7
90025618:	8103      	strh	r3, [r0, #8]
9002561a:	bf81      	itttt	hi
9002561c:	2300      	movhi	r3, #0
9002561e:	8143      	strhhi	r3, [r0, #10]
90025620:	8183      	strhhi	r3, [r0, #12]
90025622:	7383      	strbhi	r3, [r0, #14]
90025624:	4770      	bx	lr
	...

90025628 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
90025628:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
9002562c:	4698      	mov	r8, r3
9002562e:	8883      	ldrh	r3, [r0, #4]
90025630:	4604      	mov	r4, r0
90025632:	4617      	mov	r7, r2
90025634:	f8ad 3006 	strh.w	r3, [sp, #6]
90025638:	eba8 0303 	sub.w	r3, r8, r3
9002563c:	4a19      	ldr	r2, [pc, #100]	; (900256a4 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
9002563e:	460e      	mov	r6, r1
90025640:	b21b      	sxth	r3, r3
90025642:	88c1      	ldrh	r1, [r0, #6]
90025644:	9200      	str	r2, [sp, #0]
90025646:	2000      	movs	r0, #0
90025648:	2b00      	cmp	r3, #0
9002564a:	8aa2      	ldrh	r2, [r4, #20]
9002564c:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
90025650:	bfb8      	it	lt
90025652:	425b      	neglt	r3, r3
90025654:	f88d 0004 	strb.w	r0, [sp, #4]
90025658:	f8ad 1008 	strh.w	r1, [sp, #8]
9002565c:	b21b      	sxth	r3, r3
9002565e:	f8ad 800a 	strh.w	r8, [sp, #10]
90025662:	f8ad 500c 	strh.w	r5, [sp, #12]
90025666:	4293      	cmp	r3, r2
90025668:	dc07      	bgt.n	9002567a <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x52>
9002566a:	1a69      	subs	r1, r5, r1
9002566c:	b209      	sxth	r1, r1
9002566e:	2900      	cmp	r1, #0
90025670:	bfb8      	it	lt
90025672:	4249      	neglt	r1, r1
90025674:	b209      	sxth	r1, r1
90025676:	428a      	cmp	r2, r1
90025678:	da10      	bge.n	9002569c <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x74>
9002567a:	6920      	ldr	r0, [r4, #16]
9002567c:	4669      	mov	r1, sp
9002567e:	eba8 0606 	sub.w	r6, r8, r6
90025682:	1bef      	subs	r7, r5, r7
90025684:	6803      	ldr	r3, [r0, #0]
90025686:	685b      	ldr	r3, [r3, #4]
90025688:	4798      	blx	r3
9002568a:	2300      	movs	r3, #0
9002568c:	2001      	movs	r0, #1
9002568e:	8166      	strh	r6, [r4, #10]
90025690:	8123      	strh	r3, [r4, #8]
90025692:	81a7      	strh	r7, [r4, #12]
90025694:	f8a4 8004 	strh.w	r8, [r4, #4]
90025698:	80e5      	strh	r5, [r4, #6]
9002569a:	73a0      	strb	r0, [r4, #14]
9002569c:	b004      	add	sp, #16
9002569e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900256a2:	bf00      	nop
900256a4:	9002a4d0 	.word	0x9002a4d0

900256a8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
900256a8:	b5f0      	push	{r4, r5, r6, r7, lr}
900256aa:	461e      	mov	r6, r3
900256ac:	1e4b      	subs	r3, r1, #1
900256ae:	b085      	sub	sp, #20
900256b0:	4604      	mov	r4, r0
900256b2:	2b01      	cmp	r3, #1
900256b4:	460d      	mov	r5, r1
900256b6:	4617      	mov	r7, r2
900256b8:	d84b      	bhi.n	90025752 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
900256ba:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
900256be:	1cd3      	adds	r3, r2, #3
900256c0:	b29b      	uxth	r3, r3
900256c2:	2b06      	cmp	r3, #6
900256c4:	d916      	bls.n	900256f4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
900256c6:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 90025768 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
900256ca:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
900256ce:	f8cd c004 	str.w	ip, [sp, #4]
900256d2:	f04f 0c00 	mov.w	ip, #0
900256d6:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
900256da:	6900      	ldr	r0, [r0, #16]
900256dc:	f8ad 100c 	strh.w	r1, [sp, #12]
900256e0:	a901      	add	r1, sp, #4
900256e2:	f88d c008 	strb.w	ip, [sp, #8]
900256e6:	f8ad 200a 	strh.w	r2, [sp, #10]
900256ea:	f8ad 300e 	strh.w	r3, [sp, #14]
900256ee:	6803      	ldr	r3, [r0, #0]
900256f0:	689b      	ldr	r3, [r3, #8]
900256f2:	4798      	blx	r3
900256f4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
900256f8:	1cd3      	adds	r3, r2, #3
900256fa:	b29b      	uxth	r3, r3
900256fc:	2b06      	cmp	r3, #6
900256fe:	d916      	bls.n	9002572e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
90025700:	f8df c064 	ldr.w	ip, [pc, #100]	; 90025768 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
90025704:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
90025708:	f8cd c004 	str.w	ip, [sp, #4]
9002570c:	f04f 0c01 	mov.w	ip, #1
90025710:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
90025714:	6920      	ldr	r0, [r4, #16]
90025716:	f8ad 100c 	strh.w	r1, [sp, #12]
9002571a:	a901      	add	r1, sp, #4
9002571c:	f88d c008 	strb.w	ip, [sp, #8]
90025720:	f8ad 200a 	strh.w	r2, [sp, #10]
90025724:	f8ad 300e 	strh.w	r3, [sp, #14]
90025728:	6803      	ldr	r3, [r0, #0]
9002572a:	689b      	ldr	r3, [r3, #8]
9002572c:	4798      	blx	r3
9002572e:	4b0d      	ldr	r3, [pc, #52]	; (90025764 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
90025730:	a901      	add	r1, sp, #4
90025732:	6920      	ldr	r0, [r4, #16]
90025734:	9301      	str	r3, [sp, #4]
90025736:	2300      	movs	r3, #0
90025738:	f88d 5008 	strb.w	r5, [sp, #8]
9002573c:	f8ad 700a 	strh.w	r7, [sp, #10]
90025740:	f8ad 600c 	strh.w	r6, [sp, #12]
90025744:	f8ad 300e 	strh.w	r3, [sp, #14]
90025748:	6803      	ldr	r3, [r0, #0]
9002574a:	681b      	ldr	r3, [r3, #0]
9002574c:	4798      	blx	r3
9002574e:	b005      	add	sp, #20
90025750:	bdf0      	pop	{r4, r5, r6, r7, pc}
90025752:	2900      	cmp	r1, #0
90025754:	d1eb      	bne.n	9002572e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
90025756:	80a2      	strh	r2, [r4, #4]
90025758:	80c6      	strh	r6, [r0, #6]
9002575a:	60a1      	str	r1, [r4, #8]
9002575c:	81a1      	strh	r1, [r4, #12]
9002575e:	73a1      	strb	r1, [r4, #14]
90025760:	e7e5      	b.n	9002572e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
90025762:	bf00      	nop
90025764:	9002a4bc 	.word	0x9002a4bc
90025768:	9002a4e4 	.word	0x9002a4e4

9002576c <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>:
9002576c:	10c9      	asrs	r1, r1, #3
9002576e:	2900      	cmp	r1, #0
90025770:	bfb8      	it	lt
90025772:	4249      	neglt	r1, r1
90025774:	2801      	cmp	r0, #1
90025776:	d108      	bne.n	9002578a <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
90025778:	f3c1 0008 	ubfx	r0, r1, #0, #9
9002577c:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
90025780:	4601      	mov	r1, r0
90025782:	dd02      	ble.n	9002578a <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
90025784:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
90025788:	4770      	bx	lr
9002578a:	29ff      	cmp	r1, #255	; 0xff
9002578c:	bfa8      	it	ge
9002578e:	21ff      	movge	r1, #255	; 0xff
90025790:	4608      	mov	r0, r1
90025792:	4770      	bx	lr

90025794 <_ZN8touchgfx10Rasterizer6lineToEii>:
90025794:	b410      	push	{r4}
90025796:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
9002579a:	429c      	cmp	r4, r3
9002579c:	d803      	bhi.n	900257a6 <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
9002579e:	f85d 4b04 	ldr.w	r4, [sp], #4
900257a2:	f7ed bb99 	b.w	90012ed8 <_ZN8touchgfx7Outline6lineToEii>
900257a6:	f85d 4b04 	ldr.w	r4, [sp], #4
900257aa:	4770      	bx	lr

900257ac <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
900257ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900257b0:	b08b      	sub	sp, #44	; 0x2c
900257b2:	4606      	mov	r6, r0
900257b4:	468a      	mov	sl, r1
900257b6:	e9cd 2306 	strd	r2, r3, [sp, #24]
900257ba:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
900257be:	9308      	str	r3, [sp, #32]
900257c0:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
900257c4:	9309      	str	r3, [sp, #36]	; 0x24
900257c6:	f7ed fcf2 	bl	900131ae <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
900257ca:	68b5      	ldr	r5, [r6, #8]
900257cc:	4604      	mov	r4, r0
900257ce:	2d00      	cmp	r5, #0
900257d0:	d044      	beq.n	9002585c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
900257d2:	6873      	ldr	r3, [r6, #4]
900257d4:	42ab      	cmp	r3, r5
900257d6:	d33d      	bcc.n	90025854 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
900257d8:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
900257dc:	f04f 0800 	mov.w	r8, #0
900257e0:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	; 0x34
900257e4:	eb02 0b03 	add.w	fp, r2, r3
900257e8:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
900257ec:	fb02 1203 	mla	r2, r2, r3, r1
900257f0:	9205      	str	r2, [sp, #20]
900257f2:	1e6a      	subs	r2, r5, #1
900257f4:	9204      	str	r2, [sp, #16]
900257f6:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
900257fa:	f9b4 7000 	ldrsh.w	r7, [r4]
900257fe:	454b      	cmp	r3, r9
90025800:	463a      	mov	r2, r7
90025802:	d008      	beq.n	90025816 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
90025804:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	; 0x34
90025808:	eb03 0b09 	add.w	fp, r3, r9
9002580c:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
90025810:	fb03 1309 	mla	r3, r3, r9, r1
90025814:	9305      	str	r3, [sp, #20]
90025816:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
9002581a:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
9002581e:	4498      	add	r8, r3
90025820:	9b04      	ldr	r3, [sp, #16]
90025822:	3b01      	subs	r3, #1
90025824:	9304      	str	r3, [sp, #16]
90025826:	9b04      	ldr	r3, [sp, #16]
90025828:	3301      	adds	r3, #1
9002582a:	d015      	beq.n	90025858 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
9002582c:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
90025830:	42bb      	cmp	r3, r7
90025832:	d117      	bne.n	90025864 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
90025834:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
90025838:	9b04      	ldr	r3, [sp, #16]
9002583a:	4548      	cmp	r0, r9
9002583c:	f103 33ff 	add.w	r3, r3, #4294967295
90025840:	d17d      	bne.n	9002593e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x192>
90025842:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
90025846:	4401      	add	r1, r0
90025848:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
9002584c:	4480      	add	r8, r0
9002584e:	e7e9      	b.n	90025824 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
90025850:	461f      	mov	r7, r3
90025852:	e042      	b.n	900258da <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x12e>
90025854:	2000      	movs	r0, #0
90025856:	e002      	b.n	9002585e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
90025858:	2900      	cmp	r1, #0
9002585a:	d16d      	bne.n	90025938 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
9002585c:	2001      	movs	r0, #1
9002585e:	b00b      	add	sp, #44	; 0x2c
90025860:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90025864:	b379      	cbz	r1, 900258c6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11a>
90025866:	2f00      	cmp	r7, #0
90025868:	db29      	blt.n	900258be <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
9002586a:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
9002586e:	42bb      	cmp	r3, r7
90025870:	dd25      	ble.n	900258be <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
90025872:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
90025876:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
9002587a:	f7ff ff77 	bl	9002576c <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
9002587e:	9b09      	ldr	r3, [sp, #36]	; 0x24
90025880:	fb10 f003 	smulbb	r0, r0, r3
90025884:	b280      	uxth	r0, r0
90025886:	1c41      	adds	r1, r0, #1
90025888:	eb01 2110 	add.w	r1, r1, r0, lsr #8
9002588c:	1209      	asrs	r1, r1, #8
9002588e:	f011 0fff 	tst.w	r1, #255	; 0xff
90025892:	d014      	beq.n	900258be <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
90025894:	b2c9      	uxtb	r1, r1
90025896:	9808      	ldr	r0, [sp, #32]
90025898:	b2ba      	uxth	r2, r7
9002589a:	8e73      	ldrh	r3, [r6, #50]	; 0x32
9002589c:	9102      	str	r1, [sp, #8]
9002589e:	2101      	movs	r1, #1
900258a0:	4413      	add	r3, r2
900258a2:	4402      	add	r2, r0
900258a4:	9101      	str	r1, [sp, #4]
900258a6:	fa0f f18b 	sxth.w	r1, fp
900258aa:	f8da 0000 	ldr.w	r0, [sl]
900258ae:	b21b      	sxth	r3, r3
900258b0:	9100      	str	r1, [sp, #0]
900258b2:	b212      	sxth	r2, r2
900258b4:	6941      	ldr	r1, [r0, #20]
900258b6:	4650      	mov	r0, sl
900258b8:	460d      	mov	r5, r1
900258ba:	9905      	ldr	r1, [sp, #20]
900258bc:	47a8      	blx	r5
900258be:	9b04      	ldr	r3, [sp, #16]
900258c0:	1c7a      	adds	r2, r7, #1
900258c2:	3301      	adds	r3, #1
900258c4:	d0ca      	beq.n	9002585c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
900258c6:	f9b4 7000 	ldrsh.w	r7, [r4]
900258ca:	1abb      	subs	r3, r7, r2
900258cc:	2b00      	cmp	r3, #0
900258ce:	dd31      	ble.n	90025934 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
900258d0:	2a00      	cmp	r2, #0
900258d2:	dabd      	bge.n	90025850 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
900258d4:	2f00      	cmp	r7, #0
900258d6:	dd2d      	ble.n	90025934 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
900258d8:	2200      	movs	r2, #0
900258da:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
900258de:	19d1      	adds	r1, r2, r7
900258e0:	4299      	cmp	r1, r3
900258e2:	db02      	blt.n	900258ea <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x13e>
900258e4:	1a9f      	subs	r7, r3, r2
900258e6:	2f00      	cmp	r7, #0
900258e8:	dd24      	ble.n	90025934 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
900258ea:	ea4f 1188 	mov.w	r1, r8, lsl #6
900258ee:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
900258f2:	f7ff ff3b 	bl	9002576c <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
900258f6:	9b09      	ldr	r3, [sp, #36]	; 0x24
900258f8:	fb10 f003 	smulbb	r0, r0, r3
900258fc:	b280      	uxth	r0, r0
900258fe:	1c41      	adds	r1, r0, #1
90025900:	eb01 2110 	add.w	r1, r1, r0, lsr #8
90025904:	1209      	asrs	r1, r1, #8
90025906:	f011 0fff 	tst.w	r1, #255	; 0xff
9002590a:	d013      	beq.n	90025934 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
9002590c:	b292      	uxth	r2, r2
9002590e:	9808      	ldr	r0, [sp, #32]
90025910:	b2c9      	uxtb	r1, r1
90025912:	8e73      	ldrh	r3, [r6, #50]	; 0x32
90025914:	b23f      	sxth	r7, r7
90025916:	4413      	add	r3, r2
90025918:	9102      	str	r1, [sp, #8]
9002591a:	4402      	add	r2, r0
9002591c:	fa0f f18b 	sxth.w	r1, fp
90025920:	f8da 0000 	ldr.w	r0, [sl]
90025924:	b21b      	sxth	r3, r3
90025926:	9100      	str	r1, [sp, #0]
90025928:	b212      	sxth	r2, r2
9002592a:	9701      	str	r7, [sp, #4]
9002592c:	9905      	ldr	r1, [sp, #20]
9002592e:	6947      	ldr	r7, [r0, #20]
90025930:	4650      	mov	r0, sl
90025932:	47b8      	blx	r7
90025934:	464b      	mov	r3, r9
90025936:	e75e      	b.n	900257f6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
90025938:	2f00      	cmp	r7, #0
9002593a:	da96      	bge.n	9002586a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbe>
9002593c:	e78e      	b.n	9002585c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
9002593e:	2900      	cmp	r1, #0
90025940:	d0f8      	beq.n	90025934 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
90025942:	e790      	b.n	90025866 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xba>

90025944 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>:
90025944:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
90025948:	461e      	mov	r6, r3
9002594a:	4b36      	ldr	r3, [pc, #216]	; (90025a24 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h+0xe0>)
9002594c:	2500      	movs	r5, #0
9002594e:	f100 0814 	add.w	r8, r0, #20
90025952:	4604      	mov	r4, r0
90025954:	4617      	mov	r7, r2
90025956:	e9c0 3100 	strd	r3, r1, [r0]
9002595a:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
9002595e:	8185      	strh	r5, [r0, #12]
90025960:	8103      	strh	r3, [r0, #8]
90025962:	f89d 3020 	ldrb.w	r3, [sp, #32]
90025966:	81c5      	strh	r5, [r0, #14]
90025968:	7283      	strb	r3, [r0, #10]
9002596a:	8205      	strh	r5, [r0, #16]
9002596c:	8245      	strh	r5, [r0, #18]
9002596e:	4640      	mov	r0, r8
90025970:	f7ec fdf8 	bl	90012564 <_ZN8touchgfx7OutlineC1Ev>
90025974:	f884 5044 	strb.w	r5, [r4, #68]	; 0x44
90025978:	f8a4 5046 	strh.w	r5, [r4, #70]	; 0x46
9002597c:	466b      	mov	r3, sp
9002597e:	f8a4 5048 	strh.w	r5, [r4, #72]	; 0x48
90025982:	f8a4 504a 	strh.w	r5, [r4, #74]	; 0x4a
90025986:	f884 505c 	strb.w	r5, [r4, #92]	; 0x5c
9002598a:	f884 505d 	strb.w	r5, [r4, #93]	; 0x5d
9002598e:	f8a4 5068 	strh.w	r5, [r4, #104]	; 0x68
90025992:	e9c4 5513 	strd	r5, r5, [r4, #76]	; 0x4c
90025996:	e9c4 5515 	strd	r5, r5, [r4, #84]	; 0x54
9002599a:	e9c4 5518 	strd	r5, r5, [r4, #96]	; 0x60
9002599e:	e9c4 551b 	strd	r5, r5, [r4, #108]	; 0x6c
900259a2:	6830      	ldr	r0, [r6, #0]
900259a4:	6871      	ldr	r1, [r6, #4]
900259a6:	8872      	ldrh	r2, [r6, #2]
900259a8:	8835      	ldrh	r5, [r6, #0]
900259aa:	c303      	stmia	r3!, {r0, r1}
900259ac:	887b      	ldrh	r3, [r7, #2]
900259ae:	f9b6 0004 	ldrsh.w	r0, [r6, #4]
900259b2:	4413      	add	r3, r2
900259b4:	883a      	ldrh	r2, [r7, #0]
900259b6:	f9b6 1006 	ldrsh.w	r1, [r6, #6]
900259ba:	442a      	add	r2, r5
900259bc:	81e3      	strh	r3, [r4, #14]
900259be:	8220      	strh	r0, [r4, #16]
900259c0:	4668      	mov	r0, sp
900259c2:	81a2      	strh	r2, [r4, #12]
900259c4:	8261      	strh	r1, [r4, #18]
900259c6:	4639      	mov	r1, r7
900259c8:	f7ee ffd4 	bl	90014974 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
900259cc:	f104 000c 	add.w	r0, r4, #12
900259d0:	f7ee ff8c 	bl	900148ec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
900259d4:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
900259d8:	f8bd 2000 	ldrh.w	r2, [sp]
900259dc:	4640      	mov	r0, r8
900259de:	f8a4 3048 	strh.w	r3, [r4, #72]	; 0x48
900259e2:	f8a4 2046 	strh.w	r2, [r4, #70]	; 0x46
900259e6:	f7ec fda1 	bl	9001252c <_ZN8touchgfx7Outline5resetEv>
900259ea:	f9bd 3000 	ldrsh.w	r3, [sp]
900259ee:	f9b4 2012 	ldrsh.w	r2, [r4, #18]
900259f2:	4620      	mov	r0, r4
900259f4:	015b      	lsls	r3, r3, #5
900259f6:	64e3      	str	r3, [r4, #76]	; 0x4c
900259f8:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
900259fc:	015b      	lsls	r3, r3, #5
900259fe:	6523      	str	r3, [r4, #80]	; 0x50
90025a00:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
90025a04:	015b      	lsls	r3, r3, #5
90025a06:	6563      	str	r3, [r4, #84]	; 0x54
90025a08:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
90025a0c:	015b      	lsls	r3, r3, #5
90025a0e:	65a3      	str	r3, [r4, #88]	; 0x58
90025a10:	f9b4 3010 	ldrsh.w	r3, [r4, #16]
90025a14:	f8a4 304a 	strh.w	r3, [r4, #74]	; 0x4a
90025a18:	e9c4 320f 	strd	r3, r2, [r4, #60]	; 0x3c
90025a1c:	b002      	add	sp, #8
90025a1e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90025a22:	bf00      	nop
90025a24:	9002a808 	.word	0x9002a808

90025a28 <_ZN8touchgfx6Canvas5closeEv>:
90025a28:	b538      	push	{r3, r4, r5, lr}
90025a2a:	f890 305c 	ldrb.w	r3, [r0, #92]	; 0x5c
90025a2e:	4604      	mov	r4, r0
90025a30:	b193      	cbz	r3, 90025a58 <_ZN8touchgfx6Canvas5closeEv+0x30>
90025a32:	f890 3068 	ldrb.w	r3, [r0, #104]	; 0x68
90025a36:	f890 2069 	ldrb.w	r2, [r0, #105]	; 0x69
90025a3a:	4213      	tst	r3, r2
90025a3c:	d10c      	bne.n	90025a58 <_ZN8touchgfx6Canvas5closeEv+0x30>
90025a3e:	f100 0514 	add.w	r5, r0, #20
90025a42:	b123      	cbz	r3, 90025a4e <_ZN8touchgfx6Canvas5closeEv+0x26>
90025a44:	e9d0 1218 	ldrd	r1, r2, [r0, #96]	; 0x60
90025a48:	4628      	mov	r0, r5
90025a4a:	f7ff fea3 	bl	90025794 <_ZN8touchgfx10Rasterizer6lineToEii>
90025a4e:	4628      	mov	r0, r5
90025a50:	e9d4 121b 	ldrd	r1, r2, [r4, #108]	; 0x6c
90025a54:	f7ff fe9e 	bl	90025794 <_ZN8touchgfx10Rasterizer6lineToEii>
90025a58:	2300      	movs	r3, #0
90025a5a:	f884 305c 	strb.w	r3, [r4, #92]	; 0x5c
90025a5e:	e9d4 0306 	ldrd	r0, r3, [r4, #24]
90025a62:	4298      	cmp	r0, r3
90025a64:	bf34      	ite	cc
90025a66:	2000      	movcc	r0, #0
90025a68:	2001      	movcs	r0, #1
90025a6a:	bd38      	pop	{r3, r4, r5, pc}

90025a6c <_ZN8touchgfx6Canvas6renderEh>:
90025a6c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
90025a70:	7a85      	ldrb	r5, [r0, #10]
90025a72:	4604      	mov	r4, r0
90025a74:	4369      	muls	r1, r5
90025a76:	1c4d      	adds	r5, r1, #1
90025a78:	eb05 2511 	add.w	r5, r5, r1, lsr #8
90025a7c:	122d      	asrs	r5, r5, #8
90025a7e:	f000 8098 	beq.w	90025bb2 <_ZN8touchgfx6Canvas6renderEh+0x146>
90025a82:	f890 305d 	ldrb.w	r3, [r0, #93]	; 0x5d
90025a86:	2b00      	cmp	r3, #0
90025a88:	f000 8093 	beq.w	90025bb2 <_ZN8touchgfx6Canvas6renderEh+0x146>
90025a8c:	f7ff ffcc 	bl	90025a28 <_ZN8touchgfx6Canvas5closeEv>
90025a90:	4607      	mov	r7, r0
90025a92:	2800      	cmp	r0, #0
90025a94:	d045      	beq.n	90025b22 <_ZN8touchgfx6Canvas6renderEh+0xb6>
90025a96:	6860      	ldr	r0, [r4, #4]
90025a98:	4e47      	ldr	r6, [pc, #284]	; (90025bb8 <_ZN8touchgfx6Canvas6renderEh+0x14c>)
90025a9a:	6803      	ldr	r3, [r0, #0]
90025a9c:	6837      	ldr	r7, [r6, #0]
90025a9e:	689b      	ldr	r3, [r3, #8]
90025aa0:	4798      	blx	r3
90025aa2:	4601      	mov	r1, r0
90025aa4:	4638      	mov	r0, r7
90025aa6:	f7eb f8d7 	bl	90010c58 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
90025aaa:	4607      	mov	r7, r0
90025aac:	f7ea fc98 	bl	900103e0 <_ZN8touchgfx3HAL3lcdEv>
90025ab0:	6803      	ldr	r3, [r0, #0]
90025ab2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90025ab4:	4798      	blx	r3
90025ab6:	4680      	mov	r8, r0
90025ab8:	f7ea fc92 	bl	900103e0 <_ZN8touchgfx3HAL3lcdEv>
90025abc:	6803      	ldr	r3, [r0, #0]
90025abe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90025ac0:	4798      	blx	r3
90025ac2:	280b      	cmp	r0, #11
90025ac4:	d85a      	bhi.n	90025b7c <_ZN8touchgfx6Canvas6renderEh+0x110>
90025ac6:	e8df f000 	tbb	[pc, r0]
90025aca:	5b50      	.short	0x5b50
90025acc:	3059066b 	.word	0x3059066b
90025ad0:	64646440 	.word	0x64646440
90025ad4:	6464      	.short	0x6464
90025ad6:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
90025ada:	2208      	movs	r2, #8
90025adc:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
90025ae0:	fb91 f2f2 	sdiv	r2, r1, r2
90025ae4:	fb08 2303 	mla	r3, r8, r3, r2
90025ae8:	441f      	add	r7, r3
90025aea:	424b      	negs	r3, r1
90025aec:	f001 0107 	and.w	r1, r1, #7
90025af0:	f003 0307 	and.w	r3, r3, #7
90025af4:	bf58      	it	pl
90025af6:	4259      	negpl	r1, r3
90025af8:	b2c9      	uxtb	r1, r1
90025afa:	b2ed      	uxtb	r5, r5
90025afc:	463a      	mov	r2, r7
90025afe:	fa0f f388 	sxth.w	r3, r8
90025b02:	f104 0014 	add.w	r0, r4, #20
90025b06:	e9cd 1500 	strd	r1, r5, [sp]
90025b0a:	6861      	ldr	r1, [r4, #4]
90025b0c:	f7ff fe4e 	bl	900257ac <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
90025b10:	4607      	mov	r7, r0
90025b12:	6860      	ldr	r0, [r4, #4]
90025b14:	6803      	ldr	r3, [r0, #0]
90025b16:	691b      	ldr	r3, [r3, #16]
90025b18:	4798      	blx	r3
90025b1a:	6830      	ldr	r0, [r6, #0]
90025b1c:	6803      	ldr	r3, [r0, #0]
90025b1e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90025b20:	4798      	blx	r3
90025b22:	4638      	mov	r0, r7
90025b24:	b002      	add	sp, #8
90025b26:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90025b2a:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
90025b2e:	2204      	movs	r2, #4
90025b30:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
90025b34:	fb91 f2f2 	sdiv	r2, r1, r2
90025b38:	fb08 2303 	mla	r3, r8, r3, r2
90025b3c:	441f      	add	r7, r3
90025b3e:	424b      	negs	r3, r1
90025b40:	f001 0103 	and.w	r1, r1, #3
90025b44:	f003 0303 	and.w	r3, r3, #3
90025b48:	e7d4      	b.n	90025af4 <_ZN8touchgfx6Canvas6renderEh+0x88>
90025b4a:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
90025b4e:	2202      	movs	r2, #2
90025b50:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
90025b54:	2900      	cmp	r1, #0
90025b56:	fb91 f2f2 	sdiv	r2, r1, r2
90025b5a:	f001 0101 	and.w	r1, r1, #1
90025b5e:	fb08 2303 	mla	r3, r8, r3, r2
90025b62:	bfb8      	it	lt
90025b64:	4249      	neglt	r1, r1
90025b66:	441f      	add	r7, r3
90025b68:	e7c6      	b.n	90025af8 <_ZN8touchgfx6Canvas6renderEh+0x8c>
90025b6a:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
90025b6e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
90025b72:	fb08 f303 	mul.w	r3, r8, r3
90025b76:	eb03 0342 	add.w	r3, r3, r2, lsl #1
90025b7a:	441f      	add	r7, r3
90025b7c:	2100      	movs	r1, #0
90025b7e:	e7bc      	b.n	90025afa <_ZN8touchgfx6Canvas6renderEh+0x8e>
90025b80:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
90025b84:	2103      	movs	r1, #3
90025b86:	fb08 f203 	mul.w	r2, r8, r3
90025b8a:	89a3      	ldrh	r3, [r4, #12]
90025b8c:	fb13 2301 	smlabb	r3, r3, r1, r2
90025b90:	e7f3      	b.n	90025b7a <_ZN8touchgfx6Canvas6renderEh+0x10e>
90025b92:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
90025b96:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
90025b9a:	fb08 2303 	mla	r3, r8, r3, r2
90025b9e:	e7ec      	b.n	90025b7a <_ZN8touchgfx6Canvas6renderEh+0x10e>
90025ba0:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
90025ba4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
90025ba8:	fb08 f303 	mul.w	r3, r8, r3
90025bac:	eb03 0382 	add.w	r3, r3, r2, lsl #2
90025bb0:	e7e3      	b.n	90025b7a <_ZN8touchgfx6Canvas6renderEh+0x10e>
90025bb2:	2701      	movs	r7, #1
90025bb4:	e7b5      	b.n	90025b22 <_ZN8touchgfx6Canvas6renderEh+0xb6>
90025bb6:	bf00      	nop
90025bb8:	2402357c 	.word	0x2402357c

90025bbc <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
90025bbc:	4b06      	ldr	r3, [pc, #24]	; (90025bd8 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>)
90025bbe:	b510      	push	{r4, lr}
90025bc0:	781b      	ldrb	r3, [r3, #0]
90025bc2:	2b01      	cmp	r3, #1
90025bc4:	d107      	bne.n	90025bd6 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1a>
90025bc6:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
90025bca:	680b      	ldr	r3, [r1, #0]
90025bcc:	6814      	ldr	r4, [r2, #0]
90025bce:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
90025bd2:	6013      	str	r3, [r2, #0]
90025bd4:	600c      	str	r4, [r1, #0]
90025bd6:	bd10      	pop	{r4, pc}
90025bd8:	24023574 	.word	0x24023574

90025bdc <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
90025bdc:	b513      	push	{r0, r1, r4, lr}
90025bde:	f890 305c 	ldrb.w	r3, [r0, #92]	; 0x5c
90025be2:	4604      	mov	r4, r0
90025be4:	e9cd 2100 	strd	r2, r1, [sp]
90025be8:	b9a3      	cbnz	r3, 90025c14 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
90025bea:	466a      	mov	r2, sp
90025bec:	a901      	add	r1, sp, #4
90025bee:	4620      	mov	r0, r4
90025bf0:	f7ff ffe4 	bl	90025bbc <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
90025bf4:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
90025bf6:	9901      	ldr	r1, [sp, #4]
90025bf8:	9a00      	ldr	r2, [sp, #0]
90025bfa:	1ac9      	subs	r1, r1, r3
90025bfc:	6d23      	ldr	r3, [r4, #80]	; 0x50
90025bfe:	1ad2      	subs	r2, r2, r3
90025c00:	9101      	str	r1, [sp, #4]
90025c02:	2a00      	cmp	r2, #0
90025c04:	9200      	str	r2, [sp, #0]
90025c06:	da0b      	bge.n	90025c20 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
90025c08:	2301      	movs	r3, #1
90025c0a:	2900      	cmp	r1, #0
90025c0c:	da0e      	bge.n	90025c2c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
90025c0e:	f043 0304 	orr.w	r3, r3, #4
90025c12:	e013      	b.n	90025c3c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
90025c14:	f7ff ff08 	bl	90025a28 <_ZN8touchgfx6Canvas5closeEv>
90025c18:	2800      	cmp	r0, #0
90025c1a:	d1e6      	bne.n	90025bea <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
90025c1c:	b002      	add	sp, #8
90025c1e:	bd10      	pop	{r4, pc}
90025c20:	6da3      	ldr	r3, [r4, #88]	; 0x58
90025c22:	429a      	cmp	r2, r3
90025c24:	bfac      	ite	ge
90025c26:	2302      	movge	r3, #2
90025c28:	2300      	movlt	r3, #0
90025c2a:	e7ee      	b.n	90025c0a <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
90025c2c:	6d60      	ldr	r0, [r4, #84]	; 0x54
90025c2e:	4281      	cmp	r1, r0
90025c30:	bfac      	ite	ge
90025c32:	2008      	movge	r0, #8
90025c34:	2000      	movlt	r0, #0
90025c36:	4318      	orrs	r0, r3
90025c38:	b2c3      	uxtb	r3, r0
90025c3a:	b158      	cbz	r0, 90025c54 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
90025c3c:	2200      	movs	r2, #0
90025c3e:	f884 205c 	strb.w	r2, [r4, #92]	; 0x5c
90025c42:	9901      	ldr	r1, [sp, #4]
90025c44:	9a00      	ldr	r2, [sp, #0]
90025c46:	66e1      	str	r1, [r4, #108]	; 0x6c
90025c48:	6722      	str	r2, [r4, #112]	; 0x70
90025c4a:	f884 3068 	strb.w	r3, [r4, #104]	; 0x68
90025c4e:	e9c4 1218 	strd	r1, r2, [r4, #96]	; 0x60
90025c52:	e7e3      	b.n	90025c1c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
90025c54:	f884 0069 	strb.w	r0, [r4, #105]	; 0x69
90025c58:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
90025c5c:	4298      	cmp	r0, r3
90025c5e:	d803      	bhi.n	90025c68 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
90025c60:	f104 0014 	add.w	r0, r4, #20
90025c64:	f7ed f952 	bl	90012f0c <_ZN8touchgfx7Outline6moveToEii>
90025c68:	2301      	movs	r3, #1
90025c6a:	f884 305c 	strb.w	r3, [r4, #92]	; 0x5c
90025c6e:	f884 305d 	strb.w	r3, [r4, #93]	; 0x5d
90025c72:	2300      	movs	r3, #0
90025c74:	e7e5      	b.n	90025c42 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

90025c76 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
90025c76:	b573      	push	{r0, r1, r4, r5, r6, lr}
90025c78:	ab02      	add	r3, sp, #8
90025c7a:	4604      	mov	r4, r0
90025c7c:	9101      	str	r1, [sp, #4]
90025c7e:	a901      	add	r1, sp, #4
90025c80:	f843 2d08 	str.w	r2, [r3, #-8]!
90025c84:	461a      	mov	r2, r3
90025c86:	f7ff ff99 	bl	90025bbc <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
90025c8a:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
90025c8c:	9901      	ldr	r1, [sp, #4]
90025c8e:	9a00      	ldr	r2, [sp, #0]
90025c90:	1ac9      	subs	r1, r1, r3
90025c92:	6d23      	ldr	r3, [r4, #80]	; 0x50
90025c94:	1ad2      	subs	r2, r2, r3
90025c96:	9101      	str	r1, [sp, #4]
90025c98:	2a00      	cmp	r2, #0
90025c9a:	9200      	str	r2, [sp, #0]
90025c9c:	db1c      	blt.n	90025cd8 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
90025c9e:	6da3      	ldr	r3, [r4, #88]	; 0x58
90025ca0:	429a      	cmp	r2, r3
90025ca2:	bfac      	ite	ge
90025ca4:	2002      	movge	r0, #2
90025ca6:	2000      	movlt	r0, #0
90025ca8:	2900      	cmp	r1, #0
90025caa:	db17      	blt.n	90025cdc <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
90025cac:	6d63      	ldr	r3, [r4, #84]	; 0x54
90025cae:	4299      	cmp	r1, r3
90025cb0:	bfac      	ite	ge
90025cb2:	2308      	movge	r3, #8
90025cb4:	2300      	movlt	r3, #0
90025cb6:	4303      	orrs	r3, r0
90025cb8:	f894 0068 	ldrb.w	r0, [r4, #104]	; 0x68
90025cbc:	b2dd      	uxtb	r5, r3
90025cbe:	b978      	cbnz	r0, 90025ce0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
90025cc0:	f104 0014 	add.w	r0, r4, #20
90025cc4:	f7ff fd66 	bl	90025794 <_ZN8touchgfx10Rasterizer6lineToEii>
90025cc8:	9b01      	ldr	r3, [sp, #4]
90025cca:	f884 5068 	strb.w	r5, [r4, #104]	; 0x68
90025cce:	6623      	str	r3, [r4, #96]	; 0x60
90025cd0:	9b00      	ldr	r3, [sp, #0]
90025cd2:	6663      	str	r3, [r4, #100]	; 0x64
90025cd4:	b002      	add	sp, #8
90025cd6:	bd70      	pop	{r4, r5, r6, pc}
90025cd8:	2001      	movs	r0, #1
90025cda:	e7e5      	b.n	90025ca8 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
90025cdc:	2304      	movs	r3, #4
90025cde:	e7ea      	b.n	90025cb6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
90025ce0:	b113      	cbz	r3, 90025ce8 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
90025ce2:	ea10 0305 	ands.w	r3, r0, r5
90025ce6:	d11c      	bne.n	90025d22 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
90025ce8:	f894 305c 	ldrb.w	r3, [r4, #92]	; 0x5c
90025cec:	f104 0614 	add.w	r6, r4, #20
90025cf0:	e9d4 1218 	ldrd	r1, r2, [r4, #96]	; 0x60
90025cf4:	b98b      	cbnz	r3, 90025d1a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
90025cf6:	f884 0069 	strb.w	r0, [r4, #105]	; 0x69
90025cfa:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
90025cfe:	4298      	cmp	r0, r3
90025d00:	d802      	bhi.n	90025d08 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
90025d02:	4630      	mov	r0, r6
90025d04:	f7ed f902 	bl	90012f0c <_ZN8touchgfx7Outline6moveToEii>
90025d08:	2301      	movs	r3, #1
90025d0a:	f884 305c 	strb.w	r3, [r4, #92]	; 0x5c
90025d0e:	f884 305d 	strb.w	r3, [r4, #93]	; 0x5d
90025d12:	4630      	mov	r0, r6
90025d14:	e9dd 2100 	ldrd	r2, r1, [sp]
90025d18:	e7d4      	b.n	90025cc4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
90025d1a:	4630      	mov	r0, r6
90025d1c:	f7ff fd3a 	bl	90025794 <_ZN8touchgfx10Rasterizer6lineToEii>
90025d20:	e7f7      	b.n	90025d12 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
90025d22:	461d      	mov	r5, r3
90025d24:	e7d0      	b.n	90025cc8 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

90025d28 <_ZN8touchgfx6CanvasD1Ev>:
90025d28:	4b04      	ldr	r3, [pc, #16]	; (90025d3c <_ZN8touchgfx6CanvasD1Ev+0x14>)
90025d2a:	b510      	push	{r4, lr}
90025d2c:	4604      	mov	r4, r0
90025d2e:	f840 3b14 	str.w	r3, [r0], #20
90025d32:	f7ec fbf3 	bl	9001251c <_ZN8touchgfx7OutlineD1Ev>
90025d36:	4620      	mov	r0, r4
90025d38:	bd10      	pop	{r4, pc}
90025d3a:	bf00      	nop
90025d3c:	9002a808 	.word	0x9002a808

90025d40 <_ZN8touchgfx6CanvasD0Ev>:
90025d40:	b510      	push	{r4, lr}
90025d42:	4604      	mov	r4, r0
90025d44:	f7ff fff0 	bl	90025d28 <_ZN8touchgfx6CanvasD1Ev>
90025d48:	2174      	movs	r1, #116	; 0x74
90025d4a:	4620      	mov	r0, r4
90025d4c:	f000 f8d1 	bl	90025ef2 <_ZdlPvj>
90025d50:	4620      	mov	r0, r4
90025d52:	bd10      	pop	{r4, pc}

90025d54 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
90025d54:	790b      	ldrb	r3, [r1, #4]
90025d56:	2b00      	cmp	r3, #0
90025d58:	bf0c      	ite	eq
90025d5a:	2301      	moveq	r3, #1
90025d5c:	2300      	movne	r3, #0
90025d5e:	b570      	push	{r4, r5, r6, lr}
90025d60:	4604      	mov	r4, r0
90025d62:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
90025d66:	460e      	mov	r6, r1
90025d68:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
90025d6c:	d109      	bne.n	90025d82 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
90025d6e:	b14d      	cbz	r5, 90025d84 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
90025d70:	7933      	ldrb	r3, [r6, #4]
90025d72:	2b01      	cmp	r3, #1
90025d74:	d10c      	bne.n	90025d90 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
90025d76:	6823      	ldr	r3, [r4, #0]
90025d78:	4620      	mov	r0, r4
90025d7a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
90025d7c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90025d80:	4718      	bx	r3
90025d82:	b12d      	cbz	r5, 90025d90 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
90025d84:	6823      	ldr	r3, [r4, #0]
90025d86:	4620      	mov	r0, r4
90025d88:	695b      	ldr	r3, [r3, #20]
90025d8a:	4798      	blx	r3
90025d8c:	2d00      	cmp	r5, #0
90025d8e:	d1ef      	bne.n	90025d70 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
90025d90:	bd70      	pop	{r4, r5, r6, pc}

90025d92 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
90025d92:	b570      	push	{r4, r5, r6, lr}
90025d94:	880b      	ldrh	r3, [r1, #0]
90025d96:	4605      	mov	r5, r0
90025d98:	4604      	mov	r4, r0
90025d9a:	85c3      	strh	r3, [r0, #46]	; 0x2e
90025d9c:	8813      	ldrh	r3, [r2, #0]
90025d9e:	f825 3f30 	strh.w	r3, [r5, #48]!
90025da2:	4628      	mov	r0, r5
90025da4:	f7f2 f898 	bl	90017ed8 <_ZNK8touchgfx6Bitmap8getWidthEv>
90025da8:	4606      	mov	r6, r0
90025daa:	4628      	mov	r0, r5
90025dac:	f7f2 f8c8 	bl	90017f40 <_ZNK8touchgfx6Bitmap9getHeightEv>
90025db0:	6823      	ldr	r3, [r4, #0]
90025db2:	4605      	mov	r5, r0
90025db4:	4631      	mov	r1, r6
90025db6:	4620      	mov	r0, r4
90025db8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90025dba:	4798      	blx	r3
90025dbc:	6823      	ldr	r3, [r4, #0]
90025dbe:	4629      	mov	r1, r5
90025dc0:	4620      	mov	r0, r4
90025dc2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90025dc4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90025dc8:	4718      	bx	r3

90025dca <_ZNK8touchgfx6Button12getSolidRectEv>:
90025dca:	b510      	push	{r4, lr}
90025dcc:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
90025dd0:	4604      	mov	r4, r0
90025dd2:	2bff      	cmp	r3, #255	; 0xff
90025dd4:	d006      	beq.n	90025de4 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
90025dd6:	2300      	movs	r3, #0
90025dd8:	8003      	strh	r3, [r0, #0]
90025dda:	8043      	strh	r3, [r0, #2]
90025ddc:	8083      	strh	r3, [r0, #4]
90025dde:	80c3      	strh	r3, [r0, #6]
90025de0:	4620      	mov	r0, r4
90025de2:	bd10      	pop	{r4, pc}
90025de4:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
90025de8:	b11b      	cbz	r3, 90025df2 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
90025dea:	3130      	adds	r1, #48	; 0x30
90025dec:	f7f2 f8dc 	bl	90017fa8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
90025df0:	e7f6      	b.n	90025de0 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
90025df2:	312e      	adds	r1, #46	; 0x2e
90025df4:	e7fa      	b.n	90025dec <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

90025df8 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
90025df8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90025dfc:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
90025e00:	b08a      	sub	sp, #40	; 0x28
90025e02:	4604      	mov	r4, r0
90025e04:	4688      	mov	r8, r1
90025e06:	2b00      	cmp	r3, #0
90025e08:	d066      	beq.n	90025ed8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
90025e0a:	8e03      	ldrh	r3, [r0, #48]	; 0x30
90025e0c:	a805      	add	r0, sp, #20
90025e0e:	f8ad 3014 	strh.w	r3, [sp, #20]
90025e12:	f7f2 f861 	bl	90017ed8 <_ZNK8touchgfx6Bitmap8getWidthEv>
90025e16:	4607      	mov	r7, r0
90025e18:	a805      	add	r0, sp, #20
90025e1a:	f7f2 f891 	bl	90017f40 <_ZNK8touchgfx6Bitmap9getHeightEv>
90025e1e:	f9b8 6000 	ldrsh.w	r6, [r8]
90025e22:	f8b8 2004 	ldrh.w	r2, [r8, #4]
90025e26:	2300      	movs	r3, #0
90025e28:	4432      	add	r2, r6
90025e2a:	9306      	str	r3, [sp, #24]
90025e2c:	b292      	uxth	r2, r2
90025e2e:	fa0f fc82 	sxth.w	ip, r2
90025e32:	459c      	cmp	ip, r3
90025e34:	dd52      	ble.n	90025edc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
90025e36:	42b7      	cmp	r7, r6
90025e38:	dd50      	ble.n	90025edc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
90025e3a:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
90025e3e:	f8b8 3006 	ldrh.w	r3, [r8, #6]
90025e42:	442b      	add	r3, r5
90025e44:	b29b      	uxth	r3, r3
90025e46:	b219      	sxth	r1, r3
90025e48:	2900      	cmp	r1, #0
90025e4a:	dd47      	ble.n	90025edc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
90025e4c:	42a8      	cmp	r0, r5
90025e4e:	dd45      	ble.n	90025edc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
90025e50:	4567      	cmp	r7, ip
90025e52:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
90025e56:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
90025e5a:	bfb8      	it	lt
90025e5c:	b2ba      	uxthlt	r2, r7
90025e5e:	4288      	cmp	r0, r1
90025e60:	f8ad 6018 	strh.w	r6, [sp, #24]
90025e64:	bfb8      	it	lt
90025e66:	b283      	uxthlt	r3, r0
90025e68:	1b92      	subs	r2, r2, r6
90025e6a:	f8ad 501a 	strh.w	r5, [sp, #26]
90025e6e:	1b5b      	subs	r3, r3, r5
90025e70:	f8ad 201c 	strh.w	r2, [sp, #28]
90025e74:	f8ad 301e 	strh.w	r3, [sp, #30]
90025e78:	f8bd 2014 	ldrh.w	r2, [sp, #20]
90025e7c:	f64f 73ff 	movw	r3, #65535	; 0xffff
90025e80:	429a      	cmp	r2, r3
90025e82:	d026      	beq.n	90025ed2 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
90025e84:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
90025e88:	2b00      	cmp	r3, #0
90025e8a:	dd22      	ble.n	90025ed2 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
90025e8c:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
90025e90:	2b00      	cmp	r3, #0
90025e92:	dd1e      	ble.n	90025ed2 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
90025e94:	2300      	movs	r3, #0
90025e96:	a908      	add	r1, sp, #32
90025e98:	4620      	mov	r0, r4
90025e9a:	e9cd 3308 	strd	r3, r3, [sp, #32]
90025e9e:	6823      	ldr	r3, [r4, #0]
90025ea0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90025ea2:	4798      	blx	r3
90025ea4:	4b0f      	ldr	r3, [pc, #60]	; (90025ee4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
90025ea6:	681b      	ldr	r3, [r3, #0]
90025ea8:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
90025eac:	b10a      	cbz	r2, 90025eb2 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
90025eae:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
90025eb0:	b900      	cbnz	r0, 90025eb4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
90025eb2:	6898      	ldr	r0, [r3, #8]
90025eb4:	2501      	movs	r5, #1
90025eb6:	6801      	ldr	r1, [r0, #0]
90025eb8:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
90025ebc:	9502      	str	r5, [sp, #8]
90025ebe:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
90025ec2:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
90025ec6:	9401      	str	r4, [sp, #4]
90025ec8:	ac06      	add	r4, sp, #24
90025eca:	9400      	str	r4, [sp, #0]
90025ecc:	688c      	ldr	r4, [r1, #8]
90025ece:	a905      	add	r1, sp, #20
90025ed0:	47a0      	blx	r4
90025ed2:	b00a      	add	sp, #40	; 0x28
90025ed4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90025ed8:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
90025eda:	e797      	b.n	90025e0c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
90025edc:	2300      	movs	r3, #0
90025ede:	9307      	str	r3, [sp, #28]
90025ee0:	e7ca      	b.n	90025e78 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
90025ee2:	bf00      	nop
90025ee4:	2402357c 	.word	0x2402357c

90025ee8 <__aeabi_atexit>:
90025ee8:	460b      	mov	r3, r1
90025eea:	4601      	mov	r1, r0
90025eec:	4618      	mov	r0, r3
90025eee:	f000 b94d 	b.w	9002618c <__cxa_atexit>

90025ef2 <_ZdlPvj>:
90025ef2:	f000 b812 	b.w	90025f1a <_ZdlPv>

90025ef6 <__cxa_guard_acquire>:
90025ef6:	6803      	ldr	r3, [r0, #0]
90025ef8:	07db      	lsls	r3, r3, #31
90025efa:	d406      	bmi.n	90025f0a <__cxa_guard_acquire+0x14>
90025efc:	7843      	ldrb	r3, [r0, #1]
90025efe:	b103      	cbz	r3, 90025f02 <__cxa_guard_acquire+0xc>
90025f00:	deff      	udf	#255	; 0xff
90025f02:	2301      	movs	r3, #1
90025f04:	7043      	strb	r3, [r0, #1]
90025f06:	4618      	mov	r0, r3
90025f08:	4770      	bx	lr
90025f0a:	2000      	movs	r0, #0
90025f0c:	4770      	bx	lr

90025f0e <__cxa_guard_release>:
90025f0e:	2301      	movs	r3, #1
90025f10:	6003      	str	r3, [r0, #0]
90025f12:	4770      	bx	lr

90025f14 <__cxa_pure_virtual>:
90025f14:	b508      	push	{r3, lr}
90025f16:	f000 f80f 	bl	90025f38 <_ZSt9terminatev>

90025f1a <_ZdlPv>:
90025f1a:	f000 b845 	b.w	90025fa8 <free>

90025f1e <_ZN10__cxxabiv111__terminateEPFvvE>:
90025f1e:	b508      	push	{r3, lr}
90025f20:	4780      	blx	r0
90025f22:	f000 f80e 	bl	90025f42 <abort>
	...

90025f28 <_ZSt13get_terminatev>:
90025f28:	4b02      	ldr	r3, [pc, #8]	; (90025f34 <_ZSt13get_terminatev+0xc>)
90025f2a:	6818      	ldr	r0, [r3, #0]
90025f2c:	f3bf 8f5b 	dmb	ish
90025f30:	4770      	bx	lr
90025f32:	bf00      	nop
90025f34:	240000f0 	.word	0x240000f0

90025f38 <_ZSt9terminatev>:
90025f38:	b508      	push	{r3, lr}
90025f3a:	f7ff fff5 	bl	90025f28 <_ZSt13get_terminatev>
90025f3e:	f7ff ffee 	bl	90025f1e <_ZN10__cxxabiv111__terminateEPFvvE>

90025f42 <abort>:
90025f42:	b508      	push	{r3, lr}
90025f44:	2006      	movs	r0, #6
90025f46:	f000 fb1d 	bl	90026584 <raise>
90025f4a:	2001      	movs	r0, #1
90025f4c:	f7dd fc0a 	bl	90003764 <_exit>

90025f50 <__assert_func>:
90025f50:	b51f      	push	{r0, r1, r2, r3, r4, lr}
90025f52:	4614      	mov	r4, r2
90025f54:	461a      	mov	r2, r3
90025f56:	4b09      	ldr	r3, [pc, #36]	; (90025f7c <__assert_func+0x2c>)
90025f58:	681b      	ldr	r3, [r3, #0]
90025f5a:	4605      	mov	r5, r0
90025f5c:	68d8      	ldr	r0, [r3, #12]
90025f5e:	b14c      	cbz	r4, 90025f74 <__assert_func+0x24>
90025f60:	4b07      	ldr	r3, [pc, #28]	; (90025f80 <__assert_func+0x30>)
90025f62:	9100      	str	r1, [sp, #0]
90025f64:	e9cd 3401 	strd	r3, r4, [sp, #4]
90025f68:	4906      	ldr	r1, [pc, #24]	; (90025f84 <__assert_func+0x34>)
90025f6a:	462b      	mov	r3, r5
90025f6c:	f000 f9c0 	bl	900262f0 <fiprintf>
90025f70:	f7ff ffe7 	bl	90025f42 <abort>
90025f74:	4b04      	ldr	r3, [pc, #16]	; (90025f88 <__assert_func+0x38>)
90025f76:	461c      	mov	r4, r3
90025f78:	e7f3      	b.n	90025f62 <__assert_func+0x12>
90025f7a:	bf00      	nop
90025f7c:	2400014c 	.word	0x2400014c
90025f80:	9002a814 	.word	0x9002a814
90025f84:	9002a821 	.word	0x9002a821
90025f88:	9002a84f 	.word	0x9002a84f

90025f8c <atexit>:
90025f8c:	2300      	movs	r3, #0
90025f8e:	4601      	mov	r1, r0
90025f90:	461a      	mov	r2, r3
90025f92:	4618      	mov	r0, r3
90025f94:	f000 bba4 	b.w	900266e0 <__register_exitproc>

90025f98 <malloc>:
90025f98:	4b02      	ldr	r3, [pc, #8]	; (90025fa4 <malloc+0xc>)
90025f9a:	4601      	mov	r1, r0
90025f9c:	6818      	ldr	r0, [r3, #0]
90025f9e:	f000 b82b 	b.w	90025ff8 <_malloc_r>
90025fa2:	bf00      	nop
90025fa4:	2400014c 	.word	0x2400014c

90025fa8 <free>:
90025fa8:	4b02      	ldr	r3, [pc, #8]	; (90025fb4 <free+0xc>)
90025faa:	4601      	mov	r1, r0
90025fac:	6818      	ldr	r0, [r3, #0]
90025fae:	f000 bbf5 	b.w	9002679c <_free_r>
90025fb2:	bf00      	nop
90025fb4:	2400014c 	.word	0x2400014c

90025fb8 <sbrk_aligned>:
90025fb8:	b570      	push	{r4, r5, r6, lr}
90025fba:	4e0e      	ldr	r6, [pc, #56]	; (90025ff4 <sbrk_aligned+0x3c>)
90025fbc:	460c      	mov	r4, r1
90025fbe:	6831      	ldr	r1, [r6, #0]
90025fc0:	4605      	mov	r5, r0
90025fc2:	b911      	cbnz	r1, 90025fca <sbrk_aligned+0x12>
90025fc4:	f000 fb2e 	bl	90026624 <_sbrk_r>
90025fc8:	6030      	str	r0, [r6, #0]
90025fca:	4621      	mov	r1, r4
90025fcc:	4628      	mov	r0, r5
90025fce:	f000 fb29 	bl	90026624 <_sbrk_r>
90025fd2:	1c43      	adds	r3, r0, #1
90025fd4:	d00a      	beq.n	90025fec <sbrk_aligned+0x34>
90025fd6:	1cc4      	adds	r4, r0, #3
90025fd8:	f024 0403 	bic.w	r4, r4, #3
90025fdc:	42a0      	cmp	r0, r4
90025fde:	d007      	beq.n	90025ff0 <sbrk_aligned+0x38>
90025fe0:	1a21      	subs	r1, r4, r0
90025fe2:	4628      	mov	r0, r5
90025fe4:	f000 fb1e 	bl	90026624 <_sbrk_r>
90025fe8:	3001      	adds	r0, #1
90025fea:	d101      	bne.n	90025ff0 <sbrk_aligned+0x38>
90025fec:	f04f 34ff 	mov.w	r4, #4294967295
90025ff0:	4620      	mov	r0, r4
90025ff2:	bd70      	pop	{r4, r5, r6, pc}
90025ff4:	24023ed4 	.word	0x24023ed4

90025ff8 <_malloc_r>:
90025ff8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
90025ffc:	1ccd      	adds	r5, r1, #3
90025ffe:	f025 0503 	bic.w	r5, r5, #3
90026002:	3508      	adds	r5, #8
90026004:	2d0c      	cmp	r5, #12
90026006:	bf38      	it	cc
90026008:	250c      	movcc	r5, #12
9002600a:	2d00      	cmp	r5, #0
9002600c:	4607      	mov	r7, r0
9002600e:	db01      	blt.n	90026014 <_malloc_r+0x1c>
90026010:	42a9      	cmp	r1, r5
90026012:	d905      	bls.n	90026020 <_malloc_r+0x28>
90026014:	230c      	movs	r3, #12
90026016:	603b      	str	r3, [r7, #0]
90026018:	2600      	movs	r6, #0
9002601a:	4630      	mov	r0, r6
9002601c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
90026020:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 900260f4 <_malloc_r+0xfc>
90026024:	f000 f868 	bl	900260f8 <__malloc_lock>
90026028:	f8d8 3000 	ldr.w	r3, [r8]
9002602c:	461c      	mov	r4, r3
9002602e:	bb5c      	cbnz	r4, 90026088 <_malloc_r+0x90>
90026030:	4629      	mov	r1, r5
90026032:	4638      	mov	r0, r7
90026034:	f7ff ffc0 	bl	90025fb8 <sbrk_aligned>
90026038:	1c43      	adds	r3, r0, #1
9002603a:	4604      	mov	r4, r0
9002603c:	d155      	bne.n	900260ea <_malloc_r+0xf2>
9002603e:	f8d8 4000 	ldr.w	r4, [r8]
90026042:	4626      	mov	r6, r4
90026044:	2e00      	cmp	r6, #0
90026046:	d145      	bne.n	900260d4 <_malloc_r+0xdc>
90026048:	2c00      	cmp	r4, #0
9002604a:	d048      	beq.n	900260de <_malloc_r+0xe6>
9002604c:	6823      	ldr	r3, [r4, #0]
9002604e:	4631      	mov	r1, r6
90026050:	4638      	mov	r0, r7
90026052:	eb04 0903 	add.w	r9, r4, r3
90026056:	f000 fae5 	bl	90026624 <_sbrk_r>
9002605a:	4581      	cmp	r9, r0
9002605c:	d13f      	bne.n	900260de <_malloc_r+0xe6>
9002605e:	6821      	ldr	r1, [r4, #0]
90026060:	1a6d      	subs	r5, r5, r1
90026062:	4629      	mov	r1, r5
90026064:	4638      	mov	r0, r7
90026066:	f7ff ffa7 	bl	90025fb8 <sbrk_aligned>
9002606a:	3001      	adds	r0, #1
9002606c:	d037      	beq.n	900260de <_malloc_r+0xe6>
9002606e:	6823      	ldr	r3, [r4, #0]
90026070:	442b      	add	r3, r5
90026072:	6023      	str	r3, [r4, #0]
90026074:	f8d8 3000 	ldr.w	r3, [r8]
90026078:	2b00      	cmp	r3, #0
9002607a:	d038      	beq.n	900260ee <_malloc_r+0xf6>
9002607c:	685a      	ldr	r2, [r3, #4]
9002607e:	42a2      	cmp	r2, r4
90026080:	d12b      	bne.n	900260da <_malloc_r+0xe2>
90026082:	2200      	movs	r2, #0
90026084:	605a      	str	r2, [r3, #4]
90026086:	e00f      	b.n	900260a8 <_malloc_r+0xb0>
90026088:	6822      	ldr	r2, [r4, #0]
9002608a:	1b52      	subs	r2, r2, r5
9002608c:	d41f      	bmi.n	900260ce <_malloc_r+0xd6>
9002608e:	2a0b      	cmp	r2, #11
90026090:	d917      	bls.n	900260c2 <_malloc_r+0xca>
90026092:	1961      	adds	r1, r4, r5
90026094:	42a3      	cmp	r3, r4
90026096:	6025      	str	r5, [r4, #0]
90026098:	bf18      	it	ne
9002609a:	6059      	strne	r1, [r3, #4]
9002609c:	6863      	ldr	r3, [r4, #4]
9002609e:	bf08      	it	eq
900260a0:	f8c8 1000 	streq.w	r1, [r8]
900260a4:	5162      	str	r2, [r4, r5]
900260a6:	604b      	str	r3, [r1, #4]
900260a8:	4638      	mov	r0, r7
900260aa:	f104 060b 	add.w	r6, r4, #11
900260ae:	f000 f829 	bl	90026104 <__malloc_unlock>
900260b2:	f026 0607 	bic.w	r6, r6, #7
900260b6:	1d23      	adds	r3, r4, #4
900260b8:	1af2      	subs	r2, r6, r3
900260ba:	d0ae      	beq.n	9002601a <_malloc_r+0x22>
900260bc:	1b9b      	subs	r3, r3, r6
900260be:	50a3      	str	r3, [r4, r2]
900260c0:	e7ab      	b.n	9002601a <_malloc_r+0x22>
900260c2:	42a3      	cmp	r3, r4
900260c4:	6862      	ldr	r2, [r4, #4]
900260c6:	d1dd      	bne.n	90026084 <_malloc_r+0x8c>
900260c8:	f8c8 2000 	str.w	r2, [r8]
900260cc:	e7ec      	b.n	900260a8 <_malloc_r+0xb0>
900260ce:	4623      	mov	r3, r4
900260d0:	6864      	ldr	r4, [r4, #4]
900260d2:	e7ac      	b.n	9002602e <_malloc_r+0x36>
900260d4:	4634      	mov	r4, r6
900260d6:	6876      	ldr	r6, [r6, #4]
900260d8:	e7b4      	b.n	90026044 <_malloc_r+0x4c>
900260da:	4613      	mov	r3, r2
900260dc:	e7cc      	b.n	90026078 <_malloc_r+0x80>
900260de:	230c      	movs	r3, #12
900260e0:	603b      	str	r3, [r7, #0]
900260e2:	4638      	mov	r0, r7
900260e4:	f000 f80e 	bl	90026104 <__malloc_unlock>
900260e8:	e797      	b.n	9002601a <_malloc_r+0x22>
900260ea:	6025      	str	r5, [r4, #0]
900260ec:	e7dc      	b.n	900260a8 <_malloc_r+0xb0>
900260ee:	605b      	str	r3, [r3, #4]
900260f0:	deff      	udf	#255	; 0xff
900260f2:	bf00      	nop
900260f4:	24023ed0 	.word	0x24023ed0

900260f8 <__malloc_lock>:
900260f8:	4801      	ldr	r0, [pc, #4]	; (90026100 <__malloc_lock+0x8>)
900260fa:	f000 bae0 	b.w	900266be <__retarget_lock_acquire_recursive>
900260fe:	bf00      	nop
90026100:	24024019 	.word	0x24024019

90026104 <__malloc_unlock>:
90026104:	4801      	ldr	r0, [pc, #4]	; (9002610c <__malloc_unlock+0x8>)
90026106:	f000 badb 	b.w	900266c0 <__retarget_lock_release_recursive>
9002610a:	bf00      	nop
9002610c:	24024019 	.word	0x24024019

90026110 <rand>:
90026110:	4b16      	ldr	r3, [pc, #88]	; (9002616c <rand+0x5c>)
90026112:	b510      	push	{r4, lr}
90026114:	681c      	ldr	r4, [r3, #0]
90026116:	6b23      	ldr	r3, [r4, #48]	; 0x30
90026118:	b9b3      	cbnz	r3, 90026148 <rand+0x38>
9002611a:	2018      	movs	r0, #24
9002611c:	f7ff ff3c 	bl	90025f98 <malloc>
90026120:	4602      	mov	r2, r0
90026122:	6320      	str	r0, [r4, #48]	; 0x30
90026124:	b920      	cbnz	r0, 90026130 <rand+0x20>
90026126:	4b12      	ldr	r3, [pc, #72]	; (90026170 <rand+0x60>)
90026128:	4812      	ldr	r0, [pc, #72]	; (90026174 <rand+0x64>)
9002612a:	2152      	movs	r1, #82	; 0x52
9002612c:	f7ff ff10 	bl	90025f50 <__assert_func>
90026130:	4911      	ldr	r1, [pc, #68]	; (90026178 <rand+0x68>)
90026132:	4b12      	ldr	r3, [pc, #72]	; (9002617c <rand+0x6c>)
90026134:	e9c0 1300 	strd	r1, r3, [r0]
90026138:	4b11      	ldr	r3, [pc, #68]	; (90026180 <rand+0x70>)
9002613a:	6083      	str	r3, [r0, #8]
9002613c:	230b      	movs	r3, #11
9002613e:	8183      	strh	r3, [r0, #12]
90026140:	2100      	movs	r1, #0
90026142:	2001      	movs	r0, #1
90026144:	e9c2 0104 	strd	r0, r1, [r2, #16]
90026148:	6b21      	ldr	r1, [r4, #48]	; 0x30
9002614a:	480e      	ldr	r0, [pc, #56]	; (90026184 <rand+0x74>)
9002614c:	690b      	ldr	r3, [r1, #16]
9002614e:	694c      	ldr	r4, [r1, #20]
90026150:	4a0d      	ldr	r2, [pc, #52]	; (90026188 <rand+0x78>)
90026152:	4358      	muls	r0, r3
90026154:	fb02 0004 	mla	r0, r2, r4, r0
90026158:	fba3 3202 	umull	r3, r2, r3, r2
9002615c:	3301      	adds	r3, #1
9002615e:	eb40 0002 	adc.w	r0, r0, r2
90026162:	e9c1 3004 	strd	r3, r0, [r1, #16]
90026166:	f020 4000 	bic.w	r0, r0, #2147483648	; 0x80000000
9002616a:	bd10      	pop	{r4, pc}
9002616c:	2400014c 	.word	0x2400014c
90026170:	9002a850 	.word	0x9002a850
90026174:	9002a867 	.word	0x9002a867
90026178:	abcd330e 	.word	0xabcd330e
9002617c:	e66d1234 	.word	0xe66d1234
90026180:	0005deec 	.word	0x0005deec
90026184:	5851f42d 	.word	0x5851f42d
90026188:	4c957f2d 	.word	0x4c957f2d

9002618c <__cxa_atexit>:
9002618c:	b510      	push	{r4, lr}
9002618e:	4c05      	ldr	r4, [pc, #20]	; (900261a4 <__cxa_atexit+0x18>)
90026190:	4613      	mov	r3, r2
90026192:	b12c      	cbz	r4, 900261a0 <__cxa_atexit+0x14>
90026194:	460a      	mov	r2, r1
90026196:	4601      	mov	r1, r0
90026198:	2002      	movs	r0, #2
9002619a:	f000 faa1 	bl	900266e0 <__register_exitproc>
9002619e:	bd10      	pop	{r4, pc}
900261a0:	4620      	mov	r0, r4
900261a2:	e7fc      	b.n	9002619e <__cxa_atexit+0x12>
900261a4:	900266e1 	.word	0x900266e1

900261a8 <std>:
900261a8:	2300      	movs	r3, #0
900261aa:	b510      	push	{r4, lr}
900261ac:	4604      	mov	r4, r0
900261ae:	e9c0 3300 	strd	r3, r3, [r0]
900261b2:	e9c0 3304 	strd	r3, r3, [r0, #16]
900261b6:	6083      	str	r3, [r0, #8]
900261b8:	8181      	strh	r1, [r0, #12]
900261ba:	6643      	str	r3, [r0, #100]	; 0x64
900261bc:	81c2      	strh	r2, [r0, #14]
900261be:	6183      	str	r3, [r0, #24]
900261c0:	4619      	mov	r1, r3
900261c2:	2208      	movs	r2, #8
900261c4:	305c      	adds	r0, #92	; 0x5c
900261c6:	f000 f99b 	bl	90026500 <memset>
900261ca:	4b0d      	ldr	r3, [pc, #52]	; (90026200 <std+0x58>)
900261cc:	6263      	str	r3, [r4, #36]	; 0x24
900261ce:	4b0d      	ldr	r3, [pc, #52]	; (90026204 <std+0x5c>)
900261d0:	62a3      	str	r3, [r4, #40]	; 0x28
900261d2:	4b0d      	ldr	r3, [pc, #52]	; (90026208 <std+0x60>)
900261d4:	62e3      	str	r3, [r4, #44]	; 0x2c
900261d6:	4b0d      	ldr	r3, [pc, #52]	; (9002620c <std+0x64>)
900261d8:	6323      	str	r3, [r4, #48]	; 0x30
900261da:	4b0d      	ldr	r3, [pc, #52]	; (90026210 <std+0x68>)
900261dc:	6224      	str	r4, [r4, #32]
900261de:	429c      	cmp	r4, r3
900261e0:	d006      	beq.n	900261f0 <std+0x48>
900261e2:	f103 0268 	add.w	r2, r3, #104	; 0x68
900261e6:	4294      	cmp	r4, r2
900261e8:	d002      	beq.n	900261f0 <std+0x48>
900261ea:	33d0      	adds	r3, #208	; 0xd0
900261ec:	429c      	cmp	r4, r3
900261ee:	d105      	bne.n	900261fc <std+0x54>
900261f0:	f104 0058 	add.w	r0, r4, #88	; 0x58
900261f4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900261f8:	f000 ba60 	b.w	900266bc <__retarget_lock_init_recursive>
900261fc:	bd10      	pop	{r4, pc}
900261fe:	bf00      	nop
90026200:	90026351 	.word	0x90026351
90026204:	90026373 	.word	0x90026373
90026208:	900263ab 	.word	0x900263ab
9002620c:	900263cf 	.word	0x900263cf
90026210:	24023ed8 	.word	0x24023ed8

90026214 <stdio_exit_handler>:
90026214:	4a02      	ldr	r2, [pc, #8]	; (90026220 <stdio_exit_handler+0xc>)
90026216:	4903      	ldr	r1, [pc, #12]	; (90026224 <stdio_exit_handler+0x10>)
90026218:	4803      	ldr	r0, [pc, #12]	; (90026228 <stdio_exit_handler+0x14>)
9002621a:	f000 b87b 	b.w	90026314 <_fwalk_sglue>
9002621e:	bf00      	nop
90026220:	240000f4 	.word	0x240000f4
90026224:	90026ee9 	.word	0x90026ee9
90026228:	24000100 	.word	0x24000100

9002622c <cleanup_stdio>:
9002622c:	6841      	ldr	r1, [r0, #4]
9002622e:	4b0c      	ldr	r3, [pc, #48]	; (90026260 <cleanup_stdio+0x34>)
90026230:	4299      	cmp	r1, r3
90026232:	b510      	push	{r4, lr}
90026234:	4604      	mov	r4, r0
90026236:	d001      	beq.n	9002623c <cleanup_stdio+0x10>
90026238:	f000 fe56 	bl	90026ee8 <_fflush_r>
9002623c:	68a1      	ldr	r1, [r4, #8]
9002623e:	4b09      	ldr	r3, [pc, #36]	; (90026264 <cleanup_stdio+0x38>)
90026240:	4299      	cmp	r1, r3
90026242:	d002      	beq.n	9002624a <cleanup_stdio+0x1e>
90026244:	4620      	mov	r0, r4
90026246:	f000 fe4f 	bl	90026ee8 <_fflush_r>
9002624a:	68e1      	ldr	r1, [r4, #12]
9002624c:	4b06      	ldr	r3, [pc, #24]	; (90026268 <cleanup_stdio+0x3c>)
9002624e:	4299      	cmp	r1, r3
90026250:	d004      	beq.n	9002625c <cleanup_stdio+0x30>
90026252:	4620      	mov	r0, r4
90026254:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90026258:	f000 be46 	b.w	90026ee8 <_fflush_r>
9002625c:	bd10      	pop	{r4, pc}
9002625e:	bf00      	nop
90026260:	24023ed8 	.word	0x24023ed8
90026264:	24023f40 	.word	0x24023f40
90026268:	24023fa8 	.word	0x24023fa8

9002626c <global_stdio_init.part.0>:
9002626c:	b510      	push	{r4, lr}
9002626e:	4b0b      	ldr	r3, [pc, #44]	; (9002629c <global_stdio_init.part.0+0x30>)
90026270:	4c0b      	ldr	r4, [pc, #44]	; (900262a0 <global_stdio_init.part.0+0x34>)
90026272:	4a0c      	ldr	r2, [pc, #48]	; (900262a4 <global_stdio_init.part.0+0x38>)
90026274:	601a      	str	r2, [r3, #0]
90026276:	4620      	mov	r0, r4
90026278:	2200      	movs	r2, #0
9002627a:	2104      	movs	r1, #4
9002627c:	f7ff ff94 	bl	900261a8 <std>
90026280:	f104 0068 	add.w	r0, r4, #104	; 0x68
90026284:	2201      	movs	r2, #1
90026286:	2109      	movs	r1, #9
90026288:	f7ff ff8e 	bl	900261a8 <std>
9002628c:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
90026290:	2202      	movs	r2, #2
90026292:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90026296:	2112      	movs	r1, #18
90026298:	f7ff bf86 	b.w	900261a8 <std>
9002629c:	24024010 	.word	0x24024010
900262a0:	24023ed8 	.word	0x24023ed8
900262a4:	90026215 	.word	0x90026215

900262a8 <__sfp_lock_acquire>:
900262a8:	4801      	ldr	r0, [pc, #4]	; (900262b0 <__sfp_lock_acquire+0x8>)
900262aa:	f000 ba08 	b.w	900266be <__retarget_lock_acquire_recursive>
900262ae:	bf00      	nop
900262b0:	2402401a 	.word	0x2402401a

900262b4 <__sfp_lock_release>:
900262b4:	4801      	ldr	r0, [pc, #4]	; (900262bc <__sfp_lock_release+0x8>)
900262b6:	f000 ba03 	b.w	900266c0 <__retarget_lock_release_recursive>
900262ba:	bf00      	nop
900262bc:	2402401a 	.word	0x2402401a

900262c0 <__sinit>:
900262c0:	b510      	push	{r4, lr}
900262c2:	4604      	mov	r4, r0
900262c4:	f7ff fff0 	bl	900262a8 <__sfp_lock_acquire>
900262c8:	6a23      	ldr	r3, [r4, #32]
900262ca:	b11b      	cbz	r3, 900262d4 <__sinit+0x14>
900262cc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900262d0:	f7ff bff0 	b.w	900262b4 <__sfp_lock_release>
900262d4:	4b04      	ldr	r3, [pc, #16]	; (900262e8 <__sinit+0x28>)
900262d6:	6223      	str	r3, [r4, #32]
900262d8:	4b04      	ldr	r3, [pc, #16]	; (900262ec <__sinit+0x2c>)
900262da:	681b      	ldr	r3, [r3, #0]
900262dc:	2b00      	cmp	r3, #0
900262de:	d1f5      	bne.n	900262cc <__sinit+0xc>
900262e0:	f7ff ffc4 	bl	9002626c <global_stdio_init.part.0>
900262e4:	e7f2      	b.n	900262cc <__sinit+0xc>
900262e6:	bf00      	nop
900262e8:	9002622d 	.word	0x9002622d
900262ec:	24024010 	.word	0x24024010

900262f0 <fiprintf>:
900262f0:	b40e      	push	{r1, r2, r3}
900262f2:	b503      	push	{r0, r1, lr}
900262f4:	4601      	mov	r1, r0
900262f6:	ab03      	add	r3, sp, #12
900262f8:	4805      	ldr	r0, [pc, #20]	; (90026310 <fiprintf+0x20>)
900262fa:	f853 2b04 	ldr.w	r2, [r3], #4
900262fe:	6800      	ldr	r0, [r0, #0]
90026300:	9301      	str	r3, [sp, #4]
90026302:	f000 fac1 	bl	90026888 <_vfiprintf_r>
90026306:	b002      	add	sp, #8
90026308:	f85d eb04 	ldr.w	lr, [sp], #4
9002630c:	b003      	add	sp, #12
9002630e:	4770      	bx	lr
90026310:	2400014c 	.word	0x2400014c

90026314 <_fwalk_sglue>:
90026314:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
90026318:	4607      	mov	r7, r0
9002631a:	4688      	mov	r8, r1
9002631c:	4614      	mov	r4, r2
9002631e:	2600      	movs	r6, #0
90026320:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
90026324:	f1b9 0901 	subs.w	r9, r9, #1
90026328:	d505      	bpl.n	90026336 <_fwalk_sglue+0x22>
9002632a:	6824      	ldr	r4, [r4, #0]
9002632c:	2c00      	cmp	r4, #0
9002632e:	d1f7      	bne.n	90026320 <_fwalk_sglue+0xc>
90026330:	4630      	mov	r0, r6
90026332:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
90026336:	89ab      	ldrh	r3, [r5, #12]
90026338:	2b01      	cmp	r3, #1
9002633a:	d907      	bls.n	9002634c <_fwalk_sglue+0x38>
9002633c:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
90026340:	3301      	adds	r3, #1
90026342:	d003      	beq.n	9002634c <_fwalk_sglue+0x38>
90026344:	4629      	mov	r1, r5
90026346:	4638      	mov	r0, r7
90026348:	47c0      	blx	r8
9002634a:	4306      	orrs	r6, r0
9002634c:	3568      	adds	r5, #104	; 0x68
9002634e:	e7e9      	b.n	90026324 <_fwalk_sglue+0x10>

90026350 <__sread>:
90026350:	b510      	push	{r4, lr}
90026352:	460c      	mov	r4, r1
90026354:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
90026358:	f000 f93e 	bl	900265d8 <_read_r>
9002635c:	2800      	cmp	r0, #0
9002635e:	bfab      	itete	ge
90026360:	6d63      	ldrge	r3, [r4, #84]	; 0x54
90026362:	89a3      	ldrhlt	r3, [r4, #12]
90026364:	181b      	addge	r3, r3, r0
90026366:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
9002636a:	bfac      	ite	ge
9002636c:	6563      	strge	r3, [r4, #84]	; 0x54
9002636e:	81a3      	strhlt	r3, [r4, #12]
90026370:	bd10      	pop	{r4, pc}

90026372 <__swrite>:
90026372:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90026376:	461f      	mov	r7, r3
90026378:	898b      	ldrh	r3, [r1, #12]
9002637a:	05db      	lsls	r3, r3, #23
9002637c:	4605      	mov	r5, r0
9002637e:	460c      	mov	r4, r1
90026380:	4616      	mov	r6, r2
90026382:	d505      	bpl.n	90026390 <__swrite+0x1e>
90026384:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
90026388:	2302      	movs	r3, #2
9002638a:	2200      	movs	r2, #0
9002638c:	f000 f912 	bl	900265b4 <_lseek_r>
90026390:	89a3      	ldrh	r3, [r4, #12]
90026392:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
90026396:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
9002639a:	81a3      	strh	r3, [r4, #12]
9002639c:	4632      	mov	r2, r6
9002639e:	463b      	mov	r3, r7
900263a0:	4628      	mov	r0, r5
900263a2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
900263a6:	f000 b94d 	b.w	90026644 <_write_r>

900263aa <__sseek>:
900263aa:	b510      	push	{r4, lr}
900263ac:	460c      	mov	r4, r1
900263ae:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
900263b2:	f000 f8ff 	bl	900265b4 <_lseek_r>
900263b6:	1c43      	adds	r3, r0, #1
900263b8:	89a3      	ldrh	r3, [r4, #12]
900263ba:	bf15      	itete	ne
900263bc:	6560      	strne	r0, [r4, #84]	; 0x54
900263be:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
900263c2:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
900263c6:	81a3      	strheq	r3, [r4, #12]
900263c8:	bf18      	it	ne
900263ca:	81a3      	strhne	r3, [r4, #12]
900263cc:	bd10      	pop	{r4, pc}

900263ce <__sclose>:
900263ce:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
900263d2:	f000 b8df 	b.w	90026594 <_close_r>

900263d6 <__swbuf_r>:
900263d6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
900263d8:	460e      	mov	r6, r1
900263da:	4614      	mov	r4, r2
900263dc:	4605      	mov	r5, r0
900263de:	b118      	cbz	r0, 900263e8 <__swbuf_r+0x12>
900263e0:	6a03      	ldr	r3, [r0, #32]
900263e2:	b90b      	cbnz	r3, 900263e8 <__swbuf_r+0x12>
900263e4:	f7ff ff6c 	bl	900262c0 <__sinit>
900263e8:	69a3      	ldr	r3, [r4, #24]
900263ea:	60a3      	str	r3, [r4, #8]
900263ec:	89a3      	ldrh	r3, [r4, #12]
900263ee:	071a      	lsls	r2, r3, #28
900263f0:	d525      	bpl.n	9002643e <__swbuf_r+0x68>
900263f2:	6923      	ldr	r3, [r4, #16]
900263f4:	b31b      	cbz	r3, 9002643e <__swbuf_r+0x68>
900263f6:	6823      	ldr	r3, [r4, #0]
900263f8:	6922      	ldr	r2, [r4, #16]
900263fa:	1a98      	subs	r0, r3, r2
900263fc:	6963      	ldr	r3, [r4, #20]
900263fe:	b2f6      	uxtb	r6, r6
90026400:	4283      	cmp	r3, r0
90026402:	4637      	mov	r7, r6
90026404:	dc04      	bgt.n	90026410 <__swbuf_r+0x3a>
90026406:	4621      	mov	r1, r4
90026408:	4628      	mov	r0, r5
9002640a:	f000 fd6d 	bl	90026ee8 <_fflush_r>
9002640e:	b9e0      	cbnz	r0, 9002644a <__swbuf_r+0x74>
90026410:	68a3      	ldr	r3, [r4, #8]
90026412:	3b01      	subs	r3, #1
90026414:	60a3      	str	r3, [r4, #8]
90026416:	6823      	ldr	r3, [r4, #0]
90026418:	1c5a      	adds	r2, r3, #1
9002641a:	6022      	str	r2, [r4, #0]
9002641c:	701e      	strb	r6, [r3, #0]
9002641e:	6962      	ldr	r2, [r4, #20]
90026420:	1c43      	adds	r3, r0, #1
90026422:	429a      	cmp	r2, r3
90026424:	d004      	beq.n	90026430 <__swbuf_r+0x5a>
90026426:	89a3      	ldrh	r3, [r4, #12]
90026428:	07db      	lsls	r3, r3, #31
9002642a:	d506      	bpl.n	9002643a <__swbuf_r+0x64>
9002642c:	2e0a      	cmp	r6, #10
9002642e:	d104      	bne.n	9002643a <__swbuf_r+0x64>
90026430:	4621      	mov	r1, r4
90026432:	4628      	mov	r0, r5
90026434:	f000 fd58 	bl	90026ee8 <_fflush_r>
90026438:	b938      	cbnz	r0, 9002644a <__swbuf_r+0x74>
9002643a:	4638      	mov	r0, r7
9002643c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9002643e:	4621      	mov	r1, r4
90026440:	4628      	mov	r0, r5
90026442:	f000 f805 	bl	90026450 <__swsetup_r>
90026446:	2800      	cmp	r0, #0
90026448:	d0d5      	beq.n	900263f6 <__swbuf_r+0x20>
9002644a:	f04f 37ff 	mov.w	r7, #4294967295
9002644e:	e7f4      	b.n	9002643a <__swbuf_r+0x64>

90026450 <__swsetup_r>:
90026450:	b538      	push	{r3, r4, r5, lr}
90026452:	4b2a      	ldr	r3, [pc, #168]	; (900264fc <__swsetup_r+0xac>)
90026454:	4605      	mov	r5, r0
90026456:	6818      	ldr	r0, [r3, #0]
90026458:	460c      	mov	r4, r1
9002645a:	b118      	cbz	r0, 90026464 <__swsetup_r+0x14>
9002645c:	6a03      	ldr	r3, [r0, #32]
9002645e:	b90b      	cbnz	r3, 90026464 <__swsetup_r+0x14>
90026460:	f7ff ff2e 	bl	900262c0 <__sinit>
90026464:	89a3      	ldrh	r3, [r4, #12]
90026466:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
9002646a:	0718      	lsls	r0, r3, #28
9002646c:	d422      	bmi.n	900264b4 <__swsetup_r+0x64>
9002646e:	06d9      	lsls	r1, r3, #27
90026470:	d407      	bmi.n	90026482 <__swsetup_r+0x32>
90026472:	2309      	movs	r3, #9
90026474:	602b      	str	r3, [r5, #0]
90026476:	f042 0340 	orr.w	r3, r2, #64	; 0x40
9002647a:	81a3      	strh	r3, [r4, #12]
9002647c:	f04f 30ff 	mov.w	r0, #4294967295
90026480:	e034      	b.n	900264ec <__swsetup_r+0x9c>
90026482:	0758      	lsls	r0, r3, #29
90026484:	d512      	bpl.n	900264ac <__swsetup_r+0x5c>
90026486:	6b61      	ldr	r1, [r4, #52]	; 0x34
90026488:	b141      	cbz	r1, 9002649c <__swsetup_r+0x4c>
9002648a:	f104 0344 	add.w	r3, r4, #68	; 0x44
9002648e:	4299      	cmp	r1, r3
90026490:	d002      	beq.n	90026498 <__swsetup_r+0x48>
90026492:	4628      	mov	r0, r5
90026494:	f000 f982 	bl	9002679c <_free_r>
90026498:	2300      	movs	r3, #0
9002649a:	6363      	str	r3, [r4, #52]	; 0x34
9002649c:	89a3      	ldrh	r3, [r4, #12]
9002649e:	f023 0324 	bic.w	r3, r3, #36	; 0x24
900264a2:	81a3      	strh	r3, [r4, #12]
900264a4:	2300      	movs	r3, #0
900264a6:	6063      	str	r3, [r4, #4]
900264a8:	6923      	ldr	r3, [r4, #16]
900264aa:	6023      	str	r3, [r4, #0]
900264ac:	89a3      	ldrh	r3, [r4, #12]
900264ae:	f043 0308 	orr.w	r3, r3, #8
900264b2:	81a3      	strh	r3, [r4, #12]
900264b4:	6923      	ldr	r3, [r4, #16]
900264b6:	b94b      	cbnz	r3, 900264cc <__swsetup_r+0x7c>
900264b8:	89a3      	ldrh	r3, [r4, #12]
900264ba:	f403 7320 	and.w	r3, r3, #640	; 0x280
900264be:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
900264c2:	d003      	beq.n	900264cc <__swsetup_r+0x7c>
900264c4:	4621      	mov	r1, r4
900264c6:	4628      	mov	r0, r5
900264c8:	f000 fd5c 	bl	90026f84 <__smakebuf_r>
900264cc:	89a0      	ldrh	r0, [r4, #12]
900264ce:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
900264d2:	f010 0301 	ands.w	r3, r0, #1
900264d6:	d00a      	beq.n	900264ee <__swsetup_r+0x9e>
900264d8:	2300      	movs	r3, #0
900264da:	60a3      	str	r3, [r4, #8]
900264dc:	6963      	ldr	r3, [r4, #20]
900264de:	425b      	negs	r3, r3
900264e0:	61a3      	str	r3, [r4, #24]
900264e2:	6923      	ldr	r3, [r4, #16]
900264e4:	b943      	cbnz	r3, 900264f8 <__swsetup_r+0xa8>
900264e6:	f010 0080 	ands.w	r0, r0, #128	; 0x80
900264ea:	d1c4      	bne.n	90026476 <__swsetup_r+0x26>
900264ec:	bd38      	pop	{r3, r4, r5, pc}
900264ee:	0781      	lsls	r1, r0, #30
900264f0:	bf58      	it	pl
900264f2:	6963      	ldrpl	r3, [r4, #20]
900264f4:	60a3      	str	r3, [r4, #8]
900264f6:	e7f4      	b.n	900264e2 <__swsetup_r+0x92>
900264f8:	2000      	movs	r0, #0
900264fa:	e7f7      	b.n	900264ec <__swsetup_r+0x9c>
900264fc:	2400014c 	.word	0x2400014c

90026500 <memset>:
90026500:	4402      	add	r2, r0
90026502:	4603      	mov	r3, r0
90026504:	4293      	cmp	r3, r2
90026506:	d100      	bne.n	9002650a <memset+0xa>
90026508:	4770      	bx	lr
9002650a:	f803 1b01 	strb.w	r1, [r3], #1
9002650e:	e7f9      	b.n	90026504 <memset+0x4>

90026510 <strncmp>:
90026510:	b510      	push	{r4, lr}
90026512:	b16a      	cbz	r2, 90026530 <strncmp+0x20>
90026514:	3901      	subs	r1, #1
90026516:	1884      	adds	r4, r0, r2
90026518:	f810 2b01 	ldrb.w	r2, [r0], #1
9002651c:	f811 3f01 	ldrb.w	r3, [r1, #1]!
90026520:	429a      	cmp	r2, r3
90026522:	d103      	bne.n	9002652c <strncmp+0x1c>
90026524:	42a0      	cmp	r0, r4
90026526:	d001      	beq.n	9002652c <strncmp+0x1c>
90026528:	2a00      	cmp	r2, #0
9002652a:	d1f5      	bne.n	90026518 <strncmp+0x8>
9002652c:	1ad0      	subs	r0, r2, r3
9002652e:	bd10      	pop	{r4, pc}
90026530:	4610      	mov	r0, r2
90026532:	e7fc      	b.n	9002652e <strncmp+0x1e>

90026534 <_raise_r>:
90026534:	291f      	cmp	r1, #31
90026536:	b538      	push	{r3, r4, r5, lr}
90026538:	4604      	mov	r4, r0
9002653a:	460d      	mov	r5, r1
9002653c:	d904      	bls.n	90026548 <_raise_r+0x14>
9002653e:	2316      	movs	r3, #22
90026540:	6003      	str	r3, [r0, #0]
90026542:	f04f 30ff 	mov.w	r0, #4294967295
90026546:	bd38      	pop	{r3, r4, r5, pc}
90026548:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
9002654a:	b112      	cbz	r2, 90026552 <_raise_r+0x1e>
9002654c:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
90026550:	b94b      	cbnz	r3, 90026566 <_raise_r+0x32>
90026552:	4620      	mov	r0, r4
90026554:	f000 f864 	bl	90026620 <_getpid_r>
90026558:	462a      	mov	r2, r5
9002655a:	4601      	mov	r1, r0
9002655c:	4620      	mov	r0, r4
9002655e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
90026562:	f000 b84b 	b.w	900265fc <_kill_r>
90026566:	2b01      	cmp	r3, #1
90026568:	d00a      	beq.n	90026580 <_raise_r+0x4c>
9002656a:	1c59      	adds	r1, r3, #1
9002656c:	d103      	bne.n	90026576 <_raise_r+0x42>
9002656e:	2316      	movs	r3, #22
90026570:	6003      	str	r3, [r0, #0]
90026572:	2001      	movs	r0, #1
90026574:	e7e7      	b.n	90026546 <_raise_r+0x12>
90026576:	2400      	movs	r4, #0
90026578:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
9002657c:	4628      	mov	r0, r5
9002657e:	4798      	blx	r3
90026580:	2000      	movs	r0, #0
90026582:	e7e0      	b.n	90026546 <_raise_r+0x12>

90026584 <raise>:
90026584:	4b02      	ldr	r3, [pc, #8]	; (90026590 <raise+0xc>)
90026586:	4601      	mov	r1, r0
90026588:	6818      	ldr	r0, [r3, #0]
9002658a:	f7ff bfd3 	b.w	90026534 <_raise_r>
9002658e:	bf00      	nop
90026590:	2400014c 	.word	0x2400014c

90026594 <_close_r>:
90026594:	b538      	push	{r3, r4, r5, lr}
90026596:	4d06      	ldr	r5, [pc, #24]	; (900265b0 <_close_r+0x1c>)
90026598:	2300      	movs	r3, #0
9002659a:	4604      	mov	r4, r0
9002659c:	4608      	mov	r0, r1
9002659e:	602b      	str	r3, [r5, #0]
900265a0:	f7dd f902 	bl	900037a8 <_close>
900265a4:	1c43      	adds	r3, r0, #1
900265a6:	d102      	bne.n	900265ae <_close_r+0x1a>
900265a8:	682b      	ldr	r3, [r5, #0]
900265aa:	b103      	cbz	r3, 900265ae <_close_r+0x1a>
900265ac:	6023      	str	r3, [r4, #0]
900265ae:	bd38      	pop	{r3, r4, r5, pc}
900265b0:	24024014 	.word	0x24024014

900265b4 <_lseek_r>:
900265b4:	b538      	push	{r3, r4, r5, lr}
900265b6:	4d07      	ldr	r5, [pc, #28]	; (900265d4 <_lseek_r+0x20>)
900265b8:	4604      	mov	r4, r0
900265ba:	4608      	mov	r0, r1
900265bc:	4611      	mov	r1, r2
900265be:	2200      	movs	r2, #0
900265c0:	602a      	str	r2, [r5, #0]
900265c2:	461a      	mov	r2, r3
900265c4:	f7dd f8fc 	bl	900037c0 <_lseek>
900265c8:	1c43      	adds	r3, r0, #1
900265ca:	d102      	bne.n	900265d2 <_lseek_r+0x1e>
900265cc:	682b      	ldr	r3, [r5, #0]
900265ce:	b103      	cbz	r3, 900265d2 <_lseek_r+0x1e>
900265d0:	6023      	str	r3, [r4, #0]
900265d2:	bd38      	pop	{r3, r4, r5, pc}
900265d4:	24024014 	.word	0x24024014

900265d8 <_read_r>:
900265d8:	b538      	push	{r3, r4, r5, lr}
900265da:	4d07      	ldr	r5, [pc, #28]	; (900265f8 <_read_r+0x20>)
900265dc:	4604      	mov	r4, r0
900265de:	4608      	mov	r0, r1
900265e0:	4611      	mov	r1, r2
900265e2:	2200      	movs	r2, #0
900265e4:	602a      	str	r2, [r5, #0]
900265e6:	461a      	mov	r2, r3
900265e8:	f7dd f8c2 	bl	90003770 <_read>
900265ec:	1c43      	adds	r3, r0, #1
900265ee:	d102      	bne.n	900265f6 <_read_r+0x1e>
900265f0:	682b      	ldr	r3, [r5, #0]
900265f2:	b103      	cbz	r3, 900265f6 <_read_r+0x1e>
900265f4:	6023      	str	r3, [r4, #0]
900265f6:	bd38      	pop	{r3, r4, r5, pc}
900265f8:	24024014 	.word	0x24024014

900265fc <_kill_r>:
900265fc:	b538      	push	{r3, r4, r5, lr}
900265fe:	4d07      	ldr	r5, [pc, #28]	; (9002661c <_kill_r+0x20>)
90026600:	2300      	movs	r3, #0
90026602:	4604      	mov	r4, r0
90026604:	4608      	mov	r0, r1
90026606:	4611      	mov	r1, r2
90026608:	602b      	str	r3, [r5, #0]
9002660a:	f7dd f8a1 	bl	90003750 <_kill>
9002660e:	1c43      	adds	r3, r0, #1
90026610:	d102      	bne.n	90026618 <_kill_r+0x1c>
90026612:	682b      	ldr	r3, [r5, #0]
90026614:	b103      	cbz	r3, 90026618 <_kill_r+0x1c>
90026616:	6023      	str	r3, [r4, #0]
90026618:	bd38      	pop	{r3, r4, r5, pc}
9002661a:	bf00      	nop
9002661c:	24024014 	.word	0x24024014

90026620 <_getpid_r>:
90026620:	f7dd b894 	b.w	9000374c <_getpid>

90026624 <_sbrk_r>:
90026624:	b538      	push	{r3, r4, r5, lr}
90026626:	4d06      	ldr	r5, [pc, #24]	; (90026640 <_sbrk_r+0x1c>)
90026628:	2300      	movs	r3, #0
9002662a:	4604      	mov	r4, r0
9002662c:	4608      	mov	r0, r1
9002662e:	602b      	str	r3, [r5, #0]
90026630:	f000 fd06 	bl	90027040 <_sbrk>
90026634:	1c43      	adds	r3, r0, #1
90026636:	d102      	bne.n	9002663e <_sbrk_r+0x1a>
90026638:	682b      	ldr	r3, [r5, #0]
9002663a:	b103      	cbz	r3, 9002663e <_sbrk_r+0x1a>
9002663c:	6023      	str	r3, [r4, #0]
9002663e:	bd38      	pop	{r3, r4, r5, pc}
90026640:	24024014 	.word	0x24024014

90026644 <_write_r>:
90026644:	b538      	push	{r3, r4, r5, lr}
90026646:	4d07      	ldr	r5, [pc, #28]	; (90026664 <_write_r+0x20>)
90026648:	4604      	mov	r4, r0
9002664a:	4608      	mov	r0, r1
9002664c:	4611      	mov	r1, r2
9002664e:	2200      	movs	r2, #0
90026650:	602a      	str	r2, [r5, #0]
90026652:	461a      	mov	r2, r3
90026654:	f7dd f89a 	bl	9000378c <_write>
90026658:	1c43      	adds	r3, r0, #1
9002665a:	d102      	bne.n	90026662 <_write_r+0x1e>
9002665c:	682b      	ldr	r3, [r5, #0]
9002665e:	b103      	cbz	r3, 90026662 <_write_r+0x1e>
90026660:	6023      	str	r3, [r4, #0]
90026662:	bd38      	pop	{r3, r4, r5, pc}
90026664:	24024014 	.word	0x24024014

90026668 <__errno>:
90026668:	4b01      	ldr	r3, [pc, #4]	; (90026670 <__errno+0x8>)
9002666a:	6818      	ldr	r0, [r3, #0]
9002666c:	4770      	bx	lr
9002666e:	bf00      	nop
90026670:	2400014c 	.word	0x2400014c

90026674 <__libc_init_array>:
90026674:	b570      	push	{r4, r5, r6, lr}
90026676:	4d0d      	ldr	r5, [pc, #52]	; (900266ac <__libc_init_array+0x38>)
90026678:	4c0d      	ldr	r4, [pc, #52]	; (900266b0 <__libc_init_array+0x3c>)
9002667a:	1b64      	subs	r4, r4, r5
9002667c:	10a4      	asrs	r4, r4, #2
9002667e:	2600      	movs	r6, #0
90026680:	42a6      	cmp	r6, r4
90026682:	d109      	bne.n	90026698 <__libc_init_array+0x24>
90026684:	4d0b      	ldr	r5, [pc, #44]	; (900266b4 <__libc_init_array+0x40>)
90026686:	4c0c      	ldr	r4, [pc, #48]	; (900266b8 <__libc_init_array+0x44>)
90026688:	f000 fce8 	bl	9002705c <_init>
9002668c:	1b64      	subs	r4, r4, r5
9002668e:	10a4      	asrs	r4, r4, #2
90026690:	2600      	movs	r6, #0
90026692:	42a6      	cmp	r6, r4
90026694:	d105      	bne.n	900266a2 <__libc_init_array+0x2e>
90026696:	bd70      	pop	{r4, r5, r6, pc}
90026698:	f855 3b04 	ldr.w	r3, [r5], #4
9002669c:	4798      	blx	r3
9002669e:	3601      	adds	r6, #1
900266a0:	e7ee      	b.n	90026680 <__libc_init_array+0xc>
900266a2:	f855 3b04 	ldr.w	r3, [r5], #4
900266a6:	4798      	blx	r3
900266a8:	3601      	adds	r6, #1
900266aa:	e7f2      	b.n	90026692 <__libc_init_array+0x1e>
900266ac:	9002a910 	.word	0x9002a910
900266b0:	9002a910 	.word	0x9002a910
900266b4:	9002a910 	.word	0x9002a910
900266b8:	9002a928 	.word	0x9002a928

900266bc <__retarget_lock_init_recursive>:
900266bc:	4770      	bx	lr

900266be <__retarget_lock_acquire_recursive>:
900266be:	4770      	bx	lr

900266c0 <__retarget_lock_release_recursive>:
900266c0:	4770      	bx	lr

900266c2 <memcpy>:
900266c2:	440a      	add	r2, r1
900266c4:	4291      	cmp	r1, r2
900266c6:	f100 33ff 	add.w	r3, r0, #4294967295
900266ca:	d100      	bne.n	900266ce <memcpy+0xc>
900266cc:	4770      	bx	lr
900266ce:	b510      	push	{r4, lr}
900266d0:	f811 4b01 	ldrb.w	r4, [r1], #1
900266d4:	f803 4f01 	strb.w	r4, [r3, #1]!
900266d8:	4291      	cmp	r1, r2
900266da:	d1f9      	bne.n	900266d0 <memcpy+0xe>
900266dc:	bd10      	pop	{r4, pc}
	...

900266e0 <__register_exitproc>:
900266e0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
900266e4:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 90026798 <__register_exitproc+0xb8>
900266e8:	4606      	mov	r6, r0
900266ea:	f8d8 0000 	ldr.w	r0, [r8]
900266ee:	461f      	mov	r7, r3
900266f0:	460d      	mov	r5, r1
900266f2:	4691      	mov	r9, r2
900266f4:	f7ff ffe3 	bl	900266be <__retarget_lock_acquire_recursive>
900266f8:	4b23      	ldr	r3, [pc, #140]	; (90026788 <__register_exitproc+0xa8>)
900266fa:	681c      	ldr	r4, [r3, #0]
900266fc:	b934      	cbnz	r4, 9002670c <__register_exitproc+0x2c>
900266fe:	4c23      	ldr	r4, [pc, #140]	; (9002678c <__register_exitproc+0xac>)
90026700:	601c      	str	r4, [r3, #0]
90026702:	4b23      	ldr	r3, [pc, #140]	; (90026790 <__register_exitproc+0xb0>)
90026704:	b113      	cbz	r3, 9002670c <__register_exitproc+0x2c>
90026706:	681b      	ldr	r3, [r3, #0]
90026708:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
9002670c:	6863      	ldr	r3, [r4, #4]
9002670e:	2b1f      	cmp	r3, #31
90026710:	dd07      	ble.n	90026722 <__register_exitproc+0x42>
90026712:	f8d8 0000 	ldr.w	r0, [r8]
90026716:	f7ff ffd3 	bl	900266c0 <__retarget_lock_release_recursive>
9002671a:	f04f 30ff 	mov.w	r0, #4294967295
9002671e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
90026722:	b32e      	cbz	r6, 90026770 <__register_exitproc+0x90>
90026724:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
90026728:	b968      	cbnz	r0, 90026746 <__register_exitproc+0x66>
9002672a:	4b1a      	ldr	r3, [pc, #104]	; (90026794 <__register_exitproc+0xb4>)
9002672c:	2b00      	cmp	r3, #0
9002672e:	d0f0      	beq.n	90026712 <__register_exitproc+0x32>
90026730:	f44f 7084 	mov.w	r0, #264	; 0x108
90026734:	f7ff fc30 	bl	90025f98 <malloc>
90026738:	2800      	cmp	r0, #0
9002673a:	d0ea      	beq.n	90026712 <__register_exitproc+0x32>
9002673c:	2300      	movs	r3, #0
9002673e:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
90026742:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
90026746:	6863      	ldr	r3, [r4, #4]
90026748:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
9002674c:	2201      	movs	r2, #1
9002674e:	409a      	lsls	r2, r3
90026750:	eb00 0183 	add.w	r1, r0, r3, lsl #2
90026754:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
90026758:	4313      	orrs	r3, r2
9002675a:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
9002675e:	2e02      	cmp	r6, #2
90026760:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
90026764:	bf02      	ittt	eq
90026766:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
9002676a:	4313      	orreq	r3, r2
9002676c:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
90026770:	6863      	ldr	r3, [r4, #4]
90026772:	f8d8 0000 	ldr.w	r0, [r8]
90026776:	1c5a      	adds	r2, r3, #1
90026778:	3302      	adds	r3, #2
9002677a:	6062      	str	r2, [r4, #4]
9002677c:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
90026780:	f7ff ff9e 	bl	900266c0 <__retarget_lock_release_recursive>
90026784:	2000      	movs	r0, #0
90026786:	e7ca      	b.n	9002671e <__register_exitproc+0x3e>
90026788:	240240a8 	.word	0x240240a8
9002678c:	2402401c 	.word	0x2402401c
90026790:	9002a8c0 	.word	0x9002a8c0
90026794:	90025f99 	.word	0x90025f99
90026798:	24000150 	.word	0x24000150

9002679c <_free_r>:
9002679c:	b537      	push	{r0, r1, r2, r4, r5, lr}
9002679e:	2900      	cmp	r1, #0
900267a0:	d044      	beq.n	9002682c <_free_r+0x90>
900267a2:	f851 3c04 	ldr.w	r3, [r1, #-4]
900267a6:	9001      	str	r0, [sp, #4]
900267a8:	2b00      	cmp	r3, #0
900267aa:	f1a1 0404 	sub.w	r4, r1, #4
900267ae:	bfb8      	it	lt
900267b0:	18e4      	addlt	r4, r4, r3
900267b2:	f7ff fca1 	bl	900260f8 <__malloc_lock>
900267b6:	4a1e      	ldr	r2, [pc, #120]	; (90026830 <_free_r+0x94>)
900267b8:	9801      	ldr	r0, [sp, #4]
900267ba:	6813      	ldr	r3, [r2, #0]
900267bc:	b933      	cbnz	r3, 900267cc <_free_r+0x30>
900267be:	6063      	str	r3, [r4, #4]
900267c0:	6014      	str	r4, [r2, #0]
900267c2:	b003      	add	sp, #12
900267c4:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
900267c8:	f7ff bc9c 	b.w	90026104 <__malloc_unlock>
900267cc:	42a3      	cmp	r3, r4
900267ce:	d908      	bls.n	900267e2 <_free_r+0x46>
900267d0:	6825      	ldr	r5, [r4, #0]
900267d2:	1961      	adds	r1, r4, r5
900267d4:	428b      	cmp	r3, r1
900267d6:	bf01      	itttt	eq
900267d8:	6819      	ldreq	r1, [r3, #0]
900267da:	685b      	ldreq	r3, [r3, #4]
900267dc:	1949      	addeq	r1, r1, r5
900267de:	6021      	streq	r1, [r4, #0]
900267e0:	e7ed      	b.n	900267be <_free_r+0x22>
900267e2:	461a      	mov	r2, r3
900267e4:	685b      	ldr	r3, [r3, #4]
900267e6:	b10b      	cbz	r3, 900267ec <_free_r+0x50>
900267e8:	42a3      	cmp	r3, r4
900267ea:	d9fa      	bls.n	900267e2 <_free_r+0x46>
900267ec:	6811      	ldr	r1, [r2, #0]
900267ee:	1855      	adds	r5, r2, r1
900267f0:	42a5      	cmp	r5, r4
900267f2:	d10b      	bne.n	9002680c <_free_r+0x70>
900267f4:	6824      	ldr	r4, [r4, #0]
900267f6:	4421      	add	r1, r4
900267f8:	1854      	adds	r4, r2, r1
900267fa:	42a3      	cmp	r3, r4
900267fc:	6011      	str	r1, [r2, #0]
900267fe:	d1e0      	bne.n	900267c2 <_free_r+0x26>
90026800:	681c      	ldr	r4, [r3, #0]
90026802:	685b      	ldr	r3, [r3, #4]
90026804:	6053      	str	r3, [r2, #4]
90026806:	440c      	add	r4, r1
90026808:	6014      	str	r4, [r2, #0]
9002680a:	e7da      	b.n	900267c2 <_free_r+0x26>
9002680c:	d902      	bls.n	90026814 <_free_r+0x78>
9002680e:	230c      	movs	r3, #12
90026810:	6003      	str	r3, [r0, #0]
90026812:	e7d6      	b.n	900267c2 <_free_r+0x26>
90026814:	6825      	ldr	r5, [r4, #0]
90026816:	1961      	adds	r1, r4, r5
90026818:	428b      	cmp	r3, r1
9002681a:	bf04      	itt	eq
9002681c:	6819      	ldreq	r1, [r3, #0]
9002681e:	685b      	ldreq	r3, [r3, #4]
90026820:	6063      	str	r3, [r4, #4]
90026822:	bf04      	itt	eq
90026824:	1949      	addeq	r1, r1, r5
90026826:	6021      	streq	r1, [r4, #0]
90026828:	6054      	str	r4, [r2, #4]
9002682a:	e7ca      	b.n	900267c2 <_free_r+0x26>
9002682c:	b003      	add	sp, #12
9002682e:	bd30      	pop	{r4, r5, pc}
90026830:	24023ed0 	.word	0x24023ed0

90026834 <__sfputc_r>:
90026834:	6893      	ldr	r3, [r2, #8]
90026836:	3b01      	subs	r3, #1
90026838:	2b00      	cmp	r3, #0
9002683a:	b410      	push	{r4}
9002683c:	6093      	str	r3, [r2, #8]
9002683e:	da08      	bge.n	90026852 <__sfputc_r+0x1e>
90026840:	6994      	ldr	r4, [r2, #24]
90026842:	42a3      	cmp	r3, r4
90026844:	db01      	blt.n	9002684a <__sfputc_r+0x16>
90026846:	290a      	cmp	r1, #10
90026848:	d103      	bne.n	90026852 <__sfputc_r+0x1e>
9002684a:	f85d 4b04 	ldr.w	r4, [sp], #4
9002684e:	f7ff bdc2 	b.w	900263d6 <__swbuf_r>
90026852:	6813      	ldr	r3, [r2, #0]
90026854:	1c58      	adds	r0, r3, #1
90026856:	6010      	str	r0, [r2, #0]
90026858:	7019      	strb	r1, [r3, #0]
9002685a:	4608      	mov	r0, r1
9002685c:	f85d 4b04 	ldr.w	r4, [sp], #4
90026860:	4770      	bx	lr

90026862 <__sfputs_r>:
90026862:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90026864:	4606      	mov	r6, r0
90026866:	460f      	mov	r7, r1
90026868:	4614      	mov	r4, r2
9002686a:	18d5      	adds	r5, r2, r3
9002686c:	42ac      	cmp	r4, r5
9002686e:	d101      	bne.n	90026874 <__sfputs_r+0x12>
90026870:	2000      	movs	r0, #0
90026872:	e007      	b.n	90026884 <__sfputs_r+0x22>
90026874:	f814 1b01 	ldrb.w	r1, [r4], #1
90026878:	463a      	mov	r2, r7
9002687a:	4630      	mov	r0, r6
9002687c:	f7ff ffda 	bl	90026834 <__sfputc_r>
90026880:	1c43      	adds	r3, r0, #1
90026882:	d1f3      	bne.n	9002686c <__sfputs_r+0xa>
90026884:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

90026888 <_vfiprintf_r>:
90026888:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002688c:	460d      	mov	r5, r1
9002688e:	b09d      	sub	sp, #116	; 0x74
90026890:	4614      	mov	r4, r2
90026892:	4698      	mov	r8, r3
90026894:	4606      	mov	r6, r0
90026896:	b118      	cbz	r0, 900268a0 <_vfiprintf_r+0x18>
90026898:	6a03      	ldr	r3, [r0, #32]
9002689a:	b90b      	cbnz	r3, 900268a0 <_vfiprintf_r+0x18>
9002689c:	f7ff fd10 	bl	900262c0 <__sinit>
900268a0:	6e6b      	ldr	r3, [r5, #100]	; 0x64
900268a2:	07d9      	lsls	r1, r3, #31
900268a4:	d405      	bmi.n	900268b2 <_vfiprintf_r+0x2a>
900268a6:	89ab      	ldrh	r3, [r5, #12]
900268a8:	059a      	lsls	r2, r3, #22
900268aa:	d402      	bmi.n	900268b2 <_vfiprintf_r+0x2a>
900268ac:	6da8      	ldr	r0, [r5, #88]	; 0x58
900268ae:	f7ff ff06 	bl	900266be <__retarget_lock_acquire_recursive>
900268b2:	89ab      	ldrh	r3, [r5, #12]
900268b4:	071b      	lsls	r3, r3, #28
900268b6:	d501      	bpl.n	900268bc <_vfiprintf_r+0x34>
900268b8:	692b      	ldr	r3, [r5, #16]
900268ba:	b99b      	cbnz	r3, 900268e4 <_vfiprintf_r+0x5c>
900268bc:	4629      	mov	r1, r5
900268be:	4630      	mov	r0, r6
900268c0:	f7ff fdc6 	bl	90026450 <__swsetup_r>
900268c4:	b170      	cbz	r0, 900268e4 <_vfiprintf_r+0x5c>
900268c6:	6e6b      	ldr	r3, [r5, #100]	; 0x64
900268c8:	07dc      	lsls	r4, r3, #31
900268ca:	d504      	bpl.n	900268d6 <_vfiprintf_r+0x4e>
900268cc:	f04f 30ff 	mov.w	r0, #4294967295
900268d0:	b01d      	add	sp, #116	; 0x74
900268d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900268d6:	89ab      	ldrh	r3, [r5, #12]
900268d8:	0598      	lsls	r0, r3, #22
900268da:	d4f7      	bmi.n	900268cc <_vfiprintf_r+0x44>
900268dc:	6da8      	ldr	r0, [r5, #88]	; 0x58
900268de:	f7ff feef 	bl	900266c0 <__retarget_lock_release_recursive>
900268e2:	e7f3      	b.n	900268cc <_vfiprintf_r+0x44>
900268e4:	2300      	movs	r3, #0
900268e6:	9309      	str	r3, [sp, #36]	; 0x24
900268e8:	2320      	movs	r3, #32
900268ea:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
900268ee:	f8cd 800c 	str.w	r8, [sp, #12]
900268f2:	2330      	movs	r3, #48	; 0x30
900268f4:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 90026aa8 <_vfiprintf_r+0x220>
900268f8:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
900268fc:	f04f 0901 	mov.w	r9, #1
90026900:	4623      	mov	r3, r4
90026902:	469a      	mov	sl, r3
90026904:	f813 2b01 	ldrb.w	r2, [r3], #1
90026908:	b10a      	cbz	r2, 9002690e <_vfiprintf_r+0x86>
9002690a:	2a25      	cmp	r2, #37	; 0x25
9002690c:	d1f9      	bne.n	90026902 <_vfiprintf_r+0x7a>
9002690e:	ebba 0b04 	subs.w	fp, sl, r4
90026912:	d00b      	beq.n	9002692c <_vfiprintf_r+0xa4>
90026914:	465b      	mov	r3, fp
90026916:	4622      	mov	r2, r4
90026918:	4629      	mov	r1, r5
9002691a:	4630      	mov	r0, r6
9002691c:	f7ff ffa1 	bl	90026862 <__sfputs_r>
90026920:	3001      	adds	r0, #1
90026922:	f000 80a9 	beq.w	90026a78 <_vfiprintf_r+0x1f0>
90026926:	9a09      	ldr	r2, [sp, #36]	; 0x24
90026928:	445a      	add	r2, fp
9002692a:	9209      	str	r2, [sp, #36]	; 0x24
9002692c:	f89a 3000 	ldrb.w	r3, [sl]
90026930:	2b00      	cmp	r3, #0
90026932:	f000 80a1 	beq.w	90026a78 <_vfiprintf_r+0x1f0>
90026936:	2300      	movs	r3, #0
90026938:	f04f 32ff 	mov.w	r2, #4294967295
9002693c:	e9cd 2305 	strd	r2, r3, [sp, #20]
90026940:	f10a 0a01 	add.w	sl, sl, #1
90026944:	9304      	str	r3, [sp, #16]
90026946:	9307      	str	r3, [sp, #28]
90026948:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
9002694c:	931a      	str	r3, [sp, #104]	; 0x68
9002694e:	4654      	mov	r4, sl
90026950:	2205      	movs	r2, #5
90026952:	f814 1b01 	ldrb.w	r1, [r4], #1
90026956:	4854      	ldr	r0, [pc, #336]	; (90026aa8 <_vfiprintf_r+0x220>)
90026958:	f7d9 fcc2 	bl	900002e0 <memchr>
9002695c:	9a04      	ldr	r2, [sp, #16]
9002695e:	b9d8      	cbnz	r0, 90026998 <_vfiprintf_r+0x110>
90026960:	06d1      	lsls	r1, r2, #27
90026962:	bf44      	itt	mi
90026964:	2320      	movmi	r3, #32
90026966:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
9002696a:	0713      	lsls	r3, r2, #28
9002696c:	bf44      	itt	mi
9002696e:	232b      	movmi	r3, #43	; 0x2b
90026970:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
90026974:	f89a 3000 	ldrb.w	r3, [sl]
90026978:	2b2a      	cmp	r3, #42	; 0x2a
9002697a:	d015      	beq.n	900269a8 <_vfiprintf_r+0x120>
9002697c:	9a07      	ldr	r2, [sp, #28]
9002697e:	4654      	mov	r4, sl
90026980:	2000      	movs	r0, #0
90026982:	f04f 0c0a 	mov.w	ip, #10
90026986:	4621      	mov	r1, r4
90026988:	f811 3b01 	ldrb.w	r3, [r1], #1
9002698c:	3b30      	subs	r3, #48	; 0x30
9002698e:	2b09      	cmp	r3, #9
90026990:	d94d      	bls.n	90026a2e <_vfiprintf_r+0x1a6>
90026992:	b1b0      	cbz	r0, 900269c2 <_vfiprintf_r+0x13a>
90026994:	9207      	str	r2, [sp, #28]
90026996:	e014      	b.n	900269c2 <_vfiprintf_r+0x13a>
90026998:	eba0 0308 	sub.w	r3, r0, r8
9002699c:	fa09 f303 	lsl.w	r3, r9, r3
900269a0:	4313      	orrs	r3, r2
900269a2:	9304      	str	r3, [sp, #16]
900269a4:	46a2      	mov	sl, r4
900269a6:	e7d2      	b.n	9002694e <_vfiprintf_r+0xc6>
900269a8:	9b03      	ldr	r3, [sp, #12]
900269aa:	1d19      	adds	r1, r3, #4
900269ac:	681b      	ldr	r3, [r3, #0]
900269ae:	9103      	str	r1, [sp, #12]
900269b0:	2b00      	cmp	r3, #0
900269b2:	bfbb      	ittet	lt
900269b4:	425b      	neglt	r3, r3
900269b6:	f042 0202 	orrlt.w	r2, r2, #2
900269ba:	9307      	strge	r3, [sp, #28]
900269bc:	9307      	strlt	r3, [sp, #28]
900269be:	bfb8      	it	lt
900269c0:	9204      	strlt	r2, [sp, #16]
900269c2:	7823      	ldrb	r3, [r4, #0]
900269c4:	2b2e      	cmp	r3, #46	; 0x2e
900269c6:	d10c      	bne.n	900269e2 <_vfiprintf_r+0x15a>
900269c8:	7863      	ldrb	r3, [r4, #1]
900269ca:	2b2a      	cmp	r3, #42	; 0x2a
900269cc:	d134      	bne.n	90026a38 <_vfiprintf_r+0x1b0>
900269ce:	9b03      	ldr	r3, [sp, #12]
900269d0:	1d1a      	adds	r2, r3, #4
900269d2:	681b      	ldr	r3, [r3, #0]
900269d4:	9203      	str	r2, [sp, #12]
900269d6:	2b00      	cmp	r3, #0
900269d8:	bfb8      	it	lt
900269da:	f04f 33ff 	movlt.w	r3, #4294967295
900269de:	3402      	adds	r4, #2
900269e0:	9305      	str	r3, [sp, #20]
900269e2:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 90026ab8 <_vfiprintf_r+0x230>
900269e6:	7821      	ldrb	r1, [r4, #0]
900269e8:	2203      	movs	r2, #3
900269ea:	4650      	mov	r0, sl
900269ec:	f7d9 fc78 	bl	900002e0 <memchr>
900269f0:	b138      	cbz	r0, 90026a02 <_vfiprintf_r+0x17a>
900269f2:	9b04      	ldr	r3, [sp, #16]
900269f4:	eba0 000a 	sub.w	r0, r0, sl
900269f8:	2240      	movs	r2, #64	; 0x40
900269fa:	4082      	lsls	r2, r0
900269fc:	4313      	orrs	r3, r2
900269fe:	3401      	adds	r4, #1
90026a00:	9304      	str	r3, [sp, #16]
90026a02:	f814 1b01 	ldrb.w	r1, [r4], #1
90026a06:	4829      	ldr	r0, [pc, #164]	; (90026aac <_vfiprintf_r+0x224>)
90026a08:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
90026a0c:	2206      	movs	r2, #6
90026a0e:	f7d9 fc67 	bl	900002e0 <memchr>
90026a12:	2800      	cmp	r0, #0
90026a14:	d03f      	beq.n	90026a96 <_vfiprintf_r+0x20e>
90026a16:	4b26      	ldr	r3, [pc, #152]	; (90026ab0 <_vfiprintf_r+0x228>)
90026a18:	bb1b      	cbnz	r3, 90026a62 <_vfiprintf_r+0x1da>
90026a1a:	9b03      	ldr	r3, [sp, #12]
90026a1c:	3307      	adds	r3, #7
90026a1e:	f023 0307 	bic.w	r3, r3, #7
90026a22:	3308      	adds	r3, #8
90026a24:	9303      	str	r3, [sp, #12]
90026a26:	9b09      	ldr	r3, [sp, #36]	; 0x24
90026a28:	443b      	add	r3, r7
90026a2a:	9309      	str	r3, [sp, #36]	; 0x24
90026a2c:	e768      	b.n	90026900 <_vfiprintf_r+0x78>
90026a2e:	fb0c 3202 	mla	r2, ip, r2, r3
90026a32:	460c      	mov	r4, r1
90026a34:	2001      	movs	r0, #1
90026a36:	e7a6      	b.n	90026986 <_vfiprintf_r+0xfe>
90026a38:	2300      	movs	r3, #0
90026a3a:	3401      	adds	r4, #1
90026a3c:	9305      	str	r3, [sp, #20]
90026a3e:	4619      	mov	r1, r3
90026a40:	f04f 0c0a 	mov.w	ip, #10
90026a44:	4620      	mov	r0, r4
90026a46:	f810 2b01 	ldrb.w	r2, [r0], #1
90026a4a:	3a30      	subs	r2, #48	; 0x30
90026a4c:	2a09      	cmp	r2, #9
90026a4e:	d903      	bls.n	90026a58 <_vfiprintf_r+0x1d0>
90026a50:	2b00      	cmp	r3, #0
90026a52:	d0c6      	beq.n	900269e2 <_vfiprintf_r+0x15a>
90026a54:	9105      	str	r1, [sp, #20]
90026a56:	e7c4      	b.n	900269e2 <_vfiprintf_r+0x15a>
90026a58:	fb0c 2101 	mla	r1, ip, r1, r2
90026a5c:	4604      	mov	r4, r0
90026a5e:	2301      	movs	r3, #1
90026a60:	e7f0      	b.n	90026a44 <_vfiprintf_r+0x1bc>
90026a62:	ab03      	add	r3, sp, #12
90026a64:	9300      	str	r3, [sp, #0]
90026a66:	462a      	mov	r2, r5
90026a68:	4b12      	ldr	r3, [pc, #72]	; (90026ab4 <_vfiprintf_r+0x22c>)
90026a6a:	a904      	add	r1, sp, #16
90026a6c:	4630      	mov	r0, r6
90026a6e:	f3af 8000 	nop.w
90026a72:	4607      	mov	r7, r0
90026a74:	1c78      	adds	r0, r7, #1
90026a76:	d1d6      	bne.n	90026a26 <_vfiprintf_r+0x19e>
90026a78:	6e6b      	ldr	r3, [r5, #100]	; 0x64
90026a7a:	07d9      	lsls	r1, r3, #31
90026a7c:	d405      	bmi.n	90026a8a <_vfiprintf_r+0x202>
90026a7e:	89ab      	ldrh	r3, [r5, #12]
90026a80:	059a      	lsls	r2, r3, #22
90026a82:	d402      	bmi.n	90026a8a <_vfiprintf_r+0x202>
90026a84:	6da8      	ldr	r0, [r5, #88]	; 0x58
90026a86:	f7ff fe1b 	bl	900266c0 <__retarget_lock_release_recursive>
90026a8a:	89ab      	ldrh	r3, [r5, #12]
90026a8c:	065b      	lsls	r3, r3, #25
90026a8e:	f53f af1d 	bmi.w	900268cc <_vfiprintf_r+0x44>
90026a92:	9809      	ldr	r0, [sp, #36]	; 0x24
90026a94:	e71c      	b.n	900268d0 <_vfiprintf_r+0x48>
90026a96:	ab03      	add	r3, sp, #12
90026a98:	9300      	str	r3, [sp, #0]
90026a9a:	462a      	mov	r2, r5
90026a9c:	4b05      	ldr	r3, [pc, #20]	; (90026ab4 <_vfiprintf_r+0x22c>)
90026a9e:	a904      	add	r1, sp, #16
90026aa0:	4630      	mov	r0, r6
90026aa2:	f000 f879 	bl	90026b98 <_printf_i>
90026aa6:	e7e4      	b.n	90026a72 <_vfiprintf_r+0x1ea>
90026aa8:	9002a8c4 	.word	0x9002a8c4
90026aac:	9002a8ce 	.word	0x9002a8ce
90026ab0:	00000000 	.word	0x00000000
90026ab4:	90026863 	.word	0x90026863
90026ab8:	9002a8ca 	.word	0x9002a8ca

90026abc <_printf_common>:
90026abc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90026ac0:	4616      	mov	r6, r2
90026ac2:	4699      	mov	r9, r3
90026ac4:	688a      	ldr	r2, [r1, #8]
90026ac6:	690b      	ldr	r3, [r1, #16]
90026ac8:	f8dd 8020 	ldr.w	r8, [sp, #32]
90026acc:	4293      	cmp	r3, r2
90026ace:	bfb8      	it	lt
90026ad0:	4613      	movlt	r3, r2
90026ad2:	6033      	str	r3, [r6, #0]
90026ad4:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
90026ad8:	4607      	mov	r7, r0
90026ada:	460c      	mov	r4, r1
90026adc:	b10a      	cbz	r2, 90026ae2 <_printf_common+0x26>
90026ade:	3301      	adds	r3, #1
90026ae0:	6033      	str	r3, [r6, #0]
90026ae2:	6823      	ldr	r3, [r4, #0]
90026ae4:	0699      	lsls	r1, r3, #26
90026ae6:	bf42      	ittt	mi
90026ae8:	6833      	ldrmi	r3, [r6, #0]
90026aea:	3302      	addmi	r3, #2
90026aec:	6033      	strmi	r3, [r6, #0]
90026aee:	6825      	ldr	r5, [r4, #0]
90026af0:	f015 0506 	ands.w	r5, r5, #6
90026af4:	d106      	bne.n	90026b04 <_printf_common+0x48>
90026af6:	f104 0a19 	add.w	sl, r4, #25
90026afa:	68e3      	ldr	r3, [r4, #12]
90026afc:	6832      	ldr	r2, [r6, #0]
90026afe:	1a9b      	subs	r3, r3, r2
90026b00:	42ab      	cmp	r3, r5
90026b02:	dc26      	bgt.n	90026b52 <_printf_common+0x96>
90026b04:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
90026b08:	1e13      	subs	r3, r2, #0
90026b0a:	6822      	ldr	r2, [r4, #0]
90026b0c:	bf18      	it	ne
90026b0e:	2301      	movne	r3, #1
90026b10:	0692      	lsls	r2, r2, #26
90026b12:	d42b      	bmi.n	90026b6c <_printf_common+0xb0>
90026b14:	f104 0243 	add.w	r2, r4, #67	; 0x43
90026b18:	4649      	mov	r1, r9
90026b1a:	4638      	mov	r0, r7
90026b1c:	47c0      	blx	r8
90026b1e:	3001      	adds	r0, #1
90026b20:	d01e      	beq.n	90026b60 <_printf_common+0xa4>
90026b22:	6823      	ldr	r3, [r4, #0]
90026b24:	6922      	ldr	r2, [r4, #16]
90026b26:	f003 0306 	and.w	r3, r3, #6
90026b2a:	2b04      	cmp	r3, #4
90026b2c:	bf02      	ittt	eq
90026b2e:	68e5      	ldreq	r5, [r4, #12]
90026b30:	6833      	ldreq	r3, [r6, #0]
90026b32:	1aed      	subeq	r5, r5, r3
90026b34:	68a3      	ldr	r3, [r4, #8]
90026b36:	bf0c      	ite	eq
90026b38:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
90026b3c:	2500      	movne	r5, #0
90026b3e:	4293      	cmp	r3, r2
90026b40:	bfc4      	itt	gt
90026b42:	1a9b      	subgt	r3, r3, r2
90026b44:	18ed      	addgt	r5, r5, r3
90026b46:	2600      	movs	r6, #0
90026b48:	341a      	adds	r4, #26
90026b4a:	42b5      	cmp	r5, r6
90026b4c:	d11a      	bne.n	90026b84 <_printf_common+0xc8>
90026b4e:	2000      	movs	r0, #0
90026b50:	e008      	b.n	90026b64 <_printf_common+0xa8>
90026b52:	2301      	movs	r3, #1
90026b54:	4652      	mov	r2, sl
90026b56:	4649      	mov	r1, r9
90026b58:	4638      	mov	r0, r7
90026b5a:	47c0      	blx	r8
90026b5c:	3001      	adds	r0, #1
90026b5e:	d103      	bne.n	90026b68 <_printf_common+0xac>
90026b60:	f04f 30ff 	mov.w	r0, #4294967295
90026b64:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90026b68:	3501      	adds	r5, #1
90026b6a:	e7c6      	b.n	90026afa <_printf_common+0x3e>
90026b6c:	18e1      	adds	r1, r4, r3
90026b6e:	1c5a      	adds	r2, r3, #1
90026b70:	2030      	movs	r0, #48	; 0x30
90026b72:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
90026b76:	4422      	add	r2, r4
90026b78:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
90026b7c:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
90026b80:	3302      	adds	r3, #2
90026b82:	e7c7      	b.n	90026b14 <_printf_common+0x58>
90026b84:	2301      	movs	r3, #1
90026b86:	4622      	mov	r2, r4
90026b88:	4649      	mov	r1, r9
90026b8a:	4638      	mov	r0, r7
90026b8c:	47c0      	blx	r8
90026b8e:	3001      	adds	r0, #1
90026b90:	d0e6      	beq.n	90026b60 <_printf_common+0xa4>
90026b92:	3601      	adds	r6, #1
90026b94:	e7d9      	b.n	90026b4a <_printf_common+0x8e>
	...

90026b98 <_printf_i>:
90026b98:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
90026b9c:	7e0f      	ldrb	r7, [r1, #24]
90026b9e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
90026ba0:	2f78      	cmp	r7, #120	; 0x78
90026ba2:	4691      	mov	r9, r2
90026ba4:	4680      	mov	r8, r0
90026ba6:	460c      	mov	r4, r1
90026ba8:	469a      	mov	sl, r3
90026baa:	f101 0243 	add.w	r2, r1, #67	; 0x43
90026bae:	d807      	bhi.n	90026bc0 <_printf_i+0x28>
90026bb0:	2f62      	cmp	r7, #98	; 0x62
90026bb2:	d80a      	bhi.n	90026bca <_printf_i+0x32>
90026bb4:	2f00      	cmp	r7, #0
90026bb6:	f000 80d4 	beq.w	90026d62 <_printf_i+0x1ca>
90026bba:	2f58      	cmp	r7, #88	; 0x58
90026bbc:	f000 80c0 	beq.w	90026d40 <_printf_i+0x1a8>
90026bc0:	f104 0542 	add.w	r5, r4, #66	; 0x42
90026bc4:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
90026bc8:	e03a      	b.n	90026c40 <_printf_i+0xa8>
90026bca:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
90026bce:	2b15      	cmp	r3, #21
90026bd0:	d8f6      	bhi.n	90026bc0 <_printf_i+0x28>
90026bd2:	a101      	add	r1, pc, #4	; (adr r1, 90026bd8 <_printf_i+0x40>)
90026bd4:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
90026bd8:	90026c31 	.word	0x90026c31
90026bdc:	90026c45 	.word	0x90026c45
90026be0:	90026bc1 	.word	0x90026bc1
90026be4:	90026bc1 	.word	0x90026bc1
90026be8:	90026bc1 	.word	0x90026bc1
90026bec:	90026bc1 	.word	0x90026bc1
90026bf0:	90026c45 	.word	0x90026c45
90026bf4:	90026bc1 	.word	0x90026bc1
90026bf8:	90026bc1 	.word	0x90026bc1
90026bfc:	90026bc1 	.word	0x90026bc1
90026c00:	90026bc1 	.word	0x90026bc1
90026c04:	90026d49 	.word	0x90026d49
90026c08:	90026c71 	.word	0x90026c71
90026c0c:	90026d03 	.word	0x90026d03
90026c10:	90026bc1 	.word	0x90026bc1
90026c14:	90026bc1 	.word	0x90026bc1
90026c18:	90026d6b 	.word	0x90026d6b
90026c1c:	90026bc1 	.word	0x90026bc1
90026c20:	90026c71 	.word	0x90026c71
90026c24:	90026bc1 	.word	0x90026bc1
90026c28:	90026bc1 	.word	0x90026bc1
90026c2c:	90026d0b 	.word	0x90026d0b
90026c30:	682b      	ldr	r3, [r5, #0]
90026c32:	1d1a      	adds	r2, r3, #4
90026c34:	681b      	ldr	r3, [r3, #0]
90026c36:	602a      	str	r2, [r5, #0]
90026c38:	f104 0542 	add.w	r5, r4, #66	; 0x42
90026c3c:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
90026c40:	2301      	movs	r3, #1
90026c42:	e09f      	b.n	90026d84 <_printf_i+0x1ec>
90026c44:	6820      	ldr	r0, [r4, #0]
90026c46:	682b      	ldr	r3, [r5, #0]
90026c48:	0607      	lsls	r7, r0, #24
90026c4a:	f103 0104 	add.w	r1, r3, #4
90026c4e:	6029      	str	r1, [r5, #0]
90026c50:	d501      	bpl.n	90026c56 <_printf_i+0xbe>
90026c52:	681e      	ldr	r6, [r3, #0]
90026c54:	e003      	b.n	90026c5e <_printf_i+0xc6>
90026c56:	0646      	lsls	r6, r0, #25
90026c58:	d5fb      	bpl.n	90026c52 <_printf_i+0xba>
90026c5a:	f9b3 6000 	ldrsh.w	r6, [r3]
90026c5e:	2e00      	cmp	r6, #0
90026c60:	da03      	bge.n	90026c6a <_printf_i+0xd2>
90026c62:	232d      	movs	r3, #45	; 0x2d
90026c64:	4276      	negs	r6, r6
90026c66:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
90026c6a:	485a      	ldr	r0, [pc, #360]	; (90026dd4 <_printf_i+0x23c>)
90026c6c:	230a      	movs	r3, #10
90026c6e:	e012      	b.n	90026c96 <_printf_i+0xfe>
90026c70:	682b      	ldr	r3, [r5, #0]
90026c72:	6820      	ldr	r0, [r4, #0]
90026c74:	1d19      	adds	r1, r3, #4
90026c76:	6029      	str	r1, [r5, #0]
90026c78:	0605      	lsls	r5, r0, #24
90026c7a:	d501      	bpl.n	90026c80 <_printf_i+0xe8>
90026c7c:	681e      	ldr	r6, [r3, #0]
90026c7e:	e002      	b.n	90026c86 <_printf_i+0xee>
90026c80:	0641      	lsls	r1, r0, #25
90026c82:	d5fb      	bpl.n	90026c7c <_printf_i+0xe4>
90026c84:	881e      	ldrh	r6, [r3, #0]
90026c86:	4853      	ldr	r0, [pc, #332]	; (90026dd4 <_printf_i+0x23c>)
90026c88:	2f6f      	cmp	r7, #111	; 0x6f
90026c8a:	bf0c      	ite	eq
90026c8c:	2308      	moveq	r3, #8
90026c8e:	230a      	movne	r3, #10
90026c90:	2100      	movs	r1, #0
90026c92:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
90026c96:	6865      	ldr	r5, [r4, #4]
90026c98:	60a5      	str	r5, [r4, #8]
90026c9a:	2d00      	cmp	r5, #0
90026c9c:	bfa2      	ittt	ge
90026c9e:	6821      	ldrge	r1, [r4, #0]
90026ca0:	f021 0104 	bicge.w	r1, r1, #4
90026ca4:	6021      	strge	r1, [r4, #0]
90026ca6:	b90e      	cbnz	r6, 90026cac <_printf_i+0x114>
90026ca8:	2d00      	cmp	r5, #0
90026caa:	d04b      	beq.n	90026d44 <_printf_i+0x1ac>
90026cac:	4615      	mov	r5, r2
90026cae:	fbb6 f1f3 	udiv	r1, r6, r3
90026cb2:	fb03 6711 	mls	r7, r3, r1, r6
90026cb6:	5dc7      	ldrb	r7, [r0, r7]
90026cb8:	f805 7d01 	strb.w	r7, [r5, #-1]!
90026cbc:	4637      	mov	r7, r6
90026cbe:	42bb      	cmp	r3, r7
90026cc0:	460e      	mov	r6, r1
90026cc2:	d9f4      	bls.n	90026cae <_printf_i+0x116>
90026cc4:	2b08      	cmp	r3, #8
90026cc6:	d10b      	bne.n	90026ce0 <_printf_i+0x148>
90026cc8:	6823      	ldr	r3, [r4, #0]
90026cca:	07de      	lsls	r6, r3, #31
90026ccc:	d508      	bpl.n	90026ce0 <_printf_i+0x148>
90026cce:	6923      	ldr	r3, [r4, #16]
90026cd0:	6861      	ldr	r1, [r4, #4]
90026cd2:	4299      	cmp	r1, r3
90026cd4:	bfde      	ittt	le
90026cd6:	2330      	movle	r3, #48	; 0x30
90026cd8:	f805 3c01 	strble.w	r3, [r5, #-1]
90026cdc:	f105 35ff 	addle.w	r5, r5, #4294967295
90026ce0:	1b52      	subs	r2, r2, r5
90026ce2:	6122      	str	r2, [r4, #16]
90026ce4:	f8cd a000 	str.w	sl, [sp]
90026ce8:	464b      	mov	r3, r9
90026cea:	aa03      	add	r2, sp, #12
90026cec:	4621      	mov	r1, r4
90026cee:	4640      	mov	r0, r8
90026cf0:	f7ff fee4 	bl	90026abc <_printf_common>
90026cf4:	3001      	adds	r0, #1
90026cf6:	d14a      	bne.n	90026d8e <_printf_i+0x1f6>
90026cf8:	f04f 30ff 	mov.w	r0, #4294967295
90026cfc:	b004      	add	sp, #16
90026cfe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90026d02:	6823      	ldr	r3, [r4, #0]
90026d04:	f043 0320 	orr.w	r3, r3, #32
90026d08:	6023      	str	r3, [r4, #0]
90026d0a:	4833      	ldr	r0, [pc, #204]	; (90026dd8 <_printf_i+0x240>)
90026d0c:	2778      	movs	r7, #120	; 0x78
90026d0e:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
90026d12:	6823      	ldr	r3, [r4, #0]
90026d14:	6829      	ldr	r1, [r5, #0]
90026d16:	061f      	lsls	r7, r3, #24
90026d18:	f851 6b04 	ldr.w	r6, [r1], #4
90026d1c:	d402      	bmi.n	90026d24 <_printf_i+0x18c>
90026d1e:	065f      	lsls	r7, r3, #25
90026d20:	bf48      	it	mi
90026d22:	b2b6      	uxthmi	r6, r6
90026d24:	07df      	lsls	r7, r3, #31
90026d26:	bf48      	it	mi
90026d28:	f043 0320 	orrmi.w	r3, r3, #32
90026d2c:	6029      	str	r1, [r5, #0]
90026d2e:	bf48      	it	mi
90026d30:	6023      	strmi	r3, [r4, #0]
90026d32:	b91e      	cbnz	r6, 90026d3c <_printf_i+0x1a4>
90026d34:	6823      	ldr	r3, [r4, #0]
90026d36:	f023 0320 	bic.w	r3, r3, #32
90026d3a:	6023      	str	r3, [r4, #0]
90026d3c:	2310      	movs	r3, #16
90026d3e:	e7a7      	b.n	90026c90 <_printf_i+0xf8>
90026d40:	4824      	ldr	r0, [pc, #144]	; (90026dd4 <_printf_i+0x23c>)
90026d42:	e7e4      	b.n	90026d0e <_printf_i+0x176>
90026d44:	4615      	mov	r5, r2
90026d46:	e7bd      	b.n	90026cc4 <_printf_i+0x12c>
90026d48:	682b      	ldr	r3, [r5, #0]
90026d4a:	6826      	ldr	r6, [r4, #0]
90026d4c:	6961      	ldr	r1, [r4, #20]
90026d4e:	1d18      	adds	r0, r3, #4
90026d50:	6028      	str	r0, [r5, #0]
90026d52:	0635      	lsls	r5, r6, #24
90026d54:	681b      	ldr	r3, [r3, #0]
90026d56:	d501      	bpl.n	90026d5c <_printf_i+0x1c4>
90026d58:	6019      	str	r1, [r3, #0]
90026d5a:	e002      	b.n	90026d62 <_printf_i+0x1ca>
90026d5c:	0670      	lsls	r0, r6, #25
90026d5e:	d5fb      	bpl.n	90026d58 <_printf_i+0x1c0>
90026d60:	8019      	strh	r1, [r3, #0]
90026d62:	2300      	movs	r3, #0
90026d64:	6123      	str	r3, [r4, #16]
90026d66:	4615      	mov	r5, r2
90026d68:	e7bc      	b.n	90026ce4 <_printf_i+0x14c>
90026d6a:	682b      	ldr	r3, [r5, #0]
90026d6c:	1d1a      	adds	r2, r3, #4
90026d6e:	602a      	str	r2, [r5, #0]
90026d70:	681d      	ldr	r5, [r3, #0]
90026d72:	6862      	ldr	r2, [r4, #4]
90026d74:	2100      	movs	r1, #0
90026d76:	4628      	mov	r0, r5
90026d78:	f7d9 fab2 	bl	900002e0 <memchr>
90026d7c:	b108      	cbz	r0, 90026d82 <_printf_i+0x1ea>
90026d7e:	1b40      	subs	r0, r0, r5
90026d80:	6060      	str	r0, [r4, #4]
90026d82:	6863      	ldr	r3, [r4, #4]
90026d84:	6123      	str	r3, [r4, #16]
90026d86:	2300      	movs	r3, #0
90026d88:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
90026d8c:	e7aa      	b.n	90026ce4 <_printf_i+0x14c>
90026d8e:	6923      	ldr	r3, [r4, #16]
90026d90:	462a      	mov	r2, r5
90026d92:	4649      	mov	r1, r9
90026d94:	4640      	mov	r0, r8
90026d96:	47d0      	blx	sl
90026d98:	3001      	adds	r0, #1
90026d9a:	d0ad      	beq.n	90026cf8 <_printf_i+0x160>
90026d9c:	6823      	ldr	r3, [r4, #0]
90026d9e:	079b      	lsls	r3, r3, #30
90026da0:	d413      	bmi.n	90026dca <_printf_i+0x232>
90026da2:	68e0      	ldr	r0, [r4, #12]
90026da4:	9b03      	ldr	r3, [sp, #12]
90026da6:	4298      	cmp	r0, r3
90026da8:	bfb8      	it	lt
90026daa:	4618      	movlt	r0, r3
90026dac:	e7a6      	b.n	90026cfc <_printf_i+0x164>
90026dae:	2301      	movs	r3, #1
90026db0:	4632      	mov	r2, r6
90026db2:	4649      	mov	r1, r9
90026db4:	4640      	mov	r0, r8
90026db6:	47d0      	blx	sl
90026db8:	3001      	adds	r0, #1
90026dba:	d09d      	beq.n	90026cf8 <_printf_i+0x160>
90026dbc:	3501      	adds	r5, #1
90026dbe:	68e3      	ldr	r3, [r4, #12]
90026dc0:	9903      	ldr	r1, [sp, #12]
90026dc2:	1a5b      	subs	r3, r3, r1
90026dc4:	42ab      	cmp	r3, r5
90026dc6:	dcf2      	bgt.n	90026dae <_printf_i+0x216>
90026dc8:	e7eb      	b.n	90026da2 <_printf_i+0x20a>
90026dca:	2500      	movs	r5, #0
90026dcc:	f104 0619 	add.w	r6, r4, #25
90026dd0:	e7f5      	b.n	90026dbe <_printf_i+0x226>
90026dd2:	bf00      	nop
90026dd4:	9002a8d5 	.word	0x9002a8d5
90026dd8:	9002a8e6 	.word	0x9002a8e6

90026ddc <__sflush_r>:
90026ddc:	898a      	ldrh	r2, [r1, #12]
90026dde:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90026de2:	4605      	mov	r5, r0
90026de4:	0710      	lsls	r0, r2, #28
90026de6:	460c      	mov	r4, r1
90026de8:	d458      	bmi.n	90026e9c <__sflush_r+0xc0>
90026dea:	684b      	ldr	r3, [r1, #4]
90026dec:	2b00      	cmp	r3, #0
90026dee:	dc05      	bgt.n	90026dfc <__sflush_r+0x20>
90026df0:	6c0b      	ldr	r3, [r1, #64]	; 0x40
90026df2:	2b00      	cmp	r3, #0
90026df4:	dc02      	bgt.n	90026dfc <__sflush_r+0x20>
90026df6:	2000      	movs	r0, #0
90026df8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90026dfc:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
90026dfe:	2e00      	cmp	r6, #0
90026e00:	d0f9      	beq.n	90026df6 <__sflush_r+0x1a>
90026e02:	2300      	movs	r3, #0
90026e04:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
90026e08:	682f      	ldr	r7, [r5, #0]
90026e0a:	6a21      	ldr	r1, [r4, #32]
90026e0c:	602b      	str	r3, [r5, #0]
90026e0e:	d032      	beq.n	90026e76 <__sflush_r+0x9a>
90026e10:	6d60      	ldr	r0, [r4, #84]	; 0x54
90026e12:	89a3      	ldrh	r3, [r4, #12]
90026e14:	075a      	lsls	r2, r3, #29
90026e16:	d505      	bpl.n	90026e24 <__sflush_r+0x48>
90026e18:	6863      	ldr	r3, [r4, #4]
90026e1a:	1ac0      	subs	r0, r0, r3
90026e1c:	6b63      	ldr	r3, [r4, #52]	; 0x34
90026e1e:	b10b      	cbz	r3, 90026e24 <__sflush_r+0x48>
90026e20:	6c23      	ldr	r3, [r4, #64]	; 0x40
90026e22:	1ac0      	subs	r0, r0, r3
90026e24:	2300      	movs	r3, #0
90026e26:	4602      	mov	r2, r0
90026e28:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
90026e2a:	6a21      	ldr	r1, [r4, #32]
90026e2c:	4628      	mov	r0, r5
90026e2e:	47b0      	blx	r6
90026e30:	1c43      	adds	r3, r0, #1
90026e32:	89a3      	ldrh	r3, [r4, #12]
90026e34:	d106      	bne.n	90026e44 <__sflush_r+0x68>
90026e36:	6829      	ldr	r1, [r5, #0]
90026e38:	291d      	cmp	r1, #29
90026e3a:	d82b      	bhi.n	90026e94 <__sflush_r+0xb8>
90026e3c:	4a29      	ldr	r2, [pc, #164]	; (90026ee4 <__sflush_r+0x108>)
90026e3e:	410a      	asrs	r2, r1
90026e40:	07d6      	lsls	r6, r2, #31
90026e42:	d427      	bmi.n	90026e94 <__sflush_r+0xb8>
90026e44:	2200      	movs	r2, #0
90026e46:	6062      	str	r2, [r4, #4]
90026e48:	04d9      	lsls	r1, r3, #19
90026e4a:	6922      	ldr	r2, [r4, #16]
90026e4c:	6022      	str	r2, [r4, #0]
90026e4e:	d504      	bpl.n	90026e5a <__sflush_r+0x7e>
90026e50:	1c42      	adds	r2, r0, #1
90026e52:	d101      	bne.n	90026e58 <__sflush_r+0x7c>
90026e54:	682b      	ldr	r3, [r5, #0]
90026e56:	b903      	cbnz	r3, 90026e5a <__sflush_r+0x7e>
90026e58:	6560      	str	r0, [r4, #84]	; 0x54
90026e5a:	6b61      	ldr	r1, [r4, #52]	; 0x34
90026e5c:	602f      	str	r7, [r5, #0]
90026e5e:	2900      	cmp	r1, #0
90026e60:	d0c9      	beq.n	90026df6 <__sflush_r+0x1a>
90026e62:	f104 0344 	add.w	r3, r4, #68	; 0x44
90026e66:	4299      	cmp	r1, r3
90026e68:	d002      	beq.n	90026e70 <__sflush_r+0x94>
90026e6a:	4628      	mov	r0, r5
90026e6c:	f7ff fc96 	bl	9002679c <_free_r>
90026e70:	2000      	movs	r0, #0
90026e72:	6360      	str	r0, [r4, #52]	; 0x34
90026e74:	e7c0      	b.n	90026df8 <__sflush_r+0x1c>
90026e76:	2301      	movs	r3, #1
90026e78:	4628      	mov	r0, r5
90026e7a:	47b0      	blx	r6
90026e7c:	1c41      	adds	r1, r0, #1
90026e7e:	d1c8      	bne.n	90026e12 <__sflush_r+0x36>
90026e80:	682b      	ldr	r3, [r5, #0]
90026e82:	2b00      	cmp	r3, #0
90026e84:	d0c5      	beq.n	90026e12 <__sflush_r+0x36>
90026e86:	2b1d      	cmp	r3, #29
90026e88:	d001      	beq.n	90026e8e <__sflush_r+0xb2>
90026e8a:	2b16      	cmp	r3, #22
90026e8c:	d101      	bne.n	90026e92 <__sflush_r+0xb6>
90026e8e:	602f      	str	r7, [r5, #0]
90026e90:	e7b1      	b.n	90026df6 <__sflush_r+0x1a>
90026e92:	89a3      	ldrh	r3, [r4, #12]
90026e94:	f043 0340 	orr.w	r3, r3, #64	; 0x40
90026e98:	81a3      	strh	r3, [r4, #12]
90026e9a:	e7ad      	b.n	90026df8 <__sflush_r+0x1c>
90026e9c:	690f      	ldr	r7, [r1, #16]
90026e9e:	2f00      	cmp	r7, #0
90026ea0:	d0a9      	beq.n	90026df6 <__sflush_r+0x1a>
90026ea2:	0793      	lsls	r3, r2, #30
90026ea4:	680e      	ldr	r6, [r1, #0]
90026ea6:	bf08      	it	eq
90026ea8:	694b      	ldreq	r3, [r1, #20]
90026eaa:	600f      	str	r7, [r1, #0]
90026eac:	bf18      	it	ne
90026eae:	2300      	movne	r3, #0
90026eb0:	eba6 0807 	sub.w	r8, r6, r7
90026eb4:	608b      	str	r3, [r1, #8]
90026eb6:	f1b8 0f00 	cmp.w	r8, #0
90026eba:	dd9c      	ble.n	90026df6 <__sflush_r+0x1a>
90026ebc:	6a21      	ldr	r1, [r4, #32]
90026ebe:	6aa6      	ldr	r6, [r4, #40]	; 0x28
90026ec0:	4643      	mov	r3, r8
90026ec2:	463a      	mov	r2, r7
90026ec4:	4628      	mov	r0, r5
90026ec6:	47b0      	blx	r6
90026ec8:	2800      	cmp	r0, #0
90026eca:	dc06      	bgt.n	90026eda <__sflush_r+0xfe>
90026ecc:	89a3      	ldrh	r3, [r4, #12]
90026ece:	f043 0340 	orr.w	r3, r3, #64	; 0x40
90026ed2:	81a3      	strh	r3, [r4, #12]
90026ed4:	f04f 30ff 	mov.w	r0, #4294967295
90026ed8:	e78e      	b.n	90026df8 <__sflush_r+0x1c>
90026eda:	4407      	add	r7, r0
90026edc:	eba8 0800 	sub.w	r8, r8, r0
90026ee0:	e7e9      	b.n	90026eb6 <__sflush_r+0xda>
90026ee2:	bf00      	nop
90026ee4:	dfbffffe 	.word	0xdfbffffe

90026ee8 <_fflush_r>:
90026ee8:	b538      	push	{r3, r4, r5, lr}
90026eea:	690b      	ldr	r3, [r1, #16]
90026eec:	4605      	mov	r5, r0
90026eee:	460c      	mov	r4, r1
90026ef0:	b913      	cbnz	r3, 90026ef8 <_fflush_r+0x10>
90026ef2:	2500      	movs	r5, #0
90026ef4:	4628      	mov	r0, r5
90026ef6:	bd38      	pop	{r3, r4, r5, pc}
90026ef8:	b118      	cbz	r0, 90026f02 <_fflush_r+0x1a>
90026efa:	6a03      	ldr	r3, [r0, #32]
90026efc:	b90b      	cbnz	r3, 90026f02 <_fflush_r+0x1a>
90026efe:	f7ff f9df 	bl	900262c0 <__sinit>
90026f02:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
90026f06:	2b00      	cmp	r3, #0
90026f08:	d0f3      	beq.n	90026ef2 <_fflush_r+0xa>
90026f0a:	6e62      	ldr	r2, [r4, #100]	; 0x64
90026f0c:	07d0      	lsls	r0, r2, #31
90026f0e:	d404      	bmi.n	90026f1a <_fflush_r+0x32>
90026f10:	0599      	lsls	r1, r3, #22
90026f12:	d402      	bmi.n	90026f1a <_fflush_r+0x32>
90026f14:	6da0      	ldr	r0, [r4, #88]	; 0x58
90026f16:	f7ff fbd2 	bl	900266be <__retarget_lock_acquire_recursive>
90026f1a:	4628      	mov	r0, r5
90026f1c:	4621      	mov	r1, r4
90026f1e:	f7ff ff5d 	bl	90026ddc <__sflush_r>
90026f22:	6e63      	ldr	r3, [r4, #100]	; 0x64
90026f24:	07da      	lsls	r2, r3, #31
90026f26:	4605      	mov	r5, r0
90026f28:	d4e4      	bmi.n	90026ef4 <_fflush_r+0xc>
90026f2a:	89a3      	ldrh	r3, [r4, #12]
90026f2c:	059b      	lsls	r3, r3, #22
90026f2e:	d4e1      	bmi.n	90026ef4 <_fflush_r+0xc>
90026f30:	6da0      	ldr	r0, [r4, #88]	; 0x58
90026f32:	f7ff fbc5 	bl	900266c0 <__retarget_lock_release_recursive>
90026f36:	e7dd      	b.n	90026ef4 <_fflush_r+0xc>

90026f38 <__swhatbuf_r>:
90026f38:	b570      	push	{r4, r5, r6, lr}
90026f3a:	460c      	mov	r4, r1
90026f3c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
90026f40:	2900      	cmp	r1, #0
90026f42:	b096      	sub	sp, #88	; 0x58
90026f44:	4615      	mov	r5, r2
90026f46:	461e      	mov	r6, r3
90026f48:	da0d      	bge.n	90026f66 <__swhatbuf_r+0x2e>
90026f4a:	89a3      	ldrh	r3, [r4, #12]
90026f4c:	f013 0f80 	tst.w	r3, #128	; 0x80
90026f50:	f04f 0100 	mov.w	r1, #0
90026f54:	bf0c      	ite	eq
90026f56:	f44f 6380 	moveq.w	r3, #1024	; 0x400
90026f5a:	2340      	movne	r3, #64	; 0x40
90026f5c:	2000      	movs	r0, #0
90026f5e:	6031      	str	r1, [r6, #0]
90026f60:	602b      	str	r3, [r5, #0]
90026f62:	b016      	add	sp, #88	; 0x58
90026f64:	bd70      	pop	{r4, r5, r6, pc}
90026f66:	466a      	mov	r2, sp
90026f68:	f000 f848 	bl	90026ffc <_fstat_r>
90026f6c:	2800      	cmp	r0, #0
90026f6e:	dbec      	blt.n	90026f4a <__swhatbuf_r+0x12>
90026f70:	9901      	ldr	r1, [sp, #4]
90026f72:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
90026f76:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
90026f7a:	4259      	negs	r1, r3
90026f7c:	4159      	adcs	r1, r3
90026f7e:	f44f 6380 	mov.w	r3, #1024	; 0x400
90026f82:	e7eb      	b.n	90026f5c <__swhatbuf_r+0x24>

90026f84 <__smakebuf_r>:
90026f84:	898b      	ldrh	r3, [r1, #12]
90026f86:	b573      	push	{r0, r1, r4, r5, r6, lr}
90026f88:	079d      	lsls	r5, r3, #30
90026f8a:	4606      	mov	r6, r0
90026f8c:	460c      	mov	r4, r1
90026f8e:	d507      	bpl.n	90026fa0 <__smakebuf_r+0x1c>
90026f90:	f104 0347 	add.w	r3, r4, #71	; 0x47
90026f94:	6023      	str	r3, [r4, #0]
90026f96:	6123      	str	r3, [r4, #16]
90026f98:	2301      	movs	r3, #1
90026f9a:	6163      	str	r3, [r4, #20]
90026f9c:	b002      	add	sp, #8
90026f9e:	bd70      	pop	{r4, r5, r6, pc}
90026fa0:	ab01      	add	r3, sp, #4
90026fa2:	466a      	mov	r2, sp
90026fa4:	f7ff ffc8 	bl	90026f38 <__swhatbuf_r>
90026fa8:	9900      	ldr	r1, [sp, #0]
90026faa:	4605      	mov	r5, r0
90026fac:	4630      	mov	r0, r6
90026fae:	f7ff f823 	bl	90025ff8 <_malloc_r>
90026fb2:	b948      	cbnz	r0, 90026fc8 <__smakebuf_r+0x44>
90026fb4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
90026fb8:	059a      	lsls	r2, r3, #22
90026fba:	d4ef      	bmi.n	90026f9c <__smakebuf_r+0x18>
90026fbc:	f023 0303 	bic.w	r3, r3, #3
90026fc0:	f043 0302 	orr.w	r3, r3, #2
90026fc4:	81a3      	strh	r3, [r4, #12]
90026fc6:	e7e3      	b.n	90026f90 <__smakebuf_r+0xc>
90026fc8:	89a3      	ldrh	r3, [r4, #12]
90026fca:	6020      	str	r0, [r4, #0]
90026fcc:	f043 0380 	orr.w	r3, r3, #128	; 0x80
90026fd0:	81a3      	strh	r3, [r4, #12]
90026fd2:	9b00      	ldr	r3, [sp, #0]
90026fd4:	6163      	str	r3, [r4, #20]
90026fd6:	9b01      	ldr	r3, [sp, #4]
90026fd8:	6120      	str	r0, [r4, #16]
90026fda:	b15b      	cbz	r3, 90026ff4 <__smakebuf_r+0x70>
90026fdc:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
90026fe0:	4630      	mov	r0, r6
90026fe2:	f000 f81d 	bl	90027020 <_isatty_r>
90026fe6:	b128      	cbz	r0, 90026ff4 <__smakebuf_r+0x70>
90026fe8:	89a3      	ldrh	r3, [r4, #12]
90026fea:	f023 0303 	bic.w	r3, r3, #3
90026fee:	f043 0301 	orr.w	r3, r3, #1
90026ff2:	81a3      	strh	r3, [r4, #12]
90026ff4:	89a3      	ldrh	r3, [r4, #12]
90026ff6:	431d      	orrs	r5, r3
90026ff8:	81a5      	strh	r5, [r4, #12]
90026ffa:	e7cf      	b.n	90026f9c <__smakebuf_r+0x18>

90026ffc <_fstat_r>:
90026ffc:	b538      	push	{r3, r4, r5, lr}
90026ffe:	4d07      	ldr	r5, [pc, #28]	; (9002701c <_fstat_r+0x20>)
90027000:	2300      	movs	r3, #0
90027002:	4604      	mov	r4, r0
90027004:	4608      	mov	r0, r1
90027006:	4611      	mov	r1, r2
90027008:	602b      	str	r3, [r5, #0]
9002700a:	f7dc fbd1 	bl	900037b0 <_fstat>
9002700e:	1c43      	adds	r3, r0, #1
90027010:	d102      	bne.n	90027018 <_fstat_r+0x1c>
90027012:	682b      	ldr	r3, [r5, #0]
90027014:	b103      	cbz	r3, 90027018 <_fstat_r+0x1c>
90027016:	6023      	str	r3, [r4, #0]
90027018:	bd38      	pop	{r3, r4, r5, pc}
9002701a:	bf00      	nop
9002701c:	24024014 	.word	0x24024014

90027020 <_isatty_r>:
90027020:	b538      	push	{r3, r4, r5, lr}
90027022:	4d06      	ldr	r5, [pc, #24]	; (9002703c <_isatty_r+0x1c>)
90027024:	2300      	movs	r3, #0
90027026:	4604      	mov	r4, r0
90027028:	4608      	mov	r0, r1
9002702a:	602b      	str	r3, [r5, #0]
9002702c:	f7dc fbc6 	bl	900037bc <_isatty>
90027030:	1c43      	adds	r3, r0, #1
90027032:	d102      	bne.n	9002703a <_isatty_r+0x1a>
90027034:	682b      	ldr	r3, [r5, #0]
90027036:	b103      	cbz	r3, 9002703a <_isatty_r+0x1a>
90027038:	6023      	str	r3, [r4, #0]
9002703a:	bd38      	pop	{r3, r4, r5, pc}
9002703c:	24024014 	.word	0x24024014

90027040 <_sbrk>:
90027040:	4a04      	ldr	r2, [pc, #16]	; (90027054 <_sbrk+0x14>)
90027042:	6811      	ldr	r1, [r2, #0]
90027044:	4603      	mov	r3, r0
90027046:	b909      	cbnz	r1, 9002704c <_sbrk+0xc>
90027048:	4903      	ldr	r1, [pc, #12]	; (90027058 <_sbrk+0x18>)
9002704a:	6011      	str	r1, [r2, #0]
9002704c:	6810      	ldr	r0, [r2, #0]
9002704e:	4403      	add	r3, r0
90027050:	6013      	str	r3, [r2, #0]
90027052:	4770      	bx	lr
90027054:	240241b4 	.word	0x240241b4
90027058:	240241b8 	.word	0x240241b8

9002705c <_init>:
9002705c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9002705e:	bf00      	nop
90027060:	bcf8      	pop	{r3, r4, r5, r6, r7}
90027062:	bc08      	pop	{r3}
90027064:	469e      	mov	lr, r3
90027066:	4770      	bx	lr

90027068 <_fini>:
90027068:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9002706a:	bf00      	nop
9002706c:	bcf8      	pop	{r3, r4, r5, r6, r7}
9002706e:	bc08      	pop	{r3}
90027070:	469e      	mov	lr, r3
90027072:	4770      	bx	lr
